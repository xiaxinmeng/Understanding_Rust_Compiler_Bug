{"sha": "91d206adfe39ce063f6a5731b92a03c05e82e94a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFkMjA2YWRmZTM5Y2UwNjNmNmE1NzMxYjkyYTAzYzA1ZTgyZTk0YQ==", "commit": {"author": {"name": "Joe Ramsay", "email": "Joe.Ramsay@arm.com", "date": "2020-08-19T12:34:06Z"}, "committer": {"name": "Joe Ramsay", "email": "joe.ramsay@arm.com", "date": "2020-08-20T15:27:09Z"}, "message": "arm: Require MVE memory operand for destination of vst1q intrinsic\n\nPreviously, the machine description patterns for vst1q accepted a generic memory\noperand for the destination, which could lead to an unrecognised builtin when\nexpanding vst1q* intrinsics. This change fixes the pattern to only accept MVE\nmemory operands.\n\ngcc/ChangeLog:\n\n\tPR target/96683\n\t* config/arm/mve.md (mve_vst1q_f<mode>): Require MVE memory operand for\n\tdestination.\n\t(mve_vst1q_<supf><mode>): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/96683\n\t* gcc.target/arm/mve/intrinsics/vst1q_f16.c: New test.\n\t* gcc.target/arm/mve/intrinsics/vst1q_s16.c: New test.\n\t* gcc.target/arm/mve/intrinsics/vst1q_s8.c: New test.\n\t* gcc.target/arm/mve/intrinsics/vst1q_u16.c: New test.\n\t* gcc.target/arm/mve/intrinsics/vst1q_u8.c: New test.", "tree": {"sha": "c3a8f26e20ff9b23e0b00fddc29a4dd7dc152dfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3a8f26e20ff9b23e0b00fddc29a4dd7dc152dfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91d206adfe39ce063f6a5731b92a03c05e82e94a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d206adfe39ce063f6a5731b92a03c05e82e94a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91d206adfe39ce063f6a5731b92a03c05e82e94a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d206adfe39ce063f6a5731b92a03c05e82e94a/comments", "author": {"login": "joeramsay", "id": 78039542, "node_id": "MDQ6VXNlcjc4MDM5NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/78039542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeramsay", "html_url": "https://github.com/joeramsay", "followers_url": "https://api.github.com/users/joeramsay/followers", "following_url": "https://api.github.com/users/joeramsay/following{/other_user}", "gists_url": "https://api.github.com/users/joeramsay/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeramsay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeramsay/subscriptions", "organizations_url": "https://api.github.com/users/joeramsay/orgs", "repos_url": "https://api.github.com/users/joeramsay/repos", "events_url": "https://api.github.com/users/joeramsay/events{/privacy}", "received_events_url": "https://api.github.com/users/joeramsay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "joeramsay", "id": 78039542, "node_id": "MDQ6VXNlcjc4MDM5NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/78039542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeramsay", "html_url": "https://github.com/joeramsay", "followers_url": "https://api.github.com/users/joeramsay/followers", "following_url": "https://api.github.com/users/joeramsay/following{/other_user}", "gists_url": "https://api.github.com/users/joeramsay/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeramsay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeramsay/subscriptions", "organizations_url": "https://api.github.com/users/joeramsay/orgs", "repos_url": "https://api.github.com/users/joeramsay/repos", "events_url": "https://api.github.com/users/joeramsay/events{/privacy}", "received_events_url": "https://api.github.com/users/joeramsay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9b9832837b65046a8f01c18597cf615ff61db40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9b9832837b65046a8f01c18597cf615ff61db40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9b9832837b65046a8f01c18597cf615ff61db40"}], "stats": {"total": 54, "additions": 37, "deletions": 17}, "files": [{"sha": "465b39a51b3a258295ed764f0e742932e5d59225", "filename": "gcc/config/arm/mve.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d206adfe39ce063f6a5731b92a03c05e82e94a/gcc%2Fconfig%2Farm%2Fmve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d206adfe39ce063f6a5731b92a03c05e82e94a/gcc%2Fconfig%2Farm%2Fmve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmve.md?ref=91d206adfe39ce063f6a5731b92a03c05e82e94a", "patch": "@@ -9330,7 +9330,7 @@\n   [(set_attr \"length\" \"4\")])\n \n (define_expand \"mve_vst1q_f<mode>\"\n-  [(match_operand:<MVE_CNVT> 0 \"memory_operand\")\n+  [(match_operand:<MVE_CNVT> 0 \"mve_memory_operand\")\n    (unspec:<MVE_CNVT> [(match_operand:MVE_0 1 \"s_register_operand\")] VST1Q_F)\n   ]\n   \"TARGET_HAVE_MVE || TARGET_HAVE_MVE_FLOAT\"\n@@ -9340,7 +9340,7 @@\n })\n \n (define_expand \"mve_vst1q_<supf><mode>\"\n-  [(match_operand:MVE_2 0 \"memory_operand\")\n+  [(match_operand:MVE_2 0 \"mve_memory_operand\")\n    (unspec:MVE_2 [(match_operand:MVE_2 1 \"s_register_operand\")] VST1Q)\n   ]\n   \"TARGET_HAVE_MVE\""}, {"sha": "312b7464f17b171a765b42d2c31451969e8a1c50", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vst1q_f16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d206adfe39ce063f6a5731b92a03c05e82e94a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvst1q_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d206adfe39ce063f6a5731b92a03c05e82e94a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvst1q_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvst1q_f16.c?ref=91d206adfe39ce063f6a5731b92a03c05e82e94a", "patch": "@@ -10,12 +10,16 @@ foo (float16_t * addr, float16x8_t value)\n   vst1q_f16 (addr, value);\n }\n \n-/* { dg-final { scan-assembler \"vstrh.16\"  }  } */\n-\n void\n foo1 (float16_t * addr, float16x8_t value)\n {\n   vst1q (addr, value);\n }\n \n-/* { dg-final { scan-assembler \"vstrh.16\"  }  } */\n+/* { dg-final { scan-assembler-times \"vstrh.16\" 2 }  } */\n+\n+void\n+foo2 (float16_t a, float16x8_t x)\n+{\n+  vst1q (&a, x);\n+}"}, {"sha": "cd14e2c408f18945f593ee46bdb1e4cfb9ee6034", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vst1q_s16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d206adfe39ce063f6a5731b92a03c05e82e94a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvst1q_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d206adfe39ce063f6a5731b92a03c05e82e94a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvst1q_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvst1q_s16.c?ref=91d206adfe39ce063f6a5731b92a03c05e82e94a", "patch": "@@ -10,12 +10,16 @@ foo (int16_t * addr, int16x8_t value)\n   vst1q_s16 (addr, value);\n }\n \n-/* { dg-final { scan-assembler \"vstrh.16\"  }  } */\n-\n void\n foo1 (int16_t * addr, int16x8_t value)\n {\n   vst1q (addr, value);\n }\n \n-/* { dg-final { scan-assembler \"vstrh.16\"  }  } */\n+/* { dg-final { scan-assembler-times \"vstrh.16\" 2 }  } */\n+\n+void\n+foo2 (int16_t a, int16x8_t x)\n+{\n+  vst1q (&a, x);\n+}"}, {"sha": "0004c80963ec572523cfaa8ebf649bf32550e91e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vst1q_s8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d206adfe39ce063f6a5731b92a03c05e82e94a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvst1q_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d206adfe39ce063f6a5731b92a03c05e82e94a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvst1q_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvst1q_s8.c?ref=91d206adfe39ce063f6a5731b92a03c05e82e94a", "patch": "@@ -10,12 +10,16 @@ foo (int8_t * addr, int8x16_t value)\n   vst1q_s8 (addr, value);\n }\n \n-/* { dg-final { scan-assembler \"vstrb.8\"  }  } */\n-\n void\n foo1 (int8_t * addr, int8x16_t value)\n {\n   vst1q (addr, value);\n }\n \n-/* { dg-final { scan-assembler \"vstrb.8\"  }  } */\n+/* { dg-final { scan-assembler-times \"vstrb.8\" 2 }  } */\n+\n+void\n+foo2 (int8_t a, int8x16_t x)\n+{\n+  vst1q (&a, x);\n+}"}, {"sha": "248e7ce82b097185a02d398debe996f5ad2a21c8", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vst1q_u16.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d206adfe39ce063f6a5731b92a03c05e82e94a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvst1q_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d206adfe39ce063f6a5731b92a03c05e82e94a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvst1q_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvst1q_u16.c?ref=91d206adfe39ce063f6a5731b92a03c05e82e94a", "patch": "@@ -10,12 +10,16 @@ foo (uint16_t * addr, uint16x8_t value)\n   vst1q_u16 (addr, value);\n }\n \n-/* { dg-final { scan-assembler \"vstrh.16\"  }  } */\n-\n void\n foo1 (uint16_t * addr, uint16x8_t value)\n {\n   vst1q (addr, value);\n }\n \n-/* { dg-final { scan-assembler \"vstrh.16\"  }  } */\n+/* { dg-final { scan-assembler-times \"vstrh.16\" 2 }  } */\n+\n+void\n+foo2 (uint16_t a, uint16x8_t x)\n+{\n+  vst1q (&a, x);\n+}"}, {"sha": "f8b48a69903aa8a2a022dbd4cc18e23423c5183e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vst1q_u8.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d206adfe39ce063f6a5731b92a03c05e82e94a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvst1q_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d206adfe39ce063f6a5731b92a03c05e82e94a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvst1q_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvst1q_u8.c?ref=91d206adfe39ce063f6a5731b92a03c05e82e94a", "patch": "@@ -10,12 +10,16 @@ foo (uint8_t * addr, uint8x16_t value)\n   vst1q_u8 (addr, value);\n }\n \n-/* { dg-final { scan-assembler \"vstrb.8\"  }  } */\n-\n void\n foo1 (uint8_t * addr, uint8x16_t value)\n {\n   vst1q (addr, value);\n }\n \n-/* { dg-final { scan-assembler \"vstrb.8\"  }  } */\n+/* { dg-final { scan-assembler-times \"vstrb.8\" 2 }  } */\n+\n+void\n+foo2 (uint8_t a, uint8x16_t x)\n+{\n+  vst1q (&a, x);\n+}"}]}