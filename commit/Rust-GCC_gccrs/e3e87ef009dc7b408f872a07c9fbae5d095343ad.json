{"sha": "e3e87ef009dc7b408f872a07c9fbae5d095343ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNlODdlZjAwOWRjN2I0MDhmODcyYTA3YzlmYmFlNWQwOTUzNDNhZA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2005-04-04T17:52:49Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-04-04T17:52:49Z"}, "message": "Makefile.am (check-local): Remove.\n\n\t* testsuite/Makefile.am (check-local): Remove.\n\t(curent_symbols.txt): Likewise.\n\t(check-abi): Do not depend on current_symbols.txt.\n\t* testsuite/Makefile.in: Regenerated.\n\t* testsuite/libstdc++-abi/abi.exp: Build current_symbols.txt.\n\nFrom-SVN: r97558", "tree": {"sha": "3ffd2b797cf9a2a2893a58fbc7a58f93b3e4fa7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ffd2b797cf9a2a2893a58fbc7a58f93b3e4fa7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3e87ef009dc7b408f872a07c9fbae5d095343ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3e87ef009dc7b408f872a07c9fbae5d095343ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3e87ef009dc7b408f872a07c9fbae5d095343ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3e87ef009dc7b408f872a07c9fbae5d095343ad/comments", "author": null, "committer": null, "parents": [{"sha": "38a37714e672206ae98b499861ec23eaff0909e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38a37714e672206ae98b499861ec23eaff0909e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38a37714e672206ae98b499861ec23eaff0909e0"}], "stats": {"total": 58, "additions": 30, "deletions": 28}, "files": [{"sha": "17436c84a8959f36ca7230a9641d825b71dafde7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3e87ef009dc7b408f872a07c9fbae5d095343ad/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3e87ef009dc7b408f872a07c9fbae5d095343ad/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e3e87ef009dc7b408f872a07c9fbae5d095343ad", "patch": "@@ -1,3 +1,11 @@\n+2005-04-04  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* testsuite/Makefile.am (check-local): Remove.\n+\t(curent_symbols.txt): Likewise.\n+\t(check-abi): Do not depend on current_symbols.txt.\n+\t* testsuite/Makefile.in: Regenerated.\n+\t* testsuite/libstdc++-abi/abi.exp: Build current_symbols.txt.\n+\n 2005-04-02  Douglas Gregor  <doug.gregor@gmail.com>\n \t\n \t* include/tr1/tuple_iterate.h (tuple_element): Use new macro"}, {"sha": "090dc3df0a1cba3ceaeb130fa649c65544ff4a68", "filename": "libstdc++-v3/testsuite/Makefile.am", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3e87ef009dc7b408f872a07c9fbae5d095343ad/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3e87ef009dc7b408f872a07c9fbae5d095343ad/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am?ref=e3e87ef009dc7b408f872a07c9fbae5d095343ad", "patch": "@@ -103,15 +103,9 @@ site.exp: Makefile\n \t@test ! -f site.exp || mv site.exp site.bak\n \t@mv site.tmp site.exp\n \n-# This is automatically run after the generated check-DEJAGNU rule.\n-check-local: check-abi\n-\n baseline_file = ${baseline_dir}/baseline_symbols.txt\n extract_symvers = $(glibcxx_srcdir)/scripts/extract_symvers\n \n-current_symbols.txt: ${extract_symvers} ../src/.libs/libstdc++.so\n-\t  -@(${extract_symvers} ../src/.libs/libstdc++.so current_symbols.txt)\n-\n baseline_symbols:\n \t-@(output=${baseline_file}; \\\n \t  if test ! -f $${output}; then \\\n@@ -133,7 +127,7 @@ new-abi-baseline:\n if GLIBCXX_TEST_ABI\n # Use 'new-abi-baseline' to create an initial symbol file.  Then run\n # 'check-abi' to test for changes against that file.\n-check-abi: baseline_symbols current_symbols.txt site.exp\n+check-abi: baseline_symbols site.exp\n \t-@runtest --tool libstdc++ abi.exp\n else\n check-abi:"}, {"sha": "c96fabc6707d381352db4f7375259196cd64a27b", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 12, "deletions": 19, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3e87ef009dc7b408f872a07c9fbae5d095343ad/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3e87ef009dc7b408f872a07c9fbae5d095343ad/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=e3e87ef009dc7b408f872a07c9fbae5d095343ad", "patch": "@@ -475,7 +475,7 @@ distdir: $(DISTFILES)\n \t  fi; \\\n \tdone\n check-am: all-am\n-\t$(MAKE) $(AM_MAKEFLAGS) check-DEJAGNU check-local\n+\t$(MAKE) $(AM_MAKEFLAGS) check-DEJAGNU\n check: check-am\n all-am: Makefile $(LIBRARIES) all-local\n installdirs:\n@@ -554,17 +554,16 @@ ps-am:\n uninstall-am: uninstall-info-am\n \n .PHONY: CTAGS GTAGS all all-am all-local check check-DEJAGNU check-am \\\n-\tcheck-local clean clean-generic clean-libtool \\\n-\tclean-noinstLIBRARIES ctags distclean distclean-DEJAGNU \\\n-\tdistclean-compile distclean-generic distclean-libtool \\\n-\tdistclean-tags distdir dvi dvi-am html html-am info info-am \\\n-\tinstall install-am install-data install-data-am install-exec \\\n-\tinstall-exec-am install-info install-info-am install-man \\\n-\tinstall-strip installcheck installcheck-am installdirs \\\n-\tmaintainer-clean maintainer-clean-generic mostlyclean \\\n-\tmostlyclean-compile mostlyclean-generic mostlyclean-libtool \\\n-\tpdf pdf-am ps ps-am tags uninstall uninstall-am \\\n-\tuninstall-info-am\n+\tclean clean-generic clean-libtool clean-noinstLIBRARIES ctags \\\n+\tdistclean distclean-DEJAGNU distclean-compile \\\n+\tdistclean-generic distclean-libtool distclean-tags distdir dvi \\\n+\tdvi-am html html-am info info-am install install-am \\\n+\tinstall-data install-data-am install-exec install-exec-am \\\n+\tinstall-info install-info-am install-man install-strip \\\n+\tinstallcheck installcheck-am installdirs maintainer-clean \\\n+\tmaintainer-clean-generic mostlyclean mostlyclean-compile \\\n+\tmostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \\\n+\ttags uninstall uninstall-am uninstall-info-am\n \n \n all-local: stamp_wchar stamp_thread\n@@ -606,12 +605,6 @@ site.exp: Makefile\n \t@test ! -f site.exp || mv site.exp site.bak\n \t@mv site.tmp site.exp\n \n-# This is automatically run after the generated check-DEJAGNU rule.\n-check-local: check-abi\n-\n-current_symbols.txt: ${extract_symvers} ../src/.libs/libstdc++.so\n-\t  -@(${extract_symvers} ../src/.libs/libstdc++.so current_symbols.txt)\n-\n baseline_symbols:\n \t-@(output=${baseline_file}; \\\n \t  if test ! -f $${output}; then \\\n@@ -632,7 +625,7 @@ new-abi-baseline:\n \n # Use 'new-abi-baseline' to create an initial symbol file.  Then run\n # 'check-abi' to test for changes against that file.\n-@GLIBCXX_TEST_ABI_TRUE@check-abi: baseline_symbols current_symbols.txt site.exp\n+@GLIBCXX_TEST_ABI_TRUE@check-abi: baseline_symbols site.exp\n @GLIBCXX_TEST_ABI_TRUE@\t-@runtest --tool libstdc++ abi.exp\n @GLIBCXX_TEST_ABI_FALSE@check-abi:\n check-script: ${survey_script}"}, {"sha": "ba774f163d342d931336c6574051f46b5ddfc0c4", "filename": "libstdc++-v3/testsuite/libstdc++-abi/abi.exp", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3e87ef009dc7b408f872a07c9fbae5d095343ad/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-abi%2Fabi.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3e87ef009dc7b408f872a07c9fbae5d095343ad/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-abi%2Fabi.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-abi%2Fabi.exp?ref=e3e87ef009dc7b408f872a07c9fbae5d095343ad", "patch": "@@ -14,11 +14,18 @@\n # along with this program; if not, write to the Free Software\n # Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n \n-# If there is no current_symbols.txt file, then skip this test.\n-if { ![file exists \"current_symbols.txt\"] } {\n+# If there is no baseline file, or we can't find the library, skip\n+# this test.\n+if { ![info exists baseline_file] \\\n+\t || ![file exists $baseline_file] \\\n+\t || ![file exists \"../src/.libs/libstdc++.so\"] } {\n     return\n }\n \n+# Figure out what symbols are defined by the active build of the library.\n+remote_exec \"build\" \"$srcdir/../scripts/extract_symvers\" \\\n+    [list \"../src/.libs/libstdc++.so\" \"current_symbols.txt\"]\n+\n # Build the support objects.\n v3-build_support\n "}]}