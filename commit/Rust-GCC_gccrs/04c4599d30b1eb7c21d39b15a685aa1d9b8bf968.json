{"sha": "04c4599d30b1eb7c21d39b15a685aa1d9b8bf968", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRjNDU5OWQzMGIxZWI3YzIxZDM5YjE1YTY4NWFhMWQ5YjhiZjk2OA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-11-19T07:33:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-11-19T07:33:58Z"}, "message": "re PR tree-optimization/92554 (ICE in vect_create_epilog_for_reduction, at tree-vect-loop.c:4325)\n\n2019-11-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/92554\n\t* tree-vect-loop.c (vect_create_epilog_for_reduction): Look\n\tfor the actual condition stmt and deal with sign-changes.\n\n\t* gcc.dg/vect/pr92554.c: New testcase.\n\nFrom-SVN: r278431", "tree": {"sha": "154dcc70eba849dbb1296239cbf2885314b172d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/154dcc70eba849dbb1296239cbf2885314b172d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04c4599d30b1eb7c21d39b15a685aa1d9b8bf968", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04c4599d30b1eb7c21d39b15a685aa1d9b8bf968", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04c4599d30b1eb7c21d39b15a685aa1d9b8bf968", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04c4599d30b1eb7c21d39b15a685aa1d9b8bf968/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f1e0c7e0eb3eafb122fc3d00242828c82a9286a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1e0c7e0eb3eafb122fc3d00242828c82a9286a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1e0c7e0eb3eafb122fc3d00242828c82a9286a2"}], "stats": {"total": 58, "additions": 45, "deletions": 13}, "files": [{"sha": "3bd06229c64426ba9ae786af13551c572bdd21f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04c4599d30b1eb7c21d39b15a685aa1d9b8bf968/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04c4599d30b1eb7c21d39b15a685aa1d9b8bf968/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=04c4599d30b1eb7c21d39b15a685aa1d9b8bf968", "patch": "@@ -1,4 +1,10 @@\n-2019-09-19  Richard Biener  <rguenther@suse.de>\n+2019-11-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/92554\n+\t* tree-vect-loop.c (vect_create_epilog_for_reduction): Look\n+\tfor the actual condition stmt and deal with sign-changes.\n+\n+2019-11-19  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/92555\n \t* tree-vect-loop.c (vect_update_vf_for_slp): Also scan PHIs"}, {"sha": "22b54da233c446890539c7650a85ebaeda9ca32f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04c4599d30b1eb7c21d39b15a685aa1d9b8bf968/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04c4599d30b1eb7c21d39b15a685aa1d9b8bf968/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=04c4599d30b1eb7c21d39b15a685aa1d9b8bf968", "patch": "@@ -1,4 +1,9 @@\n-2019-09-19  Richard Biener  <rguenther@suse.de>\n+2019-11-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/92554\n+\t* gcc.dg/vect/pr92554.c: New testcase.\n+\n+2019-11-19  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/92555\n \t* gcc.dg/vect/pr92555.c: New testcase."}, {"sha": "006375b1d24f35c9f7320f609c44ba298020f58f", "filename": "gcc/testsuite/gcc.dg/vect/pr92554.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04c4599d30b1eb7c21d39b15a685aa1d9b8bf968/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92554.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04c4599d30b1eb7c21d39b15a685aa1d9b8bf968/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92554.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92554.c?ref=04c4599d30b1eb7c21d39b15a685aa1d9b8bf968", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+\n+short int w9;\n+\n+void __attribute__ ((simd))\n+zc (int in)\n+{\n+  int va = 1;\n+\n+  w9 *= va != 0 ? in < 0 : 0;\n+}"}, {"sha": "0e2b6462b4e3f108a96c432dcaf7b8866076b0bc", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04c4599d30b1eb7c21d39b15a685aa1d9b8bf968/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04c4599d30b1eb7c21d39b15a685aa1d9b8bf968/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=04c4599d30b1eb7c21d39b15a685aa1d9b8bf968", "patch": "@@ -4552,12 +4552,21 @@ vect_create_epilog_for_reduction (stmt_vec_info stmt_info,\n      zeroes.  */\n   if (STMT_VINFO_REDUC_TYPE (reduc_info) == COND_REDUCTION)\n     {\n-      tree indx_before_incr, indx_after_incr;\n-      poly_uint64 nunits_out = TYPE_VECTOR_SUBPARTS (vectype);\n-\n-      gimple *vec_stmt = STMT_VINFO_VEC_STMT (stmt_info)->stmt;\n+      stmt_vec_info cond_info = STMT_VINFO_REDUC_DEF (reduc_info);\n+      cond_info = vect_stmt_to_vectorize (cond_info);\n+      while (gimple_assign_rhs_code (cond_info->stmt) != COND_EXPR)\n+\t{\n+\t  cond_info\n+\t    = loop_vinfo->lookup_def (gimple_op (cond_info->stmt,\n+\t\t\t\t\t\t 1 + STMT_VINFO_REDUC_IDX\n+\t\t\t\t\t\t\t(cond_info)));\n+\t  cond_info = vect_stmt_to_vectorize (cond_info);\n+\t}\n+      gimple *vec_stmt = STMT_VINFO_VEC_STMT (cond_info)->stmt;\n       gcc_assert (gimple_assign_rhs_code (vec_stmt) == VEC_COND_EXPR);\n \n+      tree indx_before_incr, indx_after_incr;\n+      poly_uint64 nunits_out = TYPE_VECTOR_SUBPARTS (vectype);\n       int scalar_precision\n \t= GET_MODE_PRECISION (SCALAR_TYPE_MODE (TREE_TYPE (vectype)));\n       tree cr_index_scalar_type = make_unsigned_type (scalar_precision);\n@@ -4611,9 +4620,9 @@ vect_create_epilog_for_reduction (stmt_vec_info stmt_info,\n \t (CCOMPARE).  The then and else values mirror the main VEC_COND_EXPR:\n \t the reduction phi corresponds to NEW_PHI_TREE and the new values\n \t correspond to INDEX_BEFORE_INCR.  */\n-      gcc_assert (STMT_VINFO_REDUC_IDX (stmt_info) >= 1);\n+      gcc_assert (STMT_VINFO_REDUC_IDX (cond_info) >= 1);\n       tree index_cond_expr;\n-      if (STMT_VINFO_REDUC_IDX (stmt_info) == 2)\n+      if (STMT_VINFO_REDUC_IDX (cond_info) == 2)\n \tindex_cond_expr = build3 (VEC_COND_EXPR, cr_index_vector_type,\n \t\t\t\t  ccompare, indx_before_incr, new_phi_tree);\n       else\n@@ -4809,10 +4818,11 @@ vect_create_epilog_for_reduction (stmt_vec_info stmt_info,\n \t be zero.  */\n \n       /* Vector of {0, 0, 0,...}.  */\n-      tree zero_vec = make_ssa_name (vectype);\n-      tree zero_vec_rhs = build_zero_cst (vectype);\n-      gimple *zero_vec_stmt = gimple_build_assign (zero_vec, zero_vec_rhs);\n-      gsi_insert_before (&exit_gsi, zero_vec_stmt, GSI_SAME_STMT);\n+      tree zero_vec = build_zero_cst (vectype);\n+\n+      gimple_seq stmts = NULL;\n+      new_phi_result = gimple_convert (&stmts, vectype, new_phi_result);\n+      gsi_insert_seq_before (&exit_gsi, stmts, GSI_SAME_STMT);\n \n       /* Find maximum value from the vector of found indexes.  */\n       tree max_index = make_ssa_name (index_scalar_type);\n@@ -4880,7 +4890,7 @@ vect_create_epilog_for_reduction (stmt_vec_info stmt_info,\n \n       /* Convert the reduced value back to the result type and set as the\n \t result.  */\n-      gimple_seq stmts = NULL;\n+      stmts = NULL;\n       new_temp = gimple_build (&stmts, VIEW_CONVERT_EXPR, scalar_type,\n \t\t\t       data_reduc);\n       gsi_insert_seq_before (&exit_gsi, stmts, GSI_SAME_STMT);"}]}