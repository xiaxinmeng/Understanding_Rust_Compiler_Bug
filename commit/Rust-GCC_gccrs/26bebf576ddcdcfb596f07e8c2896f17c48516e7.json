{"sha": "26bebf576ddcdcfb596f07e8c2896f17c48516e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZiZWJmNTc2ZGRjZGNmYjU5NmYwN2U4YzI4OTZmMTdjNDg1MTZlNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-04-15T12:52:20Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-04-16T14:45:37Z"}, "message": "aarch64: Fix mismatched SVE predicate modes [PR94606]\n\nFor this testcase we ended up generating the invalid rtl:\n\n(insn 10 9 11 2 (set (reg:VNx16BI 105)\n        (and:VNx16BI (xor:VNx16BI (reg:VNx8BI 103)\n                (reg:VNx16BI 104))\n            (reg:VNx16BI 104))) \"/tmp/bar.c\":9:12 -1\n     (nil))\n\nFixed by taking the VNx16BI lowpart.  It's safe to do that here because\nthe gp (r104) masks out the extra odd-indexed bits.\n\n2020-04-16  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\tPR target/94606\n\t* config/aarch64/aarch64.c (aarch64_expand_sve_const_pred_eor): Take\n\tthe VNx16BI lowpart of the recursively-generated constant.\n\ngcc/testsuite/\n\tPR target/94606\n\t* gcc.dg/vect/pr94606.c: New test.", "tree": {"sha": "df9a410eb6390626a266647b79738e148bc82e3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df9a410eb6390626a266647b79738e148bc82e3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26bebf576ddcdcfb596f07e8c2896f17c48516e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26bebf576ddcdcfb596f07e8c2896f17c48516e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26bebf576ddcdcfb596f07e8c2896f17c48516e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26bebf576ddcdcfb596f07e8c2896f17c48516e7/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7a65edb629a010f7ef907d457343abcb569fab7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7a65edb629a010f7ef907d457343abcb569fab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7a65edb629a010f7ef907d457343abcb569fab7"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "0c7dad08637516890f3338b7496334da39d46aea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26bebf576ddcdcfb596f07e8c2896f17c48516e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26bebf576ddcdcfb596f07e8c2896f17c48516e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26bebf576ddcdcfb596f07e8c2896f17c48516e7", "patch": "@@ -1,3 +1,9 @@\n+2020-04-16  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/94606\n+\t* config/aarch64/aarch64.c (aarch64_expand_sve_const_pred_eor): Take\n+\tthe VNx16BI lowpart of the recursively-generated constant.\n+\n 2020-04-16  Martin Liska  <mliska@suse.cz>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "d0a41c286cdfde9759fcbad1b2e2367037f0a832", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26bebf576ddcdcfb596f07e8c2896f17c48516e7/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26bebf576ddcdcfb596f07e8c2896f17c48516e7/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=26bebf576ddcdcfb596f07e8c2896f17c48516e7", "patch": "@@ -4742,6 +4742,7 @@ aarch64_expand_sve_const_pred_eor (rtx target, rtx_vector_builder &builder,\n   /* EOR the result with an ELT_SIZE PTRUE.  */\n   rtx mask = aarch64_ptrue_all (elt_size);\n   mask = force_reg (VNx16BImode, mask);\n+  inv = gen_lowpart (VNx16BImode, inv);\n   target = aarch64_target_reg (target, VNx16BImode);\n   emit_insn (gen_aarch64_pred_z (XOR, VNx16BImode, target, mask, inv, mask));\n   return target;"}, {"sha": "72bed4064e561ef8e96c70c7e49dff955364c245", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26bebf576ddcdcfb596f07e8c2896f17c48516e7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26bebf576ddcdcfb596f07e8c2896f17c48516e7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=26bebf576ddcdcfb596f07e8c2896f17c48516e7", "patch": "@@ -1,3 +1,8 @@\n+2020-04-16  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/94606\n+\t* gcc.dg/vect/pr94606.c: New test.\n+\n 2020-04-16  Martin Liska  <mliska@suse.cz>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "f0e7c4cd0e854af279e46a375f324363b09e476c", "filename": "gcc/testsuite/gcc.dg/vect/pr94606.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26bebf576ddcdcfb596f07e8c2896f17c48516e7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr94606.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26bebf576ddcdcfb596f07e8c2896f17c48516e7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr94606.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr94606.c?ref=26bebf576ddcdcfb596f07e8c2896f17c48516e7", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-march=armv8.2-a+sve -msve-vector-bits=256\" { target aarch64*-*-* } } */\n+\n+const short mask[] = { 0, 0, 0, 0, 0, 0, 0, 0,\n+\t\t       0, 0, 0, 1, 1, 1, 1, 1 };\n+\n+int\n+foo (short *restrict x, short *restrict y)\n+{\n+  for (int i = 0; i < 16; ++i)\n+    if (mask[i])\n+      x[i] += y[i];\n+}"}]}