{"sha": "50cdd660b2ac54abb2659c7a88200d4c2fd1f195", "node_id": "C_kwDOANBUbNoAKDUwY2RkNjYwYjJhYzU0YWJiMjY1OWM3YTg4MjAwZDRjMmZkMWYxOTU", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2021-09-23T15:04:25Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-20T10:17:05Z"}, "message": "[Ada] Missing accessibility check when returning discriminated types\n\ngcc/ada/\n\n\t* sem_ch6.adb (Check_Return_Construct_Accessibility): Modify\n\tgeneration of accessibility checks to be more consolidated and\n\tget triggered properly in required cases.\n\t* sem_util.adb (Accessibility_Level): Add extra check within\n\tcondition to handle aliased formals properly in more cases.", "tree": {"sha": "5ec9621b4e1d70c4339b83d15b50d50d39449526", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ec9621b4e1d70c4339b83d15b50d50d39449526"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50cdd660b2ac54abb2659c7a88200d4c2fd1f195", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50cdd660b2ac54abb2659c7a88200d4c2fd1f195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50cdd660b2ac54abb2659c7a88200d4c2fd1f195", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50cdd660b2ac54abb2659c7a88200d4c2fd1f195/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9267014b351edf5aa0d0951545ec405edec5e3f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9267014b351edf5aa0d0951545ec405edec5e3f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9267014b351edf5aa0d0951545ec405edec5e3f5"}], "stats": {"total": 60, "additions": 32, "deletions": 28}, "files": [{"sha": "14869180d9b67934ce35e8aa1c56b08f7c058505", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 29, "deletions": 25, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50cdd660b2ac54abb2659c7a88200d4c2fd1f195/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50cdd660b2ac54abb2659c7a88200d4c2fd1f195/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=50cdd660b2ac54abb2659c7a88200d4c2fd1f195", "patch": "@@ -807,6 +807,7 @@ package body Sem_Ch6 is\n          Assoc_Expr    : Node_Id;\n          Assoc_Present : Boolean := False;\n \n+         Check_Cond        : Node_Id;\n          Unseen_Disc_Count : Nat := 0;\n          Seen_Discs        : Elist_Id;\n          Disc              : Entity_Id;\n@@ -1180,36 +1181,39 @@ package body Sem_Ch6 is\n               and then Present (Disc)\n               and then Ekind (Etype (Disc)) = E_Anonymous_Access_Type\n             then\n-               --  Perform a static check first, if possible\n+               --  Generate a dynamic check based on the extra accessibility of\n+               --  the result or the scope.\n+\n+               Check_Cond :=\n+                 Make_Op_Gt (Loc,\n+                   Left_Opnd  => Accessibility_Level\n+                                   (Expr              => Assoc_Expr,\n+                                    Level             => Dynamic_Level,\n+                                    In_Return_Context => True),\n+                   Right_Opnd => (if Present\n+                                       (Extra_Accessibility_Of_Result\n+                                         (Scope_Id))\n+                                  then\n+                                     Extra_Accessibility_Of_Result (Scope_Id)\n+                                  else\n+                                     Make_Integer_Literal\n+                                       (Loc, Scope_Depth (Scope (Scope_Id)))));\n+\n+               Insert_Before_And_Analyze (Return_Stmt,\n+                 Make_Raise_Program_Error (Loc,\n+                   Condition => Check_Cond,\n+                   Reason    => PE_Accessibility_Check_Failed));\n+\n+               --  If constant folding has happened on the condition for the\n+               --  generated error, then warn about it being unconditional when\n+               --  we know an error will be raised.\n \n-               if Static_Accessibility_Level\n-                    (Expr              => Assoc_Expr,\n-                     Level             => Zero_On_Dynamic_Level,\n-                     In_Return_Context => True)\n-                      > Scope_Depth (Scope (Scope_Id))\n+               if Nkind (Check_Cond) = N_Identifier\n+                 and then Entity (Check_Cond) = Standard_True\n                then\n                   Error_Msg_N\n                     (\"access discriminant in return object would be a dangling\"\n                      & \" reference\", Return_Stmt);\n-\n-                  exit;\n-               end if;\n-\n-               --  Otherwise, generate a dynamic check based on the extra\n-               --  accessibility of the result.\n-\n-               if Present (Extra_Accessibility_Of_Result (Scope_Id)) then\n-                  Insert_Before_And_Analyze (Return_Stmt,\n-                    Make_Raise_Program_Error (Loc,\n-                      Condition =>\n-                        Make_Op_Gt (Loc,\n-                          Left_Opnd  => Accessibility_Level\n-                                          (Expr              => Assoc_Expr,\n-                                           Level             => Dynamic_Level,\n-                                           In_Return_Context => True),\n-                          Right_Opnd => Extra_Accessibility_Of_Result\n-                                          (Scope_Id)),\n-                      Reason    => PE_Accessibility_Check_Failed));\n                end if;\n             end if;\n "}, {"sha": "db4d55a35302ef70d5f7cdefa831ebf40191102f", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50cdd660b2ac54abb2659c7a88200d4c2fd1f195/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50cdd660b2ac54abb2659c7a88200d4c2fd1f195/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=50cdd660b2ac54abb2659c7a88200d4c2fd1f195", "patch": "@@ -628,9 +628,9 @@ package body Sem_Util is\n             --  caller.\n \n             if Is_Explicitly_Aliased (E)\n-              and then Level /= Dynamic_Level\n-              and then (In_Return_Value (Expr)\n-                         or else In_Return_Context)\n+              and then (In_Return_Context\n+                         or else (Level /= Dynamic_Level\n+                                   and then In_Return_Value (Expr)))\n             then\n                return Make_Level_Literal (Scope_Depth (Standard_Standard));\n "}]}