{"sha": "bbc13bf693fc584139c71b91f2baa9d1a8caa87f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJjMTNiZjY5M2ZjNTg0MTM5YzcxYjkxZjJiYWE5ZDFhOGNhYTg3Zg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-12-02T21:30:13Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-12-02T21:30:13Z"}, "message": "Bug compatibility, for PR libgcj/8738:\n\n\t* java/io/CharArrayWriter.java (close): Do nothing.\n\t(flush): Likewise.\n\t(reset): Don't touch `closed'.\n\t(write(int)): Don't throw IOException.\n\t(write(char[],int,int)): Likewise.\n\t(write(String,int,int)): Likewise.\n\t(closed): Removed.\n\nFrom-SVN: r59743", "tree": {"sha": "d2d786a4927dc5c1cc8c2f1047c9dc5e6acdd61c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2d786a4927dc5c1cc8c2f1047c9dc5e6acdd61c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbc13bf693fc584139c71b91f2baa9d1a8caa87f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbc13bf693fc584139c71b91f2baa9d1a8caa87f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbc13bf693fc584139c71b91f2baa9d1a8caa87f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbc13bf693fc584139c71b91f2baa9d1a8caa87f/comments", "author": null, "committer": null, "parents": [{"sha": "834572b852c02275fdf7077b5a18d82724ee7fca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/834572b852c02275fdf7077b5a18d82724ee7fca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/834572b852c02275fdf7077b5a18d82724ee7fca"}], "stats": {"total": 44, "additions": 16, "deletions": 28}, "files": [{"sha": "894f006a3ede53d1084125472fbb1c2b52ac5ccd", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbc13bf693fc584139c71b91f2baa9d1a8caa87f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbc13bf693fc584139c71b91f2baa9d1a8caa87f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=bbc13bf693fc584139c71b91f2baa9d1a8caa87f", "patch": "@@ -1,3 +1,14 @@\n+2002-12-01  Tom Tromey  <tromey@redhat.com>\n+\n+\tBug compatibility, for PR libgcj/8738:\n+\t* java/io/CharArrayWriter.java (close): Do nothing.\n+\t(flush): Likewise.\n+\t(reset): Don't touch `closed'.\n+\t(write(int)): Don't throw IOException.\n+\t(write(char[],int,int)): Likewise.\n+\t(write(String,int,int)): Likewise.\n+\t(closed): Removed.\n+\n 2002-12-01  Mark Wielaard  <mark@klomp.org>\n \n \t* java/lang/SecurityManager.java: Remerge comments, indenting and"}, {"sha": "6f749b4833c16e54842891b29ff50883f59b97c5", "filename": "libjava/java/io/CharArrayWriter.java", "status": "modified", "additions": 5, "deletions": 28, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbc13bf693fc584139c71b91f2baa9d1a8caa87f/libjava%2Fjava%2Fio%2FCharArrayWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbc13bf693fc584139c71b91f2baa9d1a8caa87f/libjava%2Fjava%2Fio%2FCharArrayWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FCharArrayWriter.java?ref=bbc13bf693fc584139c71b91f2baa9d1a8caa87f", "patch": "@@ -1,5 +1,5 @@\n /* CharArrayWriter.java -- Write chars to a buffer\n-   Copyright (C) 1998, 1999, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -98,19 +98,13 @@ public CharArrayWriter (int size)\n    */\n   public void close ()\n   {\n-    closed = true;\n   }\n \n   /**\n    * This method flushes all buffered chars to the stream.\n    */\n-  public void flush () throws IOException\n+  public void flush ()\n   {\n-    synchronized (lock)\n-      {\n-\tif (closed)\n-\t  throw new IOException (\"Stream closed\");\n-      }\n   }\n \n   /**\n@@ -123,9 +117,6 @@ public void reset ()\n     synchronized (lock)\n       {\n \tcount = 0;\n-\t// Allow this to reopen the stream.\n-\t// FIXME - what does the JDK do?\n-\tclosed = false;\n       }\n   }\n \n@@ -187,13 +178,10 @@ public String toString ()\n    *\n    * @param oneChar The char to be read passed as an int\n    */\n-  public void write (int oneChar) throws IOException\n+  public void write (int oneChar)\n   {\n     synchronized (lock)\n       {\n-\tif (closed)\n-\t  throw new IOException (\"Stream closed\");\n-\n \tresize (1);\n \tbuf[count++] = (char) oneChar;\n       }\n@@ -207,13 +195,10 @@ public void write (int oneChar) throws IOException\n    * @param offset The index into the buffer to start writing data from\n    * @param len The number of chars to write\n    */\n-  public void write (char[] buffer, int offset, int len) throws IOException\n+  public void write (char[] buffer, int offset, int len)\n   {\n     synchronized (lock)\n       {\n-\tif (closed)\n-\t  throw new IOException (\"Stream closed\");\n-\n \tif (len >= 0)\n \t  resize (len);\n \tSystem.arraycopy(buffer, offset, buf, count, len);\n@@ -230,13 +215,10 @@ public void write (char[] buffer, int offset, int len) throws IOException\n    * @param offset The index into the string to start writing data from\n    * @param len The number of chars to write\n    */\n-  public void write (String str, int offset, int len) throws IOException\n+  public void write (String str, int offset, int len)\n   {\n     synchronized (lock)\n       {\n-\tif (closed)\n-\t  throw new IOException (\"Stream closed\");\n-\n \tif (len >= 0)\n \t  resize (len);\n \tstr.getChars(offset, offset + len, buf, count);\n@@ -289,9 +271,4 @@ private final void resize (int len)\n    * The number of chars that have been written to the buffer\n    */\n   protected int count;\n-\n-  /**\n-   * True if the stream has been closed.\n-   */\n-  private boolean closed;\n }"}]}