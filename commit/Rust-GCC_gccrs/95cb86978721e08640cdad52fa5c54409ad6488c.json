{"sha": "95cb86978721e08640cdad52fa5c54409ad6488c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVjYjg2OTc4NzIxZTA4NjQwY2RhZDUyZmE1YzU0NDA5YWQ2NDg4Yw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-01-15T08:47:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-01-15T08:47:30Z"}, "message": "re PR rtl-optimization/59802 (excessive compile time in RTL optimizers (loop unswitching, CPROP))\n\n2014-01-15  Richard Biener  <rguenther@suse.de>\n\n\tPR rtl-optimization/59802\n\t* lcm.c (compute_available): Use inverted postorder to seed\n\tthe initial worklist.\n\nFrom-SVN: r206624", "tree": {"sha": "eb095a46488fa76a8001e7482f9f1466118efe39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb095a46488fa76a8001e7482f9f1466118efe39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95cb86978721e08640cdad52fa5c54409ad6488c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95cb86978721e08640cdad52fa5c54409ad6488c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95cb86978721e08640cdad52fa5c54409ad6488c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95cb86978721e08640cdad52fa5c54409ad6488c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cb4b6d170652b99b8aee2430737051cdc42b5517", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb4b6d170652b99b8aee2430737051cdc42b5517", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb4b6d170652b99b8aee2430737051cdc42b5517"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "aa7109f7c894b1dafb73045d3a7e265a09056ce9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cb86978721e08640cdad52fa5c54409ad6488c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cb86978721e08640cdad52fa5c54409ad6488c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=95cb86978721e08640cdad52fa5c54409ad6488c", "patch": "@@ -1,3 +1,9 @@\n+2014-01-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/59802\n+\t* lcm.c (compute_available): Use inverted postorder to seed\n+\tthe initial worklist.\n+\n 2014-01-15  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* config/s390/s390.c (s390_preferred_reload_class): Don't return"}, {"sha": "70d96c14d7c0690e2c325f9c0ba980a73cce5d7f", "filename": "gcc/lcm.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cb86978721e08640cdad52fa5c54409ad6488c/gcc%2Flcm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cb86978721e08640cdad52fa5c54409ad6488c/gcc%2Flcm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flcm.c?ref=95cb86978721e08640cdad52fa5c54409ad6488c", "patch": "@@ -496,12 +496,20 @@ compute_available (sbitmap *avloc, sbitmap *kill, sbitmap *avout,\n   bitmap_vector_ones (avout, last_basic_block_for_fn (cfun));\n \n   /* Put every block on the worklist; this is necessary because of the\n-     optimistic initialization of AVOUT above.  */\n-  FOR_EACH_BB_FN (bb, cfun)\n+     optimistic initialization of AVOUT above.  Use inverted postorder\n+     to make the dataflow problem require less iterations.  */\n+  int *postorder = XNEWVEC (int, n_basic_blocks_for_fn (cfun));\n+  int postorder_num = inverted_post_order_compute (postorder);\n+  for (int i = 0; i < postorder_num; ++i)\n     {\n+      bb = BASIC_BLOCK_FOR_FN (cfun, postorder[i]);\n+      if (bb == EXIT_BLOCK_PTR_FOR_FN (cfun)\n+\t  || bb == ENTRY_BLOCK_PTR_FOR_FN (cfun))\n+\tcontinue;\n       *qin++ = bb;\n       bb->aux = bb;\n     }\n+  free (postorder);\n \n   qin = worklist;\n   qend = &worklist[n_basic_blocks_for_fn (cfun) - NUM_FIXED_BLOCKS];"}]}