{"sha": "d9a7d592ed00c2fa2f5973231fed2d729c71faf0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDlhN2Q1OTJlZDAwYzJmYTJmNTk3MzIzMWZlZDJkNzI5YzcxZmFmMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-05-03T13:17:29Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-05-03T13:17:29Z"}, "message": "Add missing blank\n\nFrom-SVN: r33628", "tree": {"sha": "5db6c4d7c9ee7af5c24c46f29e6815105c9ca184", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5db6c4d7c9ee7af5c24c46f29e6815105c9ca184"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9a7d592ed00c2fa2f5973231fed2d729c71faf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9a7d592ed00c2fa2f5973231fed2d729c71faf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9a7d592ed00c2fa2f5973231fed2d729c71faf0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9a7d592ed00c2fa2f5973231fed2d729c71faf0/comments", "author": null, "committer": null, "parents": [{"sha": "ea49bef60422f4f59850c4d92a63b5b93e9d175c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea49bef60422f4f59850c4d92a63b5b93e9d175c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea49bef60422f4f59850c4d92a63b5b93e9d175c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5c12ccfb8a433a759c6589bd91c57e67acc042ee", "filename": "gcc/calls.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a7d592ed00c2fa2f5973231fed2d729c71faf0/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a7d592ed00c2fa2f5973231fed2d729c71faf0/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=d9a7d592ed00c2fa2f5973231fed2d729c71faf0", "patch": "@@ -2890,7 +2890,7 @@ expand_call (exp, target, ignore)\n #ifdef PREFERRED_STACK_BOUNDARY\n       /* Stack must be properly aligned now.  */\n       if (pass && stack_pointer_delta % preferred_unit_stack_boundary)\n-\tabort();\n+\tabort ();\n #endif\n \n       /* Generate the actual call instruction.  */"}]}