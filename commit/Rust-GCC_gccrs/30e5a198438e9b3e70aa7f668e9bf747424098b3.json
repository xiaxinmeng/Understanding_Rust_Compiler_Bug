{"sha": "30e5a198438e9b3e70aa7f668e9bf747424098b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBlNWExOTg0MzhlOWIzZTcwYWE3ZjY2OGU5YmY3NDc0MjQwOThiMw==", "commit": {"author": {"name": "Josh Conner", "email": "jconner@apple.com", "date": "2005-05-13T16:44:16Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2005-05-13T16:44:16Z"}, "message": "* arm.c (arm_return_in_memory): Add handling for vector return types.\n\nFrom-SVN: r99666", "tree": {"sha": "7e29f138afb8ae4155fea42601321126337f049f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e29f138afb8ae4155fea42601321126337f049f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30e5a198438e9b3e70aa7f668e9bf747424098b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30e5a198438e9b3e70aa7f668e9bf747424098b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30e5a198438e9b3e70aa7f668e9bf747424098b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30e5a198438e9b3e70aa7f668e9bf747424098b3/comments", "author": null, "committer": null, "parents": [{"sha": "ee218a9203fc45ceb3d738a3459fb80517e0f90f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee218a9203fc45ceb3d738a3459fb80517e0f90f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee218a9203fc45ceb3d738a3459fb80517e0f90f"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "a6034e2a8e597302daaa97378e3513fc42e86642", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30e5a198438e9b3e70aa7f668e9bf747424098b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30e5a198438e9b3e70aa7f668e9bf747424098b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30e5a198438e9b3e70aa7f668e9bf747424098b3", "patch": "@@ -1,3 +1,7 @@\n+2005-05-13  Josh Conner  <jconner@apple.com>\n+\n+\t* arm.c (arm_return_in_memory): Add handling for vector return types.\n+\n 2005-05-13  David Ung  <davidu@mips.com>\n \n \t* config/mips/mips.h (processor_type): Add new PROCESSOR_4KP"}, {"sha": "4129a99651f2fe0ee5ed310d1675c3bb0ba57913", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30e5a198438e9b3e70aa7f668e9bf747424098b3/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30e5a198438e9b3e70aa7f668e9bf747424098b3/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=30e5a198438e9b3e70aa7f668e9bf747424098b3", "patch": "@@ -2467,6 +2467,7 @@ arm_return_in_memory (tree type)\n   HOST_WIDE_INT size;\n \n   if (!AGGREGATE_TYPE_P (type) &&\n+      (TREE_CODE (type) != VECTOR_TYPE) &&\n       !(TARGET_AAPCS_BASED && TREE_CODE (type) == COMPLEX_TYPE))\n     /* All simple types are returned in registers.\n        For AAPCS, complex types are treated the same as aggregates.  */\n@@ -2481,6 +2482,11 @@ arm_return_in_memory (tree type)\n       return (size < 0 || size > UNITS_PER_WORD);\n     }\n \n+  /* To maximize backwards compatibility with previous versions of gcc,\n+     return vectors up to 4 words in registers.  */\n+  if (TREE_CODE (type) == VECTOR_TYPE)\n+    return (size < 0 || size > (4 * UNITS_PER_WORD));\n+\n   /* For the arm-wince targets we choose to be compatible with Microsoft's\n      ARM and Thumb compilers, which always return aggregates in memory.  */\n #ifndef ARM_WINCE"}]}