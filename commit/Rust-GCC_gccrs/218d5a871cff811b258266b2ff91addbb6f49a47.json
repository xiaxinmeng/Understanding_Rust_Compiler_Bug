{"sha": "218d5a871cff811b258266b2ff91addbb6f49a47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE4ZDVhODcxY2ZmODExYjI1ODI2NmIyZmY5MWFkZGJiNmY0OWE0Nw==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2003-10-22T21:27:27Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2003-10-22T21:27:27Z"}, "message": "re PR target/12676 (m68k.c: LP64 bug)\n\n\tPR target/12676\n\t* config/m68k/m68k.c (output_addsi3): Fix range check to work on\n\tLP64 platforms.\n\nFrom-SVN: r72823", "tree": {"sha": "39cb6c45a373fd75dd16abd3dbf25d2314033f96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39cb6c45a373fd75dd16abd3dbf25d2314033f96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/218d5a871cff811b258266b2ff91addbb6f49a47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/218d5a871cff811b258266b2ff91addbb6f49a47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/218d5a871cff811b258266b2ff91addbb6f49a47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/218d5a871cff811b258266b2ff91addbb6f49a47/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ae0f347754397f3a7c3f63c6ce305bbd8ba0f057", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae0f347754397f3a7c3f63c6ce305bbd8ba0f057", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae0f347754397f3a7c3f63c6ce305bbd8ba0f057"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "a3df896b9c20e3574a6ae70d33e508e3bf51b444", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/218d5a871cff811b258266b2ff91addbb6f49a47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/218d5a871cff811b258266b2ff91addbb6f49a47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=218d5a871cff811b258266b2ff91addbb6f49a47", "patch": "@@ -1,3 +1,9 @@\n+2003-10-22  Andreas Schwab  <schwab@suse.de>\n+\n+\tPR target/12676\n+\t* config/m68k/m68k.c (output_addsi3): Fix range check to work on\n+\tLP64 platforms.\n+\n 2003-10-22  Jan Hubicka  <jh@suse.cz>\n \n \t* dwarf2out.c (dwarf2out_abstract_function): Use DW_AT to check presence of DW_AT_inline."}, {"sha": "e42f2e5ddad5866a1270fef02307bab871d75a51", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/218d5a871cff811b258266b2ff91addbb6f49a47/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/218d5a871cff811b258266b2ff91addbb6f49a47/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=218d5a871cff811b258266b2ff91addbb6f49a47", "patch": "@@ -2464,7 +2464,7 @@ output_addsi3 (rtx *operands)\n       /* These insns can result from reloads to access\n \t stack slots over 64k from the frame pointer.  */\n       if (GET_CODE (operands[2]) == CONST_INT\n-\t  && INTVAL (operands[2]) + 0x8000 >= (unsigned) 0x10000)\n+\t  && (INTVAL (operands[2]) < -32768 || INTVAL (operands[2]) > 32767))\n         return \"move%.l %2,%0\\n\\tadd%.l %1,%0\";\n #ifdef SGS\n       if (GET_CODE (operands[2]) == REG)"}]}