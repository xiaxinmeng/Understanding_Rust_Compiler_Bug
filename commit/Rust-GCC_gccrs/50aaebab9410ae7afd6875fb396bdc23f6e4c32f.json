{"sha": "50aaebab9410ae7afd6875fb396bdc23f6e4c32f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBhYWViYWI5NDEwYWU3YWZkNjg3NWZiMzk2YmRjMjNmNmU0YzMyZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-02-19T08:40:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-02-19T08:40:07Z"}, "message": "re PR c++/89391 (ICE in build_target_expr_with_type, at cp/tree.c:795)\n\n\tPR c++/89391\n\t* typeck.c (build_reinterpret_cast_1): Don't handle void to\n\t&& conversion go through build_target_expr_with_type.\n\n\t* g++.dg/cpp0x/reinterpret_cast2.C: New test.\n\nFrom-SVN: r269008", "tree": {"sha": "05160f90c423f1e64ab4595be11149f54c491e9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05160f90c423f1e64ab4595be11149f54c491e9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50aaebab9410ae7afd6875fb396bdc23f6e4c32f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50aaebab9410ae7afd6875fb396bdc23f6e4c32f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50aaebab9410ae7afd6875fb396bdc23f6e4c32f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50aaebab9410ae7afd6875fb396bdc23f6e4c32f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "883c07964f42c00b66dbb81d2ec742e4ee23a3c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/883c07964f42c00b66dbb81d2ec742e4ee23a3c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/883c07964f42c00b66dbb81d2ec742e4ee23a3c2"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "1398d48392f464aa0d889e7c63d655e7e83e1057", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50aaebab9410ae7afd6875fb396bdc23f6e4c32f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50aaebab9410ae7afd6875fb396bdc23f6e4c32f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=50aaebab9410ae7afd6875fb396bdc23f6e4c32f", "patch": "@@ -1,5 +1,9 @@\n 2019-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/89391\n+\t* typeck.c (build_reinterpret_cast_1): Don't handle void to\n+\t&& conversion go through build_target_expr_with_type.\n+\n \tPR c++/89390\n \t* error.c (qualified_name_lookup_error): Only call\n \tsuggest_alternative_in_scoped_enum if name is IDENTIFIER_NODE."}, {"sha": "1db9333b5ff437601395f1e9296b880fb9af1ba3", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50aaebab9410ae7afd6875fb396bdc23f6e4c32f/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50aaebab9410ae7afd6875fb396bdc23f6e4c32f/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=50aaebab9410ae7afd6875fb396bdc23f6e4c32f", "patch": "@@ -7477,7 +7477,7 @@ build_reinterpret_cast_1 (tree type, tree expr, bool c_cast_p,\n      reinterpret_cast.  */\n   if (TYPE_REF_P (type))\n     {\n-      if (TYPE_REF_IS_RVALUE (type))\n+      if (TYPE_REF_IS_RVALUE (type) && !VOID_TYPE_P (intype))\n \t{\n \t  if (!obvalue_p (expr))\n \t    /* Perform the temporary materialization conversion.  */"}, {"sha": "925e82e1625393c676e1b0c66180df93038a63e3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50aaebab9410ae7afd6875fb396bdc23f6e4c32f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50aaebab9410ae7afd6875fb396bdc23f6e4c32f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=50aaebab9410ae7afd6875fb396bdc23f6e4c32f", "patch": "@@ -1,5 +1,8 @@\n 2019-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/89391\n+\t* g++.dg/cpp0x/reinterpret_cast2.C: New test.\n+\n \tPR c++/89390\n \t* g++.dg/diagnostic/pr89390.C: New test.\n "}, {"sha": "59f39324c7c8d57782acf847685c6aa9e1092cd8", "filename": "gcc/testsuite/g++.dg/cpp0x/reinterpret_cast2.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50aaebab9410ae7afd6875fb396bdc23f6e4c32f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Freinterpret_cast2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50aaebab9410ae7afd6875fb396bdc23f6e4c32f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Freinterpret_cast2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Freinterpret_cast2.C?ref=50aaebab9410ae7afd6875fb396bdc23f6e4c32f", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/89391\n+// { dg-do compile { target c++11 } }\n+\n+struct S { };\n+\n+void\n+foo ()\n+{\n+  auto a = reinterpret_cast<S&&>(foo ());\t// { dg-error \"invalid cast of an rvalue expression of type 'void' to type\" }\n+}"}]}