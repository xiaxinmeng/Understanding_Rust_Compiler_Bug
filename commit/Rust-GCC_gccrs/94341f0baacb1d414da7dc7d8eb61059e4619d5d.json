{"sha": "94341f0baacb1d414da7dc7d8eb61059e4619d5d", "node_id": "C_kwDOANBUbNoAKDk0MzQxZjBiYWFjYjFkNDE0ZGE3ZGM3ZDhlYjYxMDU5ZTQ2MTlkNWQ", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-02-26T00:17:15Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-02-26T00:17:15Z"}, "message": "Daily bump.", "tree": {"sha": "7797cab205b6a8aa8e067b0953a2d8e25ea220ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7797cab205b6a8aa8e067b0953a2d8e25ea220ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94341f0baacb1d414da7dc7d8eb61059e4619d5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94341f0baacb1d414da7dc7d8eb61059e4619d5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94341f0baacb1d414da7dc7d8eb61059e4619d5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94341f0baacb1d414da7dc7d8eb61059e4619d5d/comments", "author": null, "committer": null, "parents": [{"sha": "3dd348d0530c621cc6c851e3cf03a7def69c8baa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dd348d0530c621cc6c851e3cf03a7def69c8baa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dd348d0530c621cc6c851e3cf03a7def69c8baa"}], "stats": {"total": 677, "additions": 676, "deletions": 1}, "files": [{"sha": "c34a8d18626bf8afb920c56ceff37efdd29d1372", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94341f0baacb1d414da7dc7d8eb61059e4619d5d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94341f0baacb1d414da7dc7d8eb61059e4619d5d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94341f0baacb1d414da7dc7d8eb61059e4619d5d", "patch": "@@ -1,3 +1,24 @@\n+2023-02-25  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\tPR modula2/108261\n+\t* doc/gm2.texi (-fm2-pathname): New option documented.\n+\t(-fm2-pathnameI): New option documented.\n+\t(-fm2-prefix=): New option documented.\n+\t(-fruntime-modules=): Update default module list.\n+\n+2023-02-25  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\tPR target/108919\n+\t* config/xtensa/xtensa-protos.h\n+\t(xtensa_prepare_expand_call): Rename to xtensa_expand_call.\n+\t* config/xtensa/xtensa.cc (xtensa_prepare_expand_call): Rename\n+\tto xtensa_expand_call.\n+\t(xtensa_expand_call): Emit the call and add a clobber expression\n+\tfor the static chain to it in case of windowed ABI.\n+\t* config/xtensa/xtensa.md (call, call_value, sibcall)\n+\t(sibcall_value): Call xtensa_expand_call and complete expansion\n+\tright after that call.\n+\n 2023-02-24  Richard Biener  <rguenther@suse.de>\n \n \t* vec.h (vec<T, A, vl_embed>::m_vecdata): Remove."}, {"sha": "6ee65af5879647f0afb4b30155076b3e54c0077b", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94341f0baacb1d414da7dc7d8eb61059e4619d5d/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94341f0baacb1d414da7dc7d8eb61059e4619d5d/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=94341f0baacb1d414da7dc7d8eb61059e4619d5d", "patch": "@@ -1 +1 @@\n-20230225\n+20230226"}, {"sha": "25c2d4c3eae484f4b7ac795b3aab9e46c0bfa996", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94341f0baacb1d414da7dc7d8eb61059e4619d5d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94341f0baacb1d414da7dc7d8eb61059e4619d5d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=94341f0baacb1d414da7dc7d8eb61059e4619d5d", "patch": "@@ -1,3 +1,23 @@\n+2023-02-25  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/108923\n+\t* intrinsic.cc (get_intrinsic_dummy_arg,\n+\tset_intrinsic_dummy_arg): Rename the former to the latter.\n+\tRemove the return value, add a reference to the lhs as argument,\n+\tand do the pointer assignment inside the function.  Don't do\n+\tit if the pointer is already non-NULL.\n+\t(sort_actual): Update caller.\n+\n+2023-02-25  Harald Anlauf  <anlauf@gmx.de>\n+\n+\t* arith.cc (gfc_real2int): Clear mpfr variable after use.\n+\n+2023-02-25  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/108621\n+\t* trans-expr.cc (gfc_conv_gfc_desc_to_cfi_desc): Skip setting of\n+\tbounds of CFI desc for 'pointer,intent(out)'.\n+\n 2023-02-24  Rimvydas Jasinskas  <rimvydas.jas@gmail.com>\n \n \t* trans-decl.cc (gfc_finish_var_decl): Apply attribute."}, {"sha": "fff63c6bd27fb6e1175d2ea8e9419441ff19dd32", "filename": "gcc/m2/ChangeLog", "status": "modified", "additions": 291, "deletions": 0, "changes": 291, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94341f0baacb1d414da7dc7d8eb61059e4619d5d/gcc%2Fm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94341f0baacb1d414da7dc7d8eb61059e4619d5d/gcc%2Fm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FChangeLog?ref=94341f0baacb1d414da7dc7d8eb61059e4619d5d", "patch": "@@ -1,3 +1,294 @@\n+2023-02-25  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\tPR modula2/108261\n+\t* Make-lang.in (GM2-COMP-BOOT-DEFS): DynamicStringPath.def\n+\tremove.  DynamicPath.def add.\n+\t(GM2-COMP-BOOT-MODS): DynamicStringPath.mod remove.\n+\tDynamicPath.mod add.\n+\t* Make-maintainer.in (BUILD-BOOT-PPG-H): New dependency.\n+\t(m2/gm2-ppg-boot/$(SRC_PREFIX)%.o): $(BUILD-BOOT-PPG-H) Add\n+\tdependency.\n+\t(PGE-DEF): New definition.\n+\t(BUILD-BOOT-PG-H): New dependency.\n+\t(m2/gm2-pg-boot/$(SRC_PREFIX)%.o): $(BUILD-BOOT-PG-H) Add\n+\tdependency.\n+\t(BUILD-BOOT-PGE-H): New dependency.\n+\t(m2/gm2-pge-boot/$(SRC_PREFIX)%.o): $(BUILD-BOOT-PGE-H) Add\n+\tdependency.\n+\t(GM2PATH): Add pathname entries.\n+\t(m2/boot-bin/mc-devel$(exeext)): Add m2/mc-boot-ch/Gm2rtsdummy.o\n+\tdependency.\n+\t(m2/boot-bin/mc-opt$(exeext)): Fix -I path.\n+\t* gm2-compiler/DynamicStringPath.def: Renamed module to\n+\tDynamicPath.\n+\t(GetUserPath): Remove.\n+\t(GetSystemPath): Remove.\n+\t(SetUserPath): Remove.\n+\t(SetSystemPath): Remove.\n+\t(DumpPath): New procedure definition.\n+\t* gm2-compiler/DynamicStringPath.mod: Renamed module to\n+\tDynamicPath.\n+\t(GetUserPath): Remove.\n+\t(GetSystemPath): Remove.\n+\t(SetUserPath): Remove.\n+\t(SetSystemPath): Remove.\n+\t(DumpPath): Remove Debugging conditional.\n+\t* gm2-compiler/M2AsmUtil.mod: Import EqualArray, NulName and\n+\tGetLibName.\n+\t(Debugging): New declaration.\n+\t(GetFullSymName): Re-implemented to prefix (mange) libname\n+\tto any extern variable/procedure which is IsExportQualified.\n+\t* gm2-compiler/M2Comp.mod (qprintLibName): New procedure.\n+\t* gm2-compiler/M2Graph.mod (resolveImports): Add libname.\n+\t* gm2-compiler/M2Options.def (SetM2Prefix): New procedure.\n+\t(GetM2Prefix): New procedure function.\n+\t(SetM2PathName): New procedure.\n+\t(GetM2PathName): New procedure function.\n+\t* gm2-compiler/M2Options.mod: (SetM2Prefix): New procedure implemented.\n+\t(GetM2Prefix): New procedure function implemented.\n+\t(SetM2PathName): New procedure implemented.\n+\t(GetM2PathName): New procedure function implemented.\n+\t(RuntimeModuleOverride): Set to DefaultRuntimeModuleOverride.\n+\t* gm2-compiler/M2Quads.mod: Import GetLibName.\n+\t(SafeRequestSym) Pass result of GetLibName to RequestDependant.\n+\t(callRequestDependant): Add libname as a parameter.\n+\t(BuildM2InitFunction): Add libname as a parameter.\n+\t(BuildM2FiniFunction): Add libname as a parameter.\n+\t(BuildM2CtorFunction): Add libname as a parameter.\n+\t* gm2-compiler/M2Scaffold.mod (LookupModuleSym): Set LibName\n+\tif a definition source was found.\n+\t* gm2-compiler/M2Search.def (FindSourceFile): Add named library parameter.\n+\t(FindSourceDefFile): Add named library parameter.\n+\t(FindSourceModFile): Add named library parameter.\n+\t* gm2-compiler/M2Search.mod (FindSourceFile): Reimplement.\n+\t(FindSourceDefFile): Add named library parameter.\n+\t(FindSourceModFile): Add named library parameter.\n+\t* gm2-compiler/SymbolTable.def (MakeProcedureCtorExtern): Add\n+\tlibname parameter.\n+\t(PutLibName): New procedure.\n+\t(GetLibName): New procedure function.\n+\t* gm2-compiler/SymbolTable.mod (MakeProcedureCtorExtern): Add\n+\tlibname parameter.\n+\t(GenName): Add libname parameter.\n+\t(InitCtorFields): Add moduleSym as a parameter.\n+\t(PutCtorExtern): Add libname parameter to GenName.\n+\t* gm2-gcc/init.cc (_M2_DynamicStringPath_init): Rename function...\n+\t(_M2_DynamicPath_init): ...to this.\n+\t(_M2_PathName_init): Added.\n+\t* gm2-gcc/m2decl.cc (m2decl_DeclareM2linkStaticInitialization):\n+\tAdd m2pim as the manged component of the exported symbol.\n+\t(m2decl_DeclareM2linkForcedModuleInitOrder): Add m2pim mangle prefix.\n+\t* gm2-gcc/m2options.h (M2Options_SetM2Prefix): New function.\n+\t(M2Options_GetM2Prefix): New function.\n+\t(M2Options_SetM2PathName): New function.\n+\t(M2Options_GetM2PathName): New function.\n+\t* gm2-lang.cc (push_back_Ipath): New function.\n+\t(add_one_import_path): New function.\n+\t(gm2_langhook_handle_option): Record -I component.  Call\n+\tSetM2PathName when -fm2-pathname= is seen.  Record -fm2-pathnameI\n+\tcomponent.  Call SetM2Prefix when -fm2-prefix= is seen.\n+\t(gm2_langhook_post_options): Iterative over pathname entries\n+\tand call SetM2PathName, SetSearchPath as appropriate.\n+\t* gm2-libs-iso/M2RTS.def (ConstructModules): Add libname parameter.\n+\t(DeconstructModules): Add libname parameter.\n+\t(RegisterModule): Add libname parameter.\n+\t(RequestDependant): Add libname parameter.\n+\t* gm2-libs-iso/M2RTS.mod (ConstructModules): Add libname parameter.\n+\t(DeconstructModules): Add libname parameter.\n+\t(RegisterModule): Add libname parameter.\n+\t(RequestDependant): Add libname parameter.\n+\t* gm2-libs-min/M2RTS.def (ConstructModules): Add libname parameter.\n+\t(DeconstructModules): Add libname parameter.\n+\t(RegisterModule): Add libname parameter.\n+\t(RequestDependant): Add libname parameter.\n+\t* gm2-libs-min/M2RTS.mod (ConstructModules): Add libname parameter.\n+\t(DeconstructModules): Add libname parameter.\n+\t(RegisterModule): Add libname parameter.\n+\t(RequestDependant): Add libname parameter.\n+\t* gm2-libs/M2Dependent.def (ConstructModules): Add libname parameter.\n+\t(DeconstructModules): Add libname parameter.\n+\t(RegisterModule): Add libname parameter.\n+\t(RequestDependant): Add libname parameter.\n+\t* gm2-libs/M2Dependent.mod (ConstructModules): Add libname parameter.\n+\t(DeconstructModules): Add libname parameter.\n+\t(RegisterModule): Add libname parameter.\n+\t(RequestDependant): Add libname parameter.\n+\t* gm2-libs/M2RTS.def (ConstructModules): Add libname parameter.\n+\t(DeconstructModules): Add libname parameter.\n+\t(RegisterModule): Add libname parameter.\n+\t(RequestDependant): Add libname parameter.\n+\t* gm2-libs/M2RTS.mod (ConstructModules): Add libname parameter.\n+\t(DeconstructModules): Add libname parameter.\n+\t(RegisterModule): Add libname parameter.\n+\t(RequestDependant): Add libname parameter.\n+\t* gm2-libs/RTint.mod (FindVector): Rename variables.\n+\t(initInputVector): Rename variables.\n+\t(initOutputVector): Rename variables.\n+\t(InitTimeVector): Rename variables.\n+\t(FindVectorNo): Rename variables.\n+\t(FindPendingVector): Rename variables.\n+\t(ReArmTimeVector): Rename variables.\n+\t(GetTimeVector): Rename variables.\n+\t(AttachVector): Rename variables.\n+\t(AttachVector): Rename variables.\n+\t(IncludeVector): Rename variables.\n+\t(ExcludeVector): Rename variables.\n+\t(AddFd): Rename variables.\n+\t(AddFd): Rename variables.\n+\t(DumpPendingQueue): Rename variables.\n+\t(stop): Remove.\n+\t(activatePending): Rename variables.\n+\t(Listen): Rename variables.\n+\t* gm2-libs/libc.def (snprintf): New function.\n+\t* gm2-libs/sckt.def: Change all exported identifiers to be\n+\texport qualified.\n+\t* gm2spec.cc (push_back_Ipath): New function.\n+\t(add_m2_I_path): New function.\n+\t(lang_specific_driver): Skip -fm2-pathname= and remember pathname.\n+\tSkip -I and record the path and current pathname.  Call add_m2_I_path.\n+\t* lang-specs.h: Replace %{I*} with %{fm2-pathname*}.\n+\t* lang.opt (-fm2-pathname=): New entry.\n+\t(-fm2-pathname): New entry.\n+\t(-fm2-prefix=): New entry.\n+\t* mc-boot-ch/GUnixArgs.cc (_M2_UnixArgs_dep): New function.\n+\t(_M2_UnixArgs_ctor::_M2_UnixArgs_ctor): New method.\n+\t* mc-boot-ch/Glibc.c (libc_snprintf): New function.\n+\t* mc-boot-ch/m2rts.h (M2RTS_RequestDependant): Changed prototype.\n+\t(M2RTS_RegisterModule): Changed prototype.\n+\t* mc-boot/GDynamicStrings.c: Rebuild.\n+\t* mc-boot/GFIO.c: Rebuild.\n+\t* mc-boot/GIndexing.c: Rebuild.\n+\t* mc-boot/GM2Dependent.c: Rebuild.\n+\t* mc-boot/GM2Dependent.h: Rebuild.\n+\t* mc-boot/GM2EXCEPTION.c: Rebuild.\n+\t* mc-boot/GM2RTS.c: Rebuild.\n+\t* mc-boot/GM2RTS.h: Rebuild.\n+\t* mc-boot/GPushBackInput.c: Rebuild.\n+\t* mc-boot/GRTExceptions.c: Rebuild.\n+\t* mc-boot/GRTint.c: Rebuild.\n+\t* mc-boot/GStdIO.c: Rebuild.\n+\t* mc-boot/GStringConvert.c: Rebuild.\n+\t* mc-boot/GSysStorage.c: Rebuild.\n+\t* mc-boot/Gdecl.c: Rebuild.\n+\t* mc-boot/Gkeyc.c: Rebuild.\n+\t* mc-boot/Glibc.h: Rebuild.\n+\t* mc-boot/GmcComment.c: Rebuild.\n+\t* mc-boot/GmcComp.c: Rebuild.\n+\t* mc-boot/GmcDebug.c: Rebuild.\n+\t* mc-boot/GmcMetaError.c: Rebuild.\n+\t* mc-boot/GmcStack.c: Rebuild.\n+\t* mc-boot/GnameKey.c: Rebuild.\n+\t* mc-boot/GsymbolKey.c: Rebuild.\n+\t* pge-boot/GASCII.c: Rebuild.\n+\t* pge-boot/GArgs.c: Rebuild.\n+\t* pge-boot/GAssertion.c: Rebuild.\n+\t* pge-boot/GDebug.c: Rebuild.\n+\t* pge-boot/GDynamicStrings.c: Rebuild.\n+\t* pge-boot/GFIO.c: Rebuild.\n+\t* pge-boot/GIO.c: Rebuild.\n+\t* pge-boot/GIndexing.c: Rebuild.\n+\t* pge-boot/GLists.c: Rebuild.\n+\t* pge-boot/GM2Dependent.c: Rebuild.\n+\t* pge-boot/GM2Dependent.h: Rebuild.\n+\t* pge-boot/GM2EXCEPTION.c: Rebuild.\n+\t* pge-boot/GM2RTS.c: Rebuild.\n+\t* pge-boot/GM2RTS.h: Rebuild.\n+\t* pge-boot/GNameKey.c: Rebuild.\n+\t* pge-boot/GNumberIO.c: Rebuild.\n+\t* pge-boot/GOutput.c: Rebuild.\n+\t* pge-boot/GPushBackInput.c: Rebuild.\n+\t* pge-boot/GRTExceptions.c: Rebuild.\n+\t* pge-boot/GSFIO.c: Rebuild.\n+\t* pge-boot/GStdIO.c: Rebuild.\n+\t* pge-boot/GStorage.c: Rebuild.\n+\t* pge-boot/GStrCase.c: Rebuild.\n+\t* pge-boot/GStrIO.c: Rebuild.\n+\t* pge-boot/GStrLib.c: Rebuild.\n+\t* pge-boot/GSymbolKey.c: Rebuild.\n+\t* pge-boot/GSysExceptions.c (_M2_SysExceptions_finish): Rename this...\n+\t(_M2_SysExceptions_fini): ... to this.\n+\t* pge-boot/GSysStorage.c: Rebuild.\n+\t(_M2_SysStorage_finish): Rename this...\n+\t(_M2_SysStorage_fini): ... to this.\n+\t* pge-boot/GUnixArgs.cc: New file.\n+\t* pge-boot/Gbnflex.c (_M2_bnflex_finish): Rename this...\n+\t(_M2_bnflex_fini): ... to this.\n+\t* pge-boot/Gerrno.c (_M2_errno_finish): Rename this...\n+\t(_M2_errno_fini): ... to this.\n+\t* pge-boot/Glibc.c (libc_snprintf): New function.\n+\t* pge-boot/Glibc.h (libc_snprintf): New prototype.\n+\t* pge-boot/Gpge.c (_M2_pge_finish): Rename this...\n+\t(_M2_pge_fini): ... to this.\n+\t* pge-boot/Gtermios.cc (_M2_termios_finish): Rename this...\n+\t(_M2_termios_fini): ... to this.\n+\t* pge-boot/main.c (_M2_RTExceptions_finish): Rename this...\n+\t(_M2_RTExceptions_fini): ... to this.\n+\t(_M2_M2EXCEPTION_finish): Rename this...\n+\t(_M2_M2EXCEPTION_fini): ... to this.\n+\t(_M2_M2RTS_finish): Rename this...\n+\t(_M2_M2RTS_fini): ... to this.\n+\t(_M2_SysExceptions_finish): Rename this...\n+\t(_M2_SysExceptions_fini): ... to this.\n+\t(_M2_StrLib_finish): Rename this...\n+\t(_M2_StrLib_fini): ... to this.\n+\t(_M2_errno_finish): Rename this...\n+\t(_M2_errno_fini): ... to this.\n+\t(_M2_termios_finish): Rename this...\n+\t(_M2_termios_fini): ... to this.\n+\t(_M2_IO_finish): Rename this...\n+\t(_M2_IO_fini): ... to this.\n+\t(_M2_StdIO_finish): Rename this...\n+\t(_M2_StdIO_fini): ... to this.\n+\t(_M2_Debug_finish): Rename this...\n+\t(_M2_Debug_fini): ... to this.\n+\t(_M2_SysStorage_finish): Rename this...\n+\t(_M2_SysStorage_fini): ... to this.\n+\t(_M2_Storage_finish): Rename this...\n+\t(_M2_Storage_fini): ... to this.\n+\t(_M2_StrIO_finish): Rename this...\n+\t(_M2_StrIO_fini): ... to this.\n+\t(_M2_DynamicStrings_finish): Rename this...\n+\t(_M2_DynamicStrings_fini): ... to this.\n+\t(_M2_Assertion_finish): Rename this...\n+\t(_M2_Assertion_fini): ... to this.\n+\t(_M2_Indexing_finish): Rename this...\n+\t(_M2_Indexing_fini): ... to this.\n+\t(_M2_NameKey_finish): Rename this...\n+\t(_M2_NameKey_fini): ... to this.\n+\t(_M2_NumberIO_finish): Rename this...\n+\t(_M2_NumberIO_fini): ... to this.\n+\t(_M2_PushBackInput_finish): Rename this...\n+\t(_M2_PushBackInput_fini): ... to this.\n+\t(_M2_SymbolKey_finish): Rename this...\n+\t(_M2_SymbolKey_fini): ... to this.\n+\t(_M2_UnixArgs_finish): Rename this...\n+\t(_M2_UnixArgs_fini): ... to this.\n+\t(_M2_FIO_finish): Rename this...\n+\t(_M2_FIO_fini): ... to this.\n+\t(_M2_SFIO_finish): Rename this...\n+\t(_M2_SFIO_fini): ... to this.\n+\t(_M2_StrCase_finish): Rename this...\n+\t(_M2_StrCase_fini): ... to this.\n+\t(_M2_bnflex_finish): Rename this...\n+\t(_M2_bnflex_fini): ... to this.\n+\t(_M2_Lists_finish): Rename this...\n+\t(_M2_Lists_fini): ... to this.\n+\t(_M2_Args_finish): Rename this...\n+\t(_M2_Args_fini): ... to this.\n+\t(_M2_Output_finish): Rename this...\n+\t(_M2_Output_fini): ... to this.\n+\t(_M2_pge_finish): Rename this...\n+\t(_M2_pge_fini): ... to this.\n+\t* plugin/m2rte.cc (m2_runtime_error_calls): Change all runtime\n+\tprocedure names to their name mangled counterparts.\n+\t* gm2-libs-iso/wrapsock.c: Removed.\n+\t* gm2-libs-iso/wraptime.c: Removed.\n+\t* mc-boot/Gpth.h: Removed.\n+\t* gm2-compiler/PathName.def: New file.\n+\t* gm2-compiler/PathName.mod: New file.\n+\t* gm2-compiler/DynamicPath.def: New file.\n+\t* gm2-compiler/DynamicPath.mod: New file.\n+\n 2023-02-06  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \tPR modula2/108135"}, {"sha": "af15c6c969fe386fdf05f07282798566e576f32e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94341f0baacb1d414da7dc7d8eb61059e4619d5d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94341f0baacb1d414da7dc7d8eb61059e4619d5d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=94341f0baacb1d414da7dc7d8eb61059e4619d5d", "patch": "@@ -1,3 +1,102 @@\n+2023-02-25  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* gm2/projects/pim/run/pass/tower/projects-pim-run-pass-tower.exp:\n+\tAlso add conditional to gm2-simple-execute.\n+\n+2023-02-25  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* gm2/projects/pim/run/pass/tower/projects-pim-run-pass-tower.exp\n+\t(gm2_run_tower_test): New global variable.  Add conditional\n+\tbefore invoking gm2-local-exec.\n+\n+2023-02-25  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* lib/multiline.exp (handle-multiline-outputs): Don't include the\n+\tquoted multiline pattern in the pass/fail output.\n+\n+2023-02-25  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\tPR modula2/108261\n+\t* gm2/examples/callingC/pass/examples-callingC-pass.exp: Tidy up\n+\tvariable access.\n+\t* gm2/examples/callingC/run/pass/examples-callingC-run-pass.exp: Tidy up\n+\tvariable access.\n+\t* gm2/examples/cpp/pass/examples-cpp-pass.exp: Tidy up\n+\tvariable access.\n+\t* gm2/examples/cppDef/pass/examples-cppDef-pass.exp: Tidy up\n+\tvariable access.\n+\t* gm2/examples/hello/pass/examples-hello-pass.exp: Tidy up\n+\tvariable access.\n+\t* gm2/examples/map/pass/examples-map-pass.exp: Tidy up\n+\tvariable access.\n+\t* gm2/iso/check/fail/iso-check-fail.exp: Add pathname.\n+\t* gm2/link/externalscaffold/pass/link-externalscaffold-pass.exp:\n+\tAdd pathname.\n+\t* gm2/link/externalscaffold/pass/scaffold.c: Add mangled export name.\n+\t* gm2/pimlib/base/run/pass/FIO.mod: Updated test code.\n+\t* gm2/pimlib/base/run/pass/StrLib.mod: Updated test code.\n+\t* gm2/pimlib/base/run/pass/pimlib-base-run-pass.exp: Remove path.\n+\t* gm2/projects/pim/run/pass/random/projects-pim-run-pass-random.exp:\n+\tTidy up variable access.\n+\t* gm2/switches/auto-init/fail/switches-auto-init-fail.exp: Add pathname.\n+\t* gm2/switches/check-all/pim2/fail/switches-check-all-pim2-fail.exp:\n+\tAdd pathname.\n+\t* gm2/switches/makeall/fail/switches-makeall-fail.exp: Remove -fmakeall.\n+\t* gm2/switches/makeall/pass/switches-makeall-pass.exp: Remove -fmakeall.\n+\t* lib/gm2-simple.exp (gm2_keep_executable): New global variable.\n+\t(gm2_simple_execute): Keep executable if global is true.\n+\t* lib/gm2-torture.exp: Add ; after global variable access.\n+\t* lib/gm2.exp: Set up pathnames.\n+\t* gm2/projects/pim/run/pass/tower/AdvCmd.def: New test.\n+\t* gm2/projects/pim/run/pass/tower/AdvCmd.mod: New test.\n+\t* gm2/projects/pim/run/pass/tower/AdvIntroduction.def: New test.\n+\t* gm2/projects/pim/run/pass/tower/AdvIntroduction.mod: New test.\n+\t* gm2/projects/pim/run/pass/tower/AdvMap.def: New test.\n+\t* gm2/projects/pim/run/pass/tower/AdvMap.mod: New test.\n+\t* gm2/projects/pim/run/pass/tower/AdvMath.def: New test.\n+\t* gm2/projects/pim/run/pass/tower/AdvMath.mod: New test.\n+\t* gm2/projects/pim/run/pass/tower/AdvParse.bnf: New test.\n+\t* gm2/projects/pim/run/pass/tower/AdvParse.def: New test.\n+\t* gm2/projects/pim/run/pass/tower/AdvParse.mod: New test.\n+\t* gm2/projects/pim/run/pass/tower/AdvSound.def: New test.\n+\t* gm2/projects/pim/run/pass/tower/AdvSound.mod: New test.\n+\t* gm2/projects/pim/run/pass/tower/AdvSystem.def: New test.\n+\t* gm2/projects/pim/run/pass/tower/AdvSystem.mod: New test.\n+\t* gm2/projects/pim/run/pass/tower/AdvTreasure.def: New test.\n+\t* gm2/projects/pim/run/pass/tower/AdvTreasure.mod: New test.\n+\t* gm2/projects/pim/run/pass/tower/AdvUtil.def: New test.\n+\t* gm2/projects/pim/run/pass/tower/AdvUtil.mod: New test.\n+\t* gm2/projects/pim/run/pass/tower/DrawG.def: New test.\n+\t* gm2/projects/pim/run/pass/tower/DrawG.mod: New test.\n+\t* gm2/projects/pim/run/pass/tower/DrawL.def: New test.\n+\t* gm2/projects/pim/run/pass/tower/DrawL.mod: New test.\n+\t* gm2/projects/pim/run/pass/tower/Dungeon.mod: New test.\n+\t* gm2/projects/pim/run/pass/tower/Lock.def: New test.\n+\t* gm2/projects/pim/run/pass/tower/Lock.mod: New test.\n+\t* gm2/projects/pim/run/pass/tower/ProcArgs.def: New test.\n+\t* gm2/projects/pim/run/pass/tower/ProcArgs.mod: New test.\n+\t* gm2/projects/pim/run/pass/tower/Screen.def: New test.\n+\t* gm2/projects/pim/run/pass/tower/Screen.mod: New test.\n+\t* gm2/projects/pim/run/pass/tower/SocketControl.c: New test.\n+\t* gm2/projects/pim/run/pass/tower/SocketControl.def: New test.\n+\t* gm2/projects/pim/run/pass/tower/Window.def: New test.\n+\t* gm2/projects/pim/run/pass/tower/Window.mod: New test.\n+\t* gm2/projects/pim/run/pass/tower/adv.flex: New test.\n+\t* gm2/projects/pim/run/pass/tower/advflex.c: New test.\n+\t* gm2/projects/pim/run/pass/tower/advflex.def: New test.\n+\t* gm2/projects/pim/run/pass/tower/projects-pim-run-pass-tower.exp:\n+\tNew test.\n+\t* gm2/projects/pim/run/pass/tower/star: New test.\n+\n+2023-02-25  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\t* gcc.target/xtensa/pr108919.c: New test.\n+\n+2023-02-25  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/108621\n+\t* gfortran.dg/c-interop/fc-descriptor-pr108621.f90: New test.\n+\n 2023-02-24  Rimvydas Jasinskas  <rimvydas.jas@gmail.com>\n \n \t* gfortran.dg/weak-2.f90: New test."}, {"sha": "a4c4303294992fb8c924a75be0f6c138aab1475c", "filename": "libgm2/ChangeLog", "status": "modified", "additions": 244, "deletions": 0, "changes": 244, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94341f0baacb1d414da7dc7d8eb61059e4619d5d/libgm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94341f0baacb1d414da7dc7d8eb61059e4619d5d/libgm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2FChangeLog?ref=94341f0baacb1d414da7dc7d8eb61059e4619d5d", "patch": "@@ -1,3 +1,247 @@\n+2023-02-25  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\tPR modula2/108261\n+\t* libm2cor/KeyBoardLEDs.cc (EXPORT): New define.\n+\t(M2EXPORT): New define.\n+\t(M2LIBNAME): New define.\n+\t(KeyBoardLEDs_SwitchScroll): EXPORT.\n+\t(KeyBoardLEDs_SwitchNum): EXPORT.\n+\t(KeyBoardLEDs_SwitchCaps): EXPORT.\n+\t(KeyBoardLEDs_SwitchLeds): EXPORT.\n+\t(_M2_KeyBoardLEDs_init): M2EXPORT.\n+\t(_M2_KeyBoardLEDs_finish): M2EXPORT.\n+\t(_M2_KeyBoardLEDs_dep): M2EXPORT.\n+\t* libm2cor/Makefile.am (libm2cor_la_M2FLAGS): Define\n+\tpath names.\n+\t* libm2cor/Makefile.in: Rebuild.\n+\t* libm2iso/ErrnoCategory.cc (EXPORT): New define.\n+\t(M2EXPORT): New define.\n+\t(M2LIBNAME): New define.\n+\t(ErrnoCategory_IsErrnoHard): EXPORT.\n+\t(ErrnoCategory_IsErrnoSoft): EXPORT.\n+\t(ErrnoCategory_UnAvailable): EXPORT.\n+\t(ErrnoCategory_GetOpenResults): EXPORT.\n+\t(_M2_ErrnoCategory_init): M2EXPORT.\n+\t(_M2_ErrnoCategory_fini): M2EXPORT.\n+\t(_M2_ErrnoCategory_dep): M2EXPORT.\n+\t(_M2_ErrnoCategory_ctor): M2EXPORT.\n+\t* libm2iso/Makefile.am (libm2iso_la_M2FLAGS): Define\n+\tpath names.\n+\t* libm2iso/Makefile.in: Rebuild.\n+\t* libm2iso/RTco.cc (EXPORT): New define.\n+\t(M2EXPORT): New define.\n+\t(M2LIBNAME): New define.\n+\t(newSem): Add module libname prefix to HaltC.\n+\t(currentThread): Remove variable and replace with a function.\n+\t(never): Add module libname prefix to HaltC.\n+\t(initThread): Add module libname prefix to HaltC.\n+\t* libm2iso/m2rts.h (str): New define.\n+\t(M2RTS_RequestDependant): Change to the mangled name equivalent.\n+\t(M2RTS_RegisterModule): Change to the mangled name equivalent.\n+\t(m2iso_M2RTS_RequestDependant): Add libname parameter.\n+\t(m2iso_M2RTS_RegisterModule): Add libname parameter.\n+\t(m2pim_M2RTS_RegisterModule): Add libname parameter.\n+\t(_M2_M2RTS_init): Rename this...\n+\t(m2iso_M2_M2RTS_init): ...to this.\n+\t(M2RTS_ConstructModules): Change to the mangled name equivalent.\n+\t(M2RTS_Terminate): Change to the mangled name equivalent.\n+\t(M2RTS_DeconstructModules): Change to the mangled name equivalent.\n+\t(m2iso_M2RTS_ConstructModules): Add libname parameter.\n+\t(m2iso_M2RTS_Terminate): Add libname parameter.\n+\t(m2iso_M2RTS_DeconstructModules): Add libname parameter.\n+\t(M2RTS_HaltC): Rename this...\n+\t(m2iso_M2RTS_HaltC): ...to this.\n+\t* libm2iso/wrapsock.c (EXPORT): New define.\n+\t(IMPORT): New define.\n+\t(M2EXPORT): New define.\n+\t(M2LIBNAME): New define.\n+\t(m2iso_M2RTS_RequestDependant): Add prototype.\n+\t(wrapsock_clientOpen): EXPORT.\n+\t(wrapsock_clientOpenIP): EXPORT.\n+\t(wrapsock_getClientPortNo): EXPORT.\n+\t(wrapsock_getClientHostname): EXPORT.\n+\t(wrapsock_getClientSocketFd): EXPORT.\n+\t(wrapsock_getClientIP): EXPORT.\n+\t(wrapsock_getPushBackChar): EXPORT.\n+\t(wrapsock_setPushBackChar): EXPORT.\n+\t(wrapsock_getSizeOfClientInfo): EXPORT.\n+\t(_M2_wrapsock_init): M2EXPORT.\n+\t(_M2_wrapsock_fini): M2EXPORT.\n+\t(ctor): M2EXPORT.  New function.\n+\t* libm2iso/wraptime.c: Rename to...\n+\t* libm2iso/wraptime.cc: ...this.\n+\t(EXPORT): New define.\n+\t(M2EXPORT): New define.\n+\t(M2LIBNAME): New define.\n+\t(wraptime_InitTimeval): EXPORT.\n+\t(wraptime_KillTimeval): EXPORT.\n+\t(wraptime_InitTimezone): EXPORT.\n+\t(wraptime_KillTimezone): EXPORT.\n+\t(wraptime_InitTM): EXPORT.\n+\t(wraptime_KillTM): EXPORT.\n+\t(wraptime_gettimeofday): EXPORT.\n+\t(wraptime_settimeofday): EXPORT.\n+\t(wraptime_GetFractions): EXPORT.\n+\t(wraptime_localtime_r): EXPORT.\n+\t(wraptime_GetYear): EXPORT.\n+\t(wraptime_GetMonth): EXPORT.\n+\t(wraptime_GetDay): EXPORT.\n+\t(wraptime_GetHour): EXPORT.\n+\t(wraptime_GetMinute): EXPORT.\n+\t(wraptime_GetSecond): EXPORT.\n+\t(wraptime_GetSummerTime): EXPORT.\n+\t(wraptime_GetDST): EXPORT.\n+\t(wraptime_SetTimezone): EXPORT.\n+\t(wraptime_SetTimeval): EXPORT.\n+\t(_M2_wraptime_init): M2EXPORT.\n+\t(_M2_wraptime_fini): M2EXPORT.\n+\t(ctor): M2EXPORT.  New function.\n+\t* libm2log/Makefile.am (libm2log_la_M2FLAGS): Define\n+\tpath names.\n+\t* libm2log/Makefile.in:\n+\t* libm2min/Makefile.am (libm2min_la_M2FLAGS): Define\n+\tpath names.\n+\t* libm2min/Makefile.in:\n+\t* libm2pim/Makefile.am (libm2pim_la_M2FLAGS): Define\n+\tpath names.\n+\t* libm2pim/Makefile.in:\n+\t* libm2pim/Selective.cc (EXPORT): New define.\n+\t(M2EXPORT): New define.\n+\t(M2LIBNAME): New define.\n+\t(Selective_Select): EXPORT.\n+\t(Selective_InitTime): EXPORT.\n+\t(Selective_GetTime): EXPORT.\n+\t(Selective_SetTime): EXPORT.\n+\t(Selective_KillTime): EXPORT.\n+\t(Selective_InitSet): EXPORT.\n+\t(Selective_KillSet): EXPORT.\n+\t(Selective_FdZero): EXPORT.\n+\t(Selective_FdSet): EXPORT.\n+\t(Selective_FdClr): EXPORT.\n+\t(Selective_FdIsSet): EXPORT.\n+\t(Selective_GetTimeOfDay): EXPORT.\n+\t(Selective_MaxFdsPlusOne): EXPORT.\n+\t(Selective_WriteCharRaw): EXPORT.\n+\t(Selective_ReadCharRaw): EXPORT.\n+\t(_M2_Selective_init): M2EXPORT.\n+\t(_M2_Selective_fini): M2EXPORT.\n+\t(_M2_Selective_dep): M2EXPORT.\n+\t(_M2_Selective_ctor): M2EXPORT.\n+\t* libm2pim/SysExceptions.cc (EXPORT): New define.\n+\t(M2EXPORT): New define.\n+\t(M2LIBNAME): New define.\n+\t(SysExceptions_InitExceptionHandlers): EXPORT.\n+\t(_M2_SysExceptions_init): M2EXPORT.\n+\t(_M2_SysExceptions_fini): M2EXPORT.\n+\t(_M2_SysExceptions_dep): M2EXPORT.\n+\t(_M2_SysExceptions_ctor): M2EXPORT.\n+\t* libm2pim/UnixArgs.cc (EXPORT): New define.\n+\t(M2EXPORT): New define.\n+\t(M2LIBNAME): New define.\n+\t(UnixArgs_GetArgC): EXPORT.\n+\t(UnixArgs_GetArgV): EXPORT.\n+\t(UnixArgs_GetEnvV): EXPORT.\n+\t(_M2_UnixArgs_init): M2EXPORT.\n+\t(_M2_UnixArgs_fini): M2EXPORT.\n+\t(_M2_UnixArgs_dep): M2EXPORT.\n+\t(_M2_UnixArgs_ctor): M2EXPORT.\n+\t* libm2pim/cgetopt.cc (EXPORT): New define.\n+\t(M2EXPORT): New define.\n+\t(M2LIBNAME): New define.\n+\t(cgetopt_getopt): EXPORT.\n+\t(cgetopt_getopt_long): EXPORT.\n+\t(cgetopt_getopt_long_only): EXPORT.\n+\t(cgetopt_InitOptions): EXPORT.\n+\t(cgetopt_KillOptions): EXPORT.\n+\t(cgetopt_SetOption): EXPORT.\n+\t(cgetopt_GetLongOptionArray): EXPORT.\n+\t(_M2_cgetopt_init): M2EXPORT.\n+\t(_M2_cgetopt_fini): M2EXPORT.\n+\t(_M2_cgetopt_dep): M2EXPORT.\n+\t(_M2_cgetopt_ctor): M2EXPORT.\n+\t* libm2pim/dtoa.cc (EXPORT): New define.\n+\t(M2EXPORT): New define.\n+\t(M2LIBNAME): New define.\n+\t(dtoa_strtod): EXPORT.\n+\t(dtoa_calcmaxsig): EXPORT.\n+\t(dtoa_calcdecimal): EXPORT.\n+\t(dtoa_calcsign): EXPORT.\n+\t(dtoa_dtoa): EXPORT.\n+\t(_M2_dtoa_init): M2EXPORT.\n+\t(_M2_dtoa_fini): M2EXPORT.\n+\t(_M2_dtoa_dep): M2EXPORT.\n+\t(_M2_dtoa_ctor): M2EXPORT.\n+\t* libm2pim/errno.cc (EXPORT): New define.\n+\t(M2EXPORT): New define.\n+\t(M2LIBNAME): New define.\n+\t(errno_geterrno): EXPORT.\n+\t(_M2_errno_init): M2EXPORT.\n+\t(_M2_errno_fini): M2EXPORT.\n+\t(_M2_errno_dep): M2EXPORT.\n+\t(_M2_errno_ctor): M2EXPORT.\n+\t* libm2pim/ldtoa.cc (EXPORT): New define.\n+\t(IMPORT): New define.\n+\t(M2EXPORT): New define.\n+\t(M2LIBNAME): New define.\n+\t(dtoa_calcmaxsig): EXPORT.\n+\t(dtoa_calcdecimal): EXPORT.\n+\t(dtoa_calcsign): EXPORT.\n+\t(ldtoa_strtold): EXPORT.\n+\t(ldtoa_ldtoa): EXPORT.\n+\t(_M2_ldtoa_init): M2EXPORT.\n+\t(_M2_ldtoa_fini): M2EXPORT.\n+\t(_M2_ldtoa_dep): M2EXPORT.\n+\t(_M2_ldtoa_ctor): M2EXPORT.\n+\t* libm2pim/sckt.cc (EXPORT): New define.\n+\t(M2EXPORT): New define.\n+\t(M2LIBNAME): New define.\n+\t(tcpServerEstablishPort): EXPORT.\n+\t(tcpServerEstablish): EXPORT.\n+\t(tcpServerAccept): EXPORT.\n+\t(tcpServerPortNo): EXPORT.\n+\t(tcpServerSocketFd): EXPORT.\n+\t(getLocalIP): EXPORT.\n+\t(tcpServerIP): EXPORT.\n+\t(tcpServerClientIP): EXPORT.\n+\t(tcpServerClientPortNo): EXPORT.\n+\t(tcpClientSocket): EXPORT.\n+\t(tcpClientSocketIP): EXPORT.\n+\t(tcpClientConnect): EXPORT.\n+\t(tcpClientPortNo): EXPORT.\n+\t(tcpClientSocketFd): EXPORT.\n+\t(tcpClientIP): EXPORT.\n+\t(_M2_sckt_init): M2EXPORT.\n+\t(_M2_sckt_finish): M2EXPORT.\n+\t(_M2_sckt_dep): M2EXPORT.\n+\t(_M2_sckt_ctor): M2EXPORT.\n+\t* libm2pim/termios.cc (EXPORT): New define.\n+\t(M2EXPORT): New define.\n+\t(M2LIBNAME): New define.\n+\t(_M2_termios_init): M2EXPORT.\n+\t(_M2_termios_fini): M2EXPORT.\n+\t(_M2_termios_dep): M2EXPORT.\n+\t(_M2_termios_ctor): M2EXPORT.\n+\t* libm2pim/wrapc.c (EXPORT): New define.\n+\t(M2EXPORT): New define.\n+\t(M2LIBNAME): New define.\n+\t(wrapc_strtime): EXPORT.\n+\t(wrapc_filesize): EXPORT.\n+\t(wrapc_filemtime): EXPORT.\n+\t(wrapc_fileinode): EXPORT.\n+\t(wrapc_getrand): EXPORT.\n+\t(wrapc_getusername): EXPORT.\n+\t(wrapc_getnameuidgid): EXPORT.\n+\t(wrapc_signbit): EXPORT.\n+\t(wrapc_signbitl): EXPORT.\n+\t(wrapc_signbitf): EXPORT.\n+\t(wrapc_isfinite): EXPORT.\n+\t(wrapc_isfinitel): EXPORT.\n+\t(wrapc_isfinitef): EXPORT.\n+\t(_M2_wrapc_init): M2EXPORT.\n+\t(_M2_wrapc_fini): M2EXPORT.\n+\t(_M2_wrapc_ctor): M2EXPORT.\n+\t* libm2pim/wrapc.cc: New file.\n+\n 2023-02-19  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \tPR testsuite/108835"}]}