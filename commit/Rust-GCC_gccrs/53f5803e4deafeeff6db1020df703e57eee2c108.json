{"sha": "53f5803e4deafeeff6db1020df703e57eee2c108", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNmNTgwM2U0ZGVhZmVlZmY2ZGIxMDIwZGY3MDNlNTdlZWUyYzEwOA==", "commit": {"author": {"name": "Evgeny Stupachenko", "email": "evstupac@gmail.com", "date": "2014-07-11T11:27:42Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-07-11T11:27:42Z"}, "message": "gcc/\n\t* gcc/config/i386/i386.c.orig\n\nFrom-SVN: r212451", "tree": {"sha": "6aeb13bed8abb39a7ea53b691771bfa5974a40fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6aeb13bed8abb39a7ea53b691771bfa5974a40fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53f5803e4deafeeff6db1020df703e57eee2c108", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53f5803e4deafeeff6db1020df703e57eee2c108", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53f5803e4deafeeff6db1020df703e57eee2c108", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53f5803e4deafeeff6db1020df703e57eee2c108/comments", "author": {"login": "evstupac", "id": 38332307, "node_id": "MDQ6VXNlcjM4MzMyMzA3", "avatar_url": "https://avatars.githubusercontent.com/u/38332307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evstupac", "html_url": "https://github.com/evstupac", "followers_url": "https://api.github.com/users/evstupac/followers", "following_url": "https://api.github.com/users/evstupac/following{/other_user}", "gists_url": "https://api.github.com/users/evstupac/gists{/gist_id}", "starred_url": "https://api.github.com/users/evstupac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evstupac/subscriptions", "organizations_url": "https://api.github.com/users/evstupac/orgs", "repos_url": "https://api.github.com/users/evstupac/repos", "events_url": "https://api.github.com/users/evstupac/events{/privacy}", "received_events_url": "https://api.github.com/users/evstupac/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d1c1cbd5c11a8e6490584f4a86526503664640d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1c1cbd5c11a8e6490584f4a86526503664640d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1c1cbd5c11a8e6490584f4a86526503664640d1"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "b8ab1223d735cc51ea7d39686a68a169d7776396", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f5803e4deafeeff6db1020df703e57eee2c108/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f5803e4deafeeff6db1020df703e57eee2c108/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53f5803e4deafeeff6db1020df703e57eee2c108", "patch": "@@ -1,3 +1,7 @@\n+2014-07-11  Evgeny Stupachenko  <evstupac@gmail.com>\n+\n+\t* config/i386/i386.c (expand_vec_perm_pblendv): Disable for AVX.\n+\n 2014-07-11  Marat Zakirov  <m.zakirov@samsung.com>\n \n \tPR target/61561"}, {"sha": "5c57cf8dd7004d9bae067f631f2e9e3067efdf78", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f5803e4deafeeff6db1020df703e57eee2c108/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f5803e4deafeeff6db1020df703e57eee2c108/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=53f5803e4deafeeff6db1020df703e57eee2c108", "patch": "@@ -43214,12 +43214,10 @@ expand_vec_perm_pblendv (struct expand_vec_perm_d *d)\n   bool ok;\n \n   /* Use the same checks as in expand_vec_perm_blend, but skipping\n-     AVX2 as it requires more than 2 instructions for general case.  */\n+     AVX and AVX2 as they require more than 2 instructions.  */\n   if (d->one_operand_p)\n     return false;\n-  if (TARGET_AVX && (vmode == V4DFmode || vmode == V8SFmode))\n-    ;\n-  else if (TARGET_SSE4_1 && GET_MODE_SIZE (vmode) == 16)\n+  if (TARGET_SSE4_1 && GET_MODE_SIZE (vmode) == 16)\n     ;\n   else\n     return false;"}]}