{"sha": "bf94d1ecc773351392f54859e697f557ba097ed8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY5NGQxZWNjNzczMzUxMzkyZjU0ODU5ZTY5N2Y1NTdiYTA5N2VkOA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-10-14T10:37:09Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-10-14T10:37:09Z"}, "message": "Add ATTRIBUTE_NORETURN in a bunch of places:\n\n\t* cppalloc.c (memory_full): Mark function prototype with\n\tATTRIBUTE_NORETURN.\n\t* demangle.h (collect_exit): Likewise.\n\t* fix-header.c (v_fatal, fatal): Likewise.\n\t* gcc.c (pfatal_with_name, pfatal_pexecute, fatal, fancy_abort):\n\tLikewise.\n\t* gcov.c (print_usage): Likewise.\n\t* genattr.c (fatal, fancy_abort): Likewise.\n\t* genattrtab.c (fatal, fancy_abort): Likewise.\n\t* gencodes.c (fatal, fancy_abort): Likewise.\n\t* genconfig.c (fatal, fancy_abort): Likewise.\n\t* genemit.c (fatal, fancy_abort): Likewise.\n\t* genextract.c (fatal, fancy_abort): Likewise.\n\t* genflags.c (fatal, fancy_abort): Likewise.\n\t* genopinit.c (fatal, fancy_abort): Likewise.\n\t* genoutput.c (fatal, fancy_abort): Likewise.\n\t* genpeep.c (fatal, fancy_abort): Likewise.\n\t* genrecog.c (fatal, fancy_abort): Likewise.\n\t* libgcc2.c (__eprintf, __default_terminate, __sjthrow,\n\t__sjpopnthrow, __throw): Likewise.\n\t* objc/objc-act.c (objc_fatal): Likewise.\n\t* protoize.c (usage, aux_info_corrupted,\n\tdeclare_source_confusing): Likewise.\n\t* rtl.c (dump_and_abort): Likewise.\n\t* rtl.h (sets_cc0_p): Likewise.\n\t* toplev.c (float_signal, pipe_closed): Likewise.\n\nFrom-SVN: r23084", "tree": {"sha": "45dc8fa31accc97f689780edab32eb15d9b3b9f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45dc8fa31accc97f689780edab32eb15d9b3b9f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf94d1ecc773351392f54859e697f557ba097ed8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf94d1ecc773351392f54859e697f557ba097ed8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf94d1ecc773351392f54859e697f557ba097ed8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf94d1ecc773351392f54859e697f557ba097ed8/comments", "author": null, "committer": null, "parents": [{"sha": "c9ab1458499b9a3e3fcb398cf29e3349e775ee9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9ab1458499b9a3e3fcb398cf29e3349e775ee9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9ab1458499b9a3e3fcb398cf29e3349e775ee9b"}], "stats": {"total": 152, "additions": 118, "deletions": 34}, "files": [{"sha": "3fa3e53946fecc0d8b723580d29c2e80a3ed2c3d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -1,3 +1,53 @@\n+Wed Oct 14 13:26:05 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* cppalloc.c (memory_full): Mark function prototype with\n+\tATTRIBUTE_NORETURN.\n+\n+\t* demangle.h (collect_exit): Likewise.\n+\n+\t* fix-header.c (v_fatal, fatal): Likewise.\n+\n+\t* gcc.c (pfatal_with_name, pfatal_pexecute, fatal, fancy_abort):\n+\tLikewise.\n+\n+\t* gcov.c (print_usage): Likewise.\n+\n+\t* genattr.c (fatal, fancy_abort): Likewise.\n+\n+\t* genattrtab.c (fatal, fancy_abort): Likewise.\n+\n+\t* gencodes.c (fatal, fancy_abort): Likewise.\n+\n+\t* genconfig.c (fatal, fancy_abort): Likewise.\n+\n+\t* genemit.c (fatal, fancy_abort): Likewise.\n+\n+\t* genextract.c (fatal, fancy_abort): Likewise.\n+\n+\t* genflags.c (fatal, fancy_abort): Likewise.\n+\n+\t* genopinit.c (fatal, fancy_abort): Likewise.\n+\n+\t* genoutput.c (fatal, fancy_abort): Likewise.\n+\n+\t* genpeep.c (fatal, fancy_abort): Likewise.\n+\n+\t* genrecog.c (fatal, fancy_abort): Likewise.\n+\n+\t* libgcc2.c (__eprintf, __default_terminate, __sjthrow,\n+\t__sjpopnthrow, __throw): Likewise.\n+\n+\t* objc/objc-act.c (objc_fatal): Likewise.\n+\n+\t* protoize.c (usage, aux_info_corrupted,\n+\tdeclare_source_confusing): Likewise.\n+\n+\t* rtl.c (dump_and_abort): Likewise.\n+\n+\t* rtl.h (sets_cc0_p): Likewise.\n+\n+\t* toplev.c (float_signal, pipe_closed): Likewise.\n+\t\n 1998-10-14  Andreas Schwab  <schwab@issan.cs.uni-dortmund.de>\n \n \t* dwarf2out.c (expand_builtin_dwarf_reg_size): Look at all ranges"}, {"sha": "8f77cc7025b828f8b1984f35bc49c659a1d5a000", "filename": "gcc/cppalloc.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fcppalloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fcppalloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppalloc.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -27,6 +27,8 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n #include \"gansidecl.h\"\n #include \"cpplib.h\"\n \n+static void memory_full PROTO ((void)) ATTRIBUTE_NORETURN;\n+\n static void\n memory_full ()\n {"}, {"sha": "9fdd80df95efe57d7933056b908de421f7298b6e", "filename": "gcc/demangle.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fdemangle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fdemangle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdemangle.h?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -94,7 +94,7 @@ extern void\n collect_execute PARAMS ((char *, char **, char *));\n \n extern void\n-collect_exit PARAMS ((int));\n+collect_exit PARAMS ((int)) ATTRIBUTE_NORETURN;\n \n extern int\n collect_wait PARAMS ((char *));"}, {"sha": "ffeede58362e78ce41a843fbc5cd39a01035e687", "filename": "gcc/fix-header.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Ffix-header.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Ffix-header.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffix-header.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -78,7 +78,8 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n #include \"cpplib.h\"\n #include \"cpphash.h\"\n \n-void fatal PVPROTO ((const char *, ...)) ATTRIBUTE_PRINTF_1;\n+static void v_fatal PROTO ((const char *, va_list)) ATTRIBUTE_NORETURN;\n+void fatal PVPROTO ((const char *, ...)) ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n \n sstring buf;\n "}, {"sha": "47a2362682dd857c23aa8fa54a7f8c8039863907", "filename": "gcc/gcc.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -235,14 +235,14 @@ static int used_arg\t\tPROTO((char *, int));\n static int default_arg\t\tPROTO((char *, int));\n static void set_multilib_dir\tPROTO((void));\n static void print_multilib_info\tPROTO((void));\n-static void pfatal_with_name\tPROTO((char *));\n+static void pfatal_with_name\tPROTO((char *)) ATTRIBUTE_NORETURN;\n static void perror_with_name\tPROTO((char *));\n-static void pfatal_pexecute\tPROTO((char *, char *));\n-static void fatal\t\tPVPROTO((char *, ...));\n+static void pfatal_pexecute\tPROTO((char *, char *)) ATTRIBUTE_NORETURN;\n+static void fatal\t\tPVPROTO((char *, ...)) ATTRIBUTE_NORETURN;\n static void error\t\tPVPROTO((char *, ...));\n static void display_help \tPROTO((void));\n \n-void fancy_abort ();\n+void fancy_abort\t\tPROTO((void)) ATTRIBUTE_NORETURN;\n char *xmalloc ();\n char *xrealloc ();\n "}, {"sha": "bbf91127f4318d6c7aa76cea00d65104413c1a36", "filename": "gcc/gcov.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -218,7 +218,7 @@ static void open_files PROTO ((void));\n static void read_files PROTO ((void));\n static void scan_for_source_files PROTO ((void));\n static void output_data PROTO ((void));\n-static void print_usage PROTO ((void));\n+static void print_usage PROTO ((void)) ATTRIBUTE_NORETURN;\n char * xmalloc ();\n \n int"}, {"sha": "9c062b5d1123fcfc27f6d456c0a0cc432d5d561c", "filename": "gcc/genattr.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenattr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenattr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattr.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -32,8 +32,9 @@ struct obstack *rtl_obstack = &obstack;\n #define obstack_chunk_free free\n \n char *xmalloc PROTO((unsigned));\n-static void fatal PVPROTO ((char *, ...)) ATTRIBUTE_PRINTF_1;\n-void fancy_abort PROTO((void));\n+static void fatal PVPROTO ((char *, ...))\n+  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n+void fancy_abort PROTO((void)) ATTRIBUTE_NORETURN;\n \n /* Define this so we can link with print-rtl.o to get debug_rtx function.  */\n char **insn_name_ptr = 0;"}, {"sha": "593fb26da145973b4c2952782acde23797ac2387", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -119,8 +119,9 @@ struct obstack *temp_obstack = &obstack2;\n /* Define this so we can link with print-rtl.o to get debug_rtx function.  */\n char **insn_name_ptr = 0;\n \n-static void fatal PVPROTO ((char *, ...)) ATTRIBUTE_PRINTF_1;\n-void fancy_abort PROTO((void));\n+static void fatal PVPROTO ((char *, ...))\n+  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n+void fancy_abort PROTO((void)) ATTRIBUTE_NORETURN;\n \n /* enough space to reserve for printing out ints */\n #define MAX_DIGITS (HOST_BITS_PER_INT * 3 / 10 + 3)"}, {"sha": "429e4635f4dba671c74941804a050e034ee3cc2f", "filename": "gcc/gencodes.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgencodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgencodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgencodes.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -34,8 +34,9 @@ struct obstack *rtl_obstack = &obstack;\n #define obstack_chunk_free free\n \n char *xmalloc PROTO((unsigned));\n-static void fatal PVPROTO ((char *, ...)) ATTRIBUTE_PRINTF_1;\n-void fancy_abort PROTO((void));\n+static void fatal PVPROTO ((char *, ...))\n+  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n+void fancy_abort PROTO((void)) ATTRIBUTE_NORETURN;\n \n /* Define this so we can link with print-rtl.o to get debug_rtx function.  */\n char **insn_name_ptr = 0;"}, {"sha": "3e070a99f9c25d02e98af7a9ee66040cc0ad25e8", "filename": "gcc/genconfig.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenconfig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenconfig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconfig.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -50,8 +50,9 @@ static int clobbers_seen_this_insn;\n static int dup_operands_seen_this_insn;\n \n char *xmalloc PROTO((unsigned));\n-static void fatal PVPROTO ((char *, ...)) ATTRIBUTE_PRINTF_1;\n-void fancy_abort PROTO((void));\n+static void fatal PVPROTO ((char *, ...))\n+  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n+void fancy_abort PROTO((void)) ATTRIBUTE_NORETURN;\n \n static void walk_insn_part PROTO((rtx, int, int));\n static void gen_insn PROTO((rtx));"}, {"sha": "c9e2836cc5aac8478dac92d30360e2ee2179f525", "filename": "gcc/genemit.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -31,8 +31,9 @@ struct obstack *rtl_obstack = &obstack;\n #define obstack_chunk_free free\n \n char *xmalloc PROTO((unsigned));\n-static void fatal PVPROTO ((char *, ...)) ATTRIBUTE_PRINTF_1;\n-void fancy_abort PROTO((void));\n+static void fatal PVPROTO ((char *, ...))\n+  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n+void fancy_abort PROTO((void)) ATTRIBUTE_NORETURN;\n \n /* Define this so we can link with print-rtl.o to get debug_rtx function.  */\n char **insn_name_ptr = 0;"}, {"sha": "991d1d0a5e5861b44b6b6278b8fb73835f25683c", "filename": "gcc/genextract.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenextract.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenextract.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenextract.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -100,10 +100,11 @@ static void walk_rtx PROTO ((rtx, char *));\n static void print_path PROTO ((char *));\n char *xmalloc PROTO ((unsigned));\n char *xrealloc PROTO ((char *, unsigned));\n-static void fatal PVPROTO ((char *, ...)) ATTRIBUTE_PRINTF_1;\n+static void fatal PVPROTO ((char *, ...))\n+  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n static char *copystr PROTO ((char *));\n static void mybzero ();\n-void fancy_abort PROTO ((void));\n+void fancy_abort PROTO ((void)) ATTRIBUTE_NORETURN;\n \f\n static void\n gen_insn (insn)"}, {"sha": "c9214abdc9cda1586ecf5b027f7ee8cd1c8e85a2", "filename": "gcc/genflags.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenflags.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenflags.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenflags.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -34,8 +34,9 @@ struct obstack *rtl_obstack = &obstack;\n #define obstack_chunk_free free\n \n char *xmalloc PROTO((unsigned));\n-static void fatal PVPROTO ((char *, ...)) ATTRIBUTE_PRINTF_1;\n-void fancy_abort PROTO((void));\n+static void fatal PVPROTO ((char *, ...))\n+  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n+void fancy_abort PROTO((void)) ATTRIBUTE_NORETURN;\n \n /* Names for patterns.  Need to allow linking with print-rtl.  */\n char **insn_name_ptr;"}, {"sha": "c8d7859e9785f7aec20156428e7f94280a4d53e7", "filename": "gcc/genopinit.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenopinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenopinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenopinit.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -31,8 +31,9 @@ struct obstack *rtl_obstack = &obstack;\n #define obstack_chunk_free free\n \n char *xmalloc PROTO((unsigned));\n-static void fatal PVPROTO ((char *, ...)) ATTRIBUTE_PRINTF_1;\n-void fancy_abort PROTO((void));\n+static void fatal PVPROTO ((char *, ...))\n+  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n+void fancy_abort PROTO((void)) ATTRIBUTE_NORETURN;\n \n /* Many parts of GCC use arrays that are indexed by machine mode and\n    contain the insn codes for pattern in the MD file that perform a given"}, {"sha": "89a37df080ac8b9b32a6d9928d3fdea65b59b2aa", "filename": "gcc/genoutput.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenoutput.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -108,8 +108,9 @@ struct obstack *rtl_obstack = &obstack;\n #define obstack_chunk_free free\n \n char *xmalloc PROTO((unsigned));\n-static void fatal PVPROTO ((char *, ...)) ATTRIBUTE_PRINTF_1;\n-void fancy_abort PROTO((void));\n+static void fatal PVPROTO ((char *, ...))\n+  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n+void fancy_abort PROTO((void)) ATTRIBUTE_NORETURN;\n static void error PVPROTO ((char *, ...)) ATTRIBUTE_PRINTF_1;\n static void mybcopy ();\n static void mybzero ();"}, {"sha": "076f7603560c3448d086804e3d9e8eabd0a51b06", "filename": "gcc/genpeep.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenpeep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenpeep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpeep.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -47,8 +47,9 @@ struct link\n };\n \n char *xmalloc PROTO((unsigned));\n-static void fatal PVPROTO ((char *, ...)) ATTRIBUTE_PRINTF_1;\n-void fancy_abort PROTO((void));\n+static void fatal PVPROTO ((char *, ...))\n+  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n+void fancy_abort PROTO((void)) ATTRIBUTE_NORETURN;\n \n static int max_opno;\n "}, {"sha": "5c1046a6b24bd0c60b0aedea43abed75a3943cc6", "filename": "gcc/genrecog.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -191,10 +191,11 @@ static void change_state\tPROTO((char *, char *, int));\n static char *copystr\t\tPROTO((char *));\n static void mybzero\t\tPROTO((char *, unsigned));\n static void mybcopy\t\tPROTO((char *, char *, unsigned));\n-static void fatal\t\tPVPROTO((char *, ...)) ATTRIBUTE_PRINTF_1;\n+static void fatal\t\tPVPROTO((char *, ...))\n+  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n char *xrealloc\t\t\tPROTO((char *, unsigned));\n char *xmalloc\t\t\tPROTO((unsigned));\n-void fancy_abort\t\tPROTO((void));\n+void fancy_abort\t\tPROTO((void)) ATTRIBUTE_NORETURN;\n \f\n /* Construct and return a sequence of decisions\n    that will recognize INSN."}, {"sha": "09e3c7143ea7d0ff9b8ab6fc010c84b39d1a2c7e", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -1403,6 +1403,9 @@ __builtin_saveregs ()\n #undef NULL /* Avoid errors if stdio.h and our stddef.h mismatch.  */\n #include <stdio.h>\n /* This is used by the `assert' macro.  */\n+extern void __eprintf (const char *, const char *, unsigned int, const char *)\n+  __attribute__ ((__noreturn__));\n+\n void\n __eprintf (const char *string, const char *expression,\n \t   unsigned int line, const char *filename)\n@@ -3023,6 +3026,8 @@ int atexit (func_ptr func)\n \n /* Shared exception handling support routines.  */\n \n+extern void __default_terminate (void) __attribute__ ((__noreturn__));\n+\n void\n __default_terminate ()\n {\n@@ -3226,6 +3231,8 @@ __get_dynamic_handler_chain ()\n    dynamic handler chain, and use longjmp to transfer back to the associated\n    handler.  */\n \n+extern void __sjthrow (void) __attribute__ ((__noreturn__));\n+\n void\n __sjthrow ()\n {\n@@ -3302,6 +3309,8 @@ __sjthrow ()\n    then throw.  This is used to skip the first handler, and transfer\n    control to the next handler in the dynamic handler stack.  */\n \n+extern void __sjpopnthrow (void) __attribute__ ((__noreturn__));\n+\n void\n __sjpopnthrow ()\n {\n@@ -3628,6 +3637,8 @@ next_stack_level (void *pc, frame_state *udata, frame_state *caller_udata)\n    If we find one, then we unwind the frames down to the one that\n    has the handler and transfer control into the handler.  */\n \n+extern void __throw(void) __attribute__ ((__noreturn__));\n+\n void\n __throw ()\n {"}, {"sha": "9f8bc51a21a409c3108da1d0969547431dcd5385", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -284,7 +284,8 @@ static void dump_interface\t\t\tPROTO((FILE *, tree));\n \n /* Everything else.  */\n \n-static void objc_fatal\t\t\t\tPROTO((void));\n+static void objc_fatal\t\t\t\tPROTO((void))\n+  ATTRIBUTE_NORETURN;\n static tree define_decl\t\t\t\tPROTO((tree, tree));\n static tree lookup_method_in_protocol_list\tPROTO((tree, tree, int));\n static tree lookup_protocol_in_reflist\t\tPROTO((tree, tree));"}, {"sha": "3ba8b96be8b59c068d54858277b9f40e32d3a384", "filename": "gcc/protoize.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -121,6 +121,10 @@ extern int pwait PROTO ((int, int *, int));\n #define PEXECUTE_LAST   2\n #define PEXECUTE_SEARCH 4\n \n+static void usage PROTO ((void)) ATTRIBUTE_NORETURN;\n+static void aux_info_corrupted PROTO ((void)) ATTRIBUTE_NORETURN;\n+static void declare_source_confusing PROTO ((const char *)) ATTRIBUTE_NORETURN;\n+\n /* Aliases for pointers to void.\n    These were made to facilitate compilation with old brain-dead DEC C\n    compilers which didn't properly grok `void*' types.  */"}, {"sha": "2201c408d33224d230ee51dc9bc2dcca31225a32", "filename": "gcc/rtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Frtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Frtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -195,7 +195,7 @@ char *reg_note_name[] = { \"\", \"REG_DEAD\", \"REG_INC\", \"REG_EQUIV\", \"REG_WAS_0\",\n \t\t\t  \"REG_BR_PRED\", \"REG_EH_CONTEXT\",\n \t\t\t  \"REG_FRAME_RELATED_EXPR\" };\n \n-static void dump_and_abort\tPROTO((int, int, FILE *));\n+static void dump_and_abort\tPROTO((int, int, FILE *)) ATTRIBUTE_NORETURN;\n static void read_name\t\tPROTO((char *, FILE *));\n \f\n /* Allocate an rtx vector of N elements."}, {"sha": "7a0259305c347718df98c9cd434e27d396b6477c", "filename": "gcc/rtl.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -1242,7 +1242,11 @@ extern void cse_end_of_basic_block\tPROTO ((rtx,\n extern int comparison_dominates_p\tPROTO ((enum rtx_code, enum rtx_code));\n extern int condjump_p\t\t\tPROTO ((rtx));\n extern int simplejump_p\t\t\tPROTO ((rtx));\n-extern int sets_cc0_p\t\t\tPROTO ((rtx));\n+extern int sets_cc0_p\t\t\tPROTO ((rtx))\n+#ifndef HAVE_cc0\n+  ATTRIBUTE_NORETURN\n+#endif\n+  ;\n extern int invert_jump\t\t\tPROTO ((rtx, rtx));\n extern int rtx_renumbered_equal_p\tPROTO ((rtx, rtx));\n extern int true_regnum\t\t\tPROTO ((rtx));"}, {"sha": "23428abbf6b707ae54bf074edd9dea6f2ee7df90", "filename": "gcc/toplev.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf94d1ecc773351392f54859e697f557ba097ed8/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=bf94d1ecc773351392f54859e697f557ba097ed8", "patch": "@@ -195,8 +195,8 @@ static void v_pedwarn_with_decl PROTO((tree, char *, va_list));\n static void v_pedwarn_with_file_and_line PROTO((char *, int, char *, va_list));\n static void vsorry PROTO((char *, va_list));\n static void v_really_sorry PROTO((char *, va_list)) ATTRIBUTE_NORETURN;\n-static void float_signal PROTO((int));\n-static void pipe_closed PROTO((int));\n+static void float_signal PROTO((int)) ATTRIBUTE_NORETURN;\n+static void pipe_closed PROTO((int)) ATTRIBUTE_NORETURN;\n static void output_lang_identify PROTO((FILE *));\n static void open_dump_file PROTO((char *, char *));\n static void close_dump_file PROTO((void (*) (FILE *, rtx), rtx));"}]}