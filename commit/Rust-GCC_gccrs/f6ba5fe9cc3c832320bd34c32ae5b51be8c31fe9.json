{"sha": "f6ba5fe9cc3c832320bd34c32ae5b51be8c31fe9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZiYTVmZTljYzNjODMyMzIwYmQzNGMzMmFlNWI1MWJlOGMzMWZlOQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-17T01:37:08Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-17T01:37:08Z"}, "message": "(start_class): For an INTERFACE_TYPE, push to permanent obstack.\n\n(build_message_expr): Use TYPE_MAIN_VARIANT when comparing types.\n\nFrom-SVN: r2494", "tree": {"sha": "4547332ef737a79b760f378482594a6b3bf45896", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4547332ef737a79b760f378482594a6b3bf45896"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6ba5fe9cc3c832320bd34c32ae5b51be8c31fe9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6ba5fe9cc3c832320bd34c32ae5b51be8c31fe9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6ba5fe9cc3c832320bd34c32ae5b51be8c31fe9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6ba5fe9cc3c832320bd34c32ae5b51be8c31fe9/comments", "author": null, "committer": null, "parents": [{"sha": "5baa9d1f70223164a16d4fbb81f0d1f43743fee2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5baa9d1f70223164a16d4fbb81f0d1f43743fee2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5baa9d1f70223164a16d4fbb81f0d1f43743fee2"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "554bfd7fe1250cc453c8c323480b96a4f9c386e2", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6ba5fe9cc3c832320bd34c32ae5b51be8c31fe9/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6ba5fe9cc3c832320bd34c32ae5b51be8c31fe9/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=f6ba5fe9cc3c832320bd34c32ae5b51be8c31fe9", "patch": "@@ -2624,7 +2624,8 @@ build_message_expr (mess)\n       else if (TREE_CODE (receiver) == CALL_EXPR && rtype == id_type\n \t       && (class_ident = receiver_is_class_object (receiver)))\n \t;\n-      else if (rtype != id_type && rtype != class_type)\n+      else if (TYPE_MAIN_VARIANT (rtype) != TYPE_MAIN_VARIANT (id_type)\n+\t       && TYPE_MAIN_VARIANT (rtype) != TYPE_MAIN_VARIANT (class_type))\n \t{\n \t  bzero (errbuf, BUFSIZE);\n \t  warning (\"invalid receiver type `%s'\", gen_declaration (rtype, errbuf));\n@@ -2686,7 +2687,7 @@ build_message_expr (mess)\n \n   /* Determine operation return type.  */\n \n-  if (rtype == super_type)\n+  if (TYPE_MAIN_VARIANT (rtype) == TYPE_MAIN_VARIANT (super_type))\n     {\n       tree iface;\n \n@@ -3413,6 +3414,14 @@ check_methods (chain, list, mtype)\n     }\n }\n \f\n+/* Make sure that the class CLASS_NAME is defined\n+   CODE says which kind of thing CLASS_NAME ought to be.\n+   It can be INTERFACE_TYPE, IMPLEMENTATION_TYPE, PROTOCOL_TYPE\n+   or CATEGORY_TYPE.\n+\n+   If CODE is INTERFACE_TYPE, we also do a push_obstacks_nochange\n+   whose matching pop is in continue_class.  */\n+\n tree\n start_class (code, class_name, super_name)\n      enum tree_code code;\n@@ -3421,8 +3430,14 @@ start_class (code, class_name, super_name)\n {\n   tree class;\n \n+  if (code == INTERFACE_TYPE)\n+    {\n+      push_obstacks_nochange ();\n+      end_temporary_allocation ();\n+    }\n+\n   if (!doing_objc_thang)\n-     fatal (\"Objective-C text in C source file\");\n+    fatal (\"Objective-C text in C source file\");\n \n   class = make_node (code);\n "}]}