{"sha": "274462ef9ac65b4ce119d083eda59284714a760c", "node_id": "C_kwDOANBUbNoAKDI3NDQ2MmVmOWFjNjViNGNlMTE5ZDA4M2VkYTU5Mjg0NzE0YTc2MGM", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-13T20:55:18Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-14T08:35:03Z"}, "message": "Partially revert 5c6546ca7d8cab1f1c129f5b55f709e2ceee0f94\n\ngcc/ChangeLog:\n\n\t* doc/gcc/gcc-command-options/options-that-control-static-analysis.rst:\n\tRevert.", "tree": {"sha": "3c7520b2e6179094e49ec19071137f7f642652dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c7520b2e6179094e49ec19071137f7f642652dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/274462ef9ac65b4ce119d083eda59284714a760c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/274462ef9ac65b4ce119d083eda59284714a760c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/274462ef9ac65b4ce119d083eda59284714a760c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/274462ef9ac65b4ce119d083eda59284714a760c/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9cd0c4e0ea72522adfc515fe01bd8fb5b993112", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9cd0c4e0ea72522adfc515fe01bd8fb5b993112", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9cd0c4e0ea72522adfc515fe01bd8fb5b993112"}], "stats": {"total": 29, "additions": 0, "deletions": 29}, "files": [{"sha": "c0e06ea5b2d47e9dcf9bf3150d36287d96628d39", "filename": "gcc/doc/gcc/gcc-command-options/options-that-control-static-analysis.rst", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/274462ef9ac65b4ce119d083eda59284714a760c/gcc%2Fdoc%2Fgcc%2Fgcc-command-options%2Foptions-that-control-static-analysis.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/274462ef9ac65b4ce119d083eda59284714a760c/gcc%2Fdoc%2Fgcc%2Fgcc-command-options%2Foptions-that-control-static-analysis.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc%2Fgcc-command-options%2Foptions-that-control-static-analysis.rst?ref=274462ef9ac65b4ce119d083eda59284714a760c", "patch": "@@ -19,7 +19,6 @@ Options That Control Static Analysis\n   Enabling this option effectively enables the following warnings:\n \n   :option:`-Wanalyzer-allocation-size` |gol|\n-  :option:`-Wanalyzer-deref-before-check` |gol|\n   :option:`-Wanalyzer-double-fclose` |gol|\n   :option:`-Wanalyzer-double-free` |gol|\n   :option:`-Wanalyzer-exposure-through-output-file` |gol|\n@@ -89,33 +88,6 @@ Options That Control Static Analysis\n \n   Default setting; overrides :option:`-Wno-analyzer-allocation-size`.\n \n-.. option:: -Wno-analyzer-deref-before-check\n-\n-  This warning requires :option:`-fanalyzer`, which enables it; use\n-  :option:`-Wno-analyzer-deref-before-check`\n-  to disable it.\n-\n-  This diagnostic warns for paths through the code in which a pointer\n-  is checked for ``NULL`` *after* it has already been\n-  dereferenced, suggesting that the pointer could have been NULL.\n-  Such cases suggest that the check for NULL is either redundant,\n-  or that it needs to be moved to before the pointer is dereferenced.\n-\n-  This diagnostic also considers values passed to a function argument\n-  marked with ``__attribute__((nonnull))`` as requiring a non-NULL\n-  value, and thus will complain if such values are checked for ``NULL``\n-  after returning from such a function call.\n-\n-  This diagnostic is unlikely to be reported when any level of optimization\n-  is enabled, as GCC's optimization logic will typically consider such\n-  checks for NULL as being redundant, and optimize them away before the\n-  analyzer \"sees\" them.  Hence optimization should be disabled when\n-  attempting to trigger this diagnostic.\n-\n-.. option:: -Wanalyzer-deref-before-check\n-\n-  Default setting; overrides :option:`-Wno-analyzer-deref-before-check`.\n-\n .. option:: -Wno-analyzer-double-fclose\n \n   This warning requires :option:`-fanalyzer`, which enables it; use\n@@ -853,7 +825,6 @@ The following options control the analyzer.\n     Currently, :option:`-fanalyzer-checker=taint` disables the\n     following warnings from :option:`-fanalyzer` :\n \n-    :option:`-Wanalyzer-deref-before-check` |gol|\n     :option:`-Wanalyzer-double-fclose` |gol|\n     :option:`-Wanalyzer-double-free`  |gol|\n     :option:`-Wanalyzer-exposure-through-output-file`  |gol|"}]}