{"sha": "dd9133238205adddf820bff279575c2348f8c13a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ5MTMzMjM4MjA1YWRkZGY4MjBiZmYyNzk1NzVjMjM0OGY4YzEzYQ==", "commit": {"author": {"name": "Michael Haubenwallner", "email": "michael.haubenwallner@ssi-schaefer.com", "date": "2014-12-09T20:48:48Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2014-12-09T20:48:48Z"}, "message": "(libgcc_s) Optional filename-based shared library versioning on AIX.\n\n2014-12-09  Michael Haubenwallner <michael.haubenwallner@ssi-schaefer.com>\n\n        (libgcc_s) Optional filename-based shared library versioning on AIX.\n        * gcc/doc/install.texi: Describe --with-aix-soname option.\n        * Makefile.in (with_aix_soname): Define.\n        * config/rs6000/t-slibgcc-aix: Act upon --with-aix-soname option.\n        * configure.ac: Accept --with-aix-soname=aix|svr4|both option.\n        * configure: Recreate.\n\nFrom-SVN: r218539", "tree": {"sha": "10510d74a5813885f41938cf584b9c70b5f0e1b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10510d74a5813885f41938cf584b9c70b5f0e1b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd9133238205adddf820bff279575c2348f8c13a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd9133238205adddf820bff279575c2348f8c13a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd9133238205adddf820bff279575c2348f8c13a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd9133238205adddf820bff279575c2348f8c13a/comments", "author": {"login": "haubi", "id": 2249625, "node_id": "MDQ6VXNlcjIyNDk2MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/2249625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haubi", "html_url": "https://github.com/haubi", "followers_url": "https://api.github.com/users/haubi/followers", "following_url": "https://api.github.com/users/haubi/following{/other_user}", "gists_url": "https://api.github.com/users/haubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/haubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haubi/subscriptions", "organizations_url": "https://api.github.com/users/haubi/orgs", "repos_url": "https://api.github.com/users/haubi/repos", "events_url": "https://api.github.com/users/haubi/events{/privacy}", "received_events_url": "https://api.github.com/users/haubi/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2712de789246fe33190a41d2a8d7d652027a34b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2712de789246fe33190a41d2a8d7d652027a34b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2712de789246fe33190a41d2a8d7d652027a34b8"}], "stats": {"total": 252, "additions": 236, "deletions": 16}, "files": [{"sha": "20bcbaa2abaffc4ab50a562cbc9677ed9a816017", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd9133238205adddf820bff279575c2348f8c13a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd9133238205adddf820bff279575c2348f8c13a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd9133238205adddf820bff279575c2348f8c13a", "patch": "@@ -1,3 +1,7 @@\n+2014-12-09  Michael Haubenwallner <michael.haubenwallner@ssi-schaefer.com>\n+\n+\t* doc/install.texi: Describe --with-aix-soname option.\n+\n 2014-12-09  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/aarch64/aarch64-simd.md (aarch64_get_lanedi): Remove."}, {"sha": "488c1f83a520e8dc597f11aae118880d99d1ca15", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd9133238205adddf820bff279575c2348f8c13a/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd9133238205adddf820bff279575c2348f8c13a/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=dd9133238205adddf820bff279575c2348f8c13a", "patch": "@@ -1430,6 +1430,114 @@ particularly useful if you intend to use several versions of GCC in\n parallel.  This is currently supported by @samp{libgfortran},\n @samp{libjava}, @samp{libstdc++}, and @samp{libobjc}.\n \n+@item @anchor{WithAixSoname}--with-aix-soname=@samp{aix}, @samp{svr4} or @samp{both}\n+Traditional AIX shared library versioning (versioned @code{Shared Object}\n+files as members of unversioned @code{Archive Library} files named\n+@samp{lib.a}) causes numerous headaches for package managers. However,\n+@code{Import Files} as members of @code{Archive Library} files allow for\n+@strong{filename-based versioning} of shared libraries as seen on Linux/SVR4,\n+where this is called the \"SONAME\". But as they prevent static linking,\n+@code{Import Files} may be used with @code{Runtime Linking} only, where the\n+linker does search for @samp{libNAME.so} before @samp{libNAME.a} library\n+filenames with the @samp{-lNAME} linker flag.\n+\n+@anchor{AixLdCommand}For detailed information please refer to the AIX\n+@uref{http://www-01.ibm.com/support/knowledgecenter/search/%22the%20ld%20command%2C%20also%20called%20the%20linkage%20editor%20or%20binder%22,,ld\n+Command} reference.\n+\n+As long as shared library creation is enabled, upon:\n+@table @code\n+@item --with-aix-soname=aix\n+@item --with-aix-soname=both\n+ A (traditional AIX) @code{Shared Archive Library} file is created:\n+ @itemize @bullet\n+  @item using the @samp{libNAME.a} filename scheme\n+  @item with the @code{Shared Object} file as archive member named\n+  @samp{libNAME.so.V} (except for @samp{libgcc_s}, where the @code{Shared\n+  Object} file is named @samp{shr.o} for backwards compatibility), which\n+  @itemize @minus\n+   @item is used for runtime loading from inside the @samp{libNAME.a} file\n+   @item is used for dynamic loading via\n+   @code{dlopen(\"libNAME.a(libNAME.so.V)\", RTLD_MEMBER)}\n+   @item is used for shared linking\n+   @item is used for static linking, so no separate @code{Static Archive\n+   Library} file is needed\n+  @end itemize\n+ @end itemize\n+@item --with-aix-soname=both\n+@item --with-aix-soname=svr4\n+ A (second) @code{Shared Archive Library} file is created:\n+ @itemize @bullet\n+ @item using the @samp{libNAME.so.V} filename scheme\n+ @item with the @code{Shared Object} file as archive member named\n+ @samp{shr.o}, which\n+  @itemize @minus\n+   @item is created with the @code{-G linker flag}\n+   @item has the @code{F_LOADONLY} flag set\n+   @item is used for runtime loading from inside the @samp{libNAME.so.V} file\n+   @item is used for dynamic loading via @code{dlopen(\"libNAME.so.V(shr.o)\",\n+   RTLD_MEMBER)}\n+  @end itemize\n+ @item with the @code{Import File} as archive member named @samp{shr.imp},\n+ which\n+  @itemize @minus\n+   @item refers to @samp{libNAME.so.V(shr.o)} as the \"SONAME\", to be recorded\n+   in the @code{Loader Section} of subsequent binaries\n+   @item indicates whether @samp{libNAME.so.V(shr.o)} is 32 or 64 bit\n+   @item lists all the public symbols exported by @samp{lib.so.V(shr.o)},\n+   eventually decorated with the @code{@samp{weak} Keyword}\n+   @item is necessary for shared linking against @samp{lib.so.V(shr.o)}\n+   @end itemize\n+  @end itemize\n+  A symbolic link using the @samp{libNAME.so} filename scheme is created:\n+  @itemize @bullet\n+  @item pointing to the @samp{libNAME.so.V} @code{Shared Archive Library} file\n+  @item to permit the @code{ld Command} to find @samp{lib.so.V(shr.imp)} via\n+  the @samp{-lNAME} argument (requires @code{Runtime Linking} to be enabled)\n+  @item to permit dynamic loading of @samp{lib.so.V(shr.o)} without the need\n+  to specify the version number via @code{dlopen(\"libNAME.so(shr.o)\",\n+  RTLD_MEMBER)}\n+  @end itemize\n+@end table\n+\n+As long as static library creation is enabled, upon:\n+@table @code\n+@item --with-aix-soname=svr4\n+ A @code{Static Archive Library} is created:\n+ @itemize @bullet\n+ @item using the @samp{libNAME.a} filename scheme\n+ @item with all the @code{Static Object} files as archive members, which\n+  @itemize @minus\n+   @item are used for static linking\n+  @end itemize\n+ @end itemize\n+@end table\n+\n+While the aix-soname=@samp{svr4} option does not create @code{Shared Object}\n+files as members of unversioned @code{Archive Library} files any more, package\n+managers still are responsible to\n+@uref{./specific.html#TransferAixShobj,,transfer} @code{Shared Object} files\n+found as member of a previously installed unversioned @code{Archive Library}\n+file into the newly installed @code{Archive Library} file with the same\n+filename.\n+\n+@emph{WARNING:} Creating @code{Shared Object} files with @code{Runtime Linking}\n+enabled may bloat the TOC, eventually leading to @code{TOC overflow} errors,\n+requiring the use of either the @option{-Wl,-bbigtoc} linker flag (seen to\n+break with the @code{GDB} debugger) or some of the TOC-related compiler flags,\n+@ifnothtml\n+@xref{RS/6000 and PowerPC Options,, RS/6000 and PowerPC Options, gcc,\n+Using the GNU Compiler Collection (GCC)}.\n+@end ifnothtml\n+@ifhtml\n+see ``RS/6000 and PowerPC Options'' in the main manual.\n+@end ifhtml\n+\n+@option{--with-aix-soname} is currently supported by @samp{libgcc_s} only, so\n+this option is still experimental and not for normal use yet.\n+\n+Default is the traditional behaviour @option{--with-aix-soname=@samp{aix}}.\n+\n @item --enable-languages=@var{lang1},@var{lang2},@dots{}\n Specify that only a particular subset of compilers and\n their runtime libraries should be built.  For a list of valid values for\n@@ -3878,6 +3986,7 @@ APAR IY26685 (AIX 4.3) or APAR IY25528 (AIX 5.1).  It also requires a\n fix for another AIX Assembler bug and a co-dependent AIX Archiver fix\n referenced as APAR IY53606 (AIX 5.2) or as APAR IY54774 (AIX 5.1)\n \n+@anchor{TransferAixShobj}\n @samp{libstdc++} in GCC 3.4 increments the major version number of the\n shared object and GCC installation places the @file{libstdc++.a}\n shared library in a common location which will overwrite the and GCC\n@@ -3908,6 +4017,11 @@ Archive the runtime-only shared object in the GCC 3.4\n % ar -q libstdc++.a libstdc++.so.4 libstdc++.so.5\n @end smallexample\n \n+Eventually, the\n+@uref{./configure.html#WithAixSoname,,@option{--with-aix-soname=svr4}}\n+configure option may drop the need for this procedure for libraries that\n+support it.\n+\n Linking executables and shared libraries may produce warnings of\n duplicate symbols.  The assembly files generated by GCC for AIX always\n have included multiple symbol definitions for certain global variable"}, {"sha": "2ee1476e79852e69c9a77d981b662ef9fff9bf95", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd9133238205adddf820bff279575c2348f8c13a/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd9133238205adddf820bff279575c2348f8c13a/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=dd9133238205adddf820bff279575c2348f8c13a", "patch": "@@ -1,3 +1,10 @@\n+2015-12-09  Michael Haubenwallner <michael.haubenwallner@ssi-schaefer.com>\n+\n+\t* Makefile.in (with_aix_soname): Define.\n+\t* config/rs6000/t-slibgcc-aix: Act upon --with-aix-soname option.\n+\t* configure.ac: Accept --with-aix-soname=aix|svr4|both option.\n+\t* configure: Recreate.\n+\n 2014-12-05  Olivier Hainque  <hainque@adacore.com>\n \n \t* unwind-dw2.c (DWARF_REG_TO_UNWIND_COLUMN): Remove default def,"}, {"sha": "2de307e91cc9b57bbee69947662e138e37b25560", "filename": "libgcc/config/rs6000/t-slibgcc-aix", "status": "modified", "additions": 66, "deletions": 16, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd9133238205adddf820bff279575c2348f8c13a/libgcc%2Fconfig%2Frs6000%2Ft-slibgcc-aix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd9133238205adddf820bff279575c2348f8c13a/libgcc%2Fconfig%2Frs6000%2Ft-slibgcc-aix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Ft-slibgcc-aix?ref=dd9133238205adddf820bff279575c2348f8c13a", "patch": "@@ -16,24 +16,74 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-# Build a shared libgcc library.\n-SHLIB_EXT = .a\n-SHLIB_LINK = $(CC) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n-\t-Wl,-bE:@shlib_map_file@ -o @multilib_dir@/shr.o \\\n-\t@multilib_flags@ @shlib_objs@ -lc \\\n-\t`case @multilib_dir@ in \\\n-\t*pthread*) echo -L$(TARGET_SYSTEM_ROOT)/usr/lib/threads -lpthreads -lc_r $(TARGET_SYSTEM_ROOT)/usr/lib/libc.a ;; \\\n-\t*) echo -lc ;; esac` ; \\\n-\trm -f @multilib_dir@/tmp-@shlib_base_name@.a ; \\\n-\t$(AR_CREATE_FOR_TARGET) @multilib_dir@/tmp-@shlib_base_name@.a \\\n-\t@multilib_dir@/shr.o ; \\\n-\tmv @multilib_dir@/tmp-@shlib_base_name@.a \\\n-\t   @multilib_dir@/@shlib_base_name@.a ; \\\n-\trm -f @multilib_dir@/shr.o\n+# Build a shared libgcc library according to --with-aix-soname selection:\n+# aix-soname=aix:\n+#       libgcc_s.a(shr.o)                # traditional (-bnortl)\n+#\n+# aix-soname=both:\n+#       libgcc_s.a(shr.o)                # traditional (-bnortl)\n+#       libgcc_s.so.1(shrXX.o,shrXX.imp) # the SONAME (-G)\n+#       libgcc_s.so -> libgcc_s.so.1     # the symlink\n+#\n+# aix-soname=svr4:\n+#       libgcc_s.so.1(shrXX.o,shrXX.imp) # the SONAME (-G)\n+#       libgcc_s.so -> libgcc_s.so.1     # the symlink\n+SHLIB_EXT_aix = .a\n+SHLIB_EXT_both = .so\n+SHLIB_EXT_svr4 = .so\n+SHLIB_EXT = $(SHLIB_EXT_$(with_aix_soname))\n+SHLIB_SOVERSION = 1\n+SHLIB_SONAME = @shlib_base_name@.so.$(SHLIB_SOVERSION)\n+SHLIB_LINK = \\\n+\tif test svr4 != $(with_aix_soname) ; then \\\n+\t  $(CC) $(LIBGCC2_CFLAGS) -shared -Wl,-bnortl -nodefaultlibs \\\n+\t  -Wl,-bE:@shlib_map_file@ -o @multilib_dir@/shr.o \\\n+\t  @multilib_flags@ @shlib_objs@ -lc \\\n+\t  `case @multilib_dir@ in \\\n+\t  *pthread*) echo -L$(TARGET_SYSTEM_ROOT)/usr/lib/threads -lpthreads -lc_r $(TARGET_SYSTEM_ROOT)/usr/lib/libc.a ;; \\\n+\t  *) echo -lc ;; esac` ; \\\n+\t  rm -f @multilib_dir@/tmp-@shlib_base_name@.a ; \\\n+\t  $(AR_CREATE_FOR_TARGET) @multilib_dir@/tmp-@shlib_base_name@.a \\\n+\t    @multilib_dir@/shr.o ; \\\n+\t  mv @multilib_dir@/tmp-@shlib_base_name@.a \\\n+\t     @multilib_dir@/@shlib_base_name@.a ; \\\n+\t  rm -f @multilib_dir@/shr.o ; \\\n+\tfi ; \\\n+\tif test aix != $(with_aix_soname) ; then \\\n+\t  case @multilib_dir@ in *64*) shr='shr_64' ;; *) shr='shr' ;; esac ; \\\n+\t  $(CC) $(LIBGCC2_CFLAGS) -shared -Wl,-G -nodefaultlibs \\\n+\t  -Wl,-bE:@shlib_map_file@ -o @multilib_dir@/$$shr.o \\\n+\t  @multilib_flags@ @shlib_objs@ -lc \\\n+\t  `case @multilib_dir@ in \\\n+\t  *pthread*) echo -L$(TARGET_SYSTEM_ROOT)/usr/lib/threads -lpthreads -lc_r $(TARGET_SYSTEM_ROOT)/usr/lib/libc.a ;; \\\n+\t  *) echo -lc ;; esac` ; \\\n+\t  $(STRIP_FOR_TARGET) -X32_64 -e @multilib_dir@/$$shr.o ; \\\n+\t  { echo \"\\#! $(SHLIB_SONAME)($$shr.o)\" ; \\\n+\t    case @multilib_dir@ in *64*) echo '\\# 64' ;; *) echo '\\# 32' ;; esac ; \\\n+\t    cat @shlib_map_file@ ; \\\n+\t  } > @multilib_dir@/$$shr.imp ; \\\n+\t  rm -f @multilib_dir@/tmp-$(SHLIB_SONAME) ; \\\n+\t  $(AR_CREATE_FOR_TARGET) @multilib_dir@/tmp-$(SHLIB_SONAME) \\\n+\t    @multilib_dir@/$$shr.imp @multilib_dir@/$$shr.o ; \\\n+\t  mv @multilib_dir@/tmp-$(SHLIB_SONAME) \\\n+\t     @multilib_dir@/$(SHLIB_SONAME) ; \\\n+\t  rm -f @multilib_dir@/@shlib_base_name@.so ; \\\n+\t  $(LN_S) $(SHLIB_SONAME) @multilib_dir@/@shlib_base_name@.so ; \\\n+\t  rm -f @multilib_dir@/$$shr.imp @multilib_dir@/$$shr.o ; \\\n+\tfi\n SHLIB_INSTALL = \\\n \t$(mkinstalldirs) $(DESTDIR)$(slibdir)@shlib_slibdir_qual@; \\\n-\t$(INSTALL_DATA) @multilib_dir@/@shlib_base_name@.a \\\n-\t\t$(DESTDIR)$(slibdir)@shlib_slibdir_qual@/\n+\tif test svr4 != $(with_aix_soname) ; then \\\n+\t  $(INSTALL_DATA) @multilib_dir@/@shlib_base_name@.a \\\n+\t\t  $(DESTDIR)$(slibdir)@shlib_slibdir_qual@/ ; \\\n+\tfi ; \\\n+\tif test aix != $(with_aix_soname) ; then \\\n+\t  $(INSTALL_DATA) @multilib_dir@/$(SHLIB_SONAME) \\\n+\t\t  $(DESTDIR)$(slibdir)@shlib_slibdir_qual@/ ; \\\n+\t  rm -f $(DESTDIR)$(slibdir)@shlib_slibdir_qual@/@shlib_base_name@.so ; \\\n+\t  $(LN_S) $(SHLIB_SONAME) \\\n+\t\t  $(DESTDIR)$(slibdir)@shlib_slibdir_qual@/@shlib_base_name@.so ; \\\n+\tfi\n SHLIB_LIBS = -lc `case @multilib_dir@ in *pthread*) echo -lpthread ;; esac`\n SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk\n SHLIB_MAPFILES = libgcc-std.ver"}, {"sha": "8480dd132c7a0182c0fec843da3040ec6e1d70b6", "filename": "libgcc/configure", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd9133238205adddf820bff279575c2348f8c13a/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd9133238205adddf820bff279575c2348f8c13a/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=dd9133238205adddf820bff279575c2348f8c13a", "patch": "@@ -610,6 +610,7 @@ build_os\n build_vendor\n build_cpu\n build\n+with_aix_soname\n enable_vtable_verify\n enable_shared\n libgcc_topdir\n@@ -659,6 +660,7 @@ with_cross_host\n with_ld\n enable_shared\n enable_vtable_verify\n+with_aix_soname\n enable_version_specific_runtime_libs\n with_slibdir\n enable_maintainer_mode\n@@ -1317,6 +1319,9 @@ Optional Packages:\n   --with-target-subdir=SUBDIR      Configuring in a subdirectory for target\n   --with-cross-host=HOST           Configuring with a cross compiler\n   --with-ld               arrange to use the specified ld (full pathname)\n+  --with-aix-soname=aix|svr4|both\n+                          shared library versioning (aka \"SONAME\") variant to\n+                          provide on AIX\n   --with-slibdir=DIR      shared libraries in DIR LIBDIR\n   --with-build-libsubdir=DIR  Directory where to find libraries for build system\n   --with-system-libunwind use installed libunwind\n@@ -2166,6 +2171,29 @@ fi\n \n \n \n+\n+# Check whether --with-aix-soname was given.\n+if test \"${with_aix_soname+set}\" = set; then :\n+  withval=$with_aix_soname; case \"${host}:${enable_shared}\" in\n+ power*-*-aix[5-9]*:yes)\n+   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking which variant of shared library versioning to provide for shared libgcc\" >&5\n+$as_echo_n \"checking which variant of shared library versioning to provide for shared libgcc... \" >&6; }\n+   case ${withval} in\n+     aix|svr4|both) ;;\n+     *) as_fn_error \"Unknown argument to --with-aix-soname\" \"$LINENO\" 5;;\n+   esac\n+   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $withval\" >&5\n+$as_echo \"$withval\" >&6; }\n+   ;;\n+ *) with_aix_soname=aix ;;\n+ esac\n+\n+else\n+  with_aix_soname=aix\n+fi\n+\n+\n+\n # Make sure we can run config.sub.\n $SHELL \"$ac_aux_dir/config.sub\" sun4 >/dev/null 2>&1 ||\n   as_fn_error \"cannot run $SHELL $ac_aux_dir/config.sub\" \"$LINENO\" 5"}, {"sha": "23d5f35af57dc658f079f3215769860fc221b7e7", "filename": "libgcc/configure.ac", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd9133238205adddf820bff279575c2348f8c13a/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd9133238205adddf820bff279575c2348f8c13a/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=dd9133238205adddf820bff279575c2348f8c13a", "patch": "@@ -76,6 +76,23 @@ AC_ARG_ENABLE(vtable-verify,\n [enable_vtable_verify=no])\n AC_SUBST(enable_vtable_verify)\n \n+AC_ARG_WITH(aix-soname,\n+[AS_HELP_STRING([--with-aix-soname=aix|svr4|both],\n+    [shared library versioning (aka \"SONAME\") variant to provide on AIX])],\n+[case \"${host}:${enable_shared}\" in\n+ power*-*-aix[[5-9]]*:yes)\n+   AC_MSG_CHECKING([which variant of shared library versioning to provide for shared libgcc])\n+   case ${withval} in\n+     aix|svr4|both) ;;\n+     *) AC_MSG_ERROR([Unknown argument to --with-aix-soname]);;\n+   esac\n+   AC_MSG_RESULT($withval)\n+   ;;\n+ *) with_aix_soname=aix ;;\n+ esac\n+], [with_aix_soname=aix])\n+AC_SUBST(with_aix_soname)\n+\n GCC_PICFLAG\n AC_SUBST(PICFLAG)\n "}]}