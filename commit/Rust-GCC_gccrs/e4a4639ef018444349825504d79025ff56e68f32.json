{"sha": "e4a4639ef018444349825504d79025ff56e68f32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRhNDYzOWVmMDE4NDQ0MzQ5ODI1NTA0ZDc5MDI1ZmY1NmU2OGYzMg==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-10-02T23:16:51Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-10-02T23:16:51Z"}, "message": "ontext, adds argument to indicate that the new function is not a nested function.\n\nontext, adds argument to indicate that the new\n        function is not a nested function.\n        (push_function_context): Call it.\n        (pop_function_context{,_from}): Similarly.\n\nFrom-SVN: r8205", "tree": {"sha": "b32bb0d861de5ae1b3ceebbe12e5f839da6d94d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b32bb0d861de5ae1b3ceebbe12e5f839da6d94d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4a4639ef018444349825504d79025ff56e68f32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4a4639ef018444349825504d79025ff56e68f32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4a4639ef018444349825504d79025ff56e68f32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4a4639ef018444349825504d79025ff56e68f32/comments", "author": null, "committer": null, "parents": [{"sha": "2289ec9d149662c2963e088d6d1e84b9d66b4745", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2289ec9d149662c2963e088d6d1e84b9d66b4745", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2289ec9d149662c2963e088d6d1e84b9d66b4745"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "ad26fcc32f12262877fa7662436c62410994e411", "filename": "gcc/function.c", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4a4639ef018444349825504d79025ff56e68f32/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4a4639ef018444349825504d79025ff56e68f32/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=e4a4639ef018444349825504d79025ff56e68f32", "patch": "@@ -461,7 +461,8 @@ find_function_data (decl)\n    since this function knows only about language-independent variables.  */\n \n void\n-push_function_context ()\n+push_function_context_to (toplevel)\n+     int toplevel;\n {\n   struct function *p = (struct function *) xmalloc (sizeof (struct function));\n \n@@ -512,7 +513,7 @@ push_function_context ()\n   p->fixup_var_refs_queue = 0;\n   p->epilogue_delay_list = current_function_epilogue_delay_list;\n \n-  save_tree_status (p);\n+  save_tree_status (p, toplevel);\n   save_storage_status (p);\n   save_emit_status (p);\n   init_emit ();\n@@ -524,11 +525,18 @@ push_function_context ()\n     (*save_machine_status) (p);\n }\n \n+void\n+push_function_context ()\n+{\n+  push_function_context_to (0);\n+}\n+\n /* Restore the last saved context, at the end of a nested function.\n    This function is called from language-specific code.  */\n \n void\n-pop_function_context ()\n+pop_function_context_from (toplevel)\n+     int toplevel;\n {\n   struct function *p = outer_function_chain;\n \n@@ -545,7 +553,8 @@ pop_function_context ()\n   current_function_calls_alloca = p->calls_alloca;\n   current_function_has_nonlocal_label = p->has_nonlocal_label;\n   current_function_has_nonlocal_goto = p->has_nonlocal_goto;\n-  current_function_contains_functions = 1;\n+  if (! toplevel)\n+    current_function_contains_functions = 1;\n   current_function_args_size = p->args_size;\n   current_function_pretend_args_size = p->pretend_args_size;\n   current_function_arg_offset_rtx = p->arg_offset_rtx;\n@@ -579,7 +588,7 @@ pop_function_context ()\n   current_function_epilogue_delay_list = p->epilogue_delay_list;\n   reg_renumber = 0;\n \n-  restore_tree_status (p);\n+  restore_tree_status (p, toplevel);\n   restore_storage_status (p);\n   restore_expr_status (p);\n   restore_emit_status (p);\n@@ -603,6 +612,11 @@ pop_function_context ()\n   rtx_equal_function_value_matters = 1;\n   virtuals_instantiated = 0;\n }\n+\n+void pop_function_context ()\n+{\n+  pop_function_context_from (0);\n+}\n \f\n /* Allocate fixed slots in the stack frame of the current function.  */\n "}]}