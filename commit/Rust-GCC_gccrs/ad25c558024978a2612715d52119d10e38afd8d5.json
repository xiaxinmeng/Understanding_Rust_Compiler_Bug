{"sha": "ad25c558024978a2612715d52119d10e38afd8d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQyNWM1NTgwMjQ5NzhhMjYxMjcxNWQ1MjExOWQxMGUzOGFmZDhkNQ==", "commit": {"author": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2012-12-03T13:59:38Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2012-12-03T13:59:38Z"}, "message": "Adding missed in r194086 file.\n\nFrom-SVN: r194088", "tree": {"sha": "ff59e2fd4b3af8e564f31b2452f60aebf40aa29b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff59e2fd4b3af8e564f31b2452f60aebf40aa29b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad25c558024978a2612715d52119d10e38afd8d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad25c558024978a2612715d52119d10e38afd8d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad25c558024978a2612715d52119d10e38afd8d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad25c558024978a2612715d52119d10e38afd8d5/comments", "author": null, "committer": null, "parents": [{"sha": "52f2e7e1e986b933049b2ebf98b6004a24a54501", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52f2e7e1e986b933049b2ebf98b6004a24a54501", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52f2e7e1e986b933049b2ebf98b6004a24a54501"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "76a15508be3a72ef0dfe97e8604f385a435b7d87", "filename": "gcc/genmddump.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad25c558024978a2612715d52119d10e38afd8d5/gcc%2Fgenmddump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad25c558024978a2612715d52119d10e38afd8d5/gcc%2Fgenmddump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmddump.c?ref=ad25c558024978a2612715d52119d10e38afd8d5", "patch": "@@ -0,0 +1,67 @@\n+/* Generate code from machine description to recognize rtl as insns.\n+   Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1997, 1998,\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010,\n+   2012 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\n+/* This program is used to produce tmp-mddump.md, which represents\n+   md-file with expanded iterators and after define_subst transformation\n+   is performed.\n+\n+   The only argument of the program is a source md-file (e.g.\n+   config/i386/i386.md).  STDERR is used for the program output.  */\n+\n+#include \"bconfig.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"rtl.h\"\n+#include \"errors.h\"\n+#include \"read-md.h\"\n+#include \"gensupport.h\"\n+\n+\f\n+extern int main (int, char **);\n+\n+int\n+main (int argc, char **argv)\n+{\n+  rtx desc;\n+  int pattern_lineno;\n+  int code; /* not used */\n+  progname = \"genmddump\";\n+\n+  if (!init_rtx_reader_args (argc, argv))\n+    return (FATAL_EXIT_CODE);\n+\n+  /* Read the machine description.  */\n+  while (1)\n+    {\n+      desc = read_md_rtx (&pattern_lineno, &code);\n+      if (desc == NULL)\n+\tbreak;\n+      printf (\";; %s: %d\\n\", read_md_filename, pattern_lineno);\n+      print_inline_rtx (stdout, desc, 0);\n+      printf (\"\\n\\n\");\n+    }\n+\n+  fflush (stdout);\n+  return (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);\n+}\n+"}]}