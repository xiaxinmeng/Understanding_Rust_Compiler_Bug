{"sha": "a0d66c8d678e61730d6a51dc9e60af73410d1372", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBkNjZjOGQ2NzhlNjE3MzBkNmE1MWRjOWU2MGFmNzM0MTBkMTM3Mg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-12-16T22:24:51Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-12-16T22:24:51Z"}, "message": "dummy import to prevent merge lossage\n\nFrom-SVN: r24349", "tree": {"sha": "26c7837413542129a58d2af069722749fc2c2764", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26c7837413542129a58d2af069722749fc2c2764"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0d66c8d678e61730d6a51dc9e60af73410d1372", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d66c8d678e61730d6a51dc9e60af73410d1372", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0d66c8d678e61730d6a51dc9e60af73410d1372", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d66c8d678e61730d6a51dc9e60af73410d1372/comments", "author": null, "committer": null, "parents": [{"sha": "83a86272a2e76ea304122db44f4808a5ce250631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83a86272a2e76ea304122db44f4808a5ce250631", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83a86272a2e76ea304122db44f4808a5ce250631"}], "stats": {"total": 814, "additions": 314, "deletions": 500}, "files": [{"sha": "134f69de740ada95fe00d36a53c08ab81ebca9ae", "filename": "gcc/config/1750a/1750a.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2F1750a%2F1750a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2F1750a%2F1750a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2F1750a%2F1750a.c?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -19,13 +19,10 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef FILE\n-#include <stdio.h>\n-#endif\n-#include <string.h>\n-\n #define __datalbl\n #include \"config.h\"\n+#include <stdio.h>\n+#include <string.h>\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"expr.h\""}, {"sha": "4b28bba00bd3d0eaebb23ac016af8734e150b46b", "filename": "gcc/config/a29k/a29k.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fa29k%2Fa29k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fa29k%2Fa29k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Fa29k.c?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines used for code generation on AMD Am29000.\n-   Copyright (C) 1987, 88, 90-94, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 90-94, 1995, 1997 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@nyu.edu)\n \n This file is part of GNU CC.\n@@ -19,8 +19,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include <stdio.h>\n #include \"config.h\"\n+#include <stdio.h>\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "f45e3147e98b081cf88b470f33b9ff75d667c23b", "filename": "gcc/config/arm/t-linux", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Farm%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Farm%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-linux?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -10,7 +10,7 @@ ENQUIRE=\n CROSS_LIBGCC1 = libgcc1-asm.a\n LIBGCC1 = libgcc1-asm.a\n LIB1ASMSRC = arm/lib1funcs.asm\n-LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls\n+LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_lnx\n \n MULTILIB_OPTIONS = mapcs-32\n MULTILIB_DIRNAMES = apcs-32"}, {"sha": "cc2f6583679cbdc6061d32992989a15badfb05e2", "filename": "gcc/config/arm/t-netbsd", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Farm%2Ft-netbsd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Farm%2Ft-netbsd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-netbsd?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -5,7 +5,3 @@ LIBGCC2_CFLAGS=-O2 -fomit-frame-pointer $(LIBGCC2_INCLUDES) $(GCC_CFLAGS) -g0\n \n # Don't build enquire\n ENQUIRE=\n-\n-CROSS_LIBGCC1 = libgcc1-asm.a\n-LIB1ASMSRC = arm/lib1funcs.asm\n-LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls"}, {"sha": "4584f95244a52e81a863ba6c64d437f175efaa9e", "filename": "gcc/config/arm/x-riscix", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Farm%2Fx-riscix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Farm%2Fx-riscix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fx-riscix?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -6,4 +6,3 @@ X_CFLAGS= -DPOSIX -Dopterr=gcc_opterr -Doptind=gcc_optind \\\n OLDCC=/usr/ucb/cc\n CC=$(OLDCC)\n FIXPROTO_DEFINES= -D_POSIX_SOURCE -D_XOPEN_C -D_BSD_C -D_XOPEN_SOURCE\n-INSTALL=$(srcdir)/install.sh -c"}, {"sha": "a6143fa9abf2c5c5278e5110b5c3065a8c6e0a67", "filename": "gcc/config/arm/xm-arm.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Farm%2Fxm-arm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Farm%2Fxm-arm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fxm-arm.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -44,12 +44,6 @@ Boston, MA 02111-1307, USA.  */\n #define USE_C_ALLOCA\n #endif\n \n-/* Define this if the library function putenv is available on your machine */\n-#define HAVE_PUTENV 1\n-\n-/* Define this if the library function vprintf is available on your machine */\n-#define HAVE_VPRINTF 1\n-\n /* Define this to be 1 if you know the host compiler supports prototypes, even\n    if it doesn't define __STDC__, or define it to be 0 if you do not want any\n    prototypes when compiling GNU CC. */"}, {"sha": "c36e4de46a02b38888f910f7044284fbcc66c8f8", "filename": "gcc/config/clipper/clix.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fclipper%2Fclix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fclipper%2Fclix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fclipper%2Fclix.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Clipper/Clix version.\n-   Copyright (C) 1988, 1993, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1993, 1996, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -31,6 +31,8 @@ Boston, MA 02111-1307, USA.  */\n \n #undef LIB_SPEC\n \n+#define TARGET_MEM_FUNCTIONS\n+\n #undef HAVE_ATEXIT\n #define HAVE_ATEXIT\n "}, {"sha": "726660df46ae400c70d72f01855bc218b2e43d68", "filename": "gcc/config/clipper/xm-clix.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fclipper%2Fxm-clix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fclipper%2Fxm-clix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fclipper%2Fxm-clix.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -27,13 +27,4 @@\n /* isinf isn't there, but finite is. */\n #define isinf(x) (!finite(x))\n \n-\n #define USG\n-\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)\n-#define index strchr\n-#define rindex strrchr\n-\n-#define TARGET_MEM_FUNCTIONS"}, {"sha": "cd2eb55c964008581ce4fe27999a5c974c42d983", "filename": "gcc/config/convex/convex.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fconvex%2Fconvex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fconvex%2Fconvex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fconvex%2Fconvex.c?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for insn-output.c for Convex.\n-   Copyright (C) 1988, 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1993, 1994, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -19,6 +19,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n+#include <stdio.h>\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n@@ -31,9 +32,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"output.h\"\n #include \"expr.h\"\n \n-#undef NULL\n-#include <stdio.h>\n-\n /* Tables used in convex.h */\n \n char regno_ok_for_index_p_base[1 + LAST_VIRTUAL_REGISTER + 1];"}, {"sha": "8029ac5b91f48402155fce7ec6039db37fd15052", "filename": "gcc/config/convex/x-convex", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fconvex%2Fx-convex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fconvex%2Fx-convex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fconvex%2Fx-convex?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n # ld can make exe's c2-only if this lib is searched even though not loaded\n-CCLIBFLAGS = -tm c1 \n+CCLIBFLAGS = -tm c1\n \n # Use -pcc to avoid surprises.\n CC = cc -pcc"}, {"sha": "aaaa3b1464cb1c93ca73aca608321c87aafe3887", "filename": "gcc/config/convex/xm-convex.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fconvex%2Fxm-convex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fconvex%2Fxm-convex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fconvex%2Fxm-convex.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for Convex.\n-   Copyright (C) 1989, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1993, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -42,11 +42,6 @@ Boston, MA 02111-1307, USA.  */\n \n #define P_tmpdir\t\"/tmp/\"\n \n-/* Use memcpy and memset -- either would work but these get inlined. */\n-\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-\n /* Convex uses Vax or IEEE floats.\n    Both formats have Vax semantics. */\n "}, {"sha": "b8818531b84c90fb002556905eab80b9140833fd", "filename": "gcc/config/elxsi/elxsi.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Felxsi%2Felxsi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Felxsi%2Felxsi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Felxsi%2Felxsi.c?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for insn-output.c for GNU compiler.  Elxsi version.\n-   Copyright (C) 1987, 1992 Free Software Foundation, Inc\n+   Copyright (C) 1987, 1992, 1997 Free Software Foundation, Inc\n    This port, done by Mike Stump <mrs@cygnus.com> in 1988, and is the first\n    64 bit port of GNU CC.\n    Based upon the VAX port.\n@@ -21,8 +21,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include <stdio.h>\n #include \"config.h\"\n+#include <stdio.h>\n #include \"rtl.h\"\n \n extern char *reg_names[];"}, {"sha": "4e8f42086d30f5ef4cb03e4356aa5cbce7060690", "filename": "gcc/config/fx80/fx80.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Ffx80%2Ffx80.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Ffx80%2Ffx80.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffx80%2Ffx80.c?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for insn-output.c for Alliant FX computers.\n-   Copyright (C) 1989,1991 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1991, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -20,8 +20,8 @@ Boston, MA 02111-1307, USA.  */\n \n \n /* Some output-actions in alliant.md need these.  */\n-#include <stdio.h>\n #include \"config.h\"\n+#include <stdio.h>\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "d1691646e5aaec0a603c876602882a60b0890d26", "filename": "gcc/config/gnu.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fgnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fgnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgnu.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,12 +1,5 @@\n /* Configuration common to all targets running the GNU system.  */\n \n-/* Macro to produce CPP_PREDEFINES for GNU on a given machine.  */\n-#define GNU_CPP_PREDEFINES(machine) \\\n-\"-D\" machine \" -Acpu(\" machine \") -Amachine(\" machine \") \\\n--Dunix -Asystem(unix) \\\n--DMACH -Asystem(mach) \\\n--D__GNU__ -Asystem(gnu)\"\n-\n /* Provide GCC options for standard feature-test macros.  */\n #undef CPP_SPEC\n #define CPP_SPEC \"%{posix:-D_POSIX_SOURCE} %{bsd:-D_BSD_SOURCE}\""}, {"sha": "55189825540856198400ed8bb1c03be8c59b1ae1", "filename": "gcc/config/i370/i370.c", "status": "modified", "additions": 105, "deletions": 3, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi370%2Fi370.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi370%2Fi370.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fi370.c?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for insn-output.c for System/370.\n-   Copyright (C) 1989, 1993, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1993, 1995, 1997 Free Software Foundation, Inc.\n    Contributed by Jan Stein (jan@cd.chalmers.se).\n    Modified for MVS C/370 by Dave Pitts (dpitts@nyx.cs.du.edu)\n \n@@ -20,10 +20,10 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+#include \"config.h\"\n #include <stdio.h>\n #include <string.h>\n #include <ctype.h>\n-#include \"config.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n@@ -35,6 +35,11 @@ Boston, MA 02111-1307, USA.  */\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"recog.h\"\n+#ifdef sun\n+#include <sys/types.h>\n+#include <ctype.h>\n+#endif\n+#include <time.h>\n \n \n /* Label node, this structure is used to keep track of labels on the\n@@ -285,7 +290,7 @@ mvs_add_label (id)\n   label_anchor = lp;\n }\n \n-/* Check to see if the label is in the list.  If 1 is returned then a load \n+/* Check to see if the label is in the list.  If 1 is returned then a load\n    and branch on register must be generated.\n    ID is the label number of the label being checked.  */\n \n@@ -480,3 +485,100 @@ unsigned_jump_follows_p (insn)\n   return GET_CODE (insn) != GE && GET_CODE (insn) != GT\n     && GET_CODE (insn) != LE && GET_CODE (insn) != LT;\n }\n+\n+void\n+i370_function_prolog (f, l)\n+     FILE *f;\n+     int l;\n+{\n+#if MACROPROLOGUE == 1\n+  fprintf (f, \"\\tEDCPRLG USRDSAL=%d,BASEREG=%d\\n\",\n+\t   STACK_POINTER_OFFSET + l - 120 +\n+\t   current_function_outgoing_args_size, BASE_REGISTER);\n+  fprintf (f, \"PG%d\\tEQU\\t*\\n\", mvs_page_num );\n+  fprintf (f, \"\\tLR\\t11,1\\n\");\n+  fprintf (f, \"\\tL\\t%d,=A(PGT%d)\\n\", PAGE_REGISTER, mvs_page_num);\n+  mvs_page_code = 6;\n+  mvs_page_lit = 4;\n+  mvs_check_page (f, 0, 0);\n+  function_base_page = mvs_page_num;\n+#else /* MACROPROLOGUE != 1 */\n+  static int function_label_index = 1;\n+  static int function_first = 0;\n+  static int function_year, function_month, function_day;\n+  static int function_hour, function_minute, function_second;\n+  int i;\n+  if (!function_first)\n+    {\n+      struct tm *function_time;\n+      time_t lcltime;\n+      time (&lcltime);\n+      function_time = localtime (&lcltime);\n+      function_year = function_time->tm_year + 1900;\n+      function_month = function_time->tm_mon + 1;\n+      function_day = function_time->tm_mday;\n+      function_hour = function_time->tm_hour;\n+      function_minute = function_time->tm_min;\n+      function_second = function_time->tm_sec;\n+      fprintf (f, \"PPA2\\tDS\\t0F\\n\");\n+      fprintf (f, \"\\tDC\\tX'03',X'00',X'33',X'00'\\n\");\n+      fprintf (f, \"\\tDC\\tV(CEESTART),A(0)\\n\");\n+      fprintf (f, \"\\tDC\\tA(CEETIMES)\\n\");\n+      fprintf (f, \"CEETIMES\\tDS\\t0F\\n\");\n+      fprintf (f, \"\\tDC\\tCL4'%d',CL4'%02d%02d',CL6'%02d%02d00'\\n\",\n+    \t\t function_year, function_month, function_day,\n+    \t\t function_hour, function_minute, function_second);\n+      fprintf (f, \"\\tDC\\tCL2'01',CL4'0100'\\n\");\n+    }\n+  fprintf (f, \"$DSD%03d\\tDSECT\\n\", function_label_index);\n+  fprintf (f, \"\\tDS\\tD\\n\");\n+  fprintf (f, \"\\tDS\\tCL(%d)\\n\", STACK_POINTER_OFFSET + l\n+\t\t\t+ current_function_outgoing_args_size);\n+  fprintf (f, \"\\tORG\\t$DSD%03d\\n\", function_label_index);\n+  fprintf (f, \"\\tDS\\tCL(120+8)\\n\");\n+  fprintf (f, \"\\tORG\\n\");\n+  fprintf (f, \"\\tDS\\t0D\\n\");\n+  fprintf (f, \"$DSL%03d\\tEQU\\t*-$DSD%03d-8\\n\", function_label_index,\n+\t   function_label_index);\n+  fprintf (f, \"\\tDS\\t0H\\n\");\n+  assemble_name (f, mvs_function_name);\n+  fprintf (f, \"\\tEQU\\t*\\n\");\n+  fprintf (f, \"\\tUSING\\t*,15\\n\");\n+  fprintf (f, \"\\tB\\tFPL%03d\\n\", function_label_index);\n+  fprintf (f, \"\\tDC\\tAL1(FPL%03d+4-*)\\n\", function_label_index + 1);\n+  fprintf (f, \"\\tDC\\tX'CE',X'A0',AL1(16)\\n\");\n+  fprintf (f, \"\\tDC\\tAL4(PPA2)\\n\");\n+  fprintf (f, \"\\tDC\\tAL4(0)\\n\");\n+  fprintf (f, \"\\tDC\\tAL4($DSL%03d)\\n\", function_label_index);\n+  fprintf (f, \"FPL%03d\\tEQU\\t*\\n\", function_label_index + 1);\n+  fprintf (f, \"\\tDC\\tAL2(%d),C'%s'\\n\", strlen (mvs_function_name),\n+\tmvs_function_name);\n+  fprintf (f, \"FPL%03d\\tDS\\t0H\\n\", function_label_index);\n+  fprintf (f, \"\\tSTM\\t14,12,12(13)\\n\");\n+  fprintf (f, \"\\tL\\t2,76(,13)\\n\");\n+  fprintf (f, \"\\tL\\t0,16(,15)\\n\");\n+  fprintf (f, \"\\tALR\\t0,2\\n\");\n+  fprintf (f, \"\\tCL\\t0,12(,12)\\n\");\n+  fprintf (f, \"\\tBNH\\t*+10\\n\");\n+  fprintf (f, \"\\tL\\t15,116(,12)\\n\");\n+  fprintf (f, \"\\tBALR\\t14,15\\n\");\n+  fprintf (f, \"\\tL\\t15,72(,13)\\n\");\n+  fprintf (f, \"\\tSTM\\t15,0,72(2)\\n\");\n+  fprintf (f, \"\\tMVI\\t0(2),X'10'\\n\");\n+  fprintf (f, \"\\tST\\t2,8(,13)\\n \");\n+  fprintf (f, \"\\tST\\t13,4(,2)\\n \");\n+  fprintf (f, \"\\tLR\\t13,2\\n\");\n+  fprintf (f, \"\\tDROP\\t15\\n\");\n+  fprintf (f, \"\\tBALR\\t%d,0\\n\", BASE_REGISTER);\n+  fprintf (f, \"PG%d\\tEQU\\t*\\n\", mvs_page_num );\n+  fprintf (f, \"\\tUSING\\t*,%d\\n\", BASE_REGISTER);\n+  fprintf (f, \"\\tLR\\t11,1\\n\");\n+  fprintf (f, \"\\tL\\t%d,=A(PGT%d)\\n\", PAGE_REGISTER, mvs_page_num);\n+  mvs_page_code = 4;\n+  mvs_page_lit = 4;\n+  mvs_check_page (f, 0, 0);\n+  function_base_page = mvs_page_num;\n+  function_first = 1;\n+  function_label_index += 2;\n+#endif /* MACROPROLOGUE */\n+}"}, {"sha": "ac753633070c801c0da84c0503a64c105fd46782", "filename": "gcc/config/i370/xm-i370.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi370%2Fxm-i370.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi370%2Fxm-i370.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fxm-i370.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for System/370.\n-   Copyright (C) 1989, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1993, 1997 Free Software Foundation, Inc.\n    Contributed by Jan Stein (jan@cd.chalmers.se).\n    Modified for MVS C/370 by Dave Pitts (dpitts@nyx.cs.du.edu)\n \n@@ -44,10 +44,6 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"tm.h\"\n \n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)\n-\n /* Arguments to use with `exit'.  */\n \n #define SUCCESS_EXIT_CODE\t0"}, {"sha": "35ac1c9abb708b305919e36fe8a338f3c70338b5", "filename": "gcc/config/i386/gmon-sol2.c", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fgmon-sol2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fgmon-sol2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgmon-sol2.c?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -31,23 +31,18 @@\n  * SUCH DAMAGE.\n  */\n \n-/* \n- * Re rework of the solaris 2 version of gmon by J.W.Hawtin 12/8/1996\n- * Does not work right yet.\n- */\n-\n /*\n- * This is a modified gmon.c by J.W.Hawtin <J.W.Hawtin@lboro.ac.uk>,\n+ * This is a modified gmon.c by J.W.Hawtin <oolon@ankh.org>,\n  * 14/8/96 based on the original gmon.c in GCC and the hacked version\n  * solaris 2 sparc version (config/sparc/gmon-sol.c) by Mark Eichin. To do\n- * process profiling on solaris 2.4 X86\n+ * process profiling on solaris 2.X X86\n  *\n  * It must be used in conjunction with sol2-gc1.asm, which is used to start\n  * and stop process monitoring.\n  *\n  * Differences.\n  *\n- * On Solaris 2 _mcount is called my library functions not mcount, so support\n+ * On Solaris 2 _mcount is called by library functions not mcount, so support\n  * has been added for both.\n  *\n  * Also the prototype for profil() is different\n@@ -58,7 +53,7 @@\n  *\n  * Notes\n  *\n- * This code could easily be integrated with the orginal gmon.c and perhaps\n+ * This code could easily be integrated with the original gmon.c and perhaps\n  * should be.\n  */\n \n@@ -90,7 +85,7 @@ struct phdr {\n #define HASHFRACTION 1\n #define ARCDENSITY 2\n #define MINARCS 50\n-#define BASEADDRESS 0x8000000 /* On Solaris 2 X86 all excutables start here\n+#define BASEADDRESS 0x8000000 /* On Solaris 2 X86 all executables start here\n \t\t\t\t and not at 0 */ \n \n struct tostruct {\n@@ -264,6 +259,7 @@ internal_mcount()\n \tregister struct tostruct\t*top;\n \tregister struct tostruct\t*prevtop;\n \tregister long\t\t\ttoindex;\n+\tstatic char already_setup;\n \n \t/*\n \t *\tfind the return address for mcount,\n@@ -277,6 +273,17 @@ internal_mcount()\n \t   This identifies the caller of the function just entered.  */\n \tfrompcindex = (void *) __builtin_return_address (1);\n \n+\tif(!already_setup) {\n+          extern etext();\n+\t  already_setup = 1;\n+/*\t  monstartup(0, etext); */\n+\t  monstartup(0x08040000, etext);\n+#ifdef USE_ONEXIT\n+\t  on_exit(_mcleanup, 0);\n+#else\n+\t  atexit(_mcleanup);\n+#endif\n+\t}\n \t/*\n \t *\tcheck that we are profiling\n \t *\tand that we aren't recursively invoked."}, {"sha": "d08bcbd4aecacc55309d8d39cc2d30df8d85e338", "filename": "gcc/config/i386/sol2-c1.asm", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fsol2-c1.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fsol2-c1.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2-c1.asm?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,6 +1,6 @@\n ! crt1.s for Solaris 2, x86\n \n-!   Copyright (C) 1993 Free Software Foundation, Inc.\n+!   Copyright (C) 1993, 1998 Free Software Foundation, Inc.\n !   Written By Fred Fish, Nov 1992\n ! \n ! This file is free software; you can redistribute it and/or modify it\n@@ -149,7 +149,7 @@ _start:\n ! A dummy profiling support routine for non-profiling executables,\n ! in case we link in some objects that have been compiled for profiling.\n \n-\t.globl\t_mcount\n+\t.weak\t_mcount\n _mcount:\n \tret\n \t.type\t_mcount,@function"}, {"sha": "24a1965f37e55fc016e91687c7f78dbd8efc45fd", "filename": "gcc/config/i386/sol2-gc1.asm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fsol2-gc1.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fsol2-gc1.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2-gc1.asm?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -41,7 +41,7 @@\n ! information obtained by single stepping executables on other i386 SVR4\n ! implementations.  This file is the first thing linked into any executable.\n \n-! This is a modified crt1.s by J.W.Hawtin <J.W.Hawtin@lboro.ac.uk> 15/8/96, \n+! This is a modified crt1.s by J.W.Hawtin <oolon@ankh.org> 15/8/96, \n ! to allow program profiling, by calling monstartup on entry and _mcleanup \n ! on exit\n "}, {"sha": "9f95333b4b993a2f60809010c1fba91c4762e156", "filename": "gcc/config/i386/sol2dbg.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fsol2dbg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fsol2dbg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2dbg.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -14,3 +14,14 @@\n #ifdef DWARF_DEBUGGING_INFO\n #undef DWARF_DEBUGGING_INFO\n #endif\n+\n+/*\n+  Changed from config/svr4.h in the following ways:\n+\n+  - Added \"%{V}\".\n+  - Modified \"{%v:-V}\" to take into account \"%{V}\".\n+  - Added \"-s\" so that stabs are saved in the final executable.  */\n+\n+#undef ASM_SPEC\n+#define ASM_SPEC \\\n+  \"%{V} %{v:%{!V:-V}} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*} -s\""}, {"sha": "2c5e3ba13c76cb37ad5149143ca57b03f1213cbb", "filename": "gcc/config/i386/x-osfrose", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fx-osfrose", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fx-osfrose", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-osfrose?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -17,7 +17,6 @@ DEBUG\t\t=\n DEBUG_COLLECT\t= # -DDEBUG\n CCLIBFLAGS\t= -O -DNO_HALF_PIC\n GCC_CFLAGS\t= $(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) -B./ -DPOSIX -DNO_HALF_PIC\n-INSTALL\t\t= installbsd -c\n LDFLAGS\t\t=\n MSTATS\t\t= # -mstats\n OLDCC\t\t= /usr/ccs/gcc/gcc"}, {"sha": "4cbd36ef518f60a4378249c314304f562ed9a13b", "filename": "gcc/config/i386/xm-aix.h", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fxm-aix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fxm-aix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-aix.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,37 +1,2 @@\n-/* Configuration for GNU C-compiler for IBM PS/2 running AIX/386.\n-   Copyright (C) 1988, 1993 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#define USG\n-\n #undef TRUE\n #undef FALSE\n-\n-#include \"i386/xm-i386.h\"\n-\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)\n-\n-/* If not compiled with GNU C, use the portable alloca.  */\n-#ifndef __GNUC__\n-#define USE_C_ALLOCA\n-#endif\n-\n-#define HAVE_PUTENV"}, {"sha": "e686c5ec9d4d4c603e576b527722290af9a2d0c7", "filename": "gcc/config/i386/xm-isc.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fxm-isc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fxm-isc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-isc.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,3 @@\n-#include \"i386/xm-sysv3.h\"\n-\n #ifndef REAL_ARITHMETIC\n #define REAL_VALUE_ATOF(x, mode) strtod ((x), (char **)0)\n extern double strtod ();"}, {"sha": "aed925e993c58ffb2bdd9a7a5fb333f157efe17c", "filename": "gcc/config/i386/xm-os2.h", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fxm-os2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fxm-os2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-os2.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,7 +1,7 @@\n /* Configuration for GNU compiler\n    for an Intel i386 or later processor running OS/2 2.x.\n-   Copyright (C) 1993, 1994, 1995 Free Software Foundation, Inc.\n-   Contributed by Samuel Figueroa (figueroa@cs.nyu.edu)\n+   Copyright (C) 1993, 1994, 1995, 1997, 1998 Free Software Foundation, Inc.\n+   Contributed by Samuel Figueroa (figueroa@apple.com)\n \n This file is part of GNU CC.\n \n@@ -28,20 +28,24 @@ Boston, MA 02111-1307, USA.  */\n #include <stdlib.h> /* this defines alloca */\n #define USG\n #define ONLY_INT_FIELDS\n-#define HAVE_PUTENV\n #define USE_PROTOTYPES 1\n-#define bcmp(a,b,c) memcmp (a,b,c)\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define index  strchr\n-#define rindex strrchr\n #define strcasecmp stricmp\n #define kill(a,b) raise(b)\n #define mktemp tmpnam\n #else\n+#ifdef __EMX__\n+#define EMX\n+#define USG\n+#define BSTRING\n+#define HAVE_PUTENV\n+#define HAVE_VPRINTF\n+#define HAVE_STRERROR\n+#define strcasecmp stricmp\n+#else\n #define ____386BSD____\n int spawnv (int modeflag, char *path, char *argv[]);\n int spawnvp (int modeflag, char *path, char *argv[]);\n+#endif /* __EMX__ */\n #endif /* __IBMC__ */\n \n #ifndef PATH_SEPARATOR\n@@ -52,6 +56,14 @@ int spawnvp (int modeflag, char *path, char *argv[]);\n #endif\n \n #define EXECUTABLE_SUFFIX \".exe\"\n+\n+/* The EMX compiler uses regular .o files */\n+#ifndef __EMX__\n #define OBJECT_SUFFIX \".obj\"\n+#endif\n+\n+/* This is required to make temporary file names unique on file\n+   systems which severely restrict the length of file names. */\n+#define MKTEMP_EACH_FILE\n \n #include \"i386/xm-i386.h\""}, {"sha": "4cbd36ef518f60a4378249c314304f562ed9a13b", "filename": "gcc/config/i386/xm-osf.h", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fxm-osf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fxm-osf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-osf.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,32 +1,2 @@\n-/* Configuration for GNU C-compiler for 386 running OSF/1\n-   Copyright (C) 1994 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n #undef TRUE\n #undef FALSE\n-\n-#include \"i386/xm-i386.h\"\n-\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)\n-\n-#define HAVE_PUTENV\n-#define HAVE_VPRINTF\n-"}, {"sha": "ad634499d30beea1138ec71d88c96574e2acdf88", "filename": "gcc/config/i386/xm-sco.h", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fxm-sco.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fxm-sco.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-sco.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,25 +1,13 @@\n /* Configuration for GCC for Intel i386 running SCO.  */\n \n-#include \"i386/xm-sysv3.h\"\n-\n-/* On SCO 3.2.1, ldexp rejects values outside [0.5, 1). */\n-\n-#define BROKEN_LDEXP\n-\n /* Big buffers improve performance.  */\n \n #define IO_BUFFER_SIZE (0x8000 - 1024)\n \n-/* SCO has a very small ARG_MAX.  */\n-#define SMALL_ARG_MAX\n-\n #ifndef __GNUC__\n /* The SCO compiler gets it wrong, and treats enumerated bitfields\n    as signed quantities, making it impossible to use an 8-bit enum\n    for compiling GNU C++.  */\n #define ONLY_INT_FIELDS 1\n #define CODE_FIELD_BUG 1\n #endif\n-\n-/* SCO lacks sys_siglist.  */\n-#define NO_SYS_SIGLIST"}, {"sha": "735d1d51943b6067fcb6067f34aecd9ee68ac19a", "filename": "gcc/config/i386/xm-vsta.h", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fxm-vsta.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi386%2Fxm-vsta.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-vsta.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,26 +1,2 @@\n-/* Configuration for GNU C-compiler for Intel 80386.\n-   Copyright (C) 1994 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#define NO_STAB_H\n-\n-#include \"i386/xm-i386.h\"\n-\n /* Use semicolons to separate elements of a path.  */\n #define PATH_SEPARATOR ';'"}, {"sha": "26c7c2537550d31dd9cd31f892a6a9fc48096b0d", "filename": "gcc/config/i860/fx2800.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi860%2Ffx2800.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fi860%2Ffx2800.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Ffx2800.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,6 +1,6 @@\n /* Target definitions for GNU compiler for Alliant FX/2800\n    running Concentrix 2.2\n-   Copyright (C) 1991, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1996, 1998 Free Software Foundation, Inc.\n    Contributed by Howard Chu (hyc@hanauma.jpl.nasa.gov).\n \n This file is part of GNU CC.\n@@ -252,7 +252,7 @@ Boston, MA 02111-1307, USA.  */\n \n #define DATA_ALIGNMENT(dummy,align)\t\\\n \t((TREE_PUBLIC (decl) &&\t\\\n-\t (TREE_CODE (TREE_TYPE (decl))==POINTER_TYPE)) ? 64:align)\n+\t (POINTER_TYPE_P (TREE_TYPE (decl)))) ? 64: align)\n \n #undef FUNCTION_PROFILER\n #define FUNCTION_PROFILER(FILE, LABELNO)\t\\"}, {"sha": "69ecb537224fe5d34b69a1061751b248b00968b5", "filename": "gcc/config/m68k/a-ux.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fa-ux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fa-ux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fa-ux.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Motorola 680x0 running A/UX\n-   Copyright (C) 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1998 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -114,10 +114,10 @@ crt2.o%s \"\n    For A/UX generate the result in d0, a0, or fp0 as appropriate. */\n \n #undef FUNCTION_VALUE\n-#define FUNCTION_VALUE(VALTYPE, FUNC)                                   \\\n-  (TREE_CODE (VALTYPE) == REAL_TYPE && TARGET_68881                     \\\n-   ? gen_rtx (REG, TYPE_MODE (VALTYPE), 16)                             \\\n-   : (TREE_CODE (VALTYPE) == POINTER_TYPE                               \\\n+#define FUNCTION_VALUE(VALTYPE, FUNC)                                  \\\n+  (TREE_CODE (VALTYPE) == REAL_TYPE && TARGET_68881                    \\\n+   ? gen_rtx (REG, TYPE_MODE (VALTYPE), 16)                            \\\n+   : (POINTER_TYPE_P (VALTYPE)\t\t                               \\\n       ? gen_rtx (REG, TYPE_MODE (VALTYPE), 8)                           \\\n       : gen_rtx (REG, TYPE_MODE (VALTYPE), 0)))\n                     "}, {"sha": "794df51558f4159035f5d7b73fa3515874e66821", "filename": "gcc/config/m68k/auxas.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fauxas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fauxas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fauxas.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Motorola 680x0 running A/UX using /bin/as\n-   Copyright (C) 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -31,7 +31,7 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_SPEC \"%{m68030:-68030 }%{m68040:-68040 }\"\n \n /* Modify AT&T SGS assembler syntax */\n-/* A/UX's as doesn't do dots in pseodo-ops */\n+/* A/UX's as doesn't do dots in pseudo-ops */\n \n #define SDB_DEBUGGING_INFO\n "}, {"sha": "692725edd4d1ec932d798b9006b99dc98f4f3800", "filename": "gcc/config/m68k/linux-aout.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Flinux-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Flinux-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux-aout.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions for Motorola m68k running Linux\n+/* Definitions for Motorola m68k running Linux-based GNU systems.\n    Copyright (C) 1995, 1996, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n@@ -50,7 +50,7 @@ Boston, MA 02111-1307, USA.  */\n #undef LIB_SPEC\n #if 1\n /* We no longer link with libc_p.a or libg.a by default.  If you want\n-   to profile or debug the Linux C library, please add -lc_p or -ggdb\n+   to profile or debug the GNU/Linux C library, please add -lc_p or -ggdb\n    to LDFLAGS at the link time, respectively.  */\n #define LIB_SPEC \\\n   \"%{mieee-fp:-lieee} %{p:-lgmon} %{pg:-lgmon} %{!ggdb:-lc} %{ggdb:-lg}\""}, {"sha": "3574a72962a939d35ba0c42ac9f2c663b31d291d", "filename": "gcc/config/m68k/mot3300-crt0.S", "status": "modified", "additions": 8, "deletions": 19, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fmot3300-crt0.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fmot3300-crt0.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fmot3300-crt0.S?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -26,7 +26,7 @@ Boston, MA 02111-1307, USA.  */\n # define FILE(n)\tfile\tn\n # define GLOBAL_SYM(s)\tglobal\ts\n # define LOCAL_LABEL(l)\tL%##l\n-# define SECTION(n)\tsection\tn\n+# define IDENT(s)\tident\ts\n # define TEXT\t\ttext\n #else /* Assume we are using GNU as.  */\n # define COMM\t\t.comm\n@@ -35,8 +35,7 @@ Boston, MA 02111-1307, USA.  */\n # define FILE(name)\t.file\tname\n # define GLOBAL_SYM(s)\t.globl\ts\n # define LOCAL_LABEL(l)\t.L.##l\n-# define SECTION(n)\t.section\tn\n-# define STRING(s)\t.asciz\ts\n+# define IDENT(s)\t.section .comment;.asciz s\n # define TEXT\t\t.text\n #endif\n \n@@ -86,24 +85,14 @@ LOCAL_LABEL(isatty):\n \ttrap\t&0\n \tnop\n \n+\tGLOBAL_SYM (__stop_monitor)\n+__stop_monitor:\n+\trts\n \tEVEN\n \n \tCOMM\tsplimit%,4\n \tCOMM\tenviron,4\n \n-\tCOMM\tmcount,4\n-\tCOMM\tmcount%,4\n-\tCOMM\tmonitor,4\n-\n-#ifdef STRING\n-\tSECTION (.comment)\n-\tSTRING (\"$Id: mot3300-crt0.S,v 1.1 1997/08/11 15:57:32 law Exp $\\n\")\n-\tSTRING (\"Contributed by manfred@lts.sel.alcatel.de (Manfred Hollstein, Germany)\\n\")\n-#else\n-\tbyte\t'C,'o,'n,'t,'r,'i,'b,'u,'t,'e,'d,' ,'b,'y\n-\tbyte\t' ,'m,'a,'n,'f,'r,'e,'d,'@,'l,'t,'s,'.,'s\n-\tbyte\t'e,'l,'.,'a,'l,'c,'a,'t,'e,'l,'.,'d,'e,' \n-\tbyte\t'(,'M,'a,'n,'f,'r,'e,'d,' ,'H,'o,'l,'l,'s\n-\tbyte\t't,'e,'i,'n,',,' ,'G,'e,'r,'m,'a,'n,'y,')\n-\tbyte\t10,0\n-#endif\n+\tIDENT (\"$Id: mot3300-crt0.S,v 1.1.1.2 1998/01/14 19:39:06 law Exp $\")\n+\tIDENT (\"Contributed by Manfred Hollstein (manfred@lts.sel.alcatel.de)\")\n+\tIDENT (\"Corrections by Philippe De Muyter (phdm@macqel.be)\")"}, {"sha": "c0844616abb93046ca412e60bae954f31edf179c", "filename": "gcc/config/m68k/mot3300Mcrt0.S", "status": "modified", "additions": 17, "deletions": 30, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fmot3300Mcrt0.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fmot3300Mcrt0.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fmot3300Mcrt0.S?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* The start module mcrt0.s for the SysV68 Motorola 3300 Delta Series.\n-   Copyright (C) 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Manfred Hollstein (manfred@lts.sel.alcatel.de).\n \n This file is part of GNU CC.\n@@ -26,7 +26,7 @@ Boston, MA 02111-1307, USA.  */\n # define FILE(n)\tfile\tn\n # define GLOBAL_SYM(s)\tglobal\ts\n # define LOCAL_LABEL(l)\tL%##l\n-# define SECTION(n)\tsection\tn\n+# define IDENT(s)\tident\ts\n # define TEXT\t\ttext\n #else /* Assume we are using GNU as.  */\n # define COMM\t\t.comm\n@@ -35,8 +35,7 @@ Boston, MA 02111-1307, USA.  */\n # define FILE(name)\t.file\tname\n # define GLOBAL_SYM(s)\t.globl\ts\n # define LOCAL_LABEL(l)\t.L.##l\n-# define SECTION(n)\t.section\tn\n-# define STRING(s)\t.asciz\ts\n+# define IDENT(s)\t.section .comment;.asciz s\n # define TEXT\t\t.text\n #endif\n \n@@ -110,46 +109,34 @@ LOCAL_LABEL(isatty):\n \tjsr\texit\n _exit:\tmoveq\t&1,%d0\n \ttrap\t&0\n-\t\n-\tGLOBAL_SYM (mcount)\n \n-\tEVEN\n-mcount:\tbra\tmcount%\n+\tGLOBAL_SYM (__stop_monitor)\n+__stop_monitor:\n+\tclr.l\t-(%sp)\n+\tjsr\tmonitor\n+\tadd.w\t&4,%sp\n+\trts\n \n LOCAL_LABEL(errtxt):\n-#ifdef STRING\n-\tSTRING (\"No space for monitor buffer\\n\")\n-#else\n \tbyte\t'N,'o,' ,'s,'p,'a,'c,'e,' ,'f,'o,'r,' ,'m,'o,'n\n-\tbyte\t'i,'t,'o,'r,' ,'b,'u,'f,'f,'e,'r,'\\n,0\n-#endif\n+\tbyte\t'i,'t,'o,'r,' ,'b,'u,'f,'f,'e,'r,'\\n\n+LOCAL_LABEL(errtxt_end):\n \n \tEVEN\n LOCAL_LABEL(3):\n-\tmov.l\t&28,-(%sp)\n-\tmov.l\t&LOCAL_LABEL(errtxt),-(%sp)\n-\tmoveq\t&2,%d0\n-\tmov.l\t%d0,-(%sp)\n+\tpea\tLOCAL_LABEL(errtxt_end)-LOCAL_LABEL(errtxt)\n+\tpea\tLOCAL_LABEL(errtxt)(%pc)\n+\tpea\t2\n \tjsr\twrite\n \tbra.b\t_exit\n LOCAL_LABEL(endofstart):\n-\tnop\n \t\n \tEVEN\n \n \tCOMM\tsplimit%,4\n \tCOMM\tenviron,4\n \tCOMM\t_countbase,4\n \n-#ifdef STRING\n-\tSECTION (.comment)\n-\tSTRING (\"$Id: mot3300Mcrt0.S,v 1.1 1997/08/11 15:57:32 law Exp $\\n\")\n-\tSTRING (\"Contributed by manfred@lts.sel.alcatel.de (Manfred Hollstein, Germany)\\n\")\n-#else\n-\tbyte\t'C,'o,'n,'t,'r,'i,'b,'u,'t,'e,'d,' ,'b,'y\n-\tbyte\t' ,'m,'a,'n,'f,'r,'e,'d,'@,'l,'t,'s,'.,'s\n-\tbyte\t'e,'l,'.,'a,'l,'c,'a,'t,'e,'l,'.,'d,'e,' \n-\tbyte\t'(,'M,'a,'n,'f,'r,'e,'d,' ,'H,'o,'l,'l,'s\n-\tbyte\t't,'e,'i,'n,',,' ,'G,'e,'r,'m,'a,'n,'y,')\n-\tbyte\t10,0\n-#endif\n+\tIDENT (\"$Id: mot3300Mcrt0.S,v 1.1.1.2 1998/01/14 19:39:08 law Exp $\")\n+\tIDENT (\"Contributed by Manfred Hollstein (manfred@lts.sel.alcatel.de)\")\n+\tIDENT (\"Corrections by Philippe De Muyter (phdm@macqel.be)\")"}, {"sha": "da722cfa6ec9227b9495d1b07a9e849f8561c7bd", "filename": "gcc/config/m68k/sun2o4.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fsun2o4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fsun2o4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsun2o4.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n-/* Definitions of target machine for GNU compiler.  Sun 2 running Sunos 4.\n-   Copyright (C) 1987, 1988, 1993, 1996 Free Software Foundation, Inc.\n+/* Definitions of target machine for GNU compiler.  Sun 2 running SunOS 4.\n+   Copyright (C) 1987, 1988, 1993, 1996, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n "}, {"sha": "1c76cc4b828962880c6974c0eaf7febfd49fe1a8", "filename": "gcc/config/m68k/sun3mach.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fsun3mach.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fsun3mach.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsun3mach.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -6,7 +6,7 @@\n /* Specify extra dir to search for include files.  */\n #define SYSTEM_INCLUDE_DIR \"/usr/mach/include\"\n \n-/* LINK_SPEC is needed only for Sunos 4.  */\n+/* LINK_SPEC is needed only for SunOS 4.  */\n \n #undef LINK_SPEC\n "}, {"sha": "38680d805e2fcb237433e409f3dabb6f429bbd73", "filename": "gcc/config/m68k/sun3n3.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fsun3n3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fsun3n3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsun3n3.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n #include \"m68k/sun3n.h\"\n \n-/* LINK_SPEC is needed only for Sunos 4.  */\n+/* LINK_SPEC is needed only for SunOS 4.  */\n \n #undef LINK_SPEC"}, {"sha": "95f1ff65d03f42ce5dd48593ff346e8d2da39d0a", "filename": "gcc/config/m68k/sun3o3.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fsun3o3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fsun3o3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsun3o3.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n #include \"m68k/sun3.h\"\n \n-/* LINK_SPEC is needed only for Sunos 4.  */\n+/* LINK_SPEC is needed only for SunOS 4.  */\n \n #undef LINK_SPEC"}, {"sha": "035004f10027a1a881fa6a3ededc77df6c4ef2b9", "filename": "gcc/config/m68k/xm-3b1.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fxm-3b1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fxm-3b1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-3b1.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,13 +1,3 @@\n-#define USG\n-\n-#include \"m68k/xm-m68k.h\"\n-\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)\n-#define index strchr\n-#define rindex strrchr\n-\n /* Override part of the obstack macros.  */\n \n #define __PTR_TO_INT(P) ((int)(P))"}, {"sha": "59f466460febf38babc2160f0485ac36c4ec3921", "filename": "gcc/config/m68k/xm-atari.h", "status": "modified", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fxm-atari.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fxm-atari.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-atari.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,46 +1,5 @@\n-/* Definitions of host machine for GNU compiler.\n-   Atari TT ASV version.\n-   Copyright (C) 1994, 1995 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 1, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#include \"m68k/xm-m68kv.h\"\t/* Use the System V flavor of m68k host */\n-\n-#define HAVE_VPRINTF            /* Host has vprintf() in library */\n-\n /* Add HZ define if missing */\n \n #ifndef HZ\n #define HZ 100\t\t\t/* System clock */\n #endif\n-\n-/* Define FULL_PROTOTYPES for protoize.c, to get <unistd.h> included.\n-   We need this file for things like R_OK, not necessarily prototypes. */\n-\n-#define FULL_PROTOTYPES\n-\n-#if defined (__GNUC__) && __GNUC__ == 1\n-#define alloca __builtin_alloca\n-#endif\n-\n-/* The m88k and mips ports make use of fancy_abort to give possibly helpful\n-   abort information rather than just dumping core.  They do it in their\n-   tm-* files.  It seems more logical that this is a characteristic of\n-   the host machine and not the target machine, so we do it here. */\n-\n-#define abort fancy_abort       /* give possibly helpful abort info */"}, {"sha": "2bf1bdbc40613800b33bc0c2436d4b7b0719e83e", "filename": "gcc/config/m68k/xm-crds.h", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fxm-crds.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fxm-crds.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-crds.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,25 +1,6 @@\n-#define USG\n-\n-#ifndef unos\n-#define unos\n-#endif\n-\n-#include \"m68k/xm-m68k.h\"\n-\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)\n-\n-/* UNOS has vprintf() */ \n-#define HAVE_VPRINTF\n-\n /* Avoid conflict with C library by changing name of this symbol.  */\n #define gettime gcc_gettime\n \n-#ifndef __GNUC__\n-#define USE_C_ALLOCA\n-#endif\n-\n /* Override part of the obstack macros.  */\n \n #define __PTR_TO_INT(P) ((int)(P))"}, {"sha": "e0b53f2e04f13959a75e113d6a1d9f89a9005779", "filename": "gcc/config/m68k/xm-next.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fxm-next.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fxm-next.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-next.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,3 @@\n-#include \"m68k/xm-m68k.h\"\n-\n /* malloc does better with chunks the size of a page.  */ \n \n #define OBSTACK_CHUNK_SIZE (getpagesize ())"}, {"sha": "8498198ffe790c112633c80e7ddc4149a83bc089", "filename": "gcc/config/m68k/xm-plexus.h", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fxm-plexus.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm68k%2Fxm-plexus.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-plexus.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,19 +1,5 @@\n /* Host environment for 68000's running System V.  */\n \n-#include \"m68k/xm-m68k.h\"\n-\n-#define USG\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)\n-\n-#define rindex strrchr\n-#define index strchr\n-\n-#ifndef __GNUC__\n-#define USE_C_ALLOCA\n-#endif\n-\n #ifndef _SIZE_T_\n typedef int size_t;\n #define _SIZE_T_"}, {"sha": "cc5dc0fec2a0fc8ba73f3abd98af0b956f9501a9", "filename": "gcc/config/m88k/dgux.ld", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm88k%2Fdgux.ld", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm88k%2Fdgux.ld", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fdgux.ld?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -22,7 +22,7 @@\n    64kb can be mapped out, thus catching references through null\n    pointers.  We actually start at 0x10200 (for efficiency).  Ideally,\n    we want the page offset of a given word of the .text (output)\n-   section to be the same as it's page offset in the actual (output)\n+   section to be the same as its page offset in the actual (output)\n    linked core file so that paging of the .text section is efficient.\n    In order to do this we allow for up to 0x200 bytes of header stuff\n    in the output (linked) object file."}, {"sha": "ab6dbded10926b118ae577d82c4567e185350d11", "filename": "gcc/config/m88k/luna.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm88k%2Fluna.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fm88k%2Fluna.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fluna.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,7 +1,7 @@\n /* Definitions of target machine for GNU compiler.\n    Motorola m88100 running Omron Luna/88k.\n-   Copyright (C) 1991 Free Software Foundation, Inc.\n-   Contributed by Jeffery Friedl (jfriedl@omron.co.jp)\n+   Copyright (C) 1991, 1997 Free Software Foundation, Inc.\n+   Contributed by Jeffrey Friedl (jfriedl@omron.co.jp)\n \n This file is part of GNU CC.\n "}, {"sha": "c2aee83df7b55a9e10f4a7aff4fe1d75d6e0be07", "filename": "gcc/config/mips/bsd-4.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fbsd-4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fbsd-4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fbsd-4.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -44,5 +44,3 @@ Boston, MA 02111-1307, USA.  */\n /* Override defaults for finding the MIPS tools.  */\n #define MD_STARTFILE_PREFIX \"/bsd43/usr/lib/cmplrs/cc/\"\n #define MD_EXEC_PREFIX \"/bsd43/usr/lib/cmplrs/cc/\"\n-\n-#include \"mips/mips.h\""}, {"sha": "f97af5e1f80d56d98399563e6b3e053f036bf89a", "filename": "gcc/config/mips/bsd-5.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fbsd-5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fbsd-5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fbsd-5.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,4 +1,5 @@\n-/* Definitions of target machine for GNU compiler.  MIPS RISC-OS, 5.0 BSD version.\n+/* Definitions of target machine for GNU compiler.\n+   MIPS RISC-OS, 5.0 BSD version.\n    Copyright (C) 1991 Free Software Foundation, Inc.\n \n This file is part of GNU CC."}, {"sha": "4462e5ecc55c9c8f262cffa950956c1c5724498f", "filename": "gcc/config/mips/cross64.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fcross64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fcross64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fcross64.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,8 +1,6 @@\n /* Configuration for an Irix 5 host and Irix 6 target using SGI's cross64\n    package.  */\n \n-#include \"mips/iris6.h\"\n-\n #define STANDARD_INCLUDE_DIR \"/usr/cross64/usr/include\"\n #undef MD_EXEC_PREFIX\n #define MD_EXEC_PREFIX \"/usr/cross64/usr/bin/\""}, {"sha": "ee7e787353c4a6fc6ba55fe0d06341812bd14f4a", "filename": "gcc/config/mips/dec-osf1.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fdec-osf1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fdec-osf1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fdec-osf1.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  DECstation (OSF/1) version.\n-   Copyright (C) 1992, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1996, 1998 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -32,6 +32,7 @@ Boston, MA 02111-1307, USA.  */\n %{!shared: %{!non_shared: %{!call_shared: -non_shared}}}\"\n \n #include \"mips/ultrix.h\"\n+#include \"mips/mips.h\"\n \n /* Specify size_t and wchar_t types.  */\n #undef\tSIZE_TYPE"}, {"sha": "aa1a058b50d3c6d6d8ec4ab4c2ec2062696673d5", "filename": "gcc/config/mips/elforion.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Felforion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Felforion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felforion.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.  MIPS ORION version with\n    GOFAST floating point library.\n-   Copyright (C) 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1998 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -20,5 +20,3 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n #define MIPS_CPU_STRING_DEFAULT \"orion\"\n-\n-#include \"mips/elf64.h\""}, {"sha": "bf48bc4dbca2bf9714fbf4d310a217aaccea4f53", "filename": "gcc/config/mips/gnu.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fgnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fgnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fgnu.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -94,8 +94,9 @@ Boston, MA 02111-1307, USA.  */\n #define MIPS_GNU\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES GNU_CPP_PREDEFINES(\"mips\") \\\n-\"-DMIPSEB -DR3000 -D_MIPSEB -D_R3000 \\\n+#define CPP_PREDEFINES \"-Dmips -Acpu(mips) -Amachine(mips) \\\n+-Dunix -Asystem(unix)  -DMACH -Asystem(mach) -D__GNU__ -Asystem(gnu) \\\n+-DMIPSEB -DR3000 -D_MIPSEB -D_R3000 \\\n -D_MIPS_SZINT=32 -D_MIPS_SZLONG=32 -D_MIPS_SZPTR=32\"\n \n #undef LINK_SPEC"}, {"sha": "1f690ffa466becd6bb80dcd3b9eabf3f9608737f", "filename": "gcc/config/mips/iris3.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Firis3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Firis3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis3.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Iris version.\n-   Copyright (C) 1991, 1993, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1993, 1995, 1996, 1998 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -70,5 +70,3 @@ Boston, MA 02111-1307, USA.  */\n \n /* Plain char is unsigned in the SGI compiler.  */\n #define DEFAULT_SIGNED_CHAR 0\n-\n-#include \"mips/mips.h\""}, {"sha": "7ca0459c6254afbea90d036d03f4bf0b6c42a41d", "filename": "gcc/config/mips/iris4.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Firis4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Firis4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis4.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -22,8 +22,6 @@ Boston, MA 02111-1307, USA.  */\n    our own exit function.  */\n #define HAVE_ATEXIT\n \n-#include \"mips/iris3.h\"\n-\n /* Profiling is supported via libprof1.a not -lc_p as in Irix 3.  */\n #undef STARTFILE_SPEC\n #define STARTFILE_SPEC \\"}, {"sha": "426c822b68a59b935ffa7dfae1fa3d3e74cbe841", "filename": "gcc/config/mips/iris4loser.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Firis4loser.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Firis4loser.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis4loser.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -3,5 +3,3 @@\n \n #define SUBTARGET_MIPS_AS_ASM_SPEC \"-O0 %{v}\"\n #define SUBTARGET_ASM_OPTIMIZING_SPEC \"\"\n-\n-#include \"mips/iris4.h\""}, {"sha": "3fce9fb1de3f3766592a22bf7a0a6209e329413b", "filename": "gcc/config/mips/netbsd.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fnetbsd.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for DECstation running BSD as target machine for GNU compiler.\n-   Copyright (C) 1993, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 1996, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -30,11 +30,11 @@ Boston, MA 02111-1307, USA.  */\n #define GCC_INCLUDE_DIR \"/usr/include\"\n \n #undef INCLUDE_DEFAULTS\n-#define INCLUDE_DEFAULTS\t\t\\\n-  {\t\t\t\t\t\\\n-    { GPLUSPLUS_INCLUDE_DIR, 1, 1 },\t\\\n-    { GCC_INCLUDE_DIR, 0, 0 },\t\t\\\n-    { 0, 0, 0 }\t\t\t\t\\\n+#define INCLUDE_DEFAULTS\t\t\t\\\n+  {\t\t\t\t\t\t\\\n+    { GPLUSPLUS_INCLUDE_DIR, \"G++\", 1, 1 },\t\\\n+    { GCC_INCLUDE_DIR, \"GCC\", 0, 0 },\t\t\\\n+    { 0, 0, 0, 0 }\t\t\t\t\\\n   }\n \n /* Under NetBSD, the normal location of the various *crt*.o files is the"}, {"sha": "502affa67c708e02f128b2d5f4a8a45eb8c4053d", "filename": "gcc/config/mips/news4.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fnews4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fnews4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fnews4.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Sony RISC NEWS (mips)\n-   Copyright (C) 1991 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -33,4 +33,7 @@ Boston, MA 02111-1307, USA.  */\n \n #define MACHINE_TYPE \"RISC NEWS-OS\"\n \n-#include \"mips/mips.h\"\n+/* INITIALIZE_TRAMPOLINE calls this library function to flush\n+   program and data caches.  */\n+#define CACHE_FLUSH_FUNC \"cacheflush\"\n+"}, {"sha": "a776064d193048978a4096e3ea56c640e7d10b25", "filename": "gcc/config/mips/news5.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fnews5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fnews5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fnews5.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,4 +1,5 @@\n-/* Definitions of target machine for GNU compiler.  Sony RISC NEWS (mips) System V version.\n+/* Definitions of target machine for GNU compiler. \n+   Sony RISC NEWS (mips) System V version.\n    Copyright (C) 1992 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n@@ -59,4 +60,3 @@ Boston, MA 02111-1307, USA.  */\n #endif /* !_SC_PAGE_SIZE */\n #endif /*  L_trampoline */\n \n-#include \"mips/mips.h\""}, {"sha": "ee76053d9c40695caf2a15d65354560d9dd64f52", "filename": "gcc/config/mips/osfrose.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fosfrose.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fosfrose.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fosfrose.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    DECstation (OSF/1 reference port with OSF/rose) version.\n-   Copyright (C) 1991, 1992, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1992, 1995, 1996, 1998 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -147,5 +147,3 @@ Boston, MA 02111-1307, USA.  */\n   if (strcmp (lang_identify (), \"c\") != 0)\t\t\t\t\\\n     output_lang_identify (STREAM);\t\t\t\t\t\\\n }\n-\n-#include \"mips/mips.h\""}, {"sha": "5b3699820f378e9610e716a49ca38b2fbefe414a", "filename": "gcc/config/mips/sni-gas.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fsni-gas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fsni-gas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsni-gas.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,3 @@\n-#include \"mips/sni-svr4.h\"\n-\n /* Enable debugging.  */\n #define DBX_DEBUGGING_INFO\n #define SDB_DEBUGGING_INFO\n@@ -38,6 +36,3 @@ do {                                                  \\\n \tassemble_name (FILE, LABEL2);\t\t\t\t\t\\\n \tfprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)\n-\n-\n-"}, {"sha": "18303ac24ec1306fd76503c4516991e3d73fdc9d", "filename": "gcc/config/mips/svr3-4.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fsvr3-4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fsvr3-4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsvr3-4.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,4 +1,5 @@\n-/* Definitions of target machine for GNU compiler.  MIPS RISC-OS System V version.\n+/* Definitions of target machine for GNU compiler. \n+   MIPS RISC-OS System V version.\n    Copyright (C) 1991 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n@@ -60,5 +61,3 @@ Boston, MA 02111-1307, USA.  */\n \n /* Generate calls to memcpy, etc., not bcopy, etc.  */\n #define TARGET_MEM_FUNCTIONS\n-\n-#include \"mips/mips.h\""}, {"sha": "495b389989a89c5316f09e4e9ac88281c6f1338d", "filename": "gcc/config/mips/svr3-5.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fsvr3-5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fsvr3-5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsvr3-5.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,6 @@\n-/* Definitions of target machine for GNU compiler.  MIPS RISC-OS 5.0 System V version.\n-   Copyright (C) 1991 Free Software Foundation, Inc.\n+/* Definitions of target machine for GNU compiler. \n+   MIPS RISC-OS 5.0 System V version.\n+   Copyright (C) 1991, 1998 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n "}, {"sha": "d1ba64de029034c3b8c91d859fb2cfc0bc83870d", "filename": "gcc/config/mips/svr4-4.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fsvr4-4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fsvr4-4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsvr4-4.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,6 @@\n-/* Definitions of target machine for GNU compiler.  MIPS RISC-OS System V.4 version.\n-   Copyright (C) 1992 Free Software Foundation, Inc.\n+/* Definitions of target machine for GNU compiler.\n+   MIPS RISC-OS System V.4 version.\n+   Copyright (C) 1992, 1998 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -58,5 +59,3 @@ Boston, MA 02111-1307, USA.  */\n \n /* Generate calls to memcpy, etc., not bcopy, etc.  */\n #define TARGET_MEM_FUNCTIONS\n-\n-#include \"mips/mips.h\""}, {"sha": "799e1cdf1e759afd638b497eada36508b4c41132", "filename": "gcc/config/mips/svr4-5.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fsvr4-5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fsvr4-5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsvr4-5.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,4 +1,5 @@\n-/* Definitions of target machine for GNU compiler.  MIPS RISC-OS 5.0 System V.4 version.\n+/* Definitions of target machine for GNU compiler.\n+   MIPS RISC-OS 5.0 System V.4 version.\n    Copyright (C) 1992 Free Software Foundation, Inc.\n \n This file is part of GNU CC."}, {"sha": "b457aa5f07dcaa0cc510d87523689794113297fa", "filename": "gcc/config/mips/svr4-t.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fsvr4-t.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fsvr4-t.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsvr4-t.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,4 @@\n /* Definitions of target machine for GNU compiler.  Tandem S2 w/ NonStop UX. */\n-#include \"mips/svr4-5.h\"\n \n /* Use the default value for this.  */\n #undef STANDARD_INCLUDE_DIR"}, {"sha": "d6da6a841a90ff92640cbc4dd564658cca0272a9", "filename": "gcc/config/mips/ultrix.h", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fultrix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fultrix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fultrix.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n-/* Definitions of target machine for GNU compiler.  DECstation (ultrix) version.\n-   Copyright (C) 1991 Free Software Foundation, Inc.\n+/* Definitions of target machine for GNU compiler; DECstation (Ultrix) version.\n+   Copyright (C) 1991, 1997, 1998 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -31,6 +31,12 @@ Boston, MA 02111-1307, USA.  */\n #define LIB_SPEC \"%{p:-lprof1} %{pg:-lprof1} -lc\"\n #endif\n \n+#define SUBTARGET_CPP_SPEC \"\\\n+%{.cc:\t-D__LANGUAGE_C -D_LANGUAGE_C} \\\n+%{.cxx:\t-D__LANGUAGE_C -D_LANGUAGE_C} \\\n+%{.C:\t-D__LANGUAGE_C -D_LANGUAGE_C} \\\n+\"\n+\n #ifndef STARTFILE_SPEC\n #define STARTFILE_SPEC \"%{pg:gcrt0.o%s}%{!pg:%{p:mcrt0.o%s}%{!p:crt0.o%s}}\"\n #endif\n@@ -46,4 +52,10 @@ Boston, MA 02111-1307, USA.  */\n /* Generate calls to memcpy, etc., not bcopy, etc.  */\n #define TARGET_MEM_FUNCTIONS\n \n-#include \"mips/mips.h\"\n+/* Work around assembler forward label references generated in exception\n+   handling code. */\n+#define DWARF2_UNWIND_INFO 0\n+\n+/* INITIALIZE_TRAMPOLINE calls this library function to flush\n+   program and data caches.  */\n+#define CACHE_FLUSH_FUNC \"cacheflush\""}, {"sha": "6e46f0eafd504592f7055524879c645f0f5c5b14", "filename": "gcc/config/mips/x-dec-osf1", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fx-dec-osf1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fx-dec-osf1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fx-dec-osf1?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -11,7 +11,6 @@\n CC\t\t= $(OLDCC)\n OPT\t\t= -O1\n OLDCC\t\t= cc -Wf,-XNg1500 -Olimit 3000 $(OPT)\n-INSTALL\t\t= installbsd -c\n \n # The bison output files are machine-indep,\n # so different flags for a particular machine are not useful."}, {"sha": "825276c25c71f6a46e1392fa6ab9faca6e721aa8", "filename": "gcc/config/mips/x-osfrose", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fx-osfrose", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fx-osfrose", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fx-osfrose?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -17,7 +17,6 @@ DEBUG\t\t=\n DEBUG_COLLECT\t= # -DDEBUG\n CCLIBFLAGS\t= -O -DNO_HALF_PIC\n GCC_CFLAGS\t= $(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) -B./ -DPOSIX -DNO_HALF_PIC\n-INSTALL\t\t= installbsd -c\n LIBGCC2_CFLAGS\t= -O2 $(GCC_CFLAGS) -g1 -pic-extern\n LDFLAGS\t\t=\n MSTATS\t\t= # -mstats"}, {"sha": "4d429c72edcc165f311133e9a9e11de22aeb6dcf", "filename": "gcc/config/mips/xm-iris6.h", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fxm-iris6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fmips%2Fxm-iris6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fxm-iris6.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -5,17 +5,13 @@\n extern void *alloca ();\n #endif\n \n-#include \"mips/xm-iris5.h\"\n+#include \"mips/xm-mips.h\"\n+\n+#define USG\n \n #undef HOST_BITS_PER_LONG\n #define HOST_BITS_PER_LONG\t_MIPS_SZLONG\n \n-/* Declare some functions needed for this machine.  We don't want to\n-   include these in the sources since other machines might define them\n-   differently.  */\n-\n-extern void *malloc (), *realloc (), *calloc ();\n-\n #ifndef inhibit_libc\n #include \"string.h\"\n #endif"}, {"sha": "7097d7e127ab10fa4926e9295190e22ab7588fda", "filename": "gcc/config/ns32k/xm-pc532-min.h", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fns32k%2Fxm-pc532-min.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fns32k%2Fxm-pc532-min.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fxm-pc532-min.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,30 +1,3 @@\n-/* Configuration for GNU C-compiler for PC532 running Minix\n-   Copyright (C) 1987,1990 Free Software Foundation, Inc.\n-   Contributed by Jyrki Kuoppala <jkp@cs.hut.fi>, August 1990\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* We have USG-style include files and time functions */\n-\n-#define USG\n-\n-#include \"ns32k/xm-ns32k.h\"\n-\n #ifndef HZ\n #define HZ 60\n #endif"}, {"sha": "8d039d2637ef80dc4c94f7d01d4d9c2fe8aa2f8d", "filename": "gcc/config/pa/pa-hpux9.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fpa%2Fpa-hpux9.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fpa%2Fpa-hpux9.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux9.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for HP PA-RISC 1.1\n-   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Tim Moore (moore@defmacro.cs.utah.edu)\n \n This file is part of GNU CC.\n@@ -20,7 +20,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n /* We can debug dynamically linked executables on hpux9; we also want\n-   derefercing of a NULL pointer to cause a SEGV.  */\n+   dereferencing of a NULL pointer to cause a SEGV.  */\n #undef LINK_SPEC\n #if ((TARGET_DEFAULT | TARGET_CPU_DEFAULT) & 1)\n #define LINK_SPEC \\"}, {"sha": "8b1de1c5e5feec584090794df3a9c4f8adea5e00", "filename": "gcc/config/pa/pa-pro-end.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fpa%2Fpa-pro-end.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fpa%2Fpa-pro-end.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-pro-end.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for PRO.\n-   Copyright (C) 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -31,7 +31,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-Dhppa -DPWB -Acpu(hppa) -Amachine(hppa)\"\n \n-/* hpux8 and later have C++ compatable include files, so do not\n+/* hpux8 and later have C++ compatible include files, so do not\n    pretend they are `extern \"C\"'.  */\n #define NO_IMPLICIT_EXTERN_C\n "}, {"sha": "09c949b358e403c44766ad5796e897685c6d859b", "filename": "gcc/config/pa/xm-pahpux.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fpa%2Fxm-pahpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fpa%2Fxm-pahpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fxm-pahpux.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for PA-RISC.\n-   Copyright (C) 1988, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1995, 1997 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com).\n \n This file is part of GNU CC.\n@@ -24,13 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #define USG\n \n /* Use System V memory functions.  */\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)\n-\n-#define rindex strrchr\n-#define index strchr\n-\n /* #defines that need visibility everywhere.  */\n #define FALSE 0\n #define TRUE 1"}, {"sha": "0a73c4d26d556992ef8709c060fb45e4d50f7e8d", "filename": "gcc/config/rs6000/sol2.h", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Frs6000%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Frs6000%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsol2.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for IBM RS/6000 running AIX version 3.1.\n-   Copyright (C) 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by David Reese (Dave.Reese@East.Sun.COM)\n \n This file is part of GNU CC.\n@@ -46,6 +46,15 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef\tLINK_START_DEFAULT_SPEC\n #define LINK_START_DEFAULT_SPEC \"%(link_start_solaris)\"\n \n+#undef CPP_SPEC\n+#define CPP_SPEC \"%{posix: -D_POSIX_SOURCE}\\\n+%(cpp_sysv) %(cpp_endian) %(cpp_cpu) \\\n+%{mmvme: %(cpp_os_mvme) } \\\n+%{msim: %(cpp_os_sim) } \\\n+%{mcall-linux: %(cpp_os_linux) } \\\n+%{mcall-solaris: %(cpp_os_solaris) } \\\n+%{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(cpp_os_default) }}}}\"\n+\n #undef\tCPP_OS_DEFAULT_SPEC\n #define\tCPP_OS_DEFAULT_SPEC \"%(cpp_os_solaris)\"\n \n@@ -165,3 +174,5 @@ while (0)\n \n #undef\tMULTILIB_DEFAULTS\n #define\tMULTILIB_DEFAULTS { \"mlittle\", \"mcall-solaris\" }\n+\n+#define STDC_0_IN_SYSTEM_HEADERS"}, {"sha": "480665a89378989956bebeb4bfe0d5bf3e740c38", "filename": "gcc/config/rs6000/t-ppcos", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Frs6000%2Ft-ppcos", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Frs6000%2Ft-ppcos", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ppcos?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,4 +1,5 @@\n-# Target config file for a System V based system (Solaris, Linux, Netbsd) with gas\n+# Target config file for a System V based system (Solaris, GNU/Linux, Netbsd)\n+# with gas.\n \n # Build libgcc.a with different options.  With gas, build pic libraries\n # as well no floating point"}, {"sha": "47ab7d65b1fe4feb456f2a6a644d0768467c9736", "filename": "gcc/config/rs6000/tramp.asm", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Frs6000%2Ftramp.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Frs6000%2Ftramp.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ftramp.asm?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,8 +1,6 @@\n-/* CYGNUS LOCAL -- waiting for FSF sources to be restored/meissner */\n-/*\n- * special support for trampolines\n+/*  Special support for trampolines\n  *\n- *   Copyright (C) 1996 Free Software Foundation, Inc.\n+ *   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n  *   Written By Michael Meissner\n  * \n  * This file is free software; you can redistribute it and/or modify it\n@@ -82,7 +80,7 @@ FUNC_START(__trampoline_setup)\n         mflr\tr11\n         lwz\tr12,(.LCL0-.LCF0)(r11)\n         add\tr11,r12,r11\n-        lwz\tr7,.Ltramp(r11)\t\t/* trampoline addres -4 */\n+        lwz\tr7,.Ltramp(r11)\t\t/* trampoline address -4 */\n \n \tli\tr8,__trampoline_size\t/* verify that the trampoline is big enough */\n \tcmpw\tcr1,r8,r4"}, {"sha": "0d8f3113fb5003b26854b2d03c16af617d88cf44", "filename": "gcc/config/rs6000/x-rs6000", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Frs6000%2Fx-rs6000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Frs6000%2Fx-rs6000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx-rs6000?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,4 @@\n # configuration for IBM rs6000 running aix\n-INSTALL=/usr/ucb/install -c\n \n # Show we need to use the C version of ALLOCA\n ALLOCA=alloca.o"}, {"sha": "2d4ee5d21cea2c0f52a6a7041f7802c59ed8ba16", "filename": "gcc/config/rs6000/xm-mach.h", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Frs6000%2Fxm-mach.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Frs6000%2Fxm-mach.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxm-mach.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,25 +1,2 @@\n-/* Configuration for GNU C-compiler for IBM RS/6000 on MACH.\n-   Copyright (C) 1992 Free Software Foundation, Inc.\n-   Contributed by Richard Kenner (kenner@nyu.edu).\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-\n-#include \"rs6000/xm-rs6000.h\"\n #undef USG\n #undef COLLECT_EXPORT_LIST"}, {"sha": "f51b787f6df7b640457834500c7a86a1342ca15f", "filename": "gcc/config/sh/xm-sh.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fsh%2Fxm-sh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fsh%2Fxm-sh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fxm-sh.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,6 @@\n /* Configuration for GNU C-compiler for Hitachi SH.\n-   Copyright (C) 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1997 Free Software Foundation, Inc.\n+\n This file is part of GNU CC.\n \n GNU CC is free software; you can redistribute it and/or modify\n@@ -32,9 +33,6 @@ Boston, MA 02111-1307, USA.  */\n #define alloca __builtin_alloca\n #endif\n \n-/* We have the vprintf function.  */\n-#define HAVE_VPRINTF 1\n-\n /* target machine dependencies.\n    tm.h is a symbolic link to the actual target specific file.  */\n #include \"tm.h\""}, {"sha": "8bd978b068d91e0c00a306094aae84a337639a4f", "filename": "gcc/config/sparc/t-sparcbare", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fsparc%2Ft-sparcbare", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fsparc%2Ft-sparcbare", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-sparcbare?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,4 +1,4 @@\n-# configuration file for a bare sparc cpu, aout format files\n+# configuration file for a bare sparc cpu\n \n CROSS_LIBGCC1 = libgcc1-asm.a\n LIB1ASMSRC = sparc/lb1spc.asm"}, {"sha": "e553a0df0b2515b73e8716c920747f2fc9c3e2bf", "filename": "gcc/config/sparc/xm-sparc.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fsparc%2Fxm-sparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fsparc%2Fxm-sparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fxm-sparc.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for Sun Sparc.\n-   Copyright (C) 1988, 1993, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1993, 1995, 1997 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com).\n \n This file is part of GNU CC.\n@@ -43,8 +43,6 @@ Boston, MA 02111-1307, USA.  */\n #define SUCCESS_EXIT_CODE 0\n #define FATAL_EXIT_CODE 33\n \n-#define HAVE_POPEN\n-\n /* If compiled with Sun CC, the use of alloca requires this #include.  */\n #ifndef __GNUC__\n #include \"alloca.h\""}, {"sha": "6e663d12cfa1aee426ff2aa18fa06e517fd7096c", "filename": "gcc/config/sparc/xm-sysv4.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fsparc%2Fxm-sysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fsparc%2Fxm-sysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fxm-sysv4.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,7 +1,6 @@\n /* Configuration for GNU C-compiler for Sun Sparc running System V.4.\n-   Copyright (C) 1992, 1993 Free Software Foundation, Inc.\n-\n-   Written by Ron Guilmette (rfg@netcom.com).\n+   Copyright (C) 1992, 1993, 1998 Free Software Foundation, Inc.\n+   Contributed by Ron Guilmette (rfg@netcom.com).\n \n This file is part of GNU CC.\n \n@@ -44,8 +43,6 @@ Boston, MA 02111-1307, USA.  */\n #define SUCCESS_EXIT_CODE 0\n #define FATAL_EXIT_CODE 33\n \n-#include \"xm-svr4.h\"\n-\n #ifndef __GNUC__\n #define ONLY_INT_FIELDS\n #endif"}, {"sha": "9dd189bde2f70557c89a91d1d058f7841f6988da", "filename": "gcc/config/tahoe/tahoe.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Ftahoe%2Ftahoe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Ftahoe%2Ftahoe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftahoe%2Ftahoe.c?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for insn-output.c for Tahoe.\n-   Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1991, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -20,6 +20,7 @@ Boston, MA 02111-1307, USA.  */\n \n \n #include \"config.h\"\n+#include <stdio.h>\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n@@ -51,7 +52,7 @@ Boston, MA 02111-1307, USA.  */\n rtx tahoe_reg_conversion_loc;\n \n int\n-extendable_operand (op, mode)\n+extensible_operand (op, mode)\n      rtx op;\n      enum machine_mode mode;\n {\n@@ -67,8 +68,6 @@ extendable_operand (op, mode)\n /* since the modes are basically the same. I had to add a special case,\t*/\n /* though, for symbol references with offsets.\t\t\t\t*/\n \n-#include <stdio.h>\n-\n print_operand_address (file, addr)\n      FILE *file;\n      register rtx addr;"}, {"sha": "3a14419c1027f1694b8003174cf8dc330bece74c", "filename": "gcc/config/vax/ultrix.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fvax%2Fultrix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fvax%2Fultrix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fultrix.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -7,3 +7,6 @@\n #define PTRDIFF_TYPE \"int\"\n #define WCHAR_TYPE \"unsigned int\"\n #define WCHAR_TYPE_SIZE 32\n+\n+/* True for Ultrix 4.3 and later and possibly earlier.  */\n+#define HAVE_ATEXIT"}, {"sha": "bac442a467dc6a7e3c340a0de0f4407bebf4baae", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for insn-output.c for Vax.\n-   Copyright (C) 1987, 1994, 1995, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1994, 1995, 1997, 1998 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -18,8 +18,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include <stdio.h>\n #include \"config.h\"\n+#include <stdio.h>\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n@@ -614,34 +614,36 @@ check_float_value (mode, d, overflow)\n \n   if (overflow)\n     {\n-      bcopy (&float_values[0], d, sizeof (REAL_VALUE_TYPE));\n+      bcopy ((char *) &float_values[0], (char *) d, sizeof (REAL_VALUE_TYPE));\n       return 1;\n     }\n \n   if ((mode) == SFmode)\n     {\n       REAL_VALUE_TYPE r;\n-      bcopy (d, &r, sizeof (REAL_VALUE_TYPE));\n+      bcopy ((char *) d, (char *) &r, sizeof (REAL_VALUE_TYPE));\n       if (REAL_VALUES_LESS (float_values[0], r))\n \t{\n-\t  bcopy (&float_values[0], d, sizeof (REAL_VALUE_TYPE));\n+\t  bcopy ((char *) &float_values[0], (char *) d,\n+\t\t sizeof (REAL_VALUE_TYPE));\n \t  return 1;\n \t}\n       else if (REAL_VALUES_LESS (r, float_values[1]))\n \t{\n-\t  bcopy (&float_values[1], d, sizeof (REAL_VALUE_TYPE));\n+\t  bcopy ((char *) &float_values[1], (char*) d,\n+\t\t sizeof (REAL_VALUE_TYPE));\n \t  return 1;\n \t}\n       else if (REAL_VALUES_LESS (dconst0, r)\n \t\t&& REAL_VALUES_LESS (r, float_values[2]))\n \t{\n-\t  bcopy (&dconst0, d, sizeof (REAL_VALUE_TYPE));\n+\t  bcopy ((char *) &dconst0, (char *) d, sizeof (REAL_VALUE_TYPE));\n \t  return 1;\n \t}\n       else if (REAL_VALUES_LESS (r, dconst0)\n \t\t&& REAL_VALUES_LESS (float_values[3], r))\n \t{\n-\t  bcopy (&dconst0, d, sizeof (REAL_VALUE_TYPE));\n+\t  bcopy ((char *) &dconst0, (char *) d, sizeof (REAL_VALUE_TYPE));\n \t  return 1;\n \t}\n     }"}, {"sha": "f56073cb8de8c4cf1c6560807decfa05e9ed08a2", "filename": "gcc/config/winnt/xm-winnt.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fwinnt%2Fxm-winnt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fconfig%2Fwinnt%2Fxm-winnt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fwinnt%2Fxm-winnt.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU compiler for processor running Windows NT 3.x.\n-   Copyright (C) 1993, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 1997 Free Software Foundation, Inc.\n    Contributed by Douglas B. Rupp (drupp@cs.washington.edu)\n \n This file is part of GNU CC.\n@@ -42,11 +42,6 @@ Boston, MA 02111-1307, USA.  */\n #endif\n \n #define NO_SYS_SIGLIST 1\n-#define bcmp(a,b,c) memcmp (a,b,c)\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define index  strchr\n-#define rindex strrchr\n #define kill(a,b) raise(b)\n \n #define OBJECT_SUFFIX \".obj\"\n@@ -66,4 +61,3 @@ Boston, MA 02111-1307, USA.  */\n #define S_IRWXU S_IRUSR | S_IWUSR | S_IXUSR\n #define S_ISREG(m) (((m)&S_IFMT) == S_IFREG)\n #define S_ISDIR(m) (((m)&S_IFMT) == S_IFDIR)\n-"}, {"sha": "4512d94352a3c4ce315e211c483d2708e264d970", "filename": "gcc/ginclude/ppc-asm.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fginclude%2Fppc-asm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d66c8d678e61730d6a51dc9e60af73410d1372/gcc%2Fginclude%2Fppc-asm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fppc-asm.h?ref=a0d66c8d678e61730d6a51dc9e60af73410d1372", "patch": "@@ -1,5 +1,5 @@\n /* PowerPC asm definitions for GNU C.  */\n-/* Under winnt, 1) gas suppports the following as names and 2) in particular\n+/* Under winnt, 1) gas supports the following as names and 2) in particular\n    defining \"toc\" breaks the FUNC_START macro as \".toc\" becomes \".2\" */\n \n #if !defined(__WINNT__)"}]}