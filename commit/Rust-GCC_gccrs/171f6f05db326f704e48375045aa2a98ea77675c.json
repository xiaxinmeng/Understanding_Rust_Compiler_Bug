{"sha": "171f6f05db326f704e48375045aa2a98ea77675c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcxZjZmMDVkYjMyNmY3MDRlNDgzNzUwNDVhYTJhOThlYTc3Njc1Yw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-05-09T12:23:11Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-05-09T12:23:11Z"}, "message": "re PR tree-optimization/70985 (ICE on valid code at -O3 on x86_64-linux-gnu: verify_gimple failed)\n\n2016-05-09  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/70985\n\t* match.pd (BIT_FIELD_REF -> (type)): Disable on GIMPLE when\n\top0 isn't a gimple register.\n\n\t* gcc.dg/torture/pr70985.c: New testcase.\n\nFrom-SVN: r236032", "tree": {"sha": "0520193e0191c858a916d9aa1aabaffe7805dddb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0520193e0191c858a916d9aa1aabaffe7805dddb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/171f6f05db326f704e48375045aa2a98ea77675c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/171f6f05db326f704e48375045aa2a98ea77675c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/171f6f05db326f704e48375045aa2a98ea77675c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/171f6f05db326f704e48375045aa2a98ea77675c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "23694dbb2aac1a1af06ea8e38aaba9c83842c079", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23694dbb2aac1a1af06ea8e38aaba9c83842c079", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23694dbb2aac1a1af06ea8e38aaba9c83842c079"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "c303b94b900225f6cbc989793bd425179c645fe2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/171f6f05db326f704e48375045aa2a98ea77675c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/171f6f05db326f704e48375045aa2a98ea77675c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=171f6f05db326f704e48375045aa2a98ea77675c", "patch": "@@ -1,3 +1,9 @@\n+2016-05-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/70985\n+\t* match.pd (BIT_FIELD_REF -> (type)): Disable on GIMPLE when\n+\top0 isn't a gimple register.\n+\n 2016-05-09  Prachi Godbole  <prachi.godbole@imgtec.com>\n \n \t* config/mips/i6400.md (i6400_fpu_intadd, i6400_fpu_logic)"}, {"sha": "e511e9a6b9b71d7a42b3bc20b109095fdd465a50", "filename": "gcc/match.pd", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/171f6f05db326f704e48375045aa2a98ea77675c/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/171f6f05db326f704e48375045aa2a98ea77675c/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=171f6f05db326f704e48375045aa2a98ea77675c", "patch": "@@ -3244,6 +3244,8 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n      (view_convert (imagpart @0)))))\n   (if (INTEGRAL_TYPE_P (TREE_TYPE (@0))\n        && INTEGRAL_TYPE_P (type)\n+       /* On GIMPLE this should only apply to register arguments.  */\n+       && (! GIMPLE || is_gimple_reg (@0))\n        /* A bit-field-ref that referenced the full argument can be stripped.  */\n        && ((compare_tree_int (@1, TYPE_PRECISION (TREE_TYPE (@0))) == 0\n \t    && integer_zerop (@2))"}, {"sha": "9e9745429314a0eca08911a65f12ec107fa62b80", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/171f6f05db326f704e48375045aa2a98ea77675c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/171f6f05db326f704e48375045aa2a98ea77675c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=171f6f05db326f704e48375045aa2a98ea77675c", "patch": "@@ -1,3 +1,8 @@\n+2016-05-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/70985\n+\t* gcc.dg/torture/pr70985.c: New testcase.\n+\n 2016-05-09  Bin Cheng  <bin.cheng@arm.com>\n \n \t* gcc.dg/tree-ssa/ifc-9.c: New test."}, {"sha": "17273b029a401e55d08908f19c4f2d9a2dffecd1", "filename": "gcc/testsuite/gcc.dg/torture/pr70985.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/171f6f05db326f704e48375045aa2a98ea77675c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70985.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/171f6f05db326f704e48375045aa2a98ea77675c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70985.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70985.c?ref=171f6f05db326f704e48375045aa2a98ea77675c", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target int32plus } */\n+\n+struct\n+{\n+  int f0:24;\n+} a, c, d;\n+\n+int b;\n+\n+int\n+fn1 ()\n+{\n+  return 0;\n+}\n+\n+void\n+fn2 ()\n+{\n+  int e;\n+  if (b) \n+    for (; e;)\n+      {\n+\td = c;\n+\tif (fn1 (b))\n+\t  b = a.f0;\n+      }\n+}"}]}