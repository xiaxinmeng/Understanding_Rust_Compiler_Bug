{"sha": "c637b0fa0df8a3e7b03ccf7da8a6ad249b232d59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYzN2IwZmEwZGY4YTNlN2IwM2NjZjdkYThhNmFkMjQ5YjIzMmQ1OQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-06-18T07:58:17Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-06-18T07:58:17Z"}, "message": "ChangeLog: Various fixes.\n\n\t* ChangeLog: Various fixes.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r148651", "tree": {"sha": "f9964911ce29ddd2563f41c0bc38d3b08a2e9cae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9964911ce29ddd2563f41c0bc38d3b08a2e9cae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c637b0fa0df8a3e7b03ccf7da8a6ad249b232d59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c637b0fa0df8a3e7b03ccf7da8a6ad249b232d59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c637b0fa0df8a3e7b03ccf7da8a6ad249b232d59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c637b0fa0df8a3e7b03ccf7da8a6ad249b232d59/comments", "author": null, "committer": null, "parents": [{"sha": "db4fa1c1219aa58d009cbdce038d426523cd801b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db4fa1c1219aa58d009cbdce038d426523cd801b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db4fa1c1219aa58d009cbdce038d426523cd801b"}], "stats": {"total": 193, "additions": 88, "deletions": 105}, "files": [{"sha": "ca88155904f532fd0a426b02ed395172843f9595", "filename": "gcc/ChangeLog", "status": "modified", "additions": 53, "deletions": 70, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c637b0fa0df8a3e7b03ccf7da8a6ad249b232d59/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c637b0fa0df8a3e7b03ccf7da8a6ad249b232d59/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c637b0fa0df8a3e7b03ccf7da8a6ad249b232d59", "patch": "@@ -65,31 +65,31 @@\n \n 2009-06-17  Michael Eager  <eager@eagercon.com>\n \n-\t* config/rs6000/constraints.md: register_constraint \"d\": New.\n-\t* config/rs6000/dfp.md: movsd_store, extendsddd2, extendsdtd2,\n-\ttruncddsd2, *negdd2_fpr, *absdd2_fpr, *nabsdd2_fpr, *movdd_hardfloat32,\n-\t*movdd_hardfloat64_mfpgpr, *movdd_hardfloat64, *negtd2_fp,\n-\t*abstd2_fpr, *nabstd2_fpr, *movtd_internal, extendddtd2, trunctddd2,\n-\tadddd3, addtd3, subdd3, subtd3, muldd3, multd3, divdd3, divtd3,\n-\tinternal1, *cmptd_internal1, floatditd2, ftruncdd2, fixdddi2,\n-\tftrunctd2, fixtddi2: replace 'f' constraint with 'd'\n-\t* config/rs6000/ppu_intrinsics.h: __mffs, __mtfsf, __mtfsfi, __fabs,\n+\t* config/rs6000/constraints.md (register_constraint \"d\"): New.\n+\t* config/rs6000/dfp.md (movsd_store, extendsddd2, extendsdtd2,\n+\ttruncddsd2, *negdd2_fpr, *absdd2_fpr, *nabsdd2_fpr,\n+\t*movdd_hardfloat32, *movdd_hardfloat64_mfpgpr, *movdd_hardfloat64,\n+\t*negtd2_fp, *abstd2_fpr, *nabstd2_fpr, *movtd_internal, extendddtd2,\n+\ttrunctddd2, adddd3, addtd3, subdd3, subtd3, muldd3, multd3, divdd3,\n+\tdivtd3, *cmpdd_internal1, *cmptd_internal1, floatditd2, ftruncdd2,\n+\tfixdddi2, ftrunctd2, fixtddi2): replace 'f' constraint with 'd'\n+\t* config/rs6000/ppu_intrinsics.h (__mffs, __mtfsf, __mtfsfi, __fabs,\n \t__fnabs, __fmadd, __fmsub, __fnmadd, __fnmsub, __fsel, __frsqrte,\n \t__fsqrt, __fmul, __fmuls, __frsp, __fcfid, __fctid, __fctidz, __fctiw,\n-\t__fctiwz: Same.\n-\t* config/rs6000/rs6000.md: *extendsfdf2_fpr, *truncdfsf2_fpr,\n+\t__fctiwz): Same.\n+\t* config/rs6000/rs6000.md (*extendsfdf2_fpr, *truncdfsf2_fpr,\n \t*fseldfsf4, *negdf2_fpr, *absdf2_fpr, *nabsdf2_fpr, *adddf3_fpr,\n \t*subdf3_fpr, *muldf3_fpr, *divdf3_fpr, recipdf3, fred, sqrtdf2,\n \t*fseldfdf4, *fselsfdf4, *floatsidf2_internal, *floatunssidf2_internal,\n-\t*fix_truncdfsi2_internal, fix_truncdfsi2_internal_gfxopt, fix_truncdfsi2_mfpgpr,\n-\tfctiwz, btruncdf2, ceildf2, floordf2, rounddf2, stfiwx, floatdidf2,\n-\tfix_truncdfdi2, floatdisf2_internal1, *movdf_hardfloat32,\n-\t*movdf_hardfloat64_mfpgpr, *movdf_hardfloat64, *movtf_internal,\n-\t*extenddftf2_internal, trunctfdf2_internal1, trunctfdf2_internal2,\n-\ttrunctfsf2_fprs, fix_trunc_helper, *fix_trunctfsi2_internal,\n-\tnegtf2_internal, *movdi_internal32, *movdi_mfpgpr, *movdi_internal64,\n-\t*movdf_update1, *movdf_update2, *cmpdf_internal1, *cmptf_internal1,\n-\t*cmptf_internal2: Same.\n+\t*fix_truncdfsi2_internal, fix_truncdfsi2_internal_gfxopt,\n+\tfix_truncdfsi2_mfpgpr, fctiwz, btruncdf2, ceildf2, floordf2, rounddf2,\n+\tstfiwx, floatdidf2, fix_truncdfdi2, floatdisf2_internal1,\n+\t*movdf_hardfloat32, *movdf_hardfloat64_mfpgpr, *movdf_hardfloat64,\n+\t*movtf_internal, *extenddftf2_internal, trunctfdf2_internal1,\n+\ttrunctfdf2_internal2, trunctfsf2_fprs, fix_trunc_helper,\n+\t*fix_trunctfsi2_internal, negtf2_internal, *movdi_internal32,\n+\t*movdi_mfpgpr, *movdi_internal64, *movdf_update1, *movdf_update2,\n+\t*cmpdf_internal1, *cmptf_internal1, *cmptf_internal2): Same.\n \t* doc/md.texi: Describe PowerPC 'd' constraint, update 'f' constraint.\n \n 2009-06-16  Ian Lance Taylor  <iant@google.com>\n@@ -102,8 +102,7 @@\n \n 2009-06-17  David Daney  <ddaney@caviumnetworks.com>\n \n-\t* jump.c (cleanup_barriers): Handle case of no insns before a\n-\tbarrier.\n+\t* jump.c (cleanup_barriers): Handle case of no insns before a barrier.\n \n 2009-06-17  David Edelsohn  <edelsohn@gnu.org>\n \n@@ -173,26 +172,24 @@\n \tIX86_BUILTIN_RORQI and IX86_BUILTIN_RORHI.\n \t(ix86_special_builtin_type): Add UINT64_FTYPE_VOID,\n \tUINT64_FTYPE_PINT, INT_FTYPE_INT, UINT64_FTYPE_INT,\n-\tINT64_FTYPE_INT64, UINT16_FTYPE_UINT16_INT and\n-\tUINT8_FTYPE_UINT8_INT\n+\tINT64_FTYPE_INT64, UINT16_FTYPE_UINT16_INT and UINT8_FTYPE_UINT8_INT.\n \t(bdesc_special_args): Add __builtin_ia32_rdtsc and\n \t__builtin_ia32_rdtscp.\n \t(bdesc_args): Add __builtin_ia32_bsrsi, __builtin_ia32_bsrdi,\n \t__builtin_ia32_rolqi, __builtin_ia32_rolhi, __builtin_ia32_rorqi\n-\tand __builtin_ia32_rorhi,\n+\tand __builtin_ia32_rorhi.\n \t(ix86_init_mmx_sse_builtins): Handle UINT64_FTYPE_VOID,\n \tUINT64_FTYPE_PINT, INT_FTYPE_INT, UINT64_FTYPE_INT,\n-\tINT64_FTYPE_INT64, UINT16_FTYPE_UINT16_INT and\n-\tUINT8_FTYPE_UINT8_INT.\n+\tINT64_FTYPE_INT64, UINT16_FTYPE_UINT16_INT and UINT8_FTYPE_UINT8_INT.\n \t(ix86_expand_args_builtin): Likewise.\n \t(ix86_expand_special_args_builtin): Likewise.\n \n \t* config/i386/i386.md (UNSPECV_RDTSCP): New.\n \t(UNSPECV_RDTSC): Likewise.\n \t(UNSPECV_RDPMC): Likewise.\n-\t(*bsr): Removed to ...\n+\t(*bsr): Renamed to ...\n \t(bsr): This\n-\t(*bsr_rex64): Removed to ...\n+\t(*bsr_rex64): Renamed to ...\n \t(bsr_rex64): This.\n \t(rdpmc): New.\n \t(*rdpmc): Likewise.\n@@ -224,8 +221,7 @@\n \n 2009-06-16  Ian Lance Taylor  <iant@google.com>\n \n-\t* df-problems.c (df_byte_lr_alloc): Don't set problem_data to\n-\titself.\n+\t* df-problems.c (df_byte_lr_alloc): Don't set problem_data to itself.\n \t* vec.c (vec_gc_o_reserve_1): Don't set alloc to itself.\n \n 2009-06-16  Ian Lance Taylor  <iant@google.com>\n@@ -305,8 +301,7 @@\n \n \t* tree-ssa-structalias.c (do_ds_constraint): Stores in global\n \tvariables add them to ESCAPED.\n-\t(find_func_aliases): Do not make all indirectly stored values\n-\tescaped.\n+\t(find_func_aliases): Do not make all indirectly stored values escaped.\n \n 2009-06-16  Rafael Avila de Espindola  <espindola@google.com>\n \n@@ -330,7 +325,7 @@\n \n \t* tree-parloops.c (loop_parallel_p): Call vect_is_simple_reduction\n \twith additional parameter.\n-\t* tree-vectorizer.h (enum vect_def_type): Add new value \n+\t* tree-vectorizer.h (enum vect_def_type): Add new value\n \tvect_nested_cycle.\n \t(enum vect_relevant): Add comments.\n \t(vect_is_simple_reduction): Add new argument.\n@@ -344,13 +339,13 @@\n \t(vect_create_epilog_for_reduction): Add new argument to specify\n \treduction variable.\n \t(vect_finalize_reduction): Handle subtraction, fix comments.\n-\t(vectorizable_reduction): Handle nested cycles. In case of nested cycle\n-\tkeep track of the reduction variable position. Call \n+\t(vectorizable_reduction): Handle nested cycles. In case of nested\n+\tcycle keep track of the reduction variable position. Call \n \tvect_is_simple_reduction with additional parameter. Use original \n \tstatement code in reduction epilogue for nested cycle. Call\n \tvect_create_epilog_for_reduction with additional parameter.\n-\t* tree-vect-patterns.c (vect_recog_dot_prod_pattern): Assert inner-loop\n-\tvectorization.\n+\t* tree-vect-patterns.c (vect_recog_dot_prod_pattern): Assert\n+\tinner-loop vectorization.\n \t(vect_recog_widen_sum_pattern): Likewise.\n \t* tree-vect-stmts.c (process_use): Distinguish between nested cycles\n \tand reductions.\n@@ -374,8 +369,7 @@\n \n \t* doc/plugins.texi (Interacting with the GCC Garbage Collector):\n \tMention the plugin mode of gengtype.\n-\t* doc/gty.texi (Source Files Containing Type Information):\n-\tLikewise.\n+\t* doc/gty.texi (Source Files Containing Type Information): Likewise.\n \t* gengtype.c: Updated copyright.\n \t(plugin_files, nb_plugin_files) Added new static variables.\n \t(measure_input_list) Care about plugin_files.\n@@ -393,8 +387,7 @@\n \n 2009-06-15  Ian Lance Taylor  <iant@google.com>\n \n-\t* df-problems.c (df_simulate_one_insn_forwards): Fix braces in\n-\tswitch.\n+\t* df-problems.c (df_simulate_one_insn_forwards): Fix braces in switch.\n \t* gcov.c (read_count_file): Add braces around variables declared\n \tbefore label.\n \n@@ -500,7 +493,8 @@\n \tUse DECL_COMDAT_GROUP instead of DECL_ONE_ONLY.\n \t* cgraph.c (cgraph_create_virtual_clone): Use DECL_COMDAT_GROUP.\n \t* config/i386/i386.c (ix86_file_end): Compute DECL_COMDAT_GROUP.\n-\t* dwarf2asm.c(dw2_force_const_mem): Update call to make_decl_one_only.\n+\t* dwarf2asm.c (dw2_force_const_mem): Update call to\n+\tmake_decl_one_only.\n \t* langhooks-def.h (lhd_comdat_group, LANG_HOOKS_COMDAT_GROUP): Remove.\n \t(LANG_HOOKS_DECLS): Remove LANG_HOOKS_COMDAT_GROUP.\n \t* langhooks.c (lhd_comdat_group): Remove.\n@@ -759,8 +753,7 @@\n \t(c_parser_for_statement): Pass location to c_finish_expr_stmt,\n \tand c_process_expr_stmt.\n \t(c_parser_omp_variable_list): Add location argument.\n-\t(c_parser_omp_clause_collapse): Pass location to\n-\tbuild_omp_clause.\n+\t(c_parser_omp_clause_collapse): Pass location to build_omp_clause.\n \t(c_parser_omp_clause_default): Same.\n \t(c_parser_omp_clause_if): Same.\n \t(c_parser_omp_clause_num_threads): Same.\n@@ -770,8 +763,7 @@\n \t(c_parser_omp_clause_schedule): Pass location to build_omp_clause.\n \t(c_parser_omp_clause_untied): Same.\n \t(c_parser_omp_for_loop): Pass location to c_process_expr_stmt.\n-\t(c_parser_omp_parallel): Pass location to\n-\tc_split_parallel_clauses.\n+\t(c_parser_omp_parallel): Pass location to c_split_parallel_clauses.\n \n \t* c-tree.h (check_for_loop_decls, undeclared_variable,\n \tbuild_component_ref, build_array_ref, build_external_ref,\n@@ -928,8 +920,7 @@\n \n 2009-06-12  Ian Lance Taylor  <iant@google.com>\n \n-\t* fold-const.c (fold_unary): Rename local variable and to\n-\tand_expr.\n+\t* fold-const.c (fold_unary): Rename local variable and to and_expr.\n \n \t* c-opts.c (c_common_handle_option): For -Wc++-compat set\n \tcpp_opts->warn_cxx_operator_names.\n@@ -996,11 +987,10 @@\n \n \t* config/i386/i386.h (TARGET_CRC32): New.\n \n-\t* config/i386/i386.md (sse4_2_crc32<mode>): Also check\n-\tTARGET_CRC32.\n+\t* config/i386/i386.md (sse4_2_crc32<mode>): Also check TARGET_CRC32.\n \t(sse4_2_crc32di): Likewise.\n \n-\t* config/i386/i386.opt (mcrc32: New.\n+\t* config/i386/i386.opt (mcrc32): New.\n \n \t* doc/invoke.texi: Document -mcrc32.\n \n@@ -1055,8 +1045,7 @@\n \n 2009-06-11  Anthony Green  <green@moxielogic.com>\n \n-\t* config/moxie/moxie.md: Define length attribute for all\n-\tinstructions.\n+\t* config/moxie/moxie.md: Define length attribute for all instructions.\n \t(rCC): Define.\n \t(*b<cond:code>): Support limited branch ranges for new PC-relative\n \tbranch instructions.\n@@ -1103,8 +1092,7 @@\n \t(tree_decl_common): Delete decl_flag_1 and user_align fields.\n \tRenumber decl_flag_* fields.  Fix comments.  Widen\n \tdecl_common_unused field.\n-\t(DECL_HAS_VALUE_EXPR_P): Adjust for renumbering of decl_flag_*\n-\tfields.\n+\t(DECL_HAS_VALUE_EXPR_P): Adjust for renumbering of decl_flag_* fields.\n \t(DECL_EXTERNAL): Likewise.\n \t(DECL_BIT_FIELD): Likewise.\n \t(DECL_NONADDRESSABLE_P): Likewise.\n@@ -1156,8 +1144,7 @@\n \t(df_insn_refs_collect, df_bb_refs_collect): Likewise.\n \t(df_bb_refs_record, df_record_entry_block_defs): Likewise.\n \t(df_record_exit_block_uses, df_bb_verify): Likewise.\n-\t(df_swap_refs): Change ref_vec parameter to VEC.  Change all\n-\tcallers.\n+\t(df_swap_refs): Change ref_vec parameter to VEC.  Change all callers.\n \t(df_sort_and_compress_refs): Change ref_vec parameter to VEC.\n \tRemove count parameter.  Change return type to void.  Change all\n \tcallers.\n@@ -1227,8 +1214,7 @@\n \t(function_types_compatible_p, type_lists_compatible_p): Likewise.\n \t(build_conditional_expr): Add colon_loc parameter.  Change all\n \tcallers.\n-\t(convert_for_assignment): Add location parameter.  Change all\n-\tcallers.\n+\t(convert_for_assignment): Add location parameter.  Change all callers.\n \t* c-parser.c (c_parser_conditional_expression): Pass location of\n \tcolon to build_conditional_expr.\n \t* c-tree.h (build_conditional_expr): Update declaration.\n@@ -1251,8 +1237,8 @@\n 2009-06-09  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/40351\n-\t* tree-sra.c (propagate_subacesses_accross_link): Check that a refrence\n-\tto a potential artifical subaccess can be constructed.\n+\t* tree-sra.c (propagate_subacesses_accross_link): Check that a\n+\trefrence to a potential artifical subaccess can be constructed.\n \n 2009-06-08  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n@@ -1280,8 +1266,8 @@\n 2009-06-08  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/39834\n-\t* cgraphunit.c (save_inline_function_body): Do not copy transform hooks\n-\tfor saved inline bodies.\n+\t* cgraphunit.c (save_inline_function_body): Do not copy transform\n+\thooks for saved inline bodies.\n \t* ipa-passes.c (do_per_function): Do not add the hoks multiple times\n \tfor given function.\n \n@@ -1367,8 +1353,7 @@\n \n 2009-06-07  Ian Lance Taylor  <iant@google.com>\n \n-\t* dwarf2.h (enum dwarf_location_atom): Add\n-\tINTERNAL_DW_OP_tls_addr.\n+\t* dwarf2.h (enum dwarf_location_atom): Add INTERNAL_DW_OP_tls_addr.\n \t* dwarf2out.c (INTERNAL_DW_OP_tls_addr): Don't #define.\n \n \t* c-common.c (c_do_switch_warnings): Don't exit early for -Wswitch\n@@ -1467,8 +1452,7 @@\n \t(expand_expr_real_1): Remove comment.\n \t* tree-vect-data-refs.c (vect_enhance_data_refs_alignment):\n \tVectorize misaligned access when the target supports it.\n-\t(vect_supportable_dr_alignment): Check for unaligned access\n-\tsupport.\n+\t(vect_supportable_dr_alignment): Check for unaligned access support.\n \t* tree-vect-stmts.c (vectorizable_store): Generate misaligned store\n \tand remove asset.\n \n@@ -1511,8 +1495,7 @@\n \tcallers.\n \t* debug.c (do_nothing_debug_hooks): Add additional entry.\n \t(debug_nothing_int_charstar_int): New function.\n-\t* debug.h (struct gcc_debug_hooks): Add parameter to source_line\n-\thook.\n+\t* debug.h (struct gcc_debug_hooks): Add parameter to source_line hook.\n \t(debug_nothing_int_charstar_int): New declaration.\n \t* dwarf2out.c (dwarf2out_source_line): Add new parameter.  Write\n \tdiscriminator value in .loc directive."}, {"sha": "c20d83941ddbd15afbdee6cf79db67328fd245f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c637b0fa0df8a3e7b03ccf7da8a6ad249b232d59/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c637b0fa0df8a3e7b03ccf7da8a6ad249b232d59/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c637b0fa0df8a3e7b03ccf7da8a6ad249b232d59", "patch": "@@ -76,15 +76,15 @@\n \n 2009-06-16  Ira Rosen  <irar@il.ibm.com>\n \n-\t* gcc.dg/vect/vect-outer-4g.c: Don't look for pattern not allowed \n+\t* gcc.dg/vect/vect-outer-4g.c: Don't look for pattern not allowed\n \tprinting.\n \t* gcc.dg/vect/vect-outer-4k.c, gcc.dg/vect/vect-outer-4l.c,\n \tgcc.dg/vect/vect-outer-4f.c: Likewise.\n \t* gcc.dg/vect/vect-nest-cycle-1.c: New test.\n-\t* gcc.dg/vect/vect-nest-cycle-2.c, gcc.dg/vect/vect-nest-cycle-3.c: \n+\t* gcc.dg/vect/vect-nest-cycle-2.c, gcc.dg/vect/vect-nest-cycle-3.c:\n \tLikewise.\n-\t* gcc.dg/vect/vect-outer-1a.c: Fail because of strided access in outer \n-\tloop.\n+\t* gcc.dg/vect/vect-outer-1a.c: Fail because of strided access in\n+\touter loop.\n \n 2009-06-16  Tobias Burnus  <burnus@net-b.de>\n \n@@ -98,15 +98,13 @@\n \t* gcc.dg/c99-vla-jump-5.c: Adjust expected error messages.\n \tRecognize new notes.\n \t* gcc.dg/stmt-expr-label-2.c: Likewise.\n-\t* gcc.dg/c99-vla-jump-1.c: Recognize new notes.  Fix column\n-\tnumbers.\n+\t* gcc.dg/c99-vla-jump-1.c: Recognize new notes.  Fix column numbers.\n \t* gcc.dg/c99-vla-jump-2.c: Recognize new notes.\n \t* gcc.dg/c99-vla-jump-3.c: Recognize new notes.\n \t* gcc.dg/c99-vla-jump-4.c: Likewise.\n \t* gcc.dg/stmt-expr-label-1.c: Likewise.\n \t* gcc.dg/stmt-expr-label-3.c: Likewise.\n-\t* gcc.dg/vla-8.c: Likewise.  Move error message to different\n-\tline.\n+\t* gcc.dg/vla-8.c: Likewise.  Move error message to different line.\n \n 2009-06-16  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n@@ -212,7 +210,8 @@\n 2009-06-12  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR testsuite/40384\n-\t* gcc.dg/tree-ssa/prefetch-5.c: Add --param min-insn-to-prefetch-ratio=5.\n+\t* gcc.dg/tree-ssa/prefetch-5.c: Add --param\n+\tmin-insn-to-prefetch-ratio=5.\n \n 2009-06-12  Joey Ye  <joey.ye@intel.com>\n \t    H.J. Lu  <hongjiu.lu@intel.com>\n@@ -359,8 +358,10 @@\n 2009-06-07  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/36874\n-\t* gfortran.dg/intrinsic_argument_conformance_2.f90: Adjusted error message.\n-\t* gfortran.dg/zero_sized_1.f90: Removed checks with incompatible shapes.\n+\t* gfortran.dg/intrinsic_argument_conformance_2.f90: Adjusted error\n+\tmessage.\n+\t* gfortran.dg/zero_sized_1.f90: Removed checks with incompatible\n+\tshapes.\n \t* gfortran.dg/zero_sized_5.f90: Likewise.\n \n 2009-06-07  H.J. Lu  <hongjiu.lu@intel.com>\n@@ -406,8 +407,8 @@\n \n 2009-06-05  Revital Eres  <eres@il.ibm.com>\n \n-\t* lib/target-supports.exp:\n-\t(check_effective_target_vect_hw_misalign): New procedure.\n+\t* lib/target-supports.exp (check_effective_target_vect_hw_misalign):\n+\tNew procedure.\n \t* gcc.dg/vect/vect-50.c: Change checks to use vect_hw_misalign.\n \t* gcc.dg/vect/vect-33.c: Likewise.\n \t* gcc.dg/vect/vect-92.c: Likewise.\n@@ -568,8 +569,8 @@\n \n 2009-05-31  Basile Starynkevitch  <basile@starynkevitch.net>\n \n-\t* gcc.dg/plugin/ggcplug.c: moved comment.\n-\t(plugin_init): fixed typo, declared i, returned 0 at end.\n+\t* gcc.dg/plugin/ggcplug.c: Moved comment.\n+\t(plugin_init): Fixed typo, declared i, returned 0 at end.\n \n 2009-05-31  Ira Rosen  <irar@il.ibm.com>\n \n@@ -643,7 +644,7 @@\n \n 2009-05-28  Kai Tietz  <kai.tietz@onevision.com>\n \n-\t*  g++.dg/ext/packed6.C (size_t): Use __extension__ and __SIZE_TYPE__.\n+\t* g++.dg/ext/packed6.C (size_t): Use __extension__ and __SIZE_TYPE__.\n \t* g++.dg/opt/memcpy1.C (size_t): Likewise.\n \t* g++.dg/pr37742.C (size_t): Likewise.\n \t* g++.dg/torture/pr34850.C (size_t): Likewise.\n@@ -654,23 +655,23 @@\n \t(size_t): Use __extension__ and __SIZE_TYPE__.\n \t* gcc.c-torture/compile/20000211-1.c (size_t): Typedef size_t via\n \t__SIZE_TYPE__.\n-\t* gcc.c-torture/compile/20010328-1.c (size_t): Likewise,\n-\t* gcc.c-torture/compile/20030320-1.c (size_t): Likewise,\n-\t* gcc.c-torture/compile/20030405-1.c (size_t): Likewise,\n-\t* gcc.c-torture/compile/20030902-1.c (size_t): Likewise,\n-\t* gcc.c-torture/compile/20060202-1.c (size_t): Likewise,\n-\t* gcc.c-torture/compile/20080613-1.c (size_t): Likewise,\n-\t* gcc.c-torture/compile/920428-2.c (size_t): Likewise,\n-\t* gcc.c-torture/compile/980329-1.c (size_t): Likewise,\n-\t* gcc.c-torture/compile/980816-1.c (size_t): Likewise,\n-\t* gcc.c-torture/compile/pr32584.c (size_t): Likewise,\n-\t* (__ssize_t): Likewise.\n-\t* gcc.c-torture/compile/pr33173.c (size_t): Likewise,\n-\t* gcc.c-torture/compile/pr33382.c (size_t): Likewise,\n-\t* gcc.c-torture/compile/pr34334.c (size_t): Likewise,\n-\t* gcc.c-torture/compile/pr34688.c (size_t): Likewise,\n-\t* gcc.c-torture/compile/pr35043.c (size_t): Likewise,\n-\t* gcc.c-torture/compile/pr37669.c (size_t): Likewise,\n+\t* gcc.c-torture/compile/20010328-1.c (size_t): Likewise.\n+\t* gcc.c-torture/compile/20030320-1.c (size_t): Likewise.\n+\t* gcc.c-torture/compile/20030405-1.c (size_t): Likewise.\n+\t* gcc.c-torture/compile/20030902-1.c (size_t): Likewise.\n+\t* gcc.c-torture/compile/20060202-1.c (size_t): Likewise.\n+\t* gcc.c-torture/compile/20080613-1.c (size_t): Likewise.\n+\t* gcc.c-torture/compile/920428-2.c (size_t): Likewise.\n+\t* gcc.c-torture/compile/980329-1.c (size_t): Likewise.\n+\t* gcc.c-torture/compile/980816-1.c (size_t): Likewise.\n+\t* gcc.c-torture/compile/pr32584.c (size_t): Likewise.\n+\t(__ssize_t): Likewise.\n+\t* gcc.c-torture/compile/pr33173.c (size_t): Likewise.\n+\t* gcc.c-torture/compile/pr33382.c (size_t): Likewise.\n+\t* gcc.c-torture/compile/pr34334.c (size_t): Likewise.\n+\t* gcc.c-torture/compile/pr34688.c (size_t): Likewise.\n+\t* gcc.c-torture/compile/pr35043.c (size_t): Likewise.\n+\t* gcc.c-torture/compile/pr37669.c (size_t): Likewise.\n \t* gcc.dg/20050629-1.c (size_t): Typedef size_t via __SIZE_TYPE__.\n \t* gcc.dg/pr33667.c (size_t): Likewise.\n \t* gcc.dg/prefetch-loop-arrays-1.c (size_t): Likewise.\n@@ -1216,8 +1217,7 @@\n \n \t* gcc.dg/Wcxx-compat-7.c: New testcase.\n \t* gcc.dg/Wcxx-compat-8.c: New testcase.\n-\t* gcc.dg/c99-tag-1.c: Recognize new \"originally defined here\"\n-\tnotes\n+\t* gcc.dg/c99-tag-1.c: Recognize new \"originally defined here\" notes.\n \t* gcc.dg/pr17188-1.c: Likewise.\n \t* gcc.dg/pr39084.c: Likewise.\n "}]}