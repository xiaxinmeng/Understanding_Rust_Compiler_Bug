{"sha": "f51ab33b26d8b85676b2b4b7399f50e25a56a3c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUxYWIzM2IyNmQ4Yjg1Njc2YjJiNGI3Mzk5ZjUwZTI1YTU2YTNjNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T08:47:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T08:47:16Z"}, "message": "s-tasren.adb (Exceptional_Complete_Rendezvous): Fix race condition.\n\n2005-06-14  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-tasren.adb (Exceptional_Complete_Rendezvous): Fix race condition.\n\nFrom-SVN: r101063", "tree": {"sha": "068025a6babf6c3804c593a0a7fc2dc2d56cd4de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/068025a6babf6c3804c593a0a7fc2dc2d56cd4de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f51ab33b26d8b85676b2b4b7399f50e25a56a3c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f51ab33b26d8b85676b2b4b7399f50e25a56a3c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f51ab33b26d8b85676b2b4b7399f50e25a56a3c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f51ab33b26d8b85676b2b4b7399f50e25a56a3c5/comments", "author": null, "committer": null, "parents": [{"sha": "ab129900a4ffcf11e054377a8ff277ca3aca6c94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab129900a4ffcf11e054377a8ff277ca3aca6c94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab129900a4ffcf11e054377a8ff277ca3aca6c94"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "7d3eb9f4d6f2b09c010736dcc993751598451d16", "filename": "gcc/ada/s-tasren.adb", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f51ab33b26d8b85676b2b4b7399f50e25a56a3c5/gcc%2Fada%2Fs-tasren.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f51ab33b26d8b85676b2b4b7399f50e25a56a3c5/gcc%2Fada%2Fs-tasren.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasren.adb?ref=f51ab33b26d8b85676b2b4b7399f50e25a56a3c5", "patch": "@@ -1,6 +1,6 @@\n ------------------------------------------------------------------------------\n --                                                                          --\n---               GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n+--                GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                  --\n --                                                                          --\n --            S Y S T E M . T A S K I N G . R E N D E Z V O U S             --\n --                                                                          --\n@@ -555,10 +555,11 @@ package body System.Tasking.Rendezvous is\n    procedure Exceptional_Complete_Rendezvous\n      (Ex : Ada.Exceptions.Exception_Id)\n    is\n-      Self_Id    : constant Task_Id := STPO.Self;\n-      Entry_Call : Entry_Call_Link := Self_Id.Common.Call;\n-      Caller     : Task_Id;\n-      Called_PO  : STPE.Protection_Entries_Access;\n+      Self_Id                : constant Task_Id := STPO.Self;\n+      Entry_Call             : Entry_Call_Link := Self_Id.Common.Call;\n+      Caller                 : Task_Id;\n+      Called_PO              : STPE.Protection_Entries_Access;\n+      Acceptor_Prev_Priority : Integer;\n \n       Exception_To_Raise : Ada.Exceptions.Exception_Id := Ex;\n       Ceiling_Violation  : Boolean;\n@@ -720,15 +721,16 @@ package body System.Tasking.Rendezvous is\n                   Self_Id.Common.Compiler_Data.Current_Excep);\n             end if;\n \n+            Acceptor_Prev_Priority := Entry_Call.Acceptor_Prev_Priority;\n             Initialization.Wakeup_Entry_Caller (Self_Id, Entry_Call, Done);\n+\n             STPO.Unlock (Caller);\n \n             if Single_Lock then\n                Unlock_RTS;\n             end if;\n \n-            Entry_Calls.Reset_Priority\n-              (Self_Id, Entry_Call.Acceptor_Prev_Priority);\n+            Entry_Calls.Reset_Priority (Self_Id, Acceptor_Prev_Priority);\n          end if;\n       end if;\n "}]}