{"sha": "43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNmNDc5ZDYzZjk3NWZmMGNmNTZiNTRjZTVmYzc4ZTM1YTZjOGQzYw==", "commit": {"author": {"name": "Dale Johannesen", "email": "dalej@apple.com", "date": "2005-04-13T19:28:31Z"}, "committer": {"name": "Dale Johannesen", "email": "dalej@gcc.gnu.org", "date": "2005-04-13T19:28:31Z"}, "message": "Make-lang.in (objc-lang.o): Depend on tree-gimple.h.\n\n2005-04-13  Dale Johannesen  <dalej@apple.com>\n\n        * objc/Make-lang.in (objc-lang.o):  Depend on tree-gimple.h.\n        (objc-act.o):  Ditto.\n        * objc/objc-act.c (objc_gimplify_expr):  New.\n        (objc_get_callee_fndecl):  New.\n        * objc/objc-act.h:  Include tree-gimple.h.  Declare new functions.\n        * objc/objc-lang.c (LANG_HOOKS_GIMPLIFY_EXPR):  Define.\n        (LANG_HOOKS_GET_CALLEE_FNDECL):  Define.\n\nFrom-SVN: r98105", "tree": {"sha": "ef7ffb91458818196375fa47f24e3c65567c411e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef7ffb91458818196375fa47f24e3c65567c411e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c/comments", "author": null, "committer": null, "parents": [{"sha": "f3b2c50692aa4ed501968c09e74fdb4a7474c589", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3b2c50692aa4ed501968c09e74fdb4a7474c589", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3b2c50692aa4ed501968c09e74fdb4a7474c589"}], "stats": {"total": 72, "additions": 70, "deletions": 2}, "files": [{"sha": "f2ac5bb5f1392cd7781827055e9a8ec7164b6e4e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c", "patch": "@@ -1,3 +1,13 @@\n+2005-04-13  Dale Johannesen  <dalej@apple.com>\n+\n+        * objc/Make-lang.in (objc-lang.o):  Depend on tree-gimple.h.\n+        (objc-act.o):  Ditto.\n+        * objc/objc-act.c (objc_gimplify_expr):  New.\n+        (objc_get_callee_fndecl):  New.\n+        * objc/objc-act.h:  Include tree-gimple.h.  Declare new functions.\n+        * objc/objc-lang.c (LANG_HOOKS_GIMPLIFY_EXPR):  Define.\n+        (LANG_HOOKS_GET_CALLEE_FNDECL):  Define.\n+\n 2005-04-13  Devang Patel  <dpatel@apple.com>\n \n \t* tree-if-conv.c (tree_if_convert_cond_expr): Do not create extra"}, {"sha": "10496c477fccea9e66cb4869e8f98c29d40d0bc2", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c", "patch": "@@ -60,13 +60,13 @@ objc/objc-lang.o : objc/objc-lang.c \\\n    $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(C_TREE_H) $(C_PRETTY_PRINT_H) $(DIAGNOSTIC_H) \\\n    $(GGC_H) langhooks.h $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-objc.h \\\n-   c-objc-common.h objc/objc-act.h\n+   c-objc-common.h objc/objc-act.h tree-gimple.h\n \n objc/objc-act.o : objc/objc-act.c \\\n    $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) $(TM_P_H) \\\n    $(EXPR_H) $(TARGET_H) $(C_TREE_H) diagnostic.h toplev.h flags.h \\\n    objc/objc-act.h input.h function.h output.h debug.h langhooks.h \\\n-   $(LANGHOOKS_DEF_H) $(HASHTAB_H) c-pragma.h gt-objc-objc-act.h\n+   $(LANGHOOKS_DEF_H) $(HASHTAB_H) c-pragma.h gt-objc-objc-act.h tree-gimple.h\n \n objc.srcextra:\n "}, {"sha": "986fb9f24ba30e43a012d3baa5cb809b7d85cb90", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c", "patch": "@@ -8569,4 +8569,53 @@ objc_lookup_ivar (tree other, tree id)\n   return build_ivar_reference (id);\n }\n \n+/* Look for the special case of OBJC_TYPE_REF with the address of\n+   a function in OBJ_TYPE_REF_EXPR (presumably objc_msgSend or one\n+   of its cousins).  */\n+\n+enum gimplify_status objc_gimplify_expr (tree *expr_p, tree *pre_p, \n+\t\t\t\t\t tree *post_p)\n+{\n+  enum gimplify_status r0, r1;\n+  if (TREE_CODE (*expr_p) == OBJ_TYPE_REF \n+      && TREE_CODE (OBJ_TYPE_REF_EXPR (*expr_p)) == ADDR_EXPR\n+      && TREE_CODE (TREE_OPERAND (OBJ_TYPE_REF_EXPR (*expr_p), 0)) \n+\t    == FUNCTION_DECL)\n+    {\n+      /* Postincrements in OBJ_TYPE_REF_OBJECT don't affect the\n+\t value of the OBJ_TYPE_REF, so force them to be emitted\n+\t during subexpression evaluation rather than after the\n+\t OBJ_TYPE_REF. This permits objc_msgSend calls in Objective\n+\t C to use direct rather than indirect calls when the\n+\t object expression has a postincrement.  */\n+      r0 = gimplify_expr (&OBJ_TYPE_REF_OBJECT (*expr_p), pre_p, NULL,\n+\t\t\t  is_gimple_val, fb_rvalue);\n+      r1 = gimplify_expr (&OBJ_TYPE_REF_EXPR (*expr_p), pre_p, post_p,\n+\t\t\t  is_gimple_val, fb_rvalue);\n+      return MIN (r0, r1);\n+    }\n+  return c_gimplify_expr (expr_p, pre_p, post_p);\n+}\n+\n+/* Given a CALL expression, find the function being called.  The ObjC\n+   version looks for the OBJ_TYPE_REF_EXPR which is used for objc_msgSend.  */\n+\n+tree\n+objc_get_callee_fndecl (tree call_expr)\n+{\n+  tree addr = TREE_OPERAND (call_expr, 0);\n+  if (TREE_CODE (addr) != OBJ_TYPE_REF)\n+    return 0;\n+\n+  addr = OBJ_TYPE_REF_EXPR (addr);\n+\n+  /* If the address is just `&f' for some function `f', then we know\n+     that `f' is being called.  */\n+  if (TREE_CODE (addr) == ADDR_EXPR\n+      && TREE_CODE (TREE_OPERAND (addr, 0)) == FUNCTION_DECL)\n+    return TREE_OPERAND (addr, 0);\n+\n+  return 0;\n+}\n+\n #include \"gt-objc-objc-act.h\""}, {"sha": "4050303662cc4784cfe89e22b37cbccad5ea1719", "filename": "gcc/objc/objc-act.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c/gcc%2Fobjc%2Fobjc-act.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c/gcc%2Fobjc%2Fobjc-act.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.h?ref=43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c", "patch": "@@ -22,13 +22,18 @@ Boston, MA 02111-1307, USA.  */\n #ifndef GCC_OBJC_ACT_H\n #define GCC_OBJC_ACT_H\n \n+/* For enum gimplify_status */\n+#include \"tree-gimple.h\"\n+\n /*** Language hooks ***/\n \n bool objc_init (void);\n const char *objc_printable_name (tree, int);\n+tree objc_get_callee_fndecl (tree);\n void objc_finish_file (void);\n tree objc_fold_obj_type_ref (tree, tree);\n int objc_types_compatible_p (tree, tree);\n+enum gimplify_status objc_gimplify_expr (tree *, tree *, tree *);\n \n /* NB: The remaining public functions are prototyped in c-common.h, for the\n    benefit of stub-objc.c and objc-act.c.  */"}, {"sha": "0d64dbd2487c954624bc688aed99e1c635729746", "filename": "gcc/objc/objc-lang.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c/gcc%2Fobjc%2Fobjc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c/gcc%2Fobjc%2Fobjc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-lang.c?ref=43f479d63f975ff0cf56b54ce5fc78e35a6c8d3c", "patch": "@@ -47,6 +47,10 @@ enum c_language_kind c_language = clk_objc;\n #define LANG_HOOKS_DECL_PRINTABLE_NAME objc_printable_name\n #undef LANG_HOOKS_TYPES_COMPATIBLE_P\n #define LANG_HOOKS_TYPES_COMPATIBLE_P objc_types_compatible_p\n+#undef LANG_HOOKS_GIMPLIFY_EXPR \n+#define LANG_HOOKS_GIMPLIFY_EXPR objc_gimplify_expr\n+#undef LANG_HOOKS_GET_CALLEE_FNDECL\n+#define LANG_HOOKS_GET_CALLEE_FNDECL\tobjc_get_callee_fndecl\n \n /* Each front end provides its own lang hook initializer.  */\n const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;"}]}