{"sha": "65e82636bcdb72a878c2e53943e71b15dd9fb22d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVlODI2MzZiY2RiNzJhODc4YzJlNTM5NDNlNzFiMTVkZDlmYjIyZA==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-10-05T06:01:04Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-11-06T03:08:52Z"}, "message": "PR target/96307: Fix KASAN option checking.\n\n - Disable kasan if target is unsupported and -fasan-shadow-offset= is not\n   given, no matter `--param asan-stack=1` is given or not.\n\n - Moving KASAN option checking testcase to gcc.dg, those testcase could be\n   useful for all other target which not support asan.\n\n - Verifed on riscv and x86.\n\ngcc/ChangeLog:\n\n\tPR target/96307\n\t* toplev.c (process_options): Remove param_asan_stack checking for kasan\n\toption checking.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/96307\n\t* gcc.dg/pr96307.c: New.\n\t* gcc.target/riscv/pr96260.c: Move this test case from here to ...\n\t* gcc.dg/pr96260.c: ... here.\n\t* gcc.target/riscv/pr91441.c: Move this test case from here to ...\n\t* gcc.dg/pr91441.c: ... here.\n\t* lib/target-supports.exp (check_effective_target_no_fsanitize_address):\n\tNew proc.", "tree": {"sha": "27d7ab7a0566078eb8d660092c1804a998c17ba3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27d7ab7a0566078eb8d660092c1804a998c17ba3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65e82636bcdb72a878c2e53943e71b15dd9fb22d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65e82636bcdb72a878c2e53943e71b15dd9fb22d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65e82636bcdb72a878c2e53943e71b15dd9fb22d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65e82636bcdb72a878c2e53943e71b15dd9fb22d/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f72af3af8d526793e4927daf44ae0611c3d0cc85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f72af3af8d526793e4927daf44ae0611c3d0cc85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f72af3af8d526793e4927daf44ae0611c3d0cc85"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "4f7a8fbec5e92e204512153720d294f2d8919a65", "filename": "gcc/testsuite/gcc.dg/pr91441.c", "status": "renamed", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e82636bcdb72a878c2e53943e71b15dd9fb22d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr91441.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e82636bcdb72a878c2e53943e71b15dd9fb22d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr91441.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr91441.c?ref=65e82636bcdb72a878c2e53943e71b15dd9fb22d", "patch": "@@ -1,5 +1,6 @@\n /* PR target/91441 */\n /* { dg-do compile  } */\n+/* { dg-require-effective-target no_fsanitize_address }*/\n /* { dg-options \"--param asan-stack=1 -fsanitize=kernel-address\" } */\n \n int *bar(int *);", "previous_filename": "gcc/testsuite/gcc.target/riscv/pr91441.c"}, {"sha": "734832f021e321f58b8a73d09539114bef33ee0f", "filename": "gcc/testsuite/gcc.dg/pr96260.c", "status": "renamed", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e82636bcdb72a878c2e53943e71b15dd9fb22d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr96260.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e82636bcdb72a878c2e53943e71b15dd9fb22d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr96260.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr96260.c?ref=65e82636bcdb72a878c2e53943e71b15dd9fb22d", "patch": "@@ -1,5 +1,6 @@\n /* PR target/96260 */\n /* { dg-do compile } */\n+/* { dg-require-effective-target no_fsanitize_address }*/\n /* { dg-options \"--param asan-stack=1 -fsanitize=kernel-address -fasan-shadow-offset=0x100000\" } */\n \n int *bar(int *);", "previous_filename": "gcc/testsuite/gcc.target/riscv/pr96260.c"}, {"sha": "cd1c17c9661b190a464f0eb0069a80d5625451dd", "filename": "gcc/testsuite/gcc.dg/pr96307.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e82636bcdb72a878c2e53943e71b15dd9fb22d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr96307.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e82636bcdb72a878c2e53943e71b15dd9fb22d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr96307.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr96307.c?ref=65e82636bcdb72a878c2e53943e71b15dd9fb22d", "patch": "@@ -0,0 +1,25 @@\n+/* PR target/96307 */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target no_fsanitize_address }*/\n+/* { dg-additional-options \"-fsanitize=kernel-address --param=asan-instrumentation-with-call-threshold=8\" } */\n+\n+#include <limits.h>\n+enum a {test1, test2, test3=INT_MAX};\n+enum a a;\n+enum a *b;\n+\n+void reset (void);\n+\n+void\n+t()\n+{\n+  if (a != test2)\n+    __builtin_abort ();\n+  if (*b != test2)\n+    __builtin_abort ();\n+  reset ();\n+  if (a != test1)\n+    __builtin_abort ();\n+  if (*b != test1)\n+    __builtin_abort ();\n+}"}, {"sha": "08e96e12ee8fcb1853326f568aed8f20ab03ff86", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e82636bcdb72a878c2e53943e71b15dd9fb22d/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e82636bcdb72a878c2e53943e71b15dd9fb22d/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=65e82636bcdb72a878c2e53943e71b15dd9fb22d", "patch": "@@ -10582,3 +10582,14 @@ proc check_effective_target_movdir { } {\n \t}\n     } \"-mmovdiri -mmovdir64b\" ]\n }\n+\n+# Return 1 if target is not support address sanitize, 1 otherwise.\n+\n+proc check_effective_target_no_fsanitize_address {} {\n+    if ![check_no_compiler_messages fsanitize_address executable {\n+\tint main (void) { return 0; }\n+    }] {\n+\treturn 1;\n+    }\n+    return 0;\n+}"}, {"sha": "e32dc285c1c95385ab6e841b9d54c0a8808b880c", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e82636bcdb72a878c2e53943e71b15dd9fb22d/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e82636bcdb72a878c2e53943e71b15dd9fb22d/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=65e82636bcdb72a878c2e53943e71b15dd9fb22d", "patch": "@@ -1843,7 +1843,6 @@ process_options (void)\n \n   if ((flag_sanitize & SANITIZE_KERNEL_ADDRESS)\n       && (targetm.asan_shadow_offset == NULL\n-\t  && param_asan_stack\n \t  && !asan_shadow_offset_set_p ()))\n     {\n       warning_at (UNKNOWN_LOCATION, 0,"}]}