{"sha": "9a4d32f85ccebc0ee4b24e6d9d7a4f11c04d7146", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE0ZDMyZjg1Y2NlYmMwZWU0YjI0ZTZkOWQ3YTRmMTFjMDRkNzE0Ng==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2021-02-02T11:44:34Z"}, "committer": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2021-02-04T23:06:22Z"}, "message": "openacc: Allow strided arrays in update directives\n\nOpenACC 3.0 (\"2.14.4. Update Directive\") states:\n\n  Noncontiguous subarrays may appear. It is implementation-specific\n  whether noncontiguous regions are updated by using one transfer for\n  each contiguous subregion, or whether the non-contiguous data is\n  packed, transferred once, and unpacked, or whether one or more larger\n  subarrays (no larger than the smallest contiguous region that contains\n  the specified subarray) are updated.\n\nThis patch relaxes some conditions in the Fortran front-end so that\nstrided accesses are permitted for update directives.\n\ngcc/fortran/\n\t* openmp.c (resolve_omp_clauses): Omit OpenACC update in\n\tcontiguity check and stride-specified error.\n\ngcc/testsuite/\n\t* gfortran.dg/goacc/array-with-dt-2.f90: New test.\n\nlibgomp/\n\t* testsuite/libgomp.oacc-fortran/array-stride-dt-1.f90: New test.", "tree": {"sha": "9b47e00d20731fb47c9f61a1fdf40ca76843c091", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b47e00d20731fb47c9f61a1fdf40ca76843c091"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a4d32f85ccebc0ee4b24e6d9d7a4f11c04d7146", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a4d32f85ccebc0ee4b24e6d9d7a4f11c04d7146", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a4d32f85ccebc0ee4b24e6d9d7a4f11c04d7146", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a4d32f85ccebc0ee4b24e6d9d7a4f11c04d7146/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f743fe231663e32d52db987650d0ec3381a777af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f743fe231663e32d52db987650d0ec3381a777af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f743fe231663e32d52db987650d0ec3381a777af"}], "stats": {"total": 59, "additions": 57, "deletions": 2}, "files": [{"sha": "797f6c86b62049e436d45fc6c05007458c04098a", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4d32f85ccebc0ee4b24e6d9d7a4f11c04d7146/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4d32f85ccebc0ee4b24e6d9d7a4f11c04d7146/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=9a4d32f85ccebc0ee4b24e6d9d7a4f11c04d7146", "patch": "@@ -5192,7 +5192,8 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \t\t\t   array isn't contiguous.  An expression such as\n \t\t\t   arr(-n:n,-n:n) could be contiguous even if it looks\n \t\t\t   like it may not be.  */\n-\t\t\tif (list != OMP_LIST_CACHE\n+\t\t\tif (code->op != EXEC_OACC_UPDATE\n+\t\t\t    && list != OMP_LIST_CACHE\n \t\t\t    && list != OMP_LIST_DEPEND\n \t\t\t    && !gfc_is_simply_contiguous (n->expr, false, true)\n \t\t\t    && gfc_is_not_contiguous (n->expr))\n@@ -5230,7 +5231,7 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \t\t\tint i;\n \t\t\tgfc_array_ref *ar = &array_ref->u.ar;\n \t\t\tfor (i = 0; i < ar->dimen; i++)\n-\t\t\t  if (ar->stride[i])\n+\t\t\t  if (ar->stride[i] && code->op != EXEC_OACC_UPDATE)\n \t\t\t    {\n \t\t\t      gfc_error (\"Stride should not be specified for \"\n \t\t\t\t\t \"array section in %s clause at %L\","}, {"sha": "807580d75a9c86aa0922a1917d66043b23b4a10e", "filename": "gcc/testsuite/gfortran.dg/goacc/array-with-dt-2.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4d32f85ccebc0ee4b24e6d9d7a4f11c04d7146/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Farray-with-dt-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4d32f85ccebc0ee4b24e6d9d7a4f11c04d7146/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Farray-with-dt-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Farray-with-dt-2.f90?ref=9a4d32f85ccebc0ee4b24e6d9d7a4f11c04d7146", "patch": "@@ -0,0 +1,10 @@\n+type t\n+   integer, allocatable :: A(:,:)\n+end type t\n+\n+type(t), allocatable :: b(:)\n+\n+!$acc update host(b(::2))\n+!$acc update host(b(1)%A(::3,::4))\n+end\n+"}, {"sha": "f04d76d583abfe21c4d39de0f67de42138ea5065", "filename": "libgomp/testsuite/libgomp.oacc-fortran/array-stride-dt-1.f90", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4d32f85ccebc0ee4b24e6d9d7a4f11c04d7146/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Farray-stride-dt-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4d32f85ccebc0ee4b24e6d9d7a4f11c04d7146/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Farray-stride-dt-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Farray-stride-dt-1.f90?ref=9a4d32f85ccebc0ee4b24e6d9d7a4f11c04d7146", "patch": "@@ -0,0 +1,44 @@\n+! { dg-do run }\n+\n+type t\n+   integer, allocatable :: A(:,:)\n+end type t\n+\n+type(t), allocatable :: b(:)\n+\n+integer :: i\n+\n+allocate(b(1:20))\n+do i=1,20\n+  allocate(b(i)%A(1:20,1:20))\n+end do\n+\n+do i=1,20\n+  b(i)%A(:,:) = 0\n+end do\n+\n+!$acc enter data copyin(b)\n+do i=1,20\n+  !$acc enter data copyin(b(i)%A)\n+end do\n+\n+b(1)%A(:,:) = 5\n+\n+!$acc update device(b(::2))\n+!$acc update device(b(1)%A(::3,::4))\n+\n+do i=1,20\n+  !$acc exit data copyout(b(i)%A)\n+end do\n+!$acc exit data copyout(b)\n+\n+! This is necessarily conservative because the \"update\" is allowed to copy\n+! e.g. the whole of the containing block for a discontinuous update.\n+! Try to ensure that the update covers a sufficient portion of the array.\n+\n+if (any(b(1)%A(::3,::4) .ne. 5)) stop 1\n+do i=2,20\n+  if (any(b(i)%A(:,:) .ne. 0)) stop 2\n+end do\n+\n+end"}]}