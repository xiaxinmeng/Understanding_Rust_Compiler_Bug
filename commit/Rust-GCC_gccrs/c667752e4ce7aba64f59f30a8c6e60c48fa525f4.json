{"sha": "c667752e4ce7aba64f59f30a8c6e60c48fa525f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY2Nzc1MmU0Y2U3YWJhNjRmNTlmMzBhOGM2ZTYwYzQ4ZmE1MjVmNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2018-05-30T08:56:05Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-30T08:56:05Z"}, "message": "[Ada] Move target pair settings in Makefiles\n\n2018-05-30  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* gcc-interface/Makefile.in: Move target pair settings from here...\n\t* Makefile.rtl: ... to here.\n\t(setup-rts): New target.\n\nFrom-SVN: r260921", "tree": {"sha": "9346b601599a5af253a4ddc34fc5da6dc00fa536", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9346b601599a5af253a4ddc34fc5da6dc00fa536"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c667752e4ce7aba64f59f30a8c6e60c48fa525f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c667752e4ce7aba64f59f30a8c6e60c48fa525f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c667752e4ce7aba64f59f30a8c6e60c48fa525f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c667752e4ce7aba64f59f30a8c6e60c48fa525f4/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b005486b25cf42a55c418830a4007c83b42c1625", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b005486b25cf42a55c418830a4007c83b42c1625", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b005486b25cf42a55c418830a4007c83b42c1625"}], "stats": {"total": 3761, "additions": 1970, "deletions": 1791}, "files": [{"sha": "430e75f54aea3ad9972166b163bb889095b6134b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c667752e4ce7aba64f59f30a8c6e60c48fa525f4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c667752e4ce7aba64f59f30a8c6e60c48fa525f4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c667752e4ce7aba64f59f30a8c6e60c48fa525f4", "patch": "@@ -1,3 +1,9 @@\n+2018-05-30  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gcc-interface/Makefile.in: Move target pair settings from here...\n+\t* Makefile.rtl: ... to here.\n+\t(setup-rts): New target.\n+\n 2018-05-29  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* doc/gnat_ugn/building_executable_programs_with_gnat.rst (Alphabetical"}, {"sha": "17d2ecc1f05388fe7a4e25003475bc9de1c8bc81", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 1960, "deletions": 0, "changes": 1960, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c667752e4ce7aba64f59f30a8c6e60c48fa525f4/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c667752e4ce7aba64f59f30a8c6e60c48fa525f4/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=c667752e4ce7aba64f59f30a8c6e60c48fa525f4", "patch": "@@ -713,3 +713,1963 @@ GNATRTL_NONTASKING_OBJS= \\\n   $(GNATRTL_ALTIVEC_OBJS) \\\n   $(GNATRTL_SOCKETS_OBJS) \\\n   $(EXTRA_GNATRTL_NONTASKING_OBJS)\n+\n+# LIBGNAT_TARGET_PAIRS is a list of pairs of filenames.\n+# The members of each pair must be separated by a '<' and no whitespace.\n+# Each pair must be separated by some amount of whitespace from the following\n+# pair.\n+\n+# Non-tasking case:\n+\n+LIBGNAT_TARGET_PAIRS = \\\n+a-intnam.ads<libgnarl/a-intnam__dummy.ads \\\n+s-inmaop.adb<libgnarl/s-inmaop__dummy.adb \\\n+s-intman.adb<libgnarl/s-intman__dummy.adb \\\n+s-osinte.ads<libgnarl/s-osinte__dummy.ads \\\n+s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+s-taprop.adb<libgnarl/s-taprop__dummy.adb \\\n+s-taspri.ads<libgnarl/s-taspri__dummy.ads\n+\n+# When using the GCC exception handling mechanism, we need to use an\n+# alternate body for a-exexpr.adb (a-exexpr-gcc.adb)\n+\n+EH_MECHANISM=\n+\n+# Compilation options for the GCC-SJLJ RTS. This may be augmented for\n+# target specific contexts, e.g. to add -fno-omit-frame-pointer for backtrace\n+# computations.\n+GNATLIBCFLAGS_FOR_GCCSJLJ=-fsjlj\n+\n+# Default shared object option. Note that we rely on the fact that the \"soname\"\n+# option will always be present and last in this flag, so that we can have\n+# $(SO_OPTS)libgnat-x.xx\n+\n+SO_OPTS = -Wl,-soname,\n+\n+# Default gnatlib-shared target.\n+# By default, equivalent to gnatlib.\n+# Set to gnatlib-shared-default, gnatlib-shared-dual, or a platform specific\n+# target when supported.\n+GNATLIB_SHARED = gnatlib\n+\n+# By default, build socket support units. On platforms that do not support\n+# sockets, reset this variable to empty and add DUMMY_SOCKETS_TARGET_PAIRS\n+# to LIBGNAT_TARGET_PAIRS.\n+\n+GNATRTL_SOCKETS_OBJS = g-soccon$(objext) g-socket$(objext) g-socthi$(objext) \\\n+  g-soliop$(objext) g-sothco$(objext)\n+\n+DUMMY_SOCKETS_TARGET_PAIRS = \\\n+  g-socket.adb<libgnat/g-socket__dummy.adb \\\n+  g-socket.ads<libgnat/g-socket__dummy.ads \\\n+  g-socthi.adb<libgnat/g-socthi__dummy.adb \\\n+  g-socthi.ads<libgnat/g-socthi__dummy.ads \\\n+  g-sothco.adb<libgnat/g-sothco__dummy.adb \\\n+  g-sothco.ads<libgnat/g-sothco__dummy.ads\n+\n+# On platforms where atomic increment/decrement operations are supported,\n+# special version of Ada.Strings.Unbounded package can be used.\n+\n+ATOMICS_TARGET_PAIRS = \\\n+  a-coinho.adb<libgnat/a-coinho__shared.adb \\\n+  a-coinho.ads<libgnat/a-coinho__shared.ads \\\n+  a-stunau.adb<libgnat/a-stunau__shared.adb \\\n+  a-suteio.adb<libgnat/a-suteio__shared.adb \\\n+  a-strunb.ads<libgnat/a-strunb__shared.ads \\\n+  a-strunb.adb<libgnat/a-strunb__shared.adb \\\n+  a-stwiun.adb<libgnat/a-stwiun__shared.adb \\\n+  a-stwiun.ads<libgnat/a-stwiun__shared.ads \\\n+  a-swunau.adb<libgnat/a-swunau__shared.adb \\\n+  a-swuwti.adb<libgnat/a-swuwti__shared.adb \\\n+  a-stzunb.adb<libgnat/a-stzunb__shared.adb \\\n+  a-stzunb.ads<libgnat/a-stzunb__shared.ads \\\n+  a-szunau.adb<libgnat/a-szunau__shared.adb \\\n+  a-szuzti.adb<libgnat/a-szuzti__shared.adb\n+\n+ATOMICS_BUILTINS_TARGET_PAIRS = \\\n+  s-atocou.adb<libgnat/s-atocou__builtin.adb\n+\n+# Special version of units for x86 and x86-64 platforms.\n+\n+X86_TARGET_PAIRS = \\\n+  a-numaux.ads<libgnat/a-numaux__x86.ads \\\n+  a-numaux.adb<libgnat/a-numaux__x86.adb \\\n+  s-atocou.adb<libgnat/s-atocou__x86.adb\n+\n+X86_64_TARGET_PAIRS = \\\n+  a-numaux.ads<libgnat/a-numaux__x86.ads \\\n+  a-numaux.adb<libgnat/a-numaux__x86.adb \\\n+  s-atocou.adb<libgnat/s-atocou__builtin.adb\n+\n+# Implementation of symbolic traceback based on dwarf\n+TRASYM_DWARF_UNIX_PAIRS = \\\n+  s-trasym.adb<libgnat/s-trasym__dwarf.adb \\\n+  s-mmosin.ads<libgnat/s-mmosin__unix.ads \\\n+  s-mmosin.adb<libgnat/s-mmosin__unix.adb \\\n+  s-mmauni.ads<libgnat/s-mmauni__long.ads\n+\n+TRASYM_DWARF_MINGW_PAIRS = \\\n+  s-trasym.adb<libgnat/s-trasym__dwarf.adb \\\n+  s-mmosin.ads<libgnat/s-mmosin__mingw.ads \\\n+  s-mmosin.adb<libgnat/s-mmosin__mingw.adb\n+\n+TRASYM_DWARF_COMMON_OBJS = s-objrea$(objext) s-dwalin$(objext) s-mmap$(objext) \\\n+  s-mmosin$(objext)\n+\n+TRASYM_DWARF_UNIX_OBJS = $(TRASYM_DWARF_COMMON_OBJS) s-mmauni$(objext)\n+\n+TRASYM_DWARF_MINGW_OBJS = $(TRASYM_DWARF_COMMON_OBJS)\n+\n+# Shared library version\n+LIB_VERSION = $(strip $(shell grep ' Library_Version :' $(GNAT_SRC)/gnatvsn.ads | sed -e 's/.*\"\\(.*\\)\".*/\\1/'))\n+\n+# Additional object files from C source to be added to libgnat.\n+EXTRA_LIBGNAT_OBJS=\n+\n+# Additional C source files to be added to libgnat without corresponding\n+# object file (#included files). This should include at least the GNAT\n+# specific header files required to rebuild the runtime library from sources.\n+EXTRA_LIBGNAT_SRCS=\n+\n+# Additional object files from Ada sources to be added in libgnat\n+EXTRA_GNATRTL_NONTASKING_OBJS=\n+\n+# Additional object files from Ada sources to be added in libgnarl\n+EXTRA_GNATRTL_TASKING_OBJS=\n+\n+# Subsets of extra libgnat sources that always go together\n+VX_SIGTRAMP_EXTRA_SRCS=sigtramp.h sigtramp-vxworks-target.inc\n+\n+# Additional object files that should go in the same directory as libgnat,\n+# aside the library itself. Typically useful for crtbegin/crtend kind of files.\n+EXTRA_ADALIB_OBJS=\n+\n+# crt files for VxWorks exception tables registration, referenced by\n+# spec files in the runtime library.\n+VX_CRTBE_EXTRA_ADALIB_OBJS=vx_crtbegin.o vx_crtbegin_array.o vx_crtend.o\n+\n+# Contructor attributes (with priorities) are only supported on VxWorks 7\n+# or for RTPs.\n+ifneq ($(strip $(filter vxworks7% rtp%,$(target_os) $(THREAD_KIND))),)\n+VX_CRTBE_EXTRA_ADALIB_OBJS+=vx_crtbegin_attr.o\n+endif\n+\n+# GCC spec files to be installed in $(libsubdir), so --specs=<spec-filename>\n+# finds them at runtime.\n+GCC_SPEC_FILES=\n+\n+# $(filter-out PATTERN...,TEXT) removes all PATTERN words from TEXT.\n+# $(strip STRING) removes leading and trailing spaces from STRING.\n+# If what's left is null then it's a match.\n+\n+# PowerPC and e500v2 VxWorks\n+ifeq ($(strip $(filter-out powerpc% wrs vxworks vxworksspe vxworks7 vxworks7spe,$(target_cpu) $(target_vendor) $(target_os))),)\n+\n+  ifeq ($(strip $(filter-out e500%, $(target_alias))),)\n+     ARCH_STR=e500\n+     # gcc config translates the target e500v2-wrs-vxworks to\n+     # powerpc-wrs-vxworksspe. Let's keep the original alias here when\n+     # generating s-oscons.ads.\n+     target=$(target_alias)\n+  else\n+     ifeq ($(strip $(filter-out powerpc64, $(target_cpu))),)\n+        ARCH_STR=ppc64\n+     else\n+        ARCH_STR=ppc\n+     endif\n+  endif\n+\n+  VX=$(strip $(if $(filter vxworks7%, $(target_os)), vxworks7, vxworks))\n+  SVX=system-$(VX)\n+  GCC_SPEC_FILES+=$(VX)-gnat-crtbe-link.spec\n+\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__vxworks.ads \\\n+  a-numaux.ads<libgnat/a-numaux__vxworks.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__vxworks.adb \\\n+  s-intman.ads<libgnarl/s-intman__vxworks.ads \\\n+  s-intman.adb<libgnarl/s-intman__vxworks.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__vxworks.ads \\\n+  s-osinte.adb<libgnarl/s-osinte__vxworks.adb \\\n+  s-osprim.adb<libgnat/s-osprim__vxworks.adb \\\n+  s-parame.ads<libgnat/s-parame__vxworks.ads \\\n+  s-parame.adb<libgnat/s-parame__vxworks.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__vxworks.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__vxworks.ads \\\n+  s-taspri.ads<libgnarl/s-taspri__vxworks.ads \\\n+  s-vxwork.ads<libgnarl/s-vxwork__ppc.ads \\\n+  g-socthi.ads<libgnat/g-socthi__vxworks.ads \\\n+  g-socthi.adb<libgnat/g-socthi__vxworks.adb \\\n+  g-stsifd.adb<libgnat/g-stsifd__sockets.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS)\n+\n+  # VxWorks 5 and 6 both use the same target triplet making them\n+  # indistinguishable in the context of this make file. Package\n+  # System.Stack_Checking.Operations is not needed on VxWorks 6 as it leads to\n+  # an undefined symbol when building a dynamic shared library. To alleviate\n+  # this problem and distinguish this case, we use the THREAD_KIND and include\n+  # the package only in default mode.\n+\n+  ifeq ($(strip $(filter-out default,$(THREAD_KIND))),)\n+    LIBGNAT_TARGET_PAIRS += \\\n+      s-stchop.ads<libgnat/s-stchop__limit.ads \\\n+      s-stchop.adb<libgnat/s-stchop__vxworks.adb\n+    EXTRA_GNATRTL_NONTASKING_OBJS+=s-stchop.o\n+  endif\n+\n+  TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n+\n+  ifeq ($(strip $(filter-out rtp,$(THREAD_KIND))),)\n+    LIBGNAT_TARGET_PAIRS += \\\n+    s-vxwext.ads<libgnarl/s-vxwext__rtp.ads \\\n+    s-vxwext.adb<libgnarl/s-vxwext__rtp.adb \\\n+    s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-rtp.adb \\\n+    system.ads<libgnat/$(SVX)-$(ARCH_STR)-rtp.ads\n+\n+    EH_MECHANISM=-gcc\n+  else\n+    ifeq ($(strip $(filter-out rtp-smp,$(THREAD_KIND))),)\n+      LIBGNAT_TARGET_PAIRS += \\\n+      s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+      s-vxwext.ads<libgnarl/s-vxwext__rtp.ads \\\n+      s-vxwext.adb<libgnarl/s-vxwext__rtp-smp.adb \\\n+      s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-tls.adb \\\n+      system.ads<libgnat/$(SVX)-$(ARCH_STR)-rtp-smp.ads\n+\n+      EH_MECHANISM=-gcc\n+      EXTRA_LIBGNAT_OBJS+=affinity.o\n+    else\n+      ifeq ($(strip $(filter-out kernel-smp,$(THREAD_KIND))),)\n+        LIBGNAT_TARGET_PAIRS += \\\n+        s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n+        s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+        s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-tls.adb \\\n+        s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n+        s-vxwext.adb<libgnarl/s-vxwext__kernel-smp.adb \\\n+        system.ads<libgnat/$(SVX)-$(ARCH_STR)-kernel.ads\n+\n+        EH_MECHANISM=-gcc\n+        EXTRA_LIBGNAT_OBJS+=affinity.o\n+      else\n+        LIBGNAT_TARGET_PAIRS += \\\n+        s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n+        s-tpopsp.adb<libgnarl/s-tpopsp__vxworks.adb\n+\n+        ifeq ($(strip $(filter-out kernel,$(THREAD_KIND))),)\n+          EH_MECHANISM=-gcc\n+          LIBGNAT_TARGET_PAIRS += \\\n+          s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n+          s-vxwext.adb<libgnarl/s-vxwext__kernel.adb \\\n+          system.ads<libgnat/$(SVX)-$(ARCH_STR)-kernel.ads\n+        else\n+          LIBGNAT_TARGET_PAIRS += \\\n+          system.ads<libgnat/system-vxworks-ppc.ads\n+        endif\n+      endif\n+      EXTRA_GNATRTL_NONTASKING_OBJS+=i-vxinco.o i-vxwork.o i-vxwoio.o\n+    endif\n+  endif\n+\n+  EXTRA_LIBGNAT_OBJS+=sigtramp-vxworks.o\n+  EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n+\n+  EXTRA_GNATRTL_TASKING_OBJS += s-vxwork.o s-vxwext.o\n+\n+  EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n+\n+  EXTRA_ADALIB_OBJS+=$(VX_CRTBE_EXTRA_ADALIB_OBJS)\n+  EXTRA_LIBGNAT_SRCS+=vx_crtbegin.inc\n+\n+  ifeq ($(strip $(filter-out vxworks7%, $(target_os))),)\n+    ifeq ($(strip $(filter-out powerpc64, $(target_cpu))),)\n+      GCC_SPEC_FILES+=vxworks7-ppc64-rtp-base-link.spec\n+    else\n+      GCC_SPEC_FILES+=vxworks7-rtp-base-link.spec\n+    endif\n+  else\n+    GCC_SPEC_FILES+=vxworks-$(ARCH_STR)-link.spec\n+    GCC_SPEC_FILES+=vxworks-cert-$(ARCH_STR)-link.spec\n+    GCC_SPEC_FILES+=vxworks-smp-$(ARCH_STR)-link.spec\n+  endif\n+endif\n+\n+# PowerPC and e500v2 VxWorks 653\n+ifeq ($(strip $(filter-out powerpc% wrs vxworksae vxworksaespe,$(target_cpu) $(target_vendor) $(target_os))),)\n+\n+  ifeq ($(strip $(filter-out e500%, $(target_alias))),)\n+     ARCH_STR=e500\n+     # gcc config translates the target e500v2-wrs-vxworks to\n+     # powerpc-wrs-vxworksspe. Let's keep the original alias here when\n+     # generating s-oscons.ads.\n+     target=$(target_alias)\n+  else\n+     ARCH_STR=ppc\n+  endif\n+\n+  # target pairs for vthreads runtime\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-elchha.adb<libgnat/a-elchha__vxworks-ppc-full.adb \\\n+  a-intnam.ads<libgnarl/a-intnam__vxworks.ads \\\n+  a-numaux.ads<libgnat/a-numaux__vxworks.ads \\\n+  g-io.adb<hie/g-io__vxworks-ppc-cert.adb \\\n+  s-inmaop.adb<libgnarl/s-inmaop__vxworks.adb \\\n+  s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n+  s-intman.ads<libgnarl/s-intman__vxworks.ads \\\n+  s-intman.adb<libgnarl/s-intman__vxworks.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__vxworks.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__vxworks.ads \\\n+  s-osprim.adb<libgnat/s-osprim__vxworks.adb \\\n+  s-parame.ads<libgnat/s-parame__ae653.ads \\\n+  s-parame.adb<libgnat/s-parame__vxworks.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__vxworks.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__vxworks.ads \\\n+  s-taspri.ads<libgnarl/s-taspri__vxworks.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__vxworks.adb \\\n+  s-vxwext.adb<libgnarl/s-vxwext__noints.adb \\\n+  s-vxwext.ads<libgnarl/s-vxwext__vthreads.ads \\\n+  s-vxwork.ads<libgnarl/s-vxwork__ppc.ads \\\n+  system.ads<libgnat/system-vxworks-$(ARCH_STR)-vthread.ads \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS)\n+\n+  EH_MECHANISM=-gcc\n+\n+  TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n+  EXTRA_GNATRTL_TASKING_OBJS=i-vxinco.o s-vxwork.o s-vxwext.o\n+\n+  EXTRA_LIBGNAT_OBJS+=sigtramp-vxworks.o\n+  EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n+\n+  # Extra pairs for the vthreads runtime\n+  ifeq ($(strip $(filter-out vthreads,$(THREAD_KIND))),)\n+    LIBGNAT_TARGET_PAIRS += \\\n+    s-thread.adb<libgnat/s-thread__ae653.adb \\\n+    s-osvers.ads<libgnat/s-osvers__vxworks-653.ads \\\n+    $(DUMMY_SOCKETS_TARGET_PAIRS)\n+\n+    GNATRTL_SOCKETS_OBJS =\n+    EXTRA_GNATRTL_NONTASKING_OBJS += s-thread.o s-osvers.o\n+  else\n+    LIBGNAT_TARGET_PAIRS += \\\n+    g-socthi.ads<libgnat/g-socthi__vxworks.ads \\\n+    g-socthi.adb<libgnat/g-socthi__vxworks.adb \\\n+    g-stsifd.adb<libgnat/g-stsifd__sockets.adb\n+  endif\n+\n+endif\n+\n+# VxWorksae / VxWorks 653 for x86 (vxsim) - ?? VxWorks mils not implemented\n+ifeq ($(strip $(filter-out %86 wrs vxworksae,$(target_cpu) $(target_vendor) $(target_os))),)\n+  # target pairs for kernel + vthreads runtime\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-elchha.adb<libgnat/a-elchha__vxworks-ppc-full.adb \\\n+  a-intnam.ads<libgnarl/a-intnam__vxworks.ads \\\n+  a-numaux.ads<libgnat/a-numaux__vxworks.ads \\\n+  g-io.adb<hie/g-io__vxworks-ppc-cert.adb \\\n+  s-inmaop.adb<libgnarl/s-inmaop__vxworks.adb \\\n+  s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n+  s-intman.ads<libgnarl/s-intman__vxworks.ads \\\n+  s-intman.adb<libgnarl/s-intman__vxworks.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__vxworks.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__vxworks.ads \\\n+  s-osprim.adb<libgnat/s-osprim__vxworks.adb \\\n+  s-parame.ads<libgnat/s-parame__ae653.ads \\\n+  s-parame.adb<libgnat/s-parame__vxworks.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__vxworks.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__vxworks.ads \\\n+  s-taspri.ads<libgnarl/s-taspri__vxworks.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__vxworks.adb \\\n+  s-vxwext.adb<libgnarl/s-vxwext__noints.adb \\\n+  s-vxwext.ads<libgnarl/s-vxwext__vthreads.ads \\\n+  s-vxwork.ads<libgnarl/s-vxwork__x86.ads \\\n+  system.ads<libgnat/system-vxworks-x86-vthread.ads \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS)\n+\n+  EH_MECHANISM=-gcc\n+\n+  TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-thread.o\n+  EXTRA_GNATRTL_TASKING_OBJS=i-vxinco.o s-vxwork.o s-vxwext.o\n+\n+  EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n+  GNATRTL_SOCKETS_OBJS =\n+\n+  # Extra pairs for the vthreads runtime\n+  ifeq ($(strip $(filter-out vthreads,$(THREAD_KIND))),)\n+    LIBGNAT_TARGET_PAIRS += \\\n+    s-thread.adb<libgnat/s-thread__ae653.adb \\\n+    s-osvers.ads<libgnat/s-osvers__vxworks-653.ads \\\n+    $(DUMMY_SOCKETS_TARGET_PAIRS)\n+\n+    GNATRTL_SOCKETS_OBJS =\n+    EXTRA_GNATRTL_NONTASKING_OBJS += s-thread.o s-osvers.o\n+  else\n+    LIBGNAT_TARGET_PAIRS += \\\n+    g-socthi.ads<libgnat/g-socthi__vxworks.ads \\\n+    g-socthi.adb<libgnat/g-socthi__vxworks.adb \\\n+    g-stsifd.adb<libgnat/g-stsifd__sockets.adb\n+  endif\n+\n+endif\n+\n+# x86/x86_64 VxWorks\n+ifeq ($(strip $(filter-out %86 x86_64 wrs vxworks vxworks7,$(target_cpu) $(target_vendor) $(target_os))),)\n+\n+  EH_MECHANISM=-gcc\n+\n+  VX=$(strip $(if $(filter vxworks7%, $(target_os)), vxworks7, vxworks))\n+  SVX=system-$(VX)\n+  GCC_SPEC_FILES+=$(VX)-gnat-crtbe-link.spec\n+\n+  ifeq ($(strip $(filter-out x86_64, $(target_cpu))),)\n+     X86CPU=x86_64\n+     LIBGNAT_TARGET_PAIRS=$(X86_64_TARGET_PAIRS)\n+  else\n+     X86CPU=x86\n+     LIBGNAT_TARGET_PAIRS=$(X86_TARGET_PAIRS)\n+  endif\n+\n+  LIBGNAT_TARGET_PAIRS+= \\\n+  a-intnam.ads<libgnarl/a-intnam__vxworks.ads \\\n+  i-vxwork.ads<libgnat/i-vxwork__x86.ads \\\n+  s-osinte.adb<libgnarl/s-osinte__vxworks.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__vxworks.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__vxworks.adb \\\n+  s-intman.ads<libgnarl/s-intman__vxworks.ads \\\n+  s-intman.adb<libgnarl/s-intman__vxworks.adb \\\n+  s-osprim.adb<libgnat/s-osprim__vxworks.adb \\\n+  s-parame.ads<libgnat/s-parame__vxworks.ads \\\n+  s-parame.adb<libgnat/s-parame__vxworks.adb \\\n+  s-stchop.ads<libgnat/s-stchop__limit.ads \\\n+  s-stchop.adb<libgnat/s-stchop__vxworks.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__vxworks.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__vxworks.ads \\\n+  s-taspri.ads<libgnarl/s-taspri__vxworks.ads \\\n+  s-vxwork.ads<libgnarl/s-vxwork__x86.ads \\\n+  g-socthi.ads<libgnat/g-socthi__vxworks.ads \\\n+  g-socthi.adb<libgnat/g-socthi__vxworks.adb \\\n+  g-stsifd.adb<libgnat/g-stsifd__sockets.adb \\\n+  $(ATOMICS_TARGET_PAIRS)\n+\n+  TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n+\n+  # The CPU setting for VxSim varies with the\n+  # host (Windows or Linux)\n+  # target (VxWorks6 or VxWorks7)\n+  # runtime (rtp or kernel)\n+  # -------------------------------------------------------------\n+  #\t\t\t\t\tvx6\t\tvx7\n+  # Windows (host_os = mingw32)\n+  #\tkernel\t\t\t\tSIMNT\t\tSIMNT\n+  #\trtp\t\t\t\tSIMPENTIUM\tSIMNT\n+  # Linux (host_os = linux-gnu)\n+  #\tkernel\t\t\t\tSIMLINUX\tSIMLINUX\n+  #\trtp\t\t\t\tSIMPENTIUM\tSIMLINUX\n+  # -------------------------------------------------------------\n+  # It is overridden by VXSIM_CPU only in files init-vxsim.c and\n+  # sigtramp-vxworks-vxsim.c which contain functions determined at\n+  # runtime to be called if a program is running on VxSim vs real hardware\n+  # (due to differences in signal context for unwinding).\n+\n+  ifneq ($(strip $(filter-out vxworks7, $(target_os))),)\n+    ifeq ($(strip $(filter-out vxworks rtp rtp-smp,$(target_os) $(THREAD_KIND))),)\n+      VXSIM_CPU = SIMPENTIUM\n+    else\n+      ifeq ($(strip $(filter-out kernel kernel-smp rtp rtp-smp,$(THREAD_KIND))),)\n+        ifeq ($(strip $(filter-out linux%,$(host_os))),)\n+          # Linux\n+          VXSIM_CPU = SIMLINUX\n+        else\n+          # Windows\n+          VXSIM_CPU = SIMNT\n+        endif\n+      endif\n+    endif\n+\n+    GNATLIBCFLAGS_FOR_C := $(GNATLIBCFLAGS_FOR_C) -D__VXSIM_CPU__=$(VXSIM_CPU)\n+  endif\n+\n+  ifeq ($(strip $(filter-out rtp,$(THREAD_KIND))),)\n+    LIBGNAT_TARGET_PAIRS += \\\n+    s-vxwext.ads<libgnarl/s-vxwext__rtp.ads \\\n+    s-vxwext.adb<libgnarl/s-vxwext__rtp.adb \\\n+    s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-rtp.adb \\\n+    system.ads<libgnat/$(SVX)-x86-rtp.ads\n+  else\n+    ifeq ($(strip $(filter-out rtp-smp, $(THREAD_KIND))),)\n+      LIBGNAT_TARGET_PAIRS += \\\n+      s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+      s-vxwext.ads<libgnarl/s-vxwext__rtp.ads \\\n+      s-vxwext.adb<libgnarl/s-vxwext__rtp-smp.adb \\\n+      s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-tls.adb \\\n+      system.ads<libgnat/$(SVX)-$(X86CPU)-rtp-smp.ads\n+\n+      EXTRA_LIBGNAT_OBJS+=affinity.o\n+    else\n+      ifeq ($(strip $(filter-out kernel-smp, $(THREAD_KIND))),)\n+        LIBGNAT_TARGET_PAIRS += \\\n+        s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n+        s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+        s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-tls.adb \\\n+        s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n+        s-vxwext.adb<libgnarl/s-vxwext__kernel-smp.adb \\\n+        system.ads<libgnat/$(SVX)-$(X86CPU)-kernel.ads\n+\n+        EXTRA_LIBGNAT_OBJS+=affinity.o\n+      else\n+        LIBGNAT_TARGET_PAIRS += \\\n+        s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n+        s-tpopsp.adb<libgnarl/s-tpopsp__vxworks.adb\n+\n+        ifeq ($(strip $(filter-out kernel,$(THREAD_KIND))),)\n+          LIBGNAT_TARGET_PAIRS += \\\n+          s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n+          s-vxwext.adb<libgnarl/s-vxwext__kernel.adb \\\n+          system.ads<libgnat/$(SVX)-x86-kernel.ads\n+        else\n+          LIBGNAT_TARGET_PAIRS += \\\n+          system.ads<libgnat/system-vxworks-x86.ads\n+        endif\n+      endif\n+\n+      EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n+    endif\n+  endif\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS += s-stchop.o\n+  EXTRA_GNATRTL_TASKING_OBJS += i-vxinco.o s-vxwork.o s-vxwext.o\n+\n+  EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n+\n+  EXTRA_LIBGNAT_OBJS+=sigtramp-vxworks.o\n+  EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n+\n+  EXTRA_ADALIB_OBJS+=$(VX_CRTBE_EXTRA_ADALIB_OBJS)\n+  EXTRA_LIBGNAT_SRCS+=vx_crtbegin.inc\n+\n+  ifeq ($(strip $(filter-out vxworks7%, $(target_os))),)\n+    GCC_SPEC_FILES+=vxworks7-$(X86CPU)-rtp-base-link.spec\n+  else\n+    GCC_SPEC_FILES+=vxworks-x86-link.spec\n+    GCC_SPEC_FILES+=vxworks-cert-x86-link.spec\n+    GCC_SPEC_FILES+=vxworks-smp-x86-link.spec\n+  endif\n+endif\n+\n+# ARM and Aarch64 VxWorks\n+ifeq ($(strip $(filter-out aarch64 arm% coff wrs vx%,$(target_cpu) $(target_vendor) $(target_os))),)\n+\n+  ifeq ($(strip $(filter-out aarch64, $(target_cpu))),)\n+    ARCH_STR=aarch64\n+    VX=vxworks7\n+    EH_MECHANISM=-gcc\n+    SIGTRAMP_OBJ=sigtramp-vxworks.o\n+  else\n+    ifeq ($(strip $(filter-out arm%, $(target_cpu))),)\n+      ARCH_STR=arm\n+      ifeq ($(strip $(filter-out vxworks7%, $(target_os))),)\n+        VX=vxworks7\n+        EH_MECHANISM=-arm\n+        SIGTRAMP_OBJ=sigtramp-armvxworks.o\n+      else\n+        VX=vxworks\n+        EH_MECHANISM=-gcc\n+        SIGTRAMP_OBJ=sigtramp-vxworks.o\n+      endif\n+    else\n+      ARCH_STR=coff\n+    endif\n+  endif\n+\n+  SVX=system-$(VX)\n+  GCC_SPEC_FILES+=$(VX)-gnat-crtbe-link.spec\n+\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__vxworks.ads \\\n+  a-numaux.ads<libgnat/a-numaux__vxworks.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__vxworks.adb \\\n+  s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n+  s-intman.ads<libgnarl/s-intman__vxworks.ads \\\n+  s-intman.adb<libgnarl/s-intman__vxworks.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__vxworks.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__vxworks.ads \\\n+  s-osprim.adb<libgnat/s-osprim__vxworks.adb \\\n+  s-parame.ads<libgnat/s-parame__vxworks.ads \\\n+  s-parame.adb<libgnat/s-parame__vxworks.adb \\\n+  s-stchop.ads<libgnat/s-stchop__limit.ads \\\n+  s-stchop.adb<libgnat/s-stchop__vxworks.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__vxworks.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__vxworks.ads \\\n+  s-taspri.ads<libgnarl/s-taspri__vxworks.ads \\\n+  s-vxwork.ads<libgnarl/s-vxwork__$(ARCH_STR).ads \\\n+  g-socthi.ads<libgnat/g-socthi__vxworks.ads \\\n+  g-socthi.adb<libgnat/g-socthi__vxworks.adb \\\n+  g-stsifd.adb<libgnat/g-stsifd__sockets.adb\n+\n+  TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n+\n+  ifeq ($(strip $(filter-out rtp-smp,$(THREAD_KIND))),)\n+    LIBGNAT_TARGET_PAIRS += \\\n+    s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+    s-vxwext.ads<libgnarl/s-vxwext__rtp.ads \\\n+    s-vxwext.adb<libgnarl/s-vxwext__rtp-smp.adb \\\n+    s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-tls.adb \\\n+    system.ads<libgnat/$(SVX)-$(ARCH_STR)-rtp-smp.ads\n+\n+    EXTRA_LIBGNAT_OBJS+=affinity.o\n+\n+    EXTRA_LIBGNAT_OBJS+=$(SIGTRAMP_OBJ)\n+    EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n+  else\n+    ifeq ($(strip $(filter-out kernel-smp,$(THREAD_KIND))),)\n+      LIBGNAT_TARGET_PAIRS += \\\n+      s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+      s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-tls.adb \\\n+      s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n+      s-vxwext.adb<libgnarl/s-vxwext__kernel-smp.adb \\\n+      system.ads<libgnat/$(SVX)-$(ARCH_STR).ads\n+\n+      EXTRA_LIBGNAT_OBJS+=affinity.o\n+\n+      EXTRA_LIBGNAT_OBJS+=$(SIGTRAMP_OBJ)\n+      EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n+    else\n+      LIBGNAT_TARGET_PAIRS += \\\n+      s-tpopsp.adb<libgnarl/s-tpopsp__vxworks.adb \\\n+      system.ads<libgnat/$(SVX)-$(ARCH_STR).ads\n+\n+      ifeq ($(strip $(filter-out kernel,$(THREAD_KIND))),)\n+        LIBGNAT_TARGET_PAIRS += \\\n+        s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n+        s-vxwext.adb<libgnarl/s-vxwext__kernel.adb\n+\n+        EXTRA_LIBGNAT_OBJS+=$(SIGTRAMP_OBJ)\n+        EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n+      endif\n+    endif\n+  endif\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o \\\n+    s-stchop.o\n+  EXTRA_GNATRTL_TASKING_OBJS=i-vxinco.o s-vxwork.o s-vxwext.o\n+\n+  EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n+\n+  ifeq ($(strip $(filter-out arm vxworks7%, $(target_cpu) $(target_os))),)\n+    GCC_SPEC_FILES+=vxworks7-rtp-base-link.spec\n+  else\n+    ifeq ($(strip $(filter-out aarch64, $(target_cpu))),)\n+      GCC_SPEC_FILES+=vxworks7-rtp-base-link.spec\n+    endif\n+    EXTRA_ADALIB_OBJS+=$(VX_CRTBE_EXTRA_ADALIB_OBJS)\n+    EXTRA_LIBGNAT_SRCS+=vx_crtbegin.inc\n+\n+    ifneq ($(strip $(filter-out vxworks7%, $(target_os))),)\n+      GCC_SPEC_FILES+=vxworks-arm-link.spec\n+      GCC_SPEC_FILES+=vxworks-smp-arm-link.spec\n+    endif\n+  endif\n+endif\n+\n+# ARM android\n+ifeq ($(strip $(filter-out arm% linux-androideabi,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__android.adb \\\n+  s-linux.ads<libgnarl/s-linux__android.ads \\\n+  s-osinte.adb<libgnarl/s-osinte__android.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__android.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-linux-arm.ads\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n+  EXTRA_LIBGNAT_OBJS+=sigtramp-armdroid.o\n+  EXTRA_LIBGNAT_SRCS+=sigtramp.h\n+  EH_MECHANISM=-arm\n+  THREADSLIB =\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# AARCH64 QNX\n+ifeq ($(strip $(filter-out aarch64 %qnx,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__qnx.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__qnx.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__qnx.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__qnx.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-qnx.ads<libgnarl/s-qnx.ads \\\n+  s-taprop.adb<libgnarl/s-taprop__qnx.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n+  g-soliop.ads<libgnat/g-soliop__qnx.ads \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-qnx-aarch64.ads\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_TASKING_OBJS=s-qnx.o\n+  EXTRA_LIBGNAT_OBJS+=sigtramp-qnx.o\n+  EXTRA_LIBGNAT_SRCS+=sigtramp.h\n+  EH_MECHANISM=-gcc\n+\n+  SO_OPTS= -shared-libgcc -Wl,-soname,\n+  MISCLIB= -lsocket\n+  THREADSLIB=\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# Sparc Solaris\n+ifeq ($(strip $(filter-out sparc% sun solaris%,$(target_cpu) $(target_vendor) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__solaris.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__solaris.adb \\\n+  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__solaris.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__solaris.ads \\\n+  s-osprim.adb<libgnat/s-osprim__solaris.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__solaris.adb \\\n+  s-tasinf.adb<libgnarl/s-tasinf__solaris.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__solaris.ads \\\n+  s-taspri.ads<libgnarl/s-taspri__solaris.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__solaris.adb \\\n+  g-soliop.ads<libgnat/g-soliop__solaris.ads \\\n+  $(TRASYM_DWARF_UNIX_PAIRS) \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-solaris-sparc.ads\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n+\n+  EH_MECHANISM=-gcc\n+  THREADSLIB = -lposix4 -lthread\n+  MISCLIB = -lposix4 -lnsl -lsocket\n+  SO_OPTS = -Wl,-h,\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# x86 and x86-64 solaris\n+ifeq ($(strip $(filter-out %86 %x86_64 solaris2%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS_COMMON = \\\n+  a-intnam.ads<libgnarl/a-intnam__solaris.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__solaris.adb \\\n+  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__solaris.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__solaris.ads \\\n+  s-osprim.adb<libgnat/s-osprim__solaris.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__solaris.adb \\\n+  s-tasinf.adb<libgnarl/s-tasinf__solaris.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__solaris.ads \\\n+  s-taspri.ads<libgnarl/s-taspri__solaris.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__solaris.adb \\\n+  g-soliop.ads<libgnat/g-soliop__solaris.ads \\\n+  $(TRASYM_DWARF_UNIX_PAIRS) \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-solaris-x86.ads\n+\n+  ifeq ($(strip $(filter-out %86 solaris2%,$(target_cpu) $(target_os))),)\n+    ifeq ($(strip $(MULTISUBDIR)),/amd64)\n+      LIBGNAT_TARGET_PAIRS = \\\n+      $(LIBGNAT_TARGET_PAIRS_COMMON) $(X86_64_TARGET_PAIRS)\n+    else\n+      LIBGNAT_TARGET_PAIRS = \\\n+      $(LIBGNAT_TARGET_PAIRS_COMMON) $(X86_TARGET_PAIRS)\n+    endif\n+  else\n+    ifeq ($(strip $(MULTISUBDIR)),/32)\n+      LIBGNAT_TARGET_PAIRS = \\\n+      $(LIBGNAT_TARGET_PAIRS_COMMON) $(X86_TARGET_PAIRS)\n+    else\n+      LIBGNAT_TARGET_PAIRS = \\\n+      $(LIBGNAT_TARGET_PAIRS_COMMON) $(X86_64_TARGET_PAIRS)\n+    endif\n+  endif\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n+\n+  EH_MECHANISM=-gcc\n+  THREADSLIB = -lposix4 -lthread\n+  MISCLIB = -lposix4 -lnsl -lsocket\n+  SO_OPTS = -Wl,-h,\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# x86 Linux\n+ifeq ($(strip $(filter-out %86 linux%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  a-synbar.adb<libgnarl/a-synbar__posix.adb \\\n+  a-synbar.ads<libgnarl/a-synbar__posix.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n+  $(TRASYM_DWARF_UNIX_PAIRS) \\\n+  g-sercom.adb<libgnat/g-sercom__linux.adb \\\n+  s-tsmona.adb<libgnat/s-tsmona__linux.adb \\\n+  a-exetim.adb<libgnarl/a-exetim__posix.adb \\\n+  a-exetim.ads<libgnarl/a-exetim__default.ads \\\n+  s-linux.ads<libgnarl/s-linux.ads \\\n+  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-linux-x86.ads\n+\n+  ifeq ($(strip $(MULTISUBDIR)),/64)\n+    LIBGNAT_TARGET_PAIRS += $(X86_64_TARGET_PAIRS)\n+  else\n+    LIBGNAT_TARGET_PAIRS += $(X86_TARGET_PAIRS)\n+  endif\n+\n+  LIBGNAT_TARGET_PAIRS += \\\n+  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n+  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads\n+\n+  EH_MECHANISM=-gcc\n+  THREADSLIB = -lpthread -lrt\n+  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  MISCLIB = -ldl\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+\n+  GNATLIBCFLAGS_FOR_GCCSJLJ+=-fno-omit-frame-pointer -momit-leaf-frame-pointer\n+endif\n+\n+# x86 kfreebsd\n+ifeq ($(strip $(filter-out %86 kfreebsd%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__freebsd.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__kfreebsd-gnu.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n+  $(TRASYM_DWARF_UNIX_PAIRS) \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(X86_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-freebsd.ads\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n+\n+  EH_MECHANISM=-gcc\n+  THREADSLIB = -lpthread\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+  MISCLIB = -lutil\n+endif\n+\n+# i[3456]86-pc-gnu i.e. GNU Hurd\n+ifeq ($(strip $(filter-out %86 pc gnu,$(target_cpu) $(target_vendor) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__freebsd.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__gnu.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__gnu.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(X86_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-freebsd.ads\n+\n+  TOOLS_TARGET_PAIRS =  indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n+\n+  EH_MECHANISM=-gcc\n+  THREADSLIB = -lpthread\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+ifeq ($(strip $(filter-out x86_64 kfreebsd%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__freebsd.ads \\\n+  a-numaux.adb<libgnat/a-numaux__x86.adb \\\n+  a-numaux.ads<libgnat/a-numaux__x86.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__kfreebsd-gnu.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n+  system.ads<libgnat/system-freebsd.ads\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  EH_MECHANISM=-gcc\n+  THREADSLIB = -lpthread\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# aarch64 FreeBSD\n+ifeq ($(strip $(filter-out %aarch64 freebsd%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__freebsd.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__freebsd.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__freebsd.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-freebsd.ads\n+\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+\n+  EH_MECHANISM=-gcc\n+  THREADSLIB= -lpthread\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+  MISCLIB = -lutil\n+endif\n+\n+# x86 FreeBSD\n+ifeq ($(strip $(filter-out %86 freebsd%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__freebsd.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__freebsd.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__freebsd.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix.adb \\\n+  $(TRASYM_DWARF_UNIX_PAIRS) \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(X86_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-freebsd.ads\n+\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n+\n+  EH_MECHANISM=-gcc\n+  THREADSLIB= -lpthread\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+  MISCLIB = -lutil\n+endif\n+\n+# x86-64 FreeBSD\n+ifeq ($(strip $(filter-out %86_64 freebsd%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__freebsd.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__freebsd.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__freebsd.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix.adb \\\n+  $(TRASYM_DWARF_UNIX_PAIRS) \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(X86_64_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-freebsd.ads\n+\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n+\n+  EH_MECHANISM=-gcc\n+  THREADSLIB= -lpthread\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+  MISCLIB = -lutil\n+endif\n+\n+# x86-64 DragonFly\n+ifeq ($(strip $(filter-out %86_64 dragonfly%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__dragonfly.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__dragonfly.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__dragonfly.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(X86_64_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-dragonfly-x86_64.ads\n+\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n+\n+  EH_MECHANISM=-gcc\n+  THREADSLIB= -lpthread\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+  MISCLIB = -lutil\n+endif\n+\n+# S390 Linux\n+ifeq ($(strip $(filter-out s390% linux%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-linux.ads<libgnarl/s-linux.ads \\\n+  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n+  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n+  system.ads<libgnat/system-linux-s390.ads\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n+  EH_MECHANISM=-gcc\n+  THREADSLIB = -lpthread\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# HP/PA HP-UX 10\n+ifeq ($(strip $(filter-out hppa% hp hpux10%,$(target_cpu) $(target_vendor) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-excpol.adb<libgnat/a-excpol__abort.adb \\\n+  a-intnam.ads<libgnarl/a-intnam__hpux.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-interr.adb<libgnarl/s-interr__sigaction.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__hpux-dce.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__hpux-dce.ads \\\n+  s-parame.ads<libgnat/s-parame__hpux.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__hpux-dce.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__hpux-dce.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix.adb \\\n+  system.ads<libgnat/system-hpux.ads\n+\n+  EH_MECHANISM=-gcc\n+endif\n+\n+# HP/PA HP-UX 11\n+ifeq ($(strip $(filter-out hppa% hp hpux11%,$(target_cpu) $(target_vendor) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__hpux.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__hpux.ads \\\n+  s-parame.ads<libgnat/s-parame__hpux.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-traceb.adb<libgnat/s-traceb__hpux.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n+  system.ads<libgnat/system-hpux.ads\n+\n+  EH_MECHANISM=-gcc\n+  TGT_LIB = /usr/lib/libcl.a\n+  THREADSLIB = -lpthread\n+  GMEM_LIB = gmemlib\n+  soext = .sl\n+  SO_OPTS = -Wl,+h,\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# IBM AIX\n+ifeq ($(strip $(filter-out ibm aix%,$(target_vendor) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__aix.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__aix.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__aix.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix.adb \\\n+  $(TRASYM_DWARF_UNIX_PAIRS) \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-aix.ads\n+\n+  ifeq ($(findstring ppc64, \\\n+\t  $(shell $(GCC_FOR_TARGET) $(GNATLIBCFLAGS) \\\n+\t\t   -print-multi-os-directory)), \\\n+\tppc64)\n+    TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-aix.adb\n+  else\n+    TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+  endif\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n+\n+  THREADSLIB = -lpthreads\n+  EH_MECHANISM=-gcc\n+\n+  GMEM_LIB = gmemlib\n+endif\n+\n+# LynxOS 178 and LynxOS 178 Elf\n+ifeq ($(strip $(filter-out lynxos178%,$(target_os))),)\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__lynxos.ads \\\n+  g-soliop.ads<libgnat/g-soliop__lynxos.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__lynxos.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__lynxos178.adb \\\n+  s-osprim.ads<libgnat/s-osprim__lynxos.ads \\\n+  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__lynxos.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb\n+\n+  ifeq ($(strip $(filter-out powerpc%, $(target_cpu))),)\n+    LIBGNAT_TARGET_PAIRS +=  system.ads<libgnat/system-lynxos178-ppc.ads\n+  endif\n+  ifeq ($(strip $(filter-out %86, $(target_cpu))),)\n+    LIBGNAT_TARGET_PAIRS +=  system.ads<libgnat/system-lynxos178-x86.ads\n+    LIBGNAT_TARGET_PAIRS += $(X86_TARGET_PAIRS)\n+  endif\n+\n+  ifeq ($(strip $(filter-out lynxos178e,$(target_os))),)\n+    LIBGNAT_TARGET_PAIRS += \\\n+    s-osinte.ads<libgnarl/s-osinte__lynxos178e.ads \\\n+    s-osprim.adb<libgnat/s-osprim__posix2008.adb \\\n+    s-tracon.adb<hie/s-tracon__ppc-eabi.adb\n+  endif\n+\n+  EH_MECHANISM=-gcc\n+endif\n+\n+# RTEMS\n+ifeq ($(strip $(filter-out rtems%,$(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  system.ads<libgnat/system-rtems.ads \\\n+  a-intnam.ads<libgnarl/a-intnam__rtems.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__rtems.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__rtems.ads \\\n+  s-osprim.adb<libgnat/s-osprim__rtems.adb \\\n+  s-parame.adb<libgnat/s-parame__rtems.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n+  s-stchop.adb<libgnat/s-stchop__rtems.adb \\\n+  s-interr.adb<libgnarl/s-interr__hwint.adb\n+  ifeq ($(strip $(filter-out arm%, $(target_cpu))),)\n+    EH_MECHANISM=-arm\n+  else\n+    EH_MECHANISM=-gcc\n+  endif\n+endif\n+\n+# PikeOS\n+ifeq ($(strip $(filter-out powerpc% %86 sysgo pikeos,$(target_cpu) $(target_vendor) $(target_os)))),)\n+  TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n+endif\n+\n+# *-elf, *-eabi, or *-eabispe\n+ifeq ($(strip $(filter-out elf eabi eabispe,$(target_os))),)\n+  TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n+endif\n+\n+ifeq ($(strip $(filter-out %djgpp,$(target_os))),)\n+  GNATRTL_SOCKETS_OBJS =\n+\n+  LIBGNAT_TARGET_PAIRS = \\\n+\ta-intnam.ads<libgnarl/a-intnam__dummy.ads \\\n+\ts-inmaop.adb<libgnarl/s-inmaop__dummy.adb \\\n+\ts-intman.adb<libgnarl/s-intman__dummy.adb \\\n+\ts-osinte.ads<libgnarl/s-osinte__dummy.ads \\\n+\ts-osprim.adb<libgnat/s-osprim__unix.adb \\\n+\ts-taprop.adb<libgnarl/s-taprop__dummy.adb \\\n+\ts-taspri.ads<libgnarl/s-taspri__dummy.ads \\\n+\tsystem.ads<libgnat/system-djgpp.ads \\\n+\t$(DUMMY_SOCKETS_TARGET_PAIRS)\n+\n+  EH_MECHANISM=-gcc\n+endif\n+\n+# Cygwin/Mingw32\n+ifeq ($(strip $(filter-out cygwin% mingw32% pe,$(target_os))),)\n+  # Cygwin provides a full Posix environment, and so we use the default\n+  # versions of s-memory and g-socthi rather than the Windows-specific\n+  # MinGW versions.  Ideally we would use all the default versions for\n+  # Cygwin and none of the MinGW versions, but for historical reasons\n+  # the Cygwin port has always been a CygMing frankenhybrid and it is\n+  # a long-term project to disentangle them.\n+  ifeq ($(strip $(filter-out cygwin%,$(target_os))),)\n+    LIBGNAT_TARGET_PAIRS = \\\n+    s-memory.adb<libgnat/s-memory.adb \\\n+    g-socthi.ads<libgnat/g-socthi.ads \\\n+    g-socthi.adb<libgnat/g-socthi.adb\n+  else\n+    LIBGNAT_TARGET_PAIRS = \\\n+    s-memory.adb<libgnat/s-memory__mingw.adb \\\n+    g-socthi.ads<libgnat/g-socthi__mingw.ads \\\n+    g-socthi.adb<libgnat/g-socthi__mingw.adb\n+  endif\n+  LIBGNAT_TARGET_PAIRS += \\\n+  a-dirval.adb<libgnat/a-dirval__mingw.adb \\\n+  a-excpol.adb<libgnat/a-excpol__abort.adb \\\n+  s-gloloc.adb<libgnat/s-gloloc__mingw.adb \\\n+  s-inmaop.adb<libgnarl/s-inmaop__dummy.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__mingw.ads \\\n+  s-tasinf.adb<libgnarl/s-tasinf__mingw.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__mingw.ads \\\n+  g-stsifd.adb<libgnat/g-stsifd__sockets.adb \\\n+  g-soliop.ads<libgnat/g-soliop__mingw.ads \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-mingw.ads\n+\n+  LIBGNAT_TARGET_PAIRS += \\\n+  a-exetim.adb<libgnarl/a-exetim__mingw.adb \\\n+  a-exetim.ads<libgnarl/a-exetim__mingw.ads \\\n+  a-intnam.ads<libgnarl/a-intnam__mingw.ads \\\n+  g-sercom.adb<libgnat/g-sercom__mingw.adb \\\n+  $(TRASYM_DWARF_MINGW_PAIRS) \\\n+  s-tsmona.adb<libgnat/s-tsmona__mingw.adb \\\n+  s-interr.adb<libgnarl/s-interr__sigaction.adb \\\n+  s-intman.adb<libgnarl/s-intman__mingw.adb \\\n+  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__mingw.ads \\\n+  s-osprim.adb<libgnat/s-osprim__mingw.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__mingw.adb\n+\n+  ifeq ($(strip $(filter-out x86_64%,$(target_cpu))),)\n+    ifeq ($(strip $(MULTISUBDIR)),/32)\n+      LIBGNAT_TARGET_PAIRS += $(X86_TARGET_PAIRS)\n+      SO_OPTS= -m32 -Wl,-soname,\n+    else\n+      LIBGNAT_TARGET_PAIRS += $(X86_64_TARGET_PAIRS)\n+      SO_OPTS = -m64 -Wl,-soname,\n+    endif\n+  else\n+    ifeq ($(strip $(MULTISUBDIR)),/64)\n+      LIBGNAT_TARGET_PAIRS += $(X86_64_TARGET_PAIRS)\n+      SO_OPTS = -m64 -Wl,-soname,\n+    else\n+      LIBGNAT_TARGET_PAIRS += $(X86_TARGET_PAIRS)\n+      SO_OPTS = -m32 -Wl,-soname,\n+    endif\n+  endif\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS += \\\n+    s-win32.o s-winext.o g-regist.o g-sse.o g-ssvety.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_MINGW_OBJS)\n+  EXTRA_GNATRTL_TASKING_OBJS = a-exetim.o\n+  EXTRA_LIBGNAT_SRCS+=mingw32.h\n+  MISCLIB = -lws2_32\n+\n+  # ??? This will be replaced by gnatlib-shared-dual-win32 when GNAT\n+  # auto-import support for array/record will be done.\n+  GNATLIB_SHARED = gnatlib-shared-win32\n+\n+  EH_MECHANISM=-gcc\n+\n+  TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n+\n+  GMEM_LIB = gmemlib\n+  EXTRA_GNATTOOLS = ../../gnatdll$(exeext)\n+  EXTRA_GNATMAKE_OBJS = mdll.o mdll-utl.o mdll-fil.o\n+  soext = .dll\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# Mips Linux\n+ifeq ($(strip $(filter-out mips% linux%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-linux.ads<libgnarl/s-linux__mips.ads \\\n+  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n+  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n+  g-sercom.adb<libgnat/g-sercom__linux.adb \\\n+  system.ads<libgnat/system-linux-mips.ads\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n+  EH_MECHANISM=-gcc\n+  THREADSLIB = -lpthread\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# PowerPC and e500v2 Linux\n+ifeq ($(strip $(filter-out powerpc% linux%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS_COMMON = \\\n+  a-exetim.adb<libgnarl/a-exetim__posix.adb \\\n+  a-exetim.ads<libgnarl/a-exetim__default.ads \\\n+  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  a-synbar.adb<libgnarl/a-synbar__posix.adb \\\n+  a-synbar.ads<libgnarl/a-synbar__posix.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-linux.ads<libgnarl/s-linux.ads \\\n+  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n+  g-sercom.adb<libgnat/g-sercom__linux.adb \\\n+  $(TRASYM_DWARF_UNIX_PAIRS) \\\n+  s-tsmona.adb<libgnat/s-tsmona__linux.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-linux-ppc.ads\n+\n+  LIBGNAT_TARGET_PAIRS = \\\n+    $(LIBGNAT_TARGET_PAIRS_COMMON) \\\n+    s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+    s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n+    s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+    s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n+    s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n+    s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n+    s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n+\n+  EH_MECHANISM=-gcc\n+  THREADSLIB = -lpthread -lrt\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  MISCLIB = -ldl\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# ARM linux, GNU eabi\n+ifeq ($(strip $(filter-out arm% linux-gnueabi%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-linux.ads<libgnarl/s-linux.ads \\\n+  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n+  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-linux-arm.ads\n+\n+  ifeq ($(strip $(filter-out arm%b,$(target_cpu))),)\n+    EH_MECHANISM=\n+  else\n+    EH_MECHANISM=-arm\n+  endif\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n+  THREADSLIB = -lpthread\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# AArch64 Linux\n+ifeq ($(strip $(filter-out aarch64% linux%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-exetim.adb<libgnarl/a-exetim__posix.adb \\\n+  a-exetim.ads<libgnarl/a-exetim__default.ads \\\n+  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  a-synbar.adb<libgnarl/a-synbar__posix.adb \\\n+  a-synbar.ads<libgnarl/a-synbar__posix.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-linux.ads<libgnarl/s-linux.ads \\\n+  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n+  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n+  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n+  g-sercom.adb<libgnat/g-sercom__linux.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-linux-arm.ads\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n+  EH_MECHANISM=-gcc\n+  THREADSLIB=-lpthread -lrt\n+  GNATLIB_SHARED=gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# Sparc Linux\n+ifeq ($(strip $(filter-out sparc% linux%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-linux.ads<libgnarl/s-linux__sparc.ads \\\n+  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n+  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n+  system.ads<libgnat/system-linux-sparc.ads\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n+  EH_MECHANISM=-gcc\n+  THREADSLIB = -lpthread\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# HP/PA Linux\n+ifeq ($(strip $(filter-out hppa% linux%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-linux.ads<libgnarl/s-linux__hppa.ads \\\n+  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n+  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n+  system.ads<libgnat/system-linux-hppa.ads\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n+  EH_MECHANISM=-gcc\n+  THREADSLIB = -lpthread\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# M68K Linux\n+ifeq ($(strip $(filter-out m68k% linux%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-linux.ads<libgnarl/s-linux.ads \\\n+  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n+  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n+  system.ads<libgnat/system-linux-m68k.ads\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n+  EH_MECHANISM=-gcc\n+  THREADSLIB = -lpthread\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# SH4 Linux\n+ifeq ($(strip $(filter-out sh4% linux%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-linux.ads<libgnarl/s-linux.ads \\\n+  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n+  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n+  system.ads<libgnat/system-linux-sh4.ads\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-linux.adb\n+\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n+  EH_MECHANISM=-gcc\n+  MISCLIB=\n+  THREADSLIB = -lpthread\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# IA64 Linux\n+ifeq ($(strip $(filter-out %ia64 linux%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-exetim.adb<libgnarl/a-exetim__posix.adb \\\n+  a-exetim.ads<libgnarl/a-exetim__default.ads \\\n+  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  a-numaux.ads<libgnat/a-numaux__libc-x86.ads \\\n+  a-synbar.adb<libgnarl/a-synbar__posix.adb \\\n+  a-synbar.ads<libgnarl/a-synbar__posix.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-linux.ads<libgnarl/s-linux.ads \\\n+  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n+  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n+  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n+  g-sercom.adb<libgnat/g-sercom__linux.adb \\\n+  $(TRASYM_DWARF_UNIX_PAIRS) \\\n+  s-tsmona.adb<libgnat/s-tsmona__linux.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-linux-ia64.ads\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n+  EH_MECHANISM=-gcc\n+  THREADSLIB=-lpthread -lrt\n+  GNATLIB_SHARED=gnatlib-shared-dual\n+  MISCLIB = -ldl\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# IA64 HP-UX\n+ifeq ($(strip $(filter-out ia64% hp hpux%,$(target_cpu) $(target_vendor) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__hpux.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__hpux.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n+  $(TRASYM_DWARF_UNIX_PAIRS) \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-hpux-ia64.ads\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n+\n+  MISCLIB=\n+  EH_MECHANISM=-gcc\n+  THREADSLIB=-lpthread\n+  GNATLIB_SHARED=gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  soext = .so\n+  SO_OPTS = -Wl,+h,\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# Alpha Linux\n+ifeq ($(strip $(filter-out alpha% linux%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-linux.ads<libgnarl/s-linux__alpha.ads \\\n+  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n+  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n+  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-linux-alpha.ads\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n+  EH_MECHANISM=-gcc\n+  MISCLIB=\n+  THREADSLIB=-lpthread\n+  GNATLIB_SHARED=gnatlib-shared-dual\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# x86-64 Linux\n+ifeq ($(strip $(filter-out %x86_64 linux%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-exetim.adb<libgnarl/a-exetim__posix.adb \\\n+  a-exetim.ads<libgnarl/a-exetim__default.ads \\\n+  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  a-synbar.adb<libgnarl/a-synbar__posix.adb \\\n+  a-synbar.ads<libgnarl/a-synbar__posix.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-linux.ads<libgnarl/s-linux.ads \\\n+  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n+  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n+  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n+  g-sercom.adb<libgnat/g-sercom__linux.adb \\\n+  $(TRASYM_DWARF_UNIX_PAIRS) \\\n+  s-tsmona.adb<libgnat/s-tsmona__linux.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(X86_64_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-linux-x86.ads\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n+\n+  EH_MECHANISM=-gcc\n+  THREADSLIB=-lpthread -lrt\n+  MISCLIB = -ldl\n+  GNATLIB_SHARED=gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+\n+  GNATLIBCFLAGS_FOR_GCCSJLJ+=-fno-omit-frame-pointer -momit-leaf-frame-pointer\n+endif\n+\n+ifeq ($(strip $(filter-out %x32 linux%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-exetim.adb<libgnarl/a-exetim__posix.adb \\\n+  a-exetim.ads<libgnarl/a-exetim__default.ads \\\n+  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  a-synbar.adb<libgnarl/a-synbar__posix.adb \\\n+  a-synbar.ads<libgnarl/a-synbar__posix.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-linux.ads<libgnarl/s-linux__x32.ads \\\n+  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n+  s-osinte.adb<libgnarl/s-osinte__x32.adb \\\n+  s-osprim.adb<libgnat/s-osprim__x32.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n+  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n+  g-sercom.adb<libgnat/g-sercom__linux.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(X86_64_TARGET_PAIRS) \\\n+  system.ads<libgnat/system-linux-x86.ads\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n+  EH_MECHANISM=-gcc\n+  THREADSLIB=-lpthread -lrt\n+  GNATLIB_SHARED=gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+# Darwin (Mac OS X)\n+ifeq ($(strip $(filter-out darwin%,$(target_os))),)\n+  SO_OPTS = -shared-libgcc\n+  LIBGNAT_TARGET_PAIRS = \\\n+    a-intnam.ads<libgnarl/a-intnam__darwin.ads \\\n+    s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+    s-osinte.adb<libgnarl/s-osinte__darwin.adb \\\n+    s-osinte.ads<libgnarl/s-osinte__darwin.ads \\\n+    s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n+    s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n+    g-sercom.adb<libgnat/g-sercom__linux.adb \\\n+    s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb\n+\n+  ifeq ($(strip $(filter-out %86,$(target_cpu))),)\n+    LIBGNAT_TARGET_PAIRS += \\\n+      s-intman.adb<libgnarl/s-intman__susv3.adb \\\n+      s-osprim.adb<libgnat/s-osprim__darwin.adb \\\n+      $(ATOMICS_TARGET_PAIRS) \\\n+      system.ads<libgnat/system-darwin-x86.ads\n+\n+    ifeq ($(strip $(MULTISUBDIR)),/x86_64)\n+      SO_OPTS += -m64\n+      LIBGNAT_TARGET_PAIRS += $(X86_64_TARGET_PAIRS)\n+    else\n+      LIBGNAT_TARGET_PAIRS += $(X86_TARGET_PAIRS)\n+    endif\n+\n+    EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n+  endif\n+\n+  ifeq ($(strip $(filter-out %x86_64,$(target_cpu))),)\n+    LIBGNAT_TARGET_PAIRS += \\\n+      s-intman.adb<libgnarl/s-intman__susv3.adb \\\n+      s-osprim.adb<libgnat/s-osprim__darwin.adb \\\n+      a-exetim.ads<libgnarl/a-exetim__default.ads \\\n+      a-exetim.adb<libgnarl/a-exetim__darwin.adb \\\n+      $(ATOMICS_TARGET_PAIRS) \\\n+      system.ads<libgnat/system-darwin-x86.ads\n+\n+    ifeq ($(strip $(MULTISUBDIR)),/i386)\n+      SO_OPTS += -m32\n+      LIBGNAT_TARGET_PAIRS += $(X86_TARGET_PAIRS)\n+    else\n+      LIBGNAT_TARGET_PAIRS += $(X86_64_TARGET_PAIRS)\n+    endif\n+\n+    EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n+    EXTRA_GNATRTL_TASKING_OBJS=a-exetim.o\n+  endif\n+\n+  ifeq ($(strip $(filter-out powerpc%,$(target_cpu))),)\n+    LIBGNAT_TARGET_PAIRS += \\\n+      s-intman.adb<libgnarl/s-intman__posix.adb \\\n+      s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+      a-numaux.ads<libgnat/a-numaux__darwin.ads \\\n+      a-numaux.adb<libgnat/a-numaux__darwin.adb \\\n+      $(ATOMICS_TARGET_PAIRS) \\\n+      $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+      system.ads<libgnat/system-darwin-ppc.ads\n+\n+    ifeq ($(strip $(MULTISUBDIR)),/ppc64)\n+        SO_OPTS += -m64\n+    endif\n+  endif\n+\n+  ifeq ($(strip $(filter-out arm,$(target_cpu))),)\n+    LIBGNAT_TARGET_PAIRS += \\\n+      s-intman.adb<libgnarl/s-intman__susv3.adb \\\n+      s-osprim.adb<libgnat/s-osprim__darwin.adb \\\n+      $(ATOMICS_TARGET_PAIRS) \\\n+      $(ATOMICS_BUILTINS_TARGET_PAIRS)\n+\n+    LIBGNAT_TARGET_PAIRS += \\\n+      system.ads<libgnat/system-darwin-arm.ads\n+  endif\n+\n+  ifeq ($(strip $(filter-out arm64 aarch64,$(target_cpu))),)\n+    LIBGNAT_TARGET_PAIRS += \\\n+      s-intman.adb<libgnarl/s-intman__susv3.adb \\\n+      s-osprim.adb<libgnat/s-osprim__darwin.adb \\\n+      $(ATOMICS_TARGET_PAIRS) \\\n+      $(ATOMICS_BUILTINS_TARGET_PAIRS)\n+\n+    EXTRA_LIBGNAT_OBJS+=sigtramp-ios.o\n+    EXTRA_LIBGNAT_SRCS+=sigtramp.h\n+    LIBGNAT_TARGET_PAIRS += \\\n+      system.ads<libgnat/system-darwin-arm.ads\n+  endif\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-darwin.adb\n+\n+  EH_MECHANISM=-gcc\n+  GNATLIB_SHARED = gnatlib-shared-darwin\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+  soext = .dylib\n+  GCC_LINK_FLAGS=-static-libstdc++\n+endif\n+\n+ifeq ($(EH_MECHANISM),-gcc)\n+  LIBGNAT_TARGET_PAIRS += \\\n+    s-excmac.ads<libgnat/s-excmac__gcc.ads \\\n+    s-excmac.adb<libgnat/s-excmac__gcc.adb\n+  EXTRA_LIBGNAT_OBJS+=raise-gcc.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS+=g-cppexc.o s-excmac.o\n+endif\n+\n+ifeq ($(EH_MECHANISM),-arm)\n+  LIBGNAT_TARGET_PAIRS += \\\n+    s-excmac.ads<libgnat/s-excmac__arm.ads \\\n+    s-excmac.adb<libgnat/s-excmac__arm.adb\n+  EXTRA_LIBGNAT_OBJS+=raise-gcc.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS+=g-cppexc.o s-excmac.o\n+endif\n+\n+# LIBGNAT_SRCS is the list of all C files (including headers) of the runtime\n+# library.  LIBGNAT_OBJS is the list of object files for libgnat.\n+# thread.c is special as put into GNATRTL_TASKING_OBJS by Makefile.rtl\n+LIBGNAT_OBJS = adadecode.o adaint.o argv.o aux-io.o \t\t\t\\\n+  cal.o cio.o cstreams.o ctrl_c.o\t\t\t\t\t\\\n+  env.o errno.o exit.o expect.o final.o rtfinal.o rtinit.o\t\t\\\n+  init.o initialize.o locales.o mkdir.o\t\t\t\t\t\\\n+  raise.o seh_init.o socket.o sysdep.o\t\t\t\t\t\\\n+  targext.o terminals.o tracebak.o \t\t\t\t\t\\\n+  $(EXTRA_LIBGNAT_OBJS)\n+\n+# NOTE ??? - when the -I option for compiling Ada code is made to work,\n+#  the library installation will change and there will be a\n+#  GNAT_RTL_SRCS.  Right now we count on being able to build GNATRTL_OBJS\n+#  from ADA_INCLUDE_SRCS.\n+\n+LIBGNAT_SRCS = $(patsubst %.o,%.c,$(LIBGNAT_OBJS))\t\t\t\\\n+  adadecode.h adaint.h env.h gsocket.h raise.h standard.ads.h\t\t\\\n+  tb-gcc.c libgnarl/thread.c $(EXTRA_LIBGNAT_SRCS)\n+\n+# memtrack.o is special as not put into libgnat.\n+GNATRTL_OBJS = $(GNATRTL_NONTASKING_OBJS) $(GNATRTL_TASKING_OBJS) \\\n+  memtrack.o\n+\n+# Run time source files\n+# Note that libgnat contains a significant number of files. In orde to avoid\n+# command line length limitations the source regexp has been split for that\n+# directory.\n+ADA_INCLUDE_SRCS =\\\n+ libgnat/ada.ads libgnat/calendar.ads libgnat/directio.ads libgnat/gnat.ads libgnat/interfac.ads libgnat/ioexcept.ads \\\n+ libgnat/machcode.ads libgnat/text_io.ads libgnat/unchconv.ads libgnat/unchdeal.ads \\\n+ libgnat/sequenio.ads libgnat/system.ads Makefile.adalib libgnat/memtrack.adb \\\n+ libgnat/a-[a-o]*.adb libgnat/a-[a-o]*.ads \\\n+ libgnat/a-[p-z]*.adb libgnat/a-[p-z]*.ads \\\n+ libgnat/g-[a-o]*.adb libgnat/g-[a-o]*.ads \\\n+ libgnat/g-[p-z]*.adb libgnat/g-[p-z]*.ads \\\n+ libgnat/s-[a-o]*.adb libgnat/s-[a-o]*.ads \\\n+ libgnat/s-[p-z]*.adb libgnat/s-[p-z]*.ads \\\n+ libgnat/i-[a-o]*.adb libgnat/i-[a-o]*.ads \\\n+ libgnat/i-[p-z]*.adb libgnat/i-[p-z]*.ads \\\n+ libgnarl/[agis]-[a-z]*.ad[sb]\n+\n+\n+# Files that are in ADA_INCLUDE_SRCS but not in all configurations.\n+# They will be removed from the run time if not used.\n+ADA_EXCLUDE_SRCS =\\\n+  g-allein.ads g-alleve.adb g-alleve.ads g-altcon.adb g-altcon.ads \\\n+  g-altive.ads g-alveop.adb g-alveop.ads g-alvety.ads g-alvevi.ads \\\n+  g-intpri.ads g-regist.adb g-regist.ads g-sse.ads    g-ssvety.ads \\\n+  i-vxinco.adb i-vxinco.ads i-vxwoio.adb i-vxwoio.ads i-vxwork.ads \\\n+  s-bb.ads     s-bbbosu.ads s-bbcaco.ads s-bbcppr.ads s-bbexti.adb \\\n+  s-bbexti.ads s-bbinte.adb s-bbinte.ads s-bbprot.adb s-bbprot.ads \\\n+  s-bbsle3.ads s-bbsuer.ads s-bbsule.ads s-bbthqu.adb s-bbthqu.ads \\\n+  s-bbthre.adb s-bbthre.ads s-bbtiev.adb s-bbtiev.ads s-bbtime.adb \\\n+  s-bbtime.ads s-bcprmu.adb s-bcprmu.ads s-btstch.adb s-btstch.ads \\\n+  s-gcc.adb    s-gcc.ads    s-gccdiv.adb s-gccdiv.ads \\\n+  s-gccshi.adb s-gccshi.ads \\\n+  s-init.ads   s-init.adb   s-linux.ads  s-macres.ads \\\n+  s-memcom.adb s-memcom.ads s-memmov.adb s-memmov.ads s-memset.adb \\\n+  s-memset.ads s-mufalo.adb s-mufalo.ads s-musplo.adb s-musplo.ads \\\n+  s-sam4.ads   s-sopco3.adb s-sopco3.ads s-sopco4.adb s-sopco4.ads \\\n+  s-sopco5.adb s-sopco5.ads s-stchop.ads s-stchop.adb s-stm32.ads \\\n+  s-strcom.adb s-strcom.ads s-thread.ads \\\n+  s-vxwext.adb s-vxwext.ads \\\n+  s-win32.ads  s-winext.ads\n+\n+# ADA_EXCLUDE_SRCS without the sources used by the target\n+ADA_EXCLUDE_FILES=$(filter-out \\\n+  $(patsubst %$(objext),%.ads,$(GNATRTL_OBJS)) \\\n+  $(patsubst %$(objext),%.adb,$(GNATRTL_OBJS)), \\\n+  $(ADA_EXCLUDE_SRCS))\n+\n+setup-rts: force\n+\t$(RMDIR) $(RTSDIR)\n+\t$(MKDIR) $(RTSDIR)\n+\t$(CHMOD) u+w $(RTSDIR)\n+# Copy target independent sources\n+\t$(foreach f,$(ADA_INCLUDE_SRCS) $(LIBGNAT_SRCS), \\\n+\t  $(LN_S) $(GNAT_SRC)/$(f) $(RTSDIR) ;) true\n+# Remove files not used\n+\t$(RM) $(patsubst %,$(RTSDIR)/%,$(ADA_EXCLUDE_FILES))\n+# Remove files to be replaced by target dependent sources\n+\t$(RM) $(foreach PAIR,$(LIBGNAT_TARGET_PAIRS), \\\n+\t                $(RTSDIR)/$(word 1,$(subst <, ,$(PAIR))))\n+\tfor f in $(RTSDIR)/*-*__*.ads $(RTSDIR)/*-*__*.adb; do \\\n+\t  case \"$$f\" in \\\n+\t    $(RTSDIR)/s-stratt__*) ;; \\\n+\t    *) $(RM) $$f ;; \\\n+\t  esac; \\\n+\tdone\n+# Copy new target dependent sources\n+\t$(foreach PAIR,$(LIBGNAT_TARGET_PAIRS), \\\n+\t          $(LN_S) $(GNAT_SRC)/$(word 2,$(subst <, ,$(PAIR))) \\\n+\t                $(RTSDIR)/$(word 1,$(subst <, ,$(PAIR)));)\n+"}, {"sha": "27d9203cefdc468ca1fa81675c0fa737ff4daff1", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 4, "deletions": 1791, "changes": 1795, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c667752e4ce7aba64f59f30a8c6e60c48fa525f4/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c667752e4ce7aba64f59f30a8c6e60c48fa525f4/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=c667752e4ce7aba64f59f30a8c6e60c48fa525f4", "patch": "@@ -188,6 +188,9 @@ TARGET_ADA_SRCS =\n # Type of tools build we are doing; default is not compiling tools.\n TOOLSCASE =\n \n+# main GNAT source directory\n+GNAT_SRC=$(fsrcpfx)ada\n+\n # Multilib handling\n MULTISUBDIR =\n RTSDIR = rts$(subst /,_,$(MULTISUBDIR))\n@@ -345,1702 +348,6 @@ ifeq ($(strip $(filter-out %x86_64, $(target_cpu))),)\n   endif\n endif\n \n-# ???: handle more multilib targets\n-\n-# LIBGNAT_TARGET_PAIRS is a list of pairs of filenames.\n-# The members of each pair must be separated by a '<' and no whitespace.\n-# Each pair must be separated by some amount of whitespace from the following\n-# pair.\n-\n-# Non-tasking case:\n-\n-LIBGNAT_TARGET_PAIRS = \\\n-a-intnam.ads<libgnarl/a-intnam__dummy.ads \\\n-s-inmaop.adb<libgnarl/s-inmaop__dummy.adb \\\n-s-intman.adb<libgnarl/s-intman__dummy.adb \\\n-s-osinte.ads<libgnarl/s-osinte__dummy.ads \\\n-s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-s-taprop.adb<libgnarl/s-taprop__dummy.adb \\\n-s-taspri.ads<libgnarl/s-taspri__dummy.ads\n-\n-# When using the GCC exception handling mechanism, we need to use an\n-# alternate body for a-exexpr.adb (a-exexpr-gcc.adb)\n-\n-EH_MECHANISM=\n-\n-# Default shared object option. Note that we rely on the fact that the \"soname\"\n-# option will always be present and last in this flag, so that we can have\n-# $(SO_OPTS)libgnat-x.xx\n-\n-SO_OPTS = -Wl,-soname,\n-\n-# Default gnatlib-shared target.\n-# By default, equivalent to gnatlib.\n-# Set to gnatlib-shared-default, gnatlib-shared-dual, or a platform specific\n-# target when supported.\n-GNATLIB_SHARED = gnatlib\n-\n-# By default, build socket support units. On platforms that do not support\n-# sockets, reset this variable to empty and add DUMMY_SOCKETS_TARGET_PAIRS\n-# to LIBGNAT_TARGET_PAIRS.\n-\n-GNATRTL_SOCKETS_OBJS = g-soccon$(objext) g-socket$(objext) g-socthi$(objext) \\\n-  g-soliop$(objext) g-sothco$(objext)\n-\n-DUMMY_SOCKETS_TARGET_PAIRS = \\\n-  g-socket.adb<libgnat/g-socket__dummy.adb \\\n-  g-socket.ads<libgnat/g-socket__dummy.ads \\\n-  g-socthi.adb<libgnat/g-socthi__dummy.adb \\\n-  g-socthi.ads<libgnat/g-socthi__dummy.ads \\\n-  g-sothco.adb<libgnat/g-sothco__dummy.adb \\\n-  g-sothco.ads<libgnat/g-sothco__dummy.ads\n-\n-# On platforms where atomic increment/decrement operations are supported,\n-# special version of Ada.Strings.Unbounded package can be used.\n-\n-ATOMICS_TARGET_PAIRS = \\\n-  a-coinho.adb<libgnat/a-coinho__shared.adb \\\n-  a-coinho.ads<libgnat/a-coinho__shared.ads \\\n-  a-stunau.adb<libgnat/a-stunau__shared.adb \\\n-  a-suteio.adb<libgnat/a-suteio__shared.adb \\\n-  a-strunb.ads<libgnat/a-strunb__shared.ads \\\n-  a-strunb.adb<libgnat/a-strunb__shared.adb \\\n-  a-stwiun.adb<libgnat/a-stwiun__shared.adb \\\n-  a-stwiun.ads<libgnat/a-stwiun__shared.ads \\\n-  a-swunau.adb<libgnat/a-swunau__shared.adb \\\n-  a-swuwti.adb<libgnat/a-swuwti__shared.adb \\\n-  a-stzunb.adb<libgnat/a-stzunb__shared.adb \\\n-  a-stzunb.ads<libgnat/a-stzunb__shared.ads \\\n-  a-szunau.adb<libgnat/a-szunau__shared.adb \\\n-  a-szuzti.adb<libgnat/a-szuzti__shared.adb\n-\n-ATOMICS_BUILTINS_TARGET_PAIRS = \\\n-  s-atocou.adb<libgnat/s-atocou__builtin.adb\n-\n-# Special version of units for x86 and x86-64 platforms.\n-\n-X86_TARGET_PAIRS = \\\n-  a-numaux.ads<libgnat/a-numaux__x86.ads \\\n-  a-numaux.adb<libgnat/a-numaux__x86.adb \\\n-  s-atocou.adb<libgnat/s-atocou__x86.adb\n-\n-X86_64_TARGET_PAIRS = \\\n-  a-numaux.ads<libgnat/a-numaux__x86.ads \\\n-  a-numaux.adb<libgnat/a-numaux__x86.adb \\\n-  s-atocou.adb<libgnat/s-atocou__builtin.adb\n-\n-# Implementation of symbolic traceback based on dwarf\n-TRASYM_DWARF_UNIX_PAIRS = \\\n-  s-trasym.adb<libgnat/s-trasym__dwarf.adb \\\n-  s-mmosin.ads<libgnat/s-mmosin__unix.ads \\\n-  s-mmosin.adb<libgnat/s-mmosin__unix.adb \\\n-  s-mmauni.ads<libgnat/s-mmauni__long.ads\n-\n-TRASYM_DWARF_MINGW_PAIRS = \\\n-  s-trasym.adb<libgnat/s-trasym__dwarf.adb \\\n-  s-mmosin.ads<libgnat/s-mmosin__mingw.ads \\\n-  s-mmosin.adb<libgnat/s-mmosin__mingw.adb\n-\n-TRASYM_DWARF_COMMON_OBJS = s-objrea$(objext) s-dwalin$(objext) s-mmap$(objext) \\\n-  s-mmosin$(objext)\n-\n-TRASYM_DWARF_UNIX_OBJS = $(TRASYM_DWARF_COMMON_OBJS) s-mmauni$(objext)\n-\n-TRASYM_DWARF_MINGW_OBJS = $(TRASYM_DWARF_COMMON_OBJS)\n-\n-# Shared library version\n-LIB_VERSION = $(strip $(shell grep ' Library_Version :' $(fsrcpfx)ada/gnatvsn.ads | sed -e 's/.*\"\\(.*\\)\".*/\\1/'))\n-\n-# Additional object files from C source to be added to libgnat.\n-EXTRA_LIBGNAT_OBJS=\n-\n-# Additional C source files to be added to libgnat without corresponding\n-# object file (#included files). This should include at least the GNAT\n-# specific header files required to rebuild the runtime library from sources.\n-EXTRA_LIBGNAT_SRCS=\n-\n-# Additional object files from Ada sources to be added in libgnat\n-EXTRA_GNATRTL_NONTASKING_OBJS=\n-\n-# Additional object files from Ada sources to be added in libgnarl\n-EXTRA_GNATRTL_TASKING_OBJS=\n-\n-# Subsets of extra libgnat sources that always go together\n-VX_SIGTRAMP_EXTRA_SRCS=sigtramp.h sigtramp-vxworks-target.inc\n-\n-# Additional object files that should go in the same directory as libgnat,\n-# aside the library itself. Typically useful for crtbegin/crtend kind of files.\n-EXTRA_ADALIB_OBJS=\n-\n-VX_CRTBE_EXTRA_ADALIB_OBJS=vx_crtbegin.o vx_crtbegin_auto.o vx_crtend.o\n-\n-# GCC spec files to be installed in $(libsubdir), so --specs=<spec-filename>\n-# finds them at runtime.\n-GCC_SPEC_FILES=\n-\n-# $(filter-out PATTERN...,TEXT) removes all PATTERN words from TEXT.\n-# $(strip STRING) removes leading and trailing spaces from STRING.\n-# If what's left is null then it's a match.\n-\n-# PowerPC and e500v2 VxWorks\n-ifeq ($(strip $(filter-out powerpc% wrs vxworks vxworksspe vxworks7 vxworks7spe,$(target_cpu) $(target_vendor) $(target_os))),)\n-\n-  ifeq ($(strip $(filter-out e500%, $(target_alias))),)\n-     ARCH_STR=e500\n-     # gcc config translates the target e500v2-wrs-vxworks to\n-     # powerpc-wrs-vxworksspe. Let's keep the original alias here when\n-     # generating s-oscons.ads.\n-     target=$(target_alias)\n-  else\n-     ifeq ($(strip $(filter-out powerpc64, $(target_cpu))),)\n-        ARCH_STR=ppc64\n-     else\n-        ARCH_STR=ppc\n-     endif\n-  endif\n-\n-  ifeq ($(strip $(filter-out vxworks7%, $(target_os))),)\n-     SVX=system-vxworks7\n-  else\n-     SVX=system-vxworks\n-  endif\n-\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__vxworks.ads \\\n-  a-numaux.ads<libgnat/a-numaux__vxworks.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__vxworks.adb \\\n-  s-intman.ads<libgnarl/s-intman__vxworks.ads \\\n-  s-intman.adb<libgnarl/s-intman__vxworks.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__vxworks.ads \\\n-  s-osinte.adb<libgnarl/s-osinte__vxworks.adb \\\n-  s-osprim.adb<libgnat/s-osprim__vxworks.adb \\\n-  s-parame.ads<libgnat/s-parame__vxworks.ads \\\n-  s-parame.adb<libgnat/s-parame__vxworks.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__vxworks.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__vxworks.ads \\\n-  s-taspri.ads<libgnarl/s-taspri__vxworks.ads \\\n-  s-vxwork.ads<libgnarl/s-vxwork__ppc.ads \\\n-  g-socthi.ads<libgnat/g-socthi__vxworks.ads \\\n-  g-socthi.adb<libgnat/g-socthi__vxworks.adb \\\n-  g-stsifd.adb<libgnat/g-stsifd__sockets.adb \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS)\n-\n-  # VxWorks 5 and 6 both use the same target triplet making them\n-  # indistinguishable in the context of this make file. Package\n-  # System.Stack_Checking.Operations is not needed on VxWorks 6 as it leads to\n-  # an undefined symbol when building a dynamic shared library. To alleviate\n-  # this problem and distinguish this case, we use the THREAD_KIND and include\n-  # the package only in default mode.\n-\n-  ifeq ($(strip $(filter-out default,$(THREAD_KIND))),)\n-    LIBGNAT_TARGET_PAIRS += \\\n-      s-stchop.ads<libgnat/s-stchop__limit.ads \\\n-      s-stchop.adb<libgnat/s-stchop__vxworks.adb\n-    EXTRA_GNATRTL_NONTASKING_OBJS+=s-stchop.o\n-  endif\n-\n-  TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n-\n-  ifeq ($(strip $(filter-out rtp,$(THREAD_KIND))),)\n-    LIBGNAT_TARGET_PAIRS += \\\n-    s-vxwext.ads<libgnarl/s-vxwext__rtp.ads \\\n-    s-vxwext.adb<libgnarl/s-vxwext__rtp.adb \\\n-    s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-rtp.adb \\\n-    system.ads<libgnat/system-vxworks-$(ARCH_STR)-rtp.ads\n-\n-    EH_MECHANISM=-gcc\n-  else\n-    ifeq ($(strip $(filter-out rtp-smp,$(THREAD_KIND))),)\n-      LIBGNAT_TARGET_PAIRS += \\\n-      s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-      s-vxwext.ads<libgnarl/s-vxwext__rtp.ads \\\n-      s-vxwext.adb<libgnarl/s-vxwext__rtp-smp.adb \\\n-      s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-tls.adb \\\n-      system.ads<libgnat/$(SVX)-$(ARCH_STR)-rtp-smp.ads\n-\n-      EH_MECHANISM=-gcc\n-      EXTRA_LIBGNAT_OBJS+=affinity.o\n-    else\n-      ifeq ($(strip $(filter-out kernel-smp,$(THREAD_KIND))),)\n-        LIBGNAT_TARGET_PAIRS += \\\n-        s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n-        s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-        s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-tls.adb \\\n-        s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n-        s-vxwext.adb<libgnarl/s-vxwext__kernel-smp.adb \\\n-        system.ads<libgnat/system-vxworks-$(ARCH_STR)-kernel.ads\n-\n-        EH_MECHANISM=-gcc\n-        EXTRA_LIBGNAT_OBJS+=affinity.o\n-      else\n-        LIBGNAT_TARGET_PAIRS += \\\n-        s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n-        s-tpopsp.adb<libgnarl/s-tpopsp__vxworks.adb\n-\n-        ifeq ($(strip $(filter-out kernel,$(THREAD_KIND))),)\n-          EH_MECHANISM=-gcc\n-          LIBGNAT_TARGET_PAIRS += \\\n-          s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n-          s-vxwext.adb<libgnarl/s-vxwext__kernel.adb \\\n-          system.ads<libgnat/system-vxworks-$(ARCH_STR)-kernel.ads\n-        else\n-          LIBGNAT_TARGET_PAIRS += \\\n-          system.ads<libgnat/system-vxworks-ppc.ads\n-        endif\n-      endif\n-      EXTRA_GNATRTL_NONTASKING_OBJS+=i-vxinco.o i-vxwork.o i-vxwoio.o\n-    endif\n-  endif\n-\n-  EXTRA_GNATRTL_TASKING_OBJS += s-vxwork.o s-vxwext.o\n-\n-  EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n-\n-  EXTRA_ADALIB_OBJS+=$(VX_CRTBE_EXTRA_ADALIB_OBJS)\n-  EXTRA_LIBGNAT_SRCS+=vx_crtbegin.inc\n-  GCC_SPEC_FILES+=vxworks-gnat-crtbe-link.spec\n-\n-  ifeq ($(strip $(filter-out vxworks7%, $(target_os))),)\n-    ifeq ($(strip $(filter-out powerpc64, $(target_cpu))),)\n-      GCC_SPEC_FILES+=vxworks7-ppc64-rtp-base-link.spec\n-    else\n-      GCC_SPEC_FILES+=vxworks7-rtp-base-link.spec\n-    endif\n-  else\n-    GCC_SPEC_FILES+=vxworks-$(ARCH_STR)-link.spec\n-    GCC_SPEC_FILES+=vxworks-cert-$(ARCH_STR)-link.spec\n-    GCC_SPEC_FILES+=vxworks-smp-$(ARCH_STR)-link.spec\n-  endif\n-endif\n-\n-# x86/x86_64 VxWorks\n-ifeq ($(strip $(filter-out %86 x86_64 wrs vxworks vxworks7,$(target_cpu) $(target_vendor) $(target_os))),)\n-\n-  EH_MECHANISM=-gcc\n-\n-  ifeq ($(strip $(filter-out vxworks7%, $(target_os))),)\n-     SVX=system-vxworks7\n-  else\n-     SVX=system-vxworks\n-  endif\n-\n-  ifeq ($(strip $(filter-out x86_64, $(target_cpu))),)\n-     X86CPU=x86_64\n-     LIBGNAT_TARGET_PAIRS=$(X86_64_TARGET_PAIRS)\n-  else\n-     X86CPU=x86\n-     LIBGNAT_TARGET_PAIRS=$(X86_TARGET_PAIRS)\n-  endif\n-\n-  LIBGNAT_TARGET_PAIRS+= \\\n-  a-intnam.ads<libgnarl/a-intnam__vxworks.ads \\\n-  i-vxwork.ads<libgnat/i-vxwork__x86.ads \\\n-  s-osinte.adb<libgnarl/s-osinte__vxworks.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__vxworks.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__vxworks.adb \\\n-  s-intman.ads<libgnarl/s-intman__vxworks.ads \\\n-  s-intman.adb<libgnarl/s-intman__vxworks.adb \\\n-  s-osprim.adb<libgnat/s-osprim__vxworks.adb \\\n-  s-parame.ads<libgnat/s-parame__vxworks.ads \\\n-  s-parame.adb<libgnat/s-parame__vxworks.adb \\\n-  s-stchop.ads<libgnat/s-stchop__limit.ads \\\n-  s-stchop.adb<libgnat/s-stchop__vxworks.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__vxworks.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__vxworks.ads \\\n-  s-taspri.ads<libgnarl/s-taspri__vxworks.ads \\\n-  s-vxwork.ads<libgnarl/s-vxwork__x86.ads \\\n-  g-socthi.ads<libgnat/g-socthi__vxworks.ads \\\n-  g-socthi.adb<libgnat/g-socthi__vxworks.adb \\\n-  g-stsifd.adb<libgnat/g-stsifd__sockets.adb \\\n-  $(ATOMICS_TARGET_PAIRS)\n-\n-  TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n-\n-  # The CPU setting for VxSim varies with the\n-  # host (Windows or Linux)\n-  # target (VxWorks6 or VxWorks7)\n-  # runtime (rtp or kernel)\n-  # -------------------------------------------------------------\n-  #\t\t\t\t\tvx6\t\tvx7\n-  # Windows (host_os = mingw32)\n-  #\tkernel\t\t\t\tSIMNT\t\tSIMNT\n-  #\trtp\t\t\t\tSIMPENTIUM\tSIMNT\n-  # Linux (host_os = linux-gnu)\n-  #\tkernel\t\t\t\tSIMLINUX\tSIMLINUX\n-  #\trtp\t\t\t\tSIMPENTIUM\tSIMLINUX\n-  # -------------------------------------------------------------\n-  # It is overridden by VXSIM_CPU only in files init-vxsim.c and\n-  # sigtramp-vxworks-vxsim.c which contain functions determined at\n-  # runtime to be called if a program is running on VxSim vs real hardware\n-  # (due to differences in signal context for unwinding).\n-\n-  ifneq ($(strip $(filter-out vxworks7, $(target_os))),)\n-    ifeq ($(strip $(filter-out vxworks rtp rtp-smp,$(target_os) $(THREAD_KIND))),)\n-      VXSIM_CPU = SIMPENTIUM\n-    else\n-      ifeq ($(strip $(filter-out kernel kernel-smp rtp rtp-smp,$(THREAD_KIND))),)\n-        ifeq ($(strip $(filter-out linux%,$(host_os))),)\n-          # Linux\n-          VXSIM_CPU = SIMLINUX\n-        else\n-          # Windows\n-          VXSIM_CPU = SIMNT\n-        endif\n-      endif\n-    endif\n-\n-    GNATLIBCFLAGS_FOR_C := $(GNATLIBCFLAGS_FOR_C) -D__VXSIM_CPU__=$(VXSIM_CPU)\n-  endif\n-\n-  ifeq ($(strip $(filter-out rtp,$(THREAD_KIND))),)\n-    # Runtime N/A for VxWorks7 (non-existent system file)\n-    LIBGNAT_TARGET_PAIRS += \\\n-    s-vxwext.ads<libgnarl/s-vxwext__rtp.ads \\\n-    s-vxwext.adb<libgnarl/s-vxwext__rtp.adb \\\n-    s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-rtp.adb \\\n-    system.ads<libgnat/system-vxworks-x86-rtp.ads\n-  else\n-    ifeq ($(strip $(filter-out rtp-smp, $(THREAD_KIND))),)\n-      LIBGNAT_TARGET_PAIRS += \\\n-      s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-      s-vxwext.ads<libgnarl/s-vxwext__rtp.ads \\\n-      s-vxwext.adb<libgnarl/s-vxwext__rtp-smp.adb \\\n-      s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-tls.adb \\\n-      system.ads<libgnat/$(SVX)-$(X86CPU)-rtp-smp.ads\n-\n-      EXTRA_LIBGNAT_OBJS+=affinity.o\n-    else\n-      ifeq ($(strip $(filter-out kernel-smp, $(THREAD_KIND))),)\n-        LIBGNAT_TARGET_PAIRS += \\\n-        s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n-        s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-        s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-tls.adb \\\n-        s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n-        s-vxwext.adb<libgnarl/s-vxwext__kernel-smp.adb \\\n-        system.ads<libgnat/$(SVX)-$(X86CPU)-kernel.ads\n-\n-        EXTRA_LIBGNAT_OBJS+=affinity.o\n-      else\n-        LIBGNAT_TARGET_PAIRS += \\\n-        s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n-        s-tpopsp.adb<libgnarl/s-tpopsp__vxworks.adb\n-\n-        ifeq ($(strip $(filter-out kernel,$(THREAD_KIND))),)\n-          # Runtime N/A for VxWorks7 (non-existent system file)\n-          LIBGNAT_TARGET_PAIRS += \\\n-          s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n-          s-vxwext.adb<libgnarl/s-vxwext__kernel.adb \\\n-          system.ads<libgnat/$(SVX)-x86-kernel.ads\n-        else\n-          LIBGNAT_TARGET_PAIRS += \\\n-          system.ads<libgnat/system-vxworks-x86.ads\n-        endif\n-      endif\n-\n-      EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n-    endif\n-  endif\n-\n-  EXTRA_GNATRTL_NONTASKING_OBJS += s-stchop.o\n-  EXTRA_GNATRTL_TASKING_OBJS += i-vxinco.o s-vxwork.o s-vxwext.o\n-\n-  EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n-\n-  EXTRA_LIBGNAT_OBJS+=sigtramp-vxworks.o\n-  EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n-\n-  EXTRA_ADALIB_OBJS+=$(VX_CRTBE_EXTRA_ADALIB_OBJS)\n-  EXTRA_LIBGNAT_SRCS+=vx_crtbegin.inc\n-  GCC_SPEC_FILES+=vxworks-gnat-crtbe-link.spec\n-\n-  ifeq ($(strip $(filter-out vxworks7%, $(target_os))),)\n-    GCC_SPEC_FILES+=vxworks7-$(X86CPU)-rtp-base-link.spec\n-  else\n-    GCC_SPEC_FILES+=vxworks-x86-link.spec\n-    GCC_SPEC_FILES+=vxworks-cert-x86-link.spec\n-    GCC_SPEC_FILES+=vxworks-smp-x86-link.spec\n-  endif\n-endif\n-\n-# ARM and Aarch64 VxWorks\n-ifeq ($(strip $(filter-out aarch64 arm% coff wrs vx%,$(target_cpu) $(target_vendor) $(target_os))),)\n-\n-  ifeq ($(strip $(filter-out aarch64, $(target_cpu))),)\n-    ARCH_STR=aarch64\n-    SVX=system-vxworks7\n-    EH_MECHANISM=-gcc\n-    SIGTRAMP_OBJ=sigtramp-vxworks.o\n-  else\n-    ifeq ($(strip $(filter-out arm%, $(target_cpu))),)\n-      ARCH_STR=arm\n-      ifeq ($(strip $(filter-out vxworks7%, $(target_os))),)\n-        SVX=system-vxworks7\n-        EH_MECHANISM=-arm\n-        SIGTRAMP_OBJ=sigtramp-armvxworks.o\n-      else\n-        SVX=system-vxworks\n-        EH_MECHANISM=-gcc\n-        SIGTRAMP_OBJ=sigtramp-vxworks.o\n-      endif\n-    else\n-      ARCH_STR=coff\n-    endif\n-  endif\n-\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__vxworks.ads \\\n-  a-numaux.ads<libgnat/a-numaux__vxworks.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__vxworks.adb \\\n-  s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n-  s-intman.ads<libgnarl/s-intman__vxworks.ads \\\n-  s-intman.adb<libgnarl/s-intman__vxworks.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__vxworks.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__vxworks.ads \\\n-  s-osprim.adb<libgnat/s-osprim__vxworks.adb \\\n-  s-parame.ads<libgnat/s-parame__vxworks.ads \\\n-  s-parame.adb<libgnat/s-parame__vxworks.adb \\\n-  s-stchop.ads<libgnat/s-stchop__limit.ads \\\n-  s-stchop.adb<libgnat/s-stchop__vxworks.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__vxworks.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__vxworks.ads \\\n-  s-taspri.ads<libgnarl/s-taspri__vxworks.ads \\\n-  s-vxwork.ads<libgnarl/s-vxwork__$(ARCH_STR).ads \\\n-  g-socthi.ads<libgnat/g-socthi__vxworks.ads \\\n-  g-socthi.adb<libgnat/g-socthi__vxworks.adb \\\n-  g-stsifd.adb<libgnat/g-stsifd__sockets.adb\n-\n-  TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n-\n-  ifeq ($(strip $(filter-out rtp-smp,$(THREAD_KIND))),)\n-    LIBGNAT_TARGET_PAIRS += \\\n-    s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-    s-vxwext.ads<libgnarl/s-vxwext__rtp.ads \\\n-    s-vxwext.adb<libgnarl/s-vxwext__rtp-smp.adb \\\n-    s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-tls.adb \\\n-    system.ads<libgnat/$(SVX)-$(ARCH_STR)-rtp-smp.ads\n-\n-    EXTRA_LIBGNAT_OBJS+=affinity.o\n-\n-    EXTRA_LIBGNAT_OBJS+=$(SIGTRAMP_OBJ)\n-    EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n-  else\n-    ifeq ($(strip $(filter-out kernel-smp,$(THREAD_KIND))),)\n-      LIBGNAT_TARGET_PAIRS += \\\n-      s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-      s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-tls.adb \\\n-      s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n-      s-vxwext.adb<libgnarl/s-vxwext__kernel-smp.adb \\\n-      system.ads<libgnat/$(SVX)-$(ARCH_STR).ads\n-\n-      EXTRA_LIBGNAT_OBJS+=affinity.o\n-\n-      EXTRA_LIBGNAT_OBJS+=$(SIGTRAMP_OBJ)\n-      EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n-    else\n-      LIBGNAT_TARGET_PAIRS += \\\n-      s-tpopsp.adb<libgnarl/s-tpopsp__vxworks.adb \\\n-      system.ads<libgnat/$(SVX)-$(ARCH_STR).ads\n-\n-      ifeq ($(strip $(filter-out kernel,$(THREAD_KIND))),)\n-        LIBGNAT_TARGET_PAIRS += \\\n-        s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n-        s-vxwext.adb<libgnarl/s-vxwext__kernel.adb\n-\n-        EXTRA_LIBGNAT_OBJS+=$(SIGTRAMP_OBJ)\n-        EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n-      endif\n-    endif\n-  endif\n-\n-  EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o \\\n-    s-stchop.o\n-  EXTRA_GNATRTL_TASKING_OBJS=i-vxinco.o s-vxwork.o s-vxwext.o\n-\n-  EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n-\n-  ifeq ($(strip $(filter-out arm vxworks7%, $(target_cpu) $(target_os))),)\n-    GCC_SPEC_FILES+=vxworks7-rtp-base-link.spec\n-  else\n-    ifeq ($(strip $(filter-out aarch64, $(target_cpu))),)\n-      GCC_SPEC_FILES+=vxworks7-rtp-base-link.spec\n-    endif\n-    EXTRA_ADALIB_OBJS+=$(VX_CRTBE_EXTRA_ADALIB_OBJS)\n-    EXTRA_LIBGNAT_SRCS+=vx_crtbegin.inc\n-    GCC_SPEC_FILES+=vxworks-gnat-crtbe-link.spec\n-\n-    ifneq ($(strip $(filter-out vxworks7%, $(target_os))),)\n-      GCC_SPEC_FILES+=vxworks-arm-link.spec\n-      GCC_SPEC_FILES+=vxworks-smp-arm-link.spec\n-    endif\n-  endif\n-endif\n-\n-# ARM android\n-ifeq ($(strip $(filter-out arm% linux-androideabi,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__android.adb \\\n-  s-linux.ads<libgnarl/s-linux__android.ads \\\n-  s-osinte.adb<libgnarl/s-osinte__android.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__android.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-linux-arm.ads\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n-  EXTRA_LIBGNAT_OBJS+=sigtramp-armdroid.o\n-  EXTRA_LIBGNAT_SRCS+=sigtramp.h\n-  EH_MECHANISM=-arm\n-  THREADSLIB =\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# AARCH64 QNX\n-ifeq ($(strip $(filter-out aarch64 %qnx,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__qnx.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__qnx.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__qnx.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__qnx.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-qnx.ads<libgnarl/s-qnx.ads \\\n-  s-taprop.adb<libgnarl/s-taprop__qnx.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n-  g-soliop.ads<libgnat/g-soliop__qnx.ads \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-qnx-aarch64.ads\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_TASKING_OBJS=s-qnx.o\n-  EXTRA_LIBGNAT_OBJS+=sigtramp-qnx.o\n-  EXTRA_LIBGNAT_SRCS+=sigtramp.h\n-  EH_MECHANISM=-gcc\n-\n-  SO_OPTS= -shared-libgcc -Wl,-soname,\n-  MISCLIB= - lsocket\n-  THREADSLIB =\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# Sparc Solaris\n-ifeq ($(strip $(filter-out sparc% sun solaris%,$(target_cpu) $(target_vendor) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__solaris.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__solaris.adb \\\n-  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__solaris.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__solaris.ads \\\n-  s-osprim.adb<libgnat/s-osprim__solaris.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__solaris.adb \\\n-  s-tasinf.adb<libgnarl/s-tasinf__solaris.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__solaris.ads \\\n-  s-taspri.ads<libgnarl/s-taspri__solaris.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__solaris.adb \\\n-  g-soliop.ads<libgnat/g-soliop__solaris.ads \\\n-  $(TRASYM_DWARF_UNIX_PAIRS) \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-solaris-sparc.ads\n-\n-  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n-\n-  EH_MECHANISM=-gcc\n-  THREADSLIB = -lposix4 -lthread\n-  MISCLIB = -lposix4 -lnsl -lsocket\n-  SO_OPTS = -Wl,-h,\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# x86 and x86-64 solaris\n-ifeq ($(strip $(filter-out %86 %x86_64 solaris2%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS_COMMON = \\\n-  a-intnam.ads<libgnarl/a-intnam__solaris.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__solaris.adb \\\n-  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__solaris.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__solaris.ads \\\n-  s-osprim.adb<libgnat/s-osprim__solaris.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__solaris.adb \\\n-  s-tasinf.adb<libgnarl/s-tasinf__solaris.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__solaris.ads \\\n-  s-taspri.ads<libgnarl/s-taspri__solaris.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__solaris.adb \\\n-  g-soliop.ads<libgnat/g-soliop__solaris.ads \\\n-  $(TRASYM_DWARF_UNIX_PAIRS) \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-solaris-x86.ads\n-\n-  ifeq ($(strip $(filter-out %86 solaris2%,$(target_cpu) $(target_os))),)\n-    ifeq ($(strip $(MULTISUBDIR)),/amd64)\n-      LIBGNAT_TARGET_PAIRS = \\\n-      $(LIBGNAT_TARGET_PAIRS_COMMON) $(X86_64_TARGET_PAIRS)\n-    else\n-      LIBGNAT_TARGET_PAIRS = \\\n-      $(LIBGNAT_TARGET_PAIRS_COMMON) $(X86_TARGET_PAIRS)\n-    endif\n-  else\n-    ifeq ($(strip $(MULTISUBDIR)),/32)\n-      LIBGNAT_TARGET_PAIRS = \\\n-      $(LIBGNAT_TARGET_PAIRS_COMMON) $(X86_TARGET_PAIRS)\n-    else\n-      LIBGNAT_TARGET_PAIRS = \\\n-      $(LIBGNAT_TARGET_PAIRS_COMMON) $(X86_64_TARGET_PAIRS)\n-    endif\n-  endif\n-\n-  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n-  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n-\n-  EH_MECHANISM=-gcc\n-  THREADSLIB = -lposix4 -lthread\n-  MISCLIB = -lposix4 -lnsl -lsocket\n-  SO_OPTS = -Wl,-h,\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# x86 Linux\n-ifeq ($(strip $(filter-out %86 linux%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n-  a-synbar.adb<libgnarl/a-synbar__posix.adb \\\n-  a-synbar.ads<libgnarl/a-synbar__posix.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n-  $(TRASYM_DWARF_UNIX_PAIRS) \\\n-  g-sercom.adb<libgnat/g-sercom__linux.adb \\\n-  s-tsmona.adb<libgnat/s-tsmona__linux.adb \\\n-  a-exetim.adb<libgnarl/a-exetim__posix.adb \\\n-  a-exetim.ads<libgnarl/a-exetim__default.ads \\\n-  s-linux.ads<libgnarl/s-linux.ads \\\n-  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-linux-x86.ads\n-\n-  ifeq ($(strip $(MULTISUBDIR)),/64)\n-    LIBGNAT_TARGET_PAIRS += $(X86_64_TARGET_PAIRS)\n-  else\n-    LIBGNAT_TARGET_PAIRS += $(X86_TARGET_PAIRS)\n-  endif\n-\n-  LIBGNAT_TARGET_PAIRS += \\\n-  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n-  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix.ads\n-\n-  EH_MECHANISM=-gcc\n-  THREADSLIB = -lpthread -lrt\n-  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n-  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n-\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-  MISCLIB = -ldl\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# x86 kfreebsd\n-ifeq ($(strip $(filter-out %86 kfreebsd%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__freebsd.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__kfreebsd-gnu.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n-  $(TRASYM_DWARF_UNIX_PAIRS) \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(X86_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-freebsd.ads\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n-  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n-\n-  EH_MECHANISM=-gcc\n-  THREADSLIB = -lpthread\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-  MISCLIB = -lutil\n-endif\n-\n-# i[3456]86-pc-gnu i.e. GNU Hurd\n-ifeq ($(strip $(filter-out %86 pc gnu,$(target_cpu) $(target_vendor) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__freebsd.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__gnu.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__gnu.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(X86_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-freebsd.ads\n-\n-  TOOLS_TARGET_PAIRS =  indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n-\n-  EH_MECHANISM=-gcc\n-  THREADSLIB = -lpthread\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-ifeq ($(strip $(filter-out x86_64 kfreebsd%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__freebsd.ads \\\n-  a-numaux.adb<libgnat/a-numaux__x86.adb \\\n-  a-numaux.ads<libgnat/a-numaux__x86.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__kfreebsd-gnu.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n-  system.ads<libgnat/system-freebsd.ads\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n-\n-  EH_MECHANISM=-gcc\n-  THREADSLIB = -lpthread\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# aarch64 FreeBSD\n-ifeq ($(strip $(filter-out %aarch64 freebsd%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__freebsd.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__freebsd.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__freebsd.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix.adb \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-freebsd.ads\n-\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-\n-  EH_MECHANISM=-gcc\n-  THREADSLIB= -lpthread\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-  MISCLIB = -lutil\n-endif\n-\n-# x86 FreeBSD\n-ifeq ($(strip $(filter-out %86 freebsd%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__freebsd.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__freebsd.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__freebsd.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix.adb \\\n-  $(TRASYM_DWARF_UNIX_PAIRS) \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(X86_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-freebsd.ads\n-\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-\n-  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n-  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n-\n-  EH_MECHANISM=-gcc\n-  THREADSLIB= -lpthread\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-  MISCLIB = -lutil\n-endif\n-\n-# x86-64 FreeBSD\n-ifeq ($(strip $(filter-out %86_64 freebsd%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__freebsd.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__freebsd.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__freebsd.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix.adb \\\n-  $(TRASYM_DWARF_UNIX_PAIRS) \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(X86_64_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-freebsd.ads\n-\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-\n-  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n-  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n-\n-  EH_MECHANISM=-gcc\n-  THREADSLIB= -lpthread\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-  MISCLIB = -lutil\n-endif\n-\n-# x86-64 DragonFly\n-ifeq ($(strip $(filter-out %86_64 dragonfly%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__dragonfly.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__dragonfly.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__dragonfly.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix.adb \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(X86_64_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-dragonfly-x86_64.ads\n-\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-\n-  EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n-\n-  EH_MECHANISM=-gcc\n-  THREADSLIB= -lpthread\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-  MISCLIB = -lutil\n-endif\n-\n-# S390 Linux\n-ifeq ($(strip $(filter-out s390% linux%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-linux.ads<libgnarl/s-linux.ads \\\n-  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n-  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n-  system.ads<libgnat/system-linux-s390.ads\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n-  EH_MECHANISM=-gcc\n-  THREADSLIB = -lpthread\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# HP/PA HP-UX 10\n-ifeq ($(strip $(filter-out hppa% hp hpux10%,$(target_cpu) $(target_vendor) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-excpol.adb<libgnat/a-excpol__abort.adb \\\n-  a-intnam.ads<libgnarl/a-intnam__hpux.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-interr.adb<libgnarl/s-interr__sigaction.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__hpux-dce.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__hpux-dce.ads \\\n-  s-parame.ads<libgnat/s-parame__hpux.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__hpux-dce.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__hpux-dce.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix.adb \\\n-  system.ads<libgnat/system-hpux.ads\n-\n-  EH_MECHANISM=-gcc\n-endif\n-\n-# HP/PA HP-UX 11\n-ifeq ($(strip $(filter-out hppa% hp hpux11%,$(target_cpu) $(target_vendor) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__hpux.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__hpux.ads \\\n-  s-parame.ads<libgnat/s-parame__hpux.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-traceb.adb<libgnat/s-traceb__hpux.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n-  system.ads<libgnat/system-hpux.ads\n-\n-  EH_MECHANISM=-gcc\n-  TGT_LIB = /usr/lib/libcl.a\n-  THREADSLIB = -lpthread\n-  GMEM_LIB = gmemlib\n-  soext = .sl\n-  SO_OPTS = -Wl,+h,\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# IBM AIX\n-ifeq ($(strip $(filter-out ibm aix%,$(target_vendor) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__aix.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__aix.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__aix.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix.adb \\\n-  $(TRASYM_DWARF_UNIX_PAIRS) \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-aix.ads\n-\n-  ifeq ($(findstring ppc64, \\\n-\t  $(shell $(GCC_FOR_TARGET) $(GNATLIBCFLAGS) \\\n-\t\t   -print-multi-os-directory)), \\\n-\tppc64)\n-    TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-aix.adb\n-  else\n-    TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n-  endif\n-\n-  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n-\n-  THREADSLIB = -lpthreads\n-  EH_MECHANISM=-gcc\n-\n-  GMEM_LIB = gmemlib\n-endif\n-\n-# RTEMS\n-ifeq ($(strip $(filter-out rtems%,$(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  system.ads<libgnat/system-rtems.ads \\\n-  a-intnam.ads<libgnarl/a-intnam__rtems.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__rtems.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__rtems.ads \\\n-  s-osprim.adb<libgnat/s-osprim__rtems.adb \\\n-  s-parame.adb<libgnat/s-parame__rtems.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n-  s-stchop.adb<libgnat/s-stchop__rtems.adb \\\n-  s-interr.adb<libgnarl/s-interr__hwint.adb\n-  ifeq ($(strip $(filter-out arm%, $(target_cpu))),)\n-    EH_MECHANISM=-arm\n-  else\n-    EH_MECHANISM=-gcc\n-  endif\n-endif\n-\n-# PikeOS\n-ifeq ($(strip $(filter-out powerpc% %86 sysgo pikeos,$(target_cpu) $(target_vendor) $(target_os)))),)\n-  TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n-endif\n-\n-# *-elf, *-eabi, or *-eabispe\n-ifeq ($(strip $(filter-out elf eabi eabispe,$(target_os))),)\n-  TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n-endif\n-\n-ifeq ($(strip $(filter-out %djgpp,$(target_os))),)\n-  GNATRTL_SOCKETS_OBJS =\n-\n-  LIBGNAT_TARGET_PAIRS = \\\n-\ta-intnam.ads<libgnarl/a-intnam__dummy.ads \\\n-\ts-inmaop.adb<libgnarl/s-inmaop__dummy.adb \\\n-\ts-intman.adb<libgnarl/s-intman__dummy.adb \\\n-\ts-osinte.ads<libgnarl/s-osinte__dummy.ads \\\n-\ts-osprim.adb<libgnat/s-osprim__unix.adb \\\n-\ts-taprop.adb<libgnarl/s-taprop__dummy.adb \\\n-\ts-taspri.ads<libgnarl/s-taspri__dummy.ads \\\n-\tsystem.ads<libgnat/system-djgpp.ads \\\n-\t$(DUMMY_SOCKETS_TARGET_PAIRS)\n-\n-  EH_MECHANISM=-gcc\n-endif\n-\n-# Cygwin/Mingw32\n-ifeq ($(strip $(filter-out cygwin% mingw32% pe,$(target_os))),)\n-  # Cygwin provides a full Posix environment, and so we use the default\n-  # versions of s-memory and g-socthi rather than the Windows-specific\n-  # MinGW versions.  Ideally we would use all the default versions for\n-  # Cygwin and none of the MinGW versions, but for historical reasons\n-  # the Cygwin port has always been a CygMing frankenhybrid and it is\n-  # a long-term project to disentangle them.\n-  ifeq ($(strip $(filter-out cygwin%,$(target_os))),)\n-    LIBGNAT_TARGET_PAIRS = \\\n-    s-memory.adb<libgnat/s-memory.adb \\\n-    g-socthi.ads<libgnat/g-socthi.ads \\\n-    g-socthi.adb<libgnat/g-socthi.adb\n-  else\n-    LIBGNAT_TARGET_PAIRS = \\\n-    s-memory.adb<libgnat/s-memory__mingw.adb \\\n-    g-socthi.ads<libgnat/g-socthi__mingw.ads \\\n-    g-socthi.adb<libgnat/g-socthi__mingw.adb\n-  endif\n-  LIBGNAT_TARGET_PAIRS += \\\n-  a-dirval.adb<libgnat/a-dirval__mingw.adb \\\n-  a-excpol.adb<libgnat/a-excpol__abort.adb \\\n-  s-gloloc.adb<libgnat/s-gloloc__mingw.adb \\\n-  s-inmaop.adb<libgnarl/s-inmaop__dummy.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__mingw.ads \\\n-  s-tasinf.adb<libgnarl/s-tasinf__mingw.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__mingw.ads \\\n-  g-stsifd.adb<libgnat/g-stsifd__sockets.adb \\\n-  g-soliop.ads<libgnat/g-soliop__mingw.ads \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-mingw.ads\n-\n-  LIBGNAT_TARGET_PAIRS += \\\n-  a-exetim.adb<libgnarl/a-exetim__mingw.adb \\\n-  a-exetim.ads<libgnarl/a-exetim__mingw.ads \\\n-  a-intnam.ads<libgnarl/a-intnam__mingw.ads \\\n-  g-sercom.adb<libgnat/g-sercom__mingw.adb \\\n-  $(TRASYM_DWARF_MINGW_PAIRS) \\\n-  s-tsmona.adb<libgnat/s-tsmona__mingw.adb \\\n-  s-interr.adb<libgnarl/s-interr__sigaction.adb \\\n-  s-intman.adb<libgnarl/s-intman__mingw.adb \\\n-  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__mingw.ads \\\n-  s-osprim.adb<libgnat/s-osprim__mingw.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__mingw.adb\n-\n-  ifeq ($(strip $(filter-out x86_64%,$(target_cpu))),)\n-    ifeq ($(strip $(MULTISUBDIR)),/32)\n-      LIBGNAT_TARGET_PAIRS += $(X86_TARGET_PAIRS)\n-      SO_OPTS= -m32 -Wl,-soname,\n-    else\n-      LIBGNAT_TARGET_PAIRS += $(X86_64_TARGET_PAIRS)\n-      SO_OPTS = -m64 -Wl,-soname,\n-    endif\n-  else\n-    ifeq ($(strip $(MULTISUBDIR)),/64)\n-      LIBGNAT_TARGET_PAIRS += $(X86_64_TARGET_PAIRS)\n-      SO_OPTS = -m64 -Wl,-soname,\n-    else\n-      LIBGNAT_TARGET_PAIRS += $(X86_TARGET_PAIRS)\n-      SO_OPTS = -m32 -Wl,-soname,\n-    endif\n-  endif\n-\n-  EXTRA_GNATRTL_NONTASKING_OBJS += \\\n-    s-win32.o s-winext.o g-regist.o g-sse.o g-ssvety.o\n-  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_MINGW_OBJS)\n-  EXTRA_GNATRTL_TASKING_OBJS = a-exetim.o\n-  EXTRA_LIBGNAT_SRCS+=mingw32.h\n-  MISCLIB = -lws2_32\n-\n-  # ??? This will be replaced by gnatlib-shared-dual-win32 when GNAT\n-  # auto-import support for array/record will be done.\n-  GNATLIB_SHARED = gnatlib-shared-win32\n-\n-  EH_MECHANISM=-gcc\n-\n-  TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n-\n-  GMEM_LIB = gmemlib\n-  EXTRA_GNATTOOLS = ../../gnatdll$(exeext)\n-  EXTRA_GNATMAKE_OBJS = mdll.o mdll-utl.o mdll-fil.o\n-  soext = .dll\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# Mips Linux\n-ifeq ($(strip $(filter-out mips% linux%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-linux.ads<libgnarl/s-linux__mips.ads \\\n-  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n-  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n-  g-sercom.adb<libgnat/g-sercom__linux.adb \\\n-  system.ads<libgnat/system-linux-mips.ads\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n-  EH_MECHANISM=-gcc\n-  THREADSLIB = -lpthread\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# PowerPC and e500v2 Linux\n-ifeq ($(strip $(filter-out powerpc% linux%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS_COMMON = \\\n-  a-exetim.adb<libgnarl/a-exetim__posix.adb \\\n-  a-exetim.ads<libgnarl/a-exetim__default.ads \\\n-  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n-  a-synbar.adb<libgnarl/a-synbar__posix.adb \\\n-  a-synbar.ads<libgnarl/a-synbar__posix.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-linux.ads<libgnarl/s-linux.ads \\\n-  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n-  g-sercom.adb<libgnat/g-sercom__linux.adb \\\n-  $(TRASYM_DWARF_UNIX_PAIRS) \\\n-  s-tsmona.adb<libgnat/s-tsmona__linux.adb \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-linux-ppc.ads\n-\n-  LIBGNAT_TARGET_PAIRS = \\\n-    $(LIBGNAT_TARGET_PAIRS_COMMON) \\\n-    s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-    s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n-    s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-    s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n-    s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n-    s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n-    s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n-\n-  EH_MECHANISM=-gcc\n-  THREADSLIB = -lpthread -lrt\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-  MISCLIB = -ldl\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# ARM linux, GNU eabi\n-ifeq ($(strip $(filter-out arm% linux-gnueabi%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-linux.ads<libgnarl/s-linux.ads \\\n-  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n-  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-linux-arm.ads\n-\n-  ifeq ($(strip $(filter-out arm%b,$(target_cpu))),)\n-    EH_MECHANISM=\n-  else\n-    EH_MECHANISM=-arm\n-  endif\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n-  THREADSLIB = -lpthread\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# AArch64 Linux\n-ifeq ($(strip $(filter-out aarch64% linux%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-exetim.adb<libgnarl/a-exetim__posix.adb \\\n-  a-exetim.ads<libgnarl/a-exetim__default.ads \\\n-  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n-  a-synbar.adb<libgnarl/a-synbar__posix.adb \\\n-  a-synbar.ads<libgnarl/a-synbar__posix.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-linux.ads<libgnarl/s-linux.ads \\\n-  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n-  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n-  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n-  g-sercom.adb<libgnat/g-sercom__linux.adb \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-linux-arm.ads\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n-  EH_MECHANISM=-gcc\n-  THREADSLIB=-lpthread -lrt\n-  GNATLIB_SHARED=gnatlib-shared-dual\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# Sparc Linux\n-ifeq ($(strip $(filter-out sparc% linux%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-linux.ads<libgnarl/s-linux__sparc.ads \\\n-  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n-  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n-  system.ads<libgnat/system-linux-sparc.ads\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n-  EH_MECHANISM=-gcc\n-  THREADSLIB = -lpthread\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# HP/PA Linux\n-ifeq ($(strip $(filter-out hppa% linux%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-linux.ads<libgnarl/s-linux__hppa.ads \\\n-  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n-  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n-  system.ads<libgnat/system-linux-hppa.ads\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n-  EH_MECHANISM=-gcc\n-  THREADSLIB = -lpthread\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# M68K Linux\n-ifeq ($(strip $(filter-out m68k% linux%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-linux.ads<libgnarl/s-linux.ads \\\n-  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n-  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n-  system.ads<libgnat/system-linux-m68k.ads\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n-  EH_MECHANISM=-gcc\n-  THREADSLIB = -lpthread\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# SH4 Linux\n-ifeq ($(strip $(filter-out sh4% linux%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-linux.ads<libgnarl/s-linux.ads \\\n-  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n-  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n-  system.ads<libgnat/system-linux-sh4.ads\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-linux.adb\n-\n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n-  EH_MECHANISM=-gcc\n-  MISCLIB=\n-  THREADSLIB = -lpthread\n-  GNATLIB_SHARED = gnatlib-shared-dual\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# IA64 Linux\n-ifeq ($(strip $(filter-out %ia64 linux%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-exetim.adb<libgnarl/a-exetim__posix.adb \\\n-  a-exetim.ads<libgnarl/a-exetim__default.ads \\\n-  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n-  a-numaux.ads<libgnat/a-numaux__libc-x86.ads \\\n-  a-synbar.adb<libgnarl/a-synbar__posix.adb \\\n-  a-synbar.ads<libgnarl/a-synbar__posix.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-linux.ads<libgnarl/s-linux.ads \\\n-  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n-  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n-  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n-  g-sercom.adb<libgnat/g-sercom__linux.adb \\\n-  $(TRASYM_DWARF_UNIX_PAIRS) \\\n-  s-tsmona.adb<libgnat/s-tsmona__linux.adb \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-linux-ia64.ads\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n-  EH_MECHANISM=-gcc\n-  THREADSLIB=-lpthread -lrt\n-  GNATLIB_SHARED=gnatlib-shared-dual\n-  MISCLIB = -ldl\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# IA64 HP-UX\n-ifeq ($(strip $(filter-out ia64% hp hpux%,$(target_cpu) $(target_vendor) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__hpux.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__hpux.ads \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n-  $(TRASYM_DWARF_UNIX_PAIRS) \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-hpux-ia64.ads\n-\n-  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n-\n-  MISCLIB=\n-  EH_MECHANISM=-gcc\n-  THREADSLIB=-lpthread\n-  GNATLIB_SHARED=gnatlib-shared-dual\n-  GMEM_LIB = gmemlib\n-  soext = .so\n-  SO_OPTS = -Wl,+h,\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# Alpha Linux\n-ifeq ($(strip $(filter-out alpha% linux%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-linux.ads<libgnarl/s-linux__alpha.ads \\\n-  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n-  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n-  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-linux-alpha.ads\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n-  EH_MECHANISM=-gcc\n-  MISCLIB=\n-  THREADSLIB=-lpthread\n-  GNATLIB_SHARED=gnatlib-shared-dual\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# x86-64 Linux\n-ifeq ($(strip $(filter-out %x86_64 linux%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-exetim.adb<libgnarl/a-exetim__posix.adb \\\n-  a-exetim.ads<libgnarl/a-exetim__default.ads \\\n-  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n-  a-synbar.adb<libgnarl/a-synbar__posix.adb \\\n-  a-synbar.ads<libgnarl/a-synbar__posix.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-linux.ads<libgnarl/s-linux.ads \\\n-  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n-  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n-  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n-  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n-  g-sercom.adb<libgnat/g-sercom__linux.adb \\\n-  $(TRASYM_DWARF_UNIX_PAIRS) \\\n-  s-tsmona.adb<libgnat/s-tsmona__linux.adb \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(X86_64_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-linux-x86.ads\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n-  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n-\n-  EH_MECHANISM=-gcc\n-  THREADSLIB=-lpthread -lrt\n-  MISCLIB = -ldl\n-  GNATLIB_SHARED=gnatlib-shared-dual\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-ifeq ($(strip $(filter-out %x32 linux%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-exetim.adb<libgnarl/a-exetim__posix.adb \\\n-  a-exetim.ads<libgnarl/a-exetim__default.ads \\\n-  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n-  a-synbar.adb<libgnarl/a-synbar__posix.adb \\\n-  a-synbar.ads<libgnarl/a-synbar__posix.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n-  s-linux.ads<libgnarl/s-linux__x32.ads \\\n-  s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n-  s-osinte.adb<libgnarl/s-osinte__x32.adb \\\n-  s-osprim.adb<libgnat/s-osprim__x32.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n-  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n-  s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n-  g-sercom.adb<libgnat/g-sercom__linux.adb \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(X86_64_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-linux-x86.ads\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n-  EH_MECHANISM=-gcc\n-  THREADSLIB=-lpthread -lrt\n-  GNATLIB_SHARED=gnatlib-shared-dual\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n-# Darwin (Mac OS X)\n-ifeq ($(strip $(filter-out darwin%,$(target_os))),)\n-  SO_OPTS = -shared-libgcc\n-  LIBGNAT_TARGET_PAIRS = \\\n-    a-intnam.ads<libgnarl/a-intnam__darwin.ads \\\n-    s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-    s-osinte.adb<libgnarl/s-osinte__darwin.adb \\\n-    s-osinte.ads<libgnarl/s-osinte__darwin.ads \\\n-    s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n-    s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n-    g-sercom.adb<libgnat/g-sercom__linux.adb \\\n-    s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb\n-\n-  ifeq ($(strip $(filter-out %86,$(target_cpu))),)\n-    LIBGNAT_TARGET_PAIRS += \\\n-      s-intman.adb<libgnarl/s-intman__susv3.adb \\\n-      s-osprim.adb<libgnat/s-osprim__darwin.adb \\\n-      $(ATOMICS_TARGET_PAIRS) \\\n-      system.ads<libgnat/system-darwin-x86.ads\n-\n-    ifeq ($(strip $(MULTISUBDIR)),/x86_64)\n-      SO_OPTS += -m64\n-      LIBGNAT_TARGET_PAIRS += $(X86_64_TARGET_PAIRS)\n-    else\n-      LIBGNAT_TARGET_PAIRS += $(X86_TARGET_PAIRS)\n-    endif\n-\n-    EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n-  endif\n-\n-  ifeq ($(strip $(filter-out %x86_64,$(target_cpu))),)\n-    LIBGNAT_TARGET_PAIRS += \\\n-      s-intman.adb<libgnarl/s-intman__susv3.adb \\\n-      s-osprim.adb<libgnat/s-osprim__darwin.adb \\\n-      a-exetim.ads<libgnarl/a-exetim__default.ads \\\n-      a-exetim.adb<libgnarl/a-exetim__darwin.adb \\\n-      $(ATOMICS_TARGET_PAIRS) \\\n-      system.ads<libgnat/system-darwin-x86.ads\n-\n-    ifeq ($(strip $(MULTISUBDIR)),/i386)\n-      SO_OPTS += -m32\n-      LIBGNAT_TARGET_PAIRS += $(X86_TARGET_PAIRS)\n-    else\n-      LIBGNAT_TARGET_PAIRS += $(X86_64_TARGET_PAIRS)\n-    endif\n-\n-    EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n-    EXTRA_GNATRTL_TASKING_OBJS=a-exetim.o\n-  endif\n-\n-  ifeq ($(strip $(filter-out powerpc%,$(target_cpu))),)\n-    LIBGNAT_TARGET_PAIRS += \\\n-      s-intman.adb<libgnarl/s-intman__posix.adb \\\n-      s-osprim.adb<libgnat/s-osprim__posix.adb \\\n-      a-numaux.ads<libgnat/a-numaux__darwin.ads \\\n-      a-numaux.adb<libgnat/a-numaux__darwin.adb \\\n-      $(ATOMICS_TARGET_PAIRS) \\\n-      $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n-      system.ads<libgnat/system-darwin-ppc.ads\n-\n-    ifeq ($(strip $(MULTISUBDIR)),/ppc64)\n-        SO_OPTS += -m64\n-    endif\n-  endif\n-\n-  ifeq ($(strip $(filter-out arm,$(target_cpu))),)\n-    LIBGNAT_TARGET_PAIRS += \\\n-      s-intman.adb<libgnarl/s-intman__susv3.adb \\\n-      s-osprim.adb<libgnat/s-osprim__darwin.adb \\\n-      $(ATOMICS_TARGET_PAIRS) \\\n-      $(ATOMICS_BUILTINS_TARGET_PAIRS)\n-\n-    LIBGNAT_TARGET_PAIRS += \\\n-      system.ads<libgnat/system-darwin-arm.ads\n-  endif\n-\n-  ifeq ($(strip $(filter-out arm64 aarch64,$(target_cpu))),)\n-    LIBGNAT_TARGET_PAIRS += \\\n-      s-intman.adb<libgnarl/s-intman__susv3.adb \\\n-      s-osprim.adb<libgnat/s-osprim__darwin.adb \\\n-      $(ATOMICS_TARGET_PAIRS) \\\n-      $(ATOMICS_BUILTINS_TARGET_PAIRS)\n-\n-    EXTRA_LIBGNAT_OBJS+=sigtramp-ios.o\n-    EXTRA_LIBGNAT_SRCS+=sigtramp.h\n-    LIBGNAT_TARGET_PAIRS += \\\n-      system.ads<libgnat/system-darwin-arm.ads\n-  endif\n-\n-  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-darwin.adb\n-\n-  EH_MECHANISM=-gcc\n-  GNATLIB_SHARED = gnatlib-shared-darwin\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-  soext = .dylib\n-  GCC_LINK_FLAGS=-static-libstdc++\n-endif\n-\n-ifeq ($(EH_MECHANISM),-gcc)\n-  LIBGNAT_TARGET_PAIRS += \\\n-    s-excmac.ads<libgnat/s-excmac__gcc.ads \\\n-    s-excmac.adb<libgnat/s-excmac__gcc.adb\n-  EXTRA_LIBGNAT_OBJS+=raise-gcc.o\n-  EXTRA_GNATRTL_NONTASKING_OBJS+=g-cppexc.o s-excmac.o\n-endif\n-\n-ifeq ($(EH_MECHANISM),-arm)\n-  LIBGNAT_TARGET_PAIRS += \\\n-    s-excmac.ads<libgnat/s-excmac__arm.ads \\\n-    s-excmac.adb<libgnat/s-excmac__arm.adb\n-  EXTRA_LIBGNAT_OBJS+=raise-gcc.o\n-  EXTRA_GNATRTL_NONTASKING_OBJS+=g-cppexc.o s-excmac.o\n-endif\n-\n # Configuration of host tools\n \n # Under linux, host tools need to be linked with -ldl\n@@ -2049,82 +356,8 @@ ifeq ($(strip $(filter-out linux%,$(host_os))),)\n    TOOLS1_LIBS=-ldl\n endif\n \n-# LIBGNAT_SRCS is the list of all C files (including headers) of the runtime\n-# library.  LIBGNAT_OBJS is the list of object files for libgnat.\n-# thread.c is special as put into GNATRTL_TASKING_OBJS by Makefile.rtl\n-LIBGNAT_OBJS = adadecode.o adaint.o argv.o aux-io.o \t\t\t\\\n-  cal.o cio.o cstreams.o ctrl_c.o\t\t\t\t\t\\\n-  env.o errno.o exit.o expect.o final.o rtfinal.o rtinit.o\t\t\\\n-  init.o initialize.o locales.o mkdir.o\t\t\t\t\t\\\n-  raise.o seh_init.o socket.o sysdep.o\t\t\t\t\t\\\n-  targext.o terminals.o tracebak.o \t\t\t\t\t\\\n-  $(EXTRA_LIBGNAT_OBJS)\n-\n-# NOTE ??? - when the -I option for compiling Ada code is made to work,\n-#  the library installation will change and there will be a\n-#  GNAT_RTL_SRCS.  Right now we count on being able to build GNATRTL_OBJS\n-#  from ADA_INCLUDE_SRCS.\n-\n-LIBGNAT_SRCS = $(patsubst %.o,%.c,$(LIBGNAT_OBJS))\t\t\t\\\n-  adadecode.h adaint.h env.h gsocket.h raise.h standard.ads.h\t\t\\\n-  tb-gcc.c libgnarl/thread.c $(EXTRA_LIBGNAT_SRCS)\n-\n-# GNATRTL_NONTASKING_OBJS and GNATRTL_TASKING_OBJS can be found in\n-# the following include file:\n-\n include $(fsrcdir)/ada/Makefile.rtl\n \n-# memtrack.o is special as not put into libgnat.\n-GNATRTL_OBJS = $(GNATRTL_NONTASKING_OBJS) $(GNATRTL_TASKING_OBJS) \\\n-  memtrack.o\n-\n-# Run time source files\n-# Note that libgnat contains a significant number of files. In orde to avoid\n-# command line length limitations the source regexp has been split for that\n-# directory.\n-ADA_INCLUDE_SRCS =\\\n- libgnat/ada.ads libgnat/calendar.ads libgnat/directio.ads libgnat/gnat.ads libgnat/interfac.ads libgnat/ioexcept.ads \\\n- libgnat/machcode.ads libgnat/text_io.ads libgnat/unchconv.ads libgnat/unchdeal.ads \\\n- libgnat/sequenio.ads libgnat/system.ads libgnat/memtrack.adb \\\n- libgnat/a-[a-o]*.adb libgnat/a-[a-o]*.ads \\\n- libgnat/a-[p-z]*.adb libgnat/a-[p-z]*.ads \\\n- libgnat/g-[a-o]*.adb libgnat/g-[a-o]*.ads \\\n- libgnat/g-[p-z]*.adb libgnat/g-[p-z]*.ads \\\n- libgnat/s-[a-o]*.adb libgnat/s-[a-o]*.ads \\\n- libgnat/s-[p-z]*.adb libgnat/s-[p-z]*.ads \\\n- libgnat/i-[a-o]*.adb libgnat/i-[a-o]*.ads \\\n- libgnat/i-[p-z]*.adb libgnat/i-[p-z]*.ads \\\n- libgnarl/[agis]-[a-z]*.ad[sb]\n-\n-# Files that are in ADA_INCLUDE_SRCS but not in all configurations.\n-# They will be removed from the run time if not used.\n-ADA_EXCLUDE_SRCS =\\\n-  g-allein.ads g-alleve.adb g-alleve.ads g-altcon.adb g-altcon.ads \\\n-  g-altive.ads g-alveop.adb g-alveop.ads g-alvety.ads g-alvevi.ads \\\n-  g-intpri.ads g-regist.adb g-regist.ads g-sse.ads    g-ssvety.ads \\\n-  i-vxinco.adb i-vxinco.ads i-vxwoio.adb i-vxwoio.ads i-vxwork.ads \\\n-  s-bb.ads     s-bbbosu.ads s-bbcaco.ads s-bbcppr.ads s-bbexti.adb \\\n-  s-bbexti.ads s-bbinte.adb s-bbinte.ads s-bbprot.adb s-bbprot.ads \\\n-  s-bbsle3.ads s-bbsuer.ads s-bbsule.ads s-bbthqu.adb s-bbthqu.ads \\\n-  s-bbthre.adb s-bbthre.ads s-bbtiev.adb s-bbtiev.ads s-bbtime.adb \\\n-  s-bbtime.ads s-bcprmu.adb s-bcprmu.ads s-btstch.adb s-btstch.ads \\\n-  s-gcc.adb    s-gcc.ads    s-gccdiv.adb s-gccdiv.ads \\\n-  s-gccshi.adb s-gccshi.ads \\\n-  s-init.ads   s-init.adb   s-linux.ads  s-macres.ads \\\n-  s-memcom.adb s-memcom.ads s-memmov.adb s-memmov.ads s-memset.adb \\\n-  s-memset.ads s-mufalo.adb s-mufalo.ads s-musplo.adb s-musplo.ads \\\n-  s-sam4.ads   s-sopco3.adb s-sopco3.ads s-sopco4.adb s-sopco4.ads \\\n-  s-sopco5.adb s-sopco5.ads s-stchop.ads s-stchop.adb s-stm32.ads \\\n-  s-strcom.adb s-strcom.ads s-thread.ads \\\n-  s-vxwext.adb s-vxwext.ads \\\n-  s-win32.ads  s-winext.ads\n-\n-# ADA_EXCLUDE_SRCS without the sources used by the target\n-ADA_EXCLUDE_FILES=$(filter-out \\\n-  $(patsubst %$(objext),%.ads,$(GNATRTL_OBJS)) \\\n-  $(patsubst %$(objext),%.adb,$(GNATRTL_OBJS)), \\\n-  $(ADA_EXCLUDE_SRCS))\n-\n LIBGNAT=../$(RTSDIR)/libgnat.a\n \n TOOLS_FLAGS_TO_PASS=\t\t\\\n@@ -2345,27 +578,7 @@ install-gnatlib: ../stamp-gnatlib-$(RTSDIR) install-gcc-specs\n \t$(RM) ../stamp-gnatlib-$(RTSDIR)\n \n ../stamp-gnatlib1-$(RTSDIR): Makefile ../stamp-gnatlib2-$(RTSDIR)\n-\t$(RMDIR) $(RTSDIR)\n-\t$(MKDIR) $(RTSDIR)\n-\t$(CHMOD) u+w $(RTSDIR)\n-# Copy target independent sources\n-\t$(foreach f,$(ADA_INCLUDE_SRCS) $(LIBGNAT_SRCS), \\\n-\t  $(LN_S) $(fsrcpfx)ada/$(f) $(RTSDIR) ;) true\n-# Remove files not used\n-\t$(RM) $(patsubst %,$(RTSDIR)/%,$(ADA_EXCLUDE_FILES))\n-# Remove files to be replaced by target dependent sources\n-\t$(RM) $(foreach PAIR,$(LIBGNAT_TARGET_PAIRS), \\\n-\t                $(RTSDIR)/$(word 1,$(subst <, ,$(PAIR))))\n-\tfor f in $(RTSDIR)/*-*__*.ads $(RTSDIR)/*-*__*.adb; do \\\n-\t  case \"$$f\" in \\\n-\t    $(RTSDIR)/s-stratt__*) ;; \\\n-\t    *) $(RM) $$f ;; \\\n-\t  esac; \\\n-\tdone\n-# Copy new target dependent sources\n-\t$(foreach PAIR,$(LIBGNAT_TARGET_PAIRS), \\\n-\t          $(LN_S) $(fsrcpfx)ada/$(word 2,$(subst <, ,$(PAIR))) \\\n-\t                $(RTSDIR)/$(word 1,$(subst <, ,$(PAIR)));)\n+\t$(MAKE) THREAD_KIND=$(THREAD_KIND) setup-rts\n # Copy tsystem.h\n \t$(CP) $(srcdir)/tsystem.h $(RTSDIR)\n \t$(RM) ../stamp-gnatlib-$(RTSDIR)"}]}