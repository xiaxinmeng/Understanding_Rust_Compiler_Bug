{"sha": "0e701488e1f731a529f6b391e538d369777c32c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU3MDE0ODhlMWY3MzFhNTI5ZjZiMzkxZTUzOGQzNjk3NzdjMzJjMA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2007-06-06T10:41:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:41:57Z"}, "message": "scng.adb: (Check_End_Of_Line): Deal with very long lines\n\n2007-04-20  Robert Dewar  <dewar@adacore.com>\n\n\t* scng.adb: (Check_End_Of_Line): Deal with very long lines\n\nFrom-SVN: r125445", "tree": {"sha": "4d72d1588d56d4b9ac42f309727482c33856aa1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d72d1588d56d4b9ac42f309727482c33856aa1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e701488e1f731a529f6b391e538d369777c32c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e701488e1f731a529f6b391e538d369777c32c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e701488e1f731a529f6b391e538d369777c32c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e701488e1f731a529f6b391e538d369777c32c0/comments", "author": null, "committer": null, "parents": [{"sha": "b06f1f839cd54e81ff74be32d30aa702d7b18917", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b06f1f839cd54e81ff74be32d30aa702d7b18917", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b06f1f839cd54e81ff74be32d30aa702d7b18917"}], "stats": {"total": 53, "additions": 50, "deletions": 3}, "files": [{"sha": "e9a0e0284e1bbf3df7bb7ce6a9471ea14319cd3d", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 50, "deletions": 3, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e701488e1f731a529f6b391e538d369777c32c0/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e701488e1f731a529f6b391e538d369777c32c0/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=0e701488e1f731a529f6b391e538d369777c32c0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,10 +39,9 @@ with Urealp;   use Urealp;\n with Widechar; use Widechar;\n \n with System.CRC32;\n+with System.UTF_32;  use System.UTF_32;\n with System.WCh_Con; use System.WCh_Con;\n \n-with GNAT.UTF_32; use GNAT.UTF_32;\n-\n package body Scng is\n \n    use ASCII;\n@@ -267,6 +266,46 @@ package body Scng is\n             Error_Long_Line;\n          end if;\n \n+         --  Now one more checking circuit. Normally we are only enforcing a\n+         --  limit of physical characters, with tabs counting as one character.\n+         --  But if after tab expansion we would have a total line length that\n+         --  exceeded 32766, that would really cause trouble, because column\n+         --  positions would exceed the maximum we allow for a column count.\n+         --  Note: the limit is 32766 rather than 32767, since we use a value\n+         --  of 32767 for special purposes (see Sinput). Now we really do not\n+         --  want to go messing with tabs in the normal case, so what we do is\n+         --  to check for a line that has more than 4096 physical characters.\n+         --  Any shorter line could not be a problem, even if it was all tabs.\n+\n+         if Len >= 4096 then\n+            declare\n+               Col : Natural;\n+               Ptr : Source_Ptr;\n+\n+            begin\n+               Col := 1;\n+               Ptr := Current_Line_Start;\n+               loop\n+                  exit when Ptr = Scan_Ptr;\n+\n+                  if Source (Ptr) = ASCII.HT then\n+                     Col := (Col - 1 + 8) / 8 * 8 + 1;\n+                  else\n+                     Col := Col + 1;\n+                  end if;\n+\n+                  if Col > 32766 then\n+                     Error_Msg\n+                       (\"this line is longer than 32766 characters\",\n+                        Current_Line_Start);\n+                     raise Unrecoverable_Error;\n+                  end if;\n+\n+                  Ptr := Ptr + 1;\n+               end loop;\n+            end;\n+         end if;\n+\n          --  Reset wide character byte count for next line\n \n          Wide_Char_Byte_Count := 0;\n@@ -2441,6 +2480,14 @@ package body Scng is\n       end loop Tabs_Loop;\n \n       return Start_Column;\n+\n+   --  A constraint error can happen only if we have a compiler with checks on\n+   --  and a line with a ludicrous number of tabs or spaces at the start. In\n+   --  such a case, we really don't care if Start_Column is right or not.\n+\n+   exception\n+      when Constraint_Error =>\n+         return Start_Column;\n    end Set_Start_Column;\n \n end Scng;"}]}