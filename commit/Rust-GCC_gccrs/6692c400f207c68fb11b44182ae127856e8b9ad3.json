{"sha": "6692c400f207c68fb11b44182ae127856e8b9ad3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY5MmM0MDBmMjA3YzY4ZmIxMWI0NDE4MmFlMTI3ODU2ZThiOWFkMw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-11-24T00:15:54Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-11-24T00:19:26Z"}, "message": "Dump type attributes in dump_function_to_file.\n\ngcc/ChangeLog:\n\n\t* tree-cfg.c (dump_function_to_file): Print type attributes\n\tand return type.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/attr-access-5.c: New test.", "tree": {"sha": "3a363293cba485927fefb68147ddd66718831d4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a363293cba485927fefb68147ddd66718831d4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6692c400f207c68fb11b44182ae127856e8b9ad3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6692c400f207c68fb11b44182ae127856e8b9ad3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6692c400f207c68fb11b44182ae127856e8b9ad3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6692c400f207c68fb11b44182ae127856e8b9ad3/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e6198d0f8ef9f7fbf68cb5340b9cbe174d4e58a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e6198d0f8ef9f7fbf68cb5340b9cbe174d4e58a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e6198d0f8ef9f7fbf68cb5340b9cbe174d4e58a"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "e78b3602ade00a85b3eab80fe32f6b68f6a37a6d", "filename": "gcc/testsuite/gcc.dg/attr-access-5.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6692c400f207c68fb11b44182ae127856e8b9ad3/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-access-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6692c400f207c68fb11b44182ae127856e8b9ad3/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-access-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-access-5.c?ref=6692c400f207c68fb11b44182ae127856e8b9ad3", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile }\n+   { dg-options \"-fdump-tree-gimple\" } */\n+\n+__attribute__ ((aligned (32)))\n+__attribute__ ((access (write_only, 2, 1)))\n+void f (int n, void *p)\n+{\n+  __builtin_memset (p, 0, n);\n+}\n+\n+/* Verify the DECL_ATTRIBUTE \"aligned\" is mentioned:\n+   { dg-final { scan-tree-dump \"__attribute__\\\\(\\\\(aligned\" \"gimple\" } }\n+   and the TYPE_ATTRIBUTE \"access\" is also mentioned:\n+   { dg-final { scan-tree-dump \"__attribute__\\\\(\\\\(access\" \"gimple\" } }\n+   and the function signature including its return type is mentioned:\n+   { dg-final { scan-tree-dump \"void f *\\\\(int n, void *\\\\* *p\\\\)\" \"gimple\" } } */"}, {"sha": "f59a0c0520084f93ecdb78cfbb81f31326da2591", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6692c400f207c68fb11b44182ae127856e8b9ad3/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6692c400f207c68fb11b44182ae127856e8b9ad3/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=6692c400f207c68fb11b44182ae127856e8b9ad3", "patch": "@@ -7972,14 +7972,19 @@ dump_function_to_file (tree fndecl, FILE *file, dump_flags_t flags)\n \t\t  && decl_is_tm_clone (fndecl));\n   struct function *fun = DECL_STRUCT_FUNCTION (fndecl);\n \n-  if (DECL_ATTRIBUTES (fndecl) != NULL_TREE)\n+  tree fntype = TREE_TYPE (fndecl);\n+  tree attrs[] = { DECL_ATTRIBUTES (fndecl), TYPE_ATTRIBUTES (fntype) };\n+\n+  for (int i = 0; i != 2; ++i)\n     {\n+      if (!attrs[i])\n+\tcontinue;\n+\n       fprintf (file, \"__attribute__((\");\n \n       bool first = true;\n       tree chain;\n-      for (chain = DECL_ATTRIBUTES (fndecl); chain;\n-\t   first = false, chain = TREE_CHAIN (chain))\n+      for (chain = attrs[i]; chain; first = false, chain = TREE_CHAIN (chain))\n \t{\n \t  if (!first)\n \t    fprintf (file, \", \");\n@@ -8032,7 +8037,11 @@ dump_function_to_file (tree fndecl, FILE *file, dump_flags_t flags)\n \t}\n     }\n   else\n-    fprintf (file, \"%s %s(\", function_name (fun), tmclone ? \"[tm-clone] \" : \"\");\n+    {\n+      print_generic_expr (file, TREE_TYPE (fntype), dump_flags);\n+      fprintf (file, \" %s %s(\", function_name (fun),\n+\t       tmclone ? \"[tm-clone] \" : \"\");\n+    }\n \n   arg = DECL_ARGUMENTS (fndecl);\n   while (arg)"}]}