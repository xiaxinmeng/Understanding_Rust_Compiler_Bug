{"sha": "622cd23a5c2abbda16e777baf9dbf4e29a82cb59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIyY2QyM2E1YzJhYmJkYTE2ZTc3N2JhZjlkYmY0ZTI5YTgyY2I1OQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-07-18T16:13:45Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-07-18T16:13:45Z"}, "message": "re PR target/61794 (internal error: unrecognizable insn, from avx512 extract instruction)\n\n\tPR target/61794\n\t* config/i386/sse.md (avx512f_vextract<shuffletype>32x4_1_maskm):\n\tFix instruction constraint.\n\t(<mask_codefor>avx512f_vextract<shuffletype>32x4_1<mask_name>): Ditto.\n\ntestsuite/ChangeLog:\n\n\tPR target/61794\n\t* gcc.target/i386/pr61794.c: New test.\n\nFrom-SVN: r212824", "tree": {"sha": "02c64d0286ec7b74d90a062f231e34e84175599d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02c64d0286ec7b74d90a062f231e34e84175599d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/622cd23a5c2abbda16e777baf9dbf4e29a82cb59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/622cd23a5c2abbda16e777baf9dbf4e29a82cb59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/622cd23a5c2abbda16e777baf9dbf4e29a82cb59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/622cd23a5c2abbda16e777baf9dbf4e29a82cb59/comments", "author": null, "committer": null, "parents": [{"sha": "faf7f829a84986dbd7b6e088633f18193486f272", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faf7f829a84986dbd7b6e088633f18193486f272", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faf7f829a84986dbd7b6e088633f18193486f272"}], "stats": {"total": 44, "additions": 35, "deletions": 9}, "files": [{"sha": "e9819273c3e297a0f02f1962f4678a1a73cfb3f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622cd23a5c2abbda16e777baf9dbf4e29a82cb59/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622cd23a5c2abbda16e777baf9dbf4e29a82cb59/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=622cd23a5c2abbda16e777baf9dbf4e29a82cb59", "patch": "@@ -1,3 +1,10 @@\n+2014-07-18  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/61794\n+\t* config/i386/sse.md (avx512f_vextract<shuffletype>32x4_1_maskm):\n+\tFix instruction constraint.\n+\t(<mask_codefor>avx512f_vextract<shuffletype>32x4_1<mask_name>): Ditto.\n+\n 2014-07-18  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/extend.texi (Template Instantiation): Remove stray parenthesis.\n@@ -1091,7 +1098,7 @@\n \t* config/aarch64/aarch64.c (aarch64_expand_vec_perm): Delete unused\n \tvariable i.\n \n-2014-07-01  Jan Hubicka   <hubicka@ucw.cz>\n+2014-07-01  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-utils.h (method_class_type, vtable_pointer_value_to_binfo,\n \tvtable_pointer_value_to_vtable): Constify.\n@@ -1107,7 +1114,7 @@\n \tpolymorphic type.\n \t(compute_known_type_jump_func): Likewise.\n \n-2014-07-01  Jan Hubicka   <hubicka@ucw.cz>\n+2014-07-01  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* tree.c (decls_same_for_odr, decls_same_for_odr, types_same_for_odr):\n \tRemove."}, {"sha": "0f7ca27e7ee0acc744a424475cdbd7b565145b8a", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622cd23a5c2abbda16e777baf9dbf4e29a82cb59/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622cd23a5c2abbda16e777baf9dbf4e29a82cb59/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=622cd23a5c2abbda16e777baf9dbf4e29a82cb59", "patch": "@@ -5892,9 +5892,10 @@\n \t      (match_operand 5  \"const_0_to_15_operand\")]))\n \t  (match_operand:<ssequartermode> 6 \"memory_operand\" \"0\")\n \t  (match_operand:QI 7 \"register_operand\" \"Yk\")))]\n-  \"TARGET_AVX512F && (INTVAL (operands[2]) = INTVAL (operands[3]) - 1)\n-  && (INTVAL (operands[3]) = INTVAL (operands[4]) - 1)\n-  && (INTVAL (operands[4]) = INTVAL (operands[5]) - 1)\"\n+  \"TARGET_AVX512F\n+   && (INTVAL (operands[2]) == (INTVAL (operands[3]) - 1)\n+       && INTVAL (operands[3]) == (INTVAL (operands[4]) - 1)\n+       && INTVAL (operands[4]) == (INTVAL (operands[5]) - 1))\"\n {\n   operands[2] = GEN_INT ((INTVAL (operands[2])) >> 2);\n   return \"vextract<shuffletype>32x4\\t{%2, %1, %0%{%7%}|%0%{%7%}, %1, %2}\";\n@@ -5914,9 +5915,10 @@\n             (match_operand 3  \"const_0_to_15_operand\")\n             (match_operand 4  \"const_0_to_15_operand\")\n             (match_operand 5  \"const_0_to_15_operand\")])))]\n-  \"TARGET_AVX512F && (INTVAL (operands[2]) = INTVAL (operands[3]) - 1)\n-  && (INTVAL (operands[3]) = INTVAL (operands[4]) - 1)\n-  && (INTVAL (operands[4]) = INTVAL (operands[5]) - 1)\"\n+  \"TARGET_AVX512F\n+   && (INTVAL (operands[2]) == (INTVAL (operands[3]) - 1)\n+       && INTVAL (operands[3]) == (INTVAL (operands[4]) - 1)\n+       && INTVAL (operands[4]) == (INTVAL (operands[5]) - 1))\"\n {\n   operands[2] = GEN_INT ((INTVAL (operands[2])) >> 2);\n   return \"vextract<shuffletype>32x4\\t{%2, %1, %0<mask_operand6>|%0<mask_operand6>, %1, %2}\";"}, {"sha": "320269429806857f7cd5fd04620f0e50dc08d687", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622cd23a5c2abbda16e777baf9dbf4e29a82cb59/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622cd23a5c2abbda16e777baf9dbf4e29a82cb59/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=622cd23a5c2abbda16e777baf9dbf4e29a82cb59", "patch": "@@ -1,3 +1,8 @@\n+2014-07-18  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/61794\n+\t* gcc.target/i386/pr61794.c: New test.\n+\n 2014-07-17  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.target/mips/umips-lwp-1.c (foo): Use a shift/add sequence\n@@ -45,7 +50,7 @@\n 2014-07-17  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.dg/atomic/c11-atomic-exec-5.c (dg-additional-options): Use\n-\t-mfp-trap-mode=sui instead of -miee-with-inexact for alpha*-*-*.\n+\t-mfp-trap-mode=sui instead of -mieee-with-inexact for alpha*-*-*.\n \t* gfortran.dg/ieee/ieee_1.F90 (dg-additional-options): Ditto.\n \n 2014-07-17  Paolo Carlini  <paolo.carlini@oracle.com>"}, {"sha": "5f8e7d06c97f461190a5d6e6c52ca811a773cc7d", "filename": "gcc/testsuite/gcc.target/i386/pr61794.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622cd23a5c2abbda16e777baf9dbf4e29a82cb59/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr61794.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622cd23a5c2abbda16e777baf9dbf4e29a82cb59/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr61794.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr61794.c?ref=622cd23a5c2abbda16e777baf9dbf4e29a82cb59", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f\" } */\n+\n+#include <x86intrin.h>\n+\n+__m512i zmm;\n+__m128i xmm;\n+\n+void test (void)\n+{\n+  xmm = _mm512_extracti32x4_epi32 (zmm, 0);\n+}"}]}