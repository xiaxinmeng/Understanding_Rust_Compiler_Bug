{"sha": "9605a6060a15c8d9295b033bc847b352b1280219", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYwNWE2MDYwYTE1YzhkOTI5NWIwMzNiYzg0N2IzNTJiMTI4MDIxOQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-02-09T11:34:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-02-09T11:34:28Z"}, "message": "re PR tree-optimization/43000 (VRP miscompiles python with -fwrapv)\n\n2010-02-09  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/43000\n\t* tree-vrp.c (vrp_int_const_binop): Only handle unsigned\n\tarithmetic manually.\n\n\t* gcc.dg/torture/pr43000.c: New testcase.\n\t* gcc.dg/torture/pr43002.c: Likewise.\n\nFrom-SVN: r156621", "tree": {"sha": "4f9727618b68994094a646267710d8c5a27e1d36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f9727618b68994094a646267710d8c5a27e1d36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9605a6060a15c8d9295b033bc847b352b1280219", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9605a6060a15c8d9295b033bc847b352b1280219", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9605a6060a15c8d9295b033bc847b352b1280219", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9605a6060a15c8d9295b033bc847b352b1280219/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e1d6b4c155e1ae3ee7e1ce572f2a5d669bffe9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e1d6b4c155e1ae3ee7e1ce572f2a5d669bffe9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e1d6b4c155e1ae3ee7e1ce572f2a5d669bffe9a"}], "stats": {"total": 58, "additions": 55, "deletions": 3}, "files": [{"sha": "73e2be6d313f483348d90681ef3d3e721a756072", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9605a6060a15c8d9295b033bc847b352b1280219/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9605a6060a15c8d9295b033bc847b352b1280219/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9605a6060a15c8d9295b033bc847b352b1280219", "patch": "@@ -1,3 +1,9 @@\n+2010-02-09  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43000\n+\t* tree-vrp.c (vrp_int_const_binop): Only handle unsigned\n+\tarithmetic manually.\n+\n 2010-02-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/42931"}, {"sha": "bbc21ec2aa92108f0dc331f91909212356055c01", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9605a6060a15c8d9295b033bc847b352b1280219/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9605a6060a15c8d9295b033bc847b352b1280219/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9605a6060a15c8d9295b033bc847b352b1280219", "patch": "@@ -1,3 +1,9 @@\n+2010-02-09  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43000\n+\t* gcc.dg/torture/pr43000.c: New testcase.\n+\t* gcc.dg/torture/pr43002.c: Likewise.\n+\n 2010-02-09  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/39171"}, {"sha": "c1123375000c7f3d438a7d59be0b6095d99beb32", "filename": "gcc/testsuite/gcc.dg/torture/pr43000.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9605a6060a15c8d9295b033bc847b352b1280219/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr43000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9605a6060a15c8d9295b033bc847b352b1280219/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr43000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr43000.c?ref=9605a6060a15c8d9295b033bc847b352b1280219", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fwrapv\" } */\n+\n+int __attribute__((noinline))\n+foo (long i, long j)\n+{\n+  if (i >= 1)\n+    if (j > -(long)(((unsigned long)(long)-1)>>1))\n+      {\n+        long x;\n+\tj--;\n+\tx = i + j;\n+\tif (x >= 0)\n+\t  return 1;\n+      }\n+  return 0;\n+}\n+extern void abort (void);\n+int main()\n+{\n+  if (foo (1, 1) != 1)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "f28a9102b3bcade22ffa9bba65d45f0ac2151319", "filename": "gcc/testsuite/gcc.dg/torture/pr43002.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9605a6060a15c8d9295b033bc847b352b1280219/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr43002.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9605a6060a15c8d9295b033bc847b352b1280219/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr43002.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr43002.c?ref=9605a6060a15c8d9295b033bc847b352b1280219", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wall -fwrapv\" } */\n+\n+long A[4], B[100];\n+\n+void foo(void)\n+{\n+  int i, j, k = 3;\n+  while (A[k] && k > 0) k--; /* k = {0, 1, 2, 3} */\n+  for (i = 3 - k; i >= 0; i--) /* i = {0..3-k} */\n+    for (j = 0; j <= k; j++) { /* line 8; j = {0..k} */\n+\tB[i + j] = 0; /* line 9; i + j = {0..3-k+k} = {0..3} */\n+\tfor (j = 0; j <= k; j++); /* only one iteration is done, with j == 0 */\n+    }\n+}\n+"}, {"sha": "73dcf23a55841dc60751b61ecc1b3f2b3fe29ea4", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9605a6060a15c8d9295b033bc847b352b1280219/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9605a6060a15c8d9295b033bc847b352b1280219/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=9605a6060a15c8d9295b033bc847b352b1280219", "patch": "@@ -1898,9 +1898,9 @@ vrp_int_const_binop (enum tree_code code, tree val1, tree val2)\n \n   res = int_const_binop (code, val1, val2, 0);\n \n-  /* If we are not using wrapping arithmetic, operate symbolically\n-     on -INF and +INF.  */\n-  if (TYPE_OVERFLOW_WRAPS (TREE_TYPE (val1)))\n+  /* If we are using unsigned arithmetic, operate symbolically\n+     on -INF and +INF as int_const_binop only handles signed overflow.  */\n+  if (TYPE_UNSIGNED (TREE_TYPE (val1)))\n     {\n       int checkz = compare_values (res, val1);\n       bool overflow = false;"}]}