{"sha": "093ff71e715f8192ce276ed1e4adf38e657781f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkzZmY3MWU3MTVmODE5MmNlMjc2ZWQxZTRhZGYzOGU2NTc3ODFmNw==", "commit": {"author": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-06-27T11:21:13Z"}, "committer": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-06-27T11:21:13Z"}, "message": "re PR bootstrap/15627 (Sun CC cannot bootstrap GCC)\n\n\tPR bootstrap/15627\n\t* engine/flowrow-sort.c (update_upper_bound): Converted comment to\n\tC-style.\n\t(flowrow_inclusion): Likewise.\n\t(flowrow_extract_field): Unnest field_eq.\n\t* engine/setif-sort.c (search_ubs): Unnest search_ubs_aux.\n\t(search_lbs): Unnest search_lbs_aux.\n\t(setif_inclusion): Unnest collapse_cycle_lower, collapse_cycle_upper,\n\tupdate_lower_bound, update_upper_bound.\n\nFrom-SVN: r83730", "tree": {"sha": "416f63a17b636a6acae43bb514d7ebe498d9dda2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/416f63a17b636a6acae43bb514d7ebe498d9dda2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/093ff71e715f8192ce276ed1e4adf38e657781f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/093ff71e715f8192ce276ed1e4adf38e657781f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/093ff71e715f8192ce276ed1e4adf38e657781f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/093ff71e715f8192ce276ed1e4adf38e657781f7/comments", "author": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c01e5dffbd8ec9480e84f055869b5977d7c4396", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c01e5dffbd8ec9480e84f055869b5977d7c4396", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c01e5dffbd8ec9480e84f055869b5977d7c4396"}], "stats": {"total": 438, "additions": 233, "deletions": 205}, "files": [{"sha": "bda508999284022d4eb91c8743aad9ae4f30be44", "filename": "libbanshee/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/093ff71e715f8192ce276ed1e4adf38e657781f7/libbanshee%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/093ff71e715f8192ce276ed1e4adf38e657781f7/libbanshee%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbanshee%2FChangeLog?ref=093ff71e715f8192ce276ed1e4adf38e657781f7", "patch": "@@ -1,3 +1,15 @@\n+2004-06-27  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n+\n+\tPR bootstrap/15627\n+\t* engine/flowrow-sort.c (update_upper_bound): Converted comment to\n+\tC-style.\n+\t(flowrow_inclusion): Likewise.\n+\t(flowrow_extract_field): Unnest field_eq.\n+\t* engine/setif-sort.c (search_ubs): Unnest search_ubs_aux.\n+\t(search_lbs): Unnest search_lbs_aux.\n+\t(setif_inclusion): Unnest collapse_cycle_lower, collapse_cycle_upper,\n+\tupdate_lower_bound, update_upper_bound.\n+\n 2004-06-15  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* Makefile.in: Regenerate with automake 1.8.5."}, {"sha": "f129025e4123944871cc49b86bc99aeadac8a7cd", "filename": "libbanshee/engine/flowrow-sort.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/093ff71e715f8192ce276ed1e4adf38e657781f7/libbanshee%2Fengine%2Fflowrow-sort.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/093ff71e715f8192ce276ed1e4adf38e657781f7/libbanshee%2Fengine%2Fflowrow-sort.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbanshee%2Fengine%2Fflowrow-sort.c?ref=093ff71e715f8192ce276ed1e4adf38e657781f7", "patch": "@@ -483,7 +483,7 @@ static  void update_upper_bound(fresh_fn_ptr fresh,get_stamp_fn_ptr get_stamp,\n     {\n       flow_var v2 = (flow_var)e;\n \t  \n-      if (fv_has_contour(v2)) // v2 isn't aliased, and we discovered a contour\n+      if (fv_has_contour(v2)) /* v2 isn't aliased, and we discovered a contour */\n \t{\n \t  gen_e shape = fv_instantiate_contour(v2);\n \t     \n@@ -532,7 +532,7 @@ static  void update_upper_bound(fresh_fn_ptr fresh,get_stamp_fn_ptr get_stamp,\n \n }\n \n-// END\n+/* END */\n \n \n void flowrow_inclusion(fresh_fn_ptr fresh,get_stamp_fn_ptr get_stamp, \n@@ -604,7 +604,7 @@ void flowrow_inclusion(fresh_fn_ptr fresh,get_stamp_fn_ptr get_stamp,\n \t      gen_e rest1 = flowrow_get_rest(e1),\n \t\trest2 = flowrow_get_rest(e2);\n \n-\t      //assert( flowrow_is_var(rest1) && flowrow_is_var(rest2));\n+\t      /*assert( flowrow_is_var(rest1) && flowrow_is_var(rest2));*/\n \n \t      if ( eq(rest1,rest2))\n \t\t  failure(\"Recursive row resolution\\n\");\n@@ -919,19 +919,21 @@ sort_kind flowrow_base_sort(gen_e e)\n }\n #endif /* NONSPEC */\n \n+static const char* field_eq_name;\n+static bool field_eq(const flowrow_field f)\n+{\n+  return (! strcmp(f->label,field_eq_name));\n+}\n \n gen_e flowrow_extract_field(const char *name, gen_e e)\n {\n-  \n-  static bool field_eq(const flowrow_field f)\n-    {\n-      return (! strcmp(f->label,name));\n-    }\n-  \n   if (flowrow_is_row(e))\n     {\n       flowrow_map fields = flowrow_get_fields(e);\n-      flowrow_field f = flowrow_map_find(fields,field_eq);\n+      flowrow_field f;\n+      \n+      field_eq_name = name;\n+      f = flowrow_map_find(fields,field_eq);\n \n       if (f)\n \treturn f->expr;"}, {"sha": "0be31cc272f6dce762ea72c40d7d5411389b4fee", "filename": "libbanshee/engine/setif-sort.c", "status": "modified", "additions": 209, "deletions": 195, "changes": 404, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/093ff71e715f8192ce276ed1e4adf38e657781f7/libbanshee%2Fengine%2Fsetif-sort.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/093ff71e715f8192ce276ed1e4adf38e657781f7/libbanshee%2Fengine%2Fsetif-sort.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbanshee%2Fengine%2Fsetif-sort.c?ref=093ff71e715f8192ce276ed1e4adf38e657781f7", "patch": "@@ -190,100 +190,106 @@ gen_e_list setif_get_inter(gen_e e)\n   return ( (setif_inter_) e)->exprs;\n }\n \n-static setif_var_list search_ubs(region r, setif_var v1, setif_var goal)\n+static void search_ubs_aux(setif_var v, setif_var goal, setif_var_list cycle,\n+\t\t\t   bool* found)\n {\n-  bool found = FALSE;\n-  setif_var_list cycle;\n+  assert(! *found); \n   \n-  static void search_ubs_aux(setif_var v)\n+  if (sv_eq (v, goal))\n+    {\n+      *found = TRUE;\n+      return;\n+    }\n+  else if (sv_lt(v,goal))\n     {\n-      assert(! found); \n+      return;\n+    }\n+  else \n+    {\n+      gen_e_list_scanner scan;\n+      gen_e ub;\n+      gen_e_list ubs = sv_get_ubs(v);\n       \n-      if (sv_eq (v, goal))\n-\t{\n-\t  found = TRUE;\n-\t  return;\n-\t}\n-      else if (sv_lt(v,goal))\n-\t{\n-\t  return;\n-\t}\n-      else \n-\t{\n-\t  gen_e_list_scanner scan;\n-\t  gen_e ub;\n-\t  gen_e_list ubs = sv_get_ubs(v);\n-\t  \n-\t  gen_e_list_scan(ubs,&scan);\n-\t  while (gen_e_list_next(&scan,&ub))\n+      gen_e_list_scan(ubs,&scan);\n+      while (gen_e_list_next(&scan,&ub))\n+      {\n+\tif (setif_is_var(ub))\n \t  {\n-\t    if (setif_is_var(ub))\n+\t    search_ubs_aux((setif_var)ub, goal, cycle, found);\n+\t    if (*found)\n \t      {\n-\t\tsearch_ubs_aux((setif_var)ub);\n-\t\tif (found)\n-\t\t  {\n-\t\t    setif_var_list_cons(v,cycle);\n-\t\t    return;\n-\t\t  }\n+\t\tsetif_var_list_cons(v,cycle);\n+\t\treturn;\n \t      }\n \t  }\n-\t}\n+      }\n     }\n+}\n+\n \n+static setif_var_list search_ubs(region r, setif_var v1, setif_var goal)\n+{\n+  bool found;\n+  setif_var_list cycle;\n+  \n   found = FALSE;\n   cycle = new_setif_var_list(r);\n-  search_ubs_aux(v1);\n+  search_ubs_aux(v1, goal, cycle, &found);\n \n   return cycle;\n }\n \n-static setif_var_list search_lbs(region r, setif_var v1, setif_var goal)\n+\n+static void search_lbs_aux(setif_var v, setif_var goal, setif_var_list cycle,\n+\t\t\t   bool* found)\n {\n-  bool found;\n-  setif_var_list cycle;\n- \n-  static void search_lbs_aux(setif_var v)\n+  assert (! *found);\n+  if (sv_eq(v,goal))\n     {\n-      assert (! found);\n-      if (sv_eq(v,goal))\n-\t{\n-\t  found = TRUE;\n-\t  return;\n-\t}\n-      else if (sv_lt(v,goal))\n-\t{\n-\t  return;\n-\t}\n-      else\n-\t{\n-\t  gen_e_list_scanner scan;\n-\t  gen_e lb;\n-\t  gen_e_list lbs = sv_get_lbs(v);\n-\t  \n-\t  gen_e_list_scan(lbs,&scan);\n-\t  while (gen_e_list_next(&scan,&lb))\n+      *found = TRUE;\n+      return;\n+    }\n+  else if (sv_lt(v,goal))\n+    {\n+      return;\n+    }\n+  else\n+    {\n+      gen_e_list_scanner scan;\n+      gen_e lb;\n+      gen_e_list lbs = sv_get_lbs(v);\n+      \n+      gen_e_list_scan(lbs,&scan);\n+      while (gen_e_list_next(&scan,&lb))\n+      {\n+\tif (setif_is_var(lb))\n \t  {\n-\t    if (setif_is_var(lb))\n+\t    search_lbs_aux((setif_var)lb, goal, cycle, found);\n+\t    if (*found)\n \t      {\n-\t\tsearch_lbs_aux((setif_var)lb);\n-\t\tif (found)\n-\t\t  {\n-\t\t    setif_var_list_cons(v,cycle);\n-\t\t    return;\n-\t\t  }\n+\t\tsetif_var_list_cons(v,cycle);\n+\t\treturn;\n \t      }\n \t  }\n-\t}\n-\t\n+      }\n     }\n+    \n+}\n+\n \n+static setif_var_list search_lbs(region r, setif_var v1, setif_var goal)\n+{\n+  bool found;\n+  setif_var_list cycle;\n+ \n   found = FALSE;\n   cycle = new_setif_var_list(r);\n-  search_lbs_aux(v1);\n+  search_lbs_aux(v1, goal, cycle, &found);\n \n   return cycle; \n }\n \n+\n static setif_var_list cycle_detect(region r,setif_var v1,setif_var v2)\n {\n   if (sv_union_component(v1,v2))\n@@ -309,156 +315,164 @@ static setif_var_list cycle_detect_rev(region r, setif_var v1, setif_var v2)\n     }\n }\n \n-void setif_inclusion(con_match_fn_ptr con_match, res_proj_fn_ptr res_proj, \n-\t\t     gen_e e1, gen_e e2) deletes\n-{\n \n-  static void collapse_cycle_lower(region r, setif_var witness, \n-\t\t\t    setif_var_list cycle) deletes\n-    {\n-      gen_e lb;\n-      gen_e_list_scanner scan_bounds;\n-      setif_var_list_scanner scan_cycle;\n-      setif_var var;\n+static void collapse_cycle_lower(region r, setif_var witness,\n+\t\t\t\t setif_var_list cycle,\n+\t\t\t\t con_match_fn_ptr con_match,\n+\t\t\t\t res_proj_fn_ptr res_proj) deletes\n+{\n+  gen_e lb;\n+  gen_e_list_scanner scan_bounds;\n+  setif_var_list_scanner scan_cycle;\n+  setif_var var;\n \n #ifndef NDEBUG\n-      stamp lowest = sv_get_stamp(witness);\n+  stamp lowest = sv_get_stamp(witness);\n #endif\n-      bounds b = bounds_create(r);\n-      \n-      /* Collect all lower bounds in the cycle, and add transitive edges */\n-      setif_var_list_scan(cycle,&scan_cycle);\n-      while(setif_var_list_next(&scan_cycle,&var))\n-\t{\n-\t  assert( sv_get_stamp(var) > lowest);\n-\t  gen_e_list_scan(sv_get_lbs(var),&scan_bounds);\n-\t  while(gen_e_list_next(&scan_bounds,&lb))\n-\t    bounds_add(b,lb,setif_get_stamp(lb));\n-\t}\n-\n-      sv_unify(witness,cycle);\n-      assert(sv_get_stamp(witness) == lowest);\n-      \n-      gen_e_list_scan(bounds_exprs(b),&scan_bounds);\n-      while (gen_e_list_next(&scan_bounds,&lb))\n-\tsetif_inclusion(con_match,res_proj,lb, (gen_e) witness);\n-      \n-      bounds_delete(b);\n-      invalidate_tlb_cache();\n-\n-      setif_stats.cycles_collapsed_backward++;\n-      setif_stats.cycles_length_backward += setif_var_list_length(cycle);\n-    }\n+  bounds b = bounds_create(r);\n   \n-  static void collapse_cycle_upper(region r, setif_var witness,\n-\t\t\t    setif_var_list cycle) deletes\n+  /* Collect all lower bounds in the cycle, and add transitive edges */\n+  setif_var_list_scan(cycle,&scan_cycle);\n+  while(setif_var_list_next(&scan_cycle,&var))\n     {\n-      gen_e ub;\n-      gen_e_list_scanner scan_bounds;\n-      setif_var_list_scanner scan_cycle;\n-      setif_var var;\n+      assert( sv_get_stamp(var) > lowest);\n+      gen_e_list_scan(sv_get_lbs(var),&scan_bounds);\n+      while(gen_e_list_next(&scan_bounds,&lb))\n+\tbounds_add(b,lb,setif_get_stamp(lb));\n+    }\n \n-#ifndef NDEBUG\n-      stamp lowest = sv_get_stamp(witness);\n-#endif\n-      bounds b = bounds_create(r);\n-     \n-      /* Collect all upper bounds in the cycle, and add transitive edges */\n-      setif_var_list_scan(cycle,&scan_cycle);\n-      while(setif_var_list_next(&scan_cycle,&var))\n-\t{ \n-\t  assert( sv_get_stamp(var) > lowest);\n-\n-\t  gen_e_list_scan(sv_get_ubs(var),&scan_bounds);\n-\t  while(gen_e_list_next(&scan_bounds,&ub))\n-\t    bounds_add(b,ub,setif_get_stamp(ub));\n-\t  \n-\t  gen_e_list_scan(sv_get_ub_projs(var),&scan_bounds);\n-\t  while(gen_e_list_next(&scan_bounds,&ub))\n-\t    bounds_add(b,ub,setif_get_stamp(ub));\n-\t}\n+  sv_unify(witness,cycle);\n+  assert(sv_get_stamp(witness) == lowest);\n+  \n+  gen_e_list_scan(bounds_exprs(b),&scan_bounds);\n+  while (gen_e_list_next(&scan_bounds,&lb))\n+    setif_inclusion(con_match,res_proj,lb, (gen_e) witness);\n+  \n+  bounds_delete(b);\n+  invalidate_tlb_cache();\n \n-      sv_unify(witness,cycle);\n-      assert(sv_get_stamp(witness) == lowest);\n+  setif_stats.cycles_collapsed_backward++;\n+  setif_stats.cycles_length_backward += setif_var_list_length(cycle);\n+}\n \n-      gen_e_list_scan(bounds_exprs(b),&scan_bounds);\n-      while (gen_e_list_next(&scan_bounds,&ub))\n-\tsetif_inclusion(con_match,res_proj,(gen_e) witness, ub);\n-\t\n-      bounds_delete(b);\n-      invalidate_tlb_cache();\n+static void collapse_cycle_upper(region r, setif_var witness,\n+\t\t\t\t setif_var_list cycle,\n+\t\t\t\t con_match_fn_ptr con_match,\n+\t\t\t\t res_proj_fn_ptr res_proj) deletes\n+{\n+  gen_e ub;\n+  gen_e_list_scanner scan_bounds;\n+  setif_var_list_scanner scan_cycle;\n+  setif_var var;\n \n-      setif_stats.cycles_collapsed_forward++;\n-      setif_stats.cycles_length_backward += setif_var_list_length(cycle);\n-    }\n+#ifndef NDEBUG\n+  stamp lowest = sv_get_stamp(witness);\n+#endif\n+  bounds b = bounds_create(r);\n   \n-  static void update_lower_bound(setif_var v, gen_e e) deletes\n-    {\n-      if (sv_add_lb(v,e,setif_get_stamp(e)))\n-\t{\n-\t  if (setif_is_var(e))\n-\t    setif_stats.redundant_succ++;\n-\t  \n-\t  else\n-\t    setif_stats.redundant_source++;\n-\t}\n+  /* Collect all upper bounds in the cycle, and add transitive edges */\n+  setif_var_list_scan(cycle,&scan_cycle);\n+  while(setif_var_list_next(&scan_cycle,&var))\n+    { \n+      assert( sv_get_stamp(var) > lowest);\n+\n+      gen_e_list_scan(sv_get_ubs(var),&scan_bounds);\n+      while(gen_e_list_next(&scan_bounds,&ub))\n+\tbounds_add(b,ub,setif_get_stamp(ub));\n+      \n+      gen_e_list_scan(sv_get_ub_projs(var),&scan_bounds);\n+      while(gen_e_list_next(&scan_bounds,&ub))\n+\tbounds_add(b,ub,setif_get_stamp(ub));\n+    }\n \n-      else\n-\t{\n-\t  gen_e_list_scanner scan;\n-\t  gen_e ub;\n-\t  \n-\t  if (setif_is_var(e))\n-\t    setif_stats.added_succ++;\n-\t  else\n-\t    setif_stats.added_source++;\n-\t  \n-\t  invalidate_tlb_cache();\n+  sv_unify(witness,cycle);\n+  assert(sv_get_stamp(witness) == lowest);\n \n-\t  gen_e_list_scan(sv_get_ubs(v),&scan);\n-\t  while(gen_e_list_next(&scan,&ub))\n-\t    setif_inclusion(con_match,res_proj,e,ub);\n-\t  \n-\t  gen_e_list_scan(sv_get_ub_projs(v),&scan);\n-\t  while (gen_e_list_next(&scan,&ub))\n-\t    setif_inclusion(con_match,res_proj,e,ub);\n+  gen_e_list_scan(bounds_exprs(b),&scan_bounds);\n+  while (gen_e_list_next(&scan_bounds,&ub))\n+    setif_inclusion(con_match,res_proj,(gen_e) witness, ub);\n+    \n+  bounds_delete(b);\n+  invalidate_tlb_cache();\n \n-\t}\n+  setif_stats.cycles_collapsed_forward++;\n+  setif_stats.cycles_length_backward += setif_var_list_length(cycle);\n+}\n+\n+static void update_lower_bound(setif_var v, gen_e e,\n+\t\t\t       con_match_fn_ptr con_match,\n+\t\t\t       res_proj_fn_ptr res_proj) deletes\n+{\n+  if (sv_add_lb(v,e,setif_get_stamp(e)))\n+    {\n+      if (setif_is_var(e))\n+\tsetif_stats.redundant_succ++;\n       \n+      else\n+\tsetif_stats.redundant_source++;\n     }\n \n-  static void update_upper_bound(setif_var v, gen_e e) deletes\n+  else\n     {\n-      if (sv_add_ub(v,e,setif_get_stamp(e)))\n-\t{\n-\t  if (setif_is_var(e))\n-\t    setif_stats.redundant_pred++;\n-\t\n-\t  else\n-\t    setif_stats.redundant_sink++;\n-\t}\n+      gen_e_list_scanner scan;\n+      gen_e ub;\n       \n+      if (setif_is_var(e))\n+\tsetif_stats.added_succ++;\n       else\n-\t{\n-\t  gen_e_list_scanner scan;\n-\t  gen_e lb;\n+\tsetif_stats.added_source++;\n+      \n+      invalidate_tlb_cache();\n \n-\t  if (setif_is_var(e))\n-\t    setif_stats.added_pred++;\n-\t  else\n-\t    setif_stats.added_sink++;\n+      gen_e_list_scan(sv_get_ubs(v),&scan);\n+      while(gen_e_list_next(&scan,&ub))\n+\tsetif_inclusion(con_match,res_proj,e,ub);\n+      \n+      gen_e_list_scan(sv_get_ub_projs(v),&scan);\n+      while (gen_e_list_next(&scan,&ub))\n+\tsetif_inclusion(con_match,res_proj,e,ub);\n \n-\t  invalidate_tlb_cache();\n-\t  \n-\t  gen_e_list_scan(sv_get_lbs(v),&scan);\n-\t  while (gen_e_list_next(&scan,&lb))\n-\t    setif_inclusion(con_match,res_proj,lb,e);\n+    }\n+  \n+}\n \n-\t}\n+static void update_upper_bound(setif_var v, gen_e e,\n+\t\t\t       con_match_fn_ptr con_match,\n+\t\t\t       res_proj_fn_ptr res_proj) deletes\n+{\n+  if (sv_add_ub(v,e,setif_get_stamp(e)))\n+    {\n+      if (setif_is_var(e))\n+\tsetif_stats.redundant_pred++;\n+    \n+      else\n+\tsetif_stats.redundant_sink++;\n+    }\n+  \n+  else\n+    {\n+      gen_e_list_scanner scan;\n+      gen_e lb;\n+\n+      if (setif_is_var(e))\n+\tsetif_stats.added_pred++;\n+      else\n+\tsetif_stats.added_sink++;\n+\n+      invalidate_tlb_cache();\n       \n+      gen_e_list_scan(sv_get_lbs(v),&scan);\n+      while (gen_e_list_next(&scan,&lb))\n+\tsetif_inclusion(con_match,res_proj,lb,e);\n+\n     }\n+  \n+}\n \n \n+void setif_inclusion(con_match_fn_ptr con_match, res_proj_fn_ptr res_proj,\n+\t\t     gen_e e1, gen_e e2) deletes\n+{\n   if (eq(e1,e2))\n     return;\n   \n@@ -519,18 +533,18 @@ void setif_inclusion(con_match_fn_ptr con_match, res_proj_fn_ptr res_proj,\n \t      setif_var_list cycle = cycle_detect(scratch,v1,v2);\n \t      \n \t      if (! setif_var_list_empty(cycle))\n-\t\tcollapse_cycle_upper(scratch,v1,cycle);\n+\t\tcollapse_cycle_upper(scratch,v1,cycle,con_match,res_proj);\n \t      else\n-\t\tupdate_lower_bound(v2,e1);\n+\t\tupdate_lower_bound(v2,e1,con_match,res_proj);\n \t      \n \t      deleteregion(scratch);\n \t    }\n \t  \n \t  else \n-\t    update_lower_bound(v2,e1);\n+\t    update_lower_bound(v2,e1,con_match,res_proj);\n \t}\n       else /* e1 is a source */\n-\tupdate_lower_bound(v2,e1);\n+\tupdate_lower_bound(v2,e1,con_match,res_proj);\n     }\n \n   else if ( r_inductive(e1,e2) ) /* 'x <= _ */\n@@ -547,22 +561,22 @@ void setif_inclusion(con_match_fn_ptr con_match, res_proj_fn_ptr res_proj,\n \t      setif_var_list cycle = cycle_detect_rev(scratch,v1,v2);\n \t      \n \t      if (! setif_var_list_empty(cycle))\n-\t\tcollapse_cycle_lower(scratch,v2,cycle);\n+\t\tcollapse_cycle_lower(scratch,v2,cycle,con_match,res_proj);\n \t      else\n-\t\tupdate_upper_bound(v1,e2);\n+\t\tupdate_upper_bound(v1,e2,con_match,res_proj);\n \t      \n \t      deleteregion(scratch);\n \t    }\n       \n \t  else\n-\t    update_upper_bound(v1,e2);\n+\t    update_upper_bound(v1,e2,con_match,res_proj);\n \t}\n       else /* e2 is a sink */\n \t{\n \t  if (flag_merge_projections && res_proj(v1,e2))\n \t    return;\n \t  else\n-\t    update_upper_bound(v1,e2);\n+\t    update_upper_bound(v1,e2,con_match,res_proj);\n \t}\n     }\n "}]}