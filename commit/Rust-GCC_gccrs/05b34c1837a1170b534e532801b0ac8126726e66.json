{"sha": "05b34c1837a1170b534e532801b0ac8126726e66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDViMzRjMTgzN2ExMTcwYjUzNGU1MzI4MDFiMGFjODEyNjcyNmU2Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-01T08:27:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-01T08:27:31Z"}, "message": "[multiple changes]\n\n2012-10-01  Vincent Celier  <celier@adacore.com>\n\n\t* make.adb (Scan_Make_Arg): Only test for \"vP\" of the option\n\tincludes at least 3 characters.\n\t* gnatcmd.adb (GNATCmd): Ditto.\n\n2012-10-01  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* exp_ch7.adb, sinfo.ads: Add comments.\n\n2012-10-01  Robert Dewar  <dewar@adacore.com>\n\n\t* checks.adb: Remove reference to Enable_Overflow_Checks Use\n\tSuppress_Options rather than Scope_Suppress.\n\t* gnat1drv.adb (Adjust_Global_Switches): Handle new overflow\n\tsettings (Adjust_Global_Switches): Initialize Scope_Suppress\n\tfrom Suppress_Options.\n\t* opt.adb: Remove Enable_Overflow_Checks (use Suppress_Options\n\tinstead).\n\t* opt.ads: Remove Overflow_Checks_Unsuppressed (not used)\n\tRemove Enable_Overflow_Checks (use Suppress_Options instead)\n\tSuppress_Options is now current setting (replaces Scope_Suppress).\n\t* osint.adb (Initialize): Deal with initializing overflow\n\tchecking.\n\t* par-prag.adb: Add dummy entry for pragma Overflow_Checks.\n\t* sem.adb (Semantics): Save and restore In_Assertion_Expr Use\n\tSuppress_Options instead of Scope_Suppress.\n\t* sem.ads (In_Assertion_Expr): New flag (Scope_Suppress):\n\tRemoved, use Suppress_Options instead.\n\t* sem_eval.adb (Compile_Time_Compare): Return Unknown in\n\tpreanalysis mode.\n\t* sem_prag.adb (Process_Suppress_Unsuppress): Setting of\n\tOverflow_Checks_Unsuppressed removed (not used anywhere!)\n\t(Analyze_Pragma, case Check): Set In_Assertion_Expression\n\t(Analyze_Pragma, case Overflow_Checks): Implement new pragma\n\t* snames.ads-tmpl: Add names needed for handling pragma\n\tOverflow_Checks\n\t* switch-c.adb (Scan_Front_End_Switches) Handle -gnato? and\n\t-gnato?? where ? is 0-3\n\t* types.ads: Updates and fixes to comment on Suppress_Record.\n\n2012-10-01  Vincent Celier  <celier@adacore.com>\n\n\t* prj-part.adb (Parse): Remove incorrect comment about checking\n\timported non extending projects from and \"extending all\"\n\tone. Minor correction.\n\nFrom-SVN: r191895", "tree": {"sha": "cff8f1dd541a406e11a30c3790b5f81385699ffc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cff8f1dd541a406e11a30c3790b5f81385699ffc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05b34c1837a1170b534e532801b0ac8126726e66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b34c1837a1170b534e532801b0ac8126726e66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05b34c1837a1170b534e532801b0ac8126726e66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b34c1837a1170b534e532801b0ac8126726e66/comments", "author": null, "committer": null, "parents": [{"sha": "c92e858604925ce6a7085faec27421ed70949719", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c92e858604925ce6a7085faec27421ed70949719", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c92e858604925ce6a7085faec27421ed70949719"}], "stats": {"total": 508, "additions": 372, "deletions": 136}, "files": [{"sha": "4a7e8b99d099ae3be44ae8e46c2e37cde74f2ab4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -1,3 +1,50 @@\n+2012-10-01  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Scan_Make_Arg): Only test for \"vP\" of the option\n+\tincludes at least 3 characters.\n+\t* gnatcmd.adb (GNATCmd): Ditto.\n+\n+2012-10-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_ch7.adb, sinfo.ads: Add comments.\n+\n+2012-10-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* checks.adb: Remove reference to Enable_Overflow_Checks Use\n+\tSuppress_Options rather than Scope_Suppress.\n+\t* gnat1drv.adb (Adjust_Global_Switches): Handle new overflow\n+\tsettings (Adjust_Global_Switches): Initialize Scope_Suppress\n+\tfrom Suppress_Options.\n+\t* opt.adb: Remove Enable_Overflow_Checks (use Suppress_Options\n+\tinstead).\n+\t* opt.ads: Remove Overflow_Checks_Unsuppressed (not used)\n+\tRemove Enable_Overflow_Checks (use Suppress_Options instead)\n+\tSuppress_Options is now current setting (replaces Scope_Suppress).\n+\t* osint.adb (Initialize): Deal with initializing overflow\n+\tchecking.\n+\t* par-prag.adb: Add dummy entry for pragma Overflow_Checks.\n+\t* sem.adb (Semantics): Save and restore In_Assertion_Expr Use\n+\tSuppress_Options instead of Scope_Suppress.\n+\t* sem.ads (In_Assertion_Expr): New flag (Scope_Suppress):\n+\tRemoved, use Suppress_Options instead.\n+\t* sem_eval.adb (Compile_Time_Compare): Return Unknown in\n+\tpreanalysis mode.\n+\t* sem_prag.adb (Process_Suppress_Unsuppress): Setting of\n+\tOverflow_Checks_Unsuppressed removed (not used anywhere!)\n+\t(Analyze_Pragma, case Check): Set In_Assertion_Expression\n+\t(Analyze_Pragma, case Overflow_Checks): Implement new pragma\n+\t* snames.ads-tmpl: Add names needed for handling pragma\n+\tOverflow_Checks\n+\t* switch-c.adb (Scan_Front_End_Switches) Handle -gnato? and\n+\t-gnato?? where ? is 0-3\n+\t* types.ads: Updates and fixes to comment on Suppress_Record.\n+\n+2012-10-01  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-part.adb (Parse): Remove incorrect comment about checking\n+\timported non extending projects from and \"extending all\"\n+\tone. Minor correction.\n+\n 2012-10-01  Robert Dewar  <dewar@adacore.com>\n \n \t* make.adb, exp_ch3.adb: Minor reformatting."}, {"sha": "46cf71ce7c559e0a15951636292f8f95f2341d09", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -3912,19 +3912,6 @@ package body Checks is\n       --  the computed expression is in the range Lor .. Hir. We can use this\n       --  to restrict the possible range of results.\n \n-      --  If one of the computed bounds is outside the range of the base type,\n-      --  the expression may raise an exception and we had better indicate that\n-      --  the evaluation has failed, at least if checks are enabled.\n-\n-      if OK1\n-        and then Enable_Overflow_Checks\n-        and then not Is_Entity_Name (N)\n-        and then (Lor < Lo or else Hir > Hi)\n-      then\n-         OK := False;\n-         return;\n-      end if;\n-\n       if OK1 then\n \n          --  If the refined value of the low bound is greater than the type\n@@ -6184,10 +6171,20 @@ package body Checks is\n \n    function Overflow_Checks_Suppressed (E : Entity_Id) return Boolean is\n    begin\n+      --  Check overflow suppressed on entity\n+\n       if Present (E) and then Checks_May_Be_Suppressed (E) then\n-         return Is_Check_Suppressed (E, Overflow_Check);\n+         if Is_Check_Suppressed (E, Overflow_Check) then\n+            return True;\n+         end if;\n+      end if;\n+\n+      --  Else return appropriate scope setting\n+\n+      if In_Assertion_Expr = 0 then\n+         return Scope_Suppress.Overflow_Checks_General = Suppressed;\n       else\n-         return Scope_Suppress.Suppress (Overflow_Check);\n+         return Scope_Suppress.Overflow_Checks_Assertions = Suppressed;\n       end if;\n    end Overflow_Checks_Suppressed;\n "}, {"sha": "9c6955a7b9ebdad20c72e98eb85ff15f5534f666", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -4585,9 +4585,6 @@ package body Exp_Ch7 is\n                --  finalization blocks, and we put everything into a wrapper\n                --  block to clearly expose the construct to the back-end.\n \n-               --  This requirement for \"clearly expose\" must be properly\n-               --  documented in sinfo/einfo ???\n-\n                if Present (Prev_Fin) then\n                   Insert_Before_And_Analyze (Prev_Fin, Fin_Block);\n                else"}, {"sha": "3d998840aa4020e164e1b466d504ee671974f0d2", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 30, "deletions": 21, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -197,12 +197,10 @@ procedure Gnat1drv is\n                                            Alignment_Check   => True,\n                                            Division_Check    => True,\n                                            Elaboration_Check => True,\n-                                           Overflow_Check    => True,\n                                            others            => False),\n-            Overflow_Checks_General    => Suppress,\n-            Overflow_Checks_Assertions => Suppress);\n+            Overflow_Checks_General    => Suppressed,\n+            Overflow_Checks_Assertions => Suppressed);\n \n-         Enable_Overflow_Checks     := False;\n          Dynamic_Elaboration_Checks := False;\n \n          --  Kill debug of generated code, since it messes up sloc values\n@@ -330,23 +328,29 @@ procedure Gnat1drv is\n          Exception_Mechanism := Back_End_Exceptions;\n       end if;\n \n-      --  Set proper status for overflow checks. We turn on overflow checks if\n-      --  -gnatp was not specified, and either -gnato is set or the back-end\n-      --  takes care of overflow checks. Otherwise we suppress overflow checks\n-      --  by default (since front end checks are expensive).\n-\n-      if not Opt.Suppress_Checks\n-        and then (Opt.Enable_Overflow_Checks\n-                    or else\n-                      (Targparm.Backend_Divide_Checks_On_Target\n-                        and\n-                       Targparm.Backend_Overflow_Checks_On_Target))\n+      --  Set proper status for overflow checks. If already set (by -gnato or\n+      --  -gnatp) then we have nothing to do.\n+\n+      if Opt.Suppress_Options.Overflow_Checks_General /= Not_Set then\n+         null;\n+\n+      --  If we have backend divide and overflow checks, then by default\n+      --  overflow checks are minimized, which is a reasonable setting.\n+\n+      elsif Targparm.Backend_Divide_Checks_On_Target\n+              and\n+            Targparm.Backend_Overflow_Checks_On_Target\n       then\n-         Suppress_Options.Suppress (Overflow_Check) := False;\n+         Suppress_Options.Overflow_Checks_General    := Minimized;\n+         Suppress_Options.Overflow_Checks_Assertions := Minimized;\n+\n+      --  Otherwise for now, default is checks are suppressed. This is likely\n+      --  to change in the future, but for now this is the compatible behavior\n+      --  with previous versions of GNAT.\n+\n       else\n-         Suppress_Options.Suppress (Overflow_Check)  := True;\n-         Suppress_Options.Overflow_Checks_General    := Check_All;\n-         Suppress_Options.Overflow_Checks_Assertions := Check_All;\n+         Suppress_Options.Overflow_Checks_General    := Suppressed;\n+         Suppress_Options.Overflow_Checks_Assertions := Suppressed;\n       end if;\n \n       --  Set default for atomic synchronization. As this synchronization\n@@ -437,8 +441,7 @@ procedure Gnat1drv is\n          --  Turn off alignment checks.\n          --  Turn off validity checking.\n \n-         Suppress_Options := Suppress_All;\n-         Enable_Overflow_Checks := False;\n+         Suppress_Options           := Suppress_All;\n          Dynamic_Elaboration_Checks := False;\n          Reset_Validity_Check_Options;\n \n@@ -517,6 +520,12 @@ procedure Gnat1drv is\n             Inline_Level := 2;\n          end if;\n       end if;\n+\n+      --  Finally capture adjusted value of Suppress_Options as the initial\n+      --  value for Scope_Suppress, which will be modified as we move from\n+      --  scope to scope (by Suppress/Unsuppress/Overflow_Checks pragmas).\n+\n+      Sem.Scope_Suppress := Opt.Suppress_Options;\n    end Adjust_Global_Switches;\n \n    --------------------"}, {"sha": "ab4ddcc7d2933a384c6fc3a196b05b50c4a25e47", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 29, "deletions": 10, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -848,6 +848,9 @@ procedure GNATCmd is\n       Unit  : Unit_Index;\n       Path  : Path_Name_Type;\n \n+      Files_File     : Ada.Text_IO.File_Type;\n+      Temp_File_Name : Path_Name_Type;\n+\n    begin\n       if GN_Path = null then\n          Put_Line (Standard_Error, \"could not locate \" & GN_Name);\n@@ -856,7 +859,7 @@ procedure GNATCmd is\n \n       --  Create the temp file\n \n-      Tempdir.Create_Temp_File (FD, Name);\n+      Prj.Env.Create_Temp_File (Project_Tree.Shared, FD, Name, \"files\");\n \n       --  And close it, because on VMS Spawn with a file descriptor created\n       --  with Create_Temp_File does not redirect output.\n@@ -904,8 +907,19 @@ procedure GNATCmd is\n          raise Error_Exit;\n \n       else\n-         --  Get each file name in the file, find its path and add it the\n-         --  list of arguments.\n+         --  Create a temporary file to put the list of files in the closure\n+\n+         Tempdir.Create_Temp_File (FD, Temp_File_Name);\n+         Last_Switches.Increment_Last;\n+         Last_Switches.Table (Last_Switches.Last) :=\n+           new String'(\"-files=\" & Get_Name_String (Temp_File_Name));\n+\n+         Close (FD);\n+\n+         Open (Files_File, Out_File, Get_Name_String (Temp_File_Name));\n+\n+         --  Get each file name in the file, find its path and add it the list\n+         --  of arguments.\n \n          while not End_Of_File (File) loop\n             Get_Line (File, Line, Last);\n@@ -933,18 +947,16 @@ procedure GNATCmd is\n                Unit := Units_Htable.Get_Next (Project_Tree.Units_HT);\n             end loop;\n \n-            Last_Switches.Increment_Last;\n-\n             if Path /= No_Path then\n-               Last_Switches.Table (Last_Switches.Last) :=\n-                  new String'(Get_Name_String (Path));\n+               Put_Line (Files_File, Get_Name_String (Path));\n \n             else\n-               Last_Switches.Table (Last_Switches.Last) :=\n-                 new String'(Line (1 .. Last));\n+               Put_Line (Files_File, Line (1 .. Last));\n             end if;\n          end loop;\n \n+         Close (Files_File);\n+\n          begin\n             if not Keep_Temporary_Files then\n                Delete (File);\n@@ -1769,7 +1781,9 @@ begin\n \n                   --  -vPx  Specify verbosity while parsing project files\n \n-                  elsif Argv (Argv'First + 1 .. Argv'First + 2) = \"vP\" then\n+                  elsif Argv'Length >= 3\n+                    and then  Argv (Argv'First + 1 .. Argv'First + 2) = \"vP\"\n+                  then\n                      if Argv'Length = 4\n                           and then Argv (Argv'Last) in '0' .. '2'\n                      then\n@@ -2055,6 +2069,11 @@ begin\n            or else The_Command = Link\n            or else The_Command = Elim\n          then\n+            if Project.Object_Directory.Name = No_Path then\n+               Fail (\"project \" & Get_Name_String (Project.Display_Name) &\n+                     \" has no object directory\");\n+            end if;\n+\n             Change_Dir (Get_Name_String (Project.Object_Directory.Name));\n          end if;\n "}, {"sha": "69a996d8a14d6e9b8ed3c650f352a2b63a97102d", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -7825,7 +7825,7 @@ package body Make is\n \n          --  -vPx  (verbosity of the parsing of the project files)\n \n-         elsif Argv (2 .. 3) = \"vP\" then\n+         elsif Argv'Length >= 3 and then Argv (2 .. 3) = \"vP\" then\n             if Argv'Last /= 4 or else Argv (4) not in '0' .. '2' then\n                Make_Failed\n                  (\"invalid verbosity level \" & Argv (4 .. Argv'Last));"}, {"sha": "a6c15538c28e0c8c7a401781ea11f2f0aadc6ffc", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -259,7 +259,6 @@ package body Opt is\n       Tree_Read_Bool (Debug_Pragmas_Disabled);\n       Tree_Read_Bool (Debug_Pragmas_Enabled);\n       Tree_Read_Int  (Int (Default_Pool));\n-      Tree_Read_Bool (Enable_Overflow_Checks);\n       Tree_Read_Bool (Full_List);\n \n       Ada_Version_Config :=\n@@ -326,7 +325,6 @@ package body Opt is\n       Tree_Write_Bool (Debug_Pragmas_Disabled);\n       Tree_Write_Bool (Debug_Pragmas_Enabled);\n       Tree_Write_Int  (Int (Default_Pool));\n-      Tree_Write_Bool (Enable_Overflow_Checks);\n       Tree_Write_Bool (Full_List);\n       Tree_Write_Int  (Int (Version_String'Length));\n       Tree_Write_Data (Version_String'Address, Version_String'Length);"}, {"sha": "5eac7ed872691f36c12ac21673cc2eb21354b0bc", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -486,11 +486,6 @@ package Opt is\n    --  GNAT\n    --  Set to True to generate full elaboration warnings (-gnatwl)\n \n-   Enable_Overflow_Checks : Boolean := False;\n-   --  GNAT\n-   --  Set to True if -gnato (enable overflow checks) switch is set,\n-   --  but not -gnatp.\n-\n    Error_Msg_Line_Length : Nat := 0;\n    --  GNAT\n    --  Records the error message line length limit. If this is set to zero,\n@@ -1068,12 +1063,6 @@ package Opt is\n    --  True if output of list of objects is requested (-O switch set). List is\n    --  output under the given filename, or standard output if not specified.\n \n-   Overflow_Checks_Unsuppressed : Boolean := False;\n-   --  GNAT\n-   --  This flag is True if there has been at least one pragma with the\n-   --  effect of unsuppressing overflow checks, meaning that a more careful\n-   --  check of the current mode is required.\n-\n    Persistent_BSS_Mode : Boolean := False;\n    --  GNAT\n    --  True if a Persistent_BSS configuration pragma is in effect, causing\n@@ -1252,10 +1241,10 @@ package Opt is\n \n    Suppress_Options : Suppress_Record;\n    --  GNAT\n-   --  Flags set True to suppress corresponding check, i.e. add an implicit\n-   --  pragma Suppress at the outer level of each unit compiled. Note that\n-   --  these suppress actions can be overridden by the use of the Unsuppress\n-   --  pragma. This variable is initialized by Osint.Initialize.\n+   --  Indicates outer level setting of check suppression. This initializes\n+   --  the settings of the outer scope level in any unit compiled. This is\n+   --  initialized by Osint.Initialize, and further initialized by the\n+   --  Adjust_Global_Switches flag in Gnat1drv.\n \n    Suppress_Back_Annotation : Boolean := False;\n    --  GNAT"}, {"sha": "af355a16a265b8434f9fa46e6e274501bad1f4e7", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -1655,11 +1655,12 @@ package body Osint is\n       Src_Search_Directories.Init;\n       Lib_Search_Directories.Init;\n \n-      --  Start off by setting all suppress options to False, these will\n-      --  be reset later (turning some on if -gnato is not specified, and\n-      --  turning all of them on if -gnatp is specified).\n+      --  Start off by setting all suppress options, to False. The special\n+      --  overflow fields are set to Not_Set (they will be set by -gnatp, or\n+      --  by -gnato, or, if neither of these appear, in Adjust_Global_Switches\n+      --  in Gnat1drv.\n \n-      Suppress_Options := ((others => False), Check_All, Check_All);\n+      Suppress_Options := ((others => False), Not_Set, Not_Set);\n \n       --  Reserve the first slot in the search paths table. This is the\n       --  directory of the main source file or main library file and is filled"}, {"sha": "8b071424567aaf0a3edfb5d15f780d9e69d40ebd", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -1199,6 +1199,7 @@ begin\n            Pragma_Ordered                        |\n            Pragma_Optimize                       |\n            Pragma_Optimize_Alignment             |\n+           Pragma_Overflow_Checks                |\n            Pragma_Pack                           |\n            Pragma_Passive                        |\n            Pragma_Preelaborable_Initialization   |"}, {"sha": "d70480e152b921057746d54d2cb3bb44fb4670e3", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -638,11 +638,6 @@ package body Prj.Part is\n          --  Remove from the potentially virtual any project extended by one\n          --  of these imported projects.\n \n-         --  For non extending imported projects, check that they do not belong\n-         --  to the project tree of the project being \"extended-all\" by the\n-         --  main project.\n-         --  Where is this check performed???\n-\n          declare\n             With_Clause : Project_Node_Id;\n             Imported    : Project_Node_Id := Empty_Node;"}, {"sha": "f4beaa63b9997db9ad90c23be9dae993186e367c", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -33,6 +33,7 @@ with Fname;    use Fname;\n with Lib;      use Lib;\n with Lib.Load; use Lib.Load;\n with Nlists;   use Nlists;\n+with Opt;      use Opt;\n with Output;   use Output;\n with Restrict; use Restrict;\n with Sem_Attr; use Sem_Attr;\n@@ -1353,13 +1354,14 @@ package body Sem is\n       --  these variables, and also that such calls do not disturb the settings\n       --  for units being analyzed at a higher level.\n \n-      S_Current_Sem_Unit : constant Unit_Number_Type := Current_Sem_Unit;\n-      S_Full_Analysis    : constant Boolean          := Full_Analysis;\n-      S_GNAT_Mode        : constant Boolean          := GNAT_Mode;\n-      S_Global_Dis_Names : constant Boolean          := Global_Discard_Names;\n-      S_In_Spec_Expr     : constant Boolean          := In_Spec_Expression;\n-      S_Inside_A_Generic : constant Boolean          := Inside_A_Generic;\n-      S_Outer_Gen_Scope  : constant Entity_Id        := Outer_Generic_Scope;\n+      S_Current_Sem_Unit  : constant Unit_Number_Type := Current_Sem_Unit;\n+      S_Full_Analysis     : constant Boolean          := Full_Analysis;\n+      S_GNAT_Mode         : constant Boolean          := GNAT_Mode;\n+      S_Global_Dis_Names  : constant Boolean          := Global_Discard_Names;\n+      S_In_Assertion_Expr : constant Nat              := In_Assertion_Expr;\n+      S_In_Spec_Expr      : constant Boolean          := In_Spec_Expression;\n+      S_Inside_A_Generic  : constant Boolean          := Inside_A_Generic;\n+      S_Outer_Gen_Scope   : constant Entity_Id        := Outer_Generic_Scope;\n \n       Generic_Main : constant Boolean :=\n                        Nkind (Unit (Cunit (Main_Unit)))\n@@ -1453,6 +1455,7 @@ package body Sem is\n \n       Full_Analysis      := True;\n       Inside_A_Generic   := False;\n+      In_Assertion_Expr  := 0;\n       In_Spec_Expression := False;\n \n       Set_Comes_From_Source_Default (False);\n@@ -1526,6 +1529,7 @@ package body Sem is\n       Full_Analysis        := S_Full_Analysis;\n       Global_Discard_Names := S_Global_Dis_Names;\n       GNAT_Mode            := S_GNAT_Mode;\n+      In_Assertion_Expr    := S_In_Assertion_Expr;\n       In_Spec_Expression   := S_In_Spec_Expr;\n       Inside_A_Generic     := S_Inside_A_Generic;\n       Outer_Generic_Scope  := S_Outer_Gen_Scope;"}, {"sha": "f219b923668e6cec4ff3ea33711c194793ae6dbd", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -203,7 +203,6 @@\n \n with Alloc;\n with Einfo;  use Einfo;\n-with Opt;    use Opt;\n with Table;\n with Types;  use Types;\n \n@@ -243,6 +242,15 @@ package Sem is\n    --  frozen from start, because the tree on which they depend will not\n    --  be available at the freeze point.\n \n+   In_Assertion_Expr : Nat := 0;\n+   --  This is set non-zero if we are within the expression of an assertion\n+   --  pragma or aspect. It is a counter which is incremented at the start\n+   --  of expanding such an expression, and decremented on completion of\n+   --  expanding that expression. Probably a boolean would be good enough,\n+   --  since we think that such expressions cannot nest, but that might not\n+   --  be true in the future (e.g. if let expressions are added to Ada) so\n+   --  we prepare for that future possibility by making it a counter.\n+\n    In_Inlined_Body : Boolean := False;\n    --  Switch to indicate that we are analyzing and resolving an inlined body.\n    --  Type checking is disabled in this context, because types are known to be\n@@ -310,13 +318,13 @@ package Sem is\n    --  that are applicable to all entities. A similar search is needed for any\n    --  non-predefined check even if no specific entity is involved.\n \n-   Scope_Suppress : Suppress_Record := Suppress_Options;\n+   Scope_Suppress : Suppress_Record;\n    --  This variable contains the current scope based settings of the suppress\n-   --  switches. It is initialized from the options as shown, and then modified\n-   --  by pragma Suppress. On entry to each scope, the current setting is saved\n-   --  the scope stack, and then restored on exit from the scope. This record\n-   --  may be rapidly checked to determine the current status of a check if\n-   --  no specific entity is involved or if the specific entity involved is\n+   --  switches. It is initialized from Suppress_Options in Gnat1drv, and then\n+   --  modified by pragma Suppress. On entry to each scope, the current setting\n+   --  is saved the scope stack, and then restored on exit from the scope. This\n+   --  record may be rapidly checked to determine the current status of a check\n+   --  if no specific entity is involved or if the specific entity involved is\n    --  one for which no specific Suppress/Unsuppress pragma has been set (as\n    --  indicated by the Checks_May_Be_Suppressed flag being set).\n "}, {"sha": "888f3b25c1a7a74eb7f6e2cccc4b0661f614feac", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -743,6 +743,16 @@ package body Sem_Eval is\n    begin\n       Diff.all := No_Uint;\n \n+      --  In preanalysis mode, always return Unknown, it is too early to be\n+      --  thinking we know the result of a comparison, save that judgment for\n+      --  the full analysis. This is particularly important in the case of\n+      --  pre and postconditions, which otherwise can be prematurely collapsed\n+      --  into having True or False conditions when this is inappropriate.\n+\n+      if not Full_Analysis then\n+         return Unknown;\n+      end if;\n+\n       --  If either operand could raise constraint error, then we cannot\n       --  know the result at compile time (since CE may be raised!)\n "}, {"sha": "2b3d7b81ad7b1bbbb4f64cb70946935b1892e9b9", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 80, "deletions": 6, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -286,7 +286,9 @@ package body Sem_Prag is\n       --  Preanalyze the boolean expression, we treat this as a spec expression\n       --  (i.e. similar to a default expression).\n \n+      In_Assertion_Expr := In_Assertion_Expr + 1;\n       Preanalyze_Spec_Expression (Get_Pragma_Arg (Arg1), Standard_Boolean);\n+      In_Assertion_Expr := In_Assertion_Expr - 1;\n \n       --  In ASIS mode, for a pragma generated from a source aspect, also\n       --  analyze the original aspect expression.\n@@ -5672,12 +5674,11 @@ package body Sem_Prag is\n \n          if C = All_Checks or else C = Overflow_Check then\n             if Suppress_Case then\n-               Scope_Suppress.Overflow_Checks_General    := Suppress;\n-               Scope_Suppress.Overflow_Checks_Assertions := Suppress;\n+               Scope_Suppress.Overflow_Checks_General    := Suppressed;\n+               Scope_Suppress.Overflow_Checks_Assertions := Suppressed;\n             else\n-               Scope_Suppress.Overflow_Checks_General    := Check_All;\n-               Scope_Suppress.Overflow_Checks_Assertions := Check_All;\n-               Opt.Overflow_Checks_Unsuppressed := True;\n+               Scope_Suppress.Overflow_Checks_General    := Minimized;\n+               Scope_Suppress.Overflow_Checks_Assertions := Minimized;\n             end if;\n          end if;\n \n@@ -6799,7 +6800,7 @@ package body Sem_Prag is\n          -- Assertion_Policy --\n          ----------------------\n \n-         --  pragma Assertion_Policy (Check | Disable |Ignore)\n+         --  pragma Assertion_Policy (Check | Disable | Ignore)\n \n          when Pragma_Assertion_Policy => Assertion_Policy : declare\n             Policy : Node_Id;\n@@ -7289,7 +7290,9 @@ package body Sem_Prag is\n             --  Check is active\n \n             else\n+               In_Assertion_Expr := In_Assertion_Expr + 1;\n                Analyze_And_Resolve (Expr, Any_Boolean);\n+               In_Assertion_Expr := In_Assertion_Expr - 1;\n             end if;\n          end Check;\n \n@@ -11753,6 +11756,76 @@ package body Sem_Prag is\n             Optimize_Alignment_Local := True;\n          end Optimize_Alignment;\n \n+         ---------------------\n+         -- Overflow_Checks --\n+         ---------------------\n+\n+         --  pragma Overflow_Checks\n+         --    ([General => ] MODE [, [Assertions => ] MODE);\n+\n+         --  MODE := SUPPRESSED | CHECKED | MINIMIZED | ELIMINATED\n+\n+         when Pragma_Overflow_Checks => Overflow_Checks : declare\n+            function Get_Check_Mode\n+              (Name : Name_Id;\n+               Arg  : Node_Id) return Overflow_Check_Type;\n+            --  Function to process one pragma argument, Arg. If an identifier\n+            --  is present, it must be Name. Check type is returned if a valid\n+            --  argument exists, otherwise an error is signalled.\n+\n+            --------------------\n+            -- Get_Check_Mode --\n+            --------------------\n+\n+            function Get_Check_Mode\n+              (Name : Name_Id;\n+               Arg  : Node_Id) return Overflow_Check_Type\n+            is\n+               Argx : constant Node_Id := Get_Pragma_Arg (Arg);\n+\n+            begin\n+               Check_Optional_Identifier (Arg, Name);\n+               Check_Arg_Is_Identifier (Argx);\n+\n+               if Chars (Argx) = Name_Suppressed then\n+                  return Suppressed;\n+               elsif Chars (Argx) = Name_Checked then\n+                  return Checked;\n+               elsif Chars (Argx) = Name_Minimized then\n+                  return Minimized;\n+               elsif Chars (Argx) = Name_Eliminated then\n+                  return Eliminated;\n+               else\n+                  Error_Pragma_Arg (\"invalid argument for pragma%\", Argx);\n+               end if;\n+            end Get_Check_Mode;\n+\n+         --  Start of processing for Overflow_Checks\n+\n+         begin\n+            GNAT_Pragma;\n+            Check_At_Least_N_Arguments (1);\n+            Check_At_Most_N_Arguments (2);\n+\n+            --  Process first argument\n+\n+            Suppress_Options.Overflow_Checks_General :=\n+              Get_Check_Mode (Name_General, Arg1);\n+\n+            --  Case of only one argument\n+\n+            if Arg_Count = 1 then\n+               Scope_Suppress.Overflow_Checks_Assertions :=\n+                 Scope_Suppress.Overflow_Checks_General;\n+\n+            --  Case of two arguments present\n+\n+            else\n+               Scope_Suppress.Overflow_Checks_Assertions  :=\n+                 Get_Check_Mode (Name_Assertions, Arg2);\n+            end if;\n+         end Overflow_Checks;\n+\n          -------------\n          -- Ordered --\n          -------------\n@@ -15173,6 +15246,7 @@ package body Sem_Prag is\n       Pragma_Obsolescent                    =>  0,\n       Pragma_Optimize                       => -1,\n       Pragma_Optimize_Alignment             => -1,\n+      Pragma_Overflow_Checks                =>  0,\n       Pragma_Ordered                        =>  0,\n       Pragma_Pack                           =>  0,\n       Pragma_Page                           => -1,"}, {"sha": "3eab5982cfce8312dfd137c9f93bcb2b0ddaf300", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -4289,6 +4289,14 @@ package Sinfo is\n       --  Note: Exception_Junk is set for the wrapping blocks created during\n       --  local raise optimization (Exp_Ch11.Expand_Local_Exception_Handlers).\n \n+      --  Note: from a control flow viewpoint, a block statement defines an\n+      --  extended basic block, i.e. the entry of the block dominates every\n+      --  statement in the sequence. When generating new statements with\n+      --  exception handlers in the expander at the end of a sequence that\n+      --  comes from source code, it can be necessary to wrap them all in a\n+      --  block statement in order to expose the implicit control flow to\n+      --  gigi and thus prevent it from issuing bogus control flow warnings.\n+\n       --  N_Block_Statement\n       --  Sloc points to DECLARE or BEGIN\n       --  Identifier (Node1) block direct name (set to Empty if not present)"}, {"sha": "167d110749a9ee28b46c2c0d3efc20c777a161fc", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -408,6 +408,7 @@ package Snames is\n    Name_No_Strict_Aliasing             : constant Name_Id := N + $; -- GNAT\n    Name_Normalize_Scalars              : constant Name_Id := N + $;\n    Name_Optimize_Alignment             : constant Name_Id := N + $; -- GNAT\n+   Name_Overflow_Checks                : constant Name_Id := N + $; -- GNAT\n    Name_Persistent_BSS                 : constant Name_Id := N + $; -- GNAT\n    Name_Polling                        : constant Name_Id := N + $; -- GNAT\n    Name_Priority_Specific_Dispatching  : constant Name_Id := N + $; -- Ada 05\n@@ -651,13 +652,16 @@ package Snames is\n \n    Name_As_Is                          : constant Name_Id := N + $;\n    Name_Assertion                      : constant Name_Id := N + $;\n+   Name_Assertions                     : constant Name_Id := N + $;\n    Name_Attribute_Name                 : constant Name_Id := N + $;\n    Name_Body_File_Name                 : constant Name_Id := N + $;\n    Name_Boolean_Entry_Barriers         : constant Name_Id := N + $;\n    Name_By_Any                         : constant Name_Id := N + $;\n    Name_By_Entry                       : constant Name_Id := N + $;\n    Name_By_Protected_Procedure         : constant Name_Id := N + $;\n    Name_Casing                         : constant Name_Id := N + $;\n+   Name_Check_All                      : constant Name_Id := N + $;\n+   Name_Checked                        : constant Name_Id := N + $;\n    Name_Code                           : constant Name_Id := N + $;\n    Name_Component                      : constant Name_Id := N + $;\n    Name_Component_Size_4               : constant Name_Id := N + $;\n@@ -667,6 +671,7 @@ package Snames is\n    Name_Disable                        : constant Name_Id := N + $;\n    Name_Dot_Replacement                : constant Name_Id := N + $;\n    Name_Dynamic                        : constant Name_Id := N + $;\n+   Name_Eliminated                     : constant Name_Id := N + $;\n    Name_Ensures                        : constant Name_Id := N + $;\n    Name_Entity                         : constant Name_Id := N + $;\n    Name_Entry_Count                    : constant Name_Id := N + $;\n@@ -676,6 +681,7 @@ package Snames is\n    Name_Form                           : constant Name_Id := N + $;\n    Name_G_Float                        : constant Name_Id := N + $;\n    Name_Gcc                            : constant Name_Id := N + $;\n+   Name_General                        : constant Name_Id := N + $;\n    Name_Gnat                           : constant Name_Id := N + $;\n    Name_GPL                            : constant Name_Id := N + $;\n    Name_IEEE_Float                     : constant Name_Id := N + $;\n@@ -689,6 +695,7 @@ package Snames is\n    Name_Max_Size                       : constant Name_Id := N + $;\n    Name_Mechanism                      : constant Name_Id := N + $;\n    Name_Message                        : constant Name_Id := N + $;\n+   Name_Minimized                      : constant Name_Id := N + $;\n    Name_Mixedcase                      : constant Name_Id := N + $;\n    Name_Mode                           : constant Name_Id := N + $;\n    Name_Modified_GPL                   : constant Name_Id := N + $;\n@@ -727,6 +734,7 @@ package Snames is\n    Name_Static                         : constant Name_Id := N + $;\n    Name_Stack_Size                     : constant Name_Id := N + $;\n    Name_Subunit_File_Name              : constant Name_Id := N + $;\n+   Name_Suppressed                     : constant Name_Id := N + $;\n    Name_Task_Stack_Size_Default        : constant Name_Id := N + $;\n    Name_Task_Type                      : constant Name_Id := N + $;\n    Name_Time_Slicing_Enabled           : constant Name_Id := N + $;\n@@ -1656,6 +1664,7 @@ package Snames is\n       Pragma_No_Strict_Aliasing,\n       Pragma_Normalize_Scalars,\n       Pragma_Optimize_Alignment,\n+      Pragma_Overflow_Checks,\n       Pragma_Persistent_BSS,\n       Pragma_Polling,\n       Pragma_Priority_Specific_Dispatching,"}, {"sha": "04de8900ca4cc80fbb441b4b3be597f359964ec0", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 77, "deletions": 12, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -128,9 +128,8 @@ package body Switch.C is\n \n       --  Handle switches that do not start with -gnat\n \n-      if Ptr + 3 > Max\n-        or else Switch_Chars (Ptr .. Ptr + 3) /= \"gnat\"\n-      then\n+      if Ptr + 3 > Max or else Switch_Chars (Ptr .. Ptr + 3) /= \"gnat\" then\n+\n          --  There are two front-end switches that do not start with -gnat:\n          --  -I, --RTS\n \n@@ -755,10 +754,77 @@ package body Switch.C is\n \n             when 'o' =>\n                Ptr := Ptr + 1;\n-               Suppress_Options.Suppress (Overflow_Check) := False;\n-               Suppress_Options.Overflow_Checks_General := Check_All;\n-               Suppress_Options.Overflow_Checks_Assertions := Check_All;\n-               Opt.Enable_Overflow_Checks := True;\n+\n+               --  Case of no digits after the -gnato\n+\n+               if Ptr > Max or else Switch_Chars (Ptr) not in '0' .. '3' then\n+                  Suppress_Options.Overflow_Checks_General    := Checked;\n+                  Suppress_Options.Overflow_Checks_Assertions := Checked;\n+\n+               --  At least one digit after the -gnato\n+\n+               else\n+                  --  Handle first digit after -gnato\n+\n+                  case Switch_Chars (Ptr) is\n+                     when '0' =>\n+                        Suppress_Options.Overflow_Checks_General :=\n+                          Suppressed;\n+\n+                     when '1' =>\n+                        Suppress_Options.Overflow_Checks_General :=\n+                          Checked;\n+\n+                     when '2' =>\n+                        Suppress_Options.Overflow_Checks_General :=\n+                          Minimized;\n+\n+                     when '3' =>\n+                        Suppress_Options.Overflow_Checks_General :=\n+                          Eliminated;\n+\n+                     when others =>\n+                        raise Program_Error;\n+                  end case;\n+\n+                  Ptr := Ptr + 1;\n+\n+                  --  Only one digit after -gnato, set assertions mode to\n+                  --  be the same as general mode.\n+\n+                  if Ptr > Max\n+                    or else Switch_Chars (Ptr) not in '0' .. '3'\n+                  then\n+                     Suppress_Options.Overflow_Checks_Assertions :=\n+                       Suppress_Options.Overflow_Checks_General;\n+\n+                  --  Process second digit after -gnato\n+\n+                  else\n+                     case Switch_Chars (Ptr) is\n+                        when '0' =>\n+                           Suppress_Options.Overflow_Checks_Assertions :=\n+                             Suppressed;\n+\n+                        when '1' =>\n+                           Suppress_Options.Overflow_Checks_Assertions :=\n+                             Checked;\n+\n+                        when '2' =>\n+                           Suppress_Options.Overflow_Checks_Assertions :=\n+                             Minimized;\n+\n+                        when '3' =>\n+                           Suppress_Options.Overflow_Checks_Assertions :=\n+                             Eliminated;\n+\n+                        when others =>\n+                           raise Program_Error;\n+                     end case;\n+\n+                     Ptr := Ptr + 1;\n+                  end if;\n+               end if;\n \n             --  Processing for O switch\n \n@@ -793,13 +859,12 @@ package body Switch.C is\n                         Suppress_Options.Suppress (J) := True;\n                      end if;\n \n-                     Suppress_Options.Overflow_Checks_General    := Suppress;\n-                     Suppress_Options.Overflow_Checks_Assertions := Suppress;\n+                     Suppress_Options.Overflow_Checks_General    := Suppressed;\n+                     Suppress_Options.Overflow_Checks_Assertions := Suppressed;\n                   end loop;\n \n-                  Validity_Checks_On         := False;\n-                  Opt.Suppress_Checks        := True;\n-                  Opt.Enable_Overflow_Checks := False;\n+                  Validity_Checks_On  := False;\n+                  Opt.Suppress_Checks := True;\n                end if;\n \n             --  Processing for P switch"}, {"sha": "0f9cea25eb36f5c372cbab7180ac265cba768b9f", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 32, "deletions": 27, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b34c1837a1170b534e532801b0ac8126726e66/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=05b34c1837a1170b534e532801b0ac8126726e66", "patch": "@@ -706,51 +706,56 @@ package Types is\n    --  The following provides precise details on the mode used to check\n    --  intermediate overflows in expressions for signed integer arithmetic.\n \n-   type Overflow_Check_Type is\n-     (Suppress,\n-      --  Intermediate overflow suppressed. If an arithmetic operation creates\n+   type Overflow_Check_Type is (\n+      Not_Set,\n+      --  Dummy value used during initialization process to show that the\n+      --  corresponding value has not yet been initialized.\n+\n+      Suppressed,\n+      --  Overflow checking is suppressed. If an arithmetic operation creates\n       --  an overflow, no exception is raised, and the program is erroneous.\n \n-      Check_All,\n-      --  All intermediate operations are checked. If the result of any\n-      --  arithmetic operation gives a result outside the range of the base\n-      --  type, then a Constraint_Error exception is raised.\n+      Checked,\n+      --  All operations, including all intermediate operations are checked.\n+      --  If the result of any arithmetic operation gives a result outside the\n+      --  range of the base type, then a Constraint_Error exception is raised.\n \n-      Minimize,\n+      Minimized,\n       --  Where appropriate, arithmetic operations are performed with an\n-      --  extended range, using Long_Long_Integer if necessary. As long as\n-      --  the result fits in this extended range, then no exception is raised\n-      --  and computation continues with the extended result. The final value\n-      --  of an expression must fit in the base type of the whole expression.\n-      --  If an intermediate result is outside the range of Long_Long_Integer\n-      --  then a Constraint_Error exception is raised.\n-\n-      Eliminate);\n+      --  extended range, using Long_Long_Integer if necessary. As long as the\n+      --  result fits in this extended range, then no exception is raised and\n+      --  computation continues with the extended result. The final value of an\n+      --  expression must fit in the base type of the whole expression. If an\n+      --  intermediate result is outside the range of Long_Long_Integer then a\n+      --  Constraint_Error exception is raised.\n+\n+      Eliminated);\n       --  In this mode arbitrary precision arithmetic is used as needed to\n-      --  ensure that it is impossible for intermediate arithmetic to cause\n-      --  an overflow. Again the final value of an expression must fit in\n-      --  the base type of the whole expression.\n+      --  ensure that it is impossible for intermediate arithmetic to cause an\n+      --  overflow. Again the final value of an expression must fit in the base\n+      --  type of the whole expression.\n \n    --  The following structure captures the state of check suppression or\n    --  activation at a particular point in the program execution.\n \n    type Suppress_Record is record\n       Suppress : Suppress_Array;\n-      --  Indicates suppression status of each possible check\n+      --  Indicates suppression status of each possible check. Note: there\n+      --  is an entry for Overflow_Checks in this array, but it is never used.\n+      --  Instead we use the more detailed information in the two components\n+      --  that follow this one (Overflow_Checks_General/Assertions).\n \n       Overflow_Checks_General : Overflow_Check_Type;\n-      --  This field is relevant only if Suppress (Overflow_Check) is False.\n-      --  It indicates the mode of overflow checking to be applied to general\n-      --  expressions outside assertions.\n+      --  This field indicates the mode of overflow checking to be applied to\n+      --  general expressions outside assertions.\n \n       Overflow_Checks_Assertions : Overflow_Check_Type;\n-      --  This field is relevant only if Suppress (Overflow_Check) is False.\n-      --  It indicates the mode of overflow checking to be applied to any\n-      --  expressions occuring inside assertions.\n+      --  This field  indicates the mode of overflow checking to be applied to\n+      --  any expressions occuring inside assertions.\n    end record;\n \n    Suppress_All : constant Suppress_Record :=\n-                    ((others => True), Suppress, Suppress);\n+                    ((others => True), Suppressed, Suppressed);\n    --  Constant used to initialize Suppress_Record value to all suppressed.\n \n    -----------------------------------"}]}