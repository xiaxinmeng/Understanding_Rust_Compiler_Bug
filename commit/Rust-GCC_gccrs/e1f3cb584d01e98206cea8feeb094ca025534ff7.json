{"sha": "e1f3cb584d01e98206cea8feeb094ca025534ff7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFmM2NiNTg0ZDAxZTk4MjA2Y2VhOGZlZWIwOTRjYTAyNTUzNGZmNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-24T10:11:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-24T10:11:52Z"}, "message": "[multiple changes]\n\n2009-06-24  Robert Dewar  <dewar@adacore.com>\n\n\t* prj-nmsc.adb, prj-nmsc.ads, prj-proc.adb, prj.adb: Minor reformatting\n\n\t* a-strsea.adb (Count): Avoid local copy on stack, speed up unmapped\n\tcase.\n\t(Index): Ditto.\n\n2009-06-24  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Analyze_One_Call): Check that at least one actual is\n\tpresent when checking whether a call may be interpreted as an indexing\n\tof the result of a call.\n\n\t* exp_ch9.adb (Expand_N_Subprogram_Declaration): Place the generated\n\tbody for a null procedure on the freeze actions for the procedure, so\n\tthat it will be analyzed at the proper place without premature freezing\n\tof actuals.\n\n\t* sem_ch3.adb (Check_Completion): Code cleanup. \n\tDo not diagnose a null procedure without a body, if previous errors\n\thave disabled expansion.\n\n2009-06-24  Doug Rupp  <rupp@adacore.com>\n\n\t* init.c [VMS] Resignal C$_SIGKILL\n\n2009-06-24  Ed Falis  <falis@adacore.com>\n\n\t* s-vxwext.adb, s-vxwext-kernel.adb: Add s-vxwext body for VxWorks 5\n\tDefine ERROR in body for VxWorks 6 kernel\n\n2009-06-24  Pascal Obry  <obry@adacore.com>\n\n\t* g-socket.adb, g-socket.ads: Fix possible unexpected constraint error\n\tin [Send/Receive]_Socket.\n\nFrom-SVN: r148905", "tree": {"sha": "93566d15728270f04bb11663b8d930f136b389a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93566d15728270f04bb11663b8d930f136b389a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1f3cb584d01e98206cea8feeb094ca025534ff7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1f3cb584d01e98206cea8feeb094ca025534ff7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1f3cb584d01e98206cea8feeb094ca025534ff7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1f3cb584d01e98206cea8feeb094ca025534ff7/comments", "author": null, "committer": null, "parents": [{"sha": "c928785785d29202b33a7738adecff9a09c93738", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c928785785d29202b33a7738adecff9a09c93738", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c928785785d29202b33a7738adecff9a09c93738"}], "stats": {"total": 732, "additions": 490, "deletions": 242}, "files": [{"sha": "5d58ca37cf6d37fe06925aaf788546ce892af83f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e1f3cb584d01e98206cea8feeb094ca025534ff7", "patch": "@@ -1,3 +1,40 @@\n+2009-06-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* prj-nmsc.adb, prj-nmsc.ads, prj-proc.adb, prj.adb: Minor reformatting\n+\n+\t* a-strsea.adb (Count): Avoid local copy on stack, speed up unmapped\n+\tcase.\n+\t(Index): Ditto.\n+\n+2009-06-24  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_One_Call): Check that at least one actual is\n+\tpresent when checking whether a call may be interpreted as an indexing\n+\tof the result of a call.\n+\n+\t* exp_ch9.adb (Expand_N_Subprogram_Declaration): Place the generated\n+\tbody for a null procedure on the freeze actions for the procedure, so\n+\tthat it will be analyzed at the proper place without premature freezing\n+\tof actuals.\n+\n+\t* sem_ch3.adb (Check_Completion): Code cleanup. \n+\tDo not diagnose a null procedure without a body, if previous errors\n+\thave disabled expansion.\n+\n+2009-06-24  Doug Rupp  <rupp@adacore.com>\n+\n+\t* init.c [VMS] Resignal C$_SIGKILL\n+\n+2009-06-24  Ed Falis  <falis@adacore.com>\n+\n+\t* s-vxwext.adb, s-vxwext-kernel.adb: Add s-vxwext body for VxWorks 5\n+\tDefine ERROR in body for VxWorks 6 kernel\n+\n+2009-06-24  Pascal Obry  <obry@adacore.com>\n+\n+\t* g-socket.adb, g-socket.ads: Fix possible unexpected constraint error\n+\tin [Send/Receive]_Socket.\n+\n 2009-06-24  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj-proc.adb, prj-proc.ads, prj.ads, prj-nmsc.adb, prj-nmsc.ads,"}, {"sha": "199474542f3007205d96f22ff0ef138608f44fdf", "filename": "gcc/ada/a-strsea.adb", "status": "modified", "additions": 178, "deletions": 91, "changes": 269, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fa-strsea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fa-strsea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strsea.adb?ref=e1f3cb584d01e98206cea8feeb094ca025534ff7", "patch": "@@ -36,6 +36,7 @@\n --  is specialized (rather than using the general Index routine).\n \n with Ada.Strings.Maps; use Ada.Strings.Maps;\n+with System;           use System;\n \n package body Ada.Strings.Search is\n \n@@ -77,75 +78,102 @@ package body Ada.Strings.Search is\n       Pattern : String;\n       Mapping : Maps.Character_Mapping := Maps.Identity) return Natural\n    is\n-      N : Natural;\n-      J : Natural;\n-\n-      Mapped_Source : String (Source'Range);\n+      PL1 : constant Integer := Pattern'Length - 1;\n+      Num : Natural;\n+      Ind : Natural;\n+      Cur : Natural;\n \n    begin\n-      for J in Source'Range loop\n-         Mapped_Source (J) := Value (Mapping, Source (J));\n-      end loop;\n-\n       if Pattern = \"\" then\n          raise Pattern_Error;\n       end if;\n \n-      N := 0;\n-      J := Source'First;\n+      Num := 0;\n+      Ind := Source'First;\n \n-      while J <= Source'Last - (Pattern'Length - 1) loop\n-         if Mapped_Source (J .. J + (Pattern'Length - 1)) = Pattern then\n-            N := N + 1;\n-            J := J + Pattern'Length;\n-         else\n-            J := J + 1;\n-         end if;\n-      end loop;\n+      --  Unmapped case\n \n-      return N;\n+      if Mapping'Address = Maps.Identity'Address then\n+         Ind := Source'First;\n+         while Ind <= Source'Length - PL1 loop\n+            if Pattern = Source (Ind .. Ind + PL1) then\n+               Num := Num + 1;\n+               Ind := Ind + Pattern'Length;\n+            else\n+               Ind := Ind + 1;\n+            end if;\n+         end loop;\n+\n+      --  Mapped case\n+\n+      else\n+         Ind := Source'First;\n+         while Ind <= Source'Length - PL1 loop\n+            Cur := Ind;\n+            for K in Pattern'Range loop\n+               if Pattern (K) /= Value (Mapping, Source (Cur)) then\n+                  Ind := Ind + 1;\n+                  goto Cont;\n+               else\n+                  Cur := Cur + 1;\n+               end if;\n+            end loop;\n+\n+            Num := Num + 1;\n+            Ind := Ind + Pattern'Length;\n+\n+         <<Cont>>\n+            null;\n+         end loop;\n+      end if;\n+\n+      --  Return result\n+\n+      return Num;\n    end Count;\n \n    function Count\n      (Source  : String;\n       Pattern : String;\n       Mapping : Maps.Character_Mapping_Function) return Natural\n    is\n-      Mapped_Source : String (Source'Range);\n-      N             : Natural;\n-      J             : Natural;\n+      PL1 : constant Integer := Pattern'Length - 1;\n+      Num : Natural;\n+      Ind : Natural;\n+      Cur : Natural;\n \n    begin\n       if Pattern = \"\" then\n          raise Pattern_Error;\n       end if;\n \n-      --  We make sure Access_Check is unsuppressed so that the Mapping.all\n-      --  call will generate a friendly Constraint_Error if the value for\n-      --  Mapping is uninitialized (and hence null).\n+      --  Check for null pointer in case checks are off\n \n-      declare\n-         pragma Unsuppress (Access_Check);\n+      if Mapping = null then\n+         raise Constraint_Error;\n+      end if;\n \n-      begin\n-         for J in Source'Range loop\n-            Mapped_Source (J) := Mapping.all (Source (J));\n+      Num := 0;\n+      Ind := Source'First;\n+      while Ind <= Source'Last - PL1 loop\n+         Cur := Ind;\n+         for K in Pattern'Range loop\n+            if Pattern (K) /= Mapping (Source (Cur)) then\n+               Ind := Ind + 1;\n+               goto Cont;\n+            else\n+               Cur := Cur + 1;\n+            end if;\n          end loop;\n-      end;\n \n-      N := 0;\n-      J := Source'First;\n+         Num := Num + 1;\n+         Ind := Ind + Pattern'Length;\n \n-      while J <= Source'Last - (Pattern'Length - 1) loop\n-         if Mapped_Source (J .. J + (Pattern'Length - 1)) = Pattern then\n-            N := N + 1;\n-            J := J + Pattern'Length;\n-         else\n-            J := J + 1;\n-         end if;\n+      <<Cont>>\n+         null;\n       end loop;\n \n-      return N;\n+      return Num;\n    end Count;\n \n    function Count\n@@ -187,8 +215,8 @@ package body Ada.Strings.Search is\n                end if;\n             end loop;\n \n-            --  Here if J indexes 1st char of token, and all chars\n-            --  after J are in the token\n+            --  Here if J indexes first char of token, and all chars after J\n+            --  are in the token.\n \n             Last := Source'Last;\n             return;\n@@ -211,43 +239,88 @@ package body Ada.Strings.Search is\n       Going   : Direction := Forward;\n       Mapping : Maps.Character_Mapping := Maps.Identity) return Natural\n    is\n-      Cur_Index     : Natural;\n-      Mapped_Source : String (Source'Range);\n+      PL1 : constant Integer := Pattern'Length - 1;\n+      Ind : Natural;\n+      Cur : Natural;\n \n    begin\n       if Pattern = \"\" then\n          raise Pattern_Error;\n       end if;\n \n-      for J in Source'Range loop\n-         Mapped_Source (J) := Value (Mapping, Source (J));\n-      end loop;\n-\n       --  Forwards case\n \n       if Going = Forward then\n-         for J in 1 .. Source'Length - Pattern'Length + 1 loop\n-            Cur_Index := Source'First + J - 1;\n+         Ind := Source'First;\n \n-            if Pattern = Mapped_Source\n-                           (Cur_Index .. Cur_Index + Pattern'Length - 1)\n-            then\n-               return Cur_Index;\n-            end if;\n-         end loop;\n+         --  Unmapped forward case\n+\n+         if Mapping'Address = Maps.Identity'Address then\n+            for J in 1 .. Source'Length - PL1 loop\n+               if Pattern = Source (Ind .. Ind + PL1) then\n+                  return Ind;\n+               else\n+                  Ind := Ind + 1;\n+               end if;\n+            end loop;\n+\n+         --  Mapped forward case\n+\n+         else\n+            for J in 1 .. Source'Length - PL1 loop\n+               Cur := Ind;\n+\n+               for K in Pattern'Range loop\n+                  if Pattern (K) /= Value (Mapping, Source (Cur)) then\n+                     goto Cont1;\n+                  else\n+                     Cur := Cur + 1;\n+                  end if;\n+               end loop;\n+\n+               return Ind;\n+\n+            <<Cont1>>\n+               Ind := Ind + 1;\n+            end loop;\n+         end if;\n \n       --  Backwards case\n \n       else\n-         for J in reverse 1 .. Source'Length - Pattern'Length + 1 loop\n-            Cur_Index := Source'First + J - 1;\n+         --  Unmapped backward case\n \n-            if Pattern = Mapped_Source\n-                           (Cur_Index .. Cur_Index + Pattern'Length - 1)\n-            then\n-               return Cur_Index;\n-            end if;\n-         end loop;\n+         Ind := Source'Last - PL1;\n+\n+         if Mapping'Address = Maps.Identity'Address then\n+            for J in reverse 1 .. Source'Length - PL1 loop\n+               if Pattern = Source (Ind .. Ind + PL1) then\n+                  return Ind;\n+               else\n+                  Ind := Ind - 1;\n+               end if;\n+            end loop;\n+\n+         --  Mapped backward case\n+\n+         else\n+            for J in reverse 1 .. Source'Length - PL1 loop\n+               Cur := Ind;\n+\n+               for K in Pattern'Range loop\n+                  if Pattern (K) /= Value (Mapping, Source (Cur)) then\n+                     goto Cont2;\n+                  else\n+                     Cur := Cur + 1;\n+                  end if;\n+               end loop;\n+\n+               return Ind;\n+\n+            <<Cont2>>\n+               Ind := Ind - 1;\n+            end loop;\n+         end if;\n       end if;\n \n       --  Fall through if no match found. Note that the loops are skipped\n@@ -262,53 +335,67 @@ package body Ada.Strings.Search is\n       Going   : Direction := Forward;\n       Mapping : Maps.Character_Mapping_Function) return Natural\n    is\n-      Mapped_Source : String (Source'Range);\n-      Cur_Index     : Natural;\n+      PL1 : constant Integer := Pattern'Length - 1;\n+      Ind : Natural;\n+      Cur : Natural;\n \n    begin\n       if Pattern = \"\" then\n          raise Pattern_Error;\n       end if;\n \n-      --  We make sure Access_Check is unsuppressed so that the Mapping.all\n-      --  call will generate a friendly Constraint_Error if the value for\n-      --  Mapping is uninitialized (and hence null).\n+      --  Check for null pointer in case checks are off\n \n-      declare\n-         pragma Unsuppress (Access_Check);\n-      begin\n-         for J in Source'Range loop\n-            Mapped_Source (J) := Mapping.all (Source (J));\n-         end loop;\n-      end;\n+      if Mapping = null then\n+         raise Constraint_Error;\n+      end if;\n \n       --  Forwards case\n \n       if Going = Forward then\n-         for J in 1 .. Source'Length - Pattern'Length + 1 loop\n-            Cur_Index := Source'First + J - 1;\n+         Ind := Source'First;\n+         for J in 1 .. Source'Length - PL1 loop\n+            Cur := Ind;\n+\n+            for K in Pattern'Range loop\n+               if Pattern (K) /= Mapping.all (Source (Cur)) then\n+                  goto Cont1;\n+               else\n+                  Cur := Cur + 1;\n+               end if;\n+            end loop;\n \n-            if Pattern = Mapped_Source\n-                           (Cur_Index .. Cur_Index + Pattern'Length - 1)\n-            then\n-               return Cur_Index;\n-            end if;\n+            return Ind;\n+\n+         <<Cont1>>\n+            Ind := Ind + 1;\n          end loop;\n \n       --  Backwards case\n \n       else\n-         for J in reverse 1 .. Source'Length - Pattern'Length + 1 loop\n-            Cur_Index := Source'First + J - 1;\n+         Ind := Source'Last - PL1;\n+         for J in reverse 1 .. Source'Length - PL1 loop\n+            Cur := Ind;\n+\n+            for K in Pattern'Range loop\n+               if Pattern (K) /= Mapping.all (Source (Cur)) then\n+                  goto Cont2;\n+               else\n+                  Cur := Cur + 1;\n+               end if;\n+            end loop;\n \n-            if Pattern = Mapped_Source\n-                           (Cur_Index .. Cur_Index + Pattern'Length - 1)\n-            then\n-               return Cur_Index;\n-            end if;\n+            return Ind;\n+\n+         <<Cont2>>\n+            Ind := Ind - 1;\n          end loop;\n       end if;\n \n+      --  Fall through if no match found. Note that the loops are skipped\n+      --  completely in the case of the pattern being longer than the source.\n+\n       return 0;\n    end Index;\n "}, {"sha": "0b4ea237961f89a20895af9bf4df3aed2db20329", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 15, "deletions": 25, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=e1f3cb584d01e98206cea8feeb094ca025534ff7", "patch": "@@ -4440,35 +4440,24 @@ package body Exp_Ch6 is\n             Pop_Scope;\n          end if;\n \n-      --  Ada 2005 (AI-348): Generation of the null body\n+      --  Ada 2005 (AI-348): Generate body for a null procedure.\n+      --  In most cases this is superfluous because calls to it\n+      --  will be automatically inlined, but we definitely need\n+      --  the body if preconditions for the procedure are present.\n \n       elsif Nkind (Specification (N)) = N_Procedure_Specification\n         and then Null_Present (Specification (N))\n       then\n          declare\n-            Bod : constant Node_Id :=\n-                    Make_Subprogram_Body (Loc,\n-                      Specification =>\n-                        New_Copy_Tree (Specification (N)),\n-                      Declarations => New_List,\n-                     Handled_Statement_Sequence =>\n-                        Make_Handled_Sequence_Of_Statements (Loc,\n-                          Statements => New_List (Make_Null_Statement (Loc))));\n+            Bod : constant Node_Id := Body_To_Inline (N);\n          begin\n-            Set_Body_To_Inline (N, Bod);\n-            Insert_After (N, Bod);\n-            Analyze (Bod);\n+            Set_Has_Completion (Subp, False);\n+            Append_Freeze_Action (Subp, Bod);\n \n-            --  Corresponding_Spec isn't being set by Analyze_Subprogram_Body,\n-            --  evidently because Set_Has_Completion is called earlier for null\n-            --  procedures in Analyze_Subprogram_Declaration, so we force its\n-            --  setting here. If the setting of Has_Completion is not set\n-            --  earlier, then it can result in missing body errors if other\n-            --  errors were already reported (since expansion is turned off).\n+            --  The body now contains raise statements, so calls to it will\n+            --  not be inlined.\n \n-            --  Should creation of the empty body be moved to the analyzer???\n-\n-            Set_Corresponding_Spec (Bod, Defining_Entity (Specification (N)));\n+            Set_Is_Inlined (Subp, False);\n          end;\n       end if;\n    end Expand_N_Subprogram_Declaration;\n@@ -4910,8 +4899,8 @@ package body Exp_Ch6 is\n       --  Check if this is a declared null procedure\n \n       elsif Nkind (Decl) = N_Subprogram_Declaration then\n-         if Null_Present (Specification (Decl)) then\n-            return True;\n+         if not Null_Present (Specification (Decl)) then\n+            return False;\n \n          elsif No (Body_To_Inline (Decl)) then\n             return False;\n@@ -4936,8 +4925,9 @@ package body Exp_Ch6 is\n                   Stat2 := Next (Stat);\n \n                   return\n-                    Nkind (Stat) = N_Null_Statement\n-                      and then\n+                     Is_Empty_List (Declarations (Orig_Bod))\n+                       and then Nkind (Stat) = N_Null_Statement\n+                       and then\n                         (No (Stat2)\n                           or else\n                             (Nkind (Stat2) = N_Simple_Return_Statement"}, {"sha": "909cf0dec30112486c48833f6c8f1f5e3700c81d", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=e1f3cb584d01e98206cea8feeb094ca025534ff7", "patch": "@@ -1617,7 +1617,15 @@ package body GNAT.Sockets is\n          Raise_Socket_Error (Socket_Errno);\n       end if;\n \n-      Last := Item'First + Ada.Streams.Stream_Element_Offset (Res - 1);\n+      if Res = 0\n+        and then Item'First = Ada.Streams.Stream_Element_Offset'First\n+      then\n+         --  No data sent and first index is first Stream_Element_Offset'First\n+         --  Last is set to Stream_Element_Offset'Last.\n+         Last := Ada.Streams.Stream_Element_Offset'Last;\n+      else\n+         Last := Item'First + Ada.Streams.Stream_Element_Offset (Res - 1);\n+      end if;\n    end Receive_Socket;\n \n    --------------------\n@@ -1889,7 +1897,15 @@ package body GNAT.Sockets is\n          Raise_Socket_Error (Socket_Errno);\n       end if;\n \n-      Last := Item'First + Ada.Streams.Stream_Element_Offset (Res - 1);\n+      if Res = 0\n+        and then Item'First = Ada.Streams.Stream_Element_Offset'First\n+      then\n+         --  No data sent and first index is first Stream_Element_Offset'First\n+         --  Last is set to Stream_Element_Offset'Last.\n+         Last := Ada.Streams.Stream_Element_Offset'Last;\n+      else\n+         Last := Item'First + Ada.Streams.Stream_Element_Offset (Res - 1);\n+      end if;\n    end Send_Socket;\n \n    -----------------"}, {"sha": "593c96e48136e30eab0b1bacd54a7f4f8d1eefc8", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=e1f3cb584d01e98206cea8feeb094ca025534ff7", "patch": "@@ -895,9 +895,10 @@ package GNAT.Sockets is\n       Flags  : Request_Flag_Type := No_Request_Flag);\n    --  Receive message from Socket. Last is the index value such that Item\n    --  (Last) is the last character assigned. Note that Last is set to\n-   --  Item'First - 1 when the socket has been closed by peer. This is not an\n-   --  error and no exception is raised. Flags allows to control the\n-   --  reception. Raise Socket_Error on error.\n+   --  Item'First - 1 (or to Stream_Element_Array'Last if Item'First is\n+   --  Stream_Element_Offset'First) when the socket has been closed by peer.\n+   --  This is not an error and no exception is raised. Flags allows to\n+   --  control the reception. Raise Socket_Error on error.\n \n    procedure Receive_Socket\n      (Socket : Socket_Type;\n@@ -933,11 +934,16 @@ package GNAT.Sockets is\n       To     : access Sock_Addr_Type;\n       Flags  : Request_Flag_Type := No_Request_Flag);\n    pragma Inline (Send_Socket);\n-   --  Transmit a message over a socket. For a datagram socket, the address is\n-   --  given by To.all. For a stream socket, To must be null. Flags\n-   --  allows to control the transmission. Raises Socket_Error on error.\n-   --  Note: this subprogram is inlined because it is also used to implement\n-   --  the two variants below.\n+   --  Transmit a message over a socket. For a datagram socket, the address\n+   --  is given by To.all. For a stream socket, To must be null. Last is\n+   --  the index value such that Item (Last) is the last character\n+   --  sent. Note that Last is set to Item'First - 1 (or to\n+   --  Stream_Element_Array'Last if Item'First is\n+   --  Stream_Element_Offset'First) when the socket has been closed by\n+   --  peer.  This is not an error and no exception is raised. Flags allows\n+   --  to control the transmission. Raises Socket_Error on error.  Note:\n+   --  this subprogram is inlined because it is also used to implement the\n+   --  two variants below.\n \n    procedure Send_Socket\n      (Socket : Socket_Type;"}, {"sha": "8d9b1951ea3c3167612008816e51e4c43b92f36e", "filename": "gcc/ada/init.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=e1f3cb584d01e98206cea8feeb094ca025534ff7", "patch": "@@ -1136,6 +1136,7 @@ extern char *__gnat_error_prehandler_stack;   /* Alternate signal stack */\n #define SS$_RESIGNAL        2328\n \n /* These codes are in standard message libraries.  */\n+extern int C$_SIGKILL;\n extern int CMA$_EXIT_THREAD;\n extern int SS$_DEBUG;\n extern int SS$_INTDIV;\n@@ -1312,6 +1313,7 @@ typedef int\n resignal_predicate (int code);\n \n const int *cond_resignal_table [] = {\n+  &C$_SIGKILL,\n   &CMA$_EXIT_THREAD,\n   &SS$_DEBUG,\n   &LIB$_KEYNOTFOU,"}, {"sha": "d3e6be363a2fd9c6c967be3cd597c8ea343ff0a7", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 76, "deletions": 69, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=e1f3cb584d01e98206cea8feeb094ca025534ff7", "patch": "@@ -355,10 +355,10 @@ package body Prj.Nmsc is\n       In_Tree               : Project_Tree_Ref;\n       Explicit_Sources_Only : Boolean;\n       Proc_Data             : in out Processing_Data);\n-   --  Find all Ada sources by traversing all source directories.\n-   --  If Explicit_Sources_Only is True, then the sources found must belong to\n-   --  the list of sources specified explicitly in the project file.\n-   --  If Explicit_Sources_Only is False, then all sources matching the naming\n+   --  Find all Ada sources by traversing all source directories. If\n+   --  Explicit_Sources_Only is True, then the sources found must belong to\n+   --  the list of sources specified explicitly in the project file. If\n+   --  Explicit_Sources_Only is False, then all sources matching the naming\n    --  scheme are recorded.\n \n    function Compute_Directory_Last (Dir : String) return Natural;\n@@ -375,30 +375,29 @@ package body Prj.Nmsc is\n    --  Error_Report.\n \n    procedure Search_Directories\n-     (Project         : Project_Id;\n-      In_Tree         : Project_Tree_Ref;\n-      For_All_Sources : Boolean;\n+     (Project                   : Project_Id;\n+      In_Tree                   : Project_Tree_Ref;\n+      For_All_Sources           : Boolean;\n       Allow_Duplicate_Basenames : Boolean);\n-   --  Search the source directories to find the sources.\n-   --  If For_All_Sources is True, check each regular file name against the\n-   --  naming schemes of the different languages. Otherwise consider only the\n-   --  file names in the hash table Source_Names.\n-   --  If Allow_Duplicate_Basenames, then files with the same base names are\n-   --  authorized within a project for source-based languages (never for unit\n-   --  based languages)\n+   --  Search the source directories to find the sources. If For_All_Sources is\n+   --  True, check each regular file name against the naming schemes of the\n+   --  different languages. Otherwise consider only the file names in the hash\n+   --  table Source_Names. If Allow_Duplicate_Basenames, then files with the\n+   --  same base names are authorized within a project for source-based\n+   --  languages (never for unit based languages)\n \n    procedure Check_File\n-     (Project           : Project_Id;\n-      In_Tree           : Project_Tree_Ref;\n-      Path              : Path_Name_Type;\n-      File_Name         : File_Name_Type;\n-      Display_File_Name : File_Name_Type;\n-      For_All_Sources   : Boolean;\n+     (Project                   : Project_Id;\n+      In_Tree                   : Project_Tree_Ref;\n+      Path                      : Path_Name_Type;\n+      File_Name                 : File_Name_Type;\n+      Display_File_Name         : File_Name_Type;\n+      For_All_Sources           : Boolean;\n       Allow_Duplicate_Basenames : Boolean);\n    --  Check if file File_Name is a valid source of the project. This is used\n-   --  in multi-language mode only.\n-   --  When the file matches one of the naming schemes, it is added to\n-   --  various htables through Add_Source and to Source_Paths_Htable.\n+   --  in multi-language mode only. When the file matches one of the naming\n+   --  schemes, it is added to various htables through Add_Source and to\n+   --  Source_Paths_Htable.\n    --\n    --  Name is the name of the candidate file. It hasn't been normalized yet\n    --  and is the direct result of readdir().\n@@ -441,8 +440,8 @@ package body Prj.Nmsc is\n    --  Free the internal hash tables used for checking naming exceptions\n \n    procedure Get_Directories\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref;\n+     (Project     : Project_Id;\n+      In_Tree     : Project_Tree_Ref;\n       Current_Dir : String);\n    --  Get the object directory, the exec directory and the source directories\n    --  of a project.\n@@ -535,17 +534,16 @@ package body Prj.Nmsc is\n    --  computing\n \n    procedure Look_For_Sources\n-     (Project     : Project_Id;\n-      In_Tree     : Project_Tree_Ref;\n-      Proc_Data   : in out Processing_Data;\n+     (Project                   : Project_Id;\n+      In_Tree                   : Project_Tree_Ref;\n+      Proc_Data                 : in out Processing_Data;\n       Allow_Duplicate_Basenames : Boolean);\n    --  Find all the sources of project Project in project tree In_Tree and\n    --  update its Data accordingly. This assumes that Data.First_Source has\n    --  been initialized with the list of excluded sources and special naming\n-   --  exceptions.\n-   --  If Allow_Duplicate_Basenames, then files with the same base names are\n-   --  authorized within a project for source-based languages (never for unit\n-   --  based languages)\n+   --  exceptions. If Allow_Duplicate_Basenames, then files with the same base\n+   --  names are authorized within a project for source-based languages (never\n+   --  for unit based languages)\n \n    function Path_Name_Of\n      (File_Name : File_Name_Type;\n@@ -570,8 +568,8 @@ package body Prj.Nmsc is\n       Location        : Source_Ptr;\n       Source_Recorded : in out Boolean);\n    --  Put a unit in the list of units of a project, if the file name\n-   --  corresponds to a valid unit name.\n-   --  Ada_Language is a pointer to the Language_Data for \"Ada\" in Project.\n+   --  corresponds to a valid unit name. Ada_Language is a pointer to the\n+   --  Language_Data for \"Ada\" in Project.\n \n    procedure Remove_Source\n      (Id          : Source_Id;\n@@ -6765,9 +6763,9 @@ package body Prj.Nmsc is\n    ------------------\n \n    procedure Find_Sources\n-     (Project   : Project_Id;\n-      In_Tree   : Project_Tree_Ref;\n-      Proc_Data : in out Processing_Data;\n+     (Project                   : Project_Id;\n+      In_Tree                   : Project_Tree_Ref;\n+      Proc_Data                 : in out Processing_Data;\n       Allow_Duplicate_Basenames : Boolean)\n    is\n       Sources          : constant Variable_Value :=\n@@ -6927,13 +6925,14 @@ package body Prj.Nmsc is\n \n       if Get_Mode = Ada_Only then\n          Find_Ada_Sources\n-           (Project, In_Tree, Explicit_Sources_Only => Has_Explicit_Sources,\n-            Proc_Data => Proc_Data);\n+           (Project, In_Tree,\n+            Explicit_Sources_Only => Has_Explicit_Sources,\n+            Proc_Data             => Proc_Data);\n \n       else\n          Search_Directories\n            (Project, In_Tree,\n-            For_All_Sources =>\n+            For_All_Sources           =>\n               Sources.Default and then Source_List_File.Default,\n             Allow_Duplicate_Basenames => Allow_Duplicate_Basenames);\n       end if;\n@@ -7346,12 +7345,12 @@ package body Prj.Nmsc is\n    ----------------\n \n    procedure Check_File\n-     (Project           : Project_Id;\n-      In_Tree           : Project_Tree_Ref;\n-      Path              : Path_Name_Type;\n-      File_Name         : File_Name_Type;\n-      Display_File_Name : File_Name_Type;\n-      For_All_Sources   : Boolean;\n+     (Project                   : Project_Id;\n+      In_Tree                   : Project_Tree_Ref;\n+      Path                      : Path_Name_Type;\n+      File_Name                 : File_Name_Type;\n+      Display_File_Name         : File_Name_Type;\n+      For_All_Sources           : Boolean;\n       Allow_Duplicate_Basenames : Boolean)\n    is\n       Canonical_Path : constant Path_Name_Type :=\n@@ -7464,7 +7463,9 @@ package body Prj.Nmsc is\n                        or else\n                     (Source.Kind = Impl and then Kind = Spec))\n                then\n-                  null; --  We found the \"other_part (source)\"\n+                  --  We found the \"other_part (source)\"\n+\n+                  null;\n \n                elsif (Unit /= No_Name\n                       and then Source.Unit /= No_Unit_Index\n@@ -7566,9 +7567,9 @@ package body Prj.Nmsc is\n    ------------------------\n \n    procedure Search_Directories\n-     (Project         : Project_Id;\n-      In_Tree         : Project_Tree_Ref;\n-      For_All_Sources : Boolean;\n+     (Project                   : Project_Id;\n+      In_Tree                   : Project_Tree_Ref;\n+      For_All_Sources           : Boolean;\n       Allow_Duplicate_Basenames : Boolean)\n    is\n       Source_Dir        : String_List_Id;\n@@ -7642,12 +7643,16 @@ package body Prj.Nmsc is\n \n                         declare\n                            Path_Name : constant String :=\n-                               Normalize_Pathname\n-                                 (Name (1 .. Last),\n-                                  Directory      => Source_Directory\n-                                    (Source_Directory'First .. Dir_Last),\n-                                  Resolve_Links  => Opt.Follow_Links_For_Files,\n-                                  Case_Sensitive => True); --  no folding\n+                                         Normalize_Pathname\n+                                           (Name (1 .. Last),\n+                                            Directory       =>\n+                                              Source_Directory\n+                                                (Source_Directory'First ..\n+                                                 Dir_Last),\n+                                            Resolve_Links   =>\n+                                              Opt.Follow_Links_For_Files,\n+                                            Case_Sensitive => True);\n+                           --  Case_Sensitive set True (no folding)\n \n                            Path : Path_Name_Type;\n                            FF   : File_Found :=\n@@ -7672,12 +7677,13 @@ package body Prj.Nmsc is\n \n                            else\n                               Check_File\n-                                (Project           => Project,\n-                                 In_Tree           => In_Tree,\n-                                 Path              => Path,\n-                                 File_Name         => File_Name,\n-                                 Display_File_Name => Display_File_Name,\n-                                 For_All_Sources   => For_All_Sources,\n+                                (Project                   => Project,\n+                                 In_Tree                   => In_Tree,\n+                                 Path                      => Path,\n+                                 File_Name                 => File_Name,\n+                                 Display_File_Name         =>\n+                                   Display_File_Name,\n+                                 For_All_Sources           => For_All_Sources,\n                                  Allow_Duplicate_Basenames =>\n                                    Allow_Duplicate_Basenames);\n                            end if;\n@@ -7775,9 +7781,9 @@ package body Prj.Nmsc is\n    ----------------------\n \n    procedure Look_For_Sources\n-     (Project     : Project_Id;\n-      In_Tree     : Project_Tree_Ref;\n-      Proc_Data   : in out Processing_Data;\n+     (Project                   : Project_Id;\n+      In_Tree                   : Project_Tree_Ref;\n+      Proc_Data                 : in out Processing_Data;\n       Allow_Duplicate_Basenames : Boolean)\n    is\n       Iter : Source_Iterator;\n@@ -7875,6 +7881,7 @@ package body Prj.Nmsc is\n \n       procedure Process_Sources_In_Multi_Language_Mode is\n          Iter : Source_Iterator;\n+\n       begin\n          --  Check that two sources of this project do not have the same object\n          --  file name.\n@@ -7947,12 +7954,12 @@ package body Prj.Nmsc is\n \n                               declare\n                                  Src_Ind : constant Source_File_Index :=\n-                                   Sinput.P.Load_Project_File\n-                                     (Get_Name_String\n-                                          (Src_Id.Path.Name));\n+                                             Sinput.P.Load_Project_File\n+                                               (Get_Name_String\n+                                                 (Src_Id.Path.Name));\n                               begin\n                                  if Sinput.P.Source_File_Is_Subunit\n-                                   (Src_Ind)\n+                                      (Src_Ind)\n                                  then\n                                     Override_Kind (Src_Id, Sep);\n                                  else"}, {"sha": "f0f2ee5d4c29ea1a9e69d1de5b24ebbdbeb768e1", "filename": "gcc/ada/prj-nmsc.ads", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fprj-nmsc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fprj-nmsc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.ads?ref=e1f3cb584d01e98206cea8feeb094ca025534ff7", "patch": "@@ -41,13 +41,13 @@ private package Prj.Nmsc is\n    --  Free the memory occupied by Proc_Data\n \n    procedure Check\n-     (Project         : Project_Id;\n-      In_Tree         : Project_Tree_Ref;\n-      Report_Error    : Put_Line_Access;\n-      When_No_Sources : Error_Warning;\n-      Current_Dir     : String;\n-      Proc_Data       : in out Processing_Data;\n-      Is_Config_File  : Boolean;\n+     (Project                   : Project_Id;\n+      In_Tree                   : Project_Tree_Ref;\n+      Report_Error              : Put_Line_Access;\n+      When_No_Sources           : Error_Warning;\n+      Current_Dir               : String;\n+      Proc_Data                 : in out Processing_Data;\n+      Is_Config_File            : Boolean;\n       Compiler_Driver_Mandatory : Boolean;\n       Allow_Duplicate_Basenames : Boolean);\n    --  Perform consistency and semantic checks on a project, starting from the\n@@ -75,6 +75,7 @@ private package Prj.Nmsc is\n    --  If Compiler_Driver_Mandatory is true, then a Compiler.Driver attribute\n    --  for each language must be defined, or we will not look for its source\n    --  files.\n+   --\n    --  If Allow_Duplicate_Basenames, then files with the same base names are\n    --  authorized within a project for source-based languages (never for unit\n    --  based languages)"}, {"sha": "31cd29225575f281ee602e5e0ab5a41ea11f7347", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=e1f3cb584d01e98206cea8feeb094ca025534ff7", "patch": "@@ -285,11 +285,11 @@ package body Prj.Proc is\n    -----------\n \n    procedure Check\n-     (In_Tree         : Project_Tree_Ref;\n-      Project         : Project_Id;\n-      Current_Dir     : String;\n-      When_No_Sources : Error_Warning;\n-      Is_Config_File  : Boolean;\n+     (In_Tree                   : Project_Tree_Ref;\n+      Project                   : Project_Id;\n+      Current_Dir               : String;\n+      When_No_Sources           : Error_Warning;\n+      Is_Config_File            : Boolean;\n       Compiler_Driver_Mandatory : Boolean;\n       Allow_Duplicate_Basenames : Boolean)\n    is\n@@ -1259,17 +1259,17 @@ package body Prj.Proc is\n \n       if not Is_Config_File then\n          Process_Project_Tree_Phase_2\n-           (In_Tree                => In_Tree,\n-            Project                => Project,\n-            Success                => Success,\n-            From_Project_Node      => From_Project_Node,\n-            From_Project_Node_Tree => From_Project_Node_Tree,\n-            Report_Error           => Report_Error,\n-            When_No_Sources        => When_No_Sources,\n-            Current_Dir            => Current_Dir,\n+           (In_Tree                   => In_Tree,\n+            Project                   => Project,\n+            Success                   => Success,\n+            From_Project_Node         => From_Project_Node,\n+            From_Project_Node_Tree    => From_Project_Node_Tree,\n+            Report_Error              => Report_Error,\n+            When_No_Sources           => When_No_Sources,\n+            Current_Dir               => Current_Dir,\n             Compiler_Driver_Mandatory => True,\n             Allow_Duplicate_Basenames => False,\n-            Is_Config_File         => Is_Config_File);\n+            Is_Config_File            => Is_Config_File);\n       end if;\n    end Process;\n "}, {"sha": "4cc0c4d5a62d1bf44034a37b8712ebc349a4f02b", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 47, "deletions": 15, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=e1f3cb584d01e98206cea8feeb094ca025534ff7", "patch": "@@ -154,7 +154,7 @@ package body Prj is\n \n    procedure Language_Changed (Iter : in out Source_Iterator);\n    procedure Project_Changed (Iter : in out Source_Iterator);\n-   --  Called when a new project or language was selected for this iterator.\n+   --  Called when a new project or language was selected for this iterator\n \n    function Contains_ALI_Files (Dir : Path_Name_Type) return Boolean;\n    --  Return True if there is at least one ALI file in the directory Dir\n@@ -845,15 +845,19 @@ package body Prj is\n    ---------------\n \n    procedure Free_List (Source : in out Source_Id) is\n-      procedure Unchecked_Free is new Ada.Unchecked_Deallocation\n-        (Source_Data, Source_Id);\n+      procedure Unchecked_Free is new\n+        Ada.Unchecked_Deallocation (Source_Data, Source_Id);\n+\n       Tmp : Source_Id;\n+\n    begin\n       while Source /= No_Source loop\n          Tmp := Source.Next_In_Lang;\n          Free_List (Source.Alternate_Languages);\n \n-         if Source.Unit /= null then\n+         if Source.Unit /= null\n+           and then Source.Kind in Spec_Or_Body\n+         then\n             Source.Unit.File_Names (Source.Kind) := null;\n          end if;\n \n@@ -870,8 +874,9 @@ package body Prj is\n      (List         : in out Project_List;\n       Free_Project : Boolean)\n    is\n-      procedure Unchecked_Free is new Ada.Unchecked_Deallocation\n-        (Project_List_Element, Project_List);\n+      procedure Unchecked_Free is new\n+        Ada.Unchecked_Deallocation (Project_List_Element, Project_List);\n+\n       Tmp : Project_List;\n \n    begin\n@@ -892,9 +897,11 @@ package body Prj is\n    ---------------\n \n    procedure Free_List (Languages : in out Language_Ptr) is\n-      procedure Unchecked_Free is new Ada.Unchecked_Deallocation\n-        (Language_Data, Language_Ptr);\n+      procedure Unchecked_Free is new\n+        Ada.Unchecked_Deallocation (Language_Data, Language_Ptr);\n+\n       Tmp : Language_Ptr;\n+\n    begin\n       while Languages /= null loop\n          Tmp := Languages.Next;\n@@ -909,16 +916,18 @@ package body Prj is\n    ----------------\n \n    procedure Free_Units (Table : in out Units_Htable.Instance) is\n-      procedure Unchecked_Free is new Ada.Unchecked_Deallocation\n-        (Unit_Data, Unit_Index);\n+      procedure Unchecked_Free is new\n+        Ada.Unchecked_Deallocation (Unit_Data, Unit_Index);\n+\n       Unit : Unit_Index;\n+\n    begin\n       Unit := Units_Htable.Get_First (Table);\n-\n       while Unit /= No_Unit_Index loop\n          if Unit.File_Names (Spec) /= null then\n             Unit.File_Names (Spec).Unit := No_Unit_Index;\n          end if;\n+\n          if Unit.File_Names (Impl) /= null then\n             Unit.File_Names (Impl).Unit := No_Unit_Index;\n          end if;\n@@ -935,8 +944,8 @@ package body Prj is\n    ----------\n \n    procedure Free (Tree : in out Project_Tree_Ref) is\n-      procedure Unchecked_Free is new Ada.Unchecked_Deallocation\n-        (Project_Tree_Data, Project_Tree_Ref);\n+      procedure Unchecked_Free is new\n+        Ada.Unchecked_Deallocation (Project_Tree_Data, Project_Tree_Ref);\n \n    begin\n       if Tree /= null then\n@@ -1076,6 +1085,7 @@ package body Prj is\n    procedure Set_Mode (New_Mode : Mode) is\n    begin\n       Current_Mode := New_Mode;\n+\n       case New_Mode is\n          when Ada_Only =>\n             Default_Language_Is_Ada := True;\n@@ -1462,10 +1472,12 @@ package body Prj is\n    ----------------------------\n \n    function Get_Language_From_Name\n-     (Project : Project_Id; Name : String) return Language_Ptr\n+     (Project : Project_Id;\n+      Name    : String) return Language_Ptr\n    is\n-      N : Name_Id;\n+      N      : Name_Id;\n       Result : Language_Ptr;\n+\n    begin\n       Name_Len := Name'Length;\n       Name_Buffer (1 .. Name_Len) := Name;\n@@ -1484,6 +1496,26 @@ package body Prj is\n       return No_Language_Index;\n    end Get_Language_From_Name;\n \n+   ----------------\n+   -- Other_Part --\n+   ----------------\n+\n+   function Other_Part (Source : Source_Id) return Source_Id is\n+   begin\n+      if Source.Unit /= No_Unit_Index then\n+         case Source.Kind is\n+            when Impl =>\n+               return Source.Unit.File_Names (Spec);\n+            when Spec =>\n+               return Source.Unit.File_Names (Impl);\n+            when Sep =>\n+               return No_Source;\n+         end case;\n+      else\n+         return No_Source;\n+      end if;\n+   end Other_Part;\n+\n begin\n    --  Make sure that the standard config and user project file extensions are\n    --  compatible with canonical case file naming."}, {"sha": "a8455bb2c6b516ea8a6ac5dc0f61fccf52c1eaed", "filename": "gcc/ada/s-vxwext-kernel.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fs-vxwext-kernel.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fs-vxwext-kernel.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext-kernel.adb?ref=e1f3cb584d01e98206cea8feeb094ca025534ff7", "patch": "@@ -34,6 +34,8 @@\n \n package body System.VxWorks.Ext is\n \n+   ERROR : constant := -1;\n+\n    --------------\n    -- Int_Lock --\n    --------------"}, {"sha": "b13b07e16419d24d1bca58fd2e434d4919e6ad97", "filename": "gcc/ada/s-vxwext.adb", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fs-vxwext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fs-vxwext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext.adb?ref=e1f3cb584d01e98206cea8feeb094ca025534ff7", "patch": "@@ -0,0 +1,50 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n+--                                                                          --\n+--                     S Y S T E M . V X W O R K S . E X T                  --\n+--                                                                          --\n+--                                   B o d y                                --\n+--                                                                          --\n+--            Copyright (C) 2009, Free Software Foundation, Inc.            --\n+--                                                                          --\n+-- GNARL is free software; you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNARL; see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides vxworks specific support functions needed\n+--  by System.OS_Interface.\n+\n+--  This is the VxWorks 5.x version of this package\n+\n+package body System.VxWorks.Ext is\n+\n+   ERROR : constant := -1;\n+\n+   ------------------------\n+   -- taskCpuAffinitySet --\n+   ------------------------\n+\n+   function taskCpuAffinitySet (tid : t_id; CPU : int) return int is\n+      pragma Unreferenced (tid, CPU);\n+   begin\n+      return ERROR;\n+   end taskCpuAffinitySet;\n+\n+end System.VxWorks.Ext;"}, {"sha": "828babdd2acadb3f6686032cfd6f1ef446dbb980", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 26, "deletions": 10, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=e1f3cb584d01e98206cea8feeb094ca025534ff7", "patch": "@@ -8609,23 +8609,39 @@ package body Sem_Ch3 is\n          --  source (including the _Call primitive operation of RAS types,\n          --  which has to have the flag Comes_From_Source for other purposes):\n          --  we assume that the expander will provide the missing completion.\n+         --  In case of previous errors, other expansion actions that provide\n+         --  bodies for null procedures with not be invoked. so inhibit message\n+         --  in those cases.\n \n          elsif     Ekind (E) = E_Function\n            or else Ekind (E) = E_Procedure\n            or else Ekind (E) = E_Generic_Function\n            or else Ekind (E) = E_Generic_Procedure\n          then\n-            if not Has_Completion (E)\n-              and then not (Is_Subprogram (E)\n-                            and then Is_Abstract_Subprogram (E))\n-              and then not (Is_Subprogram (E)\n-                              and then\n-                            (not Comes_From_Source (E)\n-                              or else Chars (E) = Name_uCall))\n-              and then Nkind (Parent (Unit_Declaration_Node (E))) /=\n-                                                       N_Compilation_Unit\n-              and then Chars (E) /= Name_uSize\n+            if Has_Completion (E) then\n+               null;\n+\n+            elsif Is_Subprogram (E) and then Is_Abstract_Subprogram (E) then\n+               null;\n+\n+            elsif Is_Subprogram (E)\n+              and then (not Comes_From_Source (E)\n+                          or else Chars (E) = Name_uCall)\n             then\n+               null;\n+\n+            elsif\n+               Nkind (Parent (Unit_Declaration_Node (E))) = N_Compilation_Unit\n+            then\n+               null;\n+\n+            elsif Nkind (Parent (E)) = N_Procedure_Specification\n+              and then Null_Present (Parent (E))\n+              and then Serious_Errors_Detected > 0\n+            then\n+               null;\n+\n+            else\n                Post_Error;\n             end if;\n "}, {"sha": "c9585a08416784b7cdc54419a39629add3568c85", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f3cb584d01e98206cea8feeb094ca025534ff7/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=e1f3cb584d01e98206cea8feeb094ca025534ff7", "patch": "@@ -2262,7 +2262,9 @@ package body Sem_Ch4 is\n          return;\n       end if;\n \n-      if Present (Actuals)\n+      --  An indexing requires at least one actual.\n+\n+      if not Is_Empty_List (Actuals)\n         and then\n           (Needs_No_Actuals (Nam)\n             or else"}]}