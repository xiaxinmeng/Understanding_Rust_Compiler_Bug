{"sha": "6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMzYzEzYzE4MWExNjhjZTNlNWU5NWU2YzBmYTI3YWUzNzMwYjgyMA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2018-05-02T12:16:15Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-05-02T12:16:15Z"}, "message": "[testsuite] Add scan-wpa-ipa-dump\n\n2018-05-02  Tom de Vries  <tom@codesourcery.com>\n\n\tPR testsuite/85106\n\t* gcc.dg/ipa/ipa-icf-38.c: New test.\n\t* gcc.dg/ipa/ipa-icf-38a.c: New test.\n\t* lib/scandump.exp (dump-base): New proc.\n\t(scan-dump, scan-dump-times, scan-dump-not, scan-dump-dem)\n\t(scan-dump-dem-not): Add and handle parameter for suffix of the dump\n\tbase.\n\t* lib/scanipa.exp: Add \"\" argument to scan-dump calls.\n\t* lib/scanlang.exp: Same.\n\t* lib/scanrtl.exp: Same.\n\t* lib/scantree.exp: Same.\n\t* lib/scanwpaipa.exp: New file.\n\t* lib/gcc-dg.exp: Include scanwpaipa.exp.\n\n\t* testsuite/lib/libatomic.exp: Include scanwpaipa.exp.\n\n\t* testsuite/lib/libgomp.exp: Include scanwpaipa.exp.\n\n\t* testsuite/lib/libitm.exp: Include scanwpaipa.exp.\n\n\t* testsuite/lib/libvtv.exp: Include scanwpaipa.exp.\n\n\t* doc/sourcebuild.texi (Commands for use in dg-final, Scan optimization\n\tdump files): Add wpa-ipa.\n\nFrom-SVN: r259837", "tree": {"sha": "57e2748564ec4c427e2f42582c2ee983a24f7a94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57e2748564ec4c427e2f42582c2ee983a24f7a94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/comments", "author": null, "committer": null, "parents": [{"sha": "559289370f76bfdb6a2ebfb4315c18206d73027a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/559289370f76bfdb6a2ebfb4315c18206d73027a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/559289370f76bfdb6a2ebfb4315c18206d73027a"}], "stats": {"total": 385, "additions": 332, "deletions": 53}, "files": [{"sha": "3abedbe019dd09f252e2a15276c8bc48ec0fd6c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -1,3 +1,9 @@\n+2018-05-02  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR testsuite/85106\n+\t* doc/sourcebuild.texi (Commands for use in dg-final, Scan optimization\n+\tdump files): Add wpa-ipa.\n+\n 2018-05-02  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config.gcc (powerpc*-*-*): Remove paired.h.  Unsupport the"}, {"sha": "ad4f446721d7b307b814645f25baaeb5b6765dcf", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -2589,7 +2589,7 @@ assembly output.\n @subsubsection Scan optimization dump files\n \n These commands are available for @var{kind} of @code{tree}, @code{rtl},\n-and @code{ipa}.\n+@code{ipa}, and @code{wpa-ipa}.\n \n @table @code\n @item scan-@var{kind}-dump @var{regex} @var{suffix} [@{ target/xfail @var{selector} @}]"}, {"sha": "80b6d373d0ef52e3077e970b33ed2dab025c3d4e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -1,3 +1,19 @@\n+2018-05-02  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR testsuite/85106\n+\t* gcc.dg/ipa/ipa-icf-38.c: New test.\n+\t* gcc.dg/ipa/ipa-icf-38a.c: New test.\n+\t* lib/scandump.exp (dump-base): New proc.\n+\t(scan-dump, scan-dump-times, scan-dump-not, scan-dump-dem)\n+\t(scan-dump-dem-not): Add and handle parameter for suffix of the dump\n+\tbase.\n+\t* lib/scanipa.exp: Add \"\" argument to scan-dump calls.\n+\t* lib/scanlang.exp: Same.\n+\t* lib/scanrtl.exp: Same.\n+\t* lib/scantree.exp: Same.\n+\t* lib/scanwpaipa.exp: New file.\n+\t* lib/gcc-dg.exp: Include scanwpaipa.exp.\n+\n 2018-05-02  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/85567"}, {"sha": "6e7936a6a687cfc71dc0dba9fadd0a0c6b293181", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-38.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-38.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-38.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-38.c?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do link } */\n+/* { dg-options \"-O2 -fdump-ipa-icf -flto\" } */\n+/* { dg-require-effective-target lto } */\n+/* { dg-additional-sources \"ipa-icf-38a.c\" }*/\n+\n+/* Based on ipa-icf-3.c.  */\n+\n+typedef int v4si __attribute__ ((vector_size (16)));\n+\n+__attribute__ ((noinline))\n+int foo(void)\n+{\n+  v4si a = {1,2,3,4};\n+  v4si b = {3,2,1,4};\n+  v4si c;\n+\n+  return 54;\n+}\n+\n+extern int bar(void);\n+\n+int main()\n+{\n+  int volatile a = foo();\n+  int volatile b = bar();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-wpa-ipa-dump \"Semantic equality hit:foo->bar\" \"icf\"  } } */\n+/* { dg-final { scan-wpa-ipa-dump \"Equal symbols: 1\" \"icf\"  } } */"}, {"sha": "414a7c455e4518183cffbc7c479d6bab05dcd125", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-38a.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-38a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-38a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-38a.c?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-skip-if \"\" { *-*-* } } */\n+\n+typedef int v4si __attribute__ ((vector_size (16)));\n+\n+__attribute__ ((noinline))\n+int bar(void)\n+{\n+  v4si a = {1,2,3,4};\n+  v4si b = {3,2,1,4};\n+  v4si c;\n+\n+  return 54;\n+}\n+"}, {"sha": "2fca9e87afcd52d53657fe02de26570c91ab0717", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -22,6 +22,7 @@ load_lib scanasm.exp\n load_lib scanrtl.exp\n load_lib scantree.exp\n load_lib scanipa.exp\n+load_lib scanwpaipa.exp\n load_lib scanlang.exp\n load_lib timeout.exp\n load_lib timeout-dg.exp"}, {"sha": "3d42692b5399f4ab9d1cc8c2caf0cf434ce1bef3", "filename": "gcc/testsuite/lib/scandump.exp", "status": "modified", "additions": 43, "deletions": 20, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2Flib%2Fscandump.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2Flib%2Fscandump.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscandump.exp?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -26,17 +26,31 @@ proc dump-suffix { arg } {\n     return [string range $arg $idx end]\n }\n \n+# Construct the dumpbase.\n+# Argument 0 is the src file\n+# Argument 1 is the dump base suffix\n+proc dump-base { args } {\n+    set src [lindex $args 0]\n+    set dumpbase_suf [lindex $args 1]\n+    set dumpbase $src\n+    if { [string length $dumpbase_suf] != 0 } {\n+\tregsub {[.][^.]*$} $src $dumpbase_suf dumpbase\n+    }\n+    return $dumpbase\n+}\n+\n # Utility for scanning compiler result, invoked via dg-final.\n # Call pass if pattern is present, otherwise fail.\n #\n # Argument 0 is the type of dump we are searching (rtl, tree, ipa)\n # Argument 1 is the regexp to match.\n # Argument 2 is the suffix for the dump file\n-# Argument 3 handles expected failures and the like\n+# Argument 3 is the suffix of the dump base\n+# Argument 4 handles expected failures and the like\n proc scan-dump { args } {\n \n-    if { [llength $args] >= 4 } {\n-        switch [dg-process-target [lindex $args 3]] {\n+    if { [llength $args] >= 5 } {\n+        switch [dg-process-target [lindex $args 4]] {\n             \"S\" { }\n             \"N\" { return }\n             \"F\" { setup_xfail \"*-*-*\" }\n@@ -52,7 +66,8 @@ proc scan-dump { args } {\n     set suf [dump-suffix [lindex $args 2]]\n     set testname \"$testcase scan-[lindex $args 0]-dump $suf \\\"$printable_pattern\\\"\"\n     set src [file tail $filename]\n-    set output_file \"[glob -nocomplain $src.[lindex $args 2]]\"\n+    set dumpbase [dump-base $src [lindex $args 3]]\n+    set output_file \"[glob -nocomplain $dumpbase.[lindex $args 2]]\"\n     if { $output_file == \"\" } {\n \tverbose -log \"$testcase: dump file does not exist\"\n \tunresolved \"$testname\"\n@@ -75,11 +90,12 @@ proc scan-dump { args } {\n # Argument 1 is the regexp to match.\n # Argument 2 is number of times the regexp must be found\n # Argument 3 is the suffix for the dump file\n-# Argument 4 handles expected failures and the like\n+# Argument 4 is the suffix of the dump base\n+# Argument 5 handles expected failures and the like\n proc scan-dump-times { args } {\n \n-    if { [llength $args] >= 5 } {\n-\tswitch [dg-process-target [lindex $args 4]] {\n+    if { [llength $args] >= 6 } {\n+\tswitch [dg-process-target [lindex $args 5]] {\n \t    \"S\" { }\n \t    \"N\" { return }\n \t    \"F\" { setup_xfail \"*-*-*\" }\n@@ -95,7 +111,8 @@ proc scan-dump-times { args } {\n     set printable_pattern [make_pattern_printable [lindex $args 1]]\n     set testname \"$testcase scan-[lindex $args 0]-dump-times $suf \\\"$printable_pattern\\\" [lindex $args 2]\"\n     set src [file tail $filename]\n-    set output_file \"[glob -nocomplain $src.[lindex $args 3]]\"\n+    set dumpbase [dump-base $src [lindex $args 4]]\n+    set output_file \"[glob -nocomplain $dumpbase.[lindex $args 3]]\"\n     if { $output_file == \"\" } {\n \tverbose -log \"$testcase: dump file does not exist\"\n \tunresolved \"$testname\"\n@@ -120,11 +137,12 @@ proc scan-dump-times { args } {\n # Argument 0 is the type of dump we are searching (rtl, tree, ipa)\n # Argument 1 is the regexp to match.\n # Argument 2 is the suffix for the dump file\n-# Argument 3 handles expected failures and the like\n+# Argument 3 is the suffix of the dump base\n+# Argument 4 handles expected failures and the like\n proc scan-dump-not { args } {\n \n-    if { [llength $args] >= 4 } {\n-\tswitch [dg-process-target [lindex $args 3]] {\n+    if { [llength $args] >= 5 } {\n+\tswitch [dg-process-target [lindex $args 4]] {\n \t    \"S\" { }\n \t    \"N\" { return }\n \t    \"F\" { setup_xfail \"*-*-*\" }\n@@ -139,7 +157,8 @@ proc scan-dump-not { args } {\n     set suf [dump-suffix [lindex $args 2]]\n     set testname \"$testcase scan-[lindex $args 0]-dump-not $suf \\\"$printable_pattern\\\"\"\n     set src [file tail $filename]\n-    set output_file \"[glob -nocomplain $src.[lindex $args 2]]\"\n+    set dumpbase [dump-base $src [lindex $args 3]]\n+    set output_file \"[glob -nocomplain $dumpbase.[lindex $args 2]]\"\n     if { $output_file == \"\" } {\n \tverbose -log \"$testcase: dump file does not exist\"\n \tunresolved \"$testname\"\n@@ -163,13 +182,14 @@ proc scan-dump-not { args } {\n # Argument 0 is the type of dump we are searching (rtl, tree, ipa)\n # Argument 1 is the regexp to match.\n # Argument 2 is the suffix for the dump file\n-# Argument 3 handles expected failures and the like\n+# Argument 3 is the suffix of the dump base\n+# Argument 4 handles expected failures and the like\n proc scan-dump-dem { args } {\n     global cxxfilt\n     global base_dir\n \n-    if { [llength $args] >= 4 } {\n-\tswitch [dg-process-target [lindex $args 3]] {\n+    if { [llength $args] >= 5 } {\n+\tswitch [dg-process-target [lindex $args 4]] {\n \t    \"S\" { }\n \t    \"N\" { return }\n \t    \"F\" { setup_xfail \"*-*-*\" }\n@@ -194,7 +214,8 @@ proc scan-dump-dem { args } {\n     set suf [dump-suffix [lindex $args 2]]\n     set testname \"$testcase scan-[lindex $args 0]-dump-dem $suf \\\"$printable_pattern\\\"\"\n     set src [file tail $filename]\n-    set output_file \"[glob -nocomplain $src.[lindex $args 2]]\"\n+    set dumpbase [dump-base $src [lindex $args 3]]\n+    set output_file \"[glob -nocomplain $dumpbase.[lindex $args 2]]\"\n     if { $output_file == \"\" } {\n \tverbose -log \"$testcase: dump file does not exist\"\n \tunresolved \"$testname\"\n@@ -217,13 +238,14 @@ proc scan-dump-dem { args } {\n # Argument 0 is the type of dump we are searching (rtl, tree, ipa)\n # Argument 1 is the regexp to match.\n # Argument 2 is the suffix for the dump file\n-# Argument 3 handles expected failures and the like\n+# Argument 3 is the suffix of the dump base\n+# Argument 4 handles expected failures and the like\n proc scan-dump-dem-not { args } {\n     global cxxfilt\n     global base_dir\n \n-    if { [llength $args] >= 4 } {\n-\tswitch [dg-process-target [lindex $args 3]] {\n+    if { [llength $args] >= 5 } {\n+\tswitch [dg-process-target [lindex $args 4]] {\n \t    \"S\" { }\n \t    \"N\" { return }\n \t    \"F\" { setup_xfail \"*-*-*\" }\n@@ -248,7 +270,8 @@ proc scan-dump-dem-not { args } {\n     set suf [dump-suffix [lindex $args 2]]\n     set testname \"$testcase scan-[lindex $args 0]-dump-dem-not $suf \\\"$printable_pattern\\\"\"\n     set src [file tail $filename]\n-    set output_file \"[glob -nocomplain $src.[lindex $args 2]]\"\n+    set dumpbase [dump-base $src [lindex $args 3]]\n+    set output_file \"[glob -nocomplain $dumpbase.[lindex $args 2]]\"\n     if { $output_file == \"\" } {\n \tverbose -log \"$testcase: dump file does not exist\"\n \tunresolved \"$testname\""}, {"sha": "68f1ae36fc3007502625096c66b24297fe87ec9c", "filename": "gcc/testsuite/lib/scanipa.exp", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2Flib%2Fscanipa.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2Flib%2Fscanipa.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanipa.exp?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -36,9 +36,11 @@ proc scan-ipa-dump { args } {\n \treturn\n     }\n     if { [llength $args] >= 3 } {\n-\tscan-dump \"ipa\" [lindex $args 0] \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" [lindex $args 2]\n+\tscan-dump \"ipa\" [lindex $args 0] \\\n+\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \"\" [lindex $args 2]\n     } else {\n-\tscan-dump \"ipa\" [lindex $args 0] \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\"\n+\tscan-dump \"ipa\" [lindex $args 0] \\\n+\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \"\"\n     }\n }\n \n@@ -59,10 +61,11 @@ proc scan-ipa-dump-times { args } {\n     }\n     if { [llength $args] >= 4 } {\n \tscan-dump-times \"ipa\" [lindex $args 0] [lindex $args 1] \\\n-\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 2]\" [lindex $args 3]\n+\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 2]\" \"\" \\\n+\t\t\t[lindex $args 3]\n     } else {\n \tscan-dump-times \"ipa\" [lindex $args 0] [lindex $args 1] \\\n-\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 2]\"\n+\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 2]\" \"\"\n     }\n }\n \n@@ -83,10 +86,11 @@ proc scan-ipa-dump-not { args } {\n     }\n     if { [llength $args] >= 3 } {\n \tscan-dump-not \"ipa\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" [lindex $args 2]\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \"\" \\\n+\t\t      [lindex $args 2]\n     } else {\n \tscan-dump-not \"ipa\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\"\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \"\"\n     }\n }\n \n@@ -108,10 +112,11 @@ proc scan-ipa-dump-dem { args } {\n     }\n     if { [llength $args] >= 3 } {\n \tscan-dump-dem \"ipa\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" [lindex $args 2]\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \"\" \\\n+\t\t      [lindex $args 2]\n     } else {\n \tscan-dump-dem \"ipa\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\"\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \"\"\n     }\n }\n \n@@ -132,10 +137,10 @@ proc scan-ipa-dump-dem-not { args } {\n     }\n     if { [llength $args] >= 3 } {\n \tscan-dump-dem-not \"ipa\" [lindex $args 0] \\\n-\t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \\\n+\t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \"\" \\\n \t\t\t  [lindex $args 2]\n     } else {\n \tscan-dump-dem-not \"ipa\" [lindex $args 0] \\\n-\t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\"\n+\t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \"\"\n     }\n }"}, {"sha": "3c8bf64fa768c63728e36260acfec3970c3144bf", "filename": "gcc/testsuite/lib/scanlang.exp", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2Flib%2Fscanlang.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2Flib%2Fscanlang.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanlang.exp?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -36,8 +36,10 @@ proc scan-lang-dump { args } {\n \treturn\n     }\n     if { [llength $args] >= 3 } {\n-\tscan-dump \"lang\" [lindex $args 0] \"\\[0-9\\]\\[0-9\\]\\[0-9\\]l.[lindex $args 1]\" [lindex $args 2]\n+\tscan-dump \"lang\" [lindex $args 0] \\\n+\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]l.[lindex $args 1]\" \"\" [lindex $args 2]\n     } else {\n-\tscan-dump \"lang\" [lindex $args 0] \"\\[0-9\\]\\[0-9\\]\\[0-9\\]l.[lindex $args 1]\"\n+\tscan-dump \"lang\" [lindex $args 0] \\\n+\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]l.[lindex $args 1]\" \"\"\n     }\n }"}, {"sha": "d744e7da6d986074c80363422666d80402562d00", "filename": "gcc/testsuite/lib/scanrtl.exp", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2Flib%2Fscanrtl.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2Flib%2Fscanrtl.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanrtl.exp?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -36,9 +36,11 @@ proc scan-rtl-dump { args } {\n \treturn\n     }\n     if { [llength $args] >= 3 } {\n-\tscan-dump \"rtl\" [lindex $args 0] \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\" [lindex $args 2]\n+\tscan-dump \"rtl\" [lindex $args 0] \\\n+\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\" \"\" [lindex $args 2]\n     } else {\n-\tscan-dump \"rtl\" [lindex $args 0] \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\"\n+\tscan-dump \"rtl\" [lindex $args 0] \\\n+\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\" \"\"\n     }\n }\n \n@@ -61,10 +63,11 @@ proc scan-rtl-dump-times { args } {\n     }\n     if { [llength $args] >= 4 } {\n \tscan-dump-times \"rtl\" [lindex $args 0] [lindex $args 1] \\\n-\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 2]\" [lindex $args 3]\n+\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 2]\" \"\" \\\n+\t\t\t[lindex $args 3]\n     } else {\n \tscan-dump-times \"rtl\" [lindex $args 0] [lindex $args 1] \\\n-\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 2]\"\n+\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 2]\" \"\"\n     }\n }\n \n@@ -87,10 +90,11 @@ proc scan-rtl-dump-not { args } {\n     }\n     if { [llength $args] >= 3 } {\n \tscan-dump-not \"rtl\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\" [lindex $args 2]\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\" \"\" \\\n+\t\t      [lindex $args 2]\n     } else {\n \tscan-dump-not \"rtl\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\"\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\" \"\"\n     }\n }\n \n@@ -114,10 +118,11 @@ proc scan-rtl-dump-dem { args } {\n     }\n     if { [llength $args] >= 3 } {\n \tscan-dump-dem \"rtl\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\" [lindex $args 2]\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\" \"\" \\\n+\t\t      [lindex $args 2]\n     } else {\n \tscan-dump-dem \"rtl\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\"\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\" \"\"\n     }\n }\n \n@@ -141,10 +146,10 @@ proc scan-rtl-dump-dem-not { args } {\n     if { [llength $args] >= 3 } {\n \tscan-dump-dem-not \"rtl\" [lindex $args 0] \\\n \t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\" \\\n-\t\t\t  [lindex $args 2]\n+\t\t\t  \"\" [lindex $args 2]\n     } else {\n \tscan-dump-dem-not \"rtl\" [lindex $args 0] \\\n-\t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\"\n+\t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\" \"\"\n     }\n }\n "}, {"sha": "e66337a0ccfeec8175498f078cd4e128af2cc2a8", "filename": "gcc/testsuite/lib/scantree.exp", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2Flib%2Fscantree.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2Flib%2Fscantree.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscantree.exp?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -36,9 +36,11 @@ proc scan-tree-dump { args } {\n \treturn\n     }\n     if { [llength $args] >= 3 } {\n-\tscan-dump \"tree\" [lindex $args 0] \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" [lindex $args 2]\n+\tscan-dump \"tree\" [lindex $args 0] \\\n+\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \"\" [lindex $args 2]\n     } else {\n-\tscan-dump \"tree\" [lindex $args 0] \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\"\n+\tscan-dump \"tree\" [lindex $args 0] \\\n+\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \"\"\n     }\n }\n \n@@ -59,10 +61,11 @@ proc scan-tree-dump-times { args } {\n     }\n     if { [llength $args] >= 4 } {\n \tscan-dump-times \"tree\" [lindex $args 0] [lindex $args 1] \\\n-\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 2]\" [lindex $args 3]\n+\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 2]\" \"\" \\\n+\t\t\t[lindex $args 3]\n     } else {\n \tscan-dump-times \"tree\" [lindex $args 0] [lindex $args 1] \\\n-\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 2]\"\n+\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 2]\" \"\"\n     }\n }\n \n@@ -83,10 +86,11 @@ proc scan-tree-dump-not { args } {\n     }\n     if { [llength $args] >= 3 } {\n \tscan-dump-not \"tree\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" [lindex $args 2]\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \"\" \\\n+\t\t      [lindex $args 2]\n     } else {\n \tscan-dump-not \"tree\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\"\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \"\"\n     }\n }\n \n@@ -108,10 +112,11 @@ proc scan-tree-dump-dem { args } {\n     }\n     if { [llength $args] >= 3 } {\n \tscan-dump-dem \"tree\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" [lindex $args 2]\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \"\" \\\n+\t\t      [lindex $args 2]\n     } else {\n \tscan-dump-dem \"tree\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\"\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \"\"\n     }\n }\n \n@@ -133,9 +138,9 @@ proc scan-tree-dump-dem-not { args } {\n     if { [llength $args] >= 3 } {\n \tscan-dump-dem-not \"tree\" [lindex $args 0] \\\n \t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \\\n-\t\t\t  [lindex $args 2]\n+\t\t\t  \"\" [lindex $args 2]\n     } else {\n \tscan-dump-dem-not \"tree\" [lindex $args 0] \\\n-\t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\"\n+\t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \"\"\n     }\n }"}, {"sha": "5ad40bf034099817b5c800d3469d252a57fe491b", "filename": "gcc/testsuite/lib/scanwpaipa.exp", "status": "added", "additions": 147, "deletions": 0, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2Flib%2Fscanwpaipa.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/gcc%2Ftestsuite%2Flib%2Fscanwpaipa.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanwpaipa.exp?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -0,0 +1,147 @@\n+#   Copyright (C) 2018 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# Various utilities for scanning ipa dump output, used by gcc-dg.exp and\n+# g++-dg.exp.\n+\n+load_lib scandump.exp\n+\n+# Utility for scanning compiler result, invoked via dg-final.\n+# Call pass if pattern is present, otherwise fail.\n+#\n+# Argument 0 is the regexp to match\n+# Argument 1 is the name of the dumped ipa pass\n+# Argument 2 handles expected failures and the like\n+proc scan-wpa-ipa-dump { args } {\n+\n+    if { [llength $args] < 2 } {\n+\terror \"scan-wpa-ipa-dump: too few arguments\"\n+\treturn\n+    }\n+    if { [llength $args] > 3 } {\n+\terror \"scan-wpa-ipa-dump: too many arguments\"\n+\treturn\n+    }\n+    if { [llength $args] >= 3 } {\n+\tscan-dump \"wpa-ipa\" [lindex $args 0] \\\n+\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".exe.wpa\" \\\n+\t\t  [lindex $args 2]\n+    } else {\n+\tscan-dump \"wpa-ipa\" [lindex $args 0] \\\n+\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".exe.wpa\"\n+    }\n+}\n+\n+# Call pass if pattern is present given number of times, otherwise fail.\n+# Argument 0 is the regexp to match\n+# Argument 1 is number of times the regexp must be found\n+# Argument 2 is the name of the dumped ipa pass\n+# Argument 3 handles expected failures and the like\n+proc scan-wpa-ipa-dump-times { args } {\n+\n+    if { [llength $args] < 3 } {\n+\terror \"scan-wpa-ipa-dump-times: too few arguments\"\n+\treturn\n+    }\n+    if { [llength $args] > 4 } {\n+\terror \"scan-wpa-ipa-dump-times: too many arguments\"\n+\treturn\n+    }\n+    if { [llength $args] >= 4 } {\n+\tscan-dump-times \"wpa-ipa\" [lindex $args 0] [lindex $args 1] \\\n+\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 2]\" \".exe.wpa\" \\\n+\t\t\t[lindex $args 3]\n+    } else {\n+\tscan-dump-times \"wpa-ipa\" [lindex $args 0] [lindex $args 1] \\\n+\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 2]\" \".exe.wpa\"\n+    }\n+}\n+\n+# Call pass if pattern is not present, otherwise fail.\n+#\n+# Argument 0 is the regexp to match\n+# Argument 1 is the name of the dumped ipa pass\n+# Argument 2 handles expected failures and the like\n+proc scan-wpa-ipa-dump-not { args } {\n+\n+    if { [llength $args] < 2 } {\n+\terror \"scan-wpa-ipa-dump-not: too few arguments\"\n+\treturn\n+    }\n+    if { [llength $args] > 3 } {\n+\terror \"scan-wpa-ipa-dump-not: too many arguments\"\n+\treturn\n+    }\n+    if { [llength $args] >= 3 } {\n+\tscan-dump-not \"wpa-ipa\" [lindex $args 0] \\\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".exe.wpa\" \\\n+\t\t      [lindex $args 2]\n+    } else {\n+\tscan-dump-not \"wpa-ipa\" [lindex $args 0] \\\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".exe.wpa\"\n+    }\n+}\n+\n+# Utility for scanning demangled compiler result, invoked via dg-final.\n+# Call pass if pattern is present, otherwise fail.\n+#\n+# Argument 0 is the regexp to match\n+# Argument 1 is the name of the dumped ipa pass\n+# Argument 2 handles expected failures and the like\n+proc scan-wpa-ipa-dump-dem { args } {\n+\n+    if { [llength $args] < 2 } {\n+\terror \"scan-wpa-ipa-dump-dem: too few arguments\"\n+\treturn\n+    }\n+    if { [llength $args] > 3 } {\n+\terror \"scan-wpa-ipa-dump-dem: too many arguments\"\n+\treturn\n+    }\n+    if { [llength $args] >= 3 } {\n+\tscan-dump-dem \"wpa-ipa\" [lindex $args 0] \\\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".exe.wpa\" \\\n+\t\t      [lindex $args 2]\n+    } else {\n+\tscan-dump-dem \"wpa-ipa\" [lindex $args 0] \\\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".exe.wpa\"\n+    }\n+}\n+\n+# Call pass if demangled pattern is not present, otherwise fail.\n+#\n+# Argument 0 is the regexp to match\n+# Argument 1 is the name of the dumped ipa pass\n+# Argument 2 handles expected failures and the like\n+proc scan-wpa-ipa-dump-dem-not { args } {\n+\n+    if { [llength $args] < 2 } {\n+\terror \"scan-wpa-ipa-dump-dem-not: too few arguments\"\n+\treturn\n+    }\n+    if { [llength $args] > 3 } {\n+\terror \"scan-wpa-ipa-dump-dem-not: too many arguments\"\n+\treturn\n+    }\n+    if { [llength $args] >= 3 } {\n+\tscan-dump-dem-not \"wpa-ipa\" [lindex $args 0] \\\n+\t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".exe.wpa\" \\\n+\t\t\t  [lindex $args 2]\n+    } else {\n+\tscan-dump-dem-not \"wpa-ipa\" [lindex $args 0] \\\n+\t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".exe.wpa\"\n+    }\n+}"}, {"sha": "70761047cbc5308bfe1011e4f8c5feb2b6b19a3a", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -1,3 +1,8 @@\n+2018-05-02  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR testsuite/85106\n+\t* testsuite/lib/libatomic.exp: Include scanwpaipa.exp.\n+\n 2018-04-24  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure: Regenerated."}, {"sha": "9737758f5495fac69a6ae64b2b5fdab3a381dec9", "filename": "libatomic/testsuite/lib/libatomic.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/libatomic%2Ftestsuite%2Flib%2Flibatomic.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/libatomic%2Ftestsuite%2Flib%2Flibatomic.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Ftestsuite%2Flib%2Flibatomic.exp?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -38,6 +38,7 @@ load_gcc_lib scanlang.exp\n load_gcc_lib scanrtl.exp\n load_gcc_lib scantree.exp\n load_gcc_lib scanipa.exp\n+load_gcc_lib scanwpaipa.exp\n load_gcc_lib multiline.exp\n load_gcc_lib prune.exp\n load_gcc_lib target-libpath.exp"}, {"sha": "e9799b132e04cd0ef595e021c6bb5001d9ae4125", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -1,3 +1,8 @@\n+2018-05-02  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR testsuite/85106\n+\t* testsuite/lib/libgomp.exp: Include scanwpaipa.exp.\n+\n 2018-04-29  Julian Brown  <julian@codesourcery.com>\n \t    Tom de Vries  <tom@codesourcery.com>\n "}, {"sha": "15c459abe141044225e8dc12abc283943510fedf", "filename": "libgomp/testsuite/lib/libgomp.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -30,6 +30,7 @@ load_gcc_lib scanlang.exp\n load_gcc_lib scanrtl.exp\n load_gcc_lib scantree.exp\n load_gcc_lib scanipa.exp\n+load_gcc_lib scanwpaipa.exp\n load_gcc_lib timeout-dg.exp\n load_gcc_lib torture-options.exp\n load_gcc_lib fortran-modules.exp"}, {"sha": "dc729709af7f4b5017e782da6bea033b6bf2a997", "filename": "libitm/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -1,3 +1,8 @@\n+2018-05-02  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR testsuite/85106\n+\t* testsuite/lib/libitm.exp: Include scanwpaipa.exp.\n+\n 2018-04-24  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/x86/sjlj.S (_ITM_beginTransaction): Add"}, {"sha": "e9f5f48fd806f7062abfb696f120d0d323791203", "filename": "libitm/testsuite/lib/libitm.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/libitm%2Ftestsuite%2Flib%2Flibitm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/libitm%2Ftestsuite%2Flib%2Flibitm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Ftestsuite%2Flib%2Flibitm.exp?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -44,6 +44,7 @@ load_gcc_lib scanlang.exp\n load_gcc_lib scanrtl.exp\n load_gcc_lib scantree.exp\n load_gcc_lib scanipa.exp\n+load_gcc_lib scanwpaipa.exp\n load_gcc_lib timeout-dg.exp\n load_gcc_lib torture-options.exp\n load_gcc_lib fortran-modules.exp"}, {"sha": "b76651dcc79a5f63d091e2d044c3a9fc44cc2404", "filename": "libvtv/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/libvtv%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/libvtv%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FChangeLog?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -1,3 +1,8 @@\n+2018-05-02  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR testsuite/85106\n+\t* testsuite/lib/libvtv.exp: Include scanwpaipa.exp.\n+\n 2018-04-24  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure: Regenerated."}, {"sha": "540b8adde3b14b428e2dc3740edfd46393c4d7e1", "filename": "libvtv/testsuite/lib/libvtv.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/libvtv%2Ftestsuite%2Flib%2Flibvtv.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3c13c181a168ce3e5e95e6c0fa27ae3730b820/libvtv%2Ftestsuite%2Flib%2Flibvtv.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Ftestsuite%2Flib%2Flibvtv.exp?ref=6c3c13c181a168ce3e5e95e6c0fa27ae3730b820", "patch": "@@ -43,6 +43,7 @@ load_gcc_lib scandump.exp\n load_gcc_lib scanrtl.exp\n load_gcc_lib scantree.exp\n load_gcc_lib scanipa.exp\n+load_gcc_lib scanwpaipa.exp\n load_gcc_lib timeout-dg.exp\n load_gcc_lib torture-options.exp\n load_gcc_lib fortran-modules.exp"}]}