{"sha": "db113eda6da16755879ae51d5b9c8f23e997779c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIxMTNlZGE2ZGExNjc1NTg3OWFlNTFkNWI5YzhmMjNlOTk3Nzc5Yw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2013-06-08T16:12:07Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2013-06-08T16:12:07Z"}, "message": "type-traits (integral_constant::operator()): Implement N3545.\n\n\t* include/std/type-traits (integral_constant::operator()): Implement\n\tN3545.\n\t* testsuite/20_util/integral_constant/call_operator.cc: New.\n\t* testsuite/20_util/declval/requirements/1_neg.cc: Adjust dg-error\n\tline numbers.\n\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc:\n\tLikewise.\n\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:\n\tLikewise.\n\nFrom-SVN: r199853", "tree": {"sha": "9541db78d44da77cff915dbc78ac05b1c45dc2c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9541db78d44da77cff915dbc78ac05b1c45dc2c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db113eda6da16755879ae51d5b9c8f23e997779c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db113eda6da16755879ae51d5b9c8f23e997779c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db113eda6da16755879ae51d5b9c8f23e997779c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db113eda6da16755879ae51d5b9c8f23e997779c/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "299316ed37671290b5be88a5e69b6e02b5baf864", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/299316ed37671290b5be88a5e69b6e02b5baf864", "html_url": "https://github.com/Rust-GCC/gccrs/commit/299316ed37671290b5be88a5e69b6e02b5baf864"}], "stats": {"total": 61, "additions": 56, "deletions": 5}, "files": [{"sha": "c19899826d35347432a991797533a304e6d8184c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db113eda6da16755879ae51d5b9c8f23e997779c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db113eda6da16755879ae51d5b9c8f23e997779c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=db113eda6da16755879ae51d5b9c8f23e997779c", "patch": "@@ -1,3 +1,15 @@\n+2013-06-08  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/std/type-traits (integral_constant::operator()): Implement\n+\tN3545.\n+\t* testsuite/20_util/integral_constant/call_operator.cc: New.\n+\t* testsuite/20_util/declval/requirements/1_neg.cc: Adjust dg-error\n+\tline numbers.\n+\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc:\n+\tLikewise.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:\n+\tLikewise.\n+\n 2013-06-07  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/abi/post/alpha-linux-gnu/baseline_symbols.txt: Update."}, {"sha": "99d0a5b6b845c14c1054fb4c97ab6f76531da44b", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db113eda6da16755879ae51d5b9c8f23e997779c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db113eda6da16755879ae51d5b9c8f23e997779c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=db113eda6da16755879ae51d5b9c8f23e997779c", "patch": "@@ -60,6 +60,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       typedef _Tp                           value_type;\n       typedef integral_constant<_Tp, __v>   type;\n       constexpr operator value_type() const { return value; }\n+#if __cplusplus > 201103L\n+      constexpr value_type operator()() const { return value; }\n+#endif\n     };\n   \n   template<typename _Tp, _Tp __v>"}, {"sha": "5b5a8eb3daf4c26b98745add0649286c0639116d", "filename": "libstdc++-v3/testsuite/20_util/declval/requirements/1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db113eda6da16755879ae51d5b9c8f23e997779c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db113eda6da16755879ae51d5b9c8f23e997779c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc?ref=db113eda6da16755879ae51d5b9c8f23e997779c", "patch": "@@ -19,7 +19,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 1859 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 1862 }\n \n #include <utility>\n "}, {"sha": "c5b0385240ed3f5c83cd2e8826f546e9e3990c1a", "filename": "libstdc++-v3/testsuite/20_util/integral_constant/call_operator.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db113eda6da16755879ae51d5b9c8f23e997779c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fintegral_constant%2Fcall_operator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db113eda6da16755879ae51d5b9c8f23e997779c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fintegral_constant%2Fcall_operator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fintegral_constant%2Fcall_operator.cc?ref=db113eda6da16755879ae51d5b9c8f23e997779c", "patch": "@@ -0,0 +1,36 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++1y\" }\n+//\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <cassert> //testsuite_hooks.h>\n+\n+typedef std::integral_constant<int, 1>       ic_one;\n+typedef std::integral_constant<int, 0>       ic_zero;\n+typedef std::integral_constant<int, -1>      ic_minus_one;\n+\n+typedef std::integral_constant<bool, true>   ic_true;\n+typedef std::integral_constant<bool, false>  ic_false;\n+\n+static_assert( ic_one{}() == 1, \"1\" );\n+static_assert( ic_zero{}() == 0, \"0\" );\n+static_assert( ic_minus_one{}() == -1, \"-1\" );\n+\n+static_assert( ic_true{}() == true, \"true\" );\n+static_assert( ic_false{}() == false, \"false\" );"}, {"sha": "afb7336c375509aa1071036d482ef49ceb9412ec", "filename": "libstdc++-v3/testsuite/20_util/make_signed/requirements/typedefs_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db113eda6da16755879ae51d5b9c8f23e997779c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db113eda6da16755879ae51d5b9c8f23e997779c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc?ref=db113eda6da16755879ae51d5b9c8f23e997779c", "patch": "@@ -48,5 +48,5 @@ void test01()\n // { dg-error \"required from here\" \"\" { target *-*-* } 40 }\n // { dg-error \"required from here\" \"\" { target *-*-* } 42 }\n \n-// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1601 }\n-// { dg-error \"declaration of\" \"\" { target *-*-* } 1565 }\n+// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1604 }\n+// { dg-error \"declaration of\" \"\" { target *-*-* } 1568 }"}, {"sha": "ba5f5827712ffb9693ec1cc3272f50174e980b0b", "filename": "libstdc++-v3/testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db113eda6da16755879ae51d5b9c8f23e997779c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db113eda6da16755879ae51d5b9c8f23e997779c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc?ref=db113eda6da16755879ae51d5b9c8f23e997779c", "patch": "@@ -48,5 +48,5 @@ void test01()\n // { dg-error \"required from here\" \"\" { target *-*-* } 40 }\n // { dg-error \"required from here\" \"\" { target *-*-* } 42 }\n \n-// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1519 }\n-// { dg-error \"declaration of\" \"\" { target *-*-* } 1483 }\n+// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1522 }\n+// { dg-error \"declaration of\" \"\" { target *-*-* } 1486 }"}]}