{"sha": "de0fef0dd466bc329456b36cccfa6b06768da639", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUwZmVmMGRkNDY2YmMzMjk0NTZiMzZjY2NmYTZiMDY3NjhkYTYzOQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2016-02-26T17:45:37Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2016-02-26T17:45:37Z"}, "message": "[hsa/69674] Make testsuite libgomp.c/for-3.c compile with -m32\n\n2016-02-26  Martin Jambor  <mjambor@suse.cz>\n\n\tpr hsa/69674\n\t* hsa-gen.c (gen_hsa_phi_from_gimple_phi): Use proper hsa type for\n\tpointers.\n\t(gen_hsa_addr): Allow integer constants in TMR_INDEX2.\n\nFrom-SVN: r233750", "tree": {"sha": "743839497b4cf366566149b9a459130984ab8ae0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/743839497b4cf366566149b9a459130984ab8ae0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de0fef0dd466bc329456b36cccfa6b06768da639", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de0fef0dd466bc329456b36cccfa6b06768da639", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de0fef0dd466bc329456b36cccfa6b06768da639", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de0fef0dd466bc329456b36cccfa6b06768da639/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b15e4689e6b6c582c89d57eeb79fedc8b6081aeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b15e4689e6b6c582c89d57eeb79fedc8b6081aeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b15e4689e6b6c582c89d57eeb79fedc8b6081aeb"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "6af840d4d3561ee0400001a38723a979434472dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0fef0dd466bc329456b36cccfa6b06768da639/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0fef0dd466bc329456b36cccfa6b06768da639/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de0fef0dd466bc329456b36cccfa6b06768da639", "patch": "@@ -1,3 +1,10 @@\n+2016-02-26  Martin Jambor  <mjambor@suse.cz>\n+\n+\tpr hsa/69674\n+\t* hsa-gen.c (gen_hsa_phi_from_gimple_phi): Use proper hsa type for\n+\tpointers.\n+\t(gen_hsa_addr): Allow integer constants in TMR_INDEX2.\n+\n 2016-02-26  Martin Jambor  <mjambor@suse.cz>\n \n \t* hsa.h (is_a_helper): New overload for hsa_op_immed for"}, {"sha": "5c7744bc0746d7714b5dce9b41e73a28d08cfeb0", "filename": "gcc/hsa-gen.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0fef0dd466bc329456b36cccfa6b06768da639/gcc%2Fhsa-gen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0fef0dd466bc329456b36cccfa6b06768da639/gcc%2Fhsa-gen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa-gen.c?ref=de0fef0dd466bc329456b36cccfa6b06768da639", "patch": "@@ -2105,9 +2105,17 @@ gen_hsa_addr (tree ref, hsa_bb *hbb, HOST_WIDE_INT *output_bitsize = NULL,\n \t}\n       if (TMR_INDEX2 (ref))\n \t{\n-\t  hsa_op_base *disp2 = hsa_cfun->reg_for_gimple_ssa\n-\t    (TMR_INDEX2 (ref))->get_in_type (addrtype, hbb);\n-\t  reg = add_addr_regs_if_needed (reg, as_a <hsa_op_reg *> (disp2), hbb);\n+\t  if (TREE_CODE (TMR_INDEX2 (ref)) == SSA_NAME)\n+\t    {\n+\t      hsa_op_base *disp2 = hsa_cfun->reg_for_gimple_ssa\n+\t\t(TMR_INDEX2 (ref))->get_in_type (addrtype, hbb);\n+\t      reg = add_addr_regs_if_needed (reg, as_a <hsa_op_reg *> (disp2),\n+\t\t\t\t\t     hbb);\n+\t    }\n+\t  else if (TREE_CODE (TMR_INDEX2 (ref)) == INTEGER_CST)\n+\t    offset += wi::to_offset (TMR_INDEX2 (ref));\n+\t  else\n+\t    gcc_unreachable ();\n \t}\n       offset += wi::to_offset (TMR_OFFSET (ref));\n       break;\n@@ -5329,7 +5337,8 @@ gen_hsa_phi_from_gimple_phi (gimple *phi_stmt, hsa_bb *hbb)\n \t      hsa_op_address *addr = gen_hsa_addr (TREE_OPERAND (op, 0),\n \t\t\t\t\t\t   hbb_src);\n \n-\t      hsa_op_reg *dest = new hsa_op_reg (BRIG_TYPE_U64);\n+\t      hsa_op_reg *dest\n+\t\t= new hsa_op_reg (hsa_get_segment_addr_type (BRIG_SEGMENT_FLAT));\n \t      hsa_insn_basic *insn\n \t\t= new hsa_insn_basic (2, BRIG_OPCODE_LDA, BRIG_TYPE_U64,\n \t\t\t\t      dest, addr);"}]}