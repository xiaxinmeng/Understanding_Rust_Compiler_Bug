{"sha": "43566944af69a4299260b1dcc46b5d5147a6bf8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM1NjY5NDRhZjY5YTQyOTkyNjBiMWRjYzQ2YjVkNTE0N2E2YmY4Yg==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@cygnus.com", "date": "1998-09-21T14:23:16Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "1998-09-21T14:23:16Z"}, "message": "expr.h (eh_rtime_match_libfunc): New extern declaration.\n\nMon Sep 21 17:15:26 EDT 1998  Andrew MacLeod  <amacleod@cygnus.com>\n\t* expr.h (eh_rtime_match_libfunc): New extern declaration.\n\t* optabs.c (init_optabs): Set eh_rtime_match_libfunc.\n\t* except.c (start_catch_handler): Use eh_rtime_match_libfunc.\n\t* libgcc2.c (__eh_rtime_match): Always return 0 if the matcher is\n\tNULL. Only include <stdio.h> if inhibit_libc is not defined.\n\nFrom-SVN: r22532", "tree": {"sha": "a43642efc30725d344df8510a724e7c0484f883b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a43642efc30725d344df8510a724e7c0484f883b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43566944af69a4299260b1dcc46b5d5147a6bf8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43566944af69a4299260b1dcc46b5d5147a6bf8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43566944af69a4299260b1dcc46b5d5147a6bf8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43566944af69a4299260b1dcc46b5d5147a6bf8b/comments", "author": null, "committer": null, "parents": [{"sha": "7e8524dca9f8c5a7ad953de46f2d430febe98cb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e8524dca9f8c5a7ad953de46f2d430febe98cb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e8524dca9f8c5a7ad953de46f2d430febe98cb0"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "a0ff2d789511777142f77ee4ea70b974132fb132", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43566944af69a4299260b1dcc46b5d5147a6bf8b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43566944af69a4299260b1dcc46b5d5147a6bf8b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43566944af69a4299260b1dcc46b5d5147a6bf8b", "patch": "@@ -1,3 +1,11 @@\n+Mon Sep 21 17:15:26 EDT 1998  Andrew MacLeod  <amacleod@cygnus.com>\n+\n+\t* expr.h (eh_rtime_match_libfunc): New extern declaration.\n+\t* optabs.c (init_optabs): Set eh_rtime_match_libfunc.\n+\t* except.c (start_catch_handler): Use eh_rtime_match_libfunc.\n+\t* libgcc2.c (__eh_rtime_match): Always return 0 if the matcher is\n+\tNULL. Only include <stdio.h> if inhibit_libc is not defined.\n+\n Mon Sep 21 14:10:51 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* toplev.c (rest_of_compilation): Skip compiling anything with"}, {"sha": "867b4a5bdf6af0504d3e0b04d5ad384e6412398e", "filename": "gcc/except.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43566944af69a4299260b1dcc46b5d5147a6bf8b/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43566944af69a4299260b1dcc46b5d5147a6bf8b/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=43566944af69a4299260b1dcc46b5d5147a6bf8b", "patch": "@@ -1629,9 +1629,8 @@ start_catch_handler (rtime)\n       rtime_address = force_reg (Pmode, rtime_address);\n \n       /* Now issue the call, and branch around handler if needed */\n-      call_rtx = emit_library_call_value \n-        (gen_rtx_SYMBOL_REF (Pmode, \"__eh_rtime_match\"), NULL_RTX, \n-         0, SImode, 1, rtime_address, Pmode);\n+      call_rtx = emit_library_call_value (eh_rtime_match_libfunc, NULL_RTX, \n+                                          0, SImode, 1, rtime_address, Pmode);\n \n       /* Did the function return true? */\n       emit_cmp_insn (call_rtx, const0_rtx, EQ, NULL_RTX,"}, {"sha": "6d8d22a84d3df229087d0a26355f2411b6300bd3", "filename": "gcc/expr.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43566944af69a4299260b1dcc46b5d5147a6bf8b/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43566944af69a4299260b1dcc46b5d5147a6bf8b/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=43566944af69a4299260b1dcc46b5d5147a6bf8b", "patch": "@@ -442,6 +442,7 @@ extern rtx sjpopnthrow_libfunc;\n extern rtx terminate_libfunc;\n extern rtx setjmp_libfunc;\n extern rtx longjmp_libfunc;\n+extern rtx eh_rtime_match_libfunc;\n \n extern rtx eqhf2_libfunc;\n extern rtx nehf2_libfunc;"}, {"sha": "586aa2c7a6d92e5ba24fc51a5febc861f92bc056", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43566944af69a4299260b1dcc46b5d5147a6bf8b/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43566944af69a4299260b1dcc46b5d5147a6bf8b/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=43566944af69a4299260b1dcc46b5d5147a6bf8b", "patch": "@@ -3058,7 +3058,9 @@ __empty ()\n /* Include definitions of EH context and table layout */\n \n #include \"eh-common.h\"\n+#ifndef inhibit_libc\n #include <stdio.h>\n+#endif\n \n /* This is a safeguard for dynamic handler chain. */\n \n@@ -3365,13 +3367,13 @@ __eh_rtime_match (void *rtime)\n \n   info = *(__get_eh_info ());\n   matcher = ((__eh_info *)info)->match_function;\n-#ifndef inhibit_libc\n   if (! matcher)\n     {\n+#ifndef inhibit_libc\n       fprintf (stderr, \"Internal Compiler Bug: No runtime type matcher.\");\n+#endif\n       return 0;\n     }\n-#endif\n   ret = (*matcher) (info, rtime, (void *)0);\n   return (ret != NULL);\n }"}, {"sha": "2157f3f87847a50bb45986f4524c59aa9f5a343e", "filename": "gcc/optabs.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43566944af69a4299260b1dcc46b5d5147a6bf8b/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43566944af69a4299260b1dcc46b5d5147a6bf8b/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=43566944af69a4299260b1dcc46b5d5147a6bf8b", "patch": "@@ -124,6 +124,7 @@ rtx sjpopnthrow_libfunc;\n rtx terminate_libfunc;\n rtx setjmp_libfunc;\n rtx longjmp_libfunc;\n+rtx eh_rtime_match_libfunc;\n \n rtx eqhf2_libfunc;\n rtx nehf2_libfunc;\n@@ -4296,6 +4297,7 @@ init_optabs ()\n   sjthrow_libfunc = gen_rtx_SYMBOL_REF (Pmode, \"__sjthrow\");\n   sjpopnthrow_libfunc = gen_rtx_SYMBOL_REF (Pmode, \"__sjpopnthrow\");\n   terminate_libfunc = gen_rtx_SYMBOL_REF (Pmode, \"__terminate\");\n+  eh_rtime_match_libfunc = gen_rtx_SYMBOL_REF (Pmode, \"__eh_rtime_match\");\n #ifndef DONT_USE_BUILTIN_SETJMP\n   setjmp_libfunc = gen_rtx_SYMBOL_REF (Pmode, \"__builtin_setjmp\");\n   longjmp_libfunc = gen_rtx_SYMBOL_REF (Pmode, \"__builtin_longjmp\");"}]}