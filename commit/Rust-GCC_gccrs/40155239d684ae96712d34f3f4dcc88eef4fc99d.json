{"sha": "40155239d684ae96712d34f3f4dcc88eef4fc99d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAxNTUyMzlkNjg0YWU5NjcxMmQzNGYzZjRkY2M4OGVlZjRmYzk5ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-11-20T08:34:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-11-20T08:34:43Z"}, "message": "re PR middle-end/54921 (wrong code with -Os -fno-omit-frame-pointer -fsched2-use-superblocks -fstack-protector -ftree-slp-vectorize)\n\n\tPR rtl-optimization/54921\n\t* cselib.h (fp_setter_insn): New prototype.\n\t* cselib.c (fp_setter_insn): New function.\n\t(cselib_process_insn): If frame_pointer_needed,\n\tcall cselib_invalidate_rtx (stack_pointer_rtx) after\n\tprocessing a frame pointer setter.\n\t* var-tracking.c (fp_setter): Removed.\n\t(vt_initialize): Use fp_setter_insn instead of fp_setter.\n\n\t* gcc.dg/pr54921.c: New test.\n\nFrom-SVN: r193647", "tree": {"sha": "b8e399f48378d1d27ec4ce799592476990e6187c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8e399f48378d1d27ec4ce799592476990e6187c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40155239d684ae96712d34f3f4dcc88eef4fc99d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40155239d684ae96712d34f3f4dcc88eef4fc99d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40155239d684ae96712d34f3f4dcc88eef4fc99d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40155239d684ae96712d34f3f4dcc88eef4fc99d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4ced1d6de8b7ad914c4ea6fdb3121487d298c9e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ced1d6de8b7ad914c4ea6fdb3121487d298c9e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ced1d6de8b7ad914c4ea6fdb3121487d298c9e0"}], "stats": {"total": 116, "additions": 80, "deletions": 36}, "files": [{"sha": "d3b02002f01f54a97f375e372401d7954ff8dbc3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40155239d684ae96712d34f3f4dcc88eef4fc99d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40155239d684ae96712d34f3f4dcc88eef4fc99d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40155239d684ae96712d34f3f4dcc88eef4fc99d", "patch": "@@ -1,3 +1,14 @@\n+2012-11-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/54921\n+\t* cselib.h (fp_setter_insn): New prototype.\n+\t* cselib.c (fp_setter_insn): New function.\n+\t(cselib_process_insn): If frame_pointer_needed,\n+\tcall cselib_invalidate_rtx (stack_pointer_rtx) after\n+\tprocessing a frame pointer setter.\n+\t* var-tracking.c (fp_setter): Removed.\n+\t(vt_initialize): Use fp_setter_insn instead of fp_setter.\n+\n 2012-11-19  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000.md (movdf_hardfloat32): Reorder move"}, {"sha": "28f8d0724380f250a9c178f9265a309cb379c584", "filename": "gcc/cselib.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40155239d684ae96712d34f3f4dcc88eef4fc99d/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40155239d684ae96712d34f3f4dcc88eef4fc99d/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=40155239d684ae96712d34f3f4dcc88eef4fc99d", "patch": "@@ -2593,6 +2593,28 @@ cselib_record_sets (rtx insn)\n     }\n }\n \n+/* Return true if INSN in the prologue initializes hard_frame_pointer_rtx.  */\n+\n+bool\n+fp_setter_insn (rtx insn)\n+{\n+  rtx expr, pat = NULL_RTX;\n+\n+  if (!RTX_FRAME_RELATED_P (insn))\n+    return false;\n+\n+  expr = find_reg_note (insn, REG_FRAME_RELATED_EXPR, NULL_RTX);\n+  if (expr)\n+    pat = XEXP (expr, 0);\n+  if (!modified_in_p (hard_frame_pointer_rtx, pat ? pat : insn))\n+    return false;\n+\n+  /* Don't return true for frame pointer restores in the epilogue.  */\n+  if (find_reg_note (insn, REG_CFA_RESTORE, hard_frame_pointer_rtx))\n+    return false;\n+  return true;\n+}\n+\n /* Record the effects of INSN.  */\n \n void\n@@ -2651,6 +2673,14 @@ cselib_process_insn (rtx insn)\n       if (GET_CODE (XEXP (x, 0)) == CLOBBER)\n \tcselib_invalidate_rtx (XEXP (XEXP (x, 0), 0));\n \n+  /* On setter of the hard frame pointer if frame_pointer_needed,\n+     invalidate stack_pointer_rtx, so that sp and {,h}fp based\n+     VALUEs are distinct.  */\n+  if (reload_completed\n+      && frame_pointer_needed\n+      && fp_setter_insn (insn))\n+    cselib_invalidate_rtx (stack_pointer_rtx);\n+\n   cselib_current_insn = NULL_RTX;\n \n   if (n_useless_values > MAX_USELESS_VALUES"}, {"sha": "b717c952f4ffbc054aa274f5cbe6b0eb6b5d87b1", "filename": "gcc/cselib.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40155239d684ae96712d34f3f4dcc88eef4fc99d/gcc%2Fcselib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40155239d684ae96712d34f3f4dcc88eef4fc99d/gcc%2Fcselib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.h?ref=40155239d684ae96712d34f3f4dcc88eef4fc99d", "patch": "@@ -78,6 +78,7 @@ extern void cselib_init (int);\n extern void cselib_clear_table (void);\n extern void cselib_finish (void);\n extern void cselib_process_insn (rtx);\n+extern bool fp_setter_insn (rtx);\n extern enum machine_mode cselib_reg_set_mode (const_rtx);\n extern int rtx_equal_for_cselib_p (rtx, rtx);\n extern int references_value_p (const_rtx, int);"}, {"sha": "46eb0cde84301e295ad0ca055756466b0bee2f1c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40155239d684ae96712d34f3f4dcc88eef4fc99d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40155239d684ae96712d34f3f4dcc88eef4fc99d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=40155239d684ae96712d34f3f4dcc88eef4fc99d", "patch": "@@ -1,3 +1,8 @@\n+2012-11-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/54921\n+\t* gcc.dg/pr54921.c: New test.\n+\n 2012-11-19  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.target/i386/pr55359.c: New test."}, {"sha": "897877aa00ddb9b67aaab16aaeb70d2477918c10", "filename": "gcc/testsuite/gcc.dg/pr54921.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40155239d684ae96712d34f3f4dcc88eef4fc99d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr54921.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40155239d684ae96712d34f3f4dcc88eef4fc99d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr54921.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr54921.c?ref=40155239d684ae96712d34f3f4dcc88eef4fc99d", "patch": "@@ -0,0 +1,32 @@\n+/* PR rtl-optimization/54921 */\n+/* { dg-do run } */\n+/* { dg-options \"-Os -fno-omit-frame-pointer -fsched2-use-superblocks -ftree-slp-vectorize\" } */\n+/* { dg-additional-options \"-fstack-protector\" { target fstack_protector } } */\n+\n+struct A\n+{\n+  int a;\n+  char b[32];\n+} a, b;\n+\n+__attribute__((noinline, noclone))\n+struct A\n+bar (int x)\n+{\n+  struct A r;\n+  static int n;\n+  r.a = ++n;\n+  __builtin_memset (r.b, 0, sizeof (r.b));\n+  r.b[0] = x;\n+  return r;\n+}\n+\n+int\n+main ()\n+{\n+  a = bar (3);\n+  b = bar (4);\n+  if (a.a != 1 || a.b[0] != 3 || b.a != 2 || b.b[0] != 4)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "f5ba115bcfecf3bb84c4eb2103b459d9ecad7a28", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 1, "deletions": 36, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40155239d684ae96712d34f3f4dcc88eef4fc99d/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40155239d684ae96712d34f3f4dcc88eef4fc99d/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=40155239d684ae96712d34f3f4dcc88eef4fc99d", "patch": "@@ -9522,40 +9522,6 @@ vt_add_function_parameters (void)\n     }\n }\n \n-/* Return true if INSN in the prologue initializes hard_frame_pointer_rtx.  */\n-\n-static bool\n-fp_setter (rtx insn)\n-{\n-  rtx pat = PATTERN (insn);\n-  if (RTX_FRAME_RELATED_P (insn))\n-    {\n-      rtx expr = find_reg_note (insn, REG_FRAME_RELATED_EXPR, NULL_RTX);\n-      if (expr)\n-\tpat = XEXP (expr, 0);\n-    }\n-  if (GET_CODE (pat) == SET)\n-    {\n-      if (SET_DEST (pat) != hard_frame_pointer_rtx)\n-\treturn false;\n-    }\n-  else if (GET_CODE (pat) == PARALLEL)\n-    {\n-      int i;\n-      for (i = XVECLEN (pat, 0) - 1; i >= 0; i--)\n-\tif (GET_CODE (XVECEXP (pat, 0, i)) == SET\n-\t    && SET_DEST (XVECEXP (pat, 0, i)) == hard_frame_pointer_rtx)\n-\t  break;\n-      if (i < 0)\n-\treturn false;\n-    }\n-  else\n-    return false;\n-  if (find_reg_note (insn, REG_CFA_RESTORE, hard_frame_pointer_rtx))\n-    return false;\n-  return true;\n-}\n-\n /* Initialize cfa_base_rtx, create a preserved VALUE for it and\n    ensure it isn't flushed during cselib_reset_table.\n    Can be called only if frame_pointer_rtx resp. arg_pointer_rtx\n@@ -9859,8 +9825,7 @@ vt_initialize (void)\n \n \t\t  if (fp_cfa_offset != -1\n \t\t      && hard_frame_pointer_adjustment == -1\n-\t\t      && RTX_FRAME_RELATED_P (insn)\n-\t\t      && fp_setter (insn))\n+\t\t      && fp_setter_insn (insn))\n \t\t    {\n \t\t      vt_init_cfa_base ();\n \t\t      hard_frame_pointer_adjustment = fp_cfa_offset;"}]}