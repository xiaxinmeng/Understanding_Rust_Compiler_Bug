{"sha": "73db71375f4cb5ef019e572a9fe0bd26d47ca0db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNkYjcxMzc1ZjRjYjVlZjAxOWU1NzJhOWZlMGJkMjZkNDdjYTBkYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-06-04T02:28:40Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-06-04T02:28:40Z"}, "message": "alpha.c (reg_or_0_operand): Use CONST0_RTX.\n\n        * config/alpha/alpha.c (reg_or_0_operand): Use CONST0_RTX.\n        (const0_operand): New.\n        (reg_or_fp0_operand, fp0_operand): Remove.\n        * config/alpha/alpha.h (PREDICATE_CODES): Update.\n        * config/alpha/alpha-protos.h: Update.\n        * config/alpha/alpha.md: Replace all uses of reg_or_fp0_operand\n        and fp0_operand with reg_or_0_operand and const0_operand.\n\nFrom-SVN: r54226", "tree": {"sha": "42870c0775a98554af5bae5e3589a845b8337bb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42870c0775a98554af5bae5e3589a845b8337bb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73db71375f4cb5ef019e572a9fe0bd26d47ca0db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73db71375f4cb5ef019e572a9fe0bd26d47ca0db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73db71375f4cb5ef019e572a9fe0bd26d47ca0db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73db71375f4cb5ef019e572a9fe0bd26d47ca0db/comments", "author": null, "committer": null, "parents": [{"sha": "a6f7c915fe0d5e0eaef3c7540a905029ffb35089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6f7c915fe0d5e0eaef3c7540a905029ffb35089", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6f7c915fe0d5e0eaef3c7540a905029ffb35089"}], "stats": {"total": 320, "additions": 159, "deletions": 161}, "files": [{"sha": "532d0f7596554cddb0f580a1192f2895877db6e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73db71375f4cb5ef019e572a9fe0bd26d47ca0db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73db71375f4cb5ef019e572a9fe0bd26d47ca0db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73db71375f4cb5ef019e572a9fe0bd26d47ca0db", "patch": "@@ -1,3 +1,13 @@\n+2002-06-03  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.c (reg_or_0_operand): Use CONST0_RTX.\n+\t(const0_operand): New.\n+\t(reg_or_fp0_operand, fp0_operand): Remove.\n+\t* config/alpha/alpha.h (PREDICATE_CODES): Update.\n+\t* config/alpha/alpha-protos.h: Update.\n+\t* config/alpha/alpha.md: Replace all uses of reg_or_fp0_operand\n+\tand fp0_operand with reg_or_0_operand and const0_operand.\n+\n 2002-06-03  Dan Nicolaescu  <dann@godzilla.ics.uci.edu>\n \n \t* alias.c (nonoverlapping_memrefs_p): Fix off by one error."}, {"sha": "5f58b34c6a9f79d338117c280e878163ddc937a9", "filename": "gcc/config/alpha/alpha-protos.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73db71375f4cb5ef019e572a9fe0bd26d47ca0db/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73db71375f4cb5ef019e572a9fe0bd26d47ca0db/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha-protos.h?ref=73db71375f4cb5ef019e572a9fe0bd26d47ca0db", "patch": "@@ -47,8 +47,7 @@ extern int or_operand PARAMS ((rtx, enum machine_mode));\n extern int mode_width_operand PARAMS ((rtx, enum machine_mode));\n extern int mode_mask_operand PARAMS ((rtx, enum machine_mode));\n extern int mul8_operand PARAMS ((rtx, enum machine_mode));\n-extern int fp0_operand PARAMS ((rtx, enum machine_mode));\n-extern int reg_or_fp0_operand PARAMS ((rtx, enum machine_mode));\n+extern int const0_operand PARAMS ((rtx, enum machine_mode));\n extern int hard_fp_register_operand PARAMS ((rtx, enum machine_mode));\n extern int hard_int_register_operand PARAMS ((rtx, enum machine_mode));\n extern int reg_or_cint_operand PARAMS ((rtx, enum machine_mode));"}, {"sha": "91cbc12607680d1b66143cc327f70fc4f4df17da", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73db71375f4cb5ef019e572a9fe0bd26d47ca0db/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73db71375f4cb5ef019e572a9fe0bd26d47ca0db/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=73db71375f4cb5ef019e572a9fe0bd26d47ca0db", "patch": "@@ -581,7 +581,7 @@ reg_or_0_operand (op, mode)\n       register rtx op;\n       enum machine_mode mode;\n {\n-  return op == const0_rtx || register_operand (op, mode);\n+  return op == CONST0_RTX (mode) || register_operand (op, mode);\n }\n \n /* Return 1 if OP is a constant in the range of 0-63 (for a shift) or\n@@ -748,25 +748,14 @@ mul8_operand (op, mode)\n \t  && (INTVAL (op) & 7) == 0);\n }\n \n-/* Return 1 if OP is the constant zero in floating-point.  */\n+/* Return 1 if OP is the zero constant for MODE.  */\n \n int\n-fp0_operand (op, mode)\n+const0_operand (op, mode)\n      register rtx op;\n      enum machine_mode mode;\n {\n-  return (GET_MODE (op) == mode\n-\t  && GET_MODE_CLASS (mode) == MODE_FLOAT && op == CONST0_RTX (mode));\n-}\n-\n-/* Return 1 if OP is the floating-point constant zero or a register.  */\n-\n-int\n-reg_or_fp0_operand (op, mode)\n-     register rtx op;\n-     enum machine_mode mode;\n-{\n-  return fp0_operand (op, mode) || register_operand (op, mode);\n+  return op == CONST0_RTX (mode);\n }\n \n /* Return 1 if OP is a hard floating-point register.  */"}, {"sha": "a969a6cbd95713d50c70bd35ecc70b9df2017b50", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73db71375f4cb5ef019e572a9fe0bd26d47ca0db/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73db71375f4cb5ef019e572a9fe0bd26d47ca0db/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=73db71375f4cb5ef019e572a9fe0bd26d47ca0db", "patch": "@@ -1919,7 +1919,8 @@ do {\t\t\t\t\t\t\\\n /* Define the codes that are matched by predicates in alpha.c.  */\n \n #define PREDICATE_CODES \t\t\t\t\t\t\\\n-  {\"reg_or_0_operand\", {SUBREG, REG, CONST_INT}},\t\t\t\\\n+  {\"reg_or_0_operand\", {SUBREG, REG, CONST_INT, CONST_DOUBLE,\t\t\\\n+\t\t\tCONST_VECTOR}},\t\t\t\t\t\\\n   {\"reg_or_6bit_operand\", {SUBREG, REG, CONST_INT}},\t\t\t\\\n   {\"reg_or_8bit_operand\", {SUBREG, REG, CONST_INT}},\t\t\t\\\n   {\"cint8_operand\", {CONST_INT}},\t\t\t\t\t\\\n@@ -1932,14 +1933,13 @@ do {\t\t\t\t\t\t\\\n   {\"mode_mask_operand\", {CONST_INT}},\t\t\t\t\t\\\n   {\"mul8_operand\", {CONST_INT}},\t\t\t\t\t\\\n   {\"mode_width_operand\", {CONST_INT}},\t\t\t\t\t\\\n-  {\"reg_or_fp0_operand\", {SUBREG, REG, CONST_DOUBLE}},\t\t\t\\\n   {\"alpha_comparison_operator\", {EQ, LE, LT, LEU, LTU}},\t\t\\\n   {\"alpha_zero_comparison_operator\", {EQ, NE, LE, LT, LEU, LTU}},\t\\\n   {\"alpha_swapped_comparison_operator\", {EQ, GE, GT, GEU, GTU}},\t\\\n   {\"signed_comparison_operator\", {EQ, NE, LE, LT, GE, GT}},\t\t\\\n   {\"alpha_fp_comparison_operator\", {EQ, LE, LT, UNORDERED}},\t\t\\\n   {\"divmod_operator\", {DIV, MOD, UDIV, UMOD}},\t\t\t\t\\\n-  {\"fp0_operand\", {CONST_DOUBLE}},\t\t\t\t\t\\\n+  {\"const0_operand\", {CONST_INT, CONST_DOUBLE, CONST_VECTOR}},\t\t\\\n   {\"current_file_function_operand\", {SYMBOL_REF}},\t\t\t\\\n   {\"direct_call_operand\", {SYMBOL_REF}},\t\t\t\t\\\n   {\"local_symbolic_operand\", {SYMBOL_REF, CONST, LABEL_REF}},\t\t\\"}, {"sha": "d5d22a2b69471b0ad1f577279fa300385626c6f0", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 141, "deletions": 141, "changes": 282, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73db71375f4cb5ef019e572a9fe0bd26d47ca0db/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73db71375f4cb5ef019e572a9fe0bd26d47ca0db/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=73db71375f4cb5ef019e572a9fe0bd26d47ca0db", "patch": "@@ -2096,35 +2096,35 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"abssf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(abs:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(abs:SF (match_operand:SF 1 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"cpys $f31,%R1,%0\"\n   [(set_attr \"type\" \"fcpys\")])\n \n (define_insn \"*nabssf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(neg:SF (abs:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))))]\n+\t(neg:SF (abs:SF (match_operand:SF 1 \"reg_or_0_operand\" \"fG\"))))]\n   \"TARGET_FP\"\n   \"cpysn $f31,%R1,%0\"\n   [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"absdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(abs:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(abs:DF (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"cpys $f31,%R1,%0\"\n   [(set_attr \"type\" \"fcpys\")])\n \n (define_insn \"*nabsdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(neg:DF (abs:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\"))))]\n+\t(neg:DF (abs:DF (match_operand:DF 1 \"reg_or_0_operand\" \"fG\"))))]\n   \"TARGET_FP\"\n   \"cpysn $f31,%R1,%0\"\n   [(set_attr \"type\" \"fadd\")])\n \n (define_expand \"abstf2\"\n   [(parallel [(set (match_operand:TF 0 \"register_operand\" \"\")\n-\t\t   (neg:TF (match_operand:TF 1 \"reg_or_fp0_operand\" \"\")))\n+\t\t   (neg:TF (match_operand:TF 1 \"reg_or_0_operand\" \"\")))\n \t      (use (match_dup 2))])]\n   \"TARGET_HAS_XFLOATING_LIBS\"\n {\n@@ -2137,7 +2137,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn_and_split \"*abstf_internal\"\n   [(set (match_operand:TF 0 \"register_operand\" \"=r\")\n-\t(abs:TF (match_operand:TF 1 \"reg_or_fp0_operand\" \"rG\")))\n+\t(abs:TF (match_operand:TF 1 \"reg_or_0_operand\" \"rG\")))\n    (use (match_operand:DI 2 \"register_operand\" \"r\"))]\n   \"TARGET_HAS_XFLOATING_LIBS\"\n   \"#\"\n@@ -2147,21 +2147,21 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"negsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(neg:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(neg:SF (match_operand:SF 1 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"cpysn %R1,%R1,%0\"\n   [(set_attr \"type\" \"fadd\")])\n \n (define_insn \"negdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(neg:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(neg:DF (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"cpysn %R1,%R1,%0\"\n   [(set_attr \"type\" \"fadd\")])\n \n (define_expand \"negtf2\"\n   [(parallel [(set (match_operand:TF 0 \"register_operand\" \"\")\n-\t\t   (neg:TF (match_operand:TF 1 \"reg_or_fp0_operand\" \"\")))\n+\t\t   (neg:TF (match_operand:TF 1 \"reg_or_0_operand\" \"\")))\n \t      (use (match_dup 2))])]\n   \"TARGET_HAS_XFLOATING_LIBS\"\n {\n@@ -2174,7 +2174,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn_and_split \"*negtf_internal\"\n   [(set (match_operand:TF 0 \"register_operand\" \"=r\")\n-\t(neg:TF (match_operand:TF 1 \"reg_or_fp0_operand\" \"rG\")))\n+\t(neg:TF (match_operand:TF 1 \"reg_or_0_operand\" \"rG\")))\n    (use (match_operand:DI 2 \"register_operand\" \"r\"))]\n   \"TARGET_HAS_XFLOATING_LIBS\"\n   \"#\"\n@@ -2184,8 +2184,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"*addsf_ieee\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=&f\")\n-\t(plus:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"%fG\")\n-\t\t (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(plus:SF (match_operand:SF 1 \"reg_or_0_operand\" \"%fG\")\n+\t\t (match_operand:SF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n   \"add%,%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2195,8 +2195,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"addsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(plus:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"%fG\")\n-\t\t (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(plus:SF (match_operand:SF 1 \"reg_or_0_operand\" \"%fG\")\n+\t\t (match_operand:SF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"add%,%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2206,8 +2206,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"*adddf_ieee\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=&f\")\n-\t(plus:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"%fG\")\n-\t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(plus:DF (match_operand:DF 1 \"reg_or_0_operand\" \"%fG\")\n+\t\t (match_operand:DF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n   \"add%-%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2217,8 +2217,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"adddf3\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(plus:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"%fG\")\n-\t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(plus:DF (match_operand:DF 1 \"reg_or_0_operand\" \"%fG\")\n+\t\t (match_operand:DF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"add%-%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2229,8 +2229,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n (define_insn \"*adddf_ext1\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(plus:DF (float_extend:DF\n-\t\t  (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))\n-\t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t\t  (match_operand:SF 1 \"reg_or_0_operand\" \"fG\"))\n+\t\t (match_operand:DF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_fptm < ALPHA_FPTM_SU\"\n   \"add%-%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2241,9 +2241,9 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n (define_insn \"*adddf_ext2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(plus:DF (float_extend:DF\n-\t\t  (match_operand:SF 1 \"reg_or_fp0_operand\" \"%fG\"))\n+\t\t  (match_operand:SF 1 \"reg_or_0_operand\" \"%fG\"))\n \t\t (float_extend:DF\n-\t\t  (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n+\t\t  (match_operand:SF 2 \"reg_or_0_operand\" \"fG\"))))]\n   \"TARGET_FP && alpha_fptm < ALPHA_FPTM_SU\"\n   \"add%-%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2269,7 +2269,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"*cvtql\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=f\")\n-\t(unspec:SI [(match_operand:DI 1 \"reg_or_fp0_operand\" \"fG\")]\n+\t(unspec:SI [(match_operand:DI 1 \"reg_or_0_operand\" \"fG\")]\n \t\t   UNSPEC_CVTQL))]\n   \"TARGET_FP\"\n   \"cvtql%/ %R1,%0\"\n@@ -2279,7 +2279,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn_and_split \"*fix_truncdfsi_ieee\"\n   [(set (match_operand:SI 0 \"memory_operand\" \"=m\")\n-\t(subreg:SI (fix:DI (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")) 0))\n+\t(subreg:SI (fix:DI (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")) 0))\n    (clobber (match_scratch:DI 2 \"=&f\"))\n    (clobber (match_scratch:SI 3 \"=&f\"))]\n   \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n@@ -2294,7 +2294,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn_and_split \"*fix_truncdfsi_internal\"\n   [(set (match_operand:SI 0 \"memory_operand\" \"=m\")\n-\t(subreg:SI (fix:DI (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")) 0))\n+\t(subreg:SI (fix:DI (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")) 0))\n    (clobber (match_scratch:DI 2 \"=f\"))]\n   \"TARGET_FP && alpha_fptm < ALPHA_FPTM_SU\"\n   \"#\"\n@@ -2309,7 +2309,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"*fix_truncdfdi_ieee\"\n   [(set (match_operand:DI 0 \"reg_no_subreg_operand\" \"=&f\")\n-\t(fix:DI (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(fix:DI (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n   \"cvt%-q%/ %R1,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2319,7 +2319,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"fix_truncdfdi2\"\n   [(set (match_operand:DI 0 \"reg_no_subreg_operand\" \"=f\")\n-\t(fix:DI (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(fix:DI (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"cvt%-q%/ %R1,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2332,7 +2332,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n (define_insn_and_split \"*fix_truncsfsi_ieee\"\n   [(set (match_operand:SI 0 \"memory_operand\" \"=m\")\n \t(subreg:SI (fix:DI (float_extend:DF\n-\t\t (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))) 0))\n+\t\t (match_operand:SF 1 \"reg_or_0_operand\" \"fG\"))) 0))\n    (clobber (match_scratch:DI 2 \"=&f\"))\n    (clobber (match_scratch:SI 3 \"=&f\"))]\n   \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n@@ -2348,7 +2348,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n (define_insn_and_split \"*fix_truncsfsi_internal\"\n   [(set (match_operand:SI 0 \"memory_operand\" \"=m\")\n \t(subreg:SI (fix:DI (float_extend:DF\n-\t\t (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))) 0))\n+\t\t (match_operand:SF 1 \"reg_or_0_operand\" \"fG\"))) 0))\n    (clobber (match_scratch:DI 2 \"=f\"))]\n   \"TARGET_FP && alpha_fptm < ALPHA_FPTM_SU\"\n   \"#\"\n@@ -2364,7 +2364,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n (define_insn \"*fix_truncsfdi_ieee\"\n   [(set (match_operand:DI 0 \"reg_no_subreg_operand\" \"=&f\")\n \t(fix:DI (float_extend:DF\n-\t\t (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))))]\n+\t\t (match_operand:SF 1 \"reg_or_0_operand\" \"fG\"))))]\n   \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n   \"cvt%-q%/ %R1,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2375,7 +2375,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n (define_insn \"fix_truncsfdi2\"\n   [(set (match_operand:DI 0 \"reg_no_subreg_operand\" \"=f\")\n \t(fix:DI (float_extend:DF\n-\t\t (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))))]\n+\t\t (match_operand:SF 1 \"reg_or_0_operand\" \"fG\"))))]\n   \"TARGET_FP\"\n   \"cvt%-q%/ %R1,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2502,7 +2502,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"*truncdfsf2_ieee\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=&f\")\n-\t(float_truncate:SF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(float_truncate:SF (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n   \"cvt%-%,%/ %R1,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2512,7 +2512,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"truncdfsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(float_truncate:SF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(float_truncate:SF (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"cvt%-%,%/ %R1,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2554,8 +2554,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"*divsf3_ieee\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=&f\")\n-\t(div:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\")\n-\t\t(match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(div:SF (match_operand:SF 1 \"reg_or_0_operand\" \"fG\")\n+\t\t(match_operand:SF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n   \"div%,%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fdiv\")\n@@ -2566,8 +2566,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"divsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(div:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\")\n-\t\t(match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(div:SF (match_operand:SF 1 \"reg_or_0_operand\" \"fG\")\n+\t\t(match_operand:SF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"div%,%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fdiv\")\n@@ -2578,8 +2578,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"*divdf3_ieee\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=&f\")\n-\t(div:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")\n-\t\t(match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(div:DF (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")\n+\t\t(match_operand:DF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n   \"div%-%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fdiv\")\n@@ -2589,8 +2589,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"divdf3\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(div:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")\n-\t\t(match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(div:DF (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")\n+\t\t(match_operand:DF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"div%-%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fdiv\")\n@@ -2600,8 +2600,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"*divdf_ext1\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(div:DF (float_extend:DF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))\n-\t\t(match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(div:DF (float_extend:DF (match_operand:SF 1 \"reg_or_0_operand\" \"fG\"))\n+\t\t(match_operand:DF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_fptm < ALPHA_FPTM_SU\"\n   \"div%-%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fdiv\")\n@@ -2611,9 +2611,9 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"*divdf_ext2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(div:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")\n+\t(div:DF (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")\n \t\t(float_extend:DF\n-\t\t (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n+\t\t (match_operand:SF 2 \"reg_or_0_operand\" \"fG\"))))]\n   \"TARGET_FP && alpha_fptm < ALPHA_FPTM_SU\"\n   \"div%-%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fdiv\")\n@@ -2623,8 +2623,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"*divdf_ext3\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(div:DF (float_extend:DF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))\n-\t\t(float_extend:DF (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n+\t(div:DF (float_extend:DF (match_operand:SF 1 \"reg_or_0_operand\" \"fG\"))\n+\t\t(float_extend:DF (match_operand:SF 2 \"reg_or_0_operand\" \"fG\"))))]\n   \"TARGET_FP && alpha_fptm < ALPHA_FPTM_SU\"\n   \"div%-%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fdiv\")\n@@ -2641,8 +2641,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"*mulsf3_ieee\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=&f\")\n-\t(mult:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"%fG\")\n-\t\t (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(mult:SF (match_operand:SF 1 \"reg_or_0_operand\" \"%fG\")\n+\t\t (match_operand:SF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n   \"mul%,%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fmul\")\n@@ -2652,8 +2652,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"mulsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(mult:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"%fG\")\n-\t\t (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(mult:SF (match_operand:SF 1 \"reg_or_0_operand\" \"%fG\")\n+\t\t (match_operand:SF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"mul%,%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fmul\")\n@@ -2663,8 +2663,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"*muldf3_ieee\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=&f\")\n-\t(mult:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"%fG\")\n-\t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(mult:DF (match_operand:DF 1 \"reg_or_0_operand\" \"%fG\")\n+\t\t (match_operand:DF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n   \"mul%-%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fmul\")\n@@ -2674,8 +2674,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"muldf3\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(mult:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"%fG\")\n-\t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(mult:DF (match_operand:DF 1 \"reg_or_0_operand\" \"%fG\")\n+\t\t (match_operand:DF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"mul%-%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fmul\")\n@@ -2686,8 +2686,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n (define_insn \"*muldf_ext1\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(mult:DF (float_extend:DF\n-\t\t  (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))\n-\t\t (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t\t  (match_operand:SF 1 \"reg_or_0_operand\" \"fG\"))\n+\t\t (match_operand:DF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_fptm < ALPHA_FPTM_SU\"\n   \"mul%-%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fmul\")\n@@ -2698,9 +2698,9 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n (define_insn \"*muldf_ext2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(mult:DF (float_extend:DF\n-\t\t  (match_operand:SF 1 \"reg_or_fp0_operand\" \"%fG\"))\n+\t\t  (match_operand:SF 1 \"reg_or_0_operand\" \"%fG\"))\n \t\t (float_extend:DF\n-\t\t  (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n+\t\t  (match_operand:SF 2 \"reg_or_0_operand\" \"fG\"))))]\n   \"TARGET_FP && alpha_fptm < ALPHA_FPTM_SU\"\n   \"mul%-%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fmul\")\n@@ -2717,8 +2717,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"*subsf3_ieee\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=&f\")\n-\t(minus:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\")\n-\t\t  (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(minus:SF (match_operand:SF 1 \"reg_or_0_operand\" \"fG\")\n+\t\t  (match_operand:SF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n   \"sub%,%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2728,8 +2728,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"subsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(minus:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\")\n-\t\t  (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(minus:SF (match_operand:SF 1 \"reg_or_0_operand\" \"fG\")\n+\t\t  (match_operand:SF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"sub%,%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2739,8 +2739,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"*subdf3_ieee\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=&f\")\n-\t(minus:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")\n-\t\t  (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(minus:DF (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")\n+\t\t  (match_operand:DF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n   \"sub%-%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2750,8 +2750,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"subdf3\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(minus:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")\n-\t\t  (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(minus:DF (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")\n+\t\t  (match_operand:DF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP\"\n   \"sub%-%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2762,8 +2762,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n (define_insn \"*subdf_ext1\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(minus:DF (float_extend:DF\n-\t\t   (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))\n-\t\t  (match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")))]\n+\t\t   (match_operand:SF 1 \"reg_or_0_operand\" \"fG\"))\n+\t\t  (match_operand:DF 2 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP && alpha_fptm < ALPHA_FPTM_SU\"\n   \"sub%-%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2773,9 +2773,9 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"*subdf_ext2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(minus:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")\n+\t(minus:DF (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")\n \t\t  (float_extend:DF\n-\t\t   (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n+\t\t   (match_operand:SF 2 \"reg_or_0_operand\" \"fG\"))))]\n   \"TARGET_FP && alpha_fptm < ALPHA_FPTM_SU\"\n   \"sub%-%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2786,9 +2786,9 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n (define_insn \"*subdf_ext3\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(minus:DF (float_extend:DF\n-\t\t   (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))\n+\t\t   (match_operand:SF 1 \"reg_or_0_operand\" \"fG\"))\n \t\t  (float_extend:DF\n-\t\t   (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))))]\n+\t\t   (match_operand:SF 2 \"reg_or_0_operand\" \"fG\"))))]\n   \"TARGET_FP && alpha_fptm < ALPHA_FPTM_SU\"\n   \"sub%-%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -2805,7 +2805,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"*sqrtsf2_ieee\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=&f\")\n-\t(sqrt:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(sqrt:SF (match_operand:SF 1 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP && TARGET_FIX && alpha_fptm >= ALPHA_FPTM_SU\"\n   \"sqrt%,%/ %R1,%0\"\n   [(set_attr \"type\" \"fsqrt\")\n@@ -2816,7 +2816,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"sqrtsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(sqrt:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(sqrt:SF (match_operand:SF 1 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP && TARGET_FIX\"\n   \"sqrt%,%/ %R1,%0\"\n   [(set_attr \"type\" \"fsqrt\")\n@@ -2827,7 +2827,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"*sqrtdf2_ieee\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=&f\")\n-\t(sqrt:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(sqrt:DF (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP && TARGET_FIX && alpha_fptm >= ALPHA_FPTM_SU\"\n   \"sqrt%-%/ %R1,%0\"\n   [(set_attr \"type\" \"fsqrt\")\n@@ -2837,7 +2837,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_insn \"sqrtdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(sqrt:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n+\t(sqrt:DF (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")))]\n   \"TARGET_FP && TARGET_FIX\"\n   \"sqrt%-%/ %1,%0\"\n   [(set_attr \"type\" \"fsqrt\")\n@@ -3397,8 +3397,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n (define_insn \"*cmpdf_ieee\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=&f\")\n \t(match_operator:DF 1 \"alpha_fp_comparison_operator\"\n-\t\t\t   [(match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")\n-\t\t\t    (match_operand:DF 3 \"reg_or_fp0_operand\" \"fG\")]))]\n+\t\t\t   [(match_operand:DF 2 \"reg_or_0_operand\" \"fG\")\n+\t\t\t    (match_operand:DF 3 \"reg_or_0_operand\" \"fG\")]))]\n   \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n   \"cmp%-%C1%/ %R2,%R3,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -3408,8 +3408,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n (define_insn \"*cmpdf_internal\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(match_operator:DF 1 \"alpha_fp_comparison_operator\"\n-\t\t\t   [(match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")\n-\t\t\t    (match_operand:DF 3 \"reg_or_fp0_operand\" \"fG\")]))]\n+\t\t\t   [(match_operand:DF 2 \"reg_or_0_operand\" \"fG\")\n+\t\t\t    (match_operand:DF 3 \"reg_or_0_operand\" \"fG\")]))]\n   \"TARGET_FP && alpha_fptm < ALPHA_FPTM_SU\"\n   \"cmp%-%C1%/ %R2,%R3,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -3420,8 +3420,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=&f\")\n \t(match_operator:DF 1 \"alpha_fp_comparison_operator\"\n \t\t\t   [(float_extend:DF\n-\t\t\t     (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))\n-\t\t\t    (match_operand:DF 3 \"reg_or_fp0_operand\" \"fG\")]))]\n+\t\t\t     (match_operand:SF 2 \"reg_or_0_operand\" \"fG\"))\n+\t\t\t    (match_operand:DF 3 \"reg_or_0_operand\" \"fG\")]))]\n   \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n   \"cmp%-%C1%/ %R2,%R3,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -3432,8 +3432,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(match_operator:DF 1 \"alpha_fp_comparison_operator\"\n \t\t\t   [(float_extend:DF\n-\t\t\t     (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))\n-\t\t\t    (match_operand:DF 3 \"reg_or_fp0_operand\" \"fG\")]))]\n+\t\t\t     (match_operand:SF 2 \"reg_or_0_operand\" \"fG\"))\n+\t\t\t    (match_operand:DF 3 \"reg_or_0_operand\" \"fG\")]))]\n   \"TARGET_FP && alpha_fptm < ALPHA_FPTM_SU\"\n   \"cmp%-%C1%/ %R2,%R3,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -3443,9 +3443,9 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n (define_insn \"*cmpdf_ieee_ext2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=&f\")\n \t(match_operator:DF 1 \"alpha_fp_comparison_operator\"\n-\t\t\t   [(match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")\n+\t\t\t   [(match_operand:DF 2 \"reg_or_0_operand\" \"fG\")\n \t\t\t    (float_extend:DF\n-\t\t\t     (match_operand:SF 3 \"reg_or_fp0_operand\" \"fG\"))]))]\n+\t\t\t     (match_operand:SF 3 \"reg_or_0_operand\" \"fG\"))]))]\n   \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n   \"cmp%-%C1%/ %R2,%R3,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -3455,9 +3455,9 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n (define_insn \"*cmpdf_ext2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(match_operator:DF 1 \"alpha_fp_comparison_operator\"\n-\t\t\t   [(match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")\n+\t\t\t   [(match_operand:DF 2 \"reg_or_0_operand\" \"fG\")\n \t\t\t    (float_extend:DF\n-\t\t\t     (match_operand:SF 3 \"reg_or_fp0_operand\" \"fG\"))]))]\n+\t\t\t     (match_operand:SF 3 \"reg_or_0_operand\" \"fG\"))]))]\n   \"TARGET_FP && alpha_fptm < ALPHA_FPTM_SU\"\n   \"cmp%-%C1%/ %R2,%R3,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -3468,9 +3468,9 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=&f\")\n \t(match_operator:DF 1 \"alpha_fp_comparison_operator\"\n \t\t\t   [(float_extend:DF\n-\t\t\t     (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))\n+\t\t\t     (match_operand:SF 2 \"reg_or_0_operand\" \"fG\"))\n \t\t\t    (float_extend:DF\n-\t\t\t     (match_operand:SF 3 \"reg_or_fp0_operand\" \"fG\"))]))]\n+\t\t\t     (match_operand:SF 3 \"reg_or_0_operand\" \"fG\"))]))]\n   \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n   \"cmp%-%C1%/ %R2,%R3,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -3481,9 +3481,9 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(match_operator:DF 1 \"alpha_fp_comparison_operator\"\n \t\t\t   [(float_extend:DF\n-\t\t\t     (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))\n+\t\t\t     (match_operand:SF 2 \"reg_or_0_operand\" \"fG\"))\n \t\t\t    (float_extend:DF\n-\t\t\t     (match_operand:SF 3 \"reg_or_fp0_operand\" \"fG\"))]))]\n+\t\t\t     (match_operand:SF 3 \"reg_or_0_operand\" \"fG\"))]))]\n   \"TARGET_FP && alpha_fptm < ALPHA_FPTM_SU\"\n   \"cmp%-%C1%/ %R2,%R3,%0\"\n   [(set_attr \"type\" \"fadd\")\n@@ -3494,10 +3494,10 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n \t(if_then_else:DF\n \t (match_operator 3 \"signed_comparison_operator\"\n-\t\t\t [(match_operand:DF 4 \"reg_or_fp0_operand\" \"fG,fG\")\n-\t\t\t  (match_operand:DF 2 \"fp0_operand\" \"G,G\")])\n-\t (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG,0\")\n-\t (match_operand:DF 5 \"reg_or_fp0_operand\" \"0,fG\")))]\n+\t\t\t [(match_operand:DF 4 \"reg_or_0_operand\" \"fG,fG\")\n+\t\t\t  (match_operand:DF 2 \"const0_operand\" \"G,G\")])\n+\t (match_operand:DF 1 \"reg_or_0_operand\" \"fG,0\")\n+\t (match_operand:DF 5 \"reg_or_0_operand\" \"0,fG\")))]\n   \"TARGET_FP\"\n   \"@\n    fcmov%C3 %R4,%R1,%0\n@@ -3508,10 +3508,10 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n \t(if_then_else:SF\n \t (match_operator 3 \"signed_comparison_operator\"\n-\t\t\t [(match_operand:DF 4 \"reg_or_fp0_operand\" \"fG,fG\")\n-\t\t\t  (match_operand:DF 2 \"fp0_operand\" \"G,G\")])\n-\t (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG,0\")\n-\t (match_operand:SF 5 \"reg_or_fp0_operand\" \"0,fG\")))]\n+\t\t\t [(match_operand:DF 4 \"reg_or_0_operand\" \"fG,fG\")\n+\t\t\t  (match_operand:DF 2 \"const0_operand\" \"G,G\")])\n+\t (match_operand:SF 1 \"reg_or_0_operand\" \"fG,0\")\n+\t (match_operand:SF 5 \"reg_or_0_operand\" \"0,fG\")))]\n   \"TARGET_FP\"\n   \"@\n    fcmov%C3 %R4,%R1,%0\n@@ -3522,10 +3522,10 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n \t(if_then_else:DF\n \t (match_operator 3 \"signed_comparison_operator\"\n-\t\t\t [(match_operand:DF 4 \"reg_or_fp0_operand\" \"fG,fG\")\n-\t\t\t  (match_operand:DF 2 \"fp0_operand\" \"G,G\")])\n-\t (float_extend:DF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG,0\"))\n-\t (match_operand:DF 5 \"reg_or_fp0_operand\" \"0,fG\")))]\n+\t\t\t [(match_operand:DF 4 \"reg_or_0_operand\" \"fG,fG\")\n+\t\t\t  (match_operand:DF 2 \"const0_operand\" \"G,G\")])\n+\t (float_extend:DF (match_operand:SF 1 \"reg_or_0_operand\" \"fG,0\"))\n+\t (match_operand:DF 5 \"reg_or_0_operand\" \"0,fG\")))]\n   \"TARGET_FP\"\n   \"@\n    fcmov%C3 %R4,%R1,%0\n@@ -3537,10 +3537,10 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \t(if_then_else:DF\n \t (match_operator 3 \"signed_comparison_operator\"\n \t\t\t [(float_extend:DF\n-\t\t\t   (match_operand:SF 4 \"reg_or_fp0_operand\" \"fG,fG\"))\n-\t\t\t  (match_operand:DF 2 \"fp0_operand\" \"G,G\")])\n-\t (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG,0\")\n-\t (match_operand:DF 5 \"reg_or_fp0_operand\" \"0,fG\")))]\n+\t\t\t   (match_operand:SF 4 \"reg_or_0_operand\" \"fG,fG\"))\n+\t\t\t  (match_operand:DF 2 \"const0_operand\" \"G,G\")])\n+\t (match_operand:DF 1 \"reg_or_0_operand\" \"fG,0\")\n+\t (match_operand:DF 5 \"reg_or_0_operand\" \"0,fG\")))]\n   \"TARGET_FP\"\n   \"@\n    fcmov%C3 %R4,%R1,%0\n@@ -3552,10 +3552,10 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \t(if_then_else:SF\n \t (match_operator 3 \"signed_comparison_operator\"\n \t\t\t [(float_extend:DF\n-\t\t\t   (match_operand:SF 4 \"reg_or_fp0_operand\" \"fG,fG\"))\n-\t\t\t  (match_operand:DF 2 \"fp0_operand\" \"G,G\")])\n-\t (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG,0\")\n-\t (match_operand:SF 5 \"reg_or_fp0_operand\" \"0,fG\")))]\n+\t\t\t   (match_operand:SF 4 \"reg_or_0_operand\" \"fG,fG\"))\n+\t\t\t  (match_operand:DF 2 \"const0_operand\" \"G,G\")])\n+\t (match_operand:SF 1 \"reg_or_0_operand\" \"fG,0\")\n+\t (match_operand:SF 5 \"reg_or_0_operand\" \"0,fG\")))]\n   \"TARGET_FP\"\n   \"@\n    fcmov%C3 %R4,%R1,%0\n@@ -3567,10 +3567,10 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \t(if_then_else:DF\n \t (match_operator 3 \"signed_comparison_operator\"\n \t\t\t [(float_extend:DF\n-\t\t\t   (match_operand:SF 4 \"reg_or_fp0_operand\" \"fG,fG\"))\n-\t\t\t  (match_operand:DF 2 \"fp0_operand\" \"G,G\")])\n-\t (float_extend:DF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG,0\"))\n-\t (match_operand:DF 5 \"reg_or_fp0_operand\" \"0,fG\")))]\n+\t\t\t   (match_operand:SF 4 \"reg_or_0_operand\" \"fG,fG\"))\n+\t\t\t  (match_operand:DF 2 \"const0_operand\" \"G,G\")])\n+\t (float_extend:DF (match_operand:SF 1 \"reg_or_0_operand\" \"fG,0\"))\n+\t (match_operand:DF 5 \"reg_or_0_operand\" \"0,fG\")))]\n   \"TARGET_FP\"\n   \"@\n    fcmov%C3 %R4,%R1,%0\n@@ -3579,8 +3579,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_expand \"maxdf3\"\n   [(set (match_dup 3)\n-\t(le:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"\")\n-\t       (match_operand:DF 2 \"reg_or_fp0_operand\" \"\")))\n+\t(le:DF (match_operand:DF 1 \"reg_or_0_operand\" \"\")\n+\t       (match_operand:DF 2 \"reg_or_0_operand\" \"\")))\n    (set (match_operand:DF 0 \"register_operand\" \"\")\n \t(if_then_else:DF (eq (match_dup 3) (match_dup 4))\n \t\t\t (match_dup 1) (match_dup 2)))]\n@@ -3592,8 +3592,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_expand \"mindf3\"\n   [(set (match_dup 3)\n-\t(lt:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"\")\n-\t       (match_operand:DF 2 \"reg_or_fp0_operand\" \"\")))\n+\t(lt:DF (match_operand:DF 1 \"reg_or_0_operand\" \"\")\n+\t       (match_operand:DF 2 \"reg_or_0_operand\" \"\")))\n    (set (match_operand:DF 0 \"register_operand\" \"\")\n \t(if_then_else:DF (ne (match_dup 3) (match_dup 4))\n \t\t\t (match_dup 1) (match_dup 2)))]\n@@ -3605,8 +3605,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_expand \"maxsf3\"\n   [(set (match_dup 3)\n-\t(le:DF (float_extend:DF (match_operand:SF 1 \"reg_or_fp0_operand\" \"\"))\n-\t       (float_extend:DF (match_operand:SF 2 \"reg_or_fp0_operand\" \"\"))))\n+\t(le:DF (float_extend:DF (match_operand:SF 1 \"reg_or_0_operand\" \"\"))\n+\t       (float_extend:DF (match_operand:SF 2 \"reg_or_0_operand\" \"\"))))\n    (set (match_operand:SF 0 \"register_operand\" \"\")\n \t(if_then_else:SF (eq (match_dup 3) (match_dup 4))\n \t\t\t (match_dup 1) (match_dup 2)))]\n@@ -3618,8 +3618,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \n (define_expand \"minsf3\"\n   [(set (match_dup 3)\n-\t(lt:DF (float_extend:DF (match_operand:SF 1 \"reg_or_fp0_operand\" \"\"))\n-\t       (float_extend:DF (match_operand:SF 2 \"reg_or_fp0_operand\" \"\"))))\n+\t(lt:DF (float_extend:DF (match_operand:SF 1 \"reg_or_0_operand\" \"\"))\n+\t       (float_extend:DF (match_operand:SF 2 \"reg_or_0_operand\" \"\"))))\n    (set (match_operand:SF 0 \"register_operand\" \"\")\n \t(if_then_else:SF (ne (match_dup 3) (match_dup 4))\n \t\t      (match_dup 1) (match_dup 2)))]\n@@ -3633,8 +3633,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n   [(set (pc)\n \t(if_then_else\n \t (match_operator 1 \"signed_comparison_operator\"\n-\t\t\t [(match_operand:DF 2 \"reg_or_fp0_operand\" \"fG\")\n-\t\t\t  (match_operand:DF 3 \"fp0_operand\" \"G\")])\n+\t\t\t [(match_operand:DF 2 \"reg_or_0_operand\" \"fG\")\n+\t\t\t  (match_operand:DF 3 \"const0_operand\" \"G\")])\n \t (label_ref (match_operand 0 \"\" \"\"))\n \t (pc)))]\n   \"TARGET_FP\"\n@@ -3646,8 +3646,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \t(if_then_else\n \t (match_operator 1 \"signed_comparison_operator\"\n \t\t\t [(float_extend:DF\n-\t\t\t   (match_operand:SF 2 \"reg_or_fp0_operand\" \"fG\"))\n-\t\t\t  (match_operand:DF 3 \"fp0_operand\" \"G\")])\n+\t\t\t   (match_operand:SF 2 \"reg_or_0_operand\" \"fG\"))\n+\t\t\t  (match_operand:DF 3 \"const0_operand\" \"G\")])\n \t (label_ref (match_operand 0 \"\" \"\"))\n \t (pc)))]\n   \"TARGET_FP\"\n@@ -3658,8 +3658,8 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n ;; and compares.\n \n (define_expand \"cmpdf\"\n-  [(set (cc0) (compare (match_operand:DF 0 \"reg_or_fp0_operand\" \"\")\n-\t\t       (match_operand:DF 1 \"reg_or_fp0_operand\" \"\")))]\n+  [(set (cc0) (compare (match_operand:DF 0 \"reg_or_0_operand\" \"\")\n+\t\t       (match_operand:DF 1 \"reg_or_0_operand\" \"\")))]\n   \"TARGET_FP\"\n {\n   alpha_compare.op0 = operands[0];\n@@ -4904,7 +4904,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \t(match_operand:SF 1 \"input_operand\" \"fG,m,*rG,m,fG,*r\"))]\n   \"TARGET_FPREGS && ! TARGET_FIX\n    && (register_operand (operands[0], SFmode)\n-       || reg_or_fp0_operand (operands[1], SFmode))\"\n+       || reg_or_0_operand (operands[1], SFmode))\"\n   \"@\n    cpys %R1,%R1,%0\n    ld%, %0,%1\n@@ -4919,7 +4919,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \t(match_operand:SF 1 \"input_operand\" \"fG,m,*rG,m,fG,*r,*r,f\"))]\n   \"TARGET_FPREGS && TARGET_FIX\n    && (register_operand (operands[0], SFmode)\n-       || reg_or_fp0_operand (operands[1], SFmode))\"\n+       || reg_or_0_operand (operands[1], SFmode))\"\n   \"@\n    cpys %R1,%R1,%0\n    ld%, %0,%1\n@@ -4936,7 +4936,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \t(match_operand:SF 1 \"input_operand\" \"rG,m,r\"))]\n   \"! TARGET_FPREGS\n    && (register_operand (operands[0], SFmode)\n-       || reg_or_fp0_operand (operands[1], SFmode))\"\n+       || reg_or_0_operand (operands[1], SFmode))\"\n   \"@\n    bis $31,%r1,%0\n    ldl %0,%1\n@@ -4948,7 +4948,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \t(match_operand:DF 1 \"input_operand\" \"fG,m,*rG,m,fG,*r\"))]\n   \"TARGET_FPREGS && ! TARGET_FIX\n    && (register_operand (operands[0], DFmode)\n-       || reg_or_fp0_operand (operands[1], DFmode))\"\n+       || reg_or_0_operand (operands[1], DFmode))\"\n   \"@\n    cpys %R1,%R1,%0\n    ld%- %0,%1\n@@ -4963,7 +4963,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \t(match_operand:DF 1 \"input_operand\" \"fG,m,*rG,m,fG,*r,*r,f\"))]\n   \"TARGET_FPREGS && TARGET_FIX\n    && (register_operand (operands[0], DFmode)\n-       || reg_or_fp0_operand (operands[1], DFmode))\"\n+       || reg_or_0_operand (operands[1], DFmode))\"\n   \"@\n    cpys %R1,%R1,%0\n    ld%- %0,%1\n@@ -4980,7 +4980,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n \t(match_operand:DF 1 \"input_operand\" \"rG,m,r\"))]\n   \"! TARGET_FPREGS\n    && (register_operand (operands[0], DFmode)\n-       || reg_or_fp0_operand (operands[1], DFmode))\"\n+       || reg_or_0_operand (operands[1], DFmode))\"\n   \"@\n    bis $31,%r1,%0\n    ldq %0,%1\n@@ -4994,7 +4994,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n   [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=r,o\")\n \t(match_operand:TF 1 \"input_operand\" \"roG,rG\"))]\n   \"register_operand (operands[0], TFmode)\n-   || reg_or_fp0_operand (operands[1], TFmode)\"\n+   || reg_or_0_operand (operands[1], TFmode)\"\n   \"#\"\n   \"reload_completed\"\n   [(set (match_dup 0) (match_dup 2))\n@@ -5015,7 +5015,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n   \"\"\n {\n   if (GET_CODE (operands[0]) == MEM\n-      && ! reg_or_fp0_operand (operands[1], SFmode))\n+      && ! reg_or_0_operand (operands[1], SFmode))\n     operands[1] = force_reg (SFmode, operands[1]);\n })\n \n@@ -5025,7 +5025,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n   \"\"\n {\n   if (GET_CODE (operands[0]) == MEM\n-      && ! reg_or_fp0_operand (operands[1], DFmode))\n+      && ! reg_or_0_operand (operands[1], DFmode))\n     operands[1] = force_reg (DFmode, operands[1]);\n })\n \n@@ -5035,7 +5035,7 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi,none\"\n   \"\"\n {\n   if (GET_CODE (operands[0]) == MEM\n-      && ! reg_or_fp0_operand (operands[1], TFmode))\n+      && ! reg_or_0_operand (operands[1], TFmode))\n     operands[1] = force_reg (TFmode, operands[1]);\n })\n "}]}