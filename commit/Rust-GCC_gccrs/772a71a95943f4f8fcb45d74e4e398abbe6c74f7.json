{"sha": "772a71a95943f4f8fcb45d74e4e398abbe6c74f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzcyYTcxYTk1OTQzZjRmOGZjYjQ1ZDc0ZTRlMzk4YWJiZTZjNzRmNw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2012-09-18T16:06:53Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-09-18T16:06:53Z"}, "message": "configure.ac: Check whether strnlen is declared.\n\n\t* configure.ac: Check whether strnlen is declared.\n\t* dwarf.c: Declare strnlen if not declared.\n\t* configure, config.h.in: Rebuild.\n\nFrom-SVN: r191433", "tree": {"sha": "1d0ec15038dc3804c55d18677d6055999ae4f182", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d0ec15038dc3804c55d18677d6055999ae4f182"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/772a71a95943f4f8fcb45d74e4e398abbe6c74f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/772a71a95943f4f8fcb45d74e4e398abbe6c74f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/772a71a95943f4f8fcb45d74e4e398abbe6c74f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/772a71a95943f4f8fcb45d74e4e398abbe6c74f7/comments", "author": null, "committer": null, "parents": [{"sha": "9a9baa5254a06287326469f1b2f9ba1f7db6fd71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a9baa5254a06287326469f1b2f9ba1f7db6fd71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a9baa5254a06287326469f1b2f9ba1f7db6fd71"}], "stats": {"total": 79, "additions": 77, "deletions": 2}, "files": [{"sha": "8275ebcaa6a255d2756a50c0e64fabacd02cea98", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/772a71a95943f4f8fcb45d74e4e398abbe6c74f7/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/772a71a95943f4f8fcb45d74e4e398abbe6c74f7/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=772a71a95943f4f8fcb45d74e4e398abbe6c74f7", "patch": "@@ -1,3 +1,9 @@\n+2012-09-18  Ian Lance Taylor  <iant@google.com>\n+\n+\t* configure.ac: Check whether strnlen is declared.\n+\t* dwarf.c: Declare strnlen if not declared.\n+\t* configure, config.h.in: Rebuild.\n+\n 2012-09-18  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* fileline.c: Include <stdlib.h>."}, {"sha": "e6464c60597abe5e2a8a60e35936159d4287b91f", "filename": "libbacktrace/config.h.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/772a71a95943f4f8fcb45d74e4e398abbe6c74f7/libbacktrace%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/772a71a95943f4f8fcb45d74e4e398abbe6c74f7/libbacktrace%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfig.h.in?ref=772a71a95943f4f8fcb45d74e4e398abbe6c74f7", "patch": "@@ -3,6 +3,10 @@\n /* ELF size: 32 or 64 */\n #undef BACKTRACE_ELF_SIZE\n \n+/* Define to 1 if you have the declaration of `strnlen', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_STRNLEN\n+\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n "}, {"sha": "d8c1a02425c8221176f4ed71c9c2f5b83baaf730", "filename": "libbacktrace/configure", "status": "modified", "additions": 60, "deletions": 2, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/772a71a95943f4f8fcb45d74e4e398abbe6c74f7/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/772a71a95943f4f8fcb45d74e4e398abbe6c74f7/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=772a71a95943f4f8fcb45d74e4e398abbe6c74f7", "patch": "@@ -1823,6 +1823,51 @@ fi\n   eval $as_lineno_stack; test \"x$as_lineno_stack\" = x && { as_lineno=; unset as_lineno;}\n \n } # ac_fn_c_check_header_mongrel\n+\n+# ac_fn_c_check_decl LINENO SYMBOL VAR\n+# ------------------------------------\n+# Tests whether SYMBOL is declared, setting cache variable VAR accordingly.\n+ac_fn_c_check_decl ()\n+{\n+  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n+  as_decl_name=`echo $2|sed 's/ *(.*//'`\n+  as_decl_use=`echo $2|sed -e 's/(/((/' -e 's/)/) 0&/' -e 's/,/) 0& (/g'`\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $as_decl_name is declared\" >&5\n+$as_echo_n \"checking whether $as_decl_name is declared... \" >&6; }\n+if { as_var=$3; eval \"test \\\"\\${$as_var+set}\\\" = set\"; }; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$4\n+int\n+main ()\n+{\n+#ifndef $as_decl_name\n+#ifdef __cplusplus\n+  (void) $as_decl_use;\n+#else\n+  (void) $as_decl_name;\n+#endif\n+#endif\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  eval \"$3=yes\"\n+else\n+  eval \"$3=no\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+eval ac_res=\\$$3\n+\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n+$as_echo \"$ac_res\" >&6; }\n+  eval $as_lineno_stack; test \"x$as_lineno_stack\" = x && { as_lineno=; unset as_lineno;}\n+\n+} # ac_fn_c_check_decl\n cat >config.log <<_ACEOF\n This file contains any messages produced by compilers while\n running configure, to aid debugging if configure makes a mistake.\n@@ -7442,6 +7487,7 @@ $as_echo_n \"checking for $compiler option to produce PIC... \" >&6; }\n \t# AIX 5 now supports IA64 processor\n \tlt_prog_compiler_static='-Bstatic'\n       fi\n+      lt_prog_compiler_pic='-fPIC'\n       ;;\n \n     amigaos*)\n@@ -10388,7 +10434,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10391 \"configure\"\n+#line 10437 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10494,7 +10540,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10497 \"configure\"\n+#line 10543 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11061,6 +11107,18 @@ if test \"$ALLOC_FILE\" = \"alloc.lo\"; then\n fi\n \n \n+ac_fn_c_check_decl \"$LINENO\" \"strnlen\" \"ac_cv_have_decl_strnlen\" \"$ac_includes_default\"\n+if test \"x$ac_cv_have_decl_strnlen\" = x\"\"yes; then :\n+  ac_have_decl=1\n+else\n+  ac_have_decl=0\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_STRNLEN $ac_have_decl\n+_ACEOF\n+\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether tests can run\" >&5\n $as_echo_n \"checking whether tests can run... \" >&6; }\n if test \"${libbacktrace_cv_sys_native+set}\" = set; then :"}, {"sha": "35ed987eff39037b4d6e81f9319a2319288442d6", "filename": "libbacktrace/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/772a71a95943f4f8fcb45d74e4e398abbe6c74f7/libbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/772a71a95943f4f8fcb45d74e4e398abbe6c74f7/libbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure.ac?ref=772a71a95943f4f8fcb45d74e4e398abbe6c74f7", "patch": "@@ -199,6 +199,8 @@ if test \"$ALLOC_FILE\" = \"alloc.lo\"; then\n fi\n AC_SUBST(BACKTRACE_USES_MALLOC)\n \n+AC_CHECK_DECLS(strnlen)\n+\n AC_CACHE_CHECK([whether tests can run],\n   [libbacktrace_cv_sys_native],\n   [AC_RUN_IFELSE([AC_LANG_PROGRAM([], [return 0;])],"}, {"sha": "34861fce484a641cc75bab748dc08c3d77b71805", "filename": "libbacktrace/dwarf.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/772a71a95943f4f8fcb45d74e4e398abbe6c74f7/libbacktrace%2Fdwarf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/772a71a95943f4f8fcb45d74e4e398abbe6c74f7/libbacktrace%2Fdwarf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fdwarf.c?ref=772a71a95943f4f8fcb45d74e4e398abbe6c74f7", "patch": "@@ -44,6 +44,11 @@ POSSIBILITY OF SUCH DAMAGE.  */\n #include \"backtrace.h\"\n #include \"internal.h\"\n \n+#ifndef HAVE_DECL_STRNLEN\n+/* The function is defined in libiberty if needed.  */\n+extern size_t strnlen (const char *, size_t);\n+#endif\n+\n /* A buffer to read DWARF info.  */\n \n struct dwarf_buf"}]}