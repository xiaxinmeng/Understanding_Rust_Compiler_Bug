{"sha": "9096c2c543f9d47822cc086ff1cfb21767d6a1b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA5NmMyYzU0M2Y5ZDQ3ODIyY2MwODZmZjFjZmIyMTc2N2Q2YTFiNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-12-14T08:16:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-14T08:16:51Z"}, "message": "re PR c++/79650 (ICE on invalid c++ code with label arithmetic in convert_nontype_argument (pt.c:6515))\n\n\tPR c++/79650\n\t* pt.c (convert_nontype_argument): Diagnose\n\treduced_constant_expression_p expressions that aren't INTEGER_CST.\n\n\t* g++.dg/template/pr79650.C: New test.\n\nFrom-SVN: r255623", "tree": {"sha": "f6ea02203975b48999f3b4b4b7be57c3698df521", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6ea02203975b48999f3b4b4b7be57c3698df521"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9096c2c543f9d47822cc086ff1cfb21767d6a1b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9096c2c543f9d47822cc086ff1cfb21767d6a1b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9096c2c543f9d47822cc086ff1cfb21767d6a1b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9096c2c543f9d47822cc086ff1cfb21767d6a1b4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "606778c6f55c4df1f247097f4b73d2c551ff4889", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/606778c6f55c4df1f247097f4b73d2c551ff4889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/606778c6f55c4df1f247097f4b73d2c551ff4889"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "ac6a8e1bfffea72c127ea06e592c044e15cc28bf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9096c2c543f9d47822cc086ff1cfb21767d6a1b4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9096c2c543f9d47822cc086ff1cfb21767d6a1b4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9096c2c543f9d47822cc086ff1cfb21767d6a1b4", "patch": "@@ -1,3 +1,9 @@\n+2017-12-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/79650\n+\t* pt.c (convert_nontype_argument): Diagnose\n+\treduced_constant_expression_p expressions that aren't INTEGER_CST.\n+\n 2017-12-13  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/81061"}, {"sha": "69b95351d8b6c9aa6be5c9c74ae66afe253dc2ae", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9096c2c543f9d47822cc086ff1cfb21767d6a1b4/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9096c2c543f9d47822cc086ff1cfb21767d6a1b4/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=9096c2c543f9d47822cc086ff1cfb21767d6a1b4", "patch": "@@ -6577,7 +6577,19 @@ convert_nontype_argument (tree type, tree expr, tsubst_flags_t complain)\n \t\treturn NULL_TREE;\n \t      /* else cxx_constant_value complained but gave us\n \t\t a real constant, so go ahead.  */\n-\t      gcc_assert (TREE_CODE (expr) == INTEGER_CST);\n+\t      if (TREE_CODE (expr) != INTEGER_CST)\n+\t\t{\n+\t\t  /* Some assemble time constant expressions like\n+\t\t     (intptr_t)&&lab1 - (intptr_t)&&lab2 or\n+\t\t     4 + (intptr_t)&&var satisfy reduced_constant_expression_p\n+\t\t     as we can emit them into .rodata initializers of\n+\t\t     variables, yet they can't fold into an INTEGER_CST at\n+\t\t     compile time.  Refuse them here.  */\n+\t\t  gcc_checking_assert (reduced_constant_expression_p (expr));\n+\t\t  error_at (loc, \"template argument %qE for type %qT not \"\n+\t\t\t\t \"a constant integer\", expr, type);\n+\t\t  return NULL_TREE;\n+\t\t}\n \t    }\n \t  else\n \t    return NULL_TREE;"}, {"sha": "802146b4ee2fbd715b11dc4cee96f4429c874c0b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9096c2c543f9d47822cc086ff1cfb21767d6a1b4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9096c2c543f9d47822cc086ff1cfb21767d6a1b4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9096c2c543f9d47822cc086ff1cfb21767d6a1b4", "patch": "@@ -1,3 +1,8 @@\n+2017-12-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/79650\n+\t* g++.dg/template/pr79650.C: New test.\n+\n 2017-12-14  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "72c781409426cb036990ff71a2ef8191d36e839d", "filename": "gcc/testsuite/g++.dg/template/pr79650.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9096c2c543f9d47822cc086ff1cfb21767d6a1b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr79650.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9096c2c543f9d47822cc086ff1cfb21767d6a1b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr79650.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr79650.C?ref=9096c2c543f9d47822cc086ff1cfb21767d6a1b4", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/79650\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n+\n+typedef __INTPTR_TYPE__ intptr_t;\n+template<intptr_t> struct A {};\n+\n+void\n+foo ()\n+{\n+  static int a, b;\n+lab1:\n+lab2:\n+  A<(intptr_t)&&lab1 - (__INTPTR_TYPE__)&&lab2> c;\t// { dg-error \"not a constant integer\" }\n+  A<(intptr_t)&&lab1 - (__INTPTR_TYPE__)&&lab1> d;\n+  A<(intptr_t)&a - (intptr_t)&b> e;\t\t\t// { dg-error \"is not a constant expression\" }\n+  A<(intptr_t)&a - (intptr_t)&a> f;\n+  A<(intptr_t)sizeof(a) + (intptr_t)&a> g;\t\t// { dg-error \"not a constant integer\" }\n+  A<(intptr_t)&a> h;\t\t\t\t\t// { dg-error \"conversion from pointer type\" }\n+}"}]}