{"sha": "3ced2284b437b9e5a46c165df006a5a52cb5d18c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NlZDIyODRiNDM3YjllNWE0NmMxNjVkZjAwNmE1YTUyY2I1ZDE4Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-02-22T22:24:10Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-02-22T22:24:10Z"}, "message": "re PR c++/56359 (Bogus \"error: no matching function for call to ...\")\n\n\tPR c++/56359\n\t* call.c (can_convert_arg): Discard access checks.\n\nFrom-SVN: r196229", "tree": {"sha": "43394e2f9aaa9321cb9f210dc364757d54a663ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43394e2f9aaa9321cb9f210dc364757d54a663ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ced2284b437b9e5a46c165df006a5a52cb5d18c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ced2284b437b9e5a46c165df006a5a52cb5d18c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ced2284b437b9e5a46c165df006a5a52cb5d18c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ced2284b437b9e5a46c165df006a5a52cb5d18c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b5d851ea0015765d83b329d93484dcd8ccc8c1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b5d851ea0015765d83b329d93484dcd8ccc8c1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b5d851ea0015765d83b329d93484dcd8ccc8c1e"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "6b3aa17edc2a42d3e81b657e81d9155df1ab7ac0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ced2284b437b9e5a46c165df006a5a52cb5d18c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ced2284b437b9e5a46c165df006a5a52cb5d18c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3ced2284b437b9e5a46c165df006a5a52cb5d18c", "patch": "@@ -1,5 +1,8 @@\n 2013-02-22  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/56359\n+\t* call.c (can_convert_arg): Discard access checks.\n+\n \tPR c++/56395\n \t* tree.c (strip_typedefs): Strip typedefs from TYPENAME_TYPE template\n \targs."}, {"sha": "7c414217f05f62e6f2f4f46b3c305ecaa4c42408", "filename": "gcc/cp/call.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ced2284b437b9e5a46c165df006a5a52cb5d18c/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ced2284b437b9e5a46c165df006a5a52cb5d18c/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=3ced2284b437b9e5a46c165df006a5a52cb5d18c", "patch": "@@ -8765,11 +8765,18 @@ can_convert_arg (tree to, tree from, tree arg, int flags,\n \n   /* Get the high-water mark for the CONVERSION_OBSTACK.  */\n   p = conversion_obstack_alloc (0);\n+  /* We want to discard any access checks done for this test,\n+     as we might not be in the appropriate access context and\n+     we'll do the check again when we actually perform the\n+     conversion.  */\n+  push_deferring_access_checks (dk_deferred);\n \n   t  = implicit_conversion (to, from, arg, /*c_cast_p=*/false,\n \t\t\t    flags, complain);\n   ok_p = (t && !t->bad_p);\n \n+  /* Discard the access checks now.  */\n+  pop_deferring_access_checks ();\n   /* Free all the conversions we allocated.  */\n   obstack_free (&conversion_obstack, p);\n "}, {"sha": "e882a7099d98298e0bf38c5160ba7bac5fba008e", "filename": "gcc/testsuite/g++.dg/template/access25.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ced2284b437b9e5a46c165df006a5a52cb5d18c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ced2284b437b9e5a46c165df006a5a52cb5d18c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess25.C?ref=3ced2284b437b9e5a46c165df006a5a52cb5d18c", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/56359\n+\n+typedef int (*InvocationCallback) (const int &);\n+\n+template < typename target_t >\n+void SetPrototypeMethod (target_t, const char *, InvocationCallback);\n+\n+class A\n+{\n+    void Initialize ();\n+protected:\n+    static int Stop (const int &);\n+    void Stop ();  // comment out to make the bug disappear.\n+};\n+\n+void\n+A::Initialize ()\n+{\n+    SetPrototypeMethod (0, \"stop\", A::Stop);\n+}"}]}