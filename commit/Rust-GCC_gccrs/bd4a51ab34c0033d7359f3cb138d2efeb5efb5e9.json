{"sha": "bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ0YTUxYWIzNGMwMDMzZDczNTlmM2NiMTM4ZDJlZmViNWVmYjVlOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-10-16T08:19:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-10-16T08:19:49Z"}, "message": "re PR middle-end/37418 (error: type mismatch in address expression, verify_gimple failed)\n\n2008-10-16  Joseph Myers  <joseph@codesourcery.com>\n        Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/37418\n\t* tree-ssa.c (useless_type_conversion_p_1): Do not treat\n\tvolatile qualified functions or methods as relevant.\n\n\t* gcc.c-torture/compile/pr37418-1.c,\n\tgcc.c-torture/compile/pr37418-2.c,\n\tgcc.c-torture/compile/pr37418-3.c,\n\tgcc.c-torture/compile/pr37418-4.c: New tests.\n\nFrom-SVN: r141165", "tree": {"sha": "e8d65b04c2d8f9c3a71d5eab0ef74c5a07810ace", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8d65b04c2d8f9c3a71d5eab0ef74c5a07810ace"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9/comments", "author": null, "committer": null, "parents": [{"sha": "5b429886c5e390a0d7ae27311f859d2ae1d4b2c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b429886c5e390a0d7ae27311f859d2ae1d4b2c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b429886c5e390a0d7ae27311f859d2ae1d4b2c1"}], "stats": {"total": 49, "additions": 46, "deletions": 3}, "files": [{"sha": "733b18ac80befebfc00cf91d22ca042baaf36854", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9", "patch": "@@ -1,3 +1,9 @@\n+2008-10-16  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/37418\n+\t* tree-ssa.c (useless_type_conversion_p_1): Do not treat\n+\tvolatile qualified functions or methods as relevant.\n+\n 2008-10-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/37525"}, {"sha": "dd4544b615590d1e9939fbd55f53c02b44b162fd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9", "patch": "@@ -1,3 +1,11 @@\n+2008-10-16  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR middle-end/37418\n+\t* gcc.c-torture/compile/pr37418-1.c,\n+\tgcc.c-torture/compile/pr37418-2.c,\n+\tgcc.c-torture/compile/pr37418-3.c,\n+\tgcc.c-torture/compile/pr37418-4.c: New tests.\n+\n 2008-10-15  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR libfortran/34670"}, {"sha": "dbb1a651ddbd928f453434e593eee5e42aab4976", "filename": "gcc/testsuite/gcc.c-torture/compile/pr37418-1.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37418-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37418-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37418-1.c?ref=bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9", "patch": "@@ -0,0 +1,6 @@\n+typedef void ft(int);\n+void f(int args)__attribute__((noreturn));\n+void f2(ft *p __attribute__((noreturn)))\n+{\n+  p = f;\n+}"}, {"sha": "dcc003984acdf9e3c05e84dc3d49b55a5e30134c", "filename": "gcc/testsuite/gcc.c-torture/compile/pr37418-2.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37418-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37418-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37418-2.c?ref=bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9", "patch": "@@ -0,0 +1,6 @@\n+typedef void ft(int);\n+volatile ft f;\n+void f2(ft *p __attribute__((noreturn)))\n+{\n+  p = f;\n+}"}, {"sha": "5a2c2e81ead024ef0f4c01a269d83603091040ce", "filename": "gcc/testsuite/gcc.c-torture/compile/pr37418-3.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37418-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37418-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37418-3.c?ref=bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9", "patch": "@@ -0,0 +1,6 @@\n+typedef void ft(int);\n+void f(int args)__attribute__((const));\n+void f2(ft *p __attribute__((const)))\n+{\n+  p = f;\n+}"}, {"sha": "bc872789004ba8e489e5bd5a0c30f4b3a02cb121", "filename": "gcc/testsuite/gcc.c-torture/compile/pr37418-4.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37418-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37418-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37418-4.c?ref=bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9", "patch": "@@ -0,0 +1,6 @@\n+typedef void ft(int);\n+const ft f;\n+void f2(ft *p __attribute__((const)))\n+{\n+  p = f;\n+}"}, {"sha": "8f238a33da625d8867cbf32f72d35ceeadb8d397", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=bd4a51ab34c0033d7359f3cb138d2efeb5efb5e9", "patch": "@@ -1125,9 +1125,14 @@ useless_type_conversion_p_1 (tree outer_type, tree inner_type)\n     {\n       /* Don't lose casts between pointers to volatile and non-volatile\n \t qualified types.  Doing so would result in changing the semantics\n-\t of later accesses.  */\n-      if ((TYPE_VOLATILE (TREE_TYPE (outer_type))\n-\t   != TYPE_VOLATILE (TREE_TYPE (inner_type)))\n+\t of later accesses.  For function types the volatile qualifier\n+\t is used to indicate noreturn functions.  */\n+      if (TREE_CODE (TREE_TYPE (outer_type)) != FUNCTION_TYPE\n+\t  && TREE_CODE (TREE_TYPE (outer_type)) != METHOD_TYPE\n+\t  && TREE_CODE (TREE_TYPE (inner_type)) != FUNCTION_TYPE\n+\t  && TREE_CODE (TREE_TYPE (inner_type)) != METHOD_TYPE\n+\t  && (TYPE_VOLATILE (TREE_TYPE (outer_type))\n+\t      != TYPE_VOLATILE (TREE_TYPE (inner_type)))\n \t  && TYPE_VOLATILE (TREE_TYPE (outer_type)))\n \treturn false;\n "}]}