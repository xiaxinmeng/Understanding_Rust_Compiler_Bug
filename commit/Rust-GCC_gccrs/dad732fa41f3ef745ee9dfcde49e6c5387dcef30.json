{"sha": "dad732fa41f3ef745ee9dfcde49e6c5387dcef30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFkNzMyZmE0MWYzZWY3NDVlZTlkZmNkZTQ5ZTZjNTM4N2RjZWYzMA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2005-06-03T23:22:11Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-06-03T23:22:11Z"}, "message": "re PR c++/21853 (constness of pointer to data member ignored)\n\n\tPR c++/21853\n\t* typeck.c (casts_away_constness_r): Do not drop cv-qualifiers on\n\tthe pointed-to type for a pointer-to-member.\n\n\tPR c++/21853\n\t* g++.dg/expr/static_cast6.C: New test.\n\nFrom-SVN: r100560", "tree": {"sha": "cbb4dbf657f7f2f79c7655d6fa4b1a75bd1b7424", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbb4dbf657f7f2f79c7655d6fa4b1a75bd1b7424"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dad732fa41f3ef745ee9dfcde49e6c5387dcef30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dad732fa41f3ef745ee9dfcde49e6c5387dcef30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dad732fa41f3ef745ee9dfcde49e6c5387dcef30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dad732fa41f3ef745ee9dfcde49e6c5387dcef30/comments", "author": null, "committer": null, "parents": [{"sha": "d0b73789d3ac99ccabc5d6d58e4f0b056f0a2a2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0b73789d3ac99ccabc5d6d58e4f0b056f0a2a2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0b73789d3ac99ccabc5d6d58e4f0b056f0a2a2c"}], "stats": {"total": 46, "additions": 36, "deletions": 10}, "files": [{"sha": "1f8b270136605f740e960875207d87d781572335", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dad732fa41f3ef745ee9dfcde49e6c5387dcef30/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dad732fa41f3ef745ee9dfcde49e6c5387dcef30/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=dad732fa41f3ef745ee9dfcde49e6c5387dcef30", "patch": "@@ -1,5 +1,9 @@\n 2005-06-03  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/21853\n+\t* typeck.c (casts_away_constness_r): Do not drop cv-qualifiers on\n+\tthe pointed-to type for a pointer-to-member.\n+\n \tPR c++/21336\n \t* cp-tree.h (grok_op_properties): Remove friendp parameter.\n \t* decl.c (grokfndecl): Adjust call."}, {"sha": "624f145a206504df773590b45ff852e654c57ebb", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dad732fa41f3ef745ee9dfcde49e6c5387dcef30/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dad732fa41f3ef745ee9dfcde49e6c5387dcef30/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=dad732fa41f3ef745ee9dfcde49e6c5387dcef30", "patch": "@@ -6466,11 +6466,6 @@ casts_away_constness_r (tree *t1, tree *t2)\n      and pointers to members (conv.qual), the \"member\" aspect of a\n      pointer to member level is ignored when determining if a const\n      cv-qualifier has been cast away.  */\n-  if (TYPE_PTRMEM_P (*t1))\n-    *t1 = build_pointer_type (TYPE_PTRMEM_POINTED_TO_TYPE (*t1));\n-  if (TYPE_PTRMEM_P (*t2))\n-    *t2 = build_pointer_type (TYPE_PTRMEM_POINTED_TO_TYPE (*t2));\n-\n   /* [expr.const.cast]\n \n      For  two  pointer types:\n@@ -6488,9 +6483,8 @@ casts_away_constness_r (tree *t1, tree *t2)\n      to\n \n             Tcv2,(M-K+1) * cv2,(M-K+2) * ... cv2,M *.  */\n-\n-  if (TREE_CODE (*t1) != POINTER_TYPE\n-      || TREE_CODE (*t2) != POINTER_TYPE)\n+  if ((!TYPE_PTR_P (*t1) && !TYPE_PTRMEM_P (*t1))\n+      || (!TYPE_PTR_P (*t2) && !TYPE_PTRMEM_P (*t2)))\n     {\n       *t1 = cp_build_qualified_type (void_type_node,\n \t\t\t\t     cp_type_quals (*t1));\n@@ -6501,8 +6495,16 @@ casts_away_constness_r (tree *t1, tree *t2)\n   \n   quals1 = cp_type_quals (*t1);\n   quals2 = cp_type_quals (*t2);\n-  *t1 = TREE_TYPE (*t1);\n-  *t2 = TREE_TYPE (*t2);\n+\n+  if (TYPE_PTRMEM_P (*t1))\n+    *t1 = TYPE_PTRMEM_POINTED_TO_TYPE (*t1);\n+  else\n+    *t1 = TREE_TYPE (*t1);\n+  if (TYPE_PTRMEM_P (*t2))\n+    *t2 = TYPE_PTRMEM_POINTED_TO_TYPE (*t2);\n+  else\n+    *t2 = TREE_TYPE (*t2);\n+\n   casts_away_constness_r (t1, t2);\n   *t1 = build_pointer_type (*t1);\n   *t2 = build_pointer_type (*t2);"}, {"sha": "fb02e4933b5ce0dd5d7db6c7d835a39721180bd3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dad732fa41f3ef745ee9dfcde49e6c5387dcef30/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dad732fa41f3ef745ee9dfcde49e6c5387dcef30/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dad732fa41f3ef745ee9dfcde49e6c5387dcef30", "patch": "@@ -1,3 +1,8 @@\n+2005-06-03  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/21853\n+\t* g++.dg/expr/static_cast6.C: New test.\n+\n 2005-06-03  Diego Novillo  <dnovillo@redhat.com>\n \n \t* gcc.dg/tree-ssa/vrp14.c: New test."}, {"sha": "90f32f1d79370fe52009aa9ef7caa275720e2357", "filename": "gcc/testsuite/g++.dg/expr/static_cast6.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dad732fa41f3ef745ee9dfcde49e6c5387dcef30/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fstatic_cast6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dad732fa41f3ef745ee9dfcde49e6c5387dcef30/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fstatic_cast6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fstatic_cast6.C?ref=dad732fa41f3ef745ee9dfcde49e6c5387dcef30", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/21853\n+\n+struct blah {\n+  int a;\n+};\n+\n+int main( int argc, char ** argv ) {\n+  int blah::* ptdma = &blah::a;\n+\n+  const void *ptdmv = static_cast< void * >( &ptdma );\n+\n+  int blah::* const ptdmb = * static_cast< int blah::* const * >( ptdmv );\n+\n+  return 0;\n+}"}]}