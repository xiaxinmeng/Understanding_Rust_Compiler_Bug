{"sha": "9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJiMWE4MWJiM2NkMzI4ZjZhOGE2MTI4NTM0ZjNjOWI0OTBmYWM0Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-05-14T18:55:22Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-05-14T18:55:22Z"}, "message": "re PR c++/44127 (G++ emits unnecessary EH code)\n\n\tPR c++/44127\ngcc:\n\t* gimple.h (enum gf_mask): Add GF_CALL_NOTHROW.\n\t(gimple_call_set_nothrow): New.\n\t* gimple.c (gimple_build_call_from_tree): Call it.\n\t(gimple_call_flags): Set ECF_NOTHROW from GF_CALL_NOTHROW.\ngcc/cp:\n\t* except.c (dtor_nothrow): Return nonzero for type with\n\ttrivial destructor.\n\nFrom-SVN: r159408", "tree": {"sha": "35fed41760bd91f12cf6b65723674cbbc0fcc28b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35fed41760bd91f12cf6b65723674cbbc0fcc28b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "786f715dc6869bac7a3018e880a4ffde41940422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/786f715dc6869bac7a3018e880a4ffde41940422", "html_url": "https://github.com/Rust-GCC/gccrs/commit/786f715dc6869bac7a3018e880a4ffde41940422"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "4a71722b293698320fb8cde3a4945bb4109a41fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c", "patch": "@@ -1,5 +1,11 @@\n 2010-05-14  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/44127\n+\t* gimple.h (enum gf_mask): Add GF_CALL_NOTHROW.\n+\t(gimple_call_set_nothrow): New.\n+\t* gimple.c (gimple_build_call_from_tree): Call it.\n+\t(gimple_call_flags): Set ECF_NOTHROW from GF_CALL_NOTHROW.\n+\n \tPR c++/44127\n \t* gimplify.c (gimplify_seq_add_stmt): No longer static.\n \t* gimple.h: Declare it."}, {"sha": "2066fa7f13defad0a733c94758e6ce12e196d258", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c", "patch": "@@ -1,5 +1,9 @@\n 2010-05-14  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/44127\n+\t* except.c (dtor_nothrow): Return nonzero for type with\n+\ttrivial destructor.\n+\n \tPR c++/44127\n \t* cp-gimplify.c (gimplify_must_not_throw_expr): Use\n \tgimple_build_eh_must_not_throw."}, {"sha": "74449fa8233a158ddceb80118e3735fde40b7cb6", "filename": "gcc/cp/except.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c", "patch": "@@ -214,10 +214,10 @@ do_begin_catch (void)\n static int\n dtor_nothrow (tree type)\n {\n-  if (type == NULL_TREE)\n+  if (type == NULL_TREE || type == error_mark_node)\n     return 0;\n \n-  if (!CLASS_TYPE_P (type))\n+  if (TYPE_HAS_TRIVIAL_DESTRUCTOR (type))\n     return 1;\n \n   if (CLASSTYPE_LAZY_DESTRUCTOR (type))"}, {"sha": "ace53b92f8743205a73fd4f277d079398be89264", "filename": "gcc/gimple.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c", "patch": "@@ -297,6 +297,7 @@ gimple_build_call_from_tree (tree t)\n   gimple_call_set_return_slot_opt (call, CALL_EXPR_RETURN_SLOT_OPT (t));\n   gimple_call_set_from_thunk (call, CALL_FROM_THUNK_P (t));\n   gimple_call_set_va_arg_pack (call, CALL_EXPR_VA_ARG_PACK (t));\n+  gimple_call_set_nothrow (call, TREE_NOTHROW (t));\n   gimple_set_no_warning (call, TREE_NO_WARNING (t));\n \n   return call;\n@@ -1753,6 +1754,9 @@ gimple_call_flags (const_gimple stmt)\n \tflags = 0;\n     }\n \n+  if (stmt->gsbase.subcode & GF_CALL_NOTHROW)\n+    flags |= ECF_NOTHROW;\n+\n   return flags;\n }\n "}, {"sha": "e9d21a99c73bc51a42fe76862f53b07aefc89ae2", "filename": "gcc/gimple.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c", "patch": "@@ -106,6 +106,7 @@ enum gf_mask {\n     GF_CALL_RETURN_SLOT_OPT\t= 1 << 2,\n     GF_CALL_TAILCALL\t\t= 1 << 3,\n     GF_CALL_VA_ARG_PACK\t\t= 1 << 4,\n+    GF_CALL_NOTHROW\t\t= 1 << 5,\n     GF_OMP_PARALLEL_COMBINED\t= 1 << 0,\n \n     /* True on an GIMPLE_OMP_RETURN statement if the return does not require\n@@ -2213,6 +2214,19 @@ gimple_call_noreturn_p (gimple s)\n }\n \n \n+/* If NOTHROW_P is true, GIMPLE_CALL S is a call that is known to not throw\n+   even if the called function can throw in other cases.  */\n+\n+static inline void\n+gimple_call_set_nothrow (gimple s, bool nothrow_p)\n+{\n+  GIMPLE_CHECK (s, GIMPLE_CALL);\n+  if (nothrow_p)\n+    s->gsbase.subcode |= GF_CALL_NOTHROW;\n+  else\n+    s->gsbase.subcode &= ~GF_CALL_NOTHROW;\n+}\n+\n /* Return true if S is a nothrow call.  */\n \n static inline bool"}, {"sha": "43cc19eafcbf7fd272eaa967d249196ec867b51a", "filename": "gcc/testsuite/g++.dg/eh/terminate1.C", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fterminate1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fterminate1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fterminate1.C?ref=9bb1a81bb3cd328f6a8a6128534f3c9b490fac4c", "patch": "@@ -7,6 +7,12 @@\n \n // { dg-final { scan-assembler-not \"_ZSt9terminatev\" } }\n \n+// Also there should only be two EH call sites: #0 for throw A() and #1 for\n+// _Unwind_Resume.  We don't want call site info for __cxa_end_catch, since\n+// ~A is trivial.\n+\n+// { dg-final { scan-assembler-not \"LEHB2\" } }\n+\n struct A\n {\n   A() { }"}]}