{"sha": "cb13308543771f56bbc932933b9ec7bbb95d37ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IxMzMwODU0Mzc3MWY1NmJiYzkzMjkzM2I5ZWM3YmJiOTVkMzdhYw==", "commit": {"author": {"name": "Will Wray", "email": "wjwray@gmail.com", "date": "2019-02-20T18:50:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-02-20T18:50:32Z"}, "message": "PR c++/88572 - wrong handling of braces on scalar init.\n\n\t* decl.c (reshape_init_r): Allow braces around scalar initializer\n\twithin aggregate init.  Reject double braced-init of scalar\n\tvariable.\n\nFrom-SVN: r269045", "tree": {"sha": "99ccbbc756b3caee0a6e8b12607a4867d33e25f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99ccbbc756b3caee0a6e8b12607a4867d33e25f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb13308543771f56bbc932933b9ec7bbb95d37ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb13308543771f56bbc932933b9ec7bbb95d37ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb13308543771f56bbc932933b9ec7bbb95d37ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb13308543771f56bbc932933b9ec7bbb95d37ac/comments", "author": {"login": "willwray", "id": 3172718, "node_id": "MDQ6VXNlcjMxNzI3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3172718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willwray", "html_url": "https://github.com/willwray", "followers_url": "https://api.github.com/users/willwray/followers", "following_url": "https://api.github.com/users/willwray/following{/other_user}", "gists_url": "https://api.github.com/users/willwray/gists{/gist_id}", "starred_url": "https://api.github.com/users/willwray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willwray/subscriptions", "organizations_url": "https://api.github.com/users/willwray/orgs", "repos_url": "https://api.github.com/users/willwray/repos", "events_url": "https://api.github.com/users/willwray/events{/privacy}", "received_events_url": "https://api.github.com/users/willwray/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "990525f659db023bbcaf8d313916e4533843c664", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/990525f659db023bbcaf8d313916e4533843c664", "html_url": "https://github.com/Rust-GCC/gccrs/commit/990525f659db023bbcaf8d313916e4533843c664"}], "stats": {"total": 44, "additions": 31, "deletions": 13}, "files": [{"sha": "83d3ac94039214778a0873f303bb5f42175cd388", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb13308543771f56bbc932933b9ec7bbb95d37ac/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb13308543771f56bbc932933b9ec7bbb95d37ac/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cb13308543771f56bbc932933b9ec7bbb95d37ac", "patch": "@@ -1,3 +1,10 @@\n+2019-02-20  will wray  <wjwray@gmail.com>\n+\n+\tPR c++/88572 - wrong handling of braces on scalar init.\n+\t* decl.c (reshape_init_r): Allow braces around scalar initializer\n+\twithin aggregate init.  Reject double braced-init of scalar\n+\tvariable.\n+\n 2019-02-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/84536"}, {"sha": "c164975318b61ccb400f88c3b8bf930172c0bb00", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb13308543771f56bbc932933b9ec7bbb95d37ac/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb13308543771f56bbc932933b9ec7bbb95d37ac/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=cb13308543771f56bbc932933b9ec7bbb95d37ac", "patch": "@@ -6062,15 +6062,23 @@ reshape_init_r (tree type, reshape_iter *d, bool first_initializer_p,\n \t{\n \t  if (SCALAR_TYPE_P (type))\n \t    {\n-\t      if (cxx_dialect < cxx11\n-\t\t  /* Isn't value-initialization.  */\n-\t\t  || CONSTRUCTOR_NELTS (stripped_init) > 0)\n+\t      if (cxx_dialect < cxx11)\n \t\t{\n \t\t  if (complain & tf_error)\n \t\t    error (\"braces around scalar initializer for type %qT\",\n \t\t\t   type);\n \t\t  init = error_mark_node;\n \t\t}\n+\t      else if (first_initializer_p\n+\t\t       || (CONSTRUCTOR_NELTS (stripped_init) > 0\n+\t\t\t   && (BRACE_ENCLOSED_INITIALIZER_P\n+\t\t\t       (CONSTRUCTOR_ELT (stripped_init,0)->value))))\n+\t\t{\n+\t\t  if (complain & tf_error)\n+\t\t    error (\"too many braces around scalar initializer\"\n+\t\t           \"for type %qT\", type);\n+\t\t  init = error_mark_node;\n+\t\t}\n \t    }\n \t  else\n \t    maybe_warn_cpp0x (CPP0X_INITIALIZER_LISTS);"}, {"sha": "7995f595a470322ab996249fb05da6530e9556d8", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist69.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb13308543771f56bbc932933b9ec7bbb95d37ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist69.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb13308543771f56bbc932933b9ec7bbb95d37ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist69.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist69.C?ref=cb13308543771f56bbc932933b9ec7bbb95d37ac", "patch": "@@ -5,12 +5,12 @@ template <typename T>\n struct ca {\n   T elem[1];\n \n-  ca(const T (&s)[1]): elem{{s}} { }\t   // { dg-error \"braces\" }\n+  ca(const T (&s)[1]): elem{{s}} { }\t   // { dg-error \"invalid\" }\n   ca(const T (&s)[1],int): elem({{s}}) { } // { dg-error \"paren|invalid\" }\n   ca(const T (&s)[1],char): elem(s) { }\t   // { dg-error \"array\" }\n   ca(const T (&s)[1],double): elem{s} { }  // { dg-error \"invalid\" }\n \n-  ca(const T &v): elem{{v}} { }\t      // { dg-error \"braces\" }\n+  ca(const T &v): elem{{v}} { }\t      // OK\n   ca(const T &v,int): elem{{{v}}} { } // { dg-error \"braces\" }\n   ca(const T &v,char): elem{v} { }    // OK\n   ca(const T &v,double): elem({v}) { } // { dg-error \"paren\" }"}, {"sha": "f1d1aa5dfdc27c00747824bf049fb8626c27c8b4", "filename": "gcc/testsuite/g++.dg/cpp1z/direct-enum-init1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb13308543771f56bbc932933b9ec7bbb95d37ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdirect-enum-init1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb13308543771f56bbc932933b9ec7bbb95d37ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdirect-enum-init1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdirect-enum-init1.C?ref=cb13308543771f56bbc932933b9ec7bbb95d37ac", "patch": "@@ -42,7 +42,7 @@ foo ()\n \t\t\t// { dg-error \"narrowing conversion of '-4' from 'int' to 'unsigned char'\" \"\" { target c++17 } .-1 }\n   bar ({ 10 });\t\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'E'\" }\n   bar (E { 9 });\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" \"\" { target c++14_down } }\n-  V v1 = { { 11 } };\t// { dg-error \"braces around scalar initializer for type 'E'\" }\n+  V v1 = { { 11 } };\t// { dg-error \"cannot convert '<brace-enclosed initializer list>' to 'E' in initialization\" }\n   V v2 = { E { 12 } };\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" \"\" { target c++14_down } }\n   V v3 = { E { 5.0 } };\t// { dg-error \"cannot convert 'double' to 'E' in initialization\" \"\" { target c++14_down } }\n \t\t\t// { dg-error \"narrowing conversion of '5.0e.0' from 'double' to 'unsigned char'\" \"\" { target c++17 } .-1 }\n@@ -108,7 +108,7 @@ foo2 ()\n \t\t\t// { dg-error \"narrowing conversion of '-4' from 'int' to 'unsigned char'\" \"\" { target c++17 } .-1 }\n   bar ({ 10 });\t\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'E'\" }\n   bar (E { 9 });\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" \"\" { target c++14_down } }\n-  V v1 = { { 11 } };\t// { dg-error \"braces around scalar initializer for type 'E'\" }\n+  V v1 = { { 11 } };\t// { dg-error \"cannot convert '<brace-enclosed initializer list>' to 'E' in initialization\" }\n   V v2 = { E { 12 } };\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" \"\" { target c++14_down } }\n   V v3 = { E { 5.0 } };\t// { dg-error \"cannot convert 'double' to 'E' in initialization\" \"\" { target c++14_down } }\n \t\t\t// { dg-error \"narrowing conversion of '5.0e.0' from 'double' to 'unsigned char'\" \"\" { target c++17 } .-1 }\n@@ -176,7 +176,7 @@ foo3 ()\n \t\t\t// { dg-error \"narrowing conversion of '-4' from 'int' to 'unsigned char'\" \"\" { target c++17 } .-1 }\n   bar3 ({ 10 });\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'E'\" }\n   bar3 (E { 9 });\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" \"\" { target c++14_down } }\n-  M v1 = { { 11 } };\t// { dg-error \"braces around scalar initializer for type 'E'\" }\n+  M v1 = { { 11 } };\t// { dg-error \"cannot convert '<brace-enclosed initializer list>' to 'E' in initialization\" }\n   M v2 = { L { 12 } };\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" \"\" { target c++14_down } }\n   M v3 = { L { 5.0 } };\t// { dg-error \"cannot convert 'double' to 'E' in initialization\" \"\" { target c++14_down } }\n \t\t\t// { dg-error \"narrowing conversion of '5.0e.0' from 'double' to 'unsigned char'\" \"\" { target c++17 } .-1 }"}, {"sha": "a70c22a1de3ddb54c14862739fed246a399f41fd", "filename": "gcc/testsuite/g++.dg/init/brace1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb13308543771f56bbc932933b9ec7bbb95d37ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fbrace1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb13308543771f56bbc932933b9ec7bbb95d37ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fbrace1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fbrace1.C?ref=cb13308543771f56bbc932933b9ec7bbb95d37ac", "patch": "@@ -1,4 +1,5 @@\n // { dg-do compile }\n \n-int i[4] = { { 3 } }; // { dg-error \"brace\" }\n+int i[4] = { { 3 } }; // { dg-error \"braces\" \"\" { target c++98_only } }\n+int j[4] = { { { 3 } } }; // { dg-error \"braces\" }\n "}, {"sha": "db7085d93ab039dea4dc2a43a7e8f12e1d6a2239", "filename": "gcc/testsuite/g++.dg/init/brace2.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb13308543771f56bbc932933b9ec7bbb95d37ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fbrace2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb13308543771f56bbc932933b9ec7bbb95d37ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fbrace2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fbrace2.C?ref=cb13308543771f56bbc932933b9ec7bbb95d37ac", "patch": "@@ -6,3 +6,4 @@ int a = 2;\n int b = { 2,3 }; // { dg-error \"5:scalar object 'b' requires one element in initializer\" }\n int c = { { 2 } } ; // { dg-error \"braces around scalar initializer\" }\n int d = {}; // { dg-error \"initializer\" \"\" { target { ! c++11 } } }\n+int e = {{}}; // { dg-error \"braces around scalar initializer\" }"}, {"sha": "3a2d93b255633b1b5566a075c5915e622e294476", "filename": "gcc/testsuite/g++.dg/init/union2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb13308543771f56bbc932933b9ec7bbb95d37ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Funion2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb13308543771f56bbc932933b9ec7bbb95d37ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Funion2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Funion2.C?ref=cb13308543771f56bbc932933b9ec7bbb95d37ac", "patch": "@@ -10,4 +10,5 @@ typedef union\n \n A a = { 0 };\n A b = {{ 0 }};\n-A c = {{{ 0 }}};  // { dg-error \"braces\" }\n+A c = {{{ 0 }}};    // { dg-error \"braces\" \"\" { target c++98_only } }\n+A d = {{{{ 0 }}}};  // { dg-error \"braces\" }"}, {"sha": "a0da16a285cad18eb53dcc32b5979b9934a6bf47", "filename": "gcc/testsuite/g++.dg/warn/Wbraces2.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb13308543771f56bbc932933b9ec7bbb95d37ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWbraces2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb13308543771f56bbc932933b9ec7bbb95d37ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWbraces2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWbraces2.C?ref=cb13308543771f56bbc932933b9ec7bbb95d37ac", "patch": "@@ -2,14 +2,14 @@\n // { dg-options \"-Wmissing-braces\" }\n int a[2][2] = { 0, 1, 2, 3 };\t\t\t // { dg-warning \"missing braces\" }\n int b[2][2] = { { 0, 1 }, { 2, 3 } };\n-int c[2][2] = { { { 0 }, 1 }, { 2, 3 } };\t // { dg-error \"braces around scalar\" }\n+int c[2][2] = { { { 0 }, 1 }, { 2, 3 } };\t // { dg-error \"braces around scalar\" \"\" { target c++98_only } }\n struct S { char s[6]; int i; };\n S d = { \"hello\", 1 };\n S e = { { \"hello\" }, 1 };\n-S f = { { { \"hello\" } }, 1 };\t\t\t // { dg-error \"braces around scalar\" }\n+S f = { { { \"hello\" } }, 1 };\t\t\t // { dg-error \"braces around scalar|invalid conversion\"  }\n S g = { 'h', 'e', 'l', 'l', 'o', '\\0', 1 };\t // { dg-warning \"missing braces\" }\n struct T { wchar_t s[6]; int i; };\n T i = { L\"hello\", 1 };\n T j = { { L\"hello\" }, 1 };\n-T k = { { { L\"hello\" } }, 1 };\t\t\t // { dg-error \"braces around scalar\" }\n+T k = { { { L\"hello\" } }, 1 };\t\t\t // { dg-error \"braces around scalar|invalid conversion\" }\n T l = { L'h', L'e', L'l', L'l', L'o', L'\\0', 1 };// { dg-warning \"missing braces\" }"}]}