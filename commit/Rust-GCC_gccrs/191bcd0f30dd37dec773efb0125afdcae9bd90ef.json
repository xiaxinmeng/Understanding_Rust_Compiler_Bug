{"sha": "191bcd0f30dd37dec773efb0125afdcae9bd90ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkxYmNkMGYzMGRkMzdkZWM3NzNlZmIwMTI1YWZkY2FlOWJkOTBlZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-03-06T18:51:26Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-03-06T18:51:26Z"}, "message": "Fix mangling ICE [PR94027]\n\n\tPR c++/94027\n\t* mangle.c (find_substitution): Don't call same_type_p on template\n\targs that cannot match.\n\nNow same_type_p rejects argument packs, we need to be more careful\ncalling it with template argument vector contents.\n\nThe mangler needs to do some comparisons to find the special\nsubstitutions.  While that code looks a little ugly, this seems the\nsmallest fix.", "tree": {"sha": "283aa99d8c6229b01375dcb502ea8f155365f9dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/283aa99d8c6229b01375dcb502ea8f155365f9dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/191bcd0f30dd37dec773efb0125afdcae9bd90ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/191bcd0f30dd37dec773efb0125afdcae9bd90ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/191bcd0f30dd37dec773efb0125afdcae9bd90ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/191bcd0f30dd37dec773efb0125afdcae9bd90ef/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b8393221177617f19e7c5c5c692b8c59f85fffb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b8393221177617f19e7c5c5c692b8c59f85fffb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b8393221177617f19e7c5c5c692b8c59f85fffb"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "98640a671cc570a1b70751df7f8e64a55ca86eb5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/191bcd0f30dd37dec773efb0125afdcae9bd90ef/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/191bcd0f30dd37dec773efb0125afdcae9bd90ef/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=191bcd0f30dd37dec773efb0125afdcae9bd90ef", "patch": "@@ -1,3 +1,9 @@\n+2020-03-06  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/94027\n+\t* mangle.c (find_substitution): Don't call same_type_p on template\n+\targs that cannot match.\n+\n 2020-03-04  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/90938"}, {"sha": "1fc78bfa7536478fdc3479186de9b79c1ade0df4", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/191bcd0f30dd37dec773efb0125afdcae9bd90ef/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/191bcd0f30dd37dec773efb0125afdcae9bd90ef/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=191bcd0f30dd37dec773efb0125afdcae9bd90ef", "patch": "@@ -628,6 +628,8 @@ find_substitution (tree node)\n \t    {\n \t      tree args = CLASSTYPE_TI_ARGS (type);\n \t      if (TREE_VEC_LENGTH (args) == 3\n+\t\t  && (TREE_CODE (TREE_VEC_ELT (args, 0))\n+\t\t      == TREE_CODE (char_type_node))\n \t\t  && same_type_p (TREE_VEC_ELT (args, 0), char_type_node)\n \t\t  && is_std_substitution_char (TREE_VEC_ELT (args, 1),\n \t\t\t\t\t       SUBID_CHAR_TRAITS)\n@@ -652,7 +654,7 @@ find_substitution (tree node)\n \t args <char, std::char_traits<char> > .  */\n       tree args = CLASSTYPE_TI_ARGS (type);\n       if (TREE_VEC_LENGTH (args) == 2\n-\t  && TYPE_P (TREE_VEC_ELT (args, 0))\n+\t  && TREE_CODE (TREE_VEC_ELT (args, 0)) == TREE_CODE (char_type_node)\n \t  && same_type_p (TREE_VEC_ELT (args, 0), char_type_node)\n \t  && is_std_substitution_char (TREE_VEC_ELT (args, 1),\n \t\t\t\t       SUBID_CHAR_TRAITS))"}, {"sha": "03cd68f1b0fcd91fe5f9274cc590e62f32469870", "filename": "gcc/testsuite/g++.dg/pr94027.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/191bcd0f30dd37dec773efb0125afdcae9bd90ef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr94027.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/191bcd0f30dd37dec773efb0125afdcae9bd90ef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr94027.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr94027.C?ref=191bcd0f30dd37dec773efb0125afdcae9bd90ef", "patch": "@@ -0,0 +1,22 @@\n+// { dg-do compile { target c++11 } }\n+// PR 94027 ICE mangling\n+\n+class a {\n+public:\n+  a (char);\n+};\n+struct b {\n+  b (a);\n+};\n+template <typename... aw, int...>\n+void ax (int)\n+{\n+  struct c : b {\n+    c () : b {sizeof...(aw)}\n+    {}\n+  };\n+}\n+\n+void az() {\n+  ax ({});\n+}"}]}