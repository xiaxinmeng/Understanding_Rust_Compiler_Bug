{"sha": "e40fece7c9b3731f4cff060f712c132ff100cab4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQwZmVjZTdjOWIzNzMxZjRjZmYwNjBmNzEyYzEzMmZmMTAwY2FiNA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-11-30T15:59:23Z"}, "committer": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-11-30T16:00:14Z"}, "message": "Fix non-unique testnames\n\ngcc/testsuite\n\n\t* g++.dg/warn/Wnonnull5.C: Fix non-unique testnames.\n\t* g++.dg/warn/Wplacement-new-size-8.C: Likewise.", "tree": {"sha": "0e5a5457b657c1b0eec694c2bb8b0c7a0e22bf27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e5a5457b657c1b0eec694c2bb8b0c7a0e22bf27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e40fece7c9b3731f4cff060f712c132ff100cab4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e40fece7c9b3731f4cff060f712c132ff100cab4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e40fece7c9b3731f4cff060f712c132ff100cab4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e40fece7c9b3731f4cff060f712c132ff100cab4/comments", "author": null, "committer": null, "parents": [{"sha": "82ac923da681dbde2af1bdb353053ec9ee8ef18b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82ac923da681dbde2af1bdb353053ec9ee8ef18b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82ac923da681dbde2af1bdb353053ec9ee8ef18b"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "78862d489931c68f3c1fa7e8467bb80c1ef688c0", "filename": "gcc/testsuite/g++.dg/warn/Wnonnull5.C", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e40fece7c9b3731f4cff060f712c132ff100cab4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnonnull5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e40fece7c9b3731f4cff060f712c132ff100cab4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnonnull5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnonnull5.C?ref=e40fece7c9b3731f4cff060f712c132ff100cab4", "patch": "@@ -36,7 +36,7 @@ struct S\n void warn_nullptr_this ()\n {\n   ((S*)nullptr)->f0 (\"\");        // { dg-warning \"3:'this' pointer null\" \"pr86568\" { xfail *-*-* } }\n-                                 // { dg-warning \"this' pointer null\" \"pr86568\" { target *-*-* } .-1 }\n+                                 // { dg-warning \"this' pointer null\" \"pr86568 second variant\" { target *-*-* } .-1 }\n }\n \n void warn_null_this_cst ()\n@@ -49,15 +49,15 @@ void warn_null_this_var ()\n {\n   S* null = 0;\n   null->f2 (&null);               // { dg-warning \"3:'this' pointer null\" \"pr86568\" { xfail *-*-* } }\n-                                  // { dg-warning \"'this' pointer null\" \"pr86568\" { target *-*-* } .-1 }\n+                                  // { dg-warning \"'this' pointer null\" \"pr86568 second variant\" { target *-*-* } .-1 }\n }\n \n void warn_nullptr (S s)\n {\n   s.f3 (nullptr, &s);              // { dg-warning \"9:argument 1 null where non-null expected\" \"pr86568\" { xfail *-*-* } }\n-                                   // { dg-warning \"argument 1 null where non-null expected\" \"pr86568\" { target *-*-* } .-1 }\n+                                   // { dg-warning \"argument 1 null where non-null expected\" \"pr86568 second variant\" { target *-*-* } .-1 }\n   s.f3 (&s, nullptr);              // { dg-warning \"13:argument 2 null where non-null expected\" \"pr86568\" { xfail *-*-* } }\n-                                   // { dg-warning \"argument 2 null where non-null expected\" \"pr86568\" { target *-*-* } .-1 }\n+                                   // { dg-warning \"argument 2 null where non-null expected\" \"pr86568 second variant\" { target *-*-* } .-1 }\n }\n \n \n@@ -72,9 +72,9 @@ void warn_null_var (S s)\n {\n   void* null = 0;\n   s.f5 (null, &s);                // { dg-warning \"9:argument 1 null where non-null expected\" \"pr86568\" { xfail *-*-* } }\n-                                  // { dg-warning \"argument 1 null where non-null expected\" \"pr86568\" { target *-*-* } .-1 }\n+                                  // { dg-warning \"argument 1 null where non-null expected\" \"pr86568 second variant\" { target *-*-* } .-1 }\n   s.f5 (&s, null);                // { dg-warning \"16:argument 2 null where non-null expected\" \"pr86568\" { xfail *-*-* } }\n-                                  // { dg-warning \"argument 2 null where non-null expected\" \"pr86568\" { target *-*-* } .-1 }\n+                                  // { dg-warning \"argument 2 null where non-null expected\" \"pr86568 second variant\" { target *-*-* } .-1 }\n }\n \n void warn_null_cond (S s, void *null)\n@@ -83,9 +83,9 @@ void warn_null_cond (S s, void *null)\n     return;\n \n   s.f6 (null, &s);                // { dg-warning \"9:argument 1 null where non-null expected\" \"pr86568\" { xfail *-*-* } }\n-                                  // { dg-warning \"argument 1 null where non-null expected\" \"pr86568\" { target *-*-* } .-1 }\n+                                  // { dg-warning \"argument 1 null where non-null expected\" \"pr86568 second variant\" { target *-*-* } .-1 }\n   s.f6 (&s, null);                // { dg-warning \"13:argument 2 null where non-null expected\" \"pr86568\" { xfail *-*-* } }\n-                                  // { dg-warning \"argument 2 null where non-null expected\" \"pr86568\" { target *-*-* } .-1 }\n+                                  // { dg-warning \"argument 2 null where non-null expected\" \"pr86568 second variant\" { target *-*-* } .-1 }\n }\n \n "}, {"sha": "12cd4cda89dde6e4b2980cc8650b942f87fe0053", "filename": "gcc/testsuite/g++.dg/warn/Wplacement-new-size-8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e40fece7c9b3731f4cff060f712c132ff100cab4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWplacement-new-size-8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e40fece7c9b3731f4cff060f712c132ff100cab4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWplacement-new-size-8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWplacement-new-size-8.C?ref=e40fece7c9b3731f4cff060f712c132ff100cab4", "patch": "@@ -43,7 +43,7 @@ void test_cst_off ()\n     /* Offsets are treated as signed so SIZE_MAX is indistinguishable\n        from -1.  */\n     char ca1[1];                // { dg-message \"at offset \\\\d+ from 'ca1' declared here\" \"note\" { xfail *-*-* } }\n-                                // { dg-message \"at offset -1 from 'ca1' declared here\" \"note\" { target *-*-* } .-1 }\n+                                // { dg-message \"at offset -1 from 'ca1' declared here\" \"note second variant\" { target *-*-* } .-1 }\n     new (ca1 + SIZE_MAX) S<1>;  // { dg-warning \"constructing an object of type 'S<1>' and size '1' in a region of type 'char \\\\\\[1]' and size '0'\" }\n   }\n }"}]}