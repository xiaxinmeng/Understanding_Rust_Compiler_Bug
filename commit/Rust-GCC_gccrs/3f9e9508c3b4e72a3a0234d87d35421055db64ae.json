{"sha": "3f9e9508c3b4e72a3a0234d87d35421055db64ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y5ZTk1MDhjM2I0ZTcyYTNhMDIzNGQ4N2QzNTQyMTA1NWRiNjRhZQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-01-10T19:30:33Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-10T19:30:33Z"}, "message": "regclass.c (record_address_regs): Don't use REG_OK_FOR_BASE_P if it is not defined.\n\n        * regclass.c (record_address_regs): Don't use REG_OK_FOR_BASE_P\n        if it is not defined.\n\nFrom-SVN: r17314", "tree": {"sha": "fe140840e3c7a654817a49b472928c669b460a14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe140840e3c7a654817a49b472928c669b460a14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f9e9508c3b4e72a3a0234d87d35421055db64ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f9e9508c3b4e72a3a0234d87d35421055db64ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f9e9508c3b4e72a3a0234d87d35421055db64ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f9e9508c3b4e72a3a0234d87d35421055db64ae/comments", "author": null, "committer": null, "parents": [{"sha": "9e28580c86a71602740377b38f4b48bea079817a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e28580c86a71602740377b38f4b48bea079817a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e28580c86a71602740377b38f4b48bea079817a"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "7bb47591f55d5decf25cbefe269af5b7efcdee03", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9e9508c3b4e72a3a0234d87d35421055db64ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9e9508c3b4e72a3a0234d87d35421055db64ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f9e9508c3b4e72a3a0234d87d35421055db64ae", "patch": "@@ -1,3 +1,8 @@\n+Sat Jan 10 20:30:12 1998  Jeffrey A Law  (law@cygnus.com)\n+ \n+\t* regclass.c (record_address_regs): Don't use REG_OK_FOR_BASE_P\n+\tif it is not defined.\n+ \n Thu Jan  8 21:06:54 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* Makefile.in (OBJ, GEN, RTL_H): Add genrtl.[oh] bits."}, {"sha": "62247ea6b5fd8d1c4a2de514f1dbc8ace206fd48", "filename": "gcc/regclass.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9e9508c3b4e72a3a0234d87d35421055db64ae/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9e9508c3b4e72a3a0234d87d35421055db64ae/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=3f9e9508c3b4e72a3a0234d87d35421055db64ae", "patch": "@@ -1546,6 +1546,7 @@ record_address_regs (x, class, scale)\n \t   of index or base class, give the other the class that the hard\n \t   register is not.  */\n \n+#ifdef REG_OK_FOR_BASE_P\n \telse if (code0 == REG && code1 == REG\n \t\t && REGNO (arg0) < FIRST_PSEUDO_REGISTER\n \t\t && (REG_OK_FOR_BASE_P (arg0) || REG_OK_FOR_INDEX_P (arg0)))\n@@ -1560,6 +1561,7 @@ record_address_regs (x, class, scale)\n \t\t\t       REG_OK_FOR_BASE_P (arg1)\n \t\t\t       ? INDEX_REG_CLASS : BASE_REG_CLASS,\n \t\t\t       scale);\n+#endif\n \n \t/* If one operand is known to be a pointer, it must be the base\n \t   with the other operand the index.  Likewise if the other operand"}]}