{"sha": "f7a80099bdb0a835a35df02093e2f52420d2cfcd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdhODAwOTliZGIwYTgzNWEzNWRmMDIwOTNlMmY1MjQyMGQyY2ZjZA==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2001-01-09T01:08:53Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2001-01-09T01:08:53Z"}, "message": "Fix memory leak\n\nFrom-SVN: r38811", "tree": {"sha": "32c3f4d5fdd861f2938392c6fc1f674a05442cfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32c3f4d5fdd861f2938392c6fc1f674a05442cfa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7a80099bdb0a835a35df02093e2f52420d2cfcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7a80099bdb0a835a35df02093e2f52420d2cfcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7a80099bdb0a835a35df02093e2f52420d2cfcd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7a80099bdb0a835a35df02093e2f52420d2cfcd/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a259aec511b294d3be1df9d54a3bebf8ad89c7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a259aec511b294d3be1df9d54a3bebf8ad89c7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a259aec511b294d3be1df9d54a3bebf8ad89c7c"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "45338c364199acc87d82ce069ab7c7f809fd1956", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7a80099bdb0a835a35df02093e2f52420d2cfcd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7a80099bdb0a835a35df02093e2f52420d2cfcd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f7a80099bdb0a835a35df02093e2f52420d2cfcd", "patch": "@@ -1,3 +1,10 @@\n+2001-01-08  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/arm/arm.c (arm_mark_machine_status): Check to see if\n+\tthe machine structure has been allocated.\n+\t(arm_free_machine_status): New function: Free the machine\n+\tspecific function structure.\n+\n 2001-01-08  Richard Henderson  <rth@redhat.com>\n \n \t* jump.c (simplejump_p): Revert last change."}, {"sha": "4a3436909bb3866898b1abf259dd7a05f0e9ddae", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7a80099bdb0a835a35df02093e2f52420d2cfcd/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7a80099bdb0a835a35df02093e2f52420d2cfcd/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=f7a80099bdb0a835a35df02093e2f52420d2cfcd", "patch": "@@ -76,6 +76,7 @@ static Mmode     select_dominance_cc_mode\tPARAMS ((rtx, rtx, Hint));\n static Ccstar    shift_op\t\t\tPARAMS ((rtx, Hint *));\n static void      arm_init_machine_status\tPARAMS ((struct function *));\n static void      arm_mark_machine_status        PARAMS ((struct function *));\n+static void      arm_free_machine_status        PARAMS ((struct function *));\n static int       number_of_first_bit_set        PARAMS ((int));\n static void      replace_symbols_in_block       PARAMS ((tree, rtx, rtx));\n static void      thumb_exit                     PARAMS ((FILE *, int, rtx));\n@@ -9587,8 +9588,11 @@ arm_mark_machine_status (p)\n {\n   machine_function *machine = p->machine;\n \n-  ggc_mark_rtx (machine->ra_rtx);\n-  ggc_mark_rtx (machine->eh_epilogue_sp_ofs);\n+  if (machine)\n+    {\n+      ggc_mark_rtx (machine->ra_rtx);\n+      ggc_mark_rtx (machine->eh_epilogue_sp_ofs);\n+    }\n }\n \n static void\n@@ -9603,6 +9607,17 @@ arm_init_machine_status (p)\n #endif\n }\n \n+static void\n+arm_free_machine_status (p)\n+     struct function * p;\n+{\n+  if (p->machine)\n+    {\n+      free (p->machine);\n+      p->machine = NULL;\n+    }\n+}\n+\n /* Return an RTX indicating where the return address to the\n    calling function can be found.  */\n rtx\n@@ -9650,6 +9665,7 @@ arm_init_expanders ()\n   /* Arrange to initialize and mark the machine per-function status.  */\n   init_machine_status = arm_init_machine_status;\n   mark_machine_status = arm_mark_machine_status;\n+  free_machine_status = arm_free_machine_status;\n }\n \n /* Generate the rest of a function's prologue.  */"}]}