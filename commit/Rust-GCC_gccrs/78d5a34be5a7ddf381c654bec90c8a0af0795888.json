{"sha": "78d5a34be5a7ddf381c654bec90c8a0af0795888", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhkNWEzNGJlNWE3ZGRmMzgxYzY1NGJlYzkwYzhhMGFmMDc5NTg4OA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-02-23T01:28:59Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-02-23T01:28:59Z"}, "message": "re PR rtl-optimization/20017 (internal compiler error: in rtl_verify_flow_info, at cfgrtl.c:2212)\n\ngcc/\n\tPR rtl-optimization/20017.\n\t* passes.c (rest_of_handle_combine, rest_of_handle_cse,\n\trest_of_handle_cse2, rest_of_handle_gcse): Call\n\tdelete_dead_jumptables immediately before calling cleanup_cfg.\n\ntestsuite/\n\tPR rtl-optimization/20017.\n\t* gcc.dg/pr20017.c: New.\n\nFrom-SVN: r95431", "tree": {"sha": "5ce60a7bc9cf70398ccad1c8317ac978dc617854", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ce60a7bc9cf70398ccad1c8317ac978dc617854"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78d5a34be5a7ddf381c654bec90c8a0af0795888", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78d5a34be5a7ddf381c654bec90c8a0af0795888", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78d5a34be5a7ddf381c654bec90c8a0af0795888", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78d5a34be5a7ddf381c654bec90c8a0af0795888/comments", "author": null, "committer": null, "parents": [{"sha": "263fb23d4aee9876d22ea0dd72fe174335c277f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/263fb23d4aee9876d22ea0dd72fe174335c277f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/263fb23d4aee9876d22ea0dd72fe174335c277f3"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "b83b79afd9a2f49b82825c2925118ede2066eeda", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78d5a34be5a7ddf381c654bec90c8a0af0795888/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78d5a34be5a7ddf381c654bec90c8a0af0795888/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78d5a34be5a7ddf381c654bec90c8a0af0795888", "patch": "@@ -1,3 +1,10 @@\n+2005-02-22  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\tPR rtl-optimization/20017.\n+\t* passes.c (rest_of_handle_combine, rest_of_handle_cse,\n+\trest_of_handle_cse2, rest_of_handle_gcse): Call\n+\tdelete_dead_jumptables immediately before calling cleanup_cfg.\n+\n 2005-02-22  Devang Patel  <dpatel@apple.com>\n \n \tPR 19952"}, {"sha": "956885ab7171fe8e67009509c379bbb2387dd605", "filename": "gcc/passes.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78d5a34be5a7ddf381c654bec90c8a0af0795888/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78d5a34be5a7ddf381c654bec90c8a0af0795888/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=78d5a34be5a7ddf381c654bec90c8a0af0795888", "patch": "@@ -895,6 +895,7 @@ rest_of_handle_combine (void)\n       rebuild_jump_labels (get_insns ());\n       timevar_pop (TV_JUMP);\n \n+      delete_dead_jumptables ();\n       cleanup_cfg (CLEANUP_EXPENSIVE | CLEANUP_UPDATE_LIFE);\n     }\n \n@@ -971,6 +972,9 @@ rest_of_handle_cse (void)\n      expecting CSE to be run.  But always rerun it in a cheap mode.  */\n   cse_not_expected = !flag_rerun_cse_after_loop && !flag_gcse;\n \n+  if (tem)\n+    delete_dead_jumptables ();\n+\n   if (tem || optimize > 1)\n     cleanup_cfg (CLEANUP_EXPENSIVE | CLEANUP_PRE_LOOP);\n \n@@ -1006,6 +1010,7 @@ rest_of_handle_cse2 (void)\n     {\n       timevar_push (TV_JUMP);\n       rebuild_jump_labels (get_insns ());\n+      delete_dead_jumptables ();\n       cleanup_cfg (CLEANUP_EXPENSIVE);\n       timevar_pop (TV_JUMP);\n     }\n@@ -1053,6 +1058,7 @@ rest_of_handle_gcse (void)\n     {\n       timevar_push (TV_JUMP);\n       rebuild_jump_labels (get_insns ());\n+      delete_dead_jumptables ();\n       cleanup_cfg (CLEANUP_EXPENSIVE | CLEANUP_PRE_LOOP);\n       timevar_pop (TV_JUMP);\n     }"}, {"sha": "91b54b0bcba9aa4e8267650b32caa203198b6751", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78d5a34be5a7ddf381c654bec90c8a0af0795888/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78d5a34be5a7ddf381c654bec90c8a0af0795888/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=78d5a34be5a7ddf381c654bec90c8a0af0795888", "patch": "@@ -1,3 +1,8 @@\n+2005-02-22  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\tPR rtl-optimization/20017.\n+\t* gcc.dg/pr20017.c: New.\n+\n 2005-02-22  Devang Patel  <dpatel@apple.com>\n \n \tPR 19952"}, {"sha": "ee425f553778cf6a93fb557948896cf6cb89a351", "filename": "gcc/testsuite/gcc.dg/pr20017.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78d5a34be5a7ddf381c654bec90c8a0af0795888/gcc%2Ftestsuite%2Fgcc.dg%2Fpr20017.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78d5a34be5a7ddf381c654bec90c8a0af0795888/gcc%2Ftestsuite%2Fgcc.dg%2Fpr20017.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr20017.c?ref=78d5a34be5a7ddf381c654bec90c8a0af0795888", "patch": "@@ -0,0 +1,41 @@\n+/* PR rtl-optimization/20017\n+\n+   After CSE/GCSE folds a switch statement to an unconditonal jump,\n+   cfg_cleanup did not remove a dead jump table, confusing the CFG\n+   layout code later on.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O1\" } */\n+/* { dg-options \"-O1 -march=i386\" { target { i?86-*-* && ilp32 } } } */\n+\n+int\n+foo (int *buf, int *p)\n+{\n+  int result;\n+  const int *tmp;\n+\n+  if (*buf)\n+    return 1;\n+\n+  result = 2;\n+  *buf = 2;\n+  tmp = buf;\n+  switch (*tmp)\n+    {\n+    case 3:\n+    case 4:\n+    case 6:\n+    case 14:\n+      return 1;\n+\n+    case 0:\n+      result = *p;\n+\n+      /* Fall through.  */\n+    default:\n+      if (result)\n+\treturn 1;\n+    }\n+\n+  return 0;\n+}"}]}