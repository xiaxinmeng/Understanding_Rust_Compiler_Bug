{"sha": "5cbaf84c191b9a3e3cb26545c808d208bdbf2ab5", "node_id": "C_kwDOANBUbNoAKDVjYmFmODRjMTkxYjlhM2UzY2IyNjU0NWM4MDhkMjA4YmRiZjJhYjU", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-10-13T12:24:05Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-10-13T13:17:06Z"}, "message": "tree-optimization/107160 - avoid reusing multiple accumulators\n\nEpilogue vectorization is not set up to re-use a vectorized\naccumulator consisting of more than one vector.  For non-SLP\nwe always reduce to a single but for SLP that isn't happening.\nIn such case we currenlty miscompile the epilog so avoid this.\n\n\tPR tree-optimization/107160\n\t* tree-vect-loop.cc (vect_create_epilog_for_reduction):\n\tDo not register accumulator if we failed to reduce it\n\tto a single vector.\n\n\t* gcc.dg/vect/pr107160.c: New testcase.", "tree": {"sha": "448937298d1f04e9867d62e5370b6245df7aecbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/448937298d1f04e9867d62e5370b6245df7aecbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cbaf84c191b9a3e3cb26545c808d208bdbf2ab5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cbaf84c191b9a3e3cb26545c808d208bdbf2ab5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cbaf84c191b9a3e3cb26545c808d208bdbf2ab5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cbaf84c191b9a3e3cb26545c808d208bdbf2ab5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5364b425934436b9ba52bd95ed8a8a19ce7af207", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5364b425934436b9ba52bd95ed8a8a19ce7af207", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5364b425934436b9ba52bd95ed8a8a19ce7af207"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "4f9f853cafb77fd79b5f027fa932202a60c6907f", "filename": "gcc/testsuite/gcc.dg/vect/pr107160.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cbaf84c191b9a3e3cb26545c808d208bdbf2ab5/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr107160.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cbaf84c191b9a3e3cb26545c808d208bdbf2ab5/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr107160.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr107160.c?ref=5cbaf84c191b9a3e3cb26545c808d208bdbf2ab5", "patch": "@@ -0,0 +1,41 @@\n+/* { dg-do run } */\n+\n+#include <math.h>\n+\n+#define N 128\n+float fl[N];\n+\n+__attribute__ ((noipa)) void\n+init ()\n+{\n+  for (int i = 0; i < N; i++)\n+    fl[i] = i;\n+}\n+\n+__attribute__ ((noipa)) float\n+foo (int n1)\n+{\n+  float sum0, sum1, sum2, sum3;\n+  sum0 = sum1 = sum2 = sum3 = 0.0f;\n+\n+  int n = (n1 / 4) * 4;\n+  for (int i = 0; i < n; i += 4)\n+    {\n+      sum0 += fabs (fl[i]);\n+      sum1 += fabs (fl[i + 1]);\n+      sum2 += fabs (fl[i + 2]);\n+      sum3 += fabs (fl[i + 3]);\n+    }\n+\n+  return sum0 + sum1 + sum2 + sum3;\n+}\n+\n+int\n+main ()\n+{\n+  init ();\n+  float res = foo (80);\n+  if (res != 3160)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "b1442a9358191cb5b65b4770cf030eef47198aef", "filename": "gcc/tree-vect-loop.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cbaf84c191b9a3e3cb26545c808d208bdbf2ab5/gcc%2Ftree-vect-loop.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cbaf84c191b9a3e3cb26545c808d208bdbf2ab5/gcc%2Ftree-vect-loop.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.cc?ref=5cbaf84c191b9a3e3cb26545c808d208bdbf2ab5", "patch": "@@ -6232,7 +6232,8 @@ vect_create_epilog_for_reduction (loop_vec_info loop_vinfo,\n     }\n \n   /* Record this operation if it could be reused by the epilogue loop.  */\n-  if (STMT_VINFO_REDUC_TYPE (reduc_info) == TREE_CODE_REDUCTION)\n+  if (STMT_VINFO_REDUC_TYPE (reduc_info) == TREE_CODE_REDUCTION\n+      && vec_num == 1)\n     loop_vinfo->reusable_accumulators.put (scalar_results[0],\n \t\t\t\t\t   { orig_reduc_input, reduc_info });\n "}]}