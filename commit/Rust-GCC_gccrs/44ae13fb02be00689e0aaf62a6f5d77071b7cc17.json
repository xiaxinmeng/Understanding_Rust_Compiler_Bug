{"sha": "44ae13fb02be00689e0aaf62a6f5d77071b7cc17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRhZTEzZmIwMmJlMDA2ODllMGFhZjYyYTZmNWQ3NzA3MWI3Y2MxNw==", "commit": {"author": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1996-04-10T21:52:00Z"}, "committer": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1996-04-10T21:52:00Z"}, "message": "Support EXTRA_SPECS\n\nFrom-SVN: r11690", "tree": {"sha": "96ab6cc80370191652def870e679531cc6d2ac82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96ab6cc80370191652def870e679531cc6d2ac82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44ae13fb02be00689e0aaf62a6f5d77071b7cc17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44ae13fb02be00689e0aaf62a6f5d77071b7cc17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44ae13fb02be00689e0aaf62a6f5d77071b7cc17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44ae13fb02be00689e0aaf62a6f5d77071b7cc17/comments", "author": null, "committer": null, "parents": [{"sha": "5717cc73de0a0f1fe698cd2366e310365a4ae459", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5717cc73de0a0f1fe698cd2366e310365a4ae459", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5717cc73de0a0f1fe698cd2366e310365a4ae459"}], "stats": {"total": 160, "additions": 95, "deletions": 65}, "files": [{"sha": "3355c568886ecc13997e1b869a96a24584d2acd0", "filename": "gcc/config/m88k/dgux.h", "status": "modified", "additions": 46, "deletions": 19, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44ae13fb02be00689e0aaf62a6f5d77071b7cc17/gcc%2Fconfig%2Fm88k%2Fdgux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44ae13fb02be00689e0aaf62a6f5d77071b7cc17/gcc%2Fconfig%2Fm88k%2Fdgux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fdgux.h?ref=44ae13fb02be00689e0aaf62a6f5d77071b7cc17", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    Motorola m88100 running DG/UX.\n-   Copyright (C) 1988, 92, 93, 94, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@mcc.com)\n    Currently maintained by (gcc@dg-rtp.dg.com)\n \n@@ -30,7 +30,7 @@ Boston, MA 02111-1307, USA.  */\n   (TARGET_SVR4 ? DWARF_DEBUG : SDB_DEBUG)\n \n #ifndef VERSION_INFO2\n-#define VERSION_INFO2   \"$Revision: 1.18 $\"\n+#define VERSION_INFO2   \"$Revision: 1.20 $\"\n #endif\n #ifndef NO_BUGS\n #define AS_BUG_IMMEDIATE_LABEL\n@@ -83,24 +83,12 @@ Boston, MA 02111-1307, USA.  */\n    -traditional, or restricting include files to one specific source\n    target, specify full DG/UX features.  */\n #undef\tCPP_SPEC\n-#define\tCPP_SPEC \"%{!m88000:%{!m88100:%{m88110:-D__m88110__}}} \\\n-\t\t  %{!m88000:%{!m88110:%{m88100:-D__m88100__}}} \\\n-\t\t  %{!ansi:%{!traditional:-D__OPEN_NAMESPACE__}} \\\n+#define\tCPP_SPEC \"%(cpp_cpu) \n \t\t  %{msvr3:-D_M88KBCS_TARGET} %{!msvr3:-D_DGUX_TARGET}\"\n \n /* Assembler support (-V, silicon filter, legends for mxdb).  */\n #undef\tASM_SPEC\n-#define ASM_SPEC \"\\\n-%{V} %{v:%{!V:-V}} %{pipe:%{!.s: - }\\\n-%{!msvr3:%{!m88110:-KV3 }%{m88110:-KV04.00 }}}\\\n-%{g:\\\n-%{mno-legend:-Wc,off}\\\n-%{!mno-legend:-Wc,-fix-bb,-s\\\"%i\\\"\\\n-%{traditional:,-lc}%{!traditional:,-lansi-c}\\\n-%{mstandard:,-keep-std}\\\n-%{mkeep-coff:,-keep-coff}\\\n-%{mexternal-legend:,-external}\\\n-%{mocs-frame-position:,-ocs}}}\"\n+#define ASM_SPEC \"%(asm_cpu) %{!msvr3:%{!m88110:-KV3 }%{m88110:-KV04.00 }}}\"\n \n /* Override svr4.h.  */\n #undef\tASM_FINAL_SPEC\n@@ -126,14 +114,53 @@ Boston, MA 02111-1307, USA.  */\n \t\t   %{symbolic:-Bsymbolic -G -dy} \\\n \t\t   %{pg:-L/usr/lib/libp}%{p:-L/usr/lib/libp}\"\n #undef\tSTARTFILE_SPEC\n-#define STARTFILE_SPEC \"%{!shared:%{!symbolic:%{pg:gcrt0.o%s} \\\n+#define STARTFILE_SPEC \"%(startfile_default)\"\n+\n+\n+/* This macro defines names of additional specifications to put in the specs\n+   that can be used in various specifications like CC1_SPEC.  Its definition\n+   is an initializer with a subgrouping for each command option.\n+\n+   Each subgrouping contains a string constant, that defines the\n+   specification name, and a string constant that used by the GNU CC driver\n+   program.\n+\n+   Do not define this macro if it does not need to do anything.  */\n+\n+#define EXTRA_SPECS                                     \\\n+  { \"cpp_cpu\",          CPP_CPU_SPEC },                 \\\n+  { \"asm_cpu\",          ASM_CPU_SPEC },                 \\\n+  { \"startfile_default\", STARTFILE_DEFAULT_SPEC },  \\\n+  { \"startfile_crtbegin\", STARTFILE_CRTBEGIN_SPEC }\n+   \n+#define ASM_CPU_SPEC \"\\\n+\t\t  %{V} %{v:%{!V:-V}}\n+\t\t  %{g:\\\n+\t\t  %{mno-legend:-Wc,off}\\\n+\t\t  %{!mno-legend:-Wc,-fix-bb,-s\\\"%i\\\"\\\n+\t\t  %{traditional:,-lc}\\\n+\t\t  %{!traditional:,-lansi-c}\\\n+\t\t  %{mstandard:,-keep-std}\\\n+\t\t  %{mexternal-legend:,-external}\\\n+\t\t  %{mocs-frame-position:,-ocs}}}\"\n+\n+#define CPP_CPU_SPEC \"\\\n+                  %{!m88000:%{!m88100:%{m88110:-D__m88110__}}} \\\n+\t\t  %{!m88000:%{!m88110:%{m88100:-D__m88100__}}} \\\n+\t\t  %{!ansi:%{!traditional:-D__OPEN_NAMESPACE__}}\"\n+\n+#define STARTFILE_DEFAULT_SPEC \"\\\n+                        %{!shared:%{!symbolic:%{pg:gcrt0.o%s} \\\n \t\t\t %{!pg:%{p:/lib/mcrt0.o}%{!p:/lib/crt0.o}} \\\n-\t\t\t %{msvr3:m88kdgux.ld%s bcscrtbegin.o%s} \\\n-\t\t\t %{!msvr3:crtbegin.o%s} \\\n+\t\t\t %(startfile_crtbegin)\n \t\t\t %{svr4:%{ansi:/lib/values-Xc.o} \\\n \t\t\t  %{!ansi:%{traditional:/lib/values-Xt.o} \\\n \t\t\t   %{!traditional:/usr/lib/values-Xa.o}}}}}\"\n \n+#define STARTFILE_CRTBEGIN_SPEC \"\\\n+\t\t\t %{msvr3:m88kdgux.ld%s bcscrtbegin.o%s} \\\n+\t\t\t %{!msvr3:crtbegin.o%s}\"\n+\n #undef\tGPLUSPLUS_INCLUDE_DIR\n #define GPLUSPLUS_INCLUDE_DIR \"/usr/opt/g++/lib/g++-include\"\n "}, {"sha": "24526565669d7205161d41b9cd304a48c142bef4", "filename": "gcc/config/m88k/dguxbcs.h", "status": "modified", "additions": 9, "deletions": 20, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44ae13fb02be00689e0aaf62a6f5d77071b7cc17/gcc%2Fconfig%2Fm88k%2Fdguxbcs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44ae13fb02be00689e0aaf62a6f5d77071b7cc17/gcc%2Fconfig%2Fm88k%2Fdguxbcs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fdguxbcs.h?ref=44ae13fb02be00689e0aaf62a6f5d77071b7cc17", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    Motorola m88100 running DG/UX.\n-   Copyright (C) 1988, 89, 90, 91, 93, 94, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@mcc.com)\n    Currently maintained by (gcc@dg-rtp.dg.com)\n \n@@ -36,36 +36,25 @@ Boston, MA 02111-1307, USA.  */\n \n /* Assembler support (-V, silicon filter, legends for mxdb).  */\n #undef\tASM_SPEC\n-#define ASM_SPEC \"\\\n-%{V} %{v:%{!V:-V}} %{pipe:%{!.s: - }\\\n-%{msvr4:%{!m88110:-KV3 }%{m88110:-KV04.00 }}}\\\n-%{!mlegend:%{mstandard:-Wc,off}}\\\n-%{mlegend:-Wc,-fix-bb,-s\\\"%i\\\"\\\n-%{traditional:,-lc}%{!traditional:,-lansi-c}\\\n-%{mstandard:,-keep-std}\\\n-%{mkeep-coff:,-keep-coff}\\\n-%{mexternal-legend:,-external}\\\n-%{mocs-frame-position:,-ocs}}\"\n+#define ASM_SPEC \"%(asm_cpu) %{msvr4:%{!m88110:-KV3 }%{m88110:-KV04.00 }}}\"\n \n /* If -m88100 is in effect, add -Dm88100; similarly for -m88110.\n    Here, the CPU_DEFAULT is assumed to be -m88000.  If not -ansi,\n    -traditional, or restricting include files to one specific source\n    target, specify full DG/UX features.  */\n #undef\tCPP_SPEC\n-#define\tCPP_SPEC \"%{!m88000:%{!m88100:%{m88110:-D__m88110__}}} \\\n-\t\t  %{!m88000:%{!m88110:%{m88100:-D__m88100__}}} \\\n-\t\t  %{!ansi:%{!traditional:-D__OPEN_NAMESPACE__}} \\\n+#define\tCPP_SPEC \"%(cpp_cpu) \n \t\t  %{!msvr4:-D_M88KBCS_TARGET} %{msvr4:-D_DGUX_TARGET}\"\n \n /* Linker and library spec's.\n    -msvr3 is the default if -msvr4 is not specified. */\n #undef\tLIB_SPEC\n #define LIB_SPEC \"%{msvr4:%{!shared:-lstaticdgc}} %{!shared:%{!symbolic:-lc}}\"\n+\n #undef\tSTARTFILE_SPEC\n-#define STARTFILE_SPEC \"%{!shared:%{!symbolic:%{pg:gcrt0.o%s} \\\n-\t\t\t %{!pg:%{p:/lib/mcrt0.o}%{!p:/lib/crt0.o}} \\\n+#define STARTFILE_SPEC \"%(startfile_default)\"\n+\n+#undef  STARTFILE_CRTBEGIN_SPEC\n+#define STARTFILE_CRTBEGIN_SPEC \"\\\n \t\t\t %{!msvr4:m88kdgux.ld%s bcscrtbegin.o%s} \\\n-\t\t\t %{msvr4:crtbegin.o%s} \\\n-\t\t\t %{svr4:%{ansi:/lib/values-Xc.o} \\\n-\t\t\t  %{!ansi:%{traditional:/lib/values-Xt.o} \\\n-\t\t\t   %{!traditional:/usr/lib/values-Xa.o}}}}}\"\n+\t\t\t %{msvr4:crtbegin.o%s}\""}, {"sha": "fee0a67d3781bf4d0fe45cea927acc8f09df28c5", "filename": "gcc/config/m88k/m88k.c", "status": "modified", "additions": 30, "deletions": 17, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44ae13fb02be00689e0aaf62a6f5d77071b7cc17/gcc%2Fconfig%2Fm88k%2Fm88k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44ae13fb02be00689e0aaf62a6f5d77071b7cc17/gcc%2Fconfig%2Fm88k%2Fm88k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.c?ref=44ae13fb02be00689e0aaf62a6f5d77071b7cc17", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for insn-output.c for Motorola 88000.\n-   Copyright (C) 1988, 92, 93, 94, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@mcc.com)\n    Currently maintained by (gcc@dg-rtp.dg.com)\n \n@@ -261,17 +261,17 @@ emit_move_sequence (operands, mode, scratch)\n   /* Simplify the source if we need to.  */\n   if (GET_CODE (operand1) != HIGH && immediate_operand (operand1, mode))\n     {\n-\tif (GET_CODE (operand1) != CONST_INT\n-\t    && GET_CODE (operand1) != CONST_DOUBLE)\n-\t  {\n-\t    rtx temp = ((reload_in_progress || reload_completed)\n-\t\t\t? operand0 : 0);\n-\t    operands[1] = legitimize_address (flag_pic\n-\t\t\t\t\t      && symbolic_address_p (operand1),\n-\t\t\t\t\t      operand1, temp, scratch);\n-\t    if (mode != SImode)\n-\t      operands[1] = gen_rtx (SUBREG, mode, operands[1], 0);\n-\t  }\n+      if (GET_CODE (operand1) != CONST_INT\n+\t  && GET_CODE (operand1) != CONST_DOUBLE)\n+\t{\n+\t  rtx temp = ((reload_in_progress || reload_completed)\n+\t\t      ? operand0 : 0);\n+\t  operands[1] = legitimize_address (flag_pic\n+\t\t\t\t\t    && symbolic_address_p (operand1),\n+\t\t\t\t\t    operand1, temp, scratch);\n+\t  if (mode != SImode)\n+\t    operands[1] = gen_rtx (SUBREG, mode, operands[1], 0);\n+\t}\n     }\n \n   /* Now have insn-emit do whatever it normally does.  */\n@@ -1635,7 +1635,7 @@ output_ascii (file, opcode, max, p, size)\n \t  fprintf (file, \"\\\\%03o\", c);\n \t  num += 4;\n \t}\n-      else if (c >= ' ' && c < 0177)\n+      else if ((c >= ' ' && c < 0177) || (c == '\\t'))\n \t{\n \t  putc (c, file);\n \t  num++;\n@@ -1646,7 +1646,6 @@ output_ascii (file, opcode, max, p, size)\n \t  switch (c)\n \t    {\n \t      /* Some assemblers can't handle \\a, \\v, or \\?.  */\n-\t    case '\\t': c = 't'; goto escape;\n \t    case '\\f': c = 'f'; goto escape;\n \t    case '\\b': c = 'b'; goto escape;\n \t    case '\\r': c = 'r'; goto escape;\n@@ -1933,6 +1932,9 @@ m88k_begin_prologue (stream, size)\n      FILE *stream;\n      int size;\n {\n+  if (TARGET_OMIT_LEAF_FRAME_POINTER && ! quiet_flag && leaf_function_p ())\n+    fprintf (stderr, \"$\");\\\n+\n   m88k_prologue_done = 1;\t/* it's ok now to put out ln directives */\n }\n \n@@ -2041,6 +2043,17 @@ m88k_end_epilogue (stream, size)\n   if (insn == 0 || GET_CODE (insn) != BARRIER)\n     fprintf (stream, \"\\tjmp\\t %s\\n\", reg_names[1]);\n \n+  /* If the last insn is a barrier, and the insn before that is a call,\n+     then add a nop instruction so that tdesc can walk the stack correctly\n+     even though there is no epilogue. (Otherwise, the label for the\n+     end of the tdesc region ends up at the start of the next function. */\n+  if (insn && GET_CODE (insn) == BARRIER)\n+    {\n+      insn = prev_nonnote_insn (insn);\n+      if (insn && GET_CODE (insn) == CALL_INSN)\n+        fprintf (stream, \"\\tor\\t %s,%s,%s\\n\",reg_names[0],reg_names[0],reg_names[0]);\n+    }\n+\n   output_short_branch_defs (stream);\n \n   fprintf (stream, \"\\n\");\n@@ -2476,12 +2489,12 @@ output_block_profiler (file, blockno)\n   /* @@ Need to deal with PIC.  I'm not sure what the requirements are on\n      register usage, so I used r26/r27 to be safe.  */\n   fprintf (file, \"\\tor.u\\t %s,%s,%shi16(%s+%d)\\n\", reg_names[27], reg_names[0],\n-\t\t m88k_pound_sign, &block[1], 4 * blockno);\n+\t   m88k_pound_sign, &block[1], 4 * blockno);\n   fprintf (file, \"\\tld\\t %s,%s,%slo16(%s+%d)\\n\", reg_names[26], reg_names[27],\n-\t\t m88k_pound_sign, &block[1], 4 * blockno);\n+\t   m88k_pound_sign, &block[1], 4 * blockno);\n   fprintf (file, \"\\taddu\\t %s,%s,1\\n\", reg_names[26], reg_names[26]);\n   fprintf (file, \"\\tst\\t %s,%s,%slo16(%s+%d)\\n\", reg_names[26], reg_names[27],\n-\t\t m88k_pound_sign, &block[1], 4 * blockno);\n+\t   m88k_pound_sign, &block[1], 4 * blockno);\n }\n \f\n /* Determine whether a function argument is passed in a register, and"}, {"sha": "69f8bacf9d752d7f41aef3145b411b46fe2d3e5b", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44ae13fb02be00689e0aaf62a6f5d77071b7cc17/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44ae13fb02be00689e0aaf62a6f5d77071b7cc17/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=44ae13fb02be00689e0aaf62a6f5d77071b7cc17", "patch": "@@ -1,9 +1,8 @@\n /* Definitions of target machine for GNU compiler for\n    Motorola m88100 in an 88open OCS/BCS environment.\n-   Copyright (C) 1988, 89, 90, 91, 93, 94, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n-   Enhanced by Michael Meissner (meissner@cygnus.com)\n-   Version 2 port by Tom Wood (twood@pets.sps.mot.com)\n+   Currently maintained by (gcc@dg-rtp.dg.com)\n \n This file is part of GNU CC.\n \n@@ -197,15 +196,15 @@ extern char * reg_names[];\n \n /* Print subsidiary information on the compiler version in use.\n    Redefined in sysv4.h, and luna.h.  */\n-#define VERSION_INFO1\t\"88open OCS/BCS, \"\n+#define VERSION_INFO1\t\"m88k, \"\n #ifndef VERSION_INFO2\n-#define VERSION_INFO2   \"$Revision: 1.67 $\"\n+#define VERSION_INFO2   \"$Revision: 1.68 $\"\n #endif\n \n #ifndef VERSION_STRING\n #define VERSION_STRING  version_string\n #ifdef __STDC__\n-#define TM_RCS_ID      \"@(#)\" __FILE__ \" $Revision: 1.67 $ \" __DATE__\n+#define TM_RCS_ID      \"@(#)\" __FILE__ \" $Revision: 1.68 $ \" __DATE__\n #else\n #define TM_RCS_ID      \"$What: <@(#) m88k.h,v\t1.1.1.2.2.2> $\"\n #endif  /* __STDC__ */\n@@ -295,6 +294,7 @@ extern char * reg_names[];\n     { \"no-serialize-volatile\",\t\t MASK_NO_SERIALIZE_VOLATILE }, \\\n     { \"serialize-volatile\",\t\t-MASK_NO_SERIALIZE_VOLATILE }, \\\n     { \"omit-leaf-frame-pointer\",\t MASK_OMIT_LEAF_FRAME_POINTER }, \\\n+    { \"no-omit-leaf-frame-pointer\",     -MASK_OMIT_LEAF_FRAME_POINTER }, \\\n     SUBTARGET_SWITCHES \\\n     /* Default switches */ \\\n     { \"\",\t\t\t\t TARGET_DEFAULT }, \\\n@@ -361,6 +361,8 @@ extern char * reg_names[];\n \tif (flag_pic)\t\t\t\t\t\t\t     \\\n \t  error (\"-mshort-data-%s and PIC are incompatible\", m88k_short_data); \\\n       }\t\t\t\t\t\t\t\t\t     \\\n+    if (TARGET_OMIT_LEAF_FRAME_POINTER)       /* keep nonleaf frame pointers */    \\\n+      flag_omit_frame_pointer = 1;                                         \\\n   } while (0)\n \f\n /*** Storage Layout ***/"}, {"sha": "bf5124b2244b090d7d6b299753ec50c999bb86ac", "filename": "gcc/config/m88k/m88k.md", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44ae13fb02be00689e0aaf62a6f5d77071b7cc17/gcc%2Fconfig%2Fm88k%2Fm88k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44ae13fb02be00689e0aaf62a6f5d77071b7cc17/gcc%2Fconfig%2Fm88k%2Fm88k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.md?ref=44ae13fb02be00689e0aaf62a6f5d77071b7cc17", "patch": "@@ -1,8 +1,7 @@\n ;;- Machine description for the Motorola 88000 for GNU C compiler\n-;;  Copyright (C) 1988, 92, 93, 94, 1995 Free Software Foundation, Inc.\n+;;;  Copyright (C) 1988, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.\n ;;  Contributed by Michael Tiemann (tiemann@mcc.com)\n-;;  Additional changes by Michael Meissner (meissner@osf.org)\n-;;  Version 2 port by Tom Wood (twood@pets.sps.mot.com)\n+;;  Currently maintained by (gcc@dg-rtp.dg.com)\n \n ;; This file is part of GNU CC.\n "}]}