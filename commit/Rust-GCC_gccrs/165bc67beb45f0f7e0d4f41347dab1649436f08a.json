{"sha": "165bc67beb45f0f7e0d4f41347dab1649436f08a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY1YmM2N2JlYjQ1ZjBmN2UwZDRmNDEzNDdkYWIxNjQ5NDM2ZjA4YQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2020-04-21T17:45:02Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2021-03-23T15:11:51Z"}, "message": "testsuite/arm: Fix -mfloat-abi order in arm_v8_1m_mve_ok_nocache and arm_v8_1m_mve_fp_ok_nocache\n\nMake the order in which we try -mfloat-abi options consistent with the\nother similar effective targets: try softfp first, then hard.\n\nThis shows that a few tests implicitly rely on -mfloat-abi=hard, so we\nadd this option via dg-additional-options so that it comes after any\npotential -mfloat-abi option that the preceding effective-targets\nmight have added.\n\narmv8_1m-fpXX-move-1.c tests don't need arm_hard_ok because they don't\ninclude arm_mve.h: adding -mfloat-abi=hard when using a soft/softfp\ntoolchain does not lead to the missing include gnu/stubs-*.h error.\n\nThis patch makes armv8_1m-fpXX-move-1.c pass on arm-linux-gnueabi, and\nthe other tests become unsupported (instead of fail) on this target.\n\nOn arm-eabi with default cpu/fpu/mode and a+rm multilibs, the same\nmve/intrinsics/* tests become unsupported instead of pass because\narm_hard_ok fails with \"selected processor lacks an FPU\". Since we\nalso override the fpu via dg-options, we'd need another effective\ntarget (say arm_hard_mve_ok) that would check -mfloat-abi=hard\n-mfpu=auto -march=armv8.1-m.main+mve.fp at the same time. But we have\nalready so many arm effective targets, it doesn't seem like a good way\nforward.\n\n2021-03-19  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tgcc/testsuite/\n\t* lib/target-supports.exp\n\t(check_effective_target_arm_v8_1m_mve_fp_ok_nocache): Fix\n\t-mfloat-abi= options order.\n\t(check_effective_target_arm_v8_1m_mve_ok_nocache): Likewise\n\t* gcc.target/arm/mve/intrinsics/mve_vector_float2.c: Add\n\tarm_hard_ok effective target and -mfloat-abi=hard additional\n\toption.\n\t* gcc.target/arm/mve/intrinsics/mve_vector_int.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_vector_uint.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_vector_uint1.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_vector_uint2.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vgetq_lane_s64.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vgetq_lane_u64.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsetq_lane_s64.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsetq_lane_u64.c: Likewise.\n\t* gcc.target/arm/armv8_1m-fp16-move-1.c: Add -mfloat-abi=hard\n\tadditional option.\n\t* gcc.target/arm/armv8_1m-fp32-move-1.c: Likewise.\n\t* gcc.target/arm/armv8_1m-fp64-move-1.c: Likewise.", "tree": {"sha": "c472bd83047332dee5b93103dd24eaef525e5e3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c472bd83047332dee5b93103dd24eaef525e5e3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/165bc67beb45f0f7e0d4f41347dab1649436f08a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/165bc67beb45f0f7e0d4f41347dab1649436f08a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/165bc67beb45f0f7e0d4f41347dab1649436f08a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/165bc67beb45f0f7e0d4f41347dab1649436f08a/comments", "author": null, "committer": null, "parents": [{"sha": "bed1736f3aa3909649617dd402d13db1fa8ef5d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bed1736f3aa3909649617dd402d13db1fa8ef5d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bed1736f3aa3909649617dd402d13db1fa8ef5d4"}], "stats": {"total": 35, "additions": 26, "deletions": 9}, "files": [{"sha": "f5ab6e719f412619d9ee51d4dd5359ed48a74f54", "filename": "gcc/testsuite/gcc.target/arm/armv8_1m-fp16-move-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv8_1m-fp16-move-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv8_1m-fp16-move-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv8_1m-fp16-move-1.c?ref=165bc67beb45f0f7e0d4f41347dab1649436f08a", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -mfloat-abi=hard -mfp16-format=ieee\" } */\n+/* { dg-options \"-O -mfp16-format=ieee\" } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n+/* { dg-additional-options \"-mfloat-abi=hard\" } *\n /* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n /*"}, {"sha": "2f62e839545145156be3f3273762189e037ebbcd", "filename": "gcc/testsuite/gcc.target/arm/armv8_1m-fp32-move-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv8_1m-fp32-move-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv8_1m-fp32-move-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv8_1m-fp32-move-1.c?ref=165bc67beb45f0f7e0d4f41347dab1649436f08a", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -mfloat-abi=hard\" } */\n+/* { dg-options \"-O\" } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n+/* { dg-additional-options \"-mfloat-abi=hard\" } *\n /* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n /*"}, {"sha": "d236f0826c309fce39f75d0b6cc98777cdbd3196", "filename": "gcc/testsuite/gcc.target/arm/armv8_1m-fp64-move-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv8_1m-fp64-move-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv8_1m-fp64-move-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv8_1m-fp64-move-1.c?ref=165bc67beb45f0f7e0d4f41347dab1649436f08a", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -mfloat-abi=hard\" } */\n+/* { dg-options \"-O\" } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n+/* { dg-additional-options \"-mfloat-abi=hard\" } *\n /* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n /*"}, {"sha": "6728776da28bbf4d813adc0e3f16af232f3d3b4c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_vector_float2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_float2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_float2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_float2.c?ref=165bc67beb45f0f7e0d4f41347dab1649436f08a", "patch": "@@ -1,5 +1,7 @@\n+/* { dg-require-effective-target arm_hard_ok } */\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-additional-options \"-mfloat-abi=hard\" } */\n /* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n \n #include \"arm_mve.h\""}, {"sha": "029e02f0c6ae12009ee44b9c794775c83df843e4", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_vector_int.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_int.c?ref=165bc67beb45f0f7e0d4f41347dab1649436f08a", "patch": "@@ -1,5 +1,7 @@\n+/* { dg-require-effective-target arm_hard_ok } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n+/* { dg-additional-options \"-mfloat-abi=hard\" } */\n /* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n \n #include \"arm_mve.h\""}, {"sha": "c15810015b9ed2d8d009c85891eacb8f2a012f46", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_vector_uint.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_uint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_uint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_uint.c?ref=165bc67beb45f0f7e0d4f41347dab1649436f08a", "patch": "@@ -1,5 +1,7 @@\n+/* { dg-require-effective-target arm_hard_ok } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n+/* { dg-additional-options \"-mfloat-abi=hard\" } */\n /* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n \n #include \"arm_mve.h\""}, {"sha": "d30fce05f6863fb28b07b2807419c1d614a1a8ee", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_vector_uint1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_uint1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_uint1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_uint1.c?ref=165bc67beb45f0f7e0d4f41347dab1649436f08a", "patch": "@@ -1,5 +1,7 @@\n+/* { dg-require-effective-target arm_hard_ok } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n+/* { dg-additional-options \"-mfloat-abi=hard\" } */\n /* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n \n #include \"arm_mve.h\""}, {"sha": "ae689144cd164ddb1793451a3b9ebdc31899f7ad", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_vector_uint2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_uint2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_uint2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_uint2.c?ref=165bc67beb45f0f7e0d4f41347dab1649436f08a", "patch": "@@ -1,5 +1,7 @@\n+/* { dg-require-effective-target arm_hard_ok } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n+/* { dg-additional-options \"-mfloat-abi=hard\" } */\n /* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n \n #include \"arm_mve.h\""}, {"sha": "63b25088eeea01acf8885d295170b7f245acfc94", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vgetq_lane_s64.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvgetq_lane_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvgetq_lane_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvgetq_lane_s64.c?ref=165bc67beb45f0f7e0d4f41347dab1649436f08a", "patch": "@@ -1,7 +1,8 @@\n /* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n+/* { dg-require-effective-target arm_hard_ok } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n-/* { dg-additional-options \"-O2\" } */\n+/* { dg-additional-options \"-mfloat-abi=hard -O2\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "a4b900fc66bfd6e06588473aa0a59f3cb3a3ec0a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vgetq_lane_u64.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvgetq_lane_u64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvgetq_lane_u64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvgetq_lane_u64.c?ref=165bc67beb45f0f7e0d4f41347dab1649436f08a", "patch": "@@ -1,7 +1,8 @@\n /* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n+/* { dg-require-effective-target arm_hard_ok } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n-/* { dg-additional-options \"-O2\" } */\n+/* { dg-additional-options \"-mfloat-abi=hard -O2\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "430df669f2a72311c548b92b519888c4ef2b6974", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vsetq_lane_s64.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_s64.c?ref=165bc67beb45f0f7e0d4f41347dab1649436f08a", "patch": "@@ -1,7 +1,8 @@\n /* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n+/* { dg-require-effective-target arm_hard_ok } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n-/* { dg-additional-options \"-O2\" } */\n+/* { dg-additional-options \"-mfloat-abi=hard -O2\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "0e040121cf0037f8232c9e5a63d06d99cba6fe6f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vsetq_lane_u64.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_u64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_u64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvsetq_lane_u64.c?ref=165bc67beb45f0f7e0d4f41347dab1649436f08a", "patch": "@@ -1,7 +1,8 @@\n /* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n+/* { dg-require-effective-target arm_hard_ok } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n-/* { dg-additional-options \"-O2\" } */\n+/* { dg-additional-options \"-mfloat-abi=hard -O2\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "1af7619273fefde9673ec99ab6e943863d3579ca", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bc67beb45f0f7e0d4f41347dab1649436f08a/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=165bc67beb45f0f7e0d4f41347dab1649436f08a", "patch": "@@ -5025,7 +5025,7 @@ proc check_effective_target_arm_v8_1m_mve_fp_ok_nocache { } {\n \n     # Iterate through sets of options to find the compiler flags that\n     # need to be added to the -march option.\n-    foreach flags {\"\" \"-mfloat-abi=hard -mfpu=auto -march=armv8.1-m.main+mve.fp\" \"-mfloat-abi=softfp -mfpu=auto -march=armv8.1-m.main+mve.fp\"} {\n+    foreach flags {\"\" \"-mfloat-abi=softfp -mfpu=auto -march=armv8.1-m.main+mve.fp\" \"-mfloat-abi=hard -mfpu=auto -march=armv8.1-m.main+mve.fp\"} {\n \tif { [check_no_compiler_messages_nocache \\\n \t\t  arm_v8_1m_mve_fp_ok object {\n \t    #include <arm_mve.h>\n@@ -5208,7 +5208,7 @@ proc check_effective_target_arm_v8_1m_mve_ok_nocache { } {\n \n     # Iterate through sets of options to find the compiler flags that\n     # need to be added to the -march option.\n-    foreach flags {\"\" \"-mfloat-abi=hard -mfpu=auto -march=armv8.1-m.main+mve\" \"-mfloat-abi=softfp -mfpu=auto -march=armv8.1-m.main+mve\"} {\n+    foreach flags {\"\" \"-mfloat-abi=softfp -mfpu=auto -march=armv8.1-m.main+mve\" \"-mfloat-abi=hard -mfpu=auto -march=armv8.1-m.main+mve\"} {\n         if { [check_no_compiler_messages_nocache \\\n                   arm_v8_1m_mve_ok object {\n             #if !defined (__ARM_FEATURE_MVE)"}]}