{"sha": "e03c5670a94ef91893c16ceee54eb12d469b7d95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAzYzU2NzBhOTRlZjkxODkzYzE2Y2VlZTU0ZWIxMmQ0NjliN2Q5NQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-10-29T17:56:19Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-10-29T17:56:19Z"}, "message": "alpha-protos.h (literal_section): Add prototype.\n\n        * alpha/alpha-protos.h (literal_section): Add prototype.\n        (alpha_need_linkage, alpha_start_function,alpha_end_function):\n        Constify a char*.\n\n        * alpha/alpha.c (alpha_ra_ever_killed, set_frame_related_p): Add\n        prototype.\n        (alpha_start_function, alpha_end_function, float_strings,\n        alpha_need_linkage): Constify a char*\n\n        * alpha/alpha.h (ASM_OUTPUT_ASCII, ASM_OUTPUT_MI_THUNK): Likewise.\n\n        * alpha/alpha32.h (ASM_OUTPUT_MI_THUNK): Likewise.\n\n        * alpha/elf.h (ASM_FINISH_DECLARE_OBJECT): Likewise.\n\n        * alpha/vms.h (ASM_OUTPUT_SECTION_NAME): Likewise.\n\nFrom-SVN: r30264", "tree": {"sha": "923a71f5e73057c108d032157363818cf5fde001", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/923a71f5e73057c108d032157363818cf5fde001"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e03c5670a94ef91893c16ceee54eb12d469b7d95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e03c5670a94ef91893c16ceee54eb12d469b7d95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e03c5670a94ef91893c16ceee54eb12d469b7d95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e03c5670a94ef91893c16ceee54eb12d469b7d95/comments", "author": null, "committer": null, "parents": [{"sha": "a8f227e703c969f41a6d40dac7114a35636101c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8f227e703c969f41a6d40dac7114a35636101c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8f227e703c969f41a6d40dac7114a35636101c3"}], "stats": {"total": 50, "additions": 36, "deletions": 14}, "files": [{"sha": "c11df26f32219b50669f31689f4f04f456df976f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03c5670a94ef91893c16ceee54eb12d469b7d95/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03c5670a94ef91893c16ceee54eb12d469b7d95/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e03c5670a94ef91893c16ceee54eb12d469b7d95", "patch": "@@ -1,3 +1,22 @@\n+Fri Oct 29 13:53:48 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* alpha/alpha-protos.h (literal_section): Add prototype.\n+\t(alpha_need_linkage, alpha_start_function,alpha_end_function):\n+\tConstify a char*.\n+\n+\t* alpha/alpha.c (alpha_ra_ever_killed, set_frame_related_p): Add\n+\tprototype.\n+\t(alpha_start_function, alpha_end_function, float_strings,\n+\talpha_need_linkage): Constify a char*\n+\n+\t* alpha/alpha.h (ASM_OUTPUT_ASCII, ASM_OUTPUT_MI_THUNK): Likewise.\n+\n+\t* alpha/alpha32.h (ASM_OUTPUT_MI_THUNK): Likewise.\n+\n+\t* alpha/elf.h (ASM_FINISH_DECLARE_OBJECT): Likewise.\n+\n+\t* alpha/vms.h (ASM_OUTPUT_SECTION_NAME): Likewise.\n+\n Fri Oct 29 13:49:39 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* flow.c (debug_flow_info): Add prototype."}, {"sha": "d9a2d7415fc23d45e1e23f763ad5ee5b22330e99", "filename": "gcc/config/alpha/alpha-protos.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03c5670a94ef91893c16ceee54eb12d469b7d95/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03c5670a94ef91893c16ceee54eb12d469b7d95/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha-protos.h?ref=e03c5670a94ef91893c16ceee54eb12d469b7d95", "patch": "@@ -18,6 +18,7 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+extern void literal_section PROTO ((void));\n extern void override_options PROTO ((void));\n extern int zap_mask PROTO ((HOST_WIDE_INT));\n extern int direct_return PROTO ((void));\n@@ -103,7 +104,7 @@ extern rtx alpha_arg_info_reg_val PROTO ((CUMULATIVE_ARGS));\n extern void alpha_write_linkage PROTO ((FILE *));\n #endif /* OPEN_VMS */\n \n-extern void alpha_need_linkage PROTO ((char *, int));\n+extern void alpha_need_linkage PROTO ((const char *, int));\n \n #ifdef TREE_CODE\n extern tree alpha_build_va_list PROTO ((void));\n@@ -112,6 +113,6 @@ extern void alpha_va_start PROTO ((int, tree, rtx));\n extern rtx alpha_va_arg PROTO ((tree, tree));\n #endif\n extern int vms_valid_decl_attribute_p PROTO ((tree, tree, tree, tree));\n-extern void alpha_start_function PROTO ((FILE *, char *, tree));\n-extern void alpha_end_function PROTO ((FILE *, char *, tree));\n+extern void alpha_start_function PROTO ((FILE *, const char *, tree));\n+extern void alpha_end_function PROTO ((FILE *, const char *, tree));\n #endif /* TREE CODE */"}, {"sha": "078244076a5ed05775d0121754ccd11da82c5092", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03c5670a94ef91893c16ceee54eb12d469b7d95/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03c5670a94ef91893c16ceee54eb12d469b7d95/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=e03c5670a94ef91893c16ceee54eb12d469b7d95", "patch": "@@ -114,6 +114,8 @@ static void alpha_init_machine_status\n   PROTO((struct function *p));\n static void alpha_mark_machine_status\n   PROTO((struct function *p));\n+static int alpha_ra_ever_killed PROTO((void));\n+static rtx set_frame_related_p PROTO((void));\n \n \n /* Get the number of args of a function in one of two ways.  */\n@@ -3721,7 +3723,7 @@ alpha_expand_prologue ()\n void\n alpha_start_function (file, fnname, decl)\n      FILE *file;\n-     char *fnname;\n+     const char *fnname;\n      tree decl ATTRIBUTE_UNUSED;\n {\n   unsigned long imask = 0;\n@@ -4112,7 +4114,7 @@ alpha_expand_epilogue ()\n void\n alpha_end_function (file, fnname, decl)\n      FILE *file;\n-     char *fnname;\n+     const char *fnname;\n      tree decl ATTRIBUTE_UNUSED;\n {\n   /* End the function.  */\n@@ -5104,7 +5106,7 @@ alpha_reorg (insns)\n \f\n /* Check a floating-point value for validity for a particular machine mode.  */\n \n-static char * const float_strings[] =\n+static const char * const float_strings[] =\n {\n   /* These are for FLOAT_VAX.  */\n    \"1.70141173319264430e+38\", /* 2^127 (2^24 - 1) / 2^24 */\n@@ -5236,7 +5238,7 @@ static struct alpha_links *alpha_links_base = 0;\n \n void\n alpha_need_linkage (name, is_local)\n-    char *name;\n+    const char *name;\n     int is_local;\n {\n   rtx x;\n@@ -5316,7 +5318,7 @@ alpha_write_linkage (stream)\n \n void\n alpha_need_linkage (name, is_local)\n-     char *name ATTRIBUTE_UNUSED;\n+     const char *name ATTRIBUTE_UNUSED;\n      int is_local ATTRIBUTE_UNUSED;\n {\n }"}, {"sha": "c39a2a4f51f7cdd75bde84fd2b9635e8f8eae8cb", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03c5670a94ef91893c16ceee54eb12d469b7d95/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03c5670a94ef91893c16ceee54eb12d469b7d95/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=e03c5670a94ef91893c16ceee54eb12d469b7d95", "patch": "@@ -2098,12 +2098,12 @@ literal_section ()\t\t\t\t\t\t\\\n #define ASM_OUTPUT_ASCII(MYFILE, MYSTRING, MYLENGTH) \\\n   do {\t\t\t\t\t\t\t\t\t      \\\n     FILE *_hide_asm_out_file = (MYFILE);\t\t\t\t      \\\n-    unsigned char *_hide_p = (unsigned char *) (MYSTRING);\t\t      \\\n+    const unsigned char *_hide_p = (const unsigned char *) (MYSTRING);\t      \\\n     int _hide_thissize = (MYLENGTH);\t\t\t\t\t      \\\n     int _size_so_far = 0;\t\t\t\t\t\t      \\\n     {\t\t\t\t\t\t\t\t\t      \\\n       FILE *asm_out_file = _hide_asm_out_file;\t\t\t\t      \\\n-      unsigned char *p = _hide_p;\t\t\t\t\t      \\\n+      const unsigned char *p = _hide_p;\t\t\t\t\t      \\\n       int thissize = _hide_thissize;\t\t\t\t\t      \\\n       int i;\t\t\t\t\t\t\t\t      \\\n       fprintf (asm_out_file, \"\\t.ascii \\\"\");\t\t\t\t      \\\n@@ -2222,7 +2222,7 @@ literal_section ()\t\t\t\t\t\t\\\n \n #define ASM_OUTPUT_MI_THUNK(FILE, THUNK_FNDECL, DELTA, FUNCTION)\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n-  char *fn_name = XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0);\t\t\\\n+  const char *fn_name = XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0);\t\\\n   int reg;\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   /* Mark end of prologue.  */\t\t\t\t\t\t\\"}, {"sha": "fff442e12499ea19867cae6914b15dd9a48a1755", "filename": "gcc/config/alpha/alpha32.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03c5670a94ef91893c16ceee54eb12d469b7d95/gcc%2Fconfig%2Falpha%2Falpha32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03c5670a94ef91893c16ceee54eb12d469b7d95/gcc%2Fconfig%2Falpha%2Falpha32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha32.h?ref=e03c5670a94ef91893c16ceee54eb12d469b7d95", "patch": "@@ -85,7 +85,7 @@ Boston, MA 02111-1307, USA.  */\n #undef ASM_OUTPUT_MI_THUNK\n #define ASM_OUTPUT_MI_THUNK(FILE, THUNK_FNDECL, DELTA, FUNCTION)\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n-  char *op, *fn_name = XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0);\t\t\\\n+  const char *op, *fn_name = XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0);\t\\\n   int reg;\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   /* Mark end of prologue.  */\t\t\t\t\t\t\\"}, {"sha": "f676009fe9ec19ad5dda31d89e8e07aaef62ea7f", "filename": "gcc/config/alpha/elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03c5670a94ef91893c16ceee54eb12d469b7d95/gcc%2Fconfig%2Falpha%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03c5670a94ef91893c16ceee54eb12d469b7d95/gcc%2Fconfig%2Falpha%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Felf.h?ref=e03c5670a94ef91893c16ceee54eb12d469b7d95", "patch": "@@ -446,7 +446,7 @@ void FN ()\t\t\t\t\t\\\n \n #define ASM_FINISH_DECLARE_OBJECT(FILE, DECL, TOP_LEVEL, AT_END)\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n-    char *name = XSTR (XEXP (DECL_RTL (DECL), 0), 0);\t\t\t\\\n+    const char *name = XSTR (XEXP (DECL_RTL (DECL), 0), 0);\t\t\\\n     HOST_WIDE_INT size;\t\t\t\t\t\t\t\\\n     if (!flag_inhibit_size_directive\t\t\t\t\t\\\n \t&& DECL_SIZE (DECL)\t\t\t\t\t\t\\"}, {"sha": "1baaf7e12eaf5c26c7000971ca0478606ee0814c", "filename": "gcc/config/alpha/vms.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03c5670a94ef91893c16ceee54eb12d469b7d95/gcc%2Fconfig%2Falpha%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03c5670a94ef91893c16ceee54eb12d469b7d95/gcc%2Fconfig%2Falpha%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms.h?ref=e03c5670a94ef91893c16ceee54eb12d469b7d95", "patch": "@@ -445,7 +445,7 @@ extern int vms_valid_decl_attribute_p ();\n #define ASM_OUTPUT_SECTION_NAME(FILE,DECL,NAME,RELOC)\t\t\\\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n-      char *flags;\t\t\t\t\t \t\\\n+      const char *flags;\t\t\t\t \t\\\n       int ovr = 0;\t\t\t\t\t\t\\\n       if (DECL && DECL_MACHINE_ATTRIBUTES (DECL)\t\t\\\n \t  && lookup_attribute\t\t\t\t\t\\"}]}