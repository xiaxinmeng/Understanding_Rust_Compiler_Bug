{"sha": "50668cf626cf30043890f1000f500ce69a54fedb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA2NjhjZjYyNmNmMzAwNDM4OTBmMTAwMGY1MDBjZTY5YTU0ZmVkYg==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2005-03-15T00:36:33Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-03-15T00:36:33Z"}, "message": "Index: gcc/ChangeLog\n2005-03-14  Geoffrey Keating  <geoffk@apple.com>\n\n\t* doc/cppopts.texi (-fexec-charset): Add concept index entry.\n\t(-fwide-exec-charset): Likewise.\n\t(-finput-charset): Likewise.\n\t* doc/invoke.texi (Warning Options): Document -Wnormalized=.\n\t* c-opts.c (c_common_handle_option): Handle -Wnormalized=.\n\t* c.opt (Wnormalized): New.\n\nIndex: libcpp/ChangeLog\n2005-03-14  Geoffrey Keating  <geoffk@apple.com>\n\n\t* init.c (cpp_create_reader): Default warn_normalize to normalized_C.\n\t* charset.c: Update for new format of ucnid.h.\n\t(ucn_valid_in_identifier): Update for new format of ucnid.h.\n\tAdd NST parameter, and update it; update callers.\n\t(cpp_valid_ucn): Add NST parameter, update callers.  Replace abort\n\twith cpp_error.\n\t(convert_ucn): Pass normalize_state to cpp_valid_ucn.\n\t* internal.h (struct normalize_state): New.\n\t(INITIAL_NORMALIZE_STATE): New.\n\t(NORMALIZE_STATE_RESULT): New.\n\t(NORMALIZE_STATE_UPDATE_IDNUM): New.\n\t(_cpp_valid_ucn): New.\n\t* lex.c (warn_about_normalization): New.\n\t(forms_identifier_p): Add normalize_state parameter, update callers.\n\t(lex_identifier): Add normalize_state parameter, update callers.  Keep\n\tthe state current.\n\t(lex_number): Likewise.\n\t(_cpp_lex_direct): Pass normalize_state to subroutines.  Check\n\tit with warn_about_normalization.\n\t* makeucnid.c: New.\n\t* ucnid.h: Replace.\n\t* ucnid.pl: Remove.\n\t* ucnid.tab: Make appropriate for input to makeucnid.c.  Remove\n\tcomments about obsolete version of C++.\n\t* include/cpplib.h (enum cpp_normalize_level): New.\n\t(struct cpp_options): Add warn_normalize field.\n\nIndex: gcc/testsuite/ChangeLog\n2005-03-14  Geoffrey Keating  <geoffk@apple.com>\n\n\t* gcc.dg/cpp/normalize-1.c: New.\n\t* gcc.dg/cpp/normalize-2.c: New.\n\t* gcc.dg/cpp/normalize-3.c: New.\n\t* gcc.dg/cpp/normalize-4.c: New.\n\t* gcc.dg/cpp/ucnid-4.c: New.\n\t* gcc.dg/cpp/ucnid-5.c: New.\n\t* g++.dg/cpp/normalize-1.C: New.\n\t* g++.dg/cpp/ucnid-1.C: New.\n\nFrom-SVN: r96459", "tree": {"sha": "d3cd092701f32b8f84eec7a95a4e244aafcf795e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3cd092701f32b8f84eec7a95a4e244aafcf795e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50668cf626cf30043890f1000f500ce69a54fedb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50668cf626cf30043890f1000f500ce69a54fedb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50668cf626cf30043890f1000f500ce69a54fedb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50668cf626cf30043890f1000f500ce69a54fedb/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd8b38b9eb3dfdc7709ad0088ff543a3a2df67ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd8b38b9eb3dfdc7709ad0088ff543a3a2df67ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd8b38b9eb3dfdc7709ad0088ff543a3a2df67ec"}], "stats": {"total": 2256, "additions": 1708, "deletions": 548}, "files": [{"sha": "13e2a83a1e81bfddec68b61a479b6e530379d762", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -1,3 +1,12 @@\n+2005-03-14  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* doc/cppopts.texi (-fexec-charset): Add concept index entry.\n+\t(-fwide-exec-charset): Likewise.\n+\t(-finput-charset): Likewise.\n+\t* doc/invoke.texi (Warning Options): Document -Wnormalized=.\n+\t* c-opts.c (c_common_handle_option): Handle -Wnormalized=.\n+\t* c.opt (Wnormalized): New.\n+\n 2005-03-14  Devang Patel  <dpatel@apple.com>\n \n \t* doc/invoke.texi: Add reference to Visibility document."}, {"sha": "731511ab6ee5b16ee114453ff17bfef16beca916", "filename": "gcc/c-opts.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -460,6 +460,19 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n       cpp_opts->warn_multichar = value;\n       break;\n \n+    case OPT_Wnormalized_:\n+      if (!value || (arg && strcasecmp (arg, \"none\") == 0))\n+\tcpp_opts->warn_normalize = normalized_none;\n+      else if (!arg || strcasecmp (arg, \"nfkc\") == 0)\n+\tcpp_opts->warn_normalize = normalized_KC;\n+      else if (strcasecmp (arg, \"id\") == 0)\n+\tcpp_opts->warn_normalize = normalized_identifier_C;\n+      else if (strcasecmp (arg, \"nfc\") == 0)\n+\tcpp_opts->warn_normalize = normalized_C;\n+      else\n+\terror (\"argument %qs to %<-Wnormalized%> not recognized\", arg);\n+      break;\n+\n     case OPT_Wreturn_type:\n       warn_return_type = value;\n       break;"}, {"sha": "e5260f1671c2dcc711c60f99c4ca8b93499a150e", "filename": "gcc/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -285,6 +285,10 @@ Wnonnull\n C ObjC Var(warn_nonnull)\n Warn about NULL being passed to argument slots marked as requiring non-NULL\n \n+Wnormalized=\n+C ObjC C++ ObjC++ Joined\n+-Wnormalized=<id|nfc|nfkc>\tWarn about non-normalised Unicode strings\n+\n Wold-style-cast\n C++ ObjC++ Var(warn_old_style_cast)\n Warn if a C-style cast is used in a program"}, {"sha": "c6376c635d732bb1d587478d3a6427945f71c094", "filename": "gcc/doc/cppopts.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Fdoc%2Fcppopts.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Fdoc%2Fcppopts.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppopts.texi?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -530,12 +530,14 @@ ignored.  The default is 8.\n \n @item -fexec-charset=@var{charset}\n @opindex fexec-charset\n+@cindex character set, execution\n Set the execution character set, used for string and character\n constants.  The default is UTF-8.  @var{charset} can be any encoding\n supported by the system's @code{iconv} library routine.\n \n @item -fwide-exec-charset=@var{charset}\n @opindex fwide-exec-charset\n+@cindex character set, wide execution\n Set the wide execution character set, used for wide string and\n character constants.  The default is UTF-32 or UTF-16, whichever\n corresponds to the width of @code{wchar_t}.  As with\n@@ -545,6 +547,7 @@ problems with encodings that do not fit exactly in @code{wchar_t}.\n \n @item -finput-charset=@var{charset}\n @opindex finput-charset\n+@cindex character set, input\n Set the input character set, used for translation from the character\n set of the input file to the source character set used by GCC@.  If the\n locale does not specify, or GCC cannot get this information from the"}, {"sha": "2e08c4f3cdb6a7cda569ac695fb93c4aa8261894", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -3039,6 +3039,51 @@ Do not warn if a multicharacter constant (@samp{'FOOF'}) is used.\n Usually they indicate a typo in the user's code, as they have\n implementation-defined values, and should not be used in portable code.\n \n+@item -Wnormalized=<none|id|nfc|nfkc>\n+@opindex Wnormalized\n+@cindex NFC\n+@cindex NFKC\n+@cindex character set, input normalization\n+In ISO C and ISO C++, two identifiers are different if they are\n+different sequences of characters.  However, sometimes when characters\n+outside the basic ASCII character set are used, you can have two\n+different character sequences that look the same.  To avoid confusion,\n+the ISO 10646 standard sets out some @dfn{normalization rules} which\n+when applied ensure that two sequences that look the same are turned into\n+the same sequence.  GCC can warn you if you are using identifiers which\n+have not been normalized; this option controls that warning.\n+\n+There are four levels of warning that GCC supports.  The default is\n+@option{-Wnormalized=nfc}, which warns about any identifier which is\n+not in the ISO 10646 ``C'' normalized form, @dfn{NFC}.  NFC is the\n+recommended form for most uses.\n+\n+Unfortunately, there are some characters which ISO C and ISO C++ allow\n+in identifiers that when turned into NFC aren't allowable as\n+identifiers.  That is, there's no way to use these symbols in portable\n+ISO C or C++ and have all your identifiers in NFC.\n+@option{-Wnormalized=id} suppresses the warning for these characters.\n+It is hoped that future versions of the standards involved will correct\n+this, which is why this option is not the default.\n+\n+You can switch the warning off for all characters by writing\n+@option{-Wnormalized=none}.  You would only want to do this if you\n+were using some other normalization scheme (like ``D''), because\n+otherwise you can easily create bugs that are literally impossible to see.\n+\n+Some characters in ISO 10646 have distinct meanings but look identical\n+in some fonts or display methodologies, especially once formatting has\n+been applied.  For instance @code{\\u207F}, ``SUPERSCRIPT LATIN SMALL\n+LETTER N'', will display just like a regular @code{n} which has been\n+placed in a superscript.  ISO 10646 defines the @dfn{NFKC}\n+normalisation scheme to convert all these into a standard form as\n+well, and GCC will warn if your code is not in NFKC if you use\n+@option{-Wnormalized=nfkc}.  This warning is comparable to warning\n+about every identifier that contains the letter O because it might be\n+confused with the digit 0, and so is not the default, but may be\n+useful as a local coding convention if the programming environment is\n+unable to be fixed to display these characters distinctly.\n+\n @item -Wno-deprecated-declarations\n @opindex Wno-deprecated-declarations\n Do not warn about uses of functions, variables, and types marked as"}, {"sha": "647f1554abe4550baa4e8be2becd1c22bba621b7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -1,3 +1,14 @@\n+2005-03-14  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* gcc.dg/cpp/normalize-1.c: New.\n+\t* gcc.dg/cpp/normalize-2.c: New.\n+\t* gcc.dg/cpp/normalize-3.c: New.\n+\t* gcc.dg/cpp/normalize-4.c: New.\n+\t* gcc.dg/cpp/ucnid-4.c: New.\n+\t* gcc.dg/cpp/ucnid-5.c: New.\n+\t* g++.dg/cpp/normalize-1.C: New.\n+\t* g++.dg/cpp/ucnid-1.C: New.\n+\n 2005-03-14  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* gcc.dg/pr18628.c: New."}, {"sha": "8c49602d99ea752436b605c61b2495f8468d1ea4", "filename": "gcc/testsuite/g++.dg/cpp/normalize-1.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fnormalize-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fnormalize-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fnormalize-1.C?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do preprocess } */\n+/* { dg-options \"-Wnormalized=id\" } */\n+\n+\\u00AA\n+\\u00B7\n+\\u0F43  /* { dg-warning \"not in NFC\" } */\n+a\\u05B8\\u05B9\\u05B9\\u05BBb\n+ a\\u05BB\\u05B9\\u05B8\\u05B9b  /* { dg-warning \"not in NFC\" } */\n+\\u09CB\n+\\u09C7\\u09BE /* { dg-warning \"not in NFC\" } */\n+\\u0B4B\n+\\u0B47\\u0B3E /* { dg-warning \"not in NFC\" } */\n+\\u0BCA\n+\\u0BC6\\u0BBE /* { dg-warning \"not in NFC\" } */\n+\\u0BCB\n+\\u0BC7\\u0BBE /* { dg-warning \"not in NFC\" } */\n+\\u0CCA\n+\\u0CC6\\u0CC2 /* { dg-warning \"not in NFC\" } */\n+\\u0D4A\n+\\u0D46\\u0D3E /* { dg-warning \"not in NFC\" } */\n+\\u0D4B\n+\\u0D47\\u0D3E /* { dg-warning \"not in NFC\" } */\n+\n+K\n+\\u212A\n+\n+\\u03AC\n+\\u1F71 /* { dg-warning \"not in NFC\" } */\n+\n+\\uAC00\n+\\u1100\\u1161\n+\\uAC01\n+\\u1100\\u1161\\u11A8\n+\\uAC00\\u11A8"}, {"sha": "ccbb1ea094fb83a65496f6dc3b8ac059043365d3", "filename": "gcc/testsuite/g++.dg/cpp/ucnid-1.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fucnid-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fucnid-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fucnid-1.C?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do preprocess } */\n+/* { dg-options \"-pedantic\" } */\n+\n+\\u00AA /* { dg-error \"not valid in an identifier\" } */\n+\\u00AB /* { dg-error \"not valid in an identifier\" } */\n+\\u00B6 /* { dg-error \"not valid in an identifier\" } */\n+\\u00BA /* { dg-error \"not valid in an identifier\" } */\n+\\u00C0\n+\\u00D6\n+\\u0384\n+\n+\\u0669 /* { dg-error \"not valid in an identifier\" } */\n+A\\u0669 /* { dg-error \"not valid in an identifier\" } */\n+0\\u00BA /* { dg-error \"not valid in an identifier\" } */\n+0\\u0669 /* { dg-error \"not valid in an identifier\" } */\n+\\u0E59\n+A\\u0E59"}, {"sha": "768e1930e7a1689194746e8ba8f68c2b7af66c4a", "filename": "gcc/testsuite/gcc.dg/cpp/normalize-1.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-1.c?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=c99\" } */\n+\n+\\u00AA\n+\\u00B7\n+\\u0F43  /* { dg-warning \"not in NFC\" } */\n+a\\u05B8\\u05B9\\u05B9\\u05BBb\n+ a\\u05BB\\u05B9\\u05B8\\u05B9b  /* { dg-warning \"not in NFC\" } */\n+\\u09CB\n+\\u09C7\\u09BE /* { dg-warning \"not in NFC\" } */\n+\\u0B4B\n+\\u0B47\\u0B3E /* { dg-warning \"not in NFC\" } */\n+\\u0BCA\n+\\u0BC6\\u0BBE /* { dg-warning \"not in NFC\" } */\n+\\u0BCB\n+\\u0BC7\\u0BBE /* { dg-warning \"not in NFC\" } */\n+\\u0CCA\n+\\u0CC6\\u0CC2 /* { dg-warning \"not in NFC\" } */\n+\\u0D4A\n+\\u0D46\\u0D3E /* { dg-warning \"not in NFC\" } */\n+\\u0D4B\n+\\u0D47\\u0D3E /* { dg-warning \"not in NFC\" } */\n+\n+K\n+\\u212A /* { dg-warning \"not in NFC\" } */\n+\n+\\u03AC\n+\\u1F71 /* { dg-warning \"not in NFC\" } */\n+\n+\\uAC00\n+\\u1100\\u1161 /* { dg-warning \"not in NFC\" } */\n+\\uAC01\n+\\u1100\\u1161\\u11A8 /* { dg-warning \"not in NFC\" } */\n+\\uAC00\\u11A8 /* { dg-warning \"not in NFC\" } */"}, {"sha": "28ef2f18e4282ae9bbae3bc2feb90a70bfe4d30b", "filename": "gcc/testsuite/gcc.dg/cpp/normalize-2.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-2.c?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=c99 -Wnormalized=nfkc\" } */\n+\n+\\u00AA  /* { dg-warning \"not in NFKC\" } */\n+\\u00B7\n+\\u0F43  /* { dg-warning \"not in NFC\" } */\n+a\\u05B8\\u05B9\\u05B9\\u05BBb\n+ a\\u05BB\\u05B9\\u05B8\\u05B9b  /* { dg-warning \"not in NFC\" } */\n+\\u09CB\n+\\u09C7\\u09BE /* { dg-warning \"not in NFC\" } */\n+\\u0B4B\n+\\u0B47\\u0B3E /* { dg-warning \"not in NFC\" } */\n+\\u0BCA\n+\\u0BC6\\u0BBE /* { dg-warning \"not in NFC\" } */\n+\\u0BCB\n+\\u0BC7\\u0BBE /* { dg-warning \"not in NFC\" } */\n+\\u0CCA\n+\\u0CC6\\u0CC2 /* { dg-warning \"not in NFC\" } */\n+\\u0D4A\n+\\u0D46\\u0D3E /* { dg-warning \"not in NFC\" } */\n+\\u0D4B\n+\\u0D47\\u0D3E /* { dg-warning \"not in NFC\" } */\n+\n+K\n+\\u212A /* { dg-warning \"not in NFC\" } */\n+\n+\\u03AC\n+\\u1F71 /* { dg-warning \"not in NFC\" } */\n+\n+\\uAC00\n+\\u1100\\u1161 /* { dg-warning \"not in NFC\" } */\n+\\uAC01\n+\\u1100\\u1161\\u11A8 /* { dg-warning \"not in NFC\" } */\n+\\uAC00\\u11A8 /* { dg-warning \"not in NFC\" } */"}, {"sha": "040749208608f09b1f57dafea360229e70bf5e2f", "filename": "gcc/testsuite/gcc.dg/cpp/normalize-3.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-3.c?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=c99 -Wnormalized=id\" } */\n+\n+\\u00AA\n+\\u00B7\n+\\u0F43  /* { dg-warning \"not in NFC\" } */\n+a\\u05B8\\u05B9\\u05B9\\u05BBb\n+ a\\u05BB\\u05B9\\u05B8\\u05B9b  /* { dg-warning \"not in NFC\" } */\n+\\u09CB\n+\\u09C7\\u09BE /* { dg-warning \"not in NFC\" } */\n+\\u0B4B\n+\\u0B47\\u0B3E /* { dg-warning \"not in NFC\" } */\n+\\u0BCA\n+\\u0BC6\\u0BBE /* { dg-warning \"not in NFC\" } */\n+\\u0BCB\n+\\u0BC7\\u0BBE /* { dg-warning \"not in NFC\" } */\n+\\u0CCA\n+\\u0CC6\\u0CC2 /* { dg-warning \"not in NFC\" } */\n+\\u0D4A\n+\\u0D46\\u0D3E /* { dg-warning \"not in NFC\" } */\n+\\u0D4B\n+\\u0D47\\u0D3E /* { dg-warning \"not in NFC\" } */\n+\n+K\n+\\u212A\n+\n+\\u03AC\n+\\u1F71 /* { dg-warning \"not in NFC\" } */\n+\n+\\uAC00\n+\\u1100\\u1161\n+\\uAC01\n+\\u1100\\u1161\\u11A8\n+\\uAC00\\u11A8"}, {"sha": "1ee3ff545d5604082022c9f9162bd6b133b17b0b", "filename": "gcc/testsuite/gcc.dg/cpp/normalize-4.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-4.c?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=c99 -Wnormalized=none\" } */\n+\n+\\u00AA\n+\\u00B7\n+\\u0F43\n+a\\u05B8\\u05B9\\u05B9\\u05BBb\n+ a\\u05BB\\u05B9\\u05B8\\u05B9b\n+\\u09CB\n+\\u09C7\\u09BE\n+\\u0B4B\n+\\u0B47\\u0B3E\n+\\u0BCA\n+\\u0BC6\\u0BBE\n+\\u0BCB\n+\\u0BC7\\u0BBE\n+\\u0CCA\n+\\u0CC6\\u0CC2\n+\\u0D4A\n+\\u0D46\\u0D3E\n+\\u0D4B\n+\\u0D47\\u0D3E\n+\n+K\n+\\u212A\n+\n+\\u03AC\n+\\u1F71\n+\n+\\uAC00\n+\\u1100\\u1161\n+\\uAC01\n+\\u1100\\u1161\\u11A8\n+\\uAC00\\u11A8"}, {"sha": "e41a3f5907d92dd27c82a88c1b8f3ae8eda2fdf5", "filename": "gcc/testsuite/gcc.dg/cpp/ucnid-4.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-4.c?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=c99\" } */\n+\n+\\u00AA\n+\\u00AB /* { dg-error \"not valid in an identifier\" } */\n+\\u00B6 /* { dg-error \"not valid in an identifier\" } */\n+\\u00BA\n+\\u00C0\n+\\u00D6\n+\\u0384\n+\n+\\u0669 /* { dg-error \"not valid at the start of an identifier\" } */\n+A\\u0669\n+0\\u00BA\n+0\\u0669\n+\\u0E59 /* { dg-error \"not valid at the start of an identifier\" } */\n+A\\u0E59"}, {"sha": "8fcaeac6f3179ba2153a94ce45b29ba3a4ad0f6f", "filename": "gcc/testsuite/gcc.dg/cpp/ucnid-5.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-5.c?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=c99 -pedantic\" } */\n+\n+\\u00AA\n+\\u00AB /* { dg-error \"not valid in an identifier\" } */\n+\\u00B6 /* { dg-error \"not valid in an identifier\" } */\n+\\u00BA\n+\\u00C0\n+\\u00D6\n+\\u0384 /* { dg-error \"not valid in an identifier\" } */\n+\n+\\u0669 /* { dg-error \"not valid at the start of an identifier\" } */\n+A\\u0669\n+0\\u00BA\n+0\\u0669\n+\\u0E59 /* { dg-error \"not valid at the start of an identifier\" } */\n+A\\u0E59"}, {"sha": "9f4303c221c32ba92f907a0b620c4d320a9f8c51", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -1,3 +1,32 @@\n+2005-03-14  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* init.c (cpp_create_reader): Default warn_normalize to normalized_C.\n+\t* charset.c: Update for new format of ucnid.h.\n+\t(ucn_valid_in_identifier): Update for new format of ucnid.h.\n+\tAdd NST parameter, and update it; update callers.\n+\t(cpp_valid_ucn): Add NST parameter, update callers.  Replace abort\n+\twith cpp_error.\n+\t(convert_ucn): Pass normalize_state to cpp_valid_ucn.\n+\t* internal.h (struct normalize_state): New.\n+\t(INITIAL_NORMALIZE_STATE): New.\n+\t(NORMALIZE_STATE_RESULT): New.\n+\t(NORMALIZE_STATE_UPDATE_IDNUM): New.\n+\t(_cpp_valid_ucn): New.\n+\t* lex.c (warn_about_normalization): New.\n+\t(forms_identifier_p): Add normalize_state parameter, update callers.\n+\t(lex_identifier): Add normalize_state parameter, update callers.  Keep\n+\tthe state current.\n+\t(lex_number): Likewise.\n+\t(_cpp_lex_direct): Pass normalize_state to subroutines.  Check\n+\tit with warn_about_normalization.\n+\t* makeucnid.c: New.\n+\t* ucnid.h: Replace.\n+\t* ucnid.pl: Remove.\n+\t* ucnid.tab: Make appropriate for input to makeucnid.c.  Remove\n+\tcomments about obsolete version of C++.\n+\t* include/cpplib.h (enum cpp_normalize_level): New.\n+\t(struct cpp_options): Add warn_normalize field.\n+\n 2005-03-11  Geoffrey Keating  <geoffk@apple.com>\n \n \t* directives.c (glue_header_name): Update call to cpp_spell_token."}, {"sha": "f028b371440bdbdb58296e31d3833b0926a0ecc0", "filename": "libcpp/charset.c", "status": "modified", "additions": 110, "deletions": 20, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/libcpp%2Fcharset.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/libcpp%2Fcharset.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fcharset.c?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -22,7 +22,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n #include \"system.h\"\n #include \"cpplib.h\"\n #include \"internal.h\"\n-#include \"ucnid.h\"\n \n /* Character set handling for C-family languages.\n \n@@ -786,43 +785,128 @@ width_to_mask (size_t width)\n     return ((size_t) 1 << width) - 1;\n }\n \n+/* A large table of unicode character information.  */\n+enum {\n+  /* Valid in a C99 identifier?  */\n+  C99 = 1,\n+  /* Valid in a C99 identifier, but not as the first character?  */\n+  DIG = 2,\n+  /* Valid in a C++ identifier?  */\n+  CXX = 4,\n+  /* NFC representation is not valid in an identifier?  */\n+  CID = 8,\n+  /* Might be valid NFC form?  */\n+  NFC = 16,\n+  /* Might be valid NFKC form?  */\n+  NKC = 32,\n+  /* Certain preceding characters might make it not valid NFC/NKFC form?  */\n+  CTX = 64\n+};\n+\n+static const struct {\n+  /* Bitmap of flags above.  */\n+  unsigned char flags;\n+  /* Combining class of the character.  */\n+  unsigned char combine;\n+  /* Last character in the range described by this entry.  */\n+  unsigned short end;\n+} ucnranges[] = {\n+#include \"ucnid.h\"\n+};\n+\n /* Returns 1 if C is valid in an identifier, 2 if C is valid except at\n    the start of an identifier, and 0 if C is not valid in an\n    identifier.  We assume C has already gone through the checks of\n-   _cpp_valid_ucn.  The algorithm is a simple binary search on the\n-   table defined in cppucnid.h.  */\n+   _cpp_valid_ucn.  Also update NST for C if returning nonzero.  The\n+   algorithm is a simple binary search on the table defined in\n+   ucnid.h.  */\n \n static int\n-ucn_valid_in_identifier (cpp_reader *pfile, cppchar_t c)\n+ucn_valid_in_identifier (cpp_reader *pfile, cppchar_t c,\n+\t\t\t struct normalize_state *nst)\n {\n   int mn, mx, md;\n \n-  mn = -1;\n-  mx = ARRAY_SIZE (ucnranges);\n-  while (mx - mn > 1)\n+  if (c > 0xFFFF)\n+    return 0;\n+\n+  mn = 0;\n+  mx = ARRAY_SIZE (ucnranges) - 1;\n+  while (mx != mn)\n     {\n       md = (mn + mx) / 2;\n-      if (c < ucnranges[md].lo)\n+      if (c <= ucnranges[md].end)\n \tmx = md;\n-      else if (c > ucnranges[md].hi)\n-\tmn = md;\n       else\n-\tgoto found;\n+\tmn = md + 1;\n     }\n-  return 0;\n \n- found:\n   /* When -pedantic, we require the character to have been listed by\n      the standard for the current language.  Otherwise, we accept the\n      union of the acceptable sets for C++98 and C99.  */\n+  if (! (ucnranges[mn].flags & (C99 | CXX)))\n+      return 0;\n+\n   if (CPP_PEDANTIC (pfile)\n-      && ((CPP_OPTION (pfile, c99) && !(ucnranges[md].flags & C99))\n+      && ((CPP_OPTION (pfile, c99) && !(ucnranges[mn].flags & C99))\n \t  || (CPP_OPTION (pfile, cplusplus)\n-\t      && !(ucnranges[md].flags & CXX))))\n+\t      && !(ucnranges[mn].flags & CXX))))\n     return 0;\n \n+  /* Update NST.  */\n+  if (ucnranges[mn].combine != 0 && ucnranges[mn].combine < nst->prev_class)\n+    nst->level = normalized_none;\n+  else if (ucnranges[mn].flags & CTX)\n+    {\n+      bool safe;\n+      cppchar_t p = nst->previous;\n+\n+      /* Easy cases from Bengali, Oriya, Tamil, Jannada, and Malayalam.  */\n+      if (c == 0x09BE)\n+\tsafe = p != 0x09C7;  /* Use 09CB instead of 09C7 09BE.  */\n+      else if (c == 0x0B3E)\n+\tsafe = p != 0x0B47;  /* Use 0B4B instead of 0B47 0B3E.  */\n+      else if (c == 0x0BBE)\n+\tsafe = p != 0x0BC6 && p != 0x0BC7;  /* Use 0BCA/0BCB instead.  */\n+      else if (c == 0x0CC2)\n+\tsafe = p != 0x0CC6;  /* Use 0CCA instead of 0CC6 0CC2.  */\n+      else if (c == 0x0D3E)\n+\tsafe = p != 0x0D46 && p != 0x0D47;  /* Use 0D4A/0D4B instead.  */\n+      /* For Hangul, characters in the range AC00-D7A3 are NFC/NFKC,\n+\t and are combined algorithmically from a sequence of the form\n+\t 1100-1112 1161-1175 11A8-11C2\n+\t (if the third is not present, it is treated as 11A7, which is not\n+\t really a valid character).\n+\t Unfortunately, C99 allows (only) the NFC form, but C++ allows\n+\t only the combining characters.  */\n+      else if (c >= 0x1161 && c <= 0x1175)\n+\tsafe = p < 0x1100 || p > 0x1112;\n+      else if (c >= 0x11A8 && c <= 0x11C2)\n+\tsafe = (p < 0xAC00 || p > 0xD7A3 || (p - 0xAC00) % 28 != 0);\n+      else\n+\t{\n+\t  /* Uh-oh, someone updated ucnid.h without updating this code.  */\n+\t  cpp_error (pfile, CPP_DL_ICE, \"Character %x might not be NFKC\", c);\n+\t  safe = true;\n+\t}\n+      if (!safe && c < 0x1161)\n+\tnst->level = normalized_none;\n+      else if (!safe)\n+\tnst->level = MAX (nst->level, normalized_identifier_C);\n+    }\n+  else if (ucnranges[mn].flags & NKC)\n+    ;\n+  else if (ucnranges[mn].flags & NFC)\n+    nst->level = MAX (nst->level, normalized_C);\n+  else if (ucnranges[mn].flags & CID)\n+    nst->level = MAX (nst->level, normalized_identifier_C);\n+  else\n+    nst->level = normalized_none;\n+  nst->previous = c;\n+  nst->prev_class = ucnranges[mn].combine;\n+\n   /* In C99, UCN digits may not begin identifiers.  */\n-  if (CPP_OPTION (pfile, c99) && (ucnranges[md].flags & DIG))\n+  if (CPP_OPTION (pfile, c99) && (ucnranges[mn].flags & DIG))\n     return 2;\n \n   return 1;\n@@ -853,7 +937,8 @@ ucn_valid_in_identifier (cpp_reader *pfile, cppchar_t c)\n \n cppchar_t\n _cpp_valid_ucn (cpp_reader *pfile, const uchar **pstr,\n-\t\tconst uchar *limit, int identifier_pos)\n+\t\tconst uchar *limit, int identifier_pos,\n+\t\tstruct normalize_state *nst)\n {\n   cppchar_t result, c;\n   unsigned int length;\n@@ -873,7 +958,10 @@ _cpp_valid_ucn (cpp_reader *pfile, const uchar **pstr,\n   else if (str[-1] == 'U')\n     length = 8;\n   else\n-    abort();\n+    {\n+      cpp_error (pfile, CPP_DL_ICE, \"In _cpp_valid_ucn but not a UCN\");\n+      length = 4;\n+    }\n \n   result = 0;\n   do\n@@ -915,10 +1003,11 @@ _cpp_valid_ucn (cpp_reader *pfile, const uchar **pstr,\n \t  CPP_OPTION (pfile, warn_dollars) = 0;\n \t  cpp_error (pfile, CPP_DL_PEDWARN, \"'$' in identifier or number\");\n \t}\n+      NORMALIZE_STATE_UPDATE_IDNUM (nst);\n     }\n   else if (identifier_pos)\n     {\n-      int validity = ucn_valid_in_identifier (pfile, result);\n+      int validity = ucn_valid_in_identifier (pfile, result, nst);\n \n       if (validity == 0)\n \tcpp_error (pfile, CPP_DL_ERROR,\n@@ -950,9 +1039,10 @@ convert_ucn (cpp_reader *pfile, const uchar *from, const uchar *limit,\n   int rval;\n   struct cset_converter cvt\n     = wide ? pfile->wide_cset_desc : pfile->narrow_cset_desc;\n+  struct normalize_state nst = INITIAL_NORMALIZE_STATE;\n \n   from++;  /* Skip u/U.  */\n-  ucn = _cpp_valid_ucn (pfile, &from, limit, 0);\n+  ucn = _cpp_valid_ucn (pfile, &from, limit, 0, &nst);\n \n   rval = one_cppchar_to_utf8 (ucn, &bufp, &bytesleft);\n   if (rval)"}, {"sha": "321de40727ef9d9bf5b197df7d7ae867eb121ad1", "filename": "libcpp/include/cpplib.h", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/libcpp%2Finclude%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/libcpp%2Finclude%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fcpplib.h?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -236,6 +236,19 @@ typedef CPPCHAR_SIGNED_T cppchar_signed_t;\n /* Style of header dependencies to generate.  */\n enum cpp_deps_style { DEPS_NONE = 0, DEPS_USER, DEPS_SYSTEM };\n \n+/* The possible normalization levels, from most restrictive to least.  */\n+enum cpp_normalize_level {\n+  /* In NFKC.  */\n+  normalized_KC = 0,\n+  /* In NFC.  */\n+  normalized_C,\n+  /* In NFC, except for subsequences where being in NFC would make\n+     the identifier invalid.  */\n+  normalized_identifier_C,\n+  /* Not normalized at all.  */\n+  normalized_none\n+};\n+\n /* This structure is nested inside struct cpp_reader, and\n    carries all the options visible to the command line.  */\n struct cpp_options\n@@ -373,6 +386,10 @@ struct cpp_options\n   /* Holds the name of the input character set.  */\n   const char *input_charset;\n \n+  /* The minimum permitted level of normalization before a warning\n+     is generated.  */\n+  enum cpp_normalize_level warn_normalize;\n+\n   /* True to warn about precompiled header files we couldn't use.  */\n   bool warn_invalid_pch;\n "}, {"sha": "7ad5a73856a4c3839e7fa41c4c53e475926fa2b7", "filename": "libcpp/init.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/libcpp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/libcpp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finit.c?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -153,6 +153,7 @@ cpp_create_reader (enum c_lang lang, hash_table *table,\n   CPP_OPTION (pfile, dollars_in_ident) = 1;\n   CPP_OPTION (pfile, warn_dollars) = 1;\n   CPP_OPTION (pfile, warn_variadic_macros) = 1;\n+  CPP_OPTION (pfile, warn_normalize) = normalized_C;\n \n   /* Default CPP arithmetic to something sensible for the host for the\n      benefit of dumb users like fix-header.  */"}, {"sha": "f0bd537d310cdbd0467ae7132d994f149170d7f2", "filename": "libcpp/internal.h", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/libcpp%2Finternal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/libcpp%2Finternal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finternal.h?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -564,8 +564,31 @@ extern unsigned char *_cpp_copy_replacement_text (const cpp_macro *,\n extern size_t _cpp_replacement_text_len (const cpp_macro *);\n \n /* In charset.c.  */\n+\n+/* The normalization state at this point in the sequence.\n+   It starts initialized to all zeros, and at the end\n+   'level' is the normalization level of the sequence.  */\n+\n+struct normalize_state \n+{\n+  /* The previous character.  */\n+  cppchar_t previous;\n+  /* The combining class of the previous character.  */\n+  unsigned char prev_class;\n+  /* The lowest normalization level so far.  */\n+  enum cpp_normalize_level level;\n+};\n+#define INITIAL_NORMALIZE_STATE { 0, 0, normalized_KC }\n+#define NORMALIZE_STATE_RESULT(st) ((st)->level)\n+\n+/* We saw a character that matches ISIDNUM(), update a\n+   normalize_state appropriately.  */\n+#define NORMALIZE_STATE_UPDATE_IDNUM(st) \\\n+  ((st)->previous = 0, (st)->prev_class = 0)\n+\n extern cppchar_t _cpp_valid_ucn (cpp_reader *, const unsigned char **,\n-\t\t\t\t const unsigned char *, int);\n+\t\t\t\t const unsigned char *, int,\n+\t\t\t\t struct normalize_state *state);\n extern void _cpp_destroy_iconv (cpp_reader *);\n extern unsigned char *_cpp_convert_input (cpp_reader *, const char *,\n \t\t\t\t\t  unsigned char *, size_t, size_t,"}, {"sha": "9bcb91c04723a15fdc414843c57f5ef10a62ad02", "filename": "libcpp/lex.c", "status": "modified", "additions": 64, "deletions": 19, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/libcpp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/libcpp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Flex.c?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -53,9 +53,6 @@ static const struct token_spelling token_spellings[N_TTYPES] = { TTYPE_TABLE };\n static void add_line_note (cpp_buffer *, const uchar *, unsigned int);\n static int skip_line_comment (cpp_reader *);\n static void skip_whitespace (cpp_reader *, cppchar_t);\n-static cpp_hashnode *lex_identifier (cpp_reader *, const uchar *, bool);\n-static void lex_number (cpp_reader *, cpp_string *);\n-static bool forms_identifier_p (cpp_reader *, int);\n static void lex_string (cpp_reader *, cpp_token *, const uchar *);\n static void save_comment (cpp_reader *, cpp_token *, const uchar *, cppchar_t);\n static void create_literal (cpp_reader *, cpp_token *, const uchar *,\n@@ -430,10 +427,36 @@ name_p (cpp_reader *pfile, const cpp_string *string)\n   return 1;\n }\n \n+/* After parsing an identifier or other sequence, produce a warning about\n+   sequences not in NFC/NFKC.  */\n+static void\n+warn_about_normalization (cpp_reader *pfile, \n+\t\t\t  const cpp_token *token,\n+\t\t\t  const struct normalize_state *s)\n+{\n+  if (CPP_OPTION (pfile, warn_normalize) < NORMALIZE_STATE_RESULT (s)\n+      && !pfile->state.skipping)\n+    {\n+      /* Make sure that the token is printed using UCNs, even\n+\t if we'd otherwise happily print UTF-8.  */\n+      unsigned char *buf = xmalloc (cpp_token_len (token));\n+      size_t sz;\n+\n+      sz = cpp_spell_token (pfile, token, buf, false) - buf;\n+      if (NORMALIZE_STATE_RESULT (s) == normalized_C)\n+\tcpp_error_with_line (pfile, CPP_DL_WARNING, token->src_loc, 0,\n+\t\t\t     \"`%.*s' is not in NFKC\", sz, buf);\n+      else\n+\tcpp_error_with_line (pfile, CPP_DL_WARNING, token->src_loc, 0,\n+\t\t\t     \"`%.*s' is not in NFC\", sz, buf);\n+    }\n+}\n+\n /* Returns TRUE if the sequence starting at buffer->cur is invalid in\n    an identifier.  FIRST is TRUE if this starts an identifier.  */\n static bool\n-forms_identifier_p (cpp_reader *pfile, int first)\n+forms_identifier_p (cpp_reader *pfile, int first,\n+\t\t    struct normalize_state *state)\n {\n   cpp_buffer *buffer = pfile->buffer;\n \n@@ -457,7 +480,8 @@ forms_identifier_p (cpp_reader *pfile, int first)\n       && (buffer->cur[1] == 'u' || buffer->cur[1] == 'U'))\n     {\n       buffer->cur += 2;\n-      if (_cpp_valid_ucn (pfile, &buffer->cur, buffer->rlimit, 1 + !first))\n+      if (_cpp_valid_ucn (pfile, &buffer->cur, buffer->rlimit, 1 + !first,\n+\t\t\t  state))\n \treturn true;\n       buffer->cur -= 2;\n     }\n@@ -467,7 +491,8 @@ forms_identifier_p (cpp_reader *pfile, int first)\n \n /* Lex an identifier starting at BUFFER->CUR - 1.  */\n static cpp_hashnode *\n-lex_identifier (cpp_reader *pfile, const uchar *base, bool starts_ucn)\n+lex_identifier (cpp_reader *pfile, const uchar *base, bool starts_ucn,\n+\t\tstruct normalize_state *nst)\n {\n   cpp_hashnode *result;\n   const uchar *cur;\n@@ -482,13 +507,16 @@ lex_identifier (cpp_reader *pfile, const uchar *base, bool starts_ucn)\n \tcur++;\n       }\n   pfile->buffer->cur = cur;\n-  if (starts_ucn || forms_identifier_p (pfile, false))\n+  if (starts_ucn || forms_identifier_p (pfile, false, nst))\n     {\n       /* Slower version for identifiers containing UCNs (or $).  */\n       do {\n \twhile (ISIDNUM (*pfile->buffer->cur))\n-\t  pfile->buffer->cur++;\n-      } while (forms_identifier_p (pfile, false));\n+\t  {\n+\t    pfile->buffer->cur++;\n+\t    NORMALIZE_STATE_UPDATE_IDNUM (nst);\n+\t  }\n+      } while (forms_identifier_p (pfile, false, nst));\n       result = _cpp_interpret_identifier (pfile, base,\n \t\t\t\t\t  pfile->buffer->cur - base);\n     }\n@@ -524,7 +552,8 @@ lex_identifier (cpp_reader *pfile, const uchar *base, bool starts_ucn)\n \n /* Lex a number to NUMBER starting at BUFFER->CUR - 1.  */\n static void\n-lex_number (cpp_reader *pfile, cpp_string *number)\n+lex_number (cpp_reader *pfile, cpp_string *number,\n+\t    struct normalize_state *nst)\n {\n   const uchar *cur;\n   const uchar *base;\n@@ -537,11 +566,14 @@ lex_number (cpp_reader *pfile, cpp_string *number)\n \n       /* N.B. ISIDNUM does not include $.  */\n       while (ISIDNUM (*cur) || *cur == '.' || VALID_SIGN (*cur, cur[-1]))\n-\tcur++;\n+\t{\n+\t  cur++;\n+\t  NORMALIZE_STATE_UPDATE_IDNUM (nst);\n+\t}\n \n       pfile->buffer->cur = cur;\n     }\n-  while (forms_identifier_p (pfile, false));\n+  while (forms_identifier_p (pfile, false, nst));\n \n   number->len = cur - base;\n   dest = _cpp_unaligned_alloc (pfile, number->len + 1);\n@@ -897,9 +929,13 @@ _cpp_lex_direct (cpp_reader *pfile)\n \n     case '0': case '1': case '2': case '3': case '4':\n     case '5': case '6': case '7': case '8': case '9':\n-      result->type = CPP_NUMBER;\n-      lex_number (pfile, &result->val.str);\n-      break;\n+      {\n+\tstruct normalize_state nst = INITIAL_NORMALIZE_STATE;\n+\tresult->type = CPP_NUMBER;\n+\tlex_number (pfile, &result->val.str, &nst);\n+\twarn_about_normalization (pfile, result, &nst);\n+\tbreak;\n+      }\n \n     case 'L':\n       /* 'L' may introduce wide characters or strings.  */\n@@ -922,7 +958,12 @@ _cpp_lex_direct (cpp_reader *pfile)\n     case 'S': case 'T': case 'U': case 'V': case 'W': case 'X':\n     case 'Y': case 'Z':\n       result->type = CPP_NAME;\n-      result->val.node = lex_identifier (pfile, buffer->cur - 1, false);\n+      {\n+\tstruct normalize_state nst = INITIAL_NORMALIZE_STATE;\n+\tresult->val.node = lex_identifier (pfile, buffer->cur - 1, false,\n+\t\t\t\t\t   &nst);\n+\twarn_about_normalization (pfile, result, &nst);\n+      }\n \n       /* Convert named operators to their proper types.  */\n       if (result->val.node->flags & NODE_OPERATOR)\n@@ -1067,8 +1108,10 @@ _cpp_lex_direct (cpp_reader *pfile)\n       result->type = CPP_DOT;\n       if (ISDIGIT (*buffer->cur))\n \t{\n+\t  struct normalize_state nst = INITIAL_NORMALIZE_STATE;\n \t  result->type = CPP_NUMBER;\n-\t  lex_number (pfile, &result->val.str);\n+\t  lex_number (pfile, &result->val.str, &nst);\n+\t  warn_about_normalization (pfile, result, &nst);\n \t}\n       else if (*buffer->cur == '.' && buffer->cur[1] == '.')\n \tbuffer->cur += 2, result->type = CPP_ELLIPSIS;\n@@ -1151,11 +1194,13 @@ _cpp_lex_direct (cpp_reader *pfile)\n     case '\\\\':\n       {\n \tconst uchar *base = --buffer->cur;\n+\tstruct normalize_state nst = INITIAL_NORMALIZE_STATE;\n \n-\tif (forms_identifier_p (pfile, true))\n+\tif (forms_identifier_p (pfile, true, &nst))\n \t  {\n \t    result->type = CPP_NAME;\n-\t    result->val.node = lex_identifier (pfile, base, true);\n+\t    result->val.node = lex_identifier (pfile, base, true, &nst);\n+\t    warn_about_normalization (pfile, result, &nst);\n \t    break;\n \t  }\n \tbuffer->cur++;"}, {"sha": "f969f994f248c984ce6d4d83fa6e2b5ef3aacdd1", "filename": "libcpp/makeucnid.c", "status": "added", "additions": 342, "deletions": 0, "changes": 342, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/libcpp%2Fmakeucnid.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/libcpp%2Fmakeucnid.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fmakeucnid.c?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -0,0 +1,342 @@\n+/* Make ucnid.h from various sources.\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This program is free software; you can redistribute it and/or modify it\n+under the terms of the GNU General Public License as published by the\n+Free Software Foundation; either version 2, or (at your option) any\n+later version.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with this program; if not, write to the Free Software\n+Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+/* Run this program as\n+   ./makeucnid ucnid.tab UnicodeData.txt DerivedNormalizationProps.txt \\\n+       > ucnid.h\n+*/\n+\n+#include <stdio.h>\n+#include <string.h>\n+#include <ctype.h>\n+#include <stdbool.h>\n+#include <stdlib.h>\n+\n+enum {\n+  C99 = 1,\n+  CXX = 2,\n+  digit = 4,\n+  not_NFC = 8,\n+  not_NFKC = 16,\n+  maybe_not_NFC = 32\n+};\n+\n+static unsigned flags[65536];\n+static unsigned short decomp[65536][2];\n+static unsigned char combining_value[65536];\n+\n+/* Die!  */\n+\n+static void\n+fail (const char *s)\n+{\n+  fprintf (stderr, \"%s\\n\", s);\n+  exit (1);\n+}\n+\n+/* Read ucnid.tab and set the C99 and CXX flags in header[].  */\n+\n+static void\n+read_ucnid (const char *fname)\n+{\n+  FILE *f = fopen (fname, \"r\");\n+  unsigned fl = 0;\n+  \n+  if (!f)\n+    fail (\"opening ucnid.tab\");\n+  for (;;)\n+    {\n+      char line[256];\n+\n+      if (!fgets (line, sizeof (line), f))\n+\tbreak;\n+      if (strcmp (line, \"[C99]\\n\") == 0)\n+\tfl = C99;\n+      else if (strcmp (line, \"[CXX]\\n\") == 0)\n+\tfl = CXX;\n+      else if (isxdigit (line[0]))\n+\t{\n+\t  char *l = line;\n+\t  while (*l)\n+\t    {\n+\t      unsigned long start, end;\n+\t      char *endptr;\n+\t      start = strtoul (l, &endptr, 16);\n+\t      if (endptr == l || (*endptr != '-' && ! isspace (*endptr)))\n+\t\tfail (\"parsing ucnid.tab [1]\");\n+\t      l = endptr;\n+\t      if (*l != '-')\n+\t\tend = start;\n+\t      else\n+\t\t{\n+\t\t  end = strtoul (l + 1, &endptr, 16);\n+\t\t  if (end < start)\n+\t\t    fail (\"parsing ucnid.tab, end before start\");\n+\t\t  l = endptr;\n+\t\t  if (! isspace (*l))\n+\t\t    fail (\"parsing ucnid.tab, junk after range\");\n+\t\t}\n+\t      while (isspace (*l))\n+\t\tl++;\n+\t      if (end > 0xFFFF)\n+\t\tfail (\"parsing ucnid.tab, end too large\");\n+\t      while (start <= end)\n+\t\tflags[start++] |= fl;\n+\t    }\n+\t}\n+    }\n+  if (ferror (f))\n+    fail (\"reading ucnid.tab\");\n+  fclose (f);\n+}\n+\n+/* Read UnicodeData.txt and set the 'digit' flag, and\n+   also fill in the 'decomp' table to be the decompositions of\n+   characters for which both the character decomposed and all the code\n+   points in the decomposition are either C99 or CXX.  */\n+\n+static void\n+read_table (char *fname)\n+{\n+  FILE * f = fopen (fname, \"r\");\n+  \n+  if (!f)\n+    fail (\"opening UnicodeData.txt\");\n+  for (;;)\n+    {\n+      char line[256];\n+      unsigned long codepoint, this_decomp[4];\n+      char *l;\n+      int i;\n+      int decomp_useful;\n+\n+      if (!fgets (line, sizeof (line), f))\n+\tbreak;\n+      codepoint = strtoul (line, &l, 16);\n+      if (l == line || *l != ';')\n+\tfail (\"parsing UnicodeData.txt, reading code point\");\n+      if (codepoint > 0xffff || ! (flags[codepoint] & (C99 | CXX)))\n+\tcontinue;\n+\n+      do {\n+\tl++;\n+      } while (*l != ';');\n+      /* Category value; things starting with 'N' are numbers of some\n+\t kind.  */\n+      if (*++l == 'N')\n+\tflags[codepoint] |= digit;\n+\n+      do {\n+\tl++;\n+      } while (*l != ';');\n+      /* Canonical combining class; in NFC/NFKC, they must be increasing\n+\t (or zero).  */\n+      if (! isdigit (*++l))\n+\tfail (\"parsing UnicodeData.txt, combining class not number\");\n+      combining_value[codepoint] = strtoul (l, &l, 10);\n+      if (*l++ != ';')\n+\tfail (\"parsing UnicodeData.txt, junk after combining class\");\n+\t\n+      /* Skip over bidi value.  */\n+      do {\n+\tl++;\n+      } while (*l != ';');\n+      \n+      /* Decomposition mapping.  */\n+      decomp_useful = flags[codepoint];\n+      if (*++l == '<')  /* Compatibility mapping. */\n+\tcontinue;\n+      for (i = 0; i < 4; i++)\n+\t{\n+\t  if (*l == ';')\n+\t    break;\n+\t  if (!isxdigit (*l))\n+\t    fail (\"parsing UnicodeData.txt, decomposition format\");\n+\t  this_decomp[i] = strtoul (l, &l, 16);\n+\t  decomp_useful &= flags[this_decomp[i]];\n+\t  while (isspace (*l))\n+\t    l++;\n+\t}\n+      if (i > 2)  /* Decomposition too long.  */\n+\tfail (\"parsing UnicodeData.txt, decomposition too long\");\n+      if (decomp_useful)\n+\twhile (--i >= 0)\n+\t  decomp[codepoint][i] = this_decomp[i];\n+    }\n+  if (ferror (f))\n+    fail (\"reading UnicodeData.txt\");\n+  fclose (f);\n+}\n+\n+/* Read DerivedNormalizationProps.txt and set the flags that say whether\n+   a character is in NFC, NFKC, or is context-dependent.  */\n+\n+static void\n+read_derived (const char *fname)\n+{\n+  FILE * f = fopen (fname, \"r\");\n+  \n+  if (!f)\n+    fail (\"opening DerivedNormalizationProps.txt\");\n+  for (;;)\n+    {\n+      char line[256];\n+      unsigned long start, end;\n+      char *l;\n+      bool not_NFC_p, not_NFKC_p, maybe_not_NFC_p;\n+\n+      if (!fgets (line, sizeof (line), f))\n+\tbreak;\n+      not_NFC_p = (strstr (line, \"; NFC_QC; N\") != NULL);\n+      not_NFKC_p = (strstr (line, \"; NFKC_QC; N\") != NULL);\n+      maybe_not_NFC_p = (strstr (line, \"; NFC_QC; M\") != NULL);\n+      if (! not_NFC_p && ! not_NFKC_p && ! maybe_not_NFC_p)\n+\tcontinue;\n+\t\n+      start = strtoul (line, &l, 16);\n+      if (l == line)\n+\tfail (\"parsing DerivedNormalizationProps.txt, reading start\");\n+      if (start > 0xffff)\n+\tcontinue;\n+      if (*l == '.' && l[1] == '.')\n+\tend = strtoul (l + 2, &l, 16);\n+      else\n+\tend = start;\n+\n+      while (start <= end)\n+\tflags[start++] |= ((not_NFC_p ? not_NFC : 0) \n+\t\t\t   | (not_NFKC_p ? not_NFKC : 0)\n+\t\t\t   | (maybe_not_NFC_p ? maybe_not_NFC : 0)\n+\t\t\t   );\n+    }\n+  if (ferror (f))\n+    fail (\"reading DerivedNormalizationProps.txt\");\n+  fclose (f);\n+}\n+\n+/* Write out the table.\n+   The table consists of two words per entry.  The first word is the flags\n+   for the unicode code points up to and including the second word.  */\n+\n+static void\n+write_table (void)\n+{\n+  unsigned i;\n+  unsigned last_flag = flags[0];\n+  bool really_safe = decomp[0][0] == 0;\n+  unsigned char last_combine = combining_value[0];\n+  \n+  for (i = 1; i <= 65536; i++)\n+    if (i == 65536\n+\t|| (flags[i] != last_flag && ((flags[i] | last_flag) & (C99 | CXX)))\n+\t|| really_safe != (decomp[i][0] == 0)\n+\t|| combining_value[i] != last_combine)\n+      {\n+\tprintf (\"{ %s|%s|%s|%s|%s|%s|%s, %3d, %#06x },\\n\",\n+\t\tlast_flag & C99 ? \"C99\" : \"  0\",\n+\t\tlast_flag & digit ? \"DIG\" : \"  0\",\n+\t\tlast_flag & CXX ? \"CXX\" : \"  0\",\n+\t\treally_safe ? \"CID\" : \"  0\",\n+\t\tlast_flag & not_NFC ? \"  0\" : \"NFC\",\n+\t\tlast_flag & not_NFKC ? \"  0\" : \"NKC\",\n+\t\tlast_flag & maybe_not_NFC ? \"CTX\" : \"  0\",\n+\t\tcombining_value[i - 1],\n+\t\ti - 1);\n+\tlast_flag = flags[i];\n+\tlast_combine = combining_value[0];\n+\treally_safe = decomp[i][0] == 0;\n+      }\n+}\n+\n+/* Print out the huge copyright notice.  */\n+\n+static void\n+write_copyright (void)\n+{\n+  static const char copyright[] = \"\\\n+/* Unicode characters and various properties.\\n\\\n+   Copyright (C) 2003, 2005 Free Software Foundation, Inc.\\n\\\n+\\n\\\n+   This program is free software; you can redistribute it and/or modify it\\n\\\n+   under the terms of the GNU General Public License as published by the\\n\\\n+   Free Software Foundation; either version 2, or (at your option) any\\n\\\n+   later version.\\n\\\n+\\n\\\n+   This program is distributed in the hope that it will be useful,\\n\\\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\\n\\\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n\\\n+   GNU General Public License for more details.\\n\\\n+\\n\\\n+   You should have received a copy of the GNU General Public License\\n\\\n+   along with this program; if not, write to the Free Software\\n\\\n+   Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\\n\\\n+\\n\\\n+\\n\\\n+   Copyright (C) 1991-2005 Unicode, Inc.  All rights reserved.\\n\\\n+   Distributed under the Terms of Use in\\n\\\n+   http://www.unicode.org/copyright.html.\\n\\\n+\\n\\\n+   Permission is hereby granted, free of charge, to any person\\n\\\n+   obtaining a copy of the Unicode data files and any associated\\n\\\n+   documentation (the \\\"Data Files\\\") or Unicode software and any\\n\\\n+   associated documentation (the \\\"Software\\\") to deal in the Data Files\\n\\\n+   or Software without restriction, including without limitation the\\n\\\n+   rights to use, copy, modify, merge, publish, distribute, and/or\\n\\\n+   sell copies of the Data Files or Software, and to permit persons to\\n\\\n+   whom the Data Files or Software are furnished to do so, provided\\n\\\n+   that (a) the above copyright notice(s) and this permission notice\\n\\\n+   appear with all copies of the Data Files or Software, (b) both the\\n\\\n+   above copyright notice(s) and this permission notice appear in\\n\\\n+   associated documentation, and (c) there is clear notice in each\\n\\\n+   modified Data File or in the Software as well as in the\\n\\\n+   documentation associated with the Data File(s) or Software that the\\n\\\n+   data or software has been modified.\\n\\\n+\\n\\\n+   THE DATA FILES AND SOFTWARE ARE PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY\\n\\\n+   OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\\n\\\n+   WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\\n\\\n+   NONINFRINGEMENT OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE\\n\\\n+   COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR\\n\\\n+   ANY CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY\\n\\\n+   DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\\n\\\n+   WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS\\n\\\n+   ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE\\n\\\n+   OF THE DATA FILES OR SOFTWARE.\\n\\\n+\\n\\\n+   Except as contained in this notice, the name of a copyright holder\\n\\\n+   shall not be used in advertising or otherwise to promote the sale,\\n\\\n+   use or other dealings in these Data Files or Software without prior\\n\\\n+   written authorization of the copyright holder.  */\\n\";\n+   \n+   puts (copyright);\n+}\n+\n+/* Main program.  */\n+\n+int\n+main(int argc, char ** argv)\n+{\n+  if (argc != 4)\n+    fail (\"too few arguments to makeucn\");\n+  read_ucnid (argv[1]);\n+  read_table (argv[2]);\n+  read_derived (argv[3]);\n+\n+  write_copyright ();\n+  write_table ();\n+  return 0;\n+}"}, {"sha": "3eff710579c5cc1baf71b9aacef5d2fb57a1f07c", "filename": "libcpp/ucnid.h", "status": "modified", "additions": 792, "deletions": 327, "changes": 1119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/libcpp%2Fucnid.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/libcpp%2Fucnid.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fucnid.h?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -1,336 +1,801 @@\n-/* Table of UCNs which are valid in identifiers.\n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+/* Unicode characters and various properties.\n+   Copyright (C) 2003, 2005 Free Software Foundation, Inc.\n \n-This program is free software; you can redistribute it and/or modify it\n-under the terms of the GNU General Public License as published by the\n-Free Software Foundation; either version 2, or (at your option) any\n-later version.\n+   This program is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by the\n+   Free Software Foundation; either version 2, or (at your option) any\n+   later version.\n \n-This program is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n \n-You should have received a copy of the GNU General Public License\n-along with this program; if not, write to the Free Software\n-Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n \n-/* Automatically generated from cppucnid.tab, do not edit */\n \n-/* This file reproduces the table in ISO/IEC 9899:1999 (C99) Annex\n-   D, which is itself a reproduction from ISO/IEC TR 10176:1998, and\n-   the similar table from ISO/IEC 14882:1988 (C++98) Annex E, which is\n-   a reproduction of ISO/IEC PDTR 10176.  Unfortunately these tables\n-   are not identical.  */\n+   Copyright (C) 1991-2005 Unicode, Inc.  All rights reserved.\n+   Distributed under the Terms of Use in\n+   http://www.unicode.org/copyright.html.\n \n-#ifndef LIBCPP_UCNID_H\n-#define LIBCPP_UCNID_H\n+   Permission is hereby granted, free of charge, to any person\n+   obtaining a copy of the Unicode data files and any associated\n+   documentation (the \"Data Files\") or Unicode software and any\n+   associated documentation (the \"Software\") to deal in the Data Files\n+   or Software without restriction, including without limitation the\n+   rights to use, copy, modify, merge, publish, distribute, and/or\n+   sell copies of the Data Files or Software, and to permit persons to\n+   whom the Data Files or Software are furnished to do so, provided\n+   that (a) the above copyright notice(s) and this permission notice\n+   appear with all copies of the Data Files or Software, (b) both the\n+   above copyright notice(s) and this permission notice appear in\n+   associated documentation, and (c) there is clear notice in each\n+   modified Data File or in the Software as well as in the\n+   documentation associated with the Data File(s) or Software that the\n+   data or software has been modified.\n \n-#define C99 1\n-#define CXX 2\n-#define DIG 4\n+   THE DATA FILES AND SOFTWARE ARE PROVIDED \"AS IS\", WITHOUT WARRANTY\n+   OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\n+   WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n+   NONINFRINGEMENT OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE\n+   COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR\n+   ANY CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY\n+   DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n+   WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS\n+   ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE\n+   OF THE DATA FILES OR SOFTWARE.\n \n-struct ucnrange\n-{\n-  unsigned short lo, hi;\n-  unsigned short flags;\n-};\n+   Except as contained in this notice, the name of a copyright holder\n+   shall not be used in advertising or otherwise to promote the sale,\n+   use or other dealings in these Data Files or Software without prior\n+   written authorization of the copyright holder.  */\n \n-static const struct ucnrange ucnranges[] = {\n-  { 0x00aa, 0x00aa,     C99     },  /* Latin */\n-  { 0x00b5, 0x00b5,     C99     },  /* Special characters */\n-  { 0x00b7, 0x00b7,     C99     },\n-  { 0x00ba, 0x00ba,     C99     },  /* Latin */\n-  { 0x00c0, 0x00d6, CXX|C99     },\n-  { 0x00d8, 0x00f6, CXX|C99     },\n-  { 0x00f8, 0x01f5, CXX|C99     },\n-  { 0x01fa, 0x0217, CXX|C99     },\n-  { 0x0250, 0x02a8, CXX|C99     },\n-  { 0x02b0, 0x02b8,     C99     },  /* Special characters */\n-  { 0x02bb, 0x02bb,     C99     },\n-  { 0x02bd, 0x02c1,     C99     },\n-  { 0x02d0, 0x02d1,     C99     },\n-  { 0x02e0, 0x02e4,     C99     },\n-  { 0x037a, 0x037a,     C99     },\n-  { 0x0384, 0x0384, CXX         },  /* Greek */\n-  { 0x0386, 0x0386,     C99     },\n-  { 0x0388, 0x038a, CXX|C99     },\n-  { 0x038c, 0x038c, CXX|C99     },\n-  { 0x038e, 0x03a1, CXX|C99     },\n-  { 0x03a3, 0x03ce, CXX|C99     },\n-  { 0x03d0, 0x03d6, CXX|C99     },\n-  { 0x03da, 0x03da, CXX|C99     },\n-  { 0x03dc, 0x03dc, CXX|C99     },\n-  { 0x03de, 0x03de, CXX|C99     },\n-  { 0x03e0, 0x03e0, CXX|C99     },\n-  { 0x03e2, 0x03f3, CXX|C99     },\n-  { 0x0401, 0x040c, CXX|C99     },  /* Cyrillic */\n-  { 0x040d, 0x040d, CXX         },\n-  { 0x040e, 0x040e,     C99     },\n-  { 0x040f, 0x044f, CXX|C99     },\n-  { 0x0451, 0x045c, CXX|C99     },\n-  { 0x045e, 0x0481, CXX|C99     },\n-  { 0x0490, 0x04c4, CXX|C99     },\n-  { 0x04c7, 0x04c8, CXX|C99     },\n-  { 0x04cb, 0x04cc, CXX|C99     },\n-  { 0x04d0, 0x04eb, CXX|C99     },\n-  { 0x04ee, 0x04f5, CXX|C99     },\n-  { 0x04f8, 0x04f9, CXX|C99     },\n-  { 0x0531, 0x0556, CXX|C99     },  /* Armenian */\n-  { 0x0559, 0x0559,     C99     },  /* Special characters */\n-  { 0x0561, 0x0587, CXX|C99     },  /* Armenian */\n-  { 0x05b0, 0x05b9,     C99     },  /* Hebrew */\n-  { 0x05bb, 0x05bd,     C99     },\n-  { 0x05bf, 0x05bf,     C99     },\n-  { 0x05c1, 0x05c2,     C99     },\n-  { 0x05d0, 0x05ea, CXX|C99     },\n-  { 0x05f0, 0x05f2, CXX|C99     },\n-  { 0x05f3, 0x05f4, CXX         },\n-  { 0x0621, 0x063a, CXX|C99     },  /* Arabic */\n-  { 0x0640, 0x0652, CXX|C99     },\n-  { 0x0660, 0x0669,     C99|DIG },  /* Digits */\n-  { 0x0670, 0x06b7, CXX|C99     },  /* Arabic */\n-  { 0x06ba, 0x06be, CXX|C99     },\n-  { 0x06c0, 0x06ce, CXX|C99     },\n-  { 0x06d0, 0x06dc,     C99     },\n-  { 0x06e5, 0x06e7, CXX|C99     },\n-  { 0x06e8, 0x06e8,     C99     },\n-  { 0x06ea, 0x06ed,     C99     },\n-  { 0x06f0, 0x06f9,     C99|DIG },  /* Digits */\n-  { 0x0901, 0x0903,     C99     },  /* Devanagari */\n-  { 0x0905, 0x0939, CXX|C99     },\n-  { 0x093d, 0x093d,     C99     },  /* Special characters */\n-  { 0x093e, 0x094d,     C99     },  /* Devanagari */\n-  { 0x0950, 0x0952,     C99     },\n-  { 0x0958, 0x0962, CXX|C99     },\n-  { 0x0963, 0x0963,     C99     },\n-  { 0x0966, 0x096f,     C99|DIG },  /* Digits */\n-  { 0x0981, 0x0983,     C99     },  /* Bengali */\n-  { 0x0985, 0x098c, CXX|C99     },\n-  { 0x098f, 0x0990, CXX|C99     },\n-  { 0x0993, 0x09a8, CXX|C99     },\n-  { 0x09aa, 0x09b0, CXX|C99     },\n-  { 0x09b2, 0x09b2, CXX|C99     },\n-  { 0x09b6, 0x09b9, CXX|C99     },\n-  { 0x09be, 0x09c4,     C99     },\n-  { 0x09c7, 0x09c8,     C99     },\n-  { 0x09cb, 0x09cd,     C99     },\n-  { 0x09dc, 0x09dd, CXX|C99     },\n-  { 0x09df, 0x09e1, CXX|C99     },\n-  { 0x09e2, 0x09e3,     C99     },\n-  { 0x09e6, 0x09ef,     C99|DIG },  /* Digits */\n-  { 0x09f0, 0x09f1, CXX|C99     },  /* Bengali */\n-  { 0x0a02, 0x0a02,     C99     },  /* Gurmukhi */\n-  { 0x0a05, 0x0a0a, CXX|C99     },\n-  { 0x0a0f, 0x0a10, CXX|C99     },\n-  { 0x0a13, 0x0a28, CXX|C99     },\n-  { 0x0a2a, 0x0a30, CXX|C99     },\n-  { 0x0a32, 0x0a33, CXX|C99     },\n-  { 0x0a35, 0x0a36, CXX|C99     },\n-  { 0x0a38, 0x0a39, CXX|C99     },\n-  { 0x0a3e, 0x0a42,     C99     },\n-  { 0x0a47, 0x0a48,     C99     },\n-  { 0x0a4b, 0x0a4d,     C99     },\n-  { 0x0a59, 0x0a5c, CXX|C99     },\n-  { 0x0a5e, 0x0a5e, CXX|C99     },\n-  { 0x0a66, 0x0a6f,     C99|DIG },  /* Digits */\n-  { 0x0a74, 0x0a74,     C99     },  /* Gurmukhi */\n-  { 0x0a81, 0x0a83,     C99     },  /* Gujarati */\n-  { 0x0a85, 0x0a8b, CXX|C99     },\n-  { 0x0a8d, 0x0a8d, CXX|C99     },\n-  { 0x0a8f, 0x0a91, CXX|C99     },\n-  { 0x0a93, 0x0aa8, CXX|C99     },\n-  { 0x0aaa, 0x0ab0, CXX|C99     },\n-  { 0x0ab2, 0x0ab3, CXX|C99     },\n-  { 0x0ab5, 0x0ab9, CXX|C99     },\n-  { 0x0abd, 0x0ac5,     C99     },\n-  { 0x0ac7, 0x0ac9,     C99     },\n-  { 0x0acb, 0x0acd,     C99     },\n-  { 0x0ad0, 0x0ad0,     C99     },\n-  { 0x0ae0, 0x0ae0, CXX|C99     },\n-  { 0x0ae6, 0x0aef,     C99|DIG },  /* Digits */\n-  { 0x0b01, 0x0b03,     C99     },  /* Oriya */\n-  { 0x0b05, 0x0b0c, CXX|C99     },\n-  { 0x0b0f, 0x0b10, CXX|C99     },\n-  { 0x0b13, 0x0b28, CXX|C99     },\n-  { 0x0b2a, 0x0b30, CXX|C99     },\n-  { 0x0b32, 0x0b33, CXX|C99     },\n-  { 0x0b36, 0x0b39, CXX|C99     },\n-  { 0x0b3d, 0x0b3d,     C99     },  /* Special characters */\n-  { 0x0b3e, 0x0b43,     C99     },  /* Oriya */\n-  { 0x0b47, 0x0b48,     C99     },\n-  { 0x0b4b, 0x0b4d,     C99     },\n-  { 0x0b5c, 0x0b5d, CXX|C99     },\n-  { 0x0b5f, 0x0b61, CXX|C99     },\n-  { 0x0b66, 0x0b6f,     C99|DIG },  /* Digits */\n-  { 0x0b82, 0x0b83,     C99     },  /* Tamil */\n-  { 0x0b85, 0x0b8a, CXX|C99     },\n-  { 0x0b8e, 0x0b90, CXX|C99     },\n-  { 0x0b92, 0x0b95, CXX|C99     },\n-  { 0x0b99, 0x0b9a, CXX|C99     },\n-  { 0x0b9c, 0x0b9c, CXX|C99     },\n-  { 0x0b9e, 0x0b9f, CXX|C99     },\n-  { 0x0ba3, 0x0ba4, CXX|C99     },\n-  { 0x0ba8, 0x0baa, CXX|C99     },\n-  { 0x0bae, 0x0bb5, CXX|C99     },\n-  { 0x0bb7, 0x0bb9, CXX|C99     },\n-  { 0x0bbe, 0x0bc2,     C99     },\n-  { 0x0bc6, 0x0bc8,     C99     },\n-  { 0x0bca, 0x0bcd,     C99     },\n-  { 0x0be7, 0x0bef,     C99|DIG },  /* Digits */\n-  { 0x0c01, 0x0c03,     C99     },  /* Telugu */\n-  { 0x0c05, 0x0c0c, CXX|C99     },\n-  { 0x0c0e, 0x0c10, CXX|C99     },\n-  { 0x0c12, 0x0c28, CXX|C99     },\n-  { 0x0c2a, 0x0c33, CXX|C99     },\n-  { 0x0c35, 0x0c39, CXX|C99     },\n-  { 0x0c3e, 0x0c44,     C99     },\n-  { 0x0c46, 0x0c48,     C99     },\n-  { 0x0c4a, 0x0c4d,     C99     },\n-  { 0x0c60, 0x0c61, CXX|C99     },\n-  { 0x0c66, 0x0c6f,     C99|DIG },  /* Digits */\n-  { 0x0c82, 0x0c83,     C99     },  /* Kannada */\n-  { 0x0c85, 0x0c8c, CXX|C99     },\n-  { 0x0c8e, 0x0c90, CXX|C99     },\n-  { 0x0c92, 0x0ca8, CXX|C99     },\n-  { 0x0caa, 0x0cb3, CXX|C99     },\n-  { 0x0cb5, 0x0cb9, CXX|C99     },\n-  { 0x0cbe, 0x0cc4,     C99     },\n-  { 0x0cc6, 0x0cc8,     C99     },\n-  { 0x0cca, 0x0ccd,     C99     },\n-  { 0x0cde, 0x0cde,     C99     },\n-  { 0x0ce0, 0x0ce1, CXX|C99     },\n-  { 0x0ce6, 0x0cef,     C99|DIG },  /* Digits */\n-  { 0x0d02, 0x0d03,     C99     },  /* Malayalam */\n-  { 0x0d05, 0x0d0c, CXX|C99     },\n-  { 0x0d0e, 0x0d10, CXX|C99     },\n-  { 0x0d12, 0x0d28, CXX|C99     },\n-  { 0x0d2a, 0x0d39, CXX|C99     },\n-  { 0x0d3e, 0x0d43,     C99     },\n-  { 0x0d46, 0x0d48,     C99     },\n-  { 0x0d4a, 0x0d4d,     C99     },\n-  { 0x0d60, 0x0d61, CXX|C99     },\n-  { 0x0d66, 0x0d6f,     C99|DIG },  /* Digits */\n-  { 0x0e01, 0x0e30, CXX|C99     },  /* Thai */\n-  { 0x0e31, 0x0e31,     C99     },\n-  { 0x0e32, 0x0e33, CXX|C99     },\n-  { 0x0e34, 0x0e3a,     C99     },\n-  { 0x0e40, 0x0e46, CXX|C99     },\n-  { 0x0e47, 0x0e49,     C99     },\n-  { 0x0e50, 0x0e59, CXX|C99|DIG },  /* Digits */\n-  { 0x0e5a, 0x0e5b, CXX|C99     },  /* Thai */\n-  { 0x0e81, 0x0e82, CXX|C99     },  /* Lao */\n-  { 0x0e84, 0x0e84, CXX|C99     },\n-  { 0x0e87, 0x0e88, CXX|C99     },\n-  { 0x0e8a, 0x0e8a, CXX|C99     },\n-  { 0x0e8d, 0x0e8d, CXX|C99     },\n-  { 0x0e94, 0x0e97, CXX|C99     },\n-  { 0x0e99, 0x0e9f, CXX|C99     },\n-  { 0x0ea1, 0x0ea3, CXX|C99     },\n-  { 0x0ea5, 0x0ea5, CXX|C99     },\n-  { 0x0ea7, 0x0ea7, CXX|C99     },\n-  { 0x0eaa, 0x0eab, CXX|C99     },\n-  { 0x0ead, 0x0eae, CXX|C99     },\n-  { 0x0eaf, 0x0eaf, CXX         },\n-  { 0x0eb0, 0x0eb0, CXX|C99     },\n-  { 0x0eb1, 0x0eb1,     C99     },\n-  { 0x0eb2, 0x0eb3, CXX|C99     },\n-  { 0x0eb4, 0x0eb9,     C99     },\n-  { 0x0ebb, 0x0ebc,     C99     },\n-  { 0x0ebd, 0x0ebd, CXX|C99     },\n-  { 0x0ec0, 0x0ec4, CXX|C99     },\n-  { 0x0ec6, 0x0ec6, CXX|C99     },\n-  { 0x0ec8, 0x0ecd,     C99     },\n-  { 0x0ed0, 0x0ed9,     C99|DIG },  /* Digits */\n-  { 0x0edc, 0x0edd,     C99     },  /* Lao */\n-  { 0x0f00, 0x0f00,     C99     },  /* Tibetan */\n-  { 0x0f18, 0x0f19,     C99     },\n-  { 0x0f20, 0x0f33,     C99|DIG },  /* Digits */\n-  { 0x0f35, 0x0f35,     C99     },  /* Tibetan */\n-  { 0x0f37, 0x0f37,     C99     },\n-  { 0x0f39, 0x0f39,     C99     },\n-  { 0x0f3e, 0x0f47,     C99     },\n-  { 0x0f49, 0x0f69,     C99     },\n-  { 0x0f71, 0x0f84,     C99     },\n-  { 0x0f86, 0x0f8b,     C99     },\n-  { 0x0f90, 0x0f95,     C99     },\n-  { 0x0f97, 0x0f97,     C99     },\n-  { 0x0f99, 0x0fad,     C99     },\n-  { 0x0fb1, 0x0fb7,     C99     },\n-  { 0x0fb9, 0x0fb9,     C99     },\n-  { 0x10a0, 0x10c5, CXX|C99     },  /* Georgian */\n-  { 0x10d0, 0x10f6, CXX|C99     },\n-  { 0x1100, 0x1159, CXX         },  /* Hangul */\n-  { 0x1161, 0x11a2, CXX         },\n-  { 0x11a8, 0x11f9, CXX         },\n-  { 0x1e00, 0x1e9a, CXX|C99     },  /* Latin */\n-  { 0x1e9b, 0x1e9b,     C99     },\n-  { 0x1ea0, 0x1ef9, CXX|C99     },\n-  { 0x1f00, 0x1f15, CXX|C99     },  /* Greek */\n-  { 0x1f18, 0x1f1d, CXX|C99     },\n-  { 0x1f20, 0x1f45, CXX|C99     },\n-  { 0x1f48, 0x1f4d, CXX|C99     },\n-  { 0x1f50, 0x1f57, CXX|C99     },\n-  { 0x1f59, 0x1f59, CXX|C99     },\n-  { 0x1f5b, 0x1f5b, CXX|C99     },\n-  { 0x1f5d, 0x1f5d, CXX|C99     },\n-  { 0x1f5f, 0x1f7d, CXX|C99     },\n-  { 0x1f80, 0x1fb4, CXX|C99     },\n-  { 0x1fb6, 0x1fbc, CXX|C99     },\n-  { 0x1fbe, 0x1fbe,     C99     },  /* Special characters */\n-  { 0x1fc2, 0x1fc4, CXX|C99     },  /* Greek */\n-  { 0x1fc6, 0x1fcc, CXX|C99     },\n-  { 0x1fd0, 0x1fd3, CXX|C99     },\n-  { 0x1fd6, 0x1fdb, CXX|C99     },\n-  { 0x1fe0, 0x1fec, CXX|C99     },\n-  { 0x1ff2, 0x1ff4, CXX|C99     },\n-  { 0x1ff6, 0x1ffc, CXX|C99     },\n-  { 0x203f, 0x2040,     C99     },  /* Special characters */\n-  { 0x207f, 0x207f,     C99     },  /* Latin */\n-  { 0x2102, 0x2102,     C99     },  /* Special characters */\n-  { 0x2107, 0x2107,     C99     },\n-  { 0x210a, 0x2113,     C99     },\n-  { 0x2115, 0x2115,     C99     },\n-  { 0x2118, 0x211d,     C99     },\n-  { 0x2124, 0x2124,     C99     },\n-  { 0x2126, 0x2126,     C99     },\n-  { 0x2128, 0x2128,     C99     },\n-  { 0x212a, 0x2131,     C99     },\n-  { 0x2133, 0x2138,     C99     },\n-  { 0x2160, 0x2182,     C99     },\n-  { 0x3005, 0x3007,     C99     },\n-  { 0x3021, 0x3029,     C99     },\n-  { 0x3041, 0x3093, CXX|C99     },  /* Hiragana */\n-  { 0x3094, 0x3094, CXX         },\n-  { 0x309b, 0x309c, CXX|C99     },\n-  { 0x309d, 0x309e, CXX         },\n-  { 0x30a1, 0x30f6, CXX|C99     },  /* Katakana */\n-  { 0x30f7, 0x30fa, CXX         },\n-  { 0x30fb, 0x30fc, CXX|C99     },\n-  { 0x30fd, 0x30fe, CXX         },\n-  { 0x3105, 0x312c, CXX|C99     },  /* Bopomofo */\n-  { 0x4e00, 0x9fa5, CXX|C99     },  /* CJK Unified Ideographs */\n-  { 0xac00, 0xd7a3,     C99     },  /* Hangul */\n-  { 0xf900, 0xfa2d, CXX         },  /* CJK Unified Ideographs */\n-  { 0xfb1f, 0xfb36, CXX         },\n-  { 0xfb38, 0xfb3c, CXX         },\n-  { 0xfb3e, 0xfb3e, CXX         },\n-  { 0xfb40, 0xfb44, CXX         },\n-  { 0xfb46, 0xfbb1, CXX         },\n-  { 0xfbd3, 0xfd3f, CXX         },\n-  { 0xfd50, 0xfd8f, CXX         },\n-  { 0xfd92, 0xfdc7, CXX         },\n-  { 0xfdf0, 0xfdfb, CXX         },\n-  { 0xfe70, 0xfe72, CXX         },\n-  { 0xfe74, 0xfe74, CXX         },\n-  { 0xfe76, 0xfefc, CXX         },\n-  { 0xff21, 0xff3a, CXX         },\n-  { 0xff41, 0xff5a, CXX         },\n-  { 0xff66, 0xffbe, CXX         },\n-  { 0xffc2, 0xffc7, CXX         },\n-  { 0xffca, 0xffcf, CXX         },\n-  { 0xffd2, 0xffd7, CXX         },\n-  { 0xffda, 0xffdc, CXX         },\n-};\n-\n-#endif /* LIBCPP_UCNID_H */\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x00a9 },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x00aa },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x00b4 },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x00b5 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x00b6 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x00b7 },\n+{   0|  0|  0|CID|NFC|  0|  0,   0, 0x00b9 },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x00ba },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x00bf },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x00d6 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x00d7 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x00f6 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x00f7 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0131 },\n+{ C99|  0|CXX|CID|NFC|  0|  0,   0, 0x0133 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x013e },\n+{ C99|  0|CXX|CID|NFC|  0|  0,   0, 0x0140 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0148 },\n+{ C99|  0|CXX|CID|NFC|  0|  0,   0, 0x0149 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x017e },\n+{ C99|  0|CXX|CID|NFC|  0|  0,   0, 0x017f },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x01c3 },\n+{ C99|  0|CXX|CID|NFC|  0|  0,   0, 0x01cc },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x01f0 },\n+{ C99|  0|CXX|CID|NFC|  0|  0,   0, 0x01f3 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x01f5 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x01f9 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0217 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x024f },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x02a8 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x02af },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x02b8 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x02ba },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x02bb },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x02bc },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x02c1 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x02cf },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x02d1 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x02df },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x02e4 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0379 },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x037a },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0383 },\n+{   0|  0|CXX|CID|NFC|  0|  0,   0, 0x0384 },\n+{   0|  0|  0|CID|NFC|  0|  0,   0, 0x0385 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0386 },\n+{   0|  0|  0|CID|  0|  0|  0,   0, 0x0387 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x038a },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x038b },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x038c },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x038d },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x03a1 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x03a2 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x03ce },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x03cf },\n+{ C99|  0|CXX|CID|NFC|  0|  0,   0, 0x03d6 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x03d9 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x03da },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x03db },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x03dc },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x03dd },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x03de },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x03df },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x03e0 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x03e1 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x03ef },\n+{ C99|  0|CXX|CID|NFC|  0|  0,   0, 0x03f2 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x03f3 },\n+{   0|  0|  0|CID|NFC|  0|  0,   0, 0x0400 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x040c },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0x040d },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x040e },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x044f },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0450 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x045c },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x045d },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0481 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x048f },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x04c4 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x04c6 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x04c8 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x04ca },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x04cc },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x04cf },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x04eb },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x04ed },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x04f5 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x04f7 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x04f9 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0530 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0556 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0558 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0559 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0560 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0586 },\n+{ C99|  0|CXX|CID|NFC|  0|  0,   0, 0x0587 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x05af },\n+{ C99|  0|  0|CID|NFC|NKC|  0,  10, 0x05b0 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,  11, 0x05b1 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,  12, 0x05b2 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,  13, 0x05b3 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,  14, 0x05b4 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,  15, 0x05b5 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,  16, 0x05b6 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,  17, 0x05b7 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,  18, 0x05b8 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,  19, 0x05b9 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x05ba },\n+{ C99|  0|  0|CID|NFC|NKC|  0,  20, 0x05bb },\n+{ C99|  0|  0|CID|NFC|NKC|  0,  21, 0x05bc },\n+{ C99|  0|  0|CID|NFC|NKC|  0,  22, 0x05bd },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x05be },\n+{ C99|  0|  0|CID|NFC|NKC|  0,  23, 0x05bf },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x05c0 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,  24, 0x05c1 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,  25, 0x05c2 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x05cf },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x05ea },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x05ef },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x05f2 },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0x05f4 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0620 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x063a },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x063f },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x064a },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,  27, 0x064b },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,  28, 0x064c },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,  29, 0x064d },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,  30, 0x064e },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,  31, 0x064f },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,  32, 0x0650 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,  33, 0x0651 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,  34, 0x0652 },\n+{   0|  0|  0|CID|NFC|NKC|CTX,   0, 0x065f },\n+{ C99|DIG|  0|CID|NFC|NKC|  0,   0, 0x0669 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x066f },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0674 },\n+{ C99|  0|CXX|CID|NFC|  0|  0,   0, 0x0678 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x06b7 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x06b9 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x06be },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x06bf },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x06ce },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x06cf },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x06d5 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 230, 0x06d6 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 230, 0x06d7 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 230, 0x06d8 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 230, 0x06d9 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 230, 0x06da },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 230, 0x06db },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 230, 0x06dc },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x06e4 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x06e6 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0, 230, 0x06e7 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 230, 0x06e8 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x06e9 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 220, 0x06ea },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 230, 0x06eb },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 230, 0x06ec },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 220, 0x06ed },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x06ef },\n+{ C99|DIG|  0|CID|NFC|NKC|  0,   0, 0x06f9 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0900 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0903 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0904 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0939 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x093c },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x094c },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   9, 0x094d },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x094f },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0950 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 230, 0x0951 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 220, 0x0952 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0957 },\n+{ C99|  0|CXX|CID|  0|  0|  0,   0, 0x095f },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0962 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0963 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0965 },\n+{ C99|DIG|  0|CID|NFC|NKC|  0,   0, 0x096f },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0980 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0983 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0984 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x098c },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x098e },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0990 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0992 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x09a8 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x09a9 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x09b0 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x09b1 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x09b2 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x09b5 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x09b9 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x09bd },\n+{ C99|  0|  0|CID|NFC|NKC|CTX,   0, 0x09be },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x09c4 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x09c6 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x09c8 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x09ca },\n+{ C99|  0|  0|  0|NFC|NKC|  0,   0, 0x09cb },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x09cc },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   9, 0x09cd },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x09db },\n+{ C99|  0|CXX|CID|  0|  0|  0,   0, 0x09dd },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x09de },\n+{ C99|  0|CXX|CID|  0|  0|  0,   0, 0x09df },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x09e1 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x09e3 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x09e5 },\n+{ C99|DIG|  0|CID|NFC|NKC|  0,   0, 0x09ef },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x09f1 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a01 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0a02 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a04 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0a0a },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a0e },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0a10 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a12 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0a28 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a29 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0a30 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a31 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0a32 },\n+{ C99|  0|CXX|CID|  0|  0|  0,   0, 0x0a33 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a34 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0a35 },\n+{ C99|  0|CXX|CID|  0|  0|  0,   0, 0x0a36 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a37 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0a39 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a3d },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0a42 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a46 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0a48 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a4a },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0a4c },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   9, 0x0a4d },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a58 },\n+{ C99|  0|CXX|CID|  0|  0|  0,   0, 0x0a5b },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0a5c },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a5d },\n+{ C99|  0|CXX|CID|  0|  0|  0,   0, 0x0a5e },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a65 },\n+{ C99|DIG|  0|CID|NFC|NKC|  0,   0, 0x0a6f },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a73 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0a74 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a80 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0a83 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a84 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0a8b },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a8c },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0a8d },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a8e },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0a91 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0a92 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0aa8 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0aa9 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0ab0 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0ab1 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0ab3 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0ab4 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0ab9 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0abc },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0ac5 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0ac6 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0ac9 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0aca },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0acc },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   9, 0x0acd },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0acf },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0ad0 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0adf },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0ae0 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0ae5 },\n+{ C99|DIG|  0|CID|NFC|NKC|  0,   0, 0x0aef },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b00 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0b03 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b04 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0b0c },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b0e },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0b10 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b12 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0b28 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b29 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0b30 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b31 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0b33 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b35 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0b39 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b3c },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0b3d },\n+{ C99|  0|  0|CID|NFC|NKC|CTX,   0, 0x0b3e },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0b43 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b46 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0b48 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b4a },\n+{ C99|  0|  0|  0|NFC|NKC|  0,   0, 0x0b4b },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0b4c },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   9, 0x0b4d },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b5b },\n+{ C99|  0|CXX|CID|  0|  0|  0,   0, 0x0b5d },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b5e },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0b61 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b65 },\n+{ C99|DIG|  0|CID|NFC|NKC|  0,   0, 0x0b6f },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b81 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0b83 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b84 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0b8a },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b8d },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0b90 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b91 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0b95 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b98 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0b9a },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b9b },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0b9c },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0b9d },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0b9f },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0ba2 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0ba4 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0ba7 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0baa },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0bad },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0bb5 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0bb6 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0bb9 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0bbd },\n+{ C99|  0|  0|CID|NFC|NKC|CTX,   0, 0x0bbe },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0bc2 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0bc5 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0bc8 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0bc9 },\n+{ C99|  0|  0|  0|NFC|NKC|  0,   0, 0x0bcb },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0bcc },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   9, 0x0bcd },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0be6 },\n+{ C99|DIG|  0|CID|NFC|NKC|  0,   0, 0x0bef },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0c00 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0c03 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0c04 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0c0c },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0c0d },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0c10 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0c11 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0c28 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0c29 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0c33 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0c34 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0c39 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0c3d },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0c44 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0c45 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0c48 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0c49 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0c4c },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   9, 0x0c4d },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0c5f },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0c61 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0c65 },\n+{ C99|DIG|  0|CID|NFC|NKC|  0,   0, 0x0c6f },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0c81 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0c83 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0c84 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0c8c },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0c8d },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0c90 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0c91 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0ca8 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0ca9 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0cb3 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0cb4 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0cb9 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0cbd },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0cc1 },\n+{ C99|  0|  0|CID|NFC|NKC|CTX,   0, 0x0cc2 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0cc4 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0cc5 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0cc8 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0cc9 },\n+{ C99|  0|  0|  0|NFC|NKC|  0,   0, 0x0cca },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0ccc },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   9, 0x0ccd },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0cdd },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0cde },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0cdf },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0ce1 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0ce5 },\n+{ C99|DIG|  0|CID|NFC|NKC|  0,   0, 0x0cef },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0d01 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0d03 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0d04 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0d0c },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0d0d },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0d10 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0d11 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0d28 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0d29 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0d39 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0d3d },\n+{ C99|  0|  0|CID|NFC|NKC|CTX,   0, 0x0d3e },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0d43 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0d45 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0d48 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0d49 },\n+{ C99|  0|  0|  0|NFC|NKC|  0,   0, 0x0d4b },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0d4c },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   9, 0x0d4d },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0d5f },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0d61 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0d65 },\n+{ C99|DIG|  0|CID|NFC|NKC|  0,   0, 0x0d6f },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0e00 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0e30 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0e31 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0e32 },\n+{ C99|  0|CXX|CID|NFC|  0|  0,   0, 0x0e33 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0e37 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 103, 0x0e38 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 103, 0x0e39 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   9, 0x0e3a },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0e3f },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0e46 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0e47 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 107, 0x0e48 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 107, 0x0e49 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0e4e },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0x0e4f },\n+{ C99|DIG|CXX|CID|NFC|NKC|  0,   0, 0x0e59 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0e5b },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0e80 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0e82 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0e83 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0e84 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0e86 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0e88 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0e89 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0e8a },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0e8c },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0e8d },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0e93 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0e97 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0e98 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0e9f },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0ea0 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0ea3 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0ea4 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0ea5 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0ea6 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0ea7 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0ea9 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0eab },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0eac },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0eae },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0x0eaf },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0eb0 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0eb1 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0eb2 },\n+{ C99|  0|CXX|CID|NFC|  0|  0,   0, 0x0eb3 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0eb7 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 118, 0x0eb8 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 118, 0x0eb9 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0eba },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0ebc },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0ebd },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0ebf },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0ec4 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0ec5 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x0ec6 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0ec7 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 122, 0x0ec8 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 122, 0x0ec9 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 122, 0x0eca },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0ecd },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0ecf },\n+{ C99|DIG|  0|CID|NFC|NKC|  0,   0, 0x0ed9 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0edb },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x0edd },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0eff },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0f00 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0f17 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 220, 0x0f18 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 220, 0x0f19 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0f1f },\n+{ C99|DIG|  0|CID|NFC|NKC|  0,   0, 0x0f33 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0f34 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 220, 0x0f35 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0f36 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 220, 0x0f37 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0f38 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 216, 0x0f39 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0f3d },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0f42 },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x0f43 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0f47 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0f48 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0f4c },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x0f4d },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0f51 },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x0f52 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0f56 },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x0f57 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0f5b },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x0f5c },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0f68 },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x0f69 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0f70 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 129, 0x0f71 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 130, 0x0f72 },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x0f73 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 132, 0x0f74 },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x0f76 },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x0f77 },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x0f78 },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x0f79 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 130, 0x0f7a },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 130, 0x0f7b },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 130, 0x0f7c },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0f7f },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 130, 0x0f80 },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x0f81 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 230, 0x0f82 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 230, 0x0f83 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   9, 0x0f84 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0f85 },\n+{ C99|  0|  0|CID|NFC|NKC|  0, 230, 0x0f86 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0f8b },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0f8f },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0f92 },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x0f93 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0f95 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0f96 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0f97 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0f98 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0f9c },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x0f9d },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0fa1 },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x0fa2 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0fa6 },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x0fa7 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0fab },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x0fac },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0fad },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0fb0 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x0fb7 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x0fb8 },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x0fb9 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x109f },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x10c5 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x10cf },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x10f6 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x10ff },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0x1159 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x1160 },\n+{   0|  0|CXX|CID|NFC|NKC|CTX,   0, 0x1175 },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0x11a2 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x11a7 },\n+{   0|  0|CXX|CID|NFC|NKC|CTX,   0, 0x11c2 },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0x11f9 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x1dff },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1e99 },\n+{ C99|  0|CXX|CID|NFC|  0|  0,   0, 0x1e9a },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x1e9b },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x1e9f },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1ef9 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x1eff },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1f15 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x1f17 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1f1d },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x1f1f },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1f45 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x1f47 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1f4d },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x1f4f },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1f57 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x1f58 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1f59 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x1f5a },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1f5b },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x1f5c },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1f5d },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x1f5e },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1f70 },\n+{ C99|  0|CXX|  0|  0|  0|  0,   0, 0x1f71 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1f72 },\n+{ C99|  0|CXX|  0|  0|  0|  0,   0, 0x1f73 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1f74 },\n+{ C99|  0|CXX|  0|  0|  0|  0,   0, 0x1f75 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1f76 },\n+{ C99|  0|CXX|  0|  0|  0|  0,   0, 0x1f77 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1f78 },\n+{ C99|  0|CXX|  0|  0|  0|  0,   0, 0x1f79 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1f7a },\n+{ C99|  0|CXX|  0|  0|  0|  0,   0, 0x1f7b },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1f7c },\n+{ C99|  0|CXX|  0|  0|  0|  0,   0, 0x1f7d },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x1f7f },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1fb4 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x1fb5 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1fba },\n+{ C99|  0|CXX|  0|  0|  0|  0,   0, 0x1fbb },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1fbc },\n+{   0|  0|  0|CID|NFC|  0|  0,   0, 0x1fbd },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x1fbe },\n+{   0|  0|  0|CID|NFC|  0|  0,   0, 0x1fc1 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1fc4 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x1fc5 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1fc8 },\n+{ C99|  0|CXX|  0|  0|  0|  0,   0, 0x1fc9 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1fca },\n+{ C99|  0|CXX|  0|  0|  0|  0,   0, 0x1fcb },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1fcc },\n+{   0|  0|  0|CID|NFC|  0|  0,   0, 0x1fcf },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1fd2 },\n+{ C99|  0|CXX|  0|  0|  0|  0,   0, 0x1fd3 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x1fd5 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1fda },\n+{ C99|  0|CXX|  0|  0|  0|  0,   0, 0x1fdb },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x1fdf },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1fe2 },\n+{ C99|  0|CXX|  0|  0|  0|  0,   0, 0x1fe3 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1fea },\n+{ C99|  0|CXX|  0|  0|  0|  0,   0, 0x1feb },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1fec },\n+{   0|  0|  0|CID|NFC|  0|  0,   0, 0x1ff1 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1ff4 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x1ff5 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1ff8 },\n+{ C99|  0|CXX|  0|  0|  0|  0,   0, 0x1ff9 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1ffa },\n+{ C99|  0|CXX|  0|  0|  0|  0,   0, 0x1ffb },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x1ffc },\n+{   0|  0|  0|CID|  0|  0|  0,   0, 0x203e },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x2040 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x207e },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x207f },\n+{   0|  0|  0|CID|NFC|  0|  0,   0, 0x2101 },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x2102 },\n+{   0|  0|  0|CID|NFC|  0|  0,   0, 0x2106 },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x2107 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x2109 },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x2113 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x2114 },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x2115 },\n+{   0|  0|  0|CID|NFC|  0|  0,   0, 0x2117 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x2118 },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x211d },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x2123 },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x2124 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x2125 },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x2126 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x2127 },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x2128 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x2129 },\n+{ C99|  0|  0|CID|  0|  0|  0,   0, 0x212a },\n+{ C99|  0|  0|  0|  0|  0|  0,   0, 0x212b },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x212d },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x212e },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x2131 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x2132 },\n+{ C99|  0|  0|CID|NFC|  0|  0,   0, 0x2138 },\n+{   0|  0|  0|CID|NFC|  0|  0,   0, 0x215f },\n+{ C99|DIG|  0|CID|NFC|  0|  0,   0, 0x217f },\n+{ C99|DIG|  0|CID|NFC|NKC|  0,   0, 0x2182 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x3004 },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0x3006 },\n+{ C99|DIG|  0|CID|NFC|NKC|  0,   0, 0x3007 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x3020 },\n+{ C99|DIG|  0|CID|NFC|NKC|  0,   0, 0x3029 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x3040 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x3093 },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0x3094 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x309a },\n+{ C99|  0|CXX|CID|NFC|  0|  0,   0, 0x309c },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0x309e },\n+{   0|  0|  0|CID|NFC|  0|  0,   0, 0x30a0 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x30f6 },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0x30fa },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x30fc },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0x30fe },\n+{   0|  0|  0|CID|NFC|  0|  0,   0, 0x3104 },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x312c },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0x4dff },\n+{ C99|  0|CXX|CID|NFC|NKC|  0,   0, 0x9fa5 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xabff },\n+{ C99|  0|  0|CID|NFC|NKC|  0,   0, 0xd7a3 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xf8ff },\n+{   0|  0|CXX|  0|  0|  0|  0,   0, 0xfa0d },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0xfa0f },\n+{   0|  0|CXX|  0|  0|  0|  0,   0, 0xfa10 },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0xfa11 },\n+{   0|  0|CXX|  0|  0|  0|  0,   0, 0xfa12 },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0xfa14 },\n+{   0|  0|CXX|  0|  0|  0|  0,   0, 0xfa1e },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0xfa1f },\n+{   0|  0|CXX|  0|  0|  0|  0,   0, 0xfa20 },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0xfa21 },\n+{   0|  0|CXX|  0|  0|  0|  0,   0, 0xfa22 },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0xfa24 },\n+{   0|  0|CXX|  0|  0|  0|  0,   0, 0xfa26 },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0xfa29 },\n+{   0|  0|CXX|  0|  0|  0|  0,   0, 0xfa2d },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xfb1e },\n+{   0|  0|CXX|CID|  0|  0|  0,   0, 0xfb1f },\n+{   0|  0|CXX|CID|NFC|  0|  0,   0, 0xfb29 },\n+{   0|  0|CXX|CID|  0|  0|  0,   0, 0xfb36 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xfb37 },\n+{   0|  0|CXX|CID|  0|  0|  0,   0, 0xfb3c },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xfb3d },\n+{   0|  0|CXX|CID|  0|  0|  0,   0, 0xfb3e },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xfb3f },\n+{   0|  0|CXX|CID|  0|  0|  0,   0, 0xfb41 },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0xfb42 },\n+{   0|  0|CXX|CID|  0|  0|  0,   0, 0xfb44 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xfb45 },\n+{   0|  0|CXX|CID|  0|  0|  0,   0, 0xfb4e },\n+{   0|  0|CXX|CID|NFC|  0|  0,   0, 0xfbb1 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xfbd2 },\n+{   0|  0|CXX|CID|NFC|  0|  0,   0, 0xfd3d },\n+{   0|  0|CXX|CID|NFC|NKC|  0,   0, 0xfd3f },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xfd4f },\n+{   0|  0|CXX|CID|NFC|  0|  0,   0, 0xfd8f },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xfd91 },\n+{   0|  0|CXX|CID|NFC|  0|  0,   0, 0xfdc7 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xfdef },\n+{   0|  0|CXX|CID|NFC|  0|  0,   0, 0xfdfb },\n+{   0|  0|  0|CID|NFC|  0|  0,   0, 0xfe6f },\n+{   0|  0|CXX|CID|NFC|  0|  0,   0, 0xfe72 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xfe73 },\n+{   0|  0|CXX|CID|NFC|  0|  0,   0, 0xfe74 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xfe75 },\n+{   0|  0|CXX|CID|NFC|  0|  0,   0, 0xfefc },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xff20 },\n+{   0|  0|CXX|CID|NFC|  0|  0,   0, 0xff3a },\n+{   0|  0|  0|CID|NFC|  0|  0,   0, 0xff40 },\n+{   0|  0|CXX|CID|NFC|  0|  0,   0, 0xff5a },\n+{   0|  0|  0|CID|NFC|  0|  0,   0, 0xff65 },\n+{   0|  0|CXX|CID|NFC|  0|  0,   0, 0xffbe },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xffc1 },\n+{   0|  0|CXX|CID|NFC|  0|  0,   0, 0xffc7 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xffc9 },\n+{   0|  0|CXX|CID|NFC|  0|  0,   0, 0xffcf },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xffd1 },\n+{   0|  0|CXX|CID|NFC|  0|  0,   0, 0xffd7 },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xffd9 },\n+{   0|  0|CXX|CID|NFC|  0|  0,   0, 0xffdc },\n+{   0|  0|  0|CID|NFC|NKC|  0,   0, 0xffff },"}, {"sha": "eb8bbcac627ba974746569fff26a6be3e371b4ab", "filename": "libcpp/ucnid.pl", "status": "removed", "additions": 0, "deletions": 130, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd8b38b9eb3dfdc7709ad0088ff543a3a2df67ec/libcpp%2Fucnid.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd8b38b9eb3dfdc7709ad0088ff543a3a2df67ec/libcpp%2Fucnid.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fucnid.pl?ref=cd8b38b9eb3dfdc7709ad0088ff543a3a2df67ec", "patch": "@@ -1,130 +0,0 @@\n-#! /usr/bin/perl -w\n-use strict;\n-\n-# Convert cppucnid.tab to cppucnid.h.  We use two arrays of length\n-# 65536 to represent the table, since this is nice and simple.  The\n-# first array holds the tags indicating which ranges are valid in\n-# which contexts.  The second array holds the language name associated\n-# with each element.\n-\n-our(@tags, @names);\n-@tags = (\"\") x 65536;\n-@names = (\"\") x 65536;\n-\n-\n-# Array mapping tag numbers to standard #defines\n-our @stds;\n-\n-# Current standard and language\n-our($curstd, $curlang);\n-\n-# First block of the file is a template to be saved for later.\n-our @template;\n-\n-while (<>) {\n-    chomp;\n-    last if $_ eq '%%';\n-    push @template, $_;\n-};\n-\n-# Second block of the file is the UCN tables.\n-# The format looks like this:\n-#\n-# [std]\n-#\n-# ; language\n-# xxxx-xxxx xxxx xxxx-xxxx ....\n-#\n-# with comment lines starting with #.\n-\n-while (<>) {\n-    chomp;\n-    /^#/ and next;\n-    /^\\s*$/ and next;\n-    /^\\[(.+)\\]$/ and do {\n-\t$curstd = $1;\n- \tnext;\n-    };\n-    /^; (.+)$/ and do {\n-\t$curlang = $1;\n-\tnext;\n-    };\n-\n-    process_range(split);\n-}\n-\n-# Print out the template, inserting as requested.\n-$\\ = \"\\n\";\n-for (@template) {\n-    print(\"/* Automatically generated from cppucnid.tab, do not edit */\"),\n-        next if $_ eq \"[dne]\";\n-    print_table(), next if $_ eq \"[table]\";\n-    print;\n-}\n-\n-sub print_table {\n-    my($lo, $hi);\n-    my $prevname = \"\";\n-\n-    for ($lo = 0; $lo <= $#tags; $lo = $hi) {\n-\t$hi = $lo;\n-\t$hi++ while $hi <= $#tags\n-\t    && $tags[$hi] eq $tags[$lo]\n-\t    && $names[$hi] eq $names[$lo];\n-\n-\t# Range from $lo to $hi-1.\n-\t# Don't make entries for ranges that are not valid idchars.\n-\tnext if ($tags[$lo] eq \"\");\n-\tmy $tag = $tags[$lo];\n-        $tag = \"    \".$tag if $tag =~ /^C99/;\n-\n-\tif ($names[$lo] eq $prevname) {\n-\t    printf(\"  { 0x%04x, 0x%04x, %-11s },\\n\",\n-\t\t   $lo, $hi-1, $tag);\n-\t} else {\n-\t    printf(\"  { 0x%04x, 0x%04x, %-11s },  /* %s */\\n\",\n-\t\t   $lo, $hi-1, $tag, $names[$lo]);\n-\t}\n-\t$prevname = $names[$lo];\n-    }\n-}\n-\n-# The line is a list of four-digit hexadecimal numbers or\n-# pairs of such numbers.  Each is a valid identifier character\n-# from the given language, under the given standard.\n-sub process_range {\n-    for my $range (@_) {\n-\tif ($range =~ /^[0-9a-f]{4}$/) {\n-\t    my $i = hex($range);\n-\t    if ($tags[$i] eq \"\") {\n-\t\t$tags[$i] = $curstd;\n-\t    } else {\n-\t\t$tags[$i] = $curstd . \"|\" . $tags[$i];\n-\t    }\n-\t    if ($names[$i] ne \"\" && $names[$i] ne $curlang) {\n-\t\twarn sprintf (\"language overlap: %s/%s at %x (tag %d)\",\n-\t\t\t      $names[$i], $curlang, $i, $tags[$i]);\n-\t\tnext;\n-\t    }\n-\t    $names[$i] = $curlang;\n-\t} elsif ($range =~ /^ ([0-9a-f]{4}) - ([0-9a-f]{4}) $/x) {\n-\t    my ($start, $end) = (hex($1), hex($2));\n-\t    my $i;\n-\t    for ($i = $start; $i <= $end; $i++) {\n-\t\tif ($tags[$i] eq \"\") {\n-\t\t    $tags[$i] = $curstd;\n-\t\t} else {\n-\t\t    $tags[$i] = $curstd . \"|\" . $tags[$i];\n-\t\t}\n-\t\tif ($names[$i] ne \"\" && $names[$i] ne $curlang) {\n-\t\t    warn sprintf (\"language overlap: %s/%s at %x (tag %d)\",\n-\t\t\t\t  $names[$i], $curlang, $i, $tags[$i]);\n-\t\t    next;\n-\t\t}\n-\t\t$names[$i] = $curlang;\n-\t    }\n-\t} else {\n-\t    warn \"malformed range expression $range\";\n-\t}\n-    }\n-}"}, {"sha": "516f9214dd0b579122a42c0694868aa9dd86162c", "filename": "libcpp/ucnid.tab", "status": "modified", "additions": 23, "deletions": 51, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50668cf626cf30043890f1000f500ce69a54fedb/libcpp%2Fucnid.tab", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50668cf626cf30043890f1000f500ce69a54fedb/libcpp%2Fucnid.tab", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fucnid.tab?ref=50668cf626cf30043890f1000f500ce69a54fedb", "patch": "@@ -1,47 +1,25 @@\n-/* Table of UCNs which are valid in identifiers.\n-   Copyright (C) 2003 Free Software Foundation, Inc.\n-\n-This program is free software; you can redistribute it and/or modify it\n-under the terms of the GNU General Public License as published by the\n-Free Software Foundation; either version 2, or (at your option) any\n-later version.\n-\n-This program is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with this program; if not, write to the Free Software\n-Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n-\n-[dne]\n-\n-/* This file reproduces the table in ISO/IEC 9899:1999 (C99) Annex\n-   D, which is itself a reproduction from ISO/IEC TR 10176:1998, and\n-   the similar table from ISO/IEC 14882:1988 (C++98) Annex E, which is\n-   a reproduction of ISO/IEC PDTR 10176.  Unfortunately these tables\n-   are not identical.  */\n-\n-#ifndef LIBCPP_UCNID_H\n-#define LIBCPP_UCNID_H\n-\n-#define C99 1\n-#define CXX 2\n-#define DIG 4\n-\n-struct ucnrange\n-{\n-  unsigned short lo, hi;\n-  unsigned short flags;\n-};\n-\n-static const struct ucnrange ucnranges[] = {\n-[table]\n-};\n-\n-#endif /* LIBCPP_UCNID_H */\n-%%\n+; Table of UCNs which are valid in identifiers.\n+; Copyright (C) 2003, 2005 Free Software Foundation, Inc.\n+; \n+; This program is free software; you can redistribute it and/or modify it\n+; under the terms of the GNU General Public License as published by the\n+; Free Software Foundation; either version 2, or (at your option) any\n+; later version.\n+; \n+; This program is distributed in the hope that it will be useful,\n+; but WITHOUT ANY WARRANTY; without even the implied warranty of\n+; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+; GNU General Public License for more details.\n+; \n+; You should have received a copy of the GNU General Public License\n+; along with this program; if not, write to the Free Software\n+; Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+; \n+; This file reproduces the table in ISO/IEC 9899:1999 (C99) Annex\n+; D, which is itself a reproduction from ISO/IEC TR 10176:1998, and\n+; the similar table from ISO/IEC 14882:1988 (C++98) Annex E, which is\n+; a reproduction of ISO/IEC PDTR 10176.  Unfortunately these tables\n+; are not identical.\n \n [C99]\n \n@@ -141,7 +119,6 @@ ac00-d7a3\n 0b3d 1fbe 203f-2040 2102 2107 210a-2113 2115 2118-211d 2124 2126 2128\n 212a-2131 2133-2138 2160-2182 3005-3007 3021-3029\n \n-[C99|DIG]\n ; Digits\n 0660-0669 06f0-06f9 0966-096f 09e6-09ef 0a66-0a6f 0ae6-0aef 0b66-0b6f\n 0be7-0bef 0c66-0c6f 0ce6-0cef 0d66-0d6f 0e50-0e59 0ed0-0ed9 0f20-0f33\n@@ -201,16 +178,12 @@ ac00-d7a3\n ; Malayalam\n 0d05-0d0c 0d0e-0d10 0d12-0d28 0d2a-0d39 0d60-0d61\n \n-# CORRECTION: Exclude 0e50-0e59 from the Thai range and make a fake\n-# Digits range for it, to match C99.  cppcharset.c knows that C++\n-# doesn't distinguish digits from other UCNs valid in identifiers.\n ; Thai\n-0e01-0e30 0e32-0e33 0e40-0e46 0e4f-0e49 0e5a-0e5b\n+0e01-0e30 0e32-0e33 0e40-0e46 0e4f-0e5b\n \n ; Digits\n 0e50-0e59\n \n-# CORRECTION: Change 0e0d to 0e8d (typo in standard; see C++ DR 131)\n ; Lao\n 0e81-0e82 0e84 0e87-0e88 0e8a 0e8d 0e94-0e97 0e99-0e9f 0ea1-0ea3 0ea5\n 0ea7 0eaa-0eab 0ead-0eb0 0eb2 0eb3 0ebd 0ec0-0ec4 0ec6\n@@ -224,7 +197,6 @@ ac00-d7a3\n ; Katakana\n 30a1-30fe\n \n-# CORRECTION: language spelled \"Bopmofo\" in C++98.\n ; Bopomofo\n 3105-312c\n "}]}