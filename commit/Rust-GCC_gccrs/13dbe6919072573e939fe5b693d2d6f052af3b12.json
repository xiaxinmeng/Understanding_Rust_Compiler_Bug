{"sha": "13dbe6919072573e939fe5b693d2d6f052af3b12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNkYmU2OTE5MDcyNTczZTkzOWZlNWI2OTNkMmQ2ZjA1MmFmM2IxMg==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2006-05-21T08:39:14Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2006-05-21T08:39:14Z"}, "message": "re PR c++/27398 (ICE on missing closing parenthesis)\n\n\tPR c++/27398\n\t* decl.c (grokdeclarator): Return error_mark_node instead of NULL_TREE\n\tor void_type_node.\n\n\t* g++.dg/template/crash50.C: New test.\n\nFrom-SVN: r113950", "tree": {"sha": "98dcc7ca99b0d090fc81a7645a1b633d3cc3e789", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98dcc7ca99b0d090fc81a7645a1b633d3cc3e789"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13dbe6919072573e939fe5b693d2d6f052af3b12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13dbe6919072573e939fe5b693d2d6f052af3b12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13dbe6919072573e939fe5b693d2d6f052af3b12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13dbe6919072573e939fe5b693d2d6f052af3b12/comments", "author": null, "committer": null, "parents": [{"sha": "476220e7ee32d83c829ec76b7dcf2ccd9000b3bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/476220e7ee32d83c829ec76b7dcf2ccd9000b3bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/476220e7ee32d83c829ec76b7dcf2ccd9000b3bf"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "13f25f0f3514f8086d16dcfea74ddb412edf2ee2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13dbe6919072573e939fe5b693d2d6f052af3b12/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13dbe6919072573e939fe5b693d2d6f052af3b12/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=13dbe6919072573e939fe5b693d2d6f052af3b12", "patch": "@@ -1,3 +1,9 @@\n+2006-05-21  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR c++/27398\n+\t* decl.c (grokdeclarator): Return error_mark_node instead of NULL_TREE\n+\tor void_type_node.\n+\n 2006-05-19  Mike Stump  <mrs@apple.com>\n \n \t* typeck.c (default_conversion): Remove static."}, {"sha": "72727dbca3c41d9be00646d40709d7efc39912de", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13dbe6919072573e939fe5b693d2d6f052af3b12/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13dbe6919072573e939fe5b693d2d6f052af3b12/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=13dbe6919072573e939fe5b693d2d6f052af3b12", "patch": "@@ -7285,7 +7285,7 @@ grokdeclarator (const cp_declarator *declarator,\n   if (dependent_name && !friendp)\n     {\n       error (\"%<%T::%D%> is not a valid declarator\", ctype, dependent_name);\n-      return void_type_node;\n+      return error_mark_node;\n     }\n \n   /* Issue errors about use of storage classes for parameters.  */\n@@ -7529,7 +7529,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t    && !member_function_or_else (ctype,\n \t\t\t\t\t\t current_class_type,\n \t\t\t\t\t\t flags))\n-\t\t  return void_type_node;\n+\t\t  return error_mark_node;\n \n \t\tif (flags != DTOR_FLAG)\n \t\t  {\n@@ -7543,7 +7543,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t      }\n \t\t    if (decl_context == FIELD\n \t\t\t&& sfk != sfk_constructor)\n-\t\t      return NULL_TREE;\n+\t\t      return error_mark_node;\n \t\t  }\n \t\tif (decl_context == FIELD)\n \t\t  staticp = 0;\n@@ -8148,7 +8148,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t  {\n \t\t    error (\"can't make %qD into a method -- not in a class\",\n \t\t\t   unqualified_id);\n-\t\t    return void_type_node;\n+\t\t    return error_mark_node;\n \t\t  }\n \n \t\t/* ``A union may [ ... ] not [ have ] virtual functions.''\n@@ -8157,7 +8157,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t  {\n \t\t    error (\"function %qD declared virtual inside a union\",\n \t\t\t   unqualified_id);\n-\t\t    return void_type_node;\n+\t\t    return error_mark_node;\n \t\t  }\n \n \t\tif (NEW_DELETE_OPNAME_P (unqualified_id))\n@@ -8259,7 +8259,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t\t       funcdef_flag, template_count, in_namespace,\n \t\t\t       attrlist);\n \t    if (decl == NULL_TREE)\n-\t      return NULL_TREE;\n+\t      return error_mark_node;\n \t  }\n \telse if (!staticp && !dependent_type_p (type)\n \t\t && !COMPLETE_TYPE_P (complete_type (type))\n@@ -8316,7 +8316,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t\treturn decl;\n \t      }\n \t    else\n-\t      return void_type_node;\n+\t      return error_mark_node;\n \t  }\n \n \t/* Structure field.  It may not be a function, except for C++.  */\n@@ -8355,7 +8355,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t     void_type_node, as if this was a friend\n \t\t     declaration, to cause callers to completely\n \t\t     ignore this declaration.  */\n-\t\t  return void_type_node;\n+\t\t  return error_mark_node;\n \t      }\n \n \t    if (staticp)\n@@ -8403,7 +8403,7 @@ grokdeclarator (const cp_declarator *declarator,\n \tint publicp = 0;\n \n \tif (!unqualified_id)\n-\t  return NULL_TREE;\n+\t  return error_mark_node;\n \n \tif (TREE_CODE (unqualified_id) == TEMPLATE_ID_EXPR)\n \t  original_name = dname;\n@@ -8458,7 +8458,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t\t   publicp, inlinep, sfk, funcdef_flag,\n \t\t\t   template_count, in_namespace, attrlist);\n \tif (decl == NULL_TREE)\n-\t  return NULL_TREE;\n+\t  return error_mark_node;\n \n \tif (staticp == 1)\n \t  {"}, {"sha": "737e18076e11161ebda9c5b44541340ba1dcd8a8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13dbe6919072573e939fe5b693d2d6f052af3b12/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13dbe6919072573e939fe5b693d2d6f052af3b12/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=13dbe6919072573e939fe5b693d2d6f052af3b12", "patch": "@@ -1,3 +1,8 @@\n+2006-05-21  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR c++/27398\n+\t* g++.dg/template/crash50.C: New test.\n+\n 2006-05-21  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/25746"}, {"sha": "0060561282f135be95da49901f0a28f732c138f7", "filename": "gcc/testsuite/g++.dg/template/crash50.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13dbe6919072573e939fe5b693d2d6f052af3b12/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash50.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13dbe6919072573e939fe5b693d2d6f052af3b12/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash50.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash50.C?ref=13dbe6919072573e939fe5b693d2d6f052af3b12", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/27398\n+// { dg-do compile }\n+\n+struct A\n+{\n+  template<int> void* foo(; // { dg-error \"primary-expression|initialization|static\" }\n+};"}]}