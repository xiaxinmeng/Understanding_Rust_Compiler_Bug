{"sha": "6476fc372a684ff42712c10508dddf0e6d229df5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ3NmZjMzcyYTY4NGZmNDI3MTJjMTA1MDhkZGRmMGU2ZDIyOWRmNQ==", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2020-02-15T00:24:47Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-08T07:51:07Z"}, "message": "[Ada] Implement AI12-0290 (Simple_Barriers restriction)\n\n2020-06-08  Steve Baird  <baird@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch13.ads: Export new function\n\tAll_Membership_Choices_Static.\n\t* sem_ch13.adb: Implement new function\n\tAll_Membership_Choices_Static.  This involves moving the\n\tfunctions Is_Static_Choice and All_Membership_Choices_Static,\n\twhich were previously declared within the function\n\tIs_Predicate_Static, out to library level so that they can be\n\tcalled by the new function. The already-exisiting code in\n\tIs_Predicate_Static which became the body of\n\tAll_Membership_Choices_Static is replaced with a call to the new\n\tfunction in order to avoid duplication.\n\t* exp_ch9.adb (Is_Pure_Barrier): Several changes needed to\n\timplement rules of AI12-0290 and RM D.7's definition of\n\t\"pure-barrier-eligible\". These changes include adding a call to\n\tthe new function Sem_13.All_Membership_Choices_Static, as per\n\tthe \"see 4.9\" in RM D.7(1.6/5).", "tree": {"sha": "c03154d0536dcfe53870ee938f65f69d956bcfba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c03154d0536dcfe53870ee938f65f69d956bcfba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6476fc372a684ff42712c10508dddf0e6d229df5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6476fc372a684ff42712c10508dddf0e6d229df5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6476fc372a684ff42712c10508dddf0e6d229df5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6476fc372a684ff42712c10508dddf0e6d229df5/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b0ec65d852c11fde3937629d10c6b24083b5737", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b0ec65d852c11fde3937629d10c6b24083b5737", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b0ec65d852c11fde3937629d10c6b24083b5737"}], "stats": {"total": 174, "additions": 106, "deletions": 68}, "files": [{"sha": "36baf6f74e58d8ed0faa4d60605451863f866d64", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 39, "deletions": 12, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6476fc372a684ff42712c10508dddf0e6d229df5/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6476fc372a684ff42712c10508dddf0e6d229df5/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=6476fc372a684ff42712c10508dddf0e6d229df5", "patch": "@@ -53,6 +53,7 @@ with Sem_Ch6;  use Sem_Ch6;\n with Sem_Ch8;  use Sem_Ch8;\n with Sem_Ch9;  use Sem_Ch9;\n with Sem_Ch11; use Sem_Ch11;\n+with Sem_Ch13; use Sem_Ch13;\n with Sem_Elab; use Sem_Elab;\n with Sem_Eval; use Sem_Eval;\n with Sem_Prag; use Sem_Prag;\n@@ -6236,28 +6237,37 @@ package body Exp_Ch9 is\n             when N_Expanded_Name\n                | N_Identifier\n             =>\n+\n+               --  Because of N_Expanded_Name case, return Skip instead of OK.\n+\n                if No (Entity (N)) then\n                   return Abandon;\n \n                elsif Is_Universal_Numeric_Type (Entity (N)) then\n-                  return OK;\n+                  return Skip;\n                end if;\n \n                case Ekind (Entity (N)) is\n                   when E_Constant\n                      | E_Discriminant\n-                     | E_Enumeration_Literal\n+                  =>\n+                     return Skip;\n+\n+                  when E_Enumeration_Literal\n                      | E_Named_Integer\n                      | E_Named_Real\n                   =>\n-                     return OK;\n+                     if not Is_OK_Static_Expression (N) then\n+                        return Abandon;\n+                     end if;\n+                     return Skip;\n \n                   when E_Component =>\n-                     return OK;\n+                     return Skip;\n \n                   when E_Variable =>\n                      if Is_Simple_Barrier_Name (N) then\n-                        return OK;\n+                        return Skip;\n                      end if;\n \n                   when E_Function =>\n@@ -6268,7 +6278,7 @@ package body Exp_Ch9 is\n                      if Is_RTE (Entity (N), RE_Protected_Count)\n                        or else Is_RTE (Entity (N), RE_Protected_Count_Entry)\n                      then\n-                        return OK;\n+                        return Skip;\n                      end if;\n \n                   when others =>\n@@ -6295,14 +6305,31 @@ package body Exp_Ch9 is\n                   return OK;\n                end if;\n \n-            when N_Short_Circuit =>\n+            when N_Short_Circuit\n+              | N_If_Expression\n+              | N_Case_Expression\n+            =>\n                return OK;\n \n-            when N_Indexed_Component\n-               | N_Selected_Component\n-            =>\n-               if not Is_Access_Type (Etype (Prefix (N))) then\n-                  return OK;\n+            when N_Case_Expression_Alternative =>\n+               --  do not traverse Discrete_Choices subtree\n+               if Is_Pure_Barrier (Expression (N)) /= Abandon then\n+                  return Skip;\n+               end if;\n+\n+            when N_Expression_With_Actions =>\n+               --  this may occur in the case of a Count attribute reference\n+               if Original_Node (N) /= N\n+                 and then Is_Pure_Barrier (Original_Node (N)) /= Abandon\n+               then\n+                  return Skip;\n+               end if;\n+\n+            when N_Membership_Test =>\n+               if Is_Pure_Barrier (Left_Opnd (N)) /= Abandon\n+                 and then All_Membership_Choices_Static (N)\n+               then\n+                  return Skip;\n                end if;\n \n             when N_Type_Conversion =>"}, {"sha": "0fc8d0e65fe4cfa0f8f554fff501e94566776fae", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 64, "deletions": 56, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6476fc372a684ff42712c10508dddf0e6d229df5/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6476fc372a684ff42712c10508dddf0e6d229df5/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=6476fc372a684ff42712c10508dddf0e6d229df5", "patch": "@@ -91,6 +91,13 @@ package body Sem_Ch13 is\n    --  type whose inherited alignment is no longer appropriate for the new\n    --  size value. In this case, we reset the Alignment to unknown.\n \n+   function All_Static_Choices (L : List_Id) return Boolean;\n+   --  Returns true if all elements of the list are OK static choices\n+   --  as defined below for Is_Static_Choice. Used for case expression\n+   --  alternatives and for the right operand of a membership test. An\n+   --  others_choice is static if the corresponding expression is static.\n+   --  The staticness of the bounds is checked separately.\n+\n    procedure Build_Discrete_Static_Predicate\n      (Typ  : Entity_Id;\n       Expr : Node_Id;\n@@ -154,6 +161,15 @@ package body Sem_Ch13 is\n    --  that do not specify a representation characteristic are operational\n    --  attributes.\n \n+   function Is_Static_Choice (N : Node_Id) return Boolean;\n+   --  Returns True if N represents a static choice (static subtype, or\n+   --  static subtype indication, or static expression, or static range).\n+   --\n+   --  Note that this is a bit more inclusive than we actually need\n+   --  (in particular membership tests do not allow the use of subtype\n+   --  indications). But that doesn't matter, we have already checked\n+   --  that the construct is legal to get this far.\n+\n    function Is_Type_Related_Rep_Item (N : Node_Id) return Boolean;\n    --  Returns True for a representation clause/pragma that specifies a\n    --  type-related representation (as opposed to operational) aspect.\n@@ -820,6 +836,38 @@ package body Sem_Ch13 is\n       end if;\n    end Alignment_Check_For_Size_Change;\n \n+   function All_Membership_Choices_Static (Expr : Node_Id)\n+     return Boolean\n+   is\n+      pragma Assert (Nkind (Expr) in N_Membership_Test);\n+   begin\n+      return ((Present (Right_Opnd (Expr))\n+              and then Is_Static_Choice (Right_Opnd (Expr)))\n+            or else\n+              (Present (Alternatives (Expr))\n+              and then All_Static_Choices (Alternatives (Expr))));\n+   end All_Membership_Choices_Static;\n+\n+   ------------------------\n+   -- All_Static_Choices --\n+   ------------------------\n+\n+   function All_Static_Choices (L : List_Id) return Boolean is\n+      N : Node_Id;\n+\n+   begin\n+      N := First (L);\n+      while Present (N) loop\n+         if not Is_Static_Choice (N) then\n+            return False;\n+         end if;\n+\n+         Next (N);\n+      end loop;\n+\n+      return True;\n+   end All_Static_Choices;\n+\n    -------------------------------------\n    -- Analyze_Aspects_At_Freeze_Point --\n    -------------------------------------\n@@ -12163,22 +12211,6 @@ package body Sem_Ch13 is\n       --  the alternatives are static (have all static choices, and a static\n       --  expression).\n \n-      function All_Static_Choices (L : List_Id) return Boolean;\n-      --  Returns true if all elements of the list are OK static choices\n-      --  as defined below for Is_Static_Choice. Used for case expression\n-      --  alternatives and for the right operand of a membership test. An\n-      --  others_choice is static if the corresponding expression is static.\n-      --  The staticness of the bounds is checked separately.\n-\n-      function Is_Static_Choice (N : Node_Id) return Boolean;\n-      --  Returns True if N represents a static choice (static subtype, or\n-      --  static subtype indication, or static expression, or static range).\n-      --\n-      --  Note that this is a bit more inclusive than we actually need\n-      --  (in particular membership tests do not allow the use of subtype\n-      --  indications). But that doesn't matter, we have already checked\n-      --  that the construct is legal to get this far.\n-\n       function Is_Type_Ref (N : Node_Id) return Boolean;\n       pragma Inline (Is_Type_Ref);\n       --  Returns True if N is a reference to the type for the predicate in the\n@@ -12214,41 +12246,6 @@ package body Sem_Ch13 is\n          return True;\n       end All_Static_Case_Alternatives;\n \n-      ------------------------\n-      -- All_Static_Choices --\n-      ------------------------\n-\n-      function All_Static_Choices (L : List_Id) return Boolean is\n-         N : Node_Id;\n-\n-      begin\n-         N := First (L);\n-         while Present (N) loop\n-            if not Is_Static_Choice (N) then\n-               return False;\n-            end if;\n-\n-            Next (N);\n-         end loop;\n-\n-         return True;\n-      end All_Static_Choices;\n-\n-      ----------------------\n-      -- Is_Static_Choice --\n-      ----------------------\n-\n-      function Is_Static_Choice (N : Node_Id) return Boolean is\n-      begin\n-         return Nkind (N) = N_Others_Choice\n-           or else Is_OK_Static_Expression (N)\n-           or else (Is_Entity_Name (N) and then Is_Type (Entity (N))\n-                     and then Is_OK_Static_Subtype (Entity (N)))\n-           or else (Nkind (N) = N_Subtype_Indication\n-                     and then Is_OK_Static_Subtype (Entity (N)))\n-           or else (Nkind (N) = N_Range and then Is_OK_Static_Range (N));\n-      end Is_Static_Choice;\n-\n       -----------------\n       -- Is_Type_Ref --\n       -----------------\n@@ -12277,11 +12274,7 @@ package body Sem_Ch13 is\n       --  for a static membership test.\n \n       elsif Nkind (Expr) in N_Membership_Test\n-        and then ((Present (Right_Opnd (Expr))\n-                    and then Is_Static_Choice (Right_Opnd (Expr)))\n-                  or else\n-                    (Present (Alternatives (Expr))\n-                      and then All_Static_Choices (Alternatives (Expr))))\n+        and then All_Membership_Choices_Static (Expr)\n       then\n          return True;\n \n@@ -12384,6 +12377,21 @@ package body Sem_Ch13 is\n       end if;\n    end Is_Predicate_Static;\n \n+   ----------------------\n+   -- Is_Static_Choice --\n+   ----------------------\n+\n+   function Is_Static_Choice (N : Node_Id) return Boolean is\n+   begin\n+      return Nkind (N) = N_Others_Choice\n+        or else Is_OK_Static_Expression (N)\n+        or else (Is_Entity_Name (N) and then Is_Type (Entity (N))\n+                  and then Is_OK_Static_Subtype (Entity (N)))\n+        or else (Nkind (N) = N_Subtype_Indication\n+                  and then Is_OK_Static_Subtype (Entity (N)))\n+        or else (Nkind (N) = N_Range and then Is_OK_Static_Range (N));\n+   end Is_Static_Choice;\n+\n    ------------------------------\n    -- Is_Type_Related_Rep_Item --\n    ------------------------------"}, {"sha": "4c26473edc7dcc270ed18e1586b27f5464c92eb6", "filename": "gcc/ada/sem_ch13.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6476fc372a684ff42712c10508dddf0e6d229df5/gcc%2Fada%2Fsem_ch13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6476fc372a684ff42712c10508dddf0e6d229df5/gcc%2Fada%2Fsem_ch13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.ads?ref=6476fc372a684ff42712c10508dddf0e6d229df5", "patch": "@@ -28,6 +28,9 @@ with Types; use Types;\n with Uintp; use Uintp;\n \n package Sem_Ch13 is\n+   function All_Membership_Choices_Static (Expr : Node_Id) return Boolean;\n+   --  Given a membership test, returns True iff all choices are static.\n+\n    procedure Analyze_At_Clause                          (N : Node_Id);\n    procedure Analyze_Attribute_Definition_Clause        (N : Node_Id);\n    procedure Analyze_Enumeration_Representation_Clause  (N : Node_Id);"}]}