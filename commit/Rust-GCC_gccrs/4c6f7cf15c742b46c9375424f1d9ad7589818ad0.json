{"sha": "4c6f7cf15c742b46c9375424f1d9ad7589818ad0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM2ZjdjZjE1Yzc0MmI0NmM5Mzc1NDI0ZjFkOWFkNzU4OTgxOGFkMA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2002-08-05T11:41:05Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2002-08-05T11:41:05Z"}, "message": "Add missing file\n\nFrom-SVN: r56049", "tree": {"sha": "43f3c67b60aabcfba28a71be2b821c3ae70ea589", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43f3c67b60aabcfba28a71be2b821c3ae70ea589"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c6f7cf15c742b46c9375424f1d9ad7589818ad0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c6f7cf15c742b46c9375424f1d9ad7589818ad0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c6f7cf15c742b46c9375424f1d9ad7589818ad0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c6f7cf15c742b46c9375424f1d9ad7589818ad0/comments", "author": null, "committer": null, "parents": [{"sha": "97768ccc14d5428b7d297d1414f72cdf99148e90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97768ccc14d5428b7d297d1414f72cdf99148e90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97768ccc14d5428b7d297d1414f72cdf99148e90"}], "stats": {"total": 93, "additions": 93, "deletions": 0}, "files": [{"sha": "a92f63bb8dadb8da3d266b29f7fa8beff5da7167", "filename": "gcc/config/frv/t-frv", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6f7cf15c742b46c9375424f1d9ad7589818ad0/gcc%2Fconfig%2Ffrv%2Ft-frv", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6f7cf15c742b46c9375424f1d9ad7589818ad0/gcc%2Fconfig%2Ffrv%2Ft-frv", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ft-frv?ref=4c6f7cf15c742b46c9375424f1d9ad7589818ad0", "patch": "@@ -0,0 +1,93 @@\n+# Name of assembly file containing libgcc1 functions.\n+# This entry must be present, but it can be empty if the target does\n+# not need any assembler functions to support its code generation.\n+#\n+# Alternatively if assembler functions *are* needed then define the\n+# entries below:\n+CROSS_LIBGCC1\t= libgcc1-asm.a\n+LIB1ASMSRC\t= frv/lib1funcs.asm\n+LIB1ASMFUNCS\t= _cmpll _cmpf _cmpd _addll _subll _andll _orll _xorll _notll _cmov\n+LIB2FUNCS_EXTRA\t= cmovh.c cmovw.c cmovd.c modi.c umodi.c uitof.c uitod.c ulltof.c ulltod.c\n+\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n+\n+# If any special flags are necessary when building libgcc2 put them here.\n+TARGET_LIBGCC2_CFLAGS =\n+\n+fp-bit.c: $(srcdir)/config/fp-bit.c\n+\techo '#define FLOAT' > fp-bit.c\n+\techo '#include \"frv/frv-abi.h\"' >> fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n+\n+dp-bit.c: $(srcdir)/config/fp-bit.c\n+\techo '#include \"frv/frv-abi.h\"' > dp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n+\n+cmovh.c: $(srcdir)/config/frv/cmovh.c\n+\t$(LN_S) $(srcdir)/config/frv/cmovh.c .\n+\n+cmovw.c: $(srcdir)/config/frv/cmovw.c\n+\t$(LN_S) $(srcdir)/config/frv/cmovw.c .\n+\n+cmovd.c: $(srcdir)/config/frv/cmovd.c\n+\t$(LN_S) $(srcdir)/config/frv/cmovd.c .\n+\n+modi.c: $(srcdir)/config/frv/modi.c\n+\t$(LN_S) $(srcdir)/config/frv/modi.c .\n+\n+umodi.c: $(srcdir)/config/frv/umodi.c\n+\t$(LN_S) $(srcdir)/config/frv/umodi.c .\n+\n+uitof.c: $(srcdir)/config/frv/uitof.c\n+\t$(LN_S) $(srcdir)/config/frv/uitof.c .\n+\n+uitod.c: $(srcdir)/config/frv/uitod.c\n+\t$(LN_S) $(srcdir)/config/frv/uitod.c .\n+\n+ulltof.c: $(srcdir)/config/frv/ulltof.c\n+\t$(LN_S) $(srcdir)/config/frv/ulltof.c .\n+\n+ulltod.c: $(srcdir)/config/frv/ulltod.c\n+\t$(LN_S) $(srcdir)/config/frv/ulltod.c .\n+\n+# Build frvbegin.o and frvend.o\n+EXTRA_MULTILIB_PARTS=frvbegin.o frvend.o\n+\n+# Compile two additional files that are linked with every program\n+# linked using GCC on systems using COFF or ELF, for the sake of C++\n+# constructors.\n+\n+FRVSTUFF_CFLAGS = $(TARGET_LIBGCC2_CFLAGS)\n+\n+$(T)frvbegin$(objext): $(srcdir)/config/frv/frvbegin.c $(GCC_PASSES) \\\n+  $(CONFIG_H) defaults.h unwind-dw2-fde.h gbl-ctors.h\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) $(FRVSTUFF_CFLAGS) \\\n+\t  -c $(srcdir)/config/frv/frvbegin.c -o $(T)frvbegin$(objext)\n+\n+$(T)frvend$(objext): $(srcdir)/config/frv/frvend.c $(GCC_PASSES) \\\n+  $(CONFIG_H) defaults.h unwind-dw2-fde.h gbl-ctors.h\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) $(FRVSTUFF_CFLAGS) \\\n+\t  -c $(srcdir)/config/frv/frvend.c -o $(T)frvend$(objext)\n+\n+# Enable the following if multilibs are needed.\n+# See gcc/genmultilib, gcc/gcc.texi and gcc/tm.texi for a\n+# description of the options and their values.\n+#\n+#MULTILIB_OPTIONS\t= mcpu=fr500/mcpu=tomcat/mcpu=simple/mcpu=frv msoft-float mdword/mno-dword\n+#MULTILIB_DIRNAMES\t= fr500 tomcat simple frv nof dw no-dw\n+#MULTILIB_MATCHES\t= mcpu?simple=mcpu?fr300 mno-double=mcpu?fr500 mcpu?frv=mdouble\n+#MULTILIB_EXCEPTIONS\t= *mcpu=simple/*msoft-float* *mcpu=frv/*msoft-float*\n+#MULTILIB_EXTRA_OPTS\t= mlibrary-pic\n+\n+MULTILIB_OPTIONS\t= mcpu=frv/mcpu=fr400/mcpu=simple mno-pack mlibrary-pic\n+MULTILIB_DIRNAMES\t= frv fr400 simple unpacked pic\n+MULTILIB_MATCHES\t= mcpu?simple=mcpu?fr300 mlibrary-pic=fpic mlibrary-pic=fPIC\n+MULTILIB_EXCEPTIONS\t= mcpu=frv/mno-pack* mcpu=simple/mno-pack*\n+\n+LIBGCC = stmp-multilib\n+INSTALL_LIBGCC = install-multilib\n+\n+EXTRA_HEADERS = $(srcdir)/config/frv/frv-asm.h $(srcdir)/config/frv/media.h"}]}