{"sha": "8d6419b2178b613e874864fbb51aa89398451002", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ2NDE5YjIxNzhiNjEzZTg3NDg2NGZiYjUxYWE4OTM5ODQ1MTAwMg==", "commit": {"author": {"name": "Basile Starynkevitch", "email": "bstarynk@gcc.gnu.org", "date": "2007-01-19T17:56:18Z"}, "committer": {"name": "Basile Starynkevitch", "email": "bstarynk@gcc.gnu.org", "date": "2007-01-19T17:56:18Z"}, "message": "gty.texi (Options): Document the mark_hook option to GTY.\n\n2007-01-19  Basile Starynkevitch  <basile@starynkevitch.net>\n\n\t* gcc/doc/gty.texi (Options): Document the mark_hook option to\n\tGTY.\n\t* gcc/gengtype.c (write_types_data, write_func_for_structure,\n\twrite_types, ggc_wtd, pch_wtd): Added skip_hooks to\n\twrite_types_data, ggc_wtd, pch_wtd for mark_hook.\n\t(walk_type, write_func_for_structure): Generate the mark_hook if\n\tneeded.\n\n\t* MAINTAINERS: added myself (Basile Starynkevitch) to write after\n\tapproval.\n\nFrom-SVN: r120973", "tree": {"sha": "7bc390552a367ece4c1602b88d5ed90b26879f11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bc390552a367ece4c1602b88d5ed90b26879f11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d6419b2178b613e874864fbb51aa89398451002", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d6419b2178b613e874864fbb51aa89398451002", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d6419b2178b613e874864fbb51aa89398451002", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d6419b2178b613e874864fbb51aa89398451002/comments", "author": null, "committer": null, "parents": [{"sha": "6c798f4fc1b8c87f592394070746dc1b54cf8006", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c798f4fc1b8c87f592394070746dc1b54cf8006", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c798f4fc1b8c87f592394070746dc1b54cf8006"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "cbbf126bb28cc304ac1a617c49f703218546541c", "filename": "MAINTAINERS", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d6419b2178b613e874864fbb51aa89398451002/MAINTAINERS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d6419b2178b613e874864fbb51aa89398451002/MAINTAINERS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/MAINTAINERS?ref=8d6419b2178b613e874864fbb51aa89398451002", "patch": "@@ -372,6 +372,7 @@ Mark Shinwell\t\t\t\t\tshinwell@codesourcery.com\n Franz Sirl\t\t\t\t\tfranz.sirl-kernel@lauterbach.com\n Michael Sokolov\t\t\t\t\tmsokolov@ivan.Harhan.ORG\n Richard Stallman\t\t\t\trms@gnu.org\n+Basile Starynkevitch\t\t\t\tbasile@starynkevitch.net\n Graham Stott\t\t\t\t\tgraham.stott@btinternet.com\n Mike Stump\t\t\t\t\tmrs@apple.com\n Jeff Sturm\t\t\t\t\tjsturm@gcc.gnu.org"}, {"sha": "ed677c61aa628e3f75e1da2f253b49637167e248", "filename": "gcc/doc/gty.texi", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d6419b2178b613e874864fbb51aa89398451002/gcc%2Fdoc%2Fgty.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d6419b2178b613e874864fbb51aa89398451002/gcc%2Fdoc%2Fgty.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgty.texi?ref=8d6419b2178b613e874864fbb51aa89398451002", "patch": "@@ -1,4 +1,4 @@\n-@c Copyright (C) 2002, 2003, 2004\n+@c Copyright (C) 2002, 2003, 2004, 2007\n @c Free Software Foundation, Inc.\n @c This is part of the GCC manual.\n @c For copying conditions, see the file gcc.texi.\n@@ -282,6 +282,16 @@ The routine @code{ggc_marked_p} can be used to determine if an element\n has been marked already; in fact, the usual case is to use\n @code{if_marked (\"ggc_marked_p\")}.\n \n+@findex mark_hook\n+@item mark_hook (\"@var{hook-routine-name}\")\n+\n+If provided for a structure or union type, the given\n+@var{hook-routine-name} (between double-quotes) is the name of a\n+routine called when the garbage collector has just marked the data as\n+reachable. This routine should not change the data, or call any ggc\n+routine. Its only argument is a pointer to the just marked (const)\n+structure or union.\n+\n @findex maybe_undef\n @item maybe_undef\n "}, {"sha": "f195dab2e1740c0f4b6cc1b7e3a63a87fe40f72d", "filename": "gcc/gengtype.c", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d6419b2178b613e874864fbb51aa89398451002/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d6419b2178b613e874864fbb51aa89398451002/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=8d6419b2178b613e874864fbb51aa89398451002", "patch": "@@ -1382,6 +1382,7 @@ struct write_types_data\n   const char *marker_routine;\n   const char *reorder_note_routine;\n   const char *comment;\n+  int skip_hooks;\t\t/* skip hook generation if non zero */\n };\n \n static void output_escaped_param (struct walk_type_data *d,\n@@ -1549,6 +1550,8 @@ walk_type (type_p t, struct walk_type_data *d)\n       use_params_p = 1;\n     else if (strcmp (oo->name, \"desc\") == 0)\n       desc = oo->info;\n+    else if (strcmp (oo->name, \"mark_hook\") == 0)\n+      ;\n     else if (strcmp (oo->name, \"nested_ptr\") == 0)\n       nested_ptr_d = (const struct nested_ptr_data *) oo->info;\n     else if (strcmp (oo->name, \"dot\") == 0)\n@@ -2039,6 +2042,7 @@ write_func_for_structure (type_p orig_s, type_p s, type_p *param,\n   int i;\n   const char *chain_next = NULL;\n   const char *chain_prev = NULL;\n+  const char *mark_hook_name = NULL;\n   options_p opt;\n   struct walk_type_data d;\n \n@@ -2056,6 +2060,8 @@ write_func_for_structure (type_p orig_s, type_p s, type_p *param,\n       chain_next = opt->info;\n     else if (strcmp (opt->name, \"chain_prev\") == 0)\n       chain_prev = opt->info;\n+    else if (strcmp (opt->name, \"mark_hook\") == 0)\n+      mark_hook_name = opt->info;\n \n   if (chain_prev != NULL && chain_next == NULL)\n     error_at_line (&s->u.s.line, \"chain_prev without chain_next\");\n@@ -2111,10 +2117,17 @@ write_func_for_structure (type_p orig_s, type_p s, type_p *param,\n \t  output_type_enum (d.of, orig_s);\n \t}\n       oprintf (d.of, \"))\\n\");\n+      if (mark_hook_name && !wtd->skip_hooks)\n+\t{\n+\t  oprintf (d.of, \"    {\\n\");\n+\t  oprintf (d.of, \"      %s (xlimit);\\n   \", mark_hook_name);\n+\t}\n       oprintf (d.of, \"   xlimit = (\");\n       d.prev_val[2] = \"*xlimit\";\n       output_escaped_param (&d, chain_next, \"chain_next\");\n       oprintf (d.of, \");\\n\");\n+      if (mark_hook_name && !wtd->skip_hooks)\n+\toprintf (d.of, \"    }\\n\");\n       if (chain_prev != NULL)\n \t{\n \t  oprintf (d.of, \"  if (x != xlimit)\\n\");\n@@ -2142,7 +2155,10 @@ write_func_for_structure (type_p orig_s, type_p s, type_p *param,\n       oprintf (d.of, \"  while (x != xlimit)\\n\");\n     }\n   oprintf (d.of, \"    {\\n\");\n-\n+  if (mark_hook_name && chain_next == NULL && !wtd->skip_hooks)\n+    {\n+      oprintf (d.of, \"      %s (x);\\n\", mark_hook_name);\n+    }\n   d.prev_val[2] = \"*x\";\n   d.indent = 6;\n   walk_type (s, &d);\n@@ -2258,14 +2274,16 @@ write_types (type_p structures, type_p param_structs,\n static const struct write_types_data ggc_wtd =\n {\n   \"ggc_m\", NULL, \"ggc_mark\", \"ggc_test_and_set_mark\", NULL,\n-  \"GC marker procedures.  \"\n+  \"GC marker procedures.  \",\n+  FALSE\n };\n \n static const struct write_types_data pch_wtd =\n {\n   \"pch_n\", \"pch_p\", \"gt_pch_note_object\", \"gt_pch_note_object\",\n   \"gt_pch_note_reorder\",\n-  \"PCH type-walking procedures.  \"\n+  \"PCH type-walking procedures.  \",\n+  TRUE\n };\n \n /* Write out the local pointer-walking routines.  */"}]}