{"sha": "4bed378709c6b95e918002425a23f5fa36943a93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJlZDM3ODcwOWM2Yjk1ZTkxODAwMjQyNWEyM2Y1ZmEzNjk0M2E5Mw==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@apple.com", "date": "2004-05-05T12:20:33Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2004-05-05T12:20:33Z"}, "message": "invoke.texi (Directory Options): Document -iquote.\n\n\t* doc/invoke.texi (Directory Options): Document -iquote.\n\t* doc/cpp.texi: Likewise.\n\t* doc/cppopts.texi: Likewise.\n\t* c-opts.c (c_common_missing_argument): Add -iquote processing.\n\t(c_common_handle_option): Likewise.\n\t* c.opt (iquote): Add.\n\t* gcc.h (DEFAULT_WORD_SWITCH_TAKES_ARG): Add -iquote.\n\t* c-incpath.c (merge_include_chains): Update comment to use -iquote.\n\n\t* c-opts.c (case OPT_I): Deprecate -I- support.\n\t* doc/invoke.texi: Likewise.\n\t* doc/cpp.texi: Likewise.\n\t* doc/cppopts.texi: Likewise.\n\nFrom-SVN: r81521", "tree": {"sha": "d6a840d1926291ab41d00a9437a894724197515a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6a840d1926291ab41d00a9437a894724197515a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bed378709c6b95e918002425a23f5fa36943a93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bed378709c6b95e918002425a23f5fa36943a93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bed378709c6b95e918002425a23f5fa36943a93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bed378709c6b95e918002425a23f5fa36943a93/comments", "author": null, "committer": null, "parents": [{"sha": "bb8a619e12e06104939fac9969dcd07615ee7260", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb8a619e12e06104939fac9969dcd07615ee7260", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb8a619e12e06104939fac9969dcd07615ee7260"}], "stats": {"total": 132, "additions": 95, "deletions": 37}, "files": [{"sha": "9306c4b75b768b31e1dc5d47370aa2af2df6486c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bed378709c6b95e918002425a23f5fa36943a93/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bed378709c6b95e918002425a23f5fa36943a93/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4bed378709c6b95e918002425a23f5fa36943a93", "patch": "@@ -1,3 +1,19 @@\n+2004-05-3  Mike Stump  <mrs@apple.com>\n+\n+\t* doc/invoke.texi (Directory Options): Document -iquote.\n+\t* doc/cpp.texi: Likewise.\n+\t* doc/cppopts.texi: Likewise.\n+\t* c-opts.c (c_common_missing_argument): Add -iquote processing.\n+\t(c_common_handle_option): Likewise.\n+\t* c.opt (iquote): Add.\n+\t* gcc.h (DEFAULT_WORD_SWITCH_TAKES_ARG): Add -iquote.\n+\t* c-incpath.c (merge_include_chains): Update comment to use -iquote.\n+\n+\t* c-opts.c (case OPT_I): Deprecate -I- support.\n+\t* doc/invoke.texi: Likewise.\n+\t* doc/cpp.texi: Likewise.\n+\t* doc/cppopts.texi: Likewise.\n+\n 2004-05-05  Steven Bosscher  <stevenb@suse.de>\n \n \t* basic-block.h (free_basic_block_vars): Update prototype."}, {"sha": "b4da86fb7ba1db1c4f2537fde84b3416f5dce1a1", "filename": "gcc/c-incpath.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bed378709c6b95e918002425a23f5fa36943a93/gcc%2Fc-incpath.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bed378709c6b95e918002425a23f5fa36943a93/gcc%2Fc-incpath.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-incpath.c?ref=4bed378709c6b95e918002425a23f5fa36943a93", "patch": "@@ -171,6 +171,7 @@ add_standard_paths (const char *sysroot, const char *iprefix, int cxx_stdinc)\n    JOIN, unless it duplicates JOIN in which case the last path is\n    removed.  Return the head of the resulting chain.  Any of HEAD,\n    JOIN and SYSTEM can be NULL.  */\n+\n static struct cpp_dir *\n remove_duplicates (cpp_reader *pfile, struct cpp_dir *head,\n \t\t   struct cpp_dir *system, struct cpp_dir *join,\n@@ -243,9 +244,10 @@ remove_duplicates (cpp_reader *pfile, struct cpp_dir *head,\n \n    We can't just merge the lists and then uniquify them because then\n    we may lose directories from the <> search path that should be\n-   there; consider -Ifoo -Ibar -I- -Ifoo -Iquux.  It is however safe\n-   to treat -Ibar -Ifoo -I- -Ifoo -Iquux as if written -Ibar -I- -Ifoo\n-   -Iquux.  */\n+   there; consider -iquote foo -iquote bar -Ifoo -Iquux.  It is\n+   however safe to treat -iquote bar -iquote foo -Ifoo -Iquux as if\n+   written -iquote bar -Ifoo -Iquux.  */\n+\n static void\n merge_include_chains (cpp_reader *pfile, int verbose)\n {"}, {"sha": "8dc308ca4bbbe679e0bf58672d682fbe17016975", "filename": "gcc/c-opts.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bed378709c6b95e918002425a23f5fa36943a93/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bed378709c6b95e918002425a23f5fa36943a93/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=4bed378709c6b95e918002425a23f5fa36943a93", "patch": "@@ -162,6 +162,7 @@ c_common_missing_argument (const char *opt, size_t code)\n     case OPT_idirafter:\n     case OPT_isysroot:\n     case OPT_isystem:\n+    case OPT_iquote:\n       error (\"missing path after \\\"%s\\\"\", opt);\n       break;\n \n@@ -303,6 +304,7 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n \t    error (\"-I- specified twice\");\n \t  quote_chain_split = true;\n \t  split_quote_chain ();\n+\t  inform (\"obsolete option -I- used, please use -iquote instead\");\n \t}\n       break;\n \n@@ -954,6 +956,10 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n       iprefix = arg;\n       break;\n \n+    case OPT_iquote:\n+      add_path (xstrdup (arg), QUOTE, 0);\n+      break;\n+\n     case OPT_isysroot:\n       sysroot = arg;\n       break;"}, {"sha": "83dc98de28d8dd10406b289e08c2adce04e45ef4", "filename": "gcc/c.opt", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bed378709c6b95e918002425a23f5fa36943a93/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bed378709c6b95e918002425a23f5fa36943a93/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=4bed378709c6b95e918002425a23f5fa36943a93", "patch": "@@ -103,7 +103,7 @@ Print the name of header files as they are used\n \n I\n C ObjC C++ ObjC++ Joined Separate\n--I <dir>\tAdd <dir> to the end of the main include path.  -I- gives more include path control; see info documentation\n+-I <dir>\tAdd <dir> to the end of the main include path\n \n M\n C ObjC C++ ObjC++\n@@ -720,6 +720,10 @@ isystem\n C ObjC C++ ObjC++ Joined Separate\n -isystem <dir>\tAdd <dir> to the start of the system include path\n \n+iquote\n+C ObjC C++ ObjC++ Joined Separate\n+-iquote <dir>\tAdd <dir> to the end of the quote include path\n+\n iwithprefix\n C ObjC C++ ObjC++ Joined Separate\n -iwithprefix <dir>\tAdd <dir> to the end of the system include path"}, {"sha": "399658256d6909b7df512ba6ff0ce9e94205e95b", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bed378709c6b95e918002425a23f5fa36943a93/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bed378709c6b95e918002425a23f5fa36943a93/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=4bed378709c6b95e918002425a23f5fa36943a93", "patch": "@@ -759,9 +759,11 @@ named @var{file} in a standard list of system directories.  You can prepend\n directories to this list with the @option{-I} option (@pxref{Invocation}).\n \n @item #include \"@var{file}\"\n-This variant is used for header files of your own program.  It searches\n-for a file named @var{file} first in the directory containing the\n-current file, then in the same directories used for @code{<@var{file}>}.\n+This variant is used for header files of your own program.  It\n+searches for a file named @var{file} first in the directory containing\n+the current file, then in the quote directories and then the same\n+directories used for @code{<@var{file}>}.  You can prepend directories\n+to the list of quote directories with the @option{-iquote} option.\n @end table\n \n The argument of @samp{#include}, whether delimited with quote marks or\n@@ -883,9 +885,10 @@ standard C library facilities, or the standard C library itself.\n @option{-nostdinc} is in effect.\n \n GCC looks for headers requested with @code{@w{#include \"@var{file}\"}}\n-first in the directory containing the current file, then in the same\n-places it would have looked for a header requested with angle brackets.\n-For example, if @file{/usr/include/sys/stat.h} contains\n+first in the directory containing the current file, then in the\n+directories as specified by @option{-iquote} options, then in the same\n+places it would have looked for a header requested with angle\n+brackets.  For example, if @file{/usr/include/sys/stat.h} contains\n @code{@w{#include \"types.h\"}}, GCC looks for @file{types.h} first in\n @file{/usr/include/sys}, then in its usual search path.\n \n@@ -898,7 +901,8 @@ This has two effects.  First, directories appearing before the\n quote marks.  Directories after @option{-I-} are searched for all\n headers.  Second, the directory containing the current file is not\n searched for anything, unless it happens to be one of the directories\n-named by an @option{-I} switch.\n+named by an @option{-I} switch.  @option{-I-} is deprecated, -iquote\n+should be used instead.\n \n @option{-I. -I-} is not the same as no @option{-I} options at all, and does\n not cause the same behavior for @samp{<>} includes that @samp{\"\"}\n@@ -4039,6 +4043,11 @@ they generally represent bugs in the snapshots.\n \n @itemize @bullet\n \n+@item -I- deprecated\n+\n+This option has been deprecated in 3.5.  @option{-iquote} is meant to\n+replace the need for this option.\n+\n @item Order of evaluation of @samp{#} and @samp{##} operators\n \n The standard does not specify the order of evaluation of a chain of\n@@ -4131,7 +4140,8 @@ without notice.\n @ignore\n @c man begin SYNOPSIS\n cpp [@option{-D}@var{macro}[=@var{defn}]@dots{}] [@option{-U}@var{macro}]\n-    [@option{-I}@var{dir}@dots{}] [@option{-W}@var{warn}@dots{}]\n+    [@option{-I}@var{dir}@dots{}] [@option{-iquote}@var{dir}@dots{}]\n+    [@option{-W}@var{warn}@dots{}]\n     [@option{-M}|@option{-MM}] [@option{-MG}] [@option{-MF} @var{filename}]\n     [@option{-MP}] [@option{-MQ} @var{target}@dots{}]\n     [@option{-MT} @var{target}@dots{}]"}, {"sha": "468f17f13fc8299e58d8536e2d43329d5284847b", "filename": "gcc/doc/cppopts.texi", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bed378709c6b95e918002425a23f5fa36943a93/gcc%2Fdoc%2Fcppopts.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bed378709c6b95e918002425a23f5fa36943a93/gcc%2Fdoc%2Fcppopts.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppopts.texi?ref=4bed378709c6b95e918002425a23f5fa36943a93", "patch": "@@ -400,6 +400,7 @@ file directory as the first search directory for @code{@w{#include\n @ifset cppmanual\n @xref{Search Path}.\n @end ifset\n+This option has been deprecated.\n \n @item -nostdinc\n @opindex nostdinc\n@@ -466,6 +467,16 @@ is applied to the standard system directories.\n @xref{System Headers}.\n @end ifset\n \n+@item -iquote @var{dir}\n+@opindex iquote\n+Search @var{dir} only for header files requested with\n+@code{@w{#include \"@var{file}\"}}; they are not searched for\n+@code{@w{#include <@var{file}>}}, before all directories specified by\n+@option{-I} and before the standard system directories.\n+@ifset cppmanual\n+@xref{Search Path}.\n+@end ifset\n+\n @item -fdollars-in-identifiers\n @opindex fdollars-in-identifiers\n @anchor{fdollars-in-identifiers}"}, {"sha": "44d621d52c6c0ec2054dfbcd954eeff3ccff2b97", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 32, "deletions": 23, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bed378709c6b95e918002425a23f5fa36943a93/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bed378709c6b95e918002425a23f5fa36943a93/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=4bed378709c6b95e918002425a23f5fa36943a93", "patch": "@@ -328,7 +328,7 @@ in the following sections.\n \n @item Directory Options\n @xref{Directory Options,,Options for Directory Search}.\n-@gccoptlist{-B@var{prefix}  -I@var{dir}  -I-  -L@var{dir}  -specs=@var{file}}\n+@gccoptlist{-B@var{prefix}  -I@var{dir}  -iquote@var{dir}  -L@var{dir}  -specs=@var{file}  -I-}\n \n @item Target Options\n @c I wrote this xref this way to avoid overfull hbox. -- rms\n@@ -5263,28 +5263,12 @@ the ordering for the include_next directive are not inadvertently changed.\n If you really need to change the search order for system directories,\n use the @option{-nostdinc} and/or @option{-isystem} options.\n \n-@item -I-\n-@opindex I-\n-Any directories you specify with @option{-I} options before the @option{-I-}\n-option are searched only for the case of @samp{#include \"@var{file}\"};\n-they are not searched for @samp{#include <@var{file}>}.\n-\n-If additional directories are specified with @option{-I} options after\n-the @option{-I-}, these directories are searched for all @samp{#include}\n-directives.  (Ordinarily @emph{all} @option{-I} directories are used\n-this way.)\n-\n-In addition, the @option{-I-} option inhibits the use of the current\n-directory (where the current input file came from) as the first search\n-directory for @samp{#include \"@var{file}\"}.  There is no way to\n-override this effect of @option{-I-}.  With @option{-I.} you can specify\n-searching the directory which was current when the compiler was\n-invoked.  That is not exactly the same as what the preprocessor does\n-by default, but it is often satisfactory.\n-\n-@option{-I-} does not inhibit the use of the standard system directories\n-for header files.  Thus, @option{-I-} and @option{-nostdinc} are\n-independent.\n+@item -iquote@var{dir}\n+@opindex iquote\n+Add the directory @var{dir} to the head of the list of directories to\n+be searched for header files only for the case of @samp{#include\n+\"@var{file}\"}; they are not searched for @samp{#include <@var{file}>},\n+otherwise just like @option{-I}.\n \n @item -L@var{dir}\n @opindex L\n@@ -5342,6 +5326,31 @@ program uses when determining what switches to pass to @file{cc1},\n @file{cc1plus}, @file{as}, @file{ld}, etc.  More than one\n @option{-specs=@var{file}} can be specified on the command line, and they\n are processed in order, from left to right.\n+\n+@item -I-\n+@opindex I-\n+This option has been deprecated.  Please use @option{-iquote} instead for\n+@option{-I} directories before the @option{-I-} and remove the @option{-I-}.\n+Any directories you specify with @option{-I} options before the @option{-I-}\n+option are searched only for the case of @samp{#include \"@var{file}\"};\n+they are not searched for @samp{#include <@var{file}>}.\n+\n+If additional directories are specified with @option{-I} options after\n+the @option{-I-}, these directories are searched for all @samp{#include}\n+directives.  (Ordinarily @emph{all} @option{-I} directories are used\n+this way.)\n+\n+In addition, the @option{-I-} option inhibits the use of the current\n+directory (where the current input file came from) as the first search\n+directory for @samp{#include \"@var{file}\"}.  There is no way to\n+override this effect of @option{-I-}.  With @option{-I.} you can specify\n+searching the directory which was current when the compiler was\n+invoked.  That is not exactly the same as what the preprocessor does\n+by default, but it is often satisfactory.\n+\n+@option{-I-} does not inhibit the use of the standard system directories\n+for header files.  Thus, @option{-I-} and @option{-nostdinc} are\n+independent.\n @end table\n \n @c man end"}, {"sha": "f5a04d3a136676a0cb232913e5b813b9c47b079e", "filename": "gcc/gcc.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bed378709c6b95e918002425a23f5fa36943a93/gcc%2Fgcc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bed378709c6b95e918002425a23f5fa36943a93/gcc%2Fgcc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.h?ref=4bed378709c6b95e918002425a23f5fa36943a93", "patch": "@@ -48,8 +48,8 @@ struct spec_function\n   || !strcmp (STR, \"imacros\") || !strcmp (STR, \"aux-info\") \\\n   || !strcmp (STR, \"idirafter\") || !strcmp (STR, \"iprefix\") \\\n   || !strcmp (STR, \"iwithprefix\") || !strcmp (STR, \"iwithprefixbefore\") \\\n-  || !strcmp (STR, \"isystem\") || !strcmp (STR, \"-param\") \\\n-  || !strcmp (STR, \"specs\") \\\n+  || !strcmp (STR, \"iquote\") || !strcmp (STR, \"isystem\") \\\n+  || !strcmp (STR, \"-param\") || !strcmp (STR, \"specs\") \\\n   || !strcmp (STR, \"MF\") || !strcmp (STR, \"MT\") || !strcmp (STR, \"MQ\"))\n \n "}]}