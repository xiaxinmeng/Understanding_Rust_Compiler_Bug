{"sha": "529a66ea537ce46d80dd4f4306d90490424486fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI5YTY2ZWE1MzdjZTQ2ZDgwZGQ0ZjQzMDZkOTA0OTA0MjQ0ODZmYg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-12-30T11:07:12Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-12-30T11:07:12Z"}, "message": "re PR target/42549 (Incorrect 3DNow! code generated)\n\n\tPR target/42549\n\t* config/i386/mmx.md (\"*mmx_subv2sf3): Fix insn operand number for\n\talternative 1.\n\ntestsuite/ChangeLog:\n\n\tPR target/42549\n\t* gcc.target/i386/mmx-3dnow-check.h: New file.\n\t* gcc.target/i386/pr42549.c: New test.\n\nFrom-SVN: r155519", "tree": {"sha": "11c7dee6481228920ea2ef6eff62bde3813e9cb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11c7dee6481228920ea2ef6eff62bde3813e9cb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/529a66ea537ce46d80dd4f4306d90490424486fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/529a66ea537ce46d80dd4f4306d90490424486fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/529a66ea537ce46d80dd4f4306d90490424486fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/529a66ea537ce46d80dd4f4306d90490424486fb/comments", "author": null, "committer": null, "parents": [{"sha": "8404785839dfe5564634f0218bd78721c84b4b8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8404785839dfe5564634f0218bd78721c84b4b8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8404785839dfe5564634f0218bd78721c84b4b8a"}], "stats": {"total": 89, "additions": 78, "deletions": 11}, "files": [{"sha": "bc55d0ec632ce351c3aed6f7f952de23c1fff3ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/529a66ea537ce46d80dd4f4306d90490424486fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/529a66ea537ce46d80dd4f4306d90490424486fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=529a66ea537ce46d80dd4f4306d90490424486fb", "patch": "@@ -1,3 +1,9 @@\n+2009-12-30  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/42549\n+\t* config/i386/mmx.md (\"*mmx_subv2sf3): Fix insn operand number for\n+\talternative 1.\n+\n 2009-12-30  Robert Millan  <rmh.gcc@aybabtu.com>\n \n \tPR other/42537\n@@ -16,8 +22,7 @@\n \t* config/i386/i386.c (ix86_expand_int_vcond): Reformat.\n \n 2009-12-29  Dave Korn  <dave.korn.cygwin@gmail.com>\n-\n-\t2009-10-06 Iain Sandoe <iain.sandoe@sandoe-acoustics.co.uk>\n+\t    Iain Sandoe <iain.sandoe@sandoe-acoustics.co.uk>\n \n \tPR objective-c++/41595\n \t* config/darwin.c (darwin_label_is_anonymous_local_objc_name):\n@@ -160,8 +165,7 @@\n 2009-12-19  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/42401\n-\t* lto-streamer-out.c (tree_is_indexable): Local statics\n-\tare indexable.\n+\t* lto-streamer-out.c (tree_is_indexable): Local statics are indexable.\n \t(lto_output_tree_ref): Adjust assert.\n \n 2009-12-19  Richard Guenther  <rguenther@suse.de>\n@@ -256,8 +260,7 @@\n \tPR middle-end/42397\n \t* builtins.c (get_object_alignment): Properly deal with\n \ta CONST_DECL base.\n-\t* expr.c (emit_block_move_hints): Assert the alignment makes\n-\tsense.\n+\t* expr.c (emit_block_move_hints): Assert the alignment makes sense.\n \n 2009-12-17  Uros Bizjak  <ubizjak@gmail.com>\n \n@@ -291,7 +294,7 @@\n \t(struct builtin_description) <__builtin_ia32_pslldqi128>: Update\n \tfor renamed sse2_ashlv1ti3.\n \t<__builtin_ia32_psrldqi128>: Update for renamed sse2_lshrv1ti3.\n-\t\n+\n \tRevert:\n \t2007-06-11  Uros Bizjak  <ubizjak@gmail.com>\n \n@@ -308,7 +311,7 @@\n 2009-12-17  Shujing Zhao  <pearly.zhao@oracle.com>\n \n \t* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):\n-\tUpdate build_indirect_ref calls.\t\n+\tUpdate build_indirect_ref calls.\n \n 2009-12-17  Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "5551bcb48f3671b0656f3df6e394cb917c51e6d9", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/529a66ea537ce46d80dd4f4306d90490424486fb/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/529a66ea537ce46d80dd4f4306d90490424486fb/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=529a66ea537ce46d80dd4f4306d90490424486fb", "patch": "@@ -351,7 +351,7 @@\n   \"TARGET_3DNOW && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n    pfsub\\t{%2, %0|%0, %2}\n-   pfsubr\\t{%2, %0|%0, %2}\"\n+   pfsubr\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"mode\" \"V2SF\")])"}, {"sha": "99f3dafa8195c8106e0729799172663fb9c3b43b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/529a66ea537ce46d80dd4f4306d90490424486fb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/529a66ea537ce46d80dd4f4306d90490424486fb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=529a66ea537ce46d80dd4f4306d90490424486fb", "patch": "@@ -1,3 +1,9 @@\n+2009-12-30  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/42549\n+\t* gcc.target/i386/mmx-3dnow-check.h: New file.\n+\t* gcc.target/i386/pr42549.c: New test.\n+\n 2009-12-29  Ian Lance Taylor  <iant@google.com>\n \n \tPR middle-end/42099\n@@ -32,7 +38,7 @@\n \n \tPR tree-optimization/42231\n \t* gcc.c-torture/execute/pr42231.c: New test.\n-\t\n+\n 2009-12-27  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \t    Daniel Kraft  <d@domob.eu>\n \n@@ -73,7 +79,7 @@\n \n \tPR target/40670\n \t* gcc.target/arm/pr40670.c: New test.\n-\t\n+\n 2009-12-23  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/alpha/20000715-1.c: Remove target selector."}, {"sha": "458e7cda898090bb874fff8e294e26f9d07364fd", "filename": "gcc/testsuite/gcc.target/i386/mmx-3dnow-check.h", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/529a66ea537ce46d80dd4f4306d90490424486fb/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmmx-3dnow-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/529a66ea537ce46d80dd4f4306d90490424486fb/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmmx-3dnow-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmmx-3dnow-check.h?ref=529a66ea537ce46d80dd4f4306d90490424486fb", "patch": "@@ -0,0 +1,21 @@\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+#include \"cpuid.h\"\n+\n+static void mmx_3dnow_test (void);\n+\n+int\n+main ()\n+{\n+  unsigned int eax, ebx, ecx, edx;\n+ \n+  if (!__get_cpuid (0x80000001, &eax, &ebx, &ecx, &edx))\n+    return 0;\n+\n+  /* Run 3DNow! test only if host has 3DNow! support.  */\n+  if (edx & bit_3DNOW)\n+    mmx_3dnow_test ();\n+\n+  return 0;\n+}"}, {"sha": "5f9646251aadddf45fe65cd2ad38d620ad03c944", "filename": "gcc/testsuite/gcc.target/i386/pr42549.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/529a66ea537ce46d80dd4f4306d90490424486fb/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42549.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/529a66ea537ce46d80dd4f4306d90490424486fb/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42549.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42549.c?ref=529a66ea537ce46d80dd4f4306d90490424486fb", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -m3dnow\" } */\n+\n+#include \"mmx-3dnow-check.h\"\n+\n+#include <mm3dnow.h>\n+\n+typedef union {\n+  float f[2];\n+  __m64 v;\n+} vec_t;\n+\n+void __attribute__ ((noinline))\n+Butterfly_3 (__m64 * D, __m64 SC)\n+{\n+  __m64 T, T1;\n+\n+  T = _m_pfmul (D[1], SC);\n+  T1 = D[0];\n+  D[0] = _m_pfadd (T1, T);\n+  D[1] = _m_pfsub (T1, T);\n+}\n+\n+void\n+mmx_3dnow_test (void)\n+{\n+  vec_t D[2] = { { .f = { 2.0f, 3.0f } },\n+\t\t { .f = { 4.0f, 5.0f } } };\n+\n+  const vec_t SC = { .f = { 1.0f, 1.0f } };\n+\n+  Butterfly_3 (&D[0].v, SC.v);\n+  _m_femms ();\n+\n+  if (D[1].f[0] != -2.0f || D[1].f[1] != -2.0f)\n+    abort ();\n+}"}]}