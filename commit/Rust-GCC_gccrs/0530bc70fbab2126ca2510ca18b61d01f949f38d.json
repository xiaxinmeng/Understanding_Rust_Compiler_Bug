{"sha": "0530bc70fbab2126ca2510ca18b61d01f949f38d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUzMGJjNzBmYmFiMjEyNmNhMjUxMGNhMThiNjFkMDFmOTQ5ZjM4ZA==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-01-31T22:29:27Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-01-31T22:29:27Z"}, "message": "rs6000.md (copysignsf3): New expand.\n\n2005-01-31  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        * config/rs6000/rs6000.md (copysignsf3): New expand.\n        (copysigndf3): Likewise.\n\nFrom-SVN: r94497", "tree": {"sha": "1c2c49703c635b6d04620244d7a003b5582fb8fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c2c49703c635b6d04620244d7a003b5582fb8fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0530bc70fbab2126ca2510ca18b61d01f949f38d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0530bc70fbab2126ca2510ca18b61d01f949f38d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0530bc70fbab2126ca2510ca18b61d01f949f38d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0530bc70fbab2126ca2510ca18b61d01f949f38d/comments", "author": null, "committer": null, "parents": [{"sha": "3d8a8aade36871c292e4f374262e9946cb6aa83c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d8a8aade36871c292e4f374262e9946cb6aa83c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d8a8aade36871c292e4f374262e9946cb6aa83c"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "8d618f5a9437885dc0aaf45c7c344642f2b190f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0530bc70fbab2126ca2510ca18b61d01f949f38d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0530bc70fbab2126ca2510ca18b61d01f949f38d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0530bc70fbab2126ca2510ca18b61d01f949f38d", "patch": "@@ -1,3 +1,8 @@\n+2005-01-31  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\t* config/rs6000/rs6000.md (copysignsf3): New expand.\n+\t(copysigndf3): Likewise.\n+\n 2005-01-31  Steven Bosscher  <stevenb@suse.de>\n \n \t* recog.c (constrain_operands): Only look for earlyclobber operand"}, {"sha": "7ccdab8b5a8e35f9e0ebf9a32e097642f5383437", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0530bc70fbab2126ca2510ca18b61d01f949f38d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0530bc70fbab2126ca2510ca18b61d01f949f38d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=0530bc70fbab2126ca2510ca18b61d01f949f38d", "patch": "@@ -4705,6 +4705,42 @@\n   \"fsqrt %0,%1\"\n   [(set_attr \"type\" \"dsqrt\")])\n \n+(define_expand \"copysignsf3\"\n+  [(set (match_dup 3)\n+        (abs:SF (match_operand:SF 1 \"gpc_reg_operand\" \"\")))\n+   (set (match_dup 4)\n+\t(neg:SF (abs:SF (match_dup 1))))\n+   (set (match_operand:SF 0 \"gpc_reg_operand\" \"\")\n+        (if_then_else:SF (ge (match_operand:SF 2 \"gpc_reg_operand\" \"\")\n+\t                     (match_dup 5))\n+\t\t\t (match_dup 3)\n+\t\t\t (match_dup 4)))]\n+  \"TARGET_PPC_GFXOPT && TARGET_HARD_FLOAT && TARGET_FPRS\n+   && !HONOR_NANS (SFmode) && !HONOR_SIGNED_ZEROS (SFmode)\" \n+  {\n+     operands[3] = gen_reg_rtx (SFmode);\n+     operands[4] = gen_reg_rtx (SFmode);\n+     operands[5] = CONST0_RTX (SFmode);\n+  })\n+\n+(define_expand \"copysigndf3\"\n+  [(set (match_dup 3)\n+        (abs:DF (match_operand:DF 1 \"gpc_reg_operand\" \"\")))\n+   (set (match_dup 4)\n+\t(neg:DF (abs:DF (match_dup 1))))\n+   (set (match_operand:DF 0 \"gpc_reg_operand\" \"\")\n+        (if_then_else:DF (ge (match_operand:DF 2 \"gpc_reg_operand\" \"\")\n+\t                     (match_dup 5))\n+\t\t\t (match_dup 3)\n+\t\t\t (match_dup 4)))]\n+  \"TARGET_PPC_GFXOPT && TARGET_HARD_FLOAT && TARGET_FPRS\n+   && !HONOR_NANS (DFmode) && !HONOR_SIGNED_ZEROS (DFmode)\"\n+  {\n+     operands[3] = gen_reg_rtx (DFmode);\n+     operands[4] = gen_reg_rtx (DFmode);\n+     operands[5] = CONST0_RTX (DFmode);\n+  })\n+\n ;; For MIN, MAX, and conditional move, we use DEFINE_EXPAND's that involve a\n ;; fsel instruction and some auxiliary computations.  Then we just have a\n ;; single DEFINE_INSN for fsel and the define_splits to make them if made by"}]}