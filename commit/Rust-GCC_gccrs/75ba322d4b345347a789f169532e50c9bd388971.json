{"sha": "75ba322d4b345347a789f169532e50c9bd388971", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzViYTMyMmQ0YjM0NTM0N2E3ODlmMTY5NTMyZTUwYzliZDM4ODk3MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-27T13:20:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-27T13:20:37Z"}, "message": "[multiple changes]\n\n2009-07-27  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch6.adb (Expand_Call): Reset Is_Known_Valid after call\n\n\t* sem_ch3.adb, sem_eval.adb, sem_aux.adb: Minor comment reformatting\n\n2009-07-27  Geert Bosch  <bosch@adacore.com>\n\n\t* checks.adb (Find_Check): Minor streamlining of logic.\n\t* gnat1drv.adb(Gnat1drv): Put Check_Rep_Info in its alphabetical order.\n\t* debug.adb: Document -gnatdX debug flag\n\t* exp_ch2.adb(Expand_Entity_Reference): Implement new -gnatdX flag to\n\tlist information about reads from scalar entities.\n\tAlso slightly simplify condition for Expand_Current_Value.\n\t* sem_util.ads, sem_util.adb (Is_LHS, Is_Actual_Out_Parameter): New\n\tfunctions.\n\nFrom-SVN: r150110", "tree": {"sha": "6e8682c976a9051e2545f9219739a10e43057474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e8682c976a9051e2545f9219739a10e43057474"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75ba322d4b345347a789f169532e50c9bd388971", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ba322d4b345347a789f169532e50c9bd388971", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75ba322d4b345347a789f169532e50c9bd388971", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ba322d4b345347a789f169532e50c9bd388971/comments", "author": null, "committer": null, "parents": [{"sha": "b1c44a93c7ab94df11875c0e3d8a086e7860869f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c44a93c7ab94df11875c0e3d8a086e7860869f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1c44a93c7ab94df11875c0e3d8a086e7860869f"}], "stats": {"total": 154, "additions": 114, "deletions": 40}, "files": [{"sha": "8185d034751289b80553e281123f07bf7ae8e235", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=75ba322d4b345347a789f169532e50c9bd388971", "patch": "@@ -1,4 +1,21 @@\n-2009-07-16  Dave Korn  <dave.korn.cygwin@gmail.com>\n+2009-07-27  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_Call): Reset Is_Known_Valid after call\n+\n+\t* sem_ch3.adb, sem_eval.adb, sem_aux.adb: Minor comment reformatting\n+\n+2009-07-27  Geert Bosch  <bosch@adacore.com>\n+\n+\t* checks.adb (Find_Check): Minor streamlining of logic.\n+\t* gnat1drv.adb(Gnat1drv): Put Check_Rep_Info in its alphabetical order.\n+\t* debug.adb: Document -gnatdX debug flag\n+\t* exp_ch2.adb(Expand_Entity_Reference): Implement new -gnatdX flag to\n+\tlist information about reads from scalar entities.\n+\tAlso slightly simplify condition for Expand_Current_Value.\n+\t* sem_util.ads, sem_util.adb (Is_LHS, Is_Actual_Out_Parameter): New\n+\tfunctions.\n+\n+2009-07-26  Dave Korn  <dave.korn.cygwin@gmail.com>\n \n \tPR bootstrap/40578\n \t* adaint.h (FOPEN, STAT, FSTAT, LSTAT, STRUCT_STAT): Rename from these"}, {"sha": "d1a2b460c9089b9a72158ad1501f2e784c8d7261", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=75ba322d4b345347a789f169532e50c9bd388971", "patch": "@@ -4254,7 +4254,7 @@ package body Checks is\n    --  Start of processing for Find_Check\n \n    begin\n-      --  Establish default, to avoid warnings from GCC\n+      --  Establish default, in case no entry is found\n \n       Check_Num := 0;\n \n@@ -4325,7 +4325,6 @@ package body Checks is\n \n       --  If we fall through entry was not found\n \n-      Check_Num := 0;\n       return;\n    end Find_Check;\n "}, {"sha": "f60a67b5b405c19c39f476a4799c59e0cd99a1a8", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=75ba322d4b345347a789f169532e50c9bd388971", "patch": "@@ -87,7 +87,7 @@ package body Debug is\n    --  dU   Enable garbage collection of unreachable entities\n    --  dV   Enable viewing of all symbols in debugger\n    --  dW   Disable warnings on calls for IN OUT parameters\n-   --  dX\n+   --  dX   Display messages on reads of potentially uninitialized scalars\n    --  dY   Enable configurable run-time mode\n    --  dZ   Generate listing showing the contents of the dispatch tables\n "}, {"sha": "9d475e2ca6a9e53cdc15f818cba3ced4356babc3", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=75ba322d4b345347a789f169532e50c9bd388971", "patch": "@@ -24,6 +24,7 @@\n ------------------------------------------------------------------------------\n \n with Atree;    use Atree;\n+with Debug;    use Debug;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n with Errout;   use Errout;\n@@ -34,12 +35,14 @@ with Exp_VFpt; use Exp_VFpt;\n with Namet;    use Namet;\n with Nmake;    use Nmake;\n with Opt;      use Opt;\n+with Output;   use Output;\n with Sem;      use Sem;\n with Sem_Eval; use Sem_Eval;\n with Sem_Res;  use Sem_Res;\n with Sem_Util; use Sem_Util;\n with Sem_Warn; use Sem_Warn;\n with Sinfo;    use Sinfo;\n+with Sinput;   use Sinput;\n with Snames;   use Snames;\n with Tbuild;   use Tbuild;\n with Uintp;    use Uintp;\n@@ -370,13 +373,32 @@ package body Exp_Ch2 is\n          Expand_Shared_Passive_Variable (N);\n       end if;\n \n+      --  Test code for implementing the pragma Reviewable requirement of\n+      --  classifying reads of scalars as referencing potentially uninitialized\n+      --  objects or not.\n+\n+      if Debug_Flag_XX\n+        and then Is_Scalar_Type (Etype (N))\n+        and then (Is_Assignable (E) or else Is_Constant_Object (E))\n+        and then Comes_From_Source (N)\n+        and then not Is_LHS (N)\n+        and then not Is_Actual_Out_Parameter (N)\n+        and then (Nkind (Parent (N)) /= N_Attribute_Reference\n+                  or else Attribute_Name (Parent (N)) /= Name_Valid)\n+      then\n+         Write_Location (Sloc (N));\n+         Write_Str (\": Read from scalar \"\"\");\n+         Write_Name (Chars (N));\n+         Write_Str (\"\"\"\");\n+         if Is_Known_Valid (E) then\n+            Write_Str (\", Is_Known_Valid\");\n+         end if;\n+         Write_Eol;\n+      end if;\n+\n       --  Interpret possible Current_Value for variable case\n \n-      if (Ekind (E) = E_Variable\n-            or else\n-          Ekind (E) = E_In_Out_Parameter\n-            or else\n-          Ekind (E) = E_Out_Parameter)\n+      if Is_Assignable (E)\n         and then Present (Current_Value (E))\n       then\n          Expand_Current_Value (N);"}, {"sha": "c326916476ce1490352c3c9ab9fd22d447431eb2", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=75ba322d4b345347a789f169532e50c9bd388971", "patch": "@@ -1125,6 +1125,7 @@ package body Exp_Ch6 is\n             --  created, since we just passed it as an OUT parameter.\n \n             Kill_Current_Values (Temp);\n+            Set_Is_Known_Valid (Temp, False);\n \n             --  If type conversion, use reverse conversion on exit\n \n@@ -2470,7 +2471,8 @@ package body Exp_Ch6 is\n                --  For an OUT or IN OUT parameter that is an assignable entity,\n                --  we do not want to clobber the Last_Assignment field, since\n                --  if it is set, it was precisely because it is indeed an OUT\n-               --  or IN OUT parameter!\n+               --  or IN OUT parameter! We do reset the Is_Known_Valid flag\n+               --  since the subprogram could have returned in invalid value.\n \n                if (Ekind (Formal) = E_Out_Parameter\n                      or else\n@@ -2480,6 +2482,7 @@ package body Exp_Ch6 is\n                   Sav := Last_Assignment (Ent);\n                   Kill_Current_Values (Ent);\n                   Set_Last_Assignment (Ent, Sav);\n+                  Set_Is_Known_Valid (Ent, False);\n \n                   --  For all other cases, just kill the current values\n "}, {"sha": "3798ac74a7aaf2770ff742e2f7df7f6f16b45ca8", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=75ba322d4b345347a789f169532e50c9bd388971", "patch": "@@ -460,25 +460,6 @@ procedure Gnat1drv is\n       end if;\n    end Check_Bad_Body;\n \n-   --------------------\n-   -- Check_Rep_Info --\n-   --------------------\n-\n-   procedure Check_Rep_Info is\n-   begin\n-      if List_Representation_Info /= 0\n-        or else List_Representation_Info_Mechanisms\n-      then\n-         Set_Standard_Error;\n-         Write_Eol;\n-         Write_Str\n-           (\"cannot generate representation information, no code generated\");\n-         Write_Eol;\n-         Write_Eol;\n-         Set_Standard_Output;\n-      end if;\n-   end Check_Rep_Info;\n-\n    -------------------------\n    -- Check_Library_Items --\n    -------------------------\n@@ -508,6 +489,25 @@ procedure Gnat1drv is\n       Walk;\n    end Check_Library_Items;\n \n+   --------------------\n+   -- Check_Rep_Info --\n+   --------------------\n+\n+   procedure Check_Rep_Info is\n+   begin\n+      if List_Representation_Info /= 0\n+        or else List_Representation_Info_Mechanisms\n+      then\n+         Set_Standard_Error;\n+         Write_Eol;\n+         Write_Str\n+           (\"cannot generate representation information, no code generated\");\n+         Write_Eol;\n+         Write_Eol;\n+         Set_Standard_Output;\n+      end if;\n+   end Check_Rep_Info;\n+\n --  Start of processing for Gnat1drv\n \n begin"}, {"sha": "c1b3a33189267a190d7ff1b0f6cf078883b2a043", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=75ba322d4b345347a789f169532e50c9bd388971", "patch": "@@ -312,11 +312,11 @@ package body Sem_Aux is\n       Ent : Entity_Id;\n \n    begin\n-      --  If the base type has no freeze node, it is a type in standard,\n+      --  If the base type has no freeze node, it is a type in Standard,\n       --  and always acts as its own first subtype unless it is one of the\n       --  predefined integer types. If the type is formal, it is also a first\n       --  subtype, and its base type has no freeze node. On the other hand, a\n-      --  subtype of a generic formal is not its own first_subtype. Its base\n+      --  subtype of a generic formal is not its own first subtype. Its base\n       --  type, if anonymous, is attached to the formal type decl. from which\n       --  the first subtype is obtained.\n "}, {"sha": "ff8dd6e52530b8d1c54de9ba1ed5d285aab2ba28", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=75ba322d4b345347a789f169532e50c9bd388971", "patch": "@@ -2588,8 +2588,8 @@ package body Sem_Ch3 is\n            and then Is_Access_Constant (Etype (E))\n          then\n             Error_Msg_N\n-              (\"access to variable cannot be initialized \" &\n-                \"with an access-to-constant expression\", E);\n+              (\"access to variable cannot be initialized \"\n+               & \"with an access-to-constant expression\", E);\n          end if;\n \n          if not Assignment_OK (N) then\n@@ -2598,10 +2598,9 @@ package body Sem_Ch3 is\n \n          Check_Unset_Reference (E);\n \n-         --  If this is a variable, then set current value.\n-         --  If this is a declared constant of a scalar type\n-         --  with a static expression, indicate that it is\n-         --  always valid.\n+         --  If this is a variable, then set current value. If this is a\n+         --  declared constant of a scalar type with a static expression,\n+         --  indicate that it is always valid.\n \n          if not Constant_Present (N) then\n             if Compile_Time_Known_Value (E) then"}, {"sha": "eb3ec12d5eca8dca5d53339aeefd12e1c62e6fe1", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=75ba322d4b345347a789f169532e50c9bd388971", "patch": "@@ -886,13 +886,15 @@ package body Sem_Eval is\n                  and then LLo = RLo\n                then\n \n-                  --  if the range includes a single literal and we\n-                  --  can assume validity then the result is known\n-                  --  even if an operand is not static.\n+                  --  If the range includes a single literal and we can assume\n+                  --  validity then the result is known even if an operand is\n+                  --  not static.\n \n                   if Assume_Valid then\n                      return EQ;\n \n+                  --  Comment here ???\n+\n                   elsif Is_Entity_Name (L)\n                     and then Is_Entity_Name (R)\n                     and then Is_Known_Valid (Entity (L))"}, {"sha": "11abc976d2c41e2c15e09cb6b3f2c978dd5ddb03", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=75ba322d4b345347a789f169532e50c9bd388971", "patch": "@@ -5334,6 +5334,20 @@ package body Sem_Util is\n          and then E = Base_Type (E);\n    end Is_AAMP_Float;\n \n+   -----------------------------\n+   -- Is_Actual_Out_Parameter --\n+   -----------------------------\n+\n+   function Is_Actual_Out_Parameter (N : Node_Id) return Boolean is\n+      Formal : Entity_Id;\n+      Call   : Node_Id;\n+   begin\n+      Find_Actual (N, Formal, Call);\n+\n+      return Present (Formal)\n+        and then Ekind (Formal) = E_Out_Parameter;\n+   end Is_Actual_Out_Parameter;\n+\n    -------------------------\n    -- Is_Actual_Parameter --\n    -------------------------\n@@ -6113,6 +6127,17 @@ package body Sem_Util is\n       end if;\n    end Is_Fully_Initialized_Variant;\n \n+   ------------\n+   -- Is_LHS --\n+   ------------\n+\n+   function Is_LHS (N : Node_Id) return Boolean is\n+      P    : constant Node_Id := Parent (N);\n+   begin\n+      return Nkind (P) = N_Assignment_Statement\n+        and then Name (P) = N;\n+   end Is_LHS;\n+\n    ----------------------------\n    -- Is_Inherited_Operation --\n    ----------------------------"}, {"sha": "4948c51845d530d111764120fdd4cbf508b77644", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ba322d4b345347a789f169532e50c9bd388971/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=75ba322d4b345347a789f169532e50c9bd388971", "patch": "@@ -629,6 +629,9 @@ package Sem_Util is\n    --  the dependency of Einfo on Targparm which would be required for a\n    --  synthesized attribute.\n \n+   function Is_Actual_Out_Parameter (N : Node_Id) return Boolean;\n+   --  Determines if N is an actual parameter of out mode in a subprogram call\n+\n    function Is_Actual_Parameter (N : Node_Id) return Boolean;\n    --  Determines if N is an actual parameter in a subprogram call\n \n@@ -703,6 +706,10 @@ package Sem_Util is\n    --  E is a subprogram. Return True is E is an implicit operation inherited\n    --  by a derived type declarations.\n \n+   function Is_LHS (N : Node_Id) return Boolean;\n+   --  Returns True iff N is an identifier used as Name in an assignment\n+   --  statement.\n+\n    function Is_Library_Level_Entity (E : Entity_Id) return Boolean;\n    --  A library-level declaration is one that is accessible from Standard,\n    --  i.e. a library unit or an entity declared in a library package."}]}