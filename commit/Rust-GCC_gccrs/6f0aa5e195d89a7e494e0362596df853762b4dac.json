{"sha": "6f0aa5e195d89a7e494e0362596df853762b4dac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmYwYWE1ZTE5NWQ4OWE3ZTQ5NGUwMzYyNTk2ZGY4NTM3NjJiNGRhYw==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@apple.com", "date": "2004-06-25T04:31:51Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-06-25T04:31:51Z"}, "message": "encoding.h: Wrap the functions with extern \"C\" for C++ mode.\n\n2004-06-24  Andrew Pinski  <apinski@apple.com>\n\n        * objc/encoding.h: Wrap the functions with extern \"C\" for C++\n        mode.\n        * objc/hash.h: Likewise.\n        * objc/objc-api.h: Likewise.\n        * objc/objc-list.h: Likewise.\n        * objc/runtime.h: Likewise.\n        * objc/sarray.h: Likewise.\n        * objc/thr.h: Likewise.\n        * objc/typedstream.h: Likewise.\n\nFrom-SVN: r83635", "tree": {"sha": "7cd8603cd5e075e1eb7ba55ac5dd364fac92a309", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cd8603cd5e075e1eb7ba55ac5dd364fac92a309"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f0aa5e195d89a7e494e0362596df853762b4dac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f0aa5e195d89a7e494e0362596df853762b4dac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f0aa5e195d89a7e494e0362596df853762b4dac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f0aa5e195d89a7e494e0362596df853762b4dac/comments", "author": null, "committer": null, "parents": [{"sha": "fff34d356a721134207d6545fc134a412af8f885", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fff34d356a721134207d6545fc134a412af8f885", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fff34d356a721134207d6545fc134a412af8f885"}], "stats": {"total": 98, "additions": 98, "deletions": 0}, "files": [{"sha": "3e8c9564d14a2df11a3b82989dc83d281f0b53ee", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f0aa5e195d89a7e494e0362596df853762b4dac/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f0aa5e195d89a7e494e0362596df853762b4dac/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=6f0aa5e195d89a7e494e0362596df853762b4dac", "patch": "@@ -1,3 +1,16 @@\n+2004-06-24  Andrew Pinski  <apinski@apple.com>\n+\n+\t* objc/encoding.h: Wrap the functions with extern \"C\" for C++\n+\tmode. \n+\t* objc/hash.h: Likewise.\n+\t* objc/objc-api.h: Likewise.\n+\t* objc/objc-list.h: Likewise.\n+\t* objc/runtime.h: Likewise.\n+\t* objc/sarray.h: Likewise.\n+\t* objc/thr.h: Likewise.\n+\t* objc/typedstream.h: Likewise.\n+\n+\n 2004-06-21  Nick Clifton  <nickc@redhat.com>\n \n \t* encoding.c (BITS_PER_UNIT): Define if a definition is not"}, {"sha": "b6287fc77b8656093eaf218535cbae323f827295", "filename": "libobjc/objc/encoding.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f0aa5e195d89a7e494e0362596df853762b4dac/libobjc%2Fobjc%2Fencoding.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f0aa5e195d89a7e494e0362596df853762b4dac/libobjc%2Fobjc%2Fencoding.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fencoding.h?ref=6f0aa5e195d89a7e494e0362596df853762b4dac", "patch": "@@ -32,6 +32,10 @@ Boston, MA 02111-1307, USA.  */\n #include <ctype.h>\n #include \"objc/objc-api.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif /* __cplusplus */\n+\n #define _C_CONST\t'r'\n #define _C_IN\t\t'n'\n #define _C_INOUT\t'N'\n@@ -96,4 +100,8 @@ void objc_layout_structure_get_info (struct objc_struct_layout *layout,\n                                      unsigned int *align,\n                                      const char **type);\n \n+#ifdef __cplusplus\n+}\n+#endif /* __cplusplus */\n+\n #endif /* __encoding_INCLUDE_GNU */"}, {"sha": "47715af26b04831b1a2c06cd16222a82e93a99c8", "filename": "libobjc/objc/hash.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f0aa5e195d89a7e494e0362596df853762b4dac/libobjc%2Fobjc%2Fhash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f0aa5e195d89a7e494e0362596df853762b4dac/libobjc%2Fobjc%2Fhash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fhash.h?ref=6f0aa5e195d89a7e494e0362596df853762b4dac", "patch": "@@ -32,6 +32,11 @@ Boston, MA 02111-1307, USA.  */\n #include <string.h>\n #include <objc/objc.h>\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif /* __cplusplus */\n+\n+\n /*\n  * This data structure is used to hold items\n  *  stored in a hash table.  Each node holds \n@@ -203,5 +208,9 @@ compare_strings (const void *k1, const void *k2)\n     return ! strcmp ((const char *) k1, (const char *) k2);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif /* __cplusplus */\n+\n \n #endif /* not __hash_INCLUDE_GNU */"}, {"sha": "03bbe666c6661db0964c8d7edc78e48f6af1dcec", "filename": "libobjc/objc/objc-api.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f0aa5e195d89a7e494e0362596df853762b4dac/libobjc%2Fobjc%2Fobjc-api.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f0aa5e195d89a7e494e0362596df853762b4dac/libobjc%2Fobjc%2Fobjc-api.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fobjc-api.h?ref=6f0aa5e195d89a7e494e0362596df853762b4dac", "patch": "@@ -34,6 +34,11 @@ Boston, MA 02111-1307, USA.  */\n #include <stdio.h>\n #include <stdarg.h>\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif /* __cplusplus */\n+\n+\n /* For functions which return Method_t */\n #define METHOD_NULL\t(Method_t)0\n                                                 /* Boolean typedefs */\n@@ -606,6 +611,11 @@ object_is_meta_class (id object)\n struct sarray* \n objc_get_uninstalled_dtable(void);\n \n+#ifdef __cplusplus\n+}\n+#endif /* __cplusplus */\n+\n+\n #endif /* not __objc_api_INCLUDE_GNU */\n \n "}, {"sha": "866095dabd4bb119e9a7b2fca115ff407288a56f", "filename": "libobjc/objc/objc-list.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f0aa5e195d89a7e494e0362596df853762b4dac/libobjc%2Fobjc%2Fobjc-list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f0aa5e195d89a7e494e0362596df853762b4dac/libobjc%2Fobjc%2Fobjc-list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fobjc-list.h?ref=6f0aa5e195d89a7e494e0362596df853762b4dac", "patch": "@@ -28,6 +28,11 @@ Boston, MA 02111-1307, USA.  */\n #ifndef __GNU_OBJC_LIST_H\n #define __GNU_OBJC_LIST_H\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif /* __cplusplus */\n+\n+\n struct objc_list {\n   void *head;\n   struct objc_list *tail;\n@@ -144,4 +149,10 @@ list_free(struct objc_list* list)\n       objc_free(list);\n     }\n }\n+\n+#ifdef __cplusplus\n+}\n+#endif /* __cplusplus */\n+\n+\n #endif /* not __GNU_OBJC_LIST_H */"}, {"sha": "d4179f2d3da5f888659950ba520b72de327cf65f", "filename": "libobjc/objc/runtime.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f0aa5e195d89a7e494e0362596df853762b4dac/libobjc%2Fobjc%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f0aa5e195d89a7e494e0362596df853762b4dac/libobjc%2Fobjc%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fruntime.h?ref=6f0aa5e195d89a7e494e0362596df853762b4dac", "patch": "@@ -42,6 +42,11 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n #include \"objc/hash.h\"\t\t/* hash structures */\n #include \"objc/objc-list.h\"\t/* linear lists */\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif /* __cplusplus */\n+\n+\n extern void __objc_add_class_to_hash(Class);   /* (objc-class.c) */\n extern void __objc_init_selector_tables(void); /* (objc-sel.c) */\n extern void __objc_init_class_tables(void);    /* (objc-class.c) */\n@@ -85,6 +90,11 @@ SEL  __sel_register_typed_name (const char*, const char*,\n \t\t\t\tstruct objc_selector*, BOOL is_const);\n extern void __objc_generate_gc_type_description (Class);\n \n+#ifdef __cplusplus\n+}\n+#endif /* __cplusplus */\n+\n+\n #endif /* not __objc_runtime_INCLUDE_GNU */\n \n "}, {"sha": "5956a43071e1dd5c3b7c96760e02233654fbfd43", "filename": "libobjc/objc/sarray.h", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f0aa5e195d89a7e494e0362596df853762b4dac/libobjc%2Fobjc%2Fsarray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f0aa5e195d89a7e494e0362596df853762b4dac/libobjc%2Fobjc%2Fsarray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fsarray.h?ref=6f0aa5e195d89a7e494e0362596df853762b4dac", "patch": "@@ -43,11 +43,20 @@ extern const char* __objc_sparse3_id;\n \n #include \"objc/thr.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif /* __cplusplus */\n+\n extern int nbuckets;\t\t/* for stats */\n extern int nindices;\n extern int narrays;\n extern int idxsize;\n \n+#ifdef __cplusplus\n+}\n+#endif /* __cplusplus */\n+\n+\n #include <assert.h>\n \n /* An unsigned integer of same size as a pointer */\n@@ -142,6 +151,10 @@ struct sarray {\n   size_t capacity;\n };\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif /* __cplusplus */\n+\n struct sarray* sarray_new(int, void* default_element);\n void sarray_free(struct sarray*);\n struct sarray* sarray_lazy_copy(struct sarray*);\n@@ -234,4 +247,9 @@ static inline void* sarray_get_safe(struct sarray* array, sidx indx)\n     return (array->empty_bucket->elems[0]);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif /* __cplusplus */\n+\n+\n #endif /* __sarray_INCLUDE_GNU */"}, {"sha": "b4472fefd82a053f8517dabdee91c347f1a3646e", "filename": "libobjc/objc/thr.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f0aa5e195d89a7e494e0362596df853762b4dac/libobjc%2Fobjc%2Fthr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f0aa5e195d89a7e494e0362596df853762b4dac/libobjc%2Fobjc%2Fthr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fthr.h?ref=6f0aa5e195d89a7e494e0362596df853762b4dac", "patch": "@@ -40,6 +40,10 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"objc/objc.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif /* __cplusplus */\n+\n /*************************************************************************\n  *  Universal static variables:\n  */\n@@ -142,4 +146,9 @@ objc_thread_t __objc_thread_id (void);\n int __objc_thread_set_data (void *value);\n void * __objc_thread_get_data (void);\n \n+#ifdef __cplusplus\n+}\n+#endif /* __cplusplus */\n+\n+\n #endif /* not __thread_INCLUDE_GNU */"}, {"sha": "8e9e2e39f2e7f4ee5ba87b2131fd1b77345343b2", "filename": "libobjc/objc/typedstream.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f0aa5e195d89a7e494e0362596df853762b4dac/libobjc%2Fobjc%2Ftypedstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f0aa5e195d89a7e494e0362596df853762b4dac/libobjc%2Fobjc%2Ftypedstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Ftypedstream.h?ref=6f0aa5e195d89a7e494e0362596df853762b4dac", "patch": "@@ -31,6 +31,11 @@ Boston, MA 02111-1307, USA.  */\n #include \"objc/hash.h\"\n #include <stdio.h>\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif /* __cplusplus */\n+\n+\n typedef int (*objc_typed_read_func)(void*, char*, int);\n typedef int (*objc_typed_write_func)(void*, const char*, int);\n typedef int (*objc_typed_flush_func)(void*);\n@@ -129,4 +134,9 @@ void objc_close_typed_stream (TypedStream* stream);\n BOOL objc_end_of_typed_stream (TypedStream* stream);\n void objc_flush_typed_stream (TypedStream* stream);\n \n+#ifdef __cplusplus\n+}\n+#endif /* __cplusplus */\n+\n+\n #endif /* not __typedstream_INCLUDE_GNU */"}]}