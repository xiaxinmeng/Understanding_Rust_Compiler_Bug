{"sha": "f08b4d886775fe7ec46dddc8e02b0a571eeff8df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA4YjRkODg2Nzc1ZmU3ZWM0NmRkZGM4ZTAyYjBhNTcxZWVmZjhkZg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2003-05-12T21:06:36Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2003-05-12T21:06:36Z"}, "message": "xcoff.h (ASM_OUTPUT_SKIP): Accept HOST_WIDE_INT.\n\n        * config/rs6000/xcoff.h (ASM_OUTPUT_SKIP): Accept HOST_WIDE_INT.\n        (ASM_OUTPUT_ALIGNED_COMMON): Same.\n        (ASM_OUTPUT_LOCAL): Same.\n\nFrom-SVN: r66736", "tree": {"sha": "6f0960d57d386830e22573d0e9f50acdcfa62ff0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f0960d57d386830e22573d0e9f50acdcfa62ff0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f08b4d886775fe7ec46dddc8e02b0a571eeff8df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f08b4d886775fe7ec46dddc8e02b0a571eeff8df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f08b4d886775fe7ec46dddc8e02b0a571eeff8df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f08b4d886775fe7ec46dddc8e02b0a571eeff8df/comments", "author": null, "committer": null, "parents": [{"sha": "1f61755cdb31195e5c769152c70ae09c5bedbff4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f61755cdb31195e5c769152c70ae09c5bedbff4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f61755cdb31195e5c769152c70ae09c5bedbff4"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "6133ec5b192b9231e5c17d8e8ca5856c3e5bf424", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f08b4d886775fe7ec46dddc8e02b0a571eeff8df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f08b4d886775fe7ec46dddc8e02b0a571eeff8df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f08b4d886775fe7ec46dddc8e02b0a571eeff8df", "patch": "@@ -1,3 +1,9 @@\n+2003-05-12  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/xcoff.h (ASM_OUTPUT_SKIP): Accept HOST_WIDE_INT.\n+\t(ASM_OUTPUT_ALIGNED_COMMON): Same.\n+\t(ASM_OUTPUT_LOCAL): Same.\n+\n Mon May 12 21:53:29 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* varasm.c (output_constant):  Fix underflow."}, {"sha": "a1575372462c16b414d9a7779a509fdd90d14c4c", "filename": "gcc/config/rs6000/xcoff.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f08b4d886775fe7ec46dddc8e02b0a571eeff8df/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f08b4d886775fe7ec46dddc8e02b0a571eeff8df/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxcoff.h?ref=f08b4d886775fe7ec46dddc8e02b0a571eeff8df", "patch": "@@ -343,7 +343,7 @@ toc_section ()\t\t\t\t\t\t\\\n #define SKIP_ASM_OP \"\\t.space \"\n \n #define ASM_OUTPUT_SKIP(FILE,SIZE)  \\\n-  fprintf (FILE, \"%s%u\\n\", SKIP_ASM_OP, (int)(SIZE))\n+  fprintf (FILE, \"%s\"HOST_WIDE_INT_PRINT_UNSIGNED\"\\n\", SKIP_ASM_OP, (SIZE))\n \n /* This says how to output an assembler line\n    to define a global common symbol.  */\n@@ -354,12 +354,12 @@ toc_section ()\t\t\t\t\t\t\\\n   do { fputs (COMMON_ASM_OP, (FILE));\t\t\t\\\n        RS6000_OUTPUT_BASENAME ((FILE), (NAME));\t\t\\\n        if ((ALIGN) > 32)\t\t\t\t\\\n-\t fprintf ((FILE), \",%u,%u\\n\", (int)(SIZE),\t\t\\\n+\t fprintf ((FILE), \",\"HOST_WIDE_INT_PRINT_UNSIGNED\",%u\\n\", (SIZE), \\\n \t\t  exact_log2 ((ALIGN) / BITS_PER_UNIT)); \\\n        else if ((SIZE) > 4)\t\t\t\t\\\n-         fprintf ((FILE), \",%u,3\\n\", (int)(SIZE));\t\t\\\n+         fprintf ((FILE), \",\"HOST_WIDE_INT_PRINT_UNSIGNED\",3\\n\", (SIZE)); \\\n        else\t\t\t\t\t\t\\\n-\t fprintf ((FILE), \",%u\\n\", (int)(SIZE));\t\t\\\n+\t fprintf ((FILE), \",\"HOST_WIDE_INT_PRINT_UNSIGNED\"\\n\", (SIZE)); \\\n   } while (0)\n \n /* This says how to output an assembler line\n@@ -373,7 +373,8 @@ toc_section ()\t\t\t\t\t\t\\\n #define ASM_OUTPUT_LOCAL(FILE, NAME, SIZE, ROUNDED)\t\\\n   do { fputs (LOCAL_COMMON_ASM_OP, (FILE));\t\t\\\n        RS6000_OUTPUT_BASENAME ((FILE), (NAME));\t\t\\\n-       fprintf ((FILE), \",%u,%s\\n\", (TARGET_32BIT ? (int)(SIZE) : (int)(ROUNDED)), \\\n+       fprintf ((FILE), \",\"HOST_WIDE_INT_PRINT_UNSIGNED\",%s\\n\", \\\n+\t\t(TARGET_32BIT ? (SIZE) : (ROUNDED)),\t\\\n \t\txcoff_bss_section_name);\t\t\\\n      } while (0)\n "}]}