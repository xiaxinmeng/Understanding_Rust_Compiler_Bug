{"sha": "debf1662d1f0cbe54198119f1a74baf46ad6a41a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGViZjE2NjJkMWYwY2JlNTQxOTgxMTlmMWE3NGJhZjQ2YWQ2YTQxYQ==", "commit": {"author": {"name": "Kamlesh Kumar", "email": "kamleshbhalui@gmail.com", "date": "2019-10-21T20:19:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-10-21T20:19:28Z"}, "message": "PR c++/83434 - typeinfo for noexcept function lacks noexcept information\n\n2019-10-21  Kamlesh Kumar  <kamleshbhalui@gmail.com>\n\n        * rtti.c (get_tinfo_decl_dynamic): Do not call\n        TYPE_MAIN_VARIANT for function.\n        (get_typeid): Likewise.\n\n        * g++.dg/rtti/pr83534.C: New Test.\n\nReviewed-by: Jason Merrill <jason@redhat.com>\n\nCo-Authored-By: Jason Merrill <jason@redhat.com>\n\nFrom-SVN: r277270", "tree": {"sha": "d37b77eabd78fced6e683868f4fc7bd028499058", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d37b77eabd78fced6e683868f4fc7bd028499058"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/debf1662d1f0cbe54198119f1a74baf46ad6a41a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/debf1662d1f0cbe54198119f1a74baf46ad6a41a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/debf1662d1f0cbe54198119f1a74baf46ad6a41a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/debf1662d1f0cbe54198119f1a74baf46ad6a41a/comments", "author": {"login": "kamleshbhalui", "id": 22392991, "node_id": "MDQ6VXNlcjIyMzkyOTkx", "avatar_url": "https://avatars.githubusercontent.com/u/22392991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamleshbhalui", "html_url": "https://github.com/kamleshbhalui", "followers_url": "https://api.github.com/users/kamleshbhalui/followers", "following_url": "https://api.github.com/users/kamleshbhalui/following{/other_user}", "gists_url": "https://api.github.com/users/kamleshbhalui/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamleshbhalui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamleshbhalui/subscriptions", "organizations_url": "https://api.github.com/users/kamleshbhalui/orgs", "repos_url": "https://api.github.com/users/kamleshbhalui/repos", "events_url": "https://api.github.com/users/kamleshbhalui/events{/privacy}", "received_events_url": "https://api.github.com/users/kamleshbhalui/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "79cd6c7b905ca9390bc1e7c87c259a5a18cefa81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79cd6c7b905ca9390bc1e7c87c259a5a18cefa81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79cd6c7b905ca9390bc1e7c87c259a5a18cefa81"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "4218901b854175fc82f9f155478a34e87a57d5b7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/debf1662d1f0cbe54198119f1a74baf46ad6a41a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/debf1662d1f0cbe54198119f1a74baf46ad6a41a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=debf1662d1f0cbe54198119f1a74baf46ad6a41a", "patch": "@@ -1,3 +1,11 @@\n+2019-10-21  Kamlesh Kumar  <kamleshbhalui@gmail.com>\n+\t    Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/83434 - typeinfo of noexcept function\n+\t* rtti.c (get_tinfo_decl_dynamic): Do not call\n+\tTYPE_MAIN_VARIANT for function.\n+\t(get_typeid): Likewise.\n+\n 2019-10-21  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* parser.c (cp_parser_class_head): Improve error recovery upon"}, {"sha": "c905799481ea3ee1f28a068e866e8cd421fb29ad", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/debf1662d1f0cbe54198119f1a74baf46ad6a41a/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/debf1662d1f0cbe54198119f1a74baf46ad6a41a/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=debf1662d1f0cbe54198119f1a74baf46ad6a41a", "patch": "@@ -272,11 +272,11 @@ get_tinfo_decl_dynamic (tree exp, tsubst_flags_t complain)\n \n   exp = resolve_nondeduced_context (exp, complain);\n \n-  /* peel back references, so they match.  */\n+  /* Peel back references, so they match.  */\n   type = non_reference (unlowered_expr_type (exp));\n \n   /* Peel off cv qualifiers.  */\n-  type = TYPE_MAIN_VARIANT (type);\n+  type = cv_unqualified (type);\n \n   /* For UNKNOWN_TYPEs call complete_type_or_else to get diagnostics.  */\n   if (CLASS_TYPE_P (type) || type == unknown_type_node\n@@ -300,7 +300,7 @@ get_tinfo_decl_dynamic (tree exp, tsubst_flags_t complain)\n     }\n   else\n     /* Otherwise return the type_info for the static type of the expr.  */\n-    t = get_tinfo_ptr (TYPE_MAIN_VARIANT (type));\n+    t = get_tinfo_ptr (type);\n \n   return cp_build_fold_indirect_ref (t);\n }\n@@ -518,7 +518,7 @@ get_typeid (tree type, tsubst_flags_t complain)\n \n   /* The top-level cv-qualifiers of the lvalue expression or the type-id\n      that is the operand of typeid are always ignored.  */\n-  type = TYPE_MAIN_VARIANT (type);\n+  type = cv_unqualified (type);\n \n   /* For UNKNOWN_TYPEs call complete_type_or_else to get diagnostics.  */\n   if (CLASS_TYPE_P (type) || type == unknown_type_node"}, {"sha": "af5f02ebb92bb0e57cae4223e36a0c1cfa75240f", "filename": "gcc/testsuite/g++.dg/rtti/pr83534.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/debf1662d1f0cbe54198119f1a74baf46ad6a41a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Fpr83534.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/debf1662d1f0cbe54198119f1a74baf46ad6a41a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Fpr83534.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Fpr83534.C?ref=debf1662d1f0cbe54198119f1a74baf46ad6a41a", "patch": "@@ -0,0 +1,13 @@\n+// { dg-options \"-std=c++17\" }\n+// { dg-do run }\n+\n+#include <typeinfo>\n+\n+void f1();\n+void f2() noexcept;\n+int main() {\n+  if((typeid(void()) == typeid(void ()noexcept))\n+     || (typeid(&f1) == typeid(&f2))\n+     || (typeid(f1) == typeid(f2)))\n+    __builtin_abort();\n+}"}]}