{"sha": "7894073c2f67f53e1c8da85d2c92d71701eff9fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg5NDA3M2MyZjY3ZjUzZTFjOGRhODVkMmM5MmQ3MTcwMWVmZjlmYg==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2010-11-01T20:38:40Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2010-11-01T20:38:40Z"}, "message": "defaults.h (TARGET_VTABLE_USES_DESCRIPTORS): Move under ifdef GCC_INSN_FLAGS_H.\n\n2010-11-01  Steve Ellcey  <sje@cup.hp.com>\n\n\t* defaults.h (TARGET_VTABLE_USES_DESCRIPTORS): Move under ifdef\n\tGCC_INSN_FLAGS_H.\n\t* libgcov.c (__gcov_indirect_call_profiler): Set\n\tVTABLE_USES_DESCRIPTORS if TARGET_VTABLE_USES_DESCRIPTORS is\n\tdefined and use in place of TARGET_VTABLE_USES_DESCRIPTORS.\n\nFrom-SVN: r166145", "tree": {"sha": "937962dd4880503e37b45f84152c4320ca66c78d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/937962dd4880503e37b45f84152c4320ca66c78d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7894073c2f67f53e1c8da85d2c92d71701eff9fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7894073c2f67f53e1c8da85d2c92d71701eff9fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7894073c2f67f53e1c8da85d2c92d71701eff9fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7894073c2f67f53e1c8da85d2c92d71701eff9fb/comments", "author": null, "committer": null, "parents": [{"sha": "8f07a2aa357fd67ca7ef1e640424bc605c6cec31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f07a2aa357fd67ca7ef1e640424bc605c6cec31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f07a2aa357fd67ca7ef1e640424bc605c6cec31"}], "stats": {"total": 48, "additions": 37, "deletions": 11}, "files": [{"sha": "ce569a2321c9d05f44640329defa42793a562716", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7894073c2f67f53e1c8da85d2c92d71701eff9fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7894073c2f67f53e1c8da85d2c92d71701eff9fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7894073c2f67f53e1c8da85d2c92d71701eff9fb", "patch": "@@ -1,3 +1,11 @@\n+2010-11-01  Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* defaults.h (TARGET_VTABLE_USES_DESCRIPTORS): Move under ifdef\n+\tGCC_INSN_FLAGS_H.\n+\t* libgcov.c (__gcov_indirect_call_profiler): Set\n+\tVTABLE_USES_DESCRIPTORS if TARGET_VTABLE_USES_DESCRIPTORS is\n+\tdefined and use in place of TARGET_VTABLE_USES_DESCRIPTORS.\n+\n 2010-11-01  Nathan Froyd  <froydnj@codesourcery.com>\n \n \tPR tree-optimization/46259"}, {"sha": "1736013fb66093e1233b68fe3460f64f5bbdf16a", "filename": "gcc/defaults.h", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7894073c2f67f53e1c8da85d2c92d71701eff9fb/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7894073c2f67f53e1c8da85d2c92d71701eff9fb/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=7894073c2f67f53e1c8da85d2c92d71701eff9fb", "patch": "@@ -813,16 +813,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_DEFAULT_PACK_STRUCT 0\n #endif\n \n-/* By default, the C++ compiler will use function addresses in the\n-   vtable entries.  Setting this nonzero tells the compiler to use\n-   function descriptors instead.  The value of this macro says how\n-   many words wide the descriptor is (normally 2).  It is assumed\n-   that the address of a function descriptor may be treated as a\n-   pointer to a function.  */\n-#ifndef TARGET_VTABLE_USES_DESCRIPTORS\n-#define TARGET_VTABLE_USES_DESCRIPTORS 0\n-#endif\n-\n /* By default, the vtable entries are void pointers, the so the alignment\n    is the same as pointer alignment.  The value of this macro specifies\n    the alignment of the vtable entry in bits.  It should be defined only\n@@ -1381,6 +1371,16 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define STACK_CHECK_MAX_VAR_SIZE (STACK_CHECK_MAX_FRAME_SIZE / 100)\n #endif\n \n+/* By default, the C++ compiler will use function addresses in the\n+   vtable entries.  Setting this nonzero tells the compiler to use\n+   function descriptors instead.  The value of this macro says how\n+   many words wide the descriptor is (normally 2).  It is assumed\n+   that the address of a function descriptor may be treated as a\n+   pointer to a function.  */\n+#ifndef TARGET_VTABLE_USES_DESCRIPTORS\n+#define TARGET_VTABLE_USES_DESCRIPTORS 0\n+#endif\n+\n #ifndef SWITCHABLE_TARGET\n #define SWITCHABLE_TARGET 0\n #endif"}, {"sha": "e89e7e6cbac79f7acca7fedf33f852b12cd4629c", "filename": "gcc/libgcov.c", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7894073c2f67f53e1c8da85d2c92d71701eff9fb/gcc%2Flibgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7894073c2f67f53e1c8da85d2c92d71701eff9fb/gcc%2Flibgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcov.c?ref=7894073c2f67f53e1c8da85d2c92d71701eff9fb", "patch": "@@ -798,6 +798,24 @@ __gcov_one_value_profiler (gcov_type *counters, gcov_type value)\n #endif\n \n #ifdef L_gcov_indirect_call_profiler\n+\n+/* By default, the C++ compiler will use function addresses in the\n+   vtable entries.  Setting TARGET_VTABLE_USES_DESCRIPTORS to nonzero\n+   tells the compiler to use function descriptors instead.  The value\n+   of this macro says how many words wide the descriptor is (normally 2),\n+   but it may be dependent on target flags.  Since we do not have access\n+   to the target flags here we just check to see if it is set and use\n+   that to set VTABLE_USES_DESCRIPTORS to 0 or 1.\n+\n+   It is assumed that the address of a function descriptor may be treated\n+   as a pointer to a function.  */\n+\n+#ifdef TARGET_VTABLE_USES_DESCRIPTORS\n+#define VTABLE_USES_DESCRIPTORS 1\n+#else\n+#define VTABLE_USES_DESCRIPTORS 0\n+#endif\n+\n /* Tries to determine the most common value among its inputs. */\n void\n __gcov_indirect_call_profiler (gcov_type* counter, gcov_type value,\n@@ -807,7 +825,7 @@ __gcov_indirect_call_profiler (gcov_type* counter, gcov_type value,\n      function may have multiple descriptors and we need to dereference\n      the descriptors to see if they point to the same function.  */\n   if (cur_func == callee_func\n-      || (TARGET_VTABLE_USES_DESCRIPTORS && callee_func\n+      || (VTABLE_USES_DESCRIPTORS && callee_func\n \t  && *(void **) cur_func == *(void **) callee_func))\n     __gcov_one_value_profiler_body (counter, value);\n }"}]}