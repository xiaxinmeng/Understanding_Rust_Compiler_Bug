{"sha": "a470bfccf1432454c6922014716f3e797d480026", "node_id": "C_kwDOANBUbNoAKGE0NzBiZmNjZjE0MzI0NTRjNjkyMjAxNDcxNmYzZTc5N2Q0ODAwMjY", "commit": {"author": {"name": "Bernhard Reutner-Fischer", "email": "aldot@gcc.gnu.org", "date": "2021-10-24T19:57:43Z"}, "committer": {"name": "Bernhard Reutner-Fischer", "email": "aldot@gcc.gnu.org", "date": "2021-10-27T19:24:02Z"}, "message": "Fortran: make some trans-array functions static\n\ngcc/fortran/ChangeLog:\n\n\t* trans-array.c (gfc_trans_scalarized_loop_end): Make static.\n\t* trans-array.h (gfc_trans_scalarized_loop_end,\n\tgfc_conv_tmp_ref, gfc_conv_array_transpose): Delete declaration.", "tree": {"sha": "743c90068a3bfdbd537c2f15de465c7dff0150f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/743c90068a3bfdbd537c2f15de465c7dff0150f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a470bfccf1432454c6922014716f3e797d480026", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a470bfccf1432454c6922014716f3e797d480026", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a470bfccf1432454c6922014716f3e797d480026", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a470bfccf1432454c6922014716f3e797d480026/comments", "author": null, "committer": null, "parents": [{"sha": "e90e0301d575ee299dc823be8c489ee6248057ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e90e0301d575ee299dc823be8c489ee6248057ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e90e0301d575ee299dc823be8c489ee6248057ff"}], "stats": {"total": 8, "additions": 1, "deletions": 7}, "files": [{"sha": "5ceb261b69894e488c3979ed22b284f85b88d8be", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a470bfccf1432454c6922014716f3e797d480026/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a470bfccf1432454c6922014716f3e797d480026/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=a470bfccf1432454c6922014716f3e797d480026", "patch": "@@ -4161,7 +4161,7 @@ gfc_start_scalarized_body (gfc_loopinfo * loop, stmtblock_t * pbody)\n \n /* Generates the actual loop code for a scalarization loop.  */\n \n-void\n+static void\n gfc_trans_scalarized_loop_end (gfc_loopinfo * loop, int n,\n \t\t\t       stmtblock_t * pbody)\n {"}, {"sha": "12068c742a59c2102d3e0fd39e8f4e0f3b9596ee", "filename": "gcc/fortran/trans-array.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a470bfccf1432454c6922014716f3e797d480026/gcc%2Ffortran%2Ftrans-array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a470bfccf1432454c6922014716f3e797d480026/gcc%2Ffortran%2Ftrans-array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.h?ref=a470bfccf1432454c6922014716f3e797d480026", "patch": "@@ -118,8 +118,6 @@ void gfc_copy_loopinfo_to_se (gfc_se *, gfc_loopinfo *);\n \n /* Marks the start of a scalarized expression, and declares loop variables.  */\n void gfc_start_scalarized_body (gfc_loopinfo *, stmtblock_t *);\n-/* Generates one actual loop for a scalarized expression.  */\n-void  gfc_trans_scalarized_loop_end (gfc_loopinfo *, int, stmtblock_t *);\n /* Generates the actual loops for a scalarized expression.  */\n void gfc_trans_scalarizing_loops (gfc_loopinfo *, stmtblock_t *);\n /* Mark the end of the main loop body and the start of the copying loop.  */\n@@ -137,8 +135,6 @@ tree gfc_build_null_descriptor (tree);\n void gfc_conv_array_ref (gfc_se *, gfc_array_ref *, gfc_expr *, locus *);\n /* Translate a reference to a temporary array.  */\n void gfc_conv_tmp_array_ref (gfc_se * se);\n-/* Translate a reference to an array temporary.  */\n-void gfc_conv_tmp_ref (gfc_se *);\n \n /* Calculate the overall offset, including subreferences.  */\n void gfc_get_dataptr_offset (stmtblock_t*, tree, tree, tree, bool, gfc_expr*);\n@@ -149,8 +145,6 @@ void gfc_conv_expr_descriptor (gfc_se *, gfc_expr *);\n /* Convert an array for passing as an actual function parameter.  */\n void gfc_conv_array_parameter (gfc_se *, gfc_expr *, bool,\n \t\t\t       const gfc_symbol *, const char *, tree *);\n-/* Evaluate and transpose a matrix expression.  */\n-void gfc_conv_array_transpose (gfc_se *, gfc_expr *);\n \n /* These work with both descriptors and descriptorless arrays.  */\n tree gfc_conv_array_data (tree);"}]}