{"sha": "6aa5b4b87e30d82f34088b9c47a3542ca6c2e438", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFhNWI0Yjg3ZTMwZDgyZjM0MDg4YjljNDdhMzU0MmNhNmMyZTQzOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-02-19T15:53:59Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-02-19T15:53:59Z"}, "message": "re PR target/59794 (i386 backend fails to detect MMX/SSE/AVX ABI changes)\n\n\tPR target/59794\n\t* config/i386/i386.c (type_natural_mode): Warn for ABI changes\n\tonly when -Wpsabi is enabled.\n\ntestsuite/ChangeLog:\n\n\tPR target/59794\n\t* gcc.target/i386/pr39162.c: Add dg-prune-output.\n\t(dg-options): Remove -Wno-psabi.\n\t* gcc.target/i386/59794-2.c: Ditto.\n\t* gcc.target/i386/60205-1.c: Ditto.\n\t* gcc.target/i386/sse-5.c: Ditto.\n\nFrom-SVN: r207910", "tree": {"sha": "6bb87e4078fc1b673d61b83334e93f11e2d57f4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bb87e4078fc1b673d61b83334e93f11e2d57f4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438/comments", "author": null, "committer": null, "parents": [{"sha": "7531103aca20f63de3353cccca66b55cb10eda81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7531103aca20f63de3353cccca66b55cb10eda81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7531103aca20f63de3353cccca66b55cb10eda81"}], "stats": {"total": 115, "additions": 62, "deletions": 53}, "files": [{"sha": "5000f33123be35d1791e13694a0ca97ffcf45f69", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6aa5b4b87e30d82f34088b9c47a3542ca6c2e438", "patch": "@@ -1,3 +1,9 @@\n+2014-02-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/59794\n+\t* config/i386/i386.c (type_natural_mode): Warn for ABI changes\n+\tonly when -Wpsabi is enabled.\n+\n 2014-02-19  Michael Hudson-Doyle  <michael.hudson@linaro.org>\n \n \t PR target/59799\n@@ -43,8 +49,7 @@\n \t(compute_complex_ancestor_jump_func): Likewise.\n \t(update_jump_functions_after_inlining): Fix updating of\n \tancestor function.\n-\t* ipa-cp.c (ipa_get_jf_ancestor_result): Be ready for type\n-\tto be NULL.\n+\t* ipa-cp.c (ipa_get_jf_ancestor_result): Be ready for type to be NULL.\n \n 2014-02-18  Jan Hubicka  <hubicka@ucw.cz>\n "}, {"sha": "0d30eb017b3395398eaff8b3ec7b937f3e57d666", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 36, "deletions": 46, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=6aa5b4b87e30d82f34088b9c47a3542ca6c2e438", "patch": "@@ -6155,10 +6155,10 @@ init_cumulative_args (CUMULATIVE_ARGS *cum,  /* Argument info to initialize */\n \t  cum->nregs = 0;\n \t  cum->sse_nregs = 0;\n \t  cum->mmx_nregs = 0;\n-\t  cum->warn_avx512f = 0;\n-\t  cum->warn_avx = 0;\n-\t  cum->warn_sse = 0;\n-\t  cum->warn_mmx = 0;\n+\t  cum->warn_avx512f = false;\n+\t  cum->warn_avx = false;\n+\t  cum->warn_sse = false;\n+\t  cum->warn_mmx = false;\n \t  return;\n \t}\n \n@@ -6234,19 +6234,17 @@ type_natural_mode (const_tree type, const CUMULATIVE_ARGS *cum,\n \t\t    static bool warnedavx512f;\n \t\t    static bool warnedavx512f_ret;\n \n-\t\t    if (cum\n-\t\t\t&& !warnedavx512f\n-\t\t\t&& cum->warn_avx512f)\n+\t\t    if (cum && cum->warn_avx512f && !warnedavx512f)\n \t\t      {\n-\t\t\twarnedavx512f = true;\n-\t\t\twarning (0, \"AVX512F vector argument without AVX512F \"\n-\t\t\t\t \"enabled changes the ABI\");\n+\t\t\tif (warning (OPT_Wpsabi, \"AVX512F vector argument \"\n+\t\t\t\t     \"without AVX512F enabled changes the ABI\"))\n+\t\t\t  warnedavx512f = true;\n \t\t      }\n-\t\t    else if (in_return & !warnedavx512f_ret)\n+\t\t    else if (in_return && !warnedavx512f_ret)\n \t\t      {\n-\t\t\twarnedavx512f_ret = true;\n-\t\t\twarning (0, \"AVX512F vector return without AVX512F \"\n-\t\t\t\t \"enabled changes the ABI\");\n+\t\t\tif (warning (OPT_Wpsabi, \"AVX512F vector return \"\n+\t\t\t\t     \"without AVX512F enabled changes the ABI\"))\n+\t\t\t  warnedavx512f_ret = true;\n \t\t      }\n \n \t\t    return TYPE_MODE (type);\n@@ -6256,19 +6254,17 @@ type_natural_mode (const_tree type, const CUMULATIVE_ARGS *cum,\n \t\t    static bool warnedavx;\n \t\t    static bool warnedavx_ret;\n \n-\t\t    if (cum\n-\t\t\t&& !warnedavx\n-\t\t\t&& cum->warn_avx)\n+\t\t    if (cum && cum->warn_avx && !warnedavx)\n \t\t      {\n-\t\t\twarnedavx = true;\n-\t\t\twarning (0, \"AVX vector argument without AVX \"\n-\t\t\t\t \"enabled changes the ABI\");\n+\t\t\tif (warning (OPT_Wpsabi, \"AVX vector argument \"\n+\t\t\t\t     \"without AVX enabled changes the ABI\"))\n+\t\t\t  warnedavx = true;\n \t\t      }\n-\t\t    else if (in_return & !warnedavx_ret)\n+\t\t    else if (in_return && !warnedavx_ret)\n \t\t      {\n-\t\t\twarnedavx_ret = true;\n-\t\t\twarning (0, \"AVX vector return without AVX \"\n-\t\t\t\t \"enabled changes the ABI\");\n+\t\t\tif (warning (OPT_Wpsabi, \"AVX vector return \"\n+\t\t\t\t     \"without AVX enabled changes the ABI\"))\n+\t\t\t  warnedavx_ret = true;\n \t\t      }\n \n \t\t    return TYPE_MODE (type);\n@@ -6279,41 +6275,35 @@ type_natural_mode (const_tree type, const CUMULATIVE_ARGS *cum,\n \t\t    static bool warnedsse;\n \t\t    static bool warnedsse_ret;\n \n-\t\t    if (cum\n-\t\t\t&& !warnedsse\n-\t\t\t&& cum->warn_sse)\n+\t\t    if (cum && cum->warn_sse && !warnedsse)\n \t\t      {\n-\t\t\twarnedsse = true;\n-\t\t\twarning (0, \"SSE vector argument without SSE \"\n-\t\t\t\t \"enabled changes the ABI\");\n+\t\t\tif (warning (OPT_Wpsabi, \"SSE vector argument \"\n+\t\t\t\t     \"without SSE enabled changes the ABI\"))\n+\t\t\t  warnedsse = true;\n \t\t      }\n-\t\t    else if (!TARGET_64BIT\n-\t\t\t     && in_return\n-\t\t\t     & !warnedsse_ret)\n+\t\t    else if (!TARGET_64BIT && in_return && !warnedsse_ret)\n \t\t      {\n-\t\t\twarnedsse_ret = true;\n-\t\t\twarning (0, \"SSE vector return without SSE \"\n-\t\t\t\t \"enabled changes the ABI\");\n+\t\t\tif (warning (OPT_Wpsabi, \"SSE vector return \"\n+\t\t\t\t     \"without SSE enabled changes the ABI\"))\n+\t\t\t  warnedsse_ret = true;\n \t\t      }\n \t\t  }\n \t\telse if ((size == 8 && !TARGET_64BIT) && !TARGET_MMX)\n \t\t  {\n \t\t    static bool warnedmmx;\n \t\t    static bool warnedmmx_ret;\n \n-\t\t    if (cum\n-\t\t\t&& !warnedmmx\n-\t\t\t&& cum->warn_mmx)\n+\t\t    if (cum && cum->warn_mmx && !warnedmmx)\n \t\t      {\n-\t\t\twarnedmmx = true;\n-\t\t\twarning (0, \"MMX vector argument without MMX \"\n-\t\t\t\t \"enabled changes the ABI\");\n+\t\t\tif (warning (OPT_Wpsabi, \"MMX vector argument \"\n+\t\t\t\t     \"without MMX enabled changes the ABI\"))\n+\t\t\t  warnedmmx = true;\n \t\t      }\n-\t\t    else if (in_return & !warnedmmx_ret)\n+\t\t    else if (in_return && !warnedmmx_ret)\n \t\t      {\n-\t\t\twarnedmmx_ret = true;\n-\t\t\twarning (0, \"MMX vector return without MMX \"\n-\t\t\t\t \"enabled changes the ABI\");\n+\t\t\tif (warning (OPT_Wpsabi, \"MMX vector return \"\n+\t\t\t\t     \"without MMX enabled changes the ABI\"))\n+\t\t\t  warnedmmx_ret = true;\n \t\t      }\n \t\t  }\n \t\treturn mode;"}, {"sha": "3cf924bea53760b06fa4e31de1813f5a3e29d723", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6aa5b4b87e30d82f34088b9c47a3542ca6c2e438", "patch": "@@ -1,3 +1,12 @@\n+2014-02-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/59794\n+\t* gcc.target/i386/pr39162.c: Add dg-prune-output.\n+\t(dg-options): Remove -Wno-psabi.\n+\t* gcc.target/i386/59794-2.c: Ditto.\n+\t* gcc.target/i386/60205-1.c: Ditto.\n+\t* gcc.target/i386/sse-5.c: Ditto.\n+\n 2014-02-18  Nick Clifton  <nickc@redhat.com>\n \n \t* gcc.dg/graphite/pr46966.c: Only run on 32-bit+ targets."}, {"sha": "efb46deae7c6273fb371d0406c73e7ce4784068f", "filename": "gcc/testsuite/gcc.target/i386/pr39162.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39162.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39162.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39162.c?ref=6aa5b4b87e30d82f34088b9c47a3542ca6c2e438", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -Wno-psabi -msse2 -mno-avx\" } */\n+/* { dg-prune-output \"ABI for passing parameters\" } */\n+/* { dg-options \"-O2 -msse2 -mno-avx\" } */\n /* { dg-additional-options \"-mabi=sysv\" { target x86_64-*-mingw* } } */\n \n typedef long long __m256i __attribute__ ((__vector_size__ (32), __may_alias__));"}, {"sha": "f13998214e3764c60f9e12389629f386fb695f60", "filename": "gcc/testsuite/gcc.target/i386/pr59794-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59794-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59794-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59794-2.c?ref=6aa5b4b87e30d82f34088b9c47a3542ca6c2e438", "patch": "@@ -1,5 +1,6 @@\n /* PR target/59794 */\n-/* { dg-options \"-Wno-psabi -O2 -mno-sse\" } */\n+/* { dg-prune-output \"ABI for passing parameters\" } */\n+/* { dg-options \"-O2 -mno-sse\" } */\n /* { dg-skip-if \"no SSE vector\" { *-*-mingw* } } */\n \n typedef double __v2df __attribute__ ((__vector_size__ (16)));"}, {"sha": "a65893c63b7bb9fd1df97f4530b320f9a48a9cd8", "filename": "gcc/testsuite/gcc.target/i386/pr59794-3.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59794-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59794-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59794-3.c?ref=6aa5b4b87e30d82f34088b9c47a3542ca6c2e438", "patch": "@@ -1,5 +1,6 @@\n /* PR target/59794 */\n-/* { dg-options \"-O2 -mno-avx -Wno-psabi\" } */\n+/* { dg-prune-output \"ABI for passing parameters\" } */\n+/* { dg-options \"-O2 -mno-avx\" } */\n /* { dg-skip-if \"no AVX vector\" { *-*-mingw* } } */\n \n typedef int __v8si __attribute__ ((__vector_size__ (32)));"}, {"sha": "259959a8e3e1c91ad85d8b915c07bb3d2fd4bc9c", "filename": "gcc/testsuite/gcc.target/i386/pr60205-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr60205-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr60205-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr60205-1.c?ref=6aa5b4b87e30d82f34088b9c47a3542ca6c2e438", "patch": "@@ -1,5 +1,6 @@\n /* PR target/60205 */\n-/* { dg-options \"-O2 -mno-avx512f -Wno-psabi\" } */\n+/* { dg-prune-output \"ABI for passing parameters\" } */\n+/* { dg-options \"-O2 -mno-avx512f\" } */\n /* { dg-skip-if \"no AVX512F vector\" { *-*-mingw* } } */\n \n typedef int __v16si __attribute__ ((__vector_size__ (64)));"}, {"sha": "8f5d9bc24480c158604a7b6bef1bf2ff00aee94e", "filename": "gcc/testsuite/gcc.target/i386/sse-5.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa5b4b87e30d82f34088b9c47a3542ca6c2e438/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-5.c?ref=6aa5b4b87e30d82f34088b9c47a3542ca6c2e438", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target ia32 } */\n-/* { dg-options \"-Winline -Wno-psabi -O2 -mno-sse\" } */\n+/* { dg-prune-output \"ABI for passing parameters\" } */\n+/* { dg-options \"-Winline -O2 -mno-sse\" } */\n \n typedef double v2df __attribute__ ((vector_size (16)));\n v2df p;"}]}