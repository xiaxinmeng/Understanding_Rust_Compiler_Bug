{"sha": "66c0b347bc7f9c2006901ca903c052046b1d7256", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZjMGIzNDdiYzdmOWMyMDA2OTAxY2E5MDNjMDUyMDQ2YjFkNzI1Ng==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1999-03-10T11:07:32Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1999-03-10T11:07:32Z"}, "message": "sh.c (fp_arith_reg_operand): Actually test if reg is suitable for FP arithmetic.\n\n\t* sh.c (fp_arith_reg_operand): Actually test if reg is suitable\n\tfor FP arithmetic.  Changed caller.\n\t* sh.md (subsf3, subsf_i): Use fp_arith_reg_operand.\n\nFrom-SVN: r25670", "tree": {"sha": "3ba789ca17f8b684a0ddaf4ef0ab79e3f20eeed4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ba789ca17f8b684a0ddaf4ef0ab79e3f20eeed4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66c0b347bc7f9c2006901ca903c052046b1d7256", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66c0b347bc7f9c2006901ca903c052046b1d7256", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66c0b347bc7f9c2006901ca903c052046b1d7256", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66c0b347bc7f9c2006901ca903c052046b1d7256/comments", "author": null, "committer": null, "parents": [{"sha": "0c7f225984c0ef7a41393858ba8bdd473f17168c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c7f225984c0ef7a41393858ba8bdd473f17168c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c7f225984c0ef7a41393858ba8bdd473f17168c"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "93012fe9303f4549d70f2c0091d5ee64e7d7f0b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c0b347bc7f9c2006901ca903c052046b1d7256/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c0b347bc7f9c2006901ca903c052046b1d7256/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66c0b347bc7f9c2006901ca903c052046b1d7256", "patch": "@@ -1,3 +1,9 @@\n+Wed Mar 10 19:04:31 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* sh.c (fp_arith_reg_operand): Actually test if reg is suitable\n+\tfor FP arithmetic.  Changed caller.\n+\t* sh.md (subsf3, subsf_i): Use fp_arith_reg_operand.\n+\n Wed Mar 10 18:56:31 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* reload1.c (choose_reload_regs): When inheriting from the frame"}, {"sha": "41c5ac5ecac06c049000f796c2c6cad974576dc3", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c0b347bc7f9c2006901ca903c052046b1d7256/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c0b347bc7f9c2006901ca903c052046b1d7256/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=66c0b347bc7f9c2006901ca903c052046b1d7256", "patch": "@@ -4192,8 +4192,8 @@ fp_arith_reg_operand (op, mode)\n       else\n \treturn 1;\n \n-      return (regno != T_REG && regno != PR_REG && regno > 15\n-\t      && regno != MACH_REG && regno != MACL_REG);\n+      return (regno >= FIRST_PSEUDO_REGISTER\n+\t      || (regno >= FIRST_FP_REG && regno <= LAST_FP_REG));\n     }\n   return 0;\n }\n@@ -4208,7 +4208,21 @@ fp_extended_operand (op, mode)\n       op = XEXP (op, 0);\n       mode = GET_MODE (op);\n     }\n-  return fp_arith_reg_operand (op, mode);\n+  if (register_operand (op, mode))\n+    {\n+      int regno;\n+\n+      if (GET_CODE (op) == REG)\n+\tregno = REGNO (op);\n+      else if (GET_CODE (op) == SUBREG && GET_CODE (SUBREG_REG (op)) == REG)\n+\tregno = REGNO (SUBREG_REG (op));\n+      else\n+\treturn 1;\n+\n+      return (regno != T_REG && regno != PR_REG && regno > 15\n+\t      && regno != MACH_REG && regno != MACL_REG);\n+    }\n+  return 0;\n }\n \n /* Returns 1 if OP is a valid source operand for an arithmetic insn.  */"}, {"sha": "55c5745b6b12dd669639307e9638e1f4f491230f", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c0b347bc7f9c2006901ca903c052046b1d7256/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c0b347bc7f9c2006901ca903c052046b1d7256/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=66c0b347bc7f9c2006901ca903c052046b1d7256", "patch": "@@ -3870,16 +3870,16 @@\n   [(set_attr \"type\" \"fp\")])\n \n (define_expand \"subsf3\"\n-  [(match_operand:SF 0 \"arith_reg_operand\" \"\")\n-   (match_operand:SF 1 \"arith_reg_operand\" \"\")\n-   (match_operand:SF 2 \"arith_reg_operand\" \"\")]\n+  [(match_operand:SF 0 \"fp_arith_reg_operand\" \"\")\n+   (match_operand:SF 1 \"fp_arith_reg_operand\" \"\")\n+   (match_operand:SF 2 \"fp_arith_reg_operand\" \"\")]\n   \"TARGET_SH3E\"\n   \"{ expand_sf_binop (&gen_subsf3_i, operands); DONE; }\")\n \n (define_insn \"subsf3_i\"\n-  [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n-\t(minus:SF (match_operand:SF 1 \"arith_reg_operand\" \"0\")\n-\t\t (match_operand:SF 2 \"arith_reg_operand\" \"f\")))\n+  [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n+\t(minus:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"0\")\n+\t\t (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\")))\n    (use (match_operand:PSI 3 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH3E\"\n   \"fsub\t%2,%0\""}]}