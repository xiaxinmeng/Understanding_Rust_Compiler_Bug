{"sha": "3db4440d4c79f0a21c6574482c85bbd44a9fd8a6", "node_id": "C_kwDOANBUbNoAKDNkYjQ0NDBkNGM3OWYwYTIxYzY1NzQ0ODJjODViYmQ0NGE5ZmQ4YTY", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2021-10-20T16:11:52Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2021-10-20T16:11:52Z"}, "message": "AArch64: Combine cmeq 0 + not into cmtst\n\nThis turns a bitwise inverse of an equality comparison with 0 into a compare of\nbitwise nonzero (cmtst).\n\nWe already have one pattern for cmsts, this adds an additional one which does\nnot require an additional bitwise and.\n\ni.e.\n\n#include <arm_neon.h>\n\nuint8x8_t bar(int16x8_t abs_row0, int16x8_t row0) {\n  uint16x8_t row0_diff =\n    vreinterpretq_u16_s16(veorq_s16(abs_row0, vshrq_n_s16(row0, 15)));\n  uint8x8_t abs_row0_gt0 =\n    vmovn_u16(vcgtq_u16(vreinterpretq_u16_s16(abs_row0), vdupq_n_u16(0)));\n  return abs_row0_gt0;\n}\n\nnow generates:\n\nbar:\n        cmtst   v0.8h, v0.8h, v0.8h\n        xtn     v0.8b, v0.8h\n        ret\n\ninstead of:\n\nbar:\n        cmeq    v0.8h, v0.8h, #0\n        not     v0.16b, v0.16b\n        xtn     v0.8b, v0.8h\n        ret\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64-simd.md (*aarch64_cmtst_same_<mode>): New.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/aarch64/mvn-cmeq0-1.c: New test.", "tree": {"sha": "afb2297f3904fd0894910602ad6b3c8cd757bc8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afb2297f3904fd0894910602ad6b3c8cd757bc8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3db4440d4c79f0a21c6574482c85bbd44a9fd8a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3db4440d4c79f0a21c6574482c85bbd44a9fd8a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3db4440d4c79f0a21c6574482c85bbd44a9fd8a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3db4440d4c79f0a21c6574482c85bbd44a9fd8a6/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52da40ffe2aaf086f622e513cc99a64bc7573a67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52da40ffe2aaf086f622e513cc99a64bc7573a67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52da40ffe2aaf086f622e513cc99a64bc7573a67"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "29f381728a3b3d28bcd6a1002ba398c8b87713d2", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3db4440d4c79f0a21c6574482c85bbd44a9fd8a6/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3db4440d4c79f0a21c6574482c85bbd44a9fd8a6/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=3db4440d4c79f0a21c6574482c85bbd44a9fd8a6", "patch": "@@ -6620,6 +6620,23 @@\n   [(set_attr \"type\" \"neon_tst<q>\")]\n )\n \n+;; One can also get a cmtsts by having to combine a\n+;; not (neq (eq x 0)) in which case you rewrite it to\n+;; a comparison against itself\n+\n+(define_insn \"*aarch64_cmtst_same_<mode>\"\n+  [(set (match_operand:<V_INT_EQUIV> 0 \"register_operand\" \"=w\")\n+\t(plus:<V_INT_EQUIV>\n+\t  (eq:<V_INT_EQUIV>\n+\t    (match_operand:VDQ_I 1 \"register_operand\" \"w\")\n+\t    (match_operand:VDQ_I 2 \"aarch64_simd_imm_zero\"))\n+\t  (match_operand:<V_INT_EQUIV> 3 \"aarch64_simd_imm_minus_one\")))\n+  ]\n+  \"TARGET_SIMD\"\n+  \"cmtst\\t%<v>0<Vmtype>, %<v>1<Vmtype>, %<v>1<Vmtype>\"\n+  [(set_attr \"type\" \"neon_tst<q>\")]\n+)\n+\n (define_insn_and_split \"aarch64_cmtstdi\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=w,r\")\n \t(neg:DI"}, {"sha": "27b3909ca914236152f3a85744c7603f5b70299f", "filename": "gcc/testsuite/gcc.target/aarch64/mvn-cmeq0-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3db4440d4c79f0a21c6574482c85bbd44a9fd8a6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fmvn-cmeq0-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3db4440d4c79f0a21c6574482c85bbd44a9fd8a6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fmvn-cmeq0-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fmvn-cmeq0-1.c?ref=3db4440d4c79f0a21c6574482c85bbd44a9fd8a6", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O --save-temps\" } */\n+\n+#include <arm_neon.h>\n+\n+uint8x8_t bar(int16x8_t abs_row0, int16x8_t row0) {\n+  uint16x8_t row0_diff =\n+    vreinterpretq_u16_s16(veorq_s16(abs_row0, vshrq_n_s16(row0, 15)));\n+  uint8x8_t abs_row0_gt0 =\n+    vmovn_u16(vcgtq_u16(vreinterpretq_u16_s16(abs_row0), vdupq_n_u16(0)));\n+  return abs_row0_gt0;\n+}\n+\n+\n+/* { dg-final { scan-assembler-times {\\tcmtst\\t} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tcmeq\\t} } } */\n+/* { dg-final { scan-assembler-not {\\tnot\\t} } } */"}]}