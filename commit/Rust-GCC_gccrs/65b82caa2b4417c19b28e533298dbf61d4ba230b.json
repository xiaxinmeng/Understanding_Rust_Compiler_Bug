{"sha": "65b82caa2b4417c19b28e533298dbf61d4ba230b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjViODJjYWEyYjQ0MTdjMTliMjhlNTMzMjk4ZGJmNjFkNGJhMjMwYg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2009-01-07T14:56:14Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-01-07T14:56:14Z"}, "message": "AVX Programming Reference (December, 2008)\n\ngcc/\n\n2009-01-07  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tAVX Programming Reference (December, 2008)\n\t* config/i386/avxintrin.h (_mm256_stream_si256): New.\n\t(_mm256_stream_pd): Likewise.\n\t(_mm256_stream_ps): Likewise.\n\n\t* config/i386/i386.c (ix86_builtins): Add IX86_BUILTIN_MOVNTDQ256,\n\tIX86_BUILTIN_MOVNTPD256 and IX86_BUILTIN_MOVNTPS256.\n\t(ix86_special_builtin_type): Add VOID_FTYPE_PV4DI_V4DI.\n\t(bdesc_special_args): Add __builtin_ia32_movntdq256,\n\t__builtin_ia32_movntpd256 and __builtin_ia32_movntps256.\n\t(ix86_init_mmx_sse_builtins): Handle VOID_FTYPE_PV4DI_V4DI.\n\t(ix86_expand_special_args_builtin): Likewise.\n\n\t* config/i386/sse.md (AVXMODEDI): New.\n\t(avx_movnt<mode>): Likewise.\n\t(avx_movnt<mode>): Likewise.\n\t(<sse>_movnt<mode>): Remove AVX support.\n\t(sse2_movntv2di): Likewise.\n\ngcc/testsuite/\n\n2009-01-07  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tAVX Programming Reference (December, 2008)\n\t* gcc.target/i386/avx-vmovntdq-256-1.c: New.\n\t* gcc.target/i386/avx-vmovntpd-256-1.c: Likewise.\n\t* gcc.target/i386/avx-vmovntps-256-1.c: Likewise.\n\n\t* gcc.target/i386/sse2-movntdq-1.c (TEST): Align array to 16byte.\n\t* gcc.target/i386/sse2-movntpd-1.c (TEST): Likewise.\n\nFrom-SVN: r143157", "tree": {"sha": "3f6048bf1b670ec0beb74ae98d8e24088e8d50dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f6048bf1b670ec0beb74ae98d8e24088e8d50dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65b82caa2b4417c19b28e533298dbf61d4ba230b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65b82caa2b4417c19b28e533298dbf61d4ba230b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65b82caa2b4417c19b28e533298dbf61d4ba230b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65b82caa2b4417c19b28e533298dbf61d4ba230b/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8877b5a9bd57107ef369d266c0a276515d2f0987", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8877b5a9bd57107ef369d266c0a276515d2f0987", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8877b5a9bd57107ef369d266c0a276515d2f0987"}], "stats": {"total": 179, "additions": 173, "deletions": 6}, "files": [{"sha": "96013c1335d8ffbf2031e68956ee1eaee2236699", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=65b82caa2b4417c19b28e533298dbf61d4ba230b", "patch": "@@ -1,3 +1,24 @@\n+2009-01-07  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tAVX Programming Reference (December, 2008)\n+\t* config/i386/avxintrin.h (_mm256_stream_si256): New.\n+\t(_mm256_stream_pd): Likewise.\n+\t(_mm256_stream_ps): Likewise.\n+\n+\t* config/i386/i386.c (ix86_builtins): Add IX86_BUILTIN_MOVNTDQ256,\n+\tIX86_BUILTIN_MOVNTPD256 and IX86_BUILTIN_MOVNTPS256.\n+\t(ix86_special_builtin_type): Add VOID_FTYPE_PV4DI_V4DI.\n+\t(bdesc_special_args): Add __builtin_ia32_movntdq256,\n+\t__builtin_ia32_movntpd256 and __builtin_ia32_movntps256.\n+\t(ix86_init_mmx_sse_builtins): Handle VOID_FTYPE_PV4DI_V4DI.\n+\t(ix86_expand_special_args_builtin): Likewise.\n+\n+\t* config/i386/sse.md (AVXMODEDI): New.\n+\t(avx_movnt<mode>): Likewise.\n+\t(avx_movnt<mode>): Likewise.\n+\t(<sse>_movnt<mode>): Remove AVX support.\n+\t(sse2_movntv2di): Likewise.\n+\n 2009-01-07  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/38751"}, {"sha": "2529c758fad349cd229da40349aca5268cb4f926", "filename": "gcc/config/i386/avxintrin.h", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2Fconfig%2Fi386%2Favxintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2Fconfig%2Fi386%2Favxintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favxintrin.h?ref=65b82caa2b4417c19b28e533298dbf61d4ba230b", "patch": "@@ -968,6 +968,24 @@ _mm256_lddqu_si256 (__m256i const *__P)\n   return (__m256i) __builtin_ia32_lddqu256 ((char const *)__P);\n }\n \n+extern __inline void __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mm256_stream_si256 (__m256i *__A, __m256i __B)\n+{\n+  __builtin_ia32_movntdq256 ((__v4di *)__A, (__v4di)__B);\n+}\n+\n+extern __inline void __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mm256_stream_pd (double *__A, __m256d __B)\n+{\n+  __builtin_ia32_movntpd256 (__A, (__v4df)__B);\n+}\n+\n+extern __inline void __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mm256_stream_ps (float *__P, __m256 __A)\n+{\n+  __builtin_ia32_movntps256 (__P, (__v8sf)__A);\n+}\n+\n extern __inline __m256 __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n _mm256_rcp_ps (__m256 __A)\n {"}, {"sha": "df2be1c8e55212055423daf734614d9aafca48af", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=65b82caa2b4417c19b28e533298dbf61d4ba230b", "patch": "@@ -19942,6 +19942,9 @@ enum ix86_builtins\n   IX86_BUILTIN_STOREUPD256,\n   IX86_BUILTIN_STOREUPS256,\n   IX86_BUILTIN_LDDQU256,\n+  IX86_BUILTIN_MOVNTDQ256,\n+  IX86_BUILTIN_MOVNTPD256,\n+  IX86_BUILTIN_MOVNTPS256,\n   IX86_BUILTIN_LOADDQU256,\n   IX86_BUILTIN_STOREDQU256,\n   IX86_BUILTIN_MASKLOADPD,\n@@ -20413,6 +20416,7 @@ enum ix86_special_builtin_type\n   V2DF_FTYPE_PCV2DF_V2DF,\n   V2DI_FTYPE_PV2DI,\n   VOID_FTYPE_PV2SF_V4SF,\n+  VOID_FTYPE_PV4DI_V4DI,\n   VOID_FTYPE_PV2DI_V2DI,\n   VOID_FTYPE_PCHAR_V32QI,\n   VOID_FTYPE_PCHAR_V16QI,\n@@ -20652,6 +20656,10 @@ static const struct builtin_description bdesc_special_args[] =\n   { OPTION_MASK_ISA_AVX, CODE_FOR_avx_movdqu256, \"__builtin_ia32_storedqu256\", IX86_BUILTIN_STOREDQU256, UNKNOWN, (int) VOID_FTYPE_PCHAR_V32QI },\n   { OPTION_MASK_ISA_AVX, CODE_FOR_avx_lddqu256, \"__builtin_ia32_lddqu256\", IX86_BUILTIN_LDDQU256, UNKNOWN, (int) V32QI_FTYPE_PCCHAR },\n \n+  { OPTION_MASK_ISA_AVX, CODE_FOR_avx_movntv4di, \"__builtin_ia32_movntdq256\", IX86_BUILTIN_MOVNTDQ256, UNKNOWN, (int) VOID_FTYPE_PV4DI_V4DI },\n+  { OPTION_MASK_ISA_AVX, CODE_FOR_avx_movntv4df, \"__builtin_ia32_movntpd256\", IX86_BUILTIN_MOVNTPD256, UNKNOWN, (int) VOID_FTYPE_PDOUBLE_V4DF },\n+  { OPTION_MASK_ISA_AVX, CODE_FOR_avx_movntv8sf, \"__builtin_ia32_movntps256\", IX86_BUILTIN_MOVNTPS256, UNKNOWN, (int) VOID_FTYPE_PFLOAT_V8SF },\n+\n   { OPTION_MASK_ISA_AVX, CODE_FOR_avx_maskloadpd, \"__builtin_ia32_maskloadpd\", IX86_BUILTIN_MASKLOADPD, UNKNOWN, (int) V2DF_FTYPE_PCV2DF_V2DF },\n   { OPTION_MASK_ISA_AVX, CODE_FOR_avx_maskloadps, \"__builtin_ia32_maskloadps\", IX86_BUILTIN_MASKLOADPS, UNKNOWN, (int) V4SF_FTYPE_PCV4SF_V4SF },\n   { OPTION_MASK_ISA_AVX, CODE_FOR_avx_maskloadpd256, \"__builtin_ia32_maskloadpd256\", IX86_BUILTIN_MASKLOADPD256, UNKNOWN, (int) V4DF_FTYPE_PCV4DF_V4DF },\n@@ -22183,6 +22191,11 @@ ix86_init_mmx_sse_builtins (void)\n \t\t\t\tV8SI_type_node, V4SI_type_node,\n \t\t\t\tinteger_type_node,\n \t\t\t\tNULL_TREE);\n+  tree pv4di_type_node = build_pointer_type (V4DI_type_node);\n+  tree void_ftype_pv4di_v4di\n+    = build_function_type_list (void_type_node,\n+\t\t\t\tpv4di_type_node, V4DI_type_node,\n+\t\t\t\tNULL_TREE);\n   tree v8sf_ftype_v8sf_v4sf_int\n     = build_function_type_list (V8SF_type_node,\n \t\t\t\tV8SF_type_node, V4SF_type_node,\n@@ -22369,6 +22382,9 @@ ix86_init_mmx_sse_builtins (void)\n \tcase VOID_FTYPE_PV2SF_V4SF:\n \t  type = void_ftype_pv2sf_v4sf;\n \t  break;\n+\tcase VOID_FTYPE_PV4DI_V4DI:\n+\t  type = void_ftype_pv4di_v4di;\n+\t  break;\n \tcase VOID_FTYPE_PV2DI_V2DI:\n \t  type = void_ftype_pv2di_v2di;\n \t  break;\n@@ -24215,6 +24231,7 @@ ix86_expand_special_args_builtin (const struct builtin_description *d,\n       memory = 0;\n       break;\n     case VOID_FTYPE_PV2SF_V4SF:\n+    case VOID_FTYPE_PV4DI_V4DI:\n     case VOID_FTYPE_PV2DI_V2DI:\n     case VOID_FTYPE_PCHAR_V32QI:\n     case VOID_FTYPE_PCHAR_V16QI:"}, {"sha": "393a3161da6ef28549c6080258ee39e54e875ea0", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 27, "deletions": 4, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=65b82caa2b4417c19b28e533298dbf61d4ba230b", "patch": "@@ -35,6 +35,9 @@\n ;; All QI vector modes handled by AVX\n (define_mode_iterator AVXMODEQI [V32QI V16QI])\n \n+;; All DI vector modes handled by AVX\n+(define_mode_iterator AVXMODEDI [V4DI V2DI])\n+\n ;; All vector modes handled by AVX\n (define_mode_iterator AVXMODE [V16QI V8HI V4SI V2DI V4SF V2DF V32QI V16HI V8SI V4DI V8SF V4DF])\n \n@@ -383,26 +386,46 @@\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"mode\" \"TI\")])\n \n+(define_insn \"avx_movnt<mode>\"\n+  [(set (match_operand:AVXMODEF2P 0 \"memory_operand\" \"=m\")\n+\t(unspec:AVXMODEF2P\n+\t  [(match_operand:AVXMODEF2P 1 \"register_operand\" \"x\")]\n+\t  UNSPEC_MOVNT))]\n+  \"AVX_VEC_FLOAT_MODE_P (<MODE>mode)\"\n+  \"vmovntp<avxmodesuffixf2c>\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n (define_insn \"<sse>_movnt<mode>\"\n   [(set (match_operand:SSEMODEF2P 0 \"memory_operand\" \"=m\")\n \t(unspec:SSEMODEF2P\n \t  [(match_operand:SSEMODEF2P 1 \"register_operand\" \"x\")]\n \t  UNSPEC_MOVNT))]\n   \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\"\n-  \"%vmovntp<ssemodesuffixf2c>\\t{%1, %0|%0, %1}\"\n+  \"movntp<ssemodesuffixf2c>\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+(define_insn \"avx_movnt<mode>\"\n+  [(set (match_operand:AVXMODEDI 0 \"memory_operand\" \"=m\")\n+\t(unspec:AVXMODEDI\n+\t  [(match_operand:AVXMODEDI 1 \"register_operand\" \"x\")]\n+\t  UNSPEC_MOVNT))]\n+  \"TARGET_AVX\"\n+  \"vmovntdq\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"mode\" \"<avxvecmode>\")])\n+\n (define_insn \"sse2_movntv2di\"\n   [(set (match_operand:V2DI 0 \"memory_operand\" \"=m\")\n \t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"x\")]\n \t\t     UNSPEC_MOVNT))]\n   \"TARGET_SSE2\"\n-  \"%vmovntdq\\t{%1, %0|%0, %1}\"\n+  \"movntdq\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"prefix_data16\" \"1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"sse2_movntsi\""}, {"sha": "125ae6192eef78b53a25c98cedb51d3a3a920274", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=65b82caa2b4417c19b28e533298dbf61d4ba230b", "patch": "@@ -1,3 +1,13 @@\n+2009-01-07  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tAVX Programming Reference (December, 2008)\n+\t* gcc.target/i386/avx-vmovntdq-256-1.c: New.\n+\t* gcc.target/i386/avx-vmovntpd-256-1.c: Likewise.\n+\t* gcc.target/i386/avx-vmovntps-256-1.c: Likewise.\n+\n+\t* gcc.target/i386/sse2-movntdq-1.c (TEST): Align array to 16byte.\n+\t* gcc.target/i386/sse2-movntpd-1.c (TEST): Likewise.\n+\n 2009-01-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/38220"}, {"sha": "5caf34e6da0401a77374465ec74b8e31c535af19", "filename": "gcc/testsuite/gcc.target/i386/avx-vmovntdq-256-1.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vmovntdq-256-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vmovntdq-256-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vmovntdq-256-1.c?ref=65b82caa2b4417c19b28e533298dbf61d4ba230b", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target avx } */\n+/* { dg-options \"-O2 -mavx\" } */\n+\n+#include \"avx-check.h\"\n+\n+static void\n+__attribute__((noinline))\n+test (__m256i *p, __m256i s)\n+{\n+  return _mm256_stream_si256 (p, s); \n+}\n+\n+static void\n+avx_test (void)\n+{\n+  union256i_d u;\n+  int e[8] __attribute__ ((aligned(32))) = {1,1,1,1,1,1,1,1};\n+\n+  u.x = _mm256_set_epi32 (2434, 6845, 3789, 4683,\n+\t\t\t  4623, 2236, 8295, 1084);\n+\n+  test ((__m256i *)e, u.x);\n+  \n+  if (check_union256i_d (u, e))\n+    abort ();\n+}"}, {"sha": "f17deafafc34c6aee9c4d1839e60504ee6125589", "filename": "gcc/testsuite/gcc.target/i386/avx-vmovntpd-256-1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vmovntpd-256-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vmovntpd-256-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vmovntpd-256-1.c?ref=65b82caa2b4417c19b28e533298dbf61d4ba230b", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target avx } */\n+/* { dg-options \"-O2 -mavx\" } */\n+\n+#include \"avx-check.h\"\n+\n+static void \n+__attribute__((noinline))\n+test (double *p, __m256d s)\n+{\n+  return _mm256_stream_pd (p, s); \n+}\n+\n+static void\n+avx_test (void)\n+{\n+  union256d u;\n+  double e[4] __attribute__ ((aligned(32))) = {1,1,1,1};\n+   \n+  u.x = _mm256_set_pd (2134.3343, 1234.635654, -13443.35, 43.35345);\n+  test (e, u.x); \n+   \n+  if (check_union256d (u, e))\n+    abort ();\n+}"}, {"sha": "9f79403f4f9f963572371077fde239332a8f4876", "filename": "gcc/testsuite/gcc.target/i386/avx-vmovntps-256-1.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vmovntps-256-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vmovntps-256-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vmovntps-256-1.c?ref=65b82caa2b4417c19b28e533298dbf61d4ba230b", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target avx } */\n+/* { dg-options \"-O2 -mavx\" } */\n+\n+#include \"avx-check.h\"\n+\n+static void \n+__attribute__((noinline))\n+test (float *p, __m256 s)\n+{\n+  return _mm256_stream_ps (p, s); \n+}\n+\n+static void\n+avx_test (void)\n+{\n+  union256 u;\n+  float e[8] __attribute__ ((aligned(32)));\n+\n+  u.x = _mm256_set_ps (24.43, 68.346, -43.35, 546.46,\n+\t\t       46.9, -2.78, 82.9, -0.4);\n+  test (e, u.x); \n+  \n+  if (check_union256 (u, e))\n+    abort ();\n+}"}, {"sha": "d36eaef488cb265c67c6a7ea29a0f82d92431b79", "filename": "gcc/testsuite/gcc.target/i386/sse2-movntdq-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-movntdq-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-movntdq-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-movntdq-1.c?ref=65b82caa2b4417c19b28e533298dbf61d4ba230b", "patch": "@@ -24,7 +24,7 @@ static void\n TEST (void)\n {\n   union128i_d u;\n-  int e[4] __attribute__ ((aligned(32)));\n+  int e[4] __attribute__ ((aligned(16)));\n \n   u.x = _mm_set_epi32 (21, 34, 334, 8567);\n "}, {"sha": "edcb90c7b2335afe3fd882bff13aaee344f51053", "filename": "gcc/testsuite/gcc.target/i386/sse2-movntpd-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-movntpd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b82caa2b4417c19b28e533298dbf61d4ba230b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-movntpd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-movntpd-1.c?ref=65b82caa2b4417c19b28e533298dbf61d4ba230b", "patch": "@@ -24,7 +24,7 @@ static void\n TEST (void)\n {\n   union128d u;\n-  double e[2] __attribute__ ((aligned(32)));\n+  double e[2] __attribute__ ((aligned(16)));\n    \n   u.x = _mm_set_pd (2134.3343,1234.635654);\n   test (e, u.x); "}]}