{"sha": "333748297bddb622fad377e66dc26e48e75add69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMzNzQ4Mjk3YmRkYjYyMmZhZDM3N2U2NmRjMjZlNDhlNzVhZGQ2OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-29T10:12:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-29T10:12:51Z"}, "message": "[multiple changes]\n\n2009-04-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_elim.adb (Check_Eliminated): Handle new improved eliminate\n\tinformation: no need for full scope check.\n\t(Eliminate_Error): Do not emit error in a generic context.\n\n2009-04-29  Ed Falis  <falis@adacore.com>\n\n\t* adaint.c (__gnat_rmdir): return error code if VTHREADS is defined.\n\tVxWorks 653 POS does not support rmdir.\n\n2009-04-29  Matteo Bordin  <bordin@adacore.com>\n\n\t* s-stausa.adb, s-stausa.ads: Get_Usage_Range: changing the way\n\tresults are printed.\n\nFrom-SVN: r146943", "tree": {"sha": "db850cccda7e03723bfa6457c9bcc78f290921f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db850cccda7e03723bfa6457c9bcc78f290921f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/333748297bddb622fad377e66dc26e48e75add69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/333748297bddb622fad377e66dc26e48e75add69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/333748297bddb622fad377e66dc26e48e75add69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/333748297bddb622fad377e66dc26e48e75add69/comments", "author": null, "committer": null, "parents": [{"sha": "91c2cbdb6847c9c1bbf1c0ce9d7e2f9bd7e3e5ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91c2cbdb6847c9c1bbf1c0ce9d7e2f9bd7e3e5ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91c2cbdb6847c9c1bbf1c0ce9d7e2f9bd7e3e5ab"}], "stats": {"total": 131, "additions": 61, "deletions": 70}, "files": [{"sha": "421dc7e0efb2ec3ab74426983a2440402a7612fa", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333748297bddb622fad377e66dc26e48e75add69/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333748297bddb622fad377e66dc26e48e75add69/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=333748297bddb622fad377e66dc26e48e75add69", "patch": "@@ -1,3 +1,19 @@\n+2009-04-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_elim.adb (Check_Eliminated): Handle new improved eliminate\n+\tinformation: no need for full scope check.\n+\t(Eliminate_Error): Do not emit error in a generic context.\n+\n+2009-04-29  Ed Falis  <falis@adacore.com>\n+\n+\t* adaint.c (__gnat_rmdir): return error code if VTHREADS is defined.\n+\tVxWorks 653 POS does not support rmdir.\n+\n+2009-04-29  Matteo Bordin  <bordin@adacore.com>\n+\n+\t* s-stausa.adb, s-stausa.ads: Get_Usage_Range: changing the way\n+\tresults are printed.\n+\n 2009-04-29  Arnaud Charlet  <charlet@adacore.com>\n \n \t* s-taskin.adb (Initialize): Remove pragma Warnings Off and remove"}, {"sha": "83da18b4e5bbe424b6a312411e04226904db8412", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333748297bddb622fad377e66dc26e48e75add69/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333748297bddb622fad377e66dc26e48e75add69/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=333748297bddb622fad377e66dc26e48e75add69", "patch": "@@ -747,6 +747,9 @@ __gnat_rmdir (char *path)\n     S2WSC (wpath, path, GNAT_MAX_PATH_LEN);\n     return _trmdir (wpath);\n   }\n+#elif defined (VTHREADS)\n+  /* rmdir not available */\n+  return -1;\n #else\n   return rmdir (path);\n #endif"}, {"sha": "dfa8a1fc6bb64f5b3327c765b85f93664e73f960", "filename": "gcc/ada/s-stausa.adb", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333748297bddb622fad377e66dc26e48e75add69/gcc%2Fada%2Fs-stausa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333748297bddb622fad377e66dc26e48e75add69/gcc%2Fada%2Fs-stausa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stausa.adb?ref=333748297bddb622fad377e66dc26e48e75add69", "patch": "@@ -173,7 +173,7 @@ package body System.Stack_Usage is\n    Index_Str       : constant String  := \"Index\";\n    Task_Name_Str   : constant String  := \"Task Name\";\n    Stack_Size_Str  : constant String  := \"Stack Size\";\n-   Actual_Size_Str : constant String  := \"Stack usage [Value +/- Variation]\";\n+   Actual_Size_Str : constant String  := \"Stack usage\";\n \n    function Get_Usage_Range (Result : Task_Result) return String;\n    --  Return string representing the range of possible result of stack usage\n@@ -203,10 +203,10 @@ package body System.Stack_Usage is\n       Result_Array := new Result_Array_Type (1 .. Buffer_Size);\n       Result_Array.all :=\n         (others =>\n-           (Task_Name   => (others => ASCII.NUL),\n+           (Task_Name => (others => ASCII.NUL),\n             Variation => 0,\n-            Value => 0,\n-            Max_Size    => 0));\n+            Value     => 0,\n+            Max_Size  => 0));\n \n       --  Set the Is_Enabled flag to true, so that the task wrapper knows that\n       --  it has to handle dynamic stack analysis\n@@ -327,12 +327,11 @@ package body System.Stack_Usage is\n       --  Initialize the analyzer fields\n \n       Analyzer.Bottom_Of_Stack := Bottom;\n-      Analyzer.Stack_Size := My_Stack_Size;\n-      Analyzer.Pattern_Size := Max_Pattern_Size;\n-      Analyzer.Pattern := Pattern;\n-      Analyzer.Result_Id := Next_Id;\n-\n-      Analyzer.Task_Name := (others => ' ');\n+      Analyzer.Stack_Size      := My_Stack_Size;\n+      Analyzer.Pattern_Size    := Max_Pattern_Size;\n+      Analyzer.Pattern         := Pattern;\n+      Analyzer.Result_Id       := Next_Id;\n+      Analyzer.Task_Name       := (others => ' ');\n \n       --  Compute the task name, and truncate if bigger than Task_Name_Length\n \n@@ -415,10 +414,11 @@ package body System.Stack_Usage is\n \n    function Get_Usage_Range (Result : Task_Result) return String is\n       Variation_Used_Str : constant String :=\n-        Natural'Image (Result.Variation);\n-      Value_Used_Str : constant String := Natural'Image (Result.Value);\n+                             Natural'Image (Result.Variation);\n+      Value_Used_Str     : constant String :=\n+                             Natural'Image (Result.Value);\n    begin\n-      return \"[\" & Value_Used_Str & \" +/- \" & Variation_Used_Str & \"]\";\n+      return Value_Used_Str & \" +/- \" & Variation_Used_Str;\n    end Get_Usage_Range;\n \n    ---------------------\n@@ -488,8 +488,8 @@ package body System.Stack_Usage is\n          for J in Result_Array'Range loop\n             exit when J >= Next_Id;\n \n-            if Result_Array (J).Value\n-              > Result_Array (Max_Actual_Use_Result_Id).Value\n+            if Result_Array (J).Value >\n+               Result_Array (Max_Actual_Use_Result_Id).Value\n             then\n                Max_Actual_Use_Result_Id := J;\n             end if;\n@@ -569,15 +569,18 @@ package body System.Stack_Usage is\n \n    begin\n       if Analyzer.Pattern_Size = 0 then\n+\n          --  If we have that result, it means that we didn't do any computation\n          --  at all. In other words, we used at least everything (and possibly\n          --  more).\n \n          Min := Analyzer.Stack_Size - Overflow_Guard;\n          Max := Analyzer.Stack_Size;\n+\n       else\n-         Min := Stack_Size\n-           (Analyzer.Topmost_Touched_Mark, Analyzer.Bottom_Of_Stack);\n+         Min :=\n+           Stack_Size\n+             (Analyzer.Topmost_Touched_Mark, Analyzer.Bottom_Of_Stack);\n          Max := Min + Overflow_Guard;\n       end if;\n "}, {"sha": "33ebfd1f06723799c1c98e53d9980d82c57f1c0e", "filename": "gcc/ada/sem_elim.adb", "status": "modified", "additions": 22, "deletions": 53, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333748297bddb622fad377e66dc26e48e75add69/gcc%2Fada%2Fsem_elim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333748297bddb622fad377e66dc26e48e75add69/gcc%2Fada%2Fsem_elim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elim.adb?ref=333748297bddb622fad377e66dc26e48e75add69", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1997-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1997-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,6 +26,7 @@\n with Atree;    use Atree;\n with Einfo;    use Einfo;\n with Errout;   use Errout;\n+with Lib;      use Lib;\n with Namet;    use Namet;\n with Nlists;   use Nlists;\n with Sem;      use Sem;\n@@ -234,29 +235,6 @@ package body Sem_Elim is\n       Scop : Entity_Id;\n       Form : Entity_Id;\n \n-      function Original_Chars (S : Entity_Id) return Name_Id;\n-      --  If the candidate subprogram is a protected operation of a single\n-      --  protected object, the scope of the operation is the created\n-      --  protected type, and we have to retrieve the original name of\n-      --  the object.\n-\n-      --------------------\n-      -- Original_Chars --\n-      --------------------\n-\n-      function Original_Chars (S : Entity_Id) return Name_Id is\n-      begin\n-         if Ekind (S) /= E_Protected_Type\n-           or else Comes_From_Source (S)\n-         then\n-            return Chars (S);\n-         else\n-            return Chars (Defining_Identifier (Original_Node (Parent (S))));\n-         end if;\n-      end Original_Chars;\n-\n-   --  Start of processing for Check_Eliminated\n-\n    begin\n       if No_Elimination then\n          return;\n@@ -308,33 +286,9 @@ package body Sem_Elim is\n                goto Continue;\n             end if;\n \n-            --  Then we need to see if the static scope matches within the\n-            --  compilation unit.\n-\n-            --  At the moment, gnatelim does not consider block statements as\n-            --  scopes (even if a block is named)\n+            --  Find enclosing unit.\n \n-            Scop := Scope (E);\n-            while Ekind (Scop) = E_Block loop\n-               Scop := Scope (Scop);\n-            end loop;\n-\n-            if Elmt.Entity_Scope /= null then\n-               for J in reverse Elmt.Entity_Scope'Range loop\n-                  if Elmt.Entity_Scope (J) /= Original_Chars (Scop) then\n-                     goto Continue;\n-                  end if;\n-\n-                  Scop := Scope (Scop);\n-                  while Ekind (Scop) = E_Block loop\n-                     Scop := Scope (Scop);\n-                  end loop;\n-\n-                  if not Is_Compilation_Unit (Scop) and then J = 1 then\n-                     goto Continue;\n-                  end if;\n-               end loop;\n-            end if;\n+            Scop := Cunit_Entity (Current_Sem_Unit);\n \n             --  Now see if compilation unit matches\n \n@@ -673,7 +627,10 @@ package body Sem_Elim is\n       Enclosing_Subp : Entity_Id;\n \n    begin\n-      if Is_Eliminated (Ultimate_Subp) and then not Inside_A_Generic then\n+      if Is_Eliminated (Ultimate_Subp)\n+        and then not Inside_A_Generic\n+        and then not Is_Generic_Unit (Cunit_Entity (Current_Sem_Unit))\n+      then\n          Enclosing_Subp := Current_Subprogram;\n          while Present (Enclosing_Subp) loop\n             if Is_Eliminated (Enclosing_Subp) then\n@@ -701,9 +658,21 @@ package body Sem_Elim is\n          end if;\n       end loop;\n \n-      --  Should never fall through, since entry should be in table\n+      --  If this is an internal operation generated for a protected operation.\n+      --  its name does not match the source name, so just report the error.\n+\n+      if not Comes_From_Source (E)\n+        and then Present (First_Entity (E))\n+        and then Is_Concurrent_Record_Type (Etype (First_Entity (E)))\n+      then\n+         Error_Msg_NE\n+           (\"cannot reference eliminated protected subprogram\", N, E);\n \n-      raise Program_Error;\n+      --  Otherwise should not fall through, entry should be in table\n+\n+      else\n+         raise Program_Error;\n+      end if;\n    end Eliminate_Error_Msg;\n \n    ----------------"}]}