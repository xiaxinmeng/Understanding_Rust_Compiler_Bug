{"sha": "7d2f0ecd61495161034a7c24de59af5025b298e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QyZjBlY2Q2MTQ5NTE2MTAzNGE3YzI0ZGU1OWFmNTAyNWIyOThlMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-05-12T15:18:52Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-05-12T15:18:52Z"}, "message": "re PR c++/35331 (ICE with invalid specialization of variadic template)\n\n/cp\n2008-05-12  Paolo Carlini  <paolo.carlini@oracle.com>\n\n        PR c++/35331\n        * semantics.c (begin_class_definition): Extend checks on the first\n\targument.\n\n/testsuite\n2008-05-12  Paolo Carlini  <paolo.carlini@oracle.com>\n\n        PR c++/35331\n        * g++.dg/cpp0x/vt-35331.C: New.\t\n\t* g++.dg/cpp0x/pr32125.C: Adjust.\n\t* g++.dg/cpp0x/pr32126.C: Likewise.\n\t* g++.dg/cpp0x/pr31438.C: Likewise.\n\t* g++.dg/cpp0x/variadic81.C: Likewise.\n\t* g++.dg/cpp0x/vt-34055.C: Likewise.\n\t* g++.dg/cpp0x/vt-34606.C: Likewise.\n\nFrom-SVN: r135216", "tree": {"sha": "4b40fbfe07ab629be51dc2833745c4465165be87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b40fbfe07ab629be51dc2833745c4465165be87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d2f0ecd61495161034a7c24de59af5025b298e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d2f0ecd61495161034a7c24de59af5025b298e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d2f0ecd61495161034a7c24de59af5025b298e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d2f0ecd61495161034a7c24de59af5025b298e2/comments", "author": null, "committer": null, "parents": [{"sha": "751d1520c31199d7a67e8c3caaed4e4af90fcb75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/751d1520c31199d7a67e8c3caaed4e4af90fcb75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/751d1520c31199d7a67e8c3caaed4e4af90fcb75"}], "stats": {"total": 56, "additions": 40, "deletions": 16}, "files": [{"sha": "49f91bab0cf7feaa763dbaf9fe9b9d759a1c0fb7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7d2f0ecd61495161034a7c24de59af5025b298e2", "patch": "@@ -1,3 +1,9 @@\n+2008-05-12  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+        PR c++/35331\n+        * semantics.c (begin_class_definition): Extend checks on the first\n+\targument.\n+\n 2008-05-12  Tomas Bily  <tbily@suse.cz>\n \n         * typeck2.c (digest_init): Use CONVERT_EXPR_P."}, {"sha": "192cfa64197bd57d1de5e6f4740ed9f1d40491fb", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=7d2f0ecd61495161034a7c24de59af5025b298e2", "patch": "@@ -2223,7 +2223,7 @@ check_template_template_default_arg (tree argument)\n tree\n begin_class_definition (tree t, tree attributes)\n {\n-  if (t == error_mark_node)\n+  if (error_operand_p (t) || error_operand_p (TYPE_MAIN_DECL (t)))\n     return error_mark_node;\n \n   if (processing_template_parmlist)"}, {"sha": "1daba114a8a892eb22829fc5ab9a987f207c69eb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7d2f0ecd61495161034a7c24de59af5025b298e2", "patch": "@@ -1,3 +1,14 @@\n+2008-05-12  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+        PR c++/35331\n+        * g++.dg/cpp0x/vt-35331.C: New.\t\n+\t* g++.dg/cpp0x/pr32125.C: Adjust.\n+\t* g++.dg/cpp0x/pr32126.C: Likewise.\n+\t* g++.dg/cpp0x/pr31438.C: Likewise.\n+\t* g++.dg/cpp0x/variadic81.C: Likewise.\n+\t* g++.dg/cpp0x/vt-34055.C: Likewise.\n+\t* g++.dg/cpp0x/vt-34606.C: Likewise.\n+\n 2008-05-12  Ira Rosen  <irar@il.ibm.com>\n \n \t* gfortran.dg/vect/pr36119.f: Rename to ..."}, {"sha": "74738830ad16735d86d76995ce8e266a2a3c92df", "filename": "gcc/testsuite/g++.dg/cpp0x/pr31438.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31438.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31438.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31438.C?ref=7d2f0ecd61495161034a7c24de59af5025b298e2", "patch": "@@ -2,8 +2,8 @@\n \n template<typename> struct A;\n template<typename T, typename... U> struct A<T(U)> // { dg-error \"parameter packs|U\" }\n-{     // { dg-error \"parameter packs|U\" }\n- template<typename X> A(X); // { dg-error \"parameter packs|U\" }\n+{\n+ template<typename X> A(X);\n };\n \n A<void(int)> a(0); // { dg-error \"incomplete type\" }"}, {"sha": "210a29c0829d7da264e057893eee329b0eda7380", "filename": "gcc/testsuite/g++.dg/cpp0x/pr32125.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr32125.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr32125.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr32125.C?ref=7d2f0ecd61495161034a7c24de59af5025b298e2", "patch": "@@ -2,7 +2,7 @@\n template<typename...> struct A;\n \n template<typename...T> struct A<T*> // { dg-error \"not expanded|T\" }\n-{       // { dg-error \"not expanded|T\" }\n-  A();  // { dg-error \"not expanded|T\" }\n-  A(T); // { dg-error \"not expanded|T\" }\n+{\n+  A();\n+  A(T);\n };"}, {"sha": "c525cca684b16cd377c7e15944cf642a6c75f906", "filename": "gcc/testsuite/g++.dg/cpp0x/pr32126.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr32126.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr32126.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr32126.C?ref=7d2f0ecd61495161034a7c24de59af5025b298e2", "patch": "@@ -2,7 +2,7 @@\n template<typename...> struct A;\n \n template<typename...T> struct A<T> // { dg-error \"not expanded|T|\" }\n-{ // { dg-error \"not expanded|T|\" }\n+{\n  static int i;\n };\n "}, {"sha": "cce61b316490da2fd28170a509c9feb88ca4a02a", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic81.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic81.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic81.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic81.C?ref=7d2f0ecd61495161034a7c24de59af5025b298e2", "patch": "@@ -4,7 +4,7 @@\n template<typename> struct A;\n \n template<typename... T> struct A<T*>  // { dg-error \"not expanded|T|not used|T\" }\n-{                                     // { dg-error \"not expanded|T|not used|T\" }\n+{\n   struct B;\n };\n "}, {"sha": "c50778430e0a05a67c655dd176b4b7b6bde7ce0c", "filename": "gcc/testsuite/g++.dg/cpp0x/vt-34055.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-34055.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-34055.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-34055.C?ref=7d2f0ecd61495161034a7c24de59af5025b298e2", "patch": "@@ -3,8 +3,8 @@\n template<typename...> struct A;\n \n template<typename...T> struct A<T*> // { dg-error \"parameter packs|T\" }\n-{   // { dg-error \"parameter packs|T\" }\n-  void foo();  // { dg-error \"parameter packs|T|candidate\" }\n+{\n+  void foo();\n };\n \n template<typename...T> void A<T*>::foo() {} // { dg-error \"invalid declarator\" }\n@@ -14,8 +14,8 @@ template<typename...T> void A<T*>::foo() {} // { dg-error \"invalid declarator\" }\n template<typename...> struct B;\n \n template<typename...T> struct B<T&> // { dg-error \"parameter packs|T\" }\n-{ // { dg-error \"parameter packs|T\" }\n-  void foo(); // { dg-error \"parameter packs|T\" }\n+{\n+  void foo();\n };\n \n template<typename...T> void B<T&>::foo() {} // { dg-error \"invalid declarator\" }\n@@ -24,8 +24,8 @@ template<typename...T> void B<T&>::foo() {} // { dg-error \"invalid declarator\" }\n template<typename...> struct C;\n \n template<typename...T> struct C<T()> // { dg-error \"parameter packs|T\" }\n-{ // { dg-error \"parameter packs|T\" }\n-  void foo(); // { dg-error \"parameter packs|T\" }\n+{\n+  void foo();\n };\n \n template<typename...T> void C<T()>::foo() {} // { dg-error \"invalid declarator\" }"}, {"sha": "467943354424be85b82e35742ee0783abc5dcca2", "filename": "gcc/testsuite/g++.dg/cpp0x/vt-34606.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-34606.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-34606.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-34606.C?ref=7d2f0ecd61495161034a7c24de59af5025b298e2", "patch": "@@ -2,8 +2,8 @@\n template<typename...> struct A;\n \n template<typename T, typename... U> struct A<T, U> // { dg-error \"parameter packs|U\" }\n-{  // { dg-error \"parameter packs|U\" }\n+{\n   template<typename> struct B;\n \n-  template<typename X> struct B<X*> {};  // { dg-error \"parameter packs|U\" }\n+  template<typename X> struct B<X*> {};\n };"}, {"sha": "0add9819bd045ad06419464efe409a2d56e4f25c", "filename": "gcc/testsuite/g++.dg/cpp0x/vt-35331.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-35331.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2f0ecd61495161034a7c24de59af5025b298e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-35331.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-35331.C?ref=7d2f0ecd61495161034a7c24de59af5025b298e2", "patch": "@@ -0,0 +1,7 @@\n+// { dg-options \"-std=c++0x\" }\n+template<typename...> struct A;\n+\n+template<typename...T> struct A<T*> // { dg-error \"not expanded|T\" }\n+{\n+  friend void foo();\n+};"}]}