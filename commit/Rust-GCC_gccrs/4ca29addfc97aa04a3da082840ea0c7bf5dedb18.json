{"sha": "4ca29addfc97aa04a3da082840ea0c7bf5dedb18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNhMjlhZGRmYzk3YWEwNGEzZGEwODI4NDBlYTBjN2JmNWRlZGIxOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-08-28T06:23:42Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-08-28T06:23:42Z"}, "message": "loop-iv.c: Include rtl-iter.h.\n\ngcc/\n\t* loop-iv.c: Include rtl-iter.h.\n\t(find_single_def_src): New function.\n\t(replace_single_def_regs): Turn from being a for_each_rtx callback\n\tto being a function that examines each subrtx itself.\n\t(replace_in_expr, simplify_using_initial_values): Update accordingly.\n\nFrom-SVN: r214645", "tree": {"sha": "d97aa2672cc5b80f8c75c47fbfeb1a30d1fc385a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d97aa2672cc5b80f8c75c47fbfeb1a30d1fc385a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ca29addfc97aa04a3da082840ea0c7bf5dedb18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ca29addfc97aa04a3da082840ea0c7bf5dedb18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ca29addfc97aa04a3da082840ea0c7bf5dedb18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ca29addfc97aa04a3da082840ea0c7bf5dedb18/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e7c44276618b5ee91df8eb2f9bdd3e4a79829226", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7c44276618b5ee91df8eb2f9bdd3e4a79829226", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7c44276618b5ee91df8eb2f9bdd3e4a79829226"}], "stats": {"total": 61, "additions": 40, "deletions": 21}, "files": [{"sha": "679e2bfe3fe8d38d4491950ff6d1b7e13aff3b56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ca29addfc97aa04a3da082840ea0c7bf5dedb18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ca29addfc97aa04a3da082840ea0c7bf5dedb18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ca29addfc97aa04a3da082840ea0c7bf5dedb18", "patch": "@@ -1,3 +1,11 @@\n+2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* loop-iv.c: Include rtl-iter.h.\n+\t(find_single_def_src): New function.\n+\t(replace_single_def_regs): Turn from being a for_each_rtx callback\n+\tto being a function that examines each subrtx itself.\n+\t(replace_in_expr, simplify_using_initial_values): Update accordingly.\n+\n 2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* jump.c (eh_returnjump_p_1): Delete."}, {"sha": "b8f5e12f4428131496095d771a259b3ee40a55e5", "filename": "gcc/loop-iv.c", "status": "modified", "additions": 32, "deletions": 21, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ca29addfc97aa04a3da082840ea0c7bf5dedb18/gcc%2Floop-iv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ca29addfc97aa04a3da082840ea0c7bf5dedb18/gcc%2Floop-iv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-iv.c?ref=4ca29addfc97aa04a3da082840ea0c7bf5dedb18", "patch": "@@ -62,6 +62,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"df.h\"\n #include \"hash-table.h\"\n #include \"dumpfile.h\"\n+#include \"rtl-iter.h\"\n \n /* Possible return values of iv_get_reaching_def.  */\n \n@@ -1398,33 +1399,27 @@ simple_rhs_p (rtx rhs)\n     }\n }\n \n-/* If REG has a single definition, replace it with its known value in EXPR.\n-   Callback for for_each_rtx.  */\n+/* If REGNO has a single definition, return its known value, otherwise return\n+   null.  */\n \n-static int\n-replace_single_def_regs (rtx *reg, void *expr1)\n+static rtx\n+find_single_def_src (unsigned int regno)\n {\n-  unsigned regno;\n   df_ref adef;\n   rtx set, src;\n-  rtx *expr = (rtx *)expr1;\n-\n-  if (!REG_P (*reg))\n-    return 0;\n \n-  regno = REGNO (*reg);\n   for (;;)\n     {\n       rtx note;\n       adef = DF_REG_DEF_CHAIN (regno);\n       if (adef == NULL || DF_REF_NEXT_REG (adef) != NULL\n-\t    || DF_REF_IS_ARTIFICIAL (adef))\n-\treturn -1;\n+\t  || DF_REF_IS_ARTIFICIAL (adef))\n+\treturn NULL_RTX;\n \n       set = single_set (DF_REF_INSN (adef));\n       if (set == NULL || !REG_P (SET_DEST (set))\n \t  || REGNO (SET_DEST (set)) != regno)\n-\treturn -1;\n+\treturn NULL_RTX;\n \n       note = find_reg_equal_equiv_note (DF_REF_INSN (adef));\n \n@@ -1443,10 +1438,29 @@ replace_single_def_regs (rtx *reg, void *expr1)\n       break;\n     }\n   if (!function_invariant_p (src))\n-    return -1;\n+    return NULL_RTX;\n \n-  *expr = simplify_replace_rtx (*expr, *reg, src);\n-  return 1;\n+  return src;\n+}\n+\n+/* If any registers in *EXPR that have a single definition, try to replace\n+   them with the known-equivalent values.  */\n+\n+static void\n+replace_single_def_regs (rtx *expr)\n+{\n+  subrtx_var_iterator::array_type array;\n+ repeat:\n+  FOR_EACH_SUBRTX_VAR (iter, array, *expr, NONCONST)\n+    {\n+      rtx x = *iter;\n+      if (REG_P (x))\n+\tif (rtx new_x = find_single_def_src (REGNO (x)))\n+\t  {\n+\t    *expr = simplify_replace_rtx (*expr, x, new_x);\n+\t    goto repeat;\n+\t  }\n+    }\n }\n \n /* A subroutine of simplify_using_initial_values, this function examines INSN\n@@ -1491,8 +1505,7 @@ replace_in_expr (rtx *expr, rtx dest, rtx src)\n   *expr = simplify_replace_rtx (*expr, dest, src);\n   if (old == *expr)\n     return;\n-  while (for_each_rtx (expr, replace_single_def_regs, expr) != 0)\n-    continue;\n+  replace_single_def_regs (expr);\n }\n \n /* Checks whether A implies B.  */\n@@ -1937,9 +1950,7 @@ simplify_using_initial_values (struct loop *loop, enum rtx_code op, rtx *expr)\n \n   gcc_assert (op == UNKNOWN);\n \n-  for (;;)\n-    if (for_each_rtx (expr, replace_single_def_regs, expr) == 0)\n-      break;\n+  replace_single_def_regs (expr);\n   if (CONSTANT_P (*expr))\n     return;\n "}]}