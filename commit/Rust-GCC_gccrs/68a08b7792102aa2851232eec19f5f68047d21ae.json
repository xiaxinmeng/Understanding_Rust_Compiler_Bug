{"sha": "68a08b7792102aa2851232eec19f5f68047d21ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhhMDhiNzc5MjEwMmFhMjg1MTIzMmVlYzE5ZjVmNjgwNDdkMjFhZQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-12-13T14:19:12Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-12-13T14:19:12Z"}, "message": "tree-data-ref.c (compute_overlap_steps_for_affine_univar): Change parameters' type from int to HOST_WIDE_INT.\n\n\t* tree-data-ref.c (compute_overlap_steps_for_affine_univar): Change\n\tparameters' type from int to HOST_WIDE_INT.\n\t(compute_overlap_steps_for_affine_1_2): Change parameters' type from\n\tint to HOST_WIDE_INT.\n\t(build_classic_dist_vector_1): Likewise.\n\t(add_multivariate_self_dist): Likewise.\n\nFrom-SVN: r243607", "tree": {"sha": "cfb87dbc71bcde0322e268e8c0de396f07ca0333", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfb87dbc71bcde0322e268e8c0de396f07ca0333"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68a08b7792102aa2851232eec19f5f68047d21ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a08b7792102aa2851232eec19f5f68047d21ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68a08b7792102aa2851232eec19f5f68047d21ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a08b7792102aa2851232eec19f5f68047d21ae/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9042295c44dad698b9f9758c79185879511e8dee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9042295c44dad698b9f9758c79185879511e8dee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9042295c44dad698b9f9758c79185879511e8dee"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "e2d7b65210e680e506cd4019189b63ddfa69bb7a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a08b7792102aa2851232eec19f5f68047d21ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a08b7792102aa2851232eec19f5f68047d21ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68a08b7792102aa2851232eec19f5f68047d21ae", "patch": "@@ -1,3 +1,12 @@\n+2016-12-13  Marek Polacek  <polacek@redhat.com>\n+\n+\t* tree-data-ref.c (compute_overlap_steps_for_affine_univar): Change\n+\tparameters' type from int to HOST_WIDE_INT.\n+\t(compute_overlap_steps_for_affine_1_2): Change parameters' type from\n+\tint to HOST_WIDE_INT.\n+\t(build_classic_dist_vector_1): Likewise.\n+\t(add_multivariate_self_dist): Likewise.\n+\n 2016-12-13  Michael Matz  <matz@suse.de>\n \n \tPR tree-optimization/78725"}, {"sha": "3c28280171b94f14019321a4b07ac2185736900c", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a08b7792102aa2851232eec19f5f68047d21ae/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a08b7792102aa2851232eec19f5f68047d21ae/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=68a08b7792102aa2851232eec19f5f68047d21ae", "patch": "@@ -2164,16 +2164,18 @@ initialize_matrix_A (lambda_matrix A, tree chrec, unsigned index, int mult)\n    constructed as evolutions in dimension DIM.  */\n \n static void\n-compute_overlap_steps_for_affine_univar (int niter, int step_a, int step_b,\n+compute_overlap_steps_for_affine_univar (HOST_WIDE_INT niter,\n+\t\t\t\t\t HOST_WIDE_INT step_a,\n+\t\t\t\t\t HOST_WIDE_INT step_b,\n \t\t\t\t\t affine_fn *overlaps_a,\n \t\t\t\t\t affine_fn *overlaps_b,\n \t\t\t\t\t tree *last_conflicts, int dim)\n {\n   if (((step_a > 0 && step_b > 0)\n        || (step_a < 0 && step_b < 0)))\n     {\n-      int step_overlaps_a, step_overlaps_b;\n-      int gcd_steps_a_b, last_conflict, tau2;\n+      HOST_WIDE_INT step_overlaps_a, step_overlaps_b;\n+      HOST_WIDE_INT gcd_steps_a_b, last_conflict, tau2;\n \n       gcd_steps_a_b = gcd (step_a, step_b);\n       step_overlaps_a = step_b / gcd_steps_a_b;\n@@ -2227,7 +2229,7 @@ compute_overlap_steps_for_affine_1_2 (tree chrec_a, tree chrec_b,\n \t\t\t\t      tree *last_conflicts)\n {\n   bool xz_p, yz_p, xyz_p;\n-  int step_x, step_y, step_z;\n+  HOST_WIDE_INT step_x, step_y, step_z;\n   HOST_WIDE_INT niter_x, niter_y, niter_z, niter;\n   affine_fn overlaps_a_xz, overlaps_b_xz;\n   affine_fn overlaps_a_yz, overlaps_b_yz;\n@@ -3192,7 +3194,8 @@ build_classic_dist_vector_1 (struct data_dependence_relation *ddr,\n       if (TREE_CODE (access_fn_a) == POLYNOMIAL_CHREC\n \t  && TREE_CODE (access_fn_b) == POLYNOMIAL_CHREC)\n \t{\n-\t  int dist, index;\n+\t  HOST_WIDE_INT dist;\n+\t  int index;\n \t  int var_a = CHREC_VARIABLE (access_fn_a);\n \t  int var_b = CHREC_VARIABLE (access_fn_b);\n \n@@ -3266,7 +3269,7 @@ add_multivariate_self_dist (struct data_dependence_relation *ddr, tree c_2)\n   tree c_1 = CHREC_LEFT (c_2);\n   tree c_0 = CHREC_LEFT (c_1);\n   lambda_vector dist_v;\n-  int v1, v2, cd;\n+  HOST_WIDE_INT v1, v2, cd;\n \n   /* Polynomials with more than 2 variables are not handled yet.  When\n      the evolution steps are parameters, it is not possible to"}]}