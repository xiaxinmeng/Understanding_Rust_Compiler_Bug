{"sha": "8311a11f170297cb47767a206b1ba852d9ae7b26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMxMWExMWYxNzAyOTdjYjQ3NzY3YTIwNmIxYmE4NTJkOWFlN2IyNg==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1996-06-05T19:55:01Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1996-06-05T19:55:01Z"}, "message": "* varasm.c (output_constructor):  Handle RANGE_EXPR in array index.\n\nFrom-SVN: r12165", "tree": {"sha": "6d5987e07d71de5a28f47a1b2281562da6892366", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d5987e07d71de5a28f47a1b2281562da6892366"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8311a11f170297cb47767a206b1ba852d9ae7b26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8311a11f170297cb47767a206b1ba852d9ae7b26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8311a11f170297cb47767a206b1ba852d9ae7b26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8311a11f170297cb47767a206b1ba852d9ae7b26/comments", "author": null, "committer": null, "parents": [{"sha": "7d49f59f4fab6f5c5b46c11fe7726f8cd69399e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d49f59f4fab6f5c5b46c11fe7726f8cd69399e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d49f59f4fab6f5c5b46c11fe7726f8cd69399e1"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "08399f2279497cb6280d0a5d41b0636963e1a08d", "filename": "gcc/varasm.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8311a11f170297cb47767a206b1ba852d9ae7b26/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8311a11f170297cb47767a206b1ba852d9ae7b26/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=8311a11f170297cb47767a206b1ba852d9ae7b26", "patch": "@@ -3895,7 +3895,26 @@ output_constructor (exp, size)\n       if (val != 0)\n \tSTRIP_NOPS (val);\n \n-      if (field == 0 || !DECL_BIT_FIELD (field))\n+      if (index && TREE_CODE (index) == RANGE_EXPR)\n+\t{\n+\t  register int fieldsize\n+\t    = int_size_in_bytes (TREE_TYPE (TREE_TYPE (exp)));\n+\t  HOST_WIDE_INT lo_index = TREE_INT_CST_LOW (TREE_OPERAND (index, 0));\n+\t  HOST_WIDE_INT hi_index = TREE_INT_CST_LOW (TREE_OPERAND (index, 1));\n+\t  HOST_WIDE_INT index;\n+\t  for (index = lo_index; index <= hi_index; index++)\n+\t    {\n+\t      /* Output the element's initial value.  */\n+\t      if (val == 0)\n+\t\tassemble_zeros (fieldsize);\n+\t      else\n+\t\toutput_constant (val, fieldsize);\n+\n+\t      /* Count its size.  */\n+\t      total_bytes += fieldsize;\n+\t    }\n+\t}\n+      else if (field == 0 || !DECL_BIT_FIELD (field))\n \t{\n \t  /* An element that is not a bit-field.  */\n "}]}