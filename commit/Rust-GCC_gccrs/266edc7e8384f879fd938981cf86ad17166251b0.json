{"sha": "266edc7e8384f879fd938981cf86ad17166251b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY2ZWRjN2U4Mzg0Zjg3OWZkOTM4OTgxY2Y4NmFkMTcxNjYyNTFiMA==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael.morin@sfr.fr", "date": "2011-10-07T19:02:36Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-10-07T19:02:36Z"}, "message": "check.c (is_coarray): Remove.\n\n\t* check.c (is_coarray): Remove.\n\t(coarray_check): Use gfc_is_coarray.\n\nFrom-SVN: r179671", "tree": {"sha": "0fb7332cc98560cbdefc344dd7525f8d30c3a087", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fb7332cc98560cbdefc344dd7525f8d30c3a087"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/266edc7e8384f879fd938981cf86ad17166251b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/266edc7e8384f879fd938981cf86ad17166251b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/266edc7e8384f879fd938981cf86ad17166251b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/266edc7e8384f879fd938981cf86ad17166251b0/comments", "author": null, "committer": null, "parents": [{"sha": "e1faf1503e727b7b1a4485e63c042f8dd0a00524", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1faf1503e727b7b1a4485e63c042f8dd0a00524", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1faf1503e727b7b1a4485e63c042f8dd0a00524"}], "stats": {"total": 39, "additions": 6, "deletions": 33}, "files": [{"sha": "d1a90144918e435c081230e54640d7eeaa777e28", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266edc7e8384f879fd938981cf86ad17166251b0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266edc7e8384f879fd938981cf86ad17166251b0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=266edc7e8384f879fd938981cf86ad17166251b0", "patch": "@@ -1,3 +1,8 @@\n+2011-10-07  Mikael Morin  <mikael.morin@sfr.fr>\n+\n+\t* check.c (is_coarray): Remove.\n+\t(coarray_check): Use gfc_is_coarray.\n+\n 2011-10-07  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/50625"}, {"sha": "9b8ec21a7636678774b53bc4ed5a3b25dbd706f9", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 1, "deletions": 33, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266edc7e8384f879fd938981cf86ad17166251b0/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266edc7e8384f879fd938981cf86ad17166251b0/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=266edc7e8384f879fd938981cf86ad17166251b0", "patch": "@@ -203,42 +203,10 @@ double_check (gfc_expr *d, int n)\n }\n \n \n-/* Check whether an expression is a coarray (without array designator).  */\n-\n-static bool\n-is_coarray (gfc_expr *e)\n-{\n-  bool coarray = false;\n-  gfc_ref *ref;\n-\n-  if (e->expr_type != EXPR_VARIABLE)\n-    return false;\n-\n-  coarray = e->symtree->n.sym->attr.codimension;\n-\n-  for (ref = e->ref; ref; ref = ref->next)\n-    {\n-      if (ref->type == REF_COMPONENT)\n-\tcoarray = ref->u.c.component->attr.codimension;\n-      else if (ref->type != REF_ARRAY || ref->u.ar.dimen != 0)\n-\tcoarray = false;\n-      else if (ref->type == REF_ARRAY && ref->u.ar.codimen != 0) \n-\t{\n-\t  int n;\n-\t  for (n = 0; n < ref->u.ar.codimen; n++)\n-\t    if (ref->u.ar.dimen_type[n] != DIMEN_THIS_IMAGE)\n-\t      coarray = false;\n-\t}\n-    }\n-\n-  return coarray;\n-}\n-\n-\n static gfc_try\n coarray_check (gfc_expr *e, int n)\n {\n-  if (!is_coarray (e))\n+  if (!gfc_is_coarray (e))\n     {\n       gfc_error (\"Expected coarray variable as '%s' argument to the %s \"\n                  \"intrinsic at %L\", gfc_current_intrinsic_arg[n]->name,"}]}