{"sha": "d840d7a2bbbfd97d054baa7462ada09215d93974", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg0MGQ3YTJiYmJmZDk3ZDA1NGJhYTc0NjJhZGEwOTIxNWQ5Mzk3NA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2018-12-24T11:12:42Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-12-24T11:12:42Z"}, "message": "lto-symtab.c (lto_symtab_merge_decls_2): Do not report ODR violations for method whose basetype was already reported.\n\n\n\t* lto-symtab.c (lto_symtab_merge_decls_2): Do not report ODR violations\n\tfor method whose basetype was already reported.\n\n\t* ipa-devirt.c (odr_type_violation_reported_p): New.\n\t* ipa-utils.h (odr_type_violation_reported_p): Declare.\n\nFrom-SVN: r267397", "tree": {"sha": "cab919fda937ce1b1f3730f8c18624be83205c8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cab919fda937ce1b1f3730f8c18624be83205c8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d840d7a2bbbfd97d054baa7462ada09215d93974", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d840d7a2bbbfd97d054baa7462ada09215d93974", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d840d7a2bbbfd97d054baa7462ada09215d93974", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d840d7a2bbbfd97d054baa7462ada09215d93974/comments", "author": null, "committer": null, "parents": [{"sha": "c23f39f8481305a53216bf0f4b8b33e637157387", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c23f39f8481305a53216bf0f4b8b33e637157387", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c23f39f8481305a53216bf0f4b8b33e637157387"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "77631ac9a21d919f9d05e4813a73111e7e5a0134", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d840d7a2bbbfd97d054baa7462ada09215d93974/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d840d7a2bbbfd97d054baa7462ada09215d93974/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d840d7a2bbbfd97d054baa7462ada09215d93974", "patch": "@@ -1,3 +1,10 @@\n+2018-12-24  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto-symtab.c (lto_symtab_merge_decls_2): Do not report ODR violations\n+\tfor method whose basetype was already reported.\n+\t* ipa-devirt.c (odr_type_violation_reported_p): New.\n+\t* ipa-utils.h (odr_type_violation_reported_p): Declare.\n+\n 2018-12-24  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* configure.ac (dwarf2_debug_line): Check for the debug_line"}, {"sha": "0f42d124fe3d941e946cc75b49a19d69e34abfea", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d840d7a2bbbfd97d054baa7462ada09215d93974/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d840d7a2bbbfd97d054baa7462ada09215d93974/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=d840d7a2bbbfd97d054baa7462ada09215d93974", "patch": "@@ -2152,6 +2152,12 @@ get_odr_type (tree type, bool insert)\n   return val;\n }\n \n+bool\n+odr_type_violation_reported_p (tree type)\n+{\n+  return get_odr_type (type, false)->odr_violated;\n+}\n+\n /* Add TYPE od ODR type hash.  */\n \n void"}, {"sha": "b58693528d83668929fe014546815aa09e811b59", "filename": "gcc/ipa-utils.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d840d7a2bbbfd97d054baa7462ada09215d93974/gcc%2Fipa-utils.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d840d7a2bbbfd97d054baa7462ada09215d93974/gcc%2Fipa-utils.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-utils.h?ref=d840d7a2bbbfd97d054baa7462ada09215d93974", "patch": "@@ -90,6 +90,7 @@ void warn_types_mismatch (tree t1, tree t2, location_t loc1 = UNKNOWN_LOCATION,\n \t\t\t  location_t loc2 = UNKNOWN_LOCATION);\n bool odr_or_derived_type_p (const_tree t);\n bool odr_types_equivalent_p (tree type1, tree type2);\n+bool odr_type_violation_reported_p (tree type);\n \n /* Return vector containing possible targets of polymorphic call E.\n    If COMPLETEP is non-NULL, store true if the list is complete. "}, {"sha": "ca2f01fed35496bf2630dff959edcc0a965bbd83", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d840d7a2bbbfd97d054baa7462ada09215d93974/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d840d7a2bbbfd97d054baa7462ada09215d93974/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=d840d7a2bbbfd97d054baa7462ada09215d93974", "patch": "@@ -1,3 +1,8 @@\n+2018-12-24  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto-symtab.c (lto_symtab_merge_decls_2): Do not report ODR violations\n+\tfor method whose basetype was already reported.\n+\n 2018-11-30  Michael Ploujnikov  <michael.ploujnikov@oracle.com>\n \n \tMinimize clone counter memory usage in LTO."}, {"sha": "6b981d403ed0dbba5f108c5673f5603e4aeda405", "filename": "gcc/lto/lto-symtab.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d840d7a2bbbfd97d054baa7462ada09215d93974/gcc%2Flto%2Flto-symtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d840d7a2bbbfd97d054baa7462ada09215d93974/gcc%2Flto%2Flto-symtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-symtab.c?ref=d840d7a2bbbfd97d054baa7462ada09215d93974", "patch": "@@ -697,10 +697,21 @@ lto_symtab_merge_decls_2 (symtab_node *first, bool diagnosed_p)\n \t{\n \t  bool diag = false;\n \t  if (level & 2)\n-\t    diag = warning_at (DECL_SOURCE_LOCATION (decl),\n-\t\t\t       OPT_Wodr,\n-\t\t\t       \"%qD violates the C++ One Definition Rule\",\n-\t\t\t       decl);\n+\t    {\n+\t      /* Silence warning for method and variables which belong\n+\t         to types which already have ODR violation reported.  Complaining\n+\t\t once is enough.  */\n+\t      if (TREE_CODE (decl) != FUNCTION_DECL\n+\t\t  || TREE_CODE (TREE_TYPE (decl)) != METHOD_TYPE\n+\t\t  || !TYPE_METHOD_BASETYPE (TREE_TYPE (decl))\n+\t\t  || !odr_type_p (TYPE_METHOD_BASETYPE (TREE_TYPE (decl)))\n+\t\t  || !odr_type_violation_reported_p \n+\t\t\t(TYPE_METHOD_BASETYPE (TREE_TYPE (decl))))\n+\t\tdiag = warning_at (DECL_SOURCE_LOCATION (decl),\n+\t\t\t\t   OPT_Wodr,\n+\t\t\t\t   \"%qD violates the C++ One Definition Rule\",\n+\t\t\t\t   decl);\n+\t    }\n \t  if (!diag && (level & 1))\n \t    diag = warning_at (DECL_SOURCE_LOCATION (decl),\n \t\t\t       OPT_Wlto_type_mismatch,"}]}