{"sha": "1ce7b471ecb2b38ee8fbaf19f080d535a8da5c9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNlN2I0NzFlY2IyYjM4ZWU4ZmJhZjE5ZjA4MGQ1MzVhOGRhNWM5Yg==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1995-02-13T20:54:24Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1995-02-13T20:54:24Z"}, "message": "* tree.h (FUNCTION_NEEDS_STATIC_CHAIN):  New macro.\n\nFrom-SVN: r8936", "tree": {"sha": "24a655efadac6f566e52ca3a7ade283c60b63df0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24a655efadac6f566e52ca3a7ade283c60b63df0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ce7b471ecb2b38ee8fbaf19f080d535a8da5c9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce7b471ecb2b38ee8fbaf19f080d535a8da5c9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ce7b471ecb2b38ee8fbaf19f080d535a8da5c9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce7b471ecb2b38ee8fbaf19f080d535a8da5c9b/comments", "author": null, "committer": null, "parents": [{"sha": "2f7a07c29443ff6eb60f80f713b8e0f18bef77aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f7a07c29443ff6eb60f80f713b8e0f18bef77aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f7a07c29443ff6eb60f80f713b8e0f18bef77aa"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "e67d49f569c85f84d9c19716d8875b065dce72ec", "filename": "gcc/tree.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce7b471ecb2b38ee8fbaf19f080d535a8da5c9b/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce7b471ecb2b38ee8fbaf19f080d535a8da5c9b/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=1ce7b471ecb2b38ee8fbaf19f080d535a8da5c9b", "patch": "@@ -944,6 +944,13 @@ struct tree_type\n    alternative would be passed.  */\n #define DECL_TRANSPARENT_UNION(NODE) ((NODE)->decl.transparent_union)\n \n+/* In a FUNCTION_DECL, zero means it is a nested function that needs\n+   a trampoline (closure).  If nonzero, it is a normal function.\n+   (A nested function can be static if it doesn't need to reference\n+   stack variables in a surrounding function.)\n+   This is unrelated to whether a function is static in the C sense.  */\n+#define FUNCTION_NEEDS_STATIC_CHAIN(NODE) ((NODE)->decl.transparent_union)\n+\n /* Used in FUNCTION_DECLs to indicate that they should be run automatically\n    at the beginning or end of execution.  */\n #define DECL_STATIC_CONSTRUCTOR(NODE) ((NODE)->decl.static_ctor_flag)"}]}