{"sha": "14a878f35e0177a0ae892ce0b9f39e1dcc375af5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRhODc4ZjM1ZTAxNzdhMGFlODkyY2UwYjlmMzllMWRjYzM3NWFmNQ==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2009-09-25T17:19:11Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2009-09-25T17:19:11Z"}, "message": "v850.h (FUNCTION_VALUE): Remove.\n\n\t* config/v850/v850.h (FUNCTION_VALUE): Remove.\n\t* config/v850/v850.c (v850_function_value): New function.\n\t(TARGET_FUNCTION_VALUE): Define.\n\nFrom-SVN: r152180", "tree": {"sha": "baab05f2f7be691046ee3fe12ccb563f08336cca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baab05f2f7be691046ee3fe12ccb563f08336cca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14a878f35e0177a0ae892ce0b9f39e1dcc375af5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a878f35e0177a0ae892ce0b9f39e1dcc375af5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14a878f35e0177a0ae892ce0b9f39e1dcc375af5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a878f35e0177a0ae892ce0b9f39e1dcc375af5/comments", "author": null, "committer": null, "parents": [{"sha": "7411b8f04471afc49770f5c85e3c3790c2e02f1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7411b8f04471afc49770f5c85e3c3790c2e02f1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7411b8f04471afc49770f5c85e3c3790c2e02f1f"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "53a8332c267d36fbb6ecb000958fe615ddc154c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a878f35e0177a0ae892ce0b9f39e1dcc375af5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a878f35e0177a0ae892ce0b9f39e1dcc375af5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14a878f35e0177a0ae892ce0b9f39e1dcc375af5", "patch": "@@ -1,3 +1,9 @@\n+2009-09-25  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/v850/v850.h (FUNCTION_VALUE): Remove.\n+\t* config/v850/v850.c (v850_function_value): New function.\n+\t(TARGET_FUNCTION_VALUE): Define.\n+\n 2009-09-25  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tree-vect-stmts.c (vectorizable_call): Call"}, {"sha": "6242ba620136d1bb427da0dc4cda5d82219d6168", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a878f35e0177a0ae892ce0b9f39e1dcc375af5/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a878f35e0177a0ae892ce0b9f39e1dcc375af5/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=14a878f35e0177a0ae892ce0b9f39e1dcc375af5", "patch": "@@ -66,6 +66,7 @@ static section *v850_select_section (tree, int, unsigned HOST_WIDE_INT);\n static void v850_encode_data_area    (tree, rtx);\n static void v850_encode_section_info (tree, rtx, int);\n static bool v850_return_in_memory    (const_tree, const_tree);\n+static rtx v850_function_value (const_tree, const_tree, bool);\n static void v850_setup_incoming_varargs (CUMULATIVE_ARGS *, enum machine_mode,\n \t\t\t\t\t tree, int *, int);\n static bool v850_pass_by_reference (CUMULATIVE_ARGS *, enum machine_mode,\n@@ -164,6 +165,9 @@ static const struct attribute_spec v850_attribute_table[] =\n #undef TARGET_RETURN_IN_MEMORY\n #define TARGET_RETURN_IN_MEMORY v850_return_in_memory\n \n+#undef TARGET_FUNCTION_VALUE\n+#define TARGET_FUNCTION_VALUE v850_function_value\n+\n #undef TARGET_PASS_BY_REFERENCE\n #define TARGET_PASS_BY_REFERENCE v850_pass_by_reference\n \n@@ -2955,6 +2959,17 @@ v850_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED)\n   /* Return values > 8 bytes in length in memory.  */\n   return int_size_in_bytes (type) > 8 || TYPE_MODE (type) == BLKmode;\n }\n+\n+/* Worker function for TARGET_FUNCTION_VALUE.  */\n+\n+rtx\n+v850_function_value (const_tree valtype, \n+                    const_tree fn_decl_or_type ATTRIBUTE_UNUSED,\n+                    bool outgoing ATTRIBUTE_UNUSED)\n+{\n+  return gen_rtx_REG (TYPE_MODE (valtype), 10);\n+}\n+\n \f\n /* Worker function for TARGET_SETUP_INCOMING_VARARGS.  */\n "}, {"sha": "4a288178b7aaf67b6297732b931997eeef93a61d", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a878f35e0177a0ae892ce0b9f39e1dcc375af5/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a878f35e0177a0ae892ce0b9f39e1dcc375af5/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=14a878f35e0177a0ae892ce0b9f39e1dcc375af5", "patch": "@@ -620,14 +620,6 @@ struct cum_arg { int nbytes; int anonymous_args; };\n \n #define FUNCTION_ARG_REGNO_P(N) (N >= 6 && N <= 9)\n \n-/* Define how to find the value returned by a function.\n-   VALTYPE is the data type of the value (as a tree).\n-   If the precise function being called is known, FUNC is its FUNCTION_DECL;\n-   otherwise, FUNC is 0.  */\n-   \n-#define FUNCTION_VALUE(VALTYPE, FUNC) \\\n-  gen_rtx_REG (TYPE_MODE (VALTYPE), 10)\n-\n /* Define how to find the value returned by a library function\n    assuming the value has mode MODE.  */\n "}]}