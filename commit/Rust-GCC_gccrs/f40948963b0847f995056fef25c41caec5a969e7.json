{"sha": "f40948963b0847f995056fef25c41caec5a969e7", "node_id": "C_kwDOANBUbNoAKGY0MDk0ODk2M2IwODQ3Zjk5NTA1NmZlZjI1YzQxY2FlYzVhOTY5ZTc", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2022-06-08T09:58:43Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-12T12:24:13Z"}, "message": "[Ada] Ignore switches for controlling frontend warnings in GNATprove mode\n\nIn the special mode for GNATprove, ignore switches controlling frontend\nwarnings, like already done for the control of style checks warnings.\nAlso remove special handling of warning mode in Errout to make up for\nthe previous division of control between -gnatw (GNAT) and --warnings\n(GNATprove).\n\ngcc/ada/\n\n\t* errout.adb (Record_Compilation_Errors): Remove global\n\tvariable.\n\t(Compilation_Errors): Simplify.\n\t(Initialize): Inline Reset_Warnings.\n\t(Reset_Warnings): Remove.\n\t* errout.ads (Reset_Warnings): Remove.\n\t(Compilation_Errors): Update comment.\n\t* gnat1drv.adb (Adjust_Global_Switches): Ignore all frontend\n\twarnings in GNATprove mode, except regarding elaboration and\n\tsuspicious contracts.", "tree": {"sha": "b7cddd8ce9d96e87be0a7537bf39c6510aa1d049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7cddd8ce9d96e87be0a7537bf39c6510aa1d049"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f40948963b0847f995056fef25c41caec5a969e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f40948963b0847f995056fef25c41caec5a969e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f40948963b0847f995056fef25c41caec5a969e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f40948963b0847f995056fef25c41caec5a969e7/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "570f43b823ad9013aab5abd5868b6554f4cf019c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/570f43b823ad9013aab5abd5868b6554f4cf019c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/570f43b823ad9013aab5abd5868b6554f4cf019c"}], "stats": {"total": 57, "additions": 15, "deletions": 42}, "files": [{"sha": "79e162ab4cb637c960d848e588c4da8fa2c0c70c", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 5, "deletions": 30, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f40948963b0847f995056fef25c41caec5a969e7/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f40948963b0847f995056fef25c41caec5a969e7/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=f40948963b0847f995056fef25c41caec5a969e7", "patch": "@@ -64,13 +64,6 @@ package body Errout is\n    Finalize_Called : Boolean := False;\n    --  Set True if the Finalize routine has been called\n \n-   Record_Compilation_Errors : Boolean := False;\n-   --  Record that a compilation error was witnessed during a given phase of\n-   --  analysis for gnat2why. This is needed as Warning_Mode is modified twice\n-   --  in gnat2why, hence Erroutc.Compilation_Errors can only return a suitable\n-   --  value for each phase of analysis separately. This is updated at each\n-   --  call to Compilation_Errors.\n-\n    Warn_On_Instance : Boolean;\n    --  Flag set true for warning message to be posted on instance\n \n@@ -252,17 +245,8 @@ package body Errout is\n    begin\n       if not Finalize_Called then\n          raise Program_Error;\n-\n-      --  Record that a compilation error was witnessed during a given phase of\n-      --  analysis for gnat2why. This is needed as Warning_Mode is modified\n-      --  twice in gnat2why, hence Erroutc.Compilation_Errors can only return a\n-      --  suitable value for each phase of analysis separately.\n-\n       else\n-         Record_Compilation_Errors :=\n-           Record_Compilation_Errors or else Erroutc.Compilation_Errors;\n-\n-         return Record_Compilation_Errors;\n+         return Erroutc.Compilation_Errors;\n       end if;\n    end Compilation_Errors;\n \n@@ -1914,7 +1898,10 @@ package body Errout is\n \n       --  Reset counts for warnings\n \n-      Reset_Warnings;\n+      Warnings_Treated_As_Errors := 0;\n+      Warnings_Detected := 0;\n+      Warning_Info_Messages := 0;\n+      Warnings_As_Errors_Count := 0;\n \n       --  Initialize warnings tables\n \n@@ -3414,18 +3401,6 @@ package body Errout is\n       end loop;\n    end Remove_Warning_Messages;\n \n-   --------------------\n-   -- Reset_Warnings --\n-   --------------------\n-\n-   procedure Reset_Warnings is\n-   begin\n-      Warnings_Treated_As_Errors := 0;\n-      Warnings_Detected := 0;\n-      Warning_Info_Messages := 0;\n-      Warnings_As_Errors_Count := 0;\n-   end Reset_Warnings;\n-\n    ----------------------\n    -- Adjust_Name_Case --\n    ----------------------"}, {"sha": "45166f5e835e5d56e2fc78403b87cab75485f2f7", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f40948963b0847f995056fef25c41caec5a969e7/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f40948963b0847f995056fef25c41caec5a969e7/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=f40948963b0847f995056fef25c41caec5a969e7", "patch": "@@ -858,11 +858,6 @@ package Errout is\n    --  Remove warnings on all elements of a list (Calls Remove_Warning_Messages\n    --  on each element of the list, see above).\n \n-   procedure Reset_Warnings;\n-   --  Reset the counts related to warnings. This is used both to initialize\n-   --  these counts and to reset them after each phase of analysis for a given\n-   --  value of Opt.Warning_Mode in gnat2why.\n-\n    procedure Set_Ignore_Errors (To : Boolean);\n    --  Following a call to this procedure with To=True, all error calls are\n    --  ignored. A call with To=False restores the default treatment in which\n@@ -910,11 +905,10 @@ package Errout is\n    --  matching Warnings Off pragma preceding this one.\n \n    function Compilation_Errors return Boolean;\n-   --  Returns True if errors have been detected, or warnings in -gnatwe (treat\n-   --  warnings as errors) mode. Note that it is mandatory to call Finalize\n-   --  before calling this routine. To account for changes to Warning_Mode in\n-   --  gnat2why between phases, the past or current presence of an error is\n-   --  recorded in a global variable at each call.\n+   --  Returns True if errors have been detected, or warnings when they are\n+   --  treated as errors, which corresponds to switch -gnatwe in the compiler,\n+   --  and other switches in other tools. Note that it is mandatory to call\n+   --  Finalize before calling this routine.\n \n    procedure Error_Msg_CRT (Feature : String; N : Node_Id);\n    --  Posts a non-fatal message on node N saying that the feature identified"}, {"sha": "3217546d4b98c77f1686c955bc822aeb164681fd", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f40948963b0847f995056fef25c41caec5a969e7/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f40948963b0847f995056fef25c41caec5a969e7/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=f40948963b0847f995056fef25c41caec5a969e7", "patch": "@@ -557,10 +557,14 @@ procedure Gnat1drv is\n          Validity_Checks_On := False;\n          Check_Validity_Of_Parameters := False;\n \n-         --  Turn off style check options since we are not interested in any\n-         --  front-end warnings when we are getting SPARK output.\n+         --  Turn off style checks and compiler warnings in GNATprove except:\n+         --    - elaboration warnings, which turn into errors on SPARK code\n+         --    - suspicious contracts, which are useful for SPARK code\n \n          Reset_Style_Check_Options;\n+         Restore_Warnings (W => (Elab_Warnings               => True,\n+                                 Warn_On_Suspicious_Contract => True,\n+                                 others                      => False));\n \n          --  Suppress the generation of name tables for enumerations, which are\n          --  not needed for formal verification, and fall outside the SPARK"}]}