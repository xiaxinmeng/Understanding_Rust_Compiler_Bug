{"sha": "278e902c24fd2ccbfe7c1ac2b0c4ef62a55696fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc4ZTkwMmMyNGZkMmNjYmZlN2MxYWMyYjBjNGVmNjJhNTU2OTZmYw==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-01-11T20:24:36Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-01-11T20:24:36Z"}, "message": "re PR fortran/79383 (USE statement error)\n\n2018-01-11  Steven G. Kargl <kargl@gcc.gnu.org>\n\n\tPR fortran/79383\n\t* gfortran.dg/dtio_31.f03: New test.\n\t* gfortran.dg/dtio_32.f03: New test.\n\nFrom-SVN: r256554", "tree": {"sha": "5b00138b5468c67e9b43c23222b614a2ae941e1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b00138b5468c67e9b43c23222b614a2ae941e1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/278e902c24fd2ccbfe7c1ac2b0c4ef62a55696fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/278e902c24fd2ccbfe7c1ac2b0c4ef62a55696fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/278e902c24fd2ccbfe7c1ac2b0c4ef62a55696fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/278e902c24fd2ccbfe7c1ac2b0c4ef62a55696fc/comments", "author": null, "committer": null, "parents": [{"sha": "fbea3c33e89371ae2ee633d645eaabdc4d9e7020", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbea3c33e89371ae2ee633d645eaabdc4d9e7020", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbea3c33e89371ae2ee633d645eaabdc4d9e7020"}], "stats": {"total": 99, "additions": 99, "deletions": 0}, "files": [{"sha": "b44ad56c27c5a35d6aceb2f46fd7f2ccb3caece1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/278e902c24fd2ccbfe7c1ac2b0c4ef62a55696fc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/278e902c24fd2ccbfe7c1ac2b0c4ef62a55696fc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=278e902c24fd2ccbfe7c1ac2b0c4ef62a55696fc", "patch": "@@ -1,3 +1,9 @@\n+2018-01-11  Steven G. Kargl <kargl@gcc.gnu.org>\n+\n+\tPR fortran/79383\n+\t* gfortran.dg/dtio_31.f03: New test.\n+\t* gfortran.dg/dtio_32.f03: New test.\n+\n 2018-01-11  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c++/43486"}, {"sha": "1886ef424c48ee5c9b2dfe0d68e1b26a2db2767b", "filename": "gcc/testsuite/gfortran.dg/dtio_31.f03", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/278e902c24fd2ccbfe7c1ac2b0c4ef62a55696fc/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_31.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/278e902c24fd2ccbfe7c1ac2b0c4ef62a55696fc/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_31.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_31.f03?ref=278e902c24fd2ccbfe7c1ac2b0c4ef62a55696fc", "patch": "@@ -0,0 +1,47 @@\n+! { dg-do run }\n+! { dg-options=\"-w\" }\n+! PR fortran/79383\n+! Contributed by Walt Brainerd <walt.brainerd at gmail dot com>\n+module dollar_mod\n+\n+   implicit none\n+\n+   private\n+\n+   type, public :: dollar_type\n+      real :: amount\n+   end type dollar_type\n+\n+   interface write(formatted)\n+      procedure :: Write_dollar\n+   end interface\n+\n+   public :: write(formatted)\n+\n+   contains\n+\n+      subroutine Write_dollar(dollar_value, unit, b_edit_descriptor, &\n+      &  v_list, iostat, iomsg)\n+\n+         class(dollar_type), intent(in) :: dollar_value\n+         integer, intent(in) :: unit\n+         character(len=*), intent(in) :: b_edit_descriptor\n+         integer, dimension(:), intent(in) :: v_list\n+         integer, intent(out) :: iostat\n+         character(len=*), intent(inout) :: iomsg\n+         write(unit=unit, fmt=\"(f9.2)\", iostat=iostat) dollar_value%amount\n+      end subroutine Write_dollar\n+\n+end module dollar_mod\n+\n+program test_dollar\n+\n+   use, non_intrinsic :: dollar_mod, only: dollar_type, write (formatted)\n+   implicit none\n+\n+   type(dollar_type), parameter :: wage = dollar_type(15.10)\n+   character(len=10) str\n+   write (str, fmt=\"(DT)\") wage\n+   if(trim(adjustl(str)) /= '15.10') call abort\n+\n+end program test_dollar"}, {"sha": "1e55359e237466ee9445acee7a6c215cd420bc22", "filename": "gcc/testsuite/gfortran.dg/dtio_32.f03", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/278e902c24fd2ccbfe7c1ac2b0c4ef62a55696fc/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_32.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/278e902c24fd2ccbfe7c1ac2b0c4ef62a55696fc/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_32.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_32.f03?ref=278e902c24fd2ccbfe7c1ac2b0c4ef62a55696fc", "patch": "@@ -0,0 +1,46 @@\n+! { dg-do run }\n+! { dg-options=\"-w\" }\n+! PR fortran/79383\n+! Contributed by Walt Brainerd <walt.brainerd at gmail dot com>\n+module dollar_mod\n+\n+   implicit none\n+\n+   private\n+\n+   type, public :: dollar_type\n+      real :: amount\n+   end type dollar_type\n+\n+   interface write(formatted)\n+      procedure :: Write_dollar\n+   end interface\n+\n+   public :: write(formatted)\n+\n+   contains\n+\n+      subroutine Write_dollar(dollar_value, unit, b_edit_descriptor, &\n+      &  v_list, iostat, iomsg)\n+         class(dollar_type), intent(in) :: dollar_value\n+         integer, intent(in) :: unit\n+         character(len=*), intent(in) :: b_edit_descriptor\n+         integer, dimension(:), intent(in) :: v_list\n+         integer, intent(out) :: iostat\n+         character(len=*), intent(inout) :: iomsg\n+         write(unit=unit, fmt=\"(f9.2)\", iostat=iostat) dollar_value%amount\n+      end subroutine Write_dollar\n+\n+end module dollar_mod\n+\n+program test_dollar\n+\n+   use :: dollar_mod  ! with this USE, same result\n+   implicit none\n+\n+   type(dollar_type), parameter :: wage = dollar_type(15.10)\n+   character(len=10) str\n+   write(str, fmt=\"(DT)\") wage\n+   if (trim(adjustl(str)) /= '15.10') call abort\n+\n+end program test_dollar"}]}