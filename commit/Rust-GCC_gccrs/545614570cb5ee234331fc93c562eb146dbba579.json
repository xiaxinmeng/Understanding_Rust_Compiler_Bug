{"sha": "545614570cb5ee234331fc93c562eb146dbba579", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ1NjE0NTcwY2I1ZWUyMzQzMzFmYzkzYzU2MmViMTQ2ZGJiYTU3OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-12-29T20:01:15Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-12-29T20:01:15Z"}, "message": "cfglayout.c (insert_intra_before_1): New.\n\n\t* cfglayout.c (insert_intra_before_1): New.\n\t(insert_inter_bb_scope_notes): Emit sibling block notes which don't\n\tspan multiple basic blocks.\n\n\t* gcc.dg/debug-3.c: New test.\n\t* gcc.dg/debug-4.c: New test.\n\t* gcc.dg/debug-5.c: New test.\n\nFrom-SVN: r48380", "tree": {"sha": "67e8d4070f4ecd07fce69ac4d97b24b9109d106f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67e8d4070f4ecd07fce69ac4d97b24b9109d106f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/545614570cb5ee234331fc93c562eb146dbba579", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/545614570cb5ee234331fc93c562eb146dbba579", "html_url": "https://github.com/Rust-GCC/gccrs/commit/545614570cb5ee234331fc93c562eb146dbba579", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/545614570cb5ee234331fc93c562eb146dbba579/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9d430eb5b13add7ea10524d8842bd01721b8f433", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d430eb5b13add7ea10524d8842bd01721b8f433", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d430eb5b13add7ea10524d8842bd01721b8f433"}], "stats": {"total": 190, "additions": 178, "deletions": 12}, "files": [{"sha": "ea0c88651f200277c80063b26dddd7e3dd3a9ac8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545614570cb5ee234331fc93c562eb146dbba579/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545614570cb5ee234331fc93c562eb146dbba579/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=545614570cb5ee234331fc93c562eb146dbba579", "patch": "@@ -1,3 +1,9 @@\n+2001-12-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* cfglayout.c (insert_intra_before_1): New.\n+\t(insert_inter_bb_scope_notes): Emit sibling block notes which don't\n+\tspan multiple basic blocks.\n+\n 2001-12-29  Richard Henderson  <rth@redhat.com>\n \n \t* loop.c (prescan_loop): Set has_multiple_exit_targets for exception"}, {"sha": "8ddce1479a3266b27468d7487e56fb0e0487e5b6", "filename": "gcc/cfglayout.c", "status": "modified", "additions": 57, "deletions": 12, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545614570cb5ee234331fc93c562eb146dbba579/gcc%2Fcfglayout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545614570cb5ee234331fc93c562eb146dbba579/gcc%2Fcfglayout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfglayout.c?ref=545614570cb5ee234331fc93c562eb146dbba579", "patch": "@@ -95,6 +95,7 @@ static void relate_bbs_with_scopes\tPARAMS ((scope));\n static scope make_new_scope\t\tPARAMS ((int, rtx));\n static void build_scope_forest\t\tPARAMS ((scope_forest_info *));\n static void remove_scope_notes\t\tPARAMS ((void));\n+static void insert_intra_before_1\tPARAMS ((scope, rtx *, basic_block));\n static void insert_intra_1\t\tPARAMS ((scope, rtx *, basic_block));\n static void insert_intra_bb_scope_notes PARAMS ((basic_block));\n static void insert_inter_bb_scope_notes PARAMS ((basic_block, basic_block));\n@@ -578,6 +579,32 @@ insert_intra_1 (s, ip, bb)\n     }\n }\n \n+/* Insert scope note pairs for a contained scope tree S before insn IP.  */\n+\n+static void\n+insert_intra_before_1 (s, ip, bb)\n+     scope s;\n+     rtx *ip;\n+     basic_block bb;\n+{\n+  scope p;\n+\n+  if (NOTE_BLOCK (s->note_beg))\n+    {  \n+      *ip = emit_note_before (NOTE_INSN_BLOCK_END, *ip);\n+      NOTE_BLOCK (*ip) = NOTE_BLOCK (s->note_end);\n+    } \n+\n+  for (p = s->inner; p; p = p->next)\n+    insert_intra_before_1 (p, ip, bb);\n+\n+  if (NOTE_BLOCK (s->note_beg))\n+    {  \n+      *ip = emit_note_before (NOTE_INSN_BLOCK_BEG, *ip);\n+      NOTE_BLOCK (*ip) = NOTE_BLOCK (s->note_beg);\n+    }\n+}\n+\n /* Insert NOTE_INSN_BLOCK_END notes and NOTE_INSN_BLOCK_BEG notes for\n    scopes that are contained within BB.  */\n \n@@ -661,15 +688,24 @@ insert_inter_bb_scope_notes (bb1, bb2)\n   if (bb1)\n     {\n       rtx end = bb1->end;\n-      scope s;\n+      scope s, p;\n \n       ip = RBI (bb1)->eff_end;\n       for (s = RBI (bb1)->scope; s != com; s = s->outer)\n-\tif (NOTE_BLOCK (s->note_beg))\n-\t  {  \n-\t    ip = emit_note_after (NOTE_INSN_BLOCK_END, ip);\n-\t    NOTE_BLOCK (ip) = NOTE_BLOCK (s->note_end);\n-\t  }\n+\t{\n+\t  if (NOTE_BLOCK (s->note_beg))\n+\t    {  \n+\t      ip = emit_note_after (NOTE_INSN_BLOCK_END, ip);\n+\t      NOTE_BLOCK (ip) = NOTE_BLOCK (s->note_end);\n+\t    }\n+\n+\t  /* Now emit all sibling scopes which don't span any basic\n+\t     blocks.  */\n+\t  if (s->outer)\n+\t    for (p = s->outer->inner; p; p = p->next)\n+\t      if (p != s && p->bb_beg == bb1 && p->bb_beg == p->bb_end)\n+\t\tinsert_intra_1 (p, &ip, bb1);\n+\t}\n \n       /* Emitting note may move the end of basic block to unwanted place.  */\n       bb1->end = end;\n@@ -678,15 +714,24 @@ insert_inter_bb_scope_notes (bb1, bb2)\n   /* Open scopes.  */\n   if (bb2)\n     {\n-      scope s;\n+      scope s, p;\n \n       ip = bb2->head;\n       for (s = RBI (bb2)->scope; s != com; s = s->outer)\n-\tif (NOTE_BLOCK (s->note_beg))\n-\t  {  \n-\t    ip = emit_note_before (NOTE_INSN_BLOCK_BEG, ip);\n-\t    NOTE_BLOCK (ip) = NOTE_BLOCK (s->note_beg);\n-\t  }\n+\t{\n+\t  if (NOTE_BLOCK (s->note_beg))\n+\t    {  \n+\t      ip = emit_note_before (NOTE_INSN_BLOCK_BEG, ip);\n+\t      NOTE_BLOCK (ip) = NOTE_BLOCK (s->note_beg);\n+\t    }\n+\n+\t  /* Now emit all sibling scopes which don't span any basic\n+\t     blocks.  */\n+\t  if (s->outer)\n+\t    for (p = s->outer->inner; p; p = p->next)\n+\t      if (p != s && p->bb_beg == bb2 && p->bb_beg == p->bb_end)\n+\t\tinsert_intra_before_1 (p, &ip, bb2);\n+\t}\n     }\n }\n "}, {"sha": "75d38d829b97e174409cb30269cbecb85bd55541", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545614570cb5ee234331fc93c562eb146dbba579/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545614570cb5ee234331fc93c562eb146dbba579/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=545614570cb5ee234331fc93c562eb146dbba579", "patch": "@@ -1,3 +1,9 @@\n+2001-12-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/debug-3.c: New test.\n+\t* gcc.dg/debug-4.c: New test.\n+\t* gcc.dg/debug-5.c: New test.\n+\n 2001-12-29  Richard Henderson  <rth@redhat.com>\n \n \t* g++.dg/eh/loop1.C: New."}, {"sha": "b94c4eb8abf0377ed002f469706f5a354e51784d", "filename": "gcc/testsuite/gcc.dg/debug-3.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545614570cb5ee234331fc93c562eb146dbba579/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545614570cb5ee234331fc93c562eb146dbba579/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug-3.c?ref=545614570cb5ee234331fc93c562eb146dbba579", "patch": "@@ -0,0 +1,35 @@\n+/* This testcase failed, because scope containing baz was deleted\n+   (spanned 0 basic blocks) and DWARF-2 couldn't find baz origin.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -g\" } */\n+\n+struct A { char *a, *b, *c, *d; };\n+\n+static int\n+bar (struct A *x)\n+{\n+  return x->c - x->b;\n+}\n+\n+void fnptr (void (*fn) (void));\n+\n+void\n+foo (void)\n+{\n+  struct A e;\n+\n+  {\n+    void baz (void)\n+      {\n+\tbar (&e);\n+      }\n+    fnptr (baz);\n+  }\n+  {\n+    struct A *f;\n+\n+    f = &e;\n+    if (f->c - f->a > f->d - f->a)\n+      f->c = f->d;\n+  }\n+}"}, {"sha": "f3cf0c2997e6679286f60b0f108dd5d23e3618b3", "filename": "gcc/testsuite/gcc.dg/debug-4.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545614570cb5ee234331fc93c562eb146dbba579/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545614570cb5ee234331fc93c562eb146dbba579/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug-4.c?ref=545614570cb5ee234331fc93c562eb146dbba579", "patch": "@@ -0,0 +1,27 @@\n+/* This testcase failed, because scope containing baz was not emitted\n+   (doesn't contain any instructions) and DWARF-2 couldn't find baz origin.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -g\" } */\n+\n+struct A { char *a, *b, *c, *d; };\n+\n+static int\n+bar (struct A *x)\n+{\n+  return x->c - x->b;\n+}\n+\n+void\n+foo (void)\n+{\n+  struct A e;\n+\n+  {\n+    int baz (void)\n+      {\n+\treturn bar (&e);\n+      }\n+  }\n+  if (e.c - e.a > e.d - e.a)\n+    e.c = e.d;\n+}"}, {"sha": "4d1d229b66119c06a6565fc5dc5389dae67f1d71", "filename": "gcc/testsuite/gcc.dg/debug-5.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545614570cb5ee234331fc93c562eb146dbba579/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545614570cb5ee234331fc93c562eb146dbba579/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug-5.c?ref=545614570cb5ee234331fc93c562eb146dbba579", "patch": "@@ -0,0 +1,47 @@\n+/* This testcase failed, because scope containing baz was deleted\n+   (spanned 0 basic blocks) and DWARF-2 couldn't find baz origin.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -g\" } */\n+\n+extern void abort (void);\n+\n+struct A { char *a, *b, *c, *d; };\n+\n+static int\n+bar (struct A *x)\n+{\n+  return x->c - x->b;\n+}\n+\n+static int\n+bar2 (struct A *x)\n+{\n+  int a = x->c - x->b;\n+  x->c += 26;\n+  return a;\n+}\n+\n+void fnptr (void (*fn) (void));\n+\n+void\n+foo (void)\n+{\n+  struct A e;\n+\n+  if (bar2 (&e) < 0)\n+    abort ();\n+  {\n+    void baz (void)\n+      {\n+\tbar (&e);\n+      }\n+    fnptr (baz);\n+  }\n+  {\n+    struct A *f;\n+\n+    f = &e;\n+    if (f->c - f->a > f->d - f->a)\n+      f->c = f->d;\n+  }\n+}"}]}