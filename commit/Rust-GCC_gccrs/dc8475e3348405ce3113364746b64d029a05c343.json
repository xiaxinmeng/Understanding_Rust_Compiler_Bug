{"sha": "dc8475e3348405ce3113364746b64d029a05c343", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM4NDc1ZTMzNDg0MDVjZTMxMTMzNjQ3NDZiNjRkMDI5YTA1YzM0Mw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-01-14T08:09:32Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-01-15T13:29:43Z"}, "message": "Pytest in tests: improve\n\ngcc/ChangeLog:\n\n\t* doc/install.texi: Document that some tests need pytest module.\n\t* doc/sourcebuild.texi: Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\t* lib/gcov.exp: Use 'env python3' for execution of pytests.\n\tCheck that pytest accepts all needed options first.\n\tImprove formatting of PASS/FAIL lines.", "tree": {"sha": "297ae11b4734e5cf8541c81ed4e762e2cfbc6a7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/297ae11b4734e5cf8541c81ed4e762e2cfbc6a7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc8475e3348405ce3113364746b64d029a05c343", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc8475e3348405ce3113364746b64d029a05c343", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc8475e3348405ce3113364746b64d029a05c343", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc8475e3348405ce3113364746b64d029a05c343/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b36c9cd09472c8efb8405726b7cc94fa4ae7059f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b36c9cd09472c8efb8405726b7cc94fa4ae7059f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b36c9cd09472c8efb8405726b7cc94fa4ae7059f"}], "stats": {"total": 37, "additions": 29, "deletions": 8}, "files": [{"sha": "4c38244ae5899258c920615de966819cc95646bf", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc8475e3348405ce3113364746b64d029a05c343/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc8475e3348405ce3113364746b64d029a05c343/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=dc8475e3348405ce3113364746b64d029a05c343", "patch": "@@ -2990,7 +2990,7 @@ Second, you must have the testing tools installed.  This includes\n the DejaGnu site has links to these. For running the BRIG frontend\n tests, a tool to assemble the binary BRIGs from HSAIL text,\n @uref{https://github.com/HSAFoundation/HSAIL-Tools/,,HSAILasm} must\n-be installed.\n+be installed.  Some optional tests also require Python3 and pytest module.\n \n If the directories where @command{runtest} and @command{expect} were\n installed are not in the @env{PATH}, you may need to set the following"}, {"sha": "b9cbe21a4bb2e0c15221d1078ec8af5677920692", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc8475e3348405ce3113364746b64d029a05c343/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc8475e3348405ce3113364746b64d029a05c343/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=dc8475e3348405ce3113364746b64d029a05c343", "patch": "@@ -3092,6 +3092,10 @@ Check line counts in @command{gcov} tests.\n @item run-gcov [branches] [calls] @{ @var{opts} @var{sourcefile} @}\n Check branch and/or call counts, in addition to line counts, in\n @command{gcov} tests.\n+\n+@item run-gcov-pytest @{ @var{sourcefile} @var{pytest_file} @}\n+Check output of @command{gcov} intermediate format with a pytest\n+script.\n @end table\n \n @subsubsection Clean up generated test files"}, {"sha": "f3309653b77d6ad192e3a089b74342d16aaf9bb8", "filename": "gcc/testsuite/lib/gcov.exp", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc8475e3348405ce3113364746b64d029a05c343/gcc%2Ftestsuite%2Flib%2Fgcov.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc8475e3348405ce3113364746b64d029a05c343/gcc%2Ftestsuite%2Flib%2Fgcov.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcov.exp?ref=dc8475e3348405ce3113364746b64d029a05c343", "patch": "@@ -247,6 +247,19 @@ proc verify-calls { testname testcase file } {\n     return $failed\n }\n \n+proc gcov-pytest-format-line { args } {\n+    global subdir\n+\n+    set testcase [lindex $args 0]\n+    set pytest_script [lindex $args 1]\n+    set output_line [lindex $args 2]\n+\n+    set index [string first \"::\" $output_line]\n+    set test_output [string range $output_line [expr $index + 2] [string length $output_line]]\n+\n+    return \"$subdir/$testcase ${pytest_script}::${test_output}\"\n+}\n+\n # Call by dg-final to run gcov --json-format which produces a JSON file\n # that is later analysed by a pytest Python script.\n # We pass filename of a test via GCOV_PATH environment variable.\n@@ -261,30 +274,34 @@ proc run-gcov-pytest { args } {\n     set testcase [remote_download host $testcase]\n     set result [remote_exec host $GCOV \"$testcase -i\"]\n \n-    set result [remote_exec host \"pytest -m pytest --version\"]\n+    set pytest_cmd \"python3 -m pytest --color=no -rap -s --tb=no\"\n+    set result [remote_exec host \"$pytest_cmd --version\"]\n     set status [lindex $result 0]\n     if { $status != 0 } then {\n-      unresolved \"could not find Python interpreter and (or) pytest module for $testcase\"\n+      unsupported \"$subdir/$testcase run-gcov-pytest python3 pytest missing\"\n       return\n     }\n \n     set pytest_script [lindex $args 1]\n     setenv GCOV_PATH $testcase\n-    verbose \"pytest_script: $pytest_script\" 2\n-    spawn -noecho python3 -m pytest --color=no -rA -s --tb=no $srcdir/$subdir/$pytest_script\n+    verbose \"pytest_script: $srcdir $subdir $pytest_script\" 2\n+    spawn -noecho python3 -m pytest --color=no -rap -s --tb=no $srcdir/$subdir/$pytest_script\n \n     set prefix \"\\[^\\r\\n\\]*\"\n     expect {\n       -re \"FAILED($prefix)\\[^\\r\\n\\]+\\r\\n\" {\n-       fail \"$expect_out(1,string)\"\n+       set output [gcov-pytest-format-line $testcase $pytest_script $expect_out(1,string)]\n+       fail $output\n        exp_continue\n       }\n       -re \"ERROR($prefix)\\[^\\r\\n\\]+\\r\\n\" {\n-       fail \"$expect_out(1,string)\"\n+       set output [gcov-pytest-format-line $testcase $pytest_script $expect_out(1,string)]\n+       fail $output\n        exp_continue\n       }\n       -re \"PASSED($prefix)\\[^\\r\\n\\]+\\r\\n\" {\n-       pass \"$expect_out(1,string)\"\n+       set output [gcov-pytest-format-line $testcase $pytest_script $expect_out(1,string)]\n+       pass $output\n        exp_continue\n       }\n     }"}]}