{"sha": "dd8c071d66169f4696a86b1ebe4638a26696bce7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ4YzA3MWQ2NjE2OWY0Njk2YTg2YjFlYmU0NjM4YTI2Njk2YmNlNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-10-20T13:29:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-10-20T13:29:08Z"}, "message": "re PR debug/41340 (GCC produces different code with and without -g option)\n\n\tPR debug/41340\n\t* loop-invariant.c (calculate_loop_reg_pressure): Don't count regs\n\treferenced just in DEBUG_INSNs.\n\n\t* gcc.dg/pr41340.c: New test.\n\nFrom-SVN: r153011", "tree": {"sha": "41fd57790932a3036655aea364c231276401030b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41fd57790932a3036655aea364c231276401030b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd8c071d66169f4696a86b1ebe4638a26696bce7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd8c071d66169f4696a86b1ebe4638a26696bce7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd8c071d66169f4696a86b1ebe4638a26696bce7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd8c071d66169f4696a86b1ebe4638a26696bce7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b0cc341fd953d45f6418b2cbc646706eb3ad3bc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0cc341fd953d45f6418b2cbc646706eb3ad3bc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0cc341fd953d45f6418b2cbc646706eb3ad3bc5"}], "stats": {"total": 81, "additions": 80, "deletions": 1}, "files": [{"sha": "3e000cd424fb09234dec0f5f9d83023041716b67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd8c071d66169f4696a86b1ebe4638a26696bce7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd8c071d66169f4696a86b1ebe4638a26696bce7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd8c071d66169f4696a86b1ebe4638a26696bce7", "patch": "@@ -1,3 +1,9 @@\n+2009-10-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/41340\n+\t* loop-invariant.c (calculate_loop_reg_pressure): Don't count regs\n+\treferenced just in DEBUG_INSNs.\n+\n 2009-10-20  Richard Guenther  <rguenther@suse.de>\n \n \t* gimple.c (gimple_types_compatible_p): Simplify.  Move"}, {"sha": "8cbfdb30a92200d5e7fef8172e0979c73f7a62b4", "filename": "gcc/loop-invariant.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd8c071d66169f4696a86b1ebe4638a26696bce7/gcc%2Floop-invariant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd8c071d66169f4696a86b1ebe4638a26696bce7/gcc%2Floop-invariant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-invariant.c?ref=dd8c071d66169f4696a86b1ebe4638a26696bce7", "patch": "@@ -1785,7 +1785,7 @@ calculate_loop_reg_pressure (void)\n \n       FOR_BB_INSNS (bb, insn)\n \t{\n-\t  if (! INSN_P (insn))\n+\t  if (! NONDEBUG_INSN_P (insn))\n \t    continue;\n \n \t  mark_ref_regs (PATTERN (insn));"}, {"sha": "7a862affcbb5e0b8c0bb588e18dcf4d1ab945083", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd8c071d66169f4696a86b1ebe4638a26696bce7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd8c071d66169f4696a86b1ebe4638a26696bce7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dd8c071d66169f4696a86b1ebe4638a26696bce7", "patch": "@@ -1,3 +1,8 @@\n+2009-10-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/41340\n+\t* gcc.dg/pr41340.c: New test.\n+\n 2009-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/discr21.ad[sb]: New test."}, {"sha": "bafa61f5185d358dacb26be7024a639300b779f8", "filename": "gcc/testsuite/gcc.dg/pr41340.c", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd8c071d66169f4696a86b1ebe4638a26696bce7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41340.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd8c071d66169f4696a86b1ebe4638a26696bce7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41340.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41340.c?ref=dd8c071d66169f4696a86b1ebe4638a26696bce7", "patch": "@@ -0,0 +1,68 @@\n+/* PR debug/41340 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -g -fcompare-debug\" } */\n+/* { dg-options \"-O3 -g -fcompare-debug -march=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+\n+typedef struct { int t; } *T;\n+struct S1 { unsigned s1; };\n+struct S2 { struct S1 s2; };\n+struct S3 { unsigned s3; struct S2 **s4; };\n+struct S5 { struct S2 *s5; };\n+\n+extern void fn0 (void) __attribute__ ((__noreturn__));\n+T fn6 (struct S3);\n+void fn7 (void);\n+\n+static inline __attribute__((always_inline)) int\n+fn1 (const struct S1 *x)\n+{\n+  return x->s1;\n+}\n+\n+static inline __attribute__((always_inline)) int\n+fn2 (const struct S1 *x, unsigned y)\n+{\n+  if (y >= x->s1)\n+    fn0 ();\n+  return 0;\n+}\n+\n+static inline __attribute__((always_inline)) int\n+fn3 (struct S3 x)\n+{\n+  return (x.s3 == fn1 (*x.s4 ? &(*x.s4)->s2 : 0));\n+}\n+\n+static inline __attribute__((always_inline)) int\n+fn4 (struct S3 x)\n+{\n+  return fn2 (&(*x.s4)->s2, x.s3);\n+}\n+\n+int\n+fn5 (struct S3 x, T *y)\n+{\n+  if (!fn3 (x))\n+    {\n+      *y = (T) (long) fn4 (x);\n+      return 1;\n+    }\n+  return 0;\n+}\n+\n+void\n+test (struct S5 *x)\n+{\n+  struct S3 a;\n+  T b;\n+  unsigned char c = 0;\n+  a.s4 = &x->s5;\n+  while (fn5 (a, &b))\n+    if (!(b->t & 8))\n+      c = 1;\n+  a.s4 = &x->s5;\n+  while ((b = fn6 (a)))\n+    ;\n+  if (!c)\n+    fn7 ();\n+}"}]}