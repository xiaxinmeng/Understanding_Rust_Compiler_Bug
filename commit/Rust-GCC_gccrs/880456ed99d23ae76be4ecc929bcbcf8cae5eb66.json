{"sha": "880456ed99d23ae76be4ecc929bcbcf8cae5eb66", "node_id": "C_kwDOANBUbNoAKDg4MDQ1NmVkOTlkMjNhZTc2YmU0ZWNjOTI5YmNiY2Y4Y2FlNWViNjY", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-04-12T13:06:40Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-05-05T13:03:47Z"}, "message": "Remove loop-incremented dead code.\n\ngcc/ChangeLog:\n\n\t* genautomata.cc (create_composed_state): Remove dead code.\n\t* graphite-poly.cc (print_pdrs): Likewise.\n\t* lto-wrapper.cc (run_gcc): Likewise.\n\t* tree-switch-conversion.cc (switch_decision_tree::balance_case_nodes):\n\tLikewise.", "tree": {"sha": "bc760231715719b7ff5c2a96e023eda5ddeabdce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc760231715719b7ff5c2a96e023eda5ddeabdce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/880456ed99d23ae76be4ecc929bcbcf8cae5eb66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/880456ed99d23ae76be4ecc929bcbcf8cae5eb66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/880456ed99d23ae76be4ecc929bcbcf8cae5eb66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/880456ed99d23ae76be4ecc929bcbcf8cae5eb66/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c53cf2e59533434608c6daac0271248d1167da6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c53cf2e59533434608c6daac0271248d1167da6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c53cf2e59533434608c6daac0271248d1167da6"}], "stats": {"total": 48, "additions": 13, "deletions": 35}, "files": [{"sha": "389c1c3e0ed7534ec5db0478d72d63da449eb657", "filename": "gcc/genautomata.cc", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880456ed99d23ae76be4ecc929bcbcf8cae5eb66/gcc%2Fgenautomata.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880456ed99d23ae76be4ecc929bcbcf8cae5eb66/gcc%2Fgenautomata.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.cc?ref=880456ed99d23ae76be4ecc929bcbcf8cae5eb66", "patch": "@@ -5661,7 +5661,6 @@ create_composed_state (state_t original_state, arc_t arcs_marked_by_insn,\n   state_t state_in_table;\n   state_t temp_state;\n   alt_state_t canonical_alt_states_list;\n-  int alts_number;\n   int new_state_p = 0;\n \n   if (arcs_marked_by_insn == NULL)\n@@ -5731,17 +5730,15 @@ create_composed_state (state_t original_state, arc_t arcs_marked_by_insn,\n \t\t      || (curr_arc->insn->insn_reserv_decl\n \t\t\t  != DECL_INSN_RESERV (advance_cycle_insn_decl)))\n \t\t    add_arc (state, curr_arc->to_state, curr_arc->insn);\n-            }\n-          arcs_marked_by_insn->to_state = state;\n-          for (alts_number = 0,\n-\t       curr_arc = arcs_marked_by_insn->next_arc_marked_by_insn;\n-               curr_arc != NULL;\n-               curr_arc = next_arc)\n-            {\n-              next_arc = curr_arc->next_arc_marked_by_insn;\n-              remove_arc (original_state, curr_arc);\n-\t      alts_number++;\n-            }\n+\t    }\n+\t  arcs_marked_by_insn->to_state = state;\n+\t  for (curr_arc = arcs_marked_by_insn->next_arc_marked_by_insn;\n+\t       curr_arc != NULL;\n+\t       curr_arc = next_arc)\n+\t    {\n+\t      next_arc = curr_arc->next_arc_marked_by_insn;\n+\t      remove_arc (original_state, curr_arc);\n+\t    }\n         }\n     }\n   if (!state->it_was_placed_in_stack_for_DFA_forming)"}, {"sha": "173aae074424c151917081d78dadfb000e393a08", "filename": "gcc/graphite-poly.cc", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880456ed99d23ae76be4ecc929bcbcf8cae5eb66/gcc%2Fgraphite-poly.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880456ed99d23ae76be4ecc929bcbcf8cae5eb66/gcc%2Fgraphite-poly.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.cc?ref=880456ed99d23ae76be4ecc929bcbcf8cae5eb66", "patch": "@@ -341,20 +341,10 @@ dump_gbb_conditions (FILE *file, gimple_poly_bb_p gbb)\n void\n print_pdrs (FILE *file, poly_bb_p pbb)\n {\n-  int nb_reads = 0;\n-  int nb_writes = 0;\n-\n   if (PBB_DRS (pbb).is_empty ())\n     return;\n \n   fprintf (file, \"Data references (\\n\");\n-\n-  for (poly_dr_p pdr : PBB_DRS (pbb))\n-    if (PDR_TYPE (pdr) == PDR_READ)\n-      nb_reads++;\n-    else\n-      nb_writes++;\n-\n   fprintf (file, \"Read data references (\\n\");\n \n   for (poly_dr_p pdr : PBB_DRS (pbb))"}, {"sha": "26e06e77be4e0afb2bc3e913062a9c51cab5d205", "filename": "gcc/lto-wrapper.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880456ed99d23ae76be4ecc929bcbcf8cae5eb66/gcc%2Flto-wrapper.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880456ed99d23ae76be4ecc929bcbcf8cae5eb66/gcc%2Flto-wrapper.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.cc?ref=880456ed99d23ae76be4ecc929bcbcf8cae5eb66", "patch": "@@ -1428,7 +1428,6 @@ run_gcc (unsigned argc, char *argv[])\n   char **lto_argv, **ltoobj_argv;\n   bool linker_output_rel = false;\n   bool skip_debug = false;\n-  unsigned n_debugobj;\n   const char *incoming_dumppfx = dumppfx = NULL;\n   static char current_dir[] = { '.', DIR_SEPARATOR, '\\0' };\n \n@@ -1871,7 +1870,6 @@ run_gcc (unsigned argc, char *argv[])\n \n   /* Copy the early generated debug info from the objects to temporary\n      files and append those to the partial link commandline.  */\n-  n_debugobj = 0;\n   early_debug_object_names = NULL;\n   if (! skip_debug)\n     {\n@@ -1881,10 +1879,7 @@ run_gcc (unsigned argc, char *argv[])\n \t{\n \t  const char *tem;\n \t  if ((tem = debug_objcopy (ltoobj_argv[i], !linker_output_rel)))\n-\t    {\n-\t      early_debug_object_names[i] = tem;\n-\t      n_debugobj++;\n-\t    }\n+\t    early_debug_object_names[i] = tem;\n \t}\n     }\n "}, {"sha": "50a17927f39dbea067dc3e015c9a5fb923a6fd74", "filename": "gcc/tree-switch-conversion.cc", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880456ed99d23ae76be4ecc929bcbcf8cae5eb66/gcc%2Ftree-switch-conversion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880456ed99d23ae76be4ecc929bcbcf8cae5eb66/gcc%2Ftree-switch-conversion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.cc?ref=880456ed99d23ae76be4ecc929bcbcf8cae5eb66", "patch": "@@ -2039,18 +2039,14 @@ switch_decision_tree::balance_case_nodes (case_tree_node **head,\n   if (np)\n     {\n       int i = 0;\n-      int ranges = 0;\n       case_tree_node **npp;\n       case_tree_node *left;\n       profile_probability prob = profile_probability::never ();\n \n-      /* Count the number of entries on branch.  Also count the ranges.  */\n+      /* Count the number of entries on branch.  */\n \n       while (np)\n \t{\n-\t  if (!tree_int_cst_equal (np->m_c->get_low (), np->m_c->get_high ()))\n-\t    ranges++;\n-\n \t  i++;\n \t  prob += np->m_c->m_prob;\n \t  np = np->m_right;\n@@ -2063,8 +2059,8 @@ switch_decision_tree::balance_case_nodes (case_tree_node **head,\n \t  left = *npp;\n \t  profile_probability pivot_prob = prob.apply_scale (1, 2);\n \n-\t  /* Find the place in the list that bisects the list's total cost,\n-\t     where ranges count as 2.  */\n+\t  /* Find the place in the list that bisects the list's total cost\n+\t     by probability.  */\n \t  while (1)\n \t    {\n \t      /* Skip nodes while their probability does not reach"}]}