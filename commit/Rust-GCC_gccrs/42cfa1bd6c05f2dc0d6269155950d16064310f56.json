{"sha": "42cfa1bd6c05f2dc0d6269155950d16064310f56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJjZmExYmQ2YzA1ZjJkYzBkNjI2OTE1NTk1MGQxNjA2NDMxMGY1Ng==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-08-16T17:00:08Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-08-17T13:22:49Z"}, "message": "libstdc++: Add conditional noexcept to std::exchange\n\nThis is not required by the standard, but seems useful.\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/utility (exchange): Add noexcept-specifier.\n\t* testsuite/20_util/exchange/noexcept.cc: New test.", "tree": {"sha": "2ee68c91791691e9768c962747e9613dcb866067", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ee68c91791691e9768c962747e9613dcb866067"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42cfa1bd6c05f2dc0d6269155950d16064310f56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42cfa1bd6c05f2dc0d6269155950d16064310f56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42cfa1bd6c05f2dc0d6269155950d16064310f56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42cfa1bd6c05f2dc0d6269155950d16064310f56/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2db38d9fcacf522fe9b98ba847e79ba33abdcadc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2db38d9fcacf522fe9b98ba847e79ba33abdcadc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2db38d9fcacf522fe9b98ba847e79ba33abdcadc"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "69d274ff194b0e703d4708fca6d7f729b1548175", "filename": "libstdc++-v3/include/std/utility", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42cfa1bd6c05f2dc0d6269155950d16064310f56/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42cfa1bd6c05f2dc0d6269155950d16064310f56/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility?ref=42cfa1bd6c05f2dc0d6269155950d16064310f56", "patch": "@@ -91,6 +91,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     _GLIBCXX20_CONSTEXPR\n     inline _Tp\n     exchange(_Tp& __obj, _Up&& __new_val)\n+    noexcept(__and_<is_nothrow_move_constructible<_Tp>,\n+\t\t    is_nothrow_assignable<_Tp&, _Up>>::value)\n     { return std::__exchange(__obj, std::forward<_Up>(__new_val)); }\n \n #if __cplusplus >= 201703L"}, {"sha": "6363a4d4c06ffb283a4429f58d6564234f752655", "filename": "libstdc++-v3/testsuite/20_util/exchange/noexcept.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42cfa1bd6c05f2dc0d6269155950d16064310f56/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fexchange%2Fnoexcept.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42cfa1bd6c05f2dc0d6269155950d16064310f56/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fexchange%2Fnoexcept.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fexchange%2Fnoexcept.cc?ref=42cfa1bd6c05f2dc0d6269155950d16064310f56", "patch": "@@ -0,0 +1,39 @@\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <utility>\n+\n+// This is a GCC extension. std::exchange is not required to be noexcept.\n+\n+static_assert( noexcept( std::exchange(std::declval<int&>(), 1) ) );\n+\n+struct X\n+{\n+  X(const X&);\n+  X(X&&) noexcept;\n+  X& operator=(const X&);\n+  X& operator=(X&&) noexcept;\n+  X& operator=(int);\n+};\n+\n+extern X x, x2;\n+static_assert( noexcept( std::exchange(x, std::move(x2)) ) );\n+static_assert( ! noexcept( std::exchange(x, 1) ) );\n+\n+struct Y\n+{\n+  Y(Y&&) noexcept;\n+  Y& operator=(Y&&);\n+};\n+\n+extern Y y, y2;\n+static_assert( ! noexcept( std::exchange(y, std::move(y2)) ) );\n+\n+struct Z\n+{\n+  Z(Z&&)noexcept;\n+  Z& operator=(Z&&) ;\n+};\n+\n+extern Z z, z2;\n+static_assert( ! noexcept( std::exchange(z, std::move(z2)) ) );"}]}