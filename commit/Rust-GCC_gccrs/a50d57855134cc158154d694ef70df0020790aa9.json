{"sha": "a50d57855134cc158154d694ef70df0020790aa9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUwZDU3ODU1MTM0Y2MxNTgxNTRkNjk0ZWY3MGRmMDAyMDc5MGFhOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-14T09:26:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-14T09:26:32Z"}, "message": "[multiple changes]\n\n2010-06-14  Robert Dewar  <dewar@adacore.com>\n\n\t* gnatcmd.adb, sem_util.adb, exp_ch3.adb: Minor reformatting\n\n2010-06-14  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Save_References): If an identifier has been rewritten\n\tduring analysis as an explicit dereference, keep the reference implicit\n\tin the generic, but preserve the entity if global. This prevents\n\tmalformed generic trees in the presence of some nested generics.\n\n2010-06-14  Sergey Rybin  <rybin@adacore.com>\n\n\t* gnat_ugn.texi: For the GNAT driver, clarify the effect of calling the\n\ttool with '-files=' option. Also fix some small errors (wrong brackets)\n\nFrom-SVN: r160716", "tree": {"sha": "055b171a2b1f8340a0d798c1977eb41e2c6c9c32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/055b171a2b1f8340a0d798c1977eb41e2c6c9c32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a50d57855134cc158154d694ef70df0020790aa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a50d57855134cc158154d694ef70df0020790aa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a50d57855134cc158154d694ef70df0020790aa9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a50d57855134cc158154d694ef70df0020790aa9/comments", "author": null, "committer": null, "parents": [{"sha": "5d993afdcbc8174b8edc27911da2d371838b4c07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d993afdcbc8174b8edc27911da2d371838b4c07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d993afdcbc8174b8edc27911da2d371838b4c07"}], "stats": {"total": 82, "additions": 58, "deletions": 24}, "files": [{"sha": "af9bbd120628bc18eabf8049aad5691de18590b9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50d57855134cc158154d694ef70df0020790aa9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50d57855134cc158154d694ef70df0020790aa9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a50d57855134cc158154d694ef70df0020790aa9", "patch": "@@ -1,3 +1,19 @@\n+2010-06-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnatcmd.adb, sem_util.adb, exp_ch3.adb: Minor reformatting\n+\n+2010-06-14  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Save_References): If an identifier has been rewritten\n+\tduring analysis as an explicit dereference, keep the reference implicit\n+\tin the generic, but preserve the entity if global. This prevents\n+\tmalformed generic trees in the presence of some nested generics.\n+\n+2010-06-14  Sergey Rybin  <rybin@adacore.com>\n+\n+\t* gnat_ugn.texi: For the GNAT driver, clarify the effect of calling the\n+\ttool with '-files=' option. Also fix some small errors (wrong brackets)\n+\n 2010-06-14  Vincent Celier  <celier@adacore.com>\n \n \t* gnatbind.adb: Call Scan_ALI with Directly_Scanned set to True for all"}, {"sha": "83fc7e39d4185a075a8218a9dc225e71f954dec0", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50d57855134cc158154d694ef70df0020790aa9/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50d57855134cc158154d694ef70df0020790aa9/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=a50d57855134cc158154d694ef70df0020790aa9", "patch": "@@ -593,7 +593,7 @@ package body Exp_Ch3 is\n       ------------------------\n \n       function Init_One_Dimension (N : Int) return List_Id is\n-         Index      : Entity_Id;\n+         Index : Entity_Id;\n \n       begin\n          --  If the component does not need initializing, then there is nothing"}, {"sha": "b1831da2e9bf7b9da1872df064d4716ff8c07c4c", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50d57855134cc158154d694ef70df0020790aa9/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50d57855134cc158154d694ef70df0020790aa9/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=a50d57855134cc158154d694ef70df0020790aa9", "patch": "@@ -14799,17 +14799,17 @@ to @command{gnatmake} that the binder generated file should be compiled\n @noindent\n A number of GNAT tools, other than @command{^gnatmake^gnatmake^}\n can benefit from project files:\n-@command{^gnatbind^gnatbind^},\n-@command{^gnatcheck^gnatcheck^}),\n-@command{^gnatclean^gnatclean^}),\n+(@command{^gnatbind^gnatbind^},\n+@command{^gnatcheck^gnatcheck^},\n+@command{^gnatclean^gnatclean^},\n @command{^gnatelim^gnatelim^},\n @command{^gnatfind^gnatfind^},\n @command{^gnatlink^gnatlink^},\n @command{^gnatls^gnatls^},\n @command{^gnatmetric^gnatmetric^},\n @command{^gnatpp^gnatpp^},\n @command{^gnatstub^gnatstub^},\n-and @command{^gnatxref^gnatxref^}. However, none of these tools can be invoked\n+and @command{^gnatxref^gnatxref^}). However, none of these tools can be invoked\n directly with a project file switch (@option{^-P^/PROJECT_FILE=^}).\n They must be invoked through the @command{gnat} driver.\n \n@@ -15085,8 +15085,8 @@ found in the package corresponding to the tool:\n except @code{^Switches^Switches^ (\"main.adb\")}\n for @code{^gnatlink^gnatlink^}.\n It is also possible to invoke some of the tools,\n-@code{^gnatcheck^gnatcheck^}),\n-@code{^gnatmetric^gnatmetric^}),\n+(@code{^gnatcheck^gnatcheck^},\n+@code{^gnatmetric^gnatmetric^},\n and @code{^gnatpp^gnatpp^})\n on a set of project units thanks to the combination of the switches\n @option{-P}, @option{-U} and possibly the main unit when one is interested\n@@ -15106,7 +15106,10 @@ gnat metric -Pproj -U main_unit\n @end smallexample\n will compute the metrics for the closure of units rooted at\n @code{main_unit}. This last possibility relies implicitly\n-on @command{gnatbind}'s option @option{-R}.\n+on @command{gnatbind}'s option @option{-R}. But if the argument files for the\n+tool invoked by the the @command{gnat} driver are explicitly  specified\n+either directly or through the tool @option{-files} option, then the tool\n+is called only for these explicitly specified files.\n \n @c **********************\n @node An Extended Example"}, {"sha": "01685e33ea293cbf9a364ebcb14a301fb59019ba", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50d57855134cc158154d694ef70df0020790aa9/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50d57855134cc158154d694ef70df0020790aa9/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=a50d57855134cc158154d694ef70df0020790aa9", "patch": "@@ -318,8 +318,8 @@ procedure GNATCmd is\n       --  there is a -files= switch.\n \n       for Index in 1 .. Last_Switches.Last loop\n-         if Last_Switches.Table (Index).all'Length > 7 and then\n-           Last_Switches.Table (Index) (1 .. 7) = \"-files=\"\n+         if Last_Switches.Table (Index).all'Length > 7\n+           and then Last_Switches.Table (Index) (1 .. 7) = \"-files=\"\n          then\n             Add_Sources := False;\n             exit;\n@@ -353,13 +353,13 @@ procedure GNATCmd is\n          end if;\n       end loop;\n \n-      --  If all arguments are switchesand there is no switch -files=, add the\n-      --  path names of all the sources of the main project.\n+      --  If all arguments are switches and there is no switch -files=, add\n+      --  the path names of all the sources of the main project.\n \n       if Add_Sources then\n \n-         --  For gnatcheck, gnatpp and gnatmetric , create a temporary file and\n-         --  put the list of sources in it.\n+         --  For gnatcheck, gnatpp and gnatmetric , create a temporary file\n+         --  and put the list of sources in it.\n \n          if The_Command = Check  or else\n             The_Command = Pretty or else"}, {"sha": "29e1617a2f5b6bc8b88ab2411396ee2ecc8c004e", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50d57855134cc158154d694ef70df0020790aa9/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50d57855134cc158154d694ef70df0020790aa9/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=a50d57855134cc158154d694ef70df0020790aa9", "patch": "@@ -4848,8 +4848,13 @@ package body Sem_Ch12 is\n       --  To detect this case we have to rescan the list of formals, which\n       --  is usually short enough to ignore the resulting inefficiency.\n \n+      -----------------------------\n+      -- Denotes_Previous_Actual --\n+      -----------------------------\n+\n       function Denotes_Previous_Actual (Typ : Entity_Id) return Boolean is\n          Prev : Entity_Id;\n+\n       begin\n          Prev := First_Entity (Instance);\n          while Present (Prev) loop\n@@ -4859,12 +4864,15 @@ package body Sem_Ch12 is\n               and then Entity (Subtype_Indication (Parent (Prev))) = Typ\n             then\n                return True;\n+\n             elsif Prev = E then\n                return False;\n+\n             else\n                Next_Entity (Prev);\n             end if;\n          end loop;\n+\n          return False;\n       end Denotes_Previous_Actual;\n \n@@ -5874,7 +5882,7 @@ package body Sem_Ch12 is\n \n          --  If we are not instantiating, then this is where we load and\n          --  analyze subunits, i.e. at the point where the stub occurs. A\n-         --  more permissible system might defer this analysis to the point\n+         --  more permissive system might defer this analysis to the point\n          --  of instantiation, but this seems to complicated for now.\n \n          if not Instantiating then\n@@ -10480,10 +10488,18 @@ package body Sem_Ch12 is\n                Collect_Previous_Instances\n                  (Private_Declarations (Specification (Decl)));\n \n+            --  Previous non-generic bodies may contain instances as well\n+\n             elsif Nkind (Decl) = N_Package_Body\n               and then Ekind (Corresponding_Spec (Decl)) /= E_Generic_Package\n             then\n                Collect_Previous_Instances (Declarations (Decl));\n+\n+            elsif Nkind (Decl) = N_Subprogram_Body\n+              and then not Acts_As_Spec (Decl)\n+              and then not Is_Generic_Subprogram (Corresponding_Spec (Decl))\n+            then\n+               Collect_Previous_Instances (Declarations (Decl));\n             end if;\n \n             Next (Decl);\n@@ -12023,18 +12039,17 @@ package body Sem_Ch12 is\n                elsif Nkind (N2) = N_Explicit_Dereference then\n \n                   --  An identifier is rewritten as a dereference if it is the\n-                  --  prefix in an implicit dereference.\n-\n-                  --  Check whether corresponding entity in prefix is global\n+                  --  prefix in an implicit dereference (call or attribute).\n+                  --  The analysis of an instantiation will expand the node\n+                  --  again, so we preserve the original tree but link it to\n+                  --  the resolved entity in case it is global.\n \n                   if Is_Entity_Name (Prefix (N2))\n                     and then Present (Entity (Prefix (N2)))\n                     and then Is_Global (Entity (Prefix (N2)))\n                   then\n-                     Rewrite (N,\n-                       Make_Explicit_Dereference (Loc,\n-                          Prefix =>\n-                            New_Occurrence_Of (Entity (Prefix (N2)), Loc)));\n+                     Set_Associated_Node (N, Prefix (N2));\n+\n                   elsif Nkind (Prefix (N2)) = N_Function_Call\n                     and then Is_Global (Entity (Name (Prefix (N2))))\n                   then"}, {"sha": "27ec8abcd29419165207680c9ee43602eaed77a7", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50d57855134cc158154d694ef70df0020790aa9/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50d57855134cc158154d694ef70df0020790aa9/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=a50d57855134cc158154d694ef70df0020790aa9", "patch": "@@ -543,8 +543,8 @@ package body Sem_Util is\n                           and then Is_Constrained (Root_Type (T)))\n            and then not Has_Unknown_Discriminants (T)\n          then\n-            --  If the type of the dereference is already constrained, it\n-            --  is an actual subtype.\n+            --  If the type of the dereference is already constrained, it is an\n+            --  actual subtype.\n \n             if Is_Array_Type (Etype (N))\n               and then Is_Constrained (Etype (N))"}]}