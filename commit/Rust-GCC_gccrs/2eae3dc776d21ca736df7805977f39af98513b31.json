{"sha": "2eae3dc776d21ca736df7805977f39af98513b31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVhZTNkYzc3NmQyMWNhNzM2ZGY3ODA1OTc3ZjM5YWY5ODUxM2IzMQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-06-24T16:19:11Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-06-24T16:19:11Z"}, "message": "re PR fortran/32460 (structure constructor not allowed if a USEd type has private components)\n\n2007-06-24  Tobias Burnus  <burnus@net-de>\n\n\tPR fortran/32460\n\t* interface.c (gfc_compare_derived_types): Add access check.\n\t* symbol.c (gfc_find_component): Ditto.\n\t(gfc_set_component_attr,gfc_get_component_attr) Copy access state.\n\t* dump-parse-tree.c (gfc_show_components): Dump access state.\n\t* gfortran.h (struct gfc_component): Add gfc_access.\n\t* module.c (mio_component): Add access state.\n\t* (gfc_match_structure_constructor): Check for private access state.\n\n2007-06-24  Tobias Burnus  <burnus@net-de>\n\n\tPR fortran/32460\n\t* gfortran.dg/private_type_6.f90: New.\n\nFrom-SVN: r125984", "tree": {"sha": "feea8d3621fb013795c4e24773c0d395214dd5fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/feea8d3621fb013795c4e24773c0d395214dd5fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2eae3dc776d21ca736df7805977f39af98513b31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2eae3dc776d21ca736df7805977f39af98513b31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2eae3dc776d21ca736df7805977f39af98513b31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2eae3dc776d21ca736df7805977f39af98513b31/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f0b3c58d8be622e7305c7d503a5d81b96b1db621", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0b3c58d8be622e7305c7d503a5d81b96b1db621", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0b3c58d8be622e7305c7d503a5d81b96b1db621"}], "stats": {"total": 67, "additions": 66, "deletions": 1}, "files": [{"sha": "6c9c3828c82db10a7dbad6951462f723ac36513a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eae3dc776d21ca736df7805977f39af98513b31/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eae3dc776d21ca736df7805977f39af98513b31/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2eae3dc776d21ca736df7805977f39af98513b31", "patch": "@@ -1,3 +1,14 @@\n+2007-06-24  Tobias Burnus  <burnus@net-de>\n+\n+\tPR fortran/32460\n+\t* interface.c (gfc_compare_derived_types): Add access check.\n+\t* symbol.c (gfc_find_component): Ditto.\n+\t(gfc_set_component_attr,gfc_get_component_attr) Copy access state.\n+\t* dump-parse-tree.c (gfc_show_components): Dump access state.\n+\t* gfortran.h (struct gfc_component): Add gfc_access.\n+\t* module.c (mio_component): Add access state.\n+\t* (gfc_match_structure_constructor): Check for private access state.\n+\n 2007-06-24  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/32298"}, {"sha": "5d26a78af1b6a08077a417c76ea1c950b78795e9", "filename": "gcc/fortran/dump-parse-tree.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eae3dc776d21ca736df7805977f39af98513b31/gcc%2Ffortran%2Fdump-parse-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eae3dc776d21ca736df7805977f39af98513b31/gcc%2Ffortran%2Fdump-parse-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.c?ref=2eae3dc776d21ca736df7805977f39af98513b31", "patch": "@@ -624,6 +624,8 @@ gfc_show_components (gfc_symbol *sym)\n \tgfc_status (\" DIMENSION\");\n       gfc_status_char (' ');\n       gfc_show_array_spec (c->as);\n+      if (c->access)\n+\tgfc_status (\" %s\", gfc_code2string (access_types, c->access));\n       gfc_status (\")\");\n       if (c->next != NULL)\n \tgfc_status_char (' ');"}, {"sha": "9a653ce29acb362700eb3d03b796d164d4308b30", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eae3dc776d21ca736df7805977f39af98513b31/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eae3dc776d21ca736df7805977f39af98513b31/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=2eae3dc776d21ca736df7805977f39af98513b31", "patch": "@@ -743,6 +743,7 @@ typedef struct gfc_component\n   gfc_typespec ts;\n \n   int pointer, allocatable, dimension;\n+  gfc_access access;\n   gfc_array_spec *as;\n \n   tree backend_decl;"}, {"sha": "da8696b81da1d167712c1e523a36e2a14cd45768", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eae3dc776d21ca736df7805977f39af98513b31/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eae3dc776d21ca736df7805977f39af98513b31/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=2eae3dc776d21ca736df7805977f39af98513b31", "patch": "@@ -364,6 +364,9 @@ gfc_compare_derived_types (gfc_symbol *derived1, gfc_symbol *derived2)\n       if (strcmp (dt1->name, dt2->name) != 0)\n \treturn 0;\n \n+      if (dt1->access != dt2->access)\n+\treturn 0;\n+\n       if (dt1->pointer != dt2->pointer)\n \treturn 0;\n "}, {"sha": "14d26d9e43291bb09986ae7620de105dc5893332", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eae3dc776d21ca736df7805977f39af98513b31/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eae3dc776d21ca736df7805977f39af98513b31/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=2eae3dc776d21ca736df7805977f39af98513b31", "patch": "@@ -2065,6 +2065,7 @@ mio_component (gfc_component *c)\n   mio_integer (&c->dimension);\n   mio_integer (&c->pointer);\n   mio_integer (&c->allocatable);\n+  c->access = MIO_NAME (gfc_access) (c->access, access_types); \n \n   mio_expr (&c->initializer);\n   mio_rparen ();"}, {"sha": "14253f6f1bd2efb0991b326514d706b6b989e018", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eae3dc776d21ca736df7805977f39af98513b31/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eae3dc776d21ca736df7805977f39af98513b31/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=2eae3dc776d21ca736df7805977f39af98513b31", "patch": "@@ -1888,6 +1888,7 @@ gfc_match_structure_constructor (gfc_symbol *sym, gfc_expr **result)\n   gfc_expr *e;\n   locus where;\n   match m;\n+  bool private_comp = false;\n \n   head = tail = NULL;\n \n@@ -1900,6 +1901,11 @@ gfc_match_structure_constructor (gfc_symbol *sym, gfc_expr **result)\n \n   for (comp = sym->components; comp; comp = comp->next)\n     {\n+      if (comp->access == ACCESS_PRIVATE)\n+\t{\n+\t  private_comp = true;\n+\t  break;\n+\t}\n       if (head == NULL)\n \ttail = head = gfc_get_constructor ();\n       else\n@@ -1928,6 +1934,14 @@ gfc_match_structure_constructor (gfc_symbol *sym, gfc_expr **result)\n       break;\n     }\n \n+  if (sym->attr.use_assoc\n+      && (sym->component_access == ACCESS_PRIVATE || private_comp))\n+    {\n+      gfc_error (\"Structure constructor for '%s' at %C has PRIVATE \"\n+\t\t \"components\", sym->name);\n+      goto cleanup;\n+    }\n+\n   if (gfc_match_char (')') != MATCH_YES)\n     goto syntax;\n "}, {"sha": "e1b27dc0fb764408a3826c51e7bc6359b8ad30fd", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eae3dc776d21ca736df7805977f39af98513b31/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eae3dc776d21ca736df7805977f39af98513b31/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=2eae3dc776d21ca736df7805977f39af98513b31", "patch": "@@ -1615,7 +1615,8 @@ gfc_find_component (gfc_symbol *sym, const char *name)\n \t       name, sym->name);\n   else\n     {\n-      if (sym->attr.use_assoc && sym->component_access == ACCESS_PRIVATE)\n+      if (sym->attr.use_assoc && (sym->component_access == ACCESS_PRIVATE\n+\t\t\t\t  || p->access == ACCESS_PRIVATE))\n \t{\n \t  gfc_error (\"Component '%s' at %C is a PRIVATE component of '%s'\",\n \t\t     name, sym->name);\n@@ -1656,6 +1657,7 @@ gfc_set_component_attr (gfc_component *c, symbol_attribute *attr)\n   c->dimension = attr->dimension;\n   c->pointer = attr->pointer;\n   c->allocatable = attr->allocatable;\n+  c->access = attr->access;\n }\n \n \n@@ -1670,6 +1672,7 @@ gfc_get_component_attr (symbol_attribute *attr, gfc_component *c)\n   attr->dimension = c->dimension;\n   attr->pointer = c->pointer;\n   attr->allocatable = c->allocatable;\n+  attr->access = c->access;\n }\n \n "}, {"sha": "1600cc04039a2df976ab5de22955a9d368d6267a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eae3dc776d21ca736df7805977f39af98513b31/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eae3dc776d21ca736df7805977f39af98513b31/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2eae3dc776d21ca736df7805977f39af98513b31", "patch": "@@ -1,3 +1,8 @@\n+2007-06-24  Tobias Burnus  <burnus@net-de>\n+\n+\tPR fortran/32460\n+\t* gfortran.dg/private_type_6.f90: New.\n+\n 2007-06-24  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/31726"}, {"sha": "0d7ec534be00c18711afe304fd052d89378b3205", "filename": "gcc/testsuite/gfortran.dg/private_type_6.f90", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eae3dc776d21ca736df7805977f39af98513b31/gcc%2Ftestsuite%2Fgfortran.dg%2Fprivate_type_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eae3dc776d21ca736df7805977f39af98513b31/gcc%2Ftestsuite%2Fgfortran.dg%2Fprivate_type_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fprivate_type_6.f90?ref=2eae3dc776d21ca736df7805977f39af98513b31", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do compile }\n+! PR fortran/32460\n+!\n+module foomod\n+  implicit none\n+  type :: footype\n+    private\n+    integer :: dummy\n+  end type footype\n+  TYPE :: bartype\n+    integer :: dummy\n+    integer, private :: dummy2\n+  end type bartype\n+end module foomod\n+\n+program foo_test\n+  USE foomod\n+  implicit none\n+  TYPE(footype) :: foo\n+  TYPE(bartype) :: foo2\n+  foo  = footype(1) ! { dg-error \"has PRIVATE components\" }\n+  foo2 = bartype(1,2) ! { dg-error \"has PRIVATE components\" }\n+  foo2%dummy2 = 5 ! { dg-error \"is a PRIVATE component\" }\n+end program foo_test\n+! { dg-final { cleanup-tree-dump \"foomod\" } }"}]}