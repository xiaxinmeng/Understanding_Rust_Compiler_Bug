{"sha": "bc382218cee3c9536da0fbdf3ee61e4b93edb02b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMzODIyMThjZWUzYzk1MzZkYTBmYmRmM2VlNjFlNGI5M2VkYjAyYg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-05-22T18:55:53Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-05-22T18:55:53Z"}, "message": "re PR fortran/44212 ([OOP] ICE when defining a pointer component before defining the class and calling a TBP then)\n\n2010-05-22  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/44212\n\t* match.c (gfc_match_select_type): On error jump back out of the local\n\tnamespace.\n\t* parse.c (parse_derived): Defer creation of vtab symbols to resolution\n\tstage, more precisely to ...\n\t* resolve.c (resolve_fl_derived): ... this place.\n\n\n2010-05-22  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/44212\n\t* gfortran.dg/class_22.f03: New.\n\nFrom-SVN: r159745", "tree": {"sha": "83fbfbe19ac02ba3e65af83b1d91ce86bc69643e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83fbfbe19ac02ba3e65af83b1d91ce86bc69643e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc382218cee3c9536da0fbdf3ee61e4b93edb02b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc382218cee3c9536da0fbdf3ee61e4b93edb02b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc382218cee3c9536da0fbdf3ee61e4b93edb02b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc382218cee3c9536da0fbdf3ee61e4b93edb02b/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09c58f303c581409342f0dfe304192216fe1830b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09c58f303c581409342f0dfe304192216fe1830b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09c58f303c581409342f0dfe304192216fe1830b"}], "stats": {"total": 93, "additions": 73, "deletions": 20}, "files": [{"sha": "abba8f50097bc016af107a929c1636159d581b2f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc382218cee3c9536da0fbdf3ee61e4b93edb02b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc382218cee3c9536da0fbdf3ee61e4b93edb02b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bc382218cee3c9536da0fbdf3ee61e4b93edb02b", "patch": "@@ -1,3 +1,12 @@\n+2010-05-22  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/44212\n+\t* match.c (gfc_match_select_type): On error jump back out of the local\n+\tnamespace.\n+\t* parse.c (parse_derived): Defer creation of vtab symbols to resolution\n+\tstage, more precisely to ...\n+\t* resolve.c (resolve_fl_derived): ... this place.\n+\n 2010-05-22  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/44213"}, {"sha": "a2ecb3a65f2378edfc472f3c7e4615fdd08b7ea6", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc382218cee3c9536da0fbdf3ee61e4b93edb02b/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc382218cee3c9536da0fbdf3ee61e4b93edb02b/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=bc382218cee3c9536da0fbdf3ee61e4b93edb02b", "patch": "@@ -4319,7 +4319,10 @@ gfc_match_select_type (void)\n       expr1 = gfc_get_expr();\n       expr1->expr_type = EXPR_VARIABLE;\n       if (gfc_get_sym_tree (name, NULL, &expr1->symtree, false))\n-\treturn MATCH_ERROR;\n+\t{\n+\t  m = MATCH_ERROR;\n+\t  goto cleanup;\n+\t}\n       if (expr2->ts.type == BT_UNKNOWN)\n \texpr1->symtree->n.sym->attr.untyped = 1;\n       else\n@@ -4331,19 +4334,20 @@ gfc_match_select_type (void)\n     {\n       m = gfc_match (\" %e \", &expr1);\n       if (m != MATCH_YES)\n-\treturn m;\n+\tgoto cleanup;\n     }\n \n   m = gfc_match (\" )%t\");\n   if (m != MATCH_YES)\n-    return m;\n+    goto cleanup;\n \n   /* Check for F03:C811.  */\n   if (!expr2 && (expr1->expr_type != EXPR_VARIABLE || expr1->ref != NULL))\n     {\n       gfc_error (\"Selector in SELECT TYPE at %C is not a named variable; \"\n \t\t \"use associate-name=>\");\n-      return MATCH_ERROR;\n+      m = MATCH_ERROR;\n+      goto cleanup;\n     }\n \n   new_st.op = EXEC_SELECT_TYPE;\n@@ -4354,6 +4358,10 @@ gfc_match_select_type (void)\n   select_type_push (expr1->symtree->n.sym);\n \n   return MATCH_YES;\n+  \n+cleanup:\n+  gfc_current_ns = gfc_current_ns->parent;\n+  return m;\n }\n \n "}, {"sha": "dfc589310a401accabe956eb89afdd5303c73a87", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc382218cee3c9536da0fbdf3ee61e4b93edb02b/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc382218cee3c9536da0fbdf3ee61e4b93edb02b/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=bc382218cee3c9536da0fbdf3ee61e4b93edb02b", "patch": "@@ -2110,22 +2110,6 @@ parse_derived (void)\n \t  || c->attr.access == ACCESS_PRIVATE\n \t  || (c->ts.type == BT_DERIVED && c->ts.u.derived->attr.private_comp))\n \tsym->attr.private_comp = 1;\n-\n-     /* Fix up incomplete CLASS components.  */\n-     if (c->ts.type == BT_CLASS)\n-\t{\n-\t  gfc_component *data;\n-\t  gfc_component *vptr;\n-\t  gfc_symbol *vtab;\n-\t  data = gfc_find_component (c->ts.u.derived, \"$data\", true, true);\n-\t  vptr = gfc_find_component (c->ts.u.derived, \"$vptr\", true, true);\n-\t  if (vptr->ts.u.derived == NULL)\n-\t    {\n-\t      vtab = gfc_find_derived_vtab (data->ts.u.derived, false);\n-\t      gcc_assert (vtab);\n-\t      vptr->ts.u.derived = vtab->ts.u.derived;\n-\t    }\n-\t}\n     }\n \n   if (!seen_component)"}, {"sha": "1f4c236789a50592b28106a93f16fc7e7765fd09", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc382218cee3c9536da0fbdf3ee61e4b93edb02b/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc382218cee3c9536da0fbdf3ee61e4b93edb02b/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=bc382218cee3c9536da0fbdf3ee61e4b93edb02b", "patch": "@@ -10577,6 +10577,22 @@ resolve_fl_derived (gfc_symbol *sym)\n   int i;\n \n   super_type = gfc_get_derived_super_type (sym);\n+  \n+  if (sym->attr.is_class && sym->ts.u.derived == NULL)\n+    {\n+      /* Fix up incomplete CLASS symbols.  */\n+      gfc_component *data;\n+      gfc_component *vptr;\n+      gfc_symbol *vtab;\n+      data = gfc_find_component (sym, \"$data\", true, true);\n+      vptr = gfc_find_component (sym, \"$vptr\", true, true);\n+      if (vptr->ts.u.derived == NULL)\n+\t{\n+\t  vtab = gfc_find_derived_vtab (data->ts.u.derived, false);\n+\t  gcc_assert (vtab);\n+\t  vptr->ts.u.derived = vtab->ts.u.derived;\n+\t}\n+    }\n \n   /* F2008, C432. */\n   if (super_type && sym->attr.coarray_comp && !super_type->attr.coarray_comp)"}, {"sha": "6c31ffb7acc42143445b8951eafd7b6b6041f153", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc382218cee3c9536da0fbdf3ee61e4b93edb02b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc382218cee3c9536da0fbdf3ee61e4b93edb02b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bc382218cee3c9536da0fbdf3ee61e4b93edb02b", "patch": "@@ -1,3 +1,8 @@\n+2010-05-22  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/44212\n+\t* gfortran.dg/class_22.f03: New.\n+\n 2010-05-22  Iain Sandoe  <iains@gcc.gnu.org>\n \n \tPR lto/44238"}, {"sha": "df68783b4ab92094c20f5bf0483ec3cb74a9d219", "filename": "gcc/testsuite/gfortran.dg/class_22.f03", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc382218cee3c9536da0fbdf3ee61e4b93edb02b/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_22.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc382218cee3c9536da0fbdf3ee61e4b93edb02b/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_22.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_22.f03?ref=bc382218cee3c9536da0fbdf3ee61e4b93edb02b", "patch": "@@ -0,0 +1,31 @@\n+! { dg-do compile }\n+!\n+! PR 44212: [OOP] ICE when defining a pointer component before defining the class and calling a TBP then\n+!\n+! Contributed by Hans-Werner Boschmann <boschmann@tp1.physik.uni-siegen.de>\n+\n+module ice_module\n+\n+  type :: B_type\n+     class(A_type),pointer :: A_comp\n+  end type B_type\n+\n+  type :: A_type\n+  contains\n+     procedure :: A_proc\n+  end type A_type\n+\n+contains\n+\n+  subroutine A_proc(this)\n+    class(A_type),target,intent(inout) :: this\n+  end subroutine A_proc\n+\n+  subroutine ice_proc(this)\n+    class(A_type) :: this\n+    call this%A_proc()\n+  end subroutine ice_proc\n+\n+end module ice_module\n+\n+! { dg-final { cleanup-modules \"ice_module\" } }"}]}