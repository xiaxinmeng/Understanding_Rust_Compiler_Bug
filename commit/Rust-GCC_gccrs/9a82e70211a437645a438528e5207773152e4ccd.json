{"sha": "9a82e70211a437645a438528e5207773152e4ccd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE4MmU3MDIxMWE0Mzc2NDVhNDM4NTI4ZTUyMDc3NzMxNTJlNGNjZA==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2006-04-09T00:07:28Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2006-04-09T00:07:28Z"}, "message": "Revert previous patch, mistaken.\n\nFrom-SVN: r112793", "tree": {"sha": "7c9124f8f0ba38ae1f7ae1687c4b96099c33b40a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c9124f8f0ba38ae1f7ae1687c4b96099c33b40a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a82e70211a437645a438528e5207773152e4ccd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a82e70211a437645a438528e5207773152e4ccd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a82e70211a437645a438528e5207773152e4ccd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a82e70211a437645a438528e5207773152e4ccd/comments", "author": null, "committer": null, "parents": [{"sha": "51e7cc90c61ac34a5dc00848543f0b9767713fc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51e7cc90c61ac34a5dc00848543f0b9767713fc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51e7cc90c61ac34a5dc00848543f0b9767713fc0"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "b7839138065d2791891f2bd8a1290e02d79b8858", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a82e70211a437645a438528e5207773152e4ccd/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a82e70211a437645a438528e5207773152e4ccd/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=9a82e70211a437645a438528e5207773152e4ccd", "patch": "@@ -1923,9 +1923,9 @@ number as al, and ax.\n #define DBX_REGISTER_NUMBER(N) \\\n   (TARGET_64BIT ? dbx64_register_map[(N)] : dbx_register_map[(N)])\n \n-extern int const dbx_register_map[FIRST_PSEUDO_REGISTER+1];\n-extern int const dbx64_register_map[FIRST_PSEUDO_REGISTER+1];\n-extern int const svr4_dbx_register_map[FIRST_PSEUDO_REGISTER+1];\n+extern int const dbx_register_map[FIRST_PSEUDO_REGISTER];\n+extern int const dbx64_register_map[FIRST_PSEUDO_REGISTER];\n+extern int const svr4_dbx_register_map[FIRST_PSEUDO_REGISTER];\n \n /* Before the prologue, RA is at 0(%esp).  */\n #define INCOMING_RETURN_ADDR_RTX \\"}]}