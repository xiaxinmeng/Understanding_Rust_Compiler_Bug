{"sha": "25c541b406c3aa49f9ca4db1982e06c5ec0ef796", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVjNTQxYjQwNmMzYWE0OWY5Y2E0ZGIxOTgyZTA2YzVlYzBlZjc5Ng==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2014-01-02T22:43:24Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2014-01-02T22:43:24Z"}, "message": "re PR c++/59641 (ICE with invalid expression in vector arithmetic)\n\n2014-01-02  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR c++/59641\ngcc/cp/\n\t* call.c (build_conditional_expr_1): Check the return value of\n\tforce_rvalue.\ngcc/testsuite/\n\t* g++.dg/cpp0x/pr59641.C: New file.\n\nFrom-SVN: r206303", "tree": {"sha": "4e19bd6add06c04a3359a0bb8d2a2115fcd7ed94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e19bd6add06c04a3359a0bb8d2a2115fcd7ed94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25c541b406c3aa49f9ca4db1982e06c5ec0ef796", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25c541b406c3aa49f9ca4db1982e06c5ec0ef796", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25c541b406c3aa49f9ca4db1982e06c5ec0ef796", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25c541b406c3aa49f9ca4db1982e06c5ec0ef796/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a7630623b2bff751688f7a3a30efb8d254e83c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a7630623b2bff751688f7a3a30efb8d254e83c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a7630623b2bff751688f7a3a30efb8d254e83c1"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "c77d86facec07e41d7d03120cc9d093430eac113", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25c541b406c3aa49f9ca4db1982e06c5ec0ef796/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25c541b406c3aa49f9ca4db1982e06c5ec0ef796/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=25c541b406c3aa49f9ca4db1982e06c5ec0ef796", "patch": "@@ -1,3 +1,9 @@\n+2014-01-02  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR c++/59641\n+\t* call.c (build_conditional_expr_1): Check the return value of\n+\tforce_rvalue.\n+\n 2014-01-02  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* call.c (convert_like_real): Check complain."}, {"sha": "46b3748ead51513ed2222524c1c191848ab0dcf6", "filename": "gcc/cp/call.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25c541b406c3aa49f9ca4db1982e06c5ec0ef796/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25c541b406c3aa49f9ca4db1982e06c5ec0ef796/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=25c541b406c3aa49f9ca4db1982e06c5ec0ef796", "patch": "@@ -4402,6 +4402,12 @@ build_conditional_expr_1 (location_t loc, tree arg1, tree arg2, tree arg3,\n       arg2 = force_rvalue (arg2, complain);\n       arg3 = force_rvalue (arg3, complain);\n \n+      /* force_rvalue can return error_mark on valid arguments.  */\n+      if (error_operand_p (arg1)\n+\t  || error_operand_p (arg2)\n+\t  || error_operand_p (arg3))\n+\treturn error_mark_node;\n+\n       tree arg1_type = TREE_TYPE (arg1);\n       arg2_type = TREE_TYPE (arg2);\n       arg3_type = TREE_TYPE (arg3);"}, {"sha": "359421a406ddcdc7f0b36e860a766b3affacde02", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25c541b406c3aa49f9ca4db1982e06c5ec0ef796/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25c541b406c3aa49f9ca4db1982e06c5ec0ef796/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=25c541b406c3aa49f9ca4db1982e06c5ec0ef796", "patch": "@@ -1,3 +1,8 @@\n+2014-01-02  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR c++/59641\n+\t* g++.dg/cpp0x/pr59641.C: New file.\n+\n 2014-01-02  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* g++.dg/cpp0x/initlist-explicit-sfinae.C: New file."}, {"sha": "12e8f92861f5ef07b08c319200db9022c4a7b336", "filename": "gcc/testsuite/g++.dg/cpp0x/pr59641.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25c541b406c3aa49f9ca4db1982e06c5ec0ef796/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr59641.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25c541b406c3aa49f9ca4db1982e06c5ec0ef796/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr59641.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr59641.C?ref=25c541b406c3aa49f9ca4db1982e06c5ec0ef796", "patch": "@@ -0,0 +1,8 @@\n+// { dg-options \"-std=gnu++11\" }\n+typedef int T __attribute__((vector_size(2*sizeof(int))));\n+\n+void foo(T& r, const T& a, const T& b)\n+{\n+  constexpr T c = a < b; // { dg-error \"constant\" }\n+  r = c ? a : b;\n+}"}]}