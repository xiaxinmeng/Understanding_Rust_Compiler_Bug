{"sha": "dd38c765a04d06c775134a135f68b18c3b7c9c78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQzOGM3NjVhMDRkMDZjNzc1MTM0YTEzNWY2OGIxOGMzYjdjOWM3OA==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-05-30T18:59:41Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-05-30T18:59:41Z"}, "message": "PR fortran/95373 - ICE in build_reference_type, at tree.c:7942\n\nThe use of KIND, LEN, RE, and IM inquiry references for applicable intrinsic\ntypes is valid only for suffienctly new Fortran standards.  Add appropriate\nchecks in the appropriate place.\n\n2020-05-30  Harald Anlauf  <anlauf@gmx.de>\n\ngcc/fortran/\n\tPR fortran/95373\n\t* primary.c (is_inquiry_ref): Move validity check of inquiry\n\treferences against selected Fortran standard from here...\n\t(gfc_match_varspec) ...to here.\n\ngcc/testsuite/\n\tPR fortran/95373\n\t* gfortran.dg/pr95373_1.f90: Adjust error messages.\n\t* gfortran.dg/pr95373_2.f90: Adjust error message.", "tree": {"sha": "d106b4150c413af1454f592a8fcc29dceeb5796d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d106b4150c413af1454f592a8fcc29dceeb5796d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd38c765a04d06c775134a135f68b18c3b7c9c78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd38c765a04d06c775134a135f68b18c3b7c9c78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd38c765a04d06c775134a135f68b18c3b7c9c78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd38c765a04d06c775134a135f68b18c3b7c9c78/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf5fbbbd8c9a3385c1083cc80683bdb0195b1ffc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf5fbbbd8c9a3385c1083cc80683bdb0195b1ffc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf5fbbbd8c9a3385c1083cc80683bdb0195b1ffc"}], "stats": {"total": 49, "additions": 24, "deletions": 25}, "files": [{"sha": "7c221c8d209727bcdfb832dfd0bbc11e90c6a448", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 21, "deletions": 22, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd38c765a04d06c775134a135f68b18c3b7c9c78/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd38c765a04d06c775134a135f68b18c3b7c9c78/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=dd38c765a04d06c775134a135f68b18c3b7c9c78", "patch": "@@ -1998,28 +1998,6 @@ is_inquiry_ref (const char *name, gfc_ref **ref)\n   else\n     return false;\n \n-  switch (type)\n-    {\n-    case INQUIRY_RE:\n-    case INQUIRY_IM:\n-      if (!gfc_notify_std (GFC_STD_F2008, \"RE or IM part_ref at %C\"))\n-\treturn false;\n-      break;\n-\n-    case INQUIRY_KIND:\n-      if (!gfc_notify_std (GFC_STD_F2003, \"KIND part_ref at %C\"))\n-\treturn false;\n-      break;\n-\n-    case INQUIRY_LEN:\n-      if (!gfc_notify_std (GFC_STD_F2003, \"LEN part_ref at %C\"))\n-\treturn false;\n-      break;\n-\n-    default:\n-      gcc_unreachable ();\n-    }\n-\n   if (ref)\n     {\n       *ref = gfc_get_ref ();\n@@ -2267,6 +2245,27 @@ gfc_match_varspec (gfc_expr *primary, int equiv_flag, bool sub_flag,\n \t    {\n \t      if (tmp)\n \t\t{\n+\t\t  switch (tmp->u.i)\n+\t\t    {\n+\t\t    case INQUIRY_RE:\n+\t\t    case INQUIRY_IM:\n+\t\t      if (!gfc_notify_std (GFC_STD_F2008,\n+\t\t\t\t\t   \"RE or IM part_ref at %C\"))\n+\t\t\treturn MATCH_ERROR;\n+\t\t      break;\n+\n+\t\t    case INQUIRY_KIND:\n+\t\t      if (!gfc_notify_std (GFC_STD_F2003,\n+\t\t\t\t\t   \"KIND part_ref at %C\"))\n+\t\t\treturn MATCH_ERROR;\n+\t\t      break;\n+\n+\t\t    case INQUIRY_LEN:\n+\t\t      if (!gfc_notify_std (GFC_STD_F2003, \"LEN part_ref at %C\"))\n+\t\t\treturn MATCH_ERROR;\n+\t\t      break;\n+\t\t    }\n+\n \t\t  if ((tmp->u.i == INQUIRY_RE || tmp->u.i == INQUIRY_IM)\n \t\t      && primary->ts.type != BT_COMPLEX)\n \t\t    {"}, {"sha": "59a9e7a81e08e206e6367a87fc6485cd9c3153c2", "filename": "gcc/testsuite/gfortran.dg/pr95373_1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd38c765a04d06c775134a135f68b18c3b7c9c78/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95373_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd38c765a04d06c775134a135f68b18c3b7c9c78/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95373_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95373_1.f90?ref=dd38c765a04d06c775134a135f68b18c3b7c9c78", "patch": "@@ -4,12 +4,12 @@\n \n subroutine s (x)\n   complex, parameter :: z = 3\n-  real(z% kind)      :: x       ! { dg-error \"nonderived-type variable\" }\n+  real(z% kind)      :: x       ! { dg-error \"Fortran 2003: KIND part_ref\" }\n   type t\n      real    :: kind\n      logical :: re\n   end type t\n   type(t) :: b\n   print *, b% kind, b% re\n-  print *, z% re                ! { dg-error \"nonderived-type variable\" }\n+  print *, z% re                ! { dg-error \"Fortran 2008: RE or IM part_ref\" }\n end"}, {"sha": "b0f3da0a20d7f7645a9a5499be18b6d133fa42eb", "filename": "gcc/testsuite/gfortran.dg/pr95373_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd38c765a04d06c775134a135f68b18c3b7c9c78/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95373_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd38c765a04d06c775134a135f68b18c3b7c9c78/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95373_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95373_2.f90?ref=dd38c765a04d06c775134a135f68b18c3b7c9c78", "patch": "@@ -11,5 +11,5 @@ subroutine s (x)\n   end type t\n   type(t) :: b\n   print *, b% kind, b% re\n-  print *, z% re                ! { dg-error \"nonderived-type variable\" }\n+  print *, z% re                ! { dg-error \"Fortran 2008: RE or IM part_ref\" }\n end"}]}