{"sha": "74e0960e3ee7274e5b564e26f81660524b13d447", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRlMDk2MGUzZWU3Mjc0ZTViNTY0ZTI2ZjgxNjYwNTI0YjEzZDQ0Nw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-05-30T14:55:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-05-30T14:55:04Z"}, "message": "re PR tree-optimization/85964 (compile time hog w/ -O3 -ftracer -fno-guess-branch-probability)\n\n2018-05-30  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/85964\n\t* tracer.c (better_p): Drop initialized count check, we only\n\tcall the function with initialized counts now.\n\t(find_best_successor): Do find a best edge if one\n\thas uninitialized count.\n\t(find_best_predecessor): Likewise.  Do BB frequency check only\n\tif count is initialized.\n\nFrom-SVN: r260954", "tree": {"sha": "90cffa9917bdd682d4f2983aeb3295ac9494cc86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90cffa9917bdd682d4f2983aeb3295ac9494cc86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74e0960e3ee7274e5b564e26f81660524b13d447", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e0960e3ee7274e5b564e26f81660524b13d447", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74e0960e3ee7274e5b564e26f81660524b13d447", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e0960e3ee7274e5b564e26f81660524b13d447/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d0b51297b0b12584251e4eebcd7d8e6fd48edc20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0b51297b0b12584251e4eebcd7d8e6fd48edc20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0b51297b0b12584251e4eebcd7d8e6fd48edc20"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "ff61ca585f7b13b4bb7f491b44e3dbee4182e550", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e0960e3ee7274e5b564e26f81660524b13d447/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e0960e3ee7274e5b564e26f81660524b13d447/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74e0960e3ee7274e5b564e26f81660524b13d447", "patch": "@@ -1,3 +1,13 @@\n+2018-05-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/85964\n+\t* tracer.c (better_p): Drop initialized count check, we only\n+\tcall the function with initialized counts now.\n+\t(find_best_successor): Do find a best edge if one\n+\thas uninitialized count.\n+\t(find_best_predecessor): Likewise.  Do BB frequency check only\n+\tif count is initialized.\n+\n 2017-05-30  Jackson Woodruff  <jackson.woodruff@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_host_wide_int_compare): New."}, {"sha": "61815130802f9e27cbfe6b50781742b62e83985d", "filename": "gcc/tracer.c", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e0960e3ee7274e5b564e26f81660524b13d447/gcc%2Ftracer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e0960e3ee7274e5b564e26f81660524b13d447/gcc%2Ftracer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftracer.c?ref=74e0960e3ee7274e5b564e26f81660524b13d447", "patch": "@@ -132,8 +132,7 @@ count_insns (basic_block bb)\n static bool\n better_p (const_edge e1, const_edge e2)\n {\n-  if (e1->count ().initialized_p () && e2->count ().initialized_p ()\n-      && ((e1->count () > e2->count ()) || (e1->count () < e2->count  ())))\n+  if ((e1->count () > e2->count ()) || (e1->count () < e2->count ()))\n     return e1->count () > e2->count ();\n   /* This is needed to avoid changes in the decision after\n      CFG is modified.  */\n@@ -152,12 +151,15 @@ find_best_successor (basic_block bb)\n   edge_iterator ei;\n \n   FOR_EACH_EDGE (e, ei, bb->succs)\n-    if (!best || better_p (e, best))\n-      best = e;\n+    {\n+      if (!e->count ().initialized_p ())\n+\treturn NULL;\n+      if (!best || better_p (e, best))\n+\tbest = e;\n+    }\n   if (!best || ignore_bb_p (best->dest))\n     return NULL;\n-  if (best->probability.initialized_p ()\n-      && best->probability.to_reg_br_prob_base () <= probability_cutoff)\n+  if (best->probability.to_reg_br_prob_base () <= probability_cutoff)\n     return NULL;\n   return best;\n }\n@@ -172,12 +174,17 @@ find_best_predecessor (basic_block bb)\n   edge_iterator ei;\n \n   FOR_EACH_EDGE (e, ei, bb->preds)\n-    if (!best || better_p (e, best))\n-      best = e;\n+    {\n+      if (!e->count ().initialized_p ())\n+\treturn NULL;\n+      if (!best || better_p (e, best))\n+\tbest = e;\n+    }\n   if (!best || ignore_bb_p (best->src))\n     return NULL;\n-  if (EDGE_FREQUENCY (best) * REG_BR_PROB_BASE\n-      < bb->count.to_frequency (cfun) * branch_ratio_cutoff)\n+  if (bb->count.initialized_p ()\n+      && (best->count ().to_frequency (cfun) * REG_BR_PROB_BASE\n+\t  < bb->count.to_frequency (cfun) * branch_ratio_cutoff))\n     return NULL;\n   return best;\n }"}]}