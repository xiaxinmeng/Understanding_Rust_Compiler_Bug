{"sha": "8c30a5105f004e885ae81edbf9c1607547bd4ace", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMzMGE1MTA1ZjAwNGU4ODVhZTgxZWRiZjljMTYwNzU0N2JkNGFjZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-03-09T19:34:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-03-09T19:34:10Z"}, "message": "re PR c++/39371 (Incorrectly rejects switch((unsigned int)boolvar))\n\n\tPR c++/39371\n\t* semantics.c (finish_switch_cond): Don't call get_unwidened.\n\t* decl.c (finish_case_label): Pass SWITCH_STMT_TYPE as 3rd argument\n\tinstead of TREE_TYPE (cond).\n\n\t* g++.dg/opt/switch2.C: Add -w to dg-options.\n\t* g++.dg/warn/Wswitch-1.C: Adjust expected warnings.\n\t* g++.dg/warn/switch1.C: New test.\n\t* g++.dg/other/switch3.C: New test.\n\nFrom-SVN: r144732", "tree": {"sha": "ad67b3505d09efcb012641d1816d48aa0e3e2fdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad67b3505d09efcb012641d1816d48aa0e3e2fdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c30a5105f004e885ae81edbf9c1607547bd4ace", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c30a5105f004e885ae81edbf9c1607547bd4ace", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c30a5105f004e885ae81edbf9c1607547bd4ace", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c30a5105f004e885ae81edbf9c1607547bd4ace/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9a9ba8d9b1292607bc97da712976937c4d81909d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a9ba8d9b1292607bc97da712976937c4d81909d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a9ba8d9b1292607bc97da712976937c4d81909d"}], "stats": {"total": 78, "additions": 59, "deletions": 19}, "files": [{"sha": "e4161c504cb2f97a45747edf0f988ea6b3b13024", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c30a5105f004e885ae81edbf9c1607547bd4ace/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c30a5105f004e885ae81edbf9c1607547bd4ace/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8c30a5105f004e885ae81edbf9c1607547bd4ace", "patch": "@@ -1,3 +1,10 @@\n+2009-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/39371\n+\t* semantics.c (finish_switch_cond): Don't call get_unwidened.\n+\t* decl.c (finish_case_label): Pass SWITCH_STMT_TYPE as 3rd argument\n+\tinstead of TREE_TYPE (cond).\n+\n 2009-03-08  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR c++/39060"}, {"sha": "03e65d0f9dba2e2847dda07b38bded375fa13d98", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c30a5105f004e885ae81edbf9c1607547bd4ace/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c30a5105f004e885ae81edbf9c1607547bd4ace/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=8c30a5105f004e885ae81edbf9c1607547bd4ace", "patch": "@@ -2806,7 +2806,8 @@ finish_case_label (tree low_value, tree high_value)\n   if (!check_switch_goto (switch_stack->level))\n     return error_mark_node;\n \n-  r = c_add_case_label (switch_stack->cases, cond, TREE_TYPE (cond),\n+  r = c_add_case_label (switch_stack->cases, cond,\n+\t\t\tSWITCH_STMT_TYPE (switch_stack->switch_stmt),\n \t\t\tlow_value, high_value);\n \n   /* After labels, make any new cleanups in the function go into their"}, {"sha": "eb5d25ae80a0471e4e4ee0f682f2d8ba0050659d", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c30a5105f004e885ae81edbf9c1607547bd4ace/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c30a5105f004e885ae81edbf9c1607547bd4ace/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=8c30a5105f004e885ae81edbf9c1607547bd4ace", "patch": "@@ -945,8 +945,6 @@ finish_switch_cond (tree cond, tree switch_stmt)\n   tree orig_type = NULL;\n   if (!processing_template_decl)\n     {\n-      tree index;\n-\n       /* Convert the condition to an integer or enumeration type.  */\n       cond = build_expr_type_conversion (WANT_INT | WANT_ENUM, cond, true);\n       if (cond == NULL_TREE)\n@@ -963,18 +961,6 @@ finish_switch_cond (tree cond, tree switch_stmt)\n \t  cond = perform_integral_promotions (cond);\n \t  cond = maybe_cleanup_point_expr (cond);\n \t}\n-\n-      if (cond != error_mark_node)\n-\t{\n-\t  index = get_unwidened (cond, NULL_TREE);\n-\t  /* We can't strip a conversion from a signed type to an unsigned,\n-\t     because if we did, int_fits_type_p would do the wrong thing\n-\t     when checking case values for being in range,\n-\t     and it's too hard to do the right thing.  */\n-\t  if (TYPE_UNSIGNED (TREE_TYPE (cond))\n-\t      == TYPE_UNSIGNED (TREE_TYPE (index)))\n-\t    cond = index;\n-\t}\n     }\n   if (check_for_bare_parameter_packs (cond))\n     cond = error_mark_node;"}, {"sha": "60f2f92d3e96dd45d3fd3c01745aab92a65dd332", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c30a5105f004e885ae81edbf9c1607547bd4ace/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c30a5105f004e885ae81edbf9c1607547bd4ace/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8c30a5105f004e885ae81edbf9c1607547bd4ace", "patch": "@@ -1,5 +1,11 @@\n 2009-03-09  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/39371\n+\t* g++.dg/opt/switch2.C: Add -w to dg-options.\n+\t* g++.dg/warn/Wswitch-1.C: Adjust expected warnings.\n+\t* g++.dg/warn/switch1.C: New test.\n+\t* g++.dg/other/switch3.C: New test.\n+\n \tPR tree-optimization/39394\n \t* gcc.c-torture/compile/pr39394.c: New test.\n "}, {"sha": "f7374cb7474c9a54bfc69696cb269bd3c20f8a92", "filename": "gcc/testsuite/g++.dg/opt/switch2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c30a5105f004e885ae81edbf9c1607547bd4ace/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fswitch2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c30a5105f004e885ae81edbf9c1607547bd4ace/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fswitch2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fswitch2.C?ref=8c30a5105f004e885ae81edbf9c1607547bd4ace", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-O2\" }\n+// { dg-options \"-O2 -w\" }\n \n extern int foo (int);\n "}, {"sha": "4f9b5485ef95449325cb583f758c8b15cf6d7ba3", "filename": "gcc/testsuite/g++.dg/other/switch3.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c30a5105f004e885ae81edbf9c1607547bd4ace/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fswitch3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c30a5105f004e885ae81edbf9c1607547bd4ace/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fswitch3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fswitch3.C?ref=8c30a5105f004e885ae81edbf9c1607547bd4ace", "patch": "@@ -0,0 +1,25 @@\n+// PR c++/39371\n+// { dg-do compile }\n+\n+void\n+foo (bool b)\n+{\n+  switch ((unsigned int) b)\n+    {\n+    case 1:\n+    case 2:\n+      break;\n+    }\n+}\n+\n+void\n+bar (unsigned char b)\n+{\n+  switch ((unsigned int) b)\n+    {\n+    case 1:\n+    case 257:\n+    case 513:\n+      break;\n+    }\n+}"}, {"sha": "6a2094466cf5c2984bb0ba6cfc1e526b3aec63cd", "filename": "gcc/testsuite/g++.dg/warn/Wswitch-1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c30a5105f004e885ae81edbf9c1607547bd4ace/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWswitch-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c30a5105f004e885ae81edbf9c1607547bd4ace/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWswitch-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWswitch-1.C?ref=8c30a5105f004e885ae81edbf9c1607547bd4ace", "patch": "@@ -50,14 +50,14 @@ foo (int i, int j, enum e ei, enum e ej, enum e ek, enum e el,\n     {\n     case e1: return 1;\n     case e2: return 2;\n-    case 3: return 3; /* { dg-warning \"case value '3' not in enumerated type 'e'\" \"excess 3\" } */\n+    case 3: return 3; /* { dg-warning \"exceeds maximum value\" } */\n     }\n   switch (ep)\n     {\n     case e1: return 1;\n     case e2: return 2;\n-    case 3: return 3;\n+    case 3: return 3; /* { dg-warning \"exceeds maximum value\" } */\n     default: break;\n-    } /* Since there is a default, no warning about ``case 3'' */\n+    }\n   return 0;\n }"}, {"sha": "49c17e9120c017e2c90eb955613113dbad93dc92", "filename": "gcc/testsuite/g++.dg/warn/switch1.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c30a5105f004e885ae81edbf9c1607547bd4ace/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fswitch1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c30a5105f004e885ae81edbf9c1607547bd4ace/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fswitch1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fswitch1.C?ref=8c30a5105f004e885ae81edbf9c1607547bd4ace", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile { target { int32plus } } }\n+\n+signed char sc;\n+\n+void\n+foo (void)\n+{\n+  switch (sc)\n+    {\n+    case 1:\n+    case 2 * __SCHAR_MAX__ + 3:\t\t// { dg-warning \"case label value exceeds maximum\" }\n+    case - 2 * __SCHAR_MAX__ - 1:\t// { dg-warning \"case label value is less than minimum\" }\n+      break;\n+    }\n+}"}]}