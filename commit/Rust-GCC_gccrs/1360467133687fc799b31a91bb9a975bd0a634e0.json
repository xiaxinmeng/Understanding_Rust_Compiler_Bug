{"sha": "1360467133687fc799b31a91bb9a975bd0a634e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM2MDQ2NzEzMzY4N2ZjNzk5YjMxYTkxYmI5YTk3NWJkMGE2MzRlMA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-03-26T13:21:34Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-03-26T13:21:34Z"}, "message": "loadpre1.c: Deleted trailing whitespace, renamed main to foo.\n\n2010-03-26  Martin Jambor  <mjambor@suse.cz>\n\n\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre1.c: Deleted trailing\n\twhitespace, renamed main to foo.\n\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre14.c: Likewise.\n\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre15.c: Likewise.\n\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre16.c: Likewise.\n\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre17.c: Likewise.\n\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre19.c: Likewise.\n\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre20.c: Likewise.\n\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre3.c: Likewise.\n\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre5.c: Likewise.\n\t* gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-1.c: Likewise.\n\t* gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-4.c: Likewise.\n\t* gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-6.c: Likewise.\n\nFrom-SVN: r157748", "tree": {"sha": "dc10f2809abdcc385f122cad2948831eef6c1ce9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc10f2809abdcc385f122cad2948831eef6c1ce9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1360467133687fc799b31a91bb9a975bd0a634e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1360467133687fc799b31a91bb9a975bd0a634e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1360467133687fc799b31a91bb9a975bd0a634e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1360467133687fc799b31a91bb9a975bd0a634e0/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7502f4273c0b8ad021864e9a02c8b2073eb9755a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7502f4273c0b8ad021864e9a02c8b2073eb9755a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7502f4273c0b8ad021864e9a02c8b2073eb9755a"}], "stats": {"total": 82, "additions": 49, "deletions": 33}, "files": [{"sha": "d124d4ac7f3e58bca111b2f41fa08f1b971b86c0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1360467133687fc799b31a91bb9a975bd0a634e0", "patch": "@@ -1,3 +1,19 @@\n+2010-03-26  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre1.c: Deleted trailing\n+\twhitespace, renamed main to foo.\n+\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre14.c: Likewise.\n+\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre15.c: Likewise.\n+\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre16.c: Likewise.\n+\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre17.c: Likewise.\n+\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre19.c: Likewise.\n+\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre20.c: Likewise.\n+\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre3.c: Likewise.\n+\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre5.c: Likewise.\n+\t* gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-1.c: Likewise.\n+\t* gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-4.c: Likewise.\n+\t* gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-6.c: Likewise.\n+\n 2010-03-26  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/43327"}, {"sha": "ce78f02c66bafb62c703ff67c6795765ec7e738a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre1.c?ref=1360467133687fc799b31a91bb9a975bd0a634e0", "patch": "@@ -1,10 +1,10 @@\n-/* { dg-do compile } */ \n+/* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n-int main(int *a, int argc)\n+int foo(int *a, int argc)\n {\n   int c;\n   int d, e;\n-  \n+\n   /* Should be able to eliminate the second load of *a along the main path. */\n   d = *a;\n   if (argc)"}, {"sha": "11bfd00605d1247ea7ade63b58f6efeb241b928d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre14.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre14.c?ref=1360467133687fc799b31a91bb9a975bd0a634e0", "patch": "@@ -1,11 +1,11 @@\n-/* { dg-do compile } */ \n+/* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n typedef int type[2];\n-int main(type *a, int argc)\n+int foo(type *a, int argc)\n {\n   type c = {0, 1};\n   int d, e;\n-  \n+\n   /* Should be able to eliminate the second load of *a along the main path. */\n   d = (*a)[0];\n   if (argc)"}, {"sha": "b04c7621b65fa02969550bc67b10570d395fc7a8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre15.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre15.c?ref=1360467133687fc799b31a91bb9a975bd0a634e0", "patch": "@@ -1,11 +1,11 @@\n-/* { dg-do compile } */ \n+/* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n typedef int type[2];\n-int main(type *a, int argc, int t)\n+int foo(type *a, int argc, int t)\n {\n   type c = {0, 1};\n   int d, e;\n-  \n+\n   /* Should be able to eliminate the second load of *a along the main path. */\n   d = (*a)[t];\n   if (argc)"}, {"sha": "193ae52d54046f3f27522f3c0f2883dcd3cdc08c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre16.c?ref=1360467133687fc799b31a91bb9a975bd0a634e0", "patch": "@@ -1,10 +1,10 @@\n-/* { dg-do compile } */ \n+/* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n typedef int type[2];\n-int main(type *a, int argc)\n+int foo(type *a, int argc)\n {\n   int d, e;\n-  \n+\n   /* Should be able to eliminate the second load of *a along the main path. */\n   d = (*a)[0];\n   if (argc)"}, {"sha": "ec0f6ec2fa738a10a47374c90a896225b03a3c05", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre17.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre17.c?ref=1360467133687fc799b31a91bb9a975bd0a634e0", "patch": "@@ -1,10 +1,10 @@\n-/* { dg-do compile } */ \n+/* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n typedef int type[2];\n-int main(type *a, int argc)\n+int foo(type *a, int argc)\n {\n   int d, e;\n-  \n+\n   /* Should be able to eliminate the second load of *a along the main path. */\n   d = (*a)[argc];\n   if (argc)"}, {"sha": "0ad8988f70262d4d25a43c7f63041a368b5e44e9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre19.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre19.c?ref=1360467133687fc799b31a91bb9a975bd0a634e0", "patch": "@@ -1,10 +1,10 @@\n-/* { dg-do compile } */ \n+/* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n typedef int type[2];\n-int main(type *a, int argc)\n+int foo(type *a, int argc)\n {\n   int d, e;\n-  \n+\n   /* Should be able to eliminate the second load of *a along the main path. */\n   d = (*a)[argc];\n   if (!d)"}, {"sha": "92a235325ac0ce6265d9bad4c7c150b5836bd6db", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre20.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre20.c?ref=1360467133687fc799b31a91bb9a975bd0a634e0", "patch": "@@ -1,10 +1,10 @@\n-/* { dg-do compile } */ \n+/* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n typedef int type[2];\n-int main(type *a, int argc)\n+int foo(type *a, int argc)\n {\n   int d, e;\n-  \n+\n   /* Should be able to eliminate the second load of *a along the main path. */\n   d = (*a)[argc];\n   if (!d)"}, {"sha": "4bda8f6445daff201f6884b44e5c300922d4772a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre3.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre3.c?ref=1360467133687fc799b31a91bb9a975bd0a634e0", "patch": "@@ -1,6 +1,6 @@\n-/* { dg-do compile } */ \n+/* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n-int main(int **a,int argc)\n+int foo(int **a,int argc)\n {\n   int b;\n   int d, e;\n@@ -13,7 +13,7 @@ int main(int **a,int argc)\n     {\n \n     }\n-  /* Should be able to eliminate one of the *(*a)'s along the if path \n+  /* Should be able to eliminate one of the *(*a)'s along the if path\n      by pushing it into the else path. We will also eliminate\n      one of the *a's.  */\n   e = *(*a);"}, {"sha": "475050a6f857b7324773d6cbc09714beb3d6c0af", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre5.c?ref=1360467133687fc799b31a91bb9a975bd0a634e0", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile } */ \n+/* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n int p;\n int r;\n@@ -8,7 +8,7 @@ static int a(void)\n {\n   return p;\n }\n-int main(int argc)\n+int foo(int argc)\n {\n   int q;\n   q = a();"}, {"sha": "3dd3b5263338d8a50dd7410c3b4aad1f14fe5707", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-1.c?ref=1360467133687fc799b31a91bb9a975bd0a634e0", "patch": "@@ -1,7 +1,7 @@\n-/* { dg-do compile } */ \n+/* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n extern int printf (const char *, ...);\n-int main(int argc, char **argv)\n+int foo(int argc, char **argv)\n {\n \tint a;\n \tint b;\n@@ -15,7 +15,7 @@ int main(int argc, char **argv)\n \t}\n \tprintf (\"%d, %d\\n\", a, b + c);\n }\n-/* We should eliminate one evaluation of b + c along the main path, \n+/* We should eliminate one evaluation of b + c along the main path,\n    causing one reload. */\n /* { dg-final { scan-tree-dump-times \"Eliminated: 1\" 1 \"pre\"} } */\n /* { dg-final { cleanup-tree-dump \"pre\" } } */"}, {"sha": "274737ac4e7abe77f7d767c2b0a2094f523b8ab6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-4.c?ref=1360467133687fc799b31a91bb9a975bd0a634e0", "patch": "@@ -1,6 +1,6 @@\n-/* { dg-do compile } */ \n+/* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n-int main(void)\n+int foo(void)\n {\n \tint x, c, y;\n \tx = 3;"}, {"sha": "2811f4379aa3d7decfa8b957a3e3b079cbb7fdc6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1360467133687fc799b31a91bb9a975bd0a634e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-6.c?ref=1360467133687fc799b31a91bb9a975bd0a634e0", "patch": "@@ -1,6 +1,6 @@\n-/* { dg-do compile } */ \n+/* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n-int main(int x)\n+int foo(int x)\n {\n \tint c, y;\n \tif (c)"}]}