{"sha": "4626c433188f72608c58c00619349b322fafb406", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYyNmM0MzMxODhmNzI2MDhjNThjMDA2MTkzNDliMzIyZmFmYjQwNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2004-07-24T01:35:04Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-07-24T01:35:04Z"}, "message": "tree.def (VIEW_CONVERT_EXPR): Change to class 'r'.\n\n\t* tree.def (VIEW_CONVERT_EXPR): Change to class 'r'.\n\t* tree-ssa-operands.c (get_expr_operands, case VIEW_CONVERT_EXPR): New.\n\nFrom-SVN: r85111", "tree": {"sha": "263382e3d667594441b84229cbf2e56bb15404b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/263382e3d667594441b84229cbf2e56bb15404b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4626c433188f72608c58c00619349b322fafb406", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4626c433188f72608c58c00619349b322fafb406", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4626c433188f72608c58c00619349b322fafb406", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4626c433188f72608c58c00619349b322fafb406/comments", "author": null, "committer": null, "parents": [{"sha": "9e51aaf570ad8c2c6551c0c5bdf358df2655ca6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e51aaf570ad8c2c6551c0c5bdf358df2655ca6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e51aaf570ad8c2c6551c0c5bdf358df2655ca6b"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "cd60d32748a77992dc77c647fc6d741557bd1fa1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4626c433188f72608c58c00619349b322fafb406/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4626c433188f72608c58c00619349b322fafb406/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4626c433188f72608c58c00619349b322fafb406", "patch": "@@ -1,5 +1,8 @@\n 2004-07-23  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* tree.def (VIEW_CONVERT_EXPR): Change to class 'r'.\n+\t* tree-ssa-operands.c (get_expr_operands, case VIEW_CONVERT_EXPR): New.\n+\n \t* gimplify.c (gimplify_compound_lval): Check for no handled\n \toperations, rather than checking for explicit list of nodes.\n \t(is_gimple_addr_expr_arg_or_indirect): New function."}, {"sha": "7e7829e52e9ef76c503097c1b45a061428e792e4", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4626c433188f72608c58c00619349b322fafb406/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4626c433188f72608c58c00619349b322fafb406/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=4626c433188f72608c58c00619349b322fafb406", "patch": "@@ -978,6 +978,7 @@ get_expr_operands (tree stmt, tree *expr_p, int flags, voperands_t prev_vops)\n \n     case TRUTH_NOT_EXPR:\n     case BIT_FIELD_REF:\n+    case VIEW_CONVERT_EXPR:\n     do_unary:\n       get_expr_operands (stmt, &TREE_OPERAND (expr, 0), flags, prev_vops);\n       return;"}, {"sha": "5602c704bd64302fa8d2b801b43fe4398d02c61a", "filename": "gcc/tree.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4626c433188f72608c58c00619349b322fafb406/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4626c433188f72608c58c00619349b322fafb406/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=4626c433188f72608c58c00619349b322fafb406", "patch": "@@ -709,7 +709,7 @@ DEFTREECODE (NON_LVALUE_EXPR, \"non_lvalue_expr\", '1', 1)\n    case no actual data motion may occur.  TREE_ADDRESSABLE will be set in\n    this case and GCC must abort if it could not do the operation without\n    generating insns.  */\n-DEFTREECODE (VIEW_CONVERT_EXPR, \"view_convert_expr\", '1', 1)\n+DEFTREECODE (VIEW_CONVERT_EXPR, \"view_convert_expr\", 'r', 1)\n \n /* Represents something we computed once and will use multiple times.\n    First operand is that expression.  After it is evaluated once, it"}]}