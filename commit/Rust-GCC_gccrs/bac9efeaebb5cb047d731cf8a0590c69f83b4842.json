{"sha": "bac9efeaebb5cb047d731cf8a0590c69f83b4842", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFjOWVmZWFlYmI1Y2IwNDdkNzMxY2Y4YTA1OTBjNjlmODNiNDg0Mg==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2006-01-23T14:56:45Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-01-23T14:56:45Z"}, "message": "re PR middle-end/24437 (OBJ_TYPE_REF handling in fold_stmt should be moved to fold)\n\n2006-01-23  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR middle-end/24437\n        * tree-ssa-ccp.c (fold_stmt): Move folding of OBJ_TYPE_REF\n        with a call expr to ...\n        * fold-const.c (fold_ternary) <case CALL_EXPR>: Here.\n\nFrom-SVN: r110116", "tree": {"sha": "711dff16c947cdd28322b754bcd859f81158a7fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/711dff16c947cdd28322b754bcd859f81158a7fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bac9efeaebb5cb047d731cf8a0590c69f83b4842", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bac9efeaebb5cb047d731cf8a0590c69f83b4842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bac9efeaebb5cb047d731cf8a0590c69f83b4842", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bac9efeaebb5cb047d731cf8a0590c69f83b4842/comments", "author": null, "committer": null, "parents": [{"sha": "c685878451ba47834d3e1730bfaa95a8baccba95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c685878451ba47834d3e1730bfaa95a8baccba95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c685878451ba47834d3e1730bfaa95a8baccba95"}], "stats": {"total": 59, "additions": 27, "deletions": 32}, "files": [{"sha": "6ff4fc81868b8cf190db7d761b5697cf46a733f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bac9efeaebb5cb047d731cf8a0590c69f83b4842/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bac9efeaebb5cb047d731cf8a0590c69f83b4842/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bac9efeaebb5cb047d731cf8a0590c69f83b4842", "patch": "@@ -1,3 +1,10 @@\n+2006-01-23  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/24437\n+\t* tree-ssa-ccp.c (fold_stmt): Move folding of OBJ_TYPE_REF\n+\twith a call expr to ...\n+\t* fold-const.c (fold_ternary) <case CALL_EXPR>: Here.\n+\n 2006-01-23  Richard Guenther  <rguenther@suse.de>\n \n \t* cfgloopmanip.c (lv_adjust_loop_entry_edge): Add comment"}, {"sha": "ed100cefcb8d7767841f2b5e4a6ddc5ca47c5dfd", "filename": "gcc/fold-const.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bac9efeaebb5cb047d731cf8a0590c69f83b4842/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bac9efeaebb5cb047d731cf8a0590c69f83b4842/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=bac9efeaebb5cb047d731cf8a0590c69f83b4842", "patch": "@@ -10295,6 +10295,26 @@ fold_ternary (enum tree_code code, tree type, tree op0, tree op1, tree op2)\n \t  && TREE_CODE (TREE_OPERAND (op0, 0)) == FUNCTION_DECL\n \t  && DECL_BUILT_IN (TREE_OPERAND (op0, 0)))\n \treturn fold_builtin (TREE_OPERAND (op0, 0), op1, false);\n+      /* Check for resolvable OBJ_TYPE_REF.  The only sorts we can resolve\n+         here are when we've propagated the address of a decl into the\n+         object slot.  */\n+      if (TREE_CODE (op0) == OBJ_TYPE_REF\n+\t  && lang_hooks.fold_obj_type_ref\n+\t  && TREE_CODE (OBJ_TYPE_REF_OBJECT (op0)) == ADDR_EXPR\n+\t  && DECL_P (TREE_OPERAND (OBJ_TYPE_REF_OBJECT (op0), 0)))\n+\t{\n+\t  tree t;\n+\n+\t  /* ??? Caution: Broken ADDR_EXPR semantics means that\n+             looking at the type of the operand of the addr_expr\n+             can yield an array type.  See silly exception in\n+             check_pointer_types_r.  */\n+\n+\t  t = TREE_TYPE (TREE_TYPE (OBJ_TYPE_REF_OBJECT (op0)));\n+\t  t = lang_hooks.fold_obj_type_ref (op0, t);\n+\t  if (t)\n+\t   return fold_build3 (code, type, t, op1, op2);\n+\t}\n       return NULL_TREE;\n \n     case BIT_FIELD_REF:"}, {"sha": "4513f977cd0ff1de8d14ff972d136ecdc74c89d5", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bac9efeaebb5cb047d731cf8a0590c69f83b4842/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bac9efeaebb5cb047d731cf8a0590c69f83b4842/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=bac9efeaebb5cb047d731cf8a0590c69f83b4842", "patch": "@@ -2342,38 +2342,6 @@ fold_stmt (tree *stmt_p)\n       callee = get_callee_fndecl (rhs);\n       if (callee && DECL_BUILT_IN (callee))\n \tresult = ccp_fold_builtin (stmt, rhs);\n-      else\n-\t{\n-\t  /* Check for resolvable OBJ_TYPE_REF.  The only sorts we can resolve\n-\t     here are when we've propagated the address of a decl into the\n-\t     object slot.  */\n-\t  /* ??? Should perhaps do this in fold proper.  However, doing it\n-\t     there requires that we create a new CALL_EXPR, and that requires\n-\t     copying EH region info to the new node.  Easier to just do it\n-\t     here where we can just smash the call operand.  */\n-\t  callee = TREE_OPERAND (rhs, 0);\n-\t  if (TREE_CODE (callee) == OBJ_TYPE_REF\n-\t      && lang_hooks.fold_obj_type_ref\n-\t      && TREE_CODE (OBJ_TYPE_REF_OBJECT (callee)) == ADDR_EXPR\n-\t      && DECL_P (TREE_OPERAND\n-\t\t\t (OBJ_TYPE_REF_OBJECT (callee), 0)))\n-\t    {\n-\t      tree t;\n-\n-\t      /* ??? Caution: Broken ADDR_EXPR semantics means that\n-\t\t looking at the type of the operand of the addr_expr\n-\t\t can yield an array type.  See silly exception in\n-\t\t check_pointer_types_r.  */\n-\n-\t      t = TREE_TYPE (TREE_TYPE (OBJ_TYPE_REF_OBJECT (callee)));\n-\t      t = lang_hooks.fold_obj_type_ref (callee, t);\n-\t      if (t)\n-\t\t{\n-\t\t  TREE_OPERAND (rhs, 0) = t;\n-\t\t  changed = true;\n-\t\t}\n-\t    }\n-\t}\n     }\n \n   /* If we couldn't fold the RHS, hand over to the generic fold routines.  */"}]}