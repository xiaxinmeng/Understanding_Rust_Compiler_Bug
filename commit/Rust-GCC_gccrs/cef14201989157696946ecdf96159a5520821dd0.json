{"sha": "cef14201989157696946ecdf96159a5520821dd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2VmMTQyMDE5ODkxNTc2OTY5NDZlY2RmOTYxNTlhNTUyMDgyMWRkMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T12:58:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T12:58:36Z"}, "message": "[multiple changes]\n\n2011-08-04  Emmanuel Briot  <briot@adacore.com>\n\n\t* makeutl.adb (Complete_Mains): if the user has passed a relative file\n\tname on the command line (for instance \"../dummy\"), never assume it can\n\tbe a unit name.\n\n2011-08-04  Tristan Gingold  <gingold@adacore.com>\n\n\t* bindgen.adb: Remove code the reference or create the\n\tBreak_Start/__gnat_break_start procedure.\n\t* s-stalib.adb (Break_Start): Removed.\n\nFrom-SVN: r177374", "tree": {"sha": "82f946d7a522f6e2961f7069d46d6be7ac08d70b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82f946d7a522f6e2961f7069d46d6be7ac08d70b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cef14201989157696946ecdf96159a5520821dd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cef14201989157696946ecdf96159a5520821dd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cef14201989157696946ecdf96159a5520821dd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cef14201989157696946ecdf96159a5520821dd0/comments", "author": null, "committer": null, "parents": [{"sha": "e2fee30d5490aac27479b1908f8cd8efe13b6189", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2fee30d5490aac27479b1908f8cd8efe13b6189", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2fee30d5490aac27479b1908f8cd8efe13b6189"}], "stats": {"total": 57, "additions": 18, "deletions": 39}, "files": [{"sha": "da4cc103f9c9123824d284a563b132e634a3441f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cef14201989157696946ecdf96159a5520821dd0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cef14201989157696946ecdf96159a5520821dd0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cef14201989157696946ecdf96159a5520821dd0", "patch": "@@ -1,3 +1,15 @@\n+2011-08-04  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* makeutl.adb (Complete_Mains): if the user has passed a relative file\n+\tname on the command line (for instance \"../dummy\"), never assume it can\n+\tbe a unit name.\n+\n+2011-08-04  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* bindgen.adb: Remove code the reference or create the\n+\tBreak_Start/__gnat_break_start procedure.\n+\t* s-stalib.adb (Break_Start): Removed.\n+\n 2011-08-04  Emmanuel Briot  <briot@adacore.com>\n \n \t* make.adb, makeutl.adb, makeutl.ads (Compute_Builder_Switches): now"}, {"sha": "a31b0e266ab7ecf7eb2b23481bb081e0979a06ef", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cef14201989157696946ecdf96159a5520821dd0/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cef14201989157696946ecdf96159a5520821dd0/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=cef14201989157696946ecdf96159a5520821dd0", "patch": "@@ -2301,7 +2301,6 @@ package body Bindgen is\n       WBI (\"      \" & Ada_Init_Name.all & \";\");\n \n       if not No_Main_Subprogram then\n-         WBI (\"      Break_Start;\");\n \n          if CodePeer_Mode then\n \n@@ -2477,7 +2476,6 @@ package body Bindgen is\n       WBI (\"   \" & Ada_Init_Name.all & \" ();\");\n \n       if not No_Main_Subprogram then\n-         WBI (\"   __gnat_break_start ();\");\n \n          --  Output main program name\n \n@@ -3059,19 +3057,6 @@ package body Bindgen is\n \n       if Bind_Main_Program and then VM_Target = No_VM then\n \n-         --  If we have the standard library, then Break_Start is defined\n-         --  there, but when the standard library is suppressed, Break_Start\n-         --  is defined here.\n-\n-         WBI (\"\");\n-         WBI (\"   procedure Break_Start;\");\n-\n-         if Suppress_Standard_Library_On_Target then\n-            WBI (\"   pragma Export (C, Break_Start, \"\"__gnat_break_start\"\");\");\n-         else\n-            WBI (\"   pragma Import (C, Break_Start, \"\"__gnat_break_start\"\");\");\n-         end if;\n-\n          WBI (\"\");\n \n          if Exit_Status_Supported_On_Target then\n@@ -3232,18 +3217,6 @@ package body Bindgen is\n       Gen_Adainit_Ada;\n \n       if Bind_Main_Program and then VM_Target = No_VM then\n-\n-         --  When suppressing the standard library then generate dummy body\n-         --  for Break_Start\n-\n-         if Suppress_Standard_Library_On_Target then\n-            WBI (\"\");\n-            WBI (\"   procedure Break_Start is\");\n-            WBI (\"   begin\");\n-            WBI (\"      null;\");\n-            WBI (\"   end;\");\n-         end if;\n-\n          Gen_Main_Ada;\n       end if;\n \n@@ -3321,7 +3294,6 @@ package body Bindgen is\n             WBI (\"extern void exit (int);\");\n          end if;\n \n-         WBI (\"extern void __gnat_break_start (void);\");\n          Set_String (\"extern \");\n \n          if ALIs.Table (ALIs.First).Main_Program = Proc then\n@@ -3417,14 +3389,6 @@ package body Bindgen is\n          WBI (\"\");\n       end if;\n \n-      --  When suppressing the standard library, the __gnat_break_start routine\n-      --  (for the debugger to get initial control) is defined in this file.\n-\n-      if Suppress_Standard_Library_On_Target then\n-         WBI (\"void __gnat_break_start (void) {}\");\n-         WBI (\"\");\n-      end if;\n-\n       --  Generate the __gnat_version and __gnat_ada_main_program_name info\n       --  only for the main program. Otherwise, it can lead under some\n       --  circumstances to a symbol duplication during the link (for instance"}, {"sha": "e8134bfef855705aadb2203b1d50ea77a174c079", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cef14201989157696946ecdf96159a5520821dd0/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cef14201989157696946ecdf96159a5520821dd0/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=cef14201989157696946ecdf96159a5520821dd0", "patch": "@@ -1510,7 +1510,9 @@ package body Makeutl is\n                            Source := No_Source;\n                         end if;\n \n-                        if Source = No_Source then\n+                        if Source = No_Source\n+                          and then not Is_Absolute\n+                        then\n \n                            --  Still not found? Maybe we have a unit name\n "}, {"sha": "ba83b8d9cdc946ff860d3ad3562fb867a94d5e92", "filename": "gcc/ada/s-stalib.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cef14201989157696946ecdf96159a5520821dd0/gcc%2Fada%2Fs-stalib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cef14201989157696946ecdf96159a5520821dd0/gcc%2Fada%2Fs-stalib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stalib.adb?ref=cef14201989157696946ecdf96159a5520821dd0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1995-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -94,7 +94,8 @@ package body System.Standard_Library is\n    pragma Export (C, Break_Start, \"__gnat_break_start\");\n    --  This is a dummy procedure that is called at the start of execution.\n    --  Its sole purpose is to provide a well defined point for the placement\n-   --  of a main program breakpoint.\n+   --  of a main program breakpoint. This is not used anymore but kept for\n+   --  bootstrapping issues (still referenced by old gnatbind generated files).\n \n    procedure Break_Start is\n    begin"}]}