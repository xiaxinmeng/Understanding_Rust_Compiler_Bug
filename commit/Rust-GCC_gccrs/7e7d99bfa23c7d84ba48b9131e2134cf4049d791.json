{"sha": "7e7d99bfa23c7d84ba48b9131e2134cf4049d791", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U3ZDk5YmZhMjNjN2Q4NGJhNDhiOTEzMWUyMTM0Y2Y0MDQ5ZDc5MQ==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2020-11-20T13:11:12Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-12-14T15:51:54Z"}, "message": "[Ada] Incorrect accessibility level on type in formal package\n\ngcc/ada/\n\n\t* sem_util.adb, sem_util.ads (In_Generic_Formal_Package):\n\tCreated to identify type declarations occurring within generic\n\tformal packages.\n\t* sem_res.adb (Resolve_Allocator): Add condition to avoid\n\temitting an error for allocators when the type being allocated\n\tis class-wide and from a generic formal package.", "tree": {"sha": "792a4c3845fc21a11ed92e2cdd934ad2348adff6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/792a4c3845fc21a11ed92e2cdd934ad2348adff6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e7d99bfa23c7d84ba48b9131e2134cf4049d791", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e7d99bfa23c7d84ba48b9131e2134cf4049d791", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e7d99bfa23c7d84ba48b9131e2134cf4049d791", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e7d99bfa23c7d84ba48b9131e2134cf4049d791/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90b2d3fafb965f1f557966b5842c324d19f5c131", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90b2d3fafb965f1f557966b5842c324d19f5c131", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90b2d3fafb965f1f557966b5842c324d19f5c131"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "05ebf20ca268afd1d0cbc6fb4ea3feda40198054", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7d99bfa23c7d84ba48b9131e2134cf4049d791/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7d99bfa23c7d84ba48b9131e2134cf4049d791/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=7e7d99bfa23c7d84ba48b9131e2134cf4049d791", "patch": "@@ -5451,9 +5451,12 @@ package body Sem_Res is\n \n                --  Do not apply Ada 2005 accessibility checks on a class-wide\n                --  allocator if the type given in the allocator is a formal\n-               --  type. A run-time check will be performed in the instance.\n+               --  type or within a formal package. A run-time check will be\n+               --  performed in the instance.\n \n-               elsif not Is_Generic_Type (Exp_Typ) then\n+               elsif not Is_Generic_Type (Exp_Typ)\n+                 and then not In_Generic_Formal_Package (Exp_Typ)\n+               then\n                   Error_Msg_N\n                     (\"type in allocator has deeper level than designated \"\n                      & \"class-wide type\", E);"}, {"sha": "30d4457ea311d39eb2d54e02585df51779c18447", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7d99bfa23c7d84ba48b9131e2134cf4049d791/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7d99bfa23c7d84ba48b9131e2134cf4049d791/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=7e7d99bfa23c7d84ba48b9131e2134cf4049d791", "patch": "@@ -13827,6 +13827,28 @@ package body Sem_Util is\n           and then Assertion_Expression_Pragma (Get_Pragma_Id (Prag));\n    end In_Assertion_Expression_Pragma;\n \n+   -------------------------------\n+   -- In_Generic_Formal_Package --\n+   -------------------------------\n+\n+   function In_Generic_Formal_Package (E : Entity_Id) return Boolean is\n+      Par : Node_Id;\n+\n+   begin\n+      Par := Parent (E);\n+      while Present (Par) loop\n+         if Nkind (Par) = N_Formal_Package_Declaration\n+           or else Nkind (Original_Node (Par)) = N_Formal_Package_Declaration\n+         then\n+            return True;\n+         end if;\n+\n+         Par := Parent (Par);\n+      end loop;\n+\n+      return False;\n+   end In_Generic_Formal_Package;\n+\n    ----------------------\n    -- In_Generic_Scope --\n    ----------------------"}, {"sha": "2e913594bc08c55cfa62d621fce9702a60a27213", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7d99bfa23c7d84ba48b9131e2134cf4049d791/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7d99bfa23c7d84ba48b9131e2134cf4049d791/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=7e7d99bfa23c7d84ba48b9131e2134cf4049d791", "patch": "@@ -1538,6 +1538,9 @@ package Sem_Util is\n    --  Returns True if node N appears within a pragma that acts as an assertion\n    --  expression. See Sem_Prag for the list of qualifying pragmas.\n \n+   function In_Generic_Formal_Package (E : Entity_Id) return Boolean;\n+   --  Returns True if entity E is inside a generic formal package\n+\n    function In_Generic_Scope (E : Entity_Id) return Boolean;\n    --  Returns True if entity E is inside a generic scope\n "}]}