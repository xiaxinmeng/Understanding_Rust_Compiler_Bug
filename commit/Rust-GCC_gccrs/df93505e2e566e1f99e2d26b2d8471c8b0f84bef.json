{"sha": "df93505e2e566e1f99e2d26b2d8471c8b0f84bef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY5MzUwNWUyZTU2NmUxZjk5ZTJkMjZiMmQ4NDcxYzhiMGY4NGJlZg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-04-26T12:00:29Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-04-26T12:00:29Z"}, "message": "i386.md (type, unit): Fix long lines.\n\n\t* config/i386/i386.md (type, unit): Fix long lines.\n\nFrom-SVN: r198336", "tree": {"sha": "b90c2d843cced5ea179f01bfbb34cc7f8b342675", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b90c2d843cced5ea179f01bfbb34cc7f8b342675"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df93505e2e566e1f99e2d26b2d8471c8b0f84bef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df93505e2e566e1f99e2d26b2d8471c8b0f84bef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df93505e2e566e1f99e2d26b2d8471c8b0f84bef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df93505e2e566e1f99e2d26b2d8471c8b0f84bef/comments", "author": null, "committer": null, "parents": [{"sha": "acd1cc4b295ac00fffe0d727291b6fdf58f3392d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acd1cc4b295ac00fffe0d727291b6fdf58f3392d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acd1cc4b295ac00fffe0d727291b6fdf58f3392d"}], "stats": {"total": 51, "additions": 29, "deletions": 22}, "files": [{"sha": "a6b7ba7766597419058232e9e7505f3b24bd1db6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df93505e2e566e1f99e2d26b2d8471c8b0f84bef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df93505e2e566e1f99e2d26b2d8471c8b0f84bef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=df93505e2e566e1f99e2d26b2d8471c8b0f84bef", "patch": "@@ -1,3 +1,7 @@\n+2013-04-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (type, unit): Fix long lines.\n+\n 2013-04-26  Richard Biener  <rguenther@suse.de>\n \n \t* Makefile.in (lto-streamer-in.o): Add $(CFGLOOP_H) dependency.\n@@ -81,9 +85,8 @@\n \t(process_options): Default to -fdiagnostics-color=auto if\n \tGCC_COLORS env var is in the environment.\n \t* common.opt (fdiagnostics-color=): Add Var and Init.\n-\t* doc/invoke.texi (-fdiagnostics-color=): Document that if\n-\tGCC_COLORS env var is in the environment, the default is auto\n-\trather than never.\n+\t* doc/invoke.texi (-fdiagnostics-color=): Document that if GCC_COLORS\n+\tenv var is in the environment, the default is auto rather than never.\n \n \t* diagnostic.h (file_name_as_prefix): Add context argument.\n \t* diagnostic.c (file_name_as_prefix): Likewise.  Colorize\n@@ -378,7 +381,7 @@\n \n 2013-04-25  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n \n-\t* config/aarch64/aarch64.md \n+\t* config/aarch64/aarch64.md\n \t(*cmp_swp_<optab><ALLX:mode>_shft_<GPI:mode>): New pattern.\n \n 2013-04-25  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n@@ -393,12 +396,10 @@\n \t(TB_DREG): Add T_V4HF.\n \t(v4hf_UP): New macro.\n \t(neon_itype): Add NEON_FLOAT_WIDEN, NEON_FLOAT_NARROW.\n-\t(arm_init_neon_builtins): Handle NEON_FLOAT_WIDEN,\n-\tNEON_FLOAT_NARROW.\n+\t(arm_init_neon_builtins): Handle NEON_FLOAT_WIDEN, NEON_FLOAT_NARROW.\n \tHandle initialisation of V4HF. Adjust initialisation of reinterpret\n \tbuilt-ins.\n-\t(arm_expand_neon_builtin): Handle NEON_FLOAT_WIDEN,\n-\tNEON_FLOAT_NARROW.\n+\t(arm_expand_neon_builtin): Handle NEON_FLOAT_WIDEN, NEON_FLOAT_NARROW.\n \t(arm_vector_mode_supported_p): Handle V4HF.\n \t(arm_mangle_map): Handle V4HFmode.\n \t* config/arm/arm.h (VALID_NEON_DREG_MODE): Add V4HF.\n@@ -582,9 +583,8 @@\n \t    Chung-Lin Tang  <cltang@codesourcery.com>\n \n \t* dwarf2out.c (gen_enumeration_type_die): Fix HOST_BITS_PER_WIDE_INT\n-\tdependency behavior in enumeration type DIE generation. Add TODO\n-\tnote to comments about future DW_FORM_sdata/udata re-work of related\n-\tcode.\n+\tdependency behavior in enumeration type DIE generation. Add TODO note\n+\tto comments about future DW_FORM_sdata/udata re-work of related code.\n \n 2013-04-23  Lawrence Crowl  <crowl@google.com>\n "}, {"sha": "759c867c29058e176a2097ae71ffd5fce3ee9d17", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df93505e2e566e1f99e2d26b2d8471c8b0f84bef/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df93505e2e566e1f99e2d26b2d8471c8b0f84bef/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=df93505e2e566e1f99e2d26b2d8471c8b0f84bef", "patch": "@@ -331,14 +331,18 @@\n (define_attr \"type\"\n   \"other,multi,\n    alu,alu1,negnot,imov,imovx,lea,\n-   incdec,ishift,ishiftx,ishift1,rotate,rotatex,rotate1,imul,imulx,idiv,\n-   icmp,test,ibr,setcc,icmov,\n+   incdec,ishift,ishiftx,ishift1,rotate,rotatex,rotate1,\n+   imul,imulx,idiv,icmp,test,ibr,setcc,icmov,\n    push,pop,call,callv,leave,\n    str,bitmanip,\n-   fmov,fop,fsgn,fmul,fdiv,fpspc,fcmov,fcmp,fxch,fistp,fisttp,frndint,\n-   sselog,sselog1,sseiadd,sseiadd1,sseishft,sseishft1,sseimul,\n-   sse,ssemov,sseadd,sseadd1,ssemul,ssecmp,ssecomi,ssecvt,ssecvt1,sseicvt,\n-   sseshuf,sseshuf1,ssediv,sseins,ssemuladd,sse4arg,lwp,\n+   fmov,fop,fsgn,fmul,fdiv,fpspc,fcmov,fcmp,\n+   fxch,fistp,fisttp,frndint,\n+   sse,ssemov,sseadd,sseadd1,sseiadd,sseiadd1,\n+   ssemul,sseimul,ssediv,sselog,sselog1,\n+   sseishft,sseishft1,ssecmp,ssecomi,\n+   ssecvt,ssecvt1,sseicvt,sseins,\n+   sseshuf,sseshuf1,ssemuladd,sse4arg,\n+   lwp,\n    mmx,mmxmov,mmxadd,mmxmul,mmxcmp,mmxcvt,mmxshft\"\n   (const_string \"other\"))\n \n@@ -349,11 +353,14 @@\n \n ;; The CPU unit operations uses.\n (define_attr \"unit\" \"integer,i387,sse,mmx,unknown\"\n-  (cond [(eq_attr \"type\" \"fmov,fop,fsgn,fmul,fdiv,fpspc,fcmov,fcmp,fxch,fistp,fisttp,frndint\")\n+  (cond [(eq_attr \"type\" \"fmov,fop,fsgn,fmul,fdiv,fpspc,fcmov,fcmp,\n+\t\t\t  fxch,fistp,fisttp,frndint\")\n \t   (const_string \"i387\")\n-\t (eq_attr \"type\" \"sselog,sselog1,sseiadd,sseiadd1,sseishft,sseishft1,sseimul,\n-\t\t\t  sse,ssemov,sseadd,sseadd1,ssemul,ssecmp,ssecomi,ssecvt,\n-\t\t\t  sseshuf,sseshuf1,ssecvt1,sseicvt,ssediv,sseins,ssemuladd,sse4arg\")\n+\t (eq_attr \"type\" \"sse,ssemov,sseadd,sseadd1,sseiadd,sseiadd1,\n+\t\t\t  ssemul,sseimul,ssediv,sselog,sselog1,\n+\t\t\t  sseishft,sseishft1,ssecmp,ssecomi,\n+\t\t\t  ssecvt,ssecvt1,sseicvt,sseins,\n+\t\t\t  sseshuf,sseshuf1,ssemuladd,sse4arg\")\n \t   (const_string \"sse\")\n \t (eq_attr \"type\" \"mmx,mmxmov,mmxadd,mmxmul,mmxcmp,mmxcvt,mmxshft\")\n \t   (const_string \"mmx\")\n@@ -364,7 +371,7 @@\n ;; The (bounding maximum) length of an instruction immediate.\n (define_attr \"length_immediate\" \"\"\n   (cond [(eq_attr \"type\" \"incdec,setcc,icmov,str,lea,other,multi,idiv,leave,\n-                          bitmanip,imulx\")\n+\t\t\t  bitmanip,imulx\")\n \t   (const_int 0)\n \t (eq_attr \"unit\" \"i387,sse,mmx\")\n \t   (const_int 0)"}]}