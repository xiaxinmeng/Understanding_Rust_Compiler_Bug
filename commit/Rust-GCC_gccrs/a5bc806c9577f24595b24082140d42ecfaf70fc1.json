{"sha": "a5bc806c9577f24595b24082140d42ecfaf70fc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTViYzgwNmM5NTc3ZjI0NTk1YjI0MDgyMTQwZDQyZWNmYWY3MGZjMQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2012-10-29T17:31:52Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2012-10-29T17:31:52Z"}, "message": "aarch64-protos.h (aarch64_load_tp): New proto.\n\n2012-10-29  Andrew Pinski  <apinski@cavium.com>\n\n        * config/aarch64/aarch64-protos.h (aarch64_load_tp): New proto.\n        * config/aarch64/aarch64.c (aarch64_load_tp): Export.\n        (aarch64_init_builtins): Don't add __builtin_thread_pointer builtin.\n        * config/aarch64/aarch64.h (aarch64_builtins): Delete\n\nFrom-SVN: r192955", "tree": {"sha": "8917bcd87473ada1bf70b361360a5c51e6801eef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8917bcd87473ada1bf70b361360a5c51e6801eef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5bc806c9577f24595b24082140d42ecfaf70fc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5bc806c9577f24595b24082140d42ecfaf70fc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5bc806c9577f24595b24082140d42ecfaf70fc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5bc806c9577f24595b24082140d42ecfaf70fc1/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b72bdd90373987cd591fc47f2b906e4c15fd1880", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b72bdd90373987cd591fc47f2b906e4c15fd1880", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b72bdd90373987cd591fc47f2b906e4c15fd1880"}], "stats": {"total": 38, "additions": 23, "deletions": 15}, "files": [{"sha": "4127b00b7b7cd55f1f5b186cbca81e5f2c5e73ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5bc806c9577f24595b24082140d42ecfaf70fc1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5bc806c9577f24595b24082140d42ecfaf70fc1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5bc806c9577f24595b24082140d42ecfaf70fc1", "patch": "@@ -1,3 +1,13 @@\n+2012-10-29  Andrew Pinski  <apinski@cavium.com>\n+\n+        * config/aarch64/aarch64-protos.h (aarch64_load_tp): New proto.\n+        * config/aarch64/aarch64.c (aarch64_load_tp): Export.\n+        (aarch64_init_builtins): Don't add __builtin_thread_pointer builtin.\n+        * config/aarch64/aarch64.h (aarch64_builtins): Delete\n+\n+AARCH64_BUILTIN_THREAD_POINTER.\n+        * config/aarch64/aarch64.md (get_thread_pointerdi): New pattern.\n+\n 2012-10-29  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR middle-end/55027"}, {"sha": "ca4e30689256faa9a465954490cfffdf805d26f8", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5bc806c9577f24595b24082140d42ecfaf70fc1/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5bc806c9577f24595b24082140d42ecfaf70fc1/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=a5bc806c9577f24595b24082140d42ecfaf70fc1", "patch": "@@ -254,6 +254,7 @@ bool aarch64_split_128bit_move_p (rtx, rtx);\n bool aarch64_legitimate_address_p (enum machine_mode, rtx, RTX_CODE, bool);\n enum machine_mode aarch64_select_cc_mode (RTX_CODE, rtx, rtx);\n rtx aarch64_gen_compare_reg (RTX_CODE, rtx, rtx);\n+rtx aarch64_load_tp (rtx);\n \n #endif /* RTX_CODE */\n "}, {"sha": "aaebdf6ac77794f4bfb42955fa96d3367f509d8a", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5bc806c9577f24595b24082140d42ecfaf70fc1/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5bc806c9577f24595b24082140d42ecfaf70fc1/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=a5bc806c9577f24595b24082140d42ecfaf70fc1", "patch": "@@ -102,7 +102,6 @@ static bool aarch64_vfp_is_call_or_return_candidate (enum machine_mode,\n \t\t\t\t\t\t     bool *);\n static void aarch64_elf_asm_constructor (rtx, int) ATTRIBUTE_UNUSED;\n static void aarch64_elf_asm_destructor (rtx, int) ATTRIBUTE_UNUSED;\n-static rtx aarch64_load_tp (rtx);\n static void aarch64_override_options_after_change (void);\n static int aarch64_simd_valid_immediate (rtx, enum machine_mode, int, rtx *,\n \t\t\t\t\t int *, unsigned char *, int *, int *);\n@@ -4988,20 +4987,11 @@ aarch64_legitimate_constant_p (enum machine_mode mode, rtx x)\n static void\n aarch64_init_builtins (void)\n {\n-  tree ftype, decl = NULL;\n-\n-  ftype = build_function_type (ptr_type_node, void_list_node);\n-  decl = add_builtin_function (\"__builtin_thread_pointer\", ftype,\n-\t\t\t       AARCH64_BUILTIN_THREAD_POINTER, BUILT_IN_MD,\n-\t\t\t       NULL, NULL_TREE);\n-  TREE_NOTHROW (decl) = 1;\n-  TREE_READONLY (decl) = 1;\n-\n   if (TARGET_SIMD)\n     init_aarch64_simd_builtins ();\n }\n \n-static rtx\n+rtx\n aarch64_load_tp (rtx target)\n {\n   if (!target\n@@ -5026,9 +5016,6 @@ aarch64_expand_builtin (tree exp,\n   tree fndecl = TREE_OPERAND (CALL_EXPR_FN (exp), 0);\n   int fcode = DECL_FUNCTION_CODE (fndecl);\n \n-  if (fcode == AARCH64_BUILTIN_THREAD_POINTER)\n-    return aarch64_load_tp (target);\n-\n   if (fcode >= AARCH64_SIMD_BUILTIN_BASE)\n     return aarch64_simd_expand_builtin (fcode, exp, target);\n "}, {"sha": "122a7a5f9234e062f647777c7ce38475aaccac5e", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5bc806c9577f24595b24082140d42ecfaf70fc1/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5bc806c9577f24595b24082140d42ecfaf70fc1/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=a5bc806c9577f24595b24082140d42ecfaf70fc1", "patch": "@@ -794,7 +794,6 @@ do {\t\t\t\t\t\t\t\t\t     \\\n enum aarch64_builtins\n {\n   AARCH64_BUILTIN_MIN,\n-  AARCH64_BUILTIN_THREAD_POINTER,\n   AARCH64_SIMD_BUILTIN_BASE\n };\n "}, {"sha": "804d7e746d258771708f7b3c90d6b0ea8ba083da", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5bc806c9577f24595b24082140d42ecfaf70fc1/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5bc806c9577f24595b24082140d42ecfaf70fc1/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=a5bc806c9577f24595b24082140d42ecfaf70fc1", "patch": "@@ -2923,6 +2923,17 @@\n   [(set_attr \"length\" \"0\")]\n )\n \n+;; Named pattern for expanding thread pointer reference.\n+(define_expand \"get_thread_pointerdi\"\n+  [(match_operand:DI 0 \"register_operand\" \"=r\")]\n+  \"\"\n+{\n+  rtx tmp = aarch64_load_tp (operands[0]);\n+  if (tmp != operands[0])\n+    emit_move_insn (operands[0], tmp);\n+  DONE;\n+})\n+\n ;; AdvSIMD Stuff\n (include \"aarch64-simd.md\")\n "}]}