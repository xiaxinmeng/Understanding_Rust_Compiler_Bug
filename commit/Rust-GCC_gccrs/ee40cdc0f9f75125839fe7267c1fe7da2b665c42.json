{"sha": "ee40cdc0f9f75125839fe7267c1fe7da2b665c42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU0MGNkYzBmOWY3NTEyNTgzOWZlNzI2N2MxZmU3ZGEyYjY2NWM0Mg==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2013-04-22T10:58:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-22T10:58:05Z"}, "message": "exp_prag.adb (Expand_Pragma_Loop_Variant): Rewrite pragma as null statement if ignored.\n\n2013-04-22  Yannick Moy  <moy@adacore.com>\n\n\t* exp_prag.adb (Expand_Pragma_Loop_Variant): Rewrite pragma as\n\tnull statement if ignored.\n\t* sem_ch6.adb (Expand_Contract_Cases): Do nothing if pragma is ignored.\n\t* sem_prag.adb (Analyze_Pragma): Keep analyzing ignored pragmas.\n\nFrom-SVN: r198135", "tree": {"sha": "2ec2991b4b703486a13a1e342cad99b4003d833a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ec2991b4b703486a13a1e342cad99b4003d833a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee40cdc0f9f75125839fe7267c1fe7da2b665c42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee40cdc0f9f75125839fe7267c1fe7da2b665c42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee40cdc0f9f75125839fe7267c1fe7da2b665c42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee40cdc0f9f75125839fe7267c1fe7da2b665c42/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "807b4ca20242c2fb813218ac9361e5e9a8aac6b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/807b4ca20242c2fb813218ac9361e5e9a8aac6b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/807b4ca20242c2fb813218ac9361e5e9a8aac6b5"}], "stats": {"total": 49, "additions": 24, "deletions": 25}, "files": [{"sha": "2885785a630200527530f7c5060c6baa3e075980", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee40cdc0f9f75125839fe7267c1fe7da2b665c42/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee40cdc0f9f75125839fe7267c1fe7da2b665c42/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ee40cdc0f9f75125839fe7267c1fe7da2b665c42", "patch": "@@ -1,3 +1,10 @@\n+2013-04-22  Yannick Moy  <moy@adacore.com>\n+\n+\t* exp_prag.adb (Expand_Pragma_Loop_Variant): Rewrite pragma as\n+\tnull statement if ignored.\n+\t* sem_ch6.adb (Expand_Contract_Cases): Do nothing if pragma is ignored.\n+\t* sem_prag.adb (Analyze_Pragma): Keep analyzing ignored pragmas.\n+\n 2013-04-22  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_prag.adb (Analyze_Contract_Case): New routine."}, {"sha": "38efb8616ff3cdf819ef6ee61b1cc3501fc3be2f", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee40cdc0f9f75125839fe7267c1fe7da2b665c42/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee40cdc0f9f75125839fe7267c1fe7da2b665c42/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=ee40cdc0f9f75125839fe7267c1fe7da2b665c42", "patch": "@@ -1062,6 +1062,15 @@ package body Exp_Prag is\n    --  Start of processing for Expand_Pragma_Loop_Variant\n \n    begin\n+      --  If pragma is not enabled, rewrite as Null statement. If pragma is\n+      --  disabled, it has already been rewritten as a Null statement.\n+\n+      if Is_Ignored (N) then\n+         Rewrite (N, Make_Null_Statement (Loc));\n+         Analyze (N);\n+         return;\n+      end if;\n+\n       --  Locate the enclosing loop for which this assertion applies. In the\n       --  case of Ada 2012 array iteration, we might be dealing with nested\n       --  loops. Only the outermost loop has an identifier."}, {"sha": "ddd0a907ca7ac8835244814575506c1afc8070b7", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee40cdc0f9f75125839fe7267c1fe7da2b665c42/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee40cdc0f9f75125839fe7267c1fe7da2b665c42/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=ee40cdc0f9f75125839fe7267c1fe7da2b665c42", "patch": "@@ -11595,6 +11595,13 @@ package body Sem_Ch6 is\n       --  Start of processing for Expand_Contract_Cases\n \n       begin\n+         --  Do nothing if pragma is not enabled. If pragma is disabled, it has\n+         --  already been rewritten as a Null statement.\n+\n+         if Is_Ignored (CCs) then\n+            return;\n+         end if;\n+\n          --  Create the counter which tracks the number of case guards that\n          --  evaluate to True.\n "}, {"sha": "66d772cc7a1ab5ae2f862f7a13832b605315fb6f", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 25, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee40cdc0f9f75125839fe7267c1fe7da2b665c42/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee40cdc0f9f75125839fe7267c1fe7da2b665c42/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ee40cdc0f9f75125839fe7267c1fe7da2b665c42", "patch": "@@ -6768,7 +6768,7 @@ package body Sem_Prag is\n \n       Check_Applicable_Policy (N);\n \n-      --  If pragma is disable, rewrite as Null statement and skip analysis\n+      --  If pragma is disabled, rewrite as Null statement and skip analysis\n \n       if Is_Disabled (N) then\n          Rewrite (N, Make_Null_Statement (Loc));\n@@ -8733,14 +8733,6 @@ package body Sem_Prag is\n             GNAT_Pragma;\n             Check_Arg_Count (1);\n \n-            --  Completely ignore if not enabled\n-\n-            if Is_Ignored (N) then\n-               Rewrite (N, Make_Null_Statement (Loc));\n-               Analyze (N);\n-               return;\n-            end if;\n-\n             --  Check the placement of the pragma\n \n             if not Is_List_Member (N) then\n@@ -13893,14 +13885,6 @@ package body Sem_Prag is\n             Check_Arg_Count (1);\n             Check_Loop_Pragma_Placement;\n \n-            --  Completely ignore if not enabled\n-\n-            if Is_Ignored (N) then\n-               Rewrite (N, Make_Null_Statement (Loc));\n-               Analyze (N);\n-               return;\n-            end if;\n-\n             Preanalyze_Assert_Expression (Expression (Arg1), Any_Boolean);\n \n             --  Transform pragma Loop_Invariant into equivalent pragma Check\n@@ -13964,14 +13948,6 @@ package body Sem_Prag is\n             Check_At_Least_N_Arguments (1);\n             Check_Loop_Pragma_Placement;\n \n-            --  Completely ignore if not enabled\n-\n-            if Is_Ignored (N) then\n-               Rewrite (N, Make_Null_Statement (Loc));\n-               Analyze (N);\n-               return;\n-            end if;\n-\n             --  Process all increasing / decreasing expressions\n \n             Variant := First (Pragma_Argument_Associations (N));"}]}