{"sha": "bcac046f5f196e39a4b60a400e73e32c9b2c1b93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNhYzA0NmY1ZjE5NmUzOWE0YjYwYTQwMGU3M2UzMmM5YjJjMWI5Mw==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2014-06-09T11:55:55Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2014-06-09T11:55:55Z"}, "message": "re PR fortran/61406 (ICE on ASSOCIATE construct to literal array expression)\n\n2014-06-09  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/61406\n\t* trans-stmt.c (trans_associate_var): Check that array\n\tconstructors are constant for direct reference.\n\n2014-06-09  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/61406\n\t* gfortran.dg/associate_17.f90 : New test\n\nFrom-SVN: r211374", "tree": {"sha": "ef9a8fef2bd0b52beda4eb3b6e09351a78deccf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef9a8fef2bd0b52beda4eb3b6e09351a78deccf3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcac046f5f196e39a4b60a400e73e32c9b2c1b93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcac046f5f196e39a4b60a400e73e32c9b2c1b93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcac046f5f196e39a4b60a400e73e32c9b2c1b93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcac046f5f196e39a4b60a400e73e32c9b2c1b93/comments", "author": null, "committer": null, "parents": [{"sha": "45b4a79657a2366e1f6831b98615339ef1dcba32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45b4a79657a2366e1f6831b98615339ef1dcba32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45b4a79657a2366e1f6831b98615339ef1dcba32"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "c0443337c536e9f9ad15354502fb2598128aa546", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcac046f5f196e39a4b60a400e73e32c9b2c1b93/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcac046f5f196e39a4b60a400e73e32c9b2c1b93/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bcac046f5f196e39a4b60a400e73e32c9b2c1b93", "patch": "@@ -1,3 +1,9 @@\n+2014-06-09  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/61406\n+\t* trans-stmt.c (trans_associate_var): Check that array\n+\tconstructors are constant for direct reference.\n+\n 2014-06-09  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/36096\n@@ -333,7 +339,7 @@\n \t* trans.c (trans_code): Handle EXEC_OMP_CANCEL,\n \tEXEC_OMP_CANCELLATION_POINT, EXEC_OMP_DO_SIMD,\n \tEXEC_OMP_PARALLEL_DO_SIMD, EXEC_OMP_SIMD and EXEC_OMP_TASKGROUP.\n-\t* resolve.c (gfc_resolve_blocks): Handle EXEC_OMP_DO_SIMD,  \n+\t* resolve.c (gfc_resolve_blocks): Handle EXEC_OMP_DO_SIMD,\n \tEXEC_OMP_PARALLEL_DO_SIMD, EXEC_OMP_SIMD and EXEC_OMP_TASKGROUP.\n \t(resolve_code): Handle EXEC_OMP_CANCEL,\n \tEXEC_OMP_CANCELLATION_POINT, EXEC_OMP_DO_SIMD,"}, {"sha": "547e9c1bb91b38cfc0c054d5babc325a85aa2344", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcac046f5f196e39a4b60a400e73e32c9b2c1b93/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcac046f5f196e39a4b60a400e73e32c9b2c1b93/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=bcac046f5f196e39a4b60a400e73e32c9b2c1b93", "patch": "@@ -1167,13 +1167,16 @@ trans_associate_var (gfc_symbol *sym, gfc_wrapped_block *block)\n     {\n       gfc_se se;\n       tree desc;\n+      bool cst_array_ctor;\n \n       desc = sym->backend_decl;\n+      cst_array_ctor = e->expr_type == EXPR_ARRAY\n+\t      && gfc_constant_array_constructor_p (e->value.constructor);\n \n       /* If association is to an expression, evaluate it and create temporary.\n \t Otherwise, get descriptor of target for pointer assignment.  */\n       gfc_init_se (&se, NULL);\n-      if (sym->assoc->variable || e->expr_type == EXPR_ARRAY)\n+      if (sym->assoc->variable || cst_array_ctor)\n \t{\n \t  se.direct_byref = 1;\n \t  se.use_offset = 1;\n@@ -1184,7 +1187,7 @@ trans_associate_var (gfc_symbol *sym, gfc_wrapped_block *block)\n \n       /* If we didn't already do the pointer assignment, set associate-name\n \t descriptor to the one generated for the temporary.  */\n-      if (!sym->assoc->variable && e->expr_type != EXPR_ARRAY)\n+      if (!sym->assoc->variable && !cst_array_ctor)\n \t{\n \t  int dim;\n "}, {"sha": "f3b2c6ab4279ba534944e31055be3e19b1bc2ba7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcac046f5f196e39a4b60a400e73e32c9b2c1b93/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcac046f5f196e39a4b60a400e73e32c9b2c1b93/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bcac046f5f196e39a4b60a400e73e32c9b2c1b93", "patch": "@@ -1,3 +1,8 @@\n+2014-06-09  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/61406\n+\t* gfortran.dg/associate_17.f90 : New test\n+\n 2014-06-09  Petr Murzin  <petr.murzin@intel.com>\n \n \t* gcc.target/i386/avx512f-vaddpd-2.c:  Add static void for CALC,"}, {"sha": "5c39cf06247a6c71b9b166b94d79d1a938ceee5e", "filename": "gcc/testsuite/gfortran.dg/associate_17.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcac046f5f196e39a4b60a400e73e32c9b2c1b93/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_17.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcac046f5f196e39a4b60a400e73e32c9b2c1b93/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_17.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_17.f90?ref=bcac046f5f196e39a4b60a400e73e32c9b2c1b93", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do run }\n+! Test the fix for PR61406\n+! Contributed by Adam Hirst  <adam@aphirst.karoo.co.uk>\n+program test\n+  implicit none\n+  real :: theta = 1.0\n+\n+  associate (n => [cos(theta), sin(theta)])\n+    if (abs (norm2(n) - 1.0) .gt. 1.0e-4) call abort\n+  end associate\n+\n+end program test"}]}