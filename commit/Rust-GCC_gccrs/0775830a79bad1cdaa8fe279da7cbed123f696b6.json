{"sha": "0775830a79bad1cdaa8fe279da7cbed123f696b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc3NTgzMGE3OWJhZDFjZGFhOGZlMjc5ZGE3Y2JlZDEyM2Y2OTZiNg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2019-11-07T10:50:23Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2019-11-07T10:50:23Z"}, "message": "[arm][6/X] Add support for __[us]sat16 intrinsics\n\nThis last patch adds the the __ssat16 and __usat16 intrinsics that perform\n\"clipping\" to a particular bitwidth on packed SIMD values, setting the Q bit\nas appropriate.\n\n\t* config/arm/arm.md (arm_<simd32_op>): New define_expand.\n\t(arm_<simd32_op><add_clobber_q_name>_insn): New define_insn.\n\t* config/arm/arm_acle.h (__ssat16, __usat16): Define.\n\t* config/arm/arm_acle_builtins.def: Define builtins for the above.\n\t* config/arm/iterators.md (USSAT16): New int_iterator.\n\t(simd32_op): Handle UNSPEC_SSAT16, UNSPEC_USAT16.\n\t(sup): Likewise.\n\t* config/arm/predicates.md (ssat16_imm): New predicate.\n\t(usat16_imm): Likewise.\n\t* config/arm/unspecs.md (UNSPEC_SSAT16, UNSPEC_USAT16): Define.\n\n\t* gcc.target/arm/acle/simd32.c: Update test.\n\nFrom-SVN: r277919", "tree": {"sha": "d82b5a3fa03a2395ea8df222f06ab956fcfab98f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d82b5a3fa03a2395ea8df222f06ab956fcfab98f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0775830a79bad1cdaa8fe279da7cbed123f696b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0775830a79bad1cdaa8fe279da7cbed123f696b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0775830a79bad1cdaa8fe279da7cbed123f696b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0775830a79bad1cdaa8fe279da7cbed123f696b6/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "65dd610dcbcf5e1a952f341d0a441593bebe200f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65dd610dcbcf5e1a952f341d0a441593bebe200f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65dd610dcbcf5e1a952f341d0a441593bebe200f"}], "stats": {"total": 97, "additions": 96, "deletions": 1}, "files": [{"sha": "3b9bae709ddd07e0df4dab191fea1e6ab78d4b58", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0775830a79bad1cdaa8fe279da7cbed123f696b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0775830a79bad1cdaa8fe279da7cbed123f696b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0775830a79bad1cdaa8fe279da7cbed123f696b6", "patch": "@@ -1,3 +1,16 @@\n+2019-11-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.md (arm_<simd32_op>): New define_expand.\n+\t(arm_<simd32_op><add_clobber_q_name>_insn): New define_insn.\n+\t* config/arm/arm_acle.h (__ssat16, __usat16): Define.\n+\t* config/arm/arm_acle_builtins.def: Define builtins for the above.\n+\t* config/arm/iterators.md (USSAT16): New int_iterator.\n+\t(simd32_op): Handle UNSPEC_SSAT16, UNSPEC_USAT16.\n+\t(sup): Likewise.\n+\t* config/arm/predicates.md (ssat16_imm): New predicate.\n+\t(usat16_imm): Likewise.\n+\t* config/arm/unspecs.md (UNSPEC_SSAT16, UNSPEC_USAT16): Define.\n+\n 2019-11-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm.md (arm_<simd32_op><add_clobber_q_name>_insn):"}, {"sha": "f1d27ffbb4aa8190959cbf7d9c9ac1b7bcd97b33", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0775830a79bad1cdaa8fe279da7cbed123f696b6/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0775830a79bad1cdaa8fe279da7cbed123f696b6/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=0775830a79bad1cdaa8fe279da7cbed123f696b6", "patch": "@@ -5921,6 +5921,33 @@\n   }\n )\n \n+(define_insn \"arm_<simd32_op><add_clobber_q_name>_insn\"\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+\t(unspec:SI\n+\t  [(match_operand:SI 1 \"s_register_operand\" \"r\")\n+\t   (match_operand:SI 2 \"<sup>sat16_imm\" \"i\")] USSAT16))]\n+  \"TARGET_INT_SIMD && <add_clobber_q_pred>\"\n+  \"<simd32_op>%?\\\\t%0, %2, %1\"\n+  [(set_attr \"predicable\" \"yes\")\n+   (set_attr \"type\" \"alu_sreg\")])\n+\n+(define_expand \"arm_<simd32_op>\"\n+  [(set (match_operand:SI 0 \"s_register_operand\")\n+\t(unspec:SI\n+\t  [(match_operand:SI 1 \"s_register_operand\")\n+\t   (match_operand:SI 2 \"<sup>sat16_imm\")] USSAT16))]\n+  \"TARGET_INT_SIMD\"\n+  {\n+    if (ARM_Q_BIT_READ)\n+      emit_insn (gen_arm_<simd32_op>_setq_insn (operands[0], operands[1],\n+\t\t\t\t\t\toperands[2]));\n+    else\n+      emit_insn (gen_arm_<simd32_op>_insn (operands[0], operands[1],\n+\t\t\t\t\t   operands[2]));\n+    DONE;\n+  }\n+)\n+\n (define_insn \"arm_sel\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(unspec:SI"}, {"sha": "9ea922f2d096870d2c2d34ac43f03e3bc9dc4741", "filename": "gcc/config/arm/arm_acle.h", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0775830a79bad1cdaa8fe279da7cbed123f696b6/gcc%2Fconfig%2Farm%2Farm_acle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0775830a79bad1cdaa8fe279da7cbed123f696b6/gcc%2Fconfig%2Farm%2Farm_acle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_acle.h?ref=0775830a79bad1cdaa8fe279da7cbed123f696b6", "patch": "@@ -564,6 +564,24 @@ __smuadx (int16x2_t __a, int16x2_t __b)\n   return __builtin_arm_smuadx (__a, __b);\n }\n \n+#define __ssat16(__a, __sat)\t\t\t\t\t\\\n+  __extension__\t\t\t\t\t\t\t\\\n+  ({\t\t\t\t\t\t\t\t\\\n+    int16x2_t __arg = (__a);\t\t\t\t\t\\\n+    __builtin_sat_imm_check (__sat, 1, 16);\t\t\t\\\n+    int16x2_t __res = __builtin_arm_ssat16 (__arg, __sat);\t\\\n+    __res;\t\t\t\t\t\t\t\\\n+  })\n+\n+#define __usat16(__a, __sat)\t\t\t\t\t\\\n+  __extension__\t\t\t\t\t\t\t\\\n+  ({\t\t\t\t\t\t\t\t\\\n+    int16x2_t __arg = (__a);\t\t\t\t\t\\\n+    __builtin_sat_imm_check (__sat, 0, 15);\t\t\t\\\n+    int16x2_t __res = __builtin_arm_usat16 (__arg, __sat);\t\\\n+    __res;\t\t\t\t\t\t\t\\\n+  })\n+\n #endif\n \n #ifdef __ARM_FEATURE_SAT"}, {"sha": "8a21ff74f41840dd793221e079627055d379c474", "filename": "gcc/config/arm/arm_acle_builtins.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0775830a79bad1cdaa8fe279da7cbed123f696b6/gcc%2Fconfig%2Farm%2Farm_acle_builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0775830a79bad1cdaa8fe279da7cbed123f696b6/gcc%2Fconfig%2Farm%2Farm_acle_builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_acle_builtins.def?ref=0775830a79bad1cdaa8fe279da7cbed123f696b6", "patch": "@@ -114,3 +114,6 @@ VAR1 (TERNOP, smlsd, si)\n VAR1 (TERNOP, smlsdx, si)\n VAR1 (BINOP, smuad, si)\n VAR1 (BINOP, smuadx, si)\n+\n+VAR1 (SAT_BINOP_UNSIGNED_IMM, ssat16, si)\n+VAR1 (SAT_BINOP_UNSIGNED_IMM, usat16, si)"}, {"sha": "c412851843f4468c2c18bce264288705e076ac50", "filename": "gcc/config/arm/iterators.md", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0775830a79bad1cdaa8fe279da7cbed123f696b6/gcc%2Fconfig%2Farm%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0775830a79bad1cdaa8fe279da7cbed123f696b6/gcc%2Fconfig%2Farm%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fiterators.md?ref=0775830a79bad1cdaa8fe279da7cbed123f696b6", "patch": "@@ -458,6 +458,8 @@\n \n (define_int_iterator SIMD32_BINOP_Q [UNSPEC_SMUAD UNSPEC_SMUADX])\n \n+(define_int_iterator USSAT16 [UNSPEC_SSAT16 UNSPEC_USAT16])\n+\n (define_int_iterator VQRDMLH_AS [UNSPEC_VQRDMLAH UNSPEC_VQRDMLSH])\n \n (define_int_iterator VFM_LANE_AS [UNSPEC_VFMA_LANE UNSPEC_VFMS_LANE])\n@@ -918,6 +920,7 @@\n   (UNSPEC_VRSRA_S_N \"s\") (UNSPEC_VRSRA_U_N \"u\")\n   (UNSPEC_VCVTH_S \"s\") (UNSPEC_VCVTH_U \"u\")\n   (UNSPEC_DOT_S \"s\") (UNSPEC_DOT_U \"u\")\n+  (UNSPEC_SSAT16 \"s\") (UNSPEC_USAT16 \"u\")\n ])\n \n (define_int_attr vfml_half\n@@ -1083,7 +1086,8 @@\n \t\t\t    (UNSPEC_USUB16 \"usub16\") (UNSPEC_SMLAD \"smlad\")\n \t\t\t    (UNSPEC_SMLADX \"smladx\") (UNSPEC_SMLSD \"smlsd\")\n \t\t\t    (UNSPEC_SMLSDX \"smlsdx\") (UNSPEC_SMUAD \"smuad\")\n-\t\t\t    (UNSPEC_SMUADX \"smuadx\")])\n+\t\t\t    (UNSPEC_SMUADX \"smuadx\") (UNSPEC_SSAT16 \"ssat16\")\n+\t\t\t    (UNSPEC_USAT16 \"usat16\")])\n \n ;; Both kinds of return insn.\n (define_code_iterator RETURNS [return simple_return])"}, {"sha": "c1f655c704011bbe8bac82c24a3234a23bf6b242", "filename": "gcc/config/arm/predicates.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0775830a79bad1cdaa8fe279da7cbed123f696b6/gcc%2Fconfig%2Farm%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0775830a79bad1cdaa8fe279da7cbed123f696b6/gcc%2Fconfig%2Farm%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpredicates.md?ref=0775830a79bad1cdaa8fe279da7cbed123f696b6", "patch": "@@ -193,6 +193,14 @@\n   (and (match_code \"const_int\")\n        (match_test \"IN_RANGE (UINTVAL (op), 1, GET_MODE_BITSIZE (mode))\")))\n \n+(define_predicate \"ssat16_imm\"\n+  (and (match_code \"const_int\")\n+       (match_test \"IN_RANGE (INTVAL (op), 1, 16)\")))\n+\n+(define_predicate \"usat16_imm\"\n+  (and (match_code \"const_int\")\n+       (match_test \"IN_RANGE (INTVAL (op), 0, 15)\")))\n+\n (define_predicate \"ldrd_strd_offset_operand\"\n   (and (match_operand 0 \"const_int_operand\")\n        (match_test \"TARGET_LDRD && offset_ok_for_ldrd_strd (INTVAL (op))\")))"}, {"sha": "b4196b0e5cd939c3ee5e3f9bd19622fcc963adae", "filename": "gcc/config/arm/unspecs.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0775830a79bad1cdaa8fe279da7cbed123f696b6/gcc%2Fconfig%2Farm%2Funspecs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0775830a79bad1cdaa8fe279da7cbed123f696b6/gcc%2Fconfig%2Farm%2Funspecs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funspecs.md?ref=0775830a79bad1cdaa8fe279da7cbed123f696b6", "patch": "@@ -152,6 +152,8 @@\n   UNSPEC_SMLSDX\t\t; Represent the SMLSDX operation.\n   UNSPEC_SMUAD\t\t; Represent the SMUAD operation.\n   UNSPEC_SMUADX\t\t; Represent the SMUADX operation.\n+  UNSPEC_SSAT16\t\t; Represent the SSAT16 operation.\n+  UNSPEC_USAT16\t\t; Represent the USAT16 operation.\n ])\n \n "}, {"sha": "05b12a8ebaf772a77847db574c3795f9dd51ba0a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0775830a79bad1cdaa8fe279da7cbed123f696b6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0775830a79bad1cdaa8fe279da7cbed123f696b6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0775830a79bad1cdaa8fe279da7cbed123f696b6", "patch": "@@ -2,6 +2,10 @@\n \n \t* gcc.target/arm/acle/simd32.c: Update test.\n \n+2019-11-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/arm/acle/simd32.c: Update test.\n+\n 2019-11-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/arm/acle/simd32.c: Update test."}, {"sha": "d9b337da35bae5a7eedf17bcd05c8fc065557425", "filename": "gcc/testsuite/gcc.target/arm/acle/simd32.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0775830a79bad1cdaa8fe279da7cbed123f696b6/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Facle%2Fsimd32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0775830a79bad1cdaa8fe279da7cbed123f696b6/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Facle%2Fsimd32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Facle%2Fsimd32.c?ref=0775830a79bad1cdaa8fe279da7cbed123f696b6", "patch": "@@ -420,3 +420,19 @@ test_smuadx (int16x2_t a, int16x2_t b)\n }\n \n /* { dg-final { scan-assembler-times \"\\tsmuadx\\t...?, ...?, ...?\" 1 } } */\n+\n+int16x2_t\n+test_ssat16 (int16x2_t a)\n+{\n+  return __ssat16 (a, 13);\n+}\n+\n+/* { dg-final { scan-assembler-times \"\\tssat16\\t...?, #13, ...?\" 1 } } */\n+\n+int16x2_t\n+test_usat16 (int16x2_t a)\n+{\n+  return __usat16 (a, 15);\n+}\n+\n+/* { dg-final { scan-assembler-times \"\\tusat16\\t...?, #15, ...?\" 1 } } */"}]}