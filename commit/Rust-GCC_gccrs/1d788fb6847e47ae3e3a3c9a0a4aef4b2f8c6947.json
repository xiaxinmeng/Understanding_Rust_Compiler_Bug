{"sha": "1d788fb6847e47ae3e3a3c9a0a4aef4b2f8c6947", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ3ODhmYjY4NDdlNDdhZTNlM2EzYzlhMGE0YWVmNGIyZjhjNjk0Nw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-01-26T21:31:04Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-01-26T21:31:04Z"}, "message": "h8300.md: Remove bit extraction patterns that cannot be triggered.\n\n\t* config/h8300/h8300.md: Remove bit extraction patterns that\n\tcannot be triggered.\n\tRestrict each bit extraction pattern to a variant on which the\n\tpattern is tested.\n\nFrom-SVN: r49253", "tree": {"sha": "6bc97f0af9849dca36221ce51924993025a24029", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bc97f0af9849dca36221ce51924993025a24029"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d788fb6847e47ae3e3a3c9a0a4aef4b2f8c6947", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d788fb6847e47ae3e3a3c9a0a4aef4b2f8c6947", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d788fb6847e47ae3e3a3c9a0a4aef4b2f8c6947", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d788fb6847e47ae3e3a3c9a0a4aef4b2f8c6947/comments", "author": null, "committer": null, "parents": [{"sha": "87611f881e38f1ce0e0bc09201ca629bce629c78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87611f881e38f1ce0e0bc09201ca629bce629c78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87611f881e38f1ce0e0bc09201ca629bce629c78"}], "stats": {"total": 67, "additions": 11, "deletions": 56}, "files": [{"sha": "24dd82c9b9345fe69e11f0a89ecf70aa1c69c122", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d788fb6847e47ae3e3a3c9a0a4aef4b2f8c6947/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d788fb6847e47ae3e3a3c9a0a4aef4b2f8c6947/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d788fb6847e47ae3e3a3c9a0a4aef4b2f8c6947", "patch": "@@ -1,3 +1,10 @@\n+2002-01-26  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.md: Remove bit extraction patterns that\n+\tcannot be triggered.\n+\tRestrict each bit extraction pattern to a variant on which the\n+\tpattern is tested.\n+\n 2002-01-26  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* doc/include/texinfo.tex: Update to version 2002-01-04.07."}, {"sha": "f94778b9b79a899dcabe8d02ead8b5693a70f5a1", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 4, "deletions": 56, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d788fb6847e47ae3e3a3c9a0a4aef4b2f8c6947/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d788fb6847e47ae3e3a3c9a0a4aef4b2f8c6947/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=1d788fb6847e47ae3e3a3c9a0a4aef4b2f8c6947", "patch": "@@ -1973,81 +1973,29 @@\n ;;\n ;; Normal loads with a 16bit destination.\n ;;\n-;; Yes, both cases are needed.\n-;;\n+\n (define_insn \"\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=&r\")\n \t(zero_extract:HI (match_operand:HI 1 \"register_operand\" \"r\")\n \t\t\t (const_int 1)\n \t\t\t (match_operand:HI 2 \"immediate_operand\" \"n\")))]\n-  \"\"\n-  \"sub.w\t%0,%0\\;bld\t%Z2,%Y1\\;bst\t#0,%X0\"\n-  [(set_attr \"cc\" \"clobber\")\n-   (set_attr \"length\" \"6\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=&r\")\n-\t(subreg:HI (zero_extract:SI\n-\t\t     (match_operand:HI 1 \"register_operand\" \"r\")\n-\t\t     (const_int 1)\n-\t\t     (match_operand:HI 2 \"immediate_operand\" \"n\")) 2))]\n-  \"\"\n+  \"TARGET_H8300\"\n   \"sub.w\t%0,%0\\;bld\t%Z2,%Y1\\;bst\t#0,%X0\"\n   [(set_attr \"cc\" \"clobber\")\n    (set_attr \"length\" \"6\")])\n \n ;;\n ;; Inverted loads with a 16bit destination.\n ;;\n-;; Yes, all four cases are needed.\n-;;\n \n (define_insn \"\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=&r\")\n \t(zero_extract:HI (xor:HI (match_operand:HI 1 \"register_operand\" \"r\")\n \t\t\t\t (match_operand:HI 3 \"p_operand\" \"P\"))\n \t\t\t (const_int 1)\n \t\t\t (match_operand:HI 2 \"const_int_operand\" \"n\")))]\n-  \"(1 << INTVAL (operands[2])) == INTVAL (operands[3])\"\n-  \"sub.w\t%0,%0\\;bild\t%Z2,%Y1\\;bst\t#0,%X0\"\n-  [(set_attr \"cc\" \"clobber\")\n-   (set_attr \"length\" \"8\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=&r\")\n-\t(and:HI (not:HI\n-\t\t  (lshiftrt:HI\n-\t\t    (match_operand:HI 1 \"bit_operand\" \"Ur\")\n-\t\t    (match_operand:HI 2 \"const_int_operand\" \"n\")))\n-\t\t(const_int 1)))]\n-  \"\"\n-  \"sub.w\t%0,%0\\;bild\t%Z2,%Y1\\;bst\t#0,%X0\"\n-  [(set_attr \"cc\" \"clobber\")\n-   (set_attr \"length\" \"8\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=&r\")\n-\t(and:HI (not:HI\n-\t\t  (subreg:HI\n-\t\t    (lshiftrt:SI\n-\t\t      (match_operand:SI 1 \"register_operand\" \"Ur\")\n-\t\t      (match_operand:SI 2 \"const_int_operand\" \"n\")) 2))\n-\t\t(const_int 1)))]\n-  \"INTVAL (operands[2]) < 16\"\n-  \"sub.w\t%0,%0\\;bild\t%Z2,%Y1\\;bst\t#0,%X0\"\n-  [(set_attr \"cc\" \"clobber\")\n-   (set_attr \"length\" \"8\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=&r\")\n-\t(and:HI (not:HI\n-\t\t  (subreg:HI\n-\t\t    (lshiftrt:SI\n-\t\t      (match_operand:SI 1 \"bit_operand\" \"Ur\")\n-\t\t      (match_operand:SI 2 \"const_int_operand\" \"n\")) 0))\n-\t\t(const_int 1)))]\n-  \"(TARGET_H8300H || TARGET_H8300S)\n-   && INTVAL (operands[2]) < 16\"\n+  \"TARGET_H8300\n+   && (1 << INTVAL (operands[2])) == INTVAL (operands[3])\"\n   \"sub.w\t%0,%0\\;bild\t%Z2,%Y1\\;bst\t#0,%X0\"\n   [(set_attr \"cc\" \"clobber\")\n    (set_attr \"length\" \"8\")])"}]}