{"sha": "384be29f47a3fe1c5fd962b44abe1215983c3df3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg0YmUyOWY0N2EzZmUxYzVmZDk2MmI0NGFiZTEyMTU5ODNjM2RmMw==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2013-04-29T11:04:56Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2013-04-29T11:04:56Z"}, "message": "[AArch64] Add vector fix, fixuns, fix_trunc, fixuns_trunc standard patterns\n\ngcc/\n\t* config/aarch64/aarch64-simd.md\n\t(<optab><VDQF:mode><fcvt_target>2): New, maps to fix, fixuns.\n\t(<fix_trunc_optab><VDQF:mode><fcvt_target>2): New, maps to\n\tfix_trunc, fixuns_trunc.\n\t(ftrunc<VDQF:mode>2): New.\n\t* config/aarch64/iterators.md (optab): Add fix, fixuns.\n\t(fix_trunc_optab): New.\n\nFrom-SVN: r198403", "tree": {"sha": "ee294f25f51b387534c6e092a43f6a519e1a49a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee294f25f51b387534c6e092a43f6a519e1a49a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/384be29f47a3fe1c5fd962b44abe1215983c3df3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/384be29f47a3fe1c5fd962b44abe1215983c3df3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/384be29f47a3fe1c5fd962b44abe1215983c3df3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/384be29f47a3fe1c5fd962b44abe1215983c3df3/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0386b123a240b8dbdbdd7243d533c33a8a47a82f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0386b123a240b8dbdbdd7243d533c33a8a47a82f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0386b123a240b8dbdbdd7243d533c33a8a47a82f"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "3c42d606ae2b694baacd4c37d27e028be02044c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/384be29f47a3fe1c5fd962b44abe1215983c3df3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/384be29f47a3fe1c5fd962b44abe1215983c3df3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=384be29f47a3fe1c5fd962b44abe1215983c3df3", "patch": "@@ -1,3 +1,13 @@\n+2013-04-29  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/aarch64/aarch64-simd.md\n+\t(<optab><VDQF:mode><fcvt_target>2): New, maps to fix, fixuns.\n+\t(<fix_trunc_optab><VDQF:mode><fcvt_target>2): New, maps to\n+\tfix_trunc, fixuns_trunc.\n+\t(ftrunc<VDQF:mode>2): New.\n+\t* config/aarch64/iterators.md (optab): Add fix, fixuns.\n+\t(fix_trunc_optab): New.\n+\n 2013-04-29  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64-builtins.c"}, {"sha": "32ea587a0ac41002612c2b172229296772ab14b7", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/384be29f47a3fe1c5fd962b44abe1215983c3df3/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/384be29f47a3fe1c5fd962b44abe1215983c3df3/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=384be29f47a3fe1c5fd962b44abe1215983c3df3", "patch": "@@ -1257,6 +1257,29 @@\n    (set_attr \"simd_mode\" \"<MODE>\")]\n )\n \n+(define_expand \"<optab><VDQF:mode><fcvt_target>2\"\n+  [(set (match_operand:<FCVT_TARGET> 0 \"register_operand\")\n+\t(FIXUORS:<FCVT_TARGET> (unspec:<FCVT_TARGET>\n+\t\t\t       [(match_operand:VDQF 1 \"register_operand\")]\n+\t\t\t       UNSPEC_FRINTZ)))]\n+  \"TARGET_SIMD\"\n+  {})\n+\n+(define_expand \"<fix_trunc_optab><VDQF:mode><fcvt_target>2\"\n+  [(set (match_operand:<FCVT_TARGET> 0 \"register_operand\")\n+\t(FIXUORS:<FCVT_TARGET> (unspec:<FCVT_TARGET>\n+\t\t\t       [(match_operand:VDQF 1 \"register_operand\")]\n+\t\t\t       UNSPEC_FRINTZ)))]\n+  \"TARGET_SIMD\"\n+  {})\n+\n+(define_expand \"ftrunc<VDQF:mode>2\"\n+  [(set (match_operand:VDQF 0 \"register_operand\")\n+\t(unspec:VDQF [(match_operand:VDQF 1 \"register_operand\")]\n+\t\t      UNSPEC_FRINTZ))]\n+  \"TARGET_SIMD\"\n+  {})\n+\n (define_insn \"<optab><fcvt_target><VDQF:mode>2\"\n   [(set (match_operand:VDQF 0 \"register_operand\" \"=w\")\n \t(FLOATUORS:VDQF"}, {"sha": "d774c4c8cbc318a86f45bb7fa35b92576f57d3ba", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/384be29f47a3fe1c5fd962b44abe1215983c3df3/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/384be29f47a3fe1c5fd962b44abe1215983c3df3/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=384be29f47a3fe1c5fd962b44abe1215983c3df3", "patch": "@@ -560,6 +560,8 @@\n \t\t\t (zero_extend \"zero_extend\")\n \t\t\t (sign_extract \"extv\")\n \t\t\t (zero_extract \"extzv\")\n+\t\t\t (fix \"fix\")\n+\t\t\t (unsigned_fix \"fixuns\")\n \t\t\t (float \"float\")\n \t\t\t (unsigned_float \"floatuns\")\n \t\t\t (and \"and\")\n@@ -580,6 +582,9 @@\n \t\t\t (lt \"lt\")\n \t\t\t (ge \"ge\")])\n \n+(define_code_attr fix_trunc_optab [(fix \"fix_trunc\")\n+\t\t\t\t   (unsigned_fix \"fixuns_trunc\")])\n+\n ;; Optab prefix for sign/zero-extending operations\n (define_code_attr su_optab [(sign_extend \"\") (zero_extend \"u\")\n \t\t\t    (div \"\") (udiv \"u\")"}]}