{"sha": "ef9d910bb4edf56f168ff6940e8dd1a09fe8f83b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY5ZDkxMGJiNGVkZjU2ZjE2OGZmNjk0MGU4ZGQxYTA5ZmU4ZjgzYg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-10-28T19:54:53Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-10-28T19:54:53Z"}, "message": "Initial revision\n\nFrom-SVN: r13054", "tree": {"sha": "694c00a41bfe19d8c8cadfa9ece9032c720d53a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/694c00a41bfe19d8c8cadfa9ece9032c720d53a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef9d910bb4edf56f168ff6940e8dd1a09fe8f83b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9d910bb4edf56f168ff6940e8dd1a09fe8f83b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef9d910bb4edf56f168ff6940e8dd1a09fe8f83b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9d910bb4edf56f168ff6940e8dd1a09fe8f83b/comments", "author": null, "committer": null, "parents": [{"sha": "0bcc6fc75583d6f1528ec8ab9a5e8826d5cf97c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bcc6fc75583d6f1528ec8ab9a5e8826d5cf97c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bcc6fc75583d6f1528ec8ab9a5e8826d5cf97c0"}], "stats": {"total": 130, "additions": 130, "deletions": 0}, "files": [{"sha": "9a942987920c05ddb0f27856ed51cd3d23cb0841", "filename": "gcc/config/float-sh.h", "status": "added", "additions": 130, "deletions": 0, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef9d910bb4edf56f168ff6940e8dd1a09fe8f83b/gcc%2Fconfig%2Ffloat-sh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef9d910bb4edf56f168ff6940e8dd1a09fe8f83b/gcc%2Fconfig%2Ffloat-sh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffloat-sh.h?ref=ef9d910bb4edf56f168ff6940e8dd1a09fe8f83b", "patch": "@@ -0,0 +1,130 @@\n+/* float.h for target sh3e with optional IEEE 32 bit double format */\n+#ifndef _FLOAT_H_\n+#define _FLOAT_H_\n+/* Produced by enquire version 4.3, CWI, Amsterdam */\n+\n+   /* Radix of exponent representation */\n+#undef FLT_RADIX\n+#define FLT_RADIX 2\n+   /* Number of base-FLT_RADIX digits in the significand of a float */\n+#undef FLT_MANT_DIG\n+#define FLT_MANT_DIG 24\n+   /* Number of decimal digits of precision in a float */\n+#undef FLT_DIG\n+#define FLT_DIG 6\n+   /* Addition rounds to 0: zero, 1: nearest, 2: +inf, 3: -inf, -1: unknown */\n+#undef FLT_ROUNDS\n+#define FLT_ROUNDS 1\n+   /* Difference between 1.0 and the minimum float greater than 1.0 */\n+#undef FLT_EPSILON\n+#define FLT_EPSILON 1.19209290e-07F\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised float */\n+#undef FLT_MIN_EXP\n+#define FLT_MIN_EXP (-125)\n+   /* Minimum normalised float */\n+#undef FLT_MIN\n+#define FLT_MIN 1.17549435e-38F\n+   /* Minimum int x such that 10**x is a normalised float */\n+#undef FLT_MIN_10_EXP\n+#define FLT_MIN_10_EXP (-37)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable float */\n+#undef FLT_MAX_EXP\n+#define FLT_MAX_EXP 128\n+   /* Maximum float */\n+#undef FLT_MAX\n+#define FLT_MAX 3.40282347e+38F\n+   /* Maximum int x such that 10**x is a representable float */\n+#undef FLT_MAX_10_EXP\n+#define FLT_MAX_10_EXP 38\n+\n+#ifdef __SH3E__\n+\n+   /* Number of base-FLT_RADIX digits in the significand of a double */\n+#undef DBL_MANT_DIG\n+#define DBL_MANT_DIG 24\n+   /* Number of decimal digits of precision in a double */\n+#undef DBL_DIG\n+#define DBL_DIG 6\n+   /* Difference between 1.0 and the minimum double greater than 1.0 */\n+#undef DBL_EPSILON\n+#define DBL_EPSILON 1.19209290e-07F\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised double */\n+#undef DBL_MIN_EXP\n+#define DBL_MIN_EXP (-125)\n+   /* Minimum normalised double */\n+#undef DBL_MIN\n+#define DBL_MIN 1.17549435e-38F\n+   /* Minimum int x such that 10**x is a normalised double */\n+#undef DBL_MIN_10_EXP\n+#define DBL_MIN_10_EXP (-37)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable double */\n+#undef DBL_MAX_EXP\n+#define DBL_MAX_EXP 128\n+   /* Maximum double */\n+#undef DBL_MAX\n+#define DBL_MAX 3.40282347e+38F\n+   /* Maximum int x such that 10**x is a representable double */\n+#undef DBL_MAX_10_EXP\n+#define DBL_MAX_10_EXP 38\n+\n+#else\n+\n+   /* Number of base-FLT_RADIX digits in the significand of a double */\n+#undef DBL_MANT_DIG\n+#define DBL_MANT_DIG 53\n+   /* Number of decimal digits of precision in a double */\n+#undef DBL_DIG\n+#define DBL_DIG 15\n+   /* Difference between 1.0 and the minimum double greater than 1.0 */\n+#undef DBL_EPSILON\n+#define DBL_EPSILON 2.2204460492503131e-16\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised double */\n+#undef DBL_MIN_EXP\n+#define DBL_MIN_EXP (-1021)\n+   /* Minimum normalised double */\n+#undef DBL_MIN\n+#define DBL_MIN 2.2250738585072014e-308\n+   /* Minimum int x such that 10**x is a normalised double */\n+#undef DBL_MIN_10_EXP\n+#define DBL_MIN_10_EXP (-307)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable double */\n+#undef DBL_MAX_EXP\n+#define DBL_MAX_EXP 1024\n+   /* Maximum double */\n+#undef DBL_MAX\n+#define DBL_MAX 1.7976931348623157e+308\n+   /* Maximum int x such that 10**x is a representable double */\n+#undef DBL_MAX_10_EXP\n+#define DBL_MAX_10_EXP 308\n+\n+#endif\n+\n+   /* Number of base-FLT_RADIX digits in the significand of a long double */\n+#undef LDBL_MANT_DIG\n+#define LDBL_MANT_DIG 53\n+   /* Number of decimal digits of precision in a long double */\n+#undef LDBL_DIG\n+#define LDBL_DIG 15\n+   /* Difference between 1.0 and the minimum long double greater than 1.0 */\n+#undef LDBL_EPSILON\n+#define LDBL_EPSILON 2.2204460492503131e-16\n+   /* Minimum int x such that FLT_RADIX**(x-1) is a normalised long double */\n+#undef LDBL_MIN_EXP\n+#define LDBL_MIN_EXP (-1021)\n+   /* Minimum normalised long double */\n+#undef LDBL_MIN\n+#define LDBL_MIN 2.2250738585072014e-308\n+   /* Minimum int x such that 10**x is a normalised long double */\n+#undef LDBL_MIN_10_EXP\n+#define LDBL_MIN_10_EXP (-307)\n+   /* Maximum int x such that FLT_RADIX**(x-1) is a representable long double */\n+#undef LDBL_MAX_EXP\n+#define LDBL_MAX_EXP 1024\n+   /* Maximum long double */\n+#undef LDBL_MAX\n+#define LDBL_MAX 1.7976931348623157e+308\n+   /* Maximum int x such that 10**x is a representable long double */\n+#undef LDBL_MAX_10_EXP\n+#define LDBL_MAX_10_EXP 308\n+\n+#endif /*  _FLOAT_H_ */"}]}