{"sha": "1d92cd072ef4b2e4f309eefbcfe64c368d220f29", "node_id": "C_kwDOANBUbNoAKDFkOTJjZDA3MmVmNGIyZTRmMzA5ZWVmYmNmZTY0YzM2OGQyMjBmMjk", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2023-02-24T19:12:46Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2023-03-07T00:14:30Z"}, "message": "testsuite: Fix gcc.dg/analyzer/allocation-size-multiline-3.c\n\nFor 32-bit newlib targets (such as cris-elf and pru-elf),\nthat int32_t is \"long int\".  See other regexps in the\ntestsuite matching \"aka (long )?int\" (with single-quotes\nwhere needed) where the pattern in\nallocation-size-multiline-3.c matches plain \"int\".  Uses the\nspecial syntax recently introduced for multi-line patterns.\n\ntestsuite:\n\t* gcc.dg/analyzer/allocation-size-multiline-3.c: Handle\n\tint32_t being \"long int\".", "tree": {"sha": "2acf0785a97f82a979327d10fd6177c08088d6d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2acf0785a97f82a979327d10fd6177c08088d6d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d92cd072ef4b2e4f309eefbcfe64c368d220f29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d92cd072ef4b2e4f309eefbcfe64c368d220f29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d92cd072ef4b2e4f309eefbcfe64c368d220f29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d92cd072ef4b2e4f309eefbcfe64c368d220f29/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "82318c57607ca983742630c9884e5d30920a3ce1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82318c57607ca983742630c9884e5d30920a3ce1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82318c57607ca983742630c9884e5d30920a3ce1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "b3de582368fc0a74115f5ed9407d70d676daef11", "filename": "gcc/testsuite/gcc.dg/analyzer/allocation-size-multiline-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d92cd072ef4b2e4f309eefbcfe64c368d220f29/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-multiline-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d92cd072ef4b2e4f309eefbcfe64c368d220f29/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-multiline-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-multiline-3.c?ref=1d92cd072ef4b2e4f309eefbcfe64c368d220f29", "patch": "@@ -21,7 +21,7 @@ void test_constant_99 (void)\n     |                  ^~~~~~\n     |                  |\n     |                  (1) allocated 99 bytes here\n-    |                  (2) assigned to 'int32_t *' {aka 'int *'} here; 'sizeof (int32_t {aka int})' is '4'\n+    |                  (2) assigned to 'int32_t *' {aka '{re:long :re?}int *'} here; 'sizeof (int32_t {aka {re:long :re?}int})' is '4'\n     |\n    { dg-end-multiline-output \"\" } */\n \n@@ -39,6 +39,6 @@ void test_symbolic (int n)\n     |                  ^~~~~~\n     |                  |\n     |                  (1) allocated 'n * 2' bytes here\n-    |                  (2) assigned to 'int32_t *' {aka 'int *'} here; 'sizeof (int32_t {aka int})' is '4'\n+    |                  (2) assigned to 'int32_t *' {aka '{re:long :re?}int *'} here; 'sizeof (int32_t {aka {re:long :re?}int})' is '4'\n     |\n    { dg-end-multiline-output \"\" } */"}]}