{"sha": "5145a02e5ddfd75dfb212e5ab165b21cec63fe18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE0NWEwMmU1ZGRmZDc1ZGZiMjEyZTVhYjE2NWIyMWNlYzYzZmUxOA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2003-06-07T18:50:54Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-06-07T18:50:54Z"}, "message": "mklibgcc.in (lib2funcs): Remove _exit.\n\n\n        * mklibgcc.in (lib2funcs): Remove _exit.\n        * libgcc2.c: Remove L_exit.\n        * gbl-ctors.h: Remove declarations dependend on NEED_ATEXIT.\n\n        * system.h: Poison NEED_ATEXIT, ON_EXIT, EXIT_BODY.\n\n        * doc/tm.texi (Misc): Remove NEED_ATEXIT, ON_EXIT, EXIT_BODY.\n\nFrom-SVN: r67599", "tree": {"sha": "0f2ad2f41ab1a152a64b7af64f2a550377c14d58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f2ad2f41ab1a152a64b7af64f2a550377c14d58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5145a02e5ddfd75dfb212e5ab165b21cec63fe18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5145a02e5ddfd75dfb212e5ab165b21cec63fe18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5145a02e5ddfd75dfb212e5ab165b21cec63fe18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5145a02e5ddfd75dfb212e5ab165b21cec63fe18/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "39072dc8df583a5c53fa77203f560b4b359fab56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39072dc8df583a5c53fa77203f560b4b359fab56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39072dc8df583a5c53fa77203f560b4b359fab56"}], "stats": {"total": 118, "additions": 12, "deletions": 106}, "files": [{"sha": "10efafa97303f1e04cc26932eb467cb044d467ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5145a02e5ddfd75dfb212e5ab165b21cec63fe18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5145a02e5ddfd75dfb212e5ab165b21cec63fe18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5145a02e5ddfd75dfb212e5ab165b21cec63fe18", "patch": "@@ -1,5 +1,13 @@\n 2003-06-07  Andreas Jaeger  <aj@suse.de>\n \n+\t* mklibgcc.in (lib2funcs): Remove _exit.\n+\t* libgcc2.c: Remove L_exit.\n+\t* gbl-ctors.h: Remove declarations dependend on NEED_ATEXIT.\n+\n+\t* system.h: Poison NEED_ATEXIT, ON_EXIT, EXIT_BODY.\n+\n+\t* doc/tm.texi (Misc): Remove NEED_ATEXIT, ON_EXIT, EXIT_BODY.\n+\n \t* ggc.h: Convert to ISO C90 prototypes.\n \t* ggc-none.c: Likewise.\n \t* ggc-common.c: Likewise."}, {"sha": "c3fba75545a7bf294e8e0f0b9a9451696753273d", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5145a02e5ddfd75dfb212e5ab165b21cec63fe18/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5145a02e5ddfd75dfb212e5ab165b21cec63fe18/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=5145a02e5ddfd75dfb212e5ab165b21cec63fe18", "patch": "@@ -9006,30 +9006,6 @@ The definition should be a C statement (sans semicolon) to generate the\n appropriate rtl instructions.  It is used only when compiling the end of\n @code{main}.\n \n-@item NEED_ATEXIT\n-@findex NEED_ATEXIT\n-Define this if the target system lacks the function @code{atexit}\n-from the ISO C standard.  If this macro is defined, a default definition\n-will be provided to support C++.  If @code{ON_EXIT} is not defined,\n-a default @code{exit} function will also be provided.\n-\n-@item ON_EXIT\n-@findex ON_EXIT\n-Define this macro if the target has another way to implement atexit\n-functionality without replacing @code{exit}.  For instance, SunOS 4 has\n-a similar @code{on_exit} library function.\n-\n-The definition should be a functional macro which can be used just like\n-the @code{atexit} function.\n-\n-@item EXIT_BODY\n-@findex EXIT_BODY\n-Define this if your @code{exit} function needs to do something\n-besides calling an external function @code{_cleanup} before\n-terminating with @code{_exit}.  The @code{EXIT_BODY} macro is\n-only needed if @code{NEED_ATEXIT} is defined and @code{ON_EXIT} is not\n-defined.\n-\n @findex INSN_SETS_ARE_DELAYED\n @item INSN_SETS_ARE_DELAYED (@var{insn})\n Define this macro as a C expression that is nonzero if it is safe for the"}, {"sha": "2a56a9fb9fb2b462da915b5ca67c7f40aee3e46d", "filename": "gcc/gbl-ctors.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5145a02e5ddfd75dfb212e5ab165b21cec63fe18/gcc%2Fgbl-ctors.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5145a02e5ddfd75dfb212e5ab165b21cec63fe18/gcc%2Fgbl-ctors.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgbl-ctors.h?ref=5145a02e5ddfd75dfb212e5ab165b21cec63fe18", "patch": "@@ -2,7 +2,7 @@\n    for getting g++ file-scope static objects constructed.  This file\n    will get included either by libgcc2.c (for systems that don't support\n    a .init section) or by crtstuff.c (for those that do).\n-   Copyright (C) 1991, 1995, 1996, 1998, 1999, 2000\n+   Copyright (C) 1991, 1995, 1996, 1998, 1999, 2000, 2003\n    Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@segfault.us.com)\n \n@@ -38,10 +38,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \tNote that this file should only be compiled with GCC.\n */\n \n-#ifdef NEED_ATEXIT\n-extern int atexit (void (*) (void));\n-#endif\n-\n /*  Declare a pointer to void function type.  */\n \n typedef void (*func_ptr) (void);"}, {"sha": "e026e4b9649b7893fd17eea43bf2b4fae5efd8cd", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5145a02e5ddfd75dfb212e5ab165b21cec63fe18/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5145a02e5ddfd75dfb212e5ab165b21cec63fe18/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=5145a02e5ddfd75dfb212e5ab165b21cec63fe18", "patch": "@@ -1668,79 +1668,4 @@ func_ptr __DTOR_LIST__[2];\n #endif\n #endif /* no INIT_SECTION_ASM_OP and not CTOR_LISTS_DEFINED_EXTERNALLY */\n #endif /* L_ctors */\n-\f\n-#ifdef L_exit\n-\n-#include \"gbl-ctors.h\"\n-\n-#ifdef NEED_ATEXIT\n-\n-#ifndef ON_EXIT\n-\n-# include <errno.h>\n-\n-static func_ptr *atexit_chain = 0;\n-static long atexit_chain_length = 0;\n-static volatile long last_atexit_chain_slot = -1;\n-\n-int\n-atexit (func_ptr func)\n-{\n-  if (++last_atexit_chain_slot == atexit_chain_length)\n-    {\n-      atexit_chain_length += 32;\n-      if (atexit_chain)\n-\tatexit_chain = (func_ptr *) realloc (atexit_chain, atexit_chain_length\n-\t\t\t\t\t     * sizeof (func_ptr));\n-      else\n-\tatexit_chain = (func_ptr *) malloc (atexit_chain_length\n-\t\t\t\t\t    * sizeof (func_ptr));\n-      if (! atexit_chain)\n-\t{\n-\t  atexit_chain_length = 0;\n-\t  last_atexit_chain_slot = -1;\n-\t  errno = ENOMEM;\n-\t  return (-1);\n-\t}\n-    }\n-  atexit_chain[last_atexit_chain_slot] = func;\n-  return (0);\n-}\n-\n-extern void _cleanup (void);\n-extern void _exit (int) __attribute__ ((__noreturn__));\n-\n-void\n-exit (int status)\n-{\n-  if (atexit_chain)\n-    {\n-      for ( ; last_atexit_chain_slot-- >= 0; )\n-\t{\n-\t  (*atexit_chain[last_atexit_chain_slot + 1]) ();\n-\t  atexit_chain[last_atexit_chain_slot + 1] = 0;\n-\t}\n-      free (atexit_chain);\n-      atexit_chain = 0;\n-    }\n-#ifdef EXIT_BODY\n-  EXIT_BODY;\n-#else\n-  _cleanup ();\n-#endif\n-  _exit (status);\n-}\n-\n-#else /* ON_EXIT */\n-\n-/* Simple; we just need a wrapper for ON_EXIT.  */\n-int\n-atexit (func_ptr func)\n-{\n-  return ON_EXIT (func);\n-}\n-\n-#endif /* ON_EXIT */\n-#endif /* NEED_ATEXIT */\n \n-#endif /* L_exit */"}, {"sha": "c2eea1a13916843ad345f1c99e83926a3b7d5301", "filename": "gcc/mklibgcc.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5145a02e5ddfd75dfb212e5ab165b21cec63fe18/gcc%2Fmklibgcc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5145a02e5ddfd75dfb212e5ab165b21cec63fe18/gcc%2Fmklibgcc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmklibgcc.in?ref=5145a02e5ddfd75dfb212e5ab165b21cec63fe18", "patch": "@@ -48,7 +48,7 @@ lib2funcs='_muldi3 _negdi2 _lshrdi3 _ashldi3 _ashrdi3\n \t_cmpdi2 _ucmpdi2 _floatdidf _floatdisf _fixunsdfsi _fixunssfsi\n \t_fixunsdfdi _fixdfdi _fixunssfdi _fixsfdi _fixxfdi _fixunsxfdi\n \t_floatdixf _fixunsxfsi _fixtfdi _fixunstfdi _floatditf _clear_cache\n-\t_trampoline __main _exit _absvsi2 _absvdi2 _addvsi3 _addvdi3\n+\t_trampoline __main _absvsi2 _absvdi2 _addvsi3 _addvdi3\n \t_subvsi3 _subvdi3 _mulvsi3 _mulvdi3 _negvsi2 _negvdi2 _ctors\n \t_ffssi2 _ffsdi2 _clz _clzsi2 _clzdi2 _ctzsi2 _ctzdi2 _popcount_tab\n \t_popcountsi2 _popcountdi2 _paritysi2 _paritydi2'"}, {"sha": "febe4453e385d81dcd211c4c0fff6633b0fb01ed", "filename": "gcc/system.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5145a02e5ddfd75dfb212e5ab165b21cec63fe18/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5145a02e5ddfd75dfb212e5ab165b21cec63fe18/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=5145a02e5ddfd75dfb212e5ab165b21cec63fe18", "patch": "@@ -645,7 +645,8 @@ typedef char _Bool;\n \tROUND_TYPE_SIZE_UNIT CONST_SECTION_ASM_OP CRT_GET_RFIB_TEXT\t   \\\n \tDBX_LBRAC_FIRST DBX_OUTPUT_ENUM DBX_OUTPUT_SOURCE_FILENAME\t   \\\n \tDBX_WORKING_DIRECTORY INSN_CACHE_DEPTH INSN_CACHE_SIZE\t\t   \\\n-\tINSN_CACHE_LINE_WIDTH INIT_SECTION_PREAMBLE\n+\tINSN_CACHE_LINE_WIDTH INIT_SECTION_PREAMBLE NEED_ATEXIT ON_EXIT\t   \\\n+\tEXIT_BODY\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}]}