{"sha": "b89c5a7b53874bf0fa55f53a8ebbf16cc23ed345", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg5YzVhN2I1Mzg3NGJmMGZhNTVmNTNhOGViYmYxNmNjMjNlZDM0NQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-06-03T10:07:18Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-06-03T10:07:18Z"}, "message": "decl.c (grokdeclarator): Don't treat arbitrary types as unsigned just because flag_signed_bitfields is false.\n\n\t* decl.c (grokdeclarator): Don't treat arbitrary types as unsigned\n\tjust because flag_signed_bitfields is false.\n\nFrom-SVN: r27328", "tree": {"sha": "27ab2a708784e1828c99304a32675bbcd8d0ee29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27ab2a708784e1828c99304a32675bbcd8d0ee29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b89c5a7b53874bf0fa55f53a8ebbf16cc23ed345", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b89c5a7b53874bf0fa55f53a8ebbf16cc23ed345", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b89c5a7b53874bf0fa55f53a8ebbf16cc23ed345", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b89c5a7b53874bf0fa55f53a8ebbf16cc23ed345/comments", "author": null, "committer": null, "parents": [{"sha": "5403593a4401fca1ef78e3926effc637ae435369", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5403593a4401fca1ef78e3926effc637ae435369", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5403593a4401fca1ef78e3926effc637ae435369"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "b7f428906ab400bb12788cf66f80b4964a3ca1a8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b89c5a7b53874bf0fa55f53a8ebbf16cc23ed345/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b89c5a7b53874bf0fa55f53a8ebbf16cc23ed345/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b89c5a7b53874bf0fa55f53a8ebbf16cc23ed345", "patch": "@@ -1,3 +1,8 @@\n+1999-06-03  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* decl.c (grokdeclarator): Don't treat arbitrary types as unsigned\n+\tjust because flag_signed_bitfields is false.\n+\n 1999-06-03  Nathan Sidwell  <nathan@acm.org>\n \n \t* semantics.c (begin_class_definition): Update the struct's"}, {"sha": "1592a64b21115837f5c4be2bbd8f217ecb9a4d6a", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b89c5a7b53874bf0fa55f53a8ebbf16cc23ed345/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b89c5a7b53874bf0fa55f53a8ebbf16cc23ed345/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b89c5a7b53874bf0fa55f53a8ebbf16cc23ed345", "patch": "@@ -9921,14 +9921,24 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n   /* Decide whether an integer type is signed or not.\n      Optionally treat bitfields as signed by default.  */\n   if (RIDBIT_SETP (RID_UNSIGNED, specbits)\n-      || (bitfield && ! flag_signed_bitfields\n-\t  && (explicit_int || defaulted_int || explicit_char\n-\t      /* A typedef for plain `int' without `signed'\n-\t\t can be controlled just like plain `int'.  */\n-\t      || ! (typedef_decl != NULL_TREE\n-\t\t    && C_TYPEDEF_EXPLICITLY_SIGNED (typedef_decl)))\n-\t  && TREE_CODE (type) != ENUMERAL_TYPE\n-\t  && RIDBIT_NOTSETP (RID_SIGNED, specbits)))\n+      /* [class.bit]\n+\n+\t It is implementation-defined whether a plain (neither\n+\t explicitly signed or unsigned) char, short, int, or long\n+\t bit-field is signed or unsigned.\n+\t     \n+\t Naturally, we extend this to long long as well.  Note that\n+\t this does not include wchar_t.  */\n+      || (bitfield && !flag_signed_bitfields\n+\t  && RIDBIT_NOTSETP (RID_SIGNED, specbits)\n+\t  /* A typedef for plain `int' without `signed' can be\n+\t     controlled just like plain `int', but a typedef for\n+\t     `signed int' cannot be so controlled.  */\n+\t  && !(typedef_decl \n+\t       && C_TYPEDEF_EXPLICITLY_SIGNED (typedef_decl)))\n+\t  && (TREE_CODE (type) == INTEGER_TYPE\n+\t      || TREE_CODE (type) == CHAR_TYPE)\n+\t  && !same_type_p (TYPE_MAIN_VARIANT (type), wchar_type_node))\n     {\n       if (longlong)\n \ttype = long_long_unsigned_type_node;"}, {"sha": "466c5cec728965f132a9c6e9b6738abc188219e4", "filename": "gcc/testsuite/g++.old-deja/g++.other/bitfld2.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b89c5a7b53874bf0fa55f53a8ebbf16cc23ed345/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fbitfld2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b89c5a7b53874bf0fa55f53a8ebbf16cc23ed345/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fbitfld2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fbitfld2.C?ref=b89c5a7b53874bf0fa55f53a8ebbf16cc23ed345", "patch": "@@ -0,0 +1,8 @@\n+// Origin: Mark Mitchell <mark@codesourcery.com>\n+// Special g++ Options: -funsigned-bitfields\n+\n+typedef int i[4];\n+\n+struct S {\n+  i j:12; // ERROR - array type as bitfield\n+};"}]}