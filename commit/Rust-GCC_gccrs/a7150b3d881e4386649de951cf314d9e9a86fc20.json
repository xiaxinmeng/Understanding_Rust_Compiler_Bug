{"sha": "a7150b3d881e4386649de951cf314d9e9a86fc20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTcxNTBiM2Q4ODFlNDM4NjY0OWRlOTUxY2YzMTRkOWU5YTg2ZmMyMA==", "commit": {"author": {"name": "Dave Korn", "email": "dave.korn.cygwin@gmail.com", "date": "2011-01-26T03:46:07Z"}, "committer": {"name": "Dave Korn", "email": "davek@gcc.gnu.org", "date": "2011-01-26T03:46:07Z"}, "message": "patch_tester.sh (nopristinecache): New shell var, set according to presence or absence of new -nopristinecache option.\n\n\t* patch_tester.sh (nopristinecache): New shell var, set according\n\tto presence or absence of new -nopristinecache option.\n\t(usage): Document new option.\n\t(bootntest_pristine): Implement it.\n\nFrom-SVN: r169273", "tree": {"sha": "45ccc8362e3f95be7a4a5cf0e91eb236a4c4279c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45ccc8362e3f95be7a4a5cf0e91eb236a4c4279c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7150b3d881e4386649de951cf314d9e9a86fc20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7150b3d881e4386649de951cf314d9e9a86fc20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7150b3d881e4386649de951cf314d9e9a86fc20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7150b3d881e4386649de951cf314d9e9a86fc20/comments", "author": {"login": "davek-cygwin", "id": 530057, "node_id": "MDQ6VXNlcjUzMDA1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/530057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davek-cygwin", "html_url": "https://github.com/davek-cygwin", "followers_url": "https://api.github.com/users/davek-cygwin/followers", "following_url": "https://api.github.com/users/davek-cygwin/following{/other_user}", "gists_url": "https://api.github.com/users/davek-cygwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/davek-cygwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davek-cygwin/subscriptions", "organizations_url": "https://api.github.com/users/davek-cygwin/orgs", "repos_url": "https://api.github.com/users/davek-cygwin/repos", "events_url": "https://api.github.com/users/davek-cygwin/events{/privacy}", "received_events_url": "https://api.github.com/users/davek-cygwin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "214dab66074a734f637c8d2766aa5d215aac46e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/214dab66074a734f637c8d2766aa5d215aac46e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/214dab66074a734f637c8d2766aa5d215aac46e3"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "1a11db70186e4d4efe0810b65c13373ec603540d", "filename": "contrib/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7150b3d881e4386649de951cf314d9e9a86fc20/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7150b3d881e4386649de951cf314d9e9a86fc20/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=a7150b3d881e4386649de951cf314d9e9a86fc20", "patch": "@@ -1,3 +1,10 @@\n+2011-01-26  Dave Korn  <dave.korn.cygwin@gmail.com>\n+\n+\t* patch_tester.sh (nopristinecache): New shell var, set according\n+\tto presence or absence of new -nopristinecache option.\n+\t(usage): Document new option.\n+\t(bootntest_pristine): Implement it.\n+\n 2010-11-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* make_sunver.pl: Use elfdump -s to extract symbols if possible,"}, {"sha": "74b8e9e8ce1a7f22b66cd48cb1b4d811dec88315", "filename": "contrib/patch_tester.sh", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7150b3d881e4386649de951cf314d9e9a86fc20/contrib%2Fpatch_tester.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7150b3d881e4386649de951cf314d9e9a86fc20/contrib%2Fpatch_tester.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fpatch_tester.sh?ref=a7150b3d881e4386649de951cf314d9e9a86fc20", "patch": "@@ -1,7 +1,7 @@\n #!/bin/sh\n \n # Tests a set of patches from a directory.\n-# Copyright (C) 2007, 2008  Free Software Foundation, Inc.\n+# Copyright (C) 2007, 2008, 2011  Free Software Foundation, Inc.\n # Contributed by Sebastian Pop <sebastian.pop@amd.com>\n \n # This program is free software; you can redistribute it and/or modify\n@@ -36,13 +36,14 @@ standby=$default_standby\n default_watermark=0.60\n watermark=$default_watermark\n savecompilers=false\n+nopristinecache=false\n nogpg=false\n stop=false\n \n usage() {\n     cat <<EOF\n patch_tester.sh [-j<N>] [-standby N] [-watermark N] [-savecompilers] [-nogpg]\n-                [-svnpath URL] [-stop]\n+                [-svnpath URL] [-stop] [-nopristinecache]\n                 <source_dir> [patches_dir [state_dir [build_dir]]]\n \n     J is the flag passed to make.  Default is empty string.\n@@ -56,6 +57,12 @@ patch_tester.sh [-j<N>] [-standby N] [-watermark N] [-savecompilers] [-nogpg]\n     SAVECOMPILERS copies the compilers in the same directory as the\n     test results for the non patched version.  Default is not copy.\n \n+    NOPRISTINECACHE prevents use of cached test results from any earlier\n+    test runs on the pristine version of the branch and revision under\n+    test (the default behaviour).  This should be used when testing the\n+    same revision and patch with multiple sets of configure options, as\n+    these may affect the set of baseline failures.\n+\n     NOGPG can be used to avoid checking the GPG signature of patches.\n \n     URL is the location of the GCC SVN repository.  The default is\n@@ -103,6 +110,9 @@ while [ $# -ne 0 ]; do\n \t-savecompilers)\n \t    savecompilers=true; shift\n \t    ;;\n+\t-nopristinecache)\n+\t    nopristinecache=true; shift\n+\t    ;;\n \t-nogpg)\n \t    nogpg=true; shift\n \t    ;;\n@@ -366,6 +376,9 @@ bootntest_pristine () {\n     current_version=`svn info $SOURCE | grep \"^Revision:\" | sed -e \"s/^Revision://g\" -e \"s/ //g\"`\n     PRISTINE=$STATE/$current_branch/$current_version\n \n+    if [ $nopristinecache = true ]; then\n+      rm -rf $PRISTINE\n+    fi\n     if [ -d $PRISTINE ]; then\n \tln -s $PRISTINE $TESTING/pristine\n \treturn 0"}]}