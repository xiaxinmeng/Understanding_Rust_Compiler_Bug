{"sha": "e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBhNWIzMTNjMWEzZWRmYjMzYTI4YjhkOGZlYTkyZTAxNDkwZWJiMw==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-01-17T11:49:15Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-01-21T02:40:47Z"}, "message": "RISC-V: Disallow regrenme if the TO register never used before for interrupt functions\n\ngcc/ChangeLog\n\n\tPR target/93304\n\t* config/riscv/riscv-protos.h (riscv_hard_regno_rename_ok): New.\n\t* config/riscv/riscv.c (riscv_hard_regno_rename_ok): New.\n\t* config/riscv/riscv.h (HARD_REGNO_RENAME_OK): Defined.\n\ngcc/testsuite/ChangeLog\n\n\tPR target/93304\n\t* gcc.target/riscv/pr93304.c: New test.", "tree": {"sha": "565354c0838029c31da23fc5a0b7476c8eed0141", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/565354c0838029c31da23fc5a0b7476c8eed0141"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2df76cd6895f9cf0efee4d8bc50258899ba7c293", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2df76cd6895f9cf0efee4d8bc50258899ba7c293", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2df76cd6895f9cf0efee4d8bc50258899ba7c293"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "0581561f63ddcd1184e3ce5225ac0ab7da08249c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3", "patch": "@@ -1,3 +1,10 @@\n+2020-01-21  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\tPR target/93304\n+\t* config/riscv/riscv-protos.h (riscv_hard_regno_rename_ok): New.\n+\t* config/riscv/riscv.c (riscv_hard_regno_rename_ok): New.\n+\t* config/riscv/riscv.h (HARD_REGNO_RENAME_OK): Defined.\n+\n 2020-01-20  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* config/aarch64/aarch64.c (neoversen1_tunings): Set jump_align to 4."}, {"sha": "8cf9137b5e7e9f985abc44168b67ba8f153a2f2e", "filename": "gcc/config/riscv/riscv-protos.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3/gcc%2Fconfig%2Friscv%2Friscv-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3/gcc%2Fconfig%2Friscv%2Friscv-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-protos.h?ref=e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3", "patch": "@@ -89,4 +89,6 @@ extern void riscv_init_builtins (void);\n /* Routines implemented in riscv-common.c.  */\n extern std::string riscv_arch_str ();\n \n+extern bool riscv_hard_regno_rename_ok (unsigned, unsigned);\n+\n #endif /* ! GCC_RISCV_PROTOS_H */"}, {"sha": "573024074e3f8d606cb1162505d4cc072950d00b", "filename": "gcc/config/riscv/riscv.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3/gcc%2Fconfig%2Friscv%2Friscv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3/gcc%2Fconfig%2Friscv%2Friscv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.c?ref=e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3", "patch": "@@ -5021,6 +5021,19 @@ riscv_reorg (void)\n     riscv_remove_unneeded_save_restore_calls ();\n }\n \n+/* Return nonzero if register FROM_REGNO can be renamed to register\n+   TO_REGNO.  */\n+\n+bool\n+riscv_hard_regno_rename_ok (unsigned from_regno ATTRIBUTE_UNUSED,\n+\t\t\t    unsigned to_regno)\n+{\n+  /* Interrupt functions can only use registers that have already been\n+     saved by the prologue, even if they would normally be\n+     call-clobbered.  */\n+  return !cfun->machine->interrupt_handler_p || df_regs_ever_live_p (to_regno);\n+}\n+\n /* Initialize the GCC target structure.  */\n #undef TARGET_ASM_ALIGNED_HI_OP\n #define TARGET_ASM_ALIGNED_HI_OP \"\\t.half\\t\""}, {"sha": "19438e28fe88b92d91b610e9a1760c13f1d88be5", "filename": "gcc/config/riscv/riscv.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3/gcc%2Fconfig%2Friscv%2Friscv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3/gcc%2Fconfig%2Friscv%2Friscv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.h?ref=e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3", "patch": "@@ -926,4 +926,6 @@ extern unsigned riscv_stack_boundary;\n \n extern void riscv_remove_unneeded_save_restore_calls (void);\n \n+#define HARD_REGNO_RENAME_OK(FROM, TO) riscv_hard_regno_rename_ok (FROM, TO)\n+\n #endif /* ! GCC_RISCV_H */"}, {"sha": "fa457c86879e137f3886e6dc6b84422447e32ce7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3", "patch": "@@ -1,3 +1,8 @@\n+2020-01-21  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\tPR target/93304\n+\t* gcc.target/riscv/pr93304.c: New test.\n+\n 2020-01-20  Martin Sebor  <msebor@redhat.com>\n \n \tPR testsuite/92829"}, {"sha": "f771e4859a96f70cb8adf35e158835de730dcd31", "filename": "gcc/testsuite/gcc.target/riscv/pr93304.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpr93304.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpr93304.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpr93304.c?ref=e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3", "patch": "@@ -0,0 +1,19 @@\n+/* Verify the regrename won't rename registers to register which never used\n+   before.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -frename-registers\" } */\n+\n+static unsigned _t = 0;\n+\n+void __attribute__ ((interrupt))\n+foo (void)\n+{\n+  _t++;\n+}\n+\n+/* Register rename will try to use registers from the lower register\n+   regradless of the REG_ALLOC_ORDER.\n+   In theory, t0-t6 should not used in such small program if regrename\n+   not executed incorrectly, because a5-a0 has higher priority in\n+   REG_ALLOC_ORDER.  */\n+/* { dg-final { scan-assembler-not \"t\\[0-6\\]\" } } */"}]}