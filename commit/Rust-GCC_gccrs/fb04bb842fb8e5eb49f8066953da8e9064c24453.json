{"sha": "fb04bb842fb8e5eb49f8066953da8e9064c24453", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIwNGJiODQyZmI4ZTVlYjQ5ZjgwNjY5NTNkYThlOTA2NGMyNDQ1Mw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-03-26T18:22:37Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-03-26T18:22:37Z"}, "message": "re PR target/43524 (ICE: in ix86_expand_prologue, at config/i386/i386.c:8636 with -mstack-arg-probe on x86_64-linux)\n\n\tPR target/43524\n\t* config/i386/i386.c (ix86_expand_prologue) [TARGET_STACK_PROBE]:\n\tRemove invalid assert and wrong comment.\n\ntestsuite/ChangeLog:\n\n\tPR target/43524\n\t* gcc.target/i386/pr43524.c: New test.\n\nFrom-SVN: r157757", "tree": {"sha": "bf7e4f3146a98fe97ef7977f199855fa2a208fcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf7e4f3146a98fe97ef7977f199855fa2a208fcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb04bb842fb8e5eb49f8066953da8e9064c24453", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb04bb842fb8e5eb49f8066953da8e9064c24453", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb04bb842fb8e5eb49f8066953da8e9064c24453", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb04bb842fb8e5eb49f8066953da8e9064c24453/comments", "author": null, "committer": null, "parents": [{"sha": "7cbd785e801c9f9b7e854e5a5680103fed5f5e6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cbd785e801c9f9b7e854e5a5680103fed5f5e6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cbd785e801c9f9b7e854e5a5680103fed5f5e6e"}], "stats": {"total": 102, "additions": 55, "deletions": 47}, "files": [{"sha": "ffd515053a618fbb08c066c0e9b56148f6d35e77", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 27, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb04bb842fb8e5eb49f8066953da8e9064c24453/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb04bb842fb8e5eb49f8066953da8e9064c24453/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb04bb842fb8e5eb49f8066953da8e9064c24453", "patch": "@@ -1,3 +1,9 @@\n+2010-03-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/43524\n+\t* config/i386/i386.c (ix86_expand_prologue) [TARGET_STACK_PROBE]:\n+\tRemove invalid assert and wrong comment.\n+\n 2010-03-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/43516\n@@ -34,8 +40,7 @@\n \n 2010-03-24  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n-\t* config/rs6000/constraints.md: Update copyright year for my\n-\tchanges.\n+\t* config/rs6000/constraints.md: Update copyright year for my changes.\n \n \tPR target/43484\n \t* config/rs6000/rs6000.c (rs6000_split_multireg_move): If r0 is\n@@ -95,8 +100,7 @@\n \t(output_addr_const_extra): Likewise.\n \t(output_pic_addr_const): Lowercase @TPOFF.\n \t(output_addr_const_extra): Likewise.\n-\t* config/i386/i386.md (*tls_global_dynamic_32_gnu): Lowercase\n-\t@TLSGD.\n+\t* config/i386/i386.md (*tls_global_dynamic_32_gnu): Lowercase @TLSGD.\n \t(*tls_global_dynamic_64): Likewise.\n \t(*tls_local_dynamic_base_32_gnu): Lowercase @TLSLDM.\n \t(*tls_local_dynamic_base_64): Lowercase\t@TLSLD.\n@@ -106,8 +110,7 @@\n \t* config/i386/sol2-gas.h (TLS_COMMON_ASM_OP): Undef.\n \n \tPR target/38118\n-\t* config.gcc (sparc*-*-solaris2*) [$gas=yes]: Add usegas.h to\n-\ttm_file.\n+\t* config.gcc (sparc*-*-solaris2*) [$gas=yes]: Add usegas.h to tm_file.\n \t* config/sparc/sol2.h (ASM_OUTPUT_ALIGNED_COMMON): Move ...\n \t* config/sol2.h (ASM_OUTPUT_ALIGNED_COMMON): ... here.\n \t* config/i386/sol2-10.h (ASM_OUTPUT_ALIGNED_COMMON): Redefine.\n@@ -153,12 +156,12 @@\n \n \tPR target/43348\n \t* ia64.md (call_nogp, call_value_nogp, sibcall_nogp, call_gp,\n-\tcall_value_gp,sibcall_gp): Use 's' constraint not 'i'.\n+\tcall_value_gp, sibcall_gp): Use 's' constraint not 'i'.\n \n 2010-03-22  H.J. Lu  <hongjiu.lu@intel.com>\n \n-\t* config/i386/i386.c (ix86_target_string): Fix a typo in comments.\n-\tAdd -mfma.\n+\t* config/i386/i386.c (ix86_target_string): Add -mfma.\n+\tFix a typo in comment.\n \n 2010-03-22  Mike Stump  <mikestump@comcast.net>\n \n@@ -175,17 +178,15 @@\n \n \t* doc/configfiles.texi (Configuration Files): Removed\n \tfixinc/Makefile*, intl/Makefile.*.\n-\t* doc/makefile.texi: Fixed markup.\n-\tAbstract from version control system used.\n+\t* doc/makefile.texi: Fixed markup. Abstract from version\n+\tcontrol system used.\n \t(Makefile): Removed obsolete gcc/java/parse.y example.\n \t* doc/sourcebuild.texi: Likewise.\n \t(Top Level): Added config, gnattools, libdecnumber, libgcc,\n-\tlibgomp, libssp.\n-\tRemoved fastjar.\n+\tlibgomp, libssp.  Removed fastjar.\n \t(Miscellaneous Docs): Clarify location.\n \tAdded COPYING3, COPYING3.LIB.\n-\t(Front End Directory): Moved Make-lang.in entry to new\n-\tsubsubsection.\n+\t(Front End Directory): Moved Make-lang.in entry to new subsubsection.\n \n 2010-03-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n@@ -272,8 +273,8 @@\n 2010-03-19  Andrew Pinski  <andrew_pinski@caviumnetworks.com>\n \n \tPR c/43211\n-\t* c-decl.c (grokparms): Set arg_types to NULL_TREE if there was an\n-\terror.\n+\t* c-decl.c (grokparms): Set arg_types to NULL_TREE if there was\n+\tan error.\n \n 2010-03-19  Bernd Schmidt  <bernd.schmidt@codesourcery.com>\n \n@@ -372,8 +373,7 @@\n \n \tPR bootstrap/43403\n \t* var-tracking.c (vt_init_cfa_base): Do nothing if\n-\tcfa_base_rtx would be hard_frame_pointer_rtx or non-fixed\n-\tregister.\n+\tcfa_base_rtx would be hard_frame_pointer_rtx or non-fixed register.\n \n 2010-03-18  Alexandre Oliva  <aoliva@redhat.com>\n \n@@ -399,8 +399,7 @@\n \t* cgraph.h (cgraph_redirect_edge_call_stmt_to_callee): Declare.\n \t* cgraphunit.c (cgraph_materialize_all_clones): Update calls in\n \tall non-clones.  Moved call redirection...\n-\t(cgraph_redirect_edge_call_stmt_to_callee): ...to this new\n-\tfunction.\n+\t(cgraph_redirect_edge_call_stmt_to_callee): ...to this new function.\n \t(cgraph_materialize_all_clones): Dispose of all\n \tcombined_args_to_skip bitmaps.\n \t(verify_cgraph_node): Do not check for edges pointing to wrong\n@@ -471,8 +470,7 @@\n \tappending a use to an empty chain.\n \t(build_def_use): Remove previous changes that convert OP_INOUT to\n \tOP_OUT operands; instead detect the case where an OP_INOUT operand\n-\tuses a previously untracked register and create an empty chain for\n-\tit.\n+\tuses a previously untracked register and create an empty chain for it.\n \n 2010-03-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n@@ -510,9 +508,8 @@\n 2010-03-16  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/43379\n-\t* tree-cfg.c (gimple_merge_blocks): When propagating virtual\n-\tPHI operands make sure to merge SSA_NAME_OCCURS_IN_ABNORMAL_PHI\n-\tproperly.\n+\t* tree-cfg.c (gimple_merge_blocks): When propagating virtual PHI\n+\toperands make sure to merge SSA_NAME_OCCURS_IN_ABNORMAL_PHI properly.\n \n 2010-03-16  Aldy Hernandez  <aldyh@redhat.com>\n \t    Alexandre Oliva  <aoliva@redhat.com>\n@@ -530,7 +527,7 @@\n \tcfa_base_preserved_val): New static variables.\n \t(preserve_only_constants): New function.\n \t(cselib_reset_table): If cfa_base_preserved_val is non-NULL, don't\n-\tclear its REG_VALUES.  If cselib_preserve_constants, don't \n+\tclear its REG_VALUES.  If cselib_preserve_constants, don't\n \tempty the whole hash table, but preserve there VALUEs with constants,\n \tcfa_base_preserved_val and cfa_base_preserved_val plus constant.\n \t(cselib_preserve_cfa_base_value): New function."}, {"sha": "985a3e5f5f47928e9125241611cf38b3653b42f7", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb04bb842fb8e5eb49f8066953da8e9064c24453/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb04bb842fb8e5eb49f8066953da8e9064c24453/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=fb04bb842fb8e5eb49f8066953da8e9064c24453", "patch": "@@ -8628,13 +8628,10 @@ ix86_expand_prologue (void)\n \t\t\t       ix86_cfa_state->reg == stack_pointer_rtx);\n   else\n     {\n-      /* Only valid for Win32.  */\n       rtx eax = gen_rtx_REG (Pmode, AX_REG);\n       bool eax_live;\n       rtx t;\n \n-      gcc_assert (!TARGET_64BIT || cfun->machine->call_abi == MS_ABI);\n-\n       if (cfun->machine->call_abi == MS_ABI)\n \teax_live = false;\n       else"}, {"sha": "c61e37c4622b2900a8722641b38f4a50842bc308", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 22, "deletions": 17, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb04bb842fb8e5eb49f8066953da8e9064c24453/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb04bb842fb8e5eb49f8066953da8e9064c24453/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fb04bb842fb8e5eb49f8066953da8e9064c24453", "patch": "@@ -1,7 +1,12 @@\n+2010-03-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/43524\n+\t* gcc.target/i386/pr43524.c: New test.\n+\n 2010-03-26  Martin Jambor  <mjambor@suse.cz>\n \n-\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre1.c: Deleted trailing\n-\twhitespace, renamed main to foo.\n+\t* gcc/testsuite/gcc.dg/tree-ssa/loadpre1.c: Delete trailing\n+\twhitespace, rename main to foo.\n \t* gcc/testsuite/gcc.dg/tree-ssa/loadpre14.c: Likewise.\n \t* gcc/testsuite/gcc.dg/tree-ssa/loadpre15.c: Likewise.\n \t* gcc/testsuite/gcc.dg/tree-ssa/loadpre16.c: Likewise.\n@@ -37,7 +42,7 @@\n \t* objc-obj-c++-shared/next-mapping.h: New file.\n \t* objc/execute/next_mapping.h: Delete.\n \t* objc.dg/special/special.exp: For all targets run the tests with\n-\t-fgnu-runtime, for darwin targets also run the tests with \n+\t-fgnu-runtime, for darwin targets also run the tests with\n \t-fnext-runtime.\n \t* objc.dg/dg.exp: Ditto.\n \t* obj-c++.dg/dg.exp: Ditto.\n@@ -46,7 +51,7 @@\n \tinclude use of updated NeXT interface.\n \t* objc/execute/formal_protocol-5.m: Ditto.\n \t* objc/execute/protocol-isEqual-2.m: Ditto.\n-\t* objc/execute/protocol-isEqual-4.m: Ditto.\t\n+\t* objc/execute/protocol-isEqual-4.m: Ditto.\n \t* objc/execute/class-11.m: Use shared wrapper headers (Object1.h,\n \tProtocol1.h) and next-mapping.h as required.\n \t* objc/execute/object_is_class.m: Ditto.\n@@ -188,7 +193,7 @@\n \t* objc.dg/fix-and-continue-2.m: Ditto.\n \t* objc.dg/method-9.m: Ditto.\n \t* objc.dg/isa-field-1.m: Ditto.\n-\t* objc.dg/local-decl-2.m: Ditto.\t\n+\t* objc.dg/local-decl-2.m: Ditto.\n \t* objc.dg/objc-gc-4.m: Ditto.\n \t* objc.dg/type-stream-1.m: Skip for NeXT runtime.\n \t* objc.dg/gnu-runtime-3.m: Ditto.\n@@ -197,7 +202,7 @@\n \t* objc.dg/selector-3.m: Ditto.\n \t* objc.dg/gnu-runtime-1.m: Ditto.\n \t* objc.dg/const-str-12.m: Ditto.\n-\t* objc.dg/gnu-runtime-2.m: Ditto.\t\n+\t* objc.dg/gnu-runtime-2.m: Ditto.\n \t* objc.dg/no-extra-load.m: Skip for gnu-runtime.\n \t* objc.dg/selector-1.m: Ditto.\n \t* objc.dg/stubify-2.m: Ditto.\n@@ -207,27 +212,27 @@\n \t* objc.dg/next-runtime-1.m: Ditto.\n \t* objc.dg/symtab-1.m: Ditto.\n \t* objc.dg/stubify-1.m: Ditto.\n-\t* objc.dg/bitfield-2.m: Ditto.\t\n+\t* objc.dg/bitfield-2.m: Ditto.\n \t* objc.dg/try-catch-10.m: Apply to both runtimes.\n \t* objc.dg/const-str-1.m: Ditto.\n \t* objc.dg/image-info.m: Ditto.\n-\t* objc.dg/encode-9.m: Ditto.\t\n+\t* objc.dg/encode-9.m: Ditto.\n \t* objc.dg/pragma-1.m: Apply test to all targets.\n \t* objc.dg/const-str-4.m: Ditto.\n \t* objc.dg/const-str-8.m: Ditto.\n \t* objc.dg/super-class-2.m: Ditto.\n \t* objc.dg/try-catch-5.m: Ditto.\n \t* objc.dg/const-str-10.m: Use shared wrapper headers (Object1.h,\n-\tProtocol1.h) and next-mapping.h as required. Use new NeXT \n+\tProtocol1.h) and next-mapping.h as required. Use new NeXT\n \tinterface as required.  Skip for gnu-runtime.  Test for .quad\n \tat m64.\n \t* objc.dg/const-str-11.m: Ditto.\n-\t* objc.dg/const-str-9.m: Ditto.\t\n+\t* objc.dg/const-str-9.m: Ditto.\n \t* objc.dg/method-4.m: Skip for 64Bit NeXT.\n \t* objc.dg/encode-1.m: Remove redundant -lobjc.\n \t* objc.dg/try-catch-9.m: Tidy space.\n \t* obj-c++.dg/method-19.mm: Use shared wrapper headers (Object1.h,\n-\tProtocol1.h) and next-mapping.h as required. XFAIL run if NeXT \n+\tProtocol1.h) and next-mapping.h as required. XFAIL run if NeXT\n \tand 64bit. Use new NeXT interface as required.\n \t* obj-c++.dg/template-4.mm: Ditto.\n \t* obj-c++.dg/defs.mm: Ditto.\n@@ -247,7 +252,7 @@\n \t* obj-c++.dg/template-1.mm: Ditto.\n \t* obj-c++.dg/encode-6.mm: Ditto.\n \t* obj-c++.dg/bitfield-2.mm:  Use shared wrapper headers (Object1.h,\n-\tProtocol1.h) and next-mapping.h as required. Use new NeXT \n+\tProtocol1.h) and next-mapping.h as required. Use new NeXT\n \tinterface as required.\n \t* obj-c++.dg/except-1.mm: Ditto.\n \t* obj-c++.dg/const-str-7.mm: Ditto.\n@@ -292,15 +297,15 @@\n \t* obj-c++.dg/gnu-runtime-2.mm: Skip if NeXT runtime.\n \t* obj-c++.dg/gnu-runtime-3.mm: Ditto.\n \t* obj-c++.dg/gnu-runtime-1.mm: Ditto.\n-\t* objc.dg/zero-link-2.m: Skip if gnu runtime. Use shared wrapper \n-\theaders (Object1.h, Protocol1.h) and next-mapping.h as required. \n+\t* objc.dg/zero-link-2.m: Skip if gnu runtime. Use shared wrapper\n+\theaders (Object1.h, Protocol1.h) and next-mapping.h as required.\n \tUse new NeXT interface as required.\n \t* obj-c++.dg/const-str-10.mm: Ditto.\n \t* obj-c++.dg/const-str-11.mm: Ditto.\n \t* obj-c++.dg/const-str-9.mm: Ditto.\n \t* obj-c++.dg/method-11.mm: Ditto.\n-\t* obj-c++.dg/cxx-ivars-3.mm: Skip if gnu runtime. Use shared wrapper \n-\theaders (Object1.h, Protocol1.h) and next-mapping.h as required. \n+\t* obj-c++.dg/cxx-ivars-3.mm: Skip if gnu runtime. Use shared wrapper\n+\theaders (Object1.h, Protocol1.h) and next-mapping.h as required.\n \tUse new NeXT interface as required. XFAIL run if NeXT and 64bit.\n \t* obj-c++.dg/encode-8.mm: Remove redundant -lobjc.\n \t* obj-c++.dg/const-str-1.mm: Run for NeXT as well as gnu.\n@@ -343,7 +348,7 @@\n 2010-03-24  Martin Jambor  <mjambor@suse.cz>\n \n \t* gcc.dg/ipa/ipa-1.c: Delete trailing spaces, put the call to f into\n-\ta loop.\t\n+\ta loop.\n \t* gcc.dg/ipa/ipa-2.c: Likewise.\n \t* gcc.dg/ipa/ipa-3.c: Likewise.\n \t* gcc.dg/ipa/ipa-4.c: Likewise."}, {"sha": "b2662702ac8da8df06335eb9a08d400a7c501869", "filename": "gcc/testsuite/gcc.target/i386/pr43524.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb04bb842fb8e5eb49f8066953da8e9064c24453/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43524.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb04bb842fb8e5eb49f8066953da8e9064c24453/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43524.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43524.c?ref=fb04bb842fb8e5eb49f8066953da8e9064c24453", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mstack-arg-probe\" } */\n+\n+extern void bar (void);\n+\n+void foo (int i)\n+{\n+  bar ();\n+}"}]}