{"sha": "5e8edf67f8abf795451cd19847d2a082094738e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU4ZWRmNjdmOGFiZjc5NTQ1MWNkMTk4NDdkMmEwODIwOTQ3MzhlNQ==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2015-09-21T10:38:27Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2015-09-21T10:38:27Z"}, "message": "[RS6000] Migrate from reduc_xxx to reduc_xxx_scal optabs\n\n\t* config/rs6000/altivec.md (reduc_splus_<mode>): Rename to...\n\t(reduc_plus_scal_<mode>): ...this, add rs6000_expand_vector_extract.\n\t(reduc_uplus_v16qi): Remove.\n\n\t* config/rs6000/vector.md (VEC_reduc_name): Change \"splus\" to \"plus\".\n\t(reduc_<VEC_reduc_name>_v2df): Remove.\n\t(reduc_<VEC_reduc_name>_v4sf): Remove.\n\t(reduc_<VEC_reduc:VEC_reduc_name>_scal_<VEC_F:name>): New.\n\n\t* config/rs6000/vsx.md (vsx_reduc_<VEC_reduc_name>_v2df): Declare\n\tgen_ function by removing * prefix.\n\t(vsx_reduc_<VEC_reduc_name>_v4sf): Likewise.\n\nFrom-SVN: r227965", "tree": {"sha": "3f5e2dc97c9cf4c329ef66e31fe90ff71b5649e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f5e2dc97c9cf4c329ef66e31fe90ff71b5649e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e8edf67f8abf795451cd19847d2a082094738e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e8edf67f8abf795451cd19847d2a082094738e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e8edf67f8abf795451cd19847d2a082094738e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e8edf67f8abf795451cd19847d2a082094738e5/comments", "author": null, "committer": null, "parents": [{"sha": "973dabae60a2129374b5cbe54ea0d6bd1e6f9f9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/973dabae60a2129374b5cbe54ea0d6bd1e6f9f9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/973dabae60a2129374b5cbe54ea0d6bd1e6f9f9a"}], "stats": {"total": 91, "additions": 42, "deletions": 49}, "files": [{"sha": "ce9a20f0eb12e5f0694a74a26bba4193541526f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8edf67f8abf795451cd19847d2a082094738e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8edf67f8abf795451cd19847d2a082094738e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e8edf67f8abf795451cd19847d2a082094738e5", "patch": "@@ -1,3 +1,18 @@\n+2015-09-21  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* config/rs6000/altivec.md (reduc_splus_<mode>): Rename to...\n+\t(reduc_plus_scal_<mode>): ...this, add rs6000_expand_vector_extract.\n+\t(reduc_uplus_v16qi): Remove.\n+\n+\t* config/rs6000/vector.md (VEC_reduc_name): Change \"splus\" to \"plus\".\n+\t(reduc_<VEC_reduc_name>_v2df): Remove.\n+\t(reduc_<VEC_reduc_name>_v4sf): Remove.\n+\t(reduc_<VEC_reduc:VEC_reduc_name>_scal_<VEC_F:name>): New.\n+\n+\t* config/rs6000/vsx.md (vsx_reduc_<VEC_reduc_name>_v2df): Declare\n+\tgen_ function by removing * prefix.\n+\t(vsx_reduc_<VEC_reduc_name>_v4sf): Likewise.\n+\n 2015-09-21  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR middle-end/60832"}, {"sha": "5f6c0f5540e2cd45409bc7e521562e3bc1ffe136", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 6, "deletions": 19, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8edf67f8abf795451cd19847d2a082094738e5/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8edf67f8abf795451cd19847d2a082094738e5/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=5e8edf67f8abf795451cd19847d2a082094738e5", "patch": "@@ -2658,35 +2658,22 @@\n   operands[3] = gen_reg_rtx (GET_MODE (operands[0]));\n })\n \n-(define_expand \"reduc_splus_<mode>\"\n-  [(set (match_operand:VIshort 0 \"register_operand\" \"=v\")\n+(define_expand \"reduc_plus_scal_<mode>\"\n+  [(set (match_operand:<VI_scalar> 0 \"register_operand\" \"=v\")\n         (unspec:VIshort [(match_operand:VIshort 1 \"register_operand\" \"v\")]\n \t\t\tUNSPEC_REDUC_PLUS))]\n   \"TARGET_ALTIVEC\"\n {\n   rtx vzero = gen_reg_rtx (V4SImode);\n   rtx vtmp1 = gen_reg_rtx (V4SImode);\n-  rtx dest = gen_lowpart (V4SImode, operands[0]);\n+  rtx vtmp2 = gen_reg_rtx (<MODE>mode);\n+  rtx dest = gen_lowpart (V4SImode, vtmp2);\n+  int elt = BYTES_BIG_ENDIAN ? GET_MODE_NUNITS (<MODE>mode) - 1 : 0;\n \n   emit_insn (gen_altivec_vspltisw (vzero, const0_rtx));\n   emit_insn (gen_altivec_vsum4s<VI_char>s (vtmp1, operands[1], vzero));\n   emit_insn (gen_altivec_vsumsws_direct (dest, vtmp1, vzero));\n-  DONE;\n-})\n-\n-(define_expand \"reduc_uplus_v16qi\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")]\n-\t\t      UNSPEC_REDUC_PLUS))]\n-  \"TARGET_ALTIVEC\"\n-{\n-  rtx vzero = gen_reg_rtx (V4SImode);\n-  rtx vtmp1 = gen_reg_rtx (V4SImode);\n-  rtx dest = gen_lowpart (V4SImode, operands[0]);\n-\n-  emit_insn (gen_altivec_vspltisw (vzero, const0_rtx));\n-  emit_insn (gen_altivec_vsum4ubs (vtmp1, operands[1], vzero));\n-  emit_insn (gen_altivec_vsumsws_direct (dest, vtmp1, vzero));\n+  rs6000_expand_vector_extract (operands[0], vtmp2, elt);\n   DONE;\n })\n "}, {"sha": "d8699c8a0328baed1ee3a99d087a596c1c44fa68", "filename": "gcc/config/rs6000/vector.md", "status": "modified", "additions": 19, "deletions": 28, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8edf67f8abf795451cd19847d2a082094738e5/gcc%2Fconfig%2Frs6000%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8edf67f8abf795451cd19847d2a082094738e5/gcc%2Fconfig%2Frs6000%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvector.md?ref=5e8edf67f8abf795451cd19847d2a082094738e5", "patch": "@@ -78,7 +78,7 @@\n ;; Vector reduction code iterators\n (define_code_iterator VEC_reduc [plus smin smax])\n \n-(define_code_attr VEC_reduc_name [(plus \"splus\")\n+(define_code_attr VEC_reduc_name [(plus \"plus\")\n \t\t\t\t  (smin \"smin\")\n \t\t\t\t  (smax \"smax\")])\n \n@@ -1061,38 +1061,29 @@\n   \"\")\n \f\n ;; Vector reduction expanders for VSX\n-\n-(define_expand \"reduc_<VEC_reduc_name>_v2df\"\n-  [(parallel [(set (match_operand:V2DF 0 \"vfloat_operand\" \"\")\n-\t\t   (VEC_reduc:V2DF\n-\t\t    (vec_concat:V2DF\n-\t\t     (vec_select:DF\n-\t\t      (match_operand:V2DF 1 \"vfloat_operand\" \"\")\n-\t\t      (parallel [(const_int 1)]))\n-\t\t     (vec_select:DF\n-\t\t      (match_dup 1)\n-\t\t      (parallel [(const_int 0)])))\n-\t\t    (match_dup 1)))\n-\t      (clobber (match_scratch:V2DF 2 \"\"))])]\n-  \"VECTOR_UNIT_VSX_P (V2DFmode)\"\n-  \"\")\n-\n-; The (VEC_reduc:V4SF\n+; The (VEC_reduc:...\n ;\t(op1)\n-;\t(unspec:V4SF [(const_int 0)] UNSPEC_REDUC))\n+;\t(unspec:... [(const_int 0)] UNSPEC_REDUC))\n ;\n ; is to allow us to use a code iterator, but not completely list all of the\n ; vector rotates, etc. to prevent canonicalization\n \n-(define_expand \"reduc_<VEC_reduc_name>_v4sf\"\n-  [(parallel [(set (match_operand:V4SF 0 \"vfloat_operand\" \"\")\n-\t\t   (VEC_reduc:V4SF\n-\t\t    (unspec:V4SF [(const_int 0)] UNSPEC_REDUC)\n-\t\t    (match_operand:V4SF 1 \"vfloat_operand\" \"\")))\n-\t      (clobber (match_scratch:V4SF 2 \"\"))\n-\t      (clobber (match_scratch:V4SF 3 \"\"))])]\n-  \"VECTOR_UNIT_VSX_P (V4SFmode)\"\n-  \"\")\n+\n+(define_expand \"reduc_<VEC_reduc:VEC_reduc_name>_scal_<VEC_F:mode>\"\n+  [(match_operand:<VEC_base> 0 \"register_operand\" \"\")\n+   (VEC_reduc:VEC_F (match_operand:VEC_F 1 \"vfloat_operand\" \"\")\n+\t\t    (unspec:VEC_F [(const_int 0)] UNSPEC_REDUC))]\n+  \"VECTOR_UNIT_VSX_P (<VEC_F:MODE>mode)\"\n+  {\n+    rtx vec = gen_reg_rtx (<VEC_F:MODE>mode);\n+    rtx elt = BYTES_BIG_ENDIAN\n+\t\t? gen_int_mode (GET_MODE_NUNITS (<VEC_F:MODE>mode) - 1, QImode)\n+\t\t: const0_rtx;\n+    emit_insn (gen_vsx_reduc_<VEC_reduc:VEC_reduc_name>_<VEC_F:mode> (vec,\n+\toperand1));\n+    emit_insn (gen_vsx_extract_<VEC_F:mode> (operand0, vec, elt));\n+    DONE;\n+  })\n \n \f\n ;;; Expanders for vector insn patterns shared between the SPE and TARGET_PAIRED systems."}, {"sha": "0e110ae2f7f27a7a4deff4ec83603773b68398bc", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8edf67f8abf795451cd19847d2a082094738e5/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8edf67f8abf795451cd19847d2a082094738e5/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=5e8edf67f8abf795451cd19847d2a082094738e5", "patch": "@@ -2289,7 +2289,7 @@\n \f\n ;; Vector reduction insns and splitters\n \n-(define_insn_and_split \"*vsx_reduc_<VEC_reduc_name>_v2df\"\n+(define_insn_and_split \"vsx_reduc_<VEC_reduc_name>_v2df\"\n   [(set (match_operand:V2DF 0 \"vfloat_operand\" \"=&wd,&?wa,wd,?wa\")\n \t(VEC_reduc:V2DF\n \t (vec_concat:V2DF\n@@ -2317,7 +2317,7 @@\n   [(set_attr \"length\" \"8\")\n    (set_attr \"type\" \"veccomplex\")])\n \n-(define_insn_and_split \"*vsx_reduc_<VEC_reduc_name>_v4sf\"\n+(define_insn_and_split \"vsx_reduc_<VEC_reduc_name>_v4sf\"\n   [(set (match_operand:V4SF 0 \"vfloat_operand\" \"=wf,?wa\")\n \t(VEC_reduc:V4SF\n \t (unspec:V4SF [(const_int 0)] UNSPEC_REDUC)"}]}