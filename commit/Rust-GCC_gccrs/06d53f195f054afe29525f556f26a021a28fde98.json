{"sha": "06d53f195f054afe29525f556f26a021a28fde98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZkNTNmMTk1ZjA1NGFmZTI5NTI1ZjU1NmYyNmEwMjFhMjhmZGU5OA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-08T21:08:20Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-08T21:08:20Z"}, "message": "(HARD_REGNO_MODE_OK): Properly check for floating-point registers.\n\nRegister 16 is AP and not floating.\n\nFrom-SVN: r4387", "tree": {"sha": "f61c9b517bb37fc82d0a6d885677b068ffa9b49f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f61c9b517bb37fc82d0a6d885677b068ffa9b49f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06d53f195f054afe29525f556f26a021a28fde98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06d53f195f054afe29525f556f26a021a28fde98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06d53f195f054afe29525f556f26a021a28fde98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06d53f195f054afe29525f556f26a021a28fde98/comments", "author": null, "committer": null, "parents": [{"sha": "e9575b51d7a117624f2c67434ebd8e88aead9bc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9575b51d7a117624f2c67434ebd8e88aead9bc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9575b51d7a117624f2c67434ebd8e88aead9bc4"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "5604347e80f6caa86ed9cf2959d378c0d634a021", "filename": "gcc/config/i386/sequent.h", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06d53f195f054afe29525f556f26a021a28fde98/gcc%2Fconfig%2Fi386%2Fsequent.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06d53f195f054afe29525f556f26a021a28fde98/gcc%2Fconfig%2Fi386%2Fsequent.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsequent.h?ref=06d53f195f054afe29525f556f26a021a28fde98", "patch": "@@ -73,15 +73,29 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n ((n) < 3 ? (n) : (n) < 6 ? (n) + 2\t\\\n  : (n) == 6 ? 15 : (n) == 7 ? 14 : 3)\n \n+/* malcolmp@hydra.maths.unsw.EDU.AU says these two definitions\n+   fix trouble in dbx.  */\n+#undef DBX_OUTPUT_LBRAC\n+#define DBX_OUTPUT_LBRAC(file,name)\t\\\n+\t      fprintf (asmfile, \"%s %d,0,%d,\", ASM_STABN_OP, N_LBRAC, depth); \\\n+\t      assemble_name (asmfile, buf); \\\n+\t      fprintf (asmfile, \"\\n\");\n+\n+#undef DBX_OUTPUT_RBRAC\n+#define DBX_OUTPUT_RBRAC(file,name)\t\\\n+\t      fprintf (asmfile, \"%s %d,0,%d,\", ASM_STABN_OP, N_RBRAC, depth); \\\n+\t      assemble_name (asmfile, buf); \\\n+\t      fprintf (asmfile, \"\\n\");\n+\n /* Prevent anything from being allocated in the register pair cx/bx,\n    since that would confuse GDB.  */\n \n #undef HARD_REGNO_MODE_OK\n #define HARD_REGNO_MODE_OK(REGNO, MODE) \\\n   (((REGNO) < 2 ? 1\t\t\t\t\t\t\t\\\n     : (REGNO) < 4 ? 1\t\t\t\t\t\t\t\\\n-    : (REGNO) >= 8 ? (GET_MODE_CLASS (MODE) == MODE_FLOAT\t\t\\\n-\t\t    || GET_MODE_CLASS (MODE) == MODE_COMPLEX_FLOAT)\t\\\n+    : FP_REGNO_P (REGNO) ? (GET_MODE_CLASS (MODE) == MODE_FLOAT         \\\n+\t\t\t    || GET_MODE_CLASS (MODE) == MODE_COMPLEX_FLOAT) \\\n     : (MODE) != QImode)\t\t\t\t\t\t\t\\\n    && ! (REGNO == 2 && GET_MODE_UNIT_SIZE (MODE) > 4))\n "}]}