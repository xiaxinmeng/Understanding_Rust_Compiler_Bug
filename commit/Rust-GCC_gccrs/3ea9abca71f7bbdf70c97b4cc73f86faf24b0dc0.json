{"sha": "3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VhOWFiY2E3MWY3YmJkZjcwYzk3YjRjYzczZjg2ZmFmMjRiMGRjMA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-07-23T00:16:28Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-07-23T00:16:28Z"}, "message": "Daily bump.", "tree": {"sha": "557bb52c503e27920077634dcf6e17f2e36e595c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/557bb52c503e27920077634dcf6e17f2e36e595c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/comments", "author": null, "committer": null, "parents": [{"sha": "1f53367fb5f16985e82c39f56368b956292cf86c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f53367fb5f16985e82c39f56368b956292cf86c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f53367fb5f16985e82c39f56368b956292cf86c"}], "stats": {"total": 202, "additions": 201, "deletions": 1}, "files": [{"sha": "86f567aebdc753762fe84f4edbc0934381d594f2", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0", "patch": "@@ -1,3 +1,7 @@\n+2020-07-22  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* MAINTAINERS (Write After Approval): Add myself.\n+\n 2020-06-12  Martin Liska  <mliska@suse.cz>\n \n \t* .gitignore: Add .clang-tidy."}, {"sha": "0ebabdf0ba127e548f93a5e0d87872c4ffd2e8a1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0", "patch": "@@ -1,3 +1,45 @@\n+2020-07-22  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\tPR target/96236\n+\t* config/rs6000/rs6000-call.c (rs6000_gimple_fold_mma_builtin): Handle\n+\tlittle-endian memory ordering.\n+\n+2020-07-22  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* dumpfile.c (parse_dump_option): Deal with filenames\n+\tcontaining '-'\n+\n+2020-07-22  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* incpath.c (add_path): Avoid multiple strlen calls.\n+\n+2020-07-22  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* expmed.c (expand_sdiv_pow2): Check return value from emit_store_flag\n+\tis not NULL_RTX before use.\n+\n+2020-07-22  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* expr.c (convert_modes): Allow a constant integer to be converted to\n+\tany scalar int mode.\n+\n+2020-07-22  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* config/aarch64/aarch64-ldpstp.md: Add two peepholes for adjusted vector\n+\tV2SI, V2SF, V2DI, V2DF load pair and store pair modes.\n+\t* config/aarch64/aarch64-protos.h (aarch64_gen_adjusted_ldpstp):\n+\tChange mode parameter to machine_mode.\n+\t(aarch64_operands_adjust_ok_for_ldpstp): Change mode parameter to\n+\tmachine_mode.\n+\t* config/aarch64/aarch64.c (aarch64_operands_adjust_ok_for_ldpstp):\n+\tChange mode parameter to machine_mode.\n+\t(aarch64_gen_adjusted_ldpstp): Change mode parameter to machine_mode.\n+\t* config/aarch64/iterators.md (VP_2E): New iterator for 2 element vectors.\n+\n+2020-07-22  Wei Wentao  <weiwt.fnst@cn.fujitsu.com>\n+\n+\t* doc/languages.texi: Fix \u201cthen\u201d/\u201cthan\u201d typo.\n+\n 2020-07-21  Sunil K Pandey  <skpgkp2@gmail.com>\n \n \tPR target/95237"}, {"sha": "659a031602d96c59083517b40deb6d5fade6eff4", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0", "patch": "@@ -1 +1 @@\n-20200722\n+20200723"}, {"sha": "b189c7c3a50c8d2653319a5f89a190814b2c6fd9", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0", "patch": "@@ -1,3 +1,8 @@\n+2020-07-22  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* c-omp.c (c_finish_omp_critical): Check for no name but\n+\tnonzero hint provided.\n+\n 2020-07-20  Jason Merrill  <jason@redhat.com>\n \n \t* c-cppbuiltin.c (c_cpp_builtins): Update"}, {"sha": "dea042971f15a494c21b96892e7a8ee441d927d5", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0", "patch": "@@ -1,3 +1,9 @@\n+2020-07-22  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* c-parser.c (c_parser_omp_clause_hint): Require nonnegative hint clause.\n+\t(c_parser_omp_critical): Permit hint(0) clause without named critical.\n+\t(c_parser_omp_construct): Don't assert if error_mark_node is returned.\n+\n 2020-07-21  Sunil K Pandey  <skpgkp2@gmail.com>\n \n \tPR target/95237"}, {"sha": "174ff0321a744d2bd84cc8d9337cdb1520efc1ae", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0", "patch": "@@ -1,3 +1,45 @@\n+2020-07-22  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* class.c (maybe_add_class_template_decl_list): Don't add CONST_DECLs.\n+\n+2020-07-22  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* typeck.c (structural_comptypes): [DECLTYPE_TYPE] break\n+\tapart complex if.\n+\t[UNDERLYING_TYPE]: Use an if.\n+\t[TYPEOF_TYPE]: New.\n+\n+2020-07-22  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* decl.c (decls_match): Move variables into scopes\n+\tthey're needed in.\n+\t(duplicate_decls): Use STRIP_TEMPLATE.\n+\t(build_typename_type): Move var decls to their assignments.\n+\t(begin_function_body): Likewise.\n+\t* decl2.c (get_guard): Likewise.\n+\t(mark_used): Use true for truthiness.\n+\t* error.c (dump_aggr_type): Hold the decl in a var called\n+\t'decl', not 'name'.\n+\n+2020-07-22  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* cp-tree.h (struct tree_lambda_expr): Shrink\n+\tdefault_capture_mode & discriminator.\n+\n+2020-07-22  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* mangle.c (decl_is_template_id): Rename to ...\n+\t(maybe_template_info): ... here.  Return the template info,\n+\trather than use a pointer.  Adjust all callers.\n+\t(find_substitution): Use template_args_equal, rather than\n+\tlocal check.\n+\n+2020-07-22  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* parser.c (cp_parser_omp_clause_hint): Require nonnegative hint.\n+\t(cp_parser_omp_critical): Permit hint(0) clause without named critical.\n+\t* pt.c (tsubst_expr): Re-check the latter for templates.\n+\n 2020-07-21  Sunil K Pandey  <skpgkp2@gmail.com>\n \n \tPR target/95237"}, {"sha": "72efe3d5a9c524cb779951972d2dda1afde00b5d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0", "patch": "@@ -1,3 +1,24 @@\n+2020-07-22  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gfortran.h (enum gfc_omp_if_kind): Add OMP_IF_CANCEL and OMP_IF_SIMD.\n+\t* openmp.c (OMP_SIMD_CLAUSES): Add OMP_CLAUSE_IF.\n+\t(gfc_match_omp_clauses, resolve_omp_clauses): Handle 'if (simd/cancel:'.\n+\t* dump-parse-tree.c (show_omp_clauses): Likewise.\n+\t* trans-openmp.c (gfc_trans_omp_clauses, gfc_trans_omp_cancel,\n+\t(gfc_split_omp_clauses): Likewise.\n+\n+2020-07-22  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* openmp.c (gfc_match_omp_critical): Fix handling hints; permit\n+\thint clause without named critical.\n+\t(resolve_omp_clauses): Require nonnegative constant integer\n+\tfor the hint clause.\n+\t(gfc_resolve_omp_directive): Check for no name but\n+\tnonzero value for hint clause.\n+\t* parse.c (parse_omp_structured_block): Fix same-name check\n+\tfor critical.\n+\t* trans-openmp.c (gfc_trans_omp_critical): Handle hint clause properly.\n+\n 2020-07-21  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/89574"}, {"sha": "cfbfc44d0a38a322683f8e800a6f8eb5ee245fe7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0", "patch": "@@ -1,3 +1,50 @@\n+2020-07-22  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gfortran.dg/gomp/cancel-2.f90: New test.\n+\t* gfortran.dg/gomp/cancel-3.f90: New test.\n+\t* gfortran.dg/gomp/if-1.f90: New test.\n+\n+2020-07-22  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\tPR target/96236\n+\t* gcc.target/powerpc/mma-double-test.c: Update storing results for\n+\tcorrect little-endian ordering.\n+\t* gcc.target/powerpc/mma-single-test.c: Likewise.\n+\n+2020-07-22  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/95237\n+\t* c-c++-common/pr95237-6.c: Only run for x86 targets.\n+\n+2020-07-22  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* c-c++-common/gomp/critical-hint-1.c: Moved to libgomp/.\n+\t* c-c++-common/gomp/critical-hint-2.c: Moved to libgomp/.\n+\t* gfortran.dg/gomp/critical-hint-1.f90: Moved to libgomp/.\n+\t* gfortran.dg/gomp/critical-hint-2.f90: Moved to libgomp/.\n+\n+2020-07-22  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* gcc.target/aarch64/ldp_vec_v2sf.c: New test.\n+\t* gcc.target/aarch64/ldp_vec_v2si.c: New test.\n+\t* gcc.target/aarch64/stp_vec_v2df.c: New test.\n+\t* gcc.target/aarch64/stp_vec_v2di.c: New test.\n+\t* gcc.target/aarch64/stp_vec_v2sf.c: New test.\n+\t* gcc.target/aarch64/stp_vec_v2si.c: New test.\n+\n+2020-07-22  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* g++.dg/gomp/critical-3.C: Add nameless critical with hint testcase.\n+\t* c-c++-common/gomp/critical-hint-1.c: New test.\n+\t* c-c++-common/gomp/critical-hint-2.c: New test.\n+\t* gfortran.dg/gomp/critical-hint-1.f90: New test.\n+\t* gfortran.dg/gomp/critical-hint-2.f90: New test.\n+\n+2020-07-22  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\t* gcc.dg/no_profile_instrument_function-attr-1.c: Adjust scanned\n+\tregex for NO_DOT_IN_LABEL.\n+\n 2020-07-21  Sunil K Pandey  <skpgkp2@gmail.com>\n \n \tPR target/95237"}, {"sha": "ab602de04c6b0c170b93e0a5683484f3703182df", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0", "patch": "@@ -1,3 +1,17 @@\n+2020-07-22  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* testsuite/libgomp.c-c++-common/critical-hint-1.c: New; moved from\n+\tgcc/testsuite/c-c++-common/gomp/.\n+\t* testsuite/libgomp.c-c++-common/critical-hint-2.c: Likewise.\n+\t* testsuite/libgomp.fortran/critical-hint-1.f90: New; moved\n+\tfrom gcc/testsuite/gfortran.dg/gomp/.\n+\t* testsuite/libgomp.fortran/critical-hint-2.f90: Likewise.\n+\n+2020-07-22  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* omp_lib.f90.in: Add omp_sync_hint_* and omp_sync_hint_kind.\n+\t* omp_lib.h.in: Likewise.\n+\n 2020-07-18  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR target/95620"}, {"sha": "9bce1831eabfc40e1fb62bebfaf1ba1a151f249a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3ea9abca71f7bbdf70c97b4cc73f86faf24b0dc0", "patch": "@@ -1,3 +1,22 @@\n+2020-07-22  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/future (future, shared_future, promise): Add\n+\tstatic assertions to the primary template to reject array and\n+\tfunction types.\n+\t* testsuite/30_threads/future/requirements/lwg3458.cc: New test.\n+\t* testsuite/30_threads/promise/requirements/lwg3466.cc: New test.\n+\t* testsuite/30_threads/shared_future/requirements/lwg3458.cc: New test.\n+\n+2020-07-22  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stl_iterator.h (reverse_iterator): Constrain\n+\tconverting constructor and converting assignment operator.\n+\tAccess source iterator's data member directly instead of\n+\tcalling base().\n+\t(move_iterator): Likewise.\n+\t* testsuite/24_iterators/move_iterator/dr3435.cc: New test.\n+\t* testsuite/24_iterators/reverse_iterator/dr3435.cc: New test.\n+\n 2020-07-20  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* acinclude.m4 (libtool_VERSION): Bump version."}]}