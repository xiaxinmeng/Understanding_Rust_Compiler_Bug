{"sha": "0a65887a3817cedf471aa17c7ae25ac7996abac1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE2NTg4N2EzODE3Y2VkZjQ3MWFhMTdjN2FlMjVhYzc5OTZhYmFjMQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "1998-10-13T11:49:26Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1998-10-13T11:49:26Z"}, "message": "jcf-dump.c (process_class): Use FATAL_EXIT_CODE, not -1.\n\n\t* jcf-dump.c (process_class): Use FATAL_EXIT_CODE, not -1.\n\t(main): Likewise.  Exit with SUCCESS_EXIT_CODE at end of\n\tfunction.\n\tInclude <config.h> and \"system.h\".\n\t(disassemble_method): Undefine RET to avoid clash with\n\tconfig/i386/i386.h.\n\nFrom-SVN: r23050", "tree": {"sha": "acde2dcc1a0325798460888b3e4af2f977157708", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acde2dcc1a0325798460888b3e4af2f977157708"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a65887a3817cedf471aa17c7ae25ac7996abac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a65887a3817cedf471aa17c7ae25ac7996abac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a65887a3817cedf471aa17c7ae25ac7996abac1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a65887a3817cedf471aa17c7ae25ac7996abac1/comments", "author": null, "committer": null, "parents": [{"sha": "2ce5e1b422b29b6b85a271060d17fde8c8905974", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ce5e1b422b29b6b85a271060d17fde8c8905974", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ce5e1b422b29b6b85a271060d17fde8c8905974"}], "stats": {"total": 35, "additions": 25, "deletions": 10}, "files": [{"sha": "c22ff05800a556b5b90559c3ec6ae246535c2a8e", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a65887a3817cedf471aa17c7ae25ac7996abac1/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a65887a3817cedf471aa17c7ae25ac7996abac1/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=0a65887a3817cedf471aa17c7ae25ac7996abac1", "patch": "@@ -1,3 +1,12 @@\n+1998-10-13  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* jcf-dump.c (process_class): Use FATAL_EXIT_CODE, not -1.\n+\t(main): Likewise.  Exit with SUCCESS_EXIT_CODE at end of\n+\tfunction.\n+\tInclude <config.h> and \"system.h\".\n+\t(disassemble_method): Undefine RET to avoid clash with\n+\tconfig/i386/i386.h.\n+\n 1998-10-09  Tom Tromey  <tromey@cygnus.com>\n \n \t* gjavah.c (decode_signature_piece): New function."}, {"sha": "69ec95709744680ba9e68ae00853dcee635b682b", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a65887a3817cedf471aa17c7ae25ac7996abac1/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a65887a3817cedf471aa17c7ae25ac7996abac1/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=0a65887a3817cedf471aa17c7ae25ac7996abac1", "patch": "@@ -46,6 +46,9 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n  */\n     \n \n+#include <config.h>\n+#include \"system.h\"\n+\n #include <stdio.h>\n #include \"jcf.h\"\n \n@@ -667,13 +670,13 @@ DEFUN(process_class, (jcf),\n   if (code != 0)\n     {\n       fprintf (stderr, \"error while parsing constant pool\\n\");\n-      exit (-1);\n+      exit (FATAL_EXIT_CODE);\n     }\n   code = verify_constant_pool (jcf);\n   if (code > 0)\n     {\n       fprintf (stderr, \"error in constant pool entry #%d\\n\", code);\n-      exit (-1);\n+      exit (FATAL_EXIT_CODE);\n     }\n   if (flag_print_constant_pool)\n     print_constant_pool (jcf);\n@@ -683,19 +686,19 @@ DEFUN(process_class, (jcf),\n   if (code != 0)\n     {\n       fprintf (stderr, \"error while parsing fields\\n\");\n-      exit (-1);\n+      exit (FATAL_EXIT_CODE);\n     }\n   code = jcf_parse_methods (jcf);\n   if (code != 0)\n     {\n       fprintf (stderr, \"error while parsing methods\\n\");\n-      exit (-1);\n+      exit (FATAL_EXIT_CODE);\n     }\n   code = jcf_parse_final_attributes (jcf);\n   if (code != 0)\n     {\n       fprintf (stderr, \"error while parsing final attributes\\n\");\n-      exit (-1);\n+      exit (FATAL_EXIT_CODE);\n     }\n   jcf->filename = NULL;\n }\n@@ -735,7 +738,7 @@ DEFUN(main, (argc, argv),\n \t      else\n \t\t{\n \t\t  fprintf (stderr, \"%s: illegal argument\\n\", argv[argi]);\n-\t\t  exit (-1);\n+\t\t  exit (FATAL_EXIT_CODE);\n \t\t}\n \t      \n \t    }\n@@ -750,7 +753,7 @@ DEFUN(main, (argc, argv),\n \t  else\n \t    {\n \t      fprintf (stderr, \"%s: illegal argument\\n\", argv[argi]);\n-\t      exit (-1);\n+\t      exit (FATAL_EXIT_CODE);\n \t    }\n \t}\n       else\n@@ -780,7 +783,7 @@ DEFUN(main, (argc, argv),\n       if (out)\n \t{\n \t  fprintf (stderr, \"Cannot open '%s' for output.\\n\", output_file);\n-\t  exit (-1);\n+\t  exit (FATAL_EXIT_CODE);\n \t}\n     }\n   else\n@@ -807,7 +810,7 @@ DEFUN(main, (argc, argv),\n \t  if (class_filename == NULL)\n \t    {\n \t      perror (\"Could not find class\");\n-\t      exit (-1);\n+\t      exit (FATAL_EXIT_CODE);\n \t    }\n \t  JCF_FILL (jcf, 4);\n \t  if (GET_u4 (jcf->read_ptr) == ZIPMAGIC)\n@@ -830,7 +833,7 @@ DEFUN(main, (argc, argv),\n \t\t  if (magic != 0x04034b50) /* ZIPMAGIC (little-endian) */\n \t\t    {\n \t\t      fprintf (stderr, \"bad format of .zip archine\\n\");\n-\t\t      exit (-1);\n+\t\t      exit (FATAL_EXIT_CODE);\n \t\t    }\n \t\t  JCF_FILL (jcf, 26);\n \t\t  JCF_SKIP (jcf, 2);\n@@ -903,6 +906,8 @@ DEFUN(main, (argc, argv),\n \t  JCF_FINISH(jcf);\n \t}\n     }\n+\n+  exit (SUCCESS_EXIT_CODE);\n }\n \n static void\n@@ -1029,6 +1034,7 @@ DEFUN(disassemble_method, (jcf, byte_ops, len),\n   saw_index = 0, INT_temp = (OPERAND_VALUE); \\\n   fprintf (out, \" %d\", saw_index ? INT_temp : oldpc + INT_temp)\n \n+#undef RET /* Defined by config/i386/i386.h */\n #define RET(OPERAND_TYPE, OPERAND_VALUE) \\\n   INT_temp = saw_wide ? IMMEDIATE_u2 : (OPERAND_VALUE); \\\n   saw_wide = 0; \\"}]}