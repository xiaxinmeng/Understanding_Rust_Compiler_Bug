{"sha": "f28797595611bc8c886a54648aac4c93b39f8aed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI4Nzk3NTk1NjExYmM4Yzg4NmE1NDY0OGFhYzRjOTNiMzlmOGFlZA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2007-09-23T15:42:06Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2007-09-23T15:42:06Z"}, "message": "params.def (INLINE_CALL_COST): Set to 12.\n\n\n\t* params.def (INLINE_CALL_COST): Set to 12.\n\t* invoke.texi (inline-call-cost): Update default value.\n\nFrom-SVN: r128692", "tree": {"sha": "f28fe84170ab1e505f5fdfc61cf5cd6be17ffa8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f28fe84170ab1e505f5fdfc61cf5cd6be17ffa8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f28797595611bc8c886a54648aac4c93b39f8aed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f28797595611bc8c886a54648aac4c93b39f8aed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f28797595611bc8c886a54648aac4c93b39f8aed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f28797595611bc8c886a54648aac4c93b39f8aed/comments", "author": null, "committer": null, "parents": [{"sha": "823dd937db20d8f3d8c5bdf42e1d97dbefd3acae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/823dd937db20d8f3d8c5bdf42e1d97dbefd3acae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/823dd937db20d8f3d8c5bdf42e1d97dbefd3acae"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "198e24eb814225bc3ccf10a43c9966918c53ce41", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28797595611bc8c886a54648aac4c93b39f8aed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28797595611bc8c886a54648aac4c93b39f8aed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f28797595611bc8c886a54648aac4c93b39f8aed", "patch": "@@ -1,3 +1,8 @@\n+2007-09-23  Jan Hubicka  <jh@suse.cz>\n+\n+\t* params.def (INLINE_CALL_COST): Set to 12.\n+\t* invoke.texi (inline-call-cost): Update default value.\n+\n 2007-09-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/alpha/alpha.md (movti): Use operand_subword for the split."}, {"sha": "c162e73a84cc87e68ea00142beab8c12665682ab", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28797595611bc8c886a54648aac4c93b39f8aed/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28797595611bc8c886a54648aac4c93b39f8aed/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=f28797595611bc8c886a54648aac4c93b39f8aed", "patch": "@@ -6720,7 +6720,7 @@ functions and at the same time increases size of leaf function that is believed\n reduce function size by being inlined.  In effect it increases amount of\n inlining for code having large abstraction penalty (many functions that just\n pass the arguments to other functions) and decrease inlining for code with low\n-abstraction penalty.  The default value is 16.\n+abstraction penalty.  The default value is 12.\n \n @item min-vect-loop-bound\n The minimum number of iterations under which a loop will not get vectorized"}, {"sha": "c9ae99bd6880e13642796d1f405ae5a08f93f3dc", "filename": "gcc/params.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28797595611bc8c886a54648aac4c93b39f8aed/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28797595611bc8c886a54648aac4c93b39f8aed/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=f28797595611bc8c886a54648aac4c93b39f8aed", "patch": "@@ -201,7 +201,7 @@ DEFPARAM(PARAM_INLINE_UNIT_GROWTH,\n DEFPARAM(PARAM_INLINE_CALL_COST,\n \t \"inline-call-cost\",\n \t \"expense of call operation relative to ordinary arithmetic operations\",\n-\t 16, 0, 0)\n+\t 12, 0, 0)\n DEFPARAM(PARAM_LARGE_STACK_FRAME,\n \t \"large-stack-frame\",\n \t \"The size of stack frame to be considered large\","}]}