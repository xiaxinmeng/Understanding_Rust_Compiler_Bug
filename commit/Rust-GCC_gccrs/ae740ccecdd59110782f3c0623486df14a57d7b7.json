{"sha": "ae740ccecdd59110782f3c0623486df14a57d7b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU3NDBjY2VjZGQ1OTExMDc4MmYzYzA2MjM0ODZkZjE0YTU3ZDdiNw==", "commit": {"author": {"name": "Thomas Koenig", "email": "Thomas.Koenig@online.de", "date": "2005-06-07T20:46:17Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2005-06-07T20:46:17Z"}, "message": "re PR libfortran/21926 ([4.0 only] matmul does not deal with non-packed result)\n\n2005-06-07  Thomas Koenig  <Thomas.Koenig@online.de>\n\n\tPR libfortran/21926\n\t* m4/matmul.m4:  Correct zeroing of result for non-packed\n\tarrays with lowest stride is one.\n\t* generated/matmul_c4.c:  Regenerated.\n\t* generated/matmul_c8.c:  Regenerated.\n\t* generated/matmul_i4.c:  Regenerated.\n\t* generated/matmul_i8.c:  Regenerated.\n\t* generated/matmul_r4.c:  Regenerated.\n\t* generated/matmul_r8.c:  Regenerated.\n\n2005-06-07  Thomas Koenig  <Thomas.Koenig@online.de>\n\n\tPR libfortran/21926\n\t* gfortran.fortran-torture/execute/intrinsic_matmul.f90:\n\tTest case where the return array has lowest stride one,\n\tbut isn't packed.\n\nFrom-SVN: r100721", "tree": {"sha": "fb2ff4924c094e8ef8e3cd32eee95a36428e940f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb2ff4924c094e8ef8e3cd32eee95a36428e940f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae740ccecdd59110782f3c0623486df14a57d7b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae740ccecdd59110782f3c0623486df14a57d7b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae740ccecdd59110782f3c0623486df14a57d7b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae740ccecdd59110782f3c0623486df14a57d7b7/comments", "author": null, "committer": null, "parents": [{"sha": "108267cd5609ef326744e1593f878a36e3c09675", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/108267cd5609ef326744e1593f878a36e3c09675", "html_url": "https://github.com/Rust-GCC/gccrs/commit/108267cd5609ef326744e1593f878a36e3c09675"}], "stats": {"total": 90, "additions": 83, "deletions": 7}, "files": [{"sha": "ef8a58fcd571eb90c1487329a2a17c6c621d5de9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae740ccecdd59110782f3c0623486df14a57d7b7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae740ccecdd59110782f3c0623486df14a57d7b7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae740ccecdd59110782f3c0623486df14a57d7b7", "patch": "@@ -1,3 +1,10 @@\n+2005-06-07  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR libfortran/21926\n+\t* gfortran.fortran-torture/execute/intrinsic_matmul.f90:\n+\tTest case where the return array has lowest stride one,\n+\tbut isn't packed.\n+\n 2005-06-07  Adrian Straetling  <straetling@de.ibm.com>\n \n \t* lib/target-supports.exp (check_effective_target_sync_int_long):"}, {"sha": "9364f1e1d8b0c620114cb08e6735dc342aaa2db2", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/intrinsic_matmul.f90", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae740ccecdd59110782f3c0623486df14a57d7b7/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_matmul.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae740ccecdd59110782f3c0623486df14a57d7b7/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_matmul.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_matmul.f90?ref=ae740ccecdd59110782f3c0623486df14a57d7b7", "patch": "@@ -7,6 +7,8 @@ program intrinsic_matmul\n    integer, dimension(3) :: y\n    integer, dimension(2, 2) :: r\n    integer, dimension(3) :: v\n+   real, dimension (2,2) :: aa\n+   real, dimension (4,2) :: cc\n \n    a = reshape((/1, 2, 2, 3, 3, 4/), (/2, 3/))\n    b = reshape((/1, 2, 3, 3, 4, 5/), (/3, 2/))\n@@ -21,4 +23,10 @@ program intrinsic_matmul\n \n    v(1:2) = matmul(a, y)\n    if (any(v(1:2) .ne. (/14, 20/))) call abort\n+\n+  aa = reshape((/ 1.0, 1.0, 0.0, 1.0/), shape(aa))\n+  cc = 42.\n+  cc(1:2,1:2) = matmul(aa, transpose(aa))\n+  if (any(cc(1:2,1:2) .ne. reshape((/ 1.0, 1.0, 1.0, 2.0 /), (/2,2/)))) call abort\n+  if (any(cc(3:4,1:2) .ne. 42.)) call abort\n end program"}, {"sha": "ac9fce5281b7ccc7656a1f09be2b8737b64ca634", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae740ccecdd59110782f3c0623486df14a57d7b7/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae740ccecdd59110782f3c0623486df14a57d7b7/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=ae740ccecdd59110782f3c0623486df14a57d7b7", "patch": "@@ -1,3 +1,15 @@\n+2005-06-07  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR libfortran/21926\n+\t* m4/matmul.m4:  Correct zeroing of result for non-packed\n+\tarrays with lowest stride is one.\n+\t* generated/matmul_c4.c:  Regenerated.\n+\t* generated/matmul_c8.c:  Regenerated.\n+\t* generated/matmul_i4.c:  Regenerated.\n+\t* generated/matmul_i8.c:  Regenerated.\n+\t* generated/matmul_r4.c:  Regenerated.\n+\t* generated/matmul_r8.c:  Regenerated.\n+\n 2005-05-30  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR libfortran/20179"}, {"sha": "c63d343ea82e92ff5459fff0ff57216b07708ad6", "filename": "libgfortran/generated/matmul_c4.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae740ccecdd59110782f3c0623486df14a57d7b7/libgfortran%2Fgenerated%2Fmatmul_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae740ccecdd59110782f3c0623486df14a57d7b7/libgfortran%2Fgenerated%2Fmatmul_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c4.c?ref=ae740ccecdd59110782f3c0623486df14a57d7b7", "patch": "@@ -178,7 +178,14 @@ matmul_c4 (gfc_array_c4 * retarray, gfc_array_c4 * a, gfc_array_c4 * b)\n       GFC_COMPLEX_4 *abase_n;\n       GFC_COMPLEX_4 bbase_yn;\n \n-      memset (dest, 0, (sizeof (GFC_COMPLEX_4) * size0((array_t *) retarray)));\n+      if (rystride == ycount)\n+\tmemset (dest, 0, (sizeof (GFC_COMPLEX_4) * size0((array_t *) retarray)));\n+      else\n+\t{\n+\t  for (y = 0; y < ycount; y++)\n+\t    for (x = 0; x < xcount; x++)\n+\t      dest[x + y*rystride] = (GFC_COMPLEX_4)0;\n+\t}\n \n       for (y = 0; y < ycount; y++)\n \t{"}, {"sha": "98326d135d89283f38540d0c34820b2eb13622b8", "filename": "libgfortran/generated/matmul_c8.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae740ccecdd59110782f3c0623486df14a57d7b7/libgfortran%2Fgenerated%2Fmatmul_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae740ccecdd59110782f3c0623486df14a57d7b7/libgfortran%2Fgenerated%2Fmatmul_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c8.c?ref=ae740ccecdd59110782f3c0623486df14a57d7b7", "patch": "@@ -178,7 +178,14 @@ matmul_c8 (gfc_array_c8 * retarray, gfc_array_c8 * a, gfc_array_c8 * b)\n       GFC_COMPLEX_8 *abase_n;\n       GFC_COMPLEX_8 bbase_yn;\n \n-      memset (dest, 0, (sizeof (GFC_COMPLEX_8) * size0((array_t *) retarray)));\n+      if (rystride == ycount)\n+\tmemset (dest, 0, (sizeof (GFC_COMPLEX_8) * size0((array_t *) retarray)));\n+      else\n+\t{\n+\t  for (y = 0; y < ycount; y++)\n+\t    for (x = 0; x < xcount; x++)\n+\t      dest[x + y*rystride] = (GFC_COMPLEX_8)0;\n+\t}\n \n       for (y = 0; y < ycount; y++)\n \t{"}, {"sha": "9dde570b73a49ac6ff106efcfba2b820771112e2", "filename": "libgfortran/generated/matmul_i4.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae740ccecdd59110782f3c0623486df14a57d7b7/libgfortran%2Fgenerated%2Fmatmul_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae740ccecdd59110782f3c0623486df14a57d7b7/libgfortran%2Fgenerated%2Fmatmul_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i4.c?ref=ae740ccecdd59110782f3c0623486df14a57d7b7", "patch": "@@ -178,7 +178,14 @@ matmul_i4 (gfc_array_i4 * retarray, gfc_array_i4 * a, gfc_array_i4 * b)\n       GFC_INTEGER_4 *abase_n;\n       GFC_INTEGER_4 bbase_yn;\n \n-      memset (dest, 0, (sizeof (GFC_INTEGER_4) * size0((array_t *) retarray)));\n+      if (rystride == ycount)\n+\tmemset (dest, 0, (sizeof (GFC_INTEGER_4) * size0((array_t *) retarray)));\n+      else\n+\t{\n+\t  for (y = 0; y < ycount; y++)\n+\t    for (x = 0; x < xcount; x++)\n+\t      dest[x + y*rystride] = (GFC_INTEGER_4)0;\n+\t}\n \n       for (y = 0; y < ycount; y++)\n \t{"}, {"sha": "18d877e20f99baf7084e37b61fe949dbd3dbf252", "filename": "libgfortran/generated/matmul_i8.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae740ccecdd59110782f3c0623486df14a57d7b7/libgfortran%2Fgenerated%2Fmatmul_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae740ccecdd59110782f3c0623486df14a57d7b7/libgfortran%2Fgenerated%2Fmatmul_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i8.c?ref=ae740ccecdd59110782f3c0623486df14a57d7b7", "patch": "@@ -178,7 +178,14 @@ matmul_i8 (gfc_array_i8 * retarray, gfc_array_i8 * a, gfc_array_i8 * b)\n       GFC_INTEGER_8 *abase_n;\n       GFC_INTEGER_8 bbase_yn;\n \n-      memset (dest, 0, (sizeof (GFC_INTEGER_8) * size0((array_t *) retarray)));\n+      if (rystride == ycount)\n+\tmemset (dest, 0, (sizeof (GFC_INTEGER_8) * size0((array_t *) retarray)));\n+      else\n+\t{\n+\t  for (y = 0; y < ycount; y++)\n+\t    for (x = 0; x < xcount; x++)\n+\t      dest[x + y*rystride] = (GFC_INTEGER_8)0;\n+\t}\n \n       for (y = 0; y < ycount; y++)\n \t{"}, {"sha": "642dc9438377e0c5bf302f02e843869f4bed4ef5", "filename": "libgfortran/generated/matmul_r4.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae740ccecdd59110782f3c0623486df14a57d7b7/libgfortran%2Fgenerated%2Fmatmul_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae740ccecdd59110782f3c0623486df14a57d7b7/libgfortran%2Fgenerated%2Fmatmul_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r4.c?ref=ae740ccecdd59110782f3c0623486df14a57d7b7", "patch": "@@ -178,7 +178,14 @@ matmul_r4 (gfc_array_r4 * retarray, gfc_array_r4 * a, gfc_array_r4 * b)\n       GFC_REAL_4 *abase_n;\n       GFC_REAL_4 bbase_yn;\n \n-      memset (dest, 0, (sizeof (GFC_REAL_4) * size0((array_t *) retarray)));\n+      if (rystride == ycount)\n+\tmemset (dest, 0, (sizeof (GFC_REAL_4) * size0((array_t *) retarray)));\n+      else\n+\t{\n+\t  for (y = 0; y < ycount; y++)\n+\t    for (x = 0; x < xcount; x++)\n+\t      dest[x + y*rystride] = (GFC_REAL_4)0;\n+\t}\n \n       for (y = 0; y < ycount; y++)\n \t{"}, {"sha": "1eb53cd6c673a6abac63419ffb9cc02d1ab24eae", "filename": "libgfortran/generated/matmul_r8.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae740ccecdd59110782f3c0623486df14a57d7b7/libgfortran%2Fgenerated%2Fmatmul_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae740ccecdd59110782f3c0623486df14a57d7b7/libgfortran%2Fgenerated%2Fmatmul_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r8.c?ref=ae740ccecdd59110782f3c0623486df14a57d7b7", "patch": "@@ -178,7 +178,14 @@ matmul_r8 (gfc_array_r8 * retarray, gfc_array_r8 * a, gfc_array_r8 * b)\n       GFC_REAL_8 *abase_n;\n       GFC_REAL_8 bbase_yn;\n \n-      memset (dest, 0, (sizeof (GFC_REAL_8) * size0((array_t *) retarray)));\n+      if (rystride == ycount)\n+\tmemset (dest, 0, (sizeof (GFC_REAL_8) * size0((array_t *) retarray)));\n+      else\n+\t{\n+\t  for (y = 0; y < ycount; y++)\n+\t    for (x = 0; x < xcount; x++)\n+\t      dest[x + y*rystride] = (GFC_REAL_8)0;\n+\t}\n \n       for (y = 0; y < ycount; y++)\n \t{"}, {"sha": "1801583f02621a97ab0bc11a9d470bdb5590224b", "filename": "libgfortran/m4/matmul.m4", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae740ccecdd59110782f3c0623486df14a57d7b7/libgfortran%2Fm4%2Fmatmul.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae740ccecdd59110782f3c0623486df14a57d7b7/libgfortran%2Fm4%2Fmatmul.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmatmul.m4?ref=ae740ccecdd59110782f3c0623486df14a57d7b7", "patch": "@@ -180,7 +180,14 @@ sinclude(`matmul_asm_'rtype_code`.m4')dnl\n       rtype_name *abase_n;\n       rtype_name bbase_yn;\n \n-      memset (dest, 0, (sizeof (rtype_name) * size0((array_t *) retarray)));\n+      if (rystride == ycount)\n+\tmemset (dest, 0, (sizeof (rtype_name) * size0((array_t *) retarray)));\n+      else\n+\t{\n+\t  for (y = 0; y < ycount; y++)\n+\t    for (x = 0; x < xcount; x++)\n+\t      dest[x + y*rystride] = (rtype_name)0;\n+\t}\n \n       for (y = 0; y < ycount; y++)\n \t{"}]}