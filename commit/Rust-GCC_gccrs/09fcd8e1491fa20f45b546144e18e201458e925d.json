{"sha": "09fcd8e1491fa20f45b546144e18e201458e925d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDlmY2Q4ZTE0OTFmYTIwZjQ1YjU0NjE0NGUxOGUyMDE0NThlOTI1ZA==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana.radhakrishnan@arm.com", "date": "2015-09-11T09:44:26Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2015-09-11T09:44:26Z"}, "message": "Remove separate movtf pattern - Use an iterator for all FP modes.\n\n    \nmovtf is unnecessary as a separate expander. Move this to be with\nthe standard scalar floating point expanders.\n\nAchieved by adding a new iterator and then using the same.\n\nTested cross aarch64-none-elf and no regressions.\n\nRebased version from https://gcc.gnu.org/ml/gcc-patches/2015-09/msg00767.html\n\n\n2015-09-10  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n\n\tPR target/63304\n        * config/aarch64/aarch.md (mov<mode>:GPF_F16): Use GPF_TF_F16.\n        (movtf): Delete.\n        * config/aarch64/iterators.md (GPF_TF_F16): New.\n        (GPF_F16): Delete.\n\nFrom-SVN: r227679", "tree": {"sha": "d73ae24317184bff5ef6062ba171ea6d05a01913", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d73ae24317184bff5ef6062ba171ea6d05a01913"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09fcd8e1491fa20f45b546144e18e201458e925d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09fcd8e1491fa20f45b546144e18e201458e925d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09fcd8e1491fa20f45b546144e18e201458e925d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09fcd8e1491fa20f45b546144e18e201458e925d/comments", "author": null, "committer": null, "parents": [{"sha": "708d1034dbcdebb1dcc3503f7fdd0e45478c6fca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/708d1034dbcdebb1dcc3503f7fdd0e45478c6fca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/708d1034dbcdebb1dcc3503f7fdd0e45478c6fca"}], "stats": {"total": 34, "additions": 12, "deletions": 22}, "files": [{"sha": "5de2845ea627a885d26660fa0b29e0116e28899a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09fcd8e1491fa20f45b546144e18e201458e925d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09fcd8e1491fa20f45b546144e18e201458e925d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09fcd8e1491fa20f45b546144e18e201458e925d", "patch": "@@ -1,3 +1,11 @@\n+2015-09-10  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+\tPR target/63304\n+        * config/aarch64/aarch.md (mov<mode>:GPF_F16): Use GPF_TF_F16.\n+        (movtf): Delete.\n+        * config/aarch64/iterators.md (GPF_TF_F16): New.\n+        (GPF_F16): Delete.\n+\n 2015-09-10  Nathan Sidwell  <nathan@acm.org>\n \n \t* config/nvptx/nvptx.c (nvptx_expand_call): Add spacing."}, {"sha": "5a005b572c8099598fcbe8790b8e6f43e6eb7ac0", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09fcd8e1491fa20f45b546144e18e201458e925d/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09fcd8e1491fa20f45b546144e18e201458e925d/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=09fcd8e1491fa20f45b546144e18e201458e925d", "patch": "@@ -1099,8 +1099,8 @@\n })\n \n (define_expand \"mov<mode>\"\n-  [(set (match_operand:GPF_F16 0 \"nonimmediate_operand\" \"\")\n-\t(match_operand:GPF_F16 1 \"general_operand\" \"\"))]\n+  [(set (match_operand:GPF_TF_F16 0 \"nonimmediate_operand\" \"\")\n+\t(match_operand:GPF_TF_F16 1 \"general_operand\" \"\"))]\n   \"\"\n   {\n     if (!TARGET_FLOAT)\n@@ -1174,24 +1174,6 @@\n                      f_loadd,f_stored,load1,store1,mov_reg\")]\n )\n \n-(define_expand \"movtf\"\n-  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"\")\n-\t(match_operand:TF 1 \"general_operand\" \"\"))]\n-  \"\"\n-  {\n-    if (!TARGET_FLOAT)\n-      {\n-\taarch64_err_no_fpadvsimd (TFmode, \"code\");\n-\tFAIL;\n-      }\n-\n-    if (GET_CODE (operands[0]) == MEM\n-        && ! (GET_CODE (operands[1]) == CONST_DOUBLE\n-\t      && aarch64_float_const_zero_rtx_p (operands[1])))\n-      operands[1] = force_reg (TFmode, operands[1]);\n-  }\n-)\n-\n (define_insn \"*movtf_aarch64\"\n   [(set (match_operand:TF 0\n \t \"nonimmediate_operand\" \"=w,?&r,w ,?r,w,?w,w,m,?r ,Ump,Ump\")"}, {"sha": "ff698001d68ad7bd588f7d26e468c7805bcdc746", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09fcd8e1491fa20f45b546144e18e201458e925d/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09fcd8e1491fa20f45b546144e18e201458e925d/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=09fcd8e1491fa20f45b546144e18e201458e925d", "patch": "@@ -38,8 +38,8 @@\n ;; Iterator for General Purpose Floating-point registers (32- and 64-bit modes)\n (define_mode_iterator GPF [SF DF])\n \n-;; Iterator for General Purpose Float registers, inc __fp16.\n-(define_mode_iterator GPF_F16 [HF SF DF])\n+;; Iterator for all scalar floating point modes (HF, SF, DF and TF)\n+(define_mode_iterator GPF_TF_F16 [HF SF DF TF])\n \n ;; Double vector modes.\n (define_mode_iterator VDF [V2SF V4HF])"}]}