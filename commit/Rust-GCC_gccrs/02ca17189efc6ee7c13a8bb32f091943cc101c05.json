{"sha": "02ca17189efc6ee7c13a8bb32f091943cc101c05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJjYTE3MTg5ZWZjNmVlN2MxM2E4YmIzMmYwOTE5NDNjYzEwMWMwNQ==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2004-10-01T09:59:01Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2004-10-01T09:59:01Z"}, "message": "tree-vectorizer.c (vectorizable_operation): Fail unless the mode for the vector type is indeed a vector mode.\n\n2004-10-01  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* tree-vectorizer.c (vectorizable_operation): Fail unless\n\tthe mode for the vector type is indeed a vector mode.\n\nFrom-SVN: r88390", "tree": {"sha": "e71a63882077142ea946af8cdf52ab7d9377f6da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e71a63882077142ea946af8cdf52ab7d9377f6da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02ca17189efc6ee7c13a8bb32f091943cc101c05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ca17189efc6ee7c13a8bb32f091943cc101c05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02ca17189efc6ee7c13a8bb32f091943cc101c05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ca17189efc6ee7c13a8bb32f091943cc101c05/comments", "author": null, "committer": null, "parents": [{"sha": "f67b6b7a9ec6f92aca5ee057c9472248f3f2ffcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f67b6b7a9ec6f92aca5ee057c9472248f3f2ffcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f67b6b7a9ec6f92aca5ee057c9472248f3f2ffcf"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "d7d99a7887c1efe6c82ca698deaac0ce3baff06e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ca17189efc6ee7c13a8bb32f091943cc101c05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ca17189efc6ee7c13a8bb32f091943cc101c05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02ca17189efc6ee7c13a8bb32f091943cc101c05", "patch": "@@ -1,8 +1,13 @@\n+2004-10-01  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* tree-vectorizer.c (vectorizable_operation): Fail unless\n+\tthe mode for the vector type is indeed a vector mode.\n+\n 2004-10-01  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \t* tree-chrec.c (chrec_fold_plus_poly_poly, chrec_fold_plus_1,\n \tchrec_fold_multiply): Use fold_convert or build_int_cst_type instead\n-\tod fonvert.\n+\tof convert.\n \t* tree-scalar-evolution.c (compute_overall_effect_of_inner_loop,\n \tadd_to_evolution, set_nb_iterations_in_loop, follow_ssa_edge_in_rhs,\n \tfollow_ssa_edge_in_rhs): Ditto."}, {"sha": "e4de78637d3ac34dc1e22b9e95628f66fae36bda", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ca17189efc6ee7c13a8bb32f091943cc101c05/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ca17189efc6ee7c13a8bb32f091943cc101c05/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=02ca17189efc6ee7c13a8bb32f091943cc101c05", "patch": "@@ -1408,6 +1408,16 @@ vectorizable_operation (tree stmt, block_stmt_iterator *bsi, tree *vec_stmt)\n       return false;\n     }\n   vec_mode = TYPE_MODE (vectype);\n+  if (!VECTOR_MODE_P (vec_mode))\n+    {\n+      /* TODO: tree-complex.c sometimes can parallelize operations\n+\t on generic vectors.  We can vectorize the loop in that case,\n+\t but then we should re-run the lowering pass.  */\n+      if (vect_debug_details (NULL))\n+\tfprintf (dump_file, \"mode not supported by target.\");\n+      return false;\n+    }\n+\n   if (optab->handlers[(int) vec_mode].insn_code == CODE_FOR_nothing)\n     {\n       if (vect_debug_details (NULL))\n@@ -1421,7 +1431,7 @@ vectorizable_operation (tree stmt, block_stmt_iterator *bsi, tree *vec_stmt)\n       return true;\n     }\n \n-  /** Trasform.  **/\n+  /** Transform.  **/\n \n   if (vect_debug_details (NULL))\n     fprintf (dump_file, \"transform binary/unary operation.\");"}]}