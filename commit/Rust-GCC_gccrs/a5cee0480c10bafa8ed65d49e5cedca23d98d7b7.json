{"sha": "a5cee0480c10bafa8ed65d49e5cedca23d98d7b7", "node_id": "C_kwDOANBUbNoAKGE1Y2VlMDQ4MGMxMGJhZmE4ZWQ2NWQ0OWU1Y2VkY2EyM2Q5OGQ3Yjc", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-04-25T13:22:41Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-04-25T15:16:33Z"}, "message": "libstdc++: Add deduction guides for std::packaged_task [PR105375]\n\nThis change was LWG 3117.\n\nThe test is copied from 20_util/function/cons/deduction.cc\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/105375\n\t* include/std/future (packaged_task): Add deduction guides.\n\t* testsuite/30_threads/packaged_task/cons/deduction.cc: New test.", "tree": {"sha": "85183cccab9b63b13a1458d93ae1b2965ae73ea4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85183cccab9b63b13a1458d93ae1b2965ae73ea4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5cee0480c10bafa8ed65d49e5cedca23d98d7b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5cee0480c10bafa8ed65d49e5cedca23d98d7b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5cee0480c10bafa8ed65d49e5cedca23d98d7b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5cee0480c10bafa8ed65d49e5cedca23d98d7b7/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ba397e9f93d3abc93a6ecbabc3d873489a6fb7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ba397e9f93d3abc93a6ecbabc3d873489a6fb7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ba397e9f93d3abc93a6ecbabc3d873489a6fb7f"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "a9268cade91ad79da71d72d33992c1286ea56848", "filename": "libstdc++-v3/include/std/future", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5cee0480c10bafa8ed65d49e5cedca23d98d7b7/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5cee0480c10bafa8ed65d49e5cedca23d98d7b7/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture?ref=a5cee0480c10bafa8ed65d49e5cedca23d98d7b7", "patch": "@@ -1622,6 +1622,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n     };\n \n+  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+  // 3117. Missing packaged_task deduction guides\n+#if __cpp_deduction_guides >= 201606\n+  template<typename _Res, typename... _ArgTypes>\n+    packaged_task(_Res(*)(_ArgTypes...)) -> packaged_task<_Res(_ArgTypes...)>;\n+\n+  template<typename _Fun, typename _Signature = typename\n+\t   __function_guide_helper<decltype(&_Fun::operator())>::type>\n+    packaged_task(_Fun) -> packaged_task<_Signature>;\n+#endif\n+\n   /// swap\n   template<typename _Res, typename... _ArgTypes>\n     inline void"}, {"sha": "0eb69763ab985a447242d7af1c21b8e8515728cd", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/cons/deduction.cc", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5cee0480c10bafa8ed65d49e5cedca23d98d7b7/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fdeduction.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5cee0480c10bafa8ed65d49e5cedca23d98d7b7/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fdeduction.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fdeduction.cc?ref=a5cee0480c10bafa8ed65d49e5cedca23d98d7b7", "patch": "@@ -0,0 +1,85 @@\n+// // Copyright (C) 2017-2022 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile { target c++17 } }\n+\n+#include <future>\n+\n+template<typename T, typename U> struct require_same;\n+template<typename T> struct require_same<T, T> { using type = void; };\n+\n+template<typename T, typename U>\n+  typename require_same<T, U>::type\n+  check_type(U&) { }\n+\n+void f0v();\n+void f0vn() noexcept;\n+int f0i();\n+int f0in() noexcept;\n+long f1l(int&);\n+long f1ln(double*) noexcept;\n+\n+void\n+test01()\n+{\n+  std::packaged_task task1{f0v};\n+  check_type<std::packaged_task<void()>>(task1);\n+\n+  std::packaged_task task2{f0vn};\n+  check_type<std::packaged_task<void()>>(task2);\n+\n+  std::packaged_task task3{f0i};\n+  check_type<std::packaged_task<int()>>(task3);\n+\n+  std::packaged_task task4{f0in};\n+  check_type<std::packaged_task<int()>>(task4);\n+\n+  std::packaged_task task5{f1l};\n+  check_type<std::packaged_task<long(int&)>>(task5);\n+\n+  std::packaged_task task6{f1ln};\n+  check_type<std::packaged_task<long(double*)>>(task6);\n+\n+  std::packaged_task task5a{std::move(task5)};\n+  check_type<std::packaged_task<long(int&)>>(task5a);\n+\n+  std::packaged_task task6a{std::move(task6)};\n+  check_type<std::packaged_task<long(double*)>>(task6a);\n+}\n+\n+struct X {\n+  int operator()(const short&, void*);\n+};\n+\n+struct Y {\n+  void operator()(int) const & noexcept;\n+};\n+\n+void\n+test02()\n+{\n+  X x;\n+  std::packaged_task task1{x};\n+  check_type<std::packaged_task<int(const short&, void*)>>(task1);\n+\n+  Y y;\n+  std::packaged_task task2{y};\n+  check_type<std::packaged_task<void(int)>>(task2);\n+\n+  std::packaged_task task3{[&x](float) -> X& { return x; }};\n+  check_type<std::packaged_task<X&(float)>>(task3);\n+}"}]}