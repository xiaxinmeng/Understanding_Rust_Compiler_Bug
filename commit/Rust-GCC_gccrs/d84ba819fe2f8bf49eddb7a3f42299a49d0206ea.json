{"sha": "d84ba819fe2f8bf49eddb7a3f42299a49d0206ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg0YmE4MTlmZTJmOGJmNDllZGRiN2EzZjQyMjk5YTQ5ZDAyMDZlYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-19T12:41:20Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-19T12:42:11Z"}, "message": "Fix bootstrap\n\nThis fixes a typo in the TREE_CODE compare which should\ncompare against TYPE_DECL, not TYPE_NAME.\n\n2020-11-19  Richard Biener  <rguenther@suse.de>\n\n\t* fold-const.c (operand_compare::hash_operand): Fix typo.", "tree": {"sha": "17a62edb193870740780fc334956be8428f0a96c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17a62edb193870740780fc334956be8428f0a96c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d84ba819fe2f8bf49eddb7a3f42299a49d0206ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d84ba819fe2f8bf49eddb7a3f42299a49d0206ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d84ba819fe2f8bf49eddb7a3f42299a49d0206ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d84ba819fe2f8bf49eddb7a3f42299a49d0206ea/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "717e22dcd48e6299b22a32b728c1d2cad08eb918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717e22dcd48e6299b22a32b728c1d2cad08eb918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/717e22dcd48e6299b22a32b728c1d2cad08eb918"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "820b08d26fd4d25d5f98f9e42d15d5b630b51f42", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d84ba819fe2f8bf49eddb7a3f42299a49d0206ea/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d84ba819fe2f8bf49eddb7a3f42299a49d0206ea/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=d84ba819fe2f8bf49eddb7a3f42299a49d0206ea", "patch": "@@ -3871,7 +3871,7 @@ operand_compare::hash_operand (const_tree t, inchash::hash &hstate,\n \t\t  c = TYPE_NAME (TYPE_MAIN_VARIANT (c));\n \t\t  /* We compute mangled names only when free_lang_data is run.\n \t\t     In that case we can hash precisely.  */\n-\t\t  if (TREE_CODE (c) == TYPE_NAME\n+\t\t  if (TREE_CODE (c) == TYPE_DECL\n \t\t      && DECL_ASSEMBLER_NAME_SET_P (c))\n \t\t    hstate.add_object\n \t\t\t   (IDENTIFIER_HASH_VALUE"}]}