{"sha": "fca482568a40e38c9c95938128bc01c473b9587f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNhNDgyNTY4YTQwZTM4YzljOTU5MzgxMjhiYzAxYzQ3M2I5NTg3Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-01-28T10:58:52Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-01-28T10:58:52Z"}, "message": "new\n\nFrom-SVN: r17530", "tree": {"sha": "737d3707d59794167508c8ad05886c4654f2796f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/737d3707d59794167508c8ad05886c4654f2796f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fca482568a40e38c9c95938128bc01c473b9587f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fca482568a40e38c9c95938128bc01c473b9587f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fca482568a40e38c9c95938128bc01c473b9587f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fca482568a40e38c9c95938128bc01c473b9587f/comments", "author": null, "committer": null, "parents": [{"sha": "fb0390de12d7d4c9dc17eb0b3c79dec9dff87137", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb0390de12d7d4c9dc17eb0b3c79dec9dff87137", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb0390de12d7d4c9dc17eb0b3c79dec9dff87137"}], "stats": {"total": 102, "additions": 95, "deletions": 7}, "files": [{"sha": "918ff3a44f717b8a62f5f7ac624ef049d17822b0", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca482568a40e38c9c95938128bc01c473b9587f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca482568a40e38c9c95938128bc01c473b9587f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit20.C?ref=fca482568a40e38c9c95938128bc01c473b9587f", "patch": "@@ -4,4 +4,4 @@ template <class T>\n T foo(T t);\n \n template <>\n-int foo<char>(char c); // ERROR - bad return type.\n+int foo<char>(char c); // ERROR - does not match any template declaration"}, {"sha": "2cb23381653479bd2469f3c000b87f49b06508f2", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit22.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca482568a40e38c9c95938128bc01c473b9587f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca482568a40e38c9c95938128bc01c473b9587f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit22.C?ref=fca482568a40e38c9c95938128bc01c473b9587f", "patch": "@@ -1,10 +1,10 @@\n // Build don't link:\n // GROUPS passed templates\n template <class T, class U>\n-T foo(T t, U* u);\n+T foo(T t, U* u); // ERROR - template candidate\n \n template <class T>\n-T foo(T t, T* t);\n+T foo(T t, T* t); // ERROR - template candidate\n \n template <>\n-int foo<int>(int, int*); // ERROR - ambiguous specialization.\n+int foo<int>(int, int*); // ERROR - ambiguous template specialization"}, {"sha": "ea1b386b2541e5469b96f64d095048ee017eb9f1", "filename": "gcc/testsuite/g++.old-deja/g++.pt/local3.C", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca482568a40e38c9c95938128bc01c473b9587f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flocal3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca482568a40e38c9c95938128bc01c473b9587f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flocal3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Flocal3.C?ref=fca482568a40e38c9c95938128bc01c473b9587f", "patch": "@@ -3,15 +3,19 @@ extern \"C\" void abort();\n template <class T>\n void f(T)\n {\n+  int j;\n+\n+  j = 6;\n+\n   struct S {\n     int i;\n   };\n \n   S s;\n \n-  s.i = 3;\n+  s.i = j;\n \n-  if (s.i != 3)\n+  if (s.i != 6)\n     abort();\n }\n "}, {"sha": "638e5e3385271bdf8f12dd4d64384cff8e42985f", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca482568a40e38c9c95938128bc01c473b9587f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca482568a40e38c9c95938128bc01c473b9587f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp18.C?ref=fca482568a40e38c9c95938128bc01c473b9587f", "patch": "@@ -3,7 +3,7 @@\n struct S\n {\n   template <class T>\n-  void foo(T);\n+  void foo(T) {}\n };\n \n template void S::foo(int);"}, {"sha": "6185d3d60583b11bf6dcf0f1ae1518fa758820b4", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp64.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca482568a40e38c9c95938128bc01c473b9587f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp64.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca482568a40e38c9c95938128bc01c473b9587f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp64.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp64.C?ref=fca482568a40e38c9c95938128bc01c473b9587f", "patch": "@@ -0,0 +1,21 @@\n+// Build don't link:\n+\n+template <class T>\n+struct S1 {};\n+\n+template <class T>\n+void f(T);\n+\n+template <class C>\n+struct S2\n+{\n+  template <class T>\n+  void f<S1<T> >(T) {}  // ERROR - bad specialization.\n+};\n+\n+\n+template <class T>\n+struct S3\n+{\n+  friend class S2<T>;\n+};"}, {"sha": "71676ff6cbcef2f38a07c949955aac2184e4593d", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec12.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca482568a40e38c9c95938128bc01c473b9587f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca482568a40e38c9c95938128bc01c473b9587f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec12.C?ref=fca482568a40e38c9c95938128bc01c473b9587f", "patch": "@@ -0,0 +1,21 @@\n+extern \"C\" void abort();\n+\n+template <class T>\n+struct S\n+{\n+  template <class U>\n+  int f(U u);\n+};\n+\n+\n+template <class T>\n+template <>\n+int S<T>::f<int>(int i) { return 1; }\n+\n+int main()\n+{\n+  S<char> sc;\n+\n+  if (sc.f(3) != 1)\n+    abort();\n+}"}, {"sha": "8f94570db8482d10f22332d54abdc15f48aed9fd", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec13.C", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca482568a40e38c9c95938128bc01c473b9587f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca482568a40e38c9c95938128bc01c473b9587f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec13.C?ref=fca482568a40e38c9c95938128bc01c473b9587f", "patch": "@@ -0,0 +1,42 @@\n+template <class T>\n+void f(T t);\n+\n+template <class T>\n+void f(T* t);\n+\n+template <>\n+void f(int* ip) {}\n+\n+struct S1\n+{\n+  template <class T>\n+  void f(T t);\n+\n+  template <class T>\n+  void f(T* t);\n+\n+  template <>\n+  void f(int* ip) {}\n+};\n+\n+template <class U>\n+struct S2\n+{\n+  template <class T>\n+  void f(T t);\n+\n+  template <class T>\n+  void f(T* t);\n+\n+  template <>\n+  void f(int* ip) {}\n+};\n+\n+int main()\n+{\n+  int* ip;\n+  S1 s1;\n+  s1.f(ip);\n+  S2<double> s2;\n+  s2.f(ip);\n+}"}]}