{"sha": "dc0c1e44766b850cf7418badc99a97a044681409", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMwYzFlNDQ3NjZiODUwY2Y3NDE4YmFkYzk5YTk3YTA0NDY4MTQwOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-08-24T07:47:13Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-08-24T07:47:13Z"}, "message": "Make more use of subreg_offset_from_lsb\n\nThis patch makes use of the subreg_offset_from_lsb function\nadded by an earlier patch in the SVE series.\n\n2017-08-24  Richard Sandiford  <richard.sandiford@linaro.org>\n\t    Alan Hayward  <alan.hayward@arm.com>\n\t    David Sherwood  <david.sherwood@arm.com>\n\ngcc/\n\t* combine.c (make_extraction): Use subreg_offset_from_lsb.\n\nCo-Authored-By: Alan Hayward <alan.hayward@arm.com>\nCo-Authored-By: David Sherwood <david.sherwood@arm.com>\n\nFrom-SVN: r251326", "tree": {"sha": "6f855d2a1086c19ac74a86f0dfd87f1b2704e4b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f855d2a1086c19ac74a86f0dfd87f1b2704e4b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc0c1e44766b850cf7418badc99a97a044681409", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc0c1e44766b850cf7418badc99a97a044681409", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc0c1e44766b850cf7418badc99a97a044681409", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc0c1e44766b850cf7418badc99a97a044681409/comments", "author": null, "committer": null, "parents": [{"sha": "973c7875842b8aa054f67f2ae958de3e5c478e9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/973c7875842b8aa054f67f2ae958de3e5c478e9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/973c7875842b8aa054f67f2ae958de3e5c478e9b"}], "stats": {"total": 25, "additions": 10, "deletions": 15}, "files": [{"sha": "d448aae131281c6f79bd22efe7aae29ac46697cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc0c1e44766b850cf7418badc99a97a044681409/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc0c1e44766b850cf7418badc99a97a044681409/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc0c1e44766b850cf7418badc99a97a044681409", "patch": "@@ -1,3 +1,9 @@\n+2017-08-24  Richard Sandiford  <richard.sandiford@linaro.org>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* combine.c (make_extraction): Use subreg_offset_from_lsb.\n+\n 2017-08-23  Daniel Santos  <daniel.santos@pobox.com>\n \n \t* config/i386/i386.h (ix86_frame::stack_realign_allocate_offset):"}, {"sha": "b34fb81c97a830f8598e84c8d677af9fefe3a290", "filename": "gcc/combine.c", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc0c1e44766b850cf7418badc99a97a044681409/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc0c1e44766b850cf7418badc99a97a044681409/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=dc0c1e44766b850cf7418badc99a97a044681409", "patch": "@@ -7488,26 +7488,15 @@ make_extraction (machine_mode mode, rtx inner, HOST_WIDE_INT pos,\n \t\t return a new hard register.  */\n \t      if (pos || in_dest)\n \t\t{\n-\t\t  HOST_WIDE_INT final_word = pos / BITS_PER_WORD;\n-\n-\t\t  if (WORDS_BIG_ENDIAN\n-\t\t      && GET_MODE_SIZE (inner_mode) > UNITS_PER_WORD)\n-\t\t    final_word = ((GET_MODE_SIZE (inner_mode)\n-\t\t\t\t   - GET_MODE_SIZE (tmode))\n-\t\t\t\t  / UNITS_PER_WORD) - final_word;\n-\n-\t\t  final_word *= UNITS_PER_WORD;\n-\t\t  if (BYTES_BIG_ENDIAN &&\n-\t\t      GET_MODE_SIZE (inner_mode) > GET_MODE_SIZE (tmode))\n-\t\t    final_word += (GET_MODE_SIZE (inner_mode)\n-\t\t\t\t   - GET_MODE_SIZE (tmode)) % UNITS_PER_WORD;\n+\t\t  unsigned int offset\n+\t\t    = subreg_offset_from_lsb (tmode, inner_mode, pos);\n \n \t\t  /* Avoid creating invalid subregs, for example when\n \t\t     simplifying (x>>32)&255.  */\n-\t\t  if (!validate_subreg (tmode, inner_mode, inner, final_word))\n+\t\t  if (!validate_subreg (tmode, inner_mode, inner, offset))\n \t\t    return NULL_RTX;\n \n-\t\t  new_rtx = gen_rtx_SUBREG (tmode, inner, final_word);\n+\t\t  new_rtx = gen_rtx_SUBREG (tmode, inner, offset);\n \t\t}\n \t      else\n \t\tnew_rtx = gen_lowpart (tmode, inner);"}]}