{"sha": "375d8b5900725ef7076b51509e570373c379259d", "node_id": "C_kwDOANBUbNoAKDM3NWQ4YjU5MDA3MjVlZjcwNzZiNTE1MDllNTcwMzczYzM3OTI1OWQ", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-01-25T16:29:09Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-01-29T14:17:44Z"}, "message": "Add helpers to access each segment of the canonical path", "tree": {"sha": "7b5c1ad3fa92d6c9fba6239086a066ab6cc0cb87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b5c1ad3fa92d6c9fba6239086a066ab6cc0cb87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/375d8b5900725ef7076b51509e570373c379259d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375d8b5900725ef7076b51509e570373c379259d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/375d8b5900725ef7076b51509e570373c379259d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375d8b5900725ef7076b51509e570373c379259d/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63429653c1aed3fd5e9d1de5d75c1831351855eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63429653c1aed3fd5e9d1de5d75c1831351855eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63429653c1aed3fd5e9d1de5d75c1831351855eb"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "6ac8968afcc5341da7741a8faf904fec7d5ee22a", "filename": "gcc/rust/util/rust-canonical-path.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375d8b5900725ef7076b51509e570373c379259d/gcc%2Frust%2Futil%2Frust-canonical-path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375d8b5900725ef7076b51509e570373c379259d/gcc%2Frust%2Futil%2Frust-canonical-path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-canonical-path.h?ref=375d8b5900725ef7076b51509e570373c379259d", "patch": "@@ -144,6 +144,17 @@ class CanonicalPath\n     return segs.back ().first;\n   }\n \n+  const std::pair<NodeId, std::string> &get_seg_at (size_t index) const\n+  {\n+    rust_assert (index < size ());\n+    return segs.at (index);\n+  }\n+\n+  static bool segment_is_qualified_path (const std::string &seg)\n+  {\n+    return seg.find (\" as \") != std::string::npos;\n+  }\n+\n   bool is_equal (const CanonicalPath &b) const\n   {\n     return get ().compare (b.get ()) == 0;"}]}