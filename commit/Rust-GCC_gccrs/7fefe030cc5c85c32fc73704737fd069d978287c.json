{"sha": "7fefe030cc5c85c32fc73704737fd069d978287c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZlZmUwMzBjYzVjODVjMzJmYzczNzA0NzM3ZmQwNjlkOTc4Mjg3Yw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2012-06-28T07:41:02Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2012-06-28T07:41:02Z"}, "message": "re PR debug/53671 (Many guality test failures)\n\nPR debug/53671\nPR debug/49888\n* gcc.dg/guality/pr49888.c: Account for the possibility that\nthe variable is optimized out at the first test.\n\nFrom-SVN: r189038", "tree": {"sha": "0d238f7baeb479e22799bf8bca3c022b1017273f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d238f7baeb479e22799bf8bca3c022b1017273f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fefe030cc5c85c32fc73704737fd069d978287c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fefe030cc5c85c32fc73704737fd069d978287c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fefe030cc5c85c32fc73704737fd069d978287c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fefe030cc5c85c32fc73704737fd069d978287c/comments", "author": null, "committer": null, "parents": [{"sha": "a992a6d1f48622bb8cd39c04f06f41eba9c984c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a992a6d1f48622bb8cd39c04f06f41eba9c984c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a992a6d1f48622bb8cd39c04f06f41eba9c984c6"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "4b710e28abd2ee183d1d7fb30a646516bc33d271", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fefe030cc5c85c32fc73704737fd069d978287c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fefe030cc5c85c32fc73704737fd069d978287c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7fefe030cc5c85c32fc73704737fd069d978287c", "patch": "@@ -1,3 +1,10 @@\n+2012-06-28  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR debug/53671\n+\tPR debug/49888\n+\t* gcc.dg/guality/pr49888.c: Account for the possibility that\n+\tthe variable is optimized out at the first test.\n+\n 2012-06-27  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/override2.C: Adjust."}, {"sha": "a0e26cf8327ff3b3d483c238673c21afa28f9fc7", "filename": "gcc/testsuite/gcc.dg/guality/pr49888.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fefe030cc5c85c32fc73704737fd069d978287c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr49888.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fefe030cc5c85c32fc73704737fd069d978287c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr49888.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr49888.c?ref=7fefe030cc5c85c32fc73704737fd069d978287c", "patch": "@@ -9,12 +9,13 @@ f (int *p)\n {\n   int c = *p;\n   v = c;\n-  *p = 1; /* { dg-final { gdb-test 12 \"c\" \"0\" } } */\n+  *p = 1; /* { dg-final { gdb-test 12 \"!!c\" \"0\" } } */\n   /* c may very well be optimized out at this point, so we test !c,\n      which will evaluate to the expected value.  We just want to make\n      sure it doesn't remain bound to *p as it did before, in which\n-     case !c would evaluate to 0.  */\n-  v = 0; /* { dg-final { gdb-test 17 \"!c\" \"1\" } } */\n+     case !c would evaluate to 0.  *p may also be regarded as aliasing\n+     register saves, thus the !!c above.  */\n+  v = 0; /* { dg-final { gdb-test 18 \"!c\" \"1\" } } */\n }\n int\n main ()"}]}