{"sha": "880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgwNjYxYTQ4YjZlMmYzZjRiM2MwNTg2MGQzYzk3MzdiMmExZGNjOA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-10-29T23:21:35Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-10-29T23:21:35Z"}, "message": "re PR c++/54930 (Add warning switch for \"returning reference to temporary\" and similar)\n\ngcc/c-family:\n\tPR c++/54930\n\t* c.opt (Wreturn_local_addr): Define new option.\n\ngcc/c:\n\tPR c++/54930\n\t* c-typeck.c (c_finish_return): Use OPT_Wreturn_local_addr.\n\ngcc/cp:\n\tPR c++/54930\n\t* typeck.c (maybe_warn_about_returning_address_of_local): Use\n\tOPT_Wreturn_local_addr.\n\ngcc:\n\tPR c++/54930\n\t* doc/invoke.texi (Warning Options): Document -Wno-return-local-addr.\n\ngcc/testsuite:\n\tPR c++/54930\n\t* gcc.dg/Wreturn-local-addr.c: New.\n\t* g++.dg/warn/Wno-return-local-addr.C: New.\n\t* g++.dg/warn/Wreturn-local-addr.C: New.\n\nFrom-SVN: r192968", "tree": {"sha": "cc94a67e7b17460335b8b668eac1f55a166543ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc94a67e7b17460335b8b668eac1f55a166543ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2adaa795e40c898f70aa58a4487587490304ddaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2adaa795e40c898f70aa58a4487587490304ddaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2adaa795e40c898f70aa58a4487587490304ddaa"}], "stats": {"total": 106, "additions": 100, "deletions": 6}, "files": [{"sha": "9daf727ed805c0afc9d810df68810f8ba8f390a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8", "patch": "@@ -1,3 +1,8 @@\n+2012-10-29  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR c++/54930\n+\t* doc/invoke.texi (Warning Options): Document -Wno-return-local-addr.\n+\n 2012-10-29  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* lra-assigns.c: Remove trailing white spaces."}, {"sha": "f7c942216bcb2c5a99794b2ff6bbc9067a5f0a94", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8", "patch": "@@ -1,3 +1,8 @@\n+2012-10-29  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR c++/54930\n+\t* c.opt (Wreturn_local_addr): Define new option.\n+\n 2012-10-25  Jason Merrill  <jason@redhat.com>\n \n \t* c.opt (Wvirtual-move-assign): New."}, {"sha": "06d6e363c98e4751539901b60348e95c51b2ed22", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8", "patch": "@@ -613,6 +613,10 @@ Wreorder\n C++ ObjC++ Var(warn_reorder) Warning LangEnabledBy(C++ ObjC++,Wall)\n Warn when the compiler reorders code\n \n+Wreturn-local-addr\n+C ObjC C++ ObjC++ Var(warn_return_local_addr) Init(1) Warning\n+Warn about returning a pointer/reference to a local or temporary variable.\n+\n Wreturn-type\n C ObjC C++ ObjC++ Var(warn_return_type) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n Warn whenever a function's return type defaults to \\\"int\\\" (C), or about inconsistent return types (C++)"}, {"sha": "cd3a457d9535e07e5fff5d1d9cc13ced3c6671e4", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8", "patch": "@@ -1,3 +1,8 @@\n+2012-10-29  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR c++/54930\n+\t* c-typeck.c (c_finish_return): Use OPT_Wreturn_local_addr.\n+\n 2012-10-29  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR c/53066"}, {"sha": "cf63355f6146071e8781751c1926bafeee75d6e1", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8", "patch": "@@ -8742,7 +8742,8 @@ c_finish_return (location_t loc, tree retval, tree origtype)\n \t\t  && !TREE_STATIC (inner)\n \t\t  && DECL_CONTEXT (inner) == current_function_decl)\n \t\twarning_at (loc,\n-\t\t\t    0, \"function returns address of local variable\");\n+\t\t\t    OPT_Wreturn_local_addr, \"function returns address \"\n+\t\t\t    \"of local variable\");\n \t      break;\n \n \t    default:"}, {"sha": "1eb1fe4f2c1567396dc62e28a491d1080dc1ef3c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8", "patch": "@@ -1,3 +1,9 @@\n+2012-10-29  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR c++/54930\n+\t* typeck.c (maybe_warn_about_returning_address_of_local): Use\n+\tOPT_Wreturn_local_addr.\n+\n 2012-10-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/55081"}, {"sha": "5d8c27d534c85f49625177854ed93b3178d62e1a", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8", "patch": "@@ -8020,14 +8020,14 @@ maybe_warn_about_returning_address_of_local (tree retval)\n       if (TREE_CODE (whats_returned) == AGGR_INIT_EXPR\n \t  || TREE_CODE (whats_returned) == TARGET_EXPR)\n \t{\n-\t  warning (0, \"returning reference to temporary\");\n+\t  warning (OPT_Wreturn_local_addr, \"returning reference to temporary\");\n \t  return;\n \t}\n       if (TREE_CODE (whats_returned) == VAR_DECL\n \t  && DECL_NAME (whats_returned)\n \t  && TEMP_NAME_P (DECL_NAME (whats_returned)))\n \t{\n-\t  warning (0, \"reference to non-lvalue returned\");\n+\t  warning (OPT_Wreturn_local_addr, \"reference to non-lvalue returned\");\n \t  return;\n \t}\n     }\n@@ -8043,10 +8043,10 @@ maybe_warn_about_returning_address_of_local (tree retval)\n \t   || TREE_PUBLIC (whats_returned)))\n     {\n       if (TREE_CODE (valtype) == REFERENCE_TYPE)\n-\twarning (0, \"reference to local variable %q+D returned\",\n+\twarning (OPT_Wreturn_local_addr, \"reference to local variable %q+D returned\",\n \t\t whats_returned);\n       else\n-\twarning (0, \"address of local variable %q+D returned\",\n+\twarning (OPT_Wreturn_local_addr, \"address of local variable %q+D returned\",\n \t\t whats_returned);\n       return;\n     }"}, {"sha": "720d42de101cf852a0e55fdf776112a775122b09", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8", "patch": "@@ -261,7 +261,7 @@ Objective-C and Objective-C++ Dialects}.\n -Woverlength-strings  -Wpacked  -Wpacked-bitfield-compat  -Wpadded @gol\n -Wparentheses  -Wpedantic-ms-format -Wno-pedantic-ms-format @gol\n -Wpointer-arith  -Wno-pointer-to-int-cast @gol\n--Wredundant-decls @gol\n+-Wredundant-decls  -Wno-return-local-addr @gol\n -Wreturn-type  -Wsequence-point  -Wshadow @gol\n -Wsign-compare  -Wsign-conversion  -Wsizeof-pointer-memaccess @gol\n -Wstack-protector -Wstack-usage=@var{len} -Wstrict-aliasing @gol\n@@ -3535,6 +3535,12 @@ definitions, may be found on the GCC readings page, at\n \n This warning is enabled by @option{-Wall} for C and C++.\n \n+@item -Wno-return-local-addr\n+@opindex Wno-return-local-addr\n+@opindex Wreturn-local-addr\n+Do not warn about returning a pointer (or in C++, a reference) to a\n+variable that goes out of scope after the function returns.\n+\n @item -Wreturn-type\n @opindex Wreturn-type\n @opindex Wno-return-type"}, {"sha": "f6a812210056de1dfaa8766f61458b335ae9995a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8", "patch": "@@ -1,3 +1,10 @@\n+2012-10-29  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR c++/54930\n+\t* gcc.dg/Wreturn-local-addr.c: New.\n+\t* g++.dg/warn/Wno-return-local-addr.C: New.\n+\t* g++.dg/warn/Wreturn-local-addr.C: New.\n+\n 2012-10-29  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR middle-end/55116"}, {"sha": "e15bfa24f54baa14abf6e799ea9888663f3a25bf", "filename": "gcc/testsuite/g++.dg/warn/Wno-return-local-addr.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWno-return-local-addr.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWno-return-local-addr.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWno-return-local-addr.C?ref=880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8", "patch": "@@ -0,0 +1,26 @@\n+// { dg-do assemble  }\n+// { dg-options \"-Wno-return-local-addr\" }\n+\n+int& bad1()\n+{\n+  int x = 0;\n+  return x;\n+}\n+\n+int* bad2()\n+{\n+  int x = 0;\n+  return &x;\n+}\n+\n+int f();\n+\n+const int& bad3()\n+{\n+  return f();\n+}\n+\n+const int& bad4()\n+{\n+  return int();\n+}"}, {"sha": "faa3a345440c8e939218591087a9f0e3ca9dc3ee", "filename": "gcc/testsuite/g++.dg/warn/Wreturn-local-addr.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWreturn-local-addr.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWreturn-local-addr.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWreturn-local-addr.C?ref=880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8", "patch": "@@ -0,0 +1,20 @@\n+// { dg-do assemble  }\n+// { dg-options \"-Werror=return-local-addr\" }\n+// { dg-message \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 }\n+\n+int& bad1()\n+{\n+  int x = 0;\t\t// { dg-error \"reference to local variable\" }\n+  return x;\n+}\n+\n+int* bad2()\n+{\n+  int x = 0;\t\t// { dg-error \"address of local variable\" }\n+  return &x;\n+}\n+\n+const int& bad4()\n+{\n+  return int();\t\t// { dg-error \"returning reference to temporary\" }\n+}"}, {"sha": "d496d205e89b54bd751bf91864f247923002d1d8", "filename": "gcc/testsuite/gcc.dg/Wreturn-local-addr.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Ftestsuite%2Fgcc.dg%2FWreturn-local-addr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8/gcc%2Ftestsuite%2Fgcc.dg%2FWreturn-local-addr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWreturn-local-addr.c?ref=880661a48b6e2f3f4b3c05860d3c9737b2a1dcc8", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do assemble  } */\n+/* { dg-options \"-Werror=return-local-addr\" } */\n+/* { dg-message \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n+\n+int* bad()\n+{\n+  int x = 0;\n+  return &x;\t\t/* { dg-error \"address of local variable\" } */\n+}"}]}