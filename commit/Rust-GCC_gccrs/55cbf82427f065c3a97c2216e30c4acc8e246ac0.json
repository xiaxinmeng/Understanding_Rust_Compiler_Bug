{"sha": "55cbf82427f065c3a97c2216e30c4acc8e246ac0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVjYmY4MjQyN2YwNjVjM2E5N2MyMjE2ZTMwYzRhY2M4ZTI0NmFjMA==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2004-01-29T03:14:35Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2004-01-29T03:14:35Z"}, "message": "Fix LP64 failures.\n\n\t* objc.dg/proto-qual-1.m (ROUND, aligned_sizeof): New.\n\t(scan_initial, main): Use aligned_sizeof instead of sizeof.\n\nFrom-SVN: r76842", "tree": {"sha": "f937550a46a45ff40cf24d79f4fbae9881b7fec8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f937550a46a45ff40cf24d79f4fbae9881b7fec8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55cbf82427f065c3a97c2216e30c4acc8e246ac0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55cbf82427f065c3a97c2216e30c4acc8e246ac0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55cbf82427f065c3a97c2216e30c4acc8e246ac0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55cbf82427f065c3a97c2216e30c4acc8e246ac0/comments", "author": null, "committer": null, "parents": [{"sha": "b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1a95e0b150a9423dd4ad8b9fdc97426cfa7764f"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "482ea7a018464bdb41b8275d5fe65695f386321d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55cbf82427f065c3a97c2216e30c4acc8e246ac0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55cbf82427f065c3a97c2216e30c4acc8e246ac0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=55cbf82427f065c3a97c2216e30c4acc8e246ac0", "patch": "@@ -1,3 +1,8 @@\n+2004-01-28  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* objc.dg/proto-qual-1.m (ROUND, aligned_sizeof): New.\n+\t(scan_initial, main): Use aligned_sizeof instead of sizeof.\n+\t\n 2004-01-28  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/13791"}, {"sha": "0f1c3102d2756f8bbc8ff73af85bde5ad2f28d16", "filename": "gcc/testsuite/objc.dg/proto-qual-1.m", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55cbf82427f065c3a97c2216e30c4acc8e246ac0/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-qual-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55cbf82427f065c3a97c2216e30c4acc8e246ac0/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-qual-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-qual-1.m?ref=55cbf82427f065c3a97c2216e30c4acc8e246ac0", "patch": "@@ -8,6 +8,10 @@\n #include <objc/objc-api.h>\n #endif\n \n+/* The encoded parameter sizes will be rounded up to match pointer alignment.  */\n+#define ROUND(s,a) (a * ((s + a - 1) / a))\n+#define aligned_sizeof(T) ROUND(sizeof(T),__alignof(void *))\n+\n extern int sscanf(const char *str, const char *format, ...);\n extern void abort(void);\n #define CHECK_IF(expr) if(!(expr)) abort()\n@@ -34,15 +38,15 @@ static void scan_initial(const char *pattern) {\n   totsize = offs0 = offs1 = offs2 = offs3 = offs4 = offs5 = offs6 = offs7 = (unsigned)-1;\n   sscanf(meth->types, pattern, &totsize, &offs0, &offs1, &offs2, &offs3,\n       &offs4, &offs5, &offs6, &offs7);\n-  CHECK_IF(!offs0 && offs1 == sizeof(id) && offs2 == offs1 + sizeof(SEL) && totsize >= offs2);\n+  CHECK_IF(!offs0 && offs1 == aligned_sizeof(id) && offs2 == offs1 + aligned_sizeof(SEL) && totsize >= offs2);\n }\n \n int main(void) {\n   meth = [proto descriptionForInstanceMethod: @selector(address:with:)];\n   scan_initial(\"O@%u@%u:%uNR@%uo^^S%u\");\n-  CHECK_IF(offs3 == offs2 + sizeof(id) && totsize == offs3 + sizeof(unsigned));\n+  CHECK_IF(offs3 == offs2 + aligned_sizeof(id) && totsize == offs3 + aligned_sizeof(unsigned));\n   meth = [proto descriptionForClassMethod: @selector(retainArgument:with:)];\n   scan_initial(\"Vv%u@%u:%uOo@%un^*%u\");\n-  CHECK_IF(offs3 == offs2 + sizeof(id) && totsize == offs3 + sizeof(char **));\n+  CHECK_IF(offs3 == offs2 + aligned_sizeof(id) && totsize == offs3 + aligned_sizeof(char **));\n   return 0;\n }"}]}