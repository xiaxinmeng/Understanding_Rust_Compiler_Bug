{"sha": "e0c70bd7274fff77833da4d359df4c8694912609", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBjNzBiZDcyNzRmZmY3NzgzM2RhNGQzNTlkZjRjODY5NDkxMjYwOQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@codesourcery.com", "date": "2014-01-05T21:47:43Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2014-01-05T21:47:43Z"}, "message": "re PR bootstrap/59541 (Revision 206070 breaks bootstrap on Darwin: config/darwin.c:3665:1: error: control reaches end of non-void function [-Werror=return-type])\n\ngcc:\n\n\tPR bootstrap/59541\n\t* config/darwin.c (darwin_function_section): Adjust return values to\n\tcorrespond to optimisation changes made in r206070.\n\nFrom-SVN: r206348", "tree": {"sha": "df51baabc67181372ee80c2a0caba3e693ed3dfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df51baabc67181372ee80c2a0caba3e693ed3dfa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0c70bd7274fff77833da4d359df4c8694912609", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0c70bd7274fff77833da4d359df4c8694912609", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0c70bd7274fff77833da4d359df4c8694912609", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0c70bd7274fff77833da4d359df4c8694912609/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8cc8a5e42746656b5d20e25638fbade432bc019", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8cc8a5e42746656b5d20e25638fbade432bc019", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8cc8a5e42746656b5d20e25638fbade432bc019"}], "stats": {"total": 81, "additions": 33, "deletions": 48}, "files": [{"sha": "1969671af12a614c498e8bb6ca1de52ce8946d57", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c70bd7274fff77833da4d359df4c8694912609/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c70bd7274fff77833da4d359df4c8694912609/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0c70bd7274fff77833da4d359df4c8694912609", "patch": "@@ -1,3 +1,9 @@\n+2014-01-05  Iain Sandoe  <iain@codesourcery.com>\n+\n+\tPR bootstrap/59541\n+\t* config/darwin.c (darwin_function_section): Adjust return values to\n+\tcorrespond to optimisation changes made in r206070.\n+\n 2014-01-05  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (ix86_data_alignment): Calculate max_align"}, {"sha": "adf370d4d072febcf085da6138cc67889159f807", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 27, "deletions": 48, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c70bd7274fff77833da4d359df4c8694912609/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c70bd7274fff77833da4d359df4c8694912609/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=e0c70bd7274fff77833da4d359df4c8694912609", "patch": "@@ -3611,57 +3611,36 @@ darwin_function_section (tree decl, enum node_frequency freq,\n   if (decl && DECL_SECTION_NAME (decl) != NULL_TREE)\n     return get_named_section (decl, NULL, 0);\n \n-  /* Default when there is no function re-ordering.  */\n-  if (!flag_reorder_functions)\n-    return (weak)\n-\t    ? darwin_sections[text_coal_section]\n-\t    : text_section;\n-\n-  /* Startup code should go to startup subsection unless it is\n-     unlikely executed (this happens especially with function splitting\n-     where we can split away unnecessary parts of static constructors).  */\n-  if (startup && freq != NODE_FREQUENCY_UNLIKELY_EXECUTED)\n-  {\n-    /* If we do have a profile or(and) LTO phase is executed, we do not need\n-       these ELF section.  */\n-    if (!in_lto_p || !flag_profile_values)\n-      return (weak)\n-\t      ? darwin_sections[text_startup_coal_section]\n-\t      : darwin_sections[text_startup_section];\n-    else\n-      return text_section;\n-  }\n+  /* We always put unlikely executed stuff in the cold section.  */\n+  if (freq == NODE_FREQUENCY_UNLIKELY_EXECUTED)\n+    return (weak) ? darwin_sections[text_cold_coal_section]\n+\t\t  : darwin_sections[text_cold_section];\n+\n+  /* If we have LTO *and* feedback information, then let LTO handle\n+     the function ordering, it makes a better job (for normal, hot,\n+     startup and exit - hence the bailout for cold above).  */\n+  if (in_lto_p && flag_profile_values)\n+    goto default_function_sections;\n+\n+  /* Non-cold startup code should go to startup subsection.  */\n+  if (startup)\n+    return (weak) ? darwin_sections[text_startup_coal_section]\n+\t\t  : darwin_sections[text_startup_section];\n \n   /* Similarly for exit.  */\n-  if (exit && freq != NODE_FREQUENCY_UNLIKELY_EXECUTED)\n-    return (weak)\n-\t    ? darwin_sections[text_exit_coal_section]\n-\t    : darwin_sections[text_exit_section];\n-\n-  /* Group cold functions together, similarly for hot code.  */\n-  switch (freq)\n-    {\n-      case NODE_FREQUENCY_UNLIKELY_EXECUTED:\n-\treturn (weak)\n-\t\t? darwin_sections[text_cold_coal_section]\n-\t\t: darwin_sections[text_cold_section];\n-\tbreak;\n-      case NODE_FREQUENCY_HOT:\n-      {\n-        /* If we do have a profile or(and) LTO phase is executed, we do not need\n-           these ELF section.  */\n-        if (!in_lto_p || !flag_profile_values)\n-          return (weak)\n-                  ? darwin_sections[text_hot_coal_section]\n-                  : darwin_sections[text_hot_section];\n-        break;\n-      }\n-      default:\n-\treturn (weak)\n-\t\t? darwin_sections[text_coal_section]\n+  if (exit)\n+    return (weak) ? darwin_sections[text_exit_coal_section]\n+\t\t  : darwin_sections[text_exit_section];\n+\n+  /* Place hot code.  */\n+  if (freq == NODE_FREQUENCY_HOT)\n+    return (weak) ? darwin_sections[text_hot_coal_section]\n+\t\t  : darwin_sections[text_hot_section];\n+\n+  /* Otherwise, default to the 'normal' non-reordered sections.  */\n+default_function_sections:\n+  return (weak) ? darwin_sections[text_coal_section]\n \t\t: text_section;\n-\tbreak;\n-    }\n }\n \n /* When a function is partitioned between sections, we need to insert a label"}]}