{"sha": "d99f015cc5daf02fe8949375026721cb5760f06a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk5ZjAxNWNjNWRhZjAyZmU4OTQ5Mzc1MDI2NzIxY2I1NzYwZjA2YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-09-01T07:46:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-09-01T07:46:38Z"}, "message": "cp-lang.c (cp_expr_size): Allow initialization from a CONSTRUCTOR.\n\n        * cp-lang.c (cp_expr_size): Allow initialization from a\n        CONSTRUCTOR.\n\nFrom-SVN: r56720", "tree": {"sha": "5c0d0910aad95f6cf29f373f24156cc73a7b6e69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c0d0910aad95f6cf29f373f24156cc73a7b6e69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d99f015cc5daf02fe8949375026721cb5760f06a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99f015cc5daf02fe8949375026721cb5760f06a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d99f015cc5daf02fe8949375026721cb5760f06a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99f015cc5daf02fe8949375026721cb5760f06a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad5aa77eec9d1fa562b7f16a139ec9564ec7e330", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad5aa77eec9d1fa562b7f16a139ec9564ec7e330", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad5aa77eec9d1fa562b7f16a139ec9564ec7e330"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "5a4ce9762e50a923228bdc8f3e8bf241e47564a0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99f015cc5daf02fe8949375026721cb5760f06a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99f015cc5daf02fe8949375026721cb5760f06a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d99f015cc5daf02fe8949375026721cb5760f06a", "patch": "@@ -1,3 +1,8 @@\n+2002-08-31  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-lang.c (cp_expr_size): Allow initialization from a\n+\tCONSTRUCTOR.\n+\n 2002-08-30  Richard Henderson  <rth@redhat.com>\n \n \tPR opt/7515"}, {"sha": "3f771a9ccfd606df44c3caeadbfa637c92184b26", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99f015cc5daf02fe8949375026721cb5760f06a/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99f015cc5daf02fe8949375026721cb5760f06a/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=d99f015cc5daf02fe8949375026721cb5760f06a", "patch": "@@ -298,7 +298,9 @@ cp_expr_size (exp)\n \t of a type with both of these set; all copies of such types must go\n \t through a constructor or assignment op.  */\n       if (TYPE_HAS_COMPLEX_INIT_REF (TREE_TYPE (exp))\n-\t  && TYPE_HAS_COMPLEX_ASSIGN_REF (TREE_TYPE (exp)))\n+\t  && TYPE_HAS_COMPLEX_ASSIGN_REF (TREE_TYPE (exp))\n+\t  /* But storing a CONSTRUCTOR isn't a copy.  */\n+\t  && TREE_CODE (exp) != CONSTRUCTOR)\n \tabort ();\n       /* This would be wrong for a type with virtual bases, but they are\n \t caught by the abort above.  */"}, {"sha": "c63f0b02c652709ca0409824ea17f1af4ccb7db1", "filename": "gcc/testsuite/g++.dg/init/aggr1.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99f015cc5daf02fe8949375026721cb5760f06a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Faggr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99f015cc5daf02fe8949375026721cb5760f06a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Faggr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Faggr1.C?ref=d99f015cc5daf02fe8949375026721cb5760f06a", "patch": "@@ -0,0 +1,19 @@\n+// Test that initializing an aggregate with complex copy constructor\n+// and assignment ops doesn't cause cp_expr_size to abort.\n+\n+struct A\n+{\n+  A();\n+  A(const A&);\n+  A& operator=(const A&);\n+};\n+\n+struct B\n+{\n+  A a;\n+};\n+\n+int main ()\n+{\n+  B b = { A() };\n+}"}]}