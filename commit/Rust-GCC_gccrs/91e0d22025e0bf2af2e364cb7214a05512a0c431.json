{"sha": "91e0d22025e0bf2af2e364cb7214a05512a0c431", "node_id": "C_kwDOANBUbNoAKDkxZTBkMjIwMjVlMGJmMmFmMmUzNjRjYjcyMTRhMDU1MTJhMGM0MzE", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2022-12-21T16:58:40Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2022-12-21T17:18:53Z"}, "message": "[PATCH] Use toplevel configure for GMP and MPFR for gdb\n\n[Sync'ed from the binutils-gdb repo]\nThis patch uses the toplevel configure parts for GMP/MPFR for\ngdb. The only thing is that gdb now requires MPFR for building.\nBefore it was a recommended but not required library.\nAlso this allows building of GMP and MPFR with the toplevel\ndirectory just like how it is done for GCC.\nWe now error out in the toplevel configure of the version\nof GMP and MPFR that is wrong.\n\nOK after GDB 13 branches? Build gdb 3 ways:\nwith GMP and MPFR in the toplevel (static library used at that point for both)\nWith only MPFR in the toplevel (GMP distro library used and MPFR built from source)\nWith neither GMP and MPFR in the toplevel (distro libraries used)\n\nChanges from v1:\n* Updated gdb/README and gdb/doc/gdb.texinfo.\n* Regenerated using unmodified autoconf-2.69\n\nThanks,\nAndrew Pinski\n\nChangeLog:\n\t* Makefile.def: Add configure-gdb dependencies\n\ton all-gmp and all-mpfr.\n\t* configure.ac: Split out MPC checking from MPFR.\n\tRequire GMP and MPFR if the gdb directory exist.\n\t* Makefile.in: Regenerate.\n\t* configure: Regenerate.", "tree": {"sha": "25c763d2e1d1203a89355ffab2ee3e08ab69a8c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25c763d2e1d1203a89355ffab2ee3e08ab69a8c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91e0d22025e0bf2af2e364cb7214a05512a0c431", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91e0d22025e0bf2af2e364cb7214a05512a0c431", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91e0d22025e0bf2af2e364cb7214a05512a0c431", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91e0d22025e0bf2af2e364cb7214a05512a0c431/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdc7469cf597ec11229ddfc3e9c7a06f3d0fba9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdc7469cf597ec11229ddfc3e9c7a06f3d0fba9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdc7469cf597ec11229ddfc3e9c7a06f3d0fba9d"}], "stats": {"total": 116, "additions": 101, "deletions": 15}, "files": [{"sha": "86d15f1982f04882a996ccbe303df90a18c89b95", "filename": "Makefile.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91e0d22025e0bf2af2e364cb7214a05512a0c431/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91e0d22025e0bf2af2e364cb7214a05512a0c431/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=91e0d22025e0bf2af2e364cb7214a05512a0c431", "patch": "@@ -415,6 +415,8 @@ dependencies = { module=configure-isl; on=all-gmp; };\n dependencies = { module=all-intl; on=all-libiconv; };\n \n // Host modules specific to gdb.\n+dependencies = { module=configure-gdb; on=all-gmp; };\n+dependencies = { module=configure-gdb; on=all-mpfr; };\n dependencies = { module=configure-gdb; on=all-intl; };\n dependencies = { module=configure-gdb; on=configure-sim; };\n dependencies = { module=configure-gdb; on=all-bfd; };"}, {"sha": "d66e6208fa2e1976e348e533a8d57728f4aeaaa4", "filename": "Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91e0d22025e0bf2af2e364cb7214a05512a0c431/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91e0d22025e0bf2af2e364cb7214a05512a0c431/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=91e0d22025e0bf2af2e364cb7214a05512a0c431", "patch": "@@ -66503,6 +66503,8 @@ configure-libcc1: maybe-configure-gcc\n all-libcc1: maybe-all-gcc\n all-c++tools: maybe-all-gcc\n all-utils: maybe-all-libiberty\n+configure-gdb: maybe-all-gmp\n+configure-gdb: maybe-all-mpfr\n configure-gdb: maybe-all-intl\n configure-gdb: maybe-all-bfd\n configure-gdb: maybe-all-libiconv"}, {"sha": "d6716e38e99e3a779851775cc142002c4257af61", "filename": "configure", "status": "modified", "additions": 59, "deletions": 8, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91e0d22025e0bf2af2e364cb7214a05512a0c431/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91e0d22025e0bf2af2e364cb7214a05512a0c431/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=91e0d22025e0bf2af2e364cb7214a05512a0c431", "patch": "@@ -7906,7 +7906,20 @@ _ACEOF\n \n \n # Check for GMP, MPFR and MPC\n-gmplibs=\"-lmpc -lmpfr -lgmp\"\n+require_gmp=no\n+require_mpc=no\n+if test -d ${srcdir}/gcc ; then\n+  require_gmp=yes\n+  require_mpc=yes\n+fi\n+if test -d ${srcdir}/gdb ; then\n+  require_gmp=yes\n+fi\n+\n+gmplibs=\"-lmpfr -lgmp\"\n+if test x\"$require_mpc\" = \"xyes\" ; then\n+  gmplibs=\"-lmpc $gmplibs\"\n+fi\n gmpinc=\n have_gmp=no\n \n@@ -8041,7 +8054,7 @@ if test \"x$with_gmp$with_gmp_include$with_gmp_lib\" = x && test -d ${srcdir}/gmp;\n   have_gmp=yes\n fi\n \n-if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n+if test \"x$require_gmp\" = xyes && test \"x$have_gmp\" = xno; then\n   have_gmp=yes\n   saved_CFLAGS=\"$CFLAGS\"\n   CFLAGS=\"$CFLAGS $gmpinc\"\n@@ -8151,7 +8164,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   fi\n \n   # Check for the MPC header version.\n-  if test x\"$have_gmp\" = xyes ; then\n+  if test \"x$require_mpc\" = xyes && test x\"$have_gmp\" = xyes ; then\n     # Check for the recommended and required versions of MPC.\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of mpc.h\" >&5\n $as_echo_n \"checking for the correct version of mpc.h... \" >&6; }\n@@ -8205,18 +8218,17 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   if test x\"$have_gmp\" = xyes; then\n     saved_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $gmplibs\"\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of the gmp/mpfr/mpc libraries\" >&5\n-$as_echo_n \"checking for the correct version of the gmp/mpfr/mpc libraries... \" >&6; }\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of the gmp/mpfr libraries\" >&5\n+$as_echo_n \"checking for the correct version of the gmp/mpfr libraries... \" >&6; }\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n-#include <mpc.h>\n+#include <mpfr.h>\n int\n main ()\n {\n \n     mpfr_t n;\n     mpfr_t x;\n-    mpc_t c;\n     int t;\n     mpfr_init (n);\n     mpfr_init (x);\n@@ -8225,6 +8237,37 @@ main ()\n     mpfr_subnormalize (x, t, MPFR_RNDN);\n     mpfr_clear(n);\n     mpfr_clear(x);\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }; have_gmp=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+    LIBS=\"$saved_LIBS\"\n+  fi\n+\n+  # Now check the MPC library\n+  if test \"x$require_mpc\" = xyes && test x\"$have_gmp\" = xyes; then\n+    saved_LIBS=\"$LIBS\"\n+    LIBS=\"$LIBS $gmplibs\"\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of the mpc libraries\" >&5\n+$as_echo_n \"checking for the correct version of the mpc libraries... \" >&6; }\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <mpc.h>\n+int\n+main ()\n+{\n+\n+    mpc_t c;\n     mpc_init2 (c, 53);\n     mpc_set_ui_ui (c, 1, 1, MPC_RNDNN);\n     mpc_cosh (c, c, MPC_RNDNN);\n@@ -8253,7 +8296,8 @@ rm -f core conftest.err conftest.$ac_objext \\\n # The library versions listed in the error message below should match\n # the HARD-minimums enforced above.\n   if test x$have_gmp != xyes; then\n-    as_fn_error $? \"Building GCC requires GMP 4.2+, MPFR 3.1.0+ and MPC 0.8.0+.\n+    if test -d ${srcdir}/gcc ; then\n+      as_fn_error $? \"Building GCC requires GMP 4.2+, MPFR 3.1.0+ and MPC 0.8.0+.\n Try the --with-gmp, --with-mpfr and/or --with-mpc options to specify\n their locations.  Source code for these libraries can be found at\n their respective hosting sites as well as at\n@@ -8262,6 +8306,13 @@ http://gcc.gnu.org/install/prerequisites.html for additional info.  If\n you obtained GMP, MPFR and/or MPC from a vendor distribution package,\n make sure that you have installed both the libraries and the header\n files.  They may be located in separate packages.\" \"$LINENO\" 5\n+    else\n+      as_fn_error $? \"Building GDB requires GMP 4.2+, and MPFR 3.1.0+.\n+Try the --with-gmp and/or --with-mpfr options to specify\n+their locations.  If you obtained GMP and/or MPFR from a vendor\n+distribution package, make sure that you have installed both the libraries\n+and the header files.  They may be located in separate packages.\" \"$LINENO\" 5\n+    fi\n   fi\n fi\n "}, {"sha": "737c1a1172be31b552012e29629fbeb85a47c149", "filename": "configure.ac", "status": "modified", "additions": 38, "deletions": 7, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91e0d22025e0bf2af2e364cb7214a05512a0c431/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91e0d22025e0bf2af2e364cb7214a05512a0c431/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=91e0d22025e0bf2af2e364cb7214a05512a0c431", "patch": "@@ -1482,7 +1482,20 @@ AC_SUBST(PGO_BUILD_LTO_CFLAGS)\n _LT_CHECK_OBJDIR\n \n # Check for GMP, MPFR and MPC\n-gmplibs=\"-lmpc -lmpfr -lgmp\"\n+require_gmp=no\n+require_mpc=no\n+if test -d ${srcdir}/gcc ; then\n+  require_gmp=yes\n+  require_mpc=yes\n+fi\n+if test -d ${srcdir}/gdb ; then\n+  require_gmp=yes\n+fi\n+\n+gmplibs=\"-lmpfr -lgmp\"\n+if test x\"$require_mpc\" = \"xyes\" ; then\n+  gmplibs=\"-lmpc $gmplibs\"\n+fi\n gmpinc=\n have_gmp=no\n \n@@ -1597,7 +1610,7 @@ if test \"x$with_gmp$with_gmp_include$with_gmp_lib\" = x && test -d ${srcdir}/gmp;\n   have_gmp=yes\n fi\n \n-if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n+if test \"x$require_gmp\" = xyes && test \"x$have_gmp\" = xno; then\n   have_gmp=yes\n   saved_CFLAGS=\"$CFLAGS\"\n   CFLAGS=\"$CFLAGS $gmpinc\"\n@@ -1637,7 +1650,7 @@ if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n   fi\n \n   # Check for the MPC header version.\n-  if test x\"$have_gmp\" = xyes ; then\n+  if test \"x$require_mpc\" = xyes && test x\"$have_gmp\" = xyes ; then\n     # Check for the recommended and required versions of MPC.\n     AC_MSG_CHECKING([for the correct version of mpc.h])\n     AC_TRY_COMPILE([#include <mpc.h>],[\n@@ -1656,11 +1669,10 @@ if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n   if test x\"$have_gmp\" = xyes; then\n     saved_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $gmplibs\"\n-    AC_MSG_CHECKING([for the correct version of the gmp/mpfr/mpc libraries])\n-    AC_TRY_LINK([#include <mpc.h>],[\n+    AC_MSG_CHECKING([for the correct version of the gmp/mpfr libraries])\n+    AC_TRY_LINK([#include <mpfr.h>],[\n     mpfr_t n;\n     mpfr_t x;\n-    mpc_t c;\n     int t;\n     mpfr_init (n);\n     mpfr_init (x);\n@@ -1669,6 +1681,17 @@ if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n     mpfr_subnormalize (x, t, MPFR_RNDN);\n     mpfr_clear(n);\n     mpfr_clear(x);\n+    ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no]); have_gmp=no])\n+    LIBS=\"$saved_LIBS\"\n+  fi\n+\n+  # Now check the MPC library\n+  if test \"x$require_mpc\" = xyes && test x\"$have_gmp\" = xyes; then\n+    saved_LIBS=\"$LIBS\"\n+    LIBS=\"$LIBS $gmplibs\"\n+    AC_MSG_CHECKING([for the correct version of the mpc libraries])\n+    AC_TRY_LINK([#include <mpc.h>],[\n+    mpc_t c;\n     mpc_init2 (c, 53);\n     mpc_set_ui_ui (c, 1, 1, MPC_RNDNN);\n     mpc_cosh (c, c, MPC_RNDNN);\n@@ -1684,7 +1707,8 @@ if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n # The library versions listed in the error message below should match\n # the HARD-minimums enforced above.\n   if test x$have_gmp != xyes; then\n-    AC_MSG_ERROR([Building GCC requires GMP 4.2+, MPFR 3.1.0+ and MPC 0.8.0+.\n+    if test -d ${srcdir}/gcc ; then\n+      AC_MSG_ERROR([Building GCC requires GMP 4.2+, MPFR 3.1.0+ and MPC 0.8.0+.\n Try the --with-gmp, --with-mpfr and/or --with-mpc options to specify\n their locations.  Source code for these libraries can be found at\n their respective hosting sites as well as at\n@@ -1693,6 +1717,13 @@ http://gcc.gnu.org/install/prerequisites.html for additional info.  If\n you obtained GMP, MPFR and/or MPC from a vendor distribution package,\n make sure that you have installed both the libraries and the header\n files.  They may be located in separate packages.])\n+    else\n+      AC_MSG_ERROR([Building GDB requires GMP 4.2+, and MPFR 3.1.0+.\n+Try the --with-gmp and/or --with-mpfr options to specify\n+their locations.  If you obtained GMP and/or MPFR from a vendor\n+distribution package, make sure that you have installed both the libraries\n+and the header files.  They may be located in separate packages.])\n+    fi\n   fi\n fi\n "}]}