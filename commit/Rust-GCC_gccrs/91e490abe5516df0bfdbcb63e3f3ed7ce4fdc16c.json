{"sha": "91e490abe5516df0bfdbcb63e3f3ed7ce4fdc16c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFlNDkwYWJlNTUxNmRmMGJmZGJjYjYzZTNmM2VkN2NlNGZkYzE2Yw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-07-18T03:28:32Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-07-18T03:28:32Z"}, "message": "pt.c (determine_specialization): Tighten error-checking.\n\n\t* pt.c (determine_specialization): Tighten error-checking.\n\t(end_template_parm_list): Likewise.\n\nFrom-SVN: r28147", "tree": {"sha": "e07fdae22417edad4c987e360248a27a1c4e2ec1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e07fdae22417edad4c987e360248a27a1c4e2ec1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91e490abe5516df0bfdbcb63e3f3ed7ce4fdc16c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91e490abe5516df0bfdbcb63e3f3ed7ce4fdc16c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91e490abe5516df0bfdbcb63e3f3ed7ce4fdc16c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91e490abe5516df0bfdbcb63e3f3ed7ce4fdc16c/comments", "author": null, "committer": null, "parents": [{"sha": "50908fadbb3fa0f2866c9625d8f31d8618567f6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50908fadbb3fa0f2866c9625d8f31d8618567f6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50908fadbb3fa0f2866c9625d8f31d8618567f6e"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "090fc8620adc853086d7f802305878f1ae04c7a4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91e490abe5516df0bfdbcb63e3f3ed7ce4fdc16c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91e490abe5516df0bfdbcb63e3f3ed7ce4fdc16c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=91e490abe5516df0bfdbcb63e3f3ed7ce4fdc16c", "patch": "@@ -1,3 +1,8 @@\n+1999-07-17  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* pt.c (determine_specialization): Tighten error-checking.\n+\t(end_template_parm_list): Likewise.\n+\n 1999-07-14  Mark Mitchell  <mark@codesourcery.com>\n \n \t* pt.c (check_default_tmpl_args): Handle friends defined in the"}, {"sha": "6106852922ef155f5b46ff1512c0afa22a4e6aba", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91e490abe5516df0bfdbcb63e3f3ed7ce4fdc16c/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91e490abe5516df0bfdbcb63e3f3ed7ce4fdc16c/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=91e490abe5516df0bfdbcb63e3f3ed7ce4fdc16c", "patch": "@@ -974,9 +974,15 @@ determine_specialization (template_id, decl, targs_out,\n     return error_mark_node;\n \n   /* Check for baselinks. */\n-  if (TREE_CODE (fns) == TREE_LIST)\n+  if (BASELINK_P (fns))\n     fns = TREE_VALUE (fns);\n \n+  if (!is_overloaded_fn (fns))\n+    {\n+      cp_error (\"`%D' is not a function template\", fn);\n+      return error_mark_node;\n+    }\n+\n   for (; fns; fns = OVL_NEXT (fns))\n     {\n       tree tmpl;\n@@ -1851,13 +1857,34 @@ end_template_parm_list (parms)\n   int nparms;\n   tree parm;\n   tree saved_parmlist = make_tree_vec (list_length (parms));\n+  int seen_def_arg_p = 0;\n \n   current_template_parms\n     = tree_cons (build_int_2 (0, processing_template_decl),\n \t\t saved_parmlist, current_template_parms);\n \n-  for (parm = parms, nparms = 0; parm; parm = TREE_CHAIN (parm), nparms++)\n-    TREE_VEC_ELT (saved_parmlist, nparms) = parm;\n+  for (parm = parms, nparms = 0; \n+       parm; \n+       parm = TREE_CHAIN (parm), nparms++)\n+    {\n+      /* [temp.param]\n+\t \n+\t If a template-parameter has a default template-argument, all\n+\t subsequent template-parameters shall have a default\n+\t template-argument supplied.  */\n+      if (TREE_PURPOSE (parm))\n+\tseen_def_arg_p = 1;\n+      else if (seen_def_arg_p)\n+\t{\n+\t  /* Issue the error message.  */\n+\t  cp_error (\"no default argument for `%D'\", TREE_VALUE (parm));\n+\t  /* For better subsequent error-recovery, we indicate that\n+\t     there should have been a default argument.  */\n+\t  TREE_PURPOSE (parm) = error_mark_node;\n+\t}\n+\n+      TREE_VEC_ELT (saved_parmlist, nparms) = parm;\n+    }\n \n   --processing_template_parmlist;\n "}, {"sha": "159f190462dedf7e6a82e03f006ef06b73282e67", "filename": "gcc/testsuite/g++.old-deja/g++.oliva/template6.C", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91e490abe5516df0bfdbcb63e3f3ed7ce4fdc16c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Ftemplate6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91e490abe5516df0bfdbcb63e3f3ed7ce4fdc16c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Ftemplate6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Ftemplate6.C?ref=91e490abe5516df0bfdbcb63e3f3ed7ce4fdc16c", "patch": "@@ -5,7 +5,5 @@\n // by Alexandre Oliva <oliva@dcc.unicamp.br>\n // simplified from bug report by Meenaradchagan Vishnu <mvishnu@fore.com>\n \n-// crash test - XFAIL *-*-*\n-\n template <typename> struct foo {};\n-template <> void foo();\n+template <> void foo(); // ERROR - bad specialization"}]}