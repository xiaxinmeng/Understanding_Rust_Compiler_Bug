{"sha": "18b88412069f51433e1b4f440d3c035bfc7b5cca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThiODg0MTIwNjlmNTE0MzNlMWI0ZjQ0MGQzYzAzNWJmYzdiNWNjYQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-06-01T09:26:02Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-06-01T14:59:30Z"}, "message": "Revert patch that disabled exporting of global ranges.\n\nAndrew's last set of changes fixes the bootstrap problem on i686 when\nglobal ranges are exported from evrp.  The specific patch that fixes the\nproblem is 715914d3:\n\n\tAuthor: Andrew MacLeod <amacleod@redhat.com>\n\tDate:   Mon May 31 12:13:50 2021 -0400\n\n\t    Do not calculate new values when evaluating a debug statement.\n\n\t    Add a flag to enable/disable immediately improving poor values found during\n\t    cache propagation. Then disable it when processing debug statements.\n\nThis patch reverts commit 2364b58 now that exporting of global ranges works.\n\nTested on x86-64 Linux with default flags, and on i686 with the flags in\nthe PR: --enable-clocale=gnu --with-system-zlib --with-demangler-in-ld --with-fpmath=sse --enable-languages=c,c++ --enable-cet i686-linux --enable-bootstrap --with-fpmath=sse --disable-libcc1 --disable-libcilkrts --disable-libsanitizer\n\ngcc/ChangeLog:\n\n\t* gimple-ssa-evrp.c: Enable exporting of global ranges.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/Wstringop-overflow-55.c: Adjust for global ranges changes.\n\t* gcc.dg/pr80776-1.c: Same.", "tree": {"sha": "1d0578038ac910608d6f5154ff74c472be56c2f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d0578038ac910608d6f5154ff74c472be56c2f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18b88412069f51433e1b4f440d3c035bfc7b5cca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18b88412069f51433e1b4f440d3c035bfc7b5cca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18b88412069f51433e1b4f440d3c035bfc7b5cca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18b88412069f51433e1b4f440d3c035bfc7b5cca/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b195d84561a5c31108c7bbbd7c5b63fe3cebe35f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b195d84561a5c31108c7bbbd7c5b63fe3cebe35f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b195d84561a5c31108c7bbbd7c5b63fe3cebe35f"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "118d10365a006fd22530655305541eda89e62a1e", "filename": "gcc/gimple-ssa-evrp.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18b88412069f51433e1b4f440d3c035bfc7b5cca/gcc%2Fgimple-ssa-evrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18b88412069f51433e1b4f440d3c035bfc7b5cca/gcc%2Fgimple-ssa-evrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-evrp.c?ref=18b88412069f51433e1b4f440d3c035bfc7b5cca", "patch": "@@ -127,8 +127,7 @@ class rvrp_folder : public substitute_and_fold_engine\n     if (dump_file && (dump_flags & TDF_DETAILS))\n       m_ranger->dump (dump_file);\n \n-    // FIXME: Do not export ranges until PR100787 is fixed.\n-    //m_ranger->export_global_ranges ();\n+    m_ranger->export_global_ranges ();\n     disable_ranger (cfun);\n   }\n \n@@ -194,8 +193,7 @@ class hybrid_folder : public evrp_folder\n     if (dump_file && (dump_flags & TDF_DETAILS))\n       m_ranger->dump (dump_file);\n \n-    // FIXME: Do not export ranges until PR100787 is fixed.\n-    //m_ranger->export_global_ranges ();\n+    m_ranger->export_global_ranges ();\n     disable_ranger (cfun);\n   }\n "}, {"sha": "c3c2dbe06ddfbf74e2388dfc2c3b72e327cf8c65", "filename": "gcc/testsuite/gcc.dg/Wstringop-overflow-55.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18b88412069f51433e1b4f440d3c035bfc7b5cca/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-55.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18b88412069f51433e1b4f440d3c035bfc7b5cca/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-55.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-55.c?ref=18b88412069f51433e1b4f440d3c035bfc7b5cca", "patch": "@@ -66,15 +66,15 @@ void warn_ptrdiff_anti_range_add (ptrdiff_t i)\n {\n   i |= 1;\n \n-  char ca5[5];              // { dg-message \"at offset \\\\\\[1, 5]\" \"pr?????\" { xfail *-*-* } }\n+  char ca5[5];              // { dg-message \"at offset \\\\\\[1, 5]\" \"pr?????\" }\n   char *p0 = ca5;           // offset\n   char *p1 = p0 + i;        //  1-5\n   char *p2 = p1 + i;        //  2-5\n   char *p3 = p2 + i;        //  3-5\n   char *p4 = p3 + i;        //  4-5\n   char *p5 = p4 + i;        //   5\n \n-  memset (p5, 0, 5);        // { dg-warning \"writing 5 bytes into a region of size 0\" \"pr?????\" { xfail *-*-* } }\n+  memset (p5, 0, 5);        // { dg-warning \"writing 5 bytes into a region of size\" \"pr?????\" }\n \n   sink (p0, p1, p2, p3, p4, p5);\n }\n@@ -83,15 +83,15 @@ void warn_int_anti_range (int i)\n {\n   i |= 1;\n \n-  char ca5[5];              // { dg-message \"at offset \\\\\\[1, 5]\" \"pr?????\" { xfail *-*-* } }\n+  char ca5[5];              // { dg-message \"at offset \\\\\\[1, 5]\" \"pr?????\" }\n   char *p0 = ca5;           // offset\n   char *p1 = p0 + i;        //  1-5\n   char *p2 = p1 + i;        //  2-5\n   char *p3 = p2 + i;        //  3-5\n   char *p4 = p3 + i;        //  4-5\n   char *p5 = p4 + i;        //   5\n \n-  memset (p5, 0, 5);        // { dg-warning \"writing 5 bytes into a region of size 0\" \"pr?????\" { xfail *-*-* } }\n+  memset (p5, 0, 5);        // { dg-warning \"writing 5 bytes into a region of size\" \"pr?????\" }\n \n   sink (p0, p1, p2, p3, p4, p5);\n }"}, {"sha": "f3a120b67443a9e2cd3ebba5972736928bbeef5f", "filename": "gcc/testsuite/gcc.dg/pr80776-1.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18b88412069f51433e1b4f440d3c035bfc7b5cca/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80776-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18b88412069f51433e1b4f440d3c035bfc7b5cca/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80776-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80776-1.c?ref=18b88412069f51433e1b4f440d3c035bfc7b5cca", "patch": "@@ -17,7 +17,5 @@ Foo (void)\n     __builtin_unreachable ();\n   if (! (0 <= i && i <= 999999))\n     __builtin_unreachable ();\n-  /* The correctness bits for [E]VRP cannot handle chained conditionals\n-     when deciding to ignore a unreachable branch for setting SSA range info. */\n-  sprintf (number, \"%d\", i); /* { dg-bogus \"writing\" \"\" { xfail *-*-* } } */\n+  sprintf (number, \"%d\", i); /* { dg-bogus \"writing\" \"\" } */\n }"}]}