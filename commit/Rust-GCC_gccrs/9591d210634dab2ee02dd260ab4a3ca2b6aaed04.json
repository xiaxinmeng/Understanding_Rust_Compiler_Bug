{"sha": "9591d210634dab2ee02dd260ab4a3ca2b6aaed04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU5MWQyMTA2MzRkYWIyZWUwMmRkMjYwYWI0YTNjYTJiNmFhZWQwNA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-10-28T16:00:22Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-10-28T16:00:22Z"}, "message": "genrecog.c (write_switch): Output if before switch for DT_elt_zero_wide_safe.\n\n\t* genrecog.c (write_switch):  Output if before switch for\n\tDT_elt_zero_wide_safe.\n\nFrom-SVN: r46584", "tree": {"sha": "ff7b2325a411f5f6f92dcd4cfcad353cb3997764", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff7b2325a411f5f6f92dcd4cfcad353cb3997764"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9591d210634dab2ee02dd260ab4a3ca2b6aaed04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9591d210634dab2ee02dd260ab4a3ca2b6aaed04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9591d210634dab2ee02dd260ab4a3ca2b6aaed04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9591d210634dab2ee02dd260ab4a3ca2b6aaed04/comments", "author": null, "committer": null, "parents": [{"sha": "d506f6496fa87dcfafb6c4b5fc41d00e8ba24d37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d506f6496fa87dcfafb6c4b5fc41d00e8ba24d37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d506f6496fa87dcfafb6c4b5fc41d00e8ba24d37"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "dfbbf9d2c0cef5d0b72a519420c1c3ae0d55d9f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9591d210634dab2ee02dd260ab4a3ca2b6aaed04/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9591d210634dab2ee02dd260ab4a3ca2b6aaed04/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9591d210634dab2ee02dd260ab4a3ca2b6aaed04", "patch": "@@ -1,3 +1,8 @@\n+Sun Oct 28 16:48:09 CET 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* genrecog.c (write_switch):  Output if before switch for\n+\tDT_elt_zero_wide_safe.\n+\n 2001-10-28  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (toplev.o, halfpic.o): Depend on halfpic.h"}, {"sha": "49afac9bb91f581267aa7d1977fab9da6c888f9d", "filename": "gcc/genrecog.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9591d210634dab2ee02dd260ab4a3ca2b6aaed04/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9591d210634dab2ee02dd260ab4a3ca2b6aaed04/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=9591d210634dab2ee02dd260ab4a3ca2b6aaed04", "patch": "@@ -1909,11 +1909,19 @@ write_switch (start, depth)\n \t   || type == DT_elt_one_int\n \t   || type == DT_elt_zero_wide_safe)\n     {\n+      const char *indent = \"\";\n       /* Pmode may not be a compile-time constant.  */\n       if (type == DT_mode && p->tests->u.mode == Pmode)\n \treturn p;\n \n-      printf (\"  switch (\");\n+      /* We cast switch parameter to integer, so we must ensure that the value\n+\t fits.  */\n+      if (type == DT_elt_zero_wide_safe)\n+\t{\n+\t  indent = \"  \";\n+\t  printf(\"  if ((int) XWINT (x%d, 0) == XWINT (x%d, 0))\\n\", depth, depth);\n+\t}\n+      printf (\"%s  switch (\", indent);\n       switch (type)\n \t{\n \tcase DT_mode:\n@@ -1936,7 +1944,7 @@ write_switch (start, depth)\n \tdefault:\n \t  abort ();\n \t}\n-      printf (\")\\n    {\\n\");\n+      printf (\")\\n%s    {\\n\", indent);\n \n       do\n \t{\n@@ -1955,7 +1963,7 @@ write_switch (start, depth)\n \t  if (p != start && p->need_label && needs_label == NULL)\n \t    needs_label = p;\n \n-\t  printf (\"    case \");\n+\t  printf (\"%s    case \", indent);\n \t  switch (type)\n \t    {\n \t    case DT_mode:\n@@ -1973,15 +1981,16 @@ write_switch (start, depth)\n \t    default:\n \t      abort ();\n \t    }\n-\t  printf (\":\\n      goto L%d;\\n\", p->success.first->number);\n+\t  printf (\":\\n%s      goto L%d;\\n\", indent, p->success.first->number);\n \t  p->success.first->need_label = 1;\n \n \t  p = p->next;\n \t}\n       while (p && p->tests->type == type && !p->tests->next);\n \n     case_done:\n-      printf (\"    default:\\n      break;\\n    }\\n\");\n+      printf (\"%s    default:\\n%s      break;\\n%s    }\\n\",\n+\t      indent, indent, indent);\n \n       return needs_label != NULL ? needs_label : p;\n     }"}]}