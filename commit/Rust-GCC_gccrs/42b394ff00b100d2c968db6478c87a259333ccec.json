{"sha": "42b394ff00b100d2c968db6478c87a259333ccec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJiMzk0ZmYwMGIxMDBkMmM5NjhkYjY0NzhjODdhMjU5MzMzY2NlYw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2018-01-16T14:47:49Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-01-16T14:47:49Z"}, "message": "Move pa.h FUNCTION_ARG_SIZE to pa.c (PR83858)\n\nThe port-local FUNCTION_ARG_SIZE:\n\n  ((((MODE) != BLKmode \\\n     ? (HOST_WIDE_INT) GET_MODE_SIZE (MODE) \\\n     : int_size_in_bytes (TYPE)) + UNITS_PER_WORD - 1) / UNITS_PER_WORD)\n\nis used by code in pa.c and by ASM_DECLARE_FUNCTION_NAME in som.h.\nTreating GET_MODE_SIZE as a constant is OK for the former but not\nthe latter, which is used in target-independent code.  This caused\na build failure on hppa2.0w-hp-hpux11.11.\n\n2018-01-16  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/\n\tPR target/83858\n\t* config/pa/pa.h (FUNCTION_ARG_SIZE): Delete.\n\t* config/pa/pa-protos.h (pa_function_arg_size): Declare.\n\t* config/pa/som.h (ASM_DECLARE_FUNCTION_NAME): Use\n\tpa_function_arg_size instead of FUNCTION_ARG_SIZE.\n\t* config/pa/pa.c (pa_function_arg_advance): Likewise.\n\t(pa_function_arg, pa_arg_partial_bytes): Likewise.\n\t(pa_function_arg_size): New function.\n\nFrom-SVN: r256744", "tree": {"sha": "1f87d503f8f4e3964fd917081808878aa74dc891", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f87d503f8f4e3964fd917081808878aa74dc891"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42b394ff00b100d2c968db6478c87a259333ccec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42b394ff00b100d2c968db6478c87a259333ccec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42b394ff00b100d2c968db6478c87a259333ccec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42b394ff00b100d2c968db6478c87a259333ccec/comments", "author": null, "committer": null, "parents": [{"sha": "859116618eb4ca3b8727fc401eddeb83c5b7866e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/859116618eb4ca3b8727fc401eddeb83c5b7866e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/859116618eb4ca3b8727fc401eddeb83c5b7866e"}], "stats": {"total": 45, "additions": 30, "deletions": 15}, "files": [{"sha": "abe3295e61e9756e67ff61120a418f7a741f8509", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42b394ff00b100d2c968db6478c87a259333ccec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42b394ff00b100d2c968db6478c87a259333ccec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42b394ff00b100d2c968db6478c87a259333ccec", "patch": "@@ -1,3 +1,14 @@\n+2018-01-16  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\tPR target/83858\n+\t* config/pa/pa.h (FUNCTION_ARG_SIZE): Delete.\n+\t* config/pa/pa-protos.h (pa_function_arg_size): Declare.\n+\t* config/pa/som.h (ASM_DECLARE_FUNCTION_NAME): Use\n+\tpa_function_arg_size instead of FUNCTION_ARG_SIZE.\n+\t* config/pa/pa.c (pa_function_arg_advance): Likewise.\n+\t(pa_function_arg, pa_arg_partial_bytes): Likewise.\n+\t(pa_function_arg_size): New function.\n+\n 2018-01-16  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* fold-const.c (fold_ternary_loc): Construct the vec_perm_indices"}, {"sha": "79685bae93a355f53ae2c3d2d2c7501185821119", "filename": "gcc/config/pa/pa-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42b394ff00b100d2c968db6478c87a259333ccec/gcc%2Fconfig%2Fpa%2Fpa-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42b394ff00b100d2c968db6478c87a259333ccec/gcc%2Fconfig%2Fpa%2Fpa-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-protos.h?ref=42b394ff00b100d2c968db6478c87a259333ccec", "patch": "@@ -107,5 +107,6 @@ extern void pa_asm_output_aligned_local (FILE *, const char *,\n \t\t\t\t\t unsigned int);\n extern void pa_hpux_asm_output_external (FILE *, tree, const char *);\n extern HOST_WIDE_INT pa_initial_elimination_offset (int, int);\n+extern HOST_WIDE_INT pa_function_arg_size (machine_mode, const_tree);\n \n extern const int pa_magic_milli[];"}, {"sha": "8e7b11aab45e8416788caaaa02e837bd63d99f2d", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42b394ff00b100d2c968db6478c87a259333ccec/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42b394ff00b100d2c968db6478c87a259333ccec/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=42b394ff00b100d2c968db6478c87a259333ccec", "patch": "@@ -9485,7 +9485,7 @@ pa_function_arg_advance (cumulative_args_t cum_v, machine_mode mode,\n \t\t\t const_tree type, bool named ATTRIBUTE_UNUSED)\n {\n   CUMULATIVE_ARGS *cum = get_cumulative_args (cum_v);\n-  int arg_size = FUNCTION_ARG_SIZE (mode, type);\n+  int arg_size = pa_function_arg_size (mode, type);\n \n   cum->nargs_prototype--;\n   cum->words += (arg_size\n@@ -9517,7 +9517,7 @@ pa_function_arg (cumulative_args_t cum_v, machine_mode mode,\n   if (mode == VOIDmode)\n     return NULL_RTX;\n \n-  arg_size = FUNCTION_ARG_SIZE (mode, type);\n+  arg_size = pa_function_arg_size (mode, type);\n \n   /* If this arg would be passed partially or totally on the stack, then\n      this routine should return zero.  pa_arg_partial_bytes will\n@@ -9724,10 +9724,10 @@ pa_arg_partial_bytes (cumulative_args_t cum_v, machine_mode mode,\n   if (!TARGET_64BIT)\n     return 0;\n \n-  if (FUNCTION_ARG_SIZE (mode, type) > 1 && (cum->words & 1))\n+  if (pa_function_arg_size (mode, type) > 1 && (cum->words & 1))\n     offset = 1;\n \n-  if (cum->words + offset + FUNCTION_ARG_SIZE (mode, type) <= max_arg_words)\n+  if (cum->words + offset + pa_function_arg_size (mode, type) <= max_arg_words)\n     /* Arg fits fully into registers.  */\n     return 0;\n   else if (cum->words + offset >= max_arg_words)\n@@ -10835,4 +10835,16 @@ pa_starting_frame_offset (void)\n   return 8;\n }\n \n+/* Figure out the size in words of the function argument.  The size\n+   returned by this function should always be greater than zero because\n+   we pass variable and zero sized objects by reference.  */\n+\n+HOST_WIDE_INT\n+pa_function_arg_size (machine_mode mode, const_tree type)\n+{\n+  if (mode != BLKmode)\n+    return GET_MODE_SIZE (mode);\n+  return CEIL (int_size_in_bytes (type), UNITS_PER_WORD);\n+}\n+\n #include \"gt-pa.h\""}, {"sha": "243641e13b51571db5a15ea3330b40c6ea49a88c", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42b394ff00b100d2c968db6478c87a259333ccec/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42b394ff00b100d2c968db6478c87a259333ccec/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=42b394ff00b100d2c968db6478c87a259333ccec", "patch": "@@ -592,15 +592,6 @@ struct hppa_args {int words, nargs_prototype, incoming, indirect; };\n   (CUM).indirect = 0,\t\t\t\t\\\n   (CUM).nargs_prototype = 1000\n \n-/* Figure out the size in words of the function argument.  The size\n-   returned by this macro should always be greater than zero because\n-   we pass variable and zero sized objects by reference.  */\n-\n-#define FUNCTION_ARG_SIZE(MODE, TYPE)\t\\\n-  ((((MODE) != BLKmode \\\n-     ? (HOST_WIDE_INT) GET_MODE_SIZE (MODE) \\\n-     : int_size_in_bytes (TYPE)) + UNITS_PER_WORD - 1) / UNITS_PER_WORD)\n-\n /* Determine where to put an argument to a function.\n    Value is zero to push the argument on the stack,\n    or a hard register in which to store the argument."}, {"sha": "eea23cc2243d4fe7094e302c9d2231f987d4be3e", "filename": "gcc/config/pa/som.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42b394ff00b100d2c968db6478c87a259333ccec/gcc%2Fconfig%2Fpa%2Fsom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42b394ff00b100d2c968db6478c87a259333ccec/gcc%2Fconfig%2Fpa%2Fsom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fsom.h?ref=42b394ff00b100d2c968db6478c87a259333ccec", "patch": "@@ -136,8 +136,8 @@ do {\t\t\t\t\t\t\t\t\\\n \t\t else\t\t\t\t\t\t\t\\\n \t\t   {\t\t\t\t\t\t\t\\\n \t\t     int arg_size =\t\t\t\t\t\\\n-\t\t       FUNCTION_ARG_SIZE (TYPE_MODE (DECL_ARG_TYPE (parm)),\\\n-\t\t\t\t\t  DECL_ARG_TYPE (parm));\t\\\n+\t\t       pa_function_arg_size (TYPE_MODE (DECL_ARG_TYPE (parm)),\\\n+\t\t\t\t\t     DECL_ARG_TYPE (parm));\t\\\n \t\t     /* Passing structs by invisible reference uses\t\\\n \t\t\tone general register.  */\t\t\t\\\n \t\t     if (arg_size > 2\t\t\t\t\t\\"}]}