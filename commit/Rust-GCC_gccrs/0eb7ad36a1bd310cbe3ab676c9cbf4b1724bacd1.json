{"sha": "0eb7ad36a1bd310cbe3ab676c9cbf4b1724bacd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGViN2FkMzZhMWJkMzEwY2JlM2FiNjc2YzljYmY0YjE3MjRiYWNkMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-23T21:20:31Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-23T21:20:31Z"}, "message": "(combine_givs): When combining a DEST_REG giv with its only use,\n\nalways set the benefit of the combined giv to that of the DEST_REG giv.\n\nFrom-SVN: r13012", "tree": {"sha": "2a5429270353627090e2f74585b00d30a7e55bea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a5429270353627090e2f74585b00d30a7e55bea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0eb7ad36a1bd310cbe3ab676c9cbf4b1724bacd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eb7ad36a1bd310cbe3ab676c9cbf4b1724bacd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eb7ad36a1bd310cbe3ab676c9cbf4b1724bacd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eb7ad36a1bd310cbe3ab676c9cbf4b1724bacd1/comments", "author": null, "committer": null, "parents": [{"sha": "a80586cc2a2c1f718c38dbe38e38b18b5b5469bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a80586cc2a2c1f718c38dbe38e38b18b5b5469bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a80586cc2a2c1f718c38dbe38e38b18b5b5469bf"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "ab20d99f3ee233f15e0c3d98273b97e8b98674d8", "filename": "gcc/loop.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eb7ad36a1bd310cbe3ab676c9cbf4b1724bacd1/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eb7ad36a1bd310cbe3ab676c9cbf4b1724bacd1/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=0eb7ad36a1bd310cbe3ab676c9cbf4b1724bacd1", "patch": "@@ -5682,14 +5682,17 @@ combine_givs (bl)\n \t\tg1->combined_with = 1;\n \n \t\t/* If one of these givs is a DEST_REG that was only used\n-\t\t   once, by the other giv, this is actually a single use.  */\n-\t\tif ((g1->giv_type != DEST_REG\n-\t\t     || n_times_used[REGNO (g1->dest_reg)] != 1\n-\t\t     || ! reg_mentioned_p (g1->dest_reg, PATTERN (g2->insn)))\n-\t\t    && (g2->giv_type != DEST_REG\n-\t\t\t|| n_times_used[REGNO (g2->dest_reg)] != 1\n-\t\t\t|| ! reg_mentioned_p (g2->dest_reg,\n-\t\t\t\t\t      PATTERN (g1->insn))))\n+\t\t   once, by the other giv, this is actually a single use.\n+\t\t   The DEST_REG has the correct cost, while the other giv\n+\t\t   counts the REG use too often.  */\n+\t\tif (g2->giv_type == DEST_REG\n+\t\t    && n_times_used[REGNO (g2->dest_reg)] == 1\n+\t\t    && reg_mentioned_p (g2->dest_reg, PATTERN (g1->insn)))\n+\t\t  g1->benefit = g2->benefit;\n+\t\telse if (g1->giv_type != DEST_REG\n+\t\t\t || n_times_used[REGNO (g1->dest_reg)] != 1\n+\t\t\t || ! reg_mentioned_p (g1->dest_reg,\n+\t\t\t\t\t       PATTERN (g2->insn)))\n \t\t  {\n \t\t    g1->benefit += g2->benefit;\n \t\t    g1->times_used += g2->times_used;"}]}