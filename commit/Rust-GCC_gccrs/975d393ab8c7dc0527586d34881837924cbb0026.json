{"sha": "975d393ab8c7dc0527586d34881837924cbb0026", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc1ZDM5M2FiOGM3ZGMwNTI3NTg2ZDM0ODgxODM3OTI0Y2JiMDAyNg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-01-03T21:13:29Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-01-03T21:13:29Z"}, "message": "gencodes.c (output_predicate_decls): New function.\n\n* gencodes.c (output_predicate_decls): New function.\n(main): Call it.\n* machmode.h (GET_MODE_MASK): Arrange for it to be defined\neven if it is not the first time machmode.h is #included.\n* config/sh/sh.c (fpul_operand): Declare MODE argument.\n* tm.texi (PREDICATE_CODES): Document predicate declarations.\n* gcc.texi (Copyright): Added 2001.\n\nFrom-SVN: r38673", "tree": {"sha": "4db5e76c3dc4ba9bc9acb3825530f9e397ea33bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4db5e76c3dc4ba9bc9acb3825530f9e397ea33bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/975d393ab8c7dc0527586d34881837924cbb0026", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/975d393ab8c7dc0527586d34881837924cbb0026", "html_url": "https://github.com/Rust-GCC/gccrs/commit/975d393ab8c7dc0527586d34881837924cbb0026", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/975d393ab8c7dc0527586d34881837924cbb0026/comments", "author": null, "committer": null, "parents": [{"sha": "03dc032560d43abc8a9867472fdb22cbf0c6b9c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03dc032560d43abc8a9867472fdb22cbf0c6b9c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03dc032560d43abc8a9867472fdb22cbf0c6b9c7"}], "stats": {"total": 62, "additions": 55, "deletions": 7}, "files": [{"sha": "7c91711fa5861e831a606c99cc73fd3981ab56f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975d393ab8c7dc0527586d34881837924cbb0026/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975d393ab8c7dc0527586d34881837924cbb0026/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=975d393ab8c7dc0527586d34881837924cbb0026", "patch": "@@ -1,3 +1,13 @@\n+2001-01-03  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* gencodes.c (output_predicate_decls): New function.\n+\t(main): Call it.\n+\t* machmode.h (GET_MODE_MASK): Arrange for it to be defined\n+\teven if it is not the first time machmode.h is #included.\n+\t* config/sh/sh.c (fpul_operand): Declare MODE argument.\n+\t* tm.texi (PREDICATE_CODES): Document predicate declarations.\n+\t* gcc.texi (Copyright): Added 2001.\n+\n 2001-01-03  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* c-common.c (c_common_lang_init): New function.  Warn if format"}, {"sha": "ec88c59a6fa3ce0c870af9ed92b851eda6506ac9", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975d393ab8c7dc0527586d34881837924cbb0026/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975d393ab8c7dc0527586d34881837924cbb0026/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=975d393ab8c7dc0527586d34881837924cbb0026", "patch": "@@ -1,5 +1,5 @@\n /* Output routines for GCC for Hitachi Super-H.\n-   Copyright (C) 1993, 1994, 1995, 1997, 1997, 1998, 1999, 2000\n+   Copyright (C) 1993, 1994, 1995, 1997, 1997, 1998, 1999, 2000, 2001\n    Free Software Foundation, Inc.\n    Contributed by Steve Chamberlain (sac@cygnus.com).\n    Improved by Jim Wilson (wilson@cygnus.com). \n@@ -4793,6 +4793,7 @@ fpscr_operand (op, mode)\n int\n fpul_operand (op, mode)\n      rtx op;\n+     enum machine_mode mode;\n {\n   return (GET_CODE (op) == REG\n \t  && (REGNO (op) == FPUL_REG || REGNO (op) >= FIRST_PSEUDO_REGISTER)"}, {"sha": "7348cd7cf3f9a53b03032b38db5cc3f414b8e73f", "filename": "gcc/gcc.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975d393ab8c7dc0527586d34881837924cbb0026/gcc%2Fgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975d393ab8c7dc0527586d34881837924cbb0026/gcc%2Fgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.texi?ref=975d393ab8c7dc0527586d34881837924cbb0026", "patch": "@@ -100,7 +100,8 @@ Published by the Free Software Foundation@*\n 59 Temple Place - Suite 330@*\n Boston, MA 02111-1307 USA\n @sp 1\n-Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n+Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n+1999, 2000, 2001 Free Software Foundation, Inc.\n @sp 1\n Permission is granted to make and distribute verbatim copies of\n this manual provided the copyright notice and this permission notice"}, {"sha": "2df6f302497296dfc534e5c07471f809839ec086", "filename": "gcc/gencodes.c", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975d393ab8c7dc0527586d34881837924cbb0026/gcc%2Fgencodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975d393ab8c7dc0527586d34881837924cbb0026/gcc%2Fgencodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgencodes.c?ref=975d393ab8c7dc0527586d34881837924cbb0026", "patch": "@@ -2,7 +2,7 @@\n    - some macros CODE_FOR_... giving the insn_code_number value\n    for each of the defined standard insn names.\n    Copyright (C) 1987, 1991, 1995, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -32,6 +32,7 @@ Boston, MA 02111-1307, USA.  */\n static int insn_code_number;\n \n static void gen_insn PARAMS ((rtx));\n+static void output_predicate_decls PARAMS ((void));\n static int print_md_constant PARAMS ((void **, void *));\n \n static void\n@@ -46,6 +47,30 @@ gen_insn (insn)\n \t    insn_code_number);\n }\n \n+/* Print out declarations for all predicates mentioned in\n+   PREDICATE_CODES.  */\n+\n+static void\n+output_predicate_decls ()\n+{\n+#ifdef PREDICATE_CODES\n+  static struct {\n+    const char *name;\n+    RTX_CODE codes[NUM_RTX_CODE];\n+  } *p, predicate[] = {\n+    PREDICATE_CODES\n+    {NULL, {}}\n+  };\n+  \n+  putc ('\\n', stdout);\n+  puts (\"struct rtx_def;\\n#include \\\"machmode.h\\\"\\n\");\n+  for (p = predicate; p->name; p++)\n+    printf (\"extern int %s PARAMS ((struct rtx_def *, enum machine_mode));\\n\",\n+\t    p->name);\n+  putc ('\\n', stdout);\n+#endif\n+}\n+\n extern int main PARAMS ((int, char **));\n \n int\n@@ -91,6 +116,8 @@ from the machine description file `md'.  */\\n\\n\");\n \n   traverse_md_constants (print_md_constant, stdout);\n \n+  output_predicate_decls ();\n+\n   printf (\"\\n#endif /* MAX_INSN_CODE */\\n\");\n \n   fflush (stdout);"}, {"sha": "230d8b0596a97474da0737bf1673808d00708a3d", "filename": "gcc/machmode.h", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975d393ab8c7dc0527586d34881837924cbb0026/gcc%2Fmachmode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975d393ab8c7dc0527586d34881837924cbb0026/gcc%2Fmachmode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmachmode.h?ref=975d393ab8c7dc0527586d34881837924cbb0026", "patch": "@@ -1,5 +1,5 @@\n /* Machine mode definitions for GNU C-Compiler; included by rtl.h and tree.h.\n-   Copyright (C) 1991, 1993, 1994, 1996, 1998, 1999, 2000\n+   Copyright (C) 1991, 1993, 1994, 1996, 1998, 1999, 2000, 2001\n    Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n@@ -96,7 +96,9 @@ extern const unsigned int mode_unit_size[];\n extern const unsigned int mode_bitsize[];\n #define GET_MODE_BITSIZE(MODE)  (mode_bitsize[(int) (MODE)])\n \n-#ifdef HOST_WIDE_INT\n+#endif /* not HAVE_MACHINE_MODES */\n+\n+#if defined HOST_WIDE_INT && ! defined GET_MODE_MASK\n \n /* Get a bitmask containing 1 for all bits in a word\n    that fit within mode MODE.  */\n@@ -105,7 +107,10 @@ extern const unsigned HOST_WIDE_INT mode_mask_array[];\n \n #define GET_MODE_MASK(MODE) mode_mask_array[(int) (MODE)]\n \n-#endif /* HOST_WIDE_INT */\n+#endif /* defined (HOST_WIDE_INT) && ! defined GET_MODE_MASK */\n+\n+#if ! defined GET_MODE_WIDER_MODE || ! defined GET_MODE_ALIGNMENT \\\n+    || ! defined GET_CLASS_NARROWEST_MODE\n \n /* Get the next wider natural mode (eg, QI -> HI -> SI -> DI -> TI).  */\n \n@@ -153,4 +158,5 @@ extern enum machine_mode byte_mode;\n extern enum machine_mode word_mode;\n extern enum machine_mode ptr_mode;\n \n-#endif /* not HAVE_MACHINE_MODES */\n+#endif /* ! defined GET_MODE_WIDER_MODE || ! defined GET_MODE_ALIGNMENT\n+\t  || ! defined GET_CLASS_NARROWEST_MODE */"}, {"sha": "59b03eacb5b6bd44523e80e13f658acca360597e", "filename": "gcc/tm.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975d393ab8c7dc0527586d34881837924cbb0026/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975d393ab8c7dc0527586d34881837924cbb0026/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=975d393ab8c7dc0527586d34881837924cbb0026", "patch": "@@ -7576,6 +7576,9 @@ thus speeding up the compiler.  The most important predicates to include\n in the list specified by this macro are those used in the most insn\n patterns.\n \n+For each predicate function named in @var{PREDICATE_CODES}, a\n+declaration will be generated in @file{insn-codes.h}.\n+\n @item SPECIAL_MODE_PREDICATES\n @findex SPECIAL_MODE_PREDICATES\n Define this if you have special predicates that know special things"}]}