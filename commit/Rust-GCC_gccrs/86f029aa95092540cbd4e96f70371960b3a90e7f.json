{"sha": "86f029aa95092540cbd4e96f70371960b3a90e7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZmMDI5YWE5NTA5MjU0MGNiZDRlOTZmNzAzNzE5NjBiM2E5MGU3Zg==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-11-29T18:54:06Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-11-29T18:54:06Z"}, "message": "[multiple changes]\n\n2004-11-29  Daniel Jacobowitz  <dan@codesourcery.com>\n\n\tPR c/7544\n\t* Makefile.in (c-lang.o): Update dependencies.\n\t* c-lang.c: Include \"c-pragma.h\".\n\t(finish_file): Call maybe_apply_pending_pragma_weaks.\n\t* c-pragma.c (maybe_apply_pending_pragma_weaks): New function.\n\t* c-pragma.h (maybe_apply_pending_pragma_weaks): New prototype.\n\ncp:\n2004-11-29  Daniel Jacobowitz  <dan@codesourcery.com>\n\n\t* Make-lang.in (cp/decl2.o): Update dependencies.\n\t* decl2.c (finish_file): Call maybe_apply_pending_pragma_weaks.\n\nobjc:\n2004-11-29  Joseph Myers  <joseph@codesourcery.com>\n\n\t* Make-lang.in (objc/objc-act.o): Update dependencies.\n\t* objc-act.c (objc_finish_file): Call\n\tmaybe_apply_pending_pragma_weaks if not OBJCPLUS.\n\ntestsuite:\n2004-11-29  Joseph Myers  <joseph@codesourcery.com>\n\n\t* g++.dg/ext/weak1.C, gcc.dg/weak/weak-10.c, objc.dg/weak-1.m: New\n\ttests.\n\nFrom-SVN: r91479", "tree": {"sha": "09efe121e3a286e0aae7308c8245228e8c339428", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09efe121e3a286e0aae7308c8245228e8c339428"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86f029aa95092540cbd4e96f70371960b3a90e7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86f029aa95092540cbd4e96f70371960b3a90e7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86f029aa95092540cbd4e96f70371960b3a90e7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86f029aa95092540cbd4e96f70371960b3a90e7f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0c2dee9fbfb3ca4b768c17f14afcb89086c0eae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0c2dee9fbfb3ca4b768c17f14afcb89086c0eae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0c2dee9fbfb3ca4b768c17f14afcb89086c0eae"}], "stats": {"total": 116, "additions": 113, "deletions": 3}, "files": [{"sha": "8a2c5f84f529b257920ffd0f36241059c38a3d44", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86f029aa95092540cbd4e96f70371960b3a90e7f", "patch": "@@ -1,3 +1,12 @@\n+2004-11-29  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\tPR c/7544\n+\t* Makefile.in (c-lang.o): Update dependencies.\n+\t* c-lang.c: Include \"c-pragma.h\".\n+\t(finish_file): Call maybe_apply_pending_pragma_weaks.\n+\t* c-pragma.c (maybe_apply_pending_pragma_weaks): New function.\n+\t* c-pragma.h (maybe_apply_pending_pragma_weaks): New prototype.\n+\n 2004-11-29  Richard Henderson  <rth@redhat.com>\n \n \tPR target/17224"}, {"sha": "09195be8167321f470d321c2c6a7cb7bcd0c82c7", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=86f029aa95092540cbd4e96f70371960b3a90e7f", "patch": "@@ -1380,7 +1380,7 @@ c-typeck.o : c-typeck.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(\n c-lang.o : c-lang.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n     $(C_TREE_H) $(C_PRETTY_PRINT_H) $(DIAGNOSTIC_H) \\\n     $(GGC_H) langhooks.h $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-c.h \\\n-    c-objc-common.h\n+    c-objc-common.h c-pragma.h\n stub-objc.o : stub-objc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n     $(GGC_H) $(C_COMMON_H)\n c-lex.o : c-lex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\"}, {"sha": "15524480c471b566e18b90a696c8638842d4b043", "filename": "gcc/c-lang.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=86f029aa95092540cbd4e96f70371960b3a90e7f", "patch": "@@ -34,6 +34,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"diagnostic.h\"\n #include \"c-pretty-print.h\"\n #include \"c-objc-common.h\"\n+#include \"c-pragma.h\"\n \n enum c_language_kind c_language = clk_c;\n \n@@ -88,6 +89,7 @@ const char *const tree_code_name[] = {\n void\n finish_file (void)\n {\n+  maybe_apply_pending_pragma_weaks ();\n }\n \n #include \"gtype-c.h\""}, {"sha": "cc1dd280359a59c7e3855c5b3857429426bf4c3b", "filename": "gcc/c-pragma.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pragma.c?ref=86f029aa95092540cbd4e96f70371960b3a90e7f", "patch": "@@ -294,6 +294,33 @@ maybe_apply_pragma_weak (tree decl)\n       }\n }\n \n+/* Process all \"#pragma weak A = B\" directives where we have not seen\n+   a decl for A.  */\n+void\n+maybe_apply_pending_pragma_weaks (void)\n+{\n+  tree *p, t, alias_id, id, decl, *next;\n+\n+  for (p = &pending_weaks; (t = *p) ; p = next)\n+    {\n+      next = &TREE_CHAIN (t);\n+      alias_id = TREE_PURPOSE (t);\n+      id = TREE_VALUE (t);\n+\n+      if (TREE_VALUE (t) == NULL)\n+\tcontinue;\n+\n+      decl = build_decl (FUNCTION_DECL, alias_id, default_function_type);\n+\n+      DECL_ARTIFICIAL (decl) = 1;\n+      TREE_PUBLIC (decl) = 1;\n+      DECL_EXTERNAL (decl) = 1;\n+      DECL_WEAK (decl) = 1;\n+\n+      assemble_alias (decl, id);\n+    }\n+}\n+\n /* #pragma weak name [= value] */\n static void\n handle_pragma_weak (cpp_reader * ARG_UNUSED (dummy))\n@@ -330,6 +357,11 @@ void\n maybe_apply_pragma_weak (tree ARG_UNUSED (decl))\n {\n }\n+\n+void\n+maybe_apply_pending_pragma_weaks (void)\n+{\n+}\n #endif /* HANDLE_PRAGMA_WEAK */\n \n /* GCC supports two #pragma directives for renaming the external"}, {"sha": "f7f609c407fbb206ecb7ead5f7b7d7843452c2d5", "filename": "gcc/c-pragma.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Fc-pragma.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Fc-pragma.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pragma.h?ref=86f029aa95092540cbd4e96f70371960b3a90e7f", "patch": "@@ -60,6 +60,7 @@ extern void c_register_pragma (const char *, const char *,\n extern void c_register_pragma_with_expansion (const char *, const char *,\n \t\t\t\t\t      void (*) (struct cpp_reader *));\n extern void maybe_apply_pragma_weak (tree);\n+extern void maybe_apply_pending_pragma_weaks (void);\n extern tree maybe_apply_renaming_pragma (tree, tree);\n extern void add_to_renaming_pragma_list (tree, tree);\n "}, {"sha": "1a1dcbeb87b993fa33ad7298fcf6221cfac2d27f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=86f029aa95092540cbd4e96f70371960b3a90e7f", "patch": "@@ -1,3 +1,9 @@\n+2004-11-29  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\tPR c/7544\n+\t* Make-lang.in (cp/decl2.o): Update dependencies.\n+\t* decl2.c (finish_file): Call maybe_apply_pending_pragma_weaks.\n+\n 2004-11-29  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/18652"}, {"sha": "8757116648f7feabc6bf38997a0225668dc66ccb", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=86f029aa95092540cbd4e96f70371960b3a90e7f", "patch": "@@ -232,7 +232,8 @@ cp/decl.o: cp/decl.c $(CXX_TREE_H) $(TM_H) flags.h cp/decl.h \\\n   cp/operators.def $(TM_P_H) tree-inline.h diagnostic.h c-pragma.h \\\n   debug.h gt-cp-decl.h timevar.h $(TREE_FLOW_H)\n cp/decl2.o: cp/decl2.c $(CXX_TREE_H) $(TM_H) flags.h cp/decl.h $(EXPR_H) \\\n-  output.h except.h toplev.h $(RTL_H) c-common.h gt-cp-decl2.h cgraph.h\n+  output.h except.h toplev.h $(RTL_H) c-common.h gt-cp-decl2.h cgraph.h \\\n+  c-pragma.h\n cp/cp-objcp-common.o : cp/cp-objcp-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(TREE_H) $(CXX_TREE_H) c-common.h toplev.h langhooks.h \\\n   $(LANGHOOKS_DEF_H) $(DIAGNOSTIC_H) debug.h $(CXX_PRETTY_PRINT_H) \\"}, {"sha": "88fba4f55e8b44e30f9c6888390cb9c1ff341bb1", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=86f029aa95092540cbd4e96f70371960b3a90e7f", "patch": "@@ -48,6 +48,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"tree-mudflap.h\"\n #include \"cgraph.h\"\n #include \"tree-inline.h\"\n+#include \"c-pragma.h\"\n \n extern cpp_reader *parse_in;\n \n@@ -3062,6 +3063,9 @@ cp_finish_file (void)\n   if (priority_info_map)\n     splay_tree_delete (priority_info_map);\n \n+  /* Generate any missing aliases.  */\n+  maybe_apply_pending_pragma_weaks ();\n+\n   /* We're done with static constructors, so we can go back to \"C++\"\n      linkage now.  */\n   pop_lang_context ();"}, {"sha": "e745f41f9d7372433b970bead08a69f5c4073052", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=86f029aa95092540cbd4e96f70371960b3a90e7f", "patch": "@@ -1,3 +1,10 @@\n+2004-11-29  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/7544\n+\t* Make-lang.in (objc/objc-act.o): Update dependencies.\n+\t* objc-act.c (objc_finish_file): Call\n+\tmaybe_apply_pending_pragma_weaks if not OBJCPLUS.\n+\n 2004-11-09  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR objc/18406"}, {"sha": "08909437aa6848ec4b147f633f486a7316cbd0a0", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=86f029aa95092540cbd4e96f70371960b3a90e7f", "patch": "@@ -73,7 +73,7 @@ objc/objc-act.o : objc/objc-act.c \\\n    $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) $(TM_P_H) \\\n    $(EXPR_H) $(TARGET_H) $(C_TREE_H) diagnostic.h toplev.h flags.h \\\n    objc/objc-act.h input.h function.h output.h debug.h langhooks.h \\\n-   $(LANGHOOKS_DEF_H) $(HASHTAB_H) gt-objc-objc-act.h\n+   $(LANGHOOKS_DEF_H) $(HASHTAB_H) c-pragma.h gt-objc-objc-act.h\n \n objc.srcextra: objc/objc-parse.c objc/objc-parse.y\n \t-cp -p $^ $(srcdir)/objc"}, {"sha": "2da313d2983777a894edaa913532669a872a0186", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=86f029aa95092540cbd4e96f70371960b3a90e7f", "patch": "@@ -55,6 +55,7 @@ Boston, MA 02111-1307, USA.  */\n #endif\n \n #include \"c-common.h\"\n+#include \"c-pragma.h\"\n #include \"flags.h\"\n #include \"langhooks.h\"\n #include \"objc-act.h\"\n@@ -602,6 +603,8 @@ objc_finish_file (void)\n \n #ifdef OBJCPLUS\n   cp_finish_file ();\n+#else\n+  maybe_apply_pending_pragma_weaks ();\n #endif\n }\n \f"}, {"sha": "83f1554f40925bf537b24e6839787ac37bbee4c8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=86f029aa95092540cbd4e96f70371960b3a90e7f", "patch": "@@ -1,3 +1,9 @@\n+2004-11-29  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/7544\n+\t* g++.dg/ext/weak1.C, gcc.dg/weak/weak-10.c, objc.dg/weak-1.m: New\n+\ttests.\n+\n 2004-11-29  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/18652"}, {"sha": "b7a448f371be6012bb10aed4d708da109a810584", "filename": "gcc/testsuite/g++.dg/ext/weak1.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fweak1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fweak1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fweak1.C?ref=86f029aa95092540cbd4e96f70371960b3a90e7f", "patch": "@@ -0,0 +1,13 @@\n+// Test for #pragma weak where the weak alias symbol isn't declared,\n+// although the symbol it is an alias for is defined in the\n+// translation unit.  Bug 7544.\n+// Origin: Joseph Myers <joseph@codesourcery.com>\n+// { dg-do compile }\n+// { dg-require-weak \"\" }\n+// { dg-require-alias \"\" }\n+// { dg-options \"-fno-common\" }\n+\n+// { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?bar1\" } } \n+\n+#pragma weak bar1 = foo1\n+extern \"C\" void foo1 (void) {}"}, {"sha": "f39fbc4bbcecfa4e7ece88b5d75547bbb4f9355c", "filename": "gcc/testsuite/gcc.dg/weak/weak-10.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-10.c?ref=86f029aa95092540cbd4e96f70371960b3a90e7f", "patch": "@@ -0,0 +1,13 @@\n+/* Test for #pragma weak where the weak alias symbol isn't declared,\n+   although the symbol it is an alias for is defined in the\n+   translation unit.  Bug 7544.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-require-weak \"\" } */\n+/* { dg-require-alias \"\" } */\n+/* { dg-options \"-fno-common\" } */\n+\n+/* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?bar1\" } } */\n+\n+#pragma weak bar1 = foo1\n+void foo1 (void) {}"}, {"sha": "f39fbc4bbcecfa4e7ece88b5d75547bbb4f9355c", "filename": "gcc/testsuite/objc.dg/weak-1.m", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Ftestsuite%2Fobjc.dg%2Fweak-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f029aa95092540cbd4e96f70371960b3a90e7f/gcc%2Ftestsuite%2Fobjc.dg%2Fweak-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fweak-1.m?ref=86f029aa95092540cbd4e96f70371960b3a90e7f", "patch": "@@ -0,0 +1,13 @@\n+/* Test for #pragma weak where the weak alias symbol isn't declared,\n+   although the symbol it is an alias for is defined in the\n+   translation unit.  Bug 7544.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-require-weak \"\" } */\n+/* { dg-require-alias \"\" } */\n+/* { dg-options \"-fno-common\" } */\n+\n+/* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?bar1\" } } */\n+\n+#pragma weak bar1 = foo1\n+void foo1 (void) {}"}]}