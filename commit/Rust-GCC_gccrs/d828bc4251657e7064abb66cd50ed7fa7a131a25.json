{"sha": "d828bc4251657e7064abb66cd50ed7fa7a131a25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgyOGJjNDI1MTY1N2U3MDY0YWJiNjZjZDUwZWQ3ZmE3YTEzMWEyNQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-11-20T22:37:22Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-11-20T22:37:22Z"}, "message": "lex.c (yylex): Added STRICT_TK case.\n\n\t* lex.c (yylex): Added STRICT_TK case.\n\t* parse.y (STRICT_TK): Added.\n\t* parse-scan.y (STRICT_TK): Added.\n\t* Make-lang.in ($(srcdir)/java/keyword.h): Added missing `\\' and\n\t`;'.  Use 4, not 3, with -k option.  Correctly rename resulting\n\tfile.\n\t* keyword.h: Rebuilt.\n\t* keyword.gperf (strictfp): Added.\n\nFrom-SVN: r37594", "tree": {"sha": "70c0809855e2cd2dc736872941de98001d923060", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70c0809855e2cd2dc736872941de98001d923060"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d828bc4251657e7064abb66cd50ed7fa7a131a25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d828bc4251657e7064abb66cd50ed7fa7a131a25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d828bc4251657e7064abb66cd50ed7fa7a131a25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d828bc4251657e7064abb66cd50ed7fa7a131a25/comments", "author": null, "committer": null, "parents": [{"sha": "4e7842a01ee60d854ae144884e13fbdfe95a7fce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e7842a01ee60d854ae144884e13fbdfe95a7fce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e7842a01ee60d854ae144884e13fbdfe95a7fce"}], "stats": {"total": 188, "additions": 102, "deletions": 86}, "files": [{"sha": "f1275cbeba22972c1082140c4ea9fc116ca7a495", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d828bc4251657e7064abb66cd50ed7fa7a131a25/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d828bc4251657e7064abb66cd50ed7fa7a131a25/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=d828bc4251657e7064abb66cd50ed7fa7a131a25", "patch": "@@ -1,3 +1,14 @@\n+2000-11-20  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* lex.c (yylex): Added STRICT_TK case.\n+\t* parse.y (STRICT_TK): Added.\n+\t* parse-scan.y (STRICT_TK): Added.\n+\t* Make-lang.in ($(srcdir)/java/keyword.h): Added missing `\\' and\n+\t`;'.  Use 4, not 3, with -k option.  Correctly rename resulting\n+\tfile.\n+\t* keyword.h: Rebuilt.\n+\t* keyword.gperf (strictfp): Added.\n+\n 2000-11-20  Tom Tromey  <tromey@cygnus.com>\n \n \t* lex.c (yylex): Recognize floating point constants with leading"}, {"sha": "d01a1f0ba4420cd9177566adf47d85eab6e9d6cf", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d828bc4251657e7064abb66cd50ed7fa7a131a25/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d828bc4251657e7064abb66cd50ed7fa7a131a25/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=d828bc4251657e7064abb66cd50ed7fa7a131a25", "patch": "@@ -89,12 +89,12 @@ $(srcdir)/java/parse-scan.c:  $(srcdir)/java/parse-scan.y\n \n $(srcdir)/java/keyword.h: $(srcdir)/java/keyword.gperf\n \t(cd $(srcdir)/java || exit 1; \\\n-\tgperf -L C -F ', 0' -p -t -j1 -i 1 -g -o -N java_keyword -k1,3,$$ \\\n-\t\tkeyword.gperf > k$$$$.h || {\n+\tgperf -L C -F ', 0' -p -t -j1 -i 1 -g -o -N java_keyword -k1,4,$$ \\\n+\t\tkeyword.gperf > k$$$$.h || { \\\n \techo \"Please update gperf from ftp://ftp.gnu.org/pub/gnu/gperf/\" >&2; \\\n \trm -f k$$$$.h; \\\n-\texit 1; } \\\n-\tmv -f k$$$$.h keyword.gperf)\n+\texit 1; } ; \\\n+\tmv -f k$$$$.h keyword.h)\n \n # Executables built by this Makefile:\n JAVA_OBJS = java/parse.o java/class.o java/decl.o java/expr.o \\"}, {"sha": "643e5840a3aafb938b76ce07ebbea8cd033331fa", "filename": "gcc/java/keyword.gperf", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d828bc4251657e7064abb66cd50ed7fa7a131a25/gcc%2Fjava%2Fkeyword.gperf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d828bc4251657e7064abb66cd50ed7fa7a131a25/gcc%2Fjava%2Fkeyword.gperf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fkeyword.gperf?ref=d828bc4251657e7064abb66cd50ed7fa7a131a25", "patch": "@@ -82,6 +82,7 @@ continue, CONTINUE_TK\n goto, GOTO_TK\n package, PACKAGE_TK\n this, THIS_TK\n+strictfp, STRICT_TK\n # true, false and null aren't keyword. But we match them easily this way\n true, TRUE_TK\n false, FALSE_TK"}, {"sha": "d831dea5cb49773833e9d7dbfdcb507cedb2e74f", "filename": "gcc/java/keyword.h", "status": "modified", "additions": 83, "deletions": 81, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d828bc4251657e7064abb66cd50ed7fa7a131a25/gcc%2Fjava%2Fkeyword.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d828bc4251657e7064abb66cd50ed7fa7a131a25/gcc%2Fjava%2Fkeyword.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fkeyword.h?ref=d828bc4251657e7064abb66cd50ed7fa7a131a25", "patch": "@@ -1,5 +1,5 @@\n-/* C code produced by gperf version 2.7.1 (19981006 egcs) */\n-/* Command-line: gperf -L C -F , 0 -p -t -j1 -i 1 -g -o -N java_keyword -k1,3,$ keyword.gperf  */\n+/* C code produced by gperf version 2.7 */\n+/* Command-line: gperf -L C -F , 0 -p -t -j1 -i 1 -g -o -N java_keyword -k1,4,$ keyword.gperf  */\n /* Keyword definition for the GNU compiler for the Java(TM) language.\n    Copyright (C) 1997, 1998 Free Software Foundation, Inc.\n    Contributed by Alexandre Petit-Bianco (apbianco@cygnus.com)\n@@ -35,12 +35,12 @@ __inline\n #endif\n struct java_keyword *java_keyword\tPARAMS ((const char *, unsigned int));\n \n-#define TOTAL_KEYWORDS 50\n+#define TOTAL_KEYWORDS 51\n #define MIN_WORD_LENGTH 2\n #define MAX_WORD_LENGTH 12\n-#define MIN_HASH_VALUE 6\n-#define MAX_HASH_VALUE 86\n-/* maximum key range = 81, duplicates = 0 */\n+#define MIN_HASH_VALUE 7\n+#define MAX_HASH_VALUE 95\n+/* maximum key range = 89, duplicates = 0 */\n \n #ifdef __GNUC__\n __inline\n@@ -52,40 +52,41 @@ hash (str, len)\n {\n   static unsigned char asso_values[] =\n     {\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 18, 37, 38,\n-      27,  1, 30,  3, 12,  8, 87,  2, 11, 87,\n-       8,  1,  5, 87, 24,  1,  1, 30,  2, 36,\n-      87,  1, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-      87, 87, 87, 87, 87, 87\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96,  9, 17,  3,\n+       1,  1, 20, 13, 15, 29, 96, 21,  1, 96,\n+      35, 39,  1, 96, 15,  6,  2,  1, 41, 17,\n+      96,  7, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96, 96, 96, 96, 96,\n+      96, 96, 96, 96, 96, 96\n     };\n   register int hval = len;\n \n   switch (hval)\n     {\n       default:\n+      case 4:\n+        hval += asso_values[(unsigned char)str[3]];\n       case 3:\n-        hval += asso_values[(unsigned char)str[2]];\n       case 2:\n       case 1:\n         hval += asso_values[(unsigned char)str[0]];\n@@ -104,70 +105,71 @@ java_keyword (str, len)\n {\n   static struct java_keyword wordlist[] =\n     {\n-      {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0},\n-      {\"try\", TRY_TK},\n+      {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0},\n       {\"else\", ELSE_TK},\n-      {\"short\", SHORT_TK},\n-      {\"goto\", GOTO_TK},\n+      {\"true\", TRUE_TK},\n+      {\"case\", CASE_TK},\n+      {\"\", 0},\n+      {\"public\", PUBLIC_TK},\n+      {\"try\", TRY_TK},\n+      {\"protected\", PROTECTED_TK},\n+      {\"continue\", CONTINUE_TK},\n       {\"extends\", EXTENDS_TK},\n-      {\"\", 0}, {\"\", 0},\n-      {\"int\", INT_TK},\n+      {\"const\", CONST_TK},\n+      {\"static\", STATIC_TK},\n       {\"this\", THIS_TK},\n+      {\"default\", DEFAULT_TK},\n+      {\"class\", CLASS_TK},\n+      {\"abstract\", ABSTRACT_TK},\n+      {\"synchronized\", SYNCHRONIZED_TK},\n+      {\"byte\", BYTE_TK},\n+      {\"while\", WHILE_TK},\n+      {\"double\", DOUBLE_TK},\n+      {\"catch\", CATCH_TK},\n+      {\"super\", SUPER_TK},\n+      {\"short\", SHORT_TK},\n+      {\"switch\", SWITCH_TK},\n+      {\"package\", PACKAGE_TK},\n+      {\"long\", LONG_TK},\n+      {\"false\", FALSE_TK},\n+      {\"\", 0},\n+      {\"int\", INT_TK},\n+      {\"final\", FINAL_TK},\n+      {\"float\", FLOAT_TK},\n+      {\"char\", CHAR_TK},\n+      {\"for\", FOR_TK},\n       {\"\", 0},\n-      {\"native\", NATIVE_TK},\n-      {\"\", 0}, {\"\", 0},\n       {\"interface\", INTERFACE_TK},\n-      {\"import\", IMPORT_TK},\n-      {\"private\", PRIVATE_TK},\n-      {\"volatile\", VOLATILE_TK},\n+      {\"null\", NULL_TK},\n+      {\"do\", DO_TK},\n+      {\"finally\", FINALLY_TK},\n+      {\"strictfp\", STRICT_TK},\n       {\"\", 0},\n       {\"implements\", IMPLEMENTS_TK},\n-      {\"\", 0},\n-      {\"long\", LONG_TK},\n-      {\"switch\", SWITCH_TK},\n-      {\"abstract\", ABSTRACT_TK},\n+      {\"void\", VOID_TK},\n       {\"transient\", TRANSIENT_TK},\n-      {\"do\", DO_TK},\n       {\"\", 0},\n+      {\"private\", PRIVATE_TK},\n+      {\"if\", IF_TK},\n+      {\"break\", BREAK_TK},\n       {\"throws\", THROWS_TK},\n       {\"\", 0},\n-      {\"null\", NULL_TK},\n-      {\"super\", SUPER_TK},\n-      {\"true\", TRUE_TK},\n-      {\"float\", FLOAT_TK},\n+      {\"new\", NEW_TK},\n       {\"\", 0},\n       {\"return\", RETURN_TK},\n-      {\"if\", IF_TK},\n-      {\"void\", VOID_TK},\n-      {\"protected\", PROTECTED_TK},\n-      {\"byte\", BYTE_TK},\n-      {\"case\", CASE_TK},\n-      {\"break\", BREAK_TK},\n-      {\"finally\", FINALLY_TK},\n-      {\"false\", FALSE_TK},\n-      {\"synchronized\", SYNCHRONIZED_TK},\n-      {\"instanceof\", INSTANCEOF_TK},\n-      {\"while\", WHILE_TK},\n-      {\"package\", PACKAGE_TK},\n-      {\"const\", CONST_TK},\n+      {\"\", 0},\n+      {\"volatile\", VOLATILE_TK},\n       {\"boolean\", BOOLEAN_TK},\n-      {\"final\", FINAL_TK},\n-      {\"continue\", CONTINUE_TK},\n-      {\"catch\", CATCH_TK},\n-      {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0},\n-      {\"class\", CLASS_TK},\n-      {\"static\", STATIC_TK},\n-      {\"double\", DOUBLE_TK},\n-      {\"default\", DEFAULT_TK},\n+      {\"instanceof\", INSTANCEOF_TK},\n+      {\"\", 0},\n       {\"throw\", THROW_TK},\n+      {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0},\n+      {\"native\", NATIVE_TK},\n+      {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0},\n+      {\"import\", IMPORT_TK},\n       {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0},\n-      {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0},\n-      {\"for\", FOR_TK},\n-      {\"\", 0},\n-      {\"new\", NEW_TK},\n-      {\"char\", CHAR_TK},\n-      {\"\", 0},\n-      {\"public\", PUBLIC_TK}\n+      {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0},\n+      {\"goto\", GOTO_TK}\n     };\n \n   if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)"}, {"sha": "bb5e5b5aa928698d9d0a48121cb76187b87bd199", "filename": "gcc/java/lex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d828bc4251657e7064abb66cd50ed7fa7a131a25/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d828bc4251657e7064abb66cd50ed7fa7a131a25/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=d828bc4251657e7064abb66cd50ed7fa7a131a25", "patch": "@@ -1495,7 +1495,7 @@ java_lex (java_lval)\n \t    case PUBLIC_TK:       case PROTECTED_TK: case STATIC_TK:\n \t    case ABSTRACT_TK:     case FINAL_TK:     case NATIVE_TK:\n \t    case SYNCHRONIZED_TK: case TRANSIENT_TK: case VOLATILE_TK:\n-\t    case PRIVATE_TK:\n+\t    case PRIVATE_TK:      case STRICT_TK:\n \t      SET_MODIFIER_CTX (kw->token);\n \t      return MODIFIER_TK;\n \t    case FLOAT_TK:"}, {"sha": "9207b9f6b79a1ff3857f7d8706c9c6d415867256", "filename": "gcc/java/parse-scan.y", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d828bc4251657e7064abb66cd50ed7fa7a131a25/gcc%2Fjava%2Fparse-scan.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d828bc4251657e7064abb66cd50ed7fa7a131a25/gcc%2Fjava%2Fparse-scan.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse-scan.y?ref=d828bc4251657e7064abb66cd50ed7fa7a131a25", "patch": "@@ -140,6 +140,7 @@ static void pop_class_context PARAMS ((void));\n %token   STATIC_TK       FINAL_TK           SYNCHRONIZED_TK\n %token   VOLATILE_TK     TRANSIENT_TK       NATIVE_TK\n %token   PAD_TK          ABSTRACT_TK        MODIFIER_TK\n+%token   STRICT_TK\n \n /* Keep those two in order, too */\n %token   DECR_TK INCR_TK"}, {"sha": "1e92c2afde799d708b17db6830b6370b1de200c5", "filename": "gcc/java/parse.y", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d828bc4251657e7064abb66cd50ed7fa7a131a25/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d828bc4251657e7064abb66cd50ed7fa7a131a25/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=d828bc4251657e7064abb66cd50ed7fa7a131a25", "patch": "@@ -463,6 +463,7 @@ static tree currently_caught_type_list;\n %token   STATIC_TK       FINAL_TK           SYNCHRONIZED_TK\n %token   VOLATILE_TK     TRANSIENT_TK       NATIVE_TK\n %token   PAD_TK          ABSTRACT_TK        MODIFIER_TK\n+%token   STRICT_TK\n \n /* Keep those two in order, too */\n %token   DECR_TK INCR_TK"}]}