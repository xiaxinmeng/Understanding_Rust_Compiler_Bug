{"sha": "668443c98adf0e658a3b2cff251a01ee781f5033", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY4NDQzYzk4YWRmMGU2NThhM2IyY2ZmMjUxYTAxZWU3ODFmNTAzMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-11T18:09:17Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-11T18:09:17Z"}, "message": "(expand_divmod): Always call expand_twoval_binop with psuedos as\ntargets.\n\nFrom-SVN: r8905", "tree": {"sha": "068fdc69c065f213ba29cfdcbbe40abc5201af66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/068fdc69c065f213ba29cfdcbbe40abc5201af66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/668443c98adf0e658a3b2cff251a01ee781f5033", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/668443c98adf0e658a3b2cff251a01ee781f5033", "html_url": "https://github.com/Rust-GCC/gccrs/commit/668443c98adf0e658a3b2cff251a01ee781f5033", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/668443c98adf0e658a3b2cff251a01ee781f5033/comments", "author": null, "committer": null, "parents": [{"sha": "ef0e53ce936f567b56f89b567f114c11d6441582", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef0e53ce936f567b56f89b567f114c11d6441582", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef0e53ce936f567b56f89b567f114c11d6441582"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "75e0cf2cf1909b11f20139631ae1b147f040c57e", "filename": "gcc/expmed.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/668443c98adf0e658a3b2cff251a01ee781f5033/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/668443c98adf0e658a3b2cff251a01ee781f5033/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=668443c98adf0e658a3b2cff251a01ee781f5033", "patch": "@@ -3159,14 +3159,17 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n \t   and return the result right away.  */\n \tif (target == 0)\n \t  target = gen_reg_rtx (compute_mode);\n+\n \tif (rem_flag)\n \t  {\n-\t    remainder = target;\n+\t    remainder\n+\t      = GET_CODE (target) == REG ? target : gen_reg_rtx (compute_mode);\n \t    quotient = gen_reg_rtx (compute_mode);\n \t  }\n \telse\n \t  {\n-\t    quotient = target;\n+\t    quotient\n+\t      = GET_CODE (target) == REG ? target : gen_reg_rtx (compute_mode);\n \t    remainder = gen_reg_rtx (compute_mode);\n \t  }\n \n@@ -3283,14 +3286,17 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n \t       value here, and return the result right away.  */\n \t    if (target == 0)\n \t      target = gen_reg_rtx (compute_mode);\n+\n \t    if (rem_flag)\n \t      {\n-\t\tremainder = target;\n+\t\tremainder = (GET_CODE (target) == REG\n+\t\t\t     ? target : gen_reg_rtx (compute_mode));\n \t\tquotient = gen_reg_rtx (compute_mode);\n \t      }\n \t    else\n \t      {\n-\t\tquotient = target;\n+\t\tquotient = (GET_CODE (target) == REG\n+\t\t\t    ? target : gen_reg_rtx (compute_mode));\n \t\tremainder = gen_reg_rtx (compute_mode);\n \t      }\n \n@@ -3384,12 +3390,14 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n \t      target = gen_reg_rtx (compute_mode);\n \t    if (rem_flag)\n \t      {\n-\t\tremainder = target;\n+\t\tremainder= (GET_CODE (target) == REG\n+\t\t\t    ? target : gen_reg_rtx (compute_mode));\n \t\tquotient = gen_reg_rtx (compute_mode);\n \t      }\n \t    else\n \t      {\n-\t\tquotient = target;\n+\t\tquotient = (GET_CODE (target) == REG\n+\t\t\t    ? target : gen_reg_rtx (compute_mode));\n \t\tremainder = gen_reg_rtx (compute_mode);\n \t      }\n "}]}