{"sha": "ec940faa538ae7a3992b53f24627d89f67a6ff61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM5NDBmYWE1MzhhZTdhMzk5MmI1M2YyNDYyN2Q4OWY2N2E2ZmY2MQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-08-10T13:25:24Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-08-10T13:25:24Z"}, "message": "output.h (assemble_name): Constify a char*.\n\n        * output.h (assemble_name): Constify a char*.\n\n        * varasm.c (UNIQUE_SECTION, assemble_start_function,\n        assemble_variable, assemble_name): Likewise.\n\n        * dwarf2out.c (ASM_NAME_TO_STRING): Likewise.\n\n        * arm/pe.c (arm_pe_unique_section): Likewise.\n\n        * i386/cygwin.h (STRIP_NAME_ENCODING): Likewise.\n\n        * i386/i386-interix.h (STRIP_NAME_ENCODING): Likewise.\n\n        * i386/interix.c (i386_pe_unique_section): Likewise.\n\n        * i386/win32.h (STRIP_NAME_ENCODING): Likewise.\n\n        * i386/winnt.c (i386_pe_unique_section): Likewise.\n\n        * m32r/m32r.h (ASM_OUTPUT_LABELREF): Likewise.\n\n        * mn10200/mn10200.h (ASM_OUTPUT_LABELREF): Likewise.\n\n        * mn10300/mn10300.h (ASM_OUTPUT_LABELREF): Likewise.\n\n        * pa/pa.c (output_call): Likewise.\n\n        * pa/pa.h (ASM_OUTPUT_MI_THUNK): Likewise.\n\n        * pa/som.h (ASM_OUTPUT_FUNCTION_PREFIX): Likewise.\n\n        * rs6000/rs6000.c (rs6000_output_load_toc_table, output_toc):\n        Likewise.\n\n        * rs6000/rs6000.h (RS6000_OUTPUT_BASENAME, STRIP_NAME_ENCODING):\n        Likewise.\n\n        * rs6000/sol2.h (ASM_OUTPUT_SOURCE_LINE): Likewise.\n\n        * rs6000/sysv4.h (ASM_DECLARE_FUNCTION_NAME, ASM_OUTPUT_INT,\n        STRIP_NAME_ENCODING, ASM_OUTPUT_LABELREF): Likewise.\n\n        * v850/v850.h (ASM_OUTPUT_LABELREF): Likewise.\n\nFrom-SVN: r28644", "tree": {"sha": "ca015b0929bc45067d69728f2bcf8259957928d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca015b0929bc45067d69728f2bcf8259957928d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec940faa538ae7a3992b53f24627d89f67a6ff61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec940faa538ae7a3992b53f24627d89f67a6ff61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec940faa538ae7a3992b53f24627d89f67a6ff61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec940faa538ae7a3992b53f24627d89f67a6ff61/comments", "author": null, "committer": null, "parents": [{"sha": "4c71b22f2d4ba07cf8d55f2b8edbcb355df44bef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c71b22f2d4ba07cf8d55f2b8edbcb355df44bef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c71b22f2d4ba07cf8d55f2b8edbcb355df44bef"}], "stats": {"total": 149, "additions": 102, "deletions": 47}, "files": [{"sha": "a1913076ddfe217b83d782191adffb42eb98d7c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -1,3 +1,49 @@\n+Tue Aug 10 09:21:46 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* output.h (assemble_name): Constify a char*.\n+\n+\t* varasm.c (UNIQUE_SECTION, assemble_start_function,\n+\tassemble_variable, assemble_name): Likewise.\n+\n+\t* dwarf2out.c (ASM_NAME_TO_STRING): Likewise.\n+\n+\t* arm/pe.c (arm_pe_unique_section): Likewise.\n+\t\n+\t* i386/cygwin.h (STRIP_NAME_ENCODING): Likewise.\n+\t\n+\t* i386/i386-interix.h (STRIP_NAME_ENCODING): Likewise.\n+\t\n+\t* i386/interix.c (i386_pe_unique_section): Likewise.\n+\t\n+\t* i386/win32.h (STRIP_NAME_ENCODING): Likewise.\n+\t\n+\t* i386/winnt.c (i386_pe_unique_section): Likewise.\n+\t\n+\t* m32r/m32r.h (ASM_OUTPUT_LABELREF): Likewise.\n+\t\n+\t* mn10200/mn10200.h (ASM_OUTPUT_LABELREF): Likewise.\n+\t\n+\t* mn10300/mn10300.h (ASM_OUTPUT_LABELREF): Likewise.\n+\t\n+\t* pa/pa.c (output_call): Likewise.\n+\t\n+\t* pa/pa.h (ASM_OUTPUT_MI_THUNK): Likewise.\n+\n+\t* pa/som.h (ASM_OUTPUT_FUNCTION_PREFIX): Likewise.\n+\t\n+\t* rs6000/rs6000.c (rs6000_output_load_toc_table, output_toc):\n+\tLikewise.\n+\t\n+\t* rs6000/rs6000.h (RS6000_OUTPUT_BASENAME, STRIP_NAME_ENCODING):\n+\tLikewise.\n+\t\n+\t* rs6000/sol2.h (ASM_OUTPUT_SOURCE_LINE): Likewise.\n+\t\n+\t* rs6000/sysv4.h (ASM_DECLARE_FUNCTION_NAME, ASM_OUTPUT_INT,\n+\tSTRIP_NAME_ENCODING, ASM_OUTPUT_LABELREF): Likewise.\n+\t\n+\t* v850/v850.h (ASM_OUTPUT_LABELREF): Likewise.\n+\n Mon Aug  9 19:54:05 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* real.c (GET_REAL, PUT_REAL): Use memcpy instead of bcopy."}, {"sha": "563605aae207d0b17579387f11994425479f03b8", "filename": "gcc/config/arm/pe.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Farm%2Fpe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Farm%2Fpe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpe.c?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -411,7 +411,7 @@ arm_pe_unique_section (decl, reloc)\n      int reloc;\n {\n   int len;\n-  char * name;\n+  const char * name;\n   char * string;\n   char * prefix;\n "}, {"sha": "11518ff49bb17b87e634e009bd89137a07c30a4e", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -299,16 +299,17 @@ extern void i386_pe_encode_section_info ();\n #undef  STRIP_NAME_ENCODING\n #define STRIP_NAME_ENCODING(VAR,SYMBOL_NAME)\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n-  char *_p;\t\t\t\t\t\t\t\t\\\n-  char *_name = I386_PE_STRIP_ENCODING (SYMBOL_NAME);\t\t\t\\\n+  const char *_p;\t\t\t\t\t\t\t\\\n+  const char *_name = I386_PE_STRIP_ENCODING (SYMBOL_NAME);\t\t\\\n   for (_p = _name; *_p && *_p != '@'; ++_p)\t\t\t\t\\\n     ;\t\t\t\t\t\t\t\t\t\\\n   if (*_p == '@')\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       int _len = _p - _name;\t\t\t\t\t\t\\\n-      (VAR) = (char *) alloca (_len + 1);\t\t\t\t\\\n-      strncpy ((VAR), _name, _len);\t\t\t\t\t\\\n-      (VAR)[_len] = '\\0';\t\t\t\t\t\t\\\n+      char *_new_name = (char *) alloca (_len + 1);\t\t\t\\\n+      strncpy (_new_name, _name, _len);\t\t\t\t\t\\\n+      _new_name[_len] = '\\0';\t\t\t\t\t\t\\\n+      (VAR) = _new_name;\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n     (VAR) = _name;\t\t\t\t\t\t\t\\"}, {"sha": "1b5a6232c47ff5e4d27544d8dc7e6568124f7bab", "filename": "gcc/config/i386/i386-interix.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-interix.h?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -482,16 +482,17 @@ while (0)\n #undef  STRIP_NAME_ENCODING\n #define STRIP_NAME_ENCODING(VAR,SYMBOL_NAME)\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n-  char *_p;\t\t\t\t\t\t\t\t\\\n-  char *_name = SYMBOL_NAME;\t\t\t\t\t\t\\\n+  const char *_p;\t\t\t\t\t\t\t\\\n+  const char *_name = SYMBOL_NAME;\t\t\t\t\t\\\n   for (_p = _name; *_p && *_p != '@'; ++_p)\t\t\t\t\\\n     ;\t\t\t\t\t\t\t\t\t\\\n   if (*_p == '@')\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       int _len = _p - _name;\t\t\t\t\t\t\\\n-      (VAR) = (char *) alloca (_len + 1);\t\t\t\t\\\n-      strncpy ((VAR), _name, _len);\t\t\t\t\t\\\n-      (VAR)[_len] = '\\0';\t\t\t\t\t\t\\\n+      _new_name = (char *) alloca (_len + 1);\t\t\t\t\\\n+      strncpy (_new_name, _name, _len);\t\t\t\t\t\\\n+      _new_name[_len] = '\\0';\t\t\t\t\t\t\\\n+      (VAR) = _new_name;\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n     (VAR) = _name;\t\t\t\t\t\t\t\\"}, {"sha": "5a2b8b6ab41d3ac8de1d5afbd66b3a5e533fcab4", "filename": "gcc/config/i386/interix.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fi386%2Finterix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fi386%2Finterix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Finterix.c?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -78,7 +78,8 @@ i386_pe_unique_section (decl, reloc)\n      int reloc;\n {\n   int len;\n-  char *name,*string,*prefix;\n+  const char *name;\n+  char *string,*prefix;\n \n   name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n   /* Strip off any encoding in fnname.  */"}, {"sha": "36f3ec74331bd7971f8de1b4976ff7ec9c141794", "filename": "gcc/config/i386/win32.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fi386%2Fwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fi386%2Fwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwin32.h?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -186,16 +186,17 @@ while (0)\n #undef  STRIP_NAME_ENCODING\n #define STRIP_NAME_ENCODING(VAR,SYMBOL_NAME)\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n-  char *_p;\t\t\t\t\t\t\t\t\\\n-  char *_name = ((SYMBOL_NAME) + ((SYMBOL_NAME)[0] == '*'));\t\t\\\n+  const char *_p;\t\t\t\t\t\t\t\\\n+  const char *_name = ((SYMBOL_NAME) + ((SYMBOL_NAME)[0] == '*'));\t\\\n   for (_p = _name; *_p && *_p != '@'; ++_p)\t\t\t\t\\\n     ;\t\t\t\t\t\t\t\t\t\\\n   if (*_p == '@')\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       int _len = _p - _name;\t\t\t\t\t\t\\\n-      (VAR) = (char *) alloca (_len + 1);\t\t\t\t\\\n-      strncpy ((VAR), _name, _len);\t\t\t\t\t\\\n-      (VAR)[_len] = '\\0';\t\t\t\t\t\t\\\n+      char *_new_name = (char *) alloca (_len + 1);\t\t\t\\\n+      strncpy (_new_name, _name, _len);\t\t\t\t\t\\\n+      _new_name[_len] = '\\0';\t\t\t\t\t\t\\\n+      (VAR) = _new_name;\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n     (VAR) = _name;\t\t\t\t\t\t\t\\"}, {"sha": "de66f4ed0551acf8da7a11906da6c287d57adaad", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -463,7 +463,8 @@ i386_pe_unique_section (decl, reloc)\n      int reloc;\n {\n   int len;\n-  char *name,*string,*prefix;\n+  const char *name;\n+  char *string,*prefix;\n \n   name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n   /* Strip off any encoding in fnname.  */"}, {"sha": "903745f328f3b48defed4336d778f723fded9209", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -1649,7 +1649,7 @@ do {\t\t\t\t\\\n #undef ASM_OUTPUT_LABELREF\n #define ASM_OUTPUT_LABELREF(FILE, NAME) \\\n do {\t\t\t\t\t\t\t\\\n-  char * real_name;\t\t\t\t\t\\\n+  const char * real_name;\t\t\t\t\\\n   STRIP_NAME_ENCODING (real_name, (NAME));\t\t\\\n   asm_fprintf (FILE, \"%U%s\", real_name);\t\t\\\n } while (0)           "}, {"sha": "34b43225182205196031276d10c59ecd3c851778", "filename": "gcc/config/mn10200/mn10200.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fmn10200%2Fmn10200.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fmn10200%2Fmn10200.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10200%2Fmn10200.h?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -898,7 +898,7 @@ do { char dstr[30];\t\t\t\t\t\\\n #undef ASM_OUTPUT_LABELREF\n #define ASM_OUTPUT_LABELREF(FILE, NAME)\t          \\\n   do {                                            \\\n-  char* real_name;                                \\\n+  const char* real_name;                          \\\n   STRIP_NAME_ENCODING (real_name, (NAME));        \\\n   fprintf (FILE, \"_%s\", real_name);               \\\n   } while (0)           "}, {"sha": "b426413c4226b07793a6c0f1b064bcdbe82c5a91", "filename": "gcc/config/mn10300/mn10300.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.h?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -897,7 +897,7 @@ do { char dstr[30];\t\t\t\t\t\\\n #undef ASM_OUTPUT_LABELREF\n #define ASM_OUTPUT_LABELREF(FILE, NAME)\t          \\\n   do {                                            \\\n-  char* real_name;                                \\\n+  const char* real_name;                          \\\n   STRIP_NAME_ENCODING (real_name, (NAME));        \\\n   fprintf (FILE, \"_%s\", real_name);               \\\n   } while (0)           "}, {"sha": "b49e6b67ba76c1ac6e8b7e49f937caaf67be7779", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -5390,7 +5390,7 @@ output_call (insn, call_dest)\n \t    {\n \t      struct obstack *ambient_obstack = current_obstack;\n \t      struct obstack *ambient_rtl_obstack = rtl_obstack;\n-\t      char *real_name;\n+\t      const char *real_name;\n \n \t      /* Any RTL we create here needs to live until the end of\n \t\t the compilation unit and therefore must live on the"}, {"sha": "171153829386f86be061751ff82bf39e001ca1c3", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -1074,7 +1074,7 @@ extern struct rtx_def *hppa_compare_op0, *hppa_compare_op1;\n extern enum cmp_type hppa_branch_type;\n \n #define ASM_OUTPUT_MI_THUNK(FILE, THUNK_FNDECL, DELTA, FUNCTION) \\\n-{ char *target_name = XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0); \\\n+{ const char *target_name = XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0); \\\n   STRIP_NAME_ENCODING (target_name, target_name); \\\n   output_function_prologue (FILE, 0); \\\n   if (VAL_14_BITS_P (DELTA)) \\"}, {"sha": "a4406de032ae7699843985e344e35c98f28fc09e", "filename": "gcc/config/pa/som.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fpa%2Fsom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fpa%2Fsom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fsom.h?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -121,7 +121,7 @@ do {\t\t\t\t\t\t\t\t\\\n    that the section name will have a \".\" prefix.  */\n #define ASM_OUTPUT_FUNCTION_PREFIX(FILE, NAME) \\\n   {\t\t\t\t\t\t\t\t\t\\\n-    char *name;\t\t\t\t\t\t\t\t\\\n+    const char *name;\t\t\t\t\t\t\t\\\n     STRIP_NAME_ENCODING (name, NAME);\t\t\t\t\t\\\n     if (TARGET_GAS && in_section == in_text) \t\t\t\t\\\n       fputs (\"\\t.NSUBSPA $CODE$,QUAD=0,ALIGN=8,ACCESS=44,CODE_ONLY\\n\", FILE); \\"}, {"sha": "60a29b5f1350e7d5be38c03faff58139eaa13c75", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -4014,7 +4014,7 @@ rs6000_output_load_toc_table (file, reg)\n       if (rs6000_pic_func_labelno != rs6000_pic_labelno)\n \t{\n \t  const char *init_ptr = TARGET_32BIT ? \".long\" : \".quad\";\n-\t  char *buf_ptr;\n+\t  const char *buf_ptr;\n \n \t  ASM_OUTPUT_INTERNAL_LABEL (file, \"LCL\", rs6000_pic_labelno);\n \n@@ -4949,7 +4949,7 @@ output_toc (file, x, labelno)\n {\n   char buf[256];\n   char *name = buf;\n-  char *real_name;\n+  const char *real_name;\n   rtx base = x;\n   int offset = 0;\n "}, {"sha": "22cf7f2572d95179529b4d4f2aad7100e3eb612e", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -2755,7 +2755,7 @@ extern int toc_initialized;\n \n #define RS6000_OUTPUT_BASENAME(FILE, NAME)\t\\\n   {\t\t\t\t\t\t\\\n-    char *_p;\t\t\t\t\t\\\n+    const char *_p;\t\t\t\t\\\n \t\t\t\t\t\t\\\n     STRIP_NAME_ENCODING (_p, (NAME));\t\t\\\n     assemble_name ((FILE), _p);\t\t\t\\\n@@ -2766,7 +2766,7 @@ extern int toc_initialized;\n #define STRIP_NAME_ENCODING(VAR,NAME)\t\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      char *_name = (NAME);\t\t\t\t\t\t\\\n+      const char *_name = (NAME);\t\t\t\t\t\\\n       int _len;\t\t\t\t\t\t\t\t\\\n       if (_name[0] == '*')\t\t\t\t\t\t\\\n \t_name++;\t\t\t\t\t\t\t\\\n@@ -2775,9 +2775,10 @@ extern int toc_initialized;\n \t(VAR) = _name;\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n-\t  (VAR) = (char *) alloca (_len + 1);\t\t\t\t\\\n-\t  strcpy ((VAR), _name);\t\t\t\t\t\\\n-\t  (VAR)[_len - 4] = '\\0';\t\t\t\t\t\\\n+\t  char *_new_name = (char *) alloca (_len + 1);\t\t\t\\\n+\t  strcpy (_new_name, _name);\t\t\t\t\t\\\n+\t  _new_name[_len - 4] = '\\0';\t\t\t\t\t\\\n+\t  (VAR) = _new_name;\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   while (0)"}, {"sha": "91e5b42101868b5585e7bf0546e76f79e11e1288", "filename": "gcc/config/rs6000/sol2.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Frs6000%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Frs6000%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsol2.h?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -102,7 +102,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n do\t\t\t\t\t\t\t\t\t\\\n   {\t\t\t\t\t\t\t\t\t\\\n     static int sym_lineno = 1;\t\t\t\t\t\t\\\n-    char *_p;\t\t\t\t\t\t\t\t\\\n+    const char *_p;\t\t\t\t\t\t\t\\\n     fprintf (file, \"\\t.stabd 68,0,%d,.LM%d-\",\t\t\t\t\\\n \t     line, sym_lineno);\t\t\t\t\t\t\\\n     STRIP_NAME_ENCODING (_p, XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0)); \\"}, {"sha": "165d59ee622afc182b3db9739157db8eada81ad7", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -627,13 +627,14 @@ extern int rs6000_pic_labelno;\n #undef\tASM_DECLARE_FUNCTION_NAME\n #define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL)\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n-    char *orig_name;\t\t\t\t\t\t\t\\\n-    char *init_ptr = (TARGET_64BIT) ? \".quad\" : \".long\";\t\t\\\n+    const char *orig_name;\t\t\t\t\t\t\\\n+    const char *init_ptr = (TARGET_64BIT) ? \".quad\" : \".long\";\t\t\\\n     STRIP_NAME_ENCODING (orig_name, NAME);\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n     if (TARGET_RELOCATABLE && (get_pool_size () != 0 || profile_flag))\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n-\tchar buf[256], *buf_ptr;\t\t\t\t\t\\\n+\tchar buf[256];\t\t\t\t\t\t\t\\\n+\tconst char *buf_ptr;\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n \tASM_OUTPUT_INTERNAL_LABEL (FILE, \"LCL\", rs6000_pic_labelno);\t\\\n \t\t\t\t\t\t\t\t\t\\\n@@ -652,7 +653,7 @@ extern int rs6000_pic_labelno;\n \t\t\t\t\t\t\t\t\t\\\n     if (DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_NT)\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n-\tchar *desc_name = orig_name;\t\t\t\t\t\\\n+\tconst char *desc_name = orig_name;\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n \twhile (*desc_name == '.')\t\t\t\t\t\\\n \t  desc_name++;\t\t\t\t\t\t\t\\\n@@ -770,7 +771,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n       && CONSTANT_P (VALUE))\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       static int labelno = 0;\t\t\t\t\t\t\\\n-      char buf[256], *p;\t\t\t\t\t\t\\\n+      char buf[256];\t\t\t\t\t\t\t\\\n+      const char *p;\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n       recurse = 1;\t\t\t\t\t\t\t\\\n       ASM_GENERATE_INTERNAL_LABEL (buf, \"LCP\", labelno++);\t\t\\\n@@ -835,7 +837,7 @@ extern void rs6000_encode_section_info ();\n #undef  STRIP_NAME_ENCODING\n #define STRIP_NAME_ENCODING(VAR,SYMBOL_NAME)\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n-  char *_name = SYMBOL_NAME;\t\t\t\t\t\t\\\n+  const char *_name = SYMBOL_NAME;\t\t\t\t\t\\\n   while (*_name == '*' || *_name == '@')\t\t\t\t\\\n     _name++;\t\t\t\t\t\t\t\t\\\n   (VAR) = _name;\t\t\t\t\t\t\t\\\n@@ -847,7 +849,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef ASM_OUTPUT_LABELREF\n #define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n-  char *_name = NAME;\t\t\t\t\t\t\t\\\n+  const char *_name = NAME;\t\t\t\t\t\t\\\n   while (*_name == '*' || *_name == '@')\t\t\t\t\\\n     _name++;\t\t\t\t\t\t\t\t\\\n   fputs (_name, FILE);\t\t\t\t\t\t\t\\"}, {"sha": "588e3fe92d438833a0a4d4b339fb820b194f5940", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -1342,7 +1342,7 @@ do { char dstr[30];\t\t\t\t\t\\\n #undef ASM_OUTPUT_LABELREF\n #define ASM_OUTPUT_LABELREF(FILE, NAME)\t          \\\n   do {                                            \\\n-  char* real_name;                                \\\n+  const char* real_name;                          \\\n   STRIP_NAME_ENCODING (real_name, (NAME));        \\\n   fprintf (FILE, \"_%s\", real_name);               \\\n   } while (0)           "}, {"sha": "33f60da3244b831759d5546b1de4004979be501f", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -2744,7 +2744,7 @@ static char debug_line_section_label[MAX_ARTIFICIAL_LABEL_BYTES];\n \tdyn_string_append (STR, NAME + 1);\t\t\\\n       else\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\\\n-\t  char *newstr;\t\t\t\t\t\\\n+\t  const char *newstr;\t\t\t\t\\\n \t  STRIP_NAME_ENCODING (newstr, NAME);\t\t\\\n \t  dyn_string_append (STR, user_label_prefix);\t\\\n \t  dyn_string_append (STR, newstr);\t\t\\"}, {"sha": "f3375e5b5b53adbc4e267f59462bb0170f46a627", "filename": "gcc/output.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -279,7 +279,7 @@ extern void assemble_label\t\tPROTO((char *));\n    Otherwise NAME is transformed in an implementation-defined way\n    (usually by the addition of an underscore).\n    Many macros in the tm file are defined to call this function.  */\n-extern void assemble_name\t\tPROTO((FILE *, char *));\n+extern void assemble_name\t\tPROTO((FILE *, const char *));\n \n #ifdef RTX_CODE\n /* Assemble the integer constant X into an object of SIZE bytes."}, {"sha": "44c44d9598e91880dfb3b85e3a84079d4e74ed61", "filename": "gcc/varasm.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec940faa538ae7a3992b53f24627d89f67a6ff61/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=ec940faa538ae7a3992b53f24627d89f67a6ff61", "patch": "@@ -286,7 +286,8 @@ named_section (decl, name, reloc)\n #define UNIQUE_SECTION(DECL,RELOC)\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\\\n   int len;\t\t\t\t\t\t\t\\\n-  char *name, *string;\t\t\t\t\t\t\\\n+  const char *name;\t\t\t\t\t\t\\\n+  char *string;\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n   name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (DECL));\t\\\n   /* Strip off any encoding in name.  */\t\t\t\\\n@@ -1000,7 +1001,7 @@ assemble_start_function (decl, fnname)\n     {\n       if (! first_global_object_name)\n \t{\n-\t  char *p;\n+\t  const char *p;\n \t  char **name;\n \n \t  if (! DECL_WEAK (decl) && ! DECL_ONE_ONLY (decl))\n@@ -1279,7 +1280,7 @@ assemble_variable (decl, top_level, at_end, dont_output_data)\n       && ! DECL_WEAK (decl)\n       && ! DECL_ONE_ONLY (decl))\n     {\n-      char *p;\n+      const char *p;\n \n       STRIP_NAME_ENCODING (p, name);\n       first_global_object_name = permalloc (strlen (p) + 1);\n@@ -1680,9 +1681,9 @@ assemble_label (name)\n void\n assemble_name (file, name)\n      FILE *file;\n-     char *name;\n+     const char *name;\n {\n-  char *real_name;\n+  const char *real_name;\n   tree id;\n \n   STRIP_NAME_ENCODING (real_name, name);"}]}