{"sha": "82b22c42f92a4fe76e4cd83ba9ab3cce5ccf6dc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJiMjJjNDJmOTJhNGZlNzZlNGNkODNiYTlhYjNjY2U1Y2NmNmRjMw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-01-28T18:47:52Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-01-28T18:47:52Z"}, "message": "lex.c (java_lex): Don't include UEOF as part of token.\n\n\t* lex.c (java_lex): Don't include UEOF as part of token.\n\t(java_read_unicode): Error if \\u sequence prematurely terminated.\n\nFrom-SVN: r61993", "tree": {"sha": "c39ef1d10cdd0034ca01bb377913fcd770b6873b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c39ef1d10cdd0034ca01bb377913fcd770b6873b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82b22c42f92a4fe76e4cd83ba9ab3cce5ccf6dc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82b22c42f92a4fe76e4cd83ba9ab3cce5ccf6dc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82b22c42f92a4fe76e4cd83ba9ab3cce5ccf6dc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82b22c42f92a4fe76e4cd83ba9ab3cce5ccf6dc3/comments", "author": null, "committer": null, "parents": [{"sha": "bffcd064da34369768a4b20dbbcbd1211e55032d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bffcd064da34369768a4b20dbbcbd1211e55032d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bffcd064da34369768a4b20dbbcbd1211e55032d"}], "stats": {"total": 42, "additions": 28, "deletions": 14}, "files": [{"sha": "042b7db0572c9db5274b02a2b92043ab0909b4d4", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82b22c42f92a4fe76e4cd83ba9ab3cce5ccf6dc3/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82b22c42f92a4fe76e4cd83ba9ab3cce5ccf6dc3/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=82b22c42f92a4fe76e4cd83ba9ab3cce5ccf6dc3", "patch": "@@ -1,3 +1,8 @@\n+2003-01-28  Tom Tromey  <tromey@redhat.com>\n+\n+\t* lex.c (java_lex): Don't include UEOF as part of token.\n+\t(java_read_unicode): Error if \\u sequence prematurely terminated.\n+\n 2003-01-27  Tom Tromey  <tromey@redhat.com>\n \n \t* parse.y (java_check_regular_methods): Check for construct after"}, {"sha": "370217eb96165a3b4ea1d8fdfb50392d4a923425", "filename": "gcc/java/lex.c", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82b22c42f92a4fe76e4cd83ba9ab3cce5ccf6dc3/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82b22c42f92a4fe76e4cd83ba9ab3cce5ccf6dc3/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=82b22c42f92a4fe76e4cd83ba9ab3cce5ccf6dc3", "patch": "@@ -542,23 +542,31 @@ java_read_unicode (java_lexer *lex, int *unicode_escape_p)\n \t  while ((c = java_read_char (lex)) == 'u')\n \t    ;\n \n-\t  /* Unget the most recent character as it is not a `u'.  */\n-\t  if (c == UEOF)\n-\t    return UEOF;\n-\t  lex->unget_value = c;\n-\n-\t  /* Next should be 4 hex digits, otherwise it's an error.\n-\t     The hex value is converted into the unicode, pushed into\n-\t     the Unicode stream.  */\n-\t  for (shift = 12; shift >= 0; shift -= 4)\n+\t  shift = 12;\n+\t  do\n \t    {\n-\t      if ((c = java_read_char (lex)) == UEOF)\n-\t        return UEOF;\n+\t      if (c == UEOF)\n+\t\t{\n+\t\t  java_lex_error (\"prematurely terminated \\\\u sequence\", 0);\n+\t\t  return UEOF;\n+\t\t}\n+\n \t      if (hex_p (c))\n \t\tunicode |= (unicode_t)(hex_value (c) << shift);\n \t      else\n-\t\tjava_lex_error (\"Non hex digit in Unicode escape sequence\", 0);\n+\t\t{\n+\t\t  java_lex_error (\"non-hex digit in \\\\u sequence\", 0);\n+\t\t  break;\n+\t\t}\n+\n+\t      c = java_read_char (lex);\n+\t      shift -= 4;\n \t    }\n+\t  while (shift >= 0);\n+\n+\t  if (c != UEOF)\n+\t    lex->unget_value = c;\n+\n \t  lex->bs_count = 0;\n \t  *unicode_escape_p = 1;\n \t  return unicode;\n@@ -1514,7 +1522,7 @@ java_lex (YYSTYPE *java_lval)\n   \n   /* Keyword, boolean literal or null literal.  */\n   for (first_unicode = c, all_ascii = 1, ascii_index = 0; \n-       JAVA_PART_CHAR_P (c); c = java_get_unicode ())\n+       c != UEOF && JAVA_PART_CHAR_P (c); c = java_get_unicode ())\n     {\n       java_unicode_2_utf8 (c);\n       if (all_ascii && c >= 128)\n@@ -1524,7 +1532,8 @@ java_lex (YYSTYPE *java_lval)\n \n   obstack_1grow (&temporary_obstack, '\\0');\n   string = obstack_finish (&temporary_obstack);\n-  java_unget_unicode ();\n+  if (c != UEOF)\n+    java_unget_unicode ();\n \n   /* If we have something all ascii, we consider a keyword, a boolean\n      literal, a null literal or an all ASCII identifier.  Otherwise,"}]}