{"sha": "a555a02ce606c46f41433e524e81162af396b11c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU1NWEwMmNlNjA2YzQ2ZjQxNDMzZTUyNGU4MTE2MmFmMzk2YjExYw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-01-10T14:55:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-01-10T14:55:59Z"}, "message": "tree-ssa-structalias.c (get_constraint_for_component_ref): Never override with anything constraint.\n\n2006-01-10  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-structalias.c (get_constraint_for_component_ref):\n\tNever override with anything constraint.\n\nFrom-SVN: r109544", "tree": {"sha": "a59ae301392868057eb7ebcb20df8d31de9e6a2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a59ae301392868057eb7ebcb20df8d31de9e6a2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a555a02ce606c46f41433e524e81162af396b11c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a555a02ce606c46f41433e524e81162af396b11c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a555a02ce606c46f41433e524e81162af396b11c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a555a02ce606c46f41433e524e81162af396b11c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "56b04af7312e90f6af5e347e0eafc18af2d0aa1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56b04af7312e90f6af5e347e0eafc18af2d0aa1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56b04af7312e90f6af5e347e0eafc18af2d0aa1e"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "4d6c661ef2b4c3d791ac0b574d3b6ed1c725576e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a555a02ce606c46f41433e524e81162af396b11c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a555a02ce606c46f41433e524e81162af396b11c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a555a02ce606c46f41433e524e81162af396b11c", "patch": "@@ -1,3 +1,8 @@\n+2006-01-10  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-structalias.c (get_constraint_for_component_ref):\n+\tNever override with anything constraint.\n+\n 2006-01-10  Jan Beulich  <jbeulich@novell.com>\n \n \t* config/i386/i386.c (ix86_data_alignment): Don't force alignment to"}, {"sha": "e7b47fc31b2e58bd1e56957299a49f8ebe556884", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a555a02ce606c46f41433e524e81162af396b11c/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a555a02ce606c46f41433e524e81162af396b11c/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=a555a02ce606c46f41433e524e81162af396b11c", "patch": "@@ -2373,25 +2373,14 @@ get_constraint_for_component_ref (tree t, VEC(ce_s, heap) **results)\n   t = get_ref_base_and_extent (t, &bitpos, &bitsize, &bitmaxsize);\n   get_constraint_for (t, results);\n   result = VEC_last (ce_s, *results);\n+  result->offset = bitpos;\n \n   gcc_assert (beforelength + 1 == VEC_length (ce_s, *results));\n \n   /* This can also happen due to weird offsetof type macros.  */\n   if (TREE_CODE (t) != ADDR_EXPR && result->type == ADDRESSOF)\n     result->type = SCALAR;\n-  \n-  /* If we know where this goes, then yay. Otherwise, booo. */\n-  if (bitmaxsize != -1\n-      && bitsize == bitmaxsize)\n-    {\n-      result->offset = bitpos;\n-    }\n-  else\n-    {\n-      result->var = anything_id;\n-      result->offset = 0;      \n-    }\n-\n+ \n   if (result->type == SCALAR)\n     {\n       /* In languages like C, you can access one past the end of an\n@@ -2409,7 +2398,7 @@ get_constraint_for_component_ref (tree t, VEC(ce_s, heap) **results)\n \t  for (curr = get_varinfo (result->var); curr; curr = curr->next)\n \t    {\n \t      if (offset_overlaps_with_access (curr->offset, curr->size,\n-\t\t\t\t\t       result->offset, bitsize))\n+\t\t\t\t\t       result->offset, bitmaxsize))\n \t\t{\n \t\t  result->var = curr->id;\n \t\t  break;"}]}