{"sha": "21a9616b39d53c3133d05a34b3e4dae89089ca71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFhOTYxNmIzOWQ1M2MzMTMzZDA1YTM0YjNlNGRhZTg5MDg5Y2E3MQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-08T04:37:30Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-08T04:37:30Z"}, "message": "c-common.c (type_for_mode): Only return TItype nodes when HOST_BITS_PER_WIDE_INT is >= 64 bits.\n\n        * c-common.c (type_for_mode): Only return TItype nodes when\n        HOST_BITS_PER_WIDE_INT is >= 64 bits.\n        * c-decl.c (intTI_type_node, unsigned_intTI_type_node): Only declare\n        when HOST_BITS_PER_WIDE_INT is >= 64 bits.\n        (init_decl_processing): Only create TItype nodes when\n        HOST_BITS_PER_WIDE_INT is >= 64 bits.\n        * c-tree.h (intTI_type_node, unsigned_intTI_type_node): Only declare\n        when HOST_BITS_PER_WIDE_INT is >= 64 bits.\n\nFrom-SVN: r22912", "tree": {"sha": "e7c239b6fd3b61df552b81ad78de6512e2c05a84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7c239b6fd3b61df552b81ad78de6512e2c05a84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21a9616b39d53c3133d05a34b3e4dae89089ca71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21a9616b39d53c3133d05a34b3e4dae89089ca71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21a9616b39d53c3133d05a34b3e4dae89089ca71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21a9616b39d53c3133d05a34b3e4dae89089ca71/comments", "author": null, "committer": null, "parents": [{"sha": "2a230e9dc40fd0a9ffe86e0548a935350dd39459", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a230e9dc40fd0a9ffe86e0548a935350dd39459", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a230e9dc40fd0a9ffe86e0548a935350dd39459"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "820473f836c30b1abd6a78a6609d7f33df838083", "filename": "gcc/c-common.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a9616b39d53c3133d05a34b3e4dae89089ca71/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a9616b39d53c3133d05a34b3e4dae89089ca71/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=21a9616b39d53c3133d05a34b3e4dae89089ca71", "patch": "@@ -2146,8 +2146,10 @@ type_for_mode (mode, unsignedp)\n   if (mode == TYPE_MODE (intDI_type_node))\n     return unsignedp ? unsigned_intDI_type_node : intDI_type_node;\n \n+#if HOST_BITS_PER_WIDE_INT >= 64\n   if (mode == TYPE_MODE (intTI_type_node))\n     return unsignedp ? unsigned_intTI_type_node : intTI_type_node;\n+#endif\n \n   if (mode == TYPE_MODE (float_type_node))\n     return float_type_node;"}, {"sha": "99b4ad5ab523cea2fa502b6557035a43b5d8983e", "filename": "gcc/c-decl.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a9616b39d53c3133d05a34b3e4dae89089ca71/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a9616b39d53c3133d05a34b3e4dae89089ca71/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=21a9616b39d53c3133d05a34b3e4dae89089ca71", "patch": "@@ -151,13 +151,17 @@ tree intQI_type_node;\n tree intHI_type_node;\n tree intSI_type_node;\n tree intDI_type_node;\n+#if HOST_BITS_PER_WIDE_INT >= 64\n tree intTI_type_node;\n+#endif\n \n tree unsigned_intQI_type_node;\n tree unsigned_intHI_type_node;\n tree unsigned_intSI_type_node;\n tree unsigned_intDI_type_node;\n+#if HOST_BITS_PER_WIDE_INT >= 64\n tree unsigned_intTI_type_node;\n+#endif\n \n /* a VOID_TYPE node.  */\n \n@@ -3041,8 +3045,10 @@ init_decl_processing ()\n   intDI_type_node = make_signed_type (GET_MODE_BITSIZE (DImode));\n   pushdecl (build_decl (TYPE_DECL, NULL_TREE, intDI_type_node));\n \n+#if HOST_BITS_PER_WIDE_INT >= 64\n   intTI_type_node = make_signed_type (GET_MODE_BITSIZE (TImode));\n   pushdecl (build_decl (TYPE_DECL, NULL_TREE, intTI_type_node));\n+#endif\n \n   unsigned_intQI_type_node = make_unsigned_type (GET_MODE_BITSIZE (QImode));\n   pushdecl (build_decl (TYPE_DECL, NULL_TREE, unsigned_intQI_type_node));\n@@ -3056,8 +3062,10 @@ init_decl_processing ()\n   unsigned_intDI_type_node = make_unsigned_type (GET_MODE_BITSIZE (DImode));\n   pushdecl (build_decl (TYPE_DECL, NULL_TREE, unsigned_intDI_type_node));\n \n+#if HOST_BITS_PER_WIDE_INT >= 64\n   unsigned_intTI_type_node = make_unsigned_type (GET_MODE_BITSIZE (TImode));\n   pushdecl (build_decl (TYPE_DECL, NULL_TREE, unsigned_intTI_type_node));\n+#endif\n \n   float_type_node = make_node (REAL_TYPE);\n   TYPE_PRECISION (float_type_node) = FLOAT_TYPE_SIZE;"}, {"sha": "3e73299d47b91717d0271237f81a13d0f97219cc", "filename": "gcc/c-tree.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a9616b39d53c3133d05a34b3e4dae89089ca71/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a9616b39d53c3133d05a34b3e4dae89089ca71/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=21a9616b39d53c3133d05a34b3e4dae89089ca71", "patch": "@@ -213,7 +213,9 @@ extern tree double_ftype_double;\n extern tree double_ftype_double_double;\n extern tree double_type_node;\n extern tree float_type_node;\n+#if HOST_BITS_PER_WIDE_INT >= 64\n extern tree intTI_type_node;\n+#endif\n extern tree intDI_type_node;\n extern tree intHI_type_node;\n extern tree intQI_type_node;\n@@ -243,7 +245,9 @@ extern tree signed_wchar_type_node;\n extern tree string_ftype_ptr_ptr;\n extern tree string_type_node;\n extern tree unsigned_char_type_node;\n+#if HOST_BITS_PER_WIDE_INT >= 64\n extern tree unsigned_intTI_type_node;\n+#endif\n extern tree unsigned_intDI_type_node;\n extern tree unsigned_intHI_type_node;\n extern tree unsigned_intQI_type_node;"}]}