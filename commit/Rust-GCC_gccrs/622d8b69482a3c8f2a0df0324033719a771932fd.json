{"sha": "622d8b69482a3c8f2a0df0324033719a771932fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIyZDhiNjk0ODJhM2M4ZjJhMGRmMDMyNDAzMzcxOWE3NzE5MzJmZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-08-17T08:11:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-08-17T08:11:32Z"}, "message": "re PR tree-optimization/23855 (loop header should also be pulled out of the inner loop too)\n\n2016-08-17  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/23855\n\t* tree-ssa-loop-unswitch.c: Include tree-ssa-loop-manip.h.\n\t(tree_unswitch_outer_loop): Iterate find_loop_guard as long as we\n\tfind guards to hoist.  Do not update SSA form but rewrite virtuals\n\tinto loop closed SSA.\n\t(find_loop_guard): Adjust to skip already hoisted guards.  Do\n\tnot mark virtuals for renaming or update SSA form.\n\n\t* gcc.dg/loop-unswitch-2.c: Adjust.\n\nFrom-SVN: r239523", "tree": {"sha": "68cacd35181faa08cb0557b268b448c1241f5d1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68cacd35181faa08cb0557b268b448c1241f5d1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/622d8b69482a3c8f2a0df0324033719a771932fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/622d8b69482a3c8f2a0df0324033719a771932fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/622d8b69482a3c8f2a0df0324033719a771932fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/622d8b69482a3c8f2a0df0324033719a771932fd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "892a653cc93da08467301e5cc18ddec7c85462f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/892a653cc93da08467301e5cc18ddec7c85462f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/892a653cc93da08467301e5cc18ddec7c85462f2"}], "stats": {"total": 62, "additions": 46, "deletions": 16}, "files": [{"sha": "467f016514b1a94f60e37ab59da40df8e8a7a004", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622d8b69482a3c8f2a0df0324033719a771932fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622d8b69482a3c8f2a0df0324033719a771932fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=622d8b69482a3c8f2a0df0324033719a771932fd", "patch": "@@ -1,3 +1,13 @@\n+2016-08-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/23855\n+\t* tree-ssa-loop-unswitch.c: Include tree-ssa-loop-manip.h.\n+\t(tree_unswitch_outer_loop): Iterate find_loop_guard as long as we\n+\tfind guards to hoist.  Do not update SSA form but rewrite virtuals\n+\tinto loop closed SSA.\n+\t(find_loop_guard): Adjust to skip already hoisted guards.  Do\n+\tnot mark virtuals for renaming or update SSA form.\n+\n 2016-08-17  Martin Liska  <mliska@suse.cz>\n \n \t* coverage.c (get_gcov_type): Replace GCOV_TYPE_SIZE with"}, {"sha": "ffa81389d16c4707dc691f7311bd7218ede4e76d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622d8b69482a3c8f2a0df0324033719a771932fd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622d8b69482a3c8f2a0df0324033719a771932fd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=622d8b69482a3c8f2a0df0324033719a771932fd", "patch": "@@ -1,3 +1,8 @@\n+2016-08-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/23855\n+\t* gcc.dg/loop-unswitch-2.c: Adjust.\n+\n 2016-08-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/72817"}, {"sha": "77900f9e955e722b9b352adfb725adc149abd253", "filename": "gcc/testsuite/gcc.dg/loop-unswitch-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622d8b69482a3c8f2a0df0324033719a771932fd/gcc%2Ftestsuite%2Fgcc.dg%2Floop-unswitch-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622d8b69482a3c8f2a0df0324033719a771932fd/gcc%2Ftestsuite%2Fgcc.dg%2Floop-unswitch-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Floop-unswitch-2.c?ref=622d8b69482a3c8f2a0df0324033719a771932fd", "patch": "@@ -11,5 +11,5 @@ void foo (float **a, float **b, float *c, int n, int m, int l)\n \tc[i] += a[i][k] * b[k][j];\n }\n \n-/* { dg-final { scan-tree-dump-times \"guard hoisted\" 2 \"unswitch\" } } */\n+/* { dg-final { scan-tree-dump-times \"guard hoisted\" 3 \"unswitch\" } } */\n "}, {"sha": "40905af45eb55e1b68907a063615c20542e1b98b", "filename": "gcc/tree-ssa-loop-unswitch.c", "status": "modified", "additions": 30, "deletions": 15, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622d8b69482a3c8f2a0df0324033719a771932fd/gcc%2Ftree-ssa-loop-unswitch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622d8b69482a3c8f2a0df0324033719a771932fd/gcc%2Ftree-ssa-loop-unswitch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-unswitch.c?ref=622d8b69482a3c8f2a0df0324033719a771932fd", "patch": "@@ -37,6 +37,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-inline.h\"\n #include \"gimple-iterator.h\"\n #include \"cfghooks.h\"\n+#include \"tree-ssa-loop-manip.h\"\n \n /* This file implements the loop unswitching, i.e. transformation of loops like\n \n@@ -451,14 +452,15 @@ tree_unswitch_outer_loop (struct loop *loop)\n       return false;\n     }\n \n-  guard = find_loop_guard (loop);\n-  if (guard)\n+  bool changed = false;\n+  while ((guard = find_loop_guard (loop)))\n     {\n+      if (! changed)\n+\trewrite_virtuals_into_loop_closed_ssa (loop);\n       hoist_guard (loop, guard);\n-      update_ssa (TODO_update_ssa);\n-      return true;\n+      changed = true;\n     }\n-  return false;\n+  return changed;\n }\n \n /* Checks if the body of the LOOP is within an invariant guard.  If this\n@@ -501,13 +503,28 @@ find_loop_guard (struct loop *loop)\n \tb) anything defined in something1, something2 and something3\n \t   is not used outside of the loop.  */\n \n-  while (single_succ_p (header))\n-    header = single_succ (header);\n-  if (!last_stmt (header)\n-      || gimple_code (last_stmt (header)) != GIMPLE_COND)\n-    return NULL;\n-\n-  extract_true_false_edges_from_block (header, &te, &fe);\n+  gcond *cond;\n+  do\n+    {\n+      if (single_succ_p (header))\n+\theader = single_succ (header);\n+      else\n+\t{\n+\t  cond = dyn_cast <gcond *> (last_stmt (header));\n+\t  if (! cond)\n+\t    return NULL;\n+\t  extract_true_false_edges_from_block (header, &te, &fe);\n+\t  /* Make sure to skip earlier hoisted guards that are left\n+\t     in place as if (true).  */\n+\t  if (gimple_cond_true_p (cond))\n+\t    header = te->dest;\n+\t  else if (gimple_cond_false_p (cond))\n+\t    header = fe->dest;\n+\t  else\n+\t    break;\n+\t}\n+    }\n+  while (1);\n   if (!flow_bb_inside_loop_p (loop, te->dest)\n       || !flow_bb_inside_loop_p (loop, fe->dest))\n     return NULL;\n@@ -549,7 +566,7 @@ find_loop_guard (struct loop *loop)\n \t     guard_edge->src->index, guard_edge->dest->index, loop->num);\n   /* Check if condition operands do not have definitions inside loop since\n      any bb copying is not performed.  */\n-  FOR_EACH_SSA_TREE_OPERAND (use, last_stmt (header), iter, SSA_OP_USE)\n+  FOR_EACH_SSA_TREE_OPERAND (use, cond, iter, SSA_OP_USE)\n     {\n       gimple *def = SSA_NAME_DEF_STMT (use);\n       basic_block def_bb = gimple_bb (def);\n@@ -762,8 +779,6 @@ hoist_guard (struct loop *loop, edge guard)\n \t}\n     }\n \n-  mark_virtual_operands_for_renaming (cfun);\n-  update_ssa (TODO_update_ssa);\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     fprintf (dump_file, \"  guard hoisted.\\n\");\n }"}]}