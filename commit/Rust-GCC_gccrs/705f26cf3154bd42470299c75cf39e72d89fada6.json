{"sha": "705f26cf3154bd42470299c75cf39e72d89fada6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA1ZjI2Y2YzMTU0YmQ0MjQ3MDI5OWM3NWNmMzllNzJkODlmYWRhNg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-19T07:18:05Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-19T07:18:05Z"}, "message": "entered into RCS\n\nFrom-SVN: r1627", "tree": {"sha": "0d7663fb2c15a0e0516d19902de3f84f0a168615", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d7663fb2c15a0e0516d19902de3f84f0a168615"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/705f26cf3154bd42470299c75cf39e72d89fada6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/705f26cf3154bd42470299c75cf39e72d89fada6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/705f26cf3154bd42470299c75cf39e72d89fada6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/705f26cf3154bd42470299c75cf39e72d89fada6/comments", "author": null, "committer": null, "parents": [{"sha": "82d003675fbabc58673e5ac9580020e1403d6214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82d003675fbabc58673e5ac9580020e1403d6214", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82d003675fbabc58673e5ac9580020e1403d6214"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "9fb7bff6789e5376b3864be96bb0896ece3e7713", "filename": "gcc/jump.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/705f26cf3154bd42470299c75cf39e72d89fada6/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/705f26cf3154bd42470299c75cf39e72d89fada6/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=705f26cf3154bd42470299c75cf39e72d89fada6", "patch": "@@ -2744,6 +2744,9 @@ mark_jump_label (x, insn, cross_jump)\n \tregister rtx next;\n \tif (GET_CODE (label) != CODE_LABEL)\n \t  abort ();\n+\t/* Ignore references to labels of containing functions.  */\n+\tif (LABEL_REF_NONLOCAL_P (x))\n+\t  break;\n \t/* If there are other labels following this one,\n \t   replace it with the last of the consecutive labels.  */\n \tfor (next = NEXT_INSN (label); next; next = NEXT_INSN (next))\n@@ -3490,6 +3493,9 @@ rtx_renumbered_equal_p (x, y)\n       return XINT (x, 0) == XINT (y, 0);\n \n     case LABEL_REF:\n+      /* We can't assume nonlocal labels have their following insns yet.  */\n+      if (LABEL_REF_NONLOCAL_P (x) || LABEL_REF_NONLOCAL_P (y))\n+\treturn XEXP (x, 0) == XEXP (y, 0);\n       /* Two label-refs are equivalent if they point at labels\n \t in the same position in the instruction stream.  */\n       return (next_real_insn (XEXP (x, 0))"}]}