{"sha": "acaaf0c621688e090e0f8024ce19a90b1dcde7aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNhYWYwYzYyMTY4OGUwOTBlMGY4MDI0Y2UxOWE5MGIxZGNkZTdhYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-03-11T10:27:30Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-03-11T10:27:30Z"}, "message": "i386.md (frndintxf2): Rename to ...\n\n        * config/i386/i386.md (frndintxf2): Rename to ...\n        (rintxf2): ... this. Remove expander having same name.\n        (rintsf2, rintdf2): Implement using SSEMODEF macro.\n        (roundsf2, rounddf2): Ditto.\n        (lrint<mode>di2, lrint<mode>si2): Implement using SSEMODEI24 macro.\n        (lround<mode>di2, lround<mode>si2): Ditto.\n\nFrom-SVN: r122815", "tree": {"sha": "72cba79652dbd51ba607a65ea5d4968ea3958ec8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72cba79652dbd51ba607a65ea5d4968ea3958ec8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acaaf0c621688e090e0f8024ce19a90b1dcde7aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acaaf0c621688e090e0f8024ce19a90b1dcde7aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acaaf0c621688e090e0f8024ce19a90b1dcde7aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acaaf0c621688e090e0f8024ce19a90b1dcde7aa/comments", "author": null, "committer": null, "parents": [{"sha": "f9aa54d3c5c8b4993678c52b2c4d2ee2f7bdabaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9aa54d3c5c8b4993678c52b2c4d2ee2f7bdabaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9aa54d3c5c8b4993678c52b2c4d2ee2f7bdabaf"}], "stats": {"total": 173, "additions": 59, "deletions": 114}, "files": [{"sha": "f726f3e2e5b608e1bd3b0d2c11036679eed02637", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acaaf0c621688e090e0f8024ce19a90b1dcde7aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acaaf0c621688e090e0f8024ce19a90b1dcde7aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=acaaf0c621688e090e0f8024ce19a90b1dcde7aa", "patch": "@@ -1,3 +1,12 @@\n+2007-03-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (frndintxf2): Rename to ...\n+\t(rintxf2): ... this. Remove expander having same name.\n+\t(rintsf2, rintdf2): Implement using SSEMODEF macro.\n+\t(roundsf2, rounddf2): Ditto.\n+\t(lrint<mode>di2, lrint<mode>si2): Implement using SSEMODEI24 macro.\n+\t(lround<mode>di2, lround<mode>si2): Ditto.\n+\n 2007-03-11  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* lower-subreg.c: Include except.h.\n@@ -41,9 +50,9 @@\n \t* config/i386/i386.md (UNSPEC_C2_FLAG): New constant.\n \t(fpremxf4_i387, fprem1xf4_i387): Use UNSPEC_C2_FLAG.\n \t(fmodxf3, fmod<mode>3, remainderxf3, remainder<mode>3):\n-\tAdd LABEL_NUSES to emmitted label.\n+\tAdd LABEL_NUSES to emitted label.\n \t* config/i386/i386.c (ix86_emit_fp_unordered_jump): Add\n-\tbranch probability value to emmitted jump insn.\n+\tbranch probability value to emitted jump insn.\n \t* reg-stack.c (subst_stack_regs_pat)[UNSPEC]: Handle UNSPEC_C2_FLAG.\n \tDo not check life information and do not re-arrange input operands\n \tfor UNSPEC_FSCALE_EXP, UNSPEC_FPREM_U and UNSPEC_FPREM1_U.\n@@ -160,10 +169,10 @@\n \n 2007-03-09  Aldy Hernandez  <aldyh@redhat.com>\n \n-        PR tree-optimization/30375\n-        * tree-ssa-dse.c (dse_possible_dead_store_p): Do not eliminate if\n-        LHS of statements is not the same.\n-        * testsuite/gcc.dg/tree-ssa/ssa-dse-10.c: New.\n+\tPR tree-optimization/30375\n+\t* tree-ssa-dse.c (dse_possible_dead_store_p): Do not eliminate if\n+\tLHS of statements is not the same.\n+\t* testsuite/gcc.dg/tree-ssa/ssa-dse-10.c: New.\n \n 2007-03-09  Chao-ying Fu  <fu@mips.com>\n \n@@ -618,10 +627,11 @@\n \tx86_sse_unaligned_move_optimal, x86_sse_typeless_stores,\n \tx86_sse_load0_by_pxor, x86_use_ffreep, x86_use_incdec,\n \tx86_inter_unit_moves, x86_ext_80387_constants, x86_four_jump_limit,\n-\tx86_schedule, x86_use_bt, x86_pad_returns): Merge into ...\n+\tx86_schedule, x86_use_bt, x86_pad_returns,\n+\tx86_use_xchgb): Merge into ...\n \t(ix86_tune_features): ... here.  New array.\n-\t(x86_cmove, x86_use_xchgb, x86_cmpxchg, x86_cmpxchg8b,\t\n-\tx86_xadd, x86_bswap): Merge into ...\n+\t(x86_cmove, x86_cmpxchg, x86_cmpxchg8b,\tx86_xadd,\n+\tx86_bswap): Merge into ...\n \t(ix86_arch_features): ... here.  New array.\n \t(x86_3dnow_a): Remove.\n \t(x86_accumulate_outgoing_args): Make static.\n@@ -875,7 +885,7 @@\n \n 2007-03-05  Mike Stump  <mrs@apple.com>\n \n-\t* c-common.c (targetcm): Add.   \n+\t* c-common.c (targetcm): Add.\n \t* c-opts.c (c_common_handle_option): Handle language specific\n \ttarget options.\n \t* opts.c (handle_option): Verify language for target options, if"}, {"sha": "4d49614cbd42d41973781f612e317cbb8c643b4b", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 39, "deletions": 104, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acaaf0c621688e090e0f8024ce19a90b1dcde7aa/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acaaf0c621688e090e0f8024ce19a90b1dcde7aa/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=acaaf0c621688e090e0f8024ce19a90b1dcde7aa", "patch": "@@ -17318,54 +17318,28 @@\n })\n \f\n \n-(define_insn \"frndintxf2\"\n+(define_insn \"rintxf2\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")]\n-\t UNSPEC_FRNDINT))]\n+\t\t   UNSPEC_FRNDINT))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n   \"frndint\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"XF\")])\n \n-(define_expand \"rintdf2\"\n-  [(use (match_operand:DF 0 \"register_operand\" \"\"))\n-   (use (match_operand:DF 1 \"register_operand\" \"\"))]\n-  \"(TARGET_USE_FANCY_MATH_387\n-    && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\n-    && flag_unsafe_math_optimizations)\n-   || (SSE_FLOAT_MODE_P (DFmode) && TARGET_SSE_MATH\n-       && !flag_trapping_math\n-       && !optimize_size)\"\n-{\n-  if (SSE_FLOAT_MODE_P (DFmode) && TARGET_SSE_MATH\n-      && !flag_trapping_math\n-      && !optimize_size)\n-    ix86_expand_rint (operand0, operand1);\n-  else\n-    {\n-      rtx op0 = gen_reg_rtx (XFmode);\n-      rtx op1 = gen_reg_rtx (XFmode);\n-\n-      emit_insn (gen_extenddfxf2 (op1, operands[1]));\n-      emit_insn (gen_frndintxf2 (op0, op1));\n-\n-      emit_insn (gen_truncxfdf2_i387_noop (operands[0], op0));\n-    }\n-  DONE;\n-})\n-\n-(define_expand \"rintsf2\"\n-  [(use (match_operand:SF 0 \"register_operand\" \"\"))\n-   (use (match_operand:SF 1 \"register_operand\" \"\"))]\n+(define_expand \"rint<mode>2\"\n+  [(use (match_operand:SSEMODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:SSEMODEF 1 \"register_operand\" \"\"))]\n   \"(TARGET_USE_FANCY_MATH_387\n-    && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n+    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+\t|| TARGET_MIX_SSE_I387)\n     && flag_unsafe_math_optimizations)\n-   || (SSE_FLOAT_MODE_P (SFmode) && TARGET_SSE_MATH\n+   || (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n        && !flag_trapping_math\n        && !optimize_size)\"\n {\n-  if (SSE_FLOAT_MODE_P (SFmode) && TARGET_SSE_MATH\n+  if (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n       && !flag_trapping_math\n       && !optimize_size)\n     ix86_expand_rint (operand0, operand1);\n@@ -17374,43 +17348,22 @@\n       rtx op0 = gen_reg_rtx (XFmode);\n       rtx op1 = gen_reg_rtx (XFmode);\n \n-      emit_insn (gen_extendsfxf2 (op1, operands[1]));\n-      emit_insn (gen_frndintxf2 (op0, op1));\n+      emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+      emit_insn (gen_rintxf2 (op0, op1));\n \n-      emit_insn (gen_truncxfsf2_i387_noop (operands[0], op0));\n+      emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n     }\n   DONE;\n })\n \n-(define_expand \"rintxf2\"\n-  [(use (match_operand:XF 0 \"register_operand\" \"\"))\n-   (use (match_operand:XF 1 \"register_operand\" \"\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations && !optimize_size\"\n-{\n-  emit_insn (gen_frndintxf2 (operands[0], operands[1]));\n-  DONE;\n-})\n-\n-(define_expand \"roundsf2\"\n-  [(match_operand:SF 0 \"register_operand\" \"\")\n-   (match_operand:SF 1 \"nonimmediate_operand\" \"\")]\n-  \"SSE_FLOAT_MODE_P (SFmode) && TARGET_SSE_MATH\n-   && !flag_trapping_math && !flag_rounding_math\n-   && !optimize_size\"\n-{\n-  ix86_expand_round (operand0, operand1);\n-  DONE;\n-})\n-\n-(define_expand \"rounddf2\"\n-  [(match_operand:DF 0 \"register_operand\" \"\")\n-   (match_operand:DF 1 \"nonimmediate_operand\" \"\")]\n-  \"SSE_FLOAT_MODE_P (DFmode) && TARGET_SSE_MATH\n+(define_expand \"round<mode>2\"\n+  [(match_operand:SSEMODEF 0 \"register_operand\" \"\")\n+   (match_operand:SSEMODEF 1 \"nonimmediate_operand\" \"\")]\n+  \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n    && !flag_trapping_math && !flag_rounding_math\n    && !optimize_size\"\n {\n-  if (TARGET_64BIT)\n+  if ((<MODE>mode != DFmode) || TARGET_64BIT)\n     ix86_expand_round (operand0, operand1);\n   else\n     ix86_expand_rounddf_32 (operand0, operand1);\n@@ -17420,7 +17373,7 @@\n (define_insn_and_split \"*fistdi2_1\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,?r\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n-\t UNSPEC_FIST))]\n+\t\t   UNSPEC_FIST))]\n   \"TARGET_USE_FANCY_MATH_387\n    && !(reload_completed || reload_in_progress)\"\n   \"#\"\n@@ -17443,7 +17396,7 @@\n (define_insn \"fistdi2\"\n   [(set (match_operand:DI 0 \"memory_operand\" \"=m\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f\")]\n-\t UNSPEC_FIST))\n+\t\t   UNSPEC_FIST))\n    (clobber (match_scratch:XF 2 \"=&1f\"))]\n   \"TARGET_USE_FANCY_MATH_387\"\n   \"* return output_fix_trunc (insn, operands, 0);\"\n@@ -17453,7 +17406,7 @@\n (define_insn \"fistdi2_with_temp\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,?r\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n-\t UNSPEC_FIST))\n+\t\t   UNSPEC_FIST))\n    (clobber (match_operand:DI 2 \"memory_operand\" \"=m,m\"))\n    (clobber (match_scratch:XF 3 \"=&1f,&1f\"))]\n   \"TARGET_USE_FANCY_MATH_387\"\n@@ -17464,7 +17417,7 @@\n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t UNSPEC_FIST))\n+\t\t   UNSPEC_FIST))\n    (clobber (match_operand:DI 2 \"memory_operand\" \"\"))\n    (clobber (match_scratch 3 \"\"))]\n   \"reload_completed\"\n@@ -17476,7 +17429,7 @@\n (define_split\n   [(set (match_operand:DI 0 \"memory_operand\" \"\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t UNSPEC_FIST))\n+\t\t   UNSPEC_FIST))\n    (clobber (match_operand:DI 2 \"memory_operand\" \"\"))\n    (clobber (match_scratch 3 \"\"))]\n   \"reload_completed\"\n@@ -17487,7 +17440,7 @@\n (define_insn_and_split \"*fist<mode>2_1\"\n   [(set (match_operand:X87MODEI12 0 \"register_operand\" \"=r\")\n \t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"f\")]\n-\t UNSPEC_FIST))]\n+\t\t\t   UNSPEC_FIST))]\n   \"TARGET_USE_FANCY_MATH_387\n    && !(reload_completed || reload_in_progress)\"\n   \"#\"\n@@ -17505,7 +17458,7 @@\n (define_insn \"fist<mode>2\"\n   [(set (match_operand:X87MODEI12 0 \"memory_operand\" \"=m\")\n \t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"f\")]\n-\t UNSPEC_FIST))]\n+\t\t\t   UNSPEC_FIST))]\n   \"TARGET_USE_FANCY_MATH_387\"\n   \"* return output_fix_trunc (insn, operands, 0);\"\n   [(set_attr \"type\" \"fpspc\")\n@@ -17514,7 +17467,7 @@\n (define_insn \"fist<mode>2_with_temp\"\n   [(set (match_operand:X87MODEI12 0 \"register_operand\" \"=r\")\n \t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"f\")]\n-\t UNSPEC_FIST))\n+\t\t\t   UNSPEC_FIST))\n    (clobber (match_operand:X87MODEI12 2 \"memory_operand\" \"=m\"))]\n   \"TARGET_USE_FANCY_MATH_387\"\n   \"#\"\n@@ -17524,60 +17477,42 @@\n (define_split\n   [(set (match_operand:X87MODEI12 0 \"register_operand\" \"\")\n \t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t UNSPEC_FIST))\n+\t\t\t   UNSPEC_FIST))\n    (clobber (match_operand:X87MODEI12 2 \"memory_operand\" \"\"))]\n   \"reload_completed\"\n-  [(set (match_dup 2) (unspec:X87MODEI12 [(match_dup 1)]\n-\t\t       UNSPEC_FIST))\n+  [(set (match_dup 2) (unspec:X87MODEI12 [(match_dup 1)] UNSPEC_FIST))\n    (set (match_dup 0) (match_dup 2))]\n   \"\")\n \n (define_split\n   [(set (match_operand:X87MODEI12 0 \"memory_operand\" \"\")\n \t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"\")]\n-\t UNSPEC_FIST))\n+\t\t\t   UNSPEC_FIST))\n    (clobber (match_operand:X87MODEI12 2 \"memory_operand\" \"\"))]\n   \"reload_completed\"\n-  [(set (match_dup 0) (unspec:X87MODEI12 [(match_dup 1)]\n-\t\t       UNSPEC_FIST))]\n+  [(set (match_dup 0) (unspec:X87MODEI12 [(match_dup 1)] UNSPEC_FIST))]\n   \"\")\n \n (define_expand \"lrintxf<mode>2\"\n   [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"\")\n      (unspec:X87MODEI [(match_operand:XF 1 \"register_operand\" \"\")]\n-      UNSPEC_FIST))]\n+\t\t      UNSPEC_FIST))]\n   \"TARGET_USE_FANCY_MATH_387\"\n   \"\")\n \n-(define_expand \"lrint<mode>di2\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n-     (unspec:DI [(match_operand:SSEMODEF 1 \"register_operand\" \"\")]\n-      UNSPEC_FIX_NOTRUNC))]\n-  \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH && TARGET_64BIT\"\n+(define_expand \"lrint<SSEMODEF:mode><SSEMODEI24:mode>2\"\n+  [(set (match_operand:SSEMODEI24 0 \"nonimmediate_operand\" \"\")\n+     (unspec:SSEMODEI24 [(match_operand:SSEMODEF 1 \"register_operand\" \"\")]\n+\t\t\tUNSPEC_FIX_NOTRUNC))]\n+  \"SSE_FLOAT_MODE_P (<SSEMODEF:MODE>mode) && TARGET_SSE_MATH\n+   && ((<SSEMODEI24:MODE>mode != DImode) || TARGET_64BIT)\"\n   \"\")\n \n-(define_expand \"lrint<mode>si2\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n-     (unspec:SI [(match_operand:SSEMODEF 1 \"register_operand\" \"\")]\n-      UNSPEC_FIX_NOTRUNC))]\n-  \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\"\n-  \"\")\n-\n-(define_expand \"lround<mode>di2\"\n-  [(match_operand:DI 0 \"nonimmediate_operand\" \"\")\n-   (match_operand:SSEMODEF 1 \"register_operand\" \"\")]\n-  \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH && TARGET_64BIT\n-   && !flag_trapping_math && !flag_rounding_math\n-   && !optimize_size\"\n-{\n-  ix86_expand_lround (operand0, operand1);\n-  DONE;\n-})\n-\n-(define_expand \"lround<mode>si2\"\n-  [(match_operand:SI 0 \"nonimmediate_operand\" \"\")\n+(define_expand \"lround<SSEMODEF:mode><SSEMODEI24:mode>2\"\n+  [(match_operand:SSEMODEI24 0 \"nonimmediate_operand\" \"\")\n    (match_operand:SSEMODEF 1 \"register_operand\" \"\")]\n   \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n+   && ((<SSEMODEI24:MODE>mode != DImode) || TARGET_64BIT)\n    && !flag_trapping_math && !flag_rounding_math\n    && !optimize_size\"\n {"}]}