{"sha": "1cb62d16c2d4c090117766d5dfc67c5badb0617c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNiNjJkMTZjMmQ0YzA5MDExNzc2NmQ1ZGZjNjdjNWJhZGIwNjE3Yw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2015-12-14T19:31:51Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2015-12-14T19:31:51Z"}, "message": "re PR fortran/68850 (Coarray events: EVENT_QUERY not documented as intrinsic subroutine)\n\n2014-12-14  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/68850\n        * gfortran.texi (Standards): Mention TS 18508.\n        (Fortran 2003 and 2008 Status): Add section on TS 18508 status.\n        * intrinsic.texi (EVENT_QUERY): Add.\n\nFrom-SVN: r231631", "tree": {"sha": "381446f92f1d7a260380a97c71bdccb57d42f69f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/381446f92f1d7a260380a97c71bdccb57d42f69f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cb62d16c2d4c090117766d5dfc67c5badb0617c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cb62d16c2d4c090117766d5dfc67c5badb0617c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cb62d16c2d4c090117766d5dfc67c5badb0617c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cb62d16c2d4c090117766d5dfc67c5badb0617c/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0482b001d456f04130084df8a841bb7159b3d383", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0482b001d456f04130084df8a841bb7159b3d383", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0482b001d456f04130084df8a841bb7159b3d383"}], "stats": {"total": 81, "additions": 79, "deletions": 2}, "files": [{"sha": "869215dbe5ad1449234664bf51fe918931a14984", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cb62d16c2d4c090117766d5dfc67c5badb0617c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cb62d16c2d4c090117766d5dfc67c5badb0617c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1cb62d16c2d4c090117766d5dfc67c5badb0617c", "patch": "@@ -1,3 +1,10 @@\n+2014-12-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/68850\n+\t* gfortran.texi (Standards): Mention TS 18508.\n+\t(Fortran 2003 and 2008 Status): Add section on TS 18508 status.\n+\t* intrinsic.texi (EVENT_QUERY): Add.\n+\n 2014-12-12  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/45859"}, {"sha": "7a8318c3aedc5e5dd951374f2f9d28c7366bf837", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cb62d16c2d4c090117766d5dfc67c5badb0617c/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cb62d16c2d4c090117766d5dfc67c5badb0617c/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=1cb62d16c2d4c090117766d5dfc67c5badb0617c", "patch": "@@ -532,8 +532,8 @@ GNU Fortran also have a partial support for ISO/IEC 1539-1:2004 (Fortran\n @code{Further Interoperability of Fortran with C} (ISO/IEC TS 29113:2012).\n Full support of those standards and future Fortran standards is planned.\n The current status of the support is can be found in the\n-@ref{Fortran 2003 status}, @ref{Fortran 2008 status} and\n-@ref{TS 29113 status} sections of the documentation.\n+@ref{Fortran 2003 status}, @ref{Fortran 2008 status}, @ref{TS 29113 status}\n+and @ref{TS 18508 status} sections of the documentation.\n \n Additionally, the GNU Fortran compilers supports the OpenMP specification\n (version 4.0, @url{http://openmp.org/@/wp/@/openmp-specifications/}).\n@@ -801,6 +801,7 @@ compile option was used.\n * Fortran 2003 status::\n * Fortran 2008 status::\n * TS 29113 status::\n+* TS 18508 status::\n @end menu\n \n @node Fortran 2003 status\n@@ -1130,6 +1131,23 @@ of the TS is not yet supported.\n @end itemize\n \n \n+@node TS 18508 status\n+@section Technical Specification 18508 Status\n+\n+GNU Fortran supports the following new features of the Technical\n+Specification 18508 on Additional Parallel Features in Fortran:\n+\n+@itemize\n+@item The new atomic ADD, CAS, FETCH and ADD/OR/XOR, OR and XOR intrinsics.\n+\n+@item The @code{CO_MIN} and @code{CO_MAX} and @code{SUM} reduction intrinsics.\n+And the @code{CO_BROADCAST} and @code{CO_REDUCE} intrinsic, except that those\n+do not support polymorphic types or types with allocatable, pointer or\n+polymorphic components.\n+\n+@item Events (@code{EVENT POST}, @code{EVENT WAIT}, @code{EVENT_QUERY})\n+@end itemize\n+\n \n @c ---------------------------------------------------------------------\n @c Compiler Characteristics"}, {"sha": "a61a0bc8d66a28bddfc3b7795e19f5055f4383db", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cb62d16c2d4c090117766d5dfc67c5badb0617c/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cb62d16c2d4c090117766d5dfc67c5badb0617c/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=1cb62d16c2d4c090117766d5dfc67c5badb0617c", "patch": "@@ -128,6 +128,7 @@ Some basic guidelines for editing this document:\n * @code{ERFC}:          ERFC,      Complementary error function\n * @code{ERFC_SCALED}:   ERFC_SCALED, Exponentially-scaled complementary error function\n * @code{ETIME}:         ETIME,     Execution time subroutine (or function)\n+* @code{EVENT_QUERY}: EVENT_QUERY, Query whether a coarray event has occurred\n * @code{EXECUTE_COMMAND_LINE}: EXECUTE_COMMAND_LINE, Execute a shell command\n * @code{EXIT}:          EXIT,      Exit the program with status.\n * @code{EXP}:           EXP,       Exponential function\n@@ -5063,6 +5064,57 @@ end program test_etime\n \n \n \n+@node EVENT_QUERY\n+@section @code{EVENT_QUERY} --- Query whether a coarray event has occurred\n+@fnindex EVENT_QUERY\n+@cindex Events, EVENT_QUERY\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{EVENT_QUERY} assignes the number of events to @var{COUNT} which have been\n+posted to the @var{EVENT} variable and not yet been removed by calling\n+@code{EVENT WAIT}. When @var{STAT} is present and the invokation was successful,\n+it is assigned the value 0. If it is present and the invokation has failed,\n+it is assigned a positive value and @var{COUNT} is assigned the value @math{-1}.\n+\n+@item @emph{Standard}:\n+TS 18508 or later\n+\n+@item @emph{Class}:\n+ subroutine\n+\n+@item @emph{Syntax}:\n+@code{CALL EVENT_QUERY (EVENT, COUNT [, STAT])}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .70\n+@item @var{EVENT}  @tab (intent(IN)) Scalar of type @code{EVENT_TYPE},\n+defined in @code{ISO_FORTRAN_ENV}; shall not be coindexed.\n+@item @var{COUNT}  @tab (intent(out))Scalar integer with at least the\n+precision of default integer.\n+@item @var{STAT}   @tab (optional) Scalar default-kind integer variable.\n+@end multitable\n+\n+@item @emph{Example}:\n+@smallexample\n+program atomic\n+  use iso_fortran_env\n+  implicit none\n+  type(event_type) :: event_value_has_been_set[*]\n+  integer :: cnt\n+  if (this_image() == 1) then\n+    call event_query (event_value_has_been_set, cnt)\n+    if (cnt > 0) write(*,*) \"Value has been set\"\n+  elseif (this_image() == 2) then\n+    event post (event_value_has_been_set[1])\n+  end if\n+end program atomic\n+@end smallexample\n+\n+@end table\n+\n+\n+\n @node EXECUTE_COMMAND_LINE\n @section @code{EXECUTE_COMMAND_LINE} --- Execute a shell command\n @fnindex EXECUTE_COMMAND_LINE"}]}