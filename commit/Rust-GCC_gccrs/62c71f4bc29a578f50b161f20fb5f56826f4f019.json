{"sha": "62c71f4bc29a578f50b161f20fb5f56826f4f019", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJjNzFmNGJjMjlhNTc4ZjUwYjE2MWYyMGZiNWY1NjgyNmY0ZjAxOQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-06-20T17:38:23Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-06-20T17:38:23Z"}, "message": "utils.c (init_gigi_decls): Use ARRAY_SIZE in lieu of explicit array size calculation.\n\nada:\n\t* utils.c (init_gigi_decls): Use ARRAY_SIZE in lieu of explicit\n\tarray size calculation.\n\ngcc:\n\t* c-decl.c (c_decode_option): Use ARRAY_SIZE in lieu of explicit\n\tarray size calculation.\n\t* gengtype.c (NUM_BASE_FILES, create_file, write_gc_root):\n\tLikewise.\n\ncp:\n\t* spew.c (remove_last_token): Use ARRAY_SIZE in lieu of explicit\n\tarray size calculation.\n\nFrom-SVN: r54842", "tree": {"sha": "89ff6f0d58f92f38de7a3e21d97dfec40754eca5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89ff6f0d58f92f38de7a3e21d97dfec40754eca5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62c71f4bc29a578f50b161f20fb5f56826f4f019", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c71f4bc29a578f50b161f20fb5f56826f4f019", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62c71f4bc29a578f50b161f20fb5f56826f4f019", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c71f4bc29a578f50b161f20fb5f56826f4f019/comments", "author": null, "committer": null, "parents": [{"sha": "ef9772c835143b69b86dffcc57208de414259c83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9772c835143b69b86dffcc57208de414259c83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef9772c835143b69b86dffcc57208de414259c83"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "f3796e22084fbc56ba363bf003234ff9cee38b28", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c71f4bc29a578f50b161f20fb5f56826f4f019/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c71f4bc29a578f50b161f20fb5f56826f4f019/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62c71f4bc29a578f50b161f20fb5f56826f4f019", "patch": "@@ -1,5 +1,10 @@\n 2002-06-20  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n+\t* c-decl.c (c_decode_option): Use ARRAY_SIZE in lieu of explicit\n+\tarray size calculation.\n+\t* gengtype.c (NUM_BASE_FILES, create_file, write_gc_root):\n+\tLikewise.\n+\n \t* diagnostic.c (diagnostic_kind_text): Const-ify.\n \t* gengtype.c (lang_names): Likewise.\n "}, {"sha": "7ecd0257f5330befc0191248863cc7d573a4abb5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c71f4bc29a578f50b161f20fb5f56826f4f019/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c71f4bc29a578f50b161f20fb5f56826f4f019/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=62c71f4bc29a578f50b161f20fb5f56826f4f019", "patch": "@@ -1,3 +1,8 @@\n+2002-06-20  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* utils.c (init_gigi_decls): Use ARRAY_SIZE in lieu of explicit\n+\tarray size calculation.\n+\n 2002-06-04  Andreas Jaeger  <aj@suse.de>\n \n \t* Make-lang.in (gnatbind): Readd rule that has been lost in last"}, {"sha": "d820401f20f584be458a78cad83bbde2ae1b2695", "filename": "gcc/ada/utils.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c71f4bc29a578f50b161f20fb5f56826f4f019/gcc%2Fada%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c71f4bc29a578f50b161f20fb5f56826f4f019/gcc%2Fada%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils.c?ref=62c71f4bc29a578f50b161f20fb5f56826f4f019", "patch": "@@ -625,13 +625,12 @@ init_gigi_decls (long_long_float_type, exception_type)\n \t\t\t\t\t\t      endlink))),\n \t   NULL_TREE, 0, 1, 1, 0);\n \n-      for (i = 0; i < sizeof gnat_raise_decls / sizeof gnat_raise_decls[0];\n-\t   i++)\n+      for (i = 0; i < ARRAY_SIZE (gnat_raise_decls); i++)\n \tgnat_raise_decls[i] = decl;\n     }\n   else\n     /* Otherwise, make one decl for each exception reason.  */\n-    for (i = 0; i < sizeof gnat_raise_decls / sizeof gnat_raise_decls[0]; i++)\n+    for (i = 0; i < ARRAY_SIZE (gnat_raise_decls); i++)\n       {\n \tchar name[17];\n \n@@ -656,7 +655,7 @@ init_gigi_decls (long_long_float_type, exception_type)\n     = build_qualified_type (TREE_TYPE (raise_nodefer_decl),\n \t\t\t    TYPE_QUAL_VOLATILE);\n \n-  for (i = 0; i < sizeof gnat_raise_decls / sizeof gnat_raise_decls[0]; i++)\n+  for (i = 0; i < ARRAY_SIZE (gnat_raise_decls); i++)\n     {\n       TREE_THIS_VOLATILE (gnat_raise_decls[i]) = 1;\n       TREE_SIDE_EFFECTS (gnat_raise_decls[i]) = 1;"}, {"sha": "23134e385b7b86c82417b9d97364b6b5a0caf3e3", "filename": "gcc/c-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c71f4bc29a578f50b161f20fb5f56826f4f019/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c71f4bc29a578f50b161f20fb5f56826f4f019/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=62c71f4bc29a578f50b161f20fb5f56826f4f019", "patch": "@@ -697,7 +697,7 @@ c_decode_option (argc, argv)\n   else\n     {\n       size_t i;\n-      for (i = 0; i < sizeof (warn_options) / sizeof (warn_options[0]); i++)\n+      for (i = 0; i < ARRAY_SIZE (warn_options); i++)\n \tif (strncmp (p, \"-W\", 2) == 0 \n \t    && warn_options[i].flag\n \t    && (strcmp (p+2, warn_options[i].option) == 0"}, {"sha": "4a37ab3fe0bdfa348d07b6eed9aa2463e52f86a2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c71f4bc29a578f50b161f20fb5f56826f4f019/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c71f4bc29a578f50b161f20fb5f56826f4f019/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=62c71f4bc29a578f50b161f20fb5f56826f4f019", "patch": "@@ -1,3 +1,8 @@\n+2002-06-20  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* spew.c (remove_last_token): Use ARRAY_SIZE in lieu of explicit\n+\tarray size calculation.\n+\n 2002-06-20  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/6892"}, {"sha": "56990a4117506236d25d537af0b76211192d9944", "filename": "gcc/cp/spew.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c71f4bc29a578f50b161f20fb5f56826f4f019/gcc%2Fcp%2Fspew.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c71f4bc29a578f50b161f20fb5f56826f4f019/gcc%2Fcp%2Fspew.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fspew.c?ref=62c71f4bc29a578f50b161f20fb5f56826f4f019", "patch": "@@ -1063,7 +1063,7 @@ remove_last_token (t)\n       for (tc = &t->tokens; (*tc)->next != NULL; tc = &(*tc)->next)\n \t;\n       *tc = NULL;\n-      t->last_pos = sizeof ((*tc)->toks) / sizeof ((*tc)->toks[0]);\n+      t->last_pos = ARRAY_SIZE ((*tc)->toks);\n     }\n   return result;\n }"}, {"sha": "e58fc35dd8608d6bf7163b80be661c1a4eebea02", "filename": "gcc/gengtype.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c71f4bc29a578f50b161f20fb5f56826f4f019/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c71f4bc29a578f50b161f20fb5f56826f4f019/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=62c71f4bc29a578f50b161f20fb5f56826f4f019", "patch": "@@ -525,7 +525,7 @@ enum {\n static const char *const lang_names[] = {\n   \"c\", \"objc\", \"cp\", \"treelang\", \"cobol\", \"f\", \"ada\", \"java\"\n };\n-#define NUM_BASE_FILES (sizeof (lang_names) / sizeof (lang_names[0]))\n+#define NUM_BASE_FILES ARRAY_SIZE (lang_names)\n outf_p base_files[NUM_BASE_FILES];\n \n static outf_p create_file PARAMS ((const char *, const char *));\n@@ -570,7 +570,7 @@ create_file (name, oname)\n   output_files = f;\n \n   oprintf (f, \"/* Type information for %s.\\n\", name);\n-  for (i = 0; i < sizeof(hdr)/sizeof(hdr[0]); i++)\n+  for (i = 0; i < ARRAY_SIZE (hdr); i++)\n     oprintf (f, \"%s\", hdr[i]);\n   return f;\n }\n@@ -1626,8 +1626,7 @@ write_gc_root (f, v, type, name, has_length, line, if_marked)\n \t  if (ap->u.a.len[0])\n \t    oprintf (f, \" * (%s)\", ap->u.a.len);\n \t  else if (ap == v->type)\n-\t    oprintf (f, \" * (sizeof (%s) / sizeof (%s[0]))\",\n-\t\t     v->name, v->name);\n+\t    oprintf (f, \" * ARRAY_SIZE (%s)\", v->name);\n \toprintf (f, \",\\n\");\n \toprintf (f, \"    sizeof (%s\", v->name);\n \tfor (ap = v->type; ap->kind == TYPE_ARRAY; ap = ap->u.a.p)"}]}