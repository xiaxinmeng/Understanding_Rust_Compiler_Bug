{"sha": "7d24f650fa1886c29e2431c969e5b7e6f8a50836", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QyNGY2NTBmYTE4ODZjMjllMjQzMWM5NjllNWI3ZTZmOGE1MDgzNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-03-27T10:38:29Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-03-27T10:38:29Z"}, "message": "re PR tree-optimization/37021 (Fortran Complex reduction / multiplication not vectorized)\n\n2013-03-27  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/37021\n\t* tree-vect-data-refs.c (vect_check_strided_load): Allow\n\tREALPART/IMAGPART_EXPRs around the supported refs.\n\t* tree-ssa-structalias.c (find_func_aliases): Assume that\n\tfloating-point values are not used to transfer pointers.\n\n\t* gfortran.dg/vect/fast-math-pr37021.f90: New testcase.\n\nFrom-SVN: r197158", "tree": {"sha": "92e4267a0b2c2fc61b604712594ccbfdf4f9e8c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92e4267a0b2c2fc61b604712594ccbfdf4f9e8c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d24f650fa1886c29e2431c969e5b7e6f8a50836", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d24f650fa1886c29e2431c969e5b7e6f8a50836", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d24f650fa1886c29e2431c969e5b7e6f8a50836", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d24f650fa1886c29e2431c969e5b7e6f8a50836/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "173536ed5f1dffb39cd220678d9e246bbafd86f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/173536ed5f1dffb39cd220678d9e246bbafd86f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/173536ed5f1dffb39cd220678d9e246bbafd86f6"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "b90cc6738ca53ae08ff94eeaca87eb1bc7529b5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d24f650fa1886c29e2431c969e5b7e6f8a50836/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d24f650fa1886c29e2431c969e5b7e6f8a50836/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d24f650fa1886c29e2431c969e5b7e6f8a50836", "patch": "@@ -1,3 +1,11 @@\n+2013-03-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/37021\n+\t* tree-vect-data-refs.c (vect_check_strided_load): Allow\n+\tREALPART/IMAGPART_EXPRs around the supported refs.\n+\t* tree-ssa-structalias.c (find_func_aliases): Assume that\n+\tfloating-point values are not used to transfer pointers.\n+\n 2013-03-27  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \n \t* gcc/target.def (TARGET_HAS_IFUNC_P): New target hook."}, {"sha": "17d588908bd90893abb74d499ef314122c0c9d39", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d24f650fa1886c29e2431c969e5b7e6f8a50836/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d24f650fa1886c29e2431c969e5b7e6f8a50836/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7d24f650fa1886c29e2431c969e5b7e6f8a50836", "patch": "@@ -1,3 +1,8 @@\n+2013-03-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/37021\n+\t* gfortran.dg/vect/fast-math-pr37021.f90: New testcase.\n+\n 2013-03-27  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \n \t* g++.dg/ipa/ivinline-1.C: Add target nonpic."}, {"sha": "d2eebd435741cd6c6f81635357752c92d7f61f66", "filename": "gcc/testsuite/gfortran.dg/vect/fast-math-pr37021.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d24f650fa1886c29e2431c969e5b7e6f8a50836/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Ffast-math-pr37021.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d24f650fa1886c29e2431c969e5b7e6f8a50836/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Ffast-math-pr37021.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Ffast-math-pr37021.f90?ref=7d24f650fa1886c29e2431c969e5b7e6f8a50836", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do compile }\n+\n+subroutine to_product_of(self,a,b,a1,a2)\n+  complex(kind=8) :: self (:)\n+  complex(kind=8), intent(in) :: a(:,:)\n+  complex(kind=8), intent(in) :: b(:)\n+  integer a1,a2\n+  self = ZERO\n+  do i = 1,a1\n+    do j = 1,a2\n+      self(i) = self(i) + a(i,j)*b(j)\n+    end do\n+  end do\n+end subroutine\n+\n+! { dg-final { scan-tree-dump \"vectorized 1 loops\" \"vect\" } }\n+! { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "c588e876b2bb2cca836c96927bef13bc8a835dfa", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d24f650fa1886c29e2431c969e5b7e6f8a50836/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d24f650fa1886c29e2431c969e5b7e6f8a50836/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=7d24f650fa1886c29e2431c969e5b7e6f8a50836", "patch": "@@ -4631,7 +4631,11 @@ find_func_aliases (gimple origt)\n \n \t  get_constraint_for (lhsop, &lhsc);\n \n-\t  if (code == POINTER_PLUS_EXPR)\n+\t  if (FLOAT_TYPE_P (TREE_TYPE (lhsop)))\n+\t    /* If the operation produces a floating point result then\n+\t       assume the value is not produced to transfer a pointer.  */\n+\t    ;\n+\t  else if (code == POINTER_PLUS_EXPR)\n \t    get_constraint_for_ptr_offset (gimple_assign_rhs1 (t),\n \t\t\t\t\t   gimple_assign_rhs2 (t), &rhsc);\n \t  else if (code == BIT_AND_EXPR"}, {"sha": "188581f6246bc4c9765846b0ddc1e386239245be", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d24f650fa1886c29e2431c969e5b7e6f8a50836/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d24f650fa1886c29e2431c969e5b7e6f8a50836/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=7d24f650fa1886c29e2431c969e5b7e6f8a50836", "patch": "@@ -2798,6 +2798,10 @@ vect_check_strided_load (gimple stmt, loop_vec_info loop_vinfo)\n \n   base = DR_REF (dr);\n \n+  if (TREE_CODE (base) == REALPART_EXPR\n+      || TREE_CODE (base) == IMAGPART_EXPR)\n+    base = TREE_OPERAND (base, 0);\n+\n   if (TREE_CODE (base) == ARRAY_REF)\n     {\n       off = TREE_OPERAND (base, 1);"}]}