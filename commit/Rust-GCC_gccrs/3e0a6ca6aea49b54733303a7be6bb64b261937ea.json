{"sha": "3e0a6ca6aea49b54733303a7be6bb64b261937ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UwYTZjYTZhZWE0OWI1NDczMzMwM2E3YmU2YmI2NGIyNjE5MzdlYQ==", "commit": {"author": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2005-08-06T21:11:54Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2005-08-06T21:11:54Z"}, "message": "genattrtab.c (write_attr_get, [...]): Use insn_code member only if only one insn is associated with the value.\n\n\t* genattrtab.c (write_attr_get, write_attr_case): Use insn_code\n\tmember only if only one insn is associated with the value.\n\nFrom-SVN: r102816", "tree": {"sha": "bfcb660e22637e48c3765280e8934374795777b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfcb660e22637e48c3765280e8934374795777b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e0a6ca6aea49b54733303a7be6bb64b261937ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e0a6ca6aea49b54733303a7be6bb64b261937ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e0a6ca6aea49b54733303a7be6bb64b261937ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e0a6ca6aea49b54733303a7be6bb64b261937ea/comments", "author": null, "committer": null, "parents": [{"sha": "9da375252f4120e75292b93f4d03b9a7aa95f084", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9da375252f4120e75292b93f4d03b9a7aa95f084", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9da375252f4120e75292b93f4d03b9a7aa95f084"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "92ef347c24aa654320538cc793672b70210b873a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e0a6ca6aea49b54733303a7be6bb64b261937ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e0a6ca6aea49b54733303a7be6bb64b261937ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e0a6ca6aea49b54733303a7be6bb64b261937ea", "patch": "@@ -1,19 +1,24 @@\n+2005-08-06  Michael Matz  <matz@suse.de>\n+\n+\t* genattrtab.c (write_attr_get, write_attr_case): Use insn_code\n+\tmember only if only one insn is associated with the value.\n+\n 2005-08-06  Nick Clifton  <nickc@redhat.com>\n \n \t* config/stormy16/stormy16.h (SYMBOL_FLAG_XSTORMY16_BELOW100):\n \tNew define.\n-        (ASM_OUTPUT_LABELREF): Delete - it is no longer needed.\n+\t(ASM_OUTPUT_LABELREF): Delete - it is no longer needed.\n \t* config/stormy16/stormy16.c (xstormy16_below100_symbol):\n \tCheck symbol flags instead of symbol name mangling.\n-        (xstormy16_asm_output_aligned_common): Likewise.  Also\n+\t(xstormy16_asm_output_aligned_common): Likewise.  Also\n \tsimplify code since the bss100_section cass is the only case\n \twhere the below100 code will be triggered.\n-        (xstormy16_encode_section_info): Encode below100 attribute\n+\t(xstormy16_encode_section_info): Encode below100 attribute\n \tusing the SYMBOL_FLAG_XSTORMY16_BELOW100 instead of mangling\n \tthe name.\n-        (xstormy16_strip_name_encoding): Delete - this function is no\n+\t(xstormy16_strip_name_encoding): Delete - this function is no\n \tlonger needed.\n-        (TARGET_STRIP_NAME_ENCODING): Undefine.\n+\t(TARGET_STRIP_NAME_ENCODING): Undefine.\n \t* config/stormy16/stormy16-protos.h: Delete prototype for\n \txstormy16_strip_name_encoding.\n "}, {"sha": "78a61e86981cfb4dd1335a06bf4f8fdfd46bae4f", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e0a6ca6aea49b54733303a7be6bb64b261937ea/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e0a6ca6aea49b54733303a7be6bb64b261937ea/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=3e0a6ca6aea49b54733303a7be6bb64b261937ea", "patch": "@@ -3677,10 +3677,13 @@ write_attr_get (struct attr_desc *attr)\n       printf (\"{\\n\");\n \n       for (av = attr->first_value; av; av = av->next)\n-\tif (av->num_insns != 0)\n+\tif (av->num_insns == 1)\n \t  write_attr_set (attr, 2, av->value, \"return\", \";\",\n \t\t\t  true_rtx, av->first_insn->def->insn_code,\n \t\t\t  av->first_insn->def->insn_index);\n+\telse if (av->num_insns != 0)\n+\t  write_attr_set (attr, 2, av->value, \"return\", \";\",\n+\t\t\t  true_rtx, -2, 0);\n \n       printf (\"}\\n\\n\");\n       return;\n@@ -3882,9 +3885,13 @@ write_attr_case (struct attr_desc *attr, struct attr_value *av,\n       printf (\"extract_insn_cached (insn);\\n\");\n     }\n \n-  write_attr_set (attr, indent + 2, av->value, prefix, suffix,\n-\t\t  known_true, av->first_insn->def->insn_code,\n-\t\t  av->first_insn->def->insn_index);\n+  if (av->num_insns == 1)\n+    write_attr_set (attr, indent + 2, av->value, prefix, suffix,\n+\t\t    known_true, av->first_insn->def->insn_code,\n+\t\t    av->first_insn->def->insn_index);\n+  else\n+    write_attr_set (attr, indent + 2, av->value, prefix, suffix,\n+\t\t    known_true, -2, 0);\n \n   if (strncmp (prefix, \"return\", 6))\n     {"}]}