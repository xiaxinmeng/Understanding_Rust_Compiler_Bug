{"sha": "f0b8d9aab46ec64cd1a42ac2bc6d3c47df52a513", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBiOGQ5YWFiNDZlYzY0Y2QxYTQyYWMyYmM2ZDNjNDdkZjUyYTUxMw==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@issan.informatik.uni-dortmund.de", "date": "1998-06-19T01:46:50Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "1998-06-19T01:46:50Z"}, "message": "c-common.c (truthvalue_conversion): Protect side effects in the expression when splitting a complex value.\n\n\t* c-common.c (truthvalue_conversion): Protect side effects in the\n\texpression when splitting a complex value.\n\t* fold-const.c (fold): Likewise.\n\nFrom-SVN: r20580", "tree": {"sha": "511e2ebe6a5a9b3cd70413e4381c906b737049fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/511e2ebe6a5a9b3cd70413e4381c906b737049fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0b8d9aab46ec64cd1a42ac2bc6d3c47df52a513", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0b8d9aab46ec64cd1a42ac2bc6d3c47df52a513", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0b8d9aab46ec64cd1a42ac2bc6d3c47df52a513", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0b8d9aab46ec64cd1a42ac2bc6d3c47df52a513/comments", "author": null, "committer": null, "parents": [{"sha": "c4137c50396559f083f9b618725917022baecbf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4137c50396559f083f9b618725917022baecbf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4137c50396559f083f9b618725917022baecbf1"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "af13373f7aefe68dbef5b7582438bbe1d0e406d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0b8d9aab46ec64cd1a42ac2bc6d3c47df52a513/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0b8d9aab46ec64cd1a42ac2bc6d3c47df52a513/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f0b8d9aab46ec64cd1a42ac2bc6d3c47df52a513", "patch": "@@ -1,3 +1,9 @@\n+Fri Jun 19 10:43:52 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* c-common.c (truthvalue_conversion): Protect side effects in the\n+\texpression when splitting a complex value.\n+\t* fold-const.c (fold): Likewise. \n+\n Fri Jun 19 02:31:16 1998  Klaus Kaempf (kkaempf@progis.de)\n \n \t* cccp.c (hack_vms_include_specification): rewrite to handle"}, {"sha": "3a22c17418067e283e749c9b857cd01d6a095e45", "filename": "gcc/c-common.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0b8d9aab46ec64cd1a42ac2bc6d3c47df52a513/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0b8d9aab46ec64cd1a42ac2bc6d3c47df52a513/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=f0b8d9aab46ec64cd1a42ac2bc6d3c47df52a513", "patch": "@@ -2670,12 +2670,15 @@ truthvalue_conversion (expr)\n     }\n \n   if (TREE_CODE (TREE_TYPE (expr)) == COMPLEX_TYPE)\n-    return (build_binary_op\n-\t    ((TREE_SIDE_EFFECTS (expr)\n-\t      ? TRUTH_OR_EXPR : TRUTH_ORIF_EXPR),\n-\t     truthvalue_conversion (build_unary_op (REALPART_EXPR, expr, 0)),\n-\t     truthvalue_conversion (build_unary_op (IMAGPART_EXPR, expr, 0)),\n-\t     0));\n+    {\n+      tree tem = save_expr (expr);\n+      return (build_binary_op\n+\t      ((TREE_SIDE_EFFECTS (expr)\n+\t\t? TRUTH_OR_EXPR : TRUTH_ORIF_EXPR),\n+\t       truthvalue_conversion (build_unary_op (REALPART_EXPR, tem, 0)),\n+\t       truthvalue_conversion (build_unary_op (IMAGPART_EXPR, tem, 0)),\n+\t       0));\n+    }\n \n   return build_binary_op (NE_EXPR, expr, integer_zero_node, 1);\n }"}, {"sha": "30499a178dec3ca8b9fe862390e6cf338ce4bce9", "filename": "gcc/fold-const.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0b8d9aab46ec64cd1a42ac2bc6d3c47df52a513/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0b8d9aab46ec64cd1a42ac2bc6d3c47df52a513/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=f0b8d9aab46ec64cd1a42ac2bc6d3c47df52a513", "patch": "@@ -5656,10 +5656,14 @@ fold (expr)\n \t      || TREE_CODE (arg1) == COMPLEX_EXPR))\n \t{\n \t  tree subtype = TREE_TYPE (TREE_TYPE (arg0));\n-\t  tree real0 = fold (build1 (REALPART_EXPR, subtype, arg0));\n-\t  tree imag0 = fold (build1 (IMAGPART_EXPR, subtype, arg0));\n-\t  tree real1 = fold (build1 (REALPART_EXPR, subtype, arg1));\n-\t  tree imag1 = fold (build1 (IMAGPART_EXPR, subtype, arg1));\n+\t  tree real0, imag0, real1, imag1;\n+\n+\t  arg0 = save_expr (arg0);\n+\t  arg1 = save_expr (arg1);\n+\t  real0 = fold (build1 (REALPART_EXPR, subtype, arg0));\n+\t  imag0 = fold (build1 (IMAGPART_EXPR, subtype, arg0));\n+\t  real1 = fold (build1 (REALPART_EXPR, subtype, arg1));\n+\t  imag1 = fold (build1 (IMAGPART_EXPR, subtype, arg1));\n \n \t  return fold (build ((code == EQ_EXPR ? TRUTH_ANDIF_EXPR\n \t\t\t       : TRUTH_ORIF_EXPR),"}]}