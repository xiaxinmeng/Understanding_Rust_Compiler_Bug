{"sha": "86403f0f329ea996b6323d4011d5da0111ab80d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY0MDNmMGYzMjllYTk5NmI2MzIzZDQwMTFkNWRhMDExMWFiODBkOA==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2005-06-05T18:03:47Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2005-06-05T18:03:47Z"}, "message": "re PR fortran/21912 (Wrong implied do-loop)\n\nfortran/\n\tPR fortran/21912\n\t* trans-array.c (gfc_trans_array_constructor_value): Slightly reorder.\n\tGenerate correct exit condition in case of negative steps in\n\timplied-do loops.\ntestsuite/\n\tPR fortran/21912\n\t* gfortran.dg/array_constructor_4.f90: New test.\n\nFrom-SVN: r100630", "tree": {"sha": "aca102703133fcb176eb7117ca293736b7291bf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aca102703133fcb176eb7117ca293736b7291bf9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86403f0f329ea996b6323d4011d5da0111ab80d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86403f0f329ea996b6323d4011d5da0111ab80d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86403f0f329ea996b6323d4011d5da0111ab80d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86403f0f329ea996b6323d4011d5da0111ab80d8/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88a7beb769bd14c1affeb7c801842058e3071ab6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88a7beb769bd14c1affeb7c801842058e3071ab6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88a7beb769bd14c1affeb7c801842058e3071ab6"}], "stats": {"total": 70, "additions": 57, "deletions": 13}, "files": [{"sha": "9ee540598c1f81ac8d8bae0c4b7e45ee1ffa4a92", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86403f0f329ea996b6323d4011d5da0111ab80d8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86403f0f329ea996b6323d4011d5da0111ab80d8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=86403f0f329ea996b6323d4011d5da0111ab80d8", "patch": "@@ -1,5 +1,10 @@\n 2005-06-05  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n \n+\tPR fortran/21912\n+\t* trans-array.c (gfc_trans_array_constructor_value): Slightly reorder.\n+\tGenerate correct exit condition in case of negative steps in\n+\timplied-do loops.\n+\n \t* invoke.texi: Fix description of flags required for compatibility\n \twith g77.\n "}, {"sha": "3554107ab832dd41c8ebbca14f79b50a9517fca9", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 24, "deletions": 13, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86403f0f329ea996b6323d4011d5da0111ab80d8/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86403f0f329ea996b6323d4011d5da0111ab80d8/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=86403f0f329ea996b6323d4011d5da0111ab80d8", "patch": "@@ -721,7 +721,6 @@ gfc_trans_array_constructor_value (stmtblock_t * pblock, tree type,\n {\n   tree tmp;\n   stmtblock_t body;\n-  tree loopbody;\n   gfc_se se;\n \n   for (; c; c = c->next)\n@@ -842,13 +841,23 @@ gfc_trans_array_constructor_value (stmtblock_t * pblock, tree type,\n             }\n \t}\n \n-      /* The frontend should already have done any expansions.  */\n-      if (c->iterator)\n+      /* The frontend should already have done any expansions possible\n+\t at compile-time.  */\n+      if (!c->iterator)\n+\t{\n+\t  /* Pass the code as is.  */\n+\t  tmp = gfc_finish_block (&body);\n+\t  gfc_add_expr_to_block (pblock, tmp);\n+\t}\n+      else\n \t{\n+\t  /* Build the implied do-loop.  */\n+\t  tree cond;\n \t  tree end;\n \t  tree step;\n \t  tree loopvar;\n \t  tree exit_label;\n+\t  tree loopbody;\n \n \t  loopbody = gfc_finish_block (&body);\n \n@@ -877,17 +886,25 @@ gfc_trans_array_constructor_value (stmtblock_t * pblock, tree type,\n \t  exit_label = gfc_build_label_decl (NULL_TREE);\n \t  gfc_start_block (&body);\n \n-\t  /* Generate the exit condition.  */\n-\t  end = build2 (GT_EXPR, boolean_type_node, loopvar, end);\n+\t  /* Generate the exit condition.  Depending on the sign of\n+\t     the step variable we have to generate the correct\n+\t     comparison.  */\n+\t  tmp = fold_build2 (GT_EXPR, boolean_type_node, step, \n+\t\t\t     build_int_cst (TREE_TYPE (step), 0));\n+\t  cond = fold_build3 (COND_EXPR, boolean_type_node, tmp,\n+\t\t\t      build2 (GT_EXPR, boolean_type_node,\n+\t\t\t\t      loopvar, end),\n+\t\t\t      build2 (LT_EXPR, boolean_type_node,\n+\t\t\t\t      loopvar, end));\n \t  tmp = build1_v (GOTO_EXPR, exit_label);\n \t  TREE_USED (exit_label) = 1;\n-\t  tmp = build3_v (COND_EXPR, end, tmp, build_empty_stmt ());\n+\t  tmp = build3_v (COND_EXPR, cond, tmp, build_empty_stmt ());\n \t  gfc_add_expr_to_block (&body, tmp);\n \n \t  /* The main loop body.  */\n \t  gfc_add_expr_to_block (&body, loopbody);\n \n-\t  /* Increment the loop variable.  */\n+\t  /* Increase loop variable by step.  */\n \t  tmp = build2 (PLUS_EXPR, TREE_TYPE (loopvar), loopvar, step);\n \t  gfc_add_modify_expr (&body, loopvar, tmp);\n \n@@ -900,12 +917,6 @@ gfc_trans_array_constructor_value (stmtblock_t * pblock, tree type,\n \t  tmp = build1_v (LABEL_EXPR, exit_label);\n \t  gfc_add_expr_to_block (pblock, tmp);\n \t}\n-      else\n-\t{\n-\t  /* Pass the code as is.  */\n-\t  tmp = gfc_finish_block (&body);\n-\t  gfc_add_expr_to_block (pblock, tmp);\n-\t}\n     }\n }\n "}, {"sha": "96bc58183ab5c25e208567da06314c978efc7930", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86403f0f329ea996b6323d4011d5da0111ab80d8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86403f0f329ea996b6323d4011d5da0111ab80d8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=86403f0f329ea996b6323d4011d5da0111ab80d8", "patch": "@@ -1,3 +1,8 @@\n+2005-06-05  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\tPR fortran/21912\n+\t* gfortran.dg/array_constructor_4.f90: New test.\n+\n 2005-06-05  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/21619"}, {"sha": "cae6515679312e45535744c914f2b822031bc68a", "filename": "gcc/testsuite/gfortran.dg/array_constructor_4.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86403f0f329ea996b6323d4011d5da0111ab80d8/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86403f0f329ea996b6323d4011d5da0111ab80d8/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_4.f90?ref=86403f0f329ea996b6323d4011d5da0111ab80d8", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do run }\n+! PR 21912\n+! We didn't adapt the exit condition to negative steps in array constructors,\n+! leaving the resulting arrays uninitialized.\n+integer :: i(5), n, m, l, k\n+\n+n = 5\n+i = (/ (m, m = n, 1, -1) /)\n+if (any (i /= (/ 5, 4, 3, 2, 1 /))) call abort\n+\n+k = 1\n+\n+i(5:1:-1) = (/ (m, m = n, k, -1) /)\n+if (any (i /= (/ 1, 2, 3, 4, 5 /))) call abort\n+\n+l = -1\n+\n+i = (/ (m, m = n, 1, l) /)\n+if (any (i /= (/ 5, 4, 3, 2, 1 /))) call abort\n+\n+i(5:1:-1) = (/ (m, m = n, k, l) /)\n+if (any (i /= (/ 1, 2, 3, 4, 5 /))) call abort\n+end"}]}