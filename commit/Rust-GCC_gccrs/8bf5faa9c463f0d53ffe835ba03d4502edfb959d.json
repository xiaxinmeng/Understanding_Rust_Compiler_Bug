{"sha": "8bf5faa9c463f0d53ffe835ba03d4502edfb959d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJmNWZhYTljNDYzZjBkNTNmZmU4MzViYTAzZDQ1MDJlZGZiOTU5ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-08T16:24:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-08T16:24:12Z"}, "message": "i386: Don't use AVX512F integral masks for V*TImode [PR94438]\n\nThe ix86_get_mask_mode hook uses int mask for 512-bit vectors or 128/256-bit\nvectors with AVX512VL (that is correct), and only for V*[SD][IF]mode if not\nAVX512BW (also correct), but with AVX512BW it would stop checking the\nelem_size altogether and pretend the hw has masking support for V*TImode\netc., which it doesn't.  That can lead to various ICEs later on.\n\n2020-04-08  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/94438\n\t* config/i386/i386.c (ix86_get_mask_mode): Only use int mask for elem_size\n\t1, 2, 4 and 8.\n\n\t* gcc.target/i386/avx512bw-pr94438.c: New test.\n\t* gcc.target/i386/avx512vlbw-pr94438.c: New test.", "tree": {"sha": "026440cd12565021038a2a84152fdf5701ece1e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/026440cd12565021038a2a84152fdf5701ece1e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bf5faa9c463f0d53ffe835ba03d4502edfb959d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bf5faa9c463f0d53ffe835ba03d4502edfb959d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bf5faa9c463f0d53ffe835ba03d4502edfb959d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bf5faa9c463f0d53ffe835ba03d4502edfb959d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "faa0817311f43e0d4d223d53c816b0c74ec35c4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faa0817311f43e0d4d223d53c816b0c74ec35c4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faa0817311f43e0d4d223d53c816b0c74ec35c4e"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "ec97a1e2bd18d8a3702afc6d07bb018f4431bba2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bf5faa9c463f0d53ffe835ba03d4502edfb959d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bf5faa9c463f0d53ffe835ba03d4502edfb959d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8bf5faa9c463f0d53ffe835ba03d4502edfb959d", "patch": "@@ -1,3 +1,9 @@\n+2020-04-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/94438\n+\t* config/i386/i386.c (ix86_get_mask_mode): Only use int mask for elem_size\n+\t1, 2, 4 and 8.\n+\n 2020-04-08  Martin Liska  <mliska@suse.cz>\n \n \tPR c++/94314"}, {"sha": "ca3b7dc06c233214b8a7ef4b2942333fe5019586", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bf5faa9c463f0d53ffe835ba03d4502edfb959d/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bf5faa9c463f0d53ffe835ba03d4502edfb959d/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=8bf5faa9c463f0d53ffe835ba03d4502edfb959d", "patch": "@@ -21771,7 +21771,9 @@ ix86_get_mask_mode (machine_mode data_mode)\n   if ((TARGET_AVX512F && vector_size == 64)\n       || (TARGET_AVX512VL && (vector_size == 32 || vector_size == 16)))\n     {\n-      if (elem_size == 4 || elem_size == 8 || TARGET_AVX512BW)\n+      if (elem_size == 4\n+\t  || elem_size == 8\n+\t  || (TARGET_AVX512BW && (elem_size == 1 || elem_size == 2)))\n \treturn smallest_int_mode_for_size (nunits);\n     }\n "}, {"sha": "e3600e0627a5323118f3cfd0d1c9d23f7aa1041e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bf5faa9c463f0d53ffe835ba03d4502edfb959d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bf5faa9c463f0d53ffe835ba03d4502edfb959d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8bf5faa9c463f0d53ffe835ba03d4502edfb959d", "patch": "@@ -1,3 +1,9 @@\n+2020-04-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/94438\n+\t* gcc.target/i386/avx512bw-pr94438.c: New test.\n+\t* gcc.target/i386/avx512vlbw-pr94438.c: New test.\n+\n 2020-04-08  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/93871"}, {"sha": "9e56f2846ee85f5d60996be81771b07207bb837a", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-pr94438.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bf5faa9c463f0d53ffe835ba03d4502edfb959d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr94438.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bf5faa9c463f0d53ffe835ba03d4502edfb959d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr94438.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr94438.c?ref=8bf5faa9c463f0d53ffe835ba03d4502edfb959d", "patch": "@@ -0,0 +1,13 @@\n+/* PR target/94438 */\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-mavx512bw\" } */\n+\n+typedef __attribute__ ((__vector_size__ (4 * sizeof (__int128)))) __int128 V;\n+void bar (V);\n+\n+void\n+foo (V w)\n+{\n+  V v = 0 <= (0 >= w);\n+  bar (v);\n+}"}, {"sha": "a0c52e426c8677a9331cc9d728730da7b082344c", "filename": "gcc/testsuite/gcc.target/i386/avx512vlbw-pr94438.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bf5faa9c463f0d53ffe835ba03d4502edfb959d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vlbw-pr94438.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bf5faa9c463f0d53ffe835ba03d4502edfb959d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vlbw-pr94438.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vlbw-pr94438.c?ref=8bf5faa9c463f0d53ffe835ba03d4502edfb959d", "patch": "@@ -0,0 +1,13 @@\n+/* PR target/94438 */\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-mavx512bw -mavx512vl\" } */\n+\n+typedef __attribute__ ((__vector_size__ (sizeof (__int128)))) __int128 V;\n+void bar (V);\n+\n+void\n+foo (V w)\n+{\n+  V v = 0 <= (0 >= w);\n+  bar (v);\n+}"}]}