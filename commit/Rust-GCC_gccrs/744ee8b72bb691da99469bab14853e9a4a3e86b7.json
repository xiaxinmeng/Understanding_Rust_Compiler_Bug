{"sha": "744ee8b72bb691da99469bab14853e9a4a3e86b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ0ZWU4YjcyYmI2OTFkYTk5NDY5YmFiMTQ4NTNlOWE0YTNlODZiNw==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-10-05T18:43:43Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-10-05T18:43:43Z"}, "message": "atomicity.h (__compare_and_swap): Remove unused function.\n\n2001-10-05  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* config/cpu/alpha/bits/atomicity.h (__compare_and_swap):  Remove\n\tunused function.\n\t* config/cpu/arm/bits/atomicity.h:  Likewise.\n\t* config/cpu/generic/bits/atomicity.h:  Likewise.\n\t* config/cpu/i486/bits/atomicity.h:  Likewise.\n\t* config/cpu/ia64/bits/atomicity.h:  Likewise.\n\t* config/cpu/mips/bits/atomicity.h:  Likewise.\n\t* config/cpu/powerpc/bits/atomicity.h:  Likewise.\n\t* config/cpu/sparc/sparc32/bits/atomicity.h:  Likewise.\n\t* config/cpu/sparc/sparc64/bits/atomicity.h:  Likewise.\n\nFrom-SVN: r46038", "tree": {"sha": "a454f478ec2a0a24afa4eb4191c141c734a4d034", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a454f478ec2a0a24afa4eb4191c141c734a4d034"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/744ee8b72bb691da99469bab14853e9a4a3e86b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/744ee8b72bb691da99469bab14853e9a4a3e86b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/744ee8b72bb691da99469bab14853e9a4a3e86b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/744ee8b72bb691da99469bab14853e9a4a3e86b7/comments", "author": null, "committer": null, "parents": [{"sha": "27d95cbe509237647de7892f492fd9d36c1630a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27d95cbe509237647de7892f492fd9d36c1630a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27d95cbe509237647de7892f492fd9d36c1630a5"}], "stats": {"total": 223, "additions": 13, "deletions": 210}, "files": [{"sha": "ae541c3b8527d9c77d71b4e362f381eba29cab57", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=744ee8b72bb691da99469bab14853e9a4a3e86b7", "patch": "@@ -1,3 +1,16 @@\n+2001-10-05  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* config/cpu/alpha/bits/atomicity.h (__compare_and_swap):  Remove\n+\tunused function.\n+\t* config/cpu/arm/bits/atomicity.h:  Likewise.\n+\t* config/cpu/generic/bits/atomicity.h:  Likewise.\n+\t* config/cpu/i486/bits/atomicity.h:  Likewise.\n+\t* config/cpu/ia64/bits/atomicity.h:  Likewise.\n+\t* config/cpu/mips/bits/atomicity.h:  Likewise.\n+\t* config/cpu/powerpc/bits/atomicity.h:  Likewise.\n+\t* config/cpu/sparc/sparc32/bits/atomicity.h:  Likewise.\n+\t* config/cpu/sparc/sparc64/bits/atomicity.h:  Likewise.\n+\n 2001-10-04  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* docs/html/faq/index.html:  Describe DR #22, and a workaround."}, {"sha": "895d87ae6eed1fb8a866ddb1c5722eea8e8e7fdc", "filename": "libstdc++-v3/config/cpu/alpha/bits/atomicity.h", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Falpha%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Falpha%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Falpha%2Fbits%2Fatomicity.h?ref=744ee8b72bb691da99469bab14853e9a4a3e86b7", "patch": "@@ -73,25 +73,4 @@ __atomic_add (volatile _Atomic_word* __mem, int __val)\n       : \"m\" (*__mem), \"r\"(__val));\n }\n \n-static inline int\n-__attribute__ ((__unused__))\n-__compare_and_swap (volatile long *__p, long __oldval, long __newval)\n-{\n-  int __ret;\n-\n-  __asm__ __volatile__ (\n-      \"\\n$Lcas_%=:\\n\\t\"\n-      \"ldq_l  %0,%4\\n\\t\"\n-      \"cmpeq  %0,%2,%0\\n\\t\"\n-      \"beq    %0,3f\\n\\t\"\n-      \"mov    %3,%0\\n\\t\"\n-      \"stq_c  %0,%1\\n\\t\"\n-      \"beq    %0,$Lcas_%=\\n\\t\"\n-      \"mb\"\n-      : \"=&r\"(__ret), \"=m\"(*__p)\n-      : \"r\"(__oldval), \"r\"(__newval), \"m\"(*__p));\n-\n-  return __ret;\n-}\n-\n #endif /* atomicity.h */"}, {"sha": "2363edf7cdfe9b3c7662f62e1b6c07b54fcb2a9e", "filename": "libstdc++-v3/config/cpu/arm/bits/atomicity.h", "status": "modified", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Farm%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Farm%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Farm%2Fbits%2Fatomicity.h?ref=744ee8b72bb691da99469bab14853e9a4a3e86b7", "patch": "@@ -127,63 +127,6 @@ __atomic_add (volatile _Atomic_word *__mem, int __val)\n #endif\n }\n \n-static inline int\n-__attribute__ ((__unused__))\n-__compare_and_swap (volatile long *__p, long __oldval, long __newval)\n-{\n-  int __result;\n-  long __tmp;\n-#ifdef __thumb__\n-  /* Since this function is inlined, we can't be sure of the alignment.  */\n-  __asm__ __volatile__ (\n-\t\"ldr     %0, 4f \\n\\t\"\n-\t\"bx      %0 \\n\\t\"\n-\t\".align 0 \\n\"\n-\t\"4:\\t\"\n-\t\".word   0f \\n\\t\"\n-\t\".code 32 \\n\"\n-\t\"0:\\t\"\n-\t\"ldr     %1, [%2] \\n\\t\"\n-        \"mov     %0, #0 \\n\\t\"\n-        \"cmp     %1, %4 \\n\\t\"\n-        \"bne     1f \\n\\t\"\n-        \"swp     %0, %3, [%2] \\n\\t\"\n-        \"cmp     %1, %0 \\n\\t\"\n-        \"swpne   %1, %0, [%2] \\n\\t\"\n-        \"bne     0b \\n\\t\"\n-        \"mov     %0, #1 \\n\"\n-\t\"1:\\t\"\n-\t\"ldr     %1, 2f \\n\\t\"\n-\t\"bx      %1 \\n\"\n-\t\"2:\\t\"\n-\t\".word   3f \\n\\t\"\n-\t\".code 16\\n\"\n-\t\"3:\\n\"\n-\t: \"=&l\"(__result), \"=&r\"(__tmp) \n-\t: \"r\" (__p), \"r\" (__newval), \"r\" (__oldval) \n-\t: \"cc\", \"memory\");\n-#else\n-  __asm__ __volatile__ (\n-\t\"\\n\"\n-\t\"0:\\t\"\n-\t\"ldr     %1, [%2] \\n\\t\"\n-\t\"mov     %0, #0 \\n\\t\"\n-\t\"cmp     %1, %4 \\n\\t\"\n-\t\"bne     1f \\n\\t\"\n-\t\"swp     %0, %3, [%2] \\n\\t\"\n-\t\"cmp     %1, %0 \\n\\t\"\n-\t\"swpne   %1, %0, [%2] \\n\\t\"\n-\t\"bne     0b \\n\\t\"\n-\t\"mov     %0, #1 \\n\"\n-\t\"1:\\n\\t\"\n-\t\"\"\n-\t: \"=&r\"(__result), \"=&r\"(__tmp) \n-\t: \"r\" (__p), \"r\" (__newval), \"r\" (__oldval) \n-\t: \"cc\", \"memory\");\n-#endif\n-  return __result;\n-}\n-\n static inline long\n __attribute__ ((__unused__))\n __always_swap (volatile long *__p, long __newval)"}, {"sha": "fca2b83d5844c5f9119e1cc7128613f13dfe4878", "filename": "libstdc++-v3/config/cpu/generic/bits/atomicity.h", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fbits%2Fatomicity.h?ref=744ee8b72bb691da99469bab14853e9a4a3e86b7", "patch": "@@ -48,15 +48,4 @@ __atomic_add (_Atomic_word* __mem, int __val)\n   *__mem += __val;\n }\n \n-static inline int\n-__attribute__ ((__unused__))\n-__compare_and_swap (long *__p, long __oldval, long __newval)\n-{\n-  if (*__p != __oldval)\n-    return 0;\n-\n-  *__p = __newval;\n-  return 1;\n-}\n-\n #endif /* atomicity.h */"}, {"sha": "92f5011c3a11cda31d9d3ee2ffb22298e4819125", "filename": "libstdc++-v3/config/cpu/i486/bits/atomicity.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi486%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi486%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi486%2Fbits%2Fatomicity.h?ref=744ee8b72bb691da99469bab14853e9a4a3e86b7", "patch": "@@ -52,19 +52,6 @@ __atomic_add (volatile _Atomic_word* __mem, int __val)\n \t\t\t: : \"ir\" (__val), \"m\" (*__mem) : \"memory\");\n }\n \n-static inline char\n-__attribute__ ((__unused__))\n-__compare_and_swap (volatile long* __p, long __oldval, long __newval)\n-{\n-  char __ret;\n-  long __readval;\n-\n-  __asm__ __volatile__ (\"lock; cmpxchgl %3, %1; sete %0\"\n-                        : \"=q\" (__ret), \"=m\" (*__p), \"=a\" (__readval)\n-                        : \"r\" (__newval), \"m\" (*__p), \"a\" (__oldval));\n-  return __ret;\n-}\n-\n #endif /* atomicity.h */\n \n "}, {"sha": "e28e1490ba551e737a0272d141b01657862a5216", "filename": "libstdc++-v3/config/cpu/ia64/bits/atomicity.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fia64%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fia64%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fia64%2Fbits%2Fatomicity.h?ref=744ee8b72bb691da99469bab14853e9a4a3e86b7", "patch": "@@ -48,11 +48,4 @@ __atomic_add (volatile _Atomic_word* __mem, int __val)\n   __sync_fetch_and_add (__mem, __val);\n }\n \n-static inline int\n-__attribute__ ((__unused__))\n-__compare_and_swap (volatile long *__p, long __oldval, long __newval)\n-{\n-  return __sync_bool_compare_and_swap (__p, __oldval, __newval);\n-}\n-\n #endif /* atomicity.h */"}, {"sha": "7878c6eeb91153f1b7bdd2d62d2e50724292ef9c", "filename": "libstdc++-v3/config/cpu/mips/bits/atomicity.h", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fmips%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fmips%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fmips%2Fbits%2Fatomicity.h?ref=744ee8b72bb691da99469bab14853e9a4a3e86b7", "patch": "@@ -75,31 +75,4 @@ __atomic_add (volatile _Atomic_word *__mem, int __val)\n      : \"memory\");\n }\n \n-static inline int\n-__attribute__ ((unused))\n-__compare_and_swap (volatile long int *__p, long int __oldval,\n-\t\t    long int __newval)\n-{\n-  long int __ret;\n-\n-  __asm__ __volatile__\n-    (\"/* Inline compare & swap */\\n\\t\"\n-     \"1:\\n\\t\"\n-     \"ll\t%0,%4\\n\\t\"\n-     \".set\tpush\\n\"\n-     \".set\tnoreorder\\n\\t\"\n-     \"bne\t%0,%2,2f\\n\\t\"\n-     \"move\t%0,%3\\n\\t\"\n-     \".set\tpop\\n\\t\"\n-     \"sc\t%0,%1\\n\\t\"\n-     \"beqz\t%0,1b\\n\"\n-     \"2:\\n\\t\"\n-     \"/* End compare & swap */\"\n-     : \"=&r\" (__ret), \"=m\" (*__p)\n-     : \"r\" (__oldval), \"r\" (__newval), \"m\" (*__p)\n-     : \"memory\");\n-\n-  return __ret;\n-}\n-\n #endif /* atomicity.h */"}, {"sha": "05addba57850a9096cc6d28de4ebf6dc5893ef3d", "filename": "libstdc++-v3/config/cpu/powerpc/bits/atomicity.h", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fbits%2Fatomicity.h?ref=744ee8b72bb691da99469bab14853e9a4a3e86b7", "patch": "@@ -69,28 +69,6 @@ __atomic_add (volatile _Atomic_word *__mem, int __val)\n \t: \"cr0\", \"memory\");\n }\n \n-static inline int\n-__attribute__ ((__unused__))\n-__compare_and_swap (volatile long *__p, long int __oldval, long int __newval)\n-{\n-  int __res;\n-  __asm__ __volatile__ (\n-\t\"/* Inline compare & swap */\\n\"\n-\t\"0:\\t\"\n-\t\"lwarx    %0,0,%1  \\n\\t\"\n-\t\"sub%I2c. %0,%0,%2 \\n\\t\"\n-\t\"cntlzw   %0,%0 \\n\\t\"\n-\t\"bne-     1f \\n\\t\"\n-\t\"stwcx.   %3,0,%1 \\n\\t\"\n-\t\"bne-     0b \\n\"\n-\t\"1:\\n\\t\"\n-\t\"/* End compare & swap */\"\n-\t: \"=&b\"(__res)\n-\t: \"r\"(__p), \"Ir\"(__oldval), \"r\"(__newval)\n-\t: \"cr0\", \"memory\");\n-  return __res >> 5;\n-}\n-\n static inline long\n __attribute__ ((__unused__))\n __always_swap (volatile long *__p, long int __newval)"}, {"sha": "6f9412cd5b4e85c7d509a83737f27e9e95a5e38c", "filename": "libstdc++-v3/config/cpu/sparc/sparc32/bits/atomicity.h", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fsparc%2Fsparc32%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fsparc%2Fsparc32%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fsparc%2Fsparc32%2Fbits%2Fatomicity.h?ref=744ee8b72bb691da99469bab14853e9a4a3e86b7", "patch": "@@ -76,33 +76,4 @@ __atomic_add (volatile _Atomic_word* __mem, int __val)\n \t\t       : \"memory\");\n }\n \n-static int\n-__attribute__ ((__unused__))\n-__compare_and_swap (volatile long *__p, long __oldval, long __newval)\n-{\n-  static unsigned char __lock;\n-  long __ret, __tmp;\n-\n-  __asm__ __volatile__(\"1:\tldstub\t[%1], %0\\n\\t\"\n-\t\t       \"\tcmp\t%0, 0\\n\\t\"\n-\t\t       \"\tbne\t1b\\n\\t\"\n-\t\t       \"\t nop\"\n-\t\t       : \"=&r\" (__tmp)\n-\t\t       : \"r\" (&__lock)\n-\t\t       : \"memory\");\n-  if (*__p != __oldval)\n-    __ret = 0;\n-  else\n-    {\n-      *__p = __newval;\n-      __ret = 1;\n-    }\n-  __asm__ __volatile__(\"stb\t%%g0, [%0]\"\n-\t\t       : /* no outputs */\n-\t\t       : \"r\" (&__lock)\n-\t\t       : \"memory\");\n-\n-  return __ret;\n-}\n-\n #endif /* atomicity.h */"}, {"sha": "e13ca82fad2ddea7783d7934e0da38bc1bf937fc", "filename": "libstdc++-v3/config/cpu/sparc/sparc64/bits/atomicity.h", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fsparc%2Fsparc64%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744ee8b72bb691da99469bab14853e9a4a3e86b7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fsparc%2Fsparc64%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fsparc%2Fsparc64%2Fbits%2Fatomicity.h?ref=744ee8b72bb691da99469bab14853e9a4a3e86b7", "patch": "@@ -67,27 +67,4 @@ __atomic_add (volatile _Atomic_word* __mem, int __val)\n \t\t       : \"memory\");\n }\n \n-static inline int\n-__attribute__ ((__unused__))\n-__compare_and_swap (volatile long *__p, long __oldval, long __newval)\n-{\n-  register int __tmp;\n-  register long __tmp2;\n-\n-  __asm__ __volatile__(\"1:\tldx\t[%4], %0\\n\\t\"\n-\t\t       \"\tmov\t%2, %1\\n\\t\"\n-\t\t       \"\tcmp\t%0, %3\\n\\t\"\n-\t\t       \"\tbne,a,pn %%xcc, 2f\\n\\t\"\n-\t\t       \"\t mov\t0, %0\\n\\t\"\n-\t\t       \"\tcasx\t[%4], %0, %1\\n\\t\"\n-\t\t       \"\tsub\t%0, %1, %0\\n\\t\"\n-\t\t       \"\tbrnz,pn\t%0, 1b\\n\\t\"\n-\t\t       \"\t mov\t1, %0\\n\\t\"\n-\t\t       \"2:\"\n-\t\t       : \"=&r\" (__tmp), \"=&r\" (__tmp2)\n-\t\t       : \"r\" (__newval), \"r\" (__oldval), \"r\" (__p)\n-\t\t       : \"memory\");\n-  return __tmp;\n-}\n-\n #endif /* atomicity.h */"}]}