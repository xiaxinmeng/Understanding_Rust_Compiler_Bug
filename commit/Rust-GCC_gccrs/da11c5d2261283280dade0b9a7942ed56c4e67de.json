{"sha": "da11c5d2261283280dade0b9a7942ed56c4e67de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGExMWM1ZDIyNjEyODMyODBkYWRlMGI5YTc5NDJlZDU2YzRlNjdkZQ==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2005-11-08T21:09:51Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2005-11-08T21:09:51Z"}, "message": "re PR c++/23046 (ICE in set_value_range, at tree-vrp.c:191)\n\n2005-11-08  James A. Morrison  <phython@gcc.gnu.org>\n\t    Diego Novillo  <dnovillo@redhat.com>\n\n\tPR 23046\n\t* tree-vrp.c (register_edge_assert_for): Do not register\n\talways-false predicates.\n\ntestsuite/\n\n\tPR 23046\n\t* g++.dg/tree-ssa/pr23046.C: New test.\n\nFrom-SVN: r106656", "tree": {"sha": "7ce2ce0fa788bb9692659c1a68227c1f9d006c4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ce2ce0fa788bb9692659c1a68227c1f9d006c4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da11c5d2261283280dade0b9a7942ed56c4e67de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da11c5d2261283280dade0b9a7942ed56c4e67de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da11c5d2261283280dade0b9a7942ed56c4e67de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da11c5d2261283280dade0b9a7942ed56c4e67de/comments", "author": null, "committer": null, "parents": [{"sha": "230d8ead8c85ba9068412c1773401b0f1cd44148", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/230d8ead8c85ba9068412c1773401b0f1cd44148", "html_url": "https://github.com/Rust-GCC/gccrs/commit/230d8ead8c85ba9068412c1773401b0f1cd44148"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "5d6bfe6aec639d96a3cc9f5dd0ab0b25d79bcf9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da11c5d2261283280dade0b9a7942ed56c4e67de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da11c5d2261283280dade0b9a7942ed56c4e67de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da11c5d2261283280dade0b9a7942ed56c4e67de", "patch": "@@ -1,3 +1,10 @@\n+2005-11-08  James A. Morrison  <phython@gcc.gnu.org>\n+\t    Diego Novillo  <dnovillo@redhat.com>\n+\n+\tPR 23046\n+\t* tree-vrp.c (register_edge_assert_for): Do not register\n+\talways-false predicates.\n+\n 2005-11-08  Devang Patel <dpatel@apple.com>\n \n \tPR tree-optimization/23115"}, {"sha": "644433544f26208bc9f6c6e096e79f5fa9ed1214", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da11c5d2261283280dade0b9a7942ed56c4e67de/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da11c5d2261283280dade0b9a7942ed56c4e67de/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da11c5d2261283280dade0b9a7942ed56c4e67de", "patch": "@@ -1,3 +1,8 @@\n+2005-11-08  Diego Novillo  <dnovillo@redhat.com>\n+\n+\tPR 23046\n+\t* g++.dg/tree-ssa/pr23046.C: New test.\n+\n 2005-11-08  Devang Patel <dpatel@apple.com>\n \n \tPR tree-optimization/23115"}, {"sha": "eb8f395580bb385bb28eccf14acfc9753221f469", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr23046.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da11c5d2261283280dade0b9a7942ed56c4e67de/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr23046.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da11c5d2261283280dade0b9a7942ed56c4e67de/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr23046.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr23046.C?ref=da11c5d2261283280dade0b9a7942ed56c4e67de", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+enum eumtype { ENUM1, ENUM2 };\n+void g(const eumtype kind );\n+void f(long i);\n+void g(const eumtype kind)\n+{\n+  if ((kind != ENUM1) && (kind != ENUM2))\n+    f(kind);\n+}"}, {"sha": "d49c4d40d32d4e2e5e06a7595d2d2caf3d2ebb1b", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da11c5d2261283280dade0b9a7942ed56c4e67de/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da11c5d2261283280dade0b9a7942ed56c4e67de/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=da11c5d2261283280dade0b9a7942ed56c4e67de", "patch": "@@ -2504,6 +2504,24 @@ register_edge_assert_for (tree name, edge e, block_stmt_iterator si)\n \t     need to invert the sign comparison.  */\n \t  if (is_else_edge)\n \t    comp_code = invert_tree_comparison (comp_code, 0);\n+\n+\t  /* Do not register always-false predicates.  FIXME, this\n+\t     works around a limitation in fold() when dealing with\n+\t     enumerations.  Given 'enum { N1, N2 } x;', fold will not\n+\t     fold 'if (x > N2)' to 'if (0)'.  */\n+\t  if ((comp_code == GT_EXPR || comp_code == LT_EXPR)\n+\t      && (INTEGRAL_TYPE_P (TREE_TYPE (val))\n+\t\t  || SCALAR_FLOAT_TYPE_P (TREE_TYPE (val))))\n+\t    {\n+\t      tree min = TYPE_MIN_VALUE (TREE_TYPE (val));\n+\t      tree max = TYPE_MAX_VALUE (TREE_TYPE (val));\n+\n+\t      if (comp_code == GT_EXPR && compare_values (val, max) == 0)\n+\t\treturn false;\n+\n+\t      if (comp_code == LT_EXPR && compare_values (val, min) == 0)\n+\t\treturn false;\n+\t    }\n \t}\n     }\n   else"}]}