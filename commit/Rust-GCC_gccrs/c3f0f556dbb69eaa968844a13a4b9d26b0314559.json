{"sha": "c3f0f556dbb69eaa968844a13a4b9d26b0314559", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNmMGY1NTZkYmI2OWVhYTk2ODg0NGExM2E0YjlkMjZiMDMxNDU1OQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-02-01T13:36:51Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-02-01T13:36:51Z"}, "message": "re PR libstdc++/14493 (std::bad_alloc::what() does not explain what happened)\n\n2007-02-01  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/14493\n\t* libsupc++/typeinfo (bad_cast::what, bad_typeid::what): Declare.\n\t* libsupc++/tinfo.cc: Define.\t\n\t* libsupc++/exception (bad_exception::what): Declare.\n\t* libsupc++/eh_exception.cc: Define.\n\t(exception::what): Adjust, don't use typeid.\n\t* libsupc++/new (bad_alloc::what): Declare.\n\t* libsupc++/new_handler.cc: Define.\n\t* config/abi/pre/gnu.ver: Export the new methods @3.4.9; adjust\n\texisting 3.4.10 exports to 3.4.9.\n\t* configure.ac: Adjust to 6.0.9.\n\t* configure: Regenerate.\n\t* testsuite/util/testsuite_abi.cc: Update.\n\t* testsuite/18_support/14493.cc: New.\n\nFrom-SVN: r121461", "tree": {"sha": "956a65496ea40664056e495d47d7b48a8dc073b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/956a65496ea40664056e495d47d7b48a8dc073b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3f0f556dbb69eaa968844a13a4b9d26b0314559", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3f0f556dbb69eaa968844a13a4b9d26b0314559", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3f0f556dbb69eaa968844a13a4b9d26b0314559", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3f0f556dbb69eaa968844a13a4b9d26b0314559/comments", "author": null, "committer": null, "parents": [{"sha": "ee7d8048d5cb690e325d79e82df75c3ddc36a081", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee7d8048d5cb690e325d79e82df75c3ddc36a081", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee7d8048d5cb690e325d79e82df75c3ddc36a081"}], "stats": {"total": 155, "additions": 137, "deletions": 18}, "files": [{"sha": "bf45d8ebff18a67cfee5294446d3d6bf1157b8a6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c3f0f556dbb69eaa968844a13a4b9d26b0314559", "patch": "@@ -1,3 +1,20 @@\n+2007-02-01  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/14493\n+\t* libsupc++/typeinfo (bad_cast::what, bad_typeid::what): Declare.\n+\t* libsupc++/tinfo.cc: Define.\t\n+\t* libsupc++/exception (bad_exception::what): Declare.\n+\t* libsupc++/eh_exception.cc: Define.\n+\t(exception::what): Adjust, don't use typeid.\n+\t* libsupc++/new (bad_alloc::what): Declare.\n+\t* libsupc++/new_handler.cc: Define.\n+\t* config/abi/pre/gnu.ver: Export the new methods @3.4.9; adjust\n+\texisting 3.4.10 exports to 3.4.9.\n+\t* configure.ac: Adjust to 6.0.9.\n+\t* configure: Regenerate.\n+\t* testsuite/util/testsuite_abi.cc: Update.\n+\t* testsuite/18_support/14493.cc: New.\n+\n 2007-02-01  Ben Elliston  <bje@au.ibm.com>\n \n \t* libsupc++/eh_alloc.cc (__cxa_free_exception): Don't refer to the"}, {"sha": "a48cfb4cb3ba6a867b748683276c6a575cebbe54", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=c3f0f556dbb69eaa968844a13a4b9d26b0314559", "patch": "@@ -1,6 +1,7 @@\n ## Linker script for GNU versioning (GNU ld 2.13.91+ only.)\n ##\n-## Copyright (C) 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n+## Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007\n+## Free Software Foundation, Inc.\n ##\n ## This file is part of the GNU ISO C++ Library.  This library is free\n ## software; you can redistribute it and/or modify it under the\n@@ -26,7 +27,7 @@ GLIBCXX_3.4 {\n     extern \"C++\"\n     {\n       std::[A-Za]*;\n-      std::ba[a-r]*;\n+#     std::ba[a-r]*;\n       std::basic_[a-e]*;\n       std::basic_f[a-r]*;\n #     std::basic_fstream;\n@@ -475,6 +476,13 @@ GLIBCXX_3.4 {\n     _ZTSN9__gnu_cxx18stdio_sync_filebufI[cw]St11char_traitsI[cw]EEE;\n     _ZTSN9__gnu_cxx13stdio_filebufI[cw]St11char_traitsI[cw]EEE;\n \n+    # std::bad_alloc::~bad_alloc, std::bad_cast::~bad_cast,\n+    # std::bad_typeid::~bad_typeid, std::bad_exception::~bad_exception\n+    _ZNSt9bad_allocD*;\n+    _ZNSt8bad_castD*;\n+    _ZNSt10bad_typeidD*;\n+    _ZNSt13bad_exceptionD*;\n+\n     # function-scope static objects requires a guard variable.\n     _ZGVNSt[^1]*;\n     _ZGVNSt1[^7]*;\n@@ -689,16 +697,17 @@ GLIBCXX_3.4.9 {\n     _ZNSo9_M_insertEPKc[il];\n     _ZNSt13basic_ostreamIwSt11char_traitsIwEE9_M_insertEPKw[il];\n \n-} GLIBCXX_3.4.8;\n-\n-GLIBCXX_3.4.10 {\n-\n     _ZN11__gnu_debug19_Safe_sequence_base12_M_get_mutexEv;\n     _ZN11__gnu_debug19_Safe_iterator_base16_M_attach_singleEPNS_19_Safe_sequence_baseEb;\n     _ZN11__gnu_debug19_Safe_iterator_base16_M_detach_singleEv;\n     _ZN11__gnu_debug19_Safe_iterator_base12_M_get_mutexEv;\n \n-} GLIBCXX_3.4.9;\n+    _ZNKSt9bad_alloc4whatEv;\n+    _ZNKSt8bad_cast4whatEv;\n+    _ZNKSt10bad_typeid4whatEv;\n+    _ZNKSt13bad_exception4whatEv;\n+\n+} GLIBCXX_3.4.8;\n \n # Symbols in the support library (libsupc++) have their own tag.\n CXXABI_1.3 {"}, {"sha": "6fbe55f9309fb1f00f38100332957dfde76b7058", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=c3f0f556dbb69eaa968844a13a4b9d26b0314559", "patch": "@@ -1381,7 +1381,7 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n ### am handles this now?  ORIGINAL_LD_FOR_MULTILIBS=$LD\n \n # For libtool versioning info, format is CURRENT:REVISION:AGE\n-libtool_VERSION=6:10:0\n+libtool_VERSION=6:9:0\n \n \n # Find the rest of the source tree framework."}, {"sha": "a1e4a37e909082175d122c947704b03d271c0a74", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=c3f0f556dbb69eaa968844a13a4b9d26b0314559", "patch": "@@ -12,7 +12,7 @@ AC_CONFIG_HEADER(config.h)\n ### am handles this now?  ORIGINAL_LD_FOR_MULTILIBS=$LD\n \n # For libtool versioning info, format is CURRENT:REVISION:AGE\n-libtool_VERSION=6:10:0\n+libtool_VERSION=6:9:0\n AC_SUBST(libtool_VERSION)\n \n # Find the rest of the source tree framework."}, {"sha": "40bb839bb7ab2656f6708f722518bccaf9a46697", "filename": "libstdc++-v3/libsupc++/eh_exception.cc", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_exception.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_exception.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_exception.cc?ref=c3f0f556dbb69eaa968844a13a4b9d26b0314559", "patch": "@@ -1,5 +1,6 @@\n // -*- C++ -*- std::exception implementation.\n-// Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002 \n+// Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n+// 2003, 2004, 2005, 2006, 2007\n // Free Software Foundation\n //\n // This file is part of GCC.\n@@ -39,5 +40,14 @@ std::bad_exception::~bad_exception() throw() { }\n const char* \n std::exception::what() const throw()\n {\n-  return typeid (*this).name ();\n+  // NB: Another elegant option would be returning typeid(*this).name()\n+  // and not overriding what() in bad_exception, bad_alloc, etc.  In\n+  // that case, however, mangled names would be returned, PR 14493.\n+  return \"std::exception\";\n+}\n+\n+const char* \n+std::bad_exception::what() const throw()\n+{\n+  return \"std::bad_exception\";\n }"}, {"sha": "2046300581c6d023fc9368b267a0a0d2544fffb5", "filename": "libstdc++-v3/libsupc++/exception", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception?ref=c3f0f556dbb69eaa968844a13a4b9d26b0314559", "patch": "@@ -1,6 +1,7 @@\n // Exception Handling support header for -*- C++ -*-\n \n-// Copyright (C) 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2005\n+// Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,\n+// 2004, 2005, 2006, 2007\n // Free Software Foundation\n //\n // This file is part of GCC.\n@@ -71,6 +72,8 @@ namespace std\n     // This declaration is not useless:\n     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118\n     virtual ~bad_exception() throw();\n+    // See comment in eh_exception.cc.\n+    virtual const char* what() const throw();\n   };\n \n   /// If you write a replacement %terminate handler, it must be of this type."}, {"sha": "26898bfc6fcaa9be2195c505aa94a500b4745939", "filename": "libstdc++-v3/libsupc++/new", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew?ref=c3f0f556dbb69eaa968844a13a4b9d26b0314559", "patch": "@@ -1,6 +1,7 @@\n // The -*- C++ -*- dynamic memory management header.\n \n-// Copyright (C) 1994, 1996, 1997, 1998, 2000, 2001, 2002\n+// Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n+// 2003, 2004, 2005, 2006, 2007\n // Free Software Foundation\n \n // This file is part of GCC.\n@@ -61,6 +62,8 @@ namespace std\n     // This declaration is not useless:\n     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118\n     virtual ~bad_alloc() throw();\n+    // See comment in eh_exception.cc.\n+    virtual const char* what() const throw();\n   };\n \n   struct nothrow_t { };"}, {"sha": "3580acb097713c6a12f811a3da6bf0acda5824b4", "filename": "libstdc++-v3/libsupc++/new_handler.cc", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_handler.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_handler.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_handler.cc?ref=c3f0f556dbb69eaa968844a13a4b9d26b0314559", "patch": "@@ -1,6 +1,7 @@\n // Implementation file for the -*- C++ -*- dynamic memory management header.\n \n-// Copyright (C) 1996, 1997, 1998, 2000, 2001, 2002\n+// Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n+// 2005, 2006, 2007\n // Free Software Foundation\n //\n // This file is part of GCC.\n@@ -45,3 +46,9 @@ std::set_new_handler (new_handler handler) throw()\n }\n \n std::bad_alloc::~bad_alloc() throw() { }\n+\n+const char* \n+std::bad_alloc::what() const throw()\n+{\n+  return \"std::bad_alloc\";\n+}"}, {"sha": "8f99de2d28fec077de42e8d13e2e9d7bb937c71a", "filename": "libstdc++-v3/libsupc++/tinfo.cc", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftinfo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftinfo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftinfo.cc?ref=c3f0f556dbb69eaa968844a13a4b9d26b0314559", "patch": "@@ -1,5 +1,6 @@\n // Methods for type_info for -*- C++ -*- Run Time Type Identification.\n-// Copyright (C) 1994, 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+// Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n+// 2003, 2004, 2005, 2006, 2007\n // Free Software Foundation\n //\n // This file is part of GCC.\n@@ -44,6 +45,18 @@ std::type_info::\n std::bad_cast::~bad_cast() throw() { }\n std::bad_typeid::~bad_typeid() throw() { }\n \n+const char* \n+std::bad_cast::what() const throw()\n+{\n+  return \"std::bad_cast\";\n+}\n+\n+const char* \n+std::bad_typeid::what() const throw()\n+{\n+  return \"std::bad_typeid\";\n+}\n+\n #if !__GXX_TYPEINFO_EQUALITY_INLINE\n \n // We can't rely on common symbols being shared between shared objects."}, {"sha": "3abf0dfc17a259eb7028142e39e8b875b96d266b", "filename": "libstdc++-v3/libsupc++/typeinfo", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftypeinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftypeinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftypeinfo?ref=c3f0f556dbb69eaa968844a13a4b9d26b0314559", "patch": "@@ -1,5 +1,6 @@\n // RTTI support for -*- C++ -*-\n-// Copyright (C) 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002\n+// Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n+// 2003, 2004, 2005, 2006, 2007\n // Free Software Foundation\n //\n // This file is part of GCC.\n@@ -171,6 +172,8 @@ namespace std\n     // This declaration is not useless:\n     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118\n     virtual ~bad_cast() throw();\n+    // See comment in eh_exception.cc.\n+    virtual const char* what() const throw();\n   };\n   \n   /** If you use a NULL pointer in a @c typeid expression, this is thrown.  */\n@@ -181,6 +184,8 @@ namespace std\n     // This declaration is not useless:\n     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118\n     virtual ~bad_typeid() throw();\n+    // See comment in eh_exception.cc.\n+    virtual const char* what() const throw();\n   };\n } // namespace std\n "}, {"sha": "188bad7d4975540ceea9d0376abe316b71fbd2f8", "filename": "libstdc++-v3/testsuite/18_support/14493.cc", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2F14493.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2F14493.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2F14493.cc?ref=c3f0f556dbb69eaa968844a13a4b9d26b0314559", "patch": "@@ -0,0 +1,53 @@\n+// 2007-01-30  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <new>\n+#include <typeinfo>\n+#include <exception>\n+#include <cstring>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/14493\n+void test01() \n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  bad_alloc ba;\n+  VERIFY( !strcmp(ba.what(), \"std::bad_alloc\") );\n+\n+  bad_cast bc;\n+  VERIFY( !strcmp(bc.what(), \"std::bad_cast\") );\n+\n+  bad_typeid bt;\n+  VERIFY( !strcmp(bt.what(), \"std::bad_typeid\") );\n+\n+  exception e;\n+  VERIFY( !strcmp(e.what(), \"std::exception\") );\n+\n+  bad_exception be;\n+  VERIFY( !strcmp(be.what(), \"std::bad_exception\") );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "0949e309657510ede0e644af37d3c9bbf3e485f1", "filename": "libstdc++-v3/testsuite/util/testsuite_abi.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f0f556dbb69eaa968844a13a4b9d26b0314559/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc?ref=c3f0f556dbb69eaa968844a13a4b9d26b0314559", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2004, 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n \n // This library is free software; you can redistribute it and/or\n // modify it under the terms of the GNU General Public License as\n@@ -188,7 +188,6 @@ check_version(symbol& test, bool added)\n       known_versions.push_back(\"GLIBCXX_3.4.7\");\n       known_versions.push_back(\"GLIBCXX_3.4.8\");\n       known_versions.push_back(\"GLIBCXX_3.4.9\");\n-      known_versions.push_back(\"GLIBCXX_3.4.10\");\n       known_versions.push_back(\"GLIBCXX_LDBL_3.4\");\n       known_versions.push_back(\"GLIBCXX_LDBL_3.4.7\");\n       known_versions.push_back(\"CXXABI_1.3\");"}]}