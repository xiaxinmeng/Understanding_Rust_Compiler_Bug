{"sha": "c608d704cabe85ec77a44908ee4e95115ae0753d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYwOGQ3MDRjYWJlODVlYzc3YTQ0OTA4ZWU0ZTk1MTE1YWUwNzUzZA==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2015-01-09T23:34:58Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2015-01-09T23:34:58Z"}, "message": "invoke.texi ([-fvtable-verify]): Copy-edit and fix markup.\n\n2015-01-09  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* doc/invoke.texi ([-fvtable-verify]): Copy-edit and fix markup.\n\t([-fvtv-debug], [-fvtv-counts]): Likewise.  Correct location\n\tof log files.\n\nFrom-SVN: r219414", "tree": {"sha": "23f49d192273aa26cb35093c1fd47e1aba39a067", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23f49d192273aa26cb35093c1fd47e1aba39a067"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c608d704cabe85ec77a44908ee4e95115ae0753d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c608d704cabe85ec77a44908ee4e95115ae0753d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c608d704cabe85ec77a44908ee4e95115ae0753d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c608d704cabe85ec77a44908ee4e95115ae0753d/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8cf8f223466df156ebbd5762f5c901f0a3812e43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cf8f223466df156ebbd5762f5c901f0a3812e43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cf8f223466df156ebbd5762f5c901f0a3812e43"}], "stats": {"total": 61, "additions": 36, "deletions": 25}, "files": [{"sha": "fdaf6632deb6332db0c2cd7d77e31f734d11431a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c608d704cabe85ec77a44908ee4e95115ae0753d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c608d704cabe85ec77a44908ee4e95115ae0753d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c608d704cabe85ec77a44908ee4e95115ae0753d", "patch": "@@ -1,3 +1,9 @@\n+2015-01-09  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* doc/invoke.texi ([-fvtable-verify]): Copy-edit and fix markup.\n+\t([-fvtv-debug], [-fvtv-counts]): Likewise.  Correct location\n+\tof log files.\n+\n 2015-01-09  Andreas Tobler  <andreast@gcc.gnu.org>\n \n \t* config/arm/arm.h (MAX_SYNC_LIBFUNC_SIZE): Delete semicolon."}, {"sha": "ed23f6f061d5ba817338390a5b23f7f0aabaa53f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 30, "deletions": 25, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c608d704cabe85ec77a44908ee4e95115ae0753d/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c608d704cabe85ec77a44908ee4e95115ae0753d/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=c608d704cabe85ec77a44908ee4e95115ae0753d", "patch": "@@ -2440,51 +2440,56 @@ violation of the ODR to define types with the same name differently.\n @item -fvtable-verify=@r{[}std@r{|}preinit@r{|}none@r{]}\n @opindex fvtable-verify\n Turn on (or off, if using @option{-fvtable-verify=none}) the security\n-feature that verifies at runtime, for every virtual call that is made, that\n+feature that verifies at run time, for every virtual call, that\n the vtable pointer through which the call is made is valid for the type of\n the object, and has not been corrupted or overwritten.  If an invalid vtable\n-pointer is detected (at runtime), an error is reported and execution of the\n+pointer is detected at run time, an error is reported and execution of the\n program is immediately halted.\n \n-This option causes runtime data structures to be built, at program start up,\n-for verifying the vtable pointers.  The options @code{std} and @code{preinit}\n+This option causes run-time data structures to be built at program startup,\n+which are used for verifying the vtable pointers.  \n+The options @samp{std} and @samp{preinit}\n control the timing of when these data structures are built.  In both cases the\n-data structures are built before execution reaches 'main'.  The\n-@option{-fvtable-verify=std} causes these data structure to be built after the\n+data structures are built before execution reaches @code{main}.  Using\n+@option{-fvtable-verify=std} causes the data structures to be built after\n shared libraries have been loaded and initialized.\n-@option{-fvtable-verify=preinit} causes them to be built before the shared\n+@option{-fvtable-verify=preinit} causes them to be built before shared\n libraries have been loaded and initialized.\n \n-If this option appears multiple times in the compiler line, with different\n-values specified, 'none' takes highest priority over both 'std' and\n-'preinit'; 'preinit' takes priority over 'std'.\n+If this option appears multiple times in the command line with different\n+values specified, @samp{none} takes highest priority over both @samp{std} and\n+@samp{preinit}; @samp{preinit} takes priority over @samp{std}.\n \n @item -fvtv-debug\n @opindex fvtv-debug\n-Causes debug versions of the runtime functions for the vtable verification \n-feature to be called.  This assumes the @option{-fvtable-verify=std} or\n-@option{-fvtable-verify=preinit} has been used.  This flag also causes the\n-compiler to keep track of which vtable pointers it found for each class, and\n-record that information in the file ``vtv_set_ptr_data.log'', in the dump\n-file directory on the user's machine.\n-\n-Note:  This feature APPENDS data to the log file. If you want a fresh log\n+When used in conjunction with @option{-fvtable-verify=std} or \n+@option{-fvtable-verify=preinit}, causes debug versions of the \n+runtime functions for the vtable verification feature to be called.  \n+This flag also causes the compiler to log information about which \n+vtable pointers it finds for each class.\n+This information is written to a file named @file{vtv_set_ptr_data.log} \n+in the directory named by the environment variable @env{VTV_LOGS_DIR} \n+if that is defined or the current working directory otherwise.\n+\n+Note:  This feature @emph{appends} data to the log file. If you want a fresh log\n file, be sure to delete any existing one.\n \n @item -fvtv-counts\n @opindex fvtv-counts\n This is a debugging flag.  When used in conjunction with\n @option{-fvtable-verify=std} or @option{-fvtable-verify=preinit}, this\n causes the compiler to keep track of the total number of virtual calls\n-it encountered and the number of verifications it inserted.  It also\n-counts the number of calls to certain runtime library functions\n-that it inserts.  This information, for each compilation unit, is written\n-to a file named ``vtv_count_data.log'', in the dump_file directory on\n-the user's machine.   It also counts the size of the vtable pointer sets\n-for each class, and writes this information to ``vtv_class_set_sizes.log''\n+it encounters and the number of verifications it inserts.  It also\n+counts the number of calls to certain run-time library functions\n+that it inserts and logs this information for each compilation unit.\n+The compiler writes this information to a file named\n+@file{vtv_count_data.log} in the directory named by the environment\n+variable @env{VTV_LOGS_DIR} if that is defined or the current working\n+directory otherwise.  It also counts the size of the vtable pointer sets\n+for each class, and writes this information to @file{vtv_class_set_sizes.log}\n in the same directory.\n \n-Note:  This feature APPENDS data to the log files.  To get a fresh log\n+Note:  This feature @emph{appends} data to the log files.  To get fresh log\n files, be sure to delete any existing ones.\n \n @item -fno-weak"}]}