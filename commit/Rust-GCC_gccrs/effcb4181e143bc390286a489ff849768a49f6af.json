{"sha": "effcb4181e143bc390286a489ff849768a49f6af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZmY2I0MTgxZTE0M2JjMzkwMjg2YTQ4OWZmODQ5NzY4YTQ5ZjZhZg==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-04-15T16:47:41Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-04-16T12:58:40Z"}, "message": "c++: Error recovery with erroneous DECL_INITIAL [PR94475]\n\nHere we're ICE'ing in do_narrow during error-recovery, because ocp_convert\nreturns error_mark_node after it attempts to reduce a const decl to its\nerroneous DECL_INITIAL via scalar_constant_value, and we later pass this\nerror_mark_node to fold_build2 which isn't prepared to handle error_mark_nodes.\n\nWe could fix this ICE in do_narrow by checking if ocp_convert returns\nerror_mark_node, but for the sake of consistency and for better error recovery\nit seems it'd be preferable if ocp_convert didn't care that a const decl's\ninitializer is erroneous and would instead proceed as if the decl was not const,\nwhich is the approach that this patch takes.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/94475\n\t* cvt.c (ocp_convert): If the result of scalar_constant_value is\n\terroneous, ignore it and use the original expression.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/94475\n\t* g++.dg/conversion/err-recover2.C: New test.\n\t* g++.dg/diagnostic/pr84138.C: Remove now-bogus warning.\n\t* g++.dg/warn/Wsign-compare-8.C: Remove now-bogus warning.", "tree": {"sha": "1f8b06662fc21d4c9b0103fa8520b773d2404f1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f8b06662fc21d4c9b0103fa8520b773d2404f1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/effcb4181e143bc390286a489ff849768a49f6af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/effcb4181e143bc390286a489ff849768a49f6af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/effcb4181e143bc390286a489ff849768a49f6af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/effcb4181e143bc390286a489ff849768a49f6af/comments", "author": null, "committer": null, "parents": [{"sha": "44b326839d864fc10c459916abcc97f35a9ac3de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44b326839d864fc10c459916abcc97f35a9ac3de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44b326839d864fc10c459916abcc97f35a9ac3de"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "b2acd8927193776c8846e774468c45cfdc8f08b7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effcb4181e143bc390286a489ff849768a49f6af/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effcb4181e143bc390286a489ff849768a49f6af/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=effcb4181e143bc390286a489ff849768a49f6af", "patch": "@@ -1,3 +1,9 @@\n+2020-04-16  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/94475\n+\t* cvt.c (ocp_convert): If the result of scalar_constant_value is\n+\terroneous, ignore it and use the original expression.\n+\n 2020-04-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/94571"}, {"sha": "656e7fd3ec089748f8ea4a7a1ed4678f3cbaa633", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effcb4181e143bc390286a489ff849768a49f6af/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effcb4181e143bc390286a489ff849768a49f6af/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=effcb4181e143bc390286a489ff849768a49f6af", "patch": "@@ -723,7 +723,9 @@ ocp_convert (tree type, tree expr, int convtype, int flags,\n   if (!CLASS_TYPE_P (type))\n     {\n       e = mark_rvalue_use (e);\n-      e = scalar_constant_value (e);\n+      tree v = scalar_constant_value (e);\n+      if (!error_operand_p (v))\n+\te = v;\n     }\n   if (error_operand_p (e))\n     return error_mark_node;"}, {"sha": "756f1d759e6427fe6b20a9a59548ba39f19fa614", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effcb4181e143bc390286a489ff849768a49f6af/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effcb4181e143bc390286a489ff849768a49f6af/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=effcb4181e143bc390286a489ff849768a49f6af", "patch": "@@ -1,3 +1,10 @@\n+2020-04-16  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/94475\n+\t* g++.dg/conversion/err-recover2.C: New test.\n+\t* g++.dg/diagnostic/pr84138.C: Remove now-bogus warning.\n+\t* g++.dg/warn/Wsign-compare-8.C: Remove now-bogus warning.\n+\n 2020-04-16  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR rtl-optimization/94605"}, {"sha": "437e1a919eaea4cb27d094263fa9385f5e1f6a76", "filename": "gcc/testsuite/g++.dg/conversion/err-recover2.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effcb4181e143bc390286a489ff849768a49f6af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Ferr-recover2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effcb4181e143bc390286a489ff849768a49f6af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Ferr-recover2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Ferr-recover2.C?ref=effcb4181e143bc390286a489ff849768a49f6af", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/94475\n+// { dg-do compile }\n+\n+unsigned char\n+sr ()\n+{\n+  const unsigned char xz = EI; // { dg-error \"not declared\" }\n+\n+  return xz - (xz >> 1);\n+}"}, {"sha": "00352306a56e93ca917c3f4298f5e157a6b7a234", "filename": "gcc/testsuite/g++.dg/diagnostic/pr84138.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effcb4181e143bc390286a489ff849768a49f6af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fpr84138.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effcb4181e143bc390286a489ff849768a49f6af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fpr84138.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fpr84138.C?ref=effcb4181e143bc390286a489ff849768a49f6af", "patch": "@@ -5,4 +5,4 @@ foo()\n {\n   const int i = 0 = 0; // { dg-error \"lvalue required as left operand\" }\n   return 1 ? 0 : (char)i;\n-} // { dg-warning \"control reaches\" }\n+}"}, {"sha": "4d2688157fcf4a2d079ac1dfc78bb0279cda1197", "filename": "gcc/testsuite/g++.dg/warn/Wsign-compare-8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/effcb4181e143bc390286a489ff849768a49f6af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/effcb4181e143bc390286a489ff849768a49f6af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-8.C?ref=effcb4181e143bc390286a489ff849768a49f6af", "patch": "@@ -5,4 +5,4 @@ bool foo (char c)\n {\n   const int i = 0 = 0; // { dg-error \"lvalue\" }\n   return c = i;\n-} // { dg-warning \"control reaches\" }\n+}"}]}