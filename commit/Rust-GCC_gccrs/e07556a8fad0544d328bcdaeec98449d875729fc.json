{"sha": "e07556a8fad0544d328bcdaeec98449d875729fc", "node_id": "C_kwDOANBUbNoAKGUwNzU1NmE4ZmFkMDU0NGQzMjhiY2RhZWVjOTg0NDlkODc1NzI5ZmM", "commit": {"author": {"name": "Srinath Parvathaneni", "email": "srinath.parvathaneni@arm.com", "date": "2022-11-14T15:18:26Z"}, "committer": {"name": "Srinath Parvathaneni", "email": "srinath.parvathaneni@arm.com", "date": "2022-11-14T15:40:33Z"}, "message": "aarch64: Add support for Cortex-X3 CPU.\n\nThis patch adds support for Cortex-X3 CPU.\n\ngcc/ChangeLog:\n\n2022-11-09  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n\n\t* config/aarch64/aarch64-cores.def (AARCH64_CORE): Add Cortex-X3\n\tCPU.\n\t* config/aarch64/aarch64-tune.md: Regenerate.\n\t* doc/invoke.texi: Document Cortex-X3 CPU.", "tree": {"sha": "f9464e5e0d1ed5c089c2abaed77b1bd097dcbbea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9464e5e0d1ed5c089c2abaed77b1bd097dcbbea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e07556a8fad0544d328bcdaeec98449d875729fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e07556a8fad0544d328bcdaeec98449d875729fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e07556a8fad0544d328bcdaeec98449d875729fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e07556a8fad0544d328bcdaeec98449d875729fc/comments", "author": {"login": "sripar01", "id": 115715849, "node_id": "U_kgDOBuWvCQ", "avatar_url": "https://avatars.githubusercontent.com/u/115715849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sripar01", "html_url": "https://github.com/sripar01", "followers_url": "https://api.github.com/users/sripar01/followers", "following_url": "https://api.github.com/users/sripar01/following{/other_user}", "gists_url": "https://api.github.com/users/sripar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/sripar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sripar01/subscriptions", "organizations_url": "https://api.github.com/users/sripar01/orgs", "repos_url": "https://api.github.com/users/sripar01/repos", "events_url": "https://api.github.com/users/sripar01/events{/privacy}", "received_events_url": "https://api.github.com/users/sripar01/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sripar01", "id": 115715849, "node_id": "U_kgDOBuWvCQ", "avatar_url": "https://avatars.githubusercontent.com/u/115715849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sripar01", "html_url": "https://github.com/sripar01", "followers_url": "https://api.github.com/users/sripar01/followers", "following_url": "https://api.github.com/users/sripar01/following{/other_user}", "gists_url": "https://api.github.com/users/sripar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/sripar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sripar01/subscriptions", "organizations_url": "https://api.github.com/users/sripar01/orgs", "repos_url": "https://api.github.com/users/sripar01/repos", "events_url": "https://api.github.com/users/sripar01/events{/privacy}", "received_events_url": "https://api.github.com/users/sripar01/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30348d30d9567c46046f30bb9666a67edf36ee0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30348d30d9567c46046f30bb9666a67edf36ee0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30348d30d9567c46046f30bb9666a67edf36ee0b"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "81401158968f8efcf7e03dea260b2c5cc2e3565c", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e07556a8fad0544d328bcdaeec98449d875729fc/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e07556a8fad0544d328bcdaeec98449d875729fc/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=e07556a8fad0544d328bcdaeec98449d875729fc", "patch": "@@ -173,6 +173,8 @@ AARCH64_CORE(\"cortex-a715\",  cortexa715, cortexa57, V9A,  (SVE2_BITPERM, MEMTAG,\n \n AARCH64_CORE(\"cortex-x2\",  cortexx2, cortexa57, V9A,  (SVE2_BITPERM, MEMTAG, I8MM, BF16), neoversen2, 0x41, 0xd48, -1)\n \n+AARCH64_CORE(\"cortex-x3\",  cortexx3, cortexa57, V9A,  (SVE2_BITPERM, MEMTAG, I8MM, BF16), neoversen2, 0x41, 0xd4e, -1)\n+\n AARCH64_CORE(\"neoverse-n2\", neoversen2, cortexa57, V9A, (I8MM, BF16, SVE2_BITPERM, RNG, MEMTAG, PROFILE), neoversen2, 0x41, 0xd49, -1)\n \n AARCH64_CORE(\"demeter\", demeter, cortexa57, V9A, (I8MM, BF16, SVE2_BITPERM, RNG, MEMTAG, PROFILE), neoversev2, 0x41, 0xd4f, -1)"}, {"sha": "4fd35fa4884617b901b9ae6faea2f39975c4f4b2", "filename": "gcc/config/aarch64/aarch64-tune.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e07556a8fad0544d328bcdaeec98449d875729fc/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e07556a8fad0544d328bcdaeec98449d875729fc/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md?ref=e07556a8fad0544d328bcdaeec98449d875729fc", "patch": "@@ -1,5 +1,5 @@\n ;; -*- buffer-read-only: t -*-\n ;; Generated automatically by gentune.sh from aarch64-cores.def\n (define_attr \"tune\"\n-\t\"cortexa34,cortexa35,cortexa53,cortexa57,cortexa72,cortexa73,thunderx,thunderxt88p1,thunderxt88,octeontx,octeontxt81,octeontxt83,thunderxt81,thunderxt83,ampere1,ampere1a,emag,xgene1,falkor,qdf24xx,exynosm1,phecda,thunderx2t99p1,vulcan,thunderx2t99,cortexa55,cortexa75,cortexa76,cortexa76ae,cortexa77,cortexa78,cortexa78ae,cortexa78c,cortexa65,cortexa65ae,cortexx1,cortexx1c,ares,neoversen1,neoversee1,octeontx2,octeontx2t98,octeontx2t96,octeontx2t93,octeontx2f95,octeontx2f95n,octeontx2f95mm,a64fx,tsv110,thunderx3t110,zeus,neoversev1,neoverse512tvb,saphira,cortexa57cortexa53,cortexa72cortexa53,cortexa73cortexa35,cortexa73cortexa53,cortexa75cortexa55,cortexa76cortexa55,cortexr82,cortexa510,cortexa710,cortexa715,cortexx2,neoversen2,demeter,neoversev2\"\n+\t\"cortexa34,cortexa35,cortexa53,cortexa57,cortexa72,cortexa73,thunderx,thunderxt88p1,thunderxt88,octeontx,octeontxt81,octeontxt83,thunderxt81,thunderxt83,ampere1,ampere1a,emag,xgene1,falkor,qdf24xx,exynosm1,phecda,thunderx2t99p1,vulcan,thunderx2t99,cortexa55,cortexa75,cortexa76,cortexa76ae,cortexa77,cortexa78,cortexa78ae,cortexa78c,cortexa65,cortexa65ae,cortexx1,cortexx1c,ares,neoversen1,neoversee1,octeontx2,octeontx2t98,octeontx2t96,octeontx2t93,octeontx2f95,octeontx2f95n,octeontx2f95mm,a64fx,tsv110,thunderx3t110,zeus,neoversev1,neoverse512tvb,saphira,cortexa57cortexa53,cortexa72cortexa53,cortexa73cortexa35,cortexa73cortexa53,cortexa75cortexa55,cortexa76cortexa55,cortexr82,cortexa510,cortexa710,cortexa715,cortexx2,cortexx3,neoversen2,demeter,neoversev2\"\n \t(const (symbol_ref \"((enum attr_tune) aarch64_tune)\")))"}, {"sha": "e406136e8938bf0aafa488c78507bc0736e38bf6", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e07556a8fad0544d328bcdaeec98449d875729fc/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e07556a8fad0544d328bcdaeec98449d875729fc/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e07556a8fad0544d328bcdaeec98449d875729fc", "patch": "@@ -19994,8 +19994,8 @@ performance of the code.  Permissible values for this option are:\n @samp{cortex-a73.cortex-a35}, @samp{cortex-a73.cortex-a53},\n @samp{cortex-a75.cortex-a55}, @samp{cortex-a76.cortex-a55},\n @samp{cortex-r82}, @samp{cortex-x1}, @samp{cortex-x1c}, @samp{cortex-x2},\n-@samp{cortex-a510}, @samp{cortex-a710}, @samp{cortex-a715}, @samp{ampere1},\n-@samp{ampere1a}, and @samp{native}.\n+@samp{cortex-x3}, @samp{cortex-a510}, @samp{cortex-a710}, @samp{cortex-a715},\n+@samp{ampere1}, @samp{ampere1a}, and @samp{native}.\n \n The values @samp{cortex-a57.cortex-a53}, @samp{cortex-a72.cortex-a53},\n @samp{cortex-a73.cortex-a35}, @samp{cortex-a73.cortex-a53},"}]}