{"sha": "88848bdeab2943d0c2e6b9d98e95ffdcafb687d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg4NDhiZGVhYjI5NDNkMGMyZTZiOWQ5OGU5NWZmZGNhZmI2ODdkNg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-09-19T00:33:09Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-09-19T00:33:09Z"}, "message": "gxxint.texi: G++ now implements namespaces.\n\n\t* gxxint.texi: G++ now implements namespaces.\n\n\t* decl.c (pop_label): Don't warn about unused labels more than\n\tonce.\n\t* semantics.c (finish_goto_stmt): Always marked used labels as\n\tused.\n\nFrom-SVN: r29505", "tree": {"sha": "762c0f376628e76afc5809add65a72d5e16a9cdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/762c0f376628e76afc5809add65a72d5e16a9cdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88848bdeab2943d0c2e6b9d98e95ffdcafb687d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88848bdeab2943d0c2e6b9d98e95ffdcafb687d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88848bdeab2943d0c2e6b9d98e95ffdcafb687d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88848bdeab2943d0c2e6b9d98e95ffdcafb687d6/comments", "author": null, "committer": null, "parents": [{"sha": "57b524174e514e6df90c7d973c43b78b5a5c5004", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57b524174e514e6df90c7d973c43b78b5a5c5004", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57b524174e514e6df90c7d973c43b78b5a5c5004"}], "stats": {"total": 51, "additions": 43, "deletions": 8}, "files": [{"sha": "51185fa5522213c2c822d627a3fb1fb86ad5ad16", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88848bdeab2943d0c2e6b9d98e95ffdcafb687d6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88848bdeab2943d0c2e6b9d98e95ffdcafb687d6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=88848bdeab2943d0c2e6b9d98e95ffdcafb687d6", "patch": "@@ -1,5 +1,14 @@\n+1999-09-18  Paul Burchard <burchard@pobox.com>\n+\n+\t* gxxint.texi: G++ now implements namespaces.\n+\t\n 1999-09-18  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* decl.c (pop_label): Don't warn about unused labels more than\n+\tonce.\n+\t* semantics.c (finish_goto_stmt): Always marked used labels as\n+\tused.\n+\n \t* decl.c (layout_var_decl): Change prototype.  Call layout_decl\n \teven when the declaration is external.\n \t(cp_finish_decl): Adjust call to layout_var_decl."}, {"sha": "c1a07c1eb276b4e552ce3ea01ca4786fc9e88c36", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88848bdeab2943d0c2e6b9d98e95ffdcafb687d6/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88848bdeab2943d0c2e6b9d98e95ffdcafb687d6/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=88848bdeab2943d0c2e6b9d98e95ffdcafb687d6", "patch": "@@ -1125,14 +1125,17 @@ pop_label (link)\n {\n   tree label = TREE_VALUE (link);\n \n-  if (DECL_INITIAL (label) == NULL_TREE)\n+  if (!processing_template_decl && doing_semantic_analysis_p ())\n     {\n-      cp_error_at (\"label `%D' used but not defined\", label);\n-      /* Avoid crashing later.  */\n-      define_label (input_filename, 1, DECL_NAME (label));\n+      if (DECL_INITIAL (label) == NULL_TREE)\n+\t{\n+\t  cp_error_at (\"label `%D' used but not defined\", label);\n+\t  /* Avoid crashing later.  */\n+\t  define_label (input_filename, 1, DECL_NAME (label));\n+\t}\n+      else if (warn_unused && !TREE_USED (label))\n+\tcp_warning_at (\"label `%D' defined but not used\", label);\n     }\n-  else if (warn_unused && !TREE_USED (label))\n-    cp_warning_at (\"label `%D' defined but not used\", label);\n \n   SET_IDENTIFIER_LABEL_VALUE (DECL_NAME (label), TREE_PURPOSE (link));\n }"}, {"sha": "df9d100c3c31a2165dfb7b65d4e7f78d3c8310f6", "filename": "gcc/cp/gxxint.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88848bdeab2943d0c2e6b9d98e95ffdcafb687d6/gcc%2Fcp%2Fgxxint.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88848bdeab2943d0c2e6b9d98e95ffdcafb687d6/gcc%2Fcp%2Fgxxint.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fgxxint.texi?ref=88848bdeab2943d0c2e6b9d98e95ffdcafb687d6", "patch": "@@ -1602,7 +1602,7 @@ The int parameter is a basic type, and does not receive a B encoding...\n @subsection Qualified names\n \n Both C++ and Java allow a class to be lexically nested inside another\n-class.  C++ also supports namespaces (not yet implemented by G++).\n+class.  C++ also supports namespaces.\n Java also supports packages.\n \n These are all mangled the same way:  First the letter @samp{Q}"}, {"sha": "6943b966efc33b5f69ec0ff67a235931bbde16cd", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88848bdeab2943d0c2e6b9d98e95ffdcafb687d6/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88848bdeab2943d0c2e6b9d98e95ffdcafb687d6/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=88848bdeab2943d0c2e6b9d98e95ffdcafb687d6", "patch": "@@ -642,6 +642,11 @@ finish_goto_stmt (destination)\n   if (TREE_CODE (destination) == IDENTIFIER_NODE)\n     destination = lookup_label (destination);\n \n+  /* We warn about unused labels with -Wunused.  That means we have to\n+     mark the used labels as used.  */\n+  if (TREE_CODE (destination) == LABEL_DECL)\n+    TREE_USED (destination) = 1;\n+    \n   if (building_stmt_tree ())\n     add_tree (build_min_nt (GOTO_STMT, destination));\n   else\n@@ -650,7 +655,6 @@ finish_goto_stmt (destination)\n \n       if (TREE_CODE (destination) == LABEL_DECL)\n \t{\n-\t  TREE_USED (destination) = 1;\n \t  label_rtx (destination);\n \t  expand_goto (destination); \n \t}"}, {"sha": "a45e518ca4bb87465d5bc066865daff157435384", "filename": "gcc/testsuite/g++.old-deja/g++.pt/warn2.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88848bdeab2943d0c2e6b9d98e95ffdcafb687d6/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fwarn2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88848bdeab2943d0c2e6b9d98e95ffdcafb687d6/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fwarn2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fwarn2.C?ref=88848bdeab2943d0c2e6b9d98e95ffdcafb687d6", "patch": "@@ -0,0 +1,19 @@\n+// Build don't link:\n+// Special g++ Options: -Wall\n+// Origin: Jeroen@MMR.be\n+\n+template <typename T>\n+void f()\n+{\n+  for(;;)\n+    for(;;)\n+      goto a;\n+\n+ a:\n+  ;\n+}\n+\n+void g()\n+{\n+  f<long>();\n+}"}]}