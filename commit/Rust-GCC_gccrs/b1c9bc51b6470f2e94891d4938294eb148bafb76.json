{"sha": "b1c9bc51b6470f2e94891d4938294eb148bafb76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFjOWJjNTFiNjQ3MGYyZTk0ODkxZDQ5MzgyOTRlYjE0OGJhZmI3Ng==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-01-02T06:47:47Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-01-02T06:47:47Z"}, "message": "romp.c: Fix comment formatting.\n\n\t* config/romp/romp.c: Fix comment formatting.\n\t* config/romp/romp.h: Likewise.\n\t* config/romp/romp.md: Likewise.\n\t* config/s390/s390.c: Likewise.\n\t* config/stormy16/stormy16.c: Likewise.\n\t* config/stormy16/stormy16.h: Likewise.\n\nFrom-SVN: r48459", "tree": {"sha": "839d389b6176e87534453f0add71976f12fa829f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/839d389b6176e87534453f0add71976f12fa829f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1c9bc51b6470f2e94891d4938294eb148bafb76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c9bc51b6470f2e94891d4938294eb148bafb76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1c9bc51b6470f2e94891d4938294eb148bafb76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c9bc51b6470f2e94891d4938294eb148bafb76/comments", "author": null, "committer": null, "parents": [{"sha": "252b88f78c6dd7615992ef7e89be748251b7257d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/252b88f78c6dd7615992ef7e89be748251b7257d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/252b88f78c6dd7615992ef7e89be748251b7257d"}], "stats": {"total": 115, "additions": 62, "deletions": 53}, "files": [{"sha": "1a3a88e49e3761de2b67994b8b4945f276f38ced", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c9bc51b6470f2e94891d4938294eb148bafb76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c9bc51b6470f2e94891d4938294eb148bafb76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1c9bc51b6470f2e94891d4938294eb148bafb76", "patch": "@@ -1,3 +1,12 @@\n+2002-01-02  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/romp/romp.c: Fix comment formatting.\n+\t* config/romp/romp.h: Likewise.\n+\t* config/romp/romp.md: Likewise.\n+\t* config/s390/s390.c: Likewise.\n+\t* config/stormy16/stormy16.c: Likewise.\n+\t* config/stormy16/stormy16.h: Likewise.\n+\n 2002-01-02  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* c-common.h (genrtl_expr_stmt_value): Declare."}, {"sha": "a961ad3d335659c93a83b4035075173c9852c11e", "filename": "gcc/config/romp/romp.c", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c9bc51b6470f2e94891d4938294eb148bafb76/gcc%2Fconfig%2Fromp%2Fromp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c9bc51b6470f2e94891d4938294eb148bafb76/gcc%2Fconfig%2Fromp%2Fromp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fromp.c?ref=b1c9bc51b6470f2e94891d4938294eb148bafb76", "patch": "@@ -190,7 +190,7 @@ update_cc (body, insn)\n       break;\n \n     case CC_CLOBBER:\n-      /* Insn clobbers CC. */\n+      /* Insn clobbers CC.  */\n       CC_STATUS_INIT;\n       break;\n \n@@ -221,7 +221,7 @@ update_cc (body, insn)\n       break;\n \n     case CC_TBIT:\n-      /* Insn sets T bit if result is non-zero.  Next insn must be branch. */\n+      /* Insn sets T bit if result is non-zero.  Next insn must be branch.  */\n       CC_STATUS_INIT;\n       cc_status.flags = CC_IN_TB | CC_NOT_NEGATIVE;\n       break;\n@@ -323,7 +323,7 @@ zero_memory_operand (op, mode)\n   return memory_offset_in_range_p (op, mode, 0, 0);\n }\n \n-/* Return 1 if OP is a valid operand for a `short' memory reference insn. */\n+/* Return 1 if OP is a valid operand for a `short' memory reference insn.  */\n \n int\n short_memory_operand (op, mode)\n@@ -339,7 +339,7 @@ short_memory_operand (op, mode)\n }\n \n /* Returns 1 if OP is a memory reference involving a symbolic constant\n-   that is not in the constant pool. */\n+   that is not in the constant pool.  */\n \n int\n symbolic_memory_operand (op, mode)\n@@ -479,7 +479,7 @@ reg_or_any_cint_operand (op, mode)\n      return GET_CODE (op) == CONST_INT || register_operand (op, mode);\n }\n \n-/* Return 1 if the operand is either a register or a valid D-type operand. */\n+/* Return 1 if the operand is either a register or a valid D-type operand.  */\n \n int\n reg_or_D_operand (op, mode)\n@@ -693,7 +693,7 @@ print_operand (file, x, code)\n       break;\n \n     case 's':\n-      /* Null or \"16\" depending on whether the constant is greater than 16. */\n+      /* Null or \"16\" depending on whether the constant is greater than 16.  */\n       if (GET_CODE (x) != CONST_INT)\n \toutput_operand_lossage (\"invalid %%s value\");\n \n@@ -1169,10 +1169,10 @@ output_encoded_offset (file, reg_offset)\n      FILE *file;\n      unsigned reg_offset;\n {\n-  /* Convert the offset value to 4-byte words rather than bytes. */\n+  /* Convert the offset value to 4-byte words rather than bytes.  */\n   reg_offset = (reg_offset + 3) / 4;\n \n-  /* Now output 1-4 bytes in encoded form. */\n+  /* Now output 1-4 bytes in encoded form.  */\n   if (reg_offset < (1 << 6))\n     /* Fits into one byte */\n     fprintf (file, \"\\t.byte %d\\n\", reg_offset);\n@@ -1413,12 +1413,12 @@ check_precision (opmode, op1, op2)\n /* Structure to describe a floating-point operation.  */\n \n struct fp_op {\n-  struct fp_op *next_same_hash;\t\t/* Next op with same hash code. */\n-  struct fp_op *next_in_mem;\t\t/* Next op in memory. */\n+  struct fp_op *next_same_hash;\t\t/* Next op with same hash code.  */\n+  struct fp_op *next_in_mem;\t\t/* Next op in memory.  */\n   int mem_offset;\t\t\t/* Offset from data area.  */\n   short size;\t\t\t\t/* Size of block in bytes.  */\n   short noperands;\t\t\t/* Number of operands in block.  */\n-  rtx ops[3];\t\t\t\t/* RTL for operands. */\n+  rtx ops[3];\t\t\t\t/* RTL for operands.  */\n   enum rtx_code opcode;\t\t\t/* Operation being performed.  */\n };\n \n@@ -1437,7 +1437,7 @@ static struct fp_op *last_fpop_in_mem;\n /* Subroutine number in file, to get unique \"LF\" labels.  */\n static int subr_number = 0;\n \n-/* Current word offset in data area (includes header and any constant pool). */\n+/* Current word offset in data area (includes header and any constant pool).  */\n int data_offset;\n \n /* Compute hash code for an RTX used in floating-point.  */\n@@ -1557,7 +1557,7 @@ output_fpop (code, op0, op1, op2, insn)\n \n   /* Compute the size using the rules in Appendix A of the RT Linkage\n      Convention (4.3/RT-PSD:5) manual.  These rules are a bit ambiguous,\n-     but if we guess wrong, it will effect only efficiency, not correctness. */\n+     but if we guess wrong, it will effect only efficiency, not correctness.  */\n \n   /* Size = 24 + 32 for each non-fp (or fr7) */\n   size = 24;\n@@ -1588,11 +1588,11 @@ output_fpop (code, op0, op1, op2, insn)\n   if (op2 && GET_MODE (op2) != opmode)\n     size += 12;\n \n-  /* 12 more if first and third operand types not the same. */\n+  /* 12 more if first and third operand types not the same.  */\n   if (op2 && GET_MODE (op0) != GET_MODE (op2))\n     size += 12;\n \n-  /* CMP and CMPT need additional.  Also, compute size of save/restore here. */\n+  /* CMP and CMPT need additional.  Also, compute size of save/restore here.  */\n   if (code == EQ)\n     size += 32;\n   else if (code == GE)\n@@ -1641,7 +1641,7 @@ output_fpop (code, op0, op1, op2, insn)\n \t    {\n \t      if (REGNO (op0) == REGNO (op2))\n #if 1\n-\t\t/* This triggers a bug on the RT. */\n+\t\t/* This triggers a bug on the RT.  */\n \t\tabort ();\n #else\n \t\tsize += fr0_avail ? 0 : 64;\n@@ -1699,7 +1699,7 @@ output_fpop (code, op0, op1, op2, insn)\n         size += 4;\n     }\n \n-  /* Done with size computation!  Chain this in. */\n+  /* Done with size computation!  Chain this in.  */\n   fpop->size = size;\n   data_offset += size / UNITS_PER_WORD;\n   fpop->next_in_mem = 0;\n@@ -2015,20 +2015,20 @@ romp_debugger_auto_correction(offset)\n \n   /* We really want to go from STACK_POINTER_REGNUM to\n      FRAME_POINTER_REGNUM, but this isn't defined. So go the other\n-     direction and negate. */\n+     direction and negate.  */\n   INITIAL_ELIMINATION_OFFSET (FRAME_POINTER_REGNUM, STACK_POINTER_REGNUM,\n \t\t\t      fp_to_sp);\n \n   /* The offset value points somewhere between the frame pointer and\n      the stack pointer. What is up from the frame pointer is down from the\n-     stack pointer. Therefore the negation in the offset value too. */\n+     stack pointer. Therefore the negation in the offset value too.  */\n \n   return -(offset+fp_to_sp+4);\n }\n \n /* Return the offset value of an argument having\n    the given offset. Basically, we correct by going from a arg pointer to\n-   stack pointer value. */\n+   stack pointer value.  */\n \n int\n romp_debugger_arg_correction (offset)"}, {"sha": "76cdc86d8348669df5c5e9bafa4af6ca46a5ba6c", "filename": "gcc/config/romp/romp.h", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c9bc51b6470f2e94891d4938294eb148bafb76/gcc%2Fconfig%2Fromp%2Fromp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c9bc51b6470f2e94891d4938294eb148bafb76/gcc%2Fconfig%2Fromp%2Fromp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fromp.h?ref=b1c9bc51b6470f2e94891d4938294eb148bafb76", "patch": "@@ -44,7 +44,7 @@ Boston, MA 02111-1307, USA.  */\n /* Flag to pass and return floating point values in floating point registers.\n    Since this violates the linkage convention, we feel free to destroy fr2\n    and fr3 on function calls.\n-   fr1-fr3 are used to pass the arguments. */\n+   fr1-fr3 are used to pass the arguments.  */\n #define TARGET_FP_REGS (target_flags & 4)\n \n /* Flag to return structures of more than one word in memory.  This is for\n@@ -75,8 +75,8 @@ extern int target_flags;\n /* target machine storage layout */\n \n /* Define this if most significant bit is lowest numbered\n-   in instructions that operate on numbered bit-fields. */\n-/* That is true on ROMP. */\n+   in instructions that operate on numbered bit-fields.  */\n+/* That is true on ROMP.  */\n #define BITS_BIG_ENDIAN 1\n \n /* Define this if most significant byte of a word is the lowest numbered.  */\n@@ -87,7 +87,7 @@ extern int target_flags;\n    numbered. \n \n    For ROMP we can decide arbitrarily since there are no machine instructions\n-   for them.  Might as well be consistent with bits and bytes. */\n+   for them.  Might as well be consistent with bits and bytes.  */\n #define WORDS_BIG_ENDIAN 1\n \n /* number of bits in an addressable storage unit */\n@@ -226,7 +226,7 @@ extern int target_flags;\n \n /* Value is 1 if hard register REGNO can hold a value of machine-mode MODE.\n    On ROMP, the cpu registers can hold any mode but the float registers\n-   can hold only floating point. */\n+   can hold only floating point.  */\n #define HARD_REGNO_MODE_OK(REGNO, MODE) \\\n   (! FP_REGNO_P (REGNO) || GET_MODE_CLASS (MODE) == MODE_FLOAT\t\\\n    || GET_MODE_CLASS (MODE) == MODE_COMPLEX_FLOAT)\n@@ -396,7 +396,7 @@ enum reg_class { NO_REGS, R0_REGS, R15_REGS, BASE_REGS, GENERAL_REGS,\n    just in move insns as that is the only place it is likely to occur.\n \n    `S' means that this is the address of a constant pool location.  This is\n-   equal to r14 plus a constant.  We also only check for this in move insns. */\n+   equal to r14 plus a constant.  We also only check for this in move insns.  */\n \n #define EXTRA_CONSTRAINT(OP, C)\t\t\t\t\\\n   ((C) == 'Q' ?\t\t\t\t\t\t\\\n@@ -474,7 +474,7 @@ enum reg_class { NO_REGS, R0_REGS, R15_REGS, BASE_REGS, GENERAL_REGS,\n    of the first local allocated.\n    On the ROMP, if we set the frame pointer to 15 words below the highest\n    address of the highest local variable, the first 16 words will be\n-   addressable via D-short insns. */\n+   addressable via D-short insns.  */\n #define STARTING_FRAME_OFFSET 64\n \n /* If we generate an insn to push BYTES bytes,\n@@ -1092,7 +1092,7 @@ struct rt_cargs {int gregs, fregs; };\n /* Define as C expression which evaluates to nonzero if the tablejump\n    instruction expects the table to contain offsets from the address of the\n    table.\n-   Do not define this if the table should contain absolute addresses. */\n+   Do not define this if the table should contain absolute addresses.  */\n /* #define CASE_VECTOR_PC_RELATIVE 1 */\n \n /* Specify the tree operation to be used to convert reals to integers.  */\n@@ -1293,7 +1293,7 @@ struct rt_cargs {int gregs, fregs; };\n /* Set if condition code (really not-Z) is stored in `test bit'.  */\n #define CC_IN_TB\t 01000\n \n-/* Set if condition code is set by an unsigned compare. */\n+/* Set if condition code is set by an unsigned compare.  */\n #define\tCC_UNSIGNED        02000\n \n /* Store in cc_status the expressions\n@@ -1359,7 +1359,7 @@ struct rt_cargs {int gregs, fregs; };\n #define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n   do { fputs (\"\\t.globl \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n \n-/* The prefix to add to user-visible assembler symbols. */\n+/* The prefix to add to user-visible assembler symbols.  */\n \n #define USER_LABEL_PREFIX \"_\"\n \n@@ -1371,7 +1371,7 @@ struct rt_cargs {int gregs, fregs; };\n \n /* This is how to output a label for a jump table.  Arguments are the same as\n    for ASM_OUTPUT_INTERNAL_LABEL, except the insn for the jump table is\n-   passed. */\n+   passed.  */\n \n #define ASM_OUTPUT_CASE_LABEL(FILE,PREFIX,NUM,TABLEINSN)\t\\\n { ASM_OUTPUT_ALIGN (FILE, 2); ASM_OUTPUT_INTERNAL_LABEL (FILE, PREFIX, NUM); }\n@@ -1402,7 +1402,7 @@ struct rt_cargs {int gregs, fregs; };\n   fprintf (FILE, \"\\t.long L%d\\n\", VALUE)\n \n /* This is how to output an element of a case-vector that is relative.\n-   Don't define this if it is not supported. */\n+   Don't define this if it is not supported.  */\n \n /* #define ASM_OUTPUT_ADDR_DIFF_ELT(FILE, VALUE, REL) */\n "}, {"sha": "07da5f0748ec138fbe455a20c41b8b5f68d12113", "filename": "gcc/config/romp/romp.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c9bc51b6470f2e94891d4938294eb148bafb76/gcc%2Fconfig%2Fromp%2Fromp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c9bc51b6470f2e94891d4938294eb148bafb76/gcc%2Fconfig%2Fromp%2Fromp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fromp.md?ref=b1c9bc51b6470f2e94891d4938294eb148bafb76", "patch": "@@ -180,7 +180,7 @@\n \t       || ((- const_val) & 0xffff0000) == 0\n \t       || (unsigned) ((- const_val) + 0x8000) < 0x10000)\n \t{\n-\t  /* Can do this by loading the negative constant and then negating. */\n+\t  /* Can do this by loading the negative constant and then negating.  */\n \t  emit_move_insn (operands[0], GEN_INT (- const_val));\n \t  emit_insn (gen_negsi2 (operands[0], operands[0]));\n \t  DONE;\n@@ -1130,7 +1130,7 @@\n     }\n   else if (INTVAL (operands[1]) == 8\n \t   && (INTVAL (operands[2]) % 8 == 0))\n-    ;\t\t\t\t/* Accept aligned byte-wide field. */\n+    ;\t\t\t\t/* Accept aligned byte-wide field.  */\n   else\n     FAIL;\n }\")"}, {"sha": "cc409e3aafadd4f2fd454986b60b13abac87f790", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c9bc51b6470f2e94891d4938294eb148bafb76/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c9bc51b6470f2e94891d4938294eb148bafb76/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=b1c9bc51b6470f2e94891d4938294eb148bafb76", "patch": "@@ -2993,7 +2993,7 @@ s390_emit_prologue ()\n     }      \n }\n \n-/* Expand the epilogue into a bunch of separate insns. */\n+/* Expand the epilogue into a bunch of separate insns.  */\n \n void\n s390_emit_epilogue ()"}, {"sha": "dfb757b21ee1282387b5c3d479c93dbdf2ed33d2", "filename": "gcc/config/stormy16/stormy16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c9bc51b6470f2e94891d4938294eb148bafb76/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c9bc51b6470f2e94891d4938294eb148bafb76/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.c?ref=b1c9bc51b6470f2e94891d4938294eb148bafb76", "patch": "@@ -976,7 +976,7 @@ xstormy16_expand_prologue ()\n       }\n \n   /* It's just possible that the SP here might be what we need for\n-     the new FP... */\n+     the new FP...  */\n   if (frame_pointer_needed && layout.sp_minus_fp == layout.locals_size)\n     {\n       insn = emit_move_insn (hard_frame_pointer_rtx, stack_pointer_rtx);"}, {"sha": "640cab39bcff0ab69dc0056efd65f6646e840331", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c9bc51b6470f2e94891d4938294eb148bafb76/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c9bc51b6470f2e94891d4938294eb148bafb76/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=b1c9bc51b6470f2e94891d4938294eb148bafb76", "patch": "@@ -211,12 +211,12 @@ Boston, MA 02111-1307, USA.  */\n /* #define MULTILIB_DEFAULTS {} */\n \n /* Define this macro to tell `gcc' that it should only translate a `-B' prefix\n-   into a `-L' linker option if the prefix indicates an absolute file name. */\n+   into a `-L' linker option if the prefix indicates an absolute file name.  */\n /* #define RELATIVE_PREFIX_NOT_LINKDIR */\n \n /* Define this macro as a C string constant if you wish to override the\n    standard choice of `/usr/local/lib/gcc-lib/' as the default prefix to try\n-   when searching for the executable files of the compiler. */\n+   when searching for the executable files of the compiler.  */\n /* #define STANDARD_EXEC_PREFIX \"\" */\n \n /* If defined, this macro is an additional prefix to try after\n@@ -228,7 +228,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Define this macro as a C string constant if you wish to override the\n    standard choice of `/usr/local/lib/' as the default prefix to try when\n-   searching for startup files such as `crt0.o'. */\n+   searching for startup files such as `crt0.o'.  */\n /* #define STANDARD_STARTFILE_PREFIX \"\" */\n \n /* If defined, this macro supplies an additional prefix to try after the\n@@ -240,13 +240,13 @@ Boston, MA 02111-1307, USA.  */\n \n /* If defined, this macro supplies yet another prefix to try after the standard\n    prefixes.  It is not searched when the `-b' option is used, or when the\n-   compiler is built as a cross compiler. */\n+   compiler is built as a cross compiler.  */\n /* #define MD_STARTFILE_PREFIX_1 \"\" */\n \n /* Define this macro as a C string constant if you with to set environment\n    variables for programs called by the driver, such as the assembler and\n    loader.  The driver passes the value of this macro to `putenv' to initialize\n-   the necessary environment variables. */\n+   the necessary environment variables.  */\n /* #define INIT_ENVIRONMENT \"\" */\n \n /* Define this macro as a C string constant if you wish to override the\n@@ -264,15 +264,15 @@ Boston, MA 02111-1307, USA.  */\n    search order.\n \n    Cross compilers do not use this macro and do not search the directory\n-   specified. */\n+   specified.  */\n /* #define SYSTEM_INCLUDE_DIR \"\" */\n \n /* Define this macro as a C string constant if you wish to override the\n    standard choice of `/usr/include' as the default prefix to try when\n    searching for header files.\n \n    Cross compilers do not use this macro and do not search either\n-   `/usr/include' or its replacement. */\n+   `/usr/include' or its replacement.  */\n /* #define STANDARD_INCLUDE_DIR \"\" */\n \n /* Define this macro if you wish to override the entire default search path for\n@@ -376,7 +376,7 @@ extern int target_flags;\n    instruction patterns.  Note how `TARGET_68020' appears frequently in the\n    68000 machine description file, `m68k.md'.  Another place they are used is\n    in the definitions of the other macros in the `MACHINE.h' file.  */\n-/* #define TARGET_... */\n+/* #define TARGET_...  */\n \n /* This macro defines names of command options to set and clear bits in\n    `target_flags'.  Its definition is an initializer with a subgrouping for\n@@ -2802,7 +2802,7 @@ typedef int CUMULATIVE_ARGS;\n \n    On most machines, you don't need to define any of these macros, because the\n    C compiler that comes with the system takes care of doing them.  */\n-/* #define perform_... */\n+/* #define perform_...  */\n \n /* Define this macro to generate code for Objective C message sending using the\n    calling convention of the NeXT system.  This calling convention involves\n@@ -4574,7 +4574,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n    This does nothing if the expected type does not exist.\n \n    See the function `init_decl_processing' in `c-decl.c' to find the names to\n-   use for all the built-in C types. */\n+   use for all the built-in C types.  */\n /* #define DBX_OUTPUT_STANDARD_TYPES(SYMS) */\n \n /* Some stabs encapsulation formats (in particular ECOFF), cannot\n@@ -4673,7 +4673,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n    assembler directives.  See `sdbout.c' for a list of these macros and their\n    arguments.  If the standard syntax is used, you need not define them\n    yourself.  */\n-/* #define PUT_SDB_... */\n+/* #define PUT_SDB_...  */\n \n /* Some assemblers do not support a semicolon as a delimiter, even between SDB\n    assembler directives.  In that case, define this macro to be the delimiter\n@@ -4734,7 +4734,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Define as C expression which evaluates to nonzero if the tablejump\n    instruction expects the table to contain offsets from the address of the\n    table.\n-   Do not define this if the table should contain absolute addresses. */\n+   Do not define this if the table should contain absolute addresses.  */\n /* #define CASE_VECTOR_PC_RELATIVE 1 */\n \n /* Define this if control falls through a `case' insn when the index value is\n@@ -4978,7 +4978,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define HANDLE_SYSV_PRAGMA\n \n /* Define this macro if you want to support the Win32 style pragmas\n-   #pragma pack(push,<n>) and #pragma pack(pop). */\n+   #pragma pack(push,<n>) and #pragma pack(pop).  */\n /* HANDLE_PRAGMA_PACK_PUSH_POP 1 */\n    \n /* Define this macro to control use of the character `$' in identifier names.\n@@ -5063,7 +5063,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* #define MAX_CONDITIONAL_EXECUTE */\n \n /* A C statement that adds to tree CLOBBERS a set of STRING_CST trees for any\n-   hard regs the port wishes to automatically clobber for all asms. */\n+   hard regs the port wishes to automatically clobber for all asms.  */\n /* #define MD_ASM_CLOBBERS(CLOBBERS) */\n \n /* Indicate how many instructions can be issued at the same time.  */\n@@ -5072,7 +5072,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* A C statement which is executed by the Haifa scheduler at the beginning of\n    each block of instructions that are to be scheduled.  FILE is either a null\n    pointer, or a stdio stream to write any debug output to.  VERBOSE is the\n-   verbose level provided by -fsched-verbose-<n>. */\n+   verbose level provided by -fsched-verbose-<n>.  */\n /* #define MD_SCHED_INIT (FILE, VERBOSE) */\n \n /* A C statement which is executed by the Haifa scheduler after it has scheduled\n@@ -5093,7 +5093,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n    to write any debug output to.  VERBOSE is the verbose level provided by\n    -fsched-verbose-<n>.  INSN is the instruction that was scheduled.  MORE is the\n    number of instructions that can be issued in the current cycle.  This macro\n-   is responsible for updating the value of MORE (typically by (MORE)--). */\n+   is responsible for updating the value of MORE (typically by (MORE)--).  */\n /* #define MD_SCHED_VARIABLE_ISSUE (FILE, VERBOSE, INSN, MORE) */\n \n /* Define this to the largest integer machine mode which can be used for\n@@ -5104,7 +5104,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* Define this macro as a C string constant for the linker argument to link in the\n    system math library, or \"\" if the target does not have a separate math library.\n-   You need only define this macro if the default of \"-lm\" is wrong. */\n+   You need only define this macro if the default of \"-lm\" is wrong.  */\n /* #define  MATH_LIBRARY */\n \f\n /* Define the information needed to generate branch and scc insns.  This is"}]}