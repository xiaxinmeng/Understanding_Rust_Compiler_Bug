{"sha": "d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgwMjhmMmNjMzRjNmZlMWY1YThiOTM3NjIxOTVkY2RiYmQzN2I3MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-02-23T21:23:58Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-02-23T21:23:58Z"}, "message": "re PR c++/38880 (g++.dg/init/const7.C XFAILed)\n\n        PR c++/38880\n        * varasm.c (initializer_constant_valid_p) [PLUS_EXPR]: Check\n        narrowing_initializer_constant_valid_p.\n        (narrowing_initializer_constant_valid_p): Don't return\n        null_pointer_node for adding a pointer to itself.\n\nFrom-SVN: r144395", "tree": {"sha": "2f9fbf6ee094e40be52158fbd7313e4dbd65c998", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f9fbf6ee094e40be52158fbd7313e4dbd65c998"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "68c512f66db07a1bbe7f1fb9c42eedeba65e13c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c512f66db07a1bbe7f1fb9c42eedeba65e13c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68c512f66db07a1bbe7f1fb9c42eedeba65e13c2"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "58f0f9138540af83b63dd7228bc827a1db486e3d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71", "patch": "@@ -1,3 +1,11 @@\n+2009-02-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/38880\n+\t* varasm.c (initializer_constant_valid_p) [PLUS_EXPR]: Check\n+\tnarrowing_initializer_constant_valid_p.\n+\t(narrowing_initializer_constant_valid_p): Don't return \n+\tnull_pointer_node for adding a pointer to itself.\n+\n 2009-02-23  Jan Hubicka  <jh@suse.cz>\n \n \tPR c/12245"}, {"sha": "9c6b43aec27ad321410890c4a024b851018ea331", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71", "patch": "@@ -1,5 +1,9 @@\n 2009-02-23  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/38880\n+\t* g++.dg/init/const7.C: Remove XFAIL.\n+\t* g++.dg/init/static-init1.C: New test.\n+\n \t* g++.dg/cpp0x/initlist14.C: New test.\n \n 2008-02-21  Thomas Koenig  <tkoenig@gcc.gnu.org>"}, {"sha": "18d04625db2da1178c806ee1f0a5cf287e65b66a", "filename": "gcc/testsuite/g++.dg/init/const7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fconst7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fconst7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fconst7.C?ref=d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71", "patch": "@@ -9,5 +9,5 @@ short offsets[1] = {\n // This ensures that we get a dump whether or not the bug is present.\n void fn() { }\n \n-// { dg-final { scan-tree-dump-not \"initialization\"  \"gimple\" { xfail *-*-* } } }\n+// { dg-final { scan-tree-dump-not \"initialization\"  \"gimple\" } }\n // { dg-final { cleanup-tree-dump \"gimple\" } }"}, {"sha": "dddbca1c7a11368e7d3f6e9ee4ab8c694832d68e", "filename": "gcc/testsuite/g++.dg/init/static-init1.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fstatic-init1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fstatic-init1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fstatic-init1.C?ref=d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71", "patch": "@@ -0,0 +1,5 @@\n+// Related to the patch for 38880.\n+// Make sure we don't think we can initialize a at compile time.\n+\n+char c;\n+short a[] = { (short)((int)&c + (int)&c) };"}, {"sha": "c724fcd721ec35edd6b2b01eda4a98ad16366bc9", "filename": "gcc/varasm.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=d8028f2cc34c6fe1f5a8b93762195dcdbbd37b71", "patch": "@@ -4070,8 +4070,8 @@ constructor_static_from_elts_p (const_tree ctor)\n \t  && !VEC_empty (constructor_elt, CONSTRUCTOR_ELTS (ctor)));\n }\n \n-/* A subroutine of initializer_constant_valid_p.  VALUE is either a\n-   MINUS_EXPR or a POINTER_PLUS_EXPR.  This looks for cases of VALUE\n+/* A subroutine of initializer_constant_valid_p.  VALUE is a MINUS_EXPR,\n+   PLUS_EXPR or POINTER_PLUS_EXPR.  This looks for cases of VALUE\n    which are valid when ENDTYPE is an integer of any size; in\n    particular, this does not accept a pointer minus a constant.  This\n    returns null_pointer_node if the VALUE is an absolute constant\n@@ -4124,7 +4124,9 @@ narrowing_initializer_constant_valid_p (tree value, tree endtype)\n   /* Both initializers must be known.  */\n   if (op0 && op1)\n     {\n-      if (op0 == op1)\n+      if (op0 == op1\n+\t  && (op0 == null_pointer_node\n+\t      || TREE_CODE (value) == MINUS_EXPR))\n \treturn null_pointer_node;\n \n       /* Support differences between labels.  */\n@@ -4315,12 +4317,10 @@ initializer_constant_valid_p (tree value, tree endtype)\n \t}\n \n       /* Support narrowing pointer differences.  */\n-      if (TREE_CODE (value) == POINTER_PLUS_EXPR)\n-\t{\n-\t  ret = narrowing_initializer_constant_valid_p (value, endtype);\n-\t  if (ret != NULL_TREE)\n-\t    return ret;\n-\t}\n+      ret = narrowing_initializer_constant_valid_p (value, endtype);\n+      if (ret != NULL_TREE)\n+\treturn ret;\n+\n       break;\n \n     case MINUS_EXPR:"}]}