{"sha": "f259abd260739aca06f8760dcbc0a1a567018ff2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI1OWFiZDI2MDczOWFjYTA2Zjg3NjBkY2JjMGExYTU2NzAxOGZmMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-11-21T10:45:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-11-21T10:45:58Z"}, "message": "re PR rtl-optimization/87817 (gcc.target/i386/bmi2-bzhi-2.c execution test)\n\n\tPR rtl-optimization/87817\n\t* config/i386/i386.md (bmi2_bzhi_<mode>3, *bmi2_bzhi_<mode>3,\n\t*bmi2_bzhi_<mode>3_1, *bmi2_bzhi_<mode>3_1_ccz): Use IF_THEN_ELSE\n\tin the pattern to avoid triggering UB when operands[2] is zero.\n\t(tbm_bextri_<mode>): New expander.  Renamed the old define_insn to ...\n\t(*tbm_bextri_<mode>): ... this.\n\nFrom-SVN: r266340", "tree": {"sha": "86c4d15ef51d1a3ce3b66dbe2bd7cf74643f7f5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86c4d15ef51d1a3ce3b66dbe2bd7cf74643f7f5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f259abd260739aca06f8760dcbc0a1a567018ff2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f259abd260739aca06f8760dcbc0a1a567018ff2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f259abd260739aca06f8760dcbc0a1a567018ff2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f259abd260739aca06f8760dcbc0a1a567018ff2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "171125708adc225b28da35f2f50d2554c0d5f595", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/171125708adc225b28da35f2f50d2554c0d5f595", "html_url": "https://github.com/Rust-GCC/gccrs/commit/171125708adc225b28da35f2f50d2554c0d5f595"}], "stats": {"total": 86, "additions": 63, "deletions": 23}, "files": [{"sha": "005ce0f49d99d12698664341388dd7169e4b322b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f259abd260739aca06f8760dcbc0a1a567018ff2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f259abd260739aca06f8760dcbc0a1a567018ff2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f259abd260739aca06f8760dcbc0a1a567018ff2", "patch": "@@ -1,3 +1,12 @@\n+2018-11-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/87817\n+\t* config/i386/i386.md (bmi2_bzhi_<mode>3, *bmi2_bzhi_<mode>3,\n+\t*bmi2_bzhi_<mode>3_1, *bmi2_bzhi_<mode>3_1_ccz): Use IF_THEN_ELSE\n+\tin the pattern to avoid triggering UB when operands[2] is zero.\n+\t(tbm_bextri_<mode>): New expander.  Renamed the old define_insn to ...\n+\t(*tbm_bextri_<mode>): ... this.\n+\n 2018-11-21  Tom de Vries  <tdevries@suse.de>\n \n \tPR driver/79855"}, {"sha": "2231204b29c148478f32531ce856246dba82920e", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 54, "deletions": 23, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f259abd260739aca06f8760dcbc0a1a567018ff2/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f259abd260739aca06f8760dcbc0a1a567018ff2/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=f259abd260739aca06f8760dcbc0a1a567018ff2", "patch": "@@ -13615,25 +13615,31 @@\n (define_expand \"bmi2_bzhi_<mode>3\"\n   [(parallel\n     [(set (match_operand:SWI48 0 \"register_operand\")\n-\t  (zero_extract:SWI48\n-\t    (match_operand:SWI48 1 \"nonimmediate_operand\")\n-\t    (umin:SWI48\n-\t      (and:SWI48 (match_operand:SWI48 2 \"register_operand\")\n-\t\t\t (const_int 255))\n-\t      (match_dup 3))\n+\t  (if_then_else:SWI48\n+\t    (ne:QI (and:SWI48 (match_operand:SWI48 2 \"register_operand\")\n+\t\t\t      (const_int 255))\n+\t\t   (const_int 0))\n+\t    (zero_extract:SWI48\n+\t      (match_operand:SWI48 1 \"nonimmediate_operand\")\n+\t      (umin:SWI48 (and:SWI48 (match_dup 2) (const_int 255))\n+\t\t\t  (match_dup 3))\n+\t      (const_int 0))\n \t    (const_int 0)))\n      (clobber (reg:CC FLAGS_REG))])]\n   \"TARGET_BMI2\"\n   \"operands[3] = GEN_INT (<MODE_SIZE> * BITS_PER_UNIT);\")\n \n (define_insn \"*bmi2_bzhi_<mode>3\"\n   [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n-\t(zero_extract:SWI48\n-\t  (match_operand:SWI48 1 \"nonimmediate_operand\" \"rm\")\n-\t  (umin:SWI48\n-\t    (and:SWI48 (match_operand:SWI48 2 \"register_operand\" \"r\")\n-\t\t       (const_int 255))\n-\t    (match_operand:SWI48 3 \"const_int_operand\" \"n\"))\n+\t(if_then_else:SWI48\n+\t  (ne:QI (and:SWI48 (match_operand:SWI48 2 \"register_operand\" \"r\")\n+\t\t\t    (const_int 255))\n+\t\t (const_int 0))\n+\t  (zero_extract:SWI48\n+\t    (match_operand:SWI48 1 \"nonimmediate_operand\" \"rm\")\n+\t    (umin:SWI48 (and:SWI48 (match_dup 2) (const_int 255))\n+\t\t\t(match_operand:SWI48 3 \"const_int_operand\" \"n\"))\n+\t    (const_int 0))\n \t  (const_int 0)))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_BMI2 && INTVAL (operands[3]) == <MODE_SIZE> * BITS_PER_UNIT\"\n@@ -13644,11 +13650,13 @@\n \n (define_insn \"*bmi2_bzhi_<mode>3_1\"\n   [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n-\t(zero_extract:SWI48\n-\t  (match_operand:SWI48 1 \"nonimmediate_operand\" \"rm\")\n-\t  (umin:SWI48\n-\t    (zero_extend:SWI48 (match_operand:QI 2 \"register_operand\" \"r\"))\n-\t    (match_operand:SWI48 3 \"const_int_operand\" \"n\"))\n+\t(if_then_else:SWI48\n+\t  (ne:QI (match_operand:QI 2 \"register_operand\" \"r\") (const_int 0))\n+\t  (zero_extract:SWI48\n+\t    (match_operand:SWI48 1 \"nonimmediate_operand\" \"rm\")\n+\t    (umin:SWI48 (zero_extend:SWI48 (match_dup 2))\n+\t\t\t(match_operand:SWI48 3 \"const_int_operand\" \"n\"))\n+\t    (const_int 0))\n \t  (const_int 0)))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_BMI2 && INTVAL (operands[3]) == <MODE_SIZE> * BITS_PER_UNIT\"\n@@ -13660,11 +13668,13 @@\n (define_insn \"*bmi2_bzhi_<mode>3_1_ccz\"\n   [(set (reg:CCZ FLAGS_REG)\n \t(compare:CCZ\n-\t  (zero_extract:SWI48\n-\t    (match_operand:SWI48 1 \"nonimmediate_operand\" \"rm\")\n-\t    (umin:SWI48\n-\t      (zero_extend:SWI48 (match_operand:QI 2 \"register_operand\" \"r\"))\n-\t      (match_operand:SWI48 3 \"const_int_operand\" \"n\"))\n+\t  (if_then_else:SWI48\n+\t    (ne:QI (match_operand:QI 2 \"register_operand\" \"r\") (const_int 0))\n+\t    (zero_extract:SWI48\n+\t      (match_operand:SWI48 1 \"nonimmediate_operand\" \"rm\")\n+\t      (umin:SWI48 (zero_extend:SWI48 (match_dup 2))\n+\t\t\t  (match_operand:SWI48 3 \"const_int_operand\" \"n\"))\n+\t      (const_int 0))\n \t    (const_int 0))\n \t(const_int 0)))\n    (clobber (match_scratch:SWI48 0 \"=r\"))]\n@@ -13697,7 +13707,28 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n ;; TBM instructions.\n-(define_insn \"tbm_bextri_<mode>\"\n+(define_expand \"tbm_bextri_<mode>\"\n+  [(parallel\n+    [(set (match_operand:SWI48 0 \"register_operand\")\n+\t  (zero_extract:SWI48\n+\t    (match_operand:SWI48 1 \"nonimmediate_operand\")\n+\t    (match_operand 2 \"const_0_to_255_operand\" \"N\")\n+\t    (match_operand 3 \"const_0_to_255_operand\" \"N\")))\n+     (clobber (reg:CC FLAGS_REG))])]\n+  \"TARGET_TBM\"\n+{\n+  if (operands[2] == const0_rtx\n+      || INTVAL (operands[3]) >= <MODE_SIZE> * BITS_PER_UNIT)\n+    {\n+      emit_move_insn (operands[0], const0_rtx);\n+      DONE;\n+    }\n+  if (INTVAL (operands[2]) + INTVAL (operands[3])\n+      > <MODE_SIZE> * BITS_PER_UNIT)\n+    operands[2] = GEN_INT (<MODE_SIZE> * BITS_PER_UNIT - INTVAL (operands[3]));\n+})\n+\n+(define_insn \"*tbm_bextri_<mode>\"\n   [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n         (zero_extract:SWI48\n           (match_operand:SWI48 1 \"nonimmediate_operand\" \"rm\")"}]}