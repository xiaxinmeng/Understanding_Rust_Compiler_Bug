{"sha": "230215f5b56eb906caa4bbec7e69b1ba2d961cda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjMwMjE1ZjViNTZlYjkwNmNhYTRiYmVjN2U2OWIxYmEyZDk2MWNkYQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2005-05-02T23:31:43Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-05-02T23:31:43Z"}, "message": "[multiple changes]\n\n2005-04-29  Geoffrey Keating  <geoffk@apple.com>\n\n\t* config/rs6000/rs6000.md (floatsidf2_internal): Merge to create\n\tdefine_insn_and_split.  Split only when memory operand is\n\toffsettable.  Use adjust_address rather than plus_constant.\n\t(floatunssidf2_internal): Likewise.\n\t(fix_truncdfsi2_internal): Split only when memory operand is\n\toffsettable.  Use adjust_address rather than plus_constant.\n\t(fix_trunctfsi2_internal): Likewise.\n\t(floatsidf2_internal): Likewise.\n\nIndex: testsuite/ChangeLog\n2005-05-02  Geoffrey Keating  <geoffk@apple.com>\n\n\t* gcc.dg/rs6000-fpint-2.c: New.\n\nFrom-SVN: r99126", "tree": {"sha": "0f5ce3b00fb90fd9cb329e9c512f56fe6a0c456e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f5ce3b00fb90fd9cb329e9c512f56fe6a0c456e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/230215f5b56eb906caa4bbec7e69b1ba2d961cda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/230215f5b56eb906caa4bbec7e69b1ba2d961cda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/230215f5b56eb906caa4bbec7e69b1ba2d961cda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/230215f5b56eb906caa4bbec7e69b1ba2d961cda/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b565d777838af4eea84460c8df8fcc081c5187d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b565d777838af4eea84460c8df8fcc081c5187d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b565d777838af4eea84460c8df8fcc081c5187d4"}], "stats": {"total": 116, "additions": 56, "deletions": 60}, "files": [{"sha": "b781ed82af558906077eb3d278c6e2847453d500", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/230215f5b56eb906caa4bbec7e69b1ba2d961cda/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/230215f5b56eb906caa4bbec7e69b1ba2d961cda/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=230215f5b56eb906caa4bbec7e69b1ba2d961cda", "patch": "@@ -1,3 +1,15 @@\n+2005-04-29  Geoffrey Keating  <geoffk@apple.com>\n+\n+\tPR target/20813\n+\t* config/rs6000/rs6000.md (floatsidf2_internal): Merge to create\n+\tdefine_insn_and_split.  Split only when memory operand is\n+\toffsettable.  Use adjust_address rather than plus_constant.\n+\t(floatunssidf2_internal): Likewise.\n+\t(fix_truncdfsi2_internal): Split only when memory operand is\n+\toffsettable.  Use adjust_address rather than plus_constant.\n+\t(fix_trunctfsi2_internal): Likewise.\n+\t(floatsidf2_internal): Likewise.\n+\n 2005-05-02  Diego Novillo  <dnovillo@redhat.com>\n \n \t* tree-vrp.c (set_value_range_to_nonnull): Declare inline."}, {"sha": "790a7098fcf13dea67031d70d6bfae3ab14ca59b", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 28, "deletions": 60, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/230215f5b56eb906caa4bbec7e69b1ba2d961cda/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/230215f5b56eb906caa4bbec7e69b1ba2d961cda/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=230215f5b56eb906caa4bbec7e69b1ba2d961cda", "patch": "@@ -5163,7 +5163,7 @@\n   operands[6] = gen_reg_rtx (SImode);\n }\")\n \n-(define_insn \"*floatsidf2_internal\"\n+(define_insn_and_split \"*floatsidf2_internal\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=&f\")\n \t(float:DF (match_operand:SI 1 \"gpc_reg_operand\" \"r\")))\n    (use (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n@@ -5173,30 +5173,14 @@\n    (clobber (match_operand:SI 6 \"gpc_reg_operand\" \"=&r\"))]\n   \"! TARGET_POWERPC64 && TARGET_HARD_FLOAT && TARGET_FPRS\"\n   \"#\"\n-  [(set_attr \"length\" \"24\")])\n-\n-(define_split\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"\")\n-\t(float:DF (match_operand:SI 1 \"gpc_reg_operand\" \"\")))\n-   (use (match_operand:SI 2 \"gpc_reg_operand\" \"\"))\n-   (use (match_operand:DF 3 \"gpc_reg_operand\" \"\"))\n-   (clobber (match_operand:DF 4 \"offsettable_mem_operand\" \"\"))\n-   (clobber (match_operand:DF 5 \"gpc_reg_operand\" \"\"))\n-   (clobber (match_operand:SI 6 \"gpc_reg_operand\" \"\"))]\n-  \"! TARGET_POWERPC64 && TARGET_HARD_FLOAT && TARGET_FPRS\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"\")\n-\t(float:DF (match_operand:SI 1 \"gpc_reg_operand\" \"\")))\n-   (use (match_operand:SI 2 \"gpc_reg_operand\" \"\"))\n-   (use (match_operand:DF 3 \"gpc_reg_operand\" \"\"))\n-   (clobber (match_operand:DF 4 \"offsettable_mem_operand\" \"\"))\n-   (clobber (match_operand:DF 5 \"gpc_reg_operand\" \"\"))\n-   (clobber (match_operand:SI 6 \"gpc_reg_operand\" \"\"))]\n+  \"&& (!no_new_pseudos || offsettable_nonstrict_memref_p (operands[4]))\"\n+  [(pc)]\n   \"\n {\n   rtx lowword, highword;\n-  gcc_assert (GET_CODE (operands[4]) == MEM);\n-  highword = XEXP (operands[4], 0);\n-  lowword = plus_constant (highword, 4);\n+  gcc_assert (MEM_P (operands[4]));\n+  highword = adjust_address (operands[4], SImode, 0);\n+  lowword = adjust_address (operands[4], SImode, 4);\n   if (! WORDS_BIG_ENDIAN)\n     {\n       rtx tmp;\n@@ -5205,12 +5189,13 @@\n \n   emit_insn (gen_xorsi3 (operands[6], operands[1],\n \t\t\t GEN_INT (~ (HOST_WIDE_INT) 0x7fffffff)));\n-  emit_move_insn (gen_rtx_MEM (SImode, lowword), operands[6]);\n-  emit_move_insn (gen_rtx_MEM (SImode, highword), operands[2]);\n+  emit_move_insn (lowword, operands[6]);\n+  emit_move_insn (highword, operands[2]);\n   emit_move_insn (operands[5], operands[4]);\n   emit_insn (gen_subdf3 (operands[0], operands[5], operands[3]));\n   DONE;\n-}\")\n+}\"\n+  [(set_attr \"length\" \"24\")])\n \n (define_expand \"floatunssisf2\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"\")\n@@ -5249,7 +5234,7 @@\n   operands[5] = gen_reg_rtx (DFmode);\n }\")\n \n-(define_insn \"*floatunssidf2_internal\"\n+(define_insn_and_split \"*floatunssidf2_internal\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=&f\")\n \t(unsigned_float:DF (match_operand:SI 1 \"gpc_reg_operand\" \"r\")))\n    (use (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n@@ -5258,40 +5243,27 @@\n    (clobber (match_operand:DF 5 \"gpc_reg_operand\" \"=&f\"))]\n   \"! TARGET_POWERPC64 && TARGET_HARD_FLOAT && TARGET_FPRS\"\n   \"#\"\n-  [(set_attr \"length\" \"20\")])\n-\n-(define_split\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"\")\n-\t(unsigned_float:DF (match_operand:SI 1 \"gpc_reg_operand\" \"\")))\n-   (use (match_operand:SI 2 \"gpc_reg_operand\" \"\"))\n-   (use (match_operand:DF 3 \"gpc_reg_operand\" \"\"))\n-   (clobber (match_operand:DF 4 \"offsettable_mem_operand\" \"\"))\n-   (clobber (match_operand:DF 5 \"gpc_reg_operand\" \"\"))]\n-  \"! TARGET_POWERPC64 && TARGET_HARD_FLOAT && TARGET_FPRS\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"\")\n-\t(unsigned_float:DF (match_operand:SI 1 \"gpc_reg_operand\" \"\")))\n-   (use (match_operand:SI 2 \"gpc_reg_operand\" \"\"))\n-   (use (match_operand:DF 3 \"gpc_reg_operand\" \"\"))\n-   (clobber (match_operand:DF 4 \"offsettable_mem_operand\" \"\"))\n-   (clobber (match_operand:DF 5 \"gpc_reg_operand\" \"\"))]\n+  \"&& (!no_new_pseudos || offsettable_nonstrict_memref_p (operands[4]))\"\n+  [(pc)]\n   \"\n {\n   rtx lowword, highword;\n-  gcc_assert (GET_CODE (operands[4]) == MEM);\n-  highword = XEXP (operands[4], 0);\n-  lowword = plus_constant (highword, 4);\n+  gcc_assert (MEM_P (operands[4]));\n+  highword = adjust_address (operands[4], SImode, 0);\n+  lowword = adjust_address (operands[4], SImode, 4);\n   if (! WORDS_BIG_ENDIAN)\n     {\n       rtx tmp;\n       tmp = highword; highword = lowword; lowword = tmp;\n     }\n \n-  emit_move_insn (gen_rtx_MEM (SImode, lowword), operands[1]);\n-  emit_move_insn (gen_rtx_MEM (SImode, highword), operands[2]);\n+  emit_move_insn (lowword, operands[1]);\n+  emit_move_insn (highword, operands[2]);\n   emit_move_insn (operands[5], operands[4]);\n   emit_insn (gen_subdf3 (operands[0], operands[5], operands[3]));\n   DONE;\n-}\")\n+}\"\n+  [(set_attr \"length\" \"20\")])\n \n ; In the TARGET_PPC_GFXOPT case, this could and probably should\n ; take a memory destination; but actually making this work is hard.\n@@ -5331,19 +5303,17 @@\n    (clobber (match_operand:DI 3 \"memory_operand\" \"=o\"))]\n   \"(TARGET_POWER2 || TARGET_POWERPC) && TARGET_HARD_FLOAT && TARGET_FPRS\"\n   \"#\"\n-  \"&& 1\"\n+  \"&& (!no_new_pseudos || offsettable_nonstrict_memref_p (operands[3]))\"\n   [(pc)]\n   \"\n {\n   rtx lowword;\n-  gcc_assert (GET_CODE (operands[3]) == MEM);\n-  lowword = XEXP (operands[3], 0);\n-  if (WORDS_BIG_ENDIAN)\n-    lowword = plus_constant (lowword, 4);\n+  gcc_assert (MEM_P (operands[3]));\n+  lowword = adjust_address (operands[3], SImode, WORDS_BIG_ENDIAN ? 4 : 0);\n \n   emit_insn (gen_fctiwz (operands[2], operands[1]));\n   emit_move_insn (operands[3], operands[2]);\n-  emit_move_insn (operands[0], gen_rtx_MEM (SImode, lowword));\n+  emit_move_insn (operands[0], lowword);\n   DONE;\n }\"\n   [(set_attr \"length\" \"16\")])\n@@ -8476,20 +8446,18 @@\n   \"(DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_DARWIN)\n    && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_LONG_DOUBLE_128\"\n   \"#\"\n-  \"&& reload_completed\"\n+  \"&& (!no_new_pseudos || offsettable_nonstrict_memref_p (operands[5]))\"\n   [(pc)]\n {\n   rtx lowword;\n   emit_insn (gen_fix_trunc_helper (operands[2], operands[1], operands[3]));\n \n-  gcc_assert (GET_CODE (operands[5]) == MEM);\n-  lowword = XEXP (operands[5], 0);\n-  if (WORDS_BIG_ENDIAN)\n-    lowword = plus_constant (lowword, 4);\n+  gcc_assert (MEM_P (operands[5]));\n+  lowword = adjust_address (operands[5], SImode, WORDS_BIG_ENDIAN ? 4 : 0);\n \n   emit_insn (gen_fctiwz (operands[4], operands[2]));\n   emit_move_insn (operands[5], operands[4]);\n-  emit_move_insn (operands[0], gen_rtx_MEM (SImode, lowword));\n+  emit_move_insn (operands[0], lowword);\n   DONE;\n })\n "}, {"sha": "573f19109ffcd7951200cb8c1162da40dc87c8dc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/230215f5b56eb906caa4bbec7e69b1ba2d961cda/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/230215f5b56eb906caa4bbec7e69b1ba2d961cda/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=230215f5b56eb906caa4bbec7e69b1ba2d961cda", "patch": "@@ -1,3 +1,8 @@\n+2005-05-02  Geoffrey Keating  <geoffk@apple.com>\n+\n+\tPR target/20813\n+\t* gcc.dg/rs6000-fpint-2.c: New.\n+\n 2005-05-02  Joseph S. Myers  <joseph@codesourcery.com>\n \n \tPR c/15698"}, {"sha": "a2ada5b7daef4bae867ffe46a255fe98cfaf6daf", "filename": "gcc/testsuite/gcc.dg/rs6000-fpint-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/230215f5b56eb906caa4bbec7e69b1ba2d961cda/gcc%2Ftestsuite%2Fgcc.dg%2Frs6000-fpint-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/230215f5b56eb906caa4bbec7e69b1ba2d961cda/gcc%2Ftestsuite%2Fgcc.dg%2Frs6000-fpint-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Frs6000-fpint-2.c?ref=230215f5b56eb906caa4bbec7e69b1ba2d961cda", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile { target powerpc*-*-* rs6000-*-* } } */\n+/* { dg-options \"-mno-powerpc-gfxopt -mpowerpc64\" } */\n+extern void bar (void *);\n+extern double x;\n+void\n+foo (void)\n+{\n+  char buf2 [32][1024];\n+  bar (buf2 [(int) x]);\n+}\n+"}]}