{"sha": "ec593a8fc3c739005538ffbe097a6ad38240be6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM1OTNhOGZjM2M3MzkwMDU1MzhmZmJlMDk3YTZhZDM4MjQwYmU2ZA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-11-20T22:49:41Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-11-20T22:49:41Z"}, "message": "stor-layout.c (bit_field_mode_iterator::next_mode): Fix signedness.\n\ngcc/\n\t* stor-layout.c (bit_field_mode_iterator::next_mode): Fix signedness.\n\nFrom-SVN: r193680", "tree": {"sha": "dd09e9dfa2f4585203ec1bc13e1074783b5e38f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd09e9dfa2f4585203ec1bc13e1074783b5e38f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec593a8fc3c739005538ffbe097a6ad38240be6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec593a8fc3c739005538ffbe097a6ad38240be6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec593a8fc3c739005538ffbe097a6ad38240be6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec593a8fc3c739005538ffbe097a6ad38240be6d/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "341e19df23701a75f32dd31c24575c85abe961c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/341e19df23701a75f32dd31c24575c85abe961c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/341e19df23701a75f32dd31c24575c85abe961c7"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "8990122d3ab331a81fd596cb7eebc5027d8d6e9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec593a8fc3c739005538ffbe097a6ad38240be6d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec593a8fc3c739005538ffbe097a6ad38240be6d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec593a8fc3c739005538ffbe097a6ad38240be6d", "patch": "@@ -1,3 +1,7 @@\n+2012-11-20  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* stor-layout.c (bit_field_mode_iterator::next_mode): Fix signedness.\n+\n 2012-11-20  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/55396"}, {"sha": "b1b7cb29fc4f0fdd4449fc3a313ed47e9720ef14", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec593a8fc3c739005538ffbe097a6ad38240be6d/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec593a8fc3c739005538ffbe097a6ad38240be6d/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=ec593a8fc3c739005538ffbe097a6ad38240be6d", "patch": "@@ -2670,10 +2670,6 @@ bit_field_mode_iterator::next_mode (enum machine_mode *out_mode)\n       if (unit != GET_MODE_PRECISION (mode_))\n \tcontinue;\n \n-      /* Skip modes that are too small.  */\n-      if ((bitpos_ % unit) + bitsize_ > unit)\n-\tcontinue;\n-\n       /* Stop if the mode is too wide to handle efficiently.  */\n       if (unit > MAX_FIXED_MODE_SIZE)\n \tbreak;\n@@ -2683,11 +2679,18 @@ bit_field_mode_iterator::next_mode (enum machine_mode *out_mode)\n       if (count_ > 0 && unit > BITS_PER_WORD)\n \tbreak;\n \n+      /* Skip modes that are too small.  */\n+      unsigned HOST_WIDE_INT substart = (unsigned HOST_WIDE_INT) bitpos_ % unit;\n+      unsigned HOST_WIDE_INT subend = substart + bitsize_;\n+      if (subend > unit)\n+\tcontinue;\n+\n       /* Stop if the mode goes outside the bitregion.  */\n-      HOST_WIDE_INT start = bitpos_ - (bitpos_ % unit);\n+      HOST_WIDE_INT start = bitpos_ - substart;\n       if (bitregion_start_ && start < bitregion_start_)\n \tbreak;\n-      if (start + unit > bitregion_end_ + 1)\n+      HOST_WIDE_INT end = start + unit;\n+      if (end > bitregion_end_ + 1)\n \tbreak;\n \n       /* Stop if the mode requires too much alignment.  */"}]}