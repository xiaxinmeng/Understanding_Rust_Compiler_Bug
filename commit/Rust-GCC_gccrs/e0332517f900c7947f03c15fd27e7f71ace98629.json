{"sha": "e0332517f900c7947f03c15fd27e7f71ace98629", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAzMzI1MTdmOTAwYzc5NDdmMDNjMTVmZDI3ZTdmNzFhY2U5ODYyOQ==", "commit": {"author": {"name": "Dragan Mladjenovic", "email": "dragan.mladjenovic@rt-rk.com", "date": "2020-01-30T07:19:49Z"}, "committer": {"name": "Dragan Mladjenovic", "email": "dragan.mladjenovic@rt-rk.com", "date": "2020-01-30T07:56:06Z"}, "message": "Regenerate configure for 54b3d52\n\nCommit 54b3d52 (\"Emit .note.GNU-stack for hard-float linux targets.\")\nwas missing generated files.  Add them now.\n\ngcc/ChangeLog:\n\n2020-01-30  Dragan Mladjenovic  <dmladjenovic@wavecomp.com>\n\n\t* config.in: Regenerated.\n\t* configure: Regenerated.", "tree": {"sha": "432f45f38a65c6bcfcbd0ffa24f5fa2fb9223b37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/432f45f38a65c6bcfcbd0ffa24f5fa2fb9223b37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0332517f900c7947f03c15fd27e7f71ace98629", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0332517f900c7947f03c15fd27e7f71ace98629", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0332517f900c7947f03c15fd27e7f71ace98629", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0332517f900c7947f03c15fd27e7f71ace98629/comments", "author": null, "committer": null, "parents": [{"sha": "3904cc106e394ef2a4621576c9fdd53b597add36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3904cc106e394ef2a4621576c9fdd53b597add36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3904cc106e394ef2a4621576c9fdd53b597add36"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "a36e73249a39b96d7136a13357a56db161ab7880", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0332517f900c7947f03c15fd27e7f71ace98629/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0332517f900c7947f03c15fd27e7f71ace98629/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0332517f900c7947f03c15fd27e7f71ace98629", "patch": "@@ -1,3 +1,8 @@\n+2020-01-30  Dragan Mladjenovic  <dmladjenovic@wavecomp.com>\n+\n+\t* config.in: Regenerated.\n+\t* configure: Regenerated.\n+\n 2020-01-29  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR bootstrap/93409"}, {"sha": "1110492c1bb57079f0aa23ec1d0c66ede3a53cdd", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0332517f900c7947f03c15fd27e7f71ace98629/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0332517f900c7947f03c15fd27e7f71ace98629/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=e0332517f900c7947f03c15fd27e7f71ace98629", "patch": "@@ -2185,6 +2185,12 @@\n #endif\n \n \n+/* Define if your target C Library properly handles PT_GNU_STACK */\n+#ifndef USED_FOR_TARGET\n+#undef TARGET_LIBC_GNUSTACK\n+#endif\n+\n+\n /* Define if your target C Library provides the AT_HWCAP value in the TCB */\n #ifndef USED_FOR_TARGET\n #undef TARGET_LIBC_PROVIDES_HWCAP_IN_TCB"}, {"sha": "e2c8fc7177274378be29bc4072af97645650895f", "filename": "gcc/configure", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0332517f900c7947f03c15fd27e7f71ace98629/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0332517f900c7947f03c15fd27e7f71ace98629/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=e0332517f900c7947f03c15fd27e7f71ace98629", "patch": "@@ -18957,7 +18957,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18960 \"configure\"\n+#line 18977 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19063,7 +19063,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19066 \"configure\"\n+#line 19083 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -29800,6 +29800,23 @@ $as_echo \"#define TARGET_LIBC_PROVIDES_HWCAP_IN_TCB 1\" >>confdefs.h\n \n fi\n \n+# Check if the target LIBC handles PT_GNU_STACK.\n+gcc_cv_libc_gnustack=unknown\n+case \"$target\" in\n+  mips*-*-linux*)\n+\n+if test $glibc_version_major -gt 2 \\\n+  || ( test $glibc_version_major -eq 2 && test $glibc_version_minor -ge 31 ); then :\n+  gcc_cv_libc_gnustack=yes\n+fi\n+    ;;\n+esac\n+if test x$gcc_cv_libc_gnustack = xyes; then\n+\n+$as_echo \"#define TARGET_LIBC_GNUSTACK 1\" >>confdefs.h\n+\n+fi\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking dl_iterate_phdr in target C library\" >&5\n $as_echo_n \"checking dl_iterate_phdr in target C library... \" >&6; }\n gcc_cv_target_dl_iterate_phdr=unknown"}]}