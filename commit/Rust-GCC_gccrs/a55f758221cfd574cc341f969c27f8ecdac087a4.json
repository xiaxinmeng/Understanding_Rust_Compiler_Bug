{"sha": "a55f758221cfd574cc341f969c27f8ecdac087a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU1Zjc1ODIyMWNmZDU3NGNjMzQxZjk2OWMyN2Y4ZWNkYWMwODdhNA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-03-25T16:10:06Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-03-25T16:10:06Z"}, "message": "PR c++/89705 - ICE with reference binding with conversion function.\n\n\t* call.c (reference_binding): If the result of the conversion function\n\tis a prvalue of non-class type, use the cv-unqualified type.\n\n\t* g++.dg/cpp0x/rv-conv2.C: New test.\n\nFrom-SVN: r269918", "tree": {"sha": "ae37d39cd2ce02bacc7f6f0124440727612d8ee4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae37d39cd2ce02bacc7f6f0124440727612d8ee4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a55f758221cfd574cc341f969c27f8ecdac087a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a55f758221cfd574cc341f969c27f8ecdac087a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a55f758221cfd574cc341f969c27f8ecdac087a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a55f758221cfd574cc341f969c27f8ecdac087a4/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8d6419db2cd99949022cd76cf6b1d0f93be0394b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d6419db2cd99949022cd76cf6b1d0f93be0394b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d6419db2cd99949022cd76cf6b1d0f93be0394b"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "b2b7b41d3347e6cbc699267d7fcd89264bf5e7b4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a55f758221cfd574cc341f969c27f8ecdac087a4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a55f758221cfd574cc341f969c27f8ecdac087a4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a55f758221cfd574cc341f969c27f8ecdac087a4", "patch": "@@ -1,3 +1,9 @@\n+2019-03-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/89705 - ICE with reference binding with conversion function.\n+\t* call.c (reference_binding): If the result of the conversion function\n+\tis a prvalue of non-class type, use the cv-unqualified type.\n+\n 2019-03-25  Nathan Sidwell  <nathan@acm.org>\n \n \t* lambda.c (maybe_add_lambda_conv_op): Don't add to comdat group."}, {"sha": "9efca735b16205cbadc9ffe840a9175ee638bc0f", "filename": "gcc/cp/call.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a55f758221cfd574cc341f969c27f8ecdac087a4/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a55f758221cfd574cc341f969c27f8ecdac087a4/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=a55f758221cfd574cc341f969c27f8ecdac087a4", "patch": "@@ -1853,6 +1853,9 @@ reference_binding (tree rto, tree rfrom, tree expr, bool c_cast_p, int flags,\n \t    && DECL_CONV_FN_P (t->cand->fn))\n \t  {\n \t    tree ftype = TREE_TYPE (TREE_TYPE (t->cand->fn));\n+\t    /* A prvalue of non-class type is cv-unqualified.  */\n+\t    if (!TYPE_REF_P (ftype) && !CLASS_TYPE_P (ftype))\n+\t      ftype = cv_unqualified (ftype);\n \t    int sflags = (flags|LOOKUP_NO_CONVERSION)&~LOOKUP_NO_TEMP_BIND;\n \t    conversion *new_second\n \t      = reference_binding (rto, ftype, NULL_TREE, c_cast_p,"}, {"sha": "01364a9d7795c1dd04e5b2993904650d77671a15", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a55f758221cfd574cc341f969c27f8ecdac087a4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a55f758221cfd574cc341f969c27f8ecdac087a4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a55f758221cfd574cc341f969c27f8ecdac087a4", "patch": "@@ -1,3 +1,8 @@\n+2019-03-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/89705 - ICE with reference binding with conversion function.\n+\t* g++.dg/cpp0x/rv-conv2.C: New test.\n+\n 2019-03-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/89789"}, {"sha": "9b9b154995b5fe3ac7fce46f854b7d3061ea1891", "filename": "gcc/testsuite/g++.dg/cpp0x/rv-conv2.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a55f758221cfd574cc341f969c27f8ecdac087a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-conv2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a55f758221cfd574cc341f969c27f8ecdac087a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-conv2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-conv2.C?ref=a55f758221cfd574cc341f969c27f8ecdac087a4", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/89705\n+// { dg-do compile { target c++11 } }\n+\n+struct W { operator const volatile int(); };\n+const int& rci = W();\n+\n+struct X { operator const int(); };\n+int&& rri = X();\n+\n+struct Y { operator volatile int(); };\n+int&& rri2 = Y();\n+\n+struct Z { operator const volatile int(); };\n+volatile int&& rri3 = Z();\n+\n+enum E { A };\n+struct S { operator const E(); };\n+E&& rre = S();"}]}