{"sha": "7bde45b2eb84502b62e77e46d947e46dcbd333d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2JkZTQ1YjJlYjg0NTAyYjYyZTc3ZTQ2ZDk0N2U0NmRjYmQzMzNkNg==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@waitaki.otago.ac.nz", "date": "2002-08-09T04:26:17Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2002-08-09T04:26:17Z"}, "message": "AWT/Swing merge from GNU Classpath.\n\nFrom-SVN: r56147", "tree": {"sha": "cdf9958b411887bead2263ea8ef0bdfc8eae6319", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdf9958b411887bead2263ea8ef0bdfc8eae6319"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7bde45b2eb84502b62e77e46d947e46dcbd333d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bde45b2eb84502b62e77e46d947e46dcbd333d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bde45b2eb84502b62e77e46d947e46dcbd333d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bde45b2eb84502b62e77e46d947e46dcbd333d6/comments", "author": null, "committer": null, "parents": [{"sha": "097684ce62b505168739fc98e952f92a8719a1fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/097684ce62b505168739fc98e952f92a8719a1fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/097684ce62b505168739fc98e952f92a8719a1fa"}], "stats": {"total": 94245, "additions": 85265, "deletions": 8980}, "files": [{"sha": "d095af27c42f4ea30bca2083d5e4f9763801473d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 398, "deletions": 0, "changes": 398, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,3 +1,401 @@\n+2002-08-09  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n+\n+\tAWT/Swing merge from GNU Classpath.\n+\n+\t* java/awt/AlphaComposite.java, java/awt/AttributeValue.java, \n+\tjava/awt/BasicStroke.java, java/awt/BufferCapabilities.java,\n+\tjava/awt/color/CMMException.java, java/awt/ColorPaintContext.java,\n+\tjava/awt/color/ProfileDataException.java, \n+\tjava/awt/CompositeContext.java,\tjava/awt/Composite.java,\n+\tjava/awt/ContainerOrderFocusTraversalPolicy.java,\n+\tjava/awt/datatransfer/FlavorTable.java,\n+\tjava/awt/DefaultFocusTraversalPolicy.java,\n+\tjava/awt/DefaultKeyboardFocusManager.java, java/awt/DisplayMode.java,\n+\tjava/awt/dnd/DnDConstants.java, java/awt/dnd/DragGestureEvent.java,\n+\tjava/awt/dnd/DragGestureListener.java, \n+\tjava/awt/dnd/DragGestureRecognizer.java,\n+\tjava/awt/dnd/DragSourceAdapter.java,\n+\tjava/awt/dnd/DragSourceContext.java,\n+\tjava/awt/dnd/DragSourceDragEvent.java,\n+\tjava/awt/dnd/DragSourceEvent.java, java/awt/dnd/DragSource.java,\n+\tjava/awt/dnd/DragSourceListener.java,\n+\tjava/awt/dnd/DragSourceMotionListener.java,\n+\tjava/awt/dnd/DropTarget.java,\n+\tjava/awt/dnd/InvalidDnDOperationException.java,\n+\tjava/awt/dnd/peer/DragSourceContextPeer.java,\n+\tjava/awt/event/AWTEventListenerProxy.java,\n+\tjava/awt/event/MouseWheelEvent.java,\n+\tjava/awt/event/MouseWheelListener.java,\n+\tjava/awt/event/WindowFocusListener.java,\n+\tjava/awt/event/WindowStateListener.java,\n+\tjava/awt/FocusTraversalPolicy.java, java/awt/FontFormatException.java,\n+\tjava/awt/font/TextHitInfo.java, java/awt/geom/Arc2D.java,\n+\tjava/awt/geom/Area.java, java/awt/geom/CubicCurve2D.java,\n+\tjava/awt/geom/FlatteningPathIterator.java,\n+\tjava/awt/geom/GeneralPath.java, java/awt/geom/QuadCurve2D.java,\n+\tjava/awt/GradientPaint.java, java/awt/GraphicsConfigTemplate.java,\n+\tjava/awt/GraphicsDevice.java, java/awt/GraphicsEnvironment.java,\n+\tjava/awt/HeadlessException.java, java/awt/image/BufferedImageOp.java,\n+\tjava/awt/image/BufferStrategy.java, java/awt/ImageCapabilities.java,\n+\tjava/awt/image/ImagingOpException.java,\n+\tjava/awt/image/RasterFormatException.java,\n+\tjava/awt/image/RenderedImage.java, java/awt/image/TileObserver.java,\n+\tjava/awt/image/VolatileImage.java,\n+\tjava/awt/image/WritableRenderedImage.java,\n+\tjava/awt/im/InputContext.java, java/awt/im/InputMethodHighlight.java\n+\tjava/awt/im/InputMethodRequests.java, java/awt/im/InputSubset.java,\n+\tjava/awt/JobAttributes.java, java/awt/KeyboardFocusManager.java,\n+\tjava/awt/KeyEventDispatcher.java, java/awt/KeyEventPostProcessor.java\n+\tjava/awt/PageAttributes.java, java/awt/print/Book.java,\n+\tjava/awt/print/Pageable.java, java/awt/print/PageFormat.java,\n+\tjava/awt/print/Paper.java, java/awt/print/Printable.java,\n+\tjava/awt/print/PrinterAbortException.java,\n+\tjava/awt/print/PrinterException.java,\n+\tjava/awt/print/PrinterGraphics.java,\n+\tjava/awt/print/PrinterIOException.java, java/awt/print/PrinterJob.java,\n+\tjava/awt/Robot.java, java/awt/ScrollPaneAdjustable.java,\n+\tjava/awt/Stroke.java, java/awt/TexturePaint.java,\n+\tjavax/accessibility/AccessibleAction.java,\n+\tjavax/accessibility/AccessibleBundle.java,\n+\tjavax/accessibility/AccessibleComponent.java,\n+\tjavax/accessibility/AccessibleContext.java,\n+\tjavax/accessibility/AccessibleEditableText.java,\n+\tjavax/accessibility/AccessibleExtendedComponent.java,\n+\tjavax/accessibility/AccessibleExtendedTable.java,\n+\tjavax/accessibility/AccessibleHyperlink.java,\n+\tjavax/accessibility/AccessibleHypertext.java,\n+\tjavax/accessibility/AccessibleIcon.java,\n+\tjavax/accessibility/Accessible.java,\n+\tjavax/accessibility/AccessibleKeyBinding.java,\n+\tjavax/accessibility/AccessibleRelation.java,\n+\tjavax/accessibility/AccessibleRelationSet.java,\n+\tjavax/accessibility/AccessibleResourceBundle.java,\n+\tjavax/accessibility/AccessibleRole.java,\n+\tjavax/accessibility/AccessibleSelection.java,\n+\tjavax/accessibility/AccessibleState.java,\n+\tjavax/accessibility/AccessibleStateSet.java,\n+\tjavax/accessibility/AccessibleTable.java,\n+\tjavax/accessibility/AccessibleTableModelChange.java,\n+\tjavax/accessibility/AccessibleText.java,\n+\tjavax/accessibility/AccessibleValue.java,\n+\tjavax/swing/AbstractAction.java,\n+\tjavax/swing/AbstractButton.java,\n+\tjavax/swing/AbstractCellEditor.java,\n+\tjavax/swing/AbstractListModel.java,\n+\tjavax/swing/AbstractSet.java, javax/swing/Action.java,\n+\tjavax/swing/ActionMap.java, javax/swing/border/AbstractBorder.java,\n+\tjavax/swing/border/BevelBorder.java, javax/swing/border/Border.java,\n+\tjavax/swing/border/CompoundBorder.java,\n+\tjavax/swing/border/EmptyBorder.java,\n+\tjavax/swing/border/EtchedBorder.java, javax/swing/BorderFactory.java,\n+\tjavax/swing/border/LineBorder.java,\n+\tjavax/swing/border/MatteBorder.java,\n+\tjavax/swing/border/TitledBorder.java,\n+\tjavax/swing/BoundedRangeModel.java, javax/swing/Box.java,\n+\tjavax/swing/BoxLayout.java, javax/swing/ButtonGroup.java,\n+\tjavax/swing/ButtonModel.java, javax/swing/CellEditor.java,\n+\tjavax/swing/CellRendererPane.java,\n+\tjavax/swing/colorchooser/AbstractColorChooserPanel.java,\n+\tjavax/swing/colorchooser/ColorChooserComponentFactory.java,\n+\tjavax/swing/colorchooser/ColorSelectionModel.java,\n+\tjavax/swing/colorchooser/DefaultColorSelectionModel.java,\n+\tjavax/swing/ComboBoxEditor.java, javax/swing/ComboBoxModel.java,\n+\tjavax/swing/ComponentInputMap.java, javax/swing/DebugGraphics.java,\n+\tjavax/swing/DefaultBoundedRangeModel.java,\n+\tjavax/swing/DefaultButtonModel.java,\n+\tjavax/swing/DefaultCellEditor.java,\n+\tjavax/swing/DefaultCellRenderer.java,\n+\tjavax/swing/DefaultComboBoxModel.java,\n+\tjavax/swing/DefaultDesktopManager.java,\n+\tjavax/swing/DefaultFocusManager.java,\n+\tjavax/swing/DefaultListCellRenderer.java,\n+\tjavax/swing/DefaultListModel.java,\n+\tjavax/swing/DefaultListSelectionModel.java,\n+\tjavax/swing/DefaultSingleSelectionModel.java,\n+\tjavax/swing/DesktopManager.java,\n+\tjavax/swing/event/AncestorEvent.java,\n+\tjavax/swing/event/AncestorListener.java,\n+\tjavax/swing/event/CaretEvent.java,\n+\tjavax/swing/event/CaretListener.java,\n+\tjavax/swing/event/CellEditorListener.java,\n+\tjavax/swing/event/ChangeEvent.java,\n+\tjavax/swing/event/ChangeListener.java,\n+\tjavax/swing/event/DocumentEvent.java,\n+\tjavax/swing/event/DocumentListener.java,\n+\tjavax/swing/event/EventListenerList.java,\n+\tjavax/swing/event/HyperlinkEvent.java,\n+\tjavax/swing/event/HyperlinkListener.java,\n+\tjavax/swing/event/InternalFrameAdapter.java,\n+\tjavax/swing/event/InternalFrameEvent.java,\n+\tjavax/swing/event/InternalFrameListener.java,\n+\tjavax/swing/event/ListDataEvent.java,\n+\tjavax/swing/event/ListDataListener.java,\n+\tjavax/swing/event/ListSelectionEvent.java,\n+\tjavax/swing/event/ListSelectionListener.java,\n+\tjavax/swing/event/MenuDragMouseEvent.java,\n+\tjavax/swing/event/MenuDragMouseListener.java,\n+\tjavax/swing/event/MenuEvent.java,\n+\tjavax/swing/event/MenuKeyEvent.java,\n+\tjavax/swing/event/MenuKeyListener.java,\n+\tjavax/swing/event/MenuListener.java,\n+\tjavax/swing/event/MouseInputAdapter.java,\n+\tjavax/swing/event/MouseInputListener.java,\n+\tjavax/swing/event/PopupMenuEvent.java,\n+\tjavax/swing/event/PopupMenuListener.java,\n+\tjavax/swing/event/SwingPropertyChangeSupport.java,\n+\tjavax/swing/event/TableColumnModelEvent.java,\n+\tjavax/swing/event/TableColumnModelListener.java,\n+\tjavax/swing/event/TableModelEvent.java,\n+\tjavax/swing/event/TableModelListener.java,\n+\tjavax/swing/event/TreeExpansionEvent.java,\n+\tjavax/swing/event/TreeExpansionListener.java,\n+\tjavax/swing/event/TreeModelEvent.java,\n+\tjavax/swing/event/TreeModelListener.java,\n+\tjavax/swing/event/TreeSelectionEvent.java,\n+\tjavax/swing/event/TreeSelectionListener.java,\n+\tjavax/swing/event/TreeWillExpandListener.java,\n+\tjavax/swing/event/UndoableEditEvent.java,\n+\tjavax/swing/event/UndoableEditListener.java,\n+\tjavax/swing/filechooser/FileFilter.java,\n+\tjavax/swing/filechooser/FileSystemView.java,\n+\tjavax/swing/filechooser/FileView.java,\n+\tjavax/swing/FocusManager.java, javax/swing/GrayFilter.java,\n+\tjavax/swing/Icon.java, javax/swing/ImageIcon.java,\n+\tjavax/swing/InputMap.java, javax/swing/InputVerifier.java,\n+\tjavax/swing/JApplet.java, javax/swing/JButton.java,\n+\tjavax/swing/JCheckBox.java, javax/swing/JCheckBoxMenuItem.java,\n+\tjavax/swing/JColorChooser.java, javax/swing/JComboBox.java,\n+\tjavax/swing/JComponent.java, javax/swing/JDesktopPane.java,\n+\tjavax/swing/JDialog.java, javax/swing/JEditorPane.java,\n+\tjavax/swing/JFileChooser.java, javax/swing/JFrame.java,\n+\tjavax/swing/JInternalFrame.java, javax/swing/JLabel.java,\n+\tjavax/swing/JLayeredPane.java, javax/swing/JList.java,\n+\tjavax/swing/JMenuBar.java, javax/swing/JMenuItem.java,\n+\tjavax/swing/JMenu.java,\tjavax/swing/JOptionPane.java,\n+\tjavax/swing/JPanel.java, javax/swing/JPasswordField.java,\n+\tjavax/swing/JPopupMenu.java, javax/swing/JProgressBar.java,\n+\tjavax/swing/JRadioButton.java, javax/swing/JRadioButtonMenuItem.java,\n+\tjavax/swing/JRootPane.java, javax/swing/JScrollBar.java,\n+\tjavax/swing/JScrollPane.java, javax/swing/JSeparator.java,\n+\tjavax/swing/JSlider.java, javax/swing/JSplitPane.java,\n+\tjavax/swing/JTabbedPane.java, javax/swing/JTable.java,\n+\tjavax/swing/JTextField.java, javax/swing/JTextPane.java,\n+\tjavax/swing/JToggleButton.java, javax/swing/JToolBar.java,\n+\tjavax/swing/JToolTip.java, javax/swing/JTree.java,\n+\tjavax/swing/JViewport.java, javax/swing/JWindow.java,\n+\tjavax/swing/KeyStroke.java, javax/swing/ListCellRenderer.java,\n+\tjavax/swing/ListModel.java, javax/swing/ListSelectionModel.java,\n+\tjavax/swing/LookAndFeel.java, javax/swing/MenuElement.java,\n+\tjavax/swing/MenuSelectionManager.java,\n+\tjavax/swing/MutableComboBoxModel.java,\n+\tjavax/swing/OverlayLayout.java,\n+\tjavax/swing/plaf/ActionMapUIResource.java,\n+\tjavax/swing/plaf/basic/BasicBorders.java,\n+\tjavax/swing/plaf/basic/BasicButtonUI.java,\n+\tjavax/swing/plaf/basic/BasicCheckBoxUI.java,\n+\tjavax/swing/plaf/basic/BasicDefaults.java,\n+\tjavax/swing/plaf/basic/BasicGraphicsUtils.java,\n+\tjavax/swing/plaf/basic/BasicIconFactory.java,\n+\tjavax/swing/plaf/basic/BasicLabelUI.java,\n+\tjavax/swing/plaf/basic/BasicListUI.java,\n+\tjavax/swing/plaf/basic/BasicLookAndFeel.java,\n+\tjavax/swing/plaf/basic/BasicOptionPaneUI.java,\n+\tjavax/swing/plaf/basic/BasicPanelUI.java,\n+\tjavax/swing/plaf/basic/BasicRadioButtonUI.java,\n+\tjavax/swing/plaf/basic/BasicScrollPaneUI.java,\n+\tjavax/swing/plaf/basic/BasicTabbedPaneUI.java,\n+\tjavax/swing/plaf/basic/BasicTextUI.java,\n+\tjavax/swing/plaf/basic/BasicToggleButtonUI.java,\n+\tjavax/swing/plaf/basic/BasicTreeUI.java,\n+\tjavax/swing/plaf/basic/BasicViewportUI.java,\n+\tjavax/swing/plaf/BorderUIResource.java,\n+\tjavax/swing/plaf/ButtonUI.java,\n+\tjavax/swing/plaf/ColorChooserUI.java,\n+\tjavax/swing/plaf/ColorUIResource.java,\n+\tjavax/swing/plaf/ComboBoxUI.java,\n+\tjavax/swing/plaf/ComponentInputMapUIResource.java,\n+\tjavax/swing/plaf/ComponentUI.java,\n+\tjavax/swing/plaf/DesktopIconUI.java,\n+\tjavax/swing/plaf/DesktopPaneUI.java,\n+\tjavax/swing/plaf/DimensionUIResource.java,\n+\tjavax/swing/plaf/FileChooserUI.java,\n+\tjavax/swing/plaf/FontUIResource.java,\n+\tjavax/swing/plaf/IconUIResource.java,\n+\tjavax/swing/plaf/InputMapUIResource.java,\n+\tjavax/swing/plaf/InsetsUIResource.java,\n+\tjavax/swing/plaf/InternalFrameUI.java,\n+\tjavax/swing/plaf/LabelUI.java,\n+\tjavax/swing/plaf/ListUI.java,\n+\tjavax/swing/plaf/MenuBarUI.java,\n+\tjavax/swing/plaf/MenuItemUI.java,\n+\tjavax/swing/plaf/OptionPaneUI.java,\n+\tjavax/swing/plaf/PanelUI.java,\n+\tjavax/swing/plaf/PopupMenuUI.java,\n+\tjavax/swing/plaf/ProgressBarUI.java,\n+\tjavax/swing/plaf/RootPaneUI.java,\n+\tjavax/swing/plaf/ScrollBarUI.java,\n+\tjavax/swing/plaf/ScrollPaneUI.java,\n+\tjavax/swing/plaf/SeparatorUI.java,\n+\tjavax/swing/plaf/SliderUI.java,\n+\tjavax/swing/plaf/SplitPaneUI.java,\n+\tjavax/swing/plaf/TabbedPaneUI.java,\n+\tjavax/swing/plaf/TableHeaderUI.java,\n+\tjavax/swing/plaf/TableUI.java,\n+\tjavax/swing/plaf/TextUI.java,\n+\tjavax/swing/plaf/ToolBarUI.java,\n+\tjavax/swing/plaf/ToolTipUI.java,\n+\tjavax/swing/plaf/TreeUI.java,\n+\tjavax/swing/plaf/UIResource.java,\n+\tjavax/swing/plaf/ViewportUI.java,\n+\tjavax/swing/ProgressMonitorInputStream.java,\n+\tjavax/swing/ProgressMonitor.java,\n+\tjavax/swing/Renderer.java,\n+\tjavax/swing/RepaintManager.java,\n+\tjavax/swing/RootPaneContainer.java,\n+\tjavax/swing/Scrollable.java,\n+\tjavax/swing/ScrollPaneConstants.java,\n+\tjavax/swing/ScrollPaneLayout.java,\n+\tjavax/swing/SingleSelectionModel.java,\n+\tjavax/swing/SizeRequirements.java,\n+\tjavax/swing/SizeSequence.java,\n+\tjavax/swing/SwingConstants.java,\n+\tjavax/swing/SwingUtilities.java,\n+\tjavax/swing/table/AbstractTableModel.java,\n+\tjavax/swing/table/DefaultTableCellRenderer.java,\n+\tjavax/swing/table/DefaultTableColumnModel.java,\n+\tjavax/swing/table/DefaultTableModel.java,\n+\tjavax/swing/table/TableCellEditor.java,\n+\tjavax/swing/table/TableCellRenderer.java,\n+\tjavax/swing/table/TableColumn.java,\n+\tjavax/swing/table/TableColumnModel.java,\n+\tjavax/swing/table/TableModel.java,\n+\tjavax/swing/text/AbstractDocument.java,\n+\tjavax/swing/text/AttributeSet.java,\n+\tjavax/swing/text/BadLocationException.java,\n+\tjavax/swing/text/Caret.java,\n+\tjavax/swing/text/CharacterIterator.java,\n+\tjavax/swing/text/ComponentView.java,\n+\tjavax/swing/text/DefaultCaret.java,\n+\tjavax/swing/text/DefaultEditorKit.java,\n+\tjavax/swing/text/Document.java,\n+\tjavax/swing/text/EditorKit.java,\n+\tjavax/swing/text/Element.java,\n+\tjavax/swing/text/GapContent.java,\n+\tjavax/swing/text/JTextComponent.java,\n+\tjavax/swing/text/Keymap.java,\n+\tjavax/swing/text/MutableAttributeSet.java,\n+\tjavax/swing/text/PlainDocument.java,\n+\tjavax/swing/text/PlainEditorKit.java,\n+\tjavax/swing/text/Position.java,\n+\tjavax/swing/text/Segment.java,\n+\tjavax/swing/text/StyledDocument.java,\n+\tjavax/swing/text/StyledEditorKit.java,\n+\tjavax/swing/text/Style.java,\n+\tjavax/swing/text/TextAction.java,\n+\tjavax/swing/text/ViewFactory.java,\n+\tjavax/swing/text/View.java,\n+\tjavax/swing/Timer.java,\n+\tjavax/swing/ToggleButtonModel.java,\n+\tjavax/swing/ToolTipManager.java,\n+\tjavax/swing/tree/AbstractLayoutCache.java,\n+\tjavax/swing/tree/DefaultMutableTreeNode.java,\n+\tjavax/swing/tree/DefaultTreeCellEditor.java,\n+\tjavax/swing/tree/DefaultTreeCellRenderer.java,\n+\tjavax/swing/tree/DefaultTreeModel.java,\n+\tjavax/swing/tree/DefaultTreeSelectionModel.java,\n+\tjavax/swing/tree/ExpandVetoException.java,\n+\tjavax/swing/tree/FixedHeightLayoutCache.java,\n+\tjavax/swing/tree/MutableTreeNode.java,\n+\tjavax/swing/tree/RowMapper.java,\n+\tjavax/swing/tree/TreeCellEditor.java,\n+\tjavax/swing/tree/TreeCellRenderer.java,\n+\tjavax/swing/tree/TreeModel.java,\n+\tjavax/swing/tree/TreeNode.java,\n+\tjavax/swing/tree/TreePath.java,\n+\tjavax/swing/tree/TreeSelectionModel.java,\n+\tjavax/swing/tree/VariableHeightLayoutCache.java,\n+\tjavax/swing/UIDefaults.java,\n+\tjavax/swing/UIManager.java,\n+\tjavax/swing/undo/AbstractUndoableEdit.java,\n+\tjavax/swing/undo/CannotRedoException.java,\n+\tjavax/swing/undo/CannotUndoException.java,\n+\tjavax/swing/undo/CompoundEdit.java,\n+\tjavax/swing/undo/StateEditable.java,\n+\tjavax/swing/undo/StateEdit.java,\n+\tjavax/swing/undo/UndoableEdit.java,\n+\tjavax/swing/undo/UndoableEditSupport.java,\n+\tjavax/swing/undo/UndoManager.java,\n+\tjavax/swing/UnsupportedLookAndFeelException.java,\n+\tjavax/swing/ViewportLayout.java,\n+\tjavax/swing/WindowConstants.java: New files, from GNU Classpath.\n+\t\n+\t* gnu/awt/xlib/XGraphicsConfiguration.java,\n+\tgnu/awt/xlib/XToolkit.java, java/awt/ActiveEvent.java,\n+\tjava/awt/Adjustable.java, java/awt/AWTError.java,\n+\tjava/awt/AWTEvent.java,\tjava/awt/AWTEventMulticaster.java,\n+\tjava/awt/AWTException.java, java/awt/AWTPermission.java,\n+\tjava/awt/BorderLayout.java, java/awt/Button.java, java/awt/Choice.java,\n+\tjava/awt/Color.java, java/awt/Component.java,\n+\tjava/awt/ComponentOrientation.java, java/awt/Container.java,\n+\tjava/awt/datatransfer/MimeTypeParseException.java,\n+\tjava/awt/datatransfer/Transferable.java,\n+\tjava/awt/datatransfer/UnsupportedFlavorException.java,\n+\tjava/awt/Dimension.java, java/awt/event/ActionEvent.java,\n+\tjava/awt/event/ActionListener.java,\n+\tjava/awt/event/AdjustmentEvent.java,\n+\tjava/awt/event/AdjustmentListener.java,\n+\tjava/awt/event/AWTEventListener.java,\n+\tjava/awt/event/ComponentAdapter.java,\n+\tjava/awt/event/ComponentEvent.java,\n+\tjava/awt/event/ComponentListener.java,\n+\tjava/awt/event/ContainerAdapter.java,\n+\tjava/awt/event/ContainerEvent.java,\n+\tjava/awt/event/ContainerListener.java,\n+\tjava/awt/event/FocusAdapter.java,\n+\tjava/awt/event/FocusEvent.java, java/awt/event/FocusListener.java,\n+\tjava/awt/event/HierarchyBoundsAdapter.java,\n+\tjava/awt/event/HierarchyBoundsListener.java,\n+\tjava/awt/event/HierarchyEvent.java,\n+\tjava/awt/event/HierarchyListener.java,\n+\tjava/awt/event/InputEvent.java, java/awt/event/InputMethodEvent.java,\n+\tjava/awt/event/InputMethodListener.java,\n+\tjava/awt/event/InvocationEvent.java, java/awt/event/ItemEvent.java,\n+\tjava/awt/event/ItemListener.java, java/awt/event/KeyAdapter.java,\n+\tjava/awt/event/KeyEvent.java, java/awt/event/KeyListener.java,\n+\tjava/awt/event/MouseAdapter.java, java/awt/event/MouseEvent.java,\n+\tjava/awt/event/MouseListener.java,\n+\tjava/awt/event/MouseMotionAdapter.java,\n+\tjava/awt/event/MouseMotionListener.java,\n+\tjava/awt/event/PaintEvent.java, java/awt/EventQueue.java,\n+\tjava/awt/event/TextEvent.java, java/awt/event/TextListener.java,\n+\tjava/awt/event/WindowAdapter.java, java/awt/event/WindowEvent.java,\n+\tjava/awt/event/WindowListener.java, java/awt/Font.java,\n+\tjava/awt/geom/AffineTransform.java, java/awt/geom/Dimension2D.java,\n+\tjava/awt/geom/Ellipse2D.java,\n+\tjava/awt/geom/IllegalPathStateException.java,\n+\tjava/awt/geom/Line2D.java,\n+\tjava/awt/geom/NoninvertibleTransformException.java,\n+\tjava/awt/geom/PathIterator.java, java/awt/geom/Point2D.java,\n+\tjava/awt/geom/Rectangle2D.java, java/awt/geom/RectangularShape.java,\n+\tjava/awt/geom/RoundRectangle2D.java,\n+\tjava/awt/GraphicsConfiguration.java,\n+\tjava/awt/IllegalComponentStateException.java,\n+\tjava/awt/image/IndexColorModel.java,\n+\tjava/awt/Image.java, java/awt/image/MemoryImageSource.java,\n+\tjava/awt/image/PixelGrabber.java, java/awt/Insets.java,\n+\tjava/awt/ItemSelectable.java, java/awt/LayoutManager2.java,\n+\tjava/awt/LayoutManager.java, java/awt/MenuContainer.java,\n+\tjava/awt/MenuItem.java,\tjava/awt/PaintContext.java,\n+\tjava/awt/Paint.java, java/awt/Panel.java, java/awt/Point.java,\n+\tjava/awt/Polygon.java, java/awt/PrintGraphics.java,\n+\tjava/awt/PrintJob.java, java/awt/Rectangle.java, \n+\tjava/awt/RenderingHints.java, java/awt/ScrollPane.java,\n+\tjava/awt/Shape.java, java/awt/SystemColor.java, java/awt/Toolkit.java,\n+\tjava/awt/Transparency.java, java/awt/Window.java: Merge from classpath.\n+\n+\t* Makefile.am: Add new files.\n+\t* Makefile.in: Rebuilt.\n+\n 2002-08-07  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n \n \t* java/lang/ClassLoader.java (getSystemClassLoader, findClass,"}, {"sha": "b954a531103f0f8cbee576d9d90b4ede009c0aec", "filename": "libjava/Makefile.am", "status": "modified", "additions": 443, "deletions": 40, "changes": 483, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -573,6 +573,9 @@ gnu/java/awt/BitMaskExtent.java \\\n gnu/java/awt/Buffers.java \\\n gnu/java/awt/ComponentDataBlitOp.java \\\n gnu/java/awt/GLightweightPeer.java \\\n+gnu/java/awt/EventModifier.java \\\n+gnu/java/awt/image/ImageDecoder.java \\\n+gnu/java/awt/image/XBMDecoder.java \\\n gnu/java/beans/editors/ColorEditor.java\t\\\n gnu/java/beans/editors/FontEditor.java \\\n gnu/java/beans/editors/NativeBooleanEditor.java\t\\\n@@ -608,12 +611,12 @@ java/awt/CheckboxGroup.java \\\n java/awt/CheckboxMenuItem.java \\\n java/awt/Choice.java \\\n java/awt/Color.java \\\n-java/awt/Component.java\t\\\n+java/awt/Component.java \\\n java/awt/ComponentOrientation.java \\\n-java/awt/Container.java\t\\\n+java/awt/Container.java \\\n java/awt/Cursor.java \\\n java/awt/Dialog.java \\\n-java/awt/Dimension.java\t\\\n+java/awt/Dimension.java \\\n java/awt/Event.java \\\n java/awt/EventDispatchThread.java \\\n java/awt/EventQueue.java \\\n@@ -635,7 +638,6 @@ java/awt/Label.java \\\n java/awt/LayoutManager.java \\\n java/awt/LayoutManager2.java \\\n java/awt/List.java \\\n-java/awt/MediaTracker.java \\\n java/awt/Menu.java \\\n java/awt/MenuBar.java \\\n java/awt/MenuComponent.java \\\n@@ -646,36 +648,35 @@ java/awt/Paint.java \\\n java/awt/PaintContext.java \\\n java/awt/Panel.java \\\n java/awt/Point.java \\\n-java/awt/Polygon.java \\\n-java/awt/PopupMenu.java\t\\\n-java/awt/PrintGraphics.java \\\n-java/awt/PrintJob.java \\\n-java/awt/Rectangle.java\t\\\n+java/awt/PopupMenu.java \\\n+java/awt/Rectangle.java \\\n java/awt/RenderingHints.java \\\n java/awt/ScrollPane.java \\\n-java/awt/Scrollbar.java\t\\\n+java/awt/Scrollbar.java \\\n java/awt/Shape.java \\\n-java/awt/SystemColor.java \\\n java/awt/TextArea.java \\\n java/awt/TextComponent.java \\\n-java/awt/TextField.java\t\\\n+java/awt/TextField.java \\\n java/awt/Toolkit.java \\\n java/awt/Transparency.java \\\n java/awt/Window.java \\\n java/awt/color/ColorSpace.java \\\n java/awt/color/ICC_ColorSpace.java \\\n-java/awt/color/ICC_Profile.java\t\\\n+java/awt/color/ICC_Profile.java \\\n+java/awt/color/CMMException.java \\\n+java/awt/color/ProfileDataException.java \\\n java/awt/datatransfer/Clipboard.java \\\n java/awt/datatransfer/ClipboardOwner.java \\\n java/awt/datatransfer/DataFlavor.java \\\n java/awt/datatransfer/FlavorMap.java \\\n java/awt/datatransfer/MimeTypeParseException.java \\\n java/awt/datatransfer/StringSelection.java \\\n java/awt/datatransfer/SystemFlavorMap.java \\\n-java/awt/datatransfer/Transferable.java\t\\\n+java/awt/datatransfer/Transferable.java \\\n java/awt/datatransfer/UnsupportedFlavorException.java \\\n+java/awt/datatransfer/FlavorTable.java \\\n java/awt/event/AWTEventListener.java \\\n-java/awt/event/ActionEvent.java\t\\\n+java/awt/event/ActionEvent.java \\\n java/awt/event/ActionListener.java \\\n java/awt/event/AdjustmentEvent.java \\\n java/awt/event/AdjustmentListener.java \\\n@@ -694,66 +695,92 @@ java/awt/event/HierarchyEvent.java \\\n java/awt/event/HierarchyListener.java \\\n java/awt/event/InputEvent.java \\\n java/awt/event/InputMethodEvent.java \\\n-java/awt/event/InputMethodListener.java\t\\\n+java/awt/event/InputMethodListener.java \\\n java/awt/event/InvocationEvent.java \\\n java/awt/event/ItemEvent.java \\\n java/awt/event/ItemListener.java \\\n java/awt/event/KeyAdapter.java \\\n java/awt/event/KeyEvent.java \\\n-java/awt/event/KeyListener.java\t\\\n+java/awt/event/KeyListener.java \\\n java/awt/event/MouseAdapter.java \\\n java/awt/event/MouseEvent.java \\\n java/awt/event/MouseListener.java \\\n java/awt/event/MouseMotionAdapter.java \\\n-java/awt/event/MouseMotionListener.java\t\\\n+java/awt/event/MouseMotionListener.java \\\n java/awt/event/PaintEvent.java \\\n java/awt/event/TextEvent.java \\\n java/awt/event/TextListener.java \\\n java/awt/event/WindowAdapter.java \\\n-java/awt/event/WindowEvent.java\t\\\n+java/awt/event/WindowEvent.java \\\n java/awt/event/WindowListener.java \\\n+java/awt/event/AWTEventListenerProxy.java \\\n+java/awt/event/MouseWheelEvent.java \\\n+java/awt/event/MouseWheelListener.java \\\n+java/awt/event/WindowFocusListener.java \\\n+java/awt/event/WindowStateListener.java \\\n java/awt/geom/AffineTransform.java \\\n java/awt/geom/Dimension2D.java \\\n java/awt/geom/Ellipse2D.java \\\n java/awt/geom/IllegalPathStateException.java \\\n-java/awt/geom/Line2D.java \\\n java/awt/geom/NoninvertibleTransformException.java \\\n-java/awt/geom/PathIterator.java\t\\\n+java/awt/geom/PathIterator.java \\\n java/awt/geom/Point2D.java \\\n java/awt/geom/Rectangle2D.java \\\n java/awt/geom/RectangularShape.java \\\n java/awt/geom/RoundRectangle2D.java \\\n-java/awt/image/AreaAveragingScaleFilter.java \\\n+java/awt/geom/Line2D.java \\\n+java/awt/geom/Arc2D.java \\\n+java/awt/geom/Area.java \\\n+java/awt/geom/CubicCurve2D.java \\\n+java/awt/geom/FlatteningPathIterator.java \\\n+java/awt/geom/GeneralPath.java \\\n+java/awt/geom/QuadCurve2D.java \\\n java/awt/image/BufferedImage.java \\\n java/awt/image/ColorModel.java \\\n-java/awt/image/ComponentColorModel.java\t\\\n+java/awt/image/ComponentColorModel.java \\\n java/awt/image/ComponentSampleModel.java \\\n-java/awt/image/CropImageFilter.java \\\n java/awt/image/DataBuffer.java \\\n java/awt/image/DataBufferByte.java \\\n java/awt/image/DataBufferInt.java \\\n java/awt/image/DataBufferUShort.java \\\n java/awt/image/DirectColorModel.java \\\n-java/awt/image/FilteredImageSource.java\t\\\n java/awt/image/ImageConsumer.java \\\n-java/awt/image/ImageFilter.java\t\\\n java/awt/image/ImageObserver.java \\\n java/awt/image/ImageProducer.java \\\n java/awt/image/IndexColorModel.java \\\n-java/awt/image/MemoryImageSource.java \\\n java/awt/image/PackedColorModel.java \\\n-java/awt/image/PixelGrabber.java \\\n-java/awt/image/RGBImageFilter.java \\\n java/awt/image/Raster.java \\\n java/awt/image/RasterOp.java \\\n-java/awt/image/ReplicateScaleFilter.java \\\n-java/awt/image/SampleModel.java\t\\\n+java/awt/image/SampleModel.java \\\n java/awt/image/SinglePixelPackedSampleModel.java \\\n java/awt/image/WritableRaster.java \\\n+java/awt/image/AreaAveragingScaleFilter.java \\\n+java/awt/image/CropImageFilter.java \\\n+java/awt/image/FilteredImageSource.java \\\n+java/awt/image/ImageFilter.java \\\n+java/awt/image/MemoryImageSource.java \\\n+java/awt/image/PixelGrabber.java \\\n+java/awt/image/RGBImageFilter.java \\\n+java/awt/image/ReplicateScaleFilter.java \\\n+java/awt/image/BufferStrategy.java \\\n+java/awt/image/BufferedImageOp.java \\\n+java/awt/image/ImagingOpException.java \\\n+java/awt/image/RasterFormatException.java \\\n+java/awt/image/RenderedImage.java \\\n+java/awt/image/TileObserver.java \\\n+java/awt/image/VolatileImage.java \\\n+java/awt/image/WritableRenderedImage.java \\\n+java/awt/image/renderable/ContextualRenderedImageFactory.java \\\n+java/awt/image/renderable/ParameterBlock.java \\\n+java/awt/image/renderable/RenderContext.java \\\n+java/awt/image/renderable/RenderableImage.java \\\n+java/awt/image/renderable/RenderableImageOp.java \\\n+java/awt/image/renderable/RenderableImageProducer.java \\\n+java/awt/image/renderable/RenderedImageFactory.java \\\n java/awt/peer/ButtonPeer.java \\\n java/awt/peer/CanvasPeer.java \\\n-java/awt/peer/CheckboxMenuItemPeer.java\t\\\n-java/awt/peer/CheckboxPeer.java\t\\\n+java/awt/peer/CheckboxMenuItemPeer.java \\\n+java/awt/peer/CheckboxPeer.java \\\n java/awt/peer/ChoicePeer.java \\\n java/awt/peer/ComponentPeer.java \\\n java/awt/peer/ContainerPeer.java \\\n@@ -766,17 +793,83 @@ java/awt/peer/LightweightPeer.java \\\n java/awt/peer/ListPeer.java \\\n java/awt/peer/MenuBarPeer.java \\\n java/awt/peer/MenuComponentPeer.java \\\n-java/awt/peer/MenuItemPeer.java\t\\\n+java/awt/peer/MenuItemPeer.java \\\n java/awt/peer/MenuPeer.java \\\n java/awt/peer/PanelPeer.java \\\n java/awt/peer/PopupMenuPeer.java \\\n java/awt/peer/ScrollPanePeer.java \\\n java/awt/peer/ScrollbarPeer.java \\\n-java/awt/peer/TextAreaPeer.java\t\\\n+java/awt/peer/TextAreaPeer.java \\\n java/awt/peer/TextComponentPeer.java \\\n java/awt/peer/TextFieldPeer.java \\\n java/awt/peer/WindowPeer.java \\\n-java/beans/beancontext/BeanContext.java\t\\\n+java/awt/SystemColor.java \\\n+java/awt/Polygon.java \\\n+java/awt/MediaTracker.java \\\n+java/awt/PrintGraphics.java \\\n+java/awt/PrintJob.java \\\n+java/awt/AWTKeyStroke.java \\\n+java/awt/AlphaComposite.java \\\n+java/awt/AttributeValue.java \\\n+java/awt/BasicStroke.java \\\n+java/awt/BufferCapabilities.java \\\n+java/awt/ColorPaintContext.java \\\n+java/awt/Composite.java \\\n+java/awt/CompositeContext.java \\\n+java/awt/ContainerOrderFocusTraversalPolicy.java \\\n+java/awt/DefaultFocusTraversalPolicy.java \\\n+java/awt/DefaultKeyboardFocusManager.java \\\n+java/awt/DisplayMode.java \\\n+java/awt/FocusTraversalPolicy.java \\\n+java/awt/FontFormatException.java \\\n+java/awt/GradientPaint.java \\\n+java/awt/GraphicsConfigTemplate.java \\\n+java/awt/GraphicsDevice.java \\\n+java/awt/GraphicsEnvironment.java \\\n+java/awt/HeadlessException.java \\\n+java/awt/ImageCapabilities.java \\\n+java/awt/JobAttributes.java \\\n+java/awt/KeyEventDispatcher.java \\\n+java/awt/KeyEventPostProcessor.java \\\n+java/awt/KeyboardFocusManager.java \\\n+java/awt/PageAttributes.java \\\n+java/awt/Robot.java \\\n+java/awt/ScrollPaneAdjustable.java \\\n+java/awt/Stroke.java \\\n+java/awt/TexturePaint.java \\\n+java/awt/dnd/DnDConstants.java \\\n+java/awt/dnd/DragGestureEvent.java \\\n+java/awt/dnd/DragGestureListener.java \\\n+java/awt/dnd/DragGestureRecognizer.java \\\n+java/awt/dnd/DragSource.java \\\n+java/awt/dnd/DragSourceAdapter.java \\\n+java/awt/dnd/DragSourceContext.java \\\n+java/awt/dnd/DragSourceDragEvent.java \\\n+java/awt/dnd/DragSourceEvent.java \\\n+java/awt/dnd/DragSourceListener.java \\\n+java/awt/dnd/DragSourceMotionListener.java \\\n+java/awt/dnd/DropTarget.java \\\n+java/awt/dnd/InvalidDnDOperationException.java \\\n+java/awt/dnd/peer/DragSourceContextPeer.java \\\n+java/awt/font/TextHitInfo.java \\\n+java/awt/im/spi/InputMethod.java \\\n+java/awt/im/spi/InputMethodContext.java \\\n+java/awt/im/spi/InputMethodDescriptor.java \\\n+java/awt/im/InputContext.java \\\n+java/awt/im/InputMethodHighlight.java \\\n+java/awt/im/InputMethodRequests.java \\\n+java/awt/im/InputSubset.java \\\n+java/awt/print/Book.java \\\n+java/awt/print/PageFormat.java \\\n+java/awt/print/Pageable.java \\\n+java/awt/print/Paper.java \\\n+java/awt/print/Printable.java \\\n+java/awt/print/PrinterAbortException.java \\\n+java/awt/print/PrinterException.java \\\n+java/awt/print/PrinterGraphics.java \\\n+java/awt/print/PrinterIOException.java \\\n+java/awt/print/PrinterJob.java \\\n+java/beans/beancontext/BeanContext.java \\\n java/beans/beancontext/BeanContextChild.java \\\n java/beans/beancontext/BeanContextChildComponentProxy.java \\\n java/beans/beancontext/BeanContextChildSupport.java \\\n@@ -790,9 +883,8 @@ java/beans/beancontext/BeanContextServiceProvider.java \\\n java/beans/beancontext/BeanContextServiceProviderBeanInfo.java \\\n java/beans/beancontext/BeanContextServiceRevokedEvent.java \\\n java/beans/beancontext/BeanContextServiceRevokedListener.java \\\n-java/beans/beancontext/BeanContextServices.java\t\\\n-java/beans/beancontext/BeanContextServicesListener.java\t\\\n-java/beans/AppletInitializer.java \\\n+java/beans/beancontext/BeanContextServices.java \\\n+java/beans/beancontext/BeanContextServicesListener.java \\\n java/beans/BeanDescriptor.java \\\n java/beans/BeanInfo.java \\\n java/beans/Beans.java \\\n@@ -819,7 +911,295 @@ java/beans/SimpleBeanInfo.java \\\n java/beans/VetoableChangeListener.java \\\n java/beans/VetoableChangeListenerProxy.java \\\n java/beans/VetoableChangeSupport.java \\\n-java/beans/Visibility.java\n+java/beans/Visibility.java \\\n+java/beans/AppletInitializer.java \\\n+javax/swing/border/AbstractBorder.java \\\n+javax/swing/border/Border.java \\\n+javax/swing/border/CompoundBorder.java \\\n+javax/swing/border/EmptyBorder.java \\\n+javax/swing/border/MatteBorder.java \\\n+javax/swing/border/TitledBorder.java \\\n+javax/swing/border/BevelBorder.java \\\n+javax/swing/border/EtchedBorder.java \\\n+javax/swing/border/LineBorder.java \\\n+javax/swing/GrayFilter.java \\\n+javax/swing/AbstractAction.java \\\n+javax/swing/AbstractButton.java \\\n+javax/swing/plaf/basic/BasicButtonUI.java \\\n+javax/swing/plaf/basic/BasicCheckBoxUI.java \\\n+javax/swing/plaf/basic/BasicDefaults.java \\\n+javax/swing/plaf/basic/BasicGraphicsUtils.java \\\n+javax/swing/plaf/basic/BasicLabelUI.java \\\n+javax/swing/plaf/basic/BasicListUI.java \\\n+javax/swing/plaf/basic/BasicOptionPaneUI.java \\\n+javax/swing/plaf/basic/BasicPanelUI.java \\\n+javax/swing/plaf/basic/BasicRadioButtonUI.java \\\n+javax/swing/plaf/basic/BasicScrollPaneUI.java \\\n+javax/swing/plaf/basic/BasicTabbedPaneUI.java \\\n+javax/swing/plaf/basic/BasicTextUI.java \\\n+javax/swing/plaf/basic/BasicToggleButtonUI.java \\\n+javax/swing/plaf/basic/BasicTreeUI.java \\\n+javax/swing/plaf/basic/BasicViewportUI.java \\\n+javax/swing/plaf/basic/BasicLookAndFeel.java \\\n+javax/swing/plaf/basic/BasicBorders.java \\\n+javax/swing/plaf/basic/BasicIconFactory.java \\\n+javax/swing/plaf/BorderUIResource.java \\\n+javax/swing/plaf/UIResource.java \\\n+javax/swing/plaf/ButtonUI.java \\\n+javax/swing/plaf/ComponentUI.java \\\n+javax/swing/plaf/LabelUI.java \\\n+javax/swing/plaf/ListUI.java \\\n+javax/swing/plaf/OptionPaneUI.java \\\n+javax/swing/plaf/PanelUI.java \\\n+javax/swing/plaf/ScrollPaneUI.java \\\n+javax/swing/plaf/TabbedPaneUI.java \\\n+javax/swing/plaf/TextUI.java \\\n+javax/swing/plaf/TreeUI.java \\\n+javax/swing/plaf/ViewportUI.java \\\n+javax/swing/plaf/metal/MetalLookAndFeel.java \\\n+javax/swing/plaf/ColorUIResource.java \\\n+javax/swing/plaf/DimensionUIResource.java \\\n+javax/swing/plaf/FontUIResource.java \\\n+javax/swing/plaf/IconUIResource.java \\\n+javax/swing/plaf/InsetsUIResource.java \\\n+javax/swing/plaf/ActionMapUIResource.java \\\n+javax/swing/plaf/ColorChooserUI.java \\\n+javax/swing/plaf/ComboBoxUI.java \\\n+javax/swing/plaf/ComponentInputMapUIResource.java \\\n+javax/swing/plaf/DesktopIconUI.java \\\n+javax/swing/plaf/DesktopPaneUI.java \\\n+javax/swing/plaf/FileChooserUI.java \\\n+javax/swing/plaf/InputMapUIResource.java \\\n+javax/swing/plaf/InternalFrameUI.java \\\n+javax/swing/plaf/MenuBarUI.java \\\n+javax/swing/plaf/MenuItemUI.java \\\n+javax/swing/plaf/PopupMenuUI.java \\\n+javax/swing/plaf/ProgressBarUI.java \\\n+javax/swing/plaf/RootPaneUI.java \\\n+javax/swing/plaf/ScrollBarUI.java \\\n+javax/swing/plaf/SeparatorUI.java \\\n+javax/swing/plaf/SliderUI.java \\\n+javax/swing/plaf/SplitPaneUI.java \\\n+javax/swing/plaf/TableHeaderUI.java \\\n+javax/swing/plaf/TableUI.java \\\n+javax/swing/plaf/ToolBarUI.java \\\n+javax/swing/plaf/ToolTipUI.java \\\n+javax/swing/AbstractListModel.java \\\n+javax/swing/AbstractSet.java \\\n+javax/swing/colorchooser/AbstractColorChooserPanel.java \\\n+javax/swing/colorchooser/ColorChooserComponentFactory.java \\\n+javax/swing/colorchooser/ColorSelectionModel.java \\\n+javax/swing/colorchooser/DefaultColorSelectionModel.java \\\n+javax/swing/filechooser/FileFilter.java \\\n+javax/swing/filechooser/FileSystemView.java \\\n+javax/swing/filechooser/FileView.java \\\n+javax/swing/table/AbstractTableModel.java \\\n+javax/swing/table/DefaultTableColumnModel.java \\\n+javax/swing/table/DefaultTableModel.java \\\n+javax/swing/table/TableCellEditor.java \\\n+javax/swing/table/TableCellRenderer.java \\\n+javax/swing/table/TableColumn.java \\\n+javax/swing/table/TableColumnModel.java \\\n+javax/swing/table/TableModel.java \\\n+javax/swing/table/DefaultTableCellRenderer.java \\\n+javax/swing/Action.java \\\n+javax/swing/BorderFactory.java \\\n+javax/swing/Box.java \\\n+javax/swing/BoxLayout.java \\\n+javax/swing/ButtonGroup.java \\\n+javax/swing/ButtonModel.java \\\n+javax/swing/ComponentInputMap.java \\\n+javax/swing/DefaultButtonModel.java \\\n+javax/swing/DefaultCellRenderer.java \\\n+javax/swing/DefaultListModel.java \\\n+javax/swing/DefaultListSelectionModel.java \\\n+javax/swing/Icon.java \\\n+javax/swing/ImageIcon.java \\\n+javax/swing/InputMap.java \\\n+javax/swing/JApplet.java \\\n+javax/swing/JButton.java \\\n+javax/swing/JCheckBox.java \\\n+javax/swing/JComponent.java \\\n+javax/swing/JDialog.java \\\n+javax/swing/JEditorPane.java \\\n+javax/swing/JFrame.java \\\n+javax/swing/JLabel.java \\\n+javax/swing/JLayeredPane.java \\\n+javax/swing/JList.java \\\n+javax/swing/JMenuBar.java \\\n+javax/swing/JOptionPane.java \\\n+javax/swing/JPanel.java \\\n+javax/swing/JRadioButton.java \\\n+javax/swing/JRootPane.java \\\n+javax/swing/JScrollBar.java \\\n+javax/swing/JScrollPane.java \\\n+javax/swing/JTabbedPane.java \\\n+javax/swing/JTextField.java \\\n+javax/swing/JToggleButton.java \\\n+javax/swing/JToolTip.java \\\n+javax/swing/JTree.java \\\n+javax/swing/JViewport.java \\\n+javax/swing/JWindow.java \\\n+javax/swing/KeyStroke.java \\\n+javax/swing/ListCellRenderer.java \\\n+javax/swing/ListModel.java \\\n+javax/swing/ListSelectionModel.java \\\n+javax/swing/LookAndFeel.java \\\n+javax/swing/Scrollable.java \\\n+javax/swing/SwingConstants.java \\\n+javax/swing/SwingUtilities.java \\\n+javax/swing/Timer.java \\\n+javax/swing/ToggleButtonModel.java \\\n+javax/swing/UIDefaults.java \\\n+javax/swing/UIManager.java \\\n+javax/swing/UnsupportedLookAndFeelException.java \\\n+javax/swing/event/AncestorEvent.java \\\n+javax/swing/event/AncestorListener.java \\\n+javax/swing/event/ChangeEvent.java \\\n+javax/swing/event/ChangeListener.java \\\n+javax/swing/event/DocumentEvent.java \\\n+javax/swing/event/DocumentListener.java \\\n+javax/swing/event/HyperlinkEvent.java \\\n+javax/swing/event/HyperlinkListener.java \\\n+javax/swing/event/ListDataEvent.java \\\n+javax/swing/event/ListDataListener.java \\\n+javax/swing/event/ListSelectionEvent.java \\\n+javax/swing/event/ListSelectionListener.java \\\n+javax/swing/event/MenuEvent.java \\\n+javax/swing/event/UndoableEditEvent.java \\\n+javax/swing/event/UndoableEditListener.java \\\n+javax/swing/event/CaretEvent.java \\\n+javax/swing/event/CaretListener.java \\\n+javax/swing/event/CellEditorListener.java \\\n+javax/swing/event/EventListenerList.java \\\n+javax/swing/event/InternalFrameAdapter.java \\\n+javax/swing/event/InternalFrameEvent.java \\\n+javax/swing/event/InternalFrameListener.java \\\n+javax/swing/event/MenuDragMouseEvent.java \\\n+javax/swing/event/MenuDragMouseListener.java \\\n+javax/swing/event/MenuKeyEvent.java \\\n+javax/swing/event/MenuKeyListener.java \\\n+javax/swing/event/MenuListener.java \\\n+javax/swing/event/MouseInputAdapter.java \\\n+javax/swing/event/MouseInputListener.java \\\n+javax/swing/event/PopupMenuEvent.java \\\n+javax/swing/event/PopupMenuListener.java \\\n+javax/swing/event/SwingPropertyChangeSupport.java \\\n+javax/swing/event/TableColumnModelEvent.java \\\n+javax/swing/event/TableColumnModelListener.java \\\n+javax/swing/event/TableModelEvent.java \\\n+javax/swing/event/TableModelListener.java \\\n+javax/swing/event/TreeExpansionEvent.java \\\n+javax/swing/event/TreeExpansionListener.java \\\n+javax/swing/event/TreeModelEvent.java \\\n+javax/swing/event/TreeModelListener.java \\\n+javax/swing/event/TreeSelectionEvent.java \\\n+javax/swing/event/TreeSelectionListener.java \\\n+javax/swing/event/TreeWillExpandListener.java \\\n+javax/swing/ActionMap.java \\\n+javax/swing/text/AbstractDocument.java \\\n+javax/swing/text/AttributeSet.java \\\n+javax/swing/text/BadLocationException.java \\\n+javax/swing/text/Caret.java \\\n+javax/swing/text/CharacterIterator.java \\\n+javax/swing/text/ComponentView.java \\\n+javax/swing/text/DefaultCaret.java \\\n+javax/swing/text/DefaultEditorKit.java \\\n+javax/swing/text/Document.java \\\n+javax/swing/text/EditorKit.java \\\n+javax/swing/text/Element.java \\\n+javax/swing/text/GapContent.java \\\n+javax/swing/text/JTextComponent.java \\\n+javax/swing/text/Keymap.java \\\n+javax/swing/text/PlainDocument.java \\\n+javax/swing/text/PlainEditorKit.java \\\n+javax/swing/text/Position.java \\\n+javax/swing/text/Segment.java \\\n+javax/swing/text/Style.java \\\n+javax/swing/text/View.java \\\n+javax/swing/text/ViewFactory.java \\\n+javax/swing/text/MutableAttributeSet.java \\\n+javax/swing/text/StyledDocument.java \\\n+javax/swing/text/StyledEditorKit.java \\\n+javax/swing/text/TextAction.java \\\n+javax/swing/tree/TreeNode.java \\\n+javax/swing/tree/AbstractLayoutCache.java \\\n+javax/swing/tree/DefaultMutableTreeNode.java \\\n+javax/swing/tree/DefaultTreeCellEditor.java \\\n+javax/swing/tree/DefaultTreeCellRenderer.java \\\n+javax/swing/tree/DefaultTreeModel.java \\\n+javax/swing/tree/DefaultTreeSelectionModel.java \\\n+javax/swing/tree/ExpandVetoException.java \\\n+javax/swing/tree/FixedHeightLayoutCache.java \\\n+javax/swing/tree/MutableTreeNode.java \\\n+javax/swing/tree/RowMapper.java \\\n+javax/swing/tree/TreeCellEditor.java \\\n+javax/swing/tree/TreeCellRenderer.java \\\n+javax/swing/tree/TreeModel.java \\\n+javax/swing/tree/TreePath.java \\\n+javax/swing/tree/TreeSelectionModel.java \\\n+javax/swing/tree/VariableHeightLayoutCache.java \\\n+javax/swing/undo/UndoableEdit.java \\\n+javax/swing/undo/AbstractUndoableEdit.java \\\n+javax/swing/undo/CannotRedoException.java \\\n+javax/swing/undo/CannotUndoException.java \\\n+javax/swing/undo/CompoundEdit.java \\\n+javax/swing/undo/StateEdit.java \\\n+javax/swing/undo/StateEditable.java \\\n+javax/swing/undo/UndoManager.java \\\n+javax/swing/undo/UndoableEditSupport.java \\\n+javax/swing/BoundedRangeModel.java \\\n+javax/swing/CellEditor.java \\\n+javax/swing/ComboBoxEditor.java \\\n+javax/swing/ComboBoxModel.java \\\n+javax/swing/DefaultBoundedRangeModel.java \\\n+javax/swing/DesktopManager.java \\\n+javax/swing/InputVerifier.java \\\n+javax/swing/JInternalFrame.java \\\n+javax/swing/JTable.java \\\n+javax/swing/MenuElement.java \\\n+javax/swing/MenuSelectionManager.java \\\n+javax/swing/MutableComboBoxModel.java \\\n+javax/swing/Renderer.java \\\n+javax/swing/RootPaneContainer.java \\\n+javax/swing/ScrollPaneConstants.java \\\n+javax/swing/SingleSelectionModel.java \\\n+javax/swing/SizeRequirements.java \\\n+javax/swing/SizeSequence.java \\\n+javax/swing/WindowConstants.java \\\n+javax/swing/AbstractCellEditor.java \\\n+javax/swing/CellRendererPane.java \\\n+javax/swing/DebugGraphics.java \\\n+javax/swing/DefaultCellEditor.java \\\n+javax/swing/DefaultComboBoxModel.java \\\n+javax/swing/DefaultDesktopManager.java \\\n+javax/swing/DefaultFocusManager.java \\\n+javax/swing/DefaultListCellRenderer.java \\\n+javax/swing/DefaultSingleSelectionModel.java \\\n+javax/swing/FocusManager.java \\\n+javax/swing/JCheckBoxMenuItem.java \\\n+javax/swing/JColorChooser.java \\\n+javax/swing/JComboBox.java \\\n+javax/swing/JDesktopPane.java \\\n+javax/swing/JFileChooser.java \\\n+javax/swing/JMenu.java \\\n+javax/swing/JMenuItem.java \\\n+javax/swing/JPasswordField.java \\\n+javax/swing/JPopupMenu.java \\\n+javax/swing/JProgressBar.java \\\n+javax/swing/JRadioButtonMenuItem.java \\\n+javax/swing/JSeparator.java \\\n+javax/swing/JSlider.java \\\n+javax/swing/JSplitPane.java \\\n+javax/swing/JTextPane.java \\\n+javax/swing/JToolBar.java \\\n+javax/swing/OverlayLayout.java \\\n+javax/swing/ProgressMonitor.java \\\n+javax/swing/ProgressMonitorInputStream.java \\\n+javax/swing/RepaintManager.java \\\n+javax/swing/ScrollPaneLayout.java \\\n+javax/swing/ToolTipManager.java \\\n+javax/swing/ViewportLayout.java\n \n rmi_java_source_files =\t\\\n java/rmi/activation/Activatable.java \\\n@@ -912,6 +1292,29 @@ gnu/java/rmi/server/UnicastServer.java \\\n gnu/java/rmi/server/UnicastServerRef.java\n \n javax_source_files = \\\n+javax/accessibility/Accessible.java \\\n+javax/accessibility/AccessibleAction.java \\\n+javax/accessibility/AccessibleBundle.java \\\n+javax/accessibility/AccessibleComponent.java \\\n+javax/accessibility/AccessibleContext.java \\\n+javax/accessibility/AccessibleEditableText.java \\\n+javax/accessibility/AccessibleExtendedComponent.java \\\n+javax/accessibility/AccessibleExtendedTable.java \\\n+javax/accessibility/AccessibleHyperlink.java \\\n+javax/accessibility/AccessibleHypertext.java \\\n+javax/accessibility/AccessibleIcon.java \\\n+javax/accessibility/AccessibleKeyBinding.java \\\n+javax/accessibility/AccessibleRelation.java \\\n+javax/accessibility/AccessibleRelationSet.java \\\n+javax/accessibility/AccessibleResourceBundle.java \\\n+javax/accessibility/AccessibleRole.java \\\n+javax/accessibility/AccessibleSelection.java \\\n+javax/accessibility/AccessibleState.java \\\n+javax/accessibility/AccessibleStateSet.java \\\n+javax/accessibility/AccessibleTable.java \\\n+javax/accessibility/AccessibleTableModelChange.java \\\n+javax/accessibility/AccessibleText.java \\\n+javax/accessibility/AccessibleValue.java \\\n javax/naming/directory/Attribute.java \\\n javax/naming/directory/AttributeInUseException.java \\\n javax/naming/directory/AttributeModificationException.java \\"}, {"sha": "34389bd01351475d02f491a0771409191c8cccb5", "filename": "libjava/Makefile.in", "status": "modified", "additions": 798, "deletions": 74, "changes": 872, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -342,6 +342,9 @@ gnu/java/awt/BitMaskExtent.java \\\n gnu/java/awt/Buffers.java \\\n gnu/java/awt/ComponentDataBlitOp.java \\\n gnu/java/awt/GLightweightPeer.java \\\n+gnu/java/awt/EventModifier.java \\\n+gnu/java/awt/image/ImageDecoder.java \\\n+gnu/java/awt/image/XBMDecoder.java \\\n gnu/java/beans/editors/ColorEditor.java\t\\\n gnu/java/beans/editors/FontEditor.java \\\n gnu/java/beans/editors/NativeBooleanEditor.java\t\\\n@@ -377,12 +380,12 @@ java/awt/CheckboxGroup.java \\\n java/awt/CheckboxMenuItem.java \\\n java/awt/Choice.java \\\n java/awt/Color.java \\\n-java/awt/Component.java\t\\\n+java/awt/Component.java \\\n java/awt/ComponentOrientation.java \\\n-java/awt/Container.java\t\\\n+java/awt/Container.java \\\n java/awt/Cursor.java \\\n java/awt/Dialog.java \\\n-java/awt/Dimension.java\t\\\n+java/awt/Dimension.java \\\n java/awt/Event.java \\\n java/awt/EventDispatchThread.java \\\n java/awt/EventQueue.java \\\n@@ -404,7 +407,6 @@ java/awt/Label.java \\\n java/awt/LayoutManager.java \\\n java/awt/LayoutManager2.java \\\n java/awt/List.java \\\n-java/awt/MediaTracker.java \\\n java/awt/Menu.java \\\n java/awt/MenuBar.java \\\n java/awt/MenuComponent.java \\\n@@ -415,36 +417,35 @@ java/awt/Paint.java \\\n java/awt/PaintContext.java \\\n java/awt/Panel.java \\\n java/awt/Point.java \\\n-java/awt/Polygon.java \\\n-java/awt/PopupMenu.java\t\\\n-java/awt/PrintGraphics.java \\\n-java/awt/PrintJob.java \\\n-java/awt/Rectangle.java\t\\\n+java/awt/PopupMenu.java \\\n+java/awt/Rectangle.java \\\n java/awt/RenderingHints.java \\\n java/awt/ScrollPane.java \\\n-java/awt/Scrollbar.java\t\\\n+java/awt/Scrollbar.java \\\n java/awt/Shape.java \\\n-java/awt/SystemColor.java \\\n java/awt/TextArea.java \\\n java/awt/TextComponent.java \\\n-java/awt/TextField.java\t\\\n+java/awt/TextField.java \\\n java/awt/Toolkit.java \\\n java/awt/Transparency.java \\\n java/awt/Window.java \\\n java/awt/color/ColorSpace.java \\\n java/awt/color/ICC_ColorSpace.java \\\n-java/awt/color/ICC_Profile.java\t\\\n+java/awt/color/ICC_Profile.java \\\n+java/awt/color/CMMException.java \\\n+java/awt/color/ProfileDataException.java \\\n java/awt/datatransfer/Clipboard.java \\\n java/awt/datatransfer/ClipboardOwner.java \\\n java/awt/datatransfer/DataFlavor.java \\\n java/awt/datatransfer/FlavorMap.java \\\n java/awt/datatransfer/MimeTypeParseException.java \\\n java/awt/datatransfer/StringSelection.java \\\n java/awt/datatransfer/SystemFlavorMap.java \\\n-java/awt/datatransfer/Transferable.java\t\\\n+java/awt/datatransfer/Transferable.java \\\n java/awt/datatransfer/UnsupportedFlavorException.java \\\n+java/awt/datatransfer/FlavorTable.java \\\n java/awt/event/AWTEventListener.java \\\n-java/awt/event/ActionEvent.java\t\\\n+java/awt/event/ActionEvent.java \\\n java/awt/event/ActionListener.java \\\n java/awt/event/AdjustmentEvent.java \\\n java/awt/event/AdjustmentListener.java \\\n@@ -463,66 +464,92 @@ java/awt/event/HierarchyEvent.java \\\n java/awt/event/HierarchyListener.java \\\n java/awt/event/InputEvent.java \\\n java/awt/event/InputMethodEvent.java \\\n-java/awt/event/InputMethodListener.java\t\\\n+java/awt/event/InputMethodListener.java \\\n java/awt/event/InvocationEvent.java \\\n java/awt/event/ItemEvent.java \\\n java/awt/event/ItemListener.java \\\n java/awt/event/KeyAdapter.java \\\n java/awt/event/KeyEvent.java \\\n-java/awt/event/KeyListener.java\t\\\n+java/awt/event/KeyListener.java \\\n java/awt/event/MouseAdapter.java \\\n java/awt/event/MouseEvent.java \\\n java/awt/event/MouseListener.java \\\n java/awt/event/MouseMotionAdapter.java \\\n-java/awt/event/MouseMotionListener.java\t\\\n+java/awt/event/MouseMotionListener.java \\\n java/awt/event/PaintEvent.java \\\n java/awt/event/TextEvent.java \\\n java/awt/event/TextListener.java \\\n java/awt/event/WindowAdapter.java \\\n-java/awt/event/WindowEvent.java\t\\\n+java/awt/event/WindowEvent.java \\\n java/awt/event/WindowListener.java \\\n+java/awt/event/AWTEventListenerProxy.java \\\n+java/awt/event/MouseWheelEvent.java \\\n+java/awt/event/MouseWheelListener.java \\\n+java/awt/event/WindowFocusListener.java \\\n+java/awt/event/WindowStateListener.java \\\n java/awt/geom/AffineTransform.java \\\n java/awt/geom/Dimension2D.java \\\n java/awt/geom/Ellipse2D.java \\\n java/awt/geom/IllegalPathStateException.java \\\n-java/awt/geom/Line2D.java \\\n java/awt/geom/NoninvertibleTransformException.java \\\n-java/awt/geom/PathIterator.java\t\\\n+java/awt/geom/PathIterator.java \\\n java/awt/geom/Point2D.java \\\n java/awt/geom/Rectangle2D.java \\\n java/awt/geom/RectangularShape.java \\\n java/awt/geom/RoundRectangle2D.java \\\n-java/awt/image/AreaAveragingScaleFilter.java \\\n+java/awt/geom/Line2D.java \\\n+java/awt/geom/Arc2D.java \\\n+java/awt/geom/Area.java \\\n+java/awt/geom/CubicCurve2D.java \\\n+java/awt/geom/FlatteningPathIterator.java \\\n+java/awt/geom/GeneralPath.java \\\n+java/awt/geom/QuadCurve2D.java \\\n java/awt/image/BufferedImage.java \\\n java/awt/image/ColorModel.java \\\n-java/awt/image/ComponentColorModel.java\t\\\n+java/awt/image/ComponentColorModel.java \\\n java/awt/image/ComponentSampleModel.java \\\n-java/awt/image/CropImageFilter.java \\\n java/awt/image/DataBuffer.java \\\n java/awt/image/DataBufferByte.java \\\n java/awt/image/DataBufferInt.java \\\n java/awt/image/DataBufferUShort.java \\\n java/awt/image/DirectColorModel.java \\\n-java/awt/image/FilteredImageSource.java\t\\\n java/awt/image/ImageConsumer.java \\\n-java/awt/image/ImageFilter.java\t\\\n java/awt/image/ImageObserver.java \\\n java/awt/image/ImageProducer.java \\\n java/awt/image/IndexColorModel.java \\\n-java/awt/image/MemoryImageSource.java \\\n java/awt/image/PackedColorModel.java \\\n-java/awt/image/PixelGrabber.java \\\n-java/awt/image/RGBImageFilter.java \\\n java/awt/image/Raster.java \\\n java/awt/image/RasterOp.java \\\n-java/awt/image/ReplicateScaleFilter.java \\\n-java/awt/image/SampleModel.java\t\\\n+java/awt/image/SampleModel.java \\\n java/awt/image/SinglePixelPackedSampleModel.java \\\n java/awt/image/WritableRaster.java \\\n+java/awt/image/AreaAveragingScaleFilter.java \\\n+java/awt/image/CropImageFilter.java \\\n+java/awt/image/FilteredImageSource.java \\\n+java/awt/image/ImageFilter.java \\\n+java/awt/image/MemoryImageSource.java \\\n+java/awt/image/PixelGrabber.java \\\n+java/awt/image/RGBImageFilter.java \\\n+java/awt/image/ReplicateScaleFilter.java \\\n+java/awt/image/BufferStrategy.java \\\n+java/awt/image/BufferedImageOp.java \\\n+java/awt/image/ImagingOpException.java \\\n+java/awt/image/RasterFormatException.java \\\n+java/awt/image/RenderedImage.java \\\n+java/awt/image/TileObserver.java \\\n+java/awt/image/VolatileImage.java \\\n+java/awt/image/WritableRenderedImage.java \\\n+java/awt/image/renderable/ContextualRenderedImageFactory.java \\\n+java/awt/image/renderable/ParameterBlock.java \\\n+java/awt/image/renderable/RenderContext.java \\\n+java/awt/image/renderable/RenderableImage.java \\\n+java/awt/image/renderable/RenderableImageOp.java \\\n+java/awt/image/renderable/RenderableImageProducer.java \\\n+java/awt/image/renderable/RenderedImageFactory.java \\\n java/awt/peer/ButtonPeer.java \\\n java/awt/peer/CanvasPeer.java \\\n-java/awt/peer/CheckboxMenuItemPeer.java\t\\\n-java/awt/peer/CheckboxPeer.java\t\\\n+java/awt/peer/CheckboxMenuItemPeer.java \\\n+java/awt/peer/CheckboxPeer.java \\\n java/awt/peer/ChoicePeer.java \\\n java/awt/peer/ComponentPeer.java \\\n java/awt/peer/ContainerPeer.java \\\n@@ -535,17 +562,83 @@ java/awt/peer/LightweightPeer.java \\\n java/awt/peer/ListPeer.java \\\n java/awt/peer/MenuBarPeer.java \\\n java/awt/peer/MenuComponentPeer.java \\\n-java/awt/peer/MenuItemPeer.java\t\\\n+java/awt/peer/MenuItemPeer.java \\\n java/awt/peer/MenuPeer.java \\\n java/awt/peer/PanelPeer.java \\\n java/awt/peer/PopupMenuPeer.java \\\n java/awt/peer/ScrollPanePeer.java \\\n java/awt/peer/ScrollbarPeer.java \\\n-java/awt/peer/TextAreaPeer.java\t\\\n+java/awt/peer/TextAreaPeer.java \\\n java/awt/peer/TextComponentPeer.java \\\n java/awt/peer/TextFieldPeer.java \\\n java/awt/peer/WindowPeer.java \\\n-java/beans/beancontext/BeanContext.java\t\\\n+java/awt/SystemColor.java \\\n+java/awt/Polygon.java \\\n+java/awt/MediaTracker.java \\\n+java/awt/PrintGraphics.java \\\n+java/awt/PrintJob.java \\\n+java/awt/AWTKeyStroke.java \\\n+java/awt/AlphaComposite.java \\\n+java/awt/AttributeValue.java \\\n+java/awt/BasicStroke.java \\\n+java/awt/BufferCapabilities.java \\\n+java/awt/ColorPaintContext.java \\\n+java/awt/Composite.java \\\n+java/awt/CompositeContext.java \\\n+java/awt/ContainerOrderFocusTraversalPolicy.java \\\n+java/awt/DefaultFocusTraversalPolicy.java \\\n+java/awt/DefaultKeyboardFocusManager.java \\\n+java/awt/DisplayMode.java \\\n+java/awt/FocusTraversalPolicy.java \\\n+java/awt/FontFormatException.java \\\n+java/awt/GradientPaint.java \\\n+java/awt/GraphicsConfigTemplate.java \\\n+java/awt/GraphicsDevice.java \\\n+java/awt/GraphicsEnvironment.java \\\n+java/awt/HeadlessException.java \\\n+java/awt/ImageCapabilities.java \\\n+java/awt/JobAttributes.java \\\n+java/awt/KeyEventDispatcher.java \\\n+java/awt/KeyEventPostProcessor.java \\\n+java/awt/KeyboardFocusManager.java \\\n+java/awt/PageAttributes.java \\\n+java/awt/Robot.java \\\n+java/awt/ScrollPaneAdjustable.java \\\n+java/awt/Stroke.java \\\n+java/awt/TexturePaint.java \\\n+java/awt/dnd/DnDConstants.java \\\n+java/awt/dnd/DragGestureEvent.java \\\n+java/awt/dnd/DragGestureListener.java \\\n+java/awt/dnd/DragGestureRecognizer.java \\\n+java/awt/dnd/DragSource.java \\\n+java/awt/dnd/DragSourceAdapter.java \\\n+java/awt/dnd/DragSourceContext.java \\\n+java/awt/dnd/DragSourceDragEvent.java \\\n+java/awt/dnd/DragSourceEvent.java \\\n+java/awt/dnd/DragSourceListener.java \\\n+java/awt/dnd/DragSourceMotionListener.java \\\n+java/awt/dnd/DropTarget.java \\\n+java/awt/dnd/InvalidDnDOperationException.java \\\n+java/awt/dnd/peer/DragSourceContextPeer.java \\\n+java/awt/font/TextHitInfo.java \\\n+java/awt/im/spi/InputMethod.java \\\n+java/awt/im/spi/InputMethodContext.java \\\n+java/awt/im/spi/InputMethodDescriptor.java \\\n+java/awt/im/InputContext.java \\\n+java/awt/im/InputMethodHighlight.java \\\n+java/awt/im/InputMethodRequests.java \\\n+java/awt/im/InputSubset.java \\\n+java/awt/print/Book.java \\\n+java/awt/print/PageFormat.java \\\n+java/awt/print/Pageable.java \\\n+java/awt/print/Paper.java \\\n+java/awt/print/Printable.java \\\n+java/awt/print/PrinterAbortException.java \\\n+java/awt/print/PrinterException.java \\\n+java/awt/print/PrinterGraphics.java \\\n+java/awt/print/PrinterIOException.java \\\n+java/awt/print/PrinterJob.java \\\n+java/beans/beancontext/BeanContext.java \\\n java/beans/beancontext/BeanContextChild.java \\\n java/beans/beancontext/BeanContextChildComponentProxy.java \\\n java/beans/beancontext/BeanContextChildSupport.java \\\n@@ -559,9 +652,8 @@ java/beans/beancontext/BeanContextServiceProvider.java \\\n java/beans/beancontext/BeanContextServiceProviderBeanInfo.java \\\n java/beans/beancontext/BeanContextServiceRevokedEvent.java \\\n java/beans/beancontext/BeanContextServiceRevokedListener.java \\\n-java/beans/beancontext/BeanContextServices.java\t\\\n-java/beans/beancontext/BeanContextServicesListener.java\t\\\n-java/beans/AppletInitializer.java \\\n+java/beans/beancontext/BeanContextServices.java \\\n+java/beans/beancontext/BeanContextServicesListener.java \\\n java/beans/BeanDescriptor.java \\\n java/beans/BeanInfo.java \\\n java/beans/Beans.java \\\n@@ -588,7 +680,295 @@ java/beans/SimpleBeanInfo.java \\\n java/beans/VetoableChangeListener.java \\\n java/beans/VetoableChangeListenerProxy.java \\\n java/beans/VetoableChangeSupport.java \\\n-java/beans/Visibility.java\n+java/beans/Visibility.java \\\n+java/beans/AppletInitializer.java \\\n+javax/swing/border/AbstractBorder.java \\\n+javax/swing/border/Border.java \\\n+javax/swing/border/CompoundBorder.java \\\n+javax/swing/border/EmptyBorder.java \\\n+javax/swing/border/MatteBorder.java \\\n+javax/swing/border/TitledBorder.java \\\n+javax/swing/border/BevelBorder.java \\\n+javax/swing/border/EtchedBorder.java \\\n+javax/swing/border/LineBorder.java \\\n+javax/swing/GrayFilter.java \\\n+javax/swing/AbstractAction.java \\\n+javax/swing/AbstractButton.java \\\n+javax/swing/plaf/basic/BasicButtonUI.java \\\n+javax/swing/plaf/basic/BasicCheckBoxUI.java \\\n+javax/swing/plaf/basic/BasicDefaults.java \\\n+javax/swing/plaf/basic/BasicGraphicsUtils.java \\\n+javax/swing/plaf/basic/BasicLabelUI.java \\\n+javax/swing/plaf/basic/BasicListUI.java \\\n+javax/swing/plaf/basic/BasicOptionPaneUI.java \\\n+javax/swing/plaf/basic/BasicPanelUI.java \\\n+javax/swing/plaf/basic/BasicRadioButtonUI.java \\\n+javax/swing/plaf/basic/BasicScrollPaneUI.java \\\n+javax/swing/plaf/basic/BasicTabbedPaneUI.java \\\n+javax/swing/plaf/basic/BasicTextUI.java \\\n+javax/swing/plaf/basic/BasicToggleButtonUI.java \\\n+javax/swing/plaf/basic/BasicTreeUI.java \\\n+javax/swing/plaf/basic/BasicViewportUI.java \\\n+javax/swing/plaf/basic/BasicLookAndFeel.java \\\n+javax/swing/plaf/basic/BasicBorders.java \\\n+javax/swing/plaf/basic/BasicIconFactory.java \\\n+javax/swing/plaf/BorderUIResource.java \\\n+javax/swing/plaf/UIResource.java \\\n+javax/swing/plaf/ButtonUI.java \\\n+javax/swing/plaf/ComponentUI.java \\\n+javax/swing/plaf/LabelUI.java \\\n+javax/swing/plaf/ListUI.java \\\n+javax/swing/plaf/OptionPaneUI.java \\\n+javax/swing/plaf/PanelUI.java \\\n+javax/swing/plaf/ScrollPaneUI.java \\\n+javax/swing/plaf/TabbedPaneUI.java \\\n+javax/swing/plaf/TextUI.java \\\n+javax/swing/plaf/TreeUI.java \\\n+javax/swing/plaf/ViewportUI.java \\\n+javax/swing/plaf/metal/MetalLookAndFeel.java \\\n+javax/swing/plaf/ColorUIResource.java \\\n+javax/swing/plaf/DimensionUIResource.java \\\n+javax/swing/plaf/FontUIResource.java \\\n+javax/swing/plaf/IconUIResource.java \\\n+javax/swing/plaf/InsetsUIResource.java \\\n+javax/swing/plaf/ActionMapUIResource.java \\\n+javax/swing/plaf/ColorChooserUI.java \\\n+javax/swing/plaf/ComboBoxUI.java \\\n+javax/swing/plaf/ComponentInputMapUIResource.java \\\n+javax/swing/plaf/DesktopIconUI.java \\\n+javax/swing/plaf/DesktopPaneUI.java \\\n+javax/swing/plaf/FileChooserUI.java \\\n+javax/swing/plaf/InputMapUIResource.java \\\n+javax/swing/plaf/InternalFrameUI.java \\\n+javax/swing/plaf/MenuBarUI.java \\\n+javax/swing/plaf/MenuItemUI.java \\\n+javax/swing/plaf/PopupMenuUI.java \\\n+javax/swing/plaf/ProgressBarUI.java \\\n+javax/swing/plaf/RootPaneUI.java \\\n+javax/swing/plaf/ScrollBarUI.java \\\n+javax/swing/plaf/SeparatorUI.java \\\n+javax/swing/plaf/SliderUI.java \\\n+javax/swing/plaf/SplitPaneUI.java \\\n+javax/swing/plaf/TableHeaderUI.java \\\n+javax/swing/plaf/TableUI.java \\\n+javax/swing/plaf/ToolBarUI.java \\\n+javax/swing/plaf/ToolTipUI.java \\\n+javax/swing/AbstractListModel.java \\\n+javax/swing/AbstractSet.java \\\n+javax/swing/colorchooser/AbstractColorChooserPanel.java \\\n+javax/swing/colorchooser/ColorChooserComponentFactory.java \\\n+javax/swing/colorchooser/ColorSelectionModel.java \\\n+javax/swing/colorchooser/DefaultColorSelectionModel.java \\\n+javax/swing/filechooser/FileFilter.java \\\n+javax/swing/filechooser/FileSystemView.java \\\n+javax/swing/filechooser/FileView.java \\\n+javax/swing/table/AbstractTableModel.java \\\n+javax/swing/table/DefaultTableColumnModel.java \\\n+javax/swing/table/DefaultTableModel.java \\\n+javax/swing/table/TableCellEditor.java \\\n+javax/swing/table/TableCellRenderer.java \\\n+javax/swing/table/TableColumn.java \\\n+javax/swing/table/TableColumnModel.java \\\n+javax/swing/table/TableModel.java \\\n+javax/swing/table/DefaultTableCellRenderer.java \\\n+javax/swing/Action.java \\\n+javax/swing/BorderFactory.java \\\n+javax/swing/Box.java \\\n+javax/swing/BoxLayout.java \\\n+javax/swing/ButtonGroup.java \\\n+javax/swing/ButtonModel.java \\\n+javax/swing/ComponentInputMap.java \\\n+javax/swing/DefaultButtonModel.java \\\n+javax/swing/DefaultCellRenderer.java \\\n+javax/swing/DefaultListModel.java \\\n+javax/swing/DefaultListSelectionModel.java \\\n+javax/swing/Icon.java \\\n+javax/swing/ImageIcon.java \\\n+javax/swing/InputMap.java \\\n+javax/swing/JApplet.java \\\n+javax/swing/JButton.java \\\n+javax/swing/JCheckBox.java \\\n+javax/swing/JComponent.java \\\n+javax/swing/JDialog.java \\\n+javax/swing/JEditorPane.java \\\n+javax/swing/JFrame.java \\\n+javax/swing/JLabel.java \\\n+javax/swing/JLayeredPane.java \\\n+javax/swing/JList.java \\\n+javax/swing/JMenuBar.java \\\n+javax/swing/JOptionPane.java \\\n+javax/swing/JPanel.java \\\n+javax/swing/JRadioButton.java \\\n+javax/swing/JRootPane.java \\\n+javax/swing/JScrollBar.java \\\n+javax/swing/JScrollPane.java \\\n+javax/swing/JTabbedPane.java \\\n+javax/swing/JTextField.java \\\n+javax/swing/JToggleButton.java \\\n+javax/swing/JToolTip.java \\\n+javax/swing/JTree.java \\\n+javax/swing/JViewport.java \\\n+javax/swing/JWindow.java \\\n+javax/swing/KeyStroke.java \\\n+javax/swing/ListCellRenderer.java \\\n+javax/swing/ListModel.java \\\n+javax/swing/ListSelectionModel.java \\\n+javax/swing/LookAndFeel.java \\\n+javax/swing/Scrollable.java \\\n+javax/swing/SwingConstants.java \\\n+javax/swing/SwingUtilities.java \\\n+javax/swing/Timer.java \\\n+javax/swing/ToggleButtonModel.java \\\n+javax/swing/UIDefaults.java \\\n+javax/swing/UIManager.java \\\n+javax/swing/UnsupportedLookAndFeelException.java \\\n+javax/swing/event/AncestorEvent.java \\\n+javax/swing/event/AncestorListener.java \\\n+javax/swing/event/ChangeEvent.java \\\n+javax/swing/event/ChangeListener.java \\\n+javax/swing/event/DocumentEvent.java \\\n+javax/swing/event/DocumentListener.java \\\n+javax/swing/event/HyperlinkEvent.java \\\n+javax/swing/event/HyperlinkListener.java \\\n+javax/swing/event/ListDataEvent.java \\\n+javax/swing/event/ListDataListener.java \\\n+javax/swing/event/ListSelectionEvent.java \\\n+javax/swing/event/ListSelectionListener.java \\\n+javax/swing/event/MenuEvent.java \\\n+javax/swing/event/UndoableEditEvent.java \\\n+javax/swing/event/UndoableEditListener.java \\\n+javax/swing/event/CaretEvent.java \\\n+javax/swing/event/CaretListener.java \\\n+javax/swing/event/CellEditorListener.java \\\n+javax/swing/event/EventListenerList.java \\\n+javax/swing/event/InternalFrameAdapter.java \\\n+javax/swing/event/InternalFrameEvent.java \\\n+javax/swing/event/InternalFrameListener.java \\\n+javax/swing/event/MenuDragMouseEvent.java \\\n+javax/swing/event/MenuDragMouseListener.java \\\n+javax/swing/event/MenuKeyEvent.java \\\n+javax/swing/event/MenuKeyListener.java \\\n+javax/swing/event/MenuListener.java \\\n+javax/swing/event/MouseInputAdapter.java \\\n+javax/swing/event/MouseInputListener.java \\\n+javax/swing/event/PopupMenuEvent.java \\\n+javax/swing/event/PopupMenuListener.java \\\n+javax/swing/event/SwingPropertyChangeSupport.java \\\n+javax/swing/event/TableColumnModelEvent.java \\\n+javax/swing/event/TableColumnModelListener.java \\\n+javax/swing/event/TableModelEvent.java \\\n+javax/swing/event/TableModelListener.java \\\n+javax/swing/event/TreeExpansionEvent.java \\\n+javax/swing/event/TreeExpansionListener.java \\\n+javax/swing/event/TreeModelEvent.java \\\n+javax/swing/event/TreeModelListener.java \\\n+javax/swing/event/TreeSelectionEvent.java \\\n+javax/swing/event/TreeSelectionListener.java \\\n+javax/swing/event/TreeWillExpandListener.java \\\n+javax/swing/ActionMap.java \\\n+javax/swing/text/AbstractDocument.java \\\n+javax/swing/text/AttributeSet.java \\\n+javax/swing/text/BadLocationException.java \\\n+javax/swing/text/Caret.java \\\n+javax/swing/text/CharacterIterator.java \\\n+javax/swing/text/ComponentView.java \\\n+javax/swing/text/DefaultCaret.java \\\n+javax/swing/text/DefaultEditorKit.java \\\n+javax/swing/text/Document.java \\\n+javax/swing/text/EditorKit.java \\\n+javax/swing/text/Element.java \\\n+javax/swing/text/GapContent.java \\\n+javax/swing/text/JTextComponent.java \\\n+javax/swing/text/Keymap.java \\\n+javax/swing/text/PlainDocument.java \\\n+javax/swing/text/PlainEditorKit.java \\\n+javax/swing/text/Position.java \\\n+javax/swing/text/Segment.java \\\n+javax/swing/text/Style.java \\\n+javax/swing/text/View.java \\\n+javax/swing/text/ViewFactory.java \\\n+javax/swing/text/MutableAttributeSet.java \\\n+javax/swing/text/StyledDocument.java \\\n+javax/swing/text/StyledEditorKit.java \\\n+javax/swing/text/TextAction.java \\\n+javax/swing/tree/TreeNode.java \\\n+javax/swing/tree/AbstractLayoutCache.java \\\n+javax/swing/tree/DefaultMutableTreeNode.java \\\n+javax/swing/tree/DefaultTreeCellEditor.java \\\n+javax/swing/tree/DefaultTreeCellRenderer.java \\\n+javax/swing/tree/DefaultTreeModel.java \\\n+javax/swing/tree/DefaultTreeSelectionModel.java \\\n+javax/swing/tree/ExpandVetoException.java \\\n+javax/swing/tree/FixedHeightLayoutCache.java \\\n+javax/swing/tree/MutableTreeNode.java \\\n+javax/swing/tree/RowMapper.java \\\n+javax/swing/tree/TreeCellEditor.java \\\n+javax/swing/tree/TreeCellRenderer.java \\\n+javax/swing/tree/TreeModel.java \\\n+javax/swing/tree/TreePath.java \\\n+javax/swing/tree/TreeSelectionModel.java \\\n+javax/swing/tree/VariableHeightLayoutCache.java \\\n+javax/swing/undo/UndoableEdit.java \\\n+javax/swing/undo/AbstractUndoableEdit.java \\\n+javax/swing/undo/CannotRedoException.java \\\n+javax/swing/undo/CannotUndoException.java \\\n+javax/swing/undo/CompoundEdit.java \\\n+javax/swing/undo/StateEdit.java \\\n+javax/swing/undo/StateEditable.java \\\n+javax/swing/undo/UndoManager.java \\\n+javax/swing/undo/UndoableEditSupport.java \\\n+javax/swing/BoundedRangeModel.java \\\n+javax/swing/CellEditor.java \\\n+javax/swing/ComboBoxEditor.java \\\n+javax/swing/ComboBoxModel.java \\\n+javax/swing/DefaultBoundedRangeModel.java \\\n+javax/swing/DesktopManager.java \\\n+javax/swing/InputVerifier.java \\\n+javax/swing/JInternalFrame.java \\\n+javax/swing/JTable.java \\\n+javax/swing/MenuElement.java \\\n+javax/swing/MenuSelectionManager.java \\\n+javax/swing/MutableComboBoxModel.java \\\n+javax/swing/Renderer.java \\\n+javax/swing/RootPaneContainer.java \\\n+javax/swing/ScrollPaneConstants.java \\\n+javax/swing/SingleSelectionModel.java \\\n+javax/swing/SizeRequirements.java \\\n+javax/swing/SizeSequence.java \\\n+javax/swing/WindowConstants.java \\\n+javax/swing/AbstractCellEditor.java \\\n+javax/swing/CellRendererPane.java \\\n+javax/swing/DebugGraphics.java \\\n+javax/swing/DefaultCellEditor.java \\\n+javax/swing/DefaultComboBoxModel.java \\\n+javax/swing/DefaultDesktopManager.java \\\n+javax/swing/DefaultFocusManager.java \\\n+javax/swing/DefaultListCellRenderer.java \\\n+javax/swing/DefaultSingleSelectionModel.java \\\n+javax/swing/FocusManager.java \\\n+javax/swing/JCheckBoxMenuItem.java \\\n+javax/swing/JColorChooser.java \\\n+javax/swing/JComboBox.java \\\n+javax/swing/JDesktopPane.java \\\n+javax/swing/JFileChooser.java \\\n+javax/swing/JMenu.java \\\n+javax/swing/JMenuItem.java \\\n+javax/swing/JPasswordField.java \\\n+javax/swing/JPopupMenu.java \\\n+javax/swing/JProgressBar.java \\\n+javax/swing/JRadioButtonMenuItem.java \\\n+javax/swing/JSeparator.java \\\n+javax/swing/JSlider.java \\\n+javax/swing/JSplitPane.java \\\n+javax/swing/JTextPane.java \\\n+javax/swing/JToolBar.java \\\n+javax/swing/OverlayLayout.java \\\n+javax/swing/ProgressMonitor.java \\\n+javax/swing/ProgressMonitorInputStream.java \\\n+javax/swing/RepaintManager.java \\\n+javax/swing/ScrollPaneLayout.java \\\n+javax/swing/ToolTipManager.java \\\n+javax/swing/ViewportLayout.java\n \n \n rmi_java_source_files = \\\n@@ -683,6 +1063,29 @@ gnu/java/rmi/server/UnicastServerRef.java\n \n \n javax_source_files = \\\n+javax/accessibility/Accessible.java \\\n+javax/accessibility/AccessibleAction.java \\\n+javax/accessibility/AccessibleBundle.java \\\n+javax/accessibility/AccessibleComponent.java \\\n+javax/accessibility/AccessibleContext.java \\\n+javax/accessibility/AccessibleEditableText.java \\\n+javax/accessibility/AccessibleExtendedComponent.java \\\n+javax/accessibility/AccessibleExtendedTable.java \\\n+javax/accessibility/AccessibleHyperlink.java \\\n+javax/accessibility/AccessibleHypertext.java \\\n+javax/accessibility/AccessibleIcon.java \\\n+javax/accessibility/AccessibleKeyBinding.java \\\n+javax/accessibility/AccessibleRelation.java \\\n+javax/accessibility/AccessibleRelationSet.java \\\n+javax/accessibility/AccessibleResourceBundle.java \\\n+javax/accessibility/AccessibleRole.java \\\n+javax/accessibility/AccessibleSelection.java \\\n+javax/accessibility/AccessibleState.java \\\n+javax/accessibility/AccessibleStateSet.java \\\n+javax/accessibility/AccessibleTable.java \\\n+javax/accessibility/AccessibleTableModelChange.java \\\n+javax/accessibility/AccessibleText.java \\\n+javax/accessibility/AccessibleValue.java \\\n javax/naming/directory/Attribute.java \\\n javax/naming/directory/AttributeInUseException.java \\\n javax/naming/directory/AttributeModificationException.java \\\n@@ -1855,7 +2258,10 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/gcj/xlib/natXImage.P .deps/gnu/gcj/xlib/natXUnmapEvent.P \\\n .deps/gnu/java/awt/BitMaskExtent.P .deps/gnu/java/awt/Buffers.P \\\n .deps/gnu/java/awt/ComponentDataBlitOp.P \\\n+.deps/gnu/java/awt/EventModifier.P \\\n .deps/gnu/java/awt/GLightweightPeer.P \\\n+.deps/gnu/java/awt/image/ImageDecoder.P \\\n+.deps/gnu/java/awt/image/XBMDecoder.P \\\n .deps/gnu/java/beans/BeanInfoEmbryo.P \\\n .deps/gnu/java/beans/EmptyBeanInfo.P \\\n .deps/gnu/java/beans/ExplicitBeanInfo.P \\\n@@ -2051,52 +2457,84 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/applet/AppletStub.P .deps/java/applet/AudioClip.P \\\n .deps/java/awt/AWTError.P .deps/java/awt/AWTEvent.P \\\n .deps/java/awt/AWTEventMulticaster.P .deps/java/awt/AWTException.P \\\n-.deps/java/awt/AWTPermission.P .deps/java/awt/ActiveEvent.P \\\n-.deps/java/awt/Adjustable.P .deps/java/awt/BorderLayout.P \\\n-.deps/java/awt/Button.P .deps/java/awt/Canvas.P \\\n-.deps/java/awt/CardLayout.P .deps/java/awt/Checkbox.P \\\n-.deps/java/awt/CheckboxGroup.P .deps/java/awt/CheckboxMenuItem.P \\\n-.deps/java/awt/Choice.P .deps/java/awt/Color.P \\\n+.deps/java/awt/AWTKeyStroke.P .deps/java/awt/AWTPermission.P \\\n+.deps/java/awt/ActiveEvent.P .deps/java/awt/Adjustable.P \\\n+.deps/java/awt/AlphaComposite.P .deps/java/awt/AttributeValue.P \\\n+.deps/java/awt/BasicStroke.P .deps/java/awt/BorderLayout.P \\\n+.deps/java/awt/BufferCapabilities.P .deps/java/awt/Button.P \\\n+.deps/java/awt/Canvas.P .deps/java/awt/CardLayout.P \\\n+.deps/java/awt/Checkbox.P .deps/java/awt/CheckboxGroup.P \\\n+.deps/java/awt/CheckboxMenuItem.P .deps/java/awt/Choice.P \\\n+.deps/java/awt/Color.P .deps/java/awt/ColorPaintContext.P \\\n .deps/java/awt/Component.P .deps/java/awt/ComponentOrientation.P \\\n-.deps/java/awt/Container.P .deps/java/awt/Cursor.P \\\n-.deps/java/awt/Dialog.P .deps/java/awt/Dimension.P \\\n+.deps/java/awt/Composite.P .deps/java/awt/CompositeContext.P \\\n+.deps/java/awt/Container.P \\\n+.deps/java/awt/ContainerOrderFocusTraversalPolicy.P \\\n+.deps/java/awt/Cursor.P .deps/java/awt/DefaultFocusTraversalPolicy.P \\\n+.deps/java/awt/DefaultKeyboardFocusManager.P .deps/java/awt/Dialog.P \\\n+.deps/java/awt/Dimension.P .deps/java/awt/DisplayMode.P \\\n .deps/java/awt/Event.P .deps/java/awt/EventDispatchThread.P \\\n .deps/java/awt/EventQueue.P .deps/java/awt/FileDialog.P \\\n-.deps/java/awt/FlowLayout.P .deps/java/awt/Font.P \\\n+.deps/java/awt/FlowLayout.P .deps/java/awt/FocusTraversalPolicy.P \\\n+.deps/java/awt/Font.P .deps/java/awt/FontFormatException.P \\\n .deps/java/awt/FontMetrics.P .deps/java/awt/Frame.P \\\n-.deps/java/awt/Graphics.P .deps/java/awt/Graphics2D.P \\\n-.deps/java/awt/GraphicsConfiguration.P \\\n+.deps/java/awt/GradientPaint.P .deps/java/awt/Graphics.P \\\n+.deps/java/awt/Graphics2D.P .deps/java/awt/GraphicsConfigTemplate.P \\\n+.deps/java/awt/GraphicsConfiguration.P .deps/java/awt/GraphicsDevice.P \\\n+.deps/java/awt/GraphicsEnvironment.P \\\n .deps/java/awt/GridBagConstraints.P .deps/java/awt/GridLayout.P \\\n+.deps/java/awt/HeadlessException.P \\\n .deps/java/awt/IllegalComponentStateException.P .deps/java/awt/Image.P \\\n-.deps/java/awt/Insets.P .deps/java/awt/ItemSelectable.P \\\n-.deps/java/awt/Label.P .deps/java/awt/LayoutManager.P \\\n-.deps/java/awt/LayoutManager2.P .deps/java/awt/List.P \\\n-.deps/java/awt/MediaTracker.P .deps/java/awt/Menu.P \\\n-.deps/java/awt/MenuBar.P .deps/java/awt/MenuComponent.P \\\n-.deps/java/awt/MenuContainer.P .deps/java/awt/MenuItem.P \\\n-.deps/java/awt/MenuShortcut.P .deps/java/awt/Paint.P \\\n+.deps/java/awt/ImageCapabilities.P .deps/java/awt/Insets.P \\\n+.deps/java/awt/ItemSelectable.P .deps/java/awt/JobAttributes.P \\\n+.deps/java/awt/KeyEventDispatcher.P \\\n+.deps/java/awt/KeyEventPostProcessor.P \\\n+.deps/java/awt/KeyboardFocusManager.P .deps/java/awt/Label.P \\\n+.deps/java/awt/LayoutManager.P .deps/java/awt/LayoutManager2.P \\\n+.deps/java/awt/List.P .deps/java/awt/MediaTracker.P \\\n+.deps/java/awt/Menu.P .deps/java/awt/MenuBar.P \\\n+.deps/java/awt/MenuComponent.P .deps/java/awt/MenuContainer.P \\\n+.deps/java/awt/MenuItem.P .deps/java/awt/MenuShortcut.P \\\n+.deps/java/awt/PageAttributes.P .deps/java/awt/Paint.P \\\n .deps/java/awt/PaintContext.P .deps/java/awt/Panel.P \\\n .deps/java/awt/Point.P .deps/java/awt/Polygon.P \\\n .deps/java/awt/PopupMenu.P .deps/java/awt/PrintGraphics.P \\\n .deps/java/awt/PrintJob.P .deps/java/awt/Rectangle.P \\\n-.deps/java/awt/RenderingHints.P .deps/java/awt/ScrollPane.P \\\n+.deps/java/awt/RenderingHints.P .deps/java/awt/Robot.P \\\n+.deps/java/awt/ScrollPane.P .deps/java/awt/ScrollPaneAdjustable.P \\\n .deps/java/awt/Scrollbar.P .deps/java/awt/Shape.P \\\n-.deps/java/awt/SystemColor.P .deps/java/awt/TextArea.P \\\n-.deps/java/awt/TextComponent.P .deps/java/awt/TextField.P \\\n+.deps/java/awt/Stroke.P .deps/java/awt/SystemColor.P \\\n+.deps/java/awt/TextArea.P .deps/java/awt/TextComponent.P \\\n+.deps/java/awt/TextField.P .deps/java/awt/TexturePaint.P \\\n .deps/java/awt/Toolkit.P .deps/java/awt/Transparency.P \\\n-.deps/java/awt/Window.P .deps/java/awt/color/ColorSpace.P \\\n-.deps/java/awt/color/ICC_ColorSpace.P \\\n+.deps/java/awt/Window.P .deps/java/awt/color/CMMException.P \\\n+.deps/java/awt/color/ColorSpace.P .deps/java/awt/color/ICC_ColorSpace.P \\\n .deps/java/awt/color/ICC_Profile.P \\\n+.deps/java/awt/color/ProfileDataException.P \\\n .deps/java/awt/datatransfer/Clipboard.P \\\n .deps/java/awt/datatransfer/ClipboardOwner.P \\\n .deps/java/awt/datatransfer/DataFlavor.P \\\n .deps/java/awt/datatransfer/FlavorMap.P \\\n+.deps/java/awt/datatransfer/FlavorTable.P \\\n .deps/java/awt/datatransfer/MimeTypeParseException.P \\\n .deps/java/awt/datatransfer/StringSelection.P \\\n .deps/java/awt/datatransfer/SystemFlavorMap.P \\\n .deps/java/awt/datatransfer/Transferable.P \\\n .deps/java/awt/datatransfer/UnsupportedFlavorException.P \\\n+.deps/java/awt/dnd/DnDConstants.P .deps/java/awt/dnd/DragGestureEvent.P \\\n+.deps/java/awt/dnd/DragGestureListener.P \\\n+.deps/java/awt/dnd/DragGestureRecognizer.P \\\n+.deps/java/awt/dnd/DragSource.P .deps/java/awt/dnd/DragSourceAdapter.P \\\n+.deps/java/awt/dnd/DragSourceContext.P \\\n+.deps/java/awt/dnd/DragSourceDragEvent.P \\\n+.deps/java/awt/dnd/DragSourceEvent.P \\\n+.deps/java/awt/dnd/DragSourceListener.P \\\n+.deps/java/awt/dnd/DragSourceMotionListener.P \\\n+.deps/java/awt/dnd/DropTarget.P \\\n+.deps/java/awt/dnd/InvalidDnDOperationException.P \\\n+.deps/java/awt/dnd/peer/DragSourceContextPeer.P \\\n .deps/java/awt/event/AWTEventListener.P \\\n+.deps/java/awt/event/AWTEventListenerProxy.P \\\n .deps/java/awt/event/ActionEvent.P \\\n .deps/java/awt/event/ActionListener.P \\\n .deps/java/awt/event/AdjustmentEvent.P \\\n@@ -2123,21 +2561,37 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/awt/event/MouseListener.P \\\n .deps/java/awt/event/MouseMotionAdapter.P \\\n .deps/java/awt/event/MouseMotionListener.P \\\n+.deps/java/awt/event/MouseWheelEvent.P \\\n+.deps/java/awt/event/MouseWheelListener.P \\\n .deps/java/awt/event/PaintEvent.P .deps/java/awt/event/TextEvent.P \\\n .deps/java/awt/event/TextListener.P \\\n .deps/java/awt/event/WindowAdapter.P .deps/java/awt/event/WindowEvent.P \\\n+.deps/java/awt/event/WindowFocusListener.P \\\n .deps/java/awt/event/WindowListener.P \\\n-.deps/java/awt/geom/AffineTransform.P .deps/java/awt/geom/Dimension2D.P \\\n+.deps/java/awt/event/WindowStateListener.P \\\n+.deps/java/awt/font/TextHitInfo.P .deps/java/awt/geom/AffineTransform.P \\\n+.deps/java/awt/geom/Arc2D.P .deps/java/awt/geom/Area.P \\\n+.deps/java/awt/geom/CubicCurve2D.P .deps/java/awt/geom/Dimension2D.P \\\n .deps/java/awt/geom/Ellipse2D.P \\\n+.deps/java/awt/geom/FlatteningPathIterator.P \\\n+.deps/java/awt/geom/GeneralPath.P \\\n .deps/java/awt/geom/IllegalPathStateException.P \\\n .deps/java/awt/geom/Line2D.P \\\n .deps/java/awt/geom/NoninvertibleTransformException.P \\\n .deps/java/awt/geom/PathIterator.P .deps/java/awt/geom/Point2D.P \\\n-.deps/java/awt/geom/Rectangle2D.P \\\n+.deps/java/awt/geom/QuadCurve2D.P .deps/java/awt/geom/Rectangle2D.P \\\n .deps/java/awt/geom/RectangularShape.P \\\n-.deps/java/awt/geom/RoundRectangle2D.P \\\n+.deps/java/awt/geom/RoundRectangle2D.P .deps/java/awt/im/InputContext.P \\\n+.deps/java/awt/im/InputMethodHighlight.P \\\n+.deps/java/awt/im/InputMethodRequests.P .deps/java/awt/im/InputSubset.P \\\n+.deps/java/awt/im/spi/InputMethod.P \\\n+.deps/java/awt/im/spi/InputMethodContext.P \\\n+.deps/java/awt/im/spi/InputMethodDescriptor.P \\\n .deps/java/awt/image/AreaAveragingScaleFilter.P \\\n-.deps/java/awt/image/BufferedImage.P .deps/java/awt/image/ColorModel.P \\\n+.deps/java/awt/image/BufferStrategy.P \\\n+.deps/java/awt/image/BufferedImage.P \\\n+.deps/java/awt/image/BufferedImageOp.P \\\n+.deps/java/awt/image/ColorModel.P \\\n .deps/java/awt/image/ComponentColorModel.P \\\n .deps/java/awt/image/ComponentSampleModel.P \\\n .deps/java/awt/image/CropImageFilter.P \\\n@@ -2149,17 +2603,29 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/awt/image/ImageConsumer.P .deps/java/awt/image/ImageFilter.P \\\n .deps/java/awt/image/ImageObserver.P \\\n .deps/java/awt/image/ImageProducer.P \\\n+.deps/java/awt/image/ImagingOpException.P \\\n .deps/java/awt/image/IndexColorModel.P \\\n .deps/java/awt/image/MemoryImageSource.P \\\n .deps/java/awt/image/PackedColorModel.P \\\n .deps/java/awt/image/PixelGrabber.P \\\n .deps/java/awt/image/RGBImageFilter.P .deps/java/awt/image/Raster.P \\\n-.deps/java/awt/image/RasterOp.P \\\n+.deps/java/awt/image/RasterFormatException.P \\\n+.deps/java/awt/image/RasterOp.P .deps/java/awt/image/RenderedImage.P \\\n .deps/java/awt/image/ReplicateScaleFilter.P \\\n .deps/java/awt/image/SampleModel.P \\\n .deps/java/awt/image/SinglePixelPackedSampleModel.P \\\n-.deps/java/awt/image/WritableRaster.P .deps/java/awt/peer/ButtonPeer.P \\\n-.deps/java/awt/peer/CanvasPeer.P \\\n+.deps/java/awt/image/TileObserver.P \\\n+.deps/java/awt/image/VolatileImage.P \\\n+.deps/java/awt/image/WritableRaster.P \\\n+.deps/java/awt/image/WritableRenderedImage.P \\\n+.deps/java/awt/image/renderable/ContextualRenderedImageFactory.P \\\n+.deps/java/awt/image/renderable/ParameterBlock.P \\\n+.deps/java/awt/image/renderable/RenderContext.P \\\n+.deps/java/awt/image/renderable/RenderableImage.P \\\n+.deps/java/awt/image/renderable/RenderableImageOp.P \\\n+.deps/java/awt/image/renderable/RenderableImageProducer.P \\\n+.deps/java/awt/image/renderable/RenderedImageFactory.P \\\n+.deps/java/awt/peer/ButtonPeer.P .deps/java/awt/peer/CanvasPeer.P \\\n .deps/java/awt/peer/CheckboxMenuItemPeer.P \\\n .deps/java/awt/peer/CheckboxPeer.P .deps/java/awt/peer/ChoicePeer.P \\\n .deps/java/awt/peer/ComponentPeer.P .deps/java/awt/peer/ContainerPeer.P \\\n@@ -2174,10 +2640,17 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/awt/peer/ScrollbarPeer.P .deps/java/awt/peer/TextAreaPeer.P \\\n .deps/java/awt/peer/TextComponentPeer.P \\\n .deps/java/awt/peer/TextFieldPeer.P .deps/java/awt/peer/WindowPeer.P \\\n-.deps/java/beans/AppletInitializer.P .deps/java/beans/BeanDescriptor.P \\\n-.deps/java/beans/BeanInfo.P .deps/java/beans/Beans.P \\\n-.deps/java/beans/Customizer.P .deps/java/beans/DesignMode.P \\\n-.deps/java/beans/EventSetDescriptor.P \\\n+.deps/java/awt/print/Book.P .deps/java/awt/print/PageFormat.P \\\n+.deps/java/awt/print/Pageable.P .deps/java/awt/print/Paper.P \\\n+.deps/java/awt/print/Printable.P \\\n+.deps/java/awt/print/PrinterAbortException.P \\\n+.deps/java/awt/print/PrinterException.P \\\n+.deps/java/awt/print/PrinterGraphics.P \\\n+.deps/java/awt/print/PrinterIOException.P \\\n+.deps/java/awt/print/PrinterJob.P .deps/java/beans/AppletInitializer.P \\\n+.deps/java/beans/BeanDescriptor.P .deps/java/beans/BeanInfo.P \\\n+.deps/java/beans/Beans.P .deps/java/beans/Customizer.P \\\n+.deps/java/beans/DesignMode.P .deps/java/beans/EventSetDescriptor.P \\\n .deps/java/beans/ExceptionListener.P \\\n .deps/java/beans/FeatureDescriptor.P \\\n .deps/java/beans/IndexedPropertyDescriptor.P \\\n@@ -2603,6 +3076,29 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/util/zip/ZipInputStream.P \\\n .deps/java/util/zip/ZipOutputStream.P .deps/java/util/zip/natDeflater.P \\\n .deps/java/util/zip/natInflater.P \\\n+.deps/javax/accessibility/Accessible.P \\\n+.deps/javax/accessibility/AccessibleAction.P \\\n+.deps/javax/accessibility/AccessibleBundle.P \\\n+.deps/javax/accessibility/AccessibleComponent.P \\\n+.deps/javax/accessibility/AccessibleContext.P \\\n+.deps/javax/accessibility/AccessibleEditableText.P \\\n+.deps/javax/accessibility/AccessibleExtendedComponent.P \\\n+.deps/javax/accessibility/AccessibleExtendedTable.P \\\n+.deps/javax/accessibility/AccessibleHyperlink.P \\\n+.deps/javax/accessibility/AccessibleHypertext.P \\\n+.deps/javax/accessibility/AccessibleIcon.P \\\n+.deps/javax/accessibility/AccessibleKeyBinding.P \\\n+.deps/javax/accessibility/AccessibleRelation.P \\\n+.deps/javax/accessibility/AccessibleRelationSet.P \\\n+.deps/javax/accessibility/AccessibleResourceBundle.P \\\n+.deps/javax/accessibility/AccessibleRole.P \\\n+.deps/javax/accessibility/AccessibleSelection.P \\\n+.deps/javax/accessibility/AccessibleState.P \\\n+.deps/javax/accessibility/AccessibleStateSet.P \\\n+.deps/javax/accessibility/AccessibleTable.P \\\n+.deps/javax/accessibility/AccessibleTableModelChange.P \\\n+.deps/javax/accessibility/AccessibleText.P \\\n+.deps/javax/accessibility/AccessibleValue.P \\\n .deps/javax/naming/AuthenticationException.P \\\n .deps/javax/naming/AuthenticationNotSupportedException.P \\\n .deps/javax/naming/BinaryRefAddr.P .deps/javax/naming/Binding.P \\\n@@ -2692,6 +3188,234 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/javax/sql/RowSetListener.P .deps/javax/sql/RowSetMetaData.P \\\n .deps/javax/sql/RowSetReader.P .deps/javax/sql/RowSetWriter.P \\\n .deps/javax/sql/XAConnection.P .deps/javax/sql/XADataSource.P \\\n+.deps/javax/swing/AbstractAction.P .deps/javax/swing/AbstractButton.P \\\n+.deps/javax/swing/AbstractCellEditor.P \\\n+.deps/javax/swing/AbstractListModel.P .deps/javax/swing/AbstractSet.P \\\n+.deps/javax/swing/Action.P .deps/javax/swing/ActionMap.P \\\n+.deps/javax/swing/BorderFactory.P .deps/javax/swing/BoundedRangeModel.P \\\n+.deps/javax/swing/Box.P .deps/javax/swing/BoxLayout.P \\\n+.deps/javax/swing/ButtonGroup.P .deps/javax/swing/ButtonModel.P \\\n+.deps/javax/swing/CellEditor.P .deps/javax/swing/CellRendererPane.P \\\n+.deps/javax/swing/ComboBoxEditor.P .deps/javax/swing/ComboBoxModel.P \\\n+.deps/javax/swing/ComponentInputMap.P .deps/javax/swing/DebugGraphics.P \\\n+.deps/javax/swing/DefaultBoundedRangeModel.P \\\n+.deps/javax/swing/DefaultButtonModel.P \\\n+.deps/javax/swing/DefaultCellEditor.P \\\n+.deps/javax/swing/DefaultCellRenderer.P \\\n+.deps/javax/swing/DefaultComboBoxModel.P \\\n+.deps/javax/swing/DefaultDesktopManager.P \\\n+.deps/javax/swing/DefaultFocusManager.P \\\n+.deps/javax/swing/DefaultListCellRenderer.P \\\n+.deps/javax/swing/DefaultListModel.P \\\n+.deps/javax/swing/DefaultListSelectionModel.P \\\n+.deps/javax/swing/DefaultSingleSelectionModel.P \\\n+.deps/javax/swing/DesktopManager.P .deps/javax/swing/FocusManager.P \\\n+.deps/javax/swing/GrayFilter.P .deps/javax/swing/Icon.P \\\n+.deps/javax/swing/ImageIcon.P .deps/javax/swing/InputMap.P \\\n+.deps/javax/swing/InputVerifier.P .deps/javax/swing/JApplet.P \\\n+.deps/javax/swing/JButton.P .deps/javax/swing/JCheckBox.P \\\n+.deps/javax/swing/JCheckBoxMenuItem.P .deps/javax/swing/JColorChooser.P \\\n+.deps/javax/swing/JComboBox.P .deps/javax/swing/JComponent.P \\\n+.deps/javax/swing/JDesktopPane.P .deps/javax/swing/JDialog.P \\\n+.deps/javax/swing/JEditorPane.P .deps/javax/swing/JFileChooser.P \\\n+.deps/javax/swing/JFrame.P .deps/javax/swing/JInternalFrame.P \\\n+.deps/javax/swing/JLabel.P .deps/javax/swing/JLayeredPane.P \\\n+.deps/javax/swing/JList.P .deps/javax/swing/JMenu.P \\\n+.deps/javax/swing/JMenuBar.P .deps/javax/swing/JMenuItem.P \\\n+.deps/javax/swing/JOptionPane.P .deps/javax/swing/JPanel.P \\\n+.deps/javax/swing/JPasswordField.P .deps/javax/swing/JPopupMenu.P \\\n+.deps/javax/swing/JProgressBar.P .deps/javax/swing/JRadioButton.P \\\n+.deps/javax/swing/JRadioButtonMenuItem.P .deps/javax/swing/JRootPane.P \\\n+.deps/javax/swing/JScrollBar.P .deps/javax/swing/JScrollPane.P \\\n+.deps/javax/swing/JSeparator.P .deps/javax/swing/JSlider.P \\\n+.deps/javax/swing/JSplitPane.P .deps/javax/swing/JTabbedPane.P \\\n+.deps/javax/swing/JTable.P .deps/javax/swing/JTextField.P \\\n+.deps/javax/swing/JTextPane.P .deps/javax/swing/JToggleButton.P \\\n+.deps/javax/swing/JToolBar.P .deps/javax/swing/JToolTip.P \\\n+.deps/javax/swing/JTree.P .deps/javax/swing/JViewport.P \\\n+.deps/javax/swing/JWindow.P .deps/javax/swing/KeyStroke.P \\\n+.deps/javax/swing/ListCellRenderer.P .deps/javax/swing/ListModel.P \\\n+.deps/javax/swing/ListSelectionModel.P .deps/javax/swing/LookAndFeel.P \\\n+.deps/javax/swing/MenuElement.P \\\n+.deps/javax/swing/MenuSelectionManager.P \\\n+.deps/javax/swing/MutableComboBoxModel.P \\\n+.deps/javax/swing/OverlayLayout.P .deps/javax/swing/ProgressMonitor.P \\\n+.deps/javax/swing/ProgressMonitorInputStream.P \\\n+.deps/javax/swing/Renderer.P .deps/javax/swing/RepaintManager.P \\\n+.deps/javax/swing/RootPaneContainer.P \\\n+.deps/javax/swing/ScrollPaneConstants.P \\\n+.deps/javax/swing/ScrollPaneLayout.P .deps/javax/swing/Scrollable.P \\\n+.deps/javax/swing/SingleSelectionModel.P \\\n+.deps/javax/swing/SizeRequirements.P .deps/javax/swing/SizeSequence.P \\\n+.deps/javax/swing/SwingConstants.P .deps/javax/swing/SwingUtilities.P \\\n+.deps/javax/swing/Timer.P .deps/javax/swing/ToggleButtonModel.P \\\n+.deps/javax/swing/ToolTipManager.P .deps/javax/swing/UIDefaults.P \\\n+.deps/javax/swing/UIManager.P \\\n+.deps/javax/swing/UnsupportedLookAndFeelException.P \\\n+.deps/javax/swing/ViewportLayout.P .deps/javax/swing/WindowConstants.P \\\n+.deps/javax/swing/border/AbstractBorder.P \\\n+.deps/javax/swing/border/BevelBorder.P \\\n+.deps/javax/swing/border/Border.P \\\n+.deps/javax/swing/border/CompoundBorder.P \\\n+.deps/javax/swing/border/EmptyBorder.P \\\n+.deps/javax/swing/border/EtchedBorder.P \\\n+.deps/javax/swing/border/LineBorder.P \\\n+.deps/javax/swing/border/MatteBorder.P \\\n+.deps/javax/swing/border/TitledBorder.P \\\n+.deps/javax/swing/colorchooser/AbstractColorChooserPanel.P \\\n+.deps/javax/swing/colorchooser/ColorChooserComponentFactory.P \\\n+.deps/javax/swing/colorchooser/ColorSelectionModel.P \\\n+.deps/javax/swing/colorchooser/DefaultColorSelectionModel.P \\\n+.deps/javax/swing/event/AncestorEvent.P \\\n+.deps/javax/swing/event/AncestorListener.P \\\n+.deps/javax/swing/event/CaretEvent.P \\\n+.deps/javax/swing/event/CaretListener.P \\\n+.deps/javax/swing/event/CellEditorListener.P \\\n+.deps/javax/swing/event/ChangeEvent.P \\\n+.deps/javax/swing/event/ChangeListener.P \\\n+.deps/javax/swing/event/DocumentEvent.P \\\n+.deps/javax/swing/event/DocumentListener.P \\\n+.deps/javax/swing/event/EventListenerList.P \\\n+.deps/javax/swing/event/HyperlinkEvent.P \\\n+.deps/javax/swing/event/HyperlinkListener.P \\\n+.deps/javax/swing/event/InternalFrameAdapter.P \\\n+.deps/javax/swing/event/InternalFrameEvent.P \\\n+.deps/javax/swing/event/InternalFrameListener.P \\\n+.deps/javax/swing/event/ListDataEvent.P \\\n+.deps/javax/swing/event/ListDataListener.P \\\n+.deps/javax/swing/event/ListSelectionEvent.P \\\n+.deps/javax/swing/event/ListSelectionListener.P \\\n+.deps/javax/swing/event/MenuDragMouseEvent.P \\\n+.deps/javax/swing/event/MenuDragMouseListener.P \\\n+.deps/javax/swing/event/MenuEvent.P \\\n+.deps/javax/swing/event/MenuKeyEvent.P \\\n+.deps/javax/swing/event/MenuKeyListener.P \\\n+.deps/javax/swing/event/MenuListener.P \\\n+.deps/javax/swing/event/MouseInputAdapter.P \\\n+.deps/javax/swing/event/MouseInputListener.P \\\n+.deps/javax/swing/event/PopupMenuEvent.P \\\n+.deps/javax/swing/event/PopupMenuListener.P \\\n+.deps/javax/swing/event/SwingPropertyChangeSupport.P \\\n+.deps/javax/swing/event/TableColumnModelEvent.P \\\n+.deps/javax/swing/event/TableColumnModelListener.P \\\n+.deps/javax/swing/event/TableModelEvent.P \\\n+.deps/javax/swing/event/TableModelListener.P \\\n+.deps/javax/swing/event/TreeExpansionEvent.P \\\n+.deps/javax/swing/event/TreeExpansionListener.P \\\n+.deps/javax/swing/event/TreeModelEvent.P \\\n+.deps/javax/swing/event/TreeModelListener.P \\\n+.deps/javax/swing/event/TreeSelectionEvent.P \\\n+.deps/javax/swing/event/TreeSelectionListener.P \\\n+.deps/javax/swing/event/TreeWillExpandListener.P \\\n+.deps/javax/swing/event/UndoableEditEvent.P \\\n+.deps/javax/swing/event/UndoableEditListener.P \\\n+.deps/javax/swing/filechooser/FileFilter.P \\\n+.deps/javax/swing/filechooser/FileSystemView.P \\\n+.deps/javax/swing/filechooser/FileView.P \\\n+.deps/javax/swing/plaf/ActionMapUIResource.P \\\n+.deps/javax/swing/plaf/BorderUIResource.P \\\n+.deps/javax/swing/plaf/ButtonUI.P \\\n+.deps/javax/swing/plaf/ColorChooserUI.P \\\n+.deps/javax/swing/plaf/ColorUIResource.P \\\n+.deps/javax/swing/plaf/ComboBoxUI.P \\\n+.deps/javax/swing/plaf/ComponentInputMapUIResource.P \\\n+.deps/javax/swing/plaf/ComponentUI.P \\\n+.deps/javax/swing/plaf/DesktopIconUI.P \\\n+.deps/javax/swing/plaf/DesktopPaneUI.P \\\n+.deps/javax/swing/plaf/DimensionUIResource.P \\\n+.deps/javax/swing/plaf/FileChooserUI.P \\\n+.deps/javax/swing/plaf/FontUIResource.P \\\n+.deps/javax/swing/plaf/IconUIResource.P \\\n+.deps/javax/swing/plaf/InputMapUIResource.P \\\n+.deps/javax/swing/plaf/InsetsUIResource.P \\\n+.deps/javax/swing/plaf/InternalFrameUI.P \\\n+.deps/javax/swing/plaf/LabelUI.P .deps/javax/swing/plaf/ListUI.P \\\n+.deps/javax/swing/plaf/MenuBarUI.P .deps/javax/swing/plaf/MenuItemUI.P \\\n+.deps/javax/swing/plaf/OptionPaneUI.P .deps/javax/swing/plaf/PanelUI.P \\\n+.deps/javax/swing/plaf/PopupMenuUI.P \\\n+.deps/javax/swing/plaf/ProgressBarUI.P \\\n+.deps/javax/swing/plaf/RootPaneUI.P \\\n+.deps/javax/swing/plaf/ScrollBarUI.P \\\n+.deps/javax/swing/plaf/ScrollPaneUI.P \\\n+.deps/javax/swing/plaf/SeparatorUI.P .deps/javax/swing/plaf/SliderUI.P \\\n+.deps/javax/swing/plaf/SplitPaneUI.P \\\n+.deps/javax/swing/plaf/TabbedPaneUI.P \\\n+.deps/javax/swing/plaf/TableHeaderUI.P .deps/javax/swing/plaf/TableUI.P \\\n+.deps/javax/swing/plaf/TextUI.P .deps/javax/swing/plaf/ToolBarUI.P \\\n+.deps/javax/swing/plaf/ToolTipUI.P .deps/javax/swing/plaf/TreeUI.P \\\n+.deps/javax/swing/plaf/UIResource.P .deps/javax/swing/plaf/ViewportUI.P \\\n+.deps/javax/swing/plaf/basic/BasicBorders.P \\\n+.deps/javax/swing/plaf/basic/BasicButtonUI.P \\\n+.deps/javax/swing/plaf/basic/BasicCheckBoxUI.P \\\n+.deps/javax/swing/plaf/basic/BasicDefaults.P \\\n+.deps/javax/swing/plaf/basic/BasicGraphicsUtils.P \\\n+.deps/javax/swing/plaf/basic/BasicIconFactory.P \\\n+.deps/javax/swing/plaf/basic/BasicLabelUI.P \\\n+.deps/javax/swing/plaf/basic/BasicListUI.P \\\n+.deps/javax/swing/plaf/basic/BasicLookAndFeel.P \\\n+.deps/javax/swing/plaf/basic/BasicOptionPaneUI.P \\\n+.deps/javax/swing/plaf/basic/BasicPanelUI.P \\\n+.deps/javax/swing/plaf/basic/BasicRadioButtonUI.P \\\n+.deps/javax/swing/plaf/basic/BasicScrollPaneUI.P \\\n+.deps/javax/swing/plaf/basic/BasicTabbedPaneUI.P \\\n+.deps/javax/swing/plaf/basic/BasicTextUI.P \\\n+.deps/javax/swing/plaf/basic/BasicToggleButtonUI.P \\\n+.deps/javax/swing/plaf/basic/BasicTreeUI.P \\\n+.deps/javax/swing/plaf/basic/BasicViewportUI.P \\\n+.deps/javax/swing/plaf/metal/MetalLookAndFeel.P \\\n+.deps/javax/swing/table/AbstractTableModel.P \\\n+.deps/javax/swing/table/DefaultTableCellRenderer.P \\\n+.deps/javax/swing/table/DefaultTableColumnModel.P \\\n+.deps/javax/swing/table/DefaultTableModel.P \\\n+.deps/javax/swing/table/TableCellEditor.P \\\n+.deps/javax/swing/table/TableCellRenderer.P \\\n+.deps/javax/swing/table/TableColumn.P \\\n+.deps/javax/swing/table/TableColumnModel.P \\\n+.deps/javax/swing/table/TableModel.P \\\n+.deps/javax/swing/text/AbstractDocument.P \\\n+.deps/javax/swing/text/AttributeSet.P \\\n+.deps/javax/swing/text/BadLocationException.P \\\n+.deps/javax/swing/text/Caret.P \\\n+.deps/javax/swing/text/CharacterIterator.P \\\n+.deps/javax/swing/text/ComponentView.P \\\n+.deps/javax/swing/text/DefaultCaret.P \\\n+.deps/javax/swing/text/DefaultEditorKit.P \\\n+.deps/javax/swing/text/Document.P .deps/javax/swing/text/EditorKit.P \\\n+.deps/javax/swing/text/Element.P .deps/javax/swing/text/GapContent.P \\\n+.deps/javax/swing/text/JTextComponent.P .deps/javax/swing/text/Keymap.P \\\n+.deps/javax/swing/text/MutableAttributeSet.P \\\n+.deps/javax/swing/text/PlainDocument.P \\\n+.deps/javax/swing/text/PlainEditorKit.P \\\n+.deps/javax/swing/text/Position.P .deps/javax/swing/text/Segment.P \\\n+.deps/javax/swing/text/Style.P .deps/javax/swing/text/StyledDocument.P \\\n+.deps/javax/swing/text/StyledEditorKit.P \\\n+.deps/javax/swing/text/TextAction.P .deps/javax/swing/text/View.P \\\n+.deps/javax/swing/text/ViewFactory.P \\\n+.deps/javax/swing/tree/AbstractLayoutCache.P \\\n+.deps/javax/swing/tree/DefaultMutableTreeNode.P \\\n+.deps/javax/swing/tree/DefaultTreeCellEditor.P \\\n+.deps/javax/swing/tree/DefaultTreeCellRenderer.P \\\n+.deps/javax/swing/tree/DefaultTreeModel.P \\\n+.deps/javax/swing/tree/DefaultTreeSelectionModel.P \\\n+.deps/javax/swing/tree/ExpandVetoException.P \\\n+.deps/javax/swing/tree/FixedHeightLayoutCache.P \\\n+.deps/javax/swing/tree/MutableTreeNode.P \\\n+.deps/javax/swing/tree/RowMapper.P \\\n+.deps/javax/swing/tree/TreeCellEditor.P \\\n+.deps/javax/swing/tree/TreeCellRenderer.P \\\n+.deps/javax/swing/tree/TreeModel.P .deps/javax/swing/tree/TreeNode.P \\\n+.deps/javax/swing/tree/TreePath.P \\\n+.deps/javax/swing/tree/TreeSelectionModel.P \\\n+.deps/javax/swing/tree/VariableHeightLayoutCache.P \\\n+.deps/javax/swing/undo/AbstractUndoableEdit.P \\\n+.deps/javax/swing/undo/CannotRedoException.P \\\n+.deps/javax/swing/undo/CannotUndoException.P \\\n+.deps/javax/swing/undo/CompoundEdit.P \\\n+.deps/javax/swing/undo/StateEdit.P \\\n+.deps/javax/swing/undo/StateEditable.P \\\n+.deps/javax/swing/undo/UndoManager.P \\\n+.deps/javax/swing/undo/UndoableEdit.P \\\n+.deps/javax/swing/undo/UndoableEditSupport.P \\\n .deps/javax/transaction/HeuristicCommitException.P \\\n .deps/javax/transaction/HeuristicMixedException.P \\\n .deps/javax/transaction/HeuristicRollbackException.P \\"}, {"sha": "9ae12d6f8b99838ce44ab42ca01582c42ed5bd34", "filename": "libjava/gnu/awt/xlib/XGraphicsConfiguration.java", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -12,6 +12,7 @@\n import java.awt.Rectangle;\n import java.awt.Graphics2D;\n import java.awt.Graphics;\n+import java.awt.GraphicsDevice;\n import java.awt.Point;\n import java.awt.Color;\n import java.awt.color.ColorSpace;\n@@ -128,7 +129,8 @@ else if (imageCM instanceof PackedColorModel)\n    * maybe be moved to a different location.]\n    *\n    * @param offset Offset to data. The given offset does not include\n-   * data buffer offset, which will also be added.  */\n+   * data buffer offset, which will also be added.  \n+   */\n   static void attachData(XImage ximage, DataBuffer dataB, int offset)\n   {\n     offset += dataB.getOffset();\n@@ -236,13 +238,47 @@ void calcPseudoColorModels(int bitsPerPixel)\n \t\t\t\t  rmap, gmap, bmap, amap);\n   }\n \n+  /**\n+   * Gets the associated device that this configuration describes.\n+   *\n+   * @return the device\n+   */\n+  public GraphicsDevice getDevice()\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");  \n+  }\n+\n+  /**\n+   * Returns a buffered image optimized to this device, so that blitting can\n+   * be supported in the buffered image.\n+   *\n+   * @param w the width of the buffer\n+   * @param h the height of the buffer\n+   * @return the buffered image, or null if none is supported\n+   */\n   public BufferedImage createCompatibleImage(int width,\n \t\t\t\t\t     int height,\n \t\t\t\t\t     int transparency)\n   {\n     throw new UnsupportedOperationException(\"not implemented\");\n   }\n-    \n+\n+  /**\n+   * Returns a buffered volatile image optimized to this device, so that\n+   * blitting can be supported in the buffered image. Because the buffer is\n+   * volatile, it can be optimized by native graphics accelerators.\n+   *\n+   * @param w the width of the buffer\n+   * @param h the height of the buffer\n+   * @return the buffered image, or null if none is supported\n+   * @see Component#createVolatileImage(int, int)\n+   * @since 1.4\n+   */\n+  public VolatileImage createCompatibleVolatileImage(int w, int h)\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n   /**\n    * FIXME: I'm not sure which color model that should be returned here.\n    */"}, {"sha": "0c199b2b7f73744fd4327e5f8ead4cb0c607b2e3", "filename": "libjava/gnu/awt/xlib/XToolkit.java", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fgnu%2Fawt%2Fxlib%2FXToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fgnu%2Fawt%2Fxlib%2FXToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXToolkit.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -9,12 +9,16 @@\n package gnu.awt.xlib;\n \n import java.awt.*;\n+import java.awt.dnd.*;\n+import java.awt.dnd.peer.*;\n+import java.awt.im.*;\n import java.awt.peer.*;\n import java.awt.image.ImageProducer;\n import java.awt.image.ImageObserver;\n import java.net.*;\n import java.awt.datatransfer.Clipboard;\n import java.util.Properties;\n+import java.util.Map;\n \n import gnu.gcj.xlib.Display;\n import gnu.gcj.xlib.Screen;\n@@ -318,22 +322,24 @@ XGraphicsConfiguration getDefaultXGraphicsConfiguration()\n     return defaultConfig;\n   }\n \n+  public DragSourceContextPeer\n+    createDragSourceContextPeer(DragGestureEvent dge)\n+    throws InvalidDnDOperationException\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");  \n+  }\n \n-    /*\n-    public DragSourceContextPeer\n-\tcreateDragSourceContextPeer(DragGestureEvent dge)\n-\tthrows InvalidDnDOperationException;\n-\n-    public DragGestureRecognizer\n-\tcreateDragGestureRecognizer(Class abstractRecognizerClass,\n-\t\t\t\t    DragSource ds, Component c,\n-\t\t\t\t    int srcActions, DragGestureListener dgl) {\n-\tthrow new UnsupportedOperationException(\"not implemented\");\n-    }\n-    */\n+  public DragGestureRecognizer\n+    createDragGestureRecognizer(Class abstractRecognizerClass,\n+\t\t\t\tDragSource ds, Component c,\n+\t\t\t\tint srcActions, DragGestureListener dgl)\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n \n     \n-    /*\n-    public Map mapInputMethodHighlight(InputMethodHighlight highlight);\n-    */\n+  public Map mapInputMethodHighlight(InputMethodHighlight highlight)\n+  {\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n }"}, {"sha": "1c253cb41a606b66c957fceac3e352afa8f9d4e6", "filename": "libjava/java/awt/AWTError.java", "status": "modified", "additions": 21, "deletions": 19, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FAWTError.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FAWTError.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTError.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,5 +1,5 @@\n /* AWTError.java -- A serious AWT error occurred.\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,24 +39,26 @@\n package java.awt;\n \n /**\n-  * This error is thrown when a critical AWT error occurs.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n+ * This error is thrown when a critical Abstract Window Toolkit (AWT) error\n+ * occurs.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @status updated to 1.4\n+ */\n public class AWTError extends Error\n {\n+  /**\n+   * Compatible with JDK 1.0+.\n+   */\n+  private static final long serialVersionUID = -1819846354050686206L;\n \n-/**\n-  * Initializes a new instance of <code>AWTError</code> with the specified\n-  * descriptive error message.\n-  *\n-  * @param message The descriptive error message.\n-  */\n-public\n-AWTError(String message)\n-{\n-  super(message);\n-}\n-\n-} // class AWTError \n-\n+  /**\n+   * Create a new instance with the specified descriptive error message.\n+   *\n+   * @param message the descriptive error message\n+   */\n+  public AWTError(String message)\n+  {\n+    super(message);\n+  }\n+} // class AWTError"}, {"sha": "41cdad53fd6ecb06e5164d7fdc60d1cb8f427247", "filename": "libjava/java/awt/AWTEvent.java", "status": "modified", "additions": 144, "deletions": 83, "changes": 227, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FAWTEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FAWTEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 1999, 2000, 2002  Free Software Foundation\n+/* AWTEvent.java -- the root event in AWT\n+   Copyright (C) 1999, 2000, 2002 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -37,123 +38,169 @@\n \n package java.awt;\n \n-/* Written using on-line Java 2 Platform Standard Edition v1.3 API \n- * Specification, as well as \"The Java Class Libraries\", 2nd edition \n- * (Addison-Wesley, 1998).\n- * Status:  Believed complete and correct, except for the java.awt.Event \n- * compatibility constructor.\n- */\n+import java.util.EventObject;\n \n /**\n  * AWTEvent is the root event class for all AWT events in the JDK 1.1 event \n- * model. It supersedes the Event class from JDK 1.0.\n+ * model. It supersedes the Event class from JDK 1.0. Subclasses outside of\n+ * the java.awt package should have IDs greater than RESERVED_ID_MAX.\n+ *\n+ * <p>Event masks defined here are used by components in\n+ * <code>enableEvents</code> to select event types not selected by registered\n+ * listeners. Event masks are appropriately set when registering on\n+ * components.\n+ *\n  * @author Warren Levy  <warrenl@cygnus.com>\n- * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @since 1.1\n+ * @status updated to 1.4\n  */\n-public abstract class AWTEvent extends java.util.EventObject\n+public abstract class AWTEvent extends EventObject\n {\n   /**\n-   * @serial Indicates whether or not this event has been consumed.\n+   * Compatible with JDK 1.1+.\n    */\n-  protected boolean consumed;\n+  private static final long serialVersionUID = -1825314779160409405L;\n \n   /**\n-   * @serial The identifier number of this event.\n+   * The ID of the event.\n+   *\n+   * @see #getID()\n+   * @see #AWTEvent(Object, int)\n+   * @serial the identifier number of this event\n    */\n   protected int id;\n \n   /**\n-  * Mask for selecting component events.\n-  */\n-  public static final long COMPONENT_EVENT_MASK = 0x001;\n+   * Indicates if the event has been consumed. False mean it is passed to\n+   * the peer, true means it has already been processed. Semantic events\n+   * generated by low-level events always have the value true.\n+   *\n+   * @see #consume()\n+   * @see #isConsumed()\n+   * @serial whether the event has been consumed\n+   */\n+  protected boolean consumed;\n \n   /**\n-  * Mask for selecting container events.\n-  */\n-  public static final long CONTAINER_EVENT_MASK = 0x002;\n+   * Who knows? It's in the serial version.\n+   *\n+   * @serial No idea what this is for.\n+   */\n+  byte[] bdata;\n+\n+  /** Mask for selecting component events. */\n+  public static final long COMPONENT_EVENT_MASK = 0x00001;\n+\n+  /** Mask for selecting container events. */\n+  public static final long CONTAINER_EVENT_MASK = 0x00002;\n+\n+  /** Mask for selecting component focus events. */\n+  public static final long FOCUS_EVENT_MASK = 0x00004;\n+\n+  /** Mask for selecting keyboard events. */\n+  public static final long KEY_EVENT_MASK = 0x00008;\n+\n+  /** Mask for mouse button events. */\n+  public static final long MOUSE_EVENT_MASK = 0x00010;\n+\n+  /** Mask for mouse motion events. */\n+  public static final long MOUSE_MOTION_EVENT_MASK = 0x00020;\n+\n+  /** Mask for window events. */\n+  public static final long WINDOW_EVENT_MASK = 0x00040;\n+\n+  /** Mask for action events. */\n+  public static final long ACTION_EVENT_MASK = 0x00080;\n+\n+  /** Mask for adjustment events. */\n+  public static final long ADJUSTMENT_EVENT_MASK = 0x00100;\n+\n+  /** Mask for item events. */\n+  public static final long ITEM_EVENT_MASK = 0x00200;\n+\n+  /** Mask for text events. */\n+  public static final long TEXT_EVENT_MASK = 0x00400;\n \n   /**\n-  * Mask for selecting component focus events.\n-  */\n-  public static final long FOCUS_EVENT_MASK = 0x004;\n+   * Mask for input method events.\n+   * @since 1.3\n+   */\n+  public static final long INPUT_METHOD_EVENT_MASK = 0x00800;\n \n   /**\n-  * Mask for selecting keyboard events.\n-  */\n-  public static final long KEY_EVENT_MASK = 0x008;\n+   * Mask if input methods are enabled. Package visible only.\n+   */\n+  static final long INPUT_ENABLED_EVENT_MASK = 0x01000;\n \n   /**\n-  * Mask for mouse button events.\n-  */\n-  public static final long MOUSE_EVENT_MASK = 0x010;\n+   * Mask for paint events.\n+   * @since 1.3\n+   */\n+  public static final long PAINT_EVENT_MASK = 0x02000;\n \n   /**\n-  * Mask for mouse motion events.\n-  */\n-  public static final long MOUSE_MOTION_EVENT_MASK = 0x020;\n+   * Mask for invocation events.\n+   * @since 1.3\n+   */\n+  public static final long INVOCATION_EVENT_MASK = 0x04000;\n \n   /**\n-  * Mask for window events.\n-  */\n-  public static final long WINDOW_EVENT_MASK = 0x040;\n+   * Mask for hierarchy events.\n+   * @since 1.3\n+   */\n+  public static final long HIERARCHY_EVENT_MASK = 0x08000;\n \n   /**\n-  * Mask for action events.\n-  */\n-  public static final long ACTION_EVENT_MASK = 0x080;\n+   * Mask for hierarchy bounds events.\n+   * @since 1.3\n+   */\n+  public static final long HIERARCHY_BOUNDS_EVENT_MASK = 0x10000;\n \n   /**\n-  * Mask for adjustment events.\n-  */\n-  public static final long ADJUSTMENT_EVENT_MASK = 0x100;\n+   * Mask for mouse wheel events.\n+   * @since 1.4\n+   */\n+  public static final long MOUSE_WHEEL_EVENT_MASK = 0x20000;\n \n   /**\n-  * Mask for item events.\n-  */\n-  public static final long ITEM_EVENT_MASK = 0x200;\n+   * Mask for window state events.\n+   * @since 1.4\n+   */\n+  public static final long WINDOW_STATE_EVENT_MASK = 0x40000;\n \n   /**\n-  * Mask for text events.\n-  */\n-  public static final long TEXT_EVENT_MASK = 0x400;\n+   * Mask for window focus events.\n+   * @since 1.4\n+   */\n+  public static final long WINDOW_FOCUS_EVENT_MASK = 0x80000;\n \n   /**\n   * This is the highest number for event ids that are reserved for use by\n-  * the AWT system itself.\n+  * the AWT system itself. Subclasses outside of java.awt should use higher\n+  * ids.\n   */\n   public static final int RESERVED_ID_MAX = 1999;\n \n-  public static final long INPUT_METHOD_EVENT_MASK = 1 << 11;\n-\n-  /* Additional event selection masks from JDK 1.3 javadocs */\n-  public static final long PAINT_EVENT_MASK            = 1 << 13,\n-\t\t\t   INVOCATION_EVENT_MASK       = 1 << 14,\n-\t\t\t   HIERARCHY_EVENT_MASK        = 1 << 15,\n-\t\t\t   HIERARCHY_BOUNDS_EVENT_MASK = 1 << 16;\n-\n+\f\n   /**\n-   * Initializes a new instance of <code>AWTEvent</code> from the\n-   * specified Java 1.0 event object.\n-   *\n-   * @param event The Java 1.0 event to initialize from.\n-   *\n-   *\n-   * Removed this method because we no longer support Java 1.0\n+   * Initializes a new AWTEvent from the old Java 1.0 event object.\n    *\n+   * @param event the old-style event\n+   * @throws NullPointerException if event is null\n    */\n   public AWTEvent(Event event)\n   {\n-    // FIXME??\n-    super(event.target);\n-    this.id = event.id;\n+    this(event.target, event.id);\n+    consumed = event.consumed;\n   }\n \n   /**\n-   * Initializes a new instance of <code>AWTEvent</code> with the specified\n-   * source and id.\n+   * Create an event on the specified source object and id.\n    *\n-   * @param source The object that caused the event.\n-   * @param id The event id.\n+   * @param source the object that caused the event\n+   * @param id the event id\n+   * @throws IllegalArgumentException if source is null\n    */\n   public AWTEvent(Object source, int id)\n   {\n@@ -162,33 +209,48 @@ public AWTEvent(Object source, int id)\n   }\n \n   /**\n-   * Returns the id number of this event.\n+   * Retarget the event, such as converting a heavyweight component to a\n+   * lightweight child of the original. This is not for general use, but\n+   * is for event targeting systems like KeyboardFocusManager.\n    *\n-   * @return The id number of this event.\n+   * @param source the new source\n+   */\n+  public void setSource(Object source)\n+  {\n+    this.source = source;\n+  }\n+\n+  /**\n+   * Returns the event type id.\n+   *\n+   * @return the id number of this event\n    */\n   public int getID()\n   {\n     return id;\n   }\n \n   /**\n-   * Returns a string representation of this event.\n+   * Returns a string representation of this event. This is in the format\n+   * <code>getClass().getName() + '[' + paramString() + \"] on \"\n+   * + source</code>.\n    *\n-   * @return A string representation of this event.\n+   * @return a string representation of this event\n    */\n-  public String paramString ()\n+  public String toString()\n   {\n-    return \"\";\n+    return getClass().getName() + \"[\" + paramString() + \"] on \" + source;\n   }\n \n   /**\n-   * Returns a string representation of this event.\n+   * Returns a string representation of the state of this event. It may be\n+   * empty, but must not be null; it is implementation defined.\n    *\n-   * @return A string representation of this event.\n+   * @return a string representation of this event\n    */\n-  public String toString ()\n+  public String paramString()\n   {\n-    return getClass().getName() + \"[\" + paramString() + \"] on \" + source;\n+    return \"\";\n   }\n \n   /**\n@@ -201,14 +263,13 @@ protected void consume()\n   }\n \n   /**\n-   * Tests whether not not this event has been consumed.  A consumed event\n+   * Tests whether not not this event has been consumed. A consumed event\n    * is not processed in the default manner.\n    *\n-   * @return <code>true</code> if this event has been consumed, \n-   * <code>false</code> otherwise.\n+   * @return true if this event has been consumed\n    */\n   protected boolean isConsumed()\n   {\n     return consumed;\n   }\n-}\n+} // class AWTEvent"}, {"sha": "58950ef0b98ba62171e372152a99416af2d3893f", "filename": "libjava/java/awt/AWTEventMulticaster.java", "status": "modified", "additions": 755, "deletions": 486, "changes": 1241, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FAWTEventMulticaster.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FAWTEventMulticaster.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTEventMulticaster.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 1999, 2000, 2002  Free Software Foundation\n+/* AWTEventMulticaster.java -- allows multicast chaining of listeners\n+   Copyright (C) 1999, 2000, 2002 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -37,133 +38,120 @@\n \n package java.awt;\n \n-import java.awt.event.*;\n-import java.util.EventListener;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.AdjustmentEvent;\n+import java.awt.event.AdjustmentListener;\n+import java.awt.event.ComponentEvent;\n+import java.awt.event.ComponentListener;\n+import java.awt.event.ContainerEvent;\n+import java.awt.event.ContainerListener;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.FocusListener;\n+import java.awt.event.HierarchyBoundsListener;\n+import java.awt.event.HierarchyEvent;\n+import java.awt.event.HierarchyListener;\n+import java.awt.event.InputMethodEvent;\n+import java.awt.event.InputMethodListener;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.ItemListener;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.KeyListener;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.MouseListener;\n+import java.awt.event.MouseMotionListener;\n+import java.awt.event.MouseWheelEvent;\n+import java.awt.event.MouseWheelListener;\n+import java.awt.event.TextEvent;\n+import java.awt.event.TextListener;\n+import java.awt.event.WindowEvent;\n+import java.awt.event.WindowFocusListener;\n+import java.awt.event.WindowListener;\n+import java.awt.event.WindowStateListener;\n+import java.io.IOException;\n import java.io.ObjectOutputStream;\n-\n-/* Written using on-line Java 2 Platform Standard Edition v1.3 API \n- * Specification, as well as \"The Java Class Libraries\", 2nd edition \n- * (Addison-Wesley, 1998).\n- * Status:  Believed complete and correct to J2SE 1.3, except for \n- * serialization support methods, save() and saveInternal(), which are \n- * stubbed.\n- */\n+import java.io.Serializable;\n+import java.lang.reflect.Array;\n+import java.util.ArrayList;\n+import java.util.EventListener;\n \n /**\n-  * This class is used to implement a chain of event handlers.  Dispatching\n-  * using this class is thread safe.  Here is a quick example of how to\n-  * add and delete listeners using this class.  For this example, we will\n-  * assume are firing <code>AdjustableEvent</code>'s.  However, this \n-  * same approach is useful for all events in the <code>java.awt.event</code>\n-  * package, and more if this class is subclassed.\n-  * <p>\n-  * <code> \n-  * AdjustmentListener al;\n-  * \n-  * public void \n-  * addAdjustmentListener(AdjustmentListener listener)\n-  * {\n-  *   al = AWTEventMulticaster.add(al, listener);\n-  * }\n-  *\n-  * public void\n-  * removeAdjustmentListener(AdjustmentListener listener)\n-  * {\n-  *   al = AWTEventMulticaster.remove(al, listener);\n-  * }\n-  * </code>\n-  * <p>\n-  * When it come time to process an event, simply call <code>al</code>,\n-  * assuming it is not <code>null</code>.\n-  * <p>\n-  * The first time <code>add</code> is called it is passed\n-  * <code>null</code> and <code>listener</code> as its arguments.  This\n-  * starts building the chain.  This class returns <code>listener</code>\n-  * which becomes the new <code>al</code>.  The next time, <code>add</code>\n-  * is called with <code>al</code> and <code>listener</code> and the\n-  * new listener is then chained to the old.\n-  *\n-  * @author Bryce McKinlay\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n-public class AWTEventMulticaster implements ComponentListener, \n-  ContainerListener, FocusListener, KeyListener, MouseListener,\n-  MouseMotionListener, WindowListener, ActionListener, ItemListener, \n-  AdjustmentListener, TextListener, InputMethodListener, HierarchyListener, \n-  HierarchyBoundsListener\n+ * This class is used to implement a chain of event handlers.  Dispatching\n+ * using this class is thread safe.  Here is a quick example of how to\n+ * add and delete listeners using this class.  For this example, we will\n+ * assume are firing <code>AdjustmentEvent</code>'s.  However, this\n+ * same approach is useful for all events in the <code>java.awt.event</code>\n+ * package, and more if this class is subclassed.\n+ *\n+ * <p><code>\n+ * AdjustmentListener al;\n+ * public void addAdjustmentListener(AdjustmentListener listener)\n+ * {\n+ *   al = AWTEventMulticaster.add(al, listener);\n+ * }\n+ * public void removeAdjustmentListener(AdjustmentListener listener)\n+ * {\n+ *   al = AWTEventMulticaster.remove(al, listener);\n+ * }\n+ * </code>\n+ *\n+ * <p>When it come time to process an event, simply call <code>al</code>,\n+ * assuming it is not <code>null</code>, and all listeners in the chain will\n+ * be fired.\n+ *\n+ * <p>The first time <code>add</code> is called it is passed\n+ * <code>null</code> and <code>listener</code> as its arguments.  This\n+ * starts building the chain.  This class returns <code>listener</code>\n+ * which becomes the new <code>al</code>.  The next time, <code>add</code>\n+ * is called with <code>al</code> and <code>listener</code> and the\n+ * new listener is then chained to the old.\n+ *\n+ * @author Bryce McKinlay\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @since 1.1\n+ * @status updated to 1.4\n+ */\n+public class AWTEventMulticaster\n+  implements ComponentListener, ContainerListener, FocusListener, KeyListener,\n+             MouseListener, MouseMotionListener, WindowListener,\n+             WindowFocusListener, WindowStateListener, ActionListener,\n+             ItemListener, AdjustmentListener, TextListener,\n+             InputMethodListener, HierarchyListener, HierarchyBoundsListener,\n+             MouseWheelListener\n {\n   /**\n    * A variable in the event chain.\n    */\n   protected final EventListener a;\n \n   /**\n-   * A variable in the event chain\n+   * A variable in the event chain.\n    */\n   protected final EventListener b;\n \n   /**\n    * Initializes a new instance of <code>AWTEventMulticaster</code> with\n-   * the specified event listener parameters.\n+   * the specified event listener parameters. The parameters should not be\n+   * null, although it is not required to enforce this with a\n+   * NullPointerException.\n    *\n-   * @param a The \"a\" listener object.\n-   * @param b The \"b\" listener object.\n+   * @param a the \"a\" listener object\n+   * @param b the \"b\" listener object\n    */\n-  protected AWTEventMulticaster(EventListener a,\n-                        \tEventListener b)\n+  protected AWTEventMulticaster(EventListener a, EventListener b)\n   {\n     this.a = a;\n     this.b = b;\n   }\n \n   /**\n-   * Chain <code>EventListener</code> b to a.\n-   *\n-   * @param a - Listener to chain to.\n-   * @param b - Listener to chain.\n-   *\n-   * @return Latest entry in the chain.\n-   */\n-  protected static EventListener addInternal(EventListener a, EventListener b)\n-  {\n-    if (a == null)\n-      return b;\n-    else if (b == null)\n-      return a;\n-    else return new AWTEventMulticaster(a, b);\n-  }\n-\n-  /**\n-   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n-   *\n-   * @param lis The listener to remove <code>old</code> from.\n-   * @param old The listener to remove.\n-   *\n-   * @return The resulting listener after the remove operation.\n-   */\n-  protected static EventListener removeInternal(EventListener l, \n-\t\t\t\t\t\tEventListener oldl)\n-  {\n-    if (l == oldl)\n-      return null;\n-    else if (l instanceof AWTEventMulticaster)\n-      {\n-\tAWTEventMulticaster mc = (AWTEventMulticaster) l;\n-\treturn mc.remove(oldl);\n-      }\n-    return l;\n-  }\n-\n-  /**\n-   * Removes the specified object from this multicaster object.  If the\n-   * object to remove is not part of this multicaster, then the remove\n-   * method on the parent multicaster (if it exists) is called and a \n-   * new multicaster object is returned based on that object and this\n-   * multicaster's non-parent object.\n-   *\n-   * @param old The object to remove from this multicaster.\n+   * Removes one instance of the specified listener from this multicaster\n+   * chain. This descends recursively if either child is a multicaster, and\n+   * returns a multicaster chain with the old listener removed.\n    *\n-   * @return The resulting multicaster with the specified listener removed.\n+   * @param oldl the object to remove from this multicaster\n+   * @return the resulting multicaster with the specified listener removed\n    */\n   protected EventListener remove(EventListener oldl)\n   {\n@@ -172,505 +160,444 @@ protected EventListener remove(EventListener oldl)\n       return b;\n     if (b == oldl)\n       return a;\n-\n     // If a and/or b are Multicaster's, search them recursively.\n     if (a instanceof AWTEventMulticaster)\n       {\n-        AWTEventMulticaster mc = (AWTEventMulticaster) a;\n-\tEventListener newa = mc.remove(oldl);\n-\tif (newa != a)\n-\t  return new AWTEventMulticaster (newa, b);\n-      }    \n+        EventListener newa = ((AWTEventMulticaster) a).remove(oldl);\n+        if (newa != a)\n+          return new AWTEventMulticaster(newa, b);\n+      }\n     if (b instanceof AWTEventMulticaster)\n       {\n-        AWTEventMulticaster mc = (AWTEventMulticaster) a;\n-\tEventListener newb = mc.remove(oldl);\n-\tif (newb != b)\n-\t  return new AWTEventMulticaster (a, newb);\n+        EventListener newb = ((AWTEventMulticaster) b).remove(oldl);\n+        if (newb != b)\n+          return new AWTEventMulticaster(a, newb);\n       }\n-\n     // oldl was not found.\n     return this;\n   }\n \n   /**\n-   * Chain <code>ActionListener</code> b to a.\n-   *\n-   * @param a - Listener to chain to.\n-   * @param b - Listener to chain.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return Latest entry in the chain.\n+   * @param event the event to handle\n    */\n-  public static ActionListener add(ActionListener a, ActionListener b)\n+  public void componentResized(ComponentEvent e)\n   {\n-    return (ActionListener) addInternal(a, b);\n+    ((ComponentListener) a).componentResized(e);\n+    ((ComponentListener) b).componentResized(e);\n   }\n \n   /**\n-   * Chain <code>AdjustmentListener</code> b to a.\n-   *\n-   * @param a - Listener to chain to.\n-   * @param b - Listener to chain.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return Latest entry in the chain.\n+   * @param event the event to handle\n    */\n-  public static AdjustmentListener add(AdjustmentListener a, \n-\t\t\t\t       AdjustmentListener b)\n+  public void componentMoved(ComponentEvent e)\n   {\n-    return (AdjustmentListener) addInternal(a, b);\n-  }\t\t\t\t       \n+    ((ComponentListener) a).componentMoved(e);\n+    ((ComponentListener) b).componentMoved(e);\n+  }\n \n   /**\n-   * Chain <code>ComponentListener</code> b to a.\n-   *\n-   * @param a - Listener to chain to.\n-   * @param b - Listener to chain.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return Latest entry in the chain.\n+   * @param event the event to handle\n    */\n-  public static ComponentListener add(ComponentListener a, ComponentListener b)\n+  public void componentShown(ComponentEvent e)\n   {\n-    return (ComponentListener) addInternal(a, b);\n+    ((ComponentListener) a).componentShown(e);\n+    ((ComponentListener) b).componentShown(e);\n   }\n \n   /**\n-   * Chain <code>ContainerListener</code> b to a.\n-   *\n-   * @param a - Listener to chain to.\n-   * @param b - Listener to chain.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return Latest entry in the chain.\n+   * @param event the event to handle\n    */\n-  public static ContainerListener add(ContainerListener a, ContainerListener b)\n+  public void componentHidden(ComponentEvent e)\n   {\n-    return (ContainerListener) addInternal(a, b);\n+    ((ComponentListener) a).componentHidden(e);\n+    ((ComponentListener) b).componentHidden(e);\n   }\n \n   /**\n-   * Chain <code>FocusListener</code> b to a.\n-   *\n-   * @param a - Listener to chain to.\n-   * @param b - Listener to chain.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return Latest entry in the chain.\n+   * @param event the event to handle\n    */\n-  public static FocusListener add(FocusListener a, FocusListener b) \n-  {\n-    return (FocusListener) addInternal(a, b);\n-  }\n-\n-  public static HierarchyBoundsListener add(HierarchyBoundsListener a, \n-\t\t\t\t\t    HierarchyBoundsListener b)\n-  {\n-    return (HierarchyBoundsListener) addInternal(a, b);\n-  }\n-\n-  public static HierarchyListener add(HierarchyListener a, HierarchyListener b)\n-  {\n-    return (HierarchyListener) addInternal(a, b);\n-  }\n-\n-  public static InputMethodListener add(InputMethodListener a, \n-\t\t\t\t\tInputMethodListener b)\n+  public void componentAdded(ContainerEvent e)\n   {\n-    return (InputMethodListener) addInternal(a, b);\n+    ((ContainerListener) a).componentAdded(e);\n+    ((ContainerListener) b).componentAdded(e);\n   }\n \n   /**\n-   * Chain <code>ItemListener</code> b to a.\n-   *\n-   * @param a - Listener to chain to.\n-   * @param b - Listener to chain.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return Latest entry in the chain.\n+   * @param event the event to handle\n    */\n-  public static ItemListener add(ItemListener a, ItemListener b)\n+  public void componentRemoved(ContainerEvent e)\n   {\n-    return (ItemListener) addInternal(a, b);\n+    ((ContainerListener) a).componentRemoved(e);\n+    ((ContainerListener) b).componentRemoved(e);\n   }\n \n   /**\n-   * Chain <code>KeyListener</code> b to a.\n-   *\n-   * @param a - Listener to chain to.\n-   * @param b - Listener to chain.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return Latest entry in the chain.\n+   * @param event the event to handle\n    */\n-  public static KeyListener add(KeyListener a, KeyListener b)\n+  public void focusGained(FocusEvent e)\n   {\n-    return (KeyListener) addInternal(a, b);\n+    ((FocusListener) a).focusGained(e);\n+    ((FocusListener) b).focusGained(e);\n   }\n \n   /**\n-   * Chain <code>MouseListener</code> b to a.\n-   *\n-   * @param a - Listener to chain to.\n-   * @param b - Listener to chain.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return Latest entry in the chain.\n+   * @param event the event to handle\n    */\n-  public static MouseListener add(MouseListener a, MouseListener b)\n+  public void focusLost(FocusEvent e)\n   {\n-    return (MouseListener) addInternal(a, b);\n+    ((FocusListener) a).focusLost(e);\n+    ((FocusListener) b).focusLost(e);\n   }\n \n   /**\n-   * Chain <code>MouseMotionListener</code> b to a.\n-   *\n-   * @param a - Listener to chain to.\n-   * @param b - Listener to chain.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return Latest entry in the chain.\n+   * @param event the event to handle\n    */\n-  public static MouseMotionListener add(MouseMotionListener a, \n-\t\t\t\t\tMouseMotionListener b)\n+  public void keyTyped(KeyEvent e)\n   {\n-    return (MouseMotionListener) addInternal(a, b);\n+    ((KeyListener) a).keyTyped(e);\n+    ((KeyListener) b).keyTyped(e);\n   }\n \n   /**\n-   * Chain <code>AdjustmentListener</code> b to a.\n-   *\n-   * @param a - Listener to chain to.\n-   * @param b - Listener to chain.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return Latest entry in the chain.\n+   * @param event the event to handle\n    */\n-  public static TextListener add(TextListener a, TextListener b)\n+  public void keyPressed(KeyEvent e)\n   {\n-    return (TextListener) addInternal(a, b);\n+    ((KeyListener) a).keyPressed(e);\n+    ((KeyListener) b).keyPressed(e);\n   }\n \n   /**\n-   * Chain <code>WindowListener</code> b to a.\n-   *\n-   * @param a - Listener to chain to.\n-   * @param b - Listener to chain.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return Latest entry in the chain.\n+   * @param event the event to handle\n    */\n-  public static WindowListener add(WindowListener a, WindowListener b)\n+  public void keyReleased(KeyEvent e)\n   {\n-    return (WindowListener) addInternal(a, b);\n+    ((KeyListener) a).keyReleased(e);\n+    ((KeyListener) b).keyReleased(e);\n   }\n \n   /**\n-   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n-   *\n-   * @param lis The listener to remove <code>old</code> from.\n-   * @param old The listener to remove.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return The resulting listener after the remove operation.\n+   * @param event the event to handle\n    */\n-  public static ActionListener remove(ActionListener l, ActionListener oldl)\n+  public void mouseClicked(MouseEvent e)\n   {\n-    return (ActionListener) removeInternal(l, oldl);\n+    ((MouseListener) a).mouseClicked(e);\n+    ((MouseListener) b).mouseClicked(e);\n   }\n \n   /**\n-   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n-   *\n-   * @param lis The listener to remove <code>old</code> from.\n-   * @param old The listener to remove.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return The resulting listener after the remove operation.\n+   * @param event the event to handle\n    */\n-  public static AdjustmentListener remove(AdjustmentListener l, \n-\t\t\t\t\t  AdjustmentListener oldl) \n+  public void mousePressed(MouseEvent e)\n   {\n-    return (AdjustmentListener) removeInternal(l, oldl);\n+    ((MouseListener) a).mousePressed(e);\n+    ((MouseListener) b).mousePressed(e);\n   }\n \n   /**\n-   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n-   *\n-   * @param lis The listener to remove <code>old</code> from.\n-   * @param old The listener to remove.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return The resulting listener after the remove operation.\n+   * @param event the event to handle\n    */\n-  public static ComponentListener remove(ComponentListener l, \n-\t\t\t\t\t ComponentListener oldl) \n+  public void mouseReleased(MouseEvent e)\n   {\n-    return (ComponentListener) removeInternal(l, oldl);\n+    ((MouseListener) a).mouseReleased(e);\n+    ((MouseListener) b).mouseReleased(e);\n   }\n \n   /**\n-   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n-   *\n-   * @param lis The listener to remove <code>old</code> from.\n-   * @param old The listener to remove.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return The resulting listener after the remove operation.\n+   * @param event the event to handle\n    */\n-  public static ContainerListener remove(ContainerListener l, \n-\t\t\t\t\t ContainerListener oldl) \n+  public void mouseEntered(MouseEvent e)\n   {\n-    return (ContainerListener) removeInternal(l, oldl);\n+    ((MouseListener) a).mouseEntered(e);\n+    ((MouseListener) b).mouseEntered(e);\n   }\n \n   /**\n-   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n-   *\n-   * @param lis The listener to remove <code>old</code> from.\n-   * @param old The listener to remove.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return The resulting listener after the remove operation.\n+   * @param event the event to handle\n    */\n-  public static FocusListener remove(FocusListener l, FocusListener oldl) \n-  {\n-    return (FocusListener) removeInternal(l, oldl);\n-  }\n-\n-  public static HierarchyBoundsListener remove(HierarchyBoundsListener l,\n-                \t\t\t       HierarchyBoundsListener oldl) \n-  {\n-    return (HierarchyBoundsListener) removeInternal(l, oldl);\n-  }\n-\n-  public static HierarchyListener remove(HierarchyListener l, \n-\t\t\t\t\t HierarchyListener oldl) \n-  {\n-    return (HierarchyListener) removeInternal(l, oldl);\n-  }\n-\n-  public static InputMethodListener remove(InputMethodListener l, \n-\t\t\t\t\t   InputMethodListener oldl) \n+  public void mouseExited(MouseEvent e)\n   {\n-    return (InputMethodListener) removeInternal(l, oldl);\n+    ((MouseListener) a).mouseExited(e);\n+    ((MouseListener) b).mouseExited(e);\n   }\n \n   /**\n-   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n-   *\n-   * @param lis The listener to remove <code>old</code> from.\n-   * @param old The listener to remove.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return The resulting listener after the remove operation.\n+   * @param event the event to handle\n    */\n-  public static ItemListener remove(ItemListener l, ItemListener oldl) \n+  public void mouseDragged(MouseEvent e)\n   {\n-    return (ItemListener) removeInternal(l, oldl);\n+    ((MouseMotionListener) a).mouseDragged(e);\n+    ((MouseMotionListener) b).mouseDragged(e);\n   }\n \n   /**\n-   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n-   *\n-   * @param lis The listener to remove <code>old</code> from.\n-   * @param old The listener to remove.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return The resulting listener after the remove operation.\n+   * @param event the event to handle\n    */\n-  public static KeyListener remove(KeyListener l, KeyListener oldl) \n+  public void mouseMoved(MouseEvent e)\n   {\n-    return (KeyListener) removeInternal(l, oldl);\n+    ((MouseMotionListener) a).mouseMoved(e);\n+    ((MouseMotionListener) b).mouseMoved(e);\n   }\n \n   /**\n-   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n-   *\n-   * @param lis The listener to remove <code>old</code> from.\n-   * @param old The listener to remove.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return The resulting listener after the remove operation.\n+   * @param event the event to handle\n    */\n-  public static MouseListener remove(MouseListener l, MouseListener oldl) \n+  public void windowOpened(WindowEvent e)\n   {\n-    return (MouseListener) removeInternal(l, oldl);\n+    ((WindowListener) a).windowOpened(e);\n+    ((WindowListener) b).windowOpened(e);\n   }\n \n   /**\n-   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n-   *\n-   * @param lis The listener to remove <code>old</code> from.\n-   * @param old The listener to remove.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return The resulting listener after the remove operation.\n+   * @param event the event to handle\n    */\n-  public static MouseMotionListener remove(MouseMotionListener l, \n-\t\t\t\t\t   MouseMotionListener oldl) \n+  public void windowClosing(WindowEvent e)\n   {\n-    return (MouseMotionListener) removeInternal(l, oldl);\n+    ((WindowListener) a).windowClosing(e);\n+    ((WindowListener) b).windowClosing(e);\n   }\n \n   /**\n-   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n-   *\n-   * @param lis The listener to remove <code>old</code> from.\n-   * @param old The listener to remove.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return The resulting listener after the remove operation.\n+   * @param event the event to handle\n    */\n-  public static TextListener remove(TextListener l, TextListener oldl)                                            \n+  public void windowClosed(WindowEvent e)\n   {\n-    return (TextListener) removeInternal(l, oldl);\n+    ((WindowListener) a).windowClosed(e);\n+    ((WindowListener) b).windowClosed(e);\n   }\n \n   /**\n-   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n-   *\n-   * @param lis The listener to remove <code>old</code> from.\n-   * @param old The listener to remove.\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n    *\n-   * @return The resulting listener after the remove operation.\n+   * @param event the event to handle\n    */\n-  public static WindowListener remove(WindowListener l, WindowListener oldl) \n+  public void windowIconified(WindowEvent e)\n   {\n-    return (WindowListener) removeInternal(l, oldl);\n+    ((WindowListener) a).windowIconified(e);\n+    ((WindowListener) b).windowIconified(e);\n   }\n \n   /**\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event The event to handle.\n+   * @param event the event to handle\n    */\n-  public void actionPerformed(ActionEvent e) \n+  public void windowDeiconified(WindowEvent e)\n   {\n-    ((ActionListener) a).actionPerformed(e);\n-    ((ActionListener) b).actionPerformed(e);\n+    ((WindowListener) a).windowDeiconified(e);\n+    ((WindowListener) b).windowDeiconified(e);\n   }\n \n   /**\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event The event to handle.\n+   * @param event the event to handle\n    */\n-  public void adjustmentValueChanged(AdjustmentEvent e) \n+  public void windowActivated(WindowEvent e)\n   {\n-    ((AdjustmentListener) a).adjustmentValueChanged(e);\n-    ((AdjustmentListener) b).adjustmentValueChanged(e);\n+    ((WindowListener) a).windowActivated(e);\n+    ((WindowListener) b).windowActivated(e);\n   }\n \n   /**\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event The event to handle.\n+   * @param event the event to handle\n    */\n-  public void componentHidden(ComponentEvent e)\n+  public void windowDeactivated(WindowEvent e)\n   {\n-    ((ComponentListener) a).componentHidden(e);\n-    ((ComponentListener) b).componentHidden(e);\n+    ((WindowListener) a).windowDeactivated(e);\n+    ((WindowListener) b).windowDeactivated(e);\n   }\n \n   /**\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event The event to handle.\n+   * @param event the event to handle\n+   * @since 1.4\n    */\n-  public void componentMoved(ComponentEvent e)\n+  public void windowStateChanged(WindowEvent e)\n   {\n-    ((ComponentListener) a).componentMoved(e);\n-    ((ComponentListener) b).componentMoved(e);\n+    ((WindowStateListener) a).windowStateChanged(e);\n+    ((WindowStateListener) b).windowStateChanged(e);\n   }\n \n   /**\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event The event to handle.\n+   * @param event the event to handle\n+   * @since 1.4\n    */\n-  public void componentResized(ComponentEvent e)\n+  public void windowGainedFocus(WindowEvent e)\n   {\n-    ((ComponentListener) a).componentResized(e);\n-    ((ComponentListener) b).componentResized(e);\n+    ((WindowFocusListener) a).windowGainedFocus(e);\n+    ((WindowFocusListener) b).windowGainedFocus(e);\n   }\n \n   /**\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event The event to handle.\n+   * @param event the event to handle\n+   * @since 1.4\n    */\n-  public void componentShown(ComponentEvent e)\n+  public void windowLostFocus(WindowEvent e)\n   {\n-    ((ComponentListener) a).componentShown(e);\n-    ((ComponentListener) b).componentShown(e);\n+    ((WindowFocusListener) a).windowLostFocus(e);\n+    ((WindowFocusListener) b).windowLostFocus(e);\n   }\n \n   /**\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event The event to handle.\n+   * @param event the event to handle\n    */\n-  public void componentAdded(ContainerEvent e)\n+  public void actionPerformed(ActionEvent e)\n   {\n-    ((ContainerListener) a).componentAdded(e);\n-    ((ContainerListener) b).componentAdded(e);\n+    ((ActionListener) a).actionPerformed(e);\n+    ((ActionListener) b).actionPerformed(e);\n   }\n \n   /**\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event The event to handle.\n+   * @param event the event to handle\n    */\n-  public void componentRemoved(ContainerEvent e)\n+  public void itemStateChanged(ItemEvent e)\n   {\n-    ((ContainerListener) a).componentRemoved(e);\n-    ((ContainerListener) b).componentRemoved(e);\n+    ((ItemListener) a).itemStateChanged(e);\n+    ((ItemListener) b).itemStateChanged(e);\n   }\n \n   /**\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event The event to handle.\n+   * @param event the event to handle\n    */\n-  public void focusGained(FocusEvent e)\n+  public void adjustmentValueChanged(AdjustmentEvent e)\n   {\n-    ((FocusListener) a).focusGained(e);\n-    ((FocusListener) b).focusGained(e);\n+    ((AdjustmentListener) a).adjustmentValueChanged(e);\n+    ((AdjustmentListener) b).adjustmentValueChanged(e);\n   }\n \n   /**\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event The event to handle.\n+   * @param event the event to handle\n    */\n-  public void focusLost(FocusEvent e) \n+  public void textValueChanged(TextEvent e)\n   {\n-    ((FocusListener) a).focusLost(e);\n-    ((FocusListener) b).focusLost(e);\n+    ((TextListener) a).textValueChanged(e);\n+    ((TextListener) b).textValueChanged(e);\n   }\n \n   /**\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event The event to handle.\n+   * @param event the event to handle\n+   * @since 1.2\n    */\n-  public void ancestorMoved(HierarchyEvent e) \n+  public void inputMethodTextChanged(InputMethodEvent e)\n   {\n-    ((HierarchyBoundsListener) a).ancestorMoved(e);\n-    ((HierarchyBoundsListener) b).ancestorMoved(e);\n+    ((InputMethodListener) a).inputMethodTextChanged(e);\n+    ((InputMethodListener) b).inputMethodTextChanged(e);\n   }\n \n   /**\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event The event to handle.\n+   * @param event the event to handle\n+   * @since 1.2\n    */\n-  public void ancestorResized(HierarchyEvent e) \n+  public void caretPositionChanged(InputMethodEvent e)\n   {\n-    ((HierarchyBoundsListener) a).ancestorResized(e);\n-    ((HierarchyBoundsListener) b).ancestorResized(e);\n+    ((InputMethodListener) a).caretPositionChanged(e);\n+    ((InputMethodListener) b).caretPositionChanged(e);\n   }\n \n   /**\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event The event to handle.\n+   * @param event the event to handle\n+   * @since 1.3\n    */\n-  public void hierarchyChanged(HierarchyEvent e) \n+  public void hierarchyChanged(HierarchyEvent e)\n   {\n     ((HierarchyListener) a).hierarchyChanged(e);\n     ((HierarchyListener) b).hierarchyChanged(e);\n@@ -680,261 +607,603 @@ public void hierarchyChanged(HierarchyEvent e)\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event The event to handle.\n+   * @param event the event to handle\n+   * @since 1.3\n    */\n-  public void caretPositionChanged(InputMethodEvent e)\n+  public void ancestorMoved(HierarchyEvent e)\n   {\n-    ((InputMethodListener) a).caretPositionChanged(e);\n-    ((InputMethodListener) b).caretPositionChanged(e);\n+    ((HierarchyBoundsListener) a).ancestorMoved(e);\n+    ((HierarchyBoundsListener) b).ancestorMoved(e);\n   }\n \n   /**\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event The event to handle.\n+   * @param event the event to handle\n+   * @since 1.3\n    */\n-  public void inputMethodTextChanged(InputMethodEvent e) \n+  public void ancestorResized(HierarchyEvent e)\n   {\n-    ((InputMethodListener) a).inputMethodTextChanged(e);\n-    ((InputMethodListener) b).inputMethodTextChanged(e);\n+    ((HierarchyBoundsListener) a).ancestorResized(e);\n+    ((HierarchyBoundsListener) b).ancestorResized(e);\n   }\n \n   /**\n    * Handles this event by dispatching it to the \"a\" and \"b\" listener\n    * instances.\n    *\n-   * @param event The event to handle.\n+   * @param event the event to handle\n+   * @since 1.4\n    */\n-  public void itemStateChanged(ItemEvent e) \n+  public void mouseWheelMoved(MouseWheelEvent e)\n   {\n-    ((ItemListener) a).itemStateChanged(e);\n-    ((ItemListener) b).itemStateChanged(e);\n-  }  \n+    ((MouseWheelListener) a).mouseWheelMoved(e);\n+    ((MouseWheelListener) b).mouseWheelMoved(e);\n+  }\n \n   /**\n-   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n-   * instances.\n+   * Chain <code>ComponentListener</code> a and b.\n    *\n-   * @param event The event to handle.\n+   * @param a the \"a\" listener, may be null\n+   * @param b the \"b\" listener, may be null\n+   * @return latest entry in the chain\n    */\n-  public void keyPressed(KeyEvent e)\n+  public static ComponentListener add(ComponentListener a, ComponentListener b)\n   {\n-    ((KeyListener) a).keyPressed(e);\n-    ((KeyListener) b).keyPressed(e);\n+    return (ComponentListener) addInternal(a, b);\n   }\n \n   /**\n-   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n-   * instances.\n+   * Chain <code>ContainerListener</code> a and b.\n    *\n-   * @param event The event to handle.\n+   * @param a the \"a\" listener, may be null\n+   * @param b the \"b\" listener, may be null\n+   * @return latest entry in the chain\n    */\n-  public void keyReleased(KeyEvent e) \n+  public static ContainerListener add(ContainerListener a, ContainerListener b)\n   {\n-    ((KeyListener) a).keyReleased(e);\n-    ((KeyListener) b).keyReleased(e);\n+    return (ContainerListener) addInternal(a, b);\n   }\n \n   /**\n-   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n-   * instances.\n+   * Chain <code>FocusListener</code> a and b.\n    *\n-   * @param event The event to handle.\n+   * @param a the \"a\" listener, may be null\n+   * @param b the \"b\" listener, may be null\n+   * @return latest entry in the chain\n    */\n-  public void keyTyped(KeyEvent e) \n+  public static FocusListener add(FocusListener a, FocusListener b)\n   {\n-    ((KeyListener) a).keyTyped(e);\n-    ((KeyListener) b).keyTyped(e);\n+    return (FocusListener) addInternal(a, b);\n   }\n \n   /**\n-   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n-   * instances.\n+   * Chain <code>KeyListener</code> a and b.\n    *\n-   * @param event The event to handle.\n+   * @param a the \"a\" listener, may be null\n+   * @param b the \"b\" listener, may be null\n+   * @return latest entry in the chain\n    */\n-  public void mouseClicked(MouseEvent e) \n+  public static KeyListener add(KeyListener a, KeyListener b)\n   {\n-    ((MouseListener) a).mouseClicked(e);\n-    ((MouseListener) b).mouseClicked(e);\n+    return (KeyListener) addInternal(a, b);\n   }\n \n   /**\n-   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n-   * instances.\n+   * Chain <code>MouseListener</code> a and b.\n    *\n-   * @param event The event to handle.\n+   * @param a the \"a\" listener, may be null\n+   * @param b the \"b\" listener, may be null\n+   * @return latest entry in the chain\n    */\n-  public void mouseEntered(MouseEvent e) \n+  public static MouseListener add(MouseListener a, MouseListener b)\n   {\n-    ((MouseListener) a).mouseEntered(e);\n-    ((MouseListener) b).mouseEntered(e);\n+    return (MouseListener) addInternal(a, b);\n   }\n \n   /**\n-   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n-   * instances.\n+   * Chain <code>MouseMotionListener</code> a and b.\n    *\n-   * @param event The event to handle.\n+   * @param a the \"a\" listener, may be null\n+   * @param b the \"b\" listener, may be null\n+   * @return latest entry in the chain\n    */\n-  public void mouseExited(MouseEvent e) \n+  public static MouseMotionListener add(MouseMotionListener a,\n+                                        MouseMotionListener b)\n   {\n-    ((MouseListener) a).mouseExited(e);\n-    ((MouseListener) b).mouseExited(e);\n+    return (MouseMotionListener) addInternal(a, b);\n   }\n \n   /**\n-   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n-   * instances.\n+   * Chain <code>WindowListener</code> a and b.\n    *\n-   * @param event The event to handle.\n+   * @param a the \"a\" listener, may be null\n+   * @param b the \"b\" listener, may be null \n+   * @return latest entry in the chain\n    */\n-  public void mousePressed(MouseEvent e) \n+  public static WindowListener add(WindowListener a, WindowListener b)\n   {\n-    ((MouseListener) a).mousePressed(e);\n-    ((MouseListener) b).mousePressed(e);\n+    return (WindowListener) addInternal(a, b);\n   }\n \n   /**\n-   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n-   * instances.\n+   * Chain <code>WindowStateListener</code> a and b.\n    *\n-   * @param event The event to handle.\n+   * @param a the \"a\" listener, may be null\n+   * @param b the \"b\" listener, may be null \n+   * @return latest entry in the chain\n+   * @since 1.4\n    */\n-  public void mouseReleased(MouseEvent e) \n+  public static WindowStateListener add(WindowStateListener a,\n+                                        WindowStateListener b)\n   {\n-    ((MouseListener) a).mouseReleased(e);\n-    ((MouseListener) b).mouseReleased(e);\n+    return (WindowStateListener) addInternal(a, b);\n   }\n \n   /**\n-   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n-   * instances.\n+   * Chain <code>WindowFocusListener</code> a and b.\n    *\n-   * @param event The event to handle.\n+   * @param a the \"a\" listener, may be null\n+   * @param b the \"b\" listener, may be null \n+   * @return latest entry in the chain\n+   * @since 1.4\n    */\n-  public void mouseDragged(MouseEvent e) \n+  public static WindowFocusListener add(WindowFocusListener a,\n+                                        WindowFocusListener b)\n   {\n-    ((MouseMotionListener) a).mouseDragged(e);\n-    ((MouseMotionListener) b).mouseDragged(e);\n+    return (WindowFocusListener) addInternal(a, b);\n   }\n \n   /**\n-   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n-   * instances.\n+   * Chain <code>ActionListener</code> a and b.\n    *\n-   * @param event The event to handle.\n+   * @param a the \"a\" listener, may be null\n+   * @param b the \"b\" listener, may be null\n+   * @return latest entry in the chain\n    */\n-  public void mouseMoved(MouseEvent e) \n+  public static ActionListener add(ActionListener a, ActionListener b)\n   {\n-    ((MouseMotionListener) a).mouseMoved(e);\n-    ((MouseMotionListener) b).mouseMoved(e);\n+    return (ActionListener) addInternal(a, b);\n   }\n \n   /**\n-   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n-   * instances.\n+   * Chain <code>ItemListener</code> a and b.\n    *\n-   * @param event The event to handle.\n+   * @param a the \"a\" listener, may be null\n+   * @param b the \"b\" listener, may be null\n+   * @return latest entry in the chain\n    */\n-  public void textValueChanged(TextEvent e) \n+  public static ItemListener add(ItemListener a, ItemListener b)\n   {\n-    ((TextListener) a).textValueChanged(e);\n-    ((TextListener) b).textValueChanged(e);\n+    return (ItemListener) addInternal(a, b);\n   }\n \n   /**\n-   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n-   * instances.\n+   * Chain <code>AdjustmentListener</code> a and b.\n    *\n-   * @param event The event to handle.\n+   * @param a the \"a\" listener, may be null\n+   * @param b the \"b\" listener, may be null\n+   * @return latest entry in the chain\n    */\n-  public void windowActivated(WindowEvent e) \n+  public static AdjustmentListener add(AdjustmentListener a,\n+                                       AdjustmentListener b)\n   {\n-    ((WindowListener) a).windowActivated(e);\n-    ((WindowListener) b).windowActivated(e);\n+    return (AdjustmentListener) addInternal(a, b);\n   }\n \n   /**\n-   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n-   * instances.\n+   * Chain <code>AdjustmentListener</code> a and b.\n    *\n-   * @param event The event to handle.\n+   * @param a the \"a\" listener, may be null\n+   * @param b the \"b\" listener, may be null\n+   * @return latest entry in the chain\n    */\n-  public void windowClosed(WindowEvent e) \n+  public static TextListener add(TextListener a, TextListener b)\n   {\n-    ((WindowListener) a).windowClosed(e);\n-    ((WindowListener) b).windowClosed(e);\n+    return (TextListener) addInternal(a, b);\n   }\n \n   /**\n-   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n-   * instances.\n+   * Chain <code>InputMethodListener</code> a and b.\n    *\n-   * @param event The event to handle.\n+   * @param a the \"a\" listener, may be null\n+   * @param b the \"b\" listener, may be null\n+   * @return latest entry in the chain\n+   * @since 1.2\n    */\n-  public void windowClosing(WindowEvent e) \n+  public static InputMethodListener add(InputMethodListener a,\n+                                        InputMethodListener b)\n   {\n-    ((WindowListener) a).windowClosing(e);\n-    ((WindowListener) b).windowClosing(e);\n+    return (InputMethodListener) addInternal(a, b);\n   }\n \n   /**\n-   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n-   * instances.\n+   * Chain <code>HierarchyListener</code> a and b.\n    *\n-   * @param event The event to handle.\n+   * @param a the \"a\" listener, may be null\n+   * @param b the \"b\" listener, may be null\n+   * @return latest entry in the chain\n+   * @since 1.3\n    */\n-  public void windowDeactivated(WindowEvent e) \n+  public static HierarchyListener add(HierarchyListener a, HierarchyListener b)\n   {\n-    ((WindowListener) a).windowDeactivated(e);\n-    ((WindowListener) b).windowDeactivated(e);\n+    return (HierarchyListener) addInternal(a, b);\n   }\n \n   /**\n-   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n-   * instances.\n+   * Chain <code>HierarchyBoundsListener</code> a and b.\n    *\n-   * @param event The event to handle.\n+   * @param a the \"a\" listener, may be null\n+   * @param b the \"b\" listener, may be null\n+   * @return latest entry in the chain\n+   * @since 1.3\n    */\n-  public void windowDeiconified(WindowEvent e) \n+  public static HierarchyBoundsListener add(HierarchyBoundsListener a,\n+                                            HierarchyBoundsListener b)\n   {\n-    ((WindowListener) a).windowDeiconified(e);\n-    ((WindowListener) b).windowDeiconified(e);\n+    return (HierarchyBoundsListener) addInternal(a, b);\n   }\n \n   /**\n-   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n-   * instances.\n+   * Chain <code>MouseWheelListener</code> a and b.\n    *\n-   * @param event The event to handle.\n+   * @param a the \"a\" listener, may be null\n+   * @param b the \"b\" listener, may be null\n+   * @return latest entry in the chain\n+   * @since 1.4\n    */\n-  public void windowIconified(WindowEvent e) \n+  public static MouseWheelListener add(MouseWheelListener a,\n+                                       MouseWheelListener b)\n   {\n-    ((WindowListener) a).windowIconified(e);\n-    ((WindowListener) b).windowIconified(e);\n+    return (MouseWheelListener) addInternal(a, b);\n   }\n \n   /**\n-   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n-   * instances.\n+   * Removes the listener <code>oldl</code> from the listener <code>l</code>.\n    *\n-   * @param event The event to handle.\n+   * @param l the listener chain to reduce\n+   * @param oldl the listener to remove\n+   * @return the resulting listener chain\n    */\n-  public void windowOpened(WindowEvent e) \n+  public static ComponentListener remove(ComponentListener l,\n+                                         ComponentListener oldl)\n   {\n-    ((WindowListener) a).windowOpened(e);\n-    ((WindowListener) b).windowOpened(e);\n+    return (ComponentListener) removeInternal(l, oldl);\n   }\n \n-  protected static void save(ObjectOutputStream s, String k, EventListener l) \n+  /**\n+   * Removes the listener <code>oldl</code> from the listener <code>l</code>.\n+   *\n+   * @param l the listener chain to reduce\n+   * @param oldl the listener to remove\n+   * @return the resulting listener chain\n+   */\n+  public static ContainerListener remove(ContainerListener l,\n+                                         ContainerListener oldl)\n   {\n-    throw new RuntimeException(\"Not Implemented\");\n+    return (ContainerListener) removeInternal(l, oldl);\n   }\n \n+  /**\n+   * Removes the listener <code>oldl</code> from the listener <code>l</code>.\n+   *\n+   * @param l the listener chain to reduce\n+   * @param oldl the listener to remove\n+   * @return the resulting listener chain\n+   */\n+  public static FocusListener remove(FocusListener l, FocusListener oldl)\n+  {\n+    return (FocusListener) removeInternal(l, oldl);\n+  }\n+\n+  /**\n+   * Removes the listener <code>oldl</code> from the listener <code>l</code>.\n+   *\n+   * @param l the listener chain to reduce\n+   * @param oldl the listener to remove\n+   * @return the resulting listener chain\n+   */\n+  public static KeyListener remove(KeyListener l, KeyListener oldl)\n+  {\n+    return (KeyListener) removeInternal(l, oldl);\n+  }\n+\n+  /**\n+   * Removes the listener <code>oldl</code> from the listener <code>l</code>.\n+   *\n+   * @param l the listener chain to reduce\n+   * @param oldl the listener to remove\n+   * @return the resulting listener chain\n+   */\n+  public static MouseListener remove(MouseListener l, MouseListener oldl)\n+  {\n+    return (MouseListener) removeInternal(l, oldl);\n+  }\n+\n+  /**\n+   * Removes the listener <code>oldl</code> from the listener <code>l</code>.\n+   *\n+   * @param l the listener chain to reduce\n+   * @param oldl the listener to remove\n+   * @return the resulting listener chain\n+   */\n+  public static MouseMotionListener remove(MouseMotionListener l,\n+                                           MouseMotionListener oldl)\n+  {\n+    return (MouseMotionListener) removeInternal(l, oldl);\n+  }\n+\n+  /**\n+   * Removes the listener <code>oldl</code> from the listener <code>l</code>.\n+   *\n+   * @param l the listener chain to reduce\n+   * @param oldl the listener to remove\n+   * @return the resulting listener chain\n+   */\n+  public static WindowListener remove(WindowListener l, WindowListener oldl)\n+  {\n+    return (WindowListener) removeInternal(l, oldl);\n+  }\n+\n+  /**\n+   * Removes the listener <code>oldl</code> from the listener <code>l</code>.\n+   *\n+   * @param l the listener chain to reduce\n+   * @param oldl the listener to remove\n+   * @return the resulting listener chain\n+   * @since 1.4\n+   */\n+  public static WindowStateListener remove(WindowStateListener l,\n+                                           WindowStateListener oldl)\n+  {\n+    return (WindowStateListener) removeInternal(l, oldl);\n+  }\n+\n+  /**\n+   * Removes the listener <code>oldl</code> from the listener <code>l</code>.\n+   *\n+   * @param l the listener chain to reduce\n+   * @param oldl the listener to remove\n+   * @return the resulting listener chain\n+   * @since 1.4\n+   */\n+  public static WindowFocusListener remove(WindowFocusListener l,\n+                                           WindowFocusListener oldl)\n+  {\n+    return (WindowFocusListener) removeInternal(l, oldl);\n+  }\n+\n+  /**\n+   * Removes the listener <code>oldl</code> from the listener <code>l</code>.\n+   *\n+   * @param l the listener chain to reduce\n+   * @param oldl the listener to remove\n+   * @return the resulting listener chain\n+   */\n+  public static ActionListener remove(ActionListener l, ActionListener oldl)\n+  {\n+    return (ActionListener) removeInternal(l, oldl);\n+  }\n+\n+  /**\n+   * Removes the listener <code>oldl</code> from the listener <code>l</code>.\n+   *\n+   * @param l the listener chain to reduce\n+   * @param oldl the listener to remove\n+   * @return the resulting listener chain\n+   */\n+  public static ItemListener remove(ItemListener l, ItemListener oldl)\n+  {\n+    return (ItemListener) removeInternal(l, oldl);\n+  }\n+\n+  /**\n+   * Removes the listener <code>oldl</code> from the listener <code>l</code>.\n+   *\n+   * @param l the listener chain to reduce\n+   * @param oldl the listener to remove\n+   * @return the resulting listener chain\n+   */\n+  public static AdjustmentListener remove(AdjustmentListener l,\n+                                          AdjustmentListener oldl)\n+  {\n+    return (AdjustmentListener) removeInternal(l, oldl);\n+  }\n+\n+  /**\n+   * Removes the listener <code>oldl</code> from the listener <code>l</code>.\n+   *\n+   * @param l the listener chain to reduce\n+   * @param oldl the listener to remove\n+   * @return the resulting listener chain\n+   */\n+  public static TextListener remove(TextListener l, TextListener oldl)\n+  {\n+    return (TextListener) removeInternal(l, oldl);\n+  }\n+\n+  /**\n+   * Removes the listener <code>oldl</code> from the listener <code>l</code>.\n+   *\n+   * @param l the listener chain to reduce\n+   * @param oldl the listener to remove\n+   * @return the resulting listener chain\n+   * @since 1.2\n+   */\n+  public static InputMethodListener remove(InputMethodListener l,\n+                                           InputMethodListener oldl)\n+  {\n+    return (InputMethodListener) removeInternal(l, oldl);\n+  }\n+\n+  /**\n+   * Removes the listener <code>oldl</code> from the listener <code>l</code>.\n+   *\n+   * @param l the listener chain to reduce\n+   * @param oldl the listener to remove\n+   * @return the resulting listener chain\n+   * @since 1.3\n+   */\n+  public static HierarchyListener remove(HierarchyListener l,\n+                                         HierarchyListener oldl)\n+  {\n+    return (HierarchyListener) removeInternal(l, oldl);\n+  }\n+\n+  /**\n+   * Removes the listener <code>oldl</code> from the listener <code>l</code>.\n+   *\n+   * @param l the listener chain to reduce\n+   * @param oldl the listener to remove\n+   * @return the resulting listener chain\n+   * @since 1.3\n+   */\n+  public static HierarchyBoundsListener remove(HierarchyBoundsListener l,\n+                                               HierarchyBoundsListener oldl)\n+  {\n+    return (HierarchyBoundsListener) removeInternal(l, oldl);\n+  }\n+\n+  /**\n+   * Removes the listener <code>oldl</code> from the listener <code>l</code>.\n+   *\n+   * @param l the listener chain to reduce\n+   * @param oldl the listener to remove\n+   * @return the resulting listener chain\n+   * @since 1.4\n+   */\n+  public static MouseWheelListener remove(MouseWheelListener l,\n+                                          MouseWheelListener oldl)\n+  {\n+    return (MouseWheelListener) removeInternal(l, oldl);\n+  }\n+\n+  /**\n+   * Chain <code>EventListener</code> a and b.\n+   *\n+   * @param a the \"a\" listener, may be null\n+   * @param b the \"b\" listener, may be null \n+   * @return latest entry in the chain\n+   */\n+  protected static EventListener addInternal(EventListener a, EventListener b)\n+  {\n+    if (a == null)\n+      return b;\n+    if (b == null)\n+      return a;\n+    return new AWTEventMulticaster(a, b);\n+  }\n+\n+  /**\n+   * Removes the listener <code>oldl</code> from the listener <code>l</code>.\n+   *\n+   * @param l the listener chain to reduce\n+   * @param oldl the listener to remove\n+   * @return the resulting listener chain\n+   */\n+  protected static EventListener removeInternal(EventListener l,\n+                                                EventListener oldl)\n+  {\n+    if (l == oldl)\n+      return null;\n+    if (l instanceof AWTEventMulticaster)\n+      return ((AWTEventMulticaster) l).remove(oldl);\n+    return l;\n+  }\n+\n+  /**\n+   * Saves all Serializable listeners to a serialization stream.\n+   *\n+   * @param s the stream to save to\n+   * @param k a prefix stream put before each serializable listener\n+   * @throws IOException if serialization fails\n+   */\n   protected void saveInternal(ObjectOutputStream s, String k)\n+    throws IOException\n   {\n-    throw new RuntimeException(\"Not Implemented\");\n+    // This is not documented by Sun, but I think it is correct.\n+    if (a instanceof AWTEventMulticaster)\n+      ((AWTEventMulticaster) a).saveInternal(s, k);\n+    else if (a instanceof Serializable)\n+      {\n+        s.writeObject(k);\n+        s.writeObject(a);\n+      }\n+    if (b instanceof AWTEventMulticaster)\n+      ((AWTEventMulticaster) b).saveInternal(s, k);\n+    else if (b instanceof Serializable)\n+      {\n+        s.writeObject(k);\n+        s.writeObject(b);\n+      }\n+  }\n+\n+  /**\n+   * Saves a Serializable listener chain to a serialization stream.\n+   *\n+   * @param s the stream to save to\n+   * @param k a prefix stream put before each serializable listener\n+   * @param l the listener chain to save\n+   * @throws IOException if serialization fails\n+   */\n+  protected static void save(ObjectOutputStream s, String k, EventListener l)\n+    throws IOException\n+  {\n+    // This is not documented by Sun, but I think it is correct.\n+    if (l instanceof AWTEventMulticaster)\n+      ((AWTEventMulticaster) l).saveInternal(s, k);\n+    else if (l instanceof Serializable)\n+      {\n+        s.writeObject(k);\n+        s.writeObject(l);\n+      }\n+  }\n+\n+  /**\n+   * Returns an array of all chained listeners of the specified type in the\n+   * given chain. A null listener returns an empty array, and a listener\n+   * which is not an AWTEventMulticaster returns an array of one element. If\n+   * no listeners in the chain are of the specified type, an empty array is\n+   * returned.\n+   *\n+   * @param l the listener chain to convert to an array\n+   * @param type the type of listeners to collect\n+   * @return an array of the listeners of that type in the chain\n+   * @throws ClassCastException if type is not assignable from EventListener\n+   * @throws NullPointerException if type is null\n+   * @throws IllegalArgumentException if type is Void.TYPE\n+   * @since 1.4\n+   */\n+  public static EventListener[] getListeners(EventListener l, Class type)\n+  {\n+    ArrayList list = new ArrayList();\n+    if (l instanceof AWTEventMulticaster)\n+      ((AWTEventMulticaster) l).getListeners(list, type);\n+    else if (type.isInstance(l))\n+      list.add(l);\n+    EventListener[] r = (EventListener[]) Array.newInstance(type, list.size());\n+    list.toArray(r);\n+    return r;\n+  }\n+\n+  /**\n+   * Collects all instances of the given type in the chain into the list.\n+   *\n+   * @param l the list to collect into\n+   * @param type the type of listeners to collect\n+   * @throws NullPointerException if type is null\n+   * @see #getListeners(EventListener, Class)\n+   */\n+  private void getListeners(ArrayList l, Class type)\n+  {\n+    if (a instanceof AWTEventMulticaster)\n+      ((AWTEventMulticaster) a).getListeners(l, type);\n+    else if (type.isInstance(a))\n+      l.add(a);\n+    if (b instanceof AWTEventMulticaster)\n+      ((AWTEventMulticaster) b).getListeners(l, type);\n+    else if (type.isInstance(b))\n+      l.add(b);\n   }\n-}\n+} // class AWTEventMulticaster"}, {"sha": "e4ab6c9961fd294a0ac49bce60d8c4f0dc3df03d", "filename": "libjava/java/awt/AWTException.java", "status": "modified", "additions": 21, "deletions": 20, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FAWTException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FAWTException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTException.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,5 +1,5 @@\n /* AWTException.java -- Generic AWT exception\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,25 +39,26 @@\n package java.awt;\n \n /**\n-  * This is a generic exception that indicates an error occurred in the\n-  * AWT system.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n+ * This is a generic exception that indicates an exception occurred in the\n+ * Abstract Window Toolkit (AWT) system.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @status updated to 1.4\n+ */\n public class AWTException extends Exception\n {\n+  /**\n+   * Compatible with JDK 1.0+.\n+   */\n+  private static final long serialVersionUID = -1900414231151323879L;\n \n-/**\n-  * Initializes a new instance of <code>AWTException</code> with the\n-  * specified detailed error message.\n-  *\n-  * @param message The detailed error message.\n-  */\n-public\n-AWTException(String message)\n-{\n-  super(message);\n-}\n-\n-} // class AWTException \n-\n+  /**\n+   * Create a new instance with the  specified detailed error message.\n+   *\n+   * @param message the detailed error message\n+   */\n+  public AWTException(String message)\n+  {\n+    super(message);\n+  }\n+} // class AWTException"}, {"sha": "9848d43ef635a44823948358623597026740c510", "filename": "libjava/java/awt/AWTKeyStroke.java", "status": "added", "additions": 653, "deletions": 0, "changes": 653, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FAWTKeyStroke.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FAWTKeyStroke.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTKeyStroke.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,653 @@\n+/* AWTKeyStroke.java -- an immutable key stroke\n+   Copyright (C) 2002 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+import java.awt.event.KeyEvent;\n+import java.io.ObjectStreamException;\n+import java.io.Serializable;\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.Field;\n+import java.lang.reflect.InvocationTargetException;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.security.PrivilegedActionException;\n+import java.security.PrivilegedExceptionAction;\n+import java.util.Map;\n+import java.util.HashMap;\n+import java.util.LinkedHashMap;\n+import java.util.StringTokenizer;\n+\n+/**\n+ * This class mirrors KeyEvents, representing both low-level key presses and\n+ * key releases, and high level key typed inputs. However, this class forms\n+ * immutable strokes, and can be efficiently reused via the factory methods\n+ * for creating them.\n+ *\n+ * <p>For backwards compatibility with Swing, this supports a way to build\n+ * instances of a subclass, using reflection, provided the subclass has a\n+ * no-arg constructor (of any accessibility).\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @see #getAWTKeyStroke(char)\n+ * @since 1.4\n+ * @status updated to 1.4\n+ */\n+public class AWTKeyStroke implements Serializable\n+{\n+  /**\n+   * Compatible with JDK 1.4+.\n+   */\n+  private static final long serialVersionUID = -6430539691155161871L;\n+\n+  /** The mask for modifiers. */\n+  private static final int MODIFIERS_MASK = 0x3fef;\n+\n+  /**\n+   * The cache of recently created keystrokes. This maps KeyStrokes to\n+   * KeyStrokes in a cache which removes the least recently accessed entry,\n+   * under the assumption that garbage collection of a new keystroke is\n+   * easy when we find the old one that it matches in the cache.\n+   */\n+  private static final LinkedHashMap cache = new LinkedHashMap(11, 0.75f, true)\n+  {\n+    /** The largest the keystroke cache can grow. */\n+    private static final int MAX_CACHE_SIZE = 2048;\n+\n+    /** Prune stale entries. */\n+    protected boolean removeEldestEntry(Map.Entry eldest)\n+    {\t// XXX - FIXME Use Map.Entry, not just Entry  as gcj 3.1 workaround.\n+      return size() > MAX_CACHE_SIZE;\n+    }\n+  };\n+\n+  /** The most recently generated keystroke, or null. */\n+  private static AWTKeyStroke recent;\n+\n+  /**\n+   * The no-arg constructor of a subclass, or null to use AWTKeyStroke. Note\n+   * that this will be left accessible, to get around private access; but\n+   * it should not be a security risk as it is highly unlikely that creating\n+   * protected instances of the subclass via reflection will do much damage.\n+   */\n+  private static Constructor ctor;\n+\n+  /**\n+   * A table of keyCode names to values.\n+   *\n+   * @see #getAWTKeyStroke(String)\n+   */\n+  private static final HashMap vktable = new HashMap();\n+  static\n+  {\n+    // Using reflection saves the hassle of keeping this in sync with KeyEvent,\n+    // at the price of an expensive initialization.\n+    AccessController.doPrivileged(new PrivilegedAction()\n+      {\n+        public Object run()\n+        {\n+          Field[] fields = KeyEvent.class.getFields();\n+          int i = fields.length;\n+          try\n+            {\n+              while (--i >= 0)\n+                {\n+                  Field f = fields[i];\n+                  String name = f.getName();\n+                  if (name.startsWith(\"VK_\"))\n+                    vktable.put(name.substring(3), f.get(null));\n+                }\n+            }\n+          catch (Exception e)\n+            {\n+              throw (Error) new InternalError().initCause(e);\n+            }\n+          return null;\n+        }\n+      });\n+  }\n+\n+  /**\n+   * The typed character, or CHAR_UNDEFINED for key presses and releases.\n+   *\n+   * @serial the keyChar\n+   */\n+  private char keyChar;\n+\n+  /**\n+   * The virtual key code, or VK_UNDEFINED for key typed. Package visible for\n+   * use by Component.\n+   *\n+   * @serial the keyCode\n+   */\n+  int keyCode;\n+\n+  /**\n+   * The modifiers in effect. To match Sun, this stores the old style masks\n+   * for shift, control, alt, meta, and alt-graph (but not button1); as well\n+   * as the new style of extended modifiers for all modifiers.\n+   *\n+   * @serial bitwise or of the *_DOWN_MASK modifiers\n+   */\n+  private int modifiers;\n+\n+  /**\n+   * True if this is a key release; should only be true if keyChar is\n+   * CHAR_UNDEFINED.\n+   *\n+   * @serial true to distinguish key pressed from key released\n+   */\n+  private boolean onKeyRelease;\n+\n+  /**\n+   * Construct a keystroke with default values: it will be interpreted as a\n+   * key typed event with an invalid character and no modifiers. Client code\n+   * should use the factory methods instead.\n+   *\n+   * @see #getAWTKeyStroke(char)\n+   * @see #getAWTKeyStroke(Character, int)\n+   * @see #getAWTKeyStroke(int, int, boolean)\n+   * @see #getAWTKeyStroke(int, int)\n+   * @see #getAWTKeyStrokeForEvent(KeyEvent)\n+   * @see #getAWTKeyStroke(String)\n+   */\n+  protected AWTKeyStroke()\n+  {\n+    keyChar = KeyEvent.CHAR_UNDEFINED;\n+  }\n+\n+  /**\n+   * Construct a keystroke with the given values. Client code should use the\n+   * factory methods instead.\n+   *\n+   * @param keyChar the character entered, if this is a key typed\n+   * @param keyCode the key pressed or released, or VK_UNDEFINED for key typed\n+   * @param modifiers the modifier keys for the keystroke, in old or new style\n+   * @param onKeyRelease true if this is a key release instead of a press\n+   * @see #getAWTKeyStroke(char)\n+   * @see #getAWTKeyStroke(Character, int)\n+   * @see #getAWTKeyStroke(int, int, boolean)\n+   * @see #getAWTKeyStroke(int, int)\n+   * @see #getAWTKeyStrokeForEvent(KeyEvent)\n+   * @see #getAWTKeyStroke(String)\n+   */\n+  protected AWTKeyStroke(char keyChar, int keyCode, int modifiers,\n+                         boolean onKeyRelease)\n+  {\n+    this.keyChar = keyChar;\n+    this.keyCode = keyCode;\n+    // No need to call extend(), as only trusted code calls this constructor.\n+    this.modifiers = modifiers;\n+    this.onKeyRelease = onKeyRelease;\n+  }\n+\n+  /**\n+   * Registers a new subclass as being the type of keystrokes to generate in\n+   * the factory methods. This operation flushes the cache of stored keystrokes\n+   * if the class differs from the current one. The new class must be\n+   * AWTKeyStroke or a subclass, and must have a no-arg constructor (which may\n+   * be private).\n+   *\n+   * @param subclass the new runtime type of generated keystrokes\n+   * @throws IllegalArgumentException subclass doesn't have no-arg constructor\n+   * @throws ClassCastException subclass doesn't extend AWTKeyStroke\n+   */\n+  protected static void registerSubclass(final Class subclass)\n+  {\n+    if (subclass == null)\n+      throw new IllegalArgumentException();\n+    if (subclass.equals(ctor == null ? AWTKeyStroke.class\n+                        : ctor.getDeclaringClass()))\n+      return;\n+    if (subclass.equals(AWTKeyStroke.class))\n+       {\n+         cache.clear();\n+         recent = null;\n+         ctor = null;\n+         return;\n+       }\n+    try\n+      {\n+        ctor = (Constructor) AccessController.doPrivileged\n+          (new PrivilegedExceptionAction()\n+            {\n+              public Object run()\n+                throws NoSuchMethodException, InstantiationException,\n+                       IllegalAccessException, InvocationTargetException\n+              {\n+                Constructor c = subclass.getDeclaredConstructor(null);\n+                c.setAccessible(true);\n+                // Create a new instance, to make sure that we can, and\n+                // to cause any ClassCastException.\n+                AWTKeyStroke dummy = (AWTKeyStroke) c.newInstance(null);\n+                return c;\n+              }\n+            });\n+      }\n+    catch (PrivilegedActionException e)\n+      {\n+        // e.getCause() will not ever be ClassCastException; that should\n+        // escape on its own.\n+        throw (RuntimeException)\n+          new IllegalArgumentException().initCause(e.getCause());\n+      }\n+    cache.clear();\n+    recent = null;\n+  }\n+\n+  /**\n+   * Returns a keystroke representing a typed character.\n+   *\n+   * @param keyChar the typed character \n+   * @return the specified keystroke\n+   */\n+  public static AWTKeyStroke getAWTKeyStroke(char keyChar)\n+  {\n+    return getAWTKeyStroke(keyChar, KeyEvent.VK_UNDEFINED, 0, false);\n+  }\n+\n+  /**\n+   * Returns a keystroke representing a typed character with the given\n+   * modifiers. Note that keyChar is a <code>Character</code> instead of a\n+   * <code>char</code> to avoid accidental ambiguity with\n+   * <code>getAWTKeyStroke(int, int)</code>. The modifiers are the bitwise\n+   * or of the masks found in {@link InputEvent}; the new style (*_DOWN_MASK)\n+   * is preferred, but the old style will work.\n+   *\n+   * @param keyChar the typed character\n+   * @param modifiers the modifiers, or 0\n+   * @return the specified keystroke\n+   * @throws IllegalArgumentException if keyChar is null\n+   */\n+  public static AWTKeyStroke getAWTKeyStroke(Character keyChar, int modifiers)\n+  {\n+    if (keyChar == null)\n+      throw new IllegalArgumentException();\n+    return getAWTKeyStroke(keyChar.charValue(), KeyEvent.VK_UNDEFINED,\n+                           extend(modifiers), false);\n+  }\n+\n+  /**\n+   * Returns a keystroke representing a pressed or released key event, with\n+   * the given modifiers. The \"virtual key\" should be one of the VK_*\n+   * constants in {@link KeyEvent}. The modifiers are the bitwise or of the\n+   * masks found in {@link InputEvent}; the new style (*_DOWN_MASK) is\n+   * preferred, but the old style will work.\n+   *\n+   * @param keyCode the virtual key\n+   * @param modifiers the modifiers, or 0\n+   * @param release true if this is a key release instead of a key press\n+   * @return the specified keystroke\n+   */\n+  public static AWTKeyStroke getAWTKeyStroke(int keyCode, int modifiers,\n+                                             boolean release)\n+  {\n+    return getAWTKeyStroke(KeyEvent.CHAR_UNDEFINED, keyCode,\n+                           extend(modifiers), release);\n+  }\n+\n+  /**\n+   * Returns a keystroke representing a pressed key event, with the given\n+   * modifiers. The \"virtual key\" should be one of the VK_* constants in\n+   * {@link KeyEvent}. The modifiers are the bitwise or of the masks found\n+   * in {@link InputEvent}; the new style (*_DOWN_MASK) is preferred, but the\n+   * old style will work.\n+   *\n+   * @param keyCode the virtual key\n+   * @param modifiers the modifiers, or 0\n+   * @return the specified keystroke\n+   */\n+  public static AWTKeyStroke getAWTKeyStroke(int keyCode, int modifiers)\n+  {\n+    return getAWTKeyStroke(KeyEvent.CHAR_UNDEFINED, keyCode,\n+                           extend(modifiers), false);\n+  }\n+\n+  /**\n+   * Returns a keystroke representing what caused the key event.\n+   *\n+   * @param event the key event to convert\n+   * @return the specified keystroke, or null if the event is invalid\n+   * @throws NullPointerException if event is null\n+   */\n+  public static AWTKeyStroke getAWTKeyStrokeForEvent(KeyEvent event)\n+  {\n+    switch (event.id)\n+      {\n+      case KeyEvent.KEY_TYPED:\n+        return getAWTKeyStroke(event.getKeyChar(), KeyEvent.VK_UNDEFINED,\n+                               extend(event.getModifiersEx()), false);\n+      case KeyEvent.KEY_PRESSED:\n+        return getAWTKeyStroke(KeyEvent.CHAR_UNDEFINED, event.getKeyCode(),\n+                               extend(event.getModifiersEx()), false);\n+      case KeyEvent.KEY_RELEASED:\n+        return getAWTKeyStroke(KeyEvent.CHAR_UNDEFINED, event.getKeyCode(),\n+                               extend(event.getModifiersEx()), true);\n+      default:\n+        return null;\n+      }\n+  }\n+\n+  /**\n+   * Parses a string and returns the keystroke that it represents. The syntax\n+   * for keystrokes is listed below, with tokens separated by an arbitrary\n+   * number of spaces:\n+   * <pre>\n+   * keyStroke := &lt;modifiers&gt;* ( &lt;typedID&gt; | &lt;codeID&gt; )\n+   * modifiers := ( shift | control | ctrl | meta | alt\n+   *                | button1 | button2 | button3 )\n+   * typedID := typed &lt;single Unicode character&gt;\n+   * codeID := ( pressed | released )? &lt;name&gt;\n+   * name := &lt;the KeyEvent field name less the leading \"VK_\"&gt;\n+   * </pre>\n+   *\n+   * <p>Note that the grammar is rather weak, and not all valid keystrokes\n+   * can be generated in this manner (for example, a typed space, or anything\n+   * with the alt-graph modifier!). The output of AWTKeyStroke.toString()\n+   * will not meet the grammar. If pressed or released is not specified,\n+   * pressed is assumed. Examples:<br>\n+   * <code>\n+   * \"INSERT\" =&gt; getAWTKeyStroke(KeyEvent.VK_INSERT, 0);<br>\n+   * \"control DELETE\" =&gt;\n+   *    getAWTKeyStroke(KeyEvent.VK_DELETE, InputEvent.CTRL_MASK);<br>\n+   * \"alt shift X\" =&gt; getAWTKeyStroke(KeyEvent.VK_X,\n+   *    InputEvent.ALT_MASK | InputEvent.SHIFT_MASK);<br>\n+   * \"alt shift released X\" =&gt; getAWTKeyStroke(KeyEvent.VK_X,\n+   *    InputEvent.ALT_MASK | InputEvent.SHIFT_MASK, true);<br>\n+   * \"typed a\" =&gt; getAWTKeyStroke('a');\n+   * </code>      \n+   *\n+   * @param s the string to parse\n+   * @return the specified keystroke\n+   * @throws NullPointerException if s is null\n+   * @throws IllegalArgumentException if s cannot be parsed\n+   */\n+  public static AWTKeyStroke getAWTKeyStroke(String s)\n+  {\n+    StringTokenizer t = new StringTokenizer(s, \" \");\n+    if (! t.hasMoreTokens())\n+      throw new IllegalArgumentException();\n+    int modifiers = 0;\n+    boolean released = false;\n+    String token = null;\n+    do\n+      {\n+        token = t.nextToken();\n+        if (\"shift\".equals(token))\n+          modifiers |= KeyEvent.SHIFT_MASK | KeyEvent.SHIFT_DOWN_MASK;\n+        else if (\"ctrl\".equals(token) || \"control\".equals(token))\n+          modifiers |= KeyEvent.CTRL_MASK | KeyEvent.CTRL_DOWN_MASK;\n+        else if (\"meta\".equals(token))\n+          modifiers |= KeyEvent.META_MASK | KeyEvent.META_DOWN_MASK;\n+        else if (\"alt\".equals(token))\n+          modifiers |= KeyEvent.ALT_MASK | KeyEvent.ALT_DOWN_MASK;\n+        else if (\"button1\".equals(token))\n+          modifiers |= KeyEvent.BUTTON1_DOWN_MASK;\n+        else if (\"button2\".equals(token))\n+          modifiers |= KeyEvent.BUTTON2_DOWN_MASK;\n+        else if (\"button3\".equals(token))\n+          modifiers |= KeyEvent.BUTTON3_DOWN_MASK;\n+        else if (\"typed\".equals(token))\n+          {\n+            if (t.hasMoreTokens())\n+              {\n+                token = t.nextToken();\n+                if (! t.hasMoreTokens() && token.length() == 1)\n+                  return getAWTKeyStroke(token.charAt(0),\n+                                         KeyEvent.VK_UNDEFINED, modifiers,\n+                                         false);\n+              }\n+            throw new IllegalArgumentException();\n+          }\n+        else if (\"pressed\".equals(token))\n+          {\n+            if (t.hasMoreTokens())\n+              token = t.nextToken();\n+            break;\n+          }\n+        else if (\"released\".equals(token))\n+          {\n+            released = true;\n+            if (t.hasMoreTokens())\n+              token = t.nextToken();\n+            break;\n+          }\n+        else\n+          break;\n+      }\n+    while (t.hasMoreTokens());\n+    // Now token contains the VK name we must parse.\n+    Integer code = (Integer) vktable.get(token);\n+    if (code == null || t.hasMoreTokens())\n+      throw new IllegalArgumentException();\n+    return getAWTKeyStroke(KeyEvent.CHAR_UNDEFINED, code.intValue(),\n+                           modifiers, released);\n+  }\n+\n+  /**\n+   * Returns the character of this keystroke, if it was typed.\n+   *\n+   * @return the character value, or CHAR_UNDEFINED\n+   * @see #getAWTKeyStroke(char)\n+   */\n+  public final char getKeyChar()\n+  {\n+    return keyChar;\n+  }\n+\n+  /**\n+   * Returns the virtual key code of this keystroke, if it was pressed or\n+   * released. This will be a VK_* constant from KeyEvent.\n+   *\n+   * @return the virtual key code value, or VK_UNDEFINED\n+   * @see #getAWTKeyStroke(int, int)\n+   */\n+  public final int getKeyCode()\n+  {\n+    return keyCode;\n+  }\n+\n+  /**\n+   * Returns the modifiers for this keystroke. This will be a bitwise or of\n+   * constants from InputEvent; it includes the old style masks for shift,\n+   * control, alt, meta, and alt-graph (but not button1); as well as the new\n+   * style of extended modifiers for all modifiers.\n+   *\n+   * @return the modifiers\n+   * @see #getAWTKeyStroke(Character, int)\n+   * @see #getAWTKeyStroke(int, int)\n+   */\n+  public final int getModifiers()\n+  {\n+    return modifiers;\n+  }\n+\n+  /**\n+   * Tests if this keystroke is a key release.\n+   *\n+   * @return true if this is a key release\n+   * @see #getAWTKeyStroke(int, int, boolean)\n+   */\n+  public final boolean isOnKeyRelease()\n+  {\n+    return onKeyRelease;\n+  }\n+\n+  /**\n+   * Returns the AWT event type of this keystroke. This is one of\n+   * {@link KeyEvent#KEY_TYPED}, {@link KeyEvent#KEY_PRESSED}, or\n+   * {@link KeyEvent#KEY_RELEASED}.\n+   *\n+   * @return the key event type\n+   */\n+  public final int getKeyEventType()\n+  {\n+    return keyCode == KeyEvent.VK_UNDEFINED ? KeyEvent.KEY_TYPED\n+      : onKeyRelease ? KeyEvent.KEY_RELEASED : KeyEvent.KEY_PRESSED;\n+  }\n+\n+  /**\n+   * Returns a hashcode for this key event. It is not documented, but appears\n+   * to be: <code>(getKeyChar() + 1) * (getKeyCode() + 1)\n+   * * (getModifiers() + 1) * 2 + (isOnKeyRelease() ? 1 : 2)</code>.\n+   *\n+   * @return the hashcode\n+   */\n+  public int hashCode()\n+  {\n+    return (keyChar + 1) * (keyCode + 1) * (modifiers + 1) * 2\n+      + (onKeyRelease ? 1 : 2);\n+  }\n+\n+  /**\n+   * Tests two keystrokes for equality.\n+   *\n+   * @param o the object to test\n+   * @return true if it is equal\n+   */\n+  public final boolean equals(Object o)\n+  {\n+    if (! (o instanceof AWTKeyStroke))\n+      return false;\n+    AWTKeyStroke s = (AWTKeyStroke) o;\n+    return this == o || (keyChar == s.keyChar && keyCode == s.keyCode\n+                         && modifiers == s.modifiers\n+                         && onKeyRelease == s.onKeyRelease);\n+  }\n+\n+  /**\n+   * Returns a string representation of this keystroke. For typed keystrokes,\n+   * this is <code>\"keyChar \" + KeyEvent.getKeyModifiersText(getModifiers())\n+   + getKeyChar()</code>; for pressed and released keystrokes, this is\n+   * <code>\"keyCode \" + KeyEvent.getKeyModifiersText(getModifiers())\n+   * + KeyEvent.getKeyText(getKeyCode())\n+   * + (isOnKeyRelease() ? \"-R\" : \"-P\")</code>.\n+   *\n+   * @return a string representation\n+   */\n+  public String toString()\n+  {\n+    if (keyCode == KeyEvent.VK_UNDEFINED)\n+      return \"keyChar \" + KeyEvent.getKeyModifiersText(modifiers) + keyChar;\n+    return \"keyCode \" + KeyEvent.getKeyModifiersText(modifiers)\n+      + KeyEvent.getKeyText(keyCode) + (onKeyRelease ? \"-R\" : \"-P\");\n+  }\n+\n+  /**\n+   * Returns a cached version of the deserialized keystroke, if available.\n+   *\n+   * @return a cached replacement\n+   * @throws ObjectStreamException if something goes wrong\n+   */\n+  protected Object readResolve() throws ObjectStreamException\n+  {\n+    AWTKeyStroke s = (AWTKeyStroke) cache.get(this);\n+    if (s != null)\n+      return s;\n+    cache.put(this, this);\n+    return this;\n+  }\n+\n+  /**\n+   * Gets the appropriate keystroke, creating one if necessary.\n+   *\n+   * @param keyChar the keyChar\n+   * @param keyCode the keyCode\n+   * @param modifiers the modifiers\n+   * @param release true for key release\n+   * @return the specified keystroke\n+   */\n+  private static AWTKeyStroke getAWTKeyStroke(char keyChar, int keyCode,\n+                                              int modifiers, boolean release)\n+  {\n+    // Check level 0 cache.\n+    AWTKeyStroke stroke = recent; // Avoid thread races.\n+    if (stroke != null && stroke.keyChar == keyChar\n+        && stroke.keyCode == keyCode && stroke.modifiers == modifiers\n+        && stroke.onKeyRelease == release)\n+      return stroke;\n+    // Create a new object, on the assumption that if it has a match in the\n+    // cache, the VM can easily garbage collect it as it is temporary.\n+    Constructor c = ctor; // Avoid thread races.\n+    if (c == null)\n+      stroke = new AWTKeyStroke(keyChar, keyCode, modifiers, release);\n+    else\n+      try\n+        {\n+          stroke = (AWTKeyStroke) c.newInstance(null);\n+          stroke.keyChar = keyChar;\n+          stroke.keyCode = keyCode;\n+          stroke.modifiers = modifiers;\n+          stroke.onKeyRelease = release;\n+        }\n+      catch (Exception e)\n+        {\n+          throw (Error) new InternalError().initCause(e);\n+        }\n+    // Check level 1 cache.\n+    AWTKeyStroke cached = (AWTKeyStroke) cache.get(stroke);\n+    if (cached == null)\n+      cache.put(stroke, stroke);\n+    else\n+      stroke = cached;\n+    return recent = stroke;\n+  }\n+\n+  /**\n+   * Converts the modifiers to the appropriate format.\n+   *\n+   * @param mod the modifiers to convert\n+   * @return the adjusted modifiers\n+   */\n+  private static int extend(int mod)\n+  {\n+    if ((mod & (KeyEvent.SHIFT_MASK | KeyEvent.SHIFT_DOWN_MASK)) != 0)\n+      mod |= KeyEvent.SHIFT_MASK | KeyEvent.SHIFT_DOWN_MASK;\n+    if ((mod & (KeyEvent.CTRL_MASK | KeyEvent.CTRL_DOWN_MASK)) != 0)\n+      mod |= KeyEvent.CTRL_MASK | KeyEvent.CTRL_DOWN_MASK;\n+    if ((mod & (KeyEvent.META_MASK | KeyEvent.META_DOWN_MASK)) != 0)\n+      mod |= KeyEvent.META_MASK | KeyEvent.META_DOWN_MASK;\n+    if ((mod & (KeyEvent.ALT_MASK | KeyEvent.ALT_DOWN_MASK)) != 0)\n+      mod |= KeyEvent.ALT_MASK | KeyEvent.ALT_DOWN_MASK;\n+    if ((mod & (KeyEvent.ALT_GRAPH_MASK | KeyEvent.ALT_GRAPH_DOWN_MASK)) != 0)\n+      mod |= KeyEvent.ALT_GRAPH_MASK | KeyEvent.ALT_GRAPH_DOWN_MASK;\n+    if ((mod & KeyEvent.BUTTON1_MASK) != 0)\n+      mod |= KeyEvent.BUTTON1_DOWN_MASK;\n+    return mod & MODIFIERS_MASK;\n+  }\n+} // class AWTKeyStroke"}, {"sha": "993c60d50d45f496a25b0b9d2df5cada4607e6d9", "filename": "libjava/java/awt/AWTPermission.java", "status": "modified", "additions": 65, "deletions": 17, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FAWTPermission.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FAWTPermission.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTPermission.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,6 +1,5 @@\n-// AWTPermission.java - AWT permissions\n-\n-/* Copyright (C) 2000, 2002  Free Software Foundation\n+/* AWTPermission.java -- AWT related permissions\n+   Copyright (C) 2000, 2002  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -37,37 +36,86 @@\n exception statement from your version. */\n \n \n-/**\n- * @author Tom Tromey <tromey@redhat.com>\n- * @date December 2, 2000\n- */\n-\n package java.awt;\n \n import java.security.BasicPermission;\n \n /**\n  * This class implements permissions for AWT.  This is a named\n  * permission.  No actions are defined.\n+ *\n+ * <p>The following table provides a list of all the possible AWTPermission\n+ * permission names with a description of what that permission allows.<br>\n+ * <table border=1>\n+ * <tr><th>Permission Name</th><th>Permission Allows</th><th>Risks</th</tr>\n+ * <tr>\n+ *   <td><code>accessClipboard</code></td>\n+ *   <td>posting and reading the AWT clipboard</td>\n+ *   <td>the clipboard may contain sensitive data</td></tr>\n+ * <tr>\n+ *   <td><code>accessEventQueue</code></td>\n+ *   <td>access to the AWT event queue</td>\n+ *   <td>malicious code could remove real events and replace them with bogus\n+ *       ones, including simulating the user granting permission</td></tr>\n+ * <tr>\n+ *   <td><code>listenToAllAWTEvents</code></td>\n+ *   <td>listen to system-wide AWT events</td>\n+ *   <td>malicious code can read passwords entered in an AWT event, and in\n+ *       combination with accessEventQueue, could fake system events</td></tr>\n+ * <tr>\n+ *   <td><code>showWindowWithoutWarningBanner</code></td>\n+ *   <td>display a window without a banner notification of insecurity</td>\n+ *   <td>malicious code could install a Trojan horse applet that looks like\n+ *       a normal window, and thus steal data like passwords</td></tr>\n+ * <tr>\n+ *   <td><code>readDisplayPixels</code></td>\n+ *   <td>read back pixels from the display screen</td>\n+ *   <td>malicious code could snoop on the user's actions</td></tr>\n+ * <tr>\n+ *   <td><code>createRobot</code></td>\n+ *   <td>create an instance of java.awt.Robot</td>\n+ *   <td>these objects can generate events as though they were the user; so\n+ *       malicious code could control the system</td></tr>\n+ * <tr>\n+ *   <td><code>fullScreenExclusive</code></td>\n+ *   <td>enter full-screen exclusive mode</td>\n+ *   <td>malicious code could masquerade as a trusted program</td><tr>\n+ * </table>\n+ *\n+ * @author Tom Tromey <tromey@redhat.com>\n+ * @since 1.2\n+ * @status updated to 1.4\n  */\n public final class AWTPermission extends BasicPermission\n {\n+  /**\n+   * Compatible with JDK 1.2+.\n+   */\n+  private static final long serialVersionUID = 8890392402588814465L;\n+\n   /**\n    * Construct a AWTPermission with the given name.\n-   * @param name The permission name\n+   *\n+   * @param name the permission name\n+   * @throws NullPointerException if name is null\n+   * @throws IllegalArgumentException if name is invalid\n    */\n-  public AWTPermission (String name)\n+  public AWTPermission(String name)\n   {\n-    super (name);\n+    super(name);\n   }\n \n   /**\n-   * Construct a AWTPermission with the given name.\n-   * @param name The permission name\n-   * @param actions The actions; this is ignored and should be null.\n+   * Create a new permission with the specified name. The actions argument\n+   * is ignored, as AWT permissions have no actions.\n+   *\n+   * @param name the permission name\n+   * @param actions ignored\n+   * @throws NullPointerException if name is null\n+   * @throws IllegalArgumentException if name is invalid\n    */\n-  public AWTPermission (String name, String actions)\n+  public AWTPermission(String name, String actions)\n   {\n-    super (name, actions);\n+    super(name);\n   }\n-}\n+} // class AWTPermission"}, {"sha": "357627dbd0587aa8a408b3f7f6135756bd9be6a0", "filename": "libjava/java/awt/ActiveEvent.java", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FActiveEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FActiveEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FActiveEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 2000, 2002  Free Software Foundation\n+/* ActiveEvent.java -- a self-dispatching event\n+   Copyright (C) 2000, 2002 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -38,13 +39,23 @@\n package java.awt;\n \n /**\n+ * An interface for events which can dispatch themselves in another thread.\n+ * This has two uses: first, if your code is in a critical section, calling a\n+ * synchronized method might deadlock. But by using an ActiveEvent to call\n+ * the second section, it will not obtain the lock until you have left the\n+ * critical section, avoiding deadlock. The second use is for calling\n+ * untrusted code. For example, system code should use an ActiveEvent to\n+ * invoke user code securely.\n+ *\n  * @author Tom Tromey <tromey@cygnus.com>\n- * @date April 8, 2000\n+ * @since 1.2\n+ * @status updated to 1.4\n  */\n-\n-/* Status: Believed complete and correct to JDK 1.2.  */\n-\n public interface ActiveEvent\n {\n-  public void dispatch ();\n-}\n+  /**\n+   * Dispatch the event, according to what the event needs done. Invoked\n+   * automatically if this is placed on the <code>EventDispatchQueue</code>.\n+   */\n+  public void dispatch();\n+} // interface ActiveEvent"}, {"sha": "58116e4e5b3f7a8667e9358cf141b15003deb51a", "filename": "libjava/java/awt/Adjustable.java", "status": "modified", "additions": 127, "deletions": 179, "changes": 306, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FAdjustable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FAdjustable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAdjustable.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,5 +1,5 @@\n-/* Adjustable.java -- Objects with a numeric adjustment scale.\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+/* Adjustable.java -- Objects with a numeric adjustment scale\n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,183 +41,131 @@\n import java.awt.event.AdjustmentListener;\n \n /**\n-  * This interface is for objects that take a numeric value that\n-  * can be adjusted within a bounded range.  For example, a scroll bar.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n+ * This interface is for objects that take a numeric value that can be\n+ * adjusted within a bounded range.  For example, a scroll bar.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @since 1.0\n+ * @status updated to 1.4\n+ */\n public interface Adjustable\n {\n-\n-/*\n- * Static Variables\n- */\n-\n-/**\n-  * Constant for a horizontal orientation\n-  */\n-public static final int HORIZONTAL = 0;\n-\n-/**\n-  * Constant for a vertical orientation\n-  */\n-public static final int VERTICAL = 1;\n-\n-/*************************************************************************/\n-\n-/*\n- * Instance Methods\n- */\n-\n-/**\n-  * Returns the current value of the object.\n-  *\n-  * @return The current value of the object.\n-  */\n-public abstract int\n-getValue();\n-\n-/*************************************************************************/\n-\n-/**\n-  * Sets the current value of the object.\n-  *\n-  * @param value The current value of the object.\n-  */\n-public abstract void\n-setValue(int value);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the orientation of the object, either <code>HORIZONTAL</code>\n-  * or <code>VERTICAL</code>.\n-  *\n-  * @return The orientation of this object.\n-  */\n-public abstract int\n-getOrientation();\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the minimum value this object can take.\n-  *\n-  * @return The minimum value this object can take.\n-  */\n-public abstract int\n-getMinimum();\n-\n-/*************************************************************************/\n-\n-/**\n-  * Sets the minimum value this object can take to the specified value.\n-  *\n-  * @param minimum The new minimum value for this object.\n-  */\n-public abstract void\n-setMinimum(int minimum);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the maximum value this object can take.\n-  *\n-  * @return The maximum value this object can take.\n-  */\n-public abstract int\n-getMaximum();\n-\n-/*************************************************************************/\n-\n-/**\n-  * Sets the maximum value this object can take to the specified value.\n-  *\n-  * @param maximum The new maximum value for this object.\n-  */\n-public abstract void\n-setMaximum(int maximum);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the increment value for incrementing by units.\n-  *\n-  * @return The unit increment value.\n-  */\n-public abstract int\n-getUnitIncrement();\n-\n-/*************************************************************************/\n-\n-/**\n-  * Sets the increment value for incrementing by units to the specified value.\n-  *\n-  * @param increment The unit increment value.\n-  */\n-public abstract void\n-setUnitIncrement(int increment);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the increment value for incrementing by blocks.\n-  *\n-  * @return The block increment value.\n-  */\n-public abstract int\n-getBlockIncrement();\n-\n-/*************************************************************************/\n-\n-/**\n-  * Sets the increment value for incrementing by blocks to the specified value.\n-  *\n-  * @param increment The block increment value.\n-  */\n-public abstract void\n-setBlockIncrement(int increment);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the length of the indicator for this object.\n-  *\n-  * @return The indicator length.\n-  */\n-public abstract int\n-getVisibleAmount();\n-\n-/*************************************************************************/\n-\n-/**\n-  * Sets the length of the indicator for this object to the specified value.\n-  *\n-  * @param length The indicator length\n-  */\n-public abstract void\n-setVisibleAmount(int length);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Adds a listener that will receive adjustment events for this object.\n-  * \n-  * @param listener The adjustment listener to add.\n-  */\n-public abstract void\n-addAdjustmentListener(AdjustmentListener listener);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Removes an adjustment listener from this object.  It will no longer\n-  * receive adjustment events.\n-  *\n-  * @param listener The adjustment listener to remove.\n-  */\n-public abstract void\n-removeAdjustmentListener(AdjustmentListener listener);\n-\n+  /** Constant for an adjustable object with horizontal orientation. */\n+  int HORIZONTAL = 0;\n+\n+  /** Constant for an adjustable object with vertical orientation. */\n+  int VERTICAL = 1;\n+\n+  /** Constant for an adjustable object with no orientation. */\n+  int NO_ORIENTATION = 2;\n+\n+  /**\n+   * Returns a constant representing the orientation of the object.\n+   *\n+   * @return the orientation of this object\n+   * @see #HORIZONTAL\n+   * @see #VERTICAL\n+   * @see #NO_ORIENTATION\n+   */\n+  int getOrientation();\n+\n+  /**\n+   * Sets the minimum value this object can have.\n+   *\n+   * @param minimum the new minimum value\n+   */\n+  void setMinimum(int minimum);\n+\n+  /**\n+   * Returns the minimum value this object can have.\n+   *\n+   * @return the minimum value\n+   */\n+  int getMinimum();\n+\n+  /**\n+   * Sets the maximum value this object can have.\n+   *\n+   * @param maximum the new maximum value\n+   */\n+  void setMaximum(int maximum);\n+\n+  /**\n+   * Returns the maximum value this object can have.\n+   *\n+   * @return the maximum value\n+   */\n+  int getMaximum();\n+\n+  /**\n+   * Sets the increment value for incrementing the value by units.\n+   *\n+   * @param increment the unit increment value\n+   */\n+  void setUnitIncrement(int increment);\n+\n+  /**\n+   * Returns the increment value for incrementing the value by units.\n+   *\n+   * @return the unit increment value\n+   */\n+  int getUnitIncrement();\n+\n+  /**\n+   * Sets the increment value for incrementing the value by blocks.\n+   *\n+   * @param increment the block increment value\n+   */\n+  void setBlockIncrement(int increment);\n+\n+  /**\n+   * Returns the increment value for incrementing the value by blocks.\n+   *\n+   * @return the block increment value\n+   */\n+  int getBlockIncrement();\n+\n+  /**\n+   * Sets the length of the indicator for this object to the specified value.\n+   *\n+   * @param length the indicator length\n+   */\n+  void setVisibleAmount(int length);\n+\n+  /**\n+   * Returns the length of the indicator for this object.\n+   *\n+   * @return the indicator length\n+   */\n+  int getVisibleAmount();\n+\n+  /**\n+   * Sets the current value of the object.\n+   *\n+   * @param value the new value\n+   */\n+  void setValue(int value);\n+\n+  /**\n+   * Returns the current value of the object.\n+   *\n+   * @return the current value\n+   */\n+  int getValue();\n+\n+  /**\n+   * Adds a listener that will receive adjustment events for this object.\n+   *\n+   * @param listener the adjustment listener to add\n+   * @see AdjustmentEvent\n+   */\n+  void addAdjustmentListener(AdjustmentListener listener);\n+\n+  /**\n+   * Removes an adjustment listener from this object.\n+   *\n+   * @param listener the adjustment listener to remove\n+   * @see AdjustmentEvent\n+   */\n+  void removeAdjustmentListener(AdjustmentListener listener);\n } // interface Adjustable\n-"}, {"sha": "14649fc74a39ccd97fd002d6ee088c5eebfaffe3", "filename": "libjava/java/awt/AlphaComposite.java", "status": "added", "additions": 143, "deletions": 0, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FAlphaComposite.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FAlphaComposite.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAlphaComposite.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,143 @@\n+/* AlphaComposite.java -- provides a context for performing alpha compositing\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+import java.awt.image.ColorModel;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+/**\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @see Composite\n+ * @see CompositeContext\n+ * @since 1.3\n+ * @status updated to 1.4 except for createContext, needs documentation\n+ */\n+public final class AlphaComposite implements Composite\n+{\n+  /** Map Long to AlphaComposites. See getInstance for details. */\n+  private static final LinkedHashMap cache = new LinkedHashMap(11, 0.75f, true)\n+  {\n+    /** The largest the alpha composite cache can grow. */\n+    private static final int MAX_CACHE_SIZE = 2048;\n+\n+    /** Prune stale entries. */\n+    protected boolean removeEldestEntry(Map.Entry eldest)\n+    {\t// XXX - FIXME Use Map.Entry, not just Entry as gcj 3.1 workaround.\n+      return size() > MAX_CACHE_SIZE;\n+    }\n+  };\n+  public static final int CLEAR = 1;\n+  public static final int SRC = 2;\n+  public static final int DST = 9;\n+  public static final int SRC_OVER = 3;\n+  public static final int DST_OVER = 4;\n+  public static final int SRC_IN = 5;\n+  public static final int DST_IN = 6;\n+  public static final int SRC_OUT = 7;\n+  public static final int DST_OUT = 8;\n+  public static final int SRC_ATOP = 10;\n+  public static final int DST_ATOP = 11;\n+  public static final int XOR = 12;\n+  public static final AlphaComposite Clear = getInstance(CLEAR);\n+  public static final AlphaComposite Src = getInstance(SRC);\n+  public static final AlphaComposite Dst = getInstance(DST);\n+  public static final AlphaComposite SrcOver = getInstance(SRC_OVER);\n+  public static final AlphaComposite DstOver = getInstance(DST_OVER);\n+  public static final AlphaComposite SrcIn = getInstance(SRC_IN);\n+  public static final AlphaComposite DstIn = getInstance(DST_IN);\n+  public static final AlphaComposite SrcOut = getInstance(SRC_OUT);\n+  public static final AlphaComposite DstOut = getInstance(DST_OUT);\n+  public static final AlphaComposite SrcAtop = getInstance(SRC_ATOP);\n+  public static final AlphaComposite DstAtop = getInstance(DST_ATOP);\n+  public static final AlphaComposite Xor = getInstance(XOR);\n+  private final int rule;\n+  private final float alpha;\n+  private AlphaComposite(int rule, float alpha)\n+  {\n+    this.rule = rule;\n+    this.alpha = alpha;\n+  }\n+  public static AlphaComposite getInstance(int rule)\n+  {\n+    return getInstance(rule, 1);\n+  }\n+  public static AlphaComposite getInstance(int rule, float alpha)\n+  {\n+    if (rule < CLEAR || rule > XOR || ! (alpha >= 0 && alpha <= 1))\n+      throw new IllegalArgumentException();\n+    // This long is guaranteed unique for all valid alpha composites.\n+    Long l = new Long(rule + Double.doubleToLongBits(alpha));\n+    AlphaComposite a = (AlphaComposite) cache.get(l);\n+    if (a == null)\n+      {\n+        a = new AlphaComposite(rule, alpha);\n+        cache.put(l, a);\n+      }\n+    return a;\n+  }\n+  public CompositeContext createContext(ColorModel srcColorModel,\n+                                        ColorModel dstColorModel,\n+                                        RenderingHints hints)\n+  {\n+    // XXX Implement. Sun uses undocumented implementation class\n+    // sun.java2d.SunCompositeContext.\n+    throw new Error(\"not implemented\");\n+  }\n+  public float getAlpha()\n+  {\n+    return alpha;\n+  }\n+  public int getRule()\n+  {\n+    return rule;\n+  }\n+  public int hashCode()\n+  {\n+    return 31 * Float.floatToIntBits(alpha) + rule;\n+  }\n+  public boolean equals(Object o)\n+  {\n+    if (! (o instanceof AlphaComposite))\n+      return false;\n+    AlphaComposite a = (AlphaComposite) o;\n+    return rule == a.rule && alpha == a.alpha;\n+  }\n+} // class AlphaComposite"}, {"sha": "f692c012f9f98d982a00d13c030e60a5660ee07d", "filename": "libjava/java/awt/AttributeValue.java", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FAttributeValue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FAttributeValue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAttributeValue.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,98 @@\n+/* AttributeValue.java -- parent of type-safe enums of attributes\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+/**\n+ * This class is undocumented by Sun, but it is the parent of several other\n+ * classes, all of which are type-safe enumerations. This takes care of\n+ * <code>equals</code>, <code>toString</code>, and <code>hashCode</code>, so\n+ * that you don't have to (although hashCode is commonly overridden).\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ */\n+class AttributeValue\n+{\n+  /** The value of the enumeration. Package visible for speed. */\n+  final int value;\n+\n+  /** The list of enumeration names for the given subclass. */\n+  private final String[] names;\n+\n+  /**\n+   * Construct a type-safe enumeration element. For example,<br>\n+   * <pre>\n+   * class Foo extends AttributeValue\n+   * {\n+   *   private static final String[] names = { \"one\", \"two\" }\n+   *   public static final Foo ONE = new Foo(0);\n+   *   public static final Foo TWO = new Foo(1);\n+   *   private Foo(int value) { super(value, names); }\n+   * }\n+   * </pre>\n+   *\n+   * @param value the position of this enumeration element, consecutive from 0\n+   * @param names the constant list of enumeration names for the subclass\n+   */\n+  AttributeValue(int value, String[] names)\n+  {\n+    this.value = value;\n+    this.names = names;\n+  }\n+\n+  /**\n+   * Returns the hashcode of this element. This is the index of the element\n+   * in the enumeration. Note that equals defaults to the == relation.\n+   *\n+   * @return the hashcode\n+   */\n+  public int hashCode()\n+  {\n+    return value;\n+  }\n+\n+  /**\n+   * Returns the name of this enumeration element.\n+   *\n+   * @return the element name\n+   */\n+  public String toString()\n+  {\n+    return names[value];\n+  }\n+} // class AttributeValue"}, {"sha": "c3290336cd9bfab4c44a012e5cdde03b36aae884", "filename": "libjava/java/awt/BasicStroke.java", "status": "added", "additions": 144, "deletions": 0, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FBasicStroke.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FBasicStroke.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FBasicStroke.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,144 @@\n+/* BasicStroke.java -- \n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+import java.util.Arrays;\n+\n+/**\n+ * STUB CLASS ONLY\n+ */\n+public class BasicStroke implements Stroke\n+{\n+  public static final int JOIN_MITER = 0;\n+  public static final int JOIN_ROUND = 1;\n+  public static final int JOIN_BEVEL = 2;\n+  public static final int CAP_BUTT = 0;\n+  public static final int CAP_ROUND = 1;\n+  public static final int CAP_SQUARE = 2;\n+\n+  private final float width;\n+  private final int cap;\n+  private final int join;\n+  private final float limit;\n+  private final float[] dash;\n+  private final float phase;\n+\n+  public BasicStroke(float width, int cap, int join, float miterlimit,\n+                     float[] dash, float dashPhase)\n+  {\n+    if (width < 0 || miterlimit < 1 || cap < CAP_BUTT || cap > CAP_SQUARE\n+        || join < JOIN_MITER || join > JOIN_BEVEL)\n+      throw new IllegalArgumentException();\n+    this.width = width;\n+    this.cap = cap;\n+    this.join = join;\n+    limit = miterlimit;\n+    this.dash = dash == null ? null : (float[]) dash.clone();\n+    phase = dashPhase;\n+  }\n+\n+  public BasicStroke(float width, int cap, int join, float miterlimit)\n+  {\n+    this(width, cap, join, miterlimit, null, 0);\n+  }\n+\n+  public BasicStroke(float width, int cap, int join)\n+  {\n+    this(width, cap, join, 10, null, 0);\n+  }\n+\n+  public BasicStroke(float width)\n+  {\n+    this(width, CAP_SQUARE, JOIN_MITER, 10, null, 0);\n+  }\n+\n+  public BasicStroke()\n+  {\n+    this(1, CAP_SQUARE, JOIN_MITER, 10, null, 0);\n+  }\n+  \n+  public Shape createStrokedShape(Shape s)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public float getLineWidth()\n+  {\n+    return width;\n+  }\n+\n+  public int getEndCap()\n+  {\n+    return cap;\n+  }\n+\n+  public int getLineJoin()\n+  {\n+    return join;\n+  }\n+\n+  public float getMiterLimit()\n+  {\n+    return limit;\n+  }\n+\n+  public float[] getDashArray()\n+  {\n+    return dash;\n+  }\n+\n+  public float getDashPhase()\n+  {\n+    return phase;\n+  }\n+\n+  public int hashCode()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public boolean equals(Object o)\n+  {\n+    if (! (o instanceof BasicStroke))\n+      return false;\n+    BasicStroke s = (BasicStroke) o;\n+    return width == s.width && cap == s.cap && join == s.join\n+      && limit == s.limit && Arrays.equals(dash, s.dash) && phase == s.phase;\n+  }\n+} // class BasicStroke"}, {"sha": "d1bbd1f235a7df8d0587837a2f5f1f5b7ab78e95", "filename": "libjava/java/awt/BorderLayout.java", "status": "modified", "additions": 98, "deletions": 18, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FBorderLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FBorderLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FBorderLayout.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -77,27 +77,107 @@ public class BorderLayout implements LayoutManager2, java.io.Serializable\n   */\n public static final String CENTER = \"Center\";\n \n-/**\n-  * Constant indicating the position just after the last line of the\n-  * layout.\n-  */\n-public static final String AFTER_LAST_LINE = \"Last\";\n \n-/**\n-  * Constant indicating the position just after the end of the line.\n-  */\n-public static final String AFTER_LINE_ENDS = \"After\";\n+  /**\n+   * The constant indicating the position before the first line of the\n+   * layout.  The exact position depends on the writing system: For a\n+   * top-to-bottom orientation, it is the same as {@link #NORTH}, for\n+   * a bottom-to-top orientation, it is the same as {@link #SOUTH}.\n+   *\n+   * <p>This constant is an older name for {@link #PAGE_START} which\n+   * has exactly the same value.\n+   *\n+   * @since 1.2\n+   */\n+  public static final String BEFORE_FIRST_LINE = \"First\";\n+\n+\n+  /**\n+   * The constant indicating the position after the last line of the\n+   * layout.  The exact position depends on the writing system: For a\n+   * top-to-bottom orientation, it is the same as {@link #SOUTH}, for\n+   * a bottom-to-top orientation, it is the same as {@link #NORTH}.\n+   *\n+   * <p>This constant is an older name for {@link #PAGE_END} which\n+   * has exactly the same value.\n+   *\n+   * @since 1.2\n+   */\n+  public static final String AFTER_LAST_LINE = \"Last\";\n+\n+\n+  /**\n+   * The constant indicating the position before the first item of the\n+   * layout.  The exact position depends on the writing system: For a\n+   * left-to-right orientation, it is the same as {@link #WEST}, for\n+   * a right-to-left orientation, it is the same as {@link #EAST}.\n+   *\n+   * <p>This constant is an older name for {@link #LINE_START} which\n+   * has exactly the same value.\n+   *\n+   * @since 1.2\n+   */\n+  public static final String BEFORE_LINE_BEGINS = \"Before\";\n+\n+\n+  /**\n+   * The constant indicating the position after the last item of the\n+   * layout.  The exact position depends on the writing system: For a\n+   * left-to-right orientation, it is the same as {@link #EAST}, for\n+   * a right-to-left orientation, it is the same as {@link #WEST}.\n+   *\n+   * <p>This constant is an older name for {@link #LINE_END} which\n+   * has exactly the same value.\n+   *\n+   * @since 1.2\n+   */\n+  public static final String AFTER_LINE_ENDS = \"After\";\n+\n+\n+  /**\n+   * The constant indicating the position before the first line of the\n+   * layout.  The exact position depends on the writing system: For a\n+   * top-to-bottom orientation, it is the same as {@link #NORTH}, for\n+   * a bottom-to-top orientation, it is the same as {@link #SOUTH}.\n+   *\n+   * @since 1.4\n+   */\n+  public static final String PAGE_START = BEFORE_FIRST_LINE;\n+\n+\n+  /**\n+   * The constant indicating the position after the last line of the\n+   * layout.  The exact position depends on the writing system: For a\n+   * top-to-bottom orientation, it is the same as {@link #SOUTH}, for\n+   * a bottom-to-top orientation, it is the same as {@link #NORTH}.\n+   *\n+   * @since 1.4\n+   */\n+  public static final String PAGE_END = AFTER_LAST_LINE;\n+\n+\n+  /**\n+   * The constant indicating the position before the first item of the\n+   * layout.  The exact position depends on the writing system: For a\n+   * left-to-right orientation, it is the same as {@link #WEST}, for\n+   * a right-to-left orientation, it is the same as {@link #EAST}.\n+   *\n+   * @since 1.4\n+   */\n+  public static final String LINE_START = BEFORE_LINE_BEGINS;\n+\n+\n+  /**\n+   * The constant indicating the position after the last item of the\n+   * layout.  The exact position depends on the writing system: For a\n+   * left-to-right orientation, it is the same as {@link #EAST}, for\n+   * a right-to-left orientation, it is the same as {@link #WEST}.\n+   *\n+   * @since 1.4\n+   */\n+  public static final String LINE_END = AFTER_LINE_ENDS;\n \n-/**\n-  * Constant indicating the position just before the first line of the\n-  * layout.\n-  */\n-public static final String BEFORE_FIRST_LINE = \"First\";\n \n-/**\n-  * Constant indicating the position at the beginning of the line.\n-  */\n-public static final String BEFORE_LINE_BEGINS = \"Before\";\n \n // Serialization constant\n private static final long serialVersionUID = -8658291919501921765L;"}, {"sha": "389594b76b57ff4f1f0c9ab18b667dd7bef74427", "filename": "libjava/java/awt/BufferCapabilities.java", "status": "added", "additions": 121, "deletions": 0, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FBufferCapabilities.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FBufferCapabilities.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FBufferCapabilities.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,121 @@\n+/* BufferCapabilities.java -- \n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+/**\n+ * Needs documentation...\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @see BufferStrategy#getCapabilities()\n+ * @see GraphicsConfiguration#getCapabilities()\n+ * @since 1.4\n+ * @status updated to 1.4, lacks documentation\n+ */\n+public class BufferCapabilities implements Cloneable\n+{\n+  public static final class FlipContents extends AttributeValue\n+  {\n+    private static final String[] NAMES\n+      = { \"undefined\", \"background\", \"prior\", \"copied\" };\n+    public static final FlipContents UNDEFINED = new FlipContents(0);\n+    public static final FlipContents BACKGROUND = new FlipContents(1);\n+    public static final FlipContents PRIOR = new FlipContents(2);\n+    public static final FlipContents COPIED = new FlipContents(3);\n+    private FlipContents(int value)\n+    {\n+      super(value, NAMES);\n+    }\n+  } // class FlipContents\n+\n+  private final ImageCapabilities front;\n+  private final ImageCapabilities back;\n+  private final FlipContents flip;\n+\n+  public BufferCapabilities(ImageCapabilities front, ImageCapabilities back,\n+                            FlipContents flip)\n+  {\n+    this.front = front;\n+    this.back = back;\n+    this.flip = flip;\n+    if (front ==  null || back == null)\n+      throw new IllegalArgumentException();\n+  }\n+\n+  public ImageCapabilities getFrontBufferCapabilities()\n+  {\n+    return front;\n+  }\n+\n+  public ImageCapabilities getBackBufferCapabilities()\n+  {\n+    return back;\n+  }\n+\n+  public boolean isPageFlipping()\n+  {\n+    return flip != null;\n+  }\n+\n+  public FlipContents getFlipContents()\n+  {\n+    return flip;\n+  }\n+\n+  public boolean isFullScreenRequired()\n+  {\n+    return true;\n+  }\n+\n+  public boolean isMultiBufferAvailable()\n+  {\n+    return false;\n+  }\n+\n+  public Object clone()\n+  {\n+    try\n+      {\n+        return super.clone();\n+      }\n+    catch (CloneNotSupportedException e)\n+      {\n+        throw (Error) new InternalError().initCause(e); // Impossible\n+      }\n+  }\n+} // class BufferCapabilities"}, {"sha": "ed954ddcfda83b2e4feb6db3d47f04523408f16f", "filename": "libjava/java/awt/Button.java", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FButton.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -42,6 +42,7 @@\n import java.awt.event.ActionListener;\n import java.awt.peer.ButtonPeer;\n import java.awt.peer.ComponentPeer;\n+import java.lang.reflect.Array;\n import java.util.EventListener;\n \n /**\n@@ -200,13 +201,24 @@ public class Button extends Component implements java.io.Serializable\n   action_listeners = AWTEventMulticaster.remove(action_listeners, listener);\n }\n \n-public EventListener[]\n-getListeners(Class listenerType)\n-{\n-  if (listenerType == ActionListener.class)\n-    return getListenersImpl(listenerType, action_listeners);\n-  return super.getListeners(listenerType);\n-}\n+  public synchronized ActionListener[] getActionListeners()\n+  {\n+    return (ActionListener[])\n+      AWTEventMulticaster.getListeners(action_listeners,\n+                                       ActionListener.class);\n+  }\n+\n+/** Returns all registered EventListers of the given listenerType. \n+ * listenerType must be a subclass of EventListener, or a \n+ * ClassClassException is thrown.\n+ * @since 1.3 \n+ */\n+  public EventListener[] getListeners(Class listenerType)\n+  {\n+    if (listenerType == ActionListener.class)\n+      return getActionListeners();\n+    return (EventListener[]) Array.newInstance(listenerType, 0);\n+  }\n \n /*************************************************************************/\n "}, {"sha": "ab04c21cda5fe8fd0c0b61749d131ddbeefdeb5e", "filename": "libjava/java/awt/Choice.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FChoice.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FChoice.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FChoice.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -234,7 +234,7 @@ public class Choice extends Component implements ItemSelectable, Serializable\n   *\n   * @param index The index of the item to remove.\n   *\n-  * @exception ArrayIndexOutOfBoundException If the index is not valid.\n+  * @exception ArrayIndexOutOfBoundsException If the index is not valid.\n   */\n public synchronized void\n remove(int index)"}, {"sha": "761b738e448a4a079ebc242c92ddda527912441f", "filename": "libjava/java/awt/Color.java", "status": "modified", "additions": 961, "deletions": 491, "changes": 1452, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FColor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FColor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FColor.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,4 +1,4 @@\n-/* Color.java -- Class representing a color in Java\n+/* Color.java -- represents a color in Java\n    Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -38,496 +38,966 @@\n \n package java.awt;\n \n-/**\n-  * This class represents a color value in the AWT system.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n-public class Color implements java.io.Serializable\n-{\n-\n-/*\n- * Static Variables\n- */\n-\n-/**\n-  * Constant for the color white\n-  */\n-public static final Color white = new Color(255,255,255,255);\n-\n-/**\n-  * Constant for the color light gray\n-  */\n-public static final Color lightGray = new Color(192,192,192,255);\n-\n-/**\n-  * Constant for the color gray\n-  */\n-public static final Color gray = new Color(128,128,128,255);\n-\n-/**\n-  * Constant for the color dark gray\n-  */\n-public static final Color darkGray = new Color(64,64,64,255);\n-\n-/**\n-  * Constant for the color black\n-  */\n-public static final Color black = new Color(0,0,0,255);\n-\n-/**\n-  * Constant for the color red\n-  */\n-public static final Color red = new Color(255,0,0,255);\n-\n-/**\n-  * Constant for the color pink\n-  */\n-public static final Color pink = new Color(255, 175, 175,255);\n-\n-/**\n-  * Constant for the color orange\n-  */\n-public static final Color orange = new Color(255, 200, 0,255);\n-\n-/**\n-  * Constant for the color yellow\n-  */\n-public static final Color yellow = new Color(255,255,0,255);\n-\n-/**\n-  * Constant for the color green\n-  */\n-public static final Color green = new Color(0,255,0,255);\n-\n-/**\n-  * Constant for the color magenta\n-  */\n-public static final Color magenta = new Color(255,0,255,255);\n-\n-/**\n-  * Constant for the color cyan\n-  */\n-public static final Color cyan = new Color(0,255,255,255);\n-\n-/**\n-  * Constant for the color blue\n-  */\n-public static final Color blue = new Color(0,0,255,255);\n-\n-// Serialization Constant\n-private static final long serialVersionUID = 118526816881161077L;\n-\n-// Masks for individual color components\n-private static final int redmask = 255 << 16;\n-private static final int greenmask = 255 << 8;\n-private static final int bluemask = 255;\n-private static final int alphamask = 255 << 24;\n-\n-private static final int BRIGHT_STEP = 0x30;\n-\n-/*************************************************************************/\n-\n-/*\n- * Instance Variables\n- */\n-\n-/**\n-  * @serial The RGB value of the color.\n-  */\n-private int value = 0xFFFFFFFF;\n-\n-/*************************************************************************/\n-\n-/*\n- * Static Methods\n- */\n-\n-/**\n-  * Converts the specified string to a number and creates a new instance\n-  * of <code>Color</code> from the value.\n-  *\n-  * @param str The numeric color string.\n-  *\n-  * @return A new instance of <code>Color</code> for the string.\n-  *\n-  * @exception NumberFormatException If the string cannot be parsed.\n-  */\n-public static Color\n-decode(String str) throws NumberFormatException\n-{\n-  Integer i = Integer.decode(str);\n-  return(new Color(i.intValue()));\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns a new instance of <code>Color</code> from the value of\n-  * the system property named by the specified string.  If the property\n-  * does not exist, or cannot be parsed, then <code>null</code> will be\n-  * returned.\n-  *\n-  * @param prop The system property to retrieve.\n-  */\n-public static Color\n-getColor(String prop)\n-{\n-  return(getColor(prop, null));\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns a new instance of <code>Color</code> from the value of the\n-  * system property named by the specified string.  If the property does\n-  * not exist, or cannot be parsed, then the default RGB value will be\n-  * used to create a return value.\n-  *\n-  * @param prop The system property to retrieve.\n-  * @param defrgb The default RGB value.\n-  */\n-public static Color\n-getColor(String prop, int defrgb)\n-{\n-  return(getColor(prop, new Color(defrgb)));\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns a new instance of <code>Color</code> from the value of the\n-  * system property named by the specified string.  If the property does\n-  * not exist, or cannot be parsed, then the default color value will be\n-  * returned\n-  *\n-  * @param prop The system property to retrieve.\n-  * @param defcolor The default color\n-  */\n-public static Color\n-getColor(String prop, Color defcolor)\n-{\n-  String val = System.getProperty(prop);\n-  if (val == null)\n-    return(defcolor);\n-\n-  try\n-    {\n-      return(decode(val));\n-    }\n-  catch(NumberFormatException e)\n-    {\n-      return(defcolor);\n-    }\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Converts from the HSB (hue, saturation, brightness) color model to\n-  * the RGB (red, green, blue) color model.\n-  *\n-  * @param hue The hue of the HSB value.\n-  * @param saturation The saturation of the HSB value.\n-  * @param brightness The brightness of the HSB value.\n-  *\n-  * @return The RGB value.\n-  */\n-public static int\n-HSBtoRGB(float hue, float saturation, float brightness)\n-{\n-  // FIXME: Implement\n-  throw new RuntimeException(\"Not implemented yet\");\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Converts from the RGB (red, green, blue) color model to the HSB\n-  * (hue, saturation, brightness) color model.\n-  *\n-  * @param red The red part of the RGB value.\n-  * @param green The green part of the RGB value.\n-  * @param blue The blue part of the RGB value.\n-  * @param hsbvals An array of three floats used for storing the HSB values,\n-  * or <code>null</code> if this return mechanism is not used.\n-  *\n-  * @return The HSB value.\n-  */\n-public static float[]\n-RGBtoHSB(int red, int green, int blue, float hsbvals[])\n-{\n-  // FIXME: Implement\n-  throw new RuntimeException(\"Not implemented yet\");\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns a new instance of <code>Color</code> based on the specified\n-  * HSB values.\n-  *\n-  * @param hue The hue of the HSB value.\n-  * @param saturation The saturation of the HSB value.\n-  * @param brightness The brightness of the HSB value.\n-  *\n-  * @return The new <code>Color</code> object.\n-  */\n-public static Color\n-getHSBColor(float hue, float saturation, float brightness)\n-{\n-  return(new Color(HSBtoRGB(hue, saturation, brightness)));\n-}\n-\n-/*************************************************************************/\n-\n-/*\n- * Constructors\n- */\n-\n-/**\n-  * Initializes a new instance of <code>Color</code> using the specified\n-  * red, green, and blue values, which must be given as integers in the\n-  * range of 0-255.\n-  *\n-  * @param red The red component of the RGB value.\n-  * @param green The green component of the RGB value.\n-  * @param blue The blue component of the RGB value.\n-  *\n-  * @exception IllegalArgumentException If the values are out of range.\n-  */\n-public\n-Color(int red, int green, int blue)\n-{\n-  if ((red < 0) || (red > 255) || (green < 0) || (green > 255) ||\n-      (blue < 0) || (blue > 255))\n-    throw new IllegalArgumentException(\"Bad RGB values\");\n-\n-  value = blue + (green << 8) + (red << 16);\n-}\n-\n-public\n-Color(int red, int green, int blue, int alpha)\n-{\n-  if ((red < 0) || (red > 255) || (green < 0) || (green > 255) ||\n-      (blue < 0) || (blue > 255))\n-    throw new IllegalArgumentException(\"Bad RGB values\");\n-\n-  value = blue + (green << 8) + (red << 16) + (alpha << 24);\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Initializes a new instance of <code>Color</code> using the specified\n-  * RGB value.  The blue value is in bits 0-7, green in bits 8-15, and \n-  * red in bits 16-23.  The other bits are ignored.\n-  *\n-  * @param value The RGB value\n-  */\n-public\n-Color(int value)\n-{\n-  this.value = value;\n-}\n-\n-public\n-Color(int value, boolean hasalpha)\n-{\n-  this.value = value;\n-  if (! hasalpha)\n-    this.value |= 0xFF000000;\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Initializes a new instance of <code>Color</code> using the specified\n-  * RGB values.  These must be in the range of 0.0-1.0.\n-  *\n-  * @param red The red component of the RGB value.\n-  * @param green The green component of the RGB value.\n-  * @param blue The blue component of the RGB value.\n-  *\n-  * @exception IllegalArgumentException If the values are out of range.\n-  */\n-public\n-Color(float red, float green, float blue)\n-{\n-  if ((red < 0.0) || (red > 1.0) || (green < 0.0) || (green > 1.0) ||\n-      (blue < 0.0) || (blue > 1.0))\n-    throw new IllegalArgumentException(\"Bad RGB values\");\n-\n-  int redval = (int)(255 * red);\n-  int greenval = (int)(255 * green);\n-  int blueval = (int)(255 * blue);\n-\n-  value = blueval + (greenval << 8) + (redval << 16);\n-}\n-\n-/*************************************************************************/\n-\n-/*\n- * Instance Methods\n+import java.awt.color.ColorSpace;\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.Rectangle2D;\n+import java.awt.image.ColorModel;\n+import java.io.Serializable;\n+\n+/**\n+ * This class represents a color value in the AWT system. It uses the sRGB\n+ * (standard Red-Green-Blue) system, along with an alpha value ranging from\n+ * transparent (0.0f or 0) and opaque (1.0f or 255). The color is not\n+ * pre-multiplied by the alpha value an any of the accessor methods. Further\n+ * information about sRGB can be found at\n+ * <a href=\"http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html\">\n+ * http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html</a>.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @see ColorSpace\n+ * @see AlphaComposite\n+ * @since 1.0\n+ * @status updated to 1.4\n  */\n-\n-/**\n-  * Returns the red value for this color.\n-  *\n-  * @return The red value for this color.\n-  */\n-public int\n-getRed()\n-{\n-  int redval = (value & redmask) >> 16;\n-\n-  return(redval);\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the green value for this color.\n-  *\n-  * @return The green value for this color.\n-  */\n-public int\n-getGreen()\n-{\n-  int greenval = (value & greenmask) >> 8;\n-\n-  return(greenval);\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the blue value for this color.\n-  *\n-  * @return The blue value for this color.\n-  */\n-public int\n-getBlue()\n-{\n-  int blueval = (value & bluemask);\n-\n-  return(blueval);\n-}\n-\n-public int\n-getAlpha()\n-{\n-  int alphaval = (value & alphamask);\n-\n-  return(alphaval);\n-}\n-\n-public int\n-getTransparency()\n-{\n-  if (getAlpha() == 0xFF)\n-    return Transparency.OPAQUE;\n-  else\n-    return Transparency.TRANSLUCENT;\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the RGB value for this color.  The blue value will be in bits\n-  * 0-7, green in 8-15, and red in 6-23.  The upper bits should be ignored.\n-  *\n-  * @return The RGB value for this color.\n-  */\n-public int\n-getRGB()\n-{\n-  return(value);\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns a brighter version of this color.  This is done by increasing\n-  * the RGB values by an arbitrary scale factor.  Note that this method\n-  * and the <code>darker()</code> method are not necessarily inverses.\n-  *\n-  * @return A brighter version of this color.\n-  */\n-public Color\n-brighter()\n-{\n-  return new Color(Math.min(255, getRed()   + BRIGHT_STEP),\n-\t\t   Math.min(255, getGreen() + BRIGHT_STEP),\n-\t\t   Math.min(255, getBlue()  + BRIGHT_STEP),\n-\t\t   getAlpha());\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns a darker version of this color.  This is done by decreasing\n-  * the RGB values by an arbitrary scale factor.  Note that this method\n-  * and the <code>brighter()</code> method are not necessarily inverses.\n-  *\n-  * @return A darker version of this color.\n-  */\n-public Color\n-darker()\n+public class Color implements Paint, Serializable\n {\n-  return new Color(Math.max(0, getRed()   - BRIGHT_STEP),\n-\t\t   Math.max(0, getGreen() - BRIGHT_STEP),\n-\t\t   Math.max(0, getBlue()  - BRIGHT_STEP),\n-\t\t   getAlpha());\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns a hash value for this color.\n-  *\n-  * @return A hash value for this color.\n-  */\n-public int\n-hashCode()\n-{\n-  return(value);\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Tests this object for equality against the specified object.  This will\n-  * be true if and only if the specified object is an instance of\n-  * <code>Color</code> and has the same red, green, and blue values as\n-  * this object.\n-  *\n-  * @return <code>true</code> if the specified object is equal to this one,\n-  * <code>false</code> otherwise.\n-  */\n-public boolean\n-equals(Object obj)\n-{\n-  if (!(obj instanceof Color))\n-    return(false);\n-\n-  Color c = (Color)obj;\n-  return value == c.value;\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns a string representation of this object.\n-  * \n-  * @return A string representation of this object.\n-  */\n-public String\n-toString()\n-{\n-  return(getClass().getName() + \"(red=\" + getRed() + \",green=\" + getGreen() +\n-         \",blue=\" + getBlue() + \")\");\n-}\n-\n+  /**\n+   * Compatible with JDK 1.0+.\n+   */\n+  private static final long serialVersionUID = 118526816881161077L;\n+\n+  /** Constant for the color white: R=255, G=255, B=255. */\n+  public static final Color white = new Color(0xffffff, false);\n+\n+  /**\n+   * Constant for the color white: R=255, G=255, B=255.\n+   *\n+   * @since 1.4\n+   */\n+  public static final Color WHITE = white;\n+\n+  /** Constant for the color light gray: R=192, G=192, B=192. */\n+  public static final Color lightGray = new Color(0xc0c0c0, false);\n+\n+  /**\n+   * Constant for the color light gray: R=192, G=192, B=192.\n+   *\n+   * @since 1.4\n+   */\n+  public static final Color LIGHT_GRAY = lightGray;\n+\n+  /** Constant for the color gray: R=128, G=128, B=128. */\n+  public static final Color gray = new Color(0x808080, false);\n+\n+  /**\n+   * Constant for the color gray: R=128, G=128, B=128.\n+   *\n+   * @since 1.4\n+   */\n+  public static final Color GRAY = gray;\n+\n+  /** Constant for the color dark gray: R=64, G=64, B=64. */\n+  public static final Color darkGray = new Color(0x404040, false);\n+\n+  /**\n+   * Constant for the color dark gray: R=64, G=64, B=64.\n+   *\n+   * @since 1.4\n+   */\n+  public static final Color DARK_GRAY = darkGray;\n+\n+  /** Constant for the color black: R=0, G=0, B=0. */\n+  public static final Color black = new Color(0x000000, false);\n+\n+  /**\n+   * Constant for the color black: R=0, G=0, B=0.\n+   *\n+   * @since 1.4\n+   */\n+  public static final Color BLACK = black;\n+\n+  /** Constant for the color red: R=255, G=0, B=0. */\n+  public static final Color red = new Color(0xff0000, false);\n+\n+  /**\n+   * Constant for the color red: R=255, G=0, B=0.\n+   *\n+   * @since 1.4\n+   */\n+  public static final Color RED = red;\n+\n+  /** Constant for the color pink: R=255, G=175, B=175. */\n+  public static final Color pink = new Color(0xffafaf, false);\n+\n+  /**\n+   * Constant for the color pink: R=255, G=175, B=175.\n+   *\n+   * @since 1.4\n+   */\n+  public static final Color PINK = pink;\n+\n+  /** Constant for the color orange: R=255, G=200, B=0. */\n+  public static final Color orange = new Color(0xffc800, false);\n+\n+  /**\n+   * Constant for the color orange: R=255, G=200, B=0.\n+   *\n+   * @since 1.4\n+   */\n+  public static final Color ORANGE = orange;\n+\n+  /** Constant for the color yellow: R=255, G=255, B=0. */\n+  public static final Color yellow = new Color(0xffff00, false);\n+\n+  /**\n+   * Constant for the color yellow: R=255, G=255, B=0.\n+   *\n+   * @since 1.4\n+   */\n+  public static final Color YELLOW = yellow;\n+\n+  /** Constant for the color green: R=0, G=255, B=0. */\n+  public static final Color green = new Color(0x00ff00, false);\n+\n+  /**\n+   * Constant for the color green: R=0, G=255, B=0.\n+   *\n+   * @since 1.4\n+   */\n+  public static final Color GREEN = green;\n+\n+  /** Constant for the color magenta: R=255, G=0, B=255. */\n+  public static final Color magenta = new Color(0xff00ff, false);\n+\n+  /**\n+   * Constant for the color magenta: R=255, G=0, B=255.\n+   *\n+   * @since 1.4\n+   */\n+  public static final Color MAGENTA = magenta;\n+\n+  /** Constant for the color cyan: R=0, G=255, B=255. */\n+  public static final Color cyan = new Color(0x00ffff, false);\n+\n+  /**\n+   * Constant for the color cyan: R=0, G=255, B=255.\n+   *\n+   * @since 1.4\n+   */\n+  public static final Color CYAN = cyan;\n+\n+  /** Constant for the color blue: R=0, G=0, B=255. */\n+  public static final Color blue = new Color(0x0000ff, false);\n+\n+  /**\n+   * Constant for the color blue: R=0, G=0, B=255.\n+   *\n+   * @since 1.4\n+   */\n+  public static final Color BLUE = blue;\n+\n+  /** Internal mask for red. */\n+  private static final int RED_MASK = 255 << 16;\n+\n+  /** Internal mask for green. */\n+  private static final int GREEN_MASK = 255 << 8;\n+\n+  /** Internal mask for blue. */\n+  private static final int BLUE_MASK = 255;\n+\n+  /** Internal mask for alpha. Package visible for use in subclass. */\n+  static final int ALPHA_MASK = 255 << 24;\n+\n+  /** Amount to scale a color by when brightening or darkening. */\n+  private static final float BRIGHT_SCALE = 0.7f;\n+\n+  /**\n+   * The color value, in sRGB. Note that the actual color may be more\n+   * precise if frgbvalue or fvalue is non-null. This class stores alpha, red,\n+   * green, and blue, each 0-255, packed in an int. However, the subclass\n+   * SystemColor stores an index into an array. Therefore, for serial\n+   * compatibility (and because of poor design on Sun's part), this value\n+   * cannot be used directly; instead you must use <code>getRGB()</code>.\n+   *\n+   * @see #getRGB()\n+   * @serial the value of the color, whether an RGB literal or array index\n+   */\n+  final int value;\n+\n+  /**\n+   * The color value, in sRGB. This may be null if the color was constructed\n+   * with ints; and it does not include alpha. This stores red, green, and\n+   * blue, in the range 0.0f - 1.0f.\n+   *\n+   * @see #getRGBColorComponents(float[])\n+   * @see #getRGBComponents(float[])\n+   * @serial the rgb components of the value\n+   * @since 1.2\n+   */\n+  private float[] frgbvalue;\n+\n+  /**\n+   * The color value, in the native ColorSpace components. This may be null\n+   * if the color was constructed with ints or in the sRGB color space; and\n+   * it does not include alpha.\n+   *\n+   * @see #getRGBColorComponents(float[])\n+   * @see #getRGBComponents(float[])\n+   * @serial the original color space components of the color\n+   * @since 1.2\n+   */\n+  private float[] fvalue;\n+\n+  /**\n+   * The alpha value. This is in the range 0.0f - 1.0f, but is invalid if\n+   * deserialized as 0.0 when frgbvalue is null.\n+   *\n+   * @see #getRGBComponents(float[])\n+   * @see #getComponents(float[])\n+   * @serial the alpha component of this color\n+   * @since 1.2\n+   */\n+  private final float falpha;\n+\n+  /**\n+   * The ColorSpace. Null means the default sRGB space.\n+   *\n+   * @see #getColor(String)\n+   * @see #getColorSpace()\n+   * @see #getColorComponents(float[])\n+   * @serial the color space for this color\n+   * @since 1.2\n+   */\n+  private final ColorSpace cs;\n+\n+  /**\n+   * The paint context for this solid color. Package visible for use in\n+   * subclass.\n+   */\n+  transient ColorPaintContext context;\n+\n+  /**\n+   * Initializes a new instance of <code>Color</code> using the specified\n+   * red, green, and blue values, which must be given as integers in the\n+   * range of 0-255. Alpha will default to 255 (opaque). When drawing to\n+   * screen, the actual color may be adjusted to the best match of hardware\n+   * capabilities.\n+   *\n+   * @param red the red component of the RGB value\n+   * @param green the green component of the RGB value\n+   * @param blue the blue component of the RGB value\n+   * @throws IllegalArgumentException if the values are out of range 0-255\n+   * @see #getRed()\n+   * @see #getGreen()\n+   * @see #getBlue()\n+   * @see #getRGB()\n+   * @see #Color(int, int, int, int)\n+   */\n+  public Color(int red, int green, int blue)\n+  {\n+    this(red, green, blue, 255);\n+  }\n+\n+  /**\n+   * Initializes a new instance of <code>Color</code> using the specified\n+   * red, green, blue, and alpha values, which must be given as integers in\n+   * the range of 0-255. When drawing to screen, the actual color may be\n+   * adjusted to the best match of hardware capabilities.\n+   *\n+   * @param red the red component of the RGB value\n+   * @param green the green component of the RGB value\n+   * @param blue the blue component of the RGB value\n+   * @param alpha the alpha value of the color\n+   * @throws IllegalArgumentException if the values are out of range 0-255\n+   * @see #getRed()\n+   * @see #getGreen()\n+   * @see #getBlue()\n+   * @see #getAlpha()\n+   * @see #getRGB()\n+   */\n+  public Color(int red, int green, int blue, int alpha)\n+  {\n+    if ((red & 255) != red || (green & 255) != green || (blue & 255) != blue\n+        || (alpha & 255) != alpha)\n+      throw new IllegalArgumentException(\"Bad RGB values\");\n+    value = (alpha << 24) | (red << 16) | (green << 8) | blue;\n+    falpha = 1;\n+    cs = null;\n+  }\n+\n+  /**\n+   * Initializes a new instance of <code>Color</code> using the specified\n+   * RGB value. The blue value is in bits 0-7, green in bits 8-15, and\n+   * red in bits 16-23. The other bits are ignored. The alpha value is set\n+   * to 255 (opaque). When drawing to screen, the actual color may be\n+   * adjusted to the best match of hardware capabilities.\n+   *\n+   * @param value the RGB value\n+   * @see ColorModel#getRGBdefault()\n+   * @see #getRed()\n+   * @see #getGreen()\n+   * @see #getBlue()\n+   * @see #getRGB()\n+   * @see #Color(int, boolean)\n+   */\n+  public Color(int value)\n+  {\n+    this(value, false);\n+  }\n+\n+  /**\n+   * Initializes a new instance of <code>Color</code> using the specified\n+   * RGB value. The blue value is in bits 0-7, green in bits 8-15, and\n+   * red in bits 16-23. The alpha value is in bits 24-31, unless hasalpha\n+   * is false, in which case alpha is set to 255. When drawing to screen, the\n+   * actual color may be adjusted to the best match of hardware capabilities.\n+   *\n+   * @param value the RGB value\n+   * @param hasalpha true if value includes the alpha\n+   * @see ColorModel#getRGBdefault()\n+   * @see #getRed()\n+   * @see #getGreen()\n+   * @see #getBlue()\n+   * @see #getAlpha()\n+   * @see #getRGB()\n+   */\n+  public Color(int value, boolean hasalpha)\n+  {\n+    // Note: SystemColor calls this constructor, setting falpha to 0; but\n+    // code in getRGBComponents correctly reports falpha as 1.0 to the user\n+    // for all instances of SystemColor since frgbvalue is left null here.\n+    if (hasalpha)\n+      falpha = ((value & ALPHA_MASK) >> 24) / 255f;\n+    else\n+      {\n+        value |= ALPHA_MASK;\n+        falpha = 1;\n+      }\n+    this.value = value;\n+    cs = null;\n+  }\n+\n+  /**\n+   * Initializes a new instance of <code>Color</code> using the specified\n+   * RGB values. These must be in the range of 0.0-1.0. Alpha is assigned\n+   * the value of 1.0 (opaque). When drawing to screen, the actual color may\n+   * be adjusted to the best match of hardware capabilities.\n+   *\n+   * @param red the red component of the RGB value\n+   * @param green the green component of the RGB value\n+   * @param blue the blue component of the RGB value\n+   * @throws IllegalArgumentException tf the values are out of range 0.0f-1.0f\n+   * @see #getRed()\n+   * @see #getGreen()\n+   * @see #getBlue()\n+   * @see #getRGB()\n+   * @see #Color(float, float, float, float)\n+   */\n+  public Color(float red, float green, float blue)\n+  {\n+    this(red, green, blue, 1.0f);\n+  }\n+\n+  /**\n+   * Initializes a new instance of <code>Color</code> using the specified\n+   * RGB and alpha values. These must be in the range of 0.0-1.0. When drawing\n+   * to screen, the actual color may be adjusted to the best match of\n+   * hardware capabilities.\n+   *\n+   * @param red the red component of the RGB value\n+   * @param green the green component of the RGB value\n+   * @param blue the blue component of the RGB value\n+   * @param alpha the alpha value of the color\n+   * @throws IllegalArgumentException tf the values are out of range 0.0f-1.0f\n+   * @see #getRed()\n+   * @see #getGreen()\n+   * @see #getBlue()\n+   * @see #getAlpha()\n+   * @see #getRGB()\n+   */\n+  public Color(float red, float green, float blue, float alpha)\n+  {\n+    value = convert(red, green, blue, alpha);\n+    frgbvalue = new float[] {red, green, blue};\n+    falpha = alpha;\n+    cs = null;\n+  }\n+\n+  /**\n+   * Creates a color in the given ColorSpace with the specified alpha. The\n+   * array must be non-null and have enough elements for the color space\n+   * (for example, RGB requires 3 elements, CMYK requires 4). When drawing\n+   * to screen, the actual color may be adjusted to the best match of\n+   * hardware capabilities.\n+   *\n+   * @param space the color space of components\n+   * @param components the color components, except alpha\n+   * @param alpha the alpha value of the color\n+   * @throws NullPointerException if cpsace or components is null\n+   * @throws ArrayIndexOutOfBoundsException if components is too small\n+   * @throws IllegalArgumentException if alpha or any component is out of range\n+   * @see #getComponents(float[])\n+   * @see #getColorComponents(float[])\n+   */\n+  public Color(ColorSpace space, float[] components, float alpha)\n+  {\n+    frgbvalue = space.toRGB(components);\n+    fvalue = components;\n+    falpha = alpha;\n+    cs = space;\n+    value = convert(frgbvalue[0], frgbvalue[1], frgbvalue[2], alpha);\n+  }\n+\n+  /**\n+   * Returns the red value for this color, as an integer in the range 0-255\n+   * in the sRGB color space.\n+   *\n+   * @return the red value for this color\n+   * @see #getRGB()\n+   */\n+  public int getRed()\n+  {\n+    // Do not inline getRGB() to value, because of SystemColor.\n+    return (getRGB() & RED_MASK) >> 16;\n+  }\n+\n+  /**\n+   * Returns the green value for this color, as an integer in the range 0-255\n+   * in the sRGB color space.\n+   *\n+   * @return the green value for this color\n+   * @see #getRGB()\n+   */\n+  public int getGreen()\n+  {\n+    // Do not inline getRGB() to value, because of SystemColor.\n+    return (getRGB() & GREEN_MASK) >> 8;\n+  }\n+\n+  /**\n+   * Returns the blue value for this color, as an integer in the range 0-255\n+   * in the sRGB color space.\n+   *\n+   * @return the blue value for this color\n+   * @see #getRGB()\n+   */\n+  public int getBlue()\n+  {\n+    // Do not inline getRGB() to value, because of SystemColor.\n+    return getRGB() & BLUE_MASK;\n+  }\n+\n+  /**\n+   * Returns the alpha value for this color, as an integer in the range 0-255.\n+   *\n+   * @return the alpha value for this color\n+   * @see #getRGB()\n+   */\n+  public int getAlpha()\n+  {\n+    // Do not inline getRGB() to value, because of SystemColor.\n+    return (getRGB() & ALPHA_MASK) >> 24;\n+  }\n+\n+  /**\n+   * Returns the RGB value for this color, in the sRGB color space. The blue\n+   * value will be in bits 0-7, green in 8-15, red in 6-23, and alpha value in\n+   * 24-31.\n+   *\n+   * @return the RGB value for this color\n+   * @see ColorModel#getRGBdefault()\n+   * @see #getRed()\n+   * @see #getGreen()\n+   * @see #getBlue()\n+   * @see #getAlpha()\n+   */\n+  public int getRGB()\n+  {\n+    return value;\n+  }\n+\n+  /**\n+   * Returns a brighter version of this color. This is done by increasing the\n+   * RGB values by an arbitrary scale factor. The new color is opaque (an\n+   * alpha of 255). Note that this method and the <code>darker()</code>\n+   * method are not necessarily inverses.\n+   *\n+   * @return a brighter version of this color\n+   * @see #darker()\n+   */\n+  public Color brighter()\n+  {\n+    // Do not inline getRGB() to this.value, because of SystemColor.\n+    int value = getRGB();\n+    int red = (value & RED_MASK) >> 16;\n+    int green = (value & GREEN_MASK) >> 8;\n+    int blue = value & BLUE_MASK;\n+    // We have to special case 0-2 because they won't scale by division.\n+    red = red < 3 ? 3 : (int) Math.min(255, red / BRIGHT_SCALE);\n+    green = green < 3 ? 3 : (int) Math.min(255, green / BRIGHT_SCALE);\n+    blue = blue < 3 ? 3 : (int) Math.min(255, blue / BRIGHT_SCALE);\n+    return new Color(red, green, blue, 255);\n+  }\n+\n+  /**\n+   * Returns a darker version of this color. This is done by decreasing the\n+   * RGB values by an arbitrary scale factor. The new color is opaque (an\n+   * alpha of 255). Note that this method and the <code>brighter()</code>\n+   * method are not necessarily inverses.\n+   *\n+   * @return a darker version of this color\n+   * @see #brighter()\n+   */\n+  public Color darker()\n+  {\n+    // Do not inline getRGB() to this.value, because of SystemColor.\n+    int value = getRGB();\n+    return new Color((int) (((value & RED_MASK) >> 16) * BRIGHT_SCALE),\n+                     (int) (((value & GREEN_MASK) >> 8) * BRIGHT_SCALE),\n+                     (int) ((value & BLUE_MASK) * BRIGHT_SCALE), 255);\n+  }\n+\n+  /**\n+   * Returns a hash value for this color. This is simply the color in 8-bit\n+   * precision, in the format 0xAARRGGBB (alpha, red, green, blue).\n+   *\n+   * @return a hash value for this color\n+   */\n+  public int hashCode()\n+  {\n+    return value;\n+  }\n+\n+  /**\n+   * Tests this object for equality against the specified object.  This will\n+   * be true if and only if the specified object is an instance of\n+   * <code>Color</code> and has the same 8-bit integer red, green, and blue\n+   * values as this object. Note that two colors may be slightly different\n+   * as float values, but round to the same integer values. Also note that\n+   * this does not accurately compare SystemColors, since that class does\n+   * not store its internal data in RGB format like regular colors.\n+   *\n+   * @param obj the object to compare to\n+   * @return true if the specified object is semantically equal to this one\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    return obj instanceof Color && ((Color) obj).value == value;\n+  }\n+\n+  /**\n+   * Returns a string representation of this object. Subclasses may return\n+   * any desired format, except for null, but this implementation returns\n+   * <code>getClass().getName() + \"[r=\" + getRed() + \",g=\" + getGreen()\n+   * + \",b=\" + getBlue() + ']'</code>.\n+   *\n+   * @return a string representation of this object\n+   */\n+  public String toString()\n+  {\n+    return getClass().getName() + \"[r=\" + ((value & RED_MASK) >> 16)\n+      + \",g=\" + ((value & GREEN_MASK) >> 8) + \",b=\" + (value & BLUE_MASK)\n+      + ']';\n+  }\n+\n+  /**\n+   * Converts the specified string to a number, using Integer.decode, and\n+   * creates a new instance of <code>Color</code> from the value. The alpha\n+   * value will be 255 (opaque).\n+   *\n+   * @param str the numeric color string\n+   * @return a new instance of <code>Color</code> for the string\n+   * @throws NumberFormatException if the string cannot be parsed\n+   * @throws NullPointerException if the string is null\n+   * @see Integer#decode(String)\n+   * @see #Color(int)\n+   * @since 1.1\n+   */\n+  public static Color decode(String str)\n+  {\n+    return new Color(Integer.decode(str).intValue(), false);\n+  }\n+\n+  /**\n+   * Returns a new instance of <code>Color</code> from the value of the\n+   * system property named by the specified string.  If the property does not\n+   * exist, or cannot be parsed, then <code>null</code> will be returned.\n+   *\n+   * @param prop the system property to retrieve\n+   * @throws SecurityException if getting the property is denied\n+   * @see #getColor(String, Color)\n+   * @see Integer#getInteger(String)\n+   */\n+  public static Color getColor(String prop)\n+  {\n+    return getColor(prop, null);\n+  }\n+\n+  /**\n+   * Returns a new instance of <code>Color</code> from the value of the\n+   * system property named by the specified string.  If the property does\n+   * not exist, or cannot be parsed, then the default color value will be\n+   * returned.\n+   *\n+   * @param prop the system property to retrieve\n+   * @param defcolor the default color\n+   * @throws SecurityException if getting the property is denied\n+   * @see Integer#getInteger(String)\n+   */\n+  public static Color getColor(String prop, Color defcolor)\n+  {\n+    Integer val = Integer.getInteger(prop, null);\n+    return val == null ? defcolor\n+      : new Color(val.intValue(), false);\n+  }\n+\n+  /**\n+   * Returns a new instance of <code>Color</code> from the value of the\n+   * system property named by the specified string.  If the property does\n+   * not exist, or cannot be parsed, then the default RGB value will be\n+   * used to create a return value.\n+   *\n+   * @param prop the system property to retrieve\n+   * @param defrgb the default RGB value\n+   * @throws SecurityException if getting the property is denied\n+   * @see #getColor(String, Color)\n+   * @see Integer#getInteger(String, int)\n+   */\n+  public static Color getColor(String prop, int defrgb)\n+  {\n+    Color c = getColor(prop, null);\n+    return c == null ? new Color(defrgb, false) : c;\n+  }\n+\n+  /**\n+   * Converts from the HSB (hue, saturation, brightness) color model to the\n+   * RGB (red, green, blue) color model. The hue may be any floating point;\n+   * it's fractional portion is used to select the angle in the HSB model.\n+   * The saturation and brightness must be between 0 and 1. The result is\n+   * suitable for creating an RGB color with the one-argument constructor.\n+   *\n+   * @param hue the hue of the HSB value\n+   * @param saturation the saturation of the HSB value\n+   * @param brightness the brightness of the HSB value\n+   * @return the RGB value\n+   * @see #getRGB()\n+   * @see #Color(int)\n+   * @see ColorModel#getRGBdefault()\n+   */\n+  public static int HSBtoRGB(float hue, float saturation, float brightness)\n+  {\n+    if (saturation == 0)\n+      return convert(brightness, brightness, brightness, 0);\n+    if (saturation < 0 || saturation > 1 || brightness < 0 || brightness > 1)\n+      throw new IllegalArgumentException();\n+    hue = hue - (float) Math.floor(hue);\n+    int i = (int) (6 * hue);\n+    float f = 6 * hue - i;\n+    float p = brightness * (1 - saturation);\n+    float q = brightness * (1 - saturation * f);\n+    float t = brightness * (1 - saturation * (1 - f));\n+    switch (i)\n+      {\n+      case 0:\n+        return convert(brightness, t, p, 0);\n+      case 1:\n+        return convert(q, brightness, p, 0);\n+      case 2:\n+        return convert(p, brightness, t, 0);\n+      case 3:\n+        return convert(p, q, brightness, 0);\n+      case 4:\n+        return convert(t, p, brightness, 0);\n+      case 5:\n+        return convert(brightness, p, q, 0);\n+      default:\n+        throw new InternalError(\"impossible\");\n+      }\n+  }\n+\n+  /**\n+   * Converts from the RGB (red, green, blue) color model to the HSB (hue,\n+   * saturation, brightness) color model. If the array is null, a new one\n+   * is created, otherwise it is recycled. The results will be in the range\n+   * 0.0-1.0 if the inputs are in the range 0-255.\n+   *\n+   * @param red the red part of the RGB value\n+   * @param green the green part of the RGB value\n+   * @param blue the blue part of the RGB value\n+   * @param array an array for the result (at least 3 elements), or null\n+   * @return the array containing HSB value\n+   * @throws ArrayIndexOutOfBoundsException of array is too small\n+   * @see #getRGB()\n+   * @see #Color(int)\n+   * @see ColorModel#getRGBdefault()\n+   */\n+  public static float[] RGBtoHSB(int red, int green, int blue, float array[])\n+  {\n+    if (array == null)\n+      array = new float[3];\n+    // Calculate brightness.\n+    int min;\n+    int max;\n+    if (red < green)\n+      {\n+        min = red;\n+        max = green;\n+      }\n+    else\n+      {\n+        min = green;\n+        max = red;\n+      }\n+    if (blue > max)\n+      max = blue;\n+    else if (blue < min)\n+      min = blue;\n+    array[2] = max / 255f;\n+    // Calculate saturation.\n+    if (max == 0)\n+      array[1] = 0;\n+    else\n+      array[1] = (max - min) / max;\n+    // Calculate hue.\n+    if (array[1] == 0)\n+      array[0] = 0;\n+    else\n+      {\n+        float delta = (max - min) * 6;\n+        if (red == max)\n+          array[0] = (green - blue) / delta;\n+        else if (green == max)\n+          array[0] = 1 / 3 + (blue - red) / delta;\n+        else\n+          array[0] = 2 / 3 + (red - green) / delta;\n+        if (array[0] < 0)\n+          array[0]++;\n+      }\n+    return array;\n+  }\n+\n+  /**\n+   * Returns a new instance of <code>Color</code> based on the specified\n+   * HSB values. The hue may be any floating point; it's fractional portion\n+   * is used to select the angle in the HSB model. The saturation and\n+   * brightness must be between 0 and 1.\n+   *\n+   * @param hue the hue of the HSB value\n+   * @param saturation the saturation of the HSB value\n+   * @param brightness the brightness of the HSB value\n+   * @return the new <code>Color</code> object\n+   */\n+  public static Color getHSBColor(float hue, float saturation,\n+                                  float brightness)\n+  {\n+    return new Color(HSBtoRGB(hue, saturation, brightness), false);\n+  }\n+\n+  /**\n+   * Returns a float array with the red, green, and blue components, and the\n+   * alpha value, in the default sRGB space, with values in the range 0.0-1.0.\n+   * If the array is null, a new one is created, otherwise it is recycled.\n+   *\n+   * @param array the array to put results into (at least 4 elements), or null\n+   * @return the RGB components and alpha value\n+   * @throws ArrayIndexOutOfBoundsException if array is too small\n+   */\n+  public float[] getRGBComponents(float[] array)\n+  {\n+    if (array == null)\n+      array = new float[4];\n+    getRGBColorComponents(array);\n+    // Stupid serialization issues require this check.\n+    array[3] = (falpha == 0 && frgbvalue == null\n+                ? ((getRGB() & ALPHA_MASK) >> 24) / 255f : falpha);\n+    return array;\n+  }\n+\n+  /**\n+   * Returns a float array with the red, green, and blue components, in the\n+   * default sRGB space, with values in the range 0.0-1.0. If the array is\n+   * null, a new one is created, otherwise it is recycled.\n+   *\n+   * @param array the array to put results into (at least 3 elements), or null\n+   * @return the RGB components\n+   * @throws ArrayIndexOutOfBoundsException if array is too small\n+   */\n+  public float[] getRGBColorComponents(float[] array)\n+  {\n+    if (array == null)\n+      array = new float[3];\n+    else if (array == frgbvalue)\n+      return array; // Optimization for getColorComponents(float[]).\n+    if (frgbvalue == null)\n+      {\n+        // Do not inline getRGB() to this.value, because of SystemColor.\n+        int value = getRGB();\n+        frgbvalue = new float[] { ((value & RED_MASK) >> 16) / 255f,\n+                                  ((value & GREEN_MASK) >> 8) / 255f,\n+                                  (value & BLUE_MASK) / 255f };\n+      }\n+    array[0] = frgbvalue[0];\n+    array[1] = frgbvalue[1];\n+    array[2] = frgbvalue[2];\n+    return array;\n+  }\n+\n+  /**\n+   * Returns a float array containing the color and alpha components of this\n+   * color in the ColorSpace it was created with (the constructors which do\n+   * not take a ColorSpace parameter use a default sRGB ColorSpace). If the\n+   * array is null, a new one is created, otherwise it is recycled, and must\n+   * have at least one more position than components used in the color space.\n+   *\n+   * @param array the array to put results into, or null\n+   * @return the original color space components and alpha value\n+   * @throws ArrayIndexOutOfBoundsException if array is too small\n+   */\n+  public float[] getComponents(float[] array)\n+  {\n+    int numComponents = cs == null ? 3 : cs.getNumComponents();\n+    if (array == null)\n+      array = new float[1 + numComponents];\n+    getColorComponents(array);\n+    // Stupid serialization issues require this check.\n+    array[numComponents] = (falpha == 0 && frgbvalue == null\n+                            ? ((getRGB() & ALPHA_MASK) >> 24) / 255f : falpha);\n+    return array;\n+  }\n+\n+  /**\n+   * Returns a float array containing the color components of this color in\n+   * the ColorSpace it was created with (the constructors which do not take\n+   * a ColorSpace parameter use a default sRGB ColorSpace). If the array is\n+   * null, a new one is created, otherwise it is recycled, and must have at\n+   * least as many positions as used in the color space.\n+   *\n+   * @param array the array to put results into, or null\n+   * @return the original color space components\n+   * @throws ArrayIndexOutOfBoundsException if array is too small\n+   */\n+  public float[] getColorComponents(float[] array)\n+  {\n+    int numComponents = cs == null ? 3 : cs.getNumComponents();\n+    if (array == null)\n+      array = new float[numComponents];\n+    if (fvalue == null) // If fvalue is null, cs should be null too.\n+      fvalue = getRGBColorComponents(frgbvalue);\n+    System.arraycopy(fvalue, 0, array, 0, numComponents);\n+    return array;\n+  }\n+\n+  /**\n+   * Returns a float array containing the color and alpha components of this\n+   * color in the given ColorSpace. If the array is null, a new one is\n+   * created, otherwise it is recycled, and must have at least one more\n+   * position than components used in the color space.\n+   *\n+   * @param space the color space to translate to\n+   * @param array the array to put results into, or null\n+   * @return the color space components and alpha value\n+   * @throws ArrayIndexOutOfBoundsException if array is too small\n+   * @throws NullPointerException if space is null\n+   */\n+  public float[] getComponents(ColorSpace space, float[] array)\n+  {\n+    int numComponents = space.getNumComponents();\n+    if (array == null)\n+      array = new float[1 + numComponents];\n+    getColorComponents(space, array);\n+    // Stupid serialization issues require this check.\n+    array[numComponents] = (falpha == 0 && frgbvalue == null\n+                            ? ((getRGB() & ALPHA_MASK) >> 24) / 255f : falpha);\n+    return array;\n+  }\n+\n+  /**\n+   * Returns a float array containing the color components of this color in\n+   * the given ColorSpace. If the array is null, a new one is created,\n+   * otherwise it is recycled, and must have at least as many positions as\n+   * used in the color space.\n+   *\n+   * @param space the color space to translate to\n+   * @return the color space components\n+   * @throws ArrayIndexOutOfBoundsException if array is too small\n+   * @throws NullPointerException if space is null\n+   */\n+  public float[] getColorComponents(ColorSpace space, float[] array)\n+  {\n+    float[] components = space.fromRGB(getRGBColorComponents(frgbvalue));\n+    if (array == null)\n+      return components;\n+    System.arraycopy(components, 0, array, 0, components.length);\n+    return array;\n+  }\n+\n+  /**\n+   * Returns the color space of this color. Except for the constructor which\n+   * takes a ColorSpace argument, this will be an implementation of\n+   * ColorSpace.CS_sRGB.\n+   *\n+   * @return the color space\n+   */\n+  public ColorSpace getColorSpace()\n+  {\n+    return cs == null ? ColorSpace.getInstance(ColorSpace.CS_sRGB) : cs;\n+  }\n+\n+  /**\n+   * Returns a paint context, used for filling areas of a raster scan with\n+   * this color. Since the color is constant across the entire rectangle, and\n+   * since it is always in sRGB space, this implementation returns the same\n+   * object, regardless of the parameters. Subclasses, however, may have a\n+   * mutable result.\n+   *\n+   * @param cm the requested color model, ignored\n+   * @param deviceBounds the bounding box in device coordinates, ignored\n+   * @param userBounds the bounding box in user coordinates, ignored\n+   * @param xform the bounds transformation, ignored\n+   * @param hints any rendering hints, ignored\n+   * @return a context for painting this solid color\n+   */\n+  public PaintContext createContext(ColorModel cm, Rectangle deviceBounds,\n+                                    Rectangle2D userBounds,\n+                                    AffineTransform xform,\n+                                    RenderingHints hints)\n+  {\n+    if (context == null)\n+      context = new ColorPaintContext(value);\n+    return context;\n+  }\n+\n+  /**\n+   * Returns the transparency level of this color.\n+   *\n+   * @return one of {@link #OPAQUE}, {@link #BITMASK}, or {@link #TRANSLUCENT}\n+   */\n+  public int getTransparency()\n+  {\n+    // Do not inline getRGB() to this.value, because of SystemColor.\n+    int alpha = getRGB() & ALPHA_MASK;\n+    return alpha == (255 << 24) ? OPAQUE : alpha == 0 ? BITMASK : TRANSLUCENT;\n+  }\n+\n+  /**\n+   * Converts float values to integer value.\n+   *\n+   * @param red the red value\n+   * @param green the green value\n+   * @param blue the blue value\n+   * @param alpha the alpha value\n+   * @return the integer value made of 8-bit sections\n+   * @throws IllegalArgumentException if parameters are out of range 0.0-1.0\n+   */\n+  private static int convert(float red, float green, float blue, float alpha)\n+  {\n+    if (red < 0 || red > 1 || green < 0 || green > 1 || blue < 0 || blue > 1\n+        || alpha < 0 || alpha > 1)\n+      throw new IllegalArgumentException(\"Bad RGB values\");\n+    int redval = Math.round(255 * red);\n+    int greenval = Math.round(255 * green);\n+    int blueval = Math.round(255 * blue);\n+    int alphaval = Math.round(255 * alpha);\n+    return (alphaval << 24) | (redval << 16) | (greenval << 8) | blueval;\n+  }\n } // class Color\n-"}, {"sha": "a365812a866912e5289d52993c2dbb76561970bc", "filename": "libjava/java/awt/ColorPaintContext.java", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FColorPaintContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FColorPaintContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FColorPaintContext.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,103 @@\n+/* ColorPaintContext.java -- context for painting solid colors\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+import java.awt.image.ColorModel;\n+import java.awt.image.Raster;\n+\n+/**\n+ * This class provides a paint context which will fill a rectanglar region of\n+ * a raster scan with the given color. However, it is not yet completely\n+ * implemented.\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ */\n+class ColorPaintContext implements PaintContext\n+{\n+  /**\n+   * The color to fill any raster with. Package visible for use in\n+   * SystemColor.\n+   */\n+  final int color;\n+\n+  /**\n+   * Create the context for a given color.\n+   *\n+   * @param c the solid color to use\n+   */\n+  ColorPaintContext(int c)\n+  {\n+    color = c;\n+  }\n+\n+  /**\n+   * Release the resources allocated for the paint. As the color is constant,\n+   * there aren't any resources.\n+   */\n+  public void dispose()\n+  {\n+  }\n+\n+  /**\n+   * Return the color model of this context. This ignores the model passed\n+   * in the request, since colors are always in sRGB.\n+   *\n+   * @return the context color model\n+   */\n+  public ColorModel getColorModel()\n+  {\n+    return ColorModel.getRGBdefault();\n+  }\n+\n+  /**\n+   * Return a raster containing the colors for the graphics operation.\n+   *\n+   * @param x the x-coordinate, in device space\n+   * @param y the y-coordinate, in device space\n+   * @param w the width, in device space\n+   * @param h the height, in device space\n+   * @return a raster for the given area and color\n+   */\n+  public Raster getRaster(int x, int y, int w, int h)\n+  {\n+    // XXX Implement. Sun uses undocumented implementation class\n+    // sun.awt.image.IntegerInterleavedRaster.\n+    throw new Error(\"not implemented\");\n+  }\n+} // class ColorPaintContext"}, {"sha": "fd039116bb82d7559109b68d64690aa33cdad874", "filename": "libjava/java/awt/Component.java", "status": "modified", "additions": 3489, "deletions": 1011, "changes": 4500, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FComponent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "8d3a40c85990b456183158d8c06fd9fad142bfff", "filename": "libjava/java/awt/ComponentOrientation.java", "status": "modified", "additions": 143, "deletions": 46, "changes": 189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FComponentOrientation.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FComponentOrientation.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FComponentOrientation.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 2000, 2001, 2002  Free Software Foundation\n+/* ComponentOrientation.java -- describes a component's orientation\n+   Copyright (C) 2000, 2001, 2002 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -34,83 +35,179 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-/**\n- * @author Bryce McKinlay  <bryce@albatross.co.nz>\n- */\n-\n-/* Status: Incomplete. Needs a Locale lookup table. */\n \n package java.awt;\n \n+import java.io.Serializable;\n import java.util.Locale;\n+import java.util.MissingResourceException;\n import java.util.ResourceBundle;\n \n-public final class ComponentOrientation implements java.io.Serializable\n+/**\n+ * This class is used to differentiate different orientations for text layout.\n+ * It controls whether text flows left-to-right or right-to-left, and whether\n+ * lines are horizontal or vertical, as in this table:<br>\n+ * <pre>\n+ * LT      RT      TL      TR\n+ * A B C   C B A   A D G   G D A\n+ * D E F   F E D   B E H   H E B\n+ * G H I   I H G   C F I   I F C\n+ * </pre>\n+ * <b>LT</b> languages are most common (left-to-right lines, top-to-bottom).\n+ * This includes Western European languages, and optionally includes Japanese,\n+ * Chinese, and Korean. <b>RT</b> languages (right-to-left lines,\n+ * top-to-bottom) are mainly middle eastern, such as Hebrew and Arabic.\n+ * <b>TR</b> languages flow top-to-bottom in a line, right-to-left, and are\n+ * the basis of Japanese, Chinese, and Korean. Finally, <b>TL</b> languages\n+ * flow top-to-bottom in a line, left-to-right, as in Mongolian.\n+ *\n+ * <p>This is a pretty poor excuse for a type-safe enum, since it is not\n+ * guaranteed that orientation objects are unique (thanks to serialization),\n+ * yet there is no equals() method. You would be wise to compare the output\n+ * of isHorizontal() and isLeftToRight() rather than comparing objects with\n+ * ==, especially since more constants may be added in the future.\n+ *\n+ * @author Bryce McKinlay <bryce@albatross.co.nz>\n+ * @since 1.0\n+ * @status updated to 1.4\n+ */\n+public final class ComponentOrientation implements Serializable\n {\n-  // Here is a wild guess.\n-  private static int HORIZONTAL_ID    = 1 << 0,\n-                     LEFT_TO_RIGHT_ID = 1 << 1;\n+  /**\n+   * Compatible with JDK 1.0+.\n+   */\n+  private static final long serialVersionUID = -4113291392143563828L;\n+\n+  /** Constant for unknown orientation. */\n+  private static final int UNKNOWN_ID = 1;\n+\n+  /** Constant for horizontal line orientation. */\n+  private static final int HORIZONTAL_ID = 2;\n \n+  /** Constant for left-to-right orientation. */\n+  private static final int LEFT_TO_RIGHT_ID = 4;\n+\n+  /**\n+   * Items run left to right, and lines flow top to bottom. Examples: English,\n+   * French.\n+   */\n   public static final ComponentOrientation LEFT_TO_RIGHT\n-    = new ComponentOrientation(HORIZONTAL_ID & LEFT_TO_RIGHT_ID);\n+    = new ComponentOrientation(HORIZONTAL_ID | LEFT_TO_RIGHT_ID);\n+\n+  /**\n+   * Items run right to left, and lines flow top to bottom. Examples: Arabic,\n+   * Hebrew.\n+   */\n   public static final ComponentOrientation RIGHT_TO_LEFT\n     = new ComponentOrientation(HORIZONTAL_ID);\n-  public static final ComponentOrientation UNKNOWN\n-    = new ComponentOrientation(0);\n-\n-  // FIXME: This field is from the serialization spec, but what are the \n-  // correct values?\n-  int orientation;\n \n-  ComponentOrientation(int orientation)\n+  /**\n+   * The orientation is unknown for the locale. For backwards compatibility,\n+   * this behaves like LEFT_TO_RIGHT in the instance methods.\n+   */\n+  public static final ComponentOrientation UNKNOWN\n+    = new ComponentOrientation(UNKNOWN_ID | HORIZONTAL_ID | LEFT_TO_RIGHT_ID);\n+\n+  /**\n+   * The orientation of this object; bitwise-or of unknown (1), horizontal (2),\n+   * and left-to-right (4).\n+   *\n+   * @serial the orientation\n+   */\n+  private final int orientation;\n+\n+  /**\n+   * Construct a given orientation.\n+   *\n+   * @param orientation the orientation\n+   */\n+  private ComponentOrientation(int orientation)\n   {\n     this.orientation = orientation;\n   }\n \n+  /**\n+   * Returns true if the lines are horizontal, in which case lines flow\n+   * top-to-bottom. For example, English, Hebrew. Counterexamples: Japanese,\n+   * Chinese, Korean, Mongolian.\n+   *\n+   * @return true if this orientation has horizontal lines\n+   */\n   public boolean isHorizontal()\n   {\n-    return ((orientation & HORIZONTAL_ID) != 0);\n+    return (orientation & HORIZONTAL_ID) != 0;\n   }\n \n+  /**\n+   * If isHorizontal() returns true, then this determines whether items in\n+   * the line flow left-to-right. If isHorizontal() returns false, items in\n+   * a line flow top-to-bottom, and this determines if lines flow\n+   * left-to-right.\n+   *\n+   * @return true if this orientation flows left-to-right\n+   */\n   public boolean isLeftToRight()\n   {\n-    return ((orientation & LEFT_TO_RIGHT_ID) != 0);\n+    return (orientation & LEFT_TO_RIGHT_ID) != 0;\n   }\n \n+  /**\n+   * Gets an orientation appropriate for the locale.\n+   *\n+   * @param locale the locale\n+   * @return the orientation for that locale\n+   * @throws NullPointerException if locale is null\n+   */\n   public static ComponentOrientation getOrientation(Locale locale)\n   {\n-    // FIXME: Use a table to look this up.\n+    // Based on iterating over all languages defined in JDK 1.4, this behavior\n+    // matches Sun's. However, it makes me wonder if any non-horizontal\n+    // orientations even exist, as it sure contradicts their documentation.\n+    String language = locale.getLanguage();\n+    if (\"ar\".equals(language) || \"fa\".equals(language) || \"iw\".equals(language)\n+        || \"ur\".equals(language))\n+      return RIGHT_TO_LEFT;\n     return LEFT_TO_RIGHT;\n   }\n \n+  /**\n+   * Gets an orientation from a resource bundle. This tries the following:<ol>\n+   * <li>Use the key \"Orientation\" to find an instance of ComponentOrientation\n+   * in the bundle.</li>\n+   * <li>Get the locale of the resource bundle, and get the orientation of\n+   * that locale.</li>\n+   * <li>Give up and get the orientation of the default locale.<li>\n+   * <ol>\n+   *\n+   * @param bdl the bundle to use\n+   * @return the orientation\n+   * @throws NullPointerException if bdl is null\n+   * @deprecated use {@link #getOrientation(Locale)} instead\n+   */\n   public static ComponentOrientation getOrientation(ResourceBundle bdl)\n   {\n     ComponentOrientation r;\n-\n     try\n-    {\n-      Object obj = bdl.getObject(\"Orientation\");\n-      r = (ComponentOrientation) obj;\n-      if (r != null)\n-\treturn r;  \n-    }\n-    catch (Exception x)\n-    {\n-      // Fall through\n-    }\n-\n+      {\n+        r = (ComponentOrientation) bdl.getObject(\"Orientation\");\n+        if (r != null)\n+          return r;\n+      }\n+    catch (MissingResourceException ignored)\n+      {\n+      }\n+    catch (ClassCastException ignored)\n+      {\n+      }\n     try\n-    {\n-      Locale l = bdl.getLocale();\n-      r = getOrientation(l);\n-      if (r != null)\n-\treturn r;\n-    }\n-    catch (Exception x)\n-    {\n-      // Fall through  \n-    }\n-\n-    return (getOrientation (Locale.getDefault ()));\n+      {\n+        r = getOrientation(bdl.getLocale());\n+        if (r != null)\n+          return r;\n+      }\n+    catch (Exception ignored)\n+      {\n+      }\n+    return getOrientation(Locale.getDefault());\n   }\n-}\n+} // class ComponentOrientation"}, {"sha": "de873981652207e6482a2176745d7442a590d2ae", "filename": "libjava/java/awt/Composite.java", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FComposite.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FComposite.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FComposite.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,73 @@\n+/* Composite.java -- graphics formed from composite layers\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+import java.awt.image.ColorModel;\n+\n+/**\n+ * This interface is for graphics which are formed as composites of others.\n+ * It combines {@link Graphics2D} shapes according to defined rules to form\n+ * the new image. Implementations of this interface must be immutable, because\n+ * they are not cloned when a Graphics2D container is cloned.\n+ *\n+ * <p>Since this can expose pixels to untrusted code, there is a security\n+ * check on custom objects, <code>readDisplayPixels</code>, to prevent leaking\n+ * restricted information graphically.\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @see AlphaComposite\n+ * @see CompositeContext\n+ * @see Graphics2D#setComposite(Composite)\n+ * @since 1.2\n+ * @status updated to 1.4\n+ */\n+public interface Composite\n+{\n+  /**\n+   * Create a context state for performing the compositing operation. Several\n+   * contexts may exist for this object, in a multi-threaded environment.\n+   *\n+   * @param srcColorModel the color model of the source\n+   * @param dstColorModel the color model of the destination\n+   * @param hints hints for choosing between rendering alternatives\n+   */\n+  CompositeContext createContext(ColorModel srcColorModel,\n+                                 ColorModel dstColorModel,\n+                                 RenderingHints hints);\n+} // interface Composite"}, {"sha": "dc3448b114be17ca4e55835eedfd72faaac13196", "filename": "libjava/java/awt/CompositeContext.java", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FCompositeContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FCompositeContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FCompositeContext.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,71 @@\n+/* Composite.java -- the context for compositing graphics layers\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+import java.awt.image.Raster;\n+import java.awt.image.WritableRaster;\n+\n+/**\n+ * This interface provides an optimized environment for compositing graphics.\n+ * Several such contexts may exist for a given <code>Composite</code> object.\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @see Composite\n+ * @since 1.2\n+ * @status updated to 1.4\n+ */\n+public interface CompositeContext\n+{\n+  /**\n+   * Release resources allocated for the compositing.\n+   */\n+  void dispose();\n+\n+  /**\n+   * Compose the two source images into the composite image. The destination\n+   * can be the same as one of the two inputs, and the destination must be\n+   * compatible with the ColorModel chosen in {@link Composite#createContext}.\n+   *\n+   * @param src the lower image source in compositing\n+   * @param dstIn the upper image source in compositing\n+   * @param dstOut the destination for the composite\n+   * @see Composite\n+   */\n+  void compose(Raster src, Raster dstIn, WritableRaster dstOut);\n+} // interface CompositeContext"}, {"sha": "c5c7c24560609e238fcf2711dabbbbabd744f401", "filename": "libjava/java/awt/Container.java", "status": "modified", "additions": 550, "deletions": 301, "changes": 851, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FContainer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FContainer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FContainer.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 1999, 2000, 2002  Free Software Foundation\n+/* Container.java -- parent container class in AWT\n+   Copyright (C) 1999, 2000, 2002 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -36,28 +37,54 @@\n \n package java.awt;\n \n-import java.awt.event.*;\n-import java.io.PrintStream;\n-import java.io.PrintWriter;\n-import java.util.EventListener;\n+import java.awt.event.AWTEventListener;\n+import java.awt.event.ContainerEvent;\n+import java.awt.event.ContainerListener;\n+import java.awt.event.MouseEvent;\n import java.awt.peer.ComponentPeer;\n import java.awt.peer.ContainerPeer;\n import java.awt.peer.LightweightPeer;\n-\n-/* A somewhat incomplete class. */\n-\n+import java.beans.PropertyChangeListener;\n+import java.io.PrintStream;\n+import java.io.PrintWriter;\n+import java.io.Serializable;\n+import java.util.EventListener;\n+import java.util.Set;\n+import javax.accessibility.Accessible;\n+\n+/**\n+ * A generic window toolkit object that acts as a container for other objects.\n+ * Components are tracked in a list, and new elements are at the end of the\n+ * list or bottom of the stacking order.\n+ *\n+ * @author original author unknown\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @since 1.0\n+ * @status still missing 1.4 support\n+ */\n public class Container extends Component\n {\n+  /**\n+   * Compatible with JDK 1.0+.\n+   */\n+  private static final long serialVersionUID = 4613797578919906343L;\n+\n   /* Serialized fields from the serialization spec. */\n   int ncomponents;\n   Component[] component;\n   LayoutManager layoutMgr;\n-  /* LightweightDispatcher dispatcher; */ // wtf?\n+\n+  LightweightDispatcher dispatcher;\n+\n   Dimension maxSize;\n+\n+  /** @since 1.4 */\n+  boolean focusCycleRoot;\n+\n   int containerSerializedDataVersion;\n \n   /* Anything else is non-serializable, and should be declared \"transient\". */\n-  transient ContainerListener containerListener;  \n+  transient ContainerListener containerListener;\n \n   /**\n    * Default constructor for subclasses.\n@@ -80,26 +107,21 @@ public int getComponentCount()\n    * Returns the number of components in this container.\n    *\n    * @return The number of components in this container.\n-   *\n-   * @deprecated This method is deprecated in favor of \n-   * <code>getComponentCount()</code>.\n+   * @deprecated use {@link #getComponentCount()} instead\n    */\n   public int countComponents()\n   {\n-    return ncomponents;\n+    return getComponentCount();\n   }\n \n   /**\n    * Returns the component at the specified index.\n    *\n    * @param index The index of the component to retrieve.\n-   *\n    * @return The requested component.\n-   *\n-   * @exception ArrayIndexOutOfBoundsException If the specified index is not\n-   * valid.\n+   * @throws ArrayIndexOutOfBoundsException If the specified index is invalid\n    */\n-  public Component getComponent (int n)\n+  public Component getComponent(int n)\n   {\n     if (n < 0 || n >= ncomponents)\n       throw new ArrayIndexOutOfBoundsException(\"no such component\");\n@@ -137,9 +159,7 @@ public Insets getInsets()\n    * borders, the margin, etc.\n    *\n    * @return The insets for this container.\n-   *\n-   * @deprecated This method is deprecated in favor of\n-   * <code>getInsets()</code>.\n+   * @deprecated use {@link #getInsets()} instead\n    */\n   public Insets insets()\n   {\n@@ -151,12 +171,11 @@ public Insets insets()\n    * component list.\n    *\n    * @param component The component to add to the container.\n-   *\n    * @return The same component that was added.\n    */\n-  public Component add (Component comp)\n+  public Component add(Component comp)\n   {\n-    addImpl (comp, null, -1);\n+    addImpl(comp, null, -1);\n     return comp;\n   }\n \n@@ -170,9 +189,9 @@ public Component add (Component comp)\n    *\n    * @return The same component that was added.\n    */\n-  public Component add (String name, Component comp)\n+  public Component add(String name, Component comp)\n   {\n-    addImpl (comp, name, -1);\n+    addImpl(comp, name, -1);\n     return comp;\n   }\n \n@@ -188,9 +207,9 @@ public Component add (String name, Component comp)\n    *\n    * @param throws ArrayIndexOutOfBounds If the specified index is invalid.\n    */\n-  public Component add (Component comp, int index)\n+  public Component add(Component comp, int index)\n   {\n-    addImpl (comp, null, index);\n+    addImpl(comp, null, index);\n     return comp;\n   }\n \n@@ -202,9 +221,9 @@ public Component add (Component comp, int index)\n    * @param component The component to be added to this container.\n    * @param constraints The layout constraints for this component.\n    */\n-  public void add (Component comp, Object constraints)\n+  public void add(Component comp, Object constraints)\n   {\n-    addImpl (comp, constraints, -1);\n+    addImpl(comp, constraints, -1);\n   }\n \n   /**\n@@ -219,9 +238,9 @@ public void add (Component comp, Object constraints)\n    *\n    * @param throws ArrayIndexOutOfBounds If the specified index is invalid.\n    */\n-  public void add (Component comp, Object constraints, int index)\n+  public void add(Component comp, Object constraints, int index)\n   {\n-    addImpl (comp, constraints, index);\n+    addImpl(comp, constraints, index);\n   }\n \n   /**\n@@ -239,29 +258,29 @@ public void add (Component comp, Object constraints, int index)\n    *\n    * @param throws ArrayIndexOutOfBounds If the specified index is invalid.\n    */\n-  protected void addImpl (Component comp, Object constraints, int index)\n+  protected void addImpl(Component comp, Object constraints, int index)\n   {\n     if (index > ncomponents\n-\t|| (index < 0 && index != -1)\n-\t|| comp instanceof Window\n-\t|| (comp instanceof Container\n-\t    && ((Container) comp).isAncestorOf (this)))\n-      throw new IllegalArgumentException ();\n+        || (index < 0 && index != -1)\n+        || comp instanceof Window\n+        || (comp instanceof Container\n+            && ((Container) comp).isAncestorOf(this)))\n+      throw new IllegalArgumentException();\n \n     // Reparent component, and make sure component is instantiated if\n     // we are.\n     if (comp.parent != null)\n-      comp.parent.remove (comp);\n+      comp.parent.remove(comp);\n     comp.parent = this;\n     if (peer != null)\n       {\n-\tcomp.addNotify ();\n+        comp.addNotify();\n \n-\tif (comp.isLightweight())\n-\t  enableEvents(comp.eventMask);\n+        if (comp.isLightweight())\n+          enableEvents(comp.eventMask);\n       }\n \n-    invalidate ();\n+    invalidate();\n \n     if (component == null)\n       component = new Component[4]; // FIXME, better initial size?\n@@ -270,39 +289,39 @@ protected void addImpl (Component comp, Object constraints, int index)\n     // copying when growing the array.  It probably doesn't matter.\n     if (ncomponents >= component.length)\n       {\n-\tint nl = component.length * 2;\n-\tComponent[] c = new Component[nl];\n-\tSystem.arraycopy (component, 0, c, 0, ncomponents);\n-\tcomponent = c;\n+        int nl = component.length * 2;\n+        Component[] c = new Component[nl];\n+        System.arraycopy(component, 0, c, 0, ncomponents);\n+        component = c;\n       }\n     if (index == -1)\n       component[ncomponents++] = comp;\n     else\n       {\n-\tSystem.arraycopy (component, index, component, index + 1,\n-\t\t\t  ncomponents - index);\n-\tcomponent[index] = comp;\n-\t++ncomponents;\n+        System.arraycopy(component, index, component, index + 1,\n+                          ncomponents - index);\n+        component[index] = comp;\n+        ++ncomponents;\n       }\n \n     // Notify the layout manager.\n     if (layoutMgr != null)\n       {\n-\tif (layoutMgr instanceof LayoutManager2)\n-\t  {\n-\t    LayoutManager2 lm2 = (LayoutManager2) layoutMgr;\n-\t    lm2.addLayoutComponent (comp, constraints);\n-\t  }\n-\telse if (constraints instanceof String)\n-\t  layoutMgr.addLayoutComponent ((String) constraints, comp);\n-\telse\n-\t  layoutMgr.addLayoutComponent (null, comp);\n+        if (layoutMgr instanceof LayoutManager2)\n+          {\n+            LayoutManager2 lm2 = (LayoutManager2) layoutMgr;\n+            lm2.addLayoutComponent(comp, constraints);\n+          }\n+        else if (constraints instanceof String)\n+          layoutMgr.addLayoutComponent((String) constraints, comp);\n+        else\n+          layoutMgr.addLayoutComponent(null, comp);\n       }\n \n     // Post event to notify of adding the container.\n-    ContainerEvent ce = new ContainerEvent (this,\n-\t\t\t\t\t    ContainerEvent.COMPONENT_ADDED,\n-\t\t\t\t\t    comp);\n+    ContainerEvent ce = new ContainerEvent(this,\n+                                            ContainerEvent.COMPONENT_ADDED,\n+                                            comp);\n     getToolkit().getSystemEventQueue().postEvent(ce);\n   }\n \n@@ -311,25 +330,25 @@ else if (constraints instanceof String)\n    *\n    * @param index The index of the component to remove.\n    */\n-  public void remove (int index)\n+  public void remove(int index)\n   {\n     Component r = component[index];\n \n-    r.removeNotify ();\n+    r.removeNotify();\n \n-    System.arraycopy (component, index + 1, component, index,\n-\t\t      ncomponents - index - 1);\n+    System.arraycopy(component, index + 1, component, index,\n+                      ncomponents - index - 1);\n     component[--ncomponents] = null;\n \n-    invalidate ();\n+    invalidate();\n \n     if (layoutMgr != null)\n-      layoutMgr.removeLayoutComponent (r);\n+      layoutMgr.removeLayoutComponent(r);\n \n     // Post event to notify of adding the container.\n-    ContainerEvent ce = new ContainerEvent (this,\n-\t\t\t\t\t    ContainerEvent.COMPONENT_REMOVED,\n-\t\t\t\t\t    r);\n+    ContainerEvent ce = new ContainerEvent(this,\n+                                            ContainerEvent.COMPONENT_REMOVED,\n+                                            r);\n     getToolkit().getSystemEventQueue().postEvent(ce);\n   }\n \n@@ -338,15 +357,15 @@ public void remove (int index)\n    *\n    * @return component The component to remove from this container.\n    */\n-  public void remove (Component comp)\n+  public void remove(Component comp)\n   {\n     for (int i = 0; i < ncomponents; ++i)\n       {\n-\tif (component[i] == comp)\n-\t  {\n-\t    remove (i);\n-\t    break;\n-\t  }\n+        if (component[i] == comp)\n+          {\n+            remove(i);\n+            break;\n+          }\n       }\n   }\n \n@@ -356,7 +375,7 @@ public void remove (Component comp)\n   public void removeAll()\n   {\n     while (ncomponents > 0)\n-      remove (0);\n+      remove(0);\n   }\n \n   /**\n@@ -378,7 +397,7 @@ public LayoutManager getLayout()\n   public void setLayout(LayoutManager mgr)\n   {\n     layoutMgr = mgr;\n-    invalidate ();\n+    invalidate();\n   }\n \n   /**\n@@ -387,14 +406,13 @@ public void setLayout(LayoutManager mgr)\n   public void doLayout()\n   {\n     if (layoutMgr != null)\n-      layoutMgr.layoutContainer (this);\n+      layoutMgr.layoutContainer(this);\n   }\n \n   /**\n    * Layout the components in this container.\n    *\n-   * @deprecated This method is deprecated in favor of\n-   * <code>doLayout()</code>.\n+   * @deprecated use {@link #doLayout()} instead\n    */\n   public void layout()\n   {\n@@ -407,7 +425,7 @@ public void layout()\n    */\n   public void invalidate()\n   {\n-    super.invalidate ();\n+    super.invalidate();\n   }\n \n   /**\n@@ -418,10 +436,10 @@ public void validate()\n     // FIXME: use the tree lock?\n     synchronized (this)\n       {\n-\tif (! isValid ())\n-\t  {\n-\t    validateTree ();\n-\t  }\n+        if (! isValid())\n+          {\n+            validateTree();\n+          }\n       }\n   }\n \n@@ -432,30 +450,30 @@ public void validate()\n   protected void validateTree()\n   {\n     if (valid)\n-      return; \n+      return;\n \n     ContainerPeer cPeer = null;\n-    if ((peer != null) && !(peer instanceof LightweightPeer))\n+    if (peer != null && ! (peer instanceof LightweightPeer))\n       {\n-\tcPeer = (ContainerPeer) peer;\n-\tcPeer.beginValidate();\n+        cPeer = (ContainerPeer) peer;\n+        cPeer.beginValidate();\n       }\n \n-    doLayout ();\n+    doLayout();\n     for (int i = 0; i < ncomponents; ++i)\n       {\n-\tComponent comp = component[i];\n-\tif (! comp.isValid ())\n-\t  {\n-\t    if (comp instanceof Container)\n-\t      {\n-\t\t((Container) comp).validateTree();\n-\t      }\n-\t    else\n-\t      {\n-\t\tcomponent[i].validate();\n-\t      }\n-\t  }\n+        Component comp = component[i];\n+        if (! comp.isValid())\n+          {\n+            if (comp instanceof Container)\n+              {\n+                ((Container) comp).validateTree();\n+              }\n+            else\n+              {\n+                component[i].validate();\n+              }\n+          }\n       }\n \n     /* children will call invalidate() when they are layed out. It\n@@ -481,18 +499,16 @@ public void setFont(Font f)\n   public Dimension getPreferredSize()\n   {\n     if (layoutMgr != null)\n-      return layoutMgr.preferredLayoutSize (this);\n+      return layoutMgr.preferredLayoutSize(this);\n     else\n-      return super.getPreferredSize ();\n+      return super.getPreferredSize();\n   }\n \n   /**\n    * Returns the preferred size of this container.\n    *\n    * @return The preferred size of this container.\n-   * \n-   * @deprecated This method is deprecated in favor of \n-   * <code>getPreferredSize()</code>.\n+   * @deprecated use {@link #getPreferredSize()} instead\n    */\n   public Dimension preferredSize()\n   {\n@@ -507,18 +523,16 @@ public Dimension preferredSize()\n   public Dimension getMinimumSize()\n   {\n     if (layoutMgr != null)\n-      return layoutMgr.minimumLayoutSize (this);\n+      return layoutMgr.minimumLayoutSize(this);\n     else\n-      return super.getMinimumSize ();\n+      return super.getMinimumSize();\n   }\n \n   /**\n    * Returns the minimum size of this container.\n    *\n    * @return The minimum size of this container.\n-   * \n-   * @deprecated This method is deprecated in favor of \n-   * <code>getMinimumSize()</code>.\n+   * @deprecated use {@link #getMinimumSize()} instead\n    */\n   public Dimension minimumSize()\n   {\n@@ -534,11 +548,11 @@ public Dimension getMaximumSize()\n   {\n     if (layoutMgr != null && layoutMgr instanceof LayoutManager2)\n       {\n-\tLayoutManager2 lm2 = (LayoutManager2) layoutMgr;\n-\treturn lm2.maximumLayoutSize (this);\n+        LayoutManager2 lm2 = (LayoutManager2) layoutMgr;\n+        return lm2.maximumLayoutSize(this);\n       }\n     else\n-      return super.getMaximumSize ();\n+      return super.getMaximumSize();\n   }\n \n   /**\n@@ -552,8 +566,8 @@ public float getAlignmentX()\n   {\n     if (layoutMgr instanceof LayoutManager2)\n       {\n-\tLayoutManager2 lm2 = (LayoutManager2) layoutMgr;\n-\treturn lm2.getLayoutAlignmentX (this);\n+        LayoutManager2 lm2 = (LayoutManager2) layoutMgr;\n+        return lm2.getLayoutAlignmentX(this);\n       }\n     else\n       return super.getAlignmentX();\n@@ -570,8 +584,8 @@ public float getAlignmentY()\n   {\n     if (layoutMgr instanceof LayoutManager2)\n       {\n-\tLayoutManager2 lm2 = (LayoutManager2) layoutMgr;\n-\treturn lm2.getLayoutAlignmentY (this);\n+        LayoutManager2 lm2 = (LayoutManager2) layoutMgr;\n+        return lm2.getLayoutAlignmentY(this);\n       }\n     else\n       return super.getAlignmentY();\n@@ -594,64 +608,6 @@ public void paint(Graphics g)\n     visitChildren(g, GfxPaintVisitor.INSTANCE, true);\n   }\n \n-  /** \n-   * Perform a graphics operation on the children of this container.\n-   * For each applicable child, the visitChild() method will be called\n-   * to perform the graphics operation.\n-   *\n-   * @param gfx The graphics object that will be used to derive new\n-   * graphics objects for the children.\n-   *\n-   * @param visitor Object encapsulating the graphics operation that\n-   * should be performed.\n-   *\n-   * @param lightweightOnly If true, only lightweight components will\n-   * be visited.\n-   */\n-  private void visitChildren(Graphics gfx, GfxVisitor visitor,\n-\t\t\t     boolean lightweightOnly)\n-  {\n-    // FIXME: do locking\n-\n-    for (int i = 0; i < ncomponents; ++i)\n-      {\n-\tComponent comp = component[i];\n-\tboolean applicable = comp.isVisible()\n-\t  && (comp.isLightweight() || !lightweightOnly);\n-\n-\tif (applicable)\n-\t  visitChild(gfx, visitor, comp);\n-      }\n-  }\n-\n-  /**\n-   * Perform a graphics operation on a child. A translated and clipped\n-   * graphics object will be created, and the visit() method of the\n-   * visitor will be called to perform the operation.\n-   *\n-   * @param gfx The graphics object that will be used to derive new\n-   * graphics objects for the child.\n-   *\n-   * @param visitor Object encapsulating the graphics operation that\n-   * should be performed.\n-   *\n-   * @param comp The child component that should be visited.\n-   */\n-  private void visitChild(Graphics gfx, GfxVisitor visitor,\n-\t\t\t  Component comp)\n-  {\n-    Rectangle bounds = comp.getBounds();\n-    Rectangle clip = gfx.getClipBounds().intersection(bounds);\n-    \n-    if (clip.isEmpty()) return;\n-\n-    Graphics gfx2 = gfx.create();\n-    gfx2.setClip(clip.x, clip.y, clip.width, clip.height);\n-    gfx2.translate(bounds.x, bounds.y);\n-    \n-    visitor.visit(comp, gfx2);\n-  }\n-\n   /**\n    * Updates this container.  The implementation of this method in this\n    * class forwards to any lightweight components in this container.  If\n@@ -703,17 +659,6 @@ public void printComponents(Graphics g)\n     visitChildren(g, GfxPrintAllVisitor.INSTANCE, true);\n   }\n \n-  void dispatchEventImpl(AWTEvent e)\n-  {\n-    if ((e.id <= ContainerEvent.CONTAINER_LAST\n-             && e.id >= ContainerEvent.CONTAINER_FIRST)\n-\t&& (containerListener != null\n-\t    || (eventMask & AWTEvent.CONTAINER_EVENT_MASK) != 0))\n-      processEvent(e); \n-    else\n-      super.dispatchEventImpl(e);\n-  }  \n-\n   /**\n    * Adds the specified container listener to this object's list of\n    * container listeners.\n@@ -722,7 +667,7 @@ void dispatchEventImpl(AWTEvent e)\n    */\n   public synchronized void addContainerListener(ContainerListener l)\n   {\n-    containerListener = AWTEventMulticaster.add (containerListener, l);\n+    containerListener = AWTEventMulticaster.add(containerListener, l);\n   }\n \n   /**\n@@ -736,12 +681,24 @@ public synchronized void removeContainerListener(ContainerListener l)\n     containerListener = AWTEventMulticaster.remove(containerListener, l);\n   }\n \n-  /** @since 1.3 */\n+  /**\n+   * @since 1.4\n+   */\n+  public synchronized ContainerListener[] getContainerListeners()\n+  {\n+    return (ContainerListener[])\n+      AWTEventMulticaster.getListeners(containerListener,\n+                                       ContainerListener.class);\n+  }\n+\n+  /**\n+   * @since 1.3\n+   */\n   public EventListener[] getListeners(Class listenerType)\n   {\n     if (listenerType == ContainerListener.class)\n-      return getListenersImpl(listenerType, containerListener);\n-    else return super.getListeners(listenerType);\n+      return getContainerListeners();\n+    return super.getListeners(listenerType);\n   }\n \n   /**\n@@ -772,22 +729,20 @@ protected void processContainerEvent(ContainerEvent e)\n     switch (e.id)\n       {\n       case ContainerEvent.COMPONENT_ADDED:\n-\tcontainerListener.componentAdded(e);\n-\tbreak;\n+        containerListener.componentAdded(e);\n+        break;\n \n       case ContainerEvent.COMPONENT_REMOVED:\n-\tcontainerListener.componentRemoved(e);\n-\tbreak;    \n+        containerListener.componentRemoved(e);\n+        break;\n       }\n   }\n \n   /**\n    * AWT 1.0 event processor.\n    *\n    * @param event The event that occurred.\n-   *\n-   * @deprecated This method is deprecated in favor of \n-   * <code>dispatchEvent()</code>.\n+   * @deprecated use {@link #dispatchEvent(AWTEvent)} instead\n    */\n   public void deliverEvent(Event e)\n   {\n@@ -807,20 +762,20 @@ public void deliverEvent(Event e)\n    * @return The component containing the specified point, or\n    * <code>null</code> if there is no such point.\n    */\n-  public Component getComponentAt (int x, int y)\n+  public Component getComponentAt(int x, int y)\n   {\n-    if (! contains (x, y))\n+    if (! contains(x, y))\n       return null;\n     for (int i = 0; i < ncomponents; ++i)\n       {\n-\t// Ignore invisible children...\n-\tif (!component[i].isVisible())\n-\t  continue;\n-\n-\tint x2 = x - component[i].x;\n-\tint y2 = y - component[i].y;\n-\tif (component[i].contains (x2, y2))\n-\t  return component[i];\n+        // Ignore invisible children...\n+        if (!component[i].isVisible())\n+          continue;\n+\n+        int x2 = x - component[i].x;\n+        int y2 = y - component[i].y;\n+        if (component[i].contains(x2, y2))\n+          return component[i];\n       }\n     return this;\n   }\n@@ -837,9 +792,7 @@ public Component getComponentAt (int x, int y)\n    *\n    * @return The component containing the specified point, or <code>null</code>\n    * if there is no such point.\n-   *\n-   * @deprecated This method is deprecated in favor of\n-   * <code>getComponentAt(int, int)</code>.\n+   * @deprecated use {@link #getComponentAt(int, int)} instead\n    */\n   public Component locate(int x, int y)\n   {\n@@ -855,7 +808,6 @@ public Component locate(int x, int y)\n    * case <code>null</code> is returned.\n    *\n    * @param point The point to return the component at.\n-   *\n    * @return The component containing the specified point, or <code>null</code>\n    * if there is no such point.\n    */\n@@ -864,30 +816,30 @@ public Component getComponentAt(Point p)\n     return getComponentAt(p.x, p.y);\n   }\n \n-  public Component findComponentAt (int x, int y)\n+  public Component findComponentAt(int x, int y)\n   {\n-    if (! contains (x, y))\n+    if (! contains(x, y))\n       return null;\n \n     for (int i = 0; i < ncomponents; ++i)\n       {\n-\t// Ignore invisible children...\n-\tif (!component[i].isVisible())\n-\t  continue;\n-\n-\tint x2 = x - component[i].x;\n-\tint y2 = y - component[i].y;\n-\t// We don't do the contains() check right away because\n-\t// findComponentAt would redundantly do it first thing.\n-\tif (component[i] instanceof Container)\n-\t  {\n-\t    Container k = (Container) component[i];\n-\t    Component r = k.findComponentAt (x2, y2);\n-\t    if (r != null)\n-\t      return r;\n-\t  }\n-\telse if (component[i].contains (x2, y2))\n-\t  return component[i];\n+        // Ignore invisible children...\n+        if (!component[i].isVisible())\n+          continue;\n+\n+        int x2 = x - component[i].x;\n+        int y2 = y - component[i].y;\n+        // We don't do the contains() check right away because\n+        // findComponentAt would redundantly do it first thing.\n+        if (component[i] instanceof Container)\n+          {\n+            Container k = (Container) component[i];\n+            Component r = k.findComponentAt(x2, y2);\n+            if (r != null)\n+              return r;\n+          }\n+        else if (component[i].contains(x2, y2))\n+          return component[i];\n       }\n \n     return this;\n@@ -903,22 +855,12 @@ public Component findComponentAt(Point p)\n    * to create its peer.  Peers for any child components will also be\n    * created.\n    */\n-  public void addNotify ()\n+  public void addNotify()\n   {\n-    addNotifyContainerChildren ();\n+    addNotifyContainerChildren();\n     super.addNotify();\n   }\n \n-  private void addNotifyContainerChildren()\n-  {\n-    for (int i = ncomponents;  --i >= 0; )\n-      {\n-\tcomponent[i].addNotify();\n-\tif (component[i].isLightweight())\n-\t  enableEvents(component[i].eventMask);\n-      }\n-  }\n-\n   /**\n    * Called when this container is removed from its parent container to\n    * inform it to destroy its peer.  This causes the peers of all child\n@@ -927,7 +869,7 @@ private void addNotifyContainerChildren()\n   public void removeNotify()\n   {\n     for (int i = 0; i < ncomponents; ++i)\n-      component[i].removeNotify ();\n+      component[i].removeNotify();\n     super.removeNotify();\n   }\n \n@@ -940,15 +882,15 @@ public void removeNotify()\n    * @return <code>true</code> if this container is an ancestor of the\n    * specified component, <code>false</code>.\n    */\n-  public boolean isAncestorOf (Component comp)\n+  public boolean isAncestorOf(Component comp)\n   {\n-    for (;;)\n+    while (true)\n       {\n-\tif (comp == null)\n-\t  return false;\n-\tif (comp == this)\n-\t  return true;\n-\tcomp = comp.getParent();\n+        if (comp == null)\n+          return false;\n+        if (comp == this)\n+          return true;\n+        comp = comp.getParent();\n       }\n   }\n \n@@ -974,11 +916,11 @@ protected String paramString()\n    * @param stream The <code>PrintStream</code> to write to.\n    * @param indent The indentation point.\n    */\n-  public void list (PrintStream out, int indent)\n+  public void list(PrintStream out, int indent)\n   {\n-    super.list (out, indent);\n+    super.list(out, indent);\n     for (int i = 0; i < ncomponents; ++i)\n-      component[i].list (out, indent + 2);\n+      component[i].list(out, indent + 2);\n   }\n \n   /**\n@@ -990,11 +932,193 @@ public void list (PrintStream out, int indent)\n    */\n   public void list(PrintWriter out, int indent)\n   {\n-    super.list (out, indent);\n+    super.list(out, indent);\n+    for (int i = 0; i < ncomponents; ++i)\n+      component[i].list(out, indent + 2);\n+  }\n+\n+  public void setFocusTraversalKeys(int id, Set keys)\n+  {\n+  }\n+  public Set getFocusTraversalKeys(int id)\n+  {\n+    return null;\n+  }\n+  public boolean areFocusTraversalKeysSet(int id)\n+  {\n+    return false;\n+  }\n+  public boolean isFocusCycleRoot(Container c)\n+  {\n+    return false;\n+  }\n+  public void transferFocusBackward()\n+  {\n+  }\n+  public void setFocusTraversalPolicy(FocusTraversalPolicy policy)\n+  {\n+  }\n+  public FocusTraversalPolicy getFocusTraversalPolicy()\n+  {\n+    return null;\n+  }\n+  public boolean isFocusTraversalPolicySet()\n+  {\n+    return false;\n+  }\n+  public void setFocusCycleRoot(boolean focusCycleRoot)\n+  {\n+  }\n+  public boolean isFocusCycleRoot()\n+  {\n+    return false;\n+  }\n+  public void transferFocusDownCycle()\n+  {\n+  }\n+  public void applyComponentOrientation(ComponentOrientation o)\n+  {\n+  }\n+  public void addPropertyChangeListener(PropertyChangeListener l)\n+  {\n+  }\n+  public void addPropertyChangeListener(String name, PropertyChangeListener l)\n+  {\n+  }\n+\n+\f\n+  // Hidden helper methods.\n+\n+  /**\n+   * Perform a graphics operation on the children of this container.\n+   * For each applicable child, the visitChild() method will be called\n+   * to perform the graphics operation.\n+   *\n+   * @param gfx The graphics object that will be used to derive new\n+   * graphics objects for the children.\n+   *\n+   * @param visitor Object encapsulating the graphics operation that\n+   * should be performed.\n+   *\n+   * @param lightweightOnly If true, only lightweight components will\n+   * be visited.\n+   */\n+  private void visitChildren(Graphics gfx, GfxVisitor visitor,\n+                             boolean lightweightOnly)\n+  {\n+    // FIXME: do locking\n+\n     for (int i = 0; i < ncomponents; ++i)\n-      component[i].list (out, indent + 2);\n+      {\n+        Component comp = component[i];\n+        boolean applicable = comp.isVisible()\n+          && (comp.isLightweight() || !lightweightOnly);\n+\n+        if (applicable)\n+          visitChild(gfx, visitor, comp);\n+      }\n+  }\n+\n+  /**\n+   * Perform a graphics operation on a child. A translated and clipped\n+   * graphics object will be created, and the visit() method of the\n+   * visitor will be called to perform the operation.\n+   *\n+   * @param gfx The graphics object that will be used to derive new\n+   * graphics objects for the child.\n+   *\n+   * @param visitor Object encapsulating the graphics operation that\n+   * should be performed.\n+   *\n+   * @param comp The child component that should be visited.\n+   */\n+  private void visitChild(Graphics gfx, GfxVisitor visitor,\n+                          Component comp)\n+  {\n+    Rectangle bounds = comp.getBounds();\n+    Rectangle clip = gfx.getClipBounds().intersection(bounds);\n+\n+    if (clip.isEmpty()) return;\n+\n+    Graphics gfx2 = gfx.create();\n+    gfx2.setClip(clip.x, clip.y, clip.width, clip.height);\n+    gfx2.translate(bounds.x, bounds.y);\n+\n+    visitor.visit(comp, gfx2);\n+  }\n+\n+  void dispatchEventImpl(AWTEvent e)\n+  {\n+    if ((e.id <= ContainerEvent.CONTAINER_LAST\n+             && e.id >= ContainerEvent.CONTAINER_FIRST)\n+        && (containerListener != null\n+            || (eventMask & AWTEvent.CONTAINER_EVENT_MASK) != 0))\n+      processEvent(e);\n+    else\n+      super.dispatchEventImpl(e);\n   }\n \n+  // This is used to implement Component.transferFocus.\n+  Component findNextFocusComponent(Component child)\n+  {\n+    int start, end;\n+    if (child != null)\n+      {\n+        for (start = 0; start < ncomponents; ++start)\n+          {\n+            if (component[start] == child)\n+              break;\n+          }\n+        end = start;\n+        // This special case lets us be sure to terminate.\n+        if (end == 0)\n+          end = ncomponents;\n+        ++start;\n+      }\n+    else\n+      {\n+        start = 0;\n+        end = ncomponents;\n+      }\n+\n+    for (int j = start; j != end; ++j)\n+      {\n+        if (j >= ncomponents)\n+          {\n+            // The JCL says that we should wrap here.  However, that\n+            // seems wrong.  To me it seems that focus order should be\n+            // global within in given window.  So instead if we reach\n+            // the end we try to look in our parent, if we have one.\n+            if (parent != null)\n+              return parent.findNextFocusComponent(this);\n+            j -= ncomponents;\n+          }\n+        if (component[j] instanceof Container)\n+          {\n+            Component c = component[j];\n+            c = c.findNextFocusComponent(null);\n+            if (c != null)\n+              return c;\n+          }\n+        else if (component[j].isFocusTraversable())\n+          return component[j];\n+      }\n+\n+    return null;\n+  }\n+\n+  private void addNotifyContainerChildren()\n+  {\n+    for (int i = ncomponents;  --i >= 0; )\n+      {\n+        component[i].addNotify();\n+        if (component[i].isLightweight())\n+          enableEvents(component[i].eventMask);\n+      }\n+  }\n+\n+\f\n+  // Nested classes.\n \n   /* The following classes are used in concert with the\n      visitChildren() method to implement all the graphics operations\n@@ -1029,52 +1153,177 @@ static class GfxPrintAllVisitor extends GfxVisitor\n     public static final GfxVisitor INSTANCE = new GfxPrintAllVisitor();\n   }\n \n-  // This is used to implement Component.transferFocus.\n-  Component findNextFocusComponent (Component child)\n+  /**\n+   * This class provides accessibility support for subclasses of container.\n+   *\n+   * @author Eric Blake <ebb9@email.byu.edu>\n+   * @since 1.3\n+   */\n+  protected class AccessibleAWTContainer extends AccessibleAWTComponent\n   {\n-    int start, end;\n-    if (child != null)\n+    /**\n+     * Compatible with JDK 1.4+.\n+     */\n+    private static final long serialVersionUID = 5081320404842566097L;\n+\n+    /**\n+     * The handler to fire PropertyChange when children are added or removed.\n+     *\n+     * @serial the handler for property changes\n+     */\n+    protected ContainerListener accessibleContainerHandler\n+      = new AccessibleContainerHandler();\n+\n+    /**\n+     * The default constructor.\n+     */\n+    protected AccessibleAWTContainer()\n+    {\n+      Container.this.addContainerListener(accessibleContainerHandler);\n+    }\n+\n+    /**\n+     * Return the number of accessible children of the containing accessible\n+     * object (at most the total number of its children).\n+     *\n+     * @return the number of accessible children\n+     */\n+    public int getAccessibleChildrenCount()\n+    {\n+      int count = 0;\n+      int i = component == null ? 0 : component.length;\n+      while (--i >= 0)\n+        if (component[i] instanceof Accessible)\n+          count++;\n+      return count;\n+    }\n+\n+    /**\n+     * Return the nth accessible child of the containing accessible object.\n+     *\n+     * @param i the child to grab, zero-based\n+     * @return the accessible child, or null\n+     */\n+    public Accessible getAccessibleChild(int i)\n+    {\n+      if (component == null)\n+        return null;\n+      int index = -1;\n+      while (i >= 0 && ++index < component.length)\n+        if (component[index] instanceof Accessible)\n+          i--;\n+      if (i < 0)\n+        return (Accessible) component[index];\n+      return null;\n+    }\n+\n+    /**\n+     * Return the accessible child located at point (in the parent's\n+     * coordinates), if one exists.\n+     *\n+     * @param p the point to look at\n+     * @return an accessible object at that point, or null\n+     * @throws NullPointerException if p is null\n+     */\n+    public Accessible getAccessibleAt(Point p)\n+    {\n+      Component c = getComponentAt(p.x, p.y);\n+      return c != Container.this && c instanceof Accessible ? (Accessible) c\n+        : null;\n+    }\n+\n+    /**\n+     * This class fires a <code>PropertyChange</code> listener, if registered,\n+     * when children are added or removed from the enclosing accessible object.\n+     *\n+     * @author Eric Blake <ebb9@email.byu.edu>\n+     * @since 1.3\n+     */\n+    protected class AccessibleContainerHandler implements ContainerListener\n+    {\n+      /**\n+       * Default constructor.\n+       */\n+      protected AccessibleContainerHandler()\n       {\n-\tfor (start = 0; start < ncomponents; ++start)\n-\t  {\n-\t    if (component[start] == child)\n-\t      break;\n-\t  }\n-\tend = start;\n-\t// This special case lets us be sure to terminate.\n-\tif (end == 0)\n-\t  end = ncomponents;\n-\t++start;\n       }\n-    else\n+\n+      /**\n+       * Fired when a component is added; forwards to the PropertyChange\n+       * listener.\n+       *\n+       * @param e the container event for adding\n+       */\n+      public void componentAdded(ContainerEvent e)\n       {\n-\tstart = 0;\n-\tend = ncomponents;\n+        AccessibleAWTContainer.this.firePropertyChange\n+          (ACCESSIBLE_CHILD_PROPERTY, null, e.getChild());\n       }\n \n-    for (int j = start; j != end; ++j)\n+      /**\n+       * Fired when a component is removed; forwards to the PropertyChange\n+       * listener.\n+       *\n+       * @param e the container event for removing\n+       */\n+      public void componentRemoved(ContainerEvent e)\n       {\n-\tif (j >= ncomponents)\n-\t  {\n-\t    // The JCL says that we should wrap here.  However, that\n-\t    // seems wrong.  To me it seems that focus order should be\n-\t    // global within in given window.  So instead if we reach\n-\t    // the end we try to look in our parent, if we have one.\n-\t    if (parent != null)\n-\t      return parent.findNextFocusComponent (this);\n-\t    j -= ncomponents;\n-\t  }\n-\tif (component[j] instanceof Container)\n-\t  {\n-\t    Component c = component[j];\n-\t    c = c.findNextFocusComponent (null);\n-\t    if (c != null)\n-\t      return c;\n-\t  }\n-\telse if (component[j].isFocusTraversable ())\n-\t  return component[j];\n+        AccessibleAWTContainer.this.firePropertyChange\n+          (ACCESSIBLE_CHILD_PROPERTY, e.getChild(), null);\n       }\n-\n-    return null;\n+    } // class AccessibleContainerHandler\n+  } // class AccessibleAWTPanel\n+} // class Container\n+\n+\f\n+/**\n+ * Undocumented helper class.\n+ * STUBBED\n+ */\n+class LightweightDispatcher implements Serializable, AWTEventListener\n+{\n+  private static final long serialVersionUID = 5184291520170872969L;\n+  private Container nativeContainer;\n+  private Component focus;\n+  private transient Component mouseEventTarget;\n+  private transient Component targetLastEntered;\n+  private transient boolean isMouseInNativeContainer;\n+  private Cursor nativeCursor;\n+  private long eventMask;\n+  LightweightDispatcher(Container c)\n+  {\n+  }\n+  void dispose()\n+  {\n+  }\n+  void enableEvents(long l)\n+  {\n+  }\n+  boolean dispatchEvent(AWTEvent e)\n+  {\n+    return true;\n+  }\n+  boolean isMouseGrab(MouseEvent e)\n+  {\n+    return true;\n+  }\n+  boolean processMouseEvent(MouseEvent e)\n+  {\n+    return true;\n+  }\n+  void trackMouseEnterExit(Component c, MouseEvent e)\n+  {\n+  }\n+  void startListeningForOtherDrags()\n+  {\n+  }\n+  void stopListeningForOtherDrags()\n+  {\n+  }\n+  public void eventDispatched(AWTEvent e)\n+  {\n+  }\n+  void retargetMouseEvent(Component c, int i, MouseEvent e)\n+  {\n   }\n-}\n+} // class LightweightDispatcher"}, {"sha": "4c0d94e477d0a986639c6c758e4c09fee7efa2b1", "filename": "libjava/java/awt/ContainerOrderFocusTraversalPolicy.java", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FContainerOrderFocusTraversalPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FContainerOrderFocusTraversalPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FContainerOrderFocusTraversalPolicy.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,96 @@\n+/* ContainerOrderFocusTraversalPolicy.java -- \n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * STUB CLASS ONLY\n+ */\n+public class ContainerOrderFocusTraversalPolicy extends FocusTraversalPolicy\n+  implements Serializable\n+{\n+  private boolean downCycle = true;\n+\n+  public ContainerOrderFocusTraversalPolicy()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public Component getComponentAfter(Container root, Component current)\n+  {\n+    return null;\n+  }\n+\n+  public Component getComponentBefore(Container root, Component current)\n+  {\n+    return null;\n+  }\n+\n+  public Component getFirstComponent(Container root)\n+  {\n+    return null;\n+  }\n+\n+  public Component getLastComponent(Container root)\n+  {\n+    return null;\n+  }\n+\n+  public Component getDefaultComponent(Container root)\n+  {\n+    return null;\n+  }\n+\n+  public void setImplicitDownCycleTraversal(boolean value)\n+  {\n+    downCycle = value;\n+  }\n+\n+  public boolean getImplicitDownCycleTraversal()\n+  {\n+    return downCycle;\n+  }\n+\n+  protected boolean accept(Component current)\n+  {\n+    return current.visible && current.isDisplayable() && current.enabled\n+      && current.focusable;\n+  }\n+} // class ContainerOrderFocusTraversalPolicy"}, {"sha": "ac3a1786cc6beaee50bbb06168df2a31b493bcca", "filename": "libjava/java/awt/DefaultFocusTraversalPolicy.java", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FDefaultFocusTraversalPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FDefaultFocusTraversalPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FDefaultFocusTraversalPolicy.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,55 @@\n+/* DefaultFocusTraversalPolicy.java -- \n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+/**\n+ * STUB CLASS ONLY\n+ */\n+public class DefaultFocusTraversalPolicy\n+  extends ContainerOrderFocusTraversalPolicy\n+{\n+  public DefaultFocusTraversalPolicy()\n+  {\n+  }\n+\n+  protected boolean accept(Component comp)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+} // class DefaultFocusTraversalPolicy"}, {"sha": "e2a2f688e74dd4350751cc1fa63e6205d4e95ef9", "filename": "libjava/java/awt/DefaultKeyboardFocusManager.java", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FDefaultKeyboardFocusManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FDefaultKeyboardFocusManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FDefaultKeyboardFocusManager.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,96 @@\n+/* DefaultKeyboardFocusManager.java -- \n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+import java.awt.event.KeyEvent;\n+\n+/**\n+ * STUB CLASS ONLY\n+ */\n+public class DefaultKeyboardFocusManager extends KeyboardFocusManager\n+{\n+  public DefaultKeyboardFocusManager()\n+  {\n+  }\n+\n+  public boolean dispatchEvent(AWTEvent e)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+  public boolean dispatchKeyEvent(KeyEvent e)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+  public boolean postProcessKeyEvent(KeyEvent e)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+  public void processKeyEvent(Component comp, KeyEvent e)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+  protected void enqueueKeyEvents(long after, Component comp)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+  protected void dequeueKeyEvents(long after, Component comp)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+  protected void discardKeyEvents(Component comp)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+  public void focusPreviousComponent(Component comp)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+  public void focusNextComponent(Component comp)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+  public void upFocusCycle(Component comp)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+  public void downFocusCycle(Container cont)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+} // class DefaultKeyboardFocusManager"}, {"sha": "282291d7ca70f6164aacc01e96f95f1fdc685639", "filename": "libjava/java/awt/Dimension.java", "status": "modified", "additions": 134, "deletions": 72, "changes": 206, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FDimension.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FDimension.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FDimension.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 1999, 2000, 2002  Free Software Foundation\n+/* Dimension.java -- represents a 2-dimensional span\n+   Copyright (C) 1999, 2000, 2002 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -37,136 +38,197 @@\n \n package java.awt;\n \n-/* Written using \"Java Class Libraries\", 2nd edition, plus online\n- * API docs for JDK 1.2 beta from http://www.javasoft.com.\n- * Status:  Believed complete and correct, except that neither toString\n- * has not been compared with JDK output.\n- */\n+import java.awt.geom.Dimension2D;\n+import java.io.Serializable;\n \n /**\n-  * This class holds a width and height value pair.\n-  *\n-  * @author Per Bothner <bothner@cygnus.com>\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @date Fenruary 8, 1999.\n-  */\n-public class Dimension extends java.awt.geom.Dimension2D\n-  implements java.io.Serializable\n+ * This class holds a width and height value pair. This is used in plenty\n+ * of windowing classes, but also has geometric meaning.\n+ *\n+ * <p>It is valid for a dimension to have negative width or height; but it\n+ * is considered to have no area. Therefore, the behavior in various methods\n+ * is undefined in such a case.\n+ *\n+ * <p>There are some public fields; if you mess with them in an inconsistent\n+ * manner, it is your own fault when you get invalid results. Also, this\n+ * class is not threadsafe.\n+ *\n+ * @author Per Bothner <bothner@cygnus.com>\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @see Component\n+ * @see LayoutManager\n+ * @since 1.0\n+ * @status updated to 1.14\n+ */\n+public class Dimension extends Dimension2D implements Serializable\n {\n   /**\n-   * This width of this object.\n+   * Compatible with JDK 1.0+.\n+   */\n+  private static final long serialVersionUID = 4723952579491349524L;\n+\n+  /**\n+   * The width of this object.\n+   *\n+   * @see #getSize()\n+   * @see #setSize(double, double)\n+   * @serial the width\n    */\n   public int width;\n \n   /**\n    * The height of this object.\n+   *\n+   * @see #getSize()\n+   * @see #setSize(double, double)\n+   * @serial the height\n    */\n   public int height;\n \n   /**\n-   * Initializes a new instance of <code>Dimension</code> with a width\n-   * and height of zero.\n+   * Create a new Dimension with a width and height of zero.\n    */\n-  public Dimension () { }\n+  public Dimension()\n+  {\n+  }\n \n   /**\n-   * Initializes a new instance of <code>Dimension</code> to have a width\n-   * and height identical to that of the specified dimension object.\n+   * Create a new Dimension with width and height identical to that of the\n+   * specified dimension.\n    *\n-   * @param dim The <code>Dimension</code> to take the width and height from.\n+   * @param d the Dimension to copy\n+   * @throws NullPointerException if d is null\n    */\n-  public Dimension (Dimension dim)\n+  public Dimension(Dimension d)\n   {\n-    this.width = dim.width;\n-    this.height = dim.height;\n+    width = d.width;\n+    height = d.height;\n   }\n \n   /**\n-   * Initializes a new instance of <code>Dimension</code> with the\n-   * specified width and height.\n+   * Create a new Dimension with the specified width and height.\n    *\n-   * @param width The width of this object.\n-   * @param height The height of this object.\n+   * @param w the width of this object\n+   * @param h the height of this object\n    */\n-  public Dimension (int width, int height)\n+  public Dimension(int w, int h)\n   {\n-    this.width = width;\n-    this.height = height;\n+    width = w;\n+    height = h;\n   }\n \n   /**\n-   * Tests this object for equality against the specified object.  This will\n-   * be true if and only if the specified object:\n-   * <p>\n-   * <ul>\n-   * <li>Is not <code>null</code>.\n-   * <li>Is an instance of <code>Dimension</code>.\n-   * <li>Has width and height values identical to this object.\n-   * </ul>\n+   * Gets the width of this dimension.\n    *\n-   * @param obj The object to test against.\n+   * @return the width, as a double\n+   */\n+  public double getWidth()\n+  {\n+    return width;\n+  }\n+\n+  /**\n+   * Gets the height of this dimension.\n    *\n-   * @return <code>true</code> if the specified object is equal to this\n-   * object, <code>false</code> otherwise.\n+   * @return the height, as a double\n    */\n-  public boolean equals (Object obj)\n+  public double getHeight()\n   {\n-    if (! (obj instanceof Dimension))\n-      return false;\n-    Dimension dim = (Dimension) obj;\n-    return height == dim.height && width == dim.width;\n+    return height;\n   }\n \n   /**\n-   * Returns the size of this object.  Not very useful.\n+   * Sets the size of this dimension. The values are rounded to int.\n    *\n-   * @return This object.\n+   * @param w the new width\n+   * @param h the new height\n+   * @since 1.2\n    */\n-  public Dimension getSize () { return new Dimension(this); }\n+  public void setSize(double w, double h)\n+  {\n+    width = (int) w;\n+    height = (int) h;\n+  }\n+\n+  /**\n+   * Returns the size of this dimension. A pretty useless method, as this is\n+   * already a dimension.\n+   *\n+   * @return a copy of this dimension\n+   * @see #setSize(Dimension)\n+   * @since 1.1\n+   */\n+  public Dimension getSize()\n+  {\n+    return new Dimension(width, height);\n+  }\n \n   /**\n    * Sets the width and height of this object to match that of the\n    * specified object.\n    *\n-   * @param dim The <code>Dimension</code> object to get the new width and\n-   * height from.\n+   * @param d the Dimension to get the new width and height from\n+   * @throws NullPointerException if d is null\n+   * @see #getSize()\n+   * @since 1.1\n    */\n-  public void setSize (Dimension dim)\n+  public void setSize(Dimension d)\n   {\n-    this.width = dim.width;\n-    this.height = dim.height;\n+    width = d.width;\n+    height = d.height;\n   }\n \n   /**\n    * Sets the width and height of this object to the specified values.\n    *\n-   * @param width The new width value.\n-   * @param height The new height value.\n+   * @param w the new width value\n+   * @param h the new height value\n    */\n-  public void setSize (int width, int height)\n+  public void setSize(int w, int h)\n   {\n-    this.width = width;\n-    this.height = height;\n+    width = w;\n+    height = h;\n   }\n \n   /**\n-   * Returns a string representation of this object.\n+   * Tests this object for equality against the specified object.  This will\n+   * be true if and only if the specified object is an instance of\n+   * Dimension2D, and has the same width and height.\n    *\n-   * @return A string representation of this object.\n+   * @param obj the object to test against\n+   * @return true if the object is equal to this\n    */\n-  public String toString ()\n+  public boolean equals(Object obj)\n   {\n-    return \"Dimension[w:\"+width+\",h:\"+height+']';\n+    if (! (obj instanceof Dimension))\n+      return false;\n+    Dimension dim = (Dimension) obj;\n+    return height == dim.height && width == dim.width;\n   }\n \n-  /* Note:  There is no Dimension.hashCode. */\n-\n-  public double getWidth() { return width; }\n-  public double getHeight() { return height; }\n+  /**\n+   * Return the hashcode for this object. It is not documented, but appears\n+   * to be <code>((width + height) * (width + height + 1) / 2) + width</code>.\n+   *\n+   * @return the hashcode\n+   */\n+  public int hashCode()\n+  {\n+    // Reverse engineering this was fun!\n+    return (width + height) * (width + height + 1) / 2 + width;\n+  }\n \n-  public void setSize (double width, double height)\n+  /**\n+   * Returns a string representation of this object. The format is:\n+   * <code>getClass().getName() + \"[width=\" + width + \",height=\" + height\n+   * + ']'</code>.\n+   *\n+   * @return a string representation of this object\n+   */\n+  public String toString()\n   {\n-    this.width = (int) width;\n-    this.height = (int) height;\n+    return getClass().getName()\n+      + \"[width=\" + width + \",height=\" + height + ']';\n   }\n-}\n+} // class Dimension"}, {"sha": "b988e20be5e5bfa6c78be52ed424b5e8be101aeb", "filename": "libjava/java/awt/DisplayMode.java", "status": "added", "additions": 164, "deletions": 0, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FDisplayMode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FDisplayMode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FDisplayMode.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,164 @@\n+/* DisplayMode.java -- a description of display mode configurations\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+/**\n+ * This encapsulates information about the display mode for a graphics\n+ * device configuration. They are device dependent, and may not always be\n+ * available.\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @see GraphicsDevice\n+ * @since 1.4\n+ * @status updated to 1.4\n+ */\n+public final class DisplayMode\n+{\n+  /**\n+   * Value of the bit depth if multiple depths are supported.\n+   *\n+   * @see #getBitDepth()\n+   */\n+  public static final int BIT_DEPTH_MULTI = -1;\n+\n+  /**\n+   * Value of an unknown refresh rate.\n+   *\n+   * @see #getRefreshRate()\n+   */\n+  public static final int REFRESH_RATE_UNKNOWN = 0;\n+\n+  /** The width. */\n+  private final int width;\n+\n+  /** The height. */\n+  private final int height;\n+\n+  /** The bit depth. */\n+  private final int bitDepth;\n+\n+  /** The refresh rate. */\n+  private final int refreshRate;\n+\n+  /**\n+   * Create a mode with the given parameters.\n+   *\n+   * @param width the width\n+   * @param height the height\n+   * @param bitDepth the bitDepth\n+   * @param refreshRate the refreshRate\n+   * @see #BIT_DEPTH_MULTI\n+   * @see #REFRESH_RATE_UNKNOWN\n+   */\n+  public DisplayMode(int width, int height, int bitDepth, int refreshRate)\n+  {\n+    this.width = width;\n+    this.height = height;\n+    this.bitDepth = bitDepth;\n+    this.refreshRate = refreshRate;\n+  }\n+\n+  /**\n+   * Returns the height, in pixels.\n+   *\n+   * @return the height\n+   */\n+  public int getHeight()\n+  {\n+    return height;\n+  }\n+\n+  /**\n+   * Returns the width, in pixels.\n+   *\n+   * @return the width\n+   */\n+  public int getWidth()\n+  {\n+    return width;\n+  }\n+\n+  /**\n+   * Returns the bit depth, in bits per pixel. This may be BIT_DEPTH_MULTI.\n+   *\n+   * @return the bit depth\n+   * @see #BIT_DEPTH_MULTI\n+   */\n+  public int getBitDepth()\n+  {\n+    return bitDepth;\n+  }\n+\n+  /**\n+   * Returns the refresh rate, in hertz. This may be REFRESH_RATE_UNKNOWN.\n+   *\n+   * @return the refresh rate\n+   * @see #REFRESH_RATE_UNKNOWN\n+   */\n+  public int getRefreshRate()\n+  {\n+    return refreshRate;\n+  }\n+\n+  /**\n+   * Test for equality. This returns true for two modes with identical\n+   * parameters.\n+   *\n+   * @param o the object to compare to\n+   * @return true if it is equal\n+   */\n+  public boolean equals(Object o)\n+  {\n+    if (! (o instanceof DisplayMode))\n+      return false;\n+    DisplayMode m = (DisplayMode) o;\n+    return width == m.width && height == m.height && bitDepth == m.bitDepth\n+      && refreshRate == m.refreshRate;\n+  }\n+\n+  /**\n+   * Returns a hash code for the display mode.\n+   *\n+   * @return the hash code\n+   */\n+  public int hashCode()\n+  {\n+    return width + height + bitDepth + refreshRate;\n+  }\n+} // class DisplayMode"}, {"sha": "1ce3d16318150bac862f1162839636dba8291ae7", "filename": "libjava/java/awt/EventQueue.java", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FEventQueue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FEventQueue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FEventQueue.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -320,4 +320,27 @@ else if (source instanceof MenuComponent)\n \t  }\n       }\n   }\n-}\n+\n+  /**\n+   * Returns the timestamp of the most recent event that had a timestamp, or\n+   * the initialization time of the event queue if no events have been fired.\n+   * At present, only <code>InputEvent</code>s, <code>ActionEvent</code>s,\n+   * <code>InputMethodEvent</code>s, and <code>InvocationEvent</code>s have\n+   * timestamps, but this may be added to other events in future versions.\n+   * If this is called by the event dispatching thread, it can be any\n+   * (sequential) value, but to other threads, the safest bet is to return\n+   * System.currentTimeMillis().\n+   *\n+   * @return the most recent timestamp\n+   * @see InputEvent#getWhen()\n+   * @see ActionEvent#getWhen()\n+   * @see InvocationEvent#getWhen()\n+   * @see InputMethodEvent#getWhen()\n+   * @since 1.4\n+   */\n+  public static long getMostRecentEventTime()\n+  {\n+    // XXX For now, this ONLY does the current time.\n+    return System.currentTimeMillis();\n+  }\n+} // class EventQueue"}, {"sha": "fcabeceb3758b28eacc5b029dfc9c2570c9d08dc", "filename": "libjava/java/awt/FocusTraversalPolicy.java", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FFocusTraversalPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FFocusTraversalPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFocusTraversalPolicy.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,66 @@\n+/* FocusTraversalPolicy.java -- \n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+/**\n+ * STUB CLASS ONLY\n+ */\n+public abstract class FocusTraversalPolicy\n+{\n+  public FocusTraversalPolicy()\n+  {\n+  }\n+\n+  public abstract Component getComponentAfter(Container root,\n+                                              Component current);\n+\n+  public abstract Component getComponentBefore(Container root,\n+                                               Component current);\n+\n+  public abstract Component getFirstComponent(Container root);\n+\n+  public abstract Component getLastComponent(Container root);\n+\n+  public abstract Component getDefaultComponent(Container root);\n+\n+  public Component getInitialComponent(Window window)\n+  {\n+    return getDefaultComponent(window);\n+  }\n+} // class FocusTraversalPolicy"}, {"sha": "730a7003e599fc0156566a22fb503ad16be7e4e3", "filename": "libjava/java/awt/Font.java", "status": "modified", "additions": 61, "deletions": 1, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FFont.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FFont.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFont.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -73,6 +73,66 @@ public class Font implements java.io.Serializable\n public static final int CENTER_BASELINE = 1;\n public static final int HANGING_BASELINE = 2;\n \n+\n+  /**\n+   * Indicates to <code>createFont</code> that the supplied font data\n+   * is in TrueType format.\n+   *\n+   * <p><em>Specification Note:</em> The Sun JavaDoc for J2SE 1.4 does\n+   * not indicate whether this value also subsumes OpenType. OpenType\n+   * is essentially the same format as TrueType, but allows to define\n+   * glyph shapes in the same way as PostScript, using cubic bezier\n+   * curves.\n+   *\n+   * @since 1.3\n+   */\n+  public static final int TRUETYPE_FONT = 0;\n+\n+\n+  /**\n+   * A flag for <code>layoutGlyphVector</code>, indicating that the\n+   * orientation of a text run is from left to right.\n+   *\n+   * @since 1.4\n+   */\n+  public static final int LAYOUT_LEFT_TO_RIGHT = 0;\n+\n+\n+  /**\n+   * A flag for <code>layoutGlyphVector</code>, indicating that the\n+   * orientation of a text run is from right to left.\n+   *\n+   * @since 1.4\n+   */\n+  public static final int LAYOUT_RIGHT_TO_LEFT = 1;\n+\n+\n+  /**\n+   * A flag for <code>layoutGlyphVector</code>, indicating that the\n+   * text does not contain valid characters before the\n+   * <code>start</code> position.  If this flag is set,\n+   * <code>layoutGlyphVector</code> does not examine the text before\n+   * <code>start</code>, even if this would be necessary to select the\n+   * correct glyphs (e.g., for Arabic text).\n+   *\n+   * @since 1.4\n+   */\n+  public static final int LAYOUT_NO_START_CONTEXT = 2;\n+\n+\n+  /**\n+   * A flag for <code>layoutGlyphVector</code>, indicating that the\n+   * text does not contain valid characters after the\n+   * <code>limit</code> position.  If this flag is set,\n+   * <code>layoutGlyphVector</code> does not examine the text after\n+   * <code>limit</code>, even if this would be necessary to select the\n+   * correct glyphs (e.g., for Arabic text).\n+   *\n+   * @since 1.4\n+   */\n+  public static final int LAYOUT_NO_LIMIT_CONTEXT = 4;\n+\n+\n // Serialization constant\n private static final long serialVersionUID = -4206021311591459213L;\n \n@@ -162,7 +222,7 @@ public class Font implements java.io.Serializable\n         {\n           tokenval = Integer.parseInt(token);\n         }\n-      catch(Exception e) { ; }\n+      catch(NumberFormatException e) { ; }\n \n       if (tokenval != 0)\n         size = tokenval;"}, {"sha": "4ab53bbe834594dc99da29e57ac0a30668ea9698", "filename": "libjava/java/awt/FontFormatException.java", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FFontFormatException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FFontFormatException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFontFormatException.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,65 @@\n+/* FontFormatException.java -- the specified font is bad\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+/**\n+ * Thrown when a specified font is bad.\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @see Font\n+ * @since 1.3\n+ * @status updated to 1.4\n+ */\n+public class FontFormatException extends Exception\n+{\n+  /**\n+   * Compatible with JDK 1.4+.\n+   */\n+  private static final long serialVersionUID = -4481290147811361272L;\n+\n+  /**\n+   * Create a new instance with the specified detailed error message.\n+   *\n+   * @param message the detailed error message\n+   */\n+  public FontFormatException(String message)\n+  {\n+    super(message);\n+  }\n+} // class FontFormatException"}, {"sha": "f008b93f82029b07ec6eb96a9746350105aec089", "filename": "libjava/java/awt/GradientPaint.java", "status": "added", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FGradientPaint.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FGradientPaint.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGradientPaint.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,129 @@\n+/* GradientPaint.java -- \n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.Point2D;\n+import java.awt.geom.Rectangle2D;\n+import java.awt.image.ColorModel;\n+\n+/**\n+ * STUB CLASS ONLY\n+ */\n+public class GradientPaint implements Paint\n+{\n+  private final float x1;\n+  private final float y1;\n+  private final Color c1;\n+  private final float x2;\n+  private final float y2;\n+  private final Color c2;\n+  private final boolean cyclic;\n+\n+  public GradientPaint(float x1, float y1, Color c1,\n+                       float x2, float y2, Color c2)\n+  {\n+    this(x1, y1, c1, x2, y2, c2, false);\n+  }\n+\n+  public GradientPaint(Point2D p1, Color c1, Point2D p2, Color c2)\n+  {\n+    this((float) p1.getX(), (float) p1.getY(), c1,\n+         (float) p2.getX(), (float) p2.getY(), c2, false);\n+  }\n+\n+  public GradientPaint(float x1, float y1, Color c1,\n+                       float x2, float y2, Color c2, boolean cyclic)\n+  {\n+    if (c1 == null || c2 == null)\n+      throw new NullPointerException();\n+    this.x1 = x1;\n+    this.y1 = y1;\n+    this.c1 = c1;\n+    this.x2 = x2;\n+    this.y2 = y2;\n+    this.c2 = c2;\n+    this.cyclic = cyclic;\n+  }\n+\n+  public GradientPaint(Point2D p1, Color c1, Point2D p2, Color c2,\n+                       boolean cyclic)\n+  {\n+    this((float) p1.getX(), (float) p1.getY(), c1,\n+         (float) p2.getX(), (float) p2.getY(), c2, cyclic);\n+  }\n+\n+  public Point2D getPoint1()\n+  {\n+    return new Point2D.Float(x1, y1);\n+  }\n+\n+  public Color getColor1()\n+  {\n+    return c1;\n+  }\n+\n+  public Point2D getPoint2()\n+  {\n+    return new Point2D.Float(x2, y2);\n+  }\n+\n+  public Color getColor2()\n+  {\n+    return c2;\n+  }\n+\n+  public boolean isCyclic()\n+  {\n+    return cyclic;\n+  }\n+\n+  public PaintContext createContext(ColorModel cm, Rectangle deviceBounds,\n+                                    Rectangle2D userBounds,\n+                                    AffineTransform xform,\n+                                    RenderingHints hints)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public int getTransparency()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+} // class GradientPaint"}, {"sha": "52da16799b7ff5f6f548909149389e9cae944c64", "filename": "libjava/java/awt/GraphicsConfigTemplate.java", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FGraphicsConfigTemplate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FGraphicsConfigTemplate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGraphicsConfigTemplate.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,106 @@\n+/* GraphicsConfigTemplate.java -- a template for selecting configurations\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * This allows filtering an array of GraphicsConfigurations for the best\n+ * one based on various requirements. The resulting configuration has had\n+ * all non-default attributes set as required to meet or exceed the request.\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @see GraphicsConfiguration\n+ * @see GraphicsDevice\n+ * @since 1.2\n+ * @status updated to 1.4\n+ */\n+public abstract class GraphicsConfigTemplate implements Serializable\n+{\n+  /**\n+   * Compatible with JDK 1.2+.\n+   */\n+  private static final long serialVersionUID = -8061369279557787079L;\n+\n+  /** States that a feature is required to select a configuration. */\n+  public static final int REQUIRED = 1;\n+\n+  /**\n+   * States that a feature is preferred, but not required, to select a\n+   * configuration. In the case of multiple valid configurations, the tie\n+   * breaks in favor of the one with the feature.\n+   */\n+  public static final int PREFERRED = 2;\n+\n+  /**\n+   * States that a feature is not necessary in the configuration. In the case\n+   * of multiple valid configurations, the tie breaks in favor of the one\n+   * without the feature, to reduce overhead.\n+   */\n+  public static final int UNNECESSARY = 3;\n+\n+  /**\n+   * The default constructor.\n+   */\n+  public GraphicsConfigTemplate()\n+  {\n+  }\n+\n+  /**\n+   * Returns the \"best\" match among the array of possible configurations, given\n+   * the criteria of this template.\n+   *\n+   * @param array the array to choose from\n+   * @return the best match\n+   * @throws NullPointerException if array is null\n+   */\n+  public abstract GraphicsConfiguration getBestConfiguration\n+    (GraphicsConfiguration[] array);\n+\n+  /**\n+   * Returns true if the given configuration supports all the features required\n+   * by this template.\n+   *\n+   * @param config the configuration to test\n+   * @return true if it is a match\n+   * @throws NullPointerException if config is null\n+   */\n+  public abstract boolean isGraphicsConfigSupported\n+    (GraphicsConfiguration config);\n+} // class GraphicsConfigTemplate"}, {"sha": "c7d0ed4ac8ace943dca29e55bd869b3ce41d337b", "filename": "libjava/java/awt/GraphicsConfiguration.java", "status": "modified", "additions": 162, "deletions": 12, "changes": 174, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FGraphicsConfiguration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FGraphicsConfiguration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGraphicsConfiguration.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 2000, 2001, 2002  Free Software Foundation\n+/* GraphicsConfiguration.java -- describes characteristics of graphics\n+   Copyright (C) 2000, 2001, 2002 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -34,35 +35,184 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-/* Status: Complete, but commented out until we have the required\n-   GraphicsDevice. */\n \n package java.awt;\n \n+import java.awt.geom.AffineTransform;\n import java.awt.image.BufferedImage;\n import java.awt.image.ColorModel;\n-import java.awt.geom.AffineTransform;\n+import java.awt.image.VolatileImage;\n \n+/**\n+ * This class describes the configuration of various graphics devices, such\n+ * as a monitor or printer. Different configurations may exist for the same\n+ * device, according to the different native modes supported.\n+ *\n+ * <p>Virtual devices are supported (for example, in a multiple screen\n+ * environment, a virtual device covers all screens simultaneously); the\n+ * configuration will have a non-zero relative coordinate system in such\n+ * a case.\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @see Window\n+ * @see Frame\n+ * @see GraphicsEnvironment\n+ * @see GraphicsDevice\n+ * @since 1.0\n+ * @status updated to 1.4\n+ */\n public abstract class GraphicsConfiguration\n {\n-  // Can't instantiate directly.  Having a protected constructor seems\n-  // redundant, but that is what the docs specify.\n+  /**\n+   * The default constructor.\n+   *\n+   * @see GraphicsDevice#getConfigurations()\n+   * @see GraphicsDevice#getDefaultConfiguration()\n+   * @see GraphicsDevice#getBestConfiguration(GraphicsConfigTemplate)\n+   * @see Graphics2D#getDeviceConfiguration()\n+   */\n   protected GraphicsConfiguration ()\n   {\n   }\n \n-  /*\n+  /**\n+   * Gets the associated device that this configuration describes.\n+   *\n+   * @return the device\n+   */\n   public abstract GraphicsDevice getDevice();\n-  */\n \n-  public abstract BufferedImage createCompatibleImage(int width, int height);\n-  public abstract BufferedImage createCompatibleImage(int width, int height,\n+  /**\n+   * Returns a buffered image optimized to this device, so that blitting can\n+   * be supported in the buffered image.\n+   *\n+   * @param w the width of the buffer\n+   * @param h the height of the buffer\n+   * @return the buffered image, or null if none is supported\n+   */\n+  public abstract BufferedImage createCompatibleImage(int w, int h);\n+\n+  /**\n+   * Returns a buffered volatile image optimized to this device, so that\n+   * blitting can be supported in the buffered image. Because the buffer is\n+   * volatile, it can be optimized by native graphics accelerators.\n+   *\n+   * @param w the width of the buffer\n+   * @param h the height of the buffer\n+   * @return the buffered image, or null if none is supported\n+   * @see Component#createVolatileImage(int, int)\n+   * @since 1.4\n+   */\n+  public abstract VolatileImage createCompatibleVolatileImage(int w, int h);\n+\n+  /**\n+   * Returns a buffered volatile image optimized to this device, and with the\n+   * given capabilities, so that blitting can be supported in the buffered\n+   * image. Because the buffer is volatile, it can be optimized by native\n+   * graphics accelerators.\n+   *\n+   * @param w the width of the buffer\n+   * @param h the height of the buffer\n+   * @param caps the desired capabilities of the image buffer\n+   * @return the buffered image, or null if none is supported\n+   * @throws AWTException if the capabilities cannot be met\n+   * @since 1.4\n+   */\n+  public VolatileImage createCompatibleVolatileImage(int w, int h,\n+                                                     ImageCapabilities caps)\n+    throws AWTException\n+  {\n+    throw new AWTException(\"not implemented\");\n+  }\n+\n+  /**\n+   * Returns a buffered image optimized to this device, and with the specified\n+   * transparency, so that blitting can be supported in the buffered image.\n+   *\n+   * @param w the width of the buffer\n+   * @param h the height of the buffer\n+   * @param transparency the transparency of the buffer\n+   * @return the buffered image, or null if none is supported\n+   * @see Transparency#OPAQUE\n+   * @see Transparency#BITMASK\n+   * @see Transparency#TRANSLUCENT\n+   */\n+  public abstract BufferedImage createCompatibleImage(int w, int h,\n                                                       int transparency);\n+\n+  /**\n+   * Gets the color model of the corresponding device.\n+   *\n+   * @return the color model\n+   */\n   public abstract ColorModel getColorModel();\n+\n+  /**\n+   * Gets a color model for the corresponding device which supports the desired\n+   * transparency level.\n+   *\n+   * @param transparency the transparency of the model\n+   * @return the color model, with transparency\n+   * @see Transparency#OPAQUE\n+   * @see Transparency#BITMASK\n+   * @see Transparency#TRANSLUCENT\n+   */\n   public abstract ColorModel getColorModel(int transparency);\n+\n+  /**\n+   * Returns a transform that maps user coordinates to device coordinates. The\n+   * preferred mapping is about 72 user units to 1 inch (2.54 cm) of physical\n+   * space. This is often the identity transform. The device coordinates have\n+   * the origin at the upper left, with increasing x to the right, and\n+   * increasing y to the bottom.\n+   *\n+   * @return the transformation from user space to device space\n+   * @see #getNormalizingTransform()\n+   */\n   public abstract AffineTransform getDefaultTransform();\n+\n+  /**\n+   * Returns a transform that maps user coordinates to device coordinates. The\n+   * exact mapping is 72 user units to 1 inch (2.54 cm) of physical space.\n+   * This is often the identity transform. The device coordinates have the\n+   * origin at the upper left, with increasing x to the right, and increasing\n+   * y to the bottom. Note that this is more accurate (and thus, sometimes more\n+   * costly) than the default transform.\n+   *\n+   * @return the normalized transformation from user space to device space\n+   * @see #getDefaultTransform()\n+   */\n   public abstract AffineTransform getNormalizingTransform();\n \n-  /* @since 1.3 */\n+  /**\n+   * Returns the bounds of the configuration, in device coordinates. If this\n+   * is a virtual device (for example, encompassing several screens), the\n+   * bounds may have a non-zero origin.\n+   *\n+   * @return the device bounds\n+   * @since 1.3\n+   */\n   public abstract Rectangle getBounds();\n-}\n+\n+  /**\n+   * Returns the buffering capabilities of this configuration.\n+   *\n+   * @return the buffer capabilities\n+   * @since 1.4\n+   */\n+  public BufferCapabilities getBufferCapabilities()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  /**\n+   * Returns the imaging capabilities of this configuration.\n+   *\n+   * @return the image capabilities\n+   * @since 1.4\n+   */\n+  public ImageCapabilities getImageCapabilities()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+} // class GraphicsConfiguration"}, {"sha": "27d3cd67ca002185f7c3d84a9844724855be582b", "filename": "libjava/java/awt/GraphicsDevice.java", "status": "added", "additions": 271, "deletions": 0, "changes": 271, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FGraphicsDevice.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FGraphicsDevice.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGraphicsDevice.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,271 @@\n+/* GraphicsDevice.java -- information about a graphics device\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+/**\n+ * This describes a graphics device available to the given environment. This\n+ * includes screen and printer devices, and the different configurations for\n+ * each device. Also, this allows you to create virtual devices which operate\n+ * over a multi-screen environment.\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @see GraphicsEnvironment\n+ * @see GraphicsConfiguration\n+ * @since 1.3\n+ * @status updated to 1.4\n+ */\n+public abstract class GraphicsDevice\n+{\n+  /** Device is a raster screen. */\n+  public static final int TYPE_RASTER_SCREEN = 0;\n+\n+  /** Device is a printer. */\n+  public static final int TYPE_PRINTER = 1;\n+\n+  /** Device is an image buffer not visible to the user. */\n+  public static final int TYPE_IMAGE_BUFFER = 2;\n+\n+  /** The current full-screen window, or null if there is none. */\n+  private Window full_screen;\n+\n+  /** The current display mode, or null if unknown. */\n+  private DisplayMode mode;\n+\n+  /**\n+   * The default constructor.\n+   *\n+   * @see GraphicsEnvironment#getScreenDevices()\n+   * @see GraphicsEnvironment#getDefaultScreenDevice()\n+   * @see GraphicsConfiguration#getDevice()\n+   */\n+  protected GraphicsDevice()\n+  {\n+  }\n+\n+  /**\n+   * Returns the type of the device.\n+   *\n+   * @return the device type\n+   * @see #TYPE_RASTER_SCREEN\n+   * @see #TYPE_PRINTER\n+   * @see #TYPE_IMAGE_BUFFER\n+   */\n+  public abstract int getType();\n+\n+  /**\n+   * Returns an identification string for the device. This can be\n+   * vendor-specific, and may be useful for debugging.\n+   *\n+   * @return the identification\n+   */\n+  public abstract String getIDstring();\n+\n+  /**\n+   * Return all configurations valid for this device.\n+   *\n+   * @return an array of configurations\n+   */\n+  public abstract GraphicsConfiguration[] getConfigurations();\n+\n+  /**\n+   * Return the default configuration for this device.\n+   *\n+   * @return the default configuration\n+   */\n+  public abstract GraphicsConfiguration getDefaultConfiguration();\n+\n+  /**\n+   * Return the best configuration, according to the criteria in the given\n+   * template.\n+   *\n+   * @param template the template to adjust by\n+   * @return the best configuration\n+   * @throws NullPointerException if template is null\n+   */\n+  public GraphicsConfiguration getBestConfiguration\n+    (GraphicsConfigTemplate template)\n+  {\n+    return template.getBestConfiguration(getConfigurations());\n+  }\n+\n+  /**\n+   * Returns true if the device supports full-screen exclusive mode. The\n+   * default implementation returns true; subclass it if this is not the case.\n+   *\n+   * @return true if full screen support is available\n+   * @since 1.4\n+   */\n+  public boolean isFullScreenSupported()\n+  {\n+    return true;\n+  }\n+\n+  /**\n+   * Toggle the given window between full screen and normal mode. The previous\n+   * full-screen window, if different, is restored; if the given window is\n+   * null, no window will be full screen. If\n+   * <code>isFullScreenSupported()</code> returns true, full screen mode is\n+   * considered to be exclusive, which implies:<ul>\n+   * <li>Windows cannot overlap the full-screen window. All other application\n+   *     windows will always appear beneath the full-screen window in the\n+   *     Z-order.</li>\n+   * <li>Input method windows are disabled. It is advisable to call\n+   *     <code>Component.enableInputMethods(false)</code> to make a component\n+   *     a non-client of the input method framework.</li>\n+   * </ul><br>\n+   * If <code>isFullScreenSupported()</code> returns false, full-screen\n+   * exclusive mode is simulated by resizing the window to the size of the\n+   * screen and positioning it at (0,0).\n+   *\n+   * XXX Not yet implemented in Classpath.\n+   *\n+   * @param w the window to toggle\n+   * @see #isFullScreenSupported()\n+   * @see getFullScreenWindow()\n+   * @see setDisplayMode(DisplayMode)\n+   * @see Component#enableInputMethods(boolean)\n+   * @since 1.4\n+   */\n+  public synchronized void setFullScreenWindow(Window w)\n+  {\n+    if (full_screen != null)\n+      ; // XXX Restore the previous window to normal mode.\n+    full_screen = w;\n+    // XXX If w != null, make it full-screen.\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  /**\n+   * Returns the current full-screen window of the device, or null if no\n+   * window is full-screen.\n+   *\n+   * @return the full-screen window\n+   * @see #setFullScreenWindow(Window)\n+   * @since 1.4\n+   */\n+  public Window getFullScreenWindow()\n+  {\n+    return full_screen;\n+  }\n+\n+  /**\n+   * Returns whether this device supports low-level display changes. This may\n+   * depend on whether full-screen exclusive mode is available.\n+   *\n+   * XXX The default implementation returns false for now.\n+   *\n+   * @return true if display changes are supported\n+   * @see #setDisplayMode(DisplayMode)\n+   * @since 1.4\n+   */\n+  public boolean isDisplayChangeSupported()\n+  {\n+    return false;\n+  }\n+\n+  /**\n+   * Sets the display mode. This may be dependent on the availability of\n+   * full-screen exclusive mode.\n+   *\n+   * @param mode the new mode\n+   * @throws IllegalArgumentException if the new mode is not in getDisplayModes\n+   * @throws UnsupportedOperationException if ! isDisplayChangeSupported()\n+   * @see #getDisplayMode()\n+   * @see #getDisplayModes()\n+   * @see #isDisplayChangeSupported()\n+   * @since 1.4\n+   */\n+  public void setDisplayMode(DisplayMode mode)\n+  {\n+    DisplayMode[] array = getDisplayModes();\n+    if (! isDisplayChangeSupported())\n+      throw new UnsupportedOperationException();\n+    int i = array == null ? 0 : array.length;\n+    while (--i >= 0)\n+      if (array[i].equals(mode))\n+        break;\n+    if (i < 0)\n+      throw new IllegalArgumentException();\n+    this.mode = mode;\n+  }\n+\n+  /**\n+   * Returns the current display mode of this device, or null if unknown.\n+   *\n+   * @return the current display mode\n+   * @see #setDisplayMode(DisplayMode)\n+   * @see #getDisplayModes()\n+   * @since 1.4\n+   */\n+  public DisplayMode getDisplayMode()\n+  {\n+    return mode;\n+  }\n+\n+  /**\n+   * Return an array of all available display modes. This implementation\n+   * returns a 0-length array, so subclasses must override this.\n+   *\n+   * @return the array of available modes\n+   * @since 1.4\n+   */\n+  public DisplayMode[] getDisplayModes()\n+  {\n+    return new DisplayMode[0];\n+  }\n+\n+  /**\n+   * Return the number of bytes available in accelerated memory on this\n+   * device. The device may support creation or caching on a first-come,\n+   * first-served basis, depending on the operating system and driver.\n+   * Memory may be a finite resource, and because of multi-threading, you\n+   * are not guaranteed that the result of this method ensures your image\n+   * will successfully be put in accelerated memory. A negative result means\n+   * the memory is unlimited. The default implementation assumes no special\n+   * memory is available, and returns 0.\n+   *\n+   * @return the size of accelerated memory available\n+   * @see VolatileImage#flush()\n+   * @see ImageCapabilities#isAccelerated()\n+   */\n+  public int getAvailableAcceleratedMemory()\n+  {\n+    return 0;\n+  }\n+} // class GraphicsDevice"}, {"sha": "63e23e2f10868b7ea11809d09611d7b06bf6296a", "filename": "libjava/java/awt/GraphicsEnvironment.java", "status": "added", "additions": 210, "deletions": 0, "changes": 210, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FGraphicsEnvironment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FGraphicsEnvironment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGraphicsEnvironment.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,210 @@\n+/* GraphicsEnvironment.java -- information about the graphics environment\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+import java.awt.image.BufferedImage;\n+import java.util.Locale;\n+\n+/**\n+ * This descibes the collection of GraphicsDevice and Font objects available\n+ * on a given platform. The resources might be local or remote, and specify\n+ * the valid configurations for displaying graphics.\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @see GraphicsDevice\n+ * @see GraphicsConfiguration\n+ * @since 1.4\n+ * @status updated to 1.4\n+ */\n+public abstract class GraphicsEnvironment\n+{\n+  /**\n+   * The environment must be obtained from a factory or query method, hence\n+   * this constructor is protected.\n+   */\n+  protected GraphicsEnvironment()\n+  {\n+  }\n+\n+  /**\n+   * Returns the local graphics environment.\n+   *\n+   * XXX Not implemented in Classpath yet.\n+   * @return the local environment\n+   */\n+  public static GraphicsEnvironment getLocalGraphicsEnvironment()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  /**\n+   * Check if the local environment is headless, meaning that it does not\n+   * support a display, keyboard, or mouse. Many methods in the Abstract\n+   * Windows Toolkit (java.awt) throw a {@link HeadlessException} if this\n+   * returns true.\n+   *\n+   * XXX For now, Classpath assumes that it is never headless.\n+   *\n+   * @return true if the environment is headless, meaning that graphics are\n+   *         unsupported\n+   * @since 1.4\n+   */\n+  public static boolean isHeadless()\n+  {\n+    // XXX Should be: getLocalGraphicsEnvironment().isHeadlessInstance();\n+    return false;\n+  }\n+\n+  /**\n+   * Check if the given environment is headless, meaning that it does not\n+   * support a display, keyboard, or mouse. Many methods in the Abstract\n+   * Windows Toolkit (java.awt) throw a {@link HeadlessException} if this\n+   * returns true. This default implementation returns false, so subclasses\n+   * need only override it if they are headless.\n+   *\n+   * @return true if the environment is headless, meaning that graphics are\n+   *         unsupported\n+   * @since 1.4\n+   */\n+  public boolean isHeadlessInstance()\n+  {\n+    return false;\n+  }\n+\n+  /**\n+   * Get an array of all the GraphicsDevice objects.\n+   *\n+   * @return the available graphics devices, may be 0 length\n+   * @throws HeadlessException if the environment is headless\n+   */\n+  public abstract GraphicsDevice[] getScreenDevices();\n+\n+  /**\n+   * Get the default screen GraphicsDevice object.\n+   *\n+   * @return the default screen device\n+   * @throws HeadlessException if the environment is headless\n+   */\n+  public abstract GraphicsDevice getDefaultScreenDevice();\n+\n+  /**\n+   * Return a Graphics2D object which will render into the specified image.\n+   *\n+   * @param image the image to render into\n+   * @return the object that renders into the image\n+   */\n+  public abstract Graphics2D createGraphics(BufferedImage image);\n+\n+  /**\n+   * Returns an array of the one-point size fonts available in this\n+   * environment. From there, the user can select the font and derive the\n+   * correct one of proper size and attributes, using <code>deriveFont</code>.\n+   * Only one master version of each font appears in this array; if a font\n+   * can be derived from another, it must be created in that way.\n+   *\n+   * @return the array of available fonts\n+   * @see #getAvailableFontFamilyNames()\n+   * @see Font#deriveFont(int, float)\n+   * @since 1.2\n+   */\n+  public abstract Font[] getAllFonts();\n+\n+  /**\n+   * Returns an array of the font family names available in this environment.\n+   * This allows flexibility in choosing the style of font, while still letting\n+   * the Font class decide its best match.\n+   *\n+   * @return the array of available font families\n+   * @see #getAllFonts()\n+   * @see Font#getFamily()\n+   * @since 1.2\n+   */\n+  public abstract String[] getAvailableFontFamilyNames();\n+\n+  /**\n+   * Returns an array of the font family names available in this environment,\n+   * localized to the current Locale if l is non-null. This allows\n+   * flexibility in choosing the style of font, while still letting the Font\n+   * class decide its best match.\n+   *\n+   * @param l the locale to use\n+   * @return the array of available font families, localized\n+   * @see #getAllFonts()\n+   * @see Font#getFamily()\n+   * @since 1.2\n+   */\n+  public abstract String[] getAvailableFontFamilyNames(Locale l);\n+\n+  /**\n+   * Returns the point where a window should be centered. You should probably\n+   * also check that the window fits within the screen bounds. The default\n+   * simply returns the center of the maximum window bounds; subclasses should\n+   * override this if native objects (like scrollbars) make that off-centered.\n+   *\n+   * @return the centering point\n+   * @throws HeadlessException if the environment is headless\n+   * @see #getMaximumWindowBounds()\n+   * @since 1.4\n+   */\n+  public Point getCenterPoint()\n+  {\n+    Rectangle r = getMaximumWindowBounds();\n+    return new Point(r.x + r.width / 2, r.y + r.height / 2);\n+  }\n+\n+  /**\n+   * Returns the maximum bounds for a centered window object. The default\n+   * implementation simply returns the bounds of the default configuration\n+   * of the default screen; subclasses should override this to if native\n+   * objects (like scrollbars) reduce what is truly available. Also,\n+   * subclasses should override this if the window should be centered across\n+   * a multi-screen display.\n+   *\n+   * @return the maximum window bounds\n+   * @throws HeadlessException if the environment is headless\n+   * @see #getCenterPoint()\n+   * @see GraphicsConfiguration#getBounds()\n+   * @see Toolkit#getScreenInsets(GraphicsConfiguration)\n+   * @since 1.4\n+   */\n+  public Rectangle getMaximumWindowBounds()\n+  {\n+    return getDefaultScreenDevice().getDefaultConfiguration().getBounds();\n+  }\n+} // class GraphicsEnvironment"}, {"sha": "4e7ef337f23e8b5b244a0f993e3ed8bb1a8255df", "filename": "libjava/java/awt/HeadlessException.java", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FHeadlessException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FHeadlessException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FHeadlessException.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,72 @@\n+/* HeadlessException.java -- operation not possible in headless environment\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+/**\n+ * This exception is thrown when code dependent on a keyboard, mouse, or\n+ * display is executed in a headless environment.\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @since 1.4\n+ * @status updated to 1.4\n+ */\n+public class HeadlessException extends UnsupportedOperationException\n+{\n+  /**\n+   * Compatible with JDK 1.4+.\n+   */\n+  private static final long serialVersionUID = 167183644944358563L;\n+\n+  /**\n+   * Create a new instance with no detailed error message.\n+   */\n+  public HeadlessException()\n+  {\n+  }\n+\n+  /**\n+   * Create a new instance with the specified detailed error message.\n+   *\n+   * @param message the detailed error message\n+   */\n+  public HeadlessException(String message)\n+  {\n+    super(message);\n+  }\n+} // class HeadlessException"}, {"sha": "413ed33a4f9302f7dbf770c1a8e631b78f7bcb69", "filename": "libjava/java/awt/IllegalComponentStateException.java", "status": "modified", "additions": 27, "deletions": 31, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FIllegalComponentStateException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FIllegalComponentStateException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FIllegalComponentStateException.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,5 +1,5 @@\n-/* IllegalComponentStateException.java -- Bad component state\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+/* IllegalComponentStateException.java -- bad component state\n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,37 +39,33 @@\n package java.awt;\n \n /**\n-  * This exception is thrown when the requested operation failed because\n-  * a component was not in the proper state.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n+ * This exception is thrown when the requested operation failed because\n+ * a component was not in the proper state.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @status updated to 1.4\n+ */\n public class IllegalComponentStateException extends IllegalStateException\n {\n+  /**\n+   * Compatible with JDK 1.0+.\n+   */\n+  private static final long serialVersionUID = -1889339587208144238L;\n \n-/**\n-  * Initializes a new instance of <code>IllegalComponentStateException</code>\n-  * with the specified detailed error message.\n-  *\n-  * @param message The detailed error message.\n-  */\n-public\n-IllegalComponentStateException(String message)\n-{\n-  super(message);\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Initializes a new instance of <code>IllegalComponentStateException</code>\n-  * with no detailed error message.\n-  */\n-public\n-IllegalComponentStateException()\n-{\n-  super();\n-}\n+  /**\n+   * Create a new instance with no detailed error message.\n+   */\n+  public IllegalComponentStateException()\n+  {\n+  }\n \n+  /**\n+   * Create a new instance with the specified detailed error message.\n+   *\n+   * @param message the detailed error message\n+   */\n+  public IllegalComponentStateException(String message)\n+  {\n+    super(message);\n+  }\n } // class IllegalComponentStateException\n-"}, {"sha": "d4b75b88822477dc003efa945cfb17f291788313", "filename": "libjava/java/awt/Image.java", "status": "modified", "additions": 143, "deletions": 150, "changes": 293, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FImage.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,5 +1,5 @@\n-/* Image.java -- Java class for images\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+/* Image.java -- superclass for images\n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,160 +38,153 @@\n \n package java.awt;\n \n-import java.awt.image.*;\n+import java.awt.image.AreaAveragingScaleFilter;\n+import java.awt.image.ImageObserver;\n+import java.awt.image.ImageProducer;\n+import java.awt.image.ReplicateScaleFilter;\n \n /**\n-  * This is the abstract superclass of all image objects in Java.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n-public abstract class Image\n-{\n-\n-/*\n- * Static Variables\n+ * This is the abstract superclass of all image objects in Java.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @since 1.0\n+ * @status updated to 1.4\n  */\n-\n-/**\n-  * Constant indicating that the default scaling algorithm should be used.\n-  */\n-public static final int SCALE_DEFAULT = 1;\n-\n-/**\n-  * Constant indicating that a fast scaling algorithm should be used.\n-  */\n-public static final int SCALE_FAST = 2;\n-\n-/**\n-  * Constant indicating that a smooth scaling algorithm should be used.\n-  */\n-public static final int SCALE_SMOOTH = 4;\n-\n-/**\n-  * Constant indicating that the <code>ReplicateScaleFilter</code> class\n-  * algorithm should be used for scaling.\n-  */\n-public static final int SCALE_REPLICATE = 8; \n-\n-/**\n-  * Constant indicating that the area averaging scaling algorithm should be\n-  * used.\n-  */\n-public static final int SCALE_AREA_AVERAGING = 16;\n-\n-/**\n-  * This variable is returned whenever a property that is not defined\n-  * is requested.\n-  */\n-public static final Object UndefinedProperty = Image.class;\n-\n-/*************************************************************************/\n-\n-/*\n- * Constructors\n- */\n-\n-/**\n-  * A default constructor for subclasses.\n-  */\n-public \n-Image()\n+public abstract class Image\n {\n-}\n-\n-/*************************************************************************/\n-\n-/*\n- * Instance Methods\n- */\n-\n-/**\n-  * Returns the width of the image, or -1 if it is unknown.  If the\n-  * image width is unknown, the observer object will be notified when\n-  * the value is known.\n-  *\n-  * @param observer The image observer for this object.\n-  */\n-public abstract int\n-getWidth(ImageObserver observer);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the height of the image, or -1 if it is unknown.  If the\n-  * image height is unknown, the observer object will be notified when\n-  * the value is known.\n-  *\n-  * @param observer The image observer for this object.\n-  */\n-public abstract int\n-getHeight(ImageObserver observer);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the image producer object for this object.\n-  *\n-  * @return The image producer for this object.\n-  */\n-public abstract ImageProducer\n-getSource();\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns a graphics context object for drawing an off-screen object.\n-  * This method is only valid for off-screen objects.\n-  *\n-  * @return A graphics context object for an off-screen object.\n-  */\n-public abstract Graphics\n-getGraphics();\n-\n-/*************************************************************************/\n-\n-/**\n-  * This method requests a named property for an object.  The value of the\n-  * property is returned. The value <code>UndefinedProperty</code> is\n-  * returned if there is no property with the specified name.  The value\n-  * <code>null</code> is returned if the properties for the object are\n-  * not yet known.  In this case, the specified image observer is notified\n-  * when the properties are known.\n-  *\n-  * @param name The requested property name.\n-  * @param observer The image observer for this object.\n-  */\n-public abstract Object\n-getProperty(String name, ImageObserver observer);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Scales the image to the requested dimension.\n-  * \n-  * XXX: FIXME\n-  * \n-  * @param width The width of the scaled image.\n-  * @param height The height of the scaled image.\n-  * @param flags A value indicating the algorithm to use, which will be\n-  * set from contants defined in this class.\n-  *\n-  * @return The scaled <code>Image</code> object.\n-  */\n-public Image\n-getScaledInstance(int width, int height, int flags)\n+  /**\n+   * This variable is returned whenever a property that is not defined\n+   * is requested.\n+   */\n+  // For debug purposes, this might as well be a unique string.\n+  public static final Object UndefinedProperty\n+    = new String(\"undefined property\");\n+\n+  /**\n+   * Constant indicating that the default scaling algorithm should be used.\n+   *\n+   * @since 1.1\n+   */\n+  public static final int SCALE_DEFAULT = 1;\n+\n+  /**\n+   * Constant indicating that a fast scaling algorithm should be used.\n+   *\n+   * @since 1.1\n+   */\n+  public static final int SCALE_FAST = 2;\n+\n+  /**\n+   * Constant indicating that a smooth scaling algorithm should be used.\n+   *\n+   * @since 1.1\n+   */\n+  public static final int SCALE_SMOOTH = 4;\n+\n+  /**\n+   * Constant indicating that the <code>ReplicateScaleFilter</code> class\n+   * algorithm should be used for scaling.\n+   *\n+   * @see ReplicateScaleFilter\n+   * @since 1.1\n+   */\n+  public static final int SCALE_REPLICATE = 8;\n+\n+  /**\n+   * Constant indicating that the area averaging scaling algorithm should be\n+   * used.\n+   *\n+   * @see AreaAveragingScaleFilter\n+   * @since 1.1\n+   */\n+  public static final int SCALE_AREA_AVERAGING = 16;\n+\n+  /**\n+   * A default constructor for subclasses.\n+   */\n+  public Image()\n   {\n-    return null;\n   }\n \n-/*************************************************************************/\n-\n-/**\n-  * Flushes (that is, destroys) any resources used for this image.  This\n-  * includes the actual image data.\n-  */\n-public abstract void\n-flush();\n+  /**\n+   * Returns the width of the image, or -1 if it is unknown.  If the\n+   * image width is unknown, the observer object will be notified when\n+   * the value is known.\n+   *\n+   * @param observer the image observer for this object\n+   * @return the width in pixels\n+   * @see #getHeight(ImageObserver)\n+   */\n+  public abstract int getWidth(ImageObserver observer);\n+\n+  /**\n+   * Returns the height of the image, or -1 if it is unknown.  If the\n+   * image height is unknown, the observer object will be notified when\n+   * the value is known.\n+   *\n+   * @param observer the image observer for this object\n+   * @return the height in pixels\n+   * @see #getWidth(ImageObserver)\n+   */\n+  public abstract int getHeight(ImageObserver observer);\n+\n+  /**\n+   * Returns the image producer object for this object. The producer is the\n+   * object which generates pixels for this image.\n+   *\n+   * @return the image producer for this object\n+   */\n+  public abstract ImageProducer getSource();\n+\n+  /**\n+   * Returns a graphics context object for drawing an off-screen object.\n+   * This method is only valid for off-screen objects.\n+   *\n+   * @return a graphics context object for an off-screen object\n+   * @see Graphics#createImage(int, int)\n+   */\n+  public abstract Graphics getGraphics();\n+\n+  /**\n+   * This method requests a named property for an object.  The value of the\n+   * property is returned. The value <code>UndefinedProperty</code> is\n+   * returned if there is no property with the specified name.  The value\n+   * <code>null</code> is returned if the properties for the object are\n+   * not yet known.  In this case, the specified image observer is notified\n+   * when the properties are known.\n+   *\n+   * @param name the requested property name\n+   * @param observer the image observer for this object\n+   * @return the named property, if available\n+   * @see #UndefinedProperty\n+   */\n+  public abstract Object getProperty(String name, ImageObserver observer);\n+\n+  /**\n+   * Scales the image to the requested dimension. A new Image with asynchronous\n+   * loading will be produced according to the hints of the algorithm\n+   * requested. If either the width or height is non-positive, it is adjusted\n+   * to preserve the original aspect ratio.\n+   *\n+   * @param width the width of the scaled image\n+   * @param height the height of the scaled image\n+   * @param flags a value indicating the algorithm to use\n+   * @return the scaled <code>Image</code> object\n+   * @see #SCALE_DEFAULT\n+   * @see #SCALE_FAST\n+   * @see #SCALE_SMOOTH\n+   * @see #SCALE_REPLICATE\n+   * @see #SCALE_AREA_AVERAGING\n+   * @since 1.1\n+   */\n+  public Image getScaledInstance(int width, int height, int flags)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n \n+  /**\n+   * Flushes (that is, destroys) any resources used for this image.  This\n+   * includes the actual image data.\n+   */\n+  public abstract void flush();\n } // class Image\n-"}, {"sha": "4d274e2021e1d60c8fa497e92ec050886c8c1505", "filename": "libjava/java/awt/ImageCapabilities.java", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FImageCapabilities.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FImageCapabilities.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FImageCapabilities.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,70 @@\n+/* ImageCapabilities.java -- \n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+/**\n+ * STUBS ONLY\n+ */\n+public class ImageCapabilities implements Cloneable\n+{\n+  private final boolean accelerated;\n+  public ImageCapabilities(boolean accelerated)\n+  {\n+    this.accelerated = accelerated;\n+  }\n+  public boolean isAccelerated()\n+  {\n+    return accelerated;\n+  }\n+  public boolean isTrueVolatile()\n+  {\n+    return true;\n+  }\n+  public Object clone()\n+  {\n+    try\n+      {\n+        return super.clone();\n+      }\n+    catch (CloneNotSupportedException e)\n+      {\n+        throw (Error) new InternalError().initCause(e); // Impossible\n+      }\n+  }\n+} // class ImageCapabilities"}, {"sha": "573005a76897dc32cc11a9003cfb8b4b8e4ea7c8", "filename": "libjava/java/awt/Insets.java", "status": "modified", "additions": 115, "deletions": 131, "changes": 246, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FInsets.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FInsets.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FInsets.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,4 +1,4 @@\n-/* Insets.java -- Information about a container border.\n+/* Insets.java -- information about a container border\n    Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -38,137 +38,121 @@\n \n package java.awt;\n \n-/**\n-  * This class represents the \"margin\" or space around a container.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n-public class Insets implements Cloneable, java.io.Serializable\n-{\n-\n-/*\n- * Instance Variable\n- */\n-\n-/**\n-  * @serial The top inset\n-  */\n-public int top;\n-\n-/**\n-  * @serial This bottom inset\n-  */\n-public int bottom;\n+import java.io.Serializable;\n \n /**\n-  * @serial The left inset\n-  */\n-public int left;\n-\n-/**\n-  * @serial The right inset\n-  */\n-public int right;\n-\n-/*************************************************************************/\n-\n-/**\n-  * Initializes a new instance of <code>Inset</code> with the specified\n-  * inset values.\n-  *\n-  * @param top The top inset\n-  * @param left The left inset\n-  * @param bottom The bottom inset\n-  * @param right The right inset\n-  */\n-public\n-Insets(int top, int left, int bottom, int right)\n-{\n-  this.top = top;\n-  this.left = left;\n-  this.bottom = bottom;\n-  this.right = right;\n-}\n-\n-/*************************************************************************/\n-\n-/*\n- * Instance Methods\n+ * This class represents the \"margin\" or space around a container.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @status \n  */\n-\n-/**\n-  * Tests whether this object is equal to the specified object.  This will\n-  * be true if and only if the specified object:\n-  * <p>\n-  * <ul>\n-  * <li>Is not <code>null</code>.\n-  * <li>Is an instance of <code>Insets</code>.\n-  * <li>Has the same top, bottom, left, and right inset values as this object.\n-  * </ul>\n-  *\n-  * @param obj The object to test against.\n-  *\n-  * @return <code>true</code> if the specified object is equal to this\n-  * one, <code>false</code> otherwise.\n-  */\n-public boolean\n-equals(Object obj)\n-{\n-  if (!(obj instanceof Insets))\n-    return(false);\n-\n-  Insets i = (Insets)obj;\n-\n-  if (i.top != top)\n-    return(false);\n-  if (i.bottom != bottom)\n-    return(false);\n-  if (i.left != left)\n-    return(false);\n-  if (i.right != right)\n-    return(false);\n-\n-  return(true);\n-}\n-\n-public int\n-hashCode()\n-{\n-  return top + bottom + left + right;\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns a string representation of this object.\n-  *\n-  * @return A string representation of this object.\n-  */\n-public String\n-toString()\n-{\n-  return(getClass().getName() + \"(top=\" + top + \",bottom=\" + bottom +\n-         \",left=\" + left + \",right=\" + right + \")\");\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns a copy of this object.\n-  *\n-  * @return A copy of this object.\n-  */\n-public Object\n-clone()\n+public class Insets implements Cloneable, Serializable\n {\n-  try\n-    {\n-      return(super.clone());\n-    }\n-  catch(Exception e)\n-    {\n-      return(null);\n-    }\n-}\n-\n-} // class Insets \n+  /**\n+   * Compatible with JDK 1.0+.\n+   */\n+  private static final long serialVersionUID = -2272572637695466749L;\n+\n+  /**\n+   * The gap from the top.\n+   *\n+   * @serial the top inset\n+   */\n+  public int top;\n+\n+  /**\n+   * The gap from the left.\n+   *\n+   * @serial the left inset\n+   */\n+  public int left;\n+\n+  /**\n+   * The gap from the bottom.\n+   *\n+   * @serial the bottom inset\n+   */\n+  public int bottom;\n+\n+  /**\n+   * The gap from the right.\n+   *\n+   * @serial the right inset\n+   */\n+  public int right;\n+\n+  /**\n+   * Initializes a new instance of <code>Inset</code> with the specified\n+   * inset values.\n+   *\n+   * @param top the top inset\n+   * @param left the left inset\n+   * @param bottom the bottom inset\n+   * @param right the right inset\n+   */\n+  public Insets(int top, int left, int bottom, int right)\n+  {\n+    this.top = top;\n+    this.left = left;\n+    this.bottom = bottom;\n+    this.right = right;\n+  }\n+\n+  /**\n+   * Tests whether this object is equal to the specified object. The other\n+   * object must be an instance of Insets with identical field values.\n+   *\n+   * @param obj the object to test against\n+   * @return true if the specified object is equal to this one\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if (! (obj instanceof Insets))\n+      return false;\n+    Insets i = (Insets) obj;\n+    return top == i.top && bottom == i.bottom\n+      && left == i.left && right == i.right;\n+  }\n+\n+  /**\n+   * Returns a hashcode for this instance. The formula is unspecified, but\n+   * appears to be <code>XXX what is it? </code>.\n+   *\n+   * @return the hashcode\n+   */\n+  public int hashCode()\n+  {\n+    // This can't be right...\n+    return top + bottom + left + right;\n+  }\n+\n+  /**\n+   * Returns a string representation of this object, which will be non-null.\n+   * The format is unspecified, but appears to be <code>XXX what is it?</code>.\n+   *\n+   * @return a string representation of this object\n+   */\n+  public String toString()\n+  {\n+    return getClass().getName() + \"(top=\" + top + \",bottom=\" + bottom +\n+      \",left=\" + left + \",right=\" + right + ')';\n+  }\n+\n+  /**\n+   * Returns a copy of this object.\n+   *\n+   * @return a copy of this object\n+   */\n+  public Object clone()\n+  {\n+    try\n+      {\n+        return super.clone();\n+      }\n+    catch (CloneNotSupportedException e)\n+      {\n+        throw (Error) new InternalError().initCause(e); // Impossible\n+      }\n+  }\n+} // class Insets"}, {"sha": "ddf77aeb10afa7acfad7e9fb29b194b9c4a10339", "filename": "libjava/java/awt/ItemSelectable.java", "status": "modified", "additions": 31, "deletions": 40, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FItemSelectable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FItemSelectable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FItemSelectable.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,5 +1,5 @@\n-/* ItemSelectable.java -- Items that can be selected\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+/* ItemSelectable.java -- items that can be selected\n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,44 +41,35 @@\n import java.awt.event.ItemListener;\n \n /**\n-  * This interface is for objects that can have one or more items\n-  * selected.  For example, radio buttons.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n+ * This interface is for objects that can have one or more items selected.\n+ * For example, radio buttons.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @since 1.0\n+ * @status updated to 1.4\n+ */\n public interface ItemSelectable\n {\n-\n-/**\n-  * Returns the list of objects that are selected in this component.\n-  *\n-  * @return The list of objects that are selected, or <code>null</code> if\n-  * no objects are selected.\n-  */\n-public abstract Object[]\n-getSelectedObjects();\n-\n-/*************************************************************************/\n-\n-/**\n-  * Adds an item listener to this object.  It will receive\n-  * selection events for this object.\n-  *\n-  * @param listener The item listener to add.\n-  */\n-public abstract void\n-addItemListener(ItemListener listener);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Removes an item listener from this object.  It will no longer receive\n-  * selection change events.\n-  *\n-  * @param listener The item listener to remove.\n-  */\n-public abstract void\n-removeItemListener(ItemListener listener);\n-\n+  /**\n+   * Returns the list of objects that are selected in this component.\n+   *\n+   * @return the list of selected objects, or null\n+   */\n+  Object[] getSelectedObjects();\n+\n+  /**\n+   * Adds an item listener to this object.  It will receive selection events\n+   * for this object by the user (but not programatically). If listener is\n+   * null, it is ignored.\n+   *\n+   * @param listener the item listener to add\n+   */\n+  void addItemListener(ItemListener listener);\n+\n+  /**\n+   * Removes an item listener from this object.\n+   *\n+   * @param listener the item listener to remove\n+   */\n+  void removeItemListener(ItemListener listener);\n } // interface ItemSelectable\n-"}, {"sha": "b64234dda5fc4a86ddc499e4a897c27314b90160", "filename": "libjava/java/awt/JobAttributes.java", "status": "added", "additions": 500, "deletions": 0, "changes": 500, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FJobAttributes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FJobAttributes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FJobAttributes.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,500 @@\n+/* JobAttributes.java -- \n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+/**\n+ * Needs documentation...\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @since 1.3\n+ * @status updated to 1.4, lacks documentation\n+ */\n+public final class JobAttributes implements Cloneable\n+{\n+  public static final class DefaultSelectionType extends AttributeValue\n+  {\n+    private static final String[] NAMES = { \"all\", \"range\", \"selection\" };\n+    public static final DefaultSelectionType ALL\n+      = new DefaultSelectionType(0);\n+    public static final DefaultSelectionType RANGE\n+      = new DefaultSelectionType(1);\n+    public static final DefaultSelectionType SELECTION\n+      = new DefaultSelectionType(2);\n+    private DefaultSelectionType(int value)\n+    {\n+      super(value, NAMES);\n+    }\n+  } // class DefaultSelectionType\n+\n+  public static final class DestinationType extends AttributeValue\n+  {\n+    private static final String[] NAMES = { \"file\", \"printer\" };\n+    public static final DestinationType FILE = new DestinationType(0);\n+    public static final DestinationType PRINTER = new DestinationType(1);\n+    private DestinationType(int value)\n+    {\n+      super(value, NAMES);\n+    }\n+  } // class DestinationType\n+\n+  public static final class DialogType extends AttributeValue\n+  {\n+    private static final String[] NAMES = { \"common\", \"native\", \"none\" };\n+    public static final DialogType COMMON = new DialogType(0);\n+    public static final DialogType NATIVE = new DialogType(1);\n+    public static final DialogType NONE = new DialogType(2);\n+    private DialogType(int value)\n+    {\n+      super(value, NAMES);\n+    }\n+  } // class DialogType\n+\n+  public static final class MultipleDocumentHandlingType\n+    extends AttributeValue\n+  {\n+    private static final String[] NAMES = {\n+      \"separate-documents-collated-copies\",\n+      \"separate-documents-uncollated-copies\"\n+    };\n+    public static final MultipleDocumentHandlingType\n+      SEPARATE_DOCUMENTS_COLLATED_COPIES\n+      = new MultipleDocumentHandlingType(0);\n+    public static final MultipleDocumentHandlingType\n+      SEPARATE_DOCUMENTS_UNCOLLATED_COPIES\n+      = new MultipleDocumentHandlingType(1);\n+    private MultipleDocumentHandlingType(int value)\n+    {\n+      super(value, NAMES);\n+    }\n+  } // class MultipleDocumentHandlingType\n+\n+  public static final class SidesType extends AttributeValue\n+  {\n+    private static final String[] NAMES\n+      = { \"one-sided\", \"two-sided-long-edge\", \"two-sided-short-edge\" };\n+    public static final SidesType ONE_SIDED = new SidesType(0);\n+    public static final SidesType TWO_SIDED_LONG_EDGE = new SidesType(1);\n+    public static final SidesType TWO_SIDED_SHORT_EDGE = new SidesType(2);\n+    private SidesType(int value)\n+    {\n+      super(value, NAMES);\n+    }\n+  } // class SidesType\n+\n+  private int copies;\n+  private DefaultSelectionType selection;\n+  private DestinationType destination;\n+  private DialogType dialog;\n+  private String filename;\n+  private int maxPage;\n+  private int minPage;\n+  private MultipleDocumentHandlingType multiple;\n+  private int[][] pageRanges; // null for default value\n+  private int fromPage; // 0 for default value\n+  private int toPage; // 0 for default value\n+  private String printer;\n+  private SidesType sides;\n+\n+  public JobAttributes()\n+  {\n+    copies = 1;\n+    selection = DefaultSelectionType.ALL;\n+    destination = DestinationType.PRINTER;\n+    dialog = DialogType.NATIVE;\n+    maxPage = Integer.MAX_VALUE;\n+    minPage = 1;\n+    multiple\n+      = MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES;\n+    sides = SidesType.ONE_SIDED;\n+  }\n+\n+  public JobAttributes(JobAttributes attr)\n+  {\n+    set(attr);\n+  }\n+\n+  public JobAttributes(int copies, DefaultSelectionType selection,\n+                       DestinationType destination, DialogType dialog,\n+                       String filename, int max, int min,\n+                       MultipleDocumentHandlingType multiple,\n+                       int[][] pageRanges, String printer, SidesType sides)\n+  {\n+    if (copies <= 0 || selection == null || destination == null\n+        || dialog == null || max < min || min <= 0 || multiple == null\n+        || sides == null)\n+      throw new IllegalArgumentException();\n+    this.copies = copies;\n+    this.selection = selection;\n+    this.destination = destination;\n+    this.dialog = dialog;\n+    this.filename = filename;\n+    maxPage = max;\n+    minPage = min;\n+    this.multiple = multiple;\n+    setPageRanges(pageRanges);\n+    this.printer = printer;\n+    this.sides = sides;\n+  }\n+\n+  public Object clone()\n+  {\n+    return new JobAttributes(this);\n+  }\n+\n+  public void set(JobAttributes attr)\n+  {\n+    copies = attr.copies;\n+    selection = attr.selection;\n+    destination = attr.destination;\n+    dialog = attr.dialog;\n+    filename = attr.filename;\n+    maxPage = attr.maxPage;\n+    minPage = attr.minPage;\n+    multiple = attr.multiple;\n+    pageRanges = (int[][]) attr.pageRanges.clone();\n+    printer = attr.printer;\n+    sides = attr.sides;\n+    fromPage = attr.fromPage;\n+    toPage = attr.toPage;\n+  }\n+\n+  public int getCopies()\n+  {\n+    return copies;\n+  }\n+\n+  public void setCopies(int copies)\n+  {\n+    if (copies <= 0)\n+      throw new IllegalArgumentException();\n+    this.copies = copies;\n+  }\n+\n+  public void setCopiesToDefault()\n+  {\n+    copies = 1;\n+  }\n+\n+  public DefaultSelectionType getDefaultSelection()\n+  {\n+    return selection;\n+  }\n+\n+  public void setDefaultSelection(DefaultSelectionType selection)\n+  {\n+    if (selection == null)\n+      throw new IllegalArgumentException();\n+    this.selection = selection;\n+  }\n+\n+  public DestinationType getDestination()\n+  {\n+    return destination;\n+  }\n+\n+  public void setDestination(DestinationType destination)\n+  {\n+    if (destination == null)\n+      throw new IllegalArgumentException();\n+    this.destination = destination;\n+  }\n+\n+  public DialogType getDialog()\n+  {\n+    return dialog;\n+  }\n+\n+  public void setDialog(DialogType dialog)\n+  {\n+    if (dialog == null)\n+      throw new IllegalArgumentException();\n+    this.dialog = dialog;\n+  }\n+\n+  public String getFileName()\n+  {\n+    return filename;\n+  }\n+\n+  public void setFileName(String filename)\n+  {\n+    this.filename = filename;\n+  }\n+\n+  public int getFromPage()\n+  {\n+    return fromPage != 0 ? fromPage\n+      : pageRanges != null ? pageRanges[0][0]\n+      : toPage != 0 ? toPage : minPage;\n+  }\n+\n+  public void setFromPage(int fromPage)\n+  {\n+    if (fromPage < minPage || (fromPage > toPage && toPage != 0)\n+        || fromPage > maxPage)\n+      throw new IllegalArgumentException();\n+    if (pageRanges == null)\n+      this.fromPage = fromPage;\n+  }\n+\n+  public int getMaxPage()\n+  {\n+    return maxPage;\n+  }\n+\n+  public void setMaxPage(int maxPage)\n+  {\n+    if (maxPage < minPage)\n+      throw new IllegalArgumentException();\n+    this.maxPage = maxPage;\n+    if (maxPage < fromPage)\n+      fromPage = maxPage;\n+    if (maxPage < toPage)\n+      toPage = maxPage;\n+    if (pageRanges != null)\n+      {\n+        int i = pageRanges.length - 1;\n+        while (i >= 0 && maxPage < pageRanges[i][1])\n+          i--;\n+        if (maxPage >= pageRanges[++i][0])\n+          pageRanges[i++][1] = maxPage;\n+        if (i == 0)\n+          pageRanges = null;\n+        else if (i < pageRanges.length)\n+          {\n+            int[][] tmp = new int[i][];\n+            System.arraycopy(pageRanges, 0, tmp, 0, i);\n+            pageRanges = tmp;\n+          }\n+      }\n+  }\n+\n+  public int getMinPage()\n+  {\n+    return minPage;\n+  }\n+\n+  public void setMinPage(int minPage)\n+  {\n+    if (minPage <= 0 || minPage > maxPage)\n+      throw new IllegalArgumentException();\n+    this.minPage = minPage;\n+    if (minPage > toPage)\n+      toPage = minPage;\n+    if (minPage > fromPage)\n+      fromPage = minPage;\n+    if (pageRanges != null)\n+      {\n+        int size = pageRanges.length;\n+        int i = 0;\n+        while (i < size && minPage > pageRanges[i][0])\n+          i++;\n+        if (minPage <= pageRanges[i - 1][1])\n+          pageRanges[--i][0] = minPage;\n+        if (i == size)\n+          pageRanges = null;\n+        else if (i > 0)\n+          {\n+            int[][] tmp = new int[size - i][];\n+            System.arraycopy(pageRanges, i, tmp, 0, size - i);\n+            pageRanges = tmp;\n+          }\n+      }\n+  }\n+\n+  public MultipleDocumentHandlingType getMultipleDocumentHandling()\n+  {\n+    return multiple;\n+  }\n+\n+  public void setMultipleDocumentHandling\n+    (MultipleDocumentHandlingType multiple)\n+  {\n+    if (multiple == null)\n+      throw new IllegalArgumentException();\n+    this.multiple = multiple;\n+  }\n+\n+  public void setMultipleDocumentHandlingToDefault()\n+  {\n+    multiple\n+      = MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES;\n+  }\n+\n+  public int[][] getPageRanges()\n+  {\n+    if (pageRanges == null)\n+      return new int[][] { { getFromPage(), getToPage() } };\n+    // Perform a deep clone, so user code cannot affect original arrays.\n+    int i = pageRanges.length;\n+    int[][] result = new int[i][];\n+    while (--i >= 0)\n+      result[i] = (int[]) pageRanges[i].clone();\n+    return result;\n+  }\n+\n+  public void setPageRanges(int[][] pageRanges)\n+  {\n+    int size = pageRanges == null ? 0 : pageRanges.length;\n+    if (size == 0)\n+      throw new IllegalArgumentException();\n+    while (--size >= 0)\n+      {\n+        int[] range = pageRanges[size];\n+        if (range == null || range.length != 2\n+            || range[0] < minPage || range[1] < range[0] || range[1] > maxPage\n+            || (size != 0 && range[0] <= pageRanges[size - 1][1]))\n+          throw new IllegalArgumentException();\n+      }\n+    size = pageRanges.length;\n+    if (fromPage > 0 && pageRanges[0][0] > fromPage)\n+      fromPage = pageRanges[0][0];\n+    if (toPage > 0 && pageRanges[size - 1][1] < toPage)\n+      toPage = pageRanges[size - 1][1];\n+    this.pageRanges = new int[size][];\n+    while (--size >= 0)\n+      this.pageRanges[size] = (int[]) pageRanges[size].clone();\n+  }\n+\n+  public String getPrinter()\n+  {\n+    return printer;\n+  }\n+\n+  public void setPrinter(String printer)\n+  {\n+    this.printer = printer;\n+  }\n+\n+  public SidesType getSides()\n+  {\n+    return sides;\n+  }\n+\n+  public void setSides(SidesType sides)\n+  {\n+    if (sides == null)\n+      throw new IllegalArgumentException();\n+    this.sides = sides;\n+  }\n+\n+  public void setSidesToDefault()\n+  {\n+    sides = SidesType.ONE_SIDED;\n+  }\n+\n+  public int getToPage()\n+  {\n+    return toPage != 0 ? toPage\n+      : pageRanges != null ? pageRanges[pageRanges.length - 1][1]\n+      : fromPage != 0 ? fromPage : maxPage;\n+  }\n+\n+  public void setToPage(int toPage)\n+  {\n+    if (toPage < minPage || (fromPage > toPage && fromPage != 0)\n+        || toPage > maxPage)\n+      throw new IllegalArgumentException();\n+    if (pageRanges == null)\n+      this.toPage = toPage;\n+  }\n+\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n+      return true;\n+    if (! (o instanceof JobAttributes))\n+      return false;\n+    JobAttributes ja = (JobAttributes) o;\n+    if (copies != ja.copies || selection != ja.selection\n+        || destination != ja.destination || dialog != ja.dialog\n+        || ! filename.equals(ja.filename) || maxPage != ja.maxPage\n+        || minPage != ja.minPage || multiple != ja.multiple\n+        || fromPage != ja.fromPage || toPage != ja.toPage\n+        || ! printer.equals(ja.printer) || sides != ja.sides\n+        || (pageRanges == null) != (ja.pageRanges == null))\n+      return false;\n+    if (pageRanges != ja.pageRanges)\n+      for (int i = pageRanges.length; --i >= 0; )\n+        if (pageRanges[i][0] != ja.pageRanges[i][0]\n+            || pageRanges[i][1] != ja.pageRanges[i][1])\n+          return false;\n+    return true;\n+  }\n+\n+  public int hashCode()\n+  {\n+    int hash = (selection.value << 6) ^ (destination.value << 5)\n+      ^ (dialog.value << 3) ^ (multiple.value << 2) ^ sides.value\n+      ^ (filename == null ? 0 : filename.hashCode())\n+      ^ (printer == null ? 0 : printer.hashCode());\n+    // The effect of the above fields on the hashcode match the JDK. However,\n+    // I am unable to reverse engineer the effect of the fields listed below,\n+    // so I am using my own implementation. Note that this still satisfies\n+    // the general contract of hashcode, it just doesn't match the JDK.\n+    hash ^= (copies << 27) ^ (maxPage << 22) ^ (minPage << 17);\n+    if (pageRanges == null)\n+      hash ^= (getFromPage() << 13) ^ (getToPage() << 8);\n+    else\n+      for (int i = pageRanges.length; --i >= 0; )\n+        hash ^= (pageRanges[i][0] << 13) ^ (pageRanges[i][1] << 8);\n+    return hash;\n+  }\n+\n+  public String toString()\n+  {\n+    StringBuffer s = new StringBuffer(\"copies=\").append(copies)\n+      .append(\",defaultSelection=\").append(selection).append(\",destination=\")\n+      .append(destination).append(\",dialog=\").append(dialog)\n+      .append(\",fileName=\").append(filename).append(\",fromPage=\")\n+      .append(getFromPage()).append(\",maxPage=\").append(maxPage)\n+      .append(\",minPage=\").append(minPage)\n+      .append(\",multiple-document-handling=\").append(multiple)\n+      .append(\",page-ranges=[\");\n+    if (pageRanges == null)\n+      s.append(minPage).append(':').append(minPage).append(']');\n+    else\n+      for (int i = 0; i < pageRanges.length; i++)\n+        s.append(pageRanges[i][0]).append(':').append(pageRanges[i][1])\n+          .append(',');\n+    s.setLength(s.length() - 1);\n+    return s.append(\"],printer=\").append(printer).append(\",sides=\")\n+      .append(sides).append(\",toPage=\").append(getToPage()).toString();\n+  }\n+} // class JobAttributes"}, {"sha": "95aad8030d10aac766839956dd3633f0abbc3e18", "filename": "libjava/java/awt/KeyEventDispatcher.java", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FKeyEventDispatcher.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FKeyEventDispatcher.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FKeyEventDispatcher.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,82 @@\n+/* KeyEventDispatcher.java -- dispatches key events\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+import java.awt.event.KeyEvent;\n+\n+/**\n+ * An instance of this interface coordinates with a KeyboardFocusManager to\n+ * target and dispatch all key events. This allows retargeting, consuming,\n+ * changing, or otherwise manipulating the key event before sending it on to\n+ * a target.\n+ *\n+ * <p>By default, the KeyboardFocusManager is the sink for all key events not\n+ * dispatched by other dispatchers. Therefore, it is unnecessary for the user\n+ * to register the focus manager as a dispatcher.\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @see KeyboardFocusManager#addKeyEventDispatcher(KeyEventDispatcher)\n+ * @see KeyboardFocusManager#removeKeyEventDispatcher(KeyEventDispatcher)\n+ * @since 1.4\n+ * @status updated to 1.4\n+ */\n+public interface KeyEventDispatcher\n+{\n+  /**\n+   * Called by the KeyboardFocusManager to request that a key event be\n+   * dispatched. The dispatcher is free to retarget the event, consume it,\n+   * dispatch it, or make other changes. This is usually done to allow\n+   * delivery of key events to objects other than the window in focus, such\n+   * as for navigating non-focusable components. If this dispatcher chooses\n+   * to dispatch the event itself, it should call <code>redispatchEvent</code>\n+   * to avoid infinite recursion.\n+   *\n+   * <p>If the return value is false, the KeyEvent is passed to the next\n+   * dispatcher in the chain, ending with the KeyboardFocusManager. If the\n+   * return value is true, the event has been consumed (although it might\n+   * have been ignored), and no further action will be taken on the event. Be\n+   * sure to check whether the event was consumed before dispatching it\n+   * further.\n+   *\n+   * @param e the key event\n+   * @return true if the event has been consumed\n+   * @see KeyboardFocusManager#redispatchEvent(Component, AWTEvent)\n+   */\n+  boolean dispatchKeyEvent(KeyEvent e);\n+} // interface KeyEventDispatcher"}, {"sha": "5069aaf510cef8fc5c9e4fde764dcfe9035d572a", "filename": "libjava/java/awt/KeyEventPostProcessor.java", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FKeyEventPostProcessor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FKeyEventPostProcessor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FKeyEventPostProcessor.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,81 @@\n+/* KeyEventPostProcessor.java -- performs actions after a key event dispatch\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+import java.awt.event.KeyEvent;\n+\n+/**\n+ * An instance of this interface coordinates with a KeyboardFocusManager to\n+ * target and dispatch all key events that are otherwise unconsumed. This\n+ * allows events which take place when nothing has focus to still operate,\n+ * such as menu keyboard shortcuts.\n+ *\n+ * <p>By default, the KeyboardFocusManager is the sink for all key events not\n+ * post-processed elsewhere. Therefore, it is unnecessary for the user\n+ * to register the focus manager as a dispatcher.\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @see KeyboardFocusManager#addKeyEventPostProcessor(KeyEventPostProcessor)\n+ * @see KeyboardFocusManager#removeKeyEventPostProcessor(KeyEventPostProcessor)\n+ * @since 1.4\n+ * @status updated to 1.4\n+ */\n+public interface KeyEventPostProcessor\n+{\n+  /**\n+   * Called by the KeyboardFocusManager to request that a key event be\n+   * post-processed. Typically, the event has already been dispatched and\n+   * handled, unless no object has focus. Thus, this allows global event\n+   * handling for things like menu shortcuts. If this post-processor chooses\n+   * to dispatch the event, it should call <code>redispatchEvent</code>\n+   * to avoid infinite recursion.\n+   *\n+   * <p>If the return value is false, the KeyEvent is passed to the next\n+   * dispatcher in the chain, ending with the KeyboardFocusManager. If the\n+   * return value is true, the event has been consumed (although it might\n+   * have been ignored), and no further action will be taken on the event. Be\n+   * sure to check whether the event was consumed before dispatching it\n+   * further.\n+   *\n+   * @param e the key event\n+   * @return true if the event has been consumed\n+   * @see KeyboardFocusManager#redispatchEvent(Component, AWTEvent)\n+   */\n+  boolean postProcessKeyEvent(KeyEvent e);\n+} // interface KeyEventPostProcessor"}, {"sha": "2680894b8df4c8842b66a6eda982fcb4b30f6c01", "filename": "libjava/java/awt/KeyboardFocusManager.java", "status": "added", "additions": 556, "deletions": 0, "changes": 556, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FKeyboardFocusManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FKeyboardFocusManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FKeyboardFocusManager.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,556 @@\n+/* KeyboardFocusManager.java -- manage component focusing via the keyboard\n+   Copyright (C) 2002 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+import java.awt.event.KeyEvent;\n+import java.beans.PropertyChangeListener;\n+import java.beans.PropertyChangeSupport;\n+import java.beans.PropertyVetoException;\n+import java.beans.VetoableChangeListener;\n+import java.beans.VetoableChangeSupport;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @since 1.4\n+ * @status partially updated to 1.4, needs documentation.\n+ */\n+public abstract class KeyboardFocusManager\n+  implements KeyEventDispatcher, KeyEventPostProcessor\n+{\n+  public static final int FORWARD_TRAVERSAL_KEYS = 0;\n+  public static final int BACKWARD_TRAVERSAL_KEYS = 1;\n+  public static final int UP_CYCLE_TRAVERSAL_KEYS = 2;\n+  public static final int DOWN_CYCLE_TRAVERSAL_KEYS = 3;\n+\n+  private static final Set DEFAULT_FORWARD_KEYS;\n+  private static final Set DEFAULT_BACKWARD_KEYS;\n+  static\n+  {\n+    Set s = new HashSet();\n+    s.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_TAB, 0));\n+    s.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_TAB,\n+                                       KeyEvent.CTRL_DOWN_MASK));\n+    DEFAULT_FORWARD_KEYS = Collections.unmodifiableSet(s);\n+    s = new HashSet();\n+    s.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_TAB,\n+                                       KeyEvent.SHIFT_DOWN_MASK));\n+    s.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_TAB,\n+                                       KeyEvent.SHIFT_DOWN_MASK\n+                                       | KeyEvent.CTRL_DOWN_MASK));\n+    DEFAULT_BACKWARD_KEYS = Collections.unmodifiableSet(s);\n+  }\n+\n+  private static KeyboardFocusManager current\n+    = new DefaultKeyboardFocusManager();\n+\n+  // XXX Not implemented correctly. I think a good implementation here may\n+  // be to have permanentFocusOwner be null, and fall back to focusOwner,\n+  // unless a temporary focus change is in effect.\n+  private static Component focusOwner;\n+  private static Component permanentFocusOwner;\n+\n+  private static Window focusedWindow;\n+  private static Window activeWindow;\n+  private static Container focusCycleRoot;\n+\n+  private FocusTraversalPolicy defaultPolicy;\n+  private Set[] defaultFocusKeys = new Set[] {\n+    DEFAULT_FORWARD_KEYS, DEFAULT_BACKWARD_KEYS,\n+    Collections.EMPTY_SET, Collections.EMPTY_SET\n+  };\n+\n+  private final PropertyChangeSupport propertyChangeSupport\n+    = new PropertyChangeSupport(this);\n+  private final VetoableChangeSupport vetoableChangeSupport\n+    = new VetoableChangeSupport(this);\n+  private final ArrayList keyEventDispatchers = new ArrayList();\n+  private final ArrayList keyEventPostProcessors = new ArrayList();\n+\n+\f\n+  public KeyboardFocusManager()\n+  {\n+  }\n+\n+  public static KeyboardFocusManager getCurrentKeyboardFocusManager()\n+  {\n+    // XXX Need a way to divide this into contexts.\n+    return current;\n+  }\n+\n+  public static void setCurrentKeyboardFocusManager(KeyboardFocusManager m)\n+  {\n+    SecurityManager sm = System.getSecurityManager();\n+    if (sm != null)\n+      sm.checkPermission(new AWTPermission(\"replaceKeyboardFocusManager\"));\n+    // XXX Need a way to divide this into contexts.\n+    current = m == null ? new DefaultKeyboardFocusManager() : m;\n+  }\n+\n+  public Component getFocusOwner()\n+  {\n+    // XXX Need an easy way to test if this thread is in the context of the\n+    // global focus owner, to avoid creating the exception in the first place.\n+    try\n+      {\n+        return getGlobalFocusOwner();\n+      }\n+    catch (SecurityException e)\n+      {\n+        return null;\n+      }\n+  }\n+\n+  protected Component getGlobalFocusOwner()\n+  {\n+    // XXX Need a way to test if this thread is in the context of the focus\n+    // owner, and throw a SecurityException if that is the case.\n+    // XXX Implement.\n+    return focusOwner;\n+  }\n+\n+  protected void setGlobalFocusOwner(Component owner)\n+  {\n+    // XXX Should this send focus events to the components involved?\n+    if (owner == null || owner.focusable)\n+      {\n+        firePropertyChange(\"focusOwner\", focusOwner, owner);\n+        try\n+          {\n+            fireVetoableChange(\"focusOwner\", focusOwner, owner);\n+            focusOwner = owner;\n+          }\n+        catch (PropertyVetoException e)\n+          {\n+          }\n+      }\n+  }\n+\n+  public void clearGlobalFocusOwner()\n+  {\n+    // XXX Is this enough?\n+    setGlobalFocusOwner(null);\n+  }\n+\n+  public Component getPermanentFocusOwner()\n+  {\n+    // XXX Need an easy way to test if this thread is in the context of the\n+    // global focus owner, to avoid creating the exception in the first place.\n+    try\n+      {\n+        return getGlobalPermanentFocusOwner();\n+      }\n+    catch (SecurityException e)\n+      {\n+        return null;\n+      }\n+  }\n+\n+  protected Component getGlobalPermanentFocusOwner()\n+  {\n+    // XXX Need a way to test if this thread is in the context of the focus\n+    // owner, and throw a SecurityException if that is the case.\n+    // XXX Implement.\n+    return permanentFocusOwner == null ? focusOwner : permanentFocusOwner;\n+  }\n+\n+  protected void setGlobalPermanentFocusOwner(Component focusOwner)\n+  {\n+    // XXX Should this send focus events to the components involved?\n+    if (focusOwner == null || focusOwner.focusable)\n+      {\n+        firePropertyChange(\"permanentFocusOwner\", permanentFocusOwner,\n+                           focusOwner);\n+        try\n+          {\n+            fireVetoableChange(\"permanentFocusOwner\", permanentFocusOwner,\n+                               focusOwner);\n+            permanentFocusOwner = focusOwner;\n+          }\n+        catch (PropertyVetoException e)\n+          {\n+          }\n+      }\n+  }\n+\n+  public Window getFocusedWindow()\n+  {\n+    // XXX Need an easy way to test if this thread is in the context of the\n+    // global focus owner, to avoid creating the exception in the first place.\n+    try\n+      {\n+        return getGlobalFocusedWindow();\n+      }\n+    catch (SecurityException e)\n+      {\n+        return null;\n+      }\n+  }\n+\n+  protected Window getGlobalFocusedWindow()\n+  {\n+    // XXX Need a way to test if this thread is in the context of the focus\n+    // owner, and throw a SecurityException if that is the case.\n+    // XXX Implement.\n+    return focusedWindow;\n+  }\n+\n+  protected void setGlobalFocusedWindow(Window window)\n+  {\n+    // XXX Should this send focus events to the windows involved?\n+    if (window == null || window.focusable)\n+      {\n+        firePropertyChange(\"focusedWindow\", focusedWindow, window);\n+        try\n+          {\n+            fireVetoableChange(\"focusedWindow\", focusedWindow, window);\n+            focusedWindow = window;\n+          }\n+        catch (PropertyVetoException e)\n+          {\n+          }\n+      }\n+  }\n+\n+  public Window getActiveWindow()\n+  {\n+    // XXX Need an easy way to test if this thread is in the context of the\n+    // global focus owner, to avoid creating the exception in the first place.\n+    try\n+      {\n+        return getGlobalActiveWindow();\n+      }\n+    catch (SecurityException e)\n+      {\n+        return null;\n+      }\n+  }\n+\n+  protected Window getGlobalActiveWindow()\n+  {\n+    // XXX Need a way to test if this thread is in the context of the focus\n+    // owner, and throw a SecurityException if that is the case.\n+    // XXX Implement.\n+    return activeWindow;\n+  }\n+\n+  protected void setGlobalActiveWindow(Window window)\n+  {\n+    // XXX Should this send focus events to the windows involved?\n+    firePropertyChange(\"activeWindow\", activeWindow, window);\n+    try\n+      {\n+        fireVetoableChange(\"activeWindow\", activeWindow, window);\n+        activeWindow = window;\n+      }\n+    catch (PropertyVetoException e)\n+      {\n+      }\n+  }\n+\n+  public FocusTraversalPolicy getDefaultFocusTraversalPolicy()\n+  {\n+    if (defaultPolicy == null)\n+      defaultPolicy = new DefaultFocusTraversalPolicy();\n+    return defaultPolicy;\n+  }\n+\n+  public void setDefaultFocusTraversalPolicy(FocusTraversalPolicy policy)\n+  {\n+    if (policy == null)\n+      throw new IllegalArgumentException();\n+    firePropertyChange(\"defaultFocusTraversalPolicy\", defaultPolicy, policy);\n+    defaultPolicy = policy;\n+  }\n+\n+  public void setDefaultFocusTraversalKeys(int id, Set keystrokes)\n+  {\n+    if (keystrokes == null)\n+      throw new IllegalArgumentException();\n+    Set sa;\n+    Set sb;\n+    Set sc;\n+    String type;\n+    switch (id)\n+      {\n+      case FORWARD_TRAVERSAL_KEYS:\n+        sa = defaultFocusKeys[BACKWARD_TRAVERSAL_KEYS];\n+        sb = defaultFocusKeys[UP_CYCLE_TRAVERSAL_KEYS];\n+        sc = defaultFocusKeys[DOWN_CYCLE_TRAVERSAL_KEYS];\n+        type = \"forwardDefaultFocusTraversalKeys\";\n+        break;\n+      case BACKWARD_TRAVERSAL_KEYS:\n+        sa = defaultFocusKeys[FORWARD_TRAVERSAL_KEYS];\n+        sb = defaultFocusKeys[UP_CYCLE_TRAVERSAL_KEYS];\n+        sc = defaultFocusKeys[DOWN_CYCLE_TRAVERSAL_KEYS];\n+        type = \"backwardDefaultFocusTraversalKeys\";\n+        break;\n+      case UP_CYCLE_TRAVERSAL_KEYS:\n+        sa = defaultFocusKeys[FORWARD_TRAVERSAL_KEYS];\n+        sb = defaultFocusKeys[BACKWARD_TRAVERSAL_KEYS];\n+        sc = defaultFocusKeys[DOWN_CYCLE_TRAVERSAL_KEYS];\n+        type = \"upCycleDefaultFocusTraversalKeys\";\n+        break;\n+      case DOWN_CYCLE_TRAVERSAL_KEYS:\n+        sa = defaultFocusKeys[FORWARD_TRAVERSAL_KEYS];\n+        sb = defaultFocusKeys[BACKWARD_TRAVERSAL_KEYS];\n+        sc = defaultFocusKeys[UP_CYCLE_TRAVERSAL_KEYS];\n+        type = \"downCycleDefaultFocusTraversalKeys\";\n+        break;\n+      default:\n+        throw new IllegalArgumentException();\n+      }\n+    int i = keystrokes.size();\n+    Iterator iter = keystrokes.iterator();\n+    while (--i >= 0)\n+      {\n+        Object o = iter.next();\n+        if (! (o instanceof AWTKeyStroke)\n+            || sa.contains(o) || sb.contains(o) || sc.contains(o)\n+            || ((AWTKeyStroke) o).keyCode == KeyEvent.VK_UNDEFINED)\n+          throw new IllegalArgumentException();\n+      }\n+    keystrokes = Collections.unmodifiableSet(new HashSet(keystrokes));\n+    firePropertyChange(type, defaultFocusKeys[id], keystrokes);\n+    defaultFocusKeys[id] = keystrokes;\n+  }\n+\n+  public Set getDefaultFocusTraversalKeys(int id)\n+  {\n+    if (id < FORWARD_TRAVERSAL_KEYS || id > DOWN_CYCLE_TRAVERSAL_KEYS)\n+      throw new IllegalArgumentException();\n+    return defaultFocusKeys[id];\n+  }\n+\n+  public Container getCurrentFocusCycleRoot()\n+  {\n+    // XXX Need an easy way to test if this thread is in the context of the\n+    // global focus owner, to avoid creating the exception in the first place.\n+    try\n+      {\n+        return getGlobalCurrentFocusCycleRoot();\n+      }\n+    catch (SecurityException e)\n+      {\n+        return null;\n+      }\n+  }\n+\n+  protected Container getGlobalCurrentFocusCycleRoot()\n+  {\n+    // XXX Need a way to test if this thread is in the context of the focus\n+    // owner, and throw a SecurityException if that is the case.\n+    // XXX Implement.\n+    return focusCycleRoot;\n+  }\n+\n+  protected void setGlobalCurrentFocusCycleRoot(Container cycleRoot)\n+  {\n+    firePropertyChange(\"currentFocusCycleRoot\", focusCycleRoot, cycleRoot);\n+    focusCycleRoot = cycleRoot;\n+  }\n+\n+  public void addPropertyChangeListener(PropertyChangeListener l)\n+  {\n+    if (l != null)\n+      propertyChangeSupport.addPropertyChangeListener(l);\n+  }\n+\n+  public void removePropertyChangeListener(PropertyChangeListener l)\n+  {\n+    if (l != null)\n+      propertyChangeSupport.removePropertyChangeListener(l);\n+  }\n+\n+  public PropertyChangeListener[] getPropertyChangeListeners()\n+  {\n+    return propertyChangeSupport.getPropertyChangeListeners();\n+  }\n+\n+  public void addPropertyChangeListener(String name, PropertyChangeListener l)\n+  {\n+    if (l != null)\n+      propertyChangeSupport.addPropertyChangeListener(name, l);\n+  }\n+\n+  public void removePropertyChangeListener(String name,\n+                                           PropertyChangeListener l)\n+  {\n+    if (l != null)\n+      propertyChangeSupport.removePropertyChangeListener(name, l);\n+  }\n+\n+  public PropertyChangeListener[] getPropertyChangeListeners(String name)\n+  {\n+    return propertyChangeSupport.getPropertyChangeListeners(name);\n+  }\n+\n+  protected void firePropertyChange(String name, Object o, Object n)\n+  {\n+    propertyChangeSupport.firePropertyChange(name, o, n);\n+  }\n+\n+  public void addVetoableChangeListener(VetoableChangeListener l)\n+  {\n+    if (l != null)\n+      vetoableChangeSupport.addVetoableChangeListener(l);\n+  }\n+\n+  public void removeVetoableChangeListener(VetoableChangeListener l)\n+  {\n+    if (l != null)\n+      vetoableChangeSupport.removeVetoableChangeListener(l);\n+  }\n+\n+  public VetoableChangeListener[] getVetoableChangeListeners()\n+  {\n+    return vetoableChangeSupport.getVetoableChangeListeners();\n+  }\n+\n+  public void addVetoableChangeListener(String name, VetoableChangeListener l)\n+  {\n+    if (l != null)\n+      vetoableChangeSupport.addVetoableChangeListener(name, l);\n+  }\n+\n+  public void removeVetoableChangeListener(String name,\n+                                           VetoableChangeListener l)\n+  {\n+    if (l != null)\n+      vetoableChangeSupport.removeVetoableChangeListener(name, l);\n+  }\n+\n+  public VetoableChangeListener[] getVetoableChangeListeners(String name)\n+  {\n+    return vetoableChangeSupport.getVetoableChangeListeners(name);\n+  }\n+\n+  protected void fireVetoableChange(String name, Object o, Object n)\n+    throws PropertyVetoException\n+  {\n+    vetoableChangeSupport.fireVetoableChange(name, o, n);\n+  }\n+\n+  public void addKeyEventDispatcher(KeyEventDispatcher dispatcher)\n+  {\n+    if (dispatcher != null)\n+      keyEventDispatchers.add(dispatcher);\n+  }\n+\n+  public void removeKeyEventDispatcher(KeyEventDispatcher dispatcher)\n+  {\n+    keyEventDispatchers.remove(dispatcher);\n+  }\n+\n+  protected List getKeyEventDispatchers()\n+  {\n+    return (List) keyEventDispatchers.clone();\n+  }\n+\n+  public void addKeyEventPostProcessor(KeyEventPostProcessor postProcessor)\n+  {\n+    if (postProcessor != null)\n+      keyEventPostProcessors.add(postProcessor);\n+  }\n+\n+  public void removeKeyEventPostProcessor(KeyEventPostProcessor postProcessor)\n+  {\n+    keyEventPostProcessors.remove(postProcessor);\n+  }\n+\n+  protected List getKeyEventPostProcessors()\n+  {\n+    return (List) keyEventPostProcessors.clone();\n+  }\n+\n+  public abstract boolean dispatchEvent(AWTEvent e);\n+\n+  public final void redispatchEvent(Component target, AWTEvent e)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public abstract boolean dispatchKeyEvent(KeyEvent e);\n+\n+  public abstract boolean postProcessKeyEvent(KeyEvent e);\n+\n+  public abstract void processKeyEvent(Component focused, KeyEvent e);\n+\n+  protected abstract void enqueueKeyEvents(long after, Component untilFocused);\n+\n+  protected abstract void dequeueKeyEvents(long after, Component untilFocused);\n+\n+  protected abstract void discardKeyEvents(Component comp);\n+\n+  public abstract void focusNextComponent(Component comp);\n+\n+  public abstract void focusPreviousComponent(Component comp);\n+\n+  public abstract void upFocusCycle(Component comp);\n+\n+  public abstract void downFocusCycle(Container cont);\n+\n+  public final void focusNextComponent()\n+  {\n+    focusNextComponent(focusOwner);\n+  }\n+\n+  public final void focusPreviousComponent()\n+  {\n+    focusPreviousComponent(focusOwner);\n+  }\n+\n+  public final void upFocusCycle()\n+  {\n+    upFocusCycle(focusOwner);\n+  }\n+\n+  public final void downFocusCycle()\n+  {\n+    if (focusOwner instanceof Container\n+        && ((Container) focusOwner).isFocusCycleRoot())\n+      downFocusCycle((Container) focusOwner);\n+  }\n+} // class KeyboardFocusManager"}, {"sha": "1231c3eb62f291621a2df441f2853f2b6db0acc2", "filename": "libjava/java/awt/LayoutManager.java", "status": "modified", "additions": 50, "deletions": 64, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FLayoutManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FLayoutManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FLayoutManager.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,5 +1,5 @@\n-/* LayoutManager.java -- Layout containers in a Window\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+/* LayoutManager.java -- lay out elements in a Container\n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,68 +39,54 @@\n package java.awt;\n \n /**\n-  * This interface is for laying out containers.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n+ * This interface is for laying out containers in a particular sequence.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @see Container\n+ * @since 1.0\n+ * @status updated to 1.4\n+ */\n public interface LayoutManager\n {\n-\n-/**\n-  * Adds the specified component to the layout group.\n-  *\n-  * @param name The name of the component to add.\n-  * @param component The component to add.\n-  */\n-public abstract void\n-addLayoutComponent(String name, Component component);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Removes the specified component from the layout group.\n-  *\n-  * @param component The component to remove.\n-  */\n-public abstract void\n-removeLayoutComponent(Component component);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Calculates the preferred size for this container, taking into account\n-  * the components in the specified parent container.\n-  *\n-  * @param parent The parent container.\n-  *\n-  * @return The preferred dimensions of this container.\n-  */\n-public abstract Dimension\n-preferredLayoutSize(Container parent);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Calculates the minimum size for this container, taking into account\n-  * the components in the specified parent container.\n-  *\n-  * @param parent The parent container.\n-  *\n-  * @return The minimum dimensions of this container.\n-  */\n-public abstract Dimension\n-minimumLayoutSize(Container parent);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Lays out the components in this container on the specified parent\n-  * container.\n-  *\n-  * @param parent The parent container.\n-  */\n-public abstract void\n-layoutContainer(Container parent);\n-\n+  /**\n+   * Adds the specified component to the layout group.\n+   *\n+   * @param name the name of the component to add\n+   * @param component the component to add\n+   */\n+  void addLayoutComponent(String name, Component component);\n+\n+  /**\n+   * Removes the specified component from the layout group.\n+   *\n+   * @param component the component to remove\n+   */\n+  void removeLayoutComponent(Component component);\n+\n+  /**\n+   * Calculates the preferred size for this container, taking into account\n+   * the components it contains.\n+   *\n+   * @param parent the parent container to lay out\n+   * @return the preferred dimensions of this container\n+   * @see #minimumLayoutSize(Container)\n+   */\n+  Dimension preferredLayoutSize(Container parent);\n+\n+  /**\n+   * Calculates the minimum size for this container, taking into account\n+   * the components it contains.\n+   *\n+   * @param parent the parent container to lay out\n+   * @return the minimum dimensions of this container\n+   * @see #preferredLayoutSize(Container)\n+   */\n+  Dimension minimumLayoutSize(Container parent);\n+\n+  /**\n+   * Lays out the components in the given container.\n+   *\n+   * @param parent the container to lay out\n+   */\n+  void layoutContainer(Container parent);\n } // interface LayoutManager\n-"}, {"sha": "418e4d886fbb9fdc1e325a9ecda310ee8c0397a9", "filename": "libjava/java/awt/LayoutManager2.java", "status": "modified", "additions": 59, "deletions": 67, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FLayoutManager2.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FLayoutManager2.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FLayoutManager2.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,5 +1,5 @@\n-/* LayoutManager2.java -- Enhanced layout manager.\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+/* LayoutManager2.java -- enhanced layout manager\n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,70 +39,62 @@\n package java.awt;\n \n /**\n-  * Layout manager for laying out containers based on contraints.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n+ * Layout manager for laying out containers based on contraints. The\n+ * constraints control how the layout will proceed.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @see LayoutManager\n+ * @see Container\n+ * @since 1.0\n+ * @status updated to 1.4\n+ */\n public interface LayoutManager2 extends LayoutManager\n {\n-\n-/**\n-  * Adds the specified component to the layout, with the specified\n-  * constraint object.\n-  *\n-  * @param component The component to add.\n-  * @param constraint The constraint object.\n-  */\n-public abstract void\n-addLayoutComponent(Component component, Object contraint);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Determines the minimum size of the specified target container.\n-  *\n-  * @param target The target container.\n-  */\n-public abstract Dimension\n-maximumLayoutSize(Container target);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the preferred X axis alignment for the specified target\n-  * container.  This value will range from 0 to 1 where 0 is alignment \n-  * closest to the origin, 0.5 is centered, and 1 is aligned furthest \n-  * from the origin.\n-  *\n-  * @param target The target container.\n-  */\n-public abstract float\n-getLayoutAlignmentX(Container target);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the preferred Y axis alignment for the specified target\n-  * container.  This value will range from 0 to 1 where 0 is alignment \n-  * closest to the origin, 0.5 is centered, and 1 is aligned furthest \n-  * from the origin.\n-  *\n-  * @param target The target container.\n-  */\n-public abstract float\n-getLayoutAlignmentY(Container target);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Forces the layout manager to purge any cached information about\n-  * the layout of the target container.  This will force it to be\n-  * recalculated.\n-  *\n-  * @param target The target container.\n-  */\n-public abstract void\n-invalidateLayout(Container target);\n-\n-} // interface LayoutManager2 \n-\n+  /**\n+   * Adds the specified component to the layout, with the specified\n+   * constraint object.\n+   *\n+   * @param component the component to add\n+   * @param constraint the constraint to satisfy\n+   */\n+  void addLayoutComponent(Component component, Object contraint);\n+\n+  /**\n+   * Determines the maximum size of the specified target container.\n+   *\n+   * @param target the container to lay out\n+   * @return the maximum size of the container\n+   * @see Component#getMaximumSize()\n+   */\n+  Dimension maximumLayoutSize(Container target);\n+\n+  /**\n+   * Returns the preferred X axis alignment for the specified target\n+   * container.  This value will range from 0 to 1 where 0 is alignment\n+   * closest to the origin, 0.5 is centered, and 1 is aligned furthest\n+   * from the origin.\n+   *\n+   * @param target the target container\n+   * @return the x-axis alignment preference\n+   */\n+  float getLayoutAlignmentX(Container target);\n+\n+  /**\n+   * Returns the preferred Y axis alignment for the specified target\n+   * container.  This value will range from 0 to 1 where 0 is alignment\n+   * closest to the origin, 0.5 is centered, and 1 is aligned furthest\n+   * from the origin.\n+   *\n+   * @param target the target container\n+   * @return the y-axis alignment preference\n+   */\n+  float getLayoutAlignmentY(Container target);\n+\n+  /**\n+   * Forces the layout manager to purge any cached information about the\n+   * layout of the target container.  This will force it to be recalculated.\n+   *\n+   * @param target the target container\n+   */\n+  void invalidateLayout(Container target);\n+} // interface LayoutManager2"}, {"sha": "dd8b3412e2b01b9ac334e6c06378174cade80b5c", "filename": "libjava/java/awt/MenuContainer.java", "status": "modified", "additions": 26, "deletions": 35, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FMenuContainer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FMenuContainer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuContainer.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,4 +1,4 @@\n-/* MenuContainer.java -- Container for menu items.\n+/* MenuContainer.java -- container for menu items\n    Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -39,42 +39,33 @@\n package java.awt;\n \n /**\n-  * This interface is a container for menu components.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n+ * This interface is a container for menu components.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @since 1.0\n+ * @status updated to 1.4\n+ */\n public interface MenuContainer\n {\n+  /**\n+   * Returns the font in use by this container.\n+   *\n+   * @return the menu font\n+   */\n+  Font getFont();\n \n-/**\n-  * Returns the font in use by this container.\n-  *\n-  * @return The font in use by this container.\n-  */\n-public abstract Font\n-getFont();\n-\n-/*************************************************************************/\n-\n-/**\n-  * Removes the specified menu component from the menu.\n-  *\n-  * @param component The menu component to remove.\n-  */\n-public abstract void\n-remove(MenuComponent component);\n-\n-/*************************************************************************/\n-\n-/**\n-  * Posts and event to the listeners.  This is replaced by \n-  * <code>dispatchEvent</code>.\n-  *\n-  * @param event The event to dispatch.\n-  *\n-  * @deprecated\n-  */  \n-public abstract boolean\n-postEvent(Event event);\n+  /**\n+   * Removes the specified menu component from the menu.\n+   *\n+   * @param component the menu component to remove\n+   */\n+  void remove(MenuComponent component);\n \n+  /**\n+   * Posts an event to the listeners.\n+   *\n+   * @param event the event to dispatch\n+   * @deprecated use {@link MenuComponent#dispatchEvent(AWTEvent)} instead\n+   */\n+  boolean postEvent(Event event);\n } // interface MenuContainer"}, {"sha": "ffef30ecf8c4085b12eb064bf44592cbbb994284", "filename": "libjava/java/awt/MenuItem.java", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuItem.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -42,6 +42,7 @@\n import java.awt.peer.MenuComponentPeer;\n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n+import java.lang.reflect.Array;\n import java.util.EventListener;\n \n /**\n@@ -385,19 +386,24 @@ public class MenuItem extends MenuComponent implements java.io.Serializable\n   action_listeners = AWTEventMulticaster.remove(action_listeners, l);\n }\n \n+  public synchronized ActionListener[] getActionListeners()\n+  {\n+    return (ActionListener[])\n+      AWTEventMulticaster.getListeners(action_listeners,\n+                                       ActionListener.class);\n+  }\n+\n /** Returns all registered EventListers of the given listenerType. \n  * listenerType must be a subclass of EventListener, or a \n  * ClassClassException is thrown.\n  * @since 1.3 \n  */\n-public EventListener[]\n-getListeners(Class listenerType)\n-{\n-  if (listenerType == ActionListener.class)\n-    return Component.getListenersImpl(listenerType, action_listeners);\n-  else\n-    return Component.getListenersImpl(listenerType, null);\n-}\n+  public EventListener[] getListeners(Class listenerType)\n+  {\n+    if (listenerType == ActionListener.class)\n+      return getActionListeners();\n+    return (EventListener[]) Array.newInstance(listenerType, 0);\n+  }\n \n /*************************************************************************/\n "}, {"sha": "2501aa3eeaf758affa10d2ea5177f18eaa0e0017", "filename": "libjava/java/awt/PageAttributes.java", "status": "added", "additions": 482, "deletions": 0, "changes": 482, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FPageAttributes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FPageAttributes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPageAttributes.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,482 @@\n+/* PageAttributes.java -- \n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+import java.util.Locale;\n+\n+/**\n+ * Missing Documentation\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @since 1.3\n+ * @status updated to 1.4, but missing documentation\n+ */\n+public final class PageAttributes implements Cloneable\n+{\n+  public static final class ColorType extends AttributeValue\n+  {\n+    private static final String[] NAMES = { \"color\", \"monochrome\" };\n+    public static final ColorType COLOR = new ColorType(0);\n+    public static final ColorType MONOCHROME = new ColorType(1);\n+    private ColorType(int value)\n+    {\n+      super(value, NAMES);\n+    }\n+  } // class ColorType\n+  public static final class MediaType extends AttributeValue\n+  {\n+    private static final String[] NAMES\n+      = { \"iso-4a0\", \"iso-2a0\", \"iso-a0\", \"iso-a1\", \"iso-a2\", \"iso-a3\",\n+          \"iso-a4\", \"iso-a5\", \"iso-a6\", \"iso-a7\", \"iso-a8\", \"iso-a9\",\n+          \"iso-a10\", \"iso-b0\", \"iso-b1\", \"iso-b2\", \"iso-b3\", \"iso-b4\",\n+          \"iso-b5\", \"iso-b6\", \"iso-b7\", \"iso-b8\", \"iso-b9\", \"iso-b10\",\n+          \"jis-b0\", \"jis-b1\", \"jis-b2\", \"jis-b3\", \"jis-b4\", \"jis-b5\",\n+          \"jis-b6\", \"jis-b7\", \"jis-b8\", \"jis-b9\", \"jis-b10\", \"iso-c0\",\n+          \"iso-c1\", \"iso-c2\", \"iso-c3\", \"iso-c4\", \"iso-c5\", \"iso-c6\",\n+          \"iso-c7\", \"iso-c8\", \"iso-c9\", \"iso-c10\", \"iso-designated-long\",\n+          \"executive\", \"folio\", \"invoice\", \"ledger\", \"na-letter\", \"na-legal\",\n+          \"quarto\", \"a\", \"b\", \"c\", \"d\", \"e\", \"na-10x15-envelope\",\n+          \"na-10x14-envelope\", \"na-10x13-envelope\", \"na-9x12-envelope\",\n+          \"na-9x11-envelope\", \"na-7x9-envelope\", \"na-6x9-envelope\",\n+          \"na-number-9-envelope\", \"na-number-10-envelope\",\n+          \"na-number-11-envelope\", \"na-number-12-envelope\",\n+          \"na-number-14-envelope\", \"invite-envelope\", \"italy-envelope\",\n+          \"monarch-envelope\", \"personal-envelope\" };\n+    public static final MediaType ISO_4A0 = new MediaType(0);\n+    public static final MediaType ISO_2A0 = new MediaType(1);\n+    public static final MediaType ISO_A0 = new MediaType(2);\n+    public static final MediaType ISO_A1 = new MediaType(3);\n+    public static final MediaType ISO_A2 = new MediaType(4);\n+    public static final MediaType ISO_A3 = new MediaType(5);\n+    public static final MediaType ISO_A4 = new MediaType(6);\n+    public static final MediaType ISO_A5 = new MediaType(7);\n+    public static final MediaType ISO_A6 = new MediaType(8);\n+    public static final MediaType ISO_A7 = new MediaType(9);\n+    public static final MediaType ISO_A8 = new MediaType(10);\n+    public static final MediaType ISO_A9 = new MediaType(11);\n+    public static final MediaType ISO_A10 = new MediaType(12);\n+    public static final MediaType ISO_B0 = new MediaType(13);\n+    public static final MediaType ISO_B1 = new MediaType(14);\n+    public static final MediaType ISO_B2 = new MediaType(15);\n+    public static final MediaType ISO_B3 = new MediaType(16);\n+    public static final MediaType ISO_B4 = new MediaType(17);\n+    public static final MediaType ISO_B5 = new MediaType(18);\n+    public static final MediaType ISO_B6 = new MediaType(19);\n+    public static final MediaType ISO_B7 = new MediaType(20);\n+    public static final MediaType ISO_B8 = new MediaType(21);\n+    public static final MediaType ISO_B9 = new MediaType(22);\n+    public static final MediaType ISO_B10 = new MediaType(23);\n+    public static final MediaType JIS_B0 = new MediaType(24);\n+    public static final MediaType JIS_B1 = new MediaType(25);\n+    public static final MediaType JIS_B2 = new MediaType(26);\n+    public static final MediaType JIS_B3 = new MediaType(27);\n+    public static final MediaType JIS_B4 = new MediaType(28);\n+    public static final MediaType JIS_B5 = new MediaType(29);\n+    public static final MediaType JIS_B6 = new MediaType(30);\n+    public static final MediaType JIS_B7 = new MediaType(31);\n+    public static final MediaType JIS_B8 = new MediaType(32);\n+    public static final MediaType JIS_B9 = new MediaType(33);\n+    public static final MediaType JIS_B10 = new MediaType(34);\n+    public static final MediaType ISO_C0 = new MediaType(35);\n+    public static final MediaType ISO_C1 = new MediaType(36);\n+    public static final MediaType ISO_C2 = new MediaType(37);\n+    public static final MediaType ISO_C3 = new MediaType(38);\n+    public static final MediaType ISO_C4 = new MediaType(39);\n+    public static final MediaType ISO_C5 = new MediaType(40);\n+    public static final MediaType ISO_C6 = new MediaType(41);\n+    public static final MediaType ISO_C7 = new MediaType(42);\n+    public static final MediaType ISO_C8 = new MediaType(43);\n+    public static final MediaType ISO_C9 = new MediaType(44);\n+    public static final MediaType ISO_C10 = new MediaType(45);\n+    public static final MediaType ISO_DESIGNATED_LONG = new MediaType(46);\n+    public static final MediaType EXECUTIVE = new MediaType(47);\n+    public static final MediaType FOLIO = new MediaType(48);\n+    public static final MediaType INVOICE = new MediaType(49);\n+    public static final MediaType LEDGER = new MediaType(50);\n+    public static final MediaType NA_LETTER = new MediaType(51);\n+    public static final MediaType NA_LEGAL = new MediaType(52);\n+    public static final MediaType QUARTO = new MediaType(53);\n+    public static final MediaType A = new MediaType(54);\n+    public static final MediaType B = new MediaType(55);\n+    public static final MediaType C = new MediaType(56);\n+    public static final MediaType D = new MediaType(57);\n+    public static final MediaType E = new MediaType(58);\n+    public static final MediaType NA_10X15_ENVELOPE = new MediaType(59);\n+    public static final MediaType NA_10X14_ENVELOPE = new MediaType(60);\n+    public static final MediaType NA_10X13_ENVELOPE = new MediaType(61);\n+    public static final MediaType NA_9X12_ENVELOPE = new MediaType(62);\n+    public static final MediaType NA_9X11_ENVELOPE = new MediaType(63);\n+    public static final MediaType NA_7X9_ENVELOPE = new MediaType(64);\n+    public static final MediaType NA_6X9_ENVELOPE = new MediaType(65);\n+    public static final MediaType NA_NUMBER_9_ENVELOPE = new MediaType(66);\n+    public static final MediaType NA_NUMBER_10_ENVELOPE = new MediaType(67);\n+    public static final MediaType NA_NUMBER_11_ENVELOPE = new MediaType(68);\n+    public static final MediaType NA_NUMBER_12_ENVELOPE = new MediaType(69);\n+    public static final MediaType NA_NUMBER_14_ENVELOPE = new MediaType(70);\n+    public static final MediaType INVITE_ENVELOPE = new MediaType(71);\n+    public static final MediaType ITALY_ENVELOPE = new MediaType(72);\n+    public static final MediaType MONARCH_ENVELOPE = new MediaType(73);\n+    public static final MediaType PERSONAL_ENVELOPE = new MediaType(74);\n+    public static final MediaType A0 = ISO_A0;\n+    public static final MediaType A1 = ISO_A1;\n+    public static final MediaType A2 = ISO_A2;\n+    public static final MediaType A3 = ISO_A3;\n+    public static final MediaType A4 = ISO_A4;\n+    public static final MediaType A5 = ISO_A5;\n+    public static final MediaType A6 = ISO_A6;\n+    public static final MediaType A7 = ISO_A7;\n+    public static final MediaType A8 = ISO_A8;\n+    public static final MediaType A9 = ISO_A9;\n+    public static final MediaType A10 = ISO_A10;\n+    public static final MediaType B0 = ISO_B0;\n+    public static final MediaType B1 = ISO_B1;\n+    public static final MediaType B2 = ISO_B2;\n+    public static final MediaType B3 = ISO_B3;\n+    public static final MediaType B4 = ISO_B4;\n+    public static final MediaType ISO_B4_ENVELOPE = ISO_B4;\n+    public static final MediaType B5 = ISO_B5;\n+    public static final MediaType ISO_B5_ENVELOPE = ISO_B4;\n+    public static final MediaType B6 = ISO_B6;\n+    public static final MediaType B7 = ISO_B7;\n+    public static final MediaType B8 = ISO_B8;\n+    public static final MediaType B9 = ISO_B9;\n+    public static final MediaType B10 = ISO_B10;\n+    public static final MediaType C0 = ISO_B0;\n+    public static final MediaType ISO_C0_ENVELOPE = ISO_C0;\n+    public static final MediaType C1 = ISO_C1;\n+    public static final MediaType ISO_C1_ENVELOPE = ISO_C1;\n+    public static final MediaType C2 = ISO_C2;\n+    public static final MediaType ISO_C2_ENVELOPE = ISO_C2;\n+    public static final MediaType C3 = ISO_C3;\n+    public static final MediaType ISO_C3_ENVELOPE = ISO_C3;\n+    public static final MediaType C4 = ISO_C4;\n+    public static final MediaType ISO_C4_ENVELOPE = ISO_C4;\n+    public static final MediaType C5 = ISO_C5;\n+    public static final MediaType ISO_C5_ENVELOPE = ISO_C5;\n+    public static final MediaType C6 = ISO_C6;\n+    public static final MediaType ISO_C6_ENVELOPE = ISO_C6;\n+    public static final MediaType C7 = ISO_C7;\n+    public static final MediaType ISO_C7_ENVELOPE = ISO_C7;\n+    public static final MediaType C8 = ISO_C8;\n+    public static final MediaType ISO_C8_ENVELOPE = ISO_C8;\n+    public static final MediaType C9 = ISO_C9;\n+    public static final MediaType ISO_C9_ENVELOPE = ISO_C9;\n+    public static final MediaType C10 = ISO_C10;\n+    public static final MediaType ISO_C10_ENVELOPE = ISO_C10;\n+    public static final MediaType ISO_DESIGNATED_LONG_ENVELOPE\n+      = ISO_DESIGNATED_LONG;\n+    public static final MediaType STATEMENT = INVOICE;\n+    public static final MediaType TABLOID = LEDGER;\n+    public static final MediaType LETTER = NA_LETTER;\n+    public static final MediaType NOTE = NA_LETTER;\n+    public static final MediaType LEGAL = NA_LEGAL;\n+    public static final MediaType ENV_10X15 = NA_10X15_ENVELOPE;\n+    public static final MediaType ENV_10X14 = NA_10X14_ENVELOPE;\n+    public static final MediaType ENV_10X13 = NA_10X13_ENVELOPE;\n+    public static final MediaType ENV_9X12 = NA_9X12_ENVELOPE;\n+    public static final MediaType ENV_9X11 = NA_9X11_ENVELOPE;\n+    public static final MediaType ENV_7X9 = NA_7X9_ENVELOPE;\n+    public static final MediaType ENV_6X9 = NA_6X9_ENVELOPE;\n+    public static final MediaType ENV_9 = NA_NUMBER_9_ENVELOPE;\n+    public static final MediaType ENV_10 = NA_NUMBER_10_ENVELOPE;\n+    public static final MediaType ENV_11 = NA_NUMBER_11_ENVELOPE;\n+    public static final MediaType ENV_12 = NA_NUMBER_12_ENVELOPE;\n+    public static final MediaType ENV_14 = NA_NUMBER_14_ENVELOPE;\n+    public static final MediaType ENV_INVITE = INVITE_ENVELOPE;\n+    public static final MediaType ENV_ITALY = ITALY_ENVELOPE;\n+    public static final MediaType ENV_MONARCH = MONARCH_ENVELOPE;\n+    public static final MediaType ENV_PERSONAL = PERSONAL_ENVELOPE;\n+    public static final MediaType INVITE = INVITE_ENVELOPE;\n+    public static final MediaType ITALY = ITALY_ENVELOPE;\n+    public static final MediaType MONARCH = MONARCH_ENVELOPE;\n+    public static final MediaType PERSONAL = PERSONAL_ENVELOPE;\n+    private MediaType(int value)\n+    {\n+      super(value, NAMES);\n+    }\n+  } // class MediaType\n+  public static final class OrientationRequestedType extends AttributeValue\n+  {\n+    private static final String[] NAMES = { \"portrait\", \"landscape\" };\n+    public static final OrientationRequestedType PORTRAIT\n+      = new OrientationRequestedType(0);\n+    public static final OrientationRequestedType LANDSCAPE\n+      = new OrientationRequestedType(1);\n+    private OrientationRequestedType(int value)\n+    {\n+      super(value, NAMES);\n+    }\n+  } // class OrientationRequestedType\n+  public static final class OriginType extends AttributeValue\n+  {\n+    private static final String[] NAMES = { \"physical\", \"printable\" };\n+    public static final OriginType PHYSICAL = new OriginType(0);\n+    public static final OriginType PRINTABLE = new OriginType(1);\n+    private OriginType(int value)\n+    {\n+      super(value, NAMES);\n+    }\n+  } // class OriginType\n+  public static final class PrintQualityType extends AttributeValue\n+  {\n+    private static final String[] NAMES = { \"high\", \"normal\", \"draft\" };\n+    public static final PrintQualityType HIGH = new PrintQualityType(0);\n+    public static final PrintQualityType NORMAL = new PrintQualityType(1);\n+    public static final PrintQualityType DRAFT = new PrintQualityType(2);\n+    private PrintQualityType(int value)\n+    {\n+      super(value, NAMES);\n+    }\n+  } // class PrintQualityType\n+\n+\f\n+  private ColorType color;\n+  private MediaType media;\n+  private OrientationRequestedType orientation;\n+  private OriginType origin;\n+  private PrintQualityType quality;\n+  private int resolutionX;\n+  private int resolutionY;\n+  private int resolutionScale;\n+  public PageAttributes()\n+  {\n+    color = ColorType.MONOCHROME;\n+    setMediaToDefault();\n+    orientation = OrientationRequestedType.PORTRAIT;\n+    origin = OriginType.PHYSICAL;\n+    quality = PrintQualityType.NORMAL;\n+    setPrinterResolutionToDefault();\n+  }\n+\n+  public PageAttributes(PageAttributes attr)\n+  {\n+    set(attr);\n+  }\n+\n+  public PageAttributes(ColorType color, MediaType media,\n+                        OrientationRequestedType orientation,\n+                        OriginType origin, PrintQualityType quality,\n+                        int[] resolution)\n+  {\n+    if (color == null || media == null || orientation == null\n+        || origin == null || quality == null)\n+      throw new IllegalArgumentException();\n+    setPrinterResolution(resolution);\n+    this.color = color;\n+    this.media = media;\n+    this.orientation = orientation;\n+    this.origin = origin;\n+    this.quality = quality;\n+  }\n+\n+  public Object clone()\n+  {\n+    return new PageAttributes(this);\n+  }\n+\n+  public void set(PageAttributes attr)\n+  {\n+    color = attr.color;\n+    media = attr.media;\n+    orientation = attr.orientation;\n+    origin = attr.origin;\n+    quality = attr.quality;\n+    resolutionX = attr.resolutionX;\n+    resolutionY = attr.resolutionY;\n+    resolutionScale = attr.resolutionScale;\n+  }\n+\n+  public ColorType getColor()\n+  {\n+    return color;\n+  }\n+\n+  public void setColor(ColorType color)\n+  {\n+    if (color == null)\n+      throw new IllegalArgumentException();\n+    this.color = color;\n+  }\n+\n+  public MediaType getMedia()\n+  {\n+    return media;\n+  }\n+\n+  public void setMedia(MediaType media)\n+  {\n+    if (media == null)\n+      throw new IllegalArgumentException();\n+    this.media = media;\n+  }\n+\n+  public void setMediaToDefault()\n+  {\n+    String country = Locale.getDefault().getCountry();\n+    media = (\"US\".equals(country) || \"CA\".equals(country)) ? MediaType.LETTER\n+      : MediaType.A4;\n+  }\n+\n+  public OrientationRequestedType getOrientationRequested()\n+  {\n+    return orientation;\n+  }\n+\n+  public void setOrientationRequested(OrientationRequestedType orientation)\n+  {\n+    if (orientation == null)\n+      throw new IllegalArgumentException();\n+    this.orientation = orientation;\n+  }\n+\n+  public void setOrientationRequested(int orientation)\n+  {\n+    if (orientation == 3)\n+      this.orientation = OrientationRequestedType.PORTRAIT;\n+    else if (orientation == 4)\n+      this.orientation = OrientationRequestedType.LANDSCAPE;\n+    else\n+      throw new IllegalArgumentException();\n+  }\n+\n+  public void setOrientationRequestedToDefault()\n+  {\n+    orientation = OrientationRequestedType.PORTRAIT;\n+  }\n+\n+  public OriginType getOrigin()\n+  {\n+    return origin;\n+  }\n+\n+  public void setOrigin(OriginType origin)\n+  {\n+    if (origin == null)\n+      throw new IllegalArgumentException();\n+    this.origin = origin;\n+  }\n+\n+  public PrintQualityType getPrintQuality()\n+  {\n+    return quality;\n+  }\n+\n+  public void setPrintQuality(PrintQualityType quality)\n+  {\n+    if (quality == null)\n+      throw new IllegalArgumentException();\n+    this.quality = quality;\n+  }\n+\n+  public void setPrintQuality(int quality)\n+  {\n+    if (quality == 3)\n+      this.quality = PrintQualityType.DRAFT;\n+    else if (quality == 4)\n+      this.quality = PrintQualityType.NORMAL;\n+    else if (quality == 5)\n+      this.quality = PrintQualityType.HIGH;\n+    else\n+      throw new IllegalArgumentException();\n+  }\n+\n+  public void setPrintQualityToDefault()\n+  {\n+    quality = PrintQualityType.NORMAL;\n+  }\n+\n+  public int[] getPrinterResolution()\n+  {\n+    return new int[] { resolutionX, resolutionY, resolutionScale };\n+  }\n+\n+  public void setPrinterResolution(int[] resolution)\n+  {\n+    if (resolution == null || resolution.length != 3 || resolution[0] <= 0\n+        || resolution[1] <= 0 || resolution[2] < 3 || resolution[2] > 4)\n+      throw new IllegalArgumentException();\n+    resolutionX = resolution[0];\n+    resolutionY = resolution[1];\n+    resolutionScale = resolution[2];\n+  }\n+\n+  public void setPrinterResolution(int resolution)\n+  {\n+    if (resolution <= 0)\n+      throw new IllegalArgumentException();\n+    resolutionX = resolution;\n+    resolutionY = resolution;\n+    resolutionScale = 3;\n+  }\n+\n+  public void setPrinterResolutionToDefault()\n+  {\n+    resolutionX = 72;\n+    resolutionY = 72;\n+    resolutionScale = 3;\n+  }\n+\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n+      return true;\n+    if (! (o instanceof PageAttributes))\n+      return false;\n+    PageAttributes pa = (PageAttributes) o;\n+    return color == pa.color && media == pa.media\n+      && orientation == pa.orientation && origin == pa.origin\n+      && quality == pa.quality && resolutionX == pa.resolutionX\n+      && resolutionY == pa.resolutionY\n+      && resolutionScale == pa.resolutionScale;\n+  }\n+  public int hashCode()\n+  {\n+    return (color.value << 31) ^ (media.value << 24)\n+      ^ (orientation.value << 23) ^ (origin.value << 22)\n+      ^ (quality.value << 20) ^ (resolutionScale << 19)\n+      ^ (resolutionY << 10) ^ resolutionX;\n+  }\n+  public String toString()\n+  {\n+    return \"color=\" + color + \",media=\" + media + \",orientation-requested=\"\n+      + orientation + \",origin=\" + origin + \",print-quality=\" + quality\n+      + \",printer-resolution=[\" + resolutionX + ',' + resolutionY + ','\n+      + resolutionScale + ']';\n+  }\n+} // class PageAttributes"}, {"sha": "94c30c0ff5db8c27b29c1f4cde525523dcfddb32", "filename": "libjava/java/awt/Paint.java", "status": "modified", "additions": 36, "deletions": 16, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FPaint.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FPaint.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPaint.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 2000, 2002  Free Software Foundation\n+/* Paint.java -- generate colors for Graphics2D operations\n+   Copyright (C) 2000, 2002 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -37,23 +38,42 @@\n \n package java.awt;\n \n-/**\n- * @author Warren Levy <warrenl@cygnus.com>\n- * @date March 15, 2000.\n- */\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.Rectangle2D;\n+import java.awt.image.ColorModel;\n \n /**\n- * Written using on-line Java Platform 1.2 API Specification, as well\n- * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n- * Status:  Stubbed.\n+ * Defines how color patterns are generated for Graphics2D operations. This\n+ * is used to perform the <code>draw</code> and <code>fill</code> methods\n+ * of the graphics object. Instances must be immutable, because the graphics\n+ * object does not clone them.\n+ *\n+ * @author Warren Levy <warrenl@cygnus.com>\n+ * @see PaintContext\n+ * @see Color\n+ * @see GradientPaint\n+ * @see TexturePaint\n+ * @see Graphics2D#setPaint(Paint)\n+ * @since 1.1\n+ * @status updated to 1.4\n  */\n-\n public interface Paint extends Transparency\n {\n-  // FIXME\n-  // public PaintContext createContext(ColorModel cm,\n-  //\t\t\t\t    Rectangle deviceBounds,\n-  //  \t\t\t\t    Rectangle2D userBounds,\n-  //\t\t\t\t    AffineTransform xform,\n-  //\t\t\t\t    RenderingHints hints);\n-}\n+  /**\n+   * Create the context necessary for performing the color pattern generation.\n+   * The color model is a hint, and may be null for Classpath implementations;\n+   * however some legacy code may throw a NullPointerException when passed a\n+   * null. Leaving the color model null provides the most efficiency and leeway\n+   * in the generation of the color pattern.\n+   *\n+   * @param cm the color model, used as a hint\n+   * @param deviceBounds the device space bounding box of the painted area\n+   * @param userBounds the user space bounding box of the painted area\n+   * @param xform the transformation from user space to device space\n+   * @param hints any hints for choosing between rendering alternatives\n+   * @return the context for performing the paint\n+   */\n+  PaintContext createContext(ColorModel cm, Rectangle deviceBounds,\n+                             Rectangle2D userBounds, AffineTransform xform,\n+                             RenderingHints hints);\n+} // interface Paint"}, {"sha": "fa26061f0ea680c14848539899cae0151a348241", "filename": "libjava/java/awt/PaintContext.java", "status": "modified", "additions": 33, "deletions": 14, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FPaintContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FPaintContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPaintContext.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 2000, 2002  Free Software Foundation\n+/* PaintContext.java -- the environment for performing a paint operation\n+   Copyright (C) 2000, 2002 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -37,21 +38,39 @@\n \n package java.awt;\n \n-/**\n- * @author Warren Levy <warrenl@cygnus.com>\n- * @date March 16, 2000.\n- */\n+import java.awt.image.ColorModel;\n+import java.awt.image.Raster;\n \n /**\n- * Written using on-line Java Platform 1.2 API Specification, as well\n- * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n- * Status:  Partially stubbed.\n+ * @author Warren Levy <warrenl@cygnus.com>\n+ * @see Paint\n+ * @since 1.1\n+ * @status updated to 1.4\n  */\n-\n public interface PaintContext\n {\n-  public void dispose();\n-  // FIXME\n-  // public ColorModel getColorModel();\n-  // public Raster getRaster(int x, int y, int w, int h);\n-}\n+  /**\n+   * Release the resources allocated for the paint.\n+   */\n+  void dispose();\n+\n+  /**\n+   * Return the color model of this context. It may be different from the\n+   * hint specified during createContext, as not all contexts can generate\n+   * color patterns in an arbitrary model.\n+   *\n+   * @return the context color model\n+   */\n+  ColorModel getColorModel();\n+\n+  /**\n+   * Return a raster containing the colors for the graphics operation.\n+   *\n+   * @param x the x-coordinate, in device space\n+   * @param y the y-coordinate, in device space\n+   * @param w the width, in device space\n+   * @param h the height, in device space\n+   * @return a raster for the given area and color\n+   */\n+  Raster getRaster(int x, int y, int w, int h);\n+} // interface PaintContext"}, {"sha": "23336bc6bd63fbe0db557309d9de23194fe391c3", "filename": "libjava/java/awt/Panel.java", "status": "modified", "additions": 102, "deletions": 52, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FPanel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FPanel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPanel.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,4 +1,4 @@\n-/* Panel.java -- Simple container object.\n+/* Panel.java -- Simple container object\n    Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -41,59 +41,109 @@\n import java.awt.peer.PanelPeer;\n import java.awt.peer.ContainerPeer;\n import java.awt.peer.ComponentPeer;\n+import java.io.Serializable;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n \n /**\n-  * A panel is a simple container class. \n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n-public class Panel extends Container implements java.io.Serializable\n-{\n-\n-/*\n- * Constructors\n- */\n-\n-/**\n-  * Initializes a new instance of <code>Panel</code> that has a default\n-  * layout manager of <code>FlowLayout</code>.\n-  */\n-public\n-Panel()\n-{\n-  this(new FlowLayout());\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Initializes a new instance of <code>Panel</code> with the specified\n-  * layout manager.\n-  *\n-  * @param layoutManager The layout manager for this object.\n-  */\n-public\n-Panel(LayoutManager layoutManager)\n-{\n-  setLayout(layoutManager);\n-}\n-\n-/*************************************************************************/\n-\n-/*\n- * Instance Methods\n+ * A panel is a simple container class. It's default layout is the\n+ * <code>FlowLayout</code> manager.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @see FlowLayout\n+ * @since 1.0\n+ * @status updated to 1.4\n  */\n-\n-/**\n-  * Notifies this object to create its native peer.\n-  */\n-public void\n-addNotify()\n+public class Panel extends Container implements Accessible\n {\n-  if (peer == null)\n-    peer = getToolkit().createPanel(this);\n-  super.addNotify();\n-}\n-\n+  /**\n+   * Compatible with JDK 1.0+.\n+   */\n+  private static final long serialVersionUID = -2728009084054400034L;\n+\n+  /** The cached accessible context. */\n+  private transient AccessibleContext context;\n+\n+  /**\n+   * Initializes a new instance of <code>Panel</code> that has a default\n+   * layout manager of <code>FlowLayout</code>.\n+   */\n+  public Panel()\n+  {\n+    this(new FlowLayout());\n+  }\n+\n+  /**\n+   * Initializes a new instance of <code>Panel</code> with the specified\n+   * layout manager.\n+   *\n+   * @param layoutManager the layout manager for this object\n+   * @since 1.1\n+   */\n+  public Panel(LayoutManager layoutManager)\n+  {\n+    setLayout(layoutManager);\n+  }\n+\n+  /**\n+   * Notifies this object to create its native peer.\n+   *\n+   * @see #isDisplayable()\n+   * @see #removeNotify()\n+   */\n+  public void addNotify()\n+  {\n+    if (peer == null)\n+      peer = getToolkit().createPanel(this);\n+    super.addNotify();\n+  }\n+\n+  /**\n+   * Gets the AccessibleContext associated with this panel, creating one if\n+   * necessary. This always returns an instance of {@link AccessibleAWTPanel}.\n+   *\n+   * @return the accessibility context of this panel\n+   * @since 1.3\n+   */\n+  public AccessibleContext getAccessibleContext()\n+  {\n+    if (context == null)\n+      context = new AccessibleAWTPanel();\n+    return context;\n+  }\n+\n+  /**\n+   * This class provides accessibility support for Panels, and is the\n+   * runtime type returned by {@link #getAccessibleContext()}.\n+   *\n+   * @author Eric Blake <ebb9@email.byu.edu>\n+   * @since 1.3\n+   */\n+  protected class AccessibleAWTPanel extends AccessibleAWTContainer\n+  {\n+    /**\n+     * Compatible with JDK 1.4+.\n+     */\n+    private static final long serialVersionUID = -6409552226660031050L;\n+\n+    /**\n+     * The default constructor.\n+     */\n+    protected AccessibleAWTPanel()\n+    {\n+    }\n+\n+    /**\n+     * Get the role of this accessible object, a panel.\n+     *\n+     * @return the role of the object\n+     * @see AccessibleRole#PANEL\n+     */\n+    public AccessibleRole getAccessibleRole()\n+    {\n+      return AccessibleRole.PANEL;\n+    }\n+  } // class AccessibleAWTPanel\n } // class Panel \n-"}, {"sha": "9d5126434aec0d8c7e85449baf92014001cad1ec", "filename": "libjava/java/awt/Point.java", "status": "modified", "additions": 136, "deletions": 70, "changes": 206, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FPoint.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FPoint.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPoint.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 1999, 2002  Free Software Foundation\n+/* Point.java -- represents a point in 2-D space\n+   Copyright (C) 1999, 2002 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -36,144 +37,209 @@\n \n \n package java.awt;\n-import java.awt.geom.Point2D;\n \n-/* Written using \"Java Class Libraries\", 2nd edition, plus online\n- * API docs for JDK 1.2 beta from http://www.javasoft.com.\n- * Status:  Believed complete and correct, except that neither toString\n- * nor hashCode have been compared with JDK output.\n- */\n+import java.awt.geom.Point2D;\n+import java.io.Serializable;\n \n /**\n  * This class represents a point on the screen using cartesian coordinates.\n+ * Remember that in screen coordinates, increasing x values go from left to\n+ * right, and increasing y values go from top to bottom.\n+ *\n+ * <p>There are some public fields; if you mess with them in an inconsistent\n+ * manner, it is your own fault when you get invalid results. Also, this\n+ * class is not threadsafe.\n  *\n  * @author Per Bothner <bothner@cygnus.com>\n- * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @date February 8, 1999.\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @since 1.0\n+ * @status updated to 1.4\n  */\n-public class Point extends Point2D implements java.io.Serializable\n+public class Point extends Point2D implements Serializable\n {\n   /**\n-   * @serial The X coordinate of the point.\n+   * Compatible with JDK 1.0+.\n+   */\n+  private static final long serialVersionUID = -5276940640259749850L;\n+\n+  /**\n+   * The x coordinate.\n+   *\n+   * @see #getLocation()\n+   * @see #move(int, int)\n+   * @serial the X coordinate of the point\n    */\n   public int x;\n \n   /**\n-   * @serial The Y coordinate of the point.\n+   * The y coordinate.\n+   *\n+   * @see #getLocation()\n+   * @see #move(int, int)\n+   * @serial The Y coordinate of the point\n    */\n   public int y;\n \n   /**\n    * Initializes a new instance of <code>Point</code> representing the\n    * coordiates (0,0).\n+   *\n+   * @since 1.1\n    */\n-  public Point () { }\n+  public Point()\n+  {\n+  }\n \n   /**\n    * Initializes a new instance of <code>Point</code> with coordinates\n    * identical to the coordinates of the specified points.\n    *\n-   * @param point The point to copy the coordinates from.\n+   * @param point the point to copy the coordinates from\n+   * @throws NullPointerException if p is null\n    */\n-  public Point (Point p) { this.x = p.x;  this.y = p.y; }\n+  public Point(Point p)\n+  {\n+    x = p.x;\n+    y = p.y;\n+  }\n \n   /**\n    * Initializes a new instance of <code>Point</code> with the specified\n    * coordinates.\n    *\n-   * @param x The X coordinate of this point.\n-   * @param y The Y coordinate of this point.\n+   * @param x the X coordinate\n+   * @param y the Y coordinate\n    */\n-  public Point (int x, int y) { this.x = x;  this.y = y; }\n+  public Point(int x, int y)\n+  {\n+    this.x = x;\n+    this.y = y;\n+  }\n \n   /**\n-   * Tests whether or not this object is equal to the specified object.\n-   * This will be true if and only if the specified objectj:\n-   * <p>\n-   * <ul>\n-   * <li>Is not <code>null</code>.\n-   * <li>Is an instance of <code>Point</code>.\n-   * <li>Has X and Y coordinates equal to this object's.\n-   * </ul>\n+   * Get the x coordinate.\n    *\n-   * @param obj The object to test against for equality.\n+   * @return the value of x, as a double\n+   */\n+  public double getX()\n+  {\n+    return x;\n+  }\n+\n+  /**\n+   * Get the y coordinate.\n    *\n-   * @return <code>true</code> if the specified object is equal to this\n-   * object, <code>false</code> otherwise.\n-  */\n-  public boolean equals (Object obj)\n+   * @return the value of y, as a double\n+   */\n+  public double getY()\n   {\n-    if (! (obj instanceof Point))\n-      return false;\n-    Point p = (Point) obj;\n-    return this.x == p.x && this.y == p.y;\n+    return y;\n   }\n \n   /**\n-   * Returns a hash value for this point.\n+   * Returns the location of this point. A pretty useless method, as this\n+   * is already a point.\n    *\n-   * @param A hash value for this point.\n+   * @return a copy of this point\n+   * @see #setLocation(Point)\n+   * @since 1.1\n    */\n-  public int hashCode () { return x ^ y; }\n+  public Point getLocation()\n+  {\n+    return new Point(x, y);\n+  }\n \n   /**\n-   * Returns the location of this object as a point.  A pretty useless\n-   * method.  It is included to mimic the <code>getLocation</code> method\n-   * in component.\n+   * Sets this object's coordinates to match those of the specified point.\n    *\n-   * @return This point.\n+   * @param p the point to copy the coordinates from\n+   * @throws NullPointerException if p is null\n+   * @since 1.1\n    */\n-  public Point getLocation () { return new Point(this); }\n+  public void setLocation(Point p)\n+  {\n+    x = p.x;\n+    y = p.y;\n+  }\n \n   /**\n    * Sets this object's coordinates to the specified values.  This method\n-   * is identical to the <code>setLocation(int, int)</code> method.\n+   * is identical to the <code>move()</code> method.\n    *\n-   * @param x The new X coordinate.\n-   * @param y The new Y coordinate.\n+   * @param x the new X coordinate\n+   * @param y the new Y coordinate\n    */\n-  public void move (int x, int y) { this.x = x;  this.y = y; }\n+  public void setLocation(int x, int y)\n+  {\n+    this.x = x;\n+    this.y = y;\n+  }\n \n   /**\n    * Sets this object's coordinates to the specified values.  This method\n-   * is identical to the <code>move()</code> method.\n+   * performs normal casting from double to int, so you may lose precision.\n    *\n-   * @param x The new X coordinate.\n-   * @param y The new Y coordinate.\n+   * @param x the new X coordinate\n+   * @param y the new Y coordinate\n    */\n-  public void setLocation (int x, int y) { this.x = x;  this.y = y; }\n+  public void setLocation(double x, double y)\n+  {\n+    this.x = (int) x;\n+    this.y = (int) y;\n+  }\n \n   /**\n-   * Sets this object's coordinates to match those of the specified point.\n+   * Sets this object's coordinates to the specified values.  This method\n+   * is identical to the <code>setLocation(int, int)</code> method.\n    *\n-   * @param point The point to copy the coordinates from.\n+   * @param x the new X coordinate\n+   * @param y the new Y coordinate\n    */\n-  public void setLocation (Point pt) { this.x = pt.x;  this.y = pt.y; }\n+  public void move(int x, int y)\n+  {\n+    this.x = x;\n+    this.y = y;\n+  }\n \n   /**\n-   * Changes the coordinates of this point such that the specified \n+   * Changes the coordinates of this point such that the specified\n    * <code>dx</code> parameter is added to the existing X coordinate and\n    * <code>dy</code> is added to the existing Y coordinate.\n    *\n-   * @param dx The amount to add to the X coordinate.\n-   * @param dy The amount to add to the Y coordinate.\n+   * @param dx the amount to add to the X coordinate\n+   * @param dy the amount to add to the Y coordinate\n    */\n-  public void translate (int x, int y) { this.x += x;  this.y += y; }\n+  public void translate(int dx, int dy)\n+  {\n+    x += dx;\n+    y += dy;\n+  }\n \n   /**\n-   * Returns a string representation of this object.\n+   * Tests whether or not this object is equal to the specified object.\n+   * This will be true if and only if the specified object is an instance\n+   * of Point2D and has the same X and Y coordinates.\n    *\n-   * @return A string representation of this object.\n-   */\n-  public String toString ()\n+   * @param obj the object to test against for equality\n+   * @return true if the specified object is equal\n+  */\n+  public boolean equals(Object obj)\n   {\n-    return getClass().getName() + \"[x:\"+x+\",y:\"+y+']';\n+    if (! (obj instanceof Point2D))\n+      return false;\n+    Point2D p = (Point2D) obj;\n+    return x == p.getX() && y == p.getY();\n   }\n \n-  public double getX() { return x; }\n-  public double getY() { return y; }\n-\n-  public void setLocation (double x, double y)\n-  { this.x = (int) x;  this.y = (int) y; }\n-\n-}\n+  /**\n+   * Returns a string representation of this object. The format is:\n+   * <code>getClass().getName() + \"[x=\" + x + \",y=\" + y + ']'</code>.\n+   *\n+   * @return a string representation of this object\n+   */\n+  public String toString()\n+  {\n+    return getClass().getName() + \"[x=\" + x + \",y=\" + y + ']';\n+  }\n+} // class Point"}, {"sha": "1f51ac811d615abb577c44c0eb36d05006bc0467", "filename": "libjava/java/awt/Polygon.java", "status": "modified", "additions": 646, "deletions": 317, "changes": 963, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FPolygon.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FPolygon.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPolygon.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,422 +1,751 @@\n-/* Copyright (C) 2001  Free Software Foundation\n+/* Polygon.java -- class representing a polygon\n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n \n-   This file is part of libjava.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n \n package java.awt;\n \n-import java.awt.geom.*;\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.PathIterator;\n+import java.awt.geom.Point2D;\n+import java.awt.geom.Rectangle2D;\n import java.io.Serializable;\n-import java.util.Arrays;\n \n /**\n- * @author Tom Tromey <tromey@redhat.com>\n- * @date May 10, 2001\n+ * This class represents a polygon, a closed, two-dimensional region in a\n+ * coordinate space. The region is bounded by an arbitrary number of line\n+ * segments, between (x,y) coordinate vertices. The polygon has even-odd\n+ * winding, meaning that a point is inside the shape if it crosses the\n+ * boundary an odd number of times on the way to infinity.\n+ *\n+ * <p>There are some public fields; if you mess with them in an inconsistent\n+ * manner, it is your own fault when you get NullPointerException,\n+ * ArrayIndexOutOfBoundsException, or invalid results. Also, this class is\n+ * not threadsafe.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @since 1.0\n+ * @status updated to 1.4\n  */\n-\n-/** The Polygon class represents a closed region whose boundary is\n-    made of line segments.  The Polygon is defined by its vertices.  */\n public class Polygon implements Shape, Serializable\n {\n-  /** The bounds of the polygon.  This is null until the bounds have\n-   *  been computed for the first time; then it is correctly\n-   *  maintained whenever it is modified.  */\n-  protected Rectangle bounds;\n+  /**\n+   * Compatible with JDK 1.0+.\n+   */\n+  private static final long serialVersionUID = -6460061437900069969L;\n \n-  /** The number of points in the polygon.  */\n+  /**\n+   * This total number of endpoints.\n+   *\n+   * @serial the number of endpoints, possibly less than the array sizes\n+   */\n   public int npoints;\n \n-  /** The x coordinates of the points.  */\n+  /**\n+   * The array of X coordinates of endpoints. This should not be null.\n+   *\n+   * @see #addPoint(int, int)\n+   * @serial the x coordinates\n+   */\n   public int[] xpoints;\n \n-  /** The y coordinates of the points.  */\n+  /**\n+   * The array of Y coordinates of endpoints. This should not be null.\n+   *\n+   * @see #addPoint(int, int)\n+   * @serial the y coordinates\n+   */\n   public int[] ypoints;\n \n-  /** Create a new, empty Polygon.  */\n-  public Polygon ()\n+  /**\n+   * The bounding box of this polygon. This is lazily created and cached, so\n+   * it must be invalidated after changing points.\n+   *\n+   * @see #getBounds()\n+   * @serial the bounding box, or null\n+   */\n+  protected Rectangle bounds;\n+\n+  /**\n+   * Cached flattened version - condense points and parallel lines, so the\n+   * result has area if there are >= 3 condensed vertices. flat[0] is the\n+   * number of condensed points, and (flat[odd], flat[odd+1]) form the\n+   * condensed points.\n+   *\n+   * @see #condense()\n+   * @see #contains(double, double)\n+   * @see #contains(double, double, double, double)\n+   */\n+  private transient int[] condensed;\n+\n+  /**\n+   * Initializes an empty polygon.\n+   */\n+  public Polygon()\n   {\n-    this.xpoints = new int[0];\n-    this.ypoints = new int[0];\n-    this.npoints = 0;\n+    // Leave room for growth.\n+    xpoints = new int[4];\n+    ypoints = new int[4];\n   }\n \n-  /** Create a new Polygon from the given vertices.\n-   * @param xpoints The x coordinates\n-   * @param ypoints The y coordinates\n-   * @param npoints The number of points\n+  /**\n+   * Create a new polygon with the specified endpoints. The arrays are copied,\n+   * so that future modifications to the parameters do not affect the polygon.\n+   *\n+   * @param xpoints the array of X coordinates for this polygon\n+   * @param ypoints the array of Y coordinates for this polygon\n+   * @param npoints the total number of endpoints in this polygon\n+   * @throws NegativeArraySizeException if npoints is negative\n+   * @throws IndexOutOfBoundsException if npoints exceeds either array\n+   * @throws NullPointerException if xpoints or ypoints is null\n    */\n-  public Polygon (int[] xpoints, int[] ypoints, int npoints)\n+  public Polygon(int[] xpoints, int[] ypoints, int npoints)\n   {\n-    // We make explicit copies instead of relying on clone so that we\n-    // ensure the new arrays are the same size.\n     this.xpoints = new int[npoints];\n     this.ypoints = new int[npoints];\n-    System.arraycopy (xpoints, 0, this.xpoints, 0, npoints);\n-    System.arraycopy (ypoints, 0, this.ypoints, 0, npoints);\n+    System.arraycopy(xpoints, 0, this.xpoints, 0, npoints);\n+    System.arraycopy(ypoints, 0, this.ypoints, 0, npoints);\n+    this.npoints = npoints;\n   }\n \n-  /** Append the specified point to this Polygon.\n-   * @param x The x coordinate\n-   * @param y The y coordinate\n+  /**\n+   * Reset the polygon to be empty. The arrays are left alone, to avoid object\n+   * allocation, but the number of points is set to 0, and all cached data\n+   * is discarded. If you are discarding a huge number of points, it may be\n+   * more efficient to just create a new Polygon.\n+   *\n+   * @see #invalidate()\n+   * @since 1.4\n    */\n-  public void addPoint (int x, int y)\n+  public void reset()\n   {\n-    int[] newx = new int[npoints + 1];\n-    System.arraycopy (xpoints, 0, newx, 0, npoints);\n-    int[] newy = new int[npoints + 1];\n-    System.arraycopy (ypoints, 0, newy, 0, npoints);\n-    newx[npoints] = x;\n-    newy[npoints] = y;\n-    ++npoints;\n-    xpoints = newx;\n-    ypoints = newy;\n-\n-    // It is simpler to just recompute.\n-    if (bounds != null)\n-      computeBoundingBox ();\n+    npoints = 0;\n+    invalidate();\n   }\n \n-  /** Return true if the indicated point is inside this Polygon.\n-   * This uses an even-odd rule to determine insideness.\n-   * @param x The x coordinate\n-   * @param y The y coordinate\n-   * @returns true if the point is contained by this Polygon.\n+  /**\n+   * Invalidate or flush all cached data. After direct manipulation of the\n+   * public member fields, this is necessary to avoid inconsistent results\n+   * in methods like <code>contains</code>.\n+   *\n+   * @see #getBounds()\n+   * @since 1.4\n    */\n-  public boolean contains (double x, double y)\n+  public void invalidate()\n   {\n-    // What we do is look at each line segment.  If the line segment\n-    // crosses the \"scan line\" at y at a point x' < x, then we\n-    // increment our counter.  At the end, an even number means the\n-    // point is outside the polygon.  Instead of a number, though, we\n-    // use a boolean.\n-    boolean inside = false;\n-    for (int i = 0; i < npoints; ++i)\n+    bounds = null;\n+    condensed = null;\n+  }\n+\n+  /**\n+   * Translates the polygon by adding the specified values to all X and Y\n+   * coordinates. This updates the bounding box, if it has been calculated.\n+   *\n+   * @param dx the amount to add to all X coordinates\n+   * @param dy the amount to add to all Y coordinates\n+   * @since 1.1\n+   */\n+  public void translate(int dx, int dy)\n+  {\n+    int i = npoints;\n+    while (--i >= 0)\n       {\n-\t// Handle the wrap case.\n-\tint x2 = (i == npoints) ? xpoints[0] : xpoints[i + 1];\n-\tint y2 = (i == npoints) ? ypoints[0] : ypoints[i + 1];\n-\n-\tif (ypoints[i] == y2)\n-\t  {\n-\t    // We ignore horizontal lines.  This might give weird\n-\t    // results in some situations -- ?\n-\t    continue;\n-\t  }\n-\n-\tdouble t = (y - ypoints[i]) / (double) (y2 - ypoints[i]);\n-\tdouble x3 = xpoints[i] + t * (x2 - xpoints[i]);\n-\tif (x3 < x)\n-\t  inside = ! inside;\n+        xpoints[i] += dx;\n+        xpoints[i] += dy;\n       }\n-\n-    return inside;\n+    if (bounds != null)\n+      {\n+        bounds.x += dx;\n+        bounds.y += dy;\n+      }\n+    condensed = null;\n   }\n \n-  /** Return true if the indicated rectangle is entirely inside this\n-   * Polygon.\n-   * This uses an even-odd rule to determine insideness.\n-   * @param x The x coordinate\n-   * @param y The y coordinate\n-   * @param w The width\n-   * @param h The height\n-   * @returns true if the rectangle is contained by this Polygon.\n+  /**\n+   * Adds the specified endpoint to the polygon. This updates the bounding\n+   * box, if it has been created.\n+   *\n+   * @param x the X coordinate of the point to add\n+   * @param y the Y coordiante of the point to add\n    */\n-  public boolean contains (double x, double y, double w, double h)\n+  public void addPoint(int x, int y)\n   {\n-    return intersectOrContains (x, y, w, h, false);\n+    if (npoints + 1 > xpoints.length)\n+      {\n+        int[] newx = new int[npoints + 1];\n+        System.arraycopy(xpoints, 0, newx, 0, npoints);\n+        xpoints = newx;\n+      }\n+    if (npoints + 1 > ypoints.length)\n+      {\n+        int[] newy = new int[npoints + 1];\n+        System.arraycopy(ypoints, 0, newy, 0, npoints);\n+        ypoints = newy;\n+      }\n+    xpoints[npoints] = x;\n+    ypoints[npoints] = y;\n+    npoints++;\n+    if (bounds != null)\n+      {\n+        if (npoints == 1)\n+          {\n+            bounds.x = x;\n+            bounds.y = y;\n+          }\n+        else\n+          {\n+            if (x < bounds.x)\n+              {\n+                bounds.width += bounds.x - x;\n+                bounds.x = x;\n+              }\n+            else if (x > bounds.x + bounds.width)\n+              bounds.width = x - bounds.x;\n+            if (y < bounds.y)\n+              {\n+                bounds.height += bounds.y - y;\n+                bounds.y = y;\n+              }\n+            else if (y > bounds.y + bounds.height)\n+              bounds.height = y - bounds.y;\n+          }\n+      }\n+    condensed = null;\n   }\n \n-  /** Return true if the indicated point is inside this Polygon.\n-   * This uses an even-odd rule to determine insideness.\n-   * @param x The x coordinate\n-   * @param y The y coordinate\n-   * @returns true if the point is contained by this Polygon.\n+  /**\n+   * Returns the bounding box of this polygon. This is the smallest\n+   * rectangle with sides parallel to the X axis that will contain this\n+   * polygon.\n+   *\n+   * @return the bounding box for this polygon\n+   * @see #getBounds2D()\n+   * @since 1.1\n    */\n-  public boolean contains (int x, int y)\n+  public Rectangle getBounds()\n   {\n-    return contains ((double) x, (double) y);\n+    if (bounds == null)\n+      {\n+        if (npoints == 0)\n+          return bounds = new Rectangle();\n+        int i = npoints - 1;\n+        int minx = xpoints[i];\n+        int maxx = minx;\n+        int miny = ypoints[i];\n+        int maxy = miny;\n+        while (--i >= 0)\n+          {\n+            int x = xpoints[i];\n+            int y = ypoints[i];\n+            if (x < minx)\n+              minx = x;\n+            else if (x > maxx)\n+              maxx = x;\n+            if (y < miny)\n+              miny = y;\n+            else if (y > maxy)\n+              maxy = y;\n+          }\n+        bounds = new Rectangle(minx, maxy, maxx - minx, maxy - miny);\n+      }\n+    return bounds;\n   }\n \n-  /** Return true if the indicated point is inside this Polygon.\n-   * This uses an even-odd rule to determine insideness.\n-   * @param p The point\n-   * @returns true if the point is contained by this Polygon.\n+  /**\n+   * Returns the bounding box of this polygon. This is the smallest\n+   * rectangle with sides parallel to the X axis that will contain this\n+   * polygon.\n+   *\n+   * @return the bounding box for this polygon\n+   * @see #getBounds2D()\n+   * @deprecated use {@link #getBounds()} instead\n    */\n-  public boolean contains (Point p)\n+  public Rectangle getBoundingBox()\n   {\n-    return contains (p.x, p.y);\n+    return getBounds();\n   }\n \n-  /** Return true if the indicated point is inside this Polygon.\n-   * This uses an even-odd rule to determine insideness.\n-   * @param p The point\n-   * @returns true if the point is contained by this Polygon.\n+  /**\n+   * Tests whether or not the specified point is inside this polygon.\n+   *\n+   * @param p the point to test\n+   * @return true if the point is inside this polygon\n+   * @throws NullPointerException if p is null\n+   * @see #contains(double, double)\n    */\n-  public boolean contains (Point2D p)\n+  public boolean contains(Point p)\n   {\n-    return contains (p.getX (), p.getY ());\n+    return contains(p.getX(), p.getY());\n   }\n \n-  /** Return true if the indicated rectangle is entirely inside this\n-   * Polygon.  This uses an even-odd rule to determine insideness.\n-   * @param r The rectangle\n-   * @returns true if the rectangle is contained by this Polygon.\n+  /**\n+   * Tests whether or not the specified point is inside this polygon.\n+   *\n+   * @param x the X coordinate of the point to test\n+   * @param y the Y coordinate of the point to test\n+   * @return true if the point is inside this polygon\n+   * @see #contains(double, double)\n+   * @since 1.1\n    */\n-  public boolean contains (Rectangle2D r)\n+  public boolean contains(int x, int y)\n   {\n-    return contains (r.getX (), r.getY (), r.getWidth (), r.getHeight ());\n+    return contains((double) x, (double) y);\n   }\n \n-  /** Returns the bounds of this Polygon.\n-   * @deprecated Use getBounds() instead.\n+  /**\n+   * Tests whether or not the specified point is inside this polygon.\n+   *\n+   * @param x the X coordinate of the point to test\n+   * @param y the Y coordinate of the point to test\n+   * @return true if the point is inside this polygon\n+   * @see #contains(double, double)\n+   * @deprecated use {@link #contains(int, int)} instead\n    */\n-  public Rectangle getBoundingBox ()\n+  public boolean inside(int x, int y)\n   {\n-    if (bounds == null)\n-      computeBoundingBox ();\n-    return bounds;\n+    return contains((double) x, (double) y);\n   }\n \n-  /** Returns the bounds of this Polygon.  */\n-  public Rectangle getBounds ()\n+  /**\n+   * Returns a high-precision bounding box of this polygon. This is the\n+   * smallest rectangle with sides parallel to the X axis that will contain\n+   * this polygon.\n+   *\n+   * @return the bounding box for this polygon\n+   * @see #getBounds()\n+   * @since 1.2\n+   */\n+  public Rectangle2D getBounds2D()\n   {\n-    if (bounds == null)\n-      computeBoundingBox ();\n-    return bounds;\n+    // For polygons, the integer version is exact!\n+    return getBounds();\n   }\n \n-  /** Returns the bounds of this Polygon.  */\n-  public Rectangle2D getBounds2D ()\n+  /**\n+   * Tests whether or not the specified point is inside this polygon.\n+   *\n+   * @param x the X coordinate of the point to test\n+   * @param y the Y coordinate of the point to test\n+   * @return true if the point is inside this polygon\n+   * @since 1.2\n+   */\n+  public boolean contains(double x, double y)\n   {\n-    if (bounds == null)\n-      computeBoundingBox ();\n-    return bounds;\t\t// Why not?\n+    // First, the obvious bounds checks.\n+    if (! condense() || ! getBounds().contains(x, y))\n+      return false;\n+    // A point is contained if a ray to (-inf, y) crosses an odd number\n+    // of segments. This must obey the semantics of Shape when the point is\n+    // exactly on a segment or vertex: a point is inside only if the adjacent\n+    // point in the increasing x or y direction is also inside. Note that we\n+    // are guaranteed that the condensed polygon has area, and no consecutive\n+    // segments with identical slope.\n+    boolean inside = false;\n+    int limit = condensed[0];\n+    int curx = condensed[(limit << 1) - 1];\n+    int cury = condensed[limit << 1];\n+    for (int i = 1; i <= limit; i++)\n+      {\n+        int priorx = curx;\n+        int priory = cury;\n+        curx = condensed[(i << 1) - 1];\n+        cury = condensed[i << 1];\n+        if ((priorx > x && curx > x) // Left of segment, or NaN.\n+            || (priory > y && cury > y) // Below segment, or NaN.\n+            || (priory < y && cury < y)) // Above segment.\n+          continue;\n+        if (priory == cury) // Horizontal segment, y == cury == priory\n+          {\n+            if (priorx < x && curx < x) // Right of segment.\n+              {\n+                inside = ! inside;\n+                continue;\n+              }\n+            // Did we approach this segment from above or below?\n+            // This mess is necessary to obey rules of Shape.\n+            priory = condensed[((limit + i - 2) % limit) << 1];\n+            boolean above = priory > cury;\n+            if ((curx == x && (curx > priorx || above))\n+                || (priorx == x && (curx < priorx || ! above))\n+                || (curx > priorx && ! above) || above)\n+              inside = ! inside;\n+            continue;\n+          }\n+        if (priorx == x && priory == y) // On prior vertex.\n+          continue;\n+        if (priorx == curx // Vertical segment.\n+            || (priorx < x && curx < x)) // Right of segment.\n+          {\n+            inside = ! inside;\n+            continue;\n+          }\n+        // The point is inside the segment's bounding box, compare slopes.\n+        double leftx = curx > priorx ? priorx : curx;\n+        double lefty = curx > priorx ? priory : cury;\n+        double slopeseg = (double) (cury - priory) / (curx - priorx);\n+        double slopepoint = (double) (y - lefty) / (x - leftx);\n+        if ((slopeseg > 0 && slopeseg > slopepoint)\n+            || slopeseg < slopepoint)\n+          inside = ! inside;\n+      }\n+    return inside;\n   }\n \n-  /** Return an iterator for the boundary of this Polygon.\n-   * @param at A transform to apply to the coordinates.\n-   * @returns A path iterator for the Polygon's boundary.\n+  /**\n+   * Tests whether or not the specified point is inside this polygon.\n+   *\n+   * @param p the point to test\n+   * @return true if the point is inside this polygon\n+   * @throws NullPointerException if p is null\n+   * @see #contains(double, double)\n+   * @since 1.2\n    */\n-  public PathIterator getPathIterator (AffineTransform at)\n+  public boolean contains(Point2D p)\n   {\n-    return new Iterator (at);\n+    return contains(p.getX(), p.getY());\n   }\n \n-  /** Return an iterator for the boundary of this Polygon.\n-   * @param at A transform to apply to the coordinates.\n-   * @param flatness The flatness of the result; it is ignored by\n-   *                 this class.\n-   * @returns A path iterator for the Polygon's boundary.\n+  /**\n+   * Test if a high-precision rectangle intersects the shape. This is true\n+   * if any point in the rectangle is in the shape. This implementation is\n+   * precise.\n+   *\n+   * @param x the x coordinate of the rectangle\n+   * @param y the y coordinate of the rectangle\n+   * @param w the width of the rectangle, treated as point if negative\n+   * @param h the height of the rectangle, treated as point if negative\n+   * @return true if the rectangle intersects this shape\n+   * @since 1.2\n    */\n-  public PathIterator getPathIterator (AffineTransform at, double flatness)\n+  public boolean intersects(double x, double y, double w, double h)\n   {\n-    // We ignore the flatness.\n-    return new Iterator (at);\n+    // First, the obvious bounds checks.\n+    if (w <= 0 || h <= 0 || npoints == 0 ||\n+        ! getBounds().intersects(x, y, w, h))\n+      return false; // Disjoint bounds.\n+    if ((x <= bounds.x && x + w >= bounds.x + bounds.width\n+         && y <= bounds.y && y + h >= bounds.y + bounds.height)\n+        || contains(x, y))\n+      return true; // Rectangle contains the polygon, or one point matches.\n+    // If any vertex is in the rectangle, the two might intersect.\n+    int curx = 0;\n+    int cury = 0;\n+    for (int i = 0; i < npoints; i++)\n+      {\n+        curx = xpoints[i];\n+        cury = ypoints[i];\n+        if (curx >= x && curx < x + w && cury >= y && cury < y + h\n+            && contains(curx, cury)) // Boundary check necessary.\n+          return true;\n+      }\n+    // Finally, if at least one of the four bounding lines intersect any\n+    // segment of the polygon, return true. Be careful of the semantics of\n+    // Shape; coinciding lines do not necessarily return true.\n+    for (int i = 0; i < npoints; i++)\n+      {\n+        int priorx = curx;\n+        int priory = cury;\n+        curx = xpoints[i];\n+        cury = ypoints[i];\n+        if (priorx == curx) // Vertical segment.\n+          {\n+            if (curx < x || curx >= x + w) // Outside rectangle.\n+              continue;\n+            if ((cury >= y + h && priory <= y)\n+                || (cury <= y && priory >= y + h))\n+              return true; // Bisects rectangle.\n+            continue;\n+          }\n+        if (priory == cury) // Horizontal segment.\n+          {\n+            if (cury < y || cury >= y + h) // Outside rectangle.\n+              continue;\n+            if ((curx >= x + w && priorx <= x)\n+                || (curx <= x && priorx >= x + w))\n+              return true; // Bisects rectangle.\n+            continue;\n+          }\n+        // Slanted segment.\n+        double slope = (double) (cury - priory) / (curx - priorx);\n+        double intersect = slope * (x - curx) + cury;\n+        if (intersect > y && intersect < y + h) // Intersects left edge.\n+          return true;\n+        intersect = slope * (x + w - curx) + cury;\n+        if (intersect > y && intersect < y + h) // Intersects right edge.\n+          return true;\n+        intersect = (y - cury) / slope + curx;\n+        if (intersect > x && intersect < x + w) // Intersects bottom edge.\n+          return true;\n+        intersect = (y + h - cury) / slope + cury;\n+        if (intersect > x && intersect < x + w) // Intersects top edge.\n+          return true;\n+      }\n+    return false;\n   }\n \n-  /** @deprecated use contains(int,int).  */\n-  public boolean inside (int x, int y)\n+  /**\n+   * Test if a high-precision rectangle intersects the shape. This is true\n+   * if any point in the rectangle is in the shape. This implementation is\n+   * precise.\n+   *\n+   * @param r the rectangle\n+   * @return true if the rectangle intersects this shape\n+   * @throws NullPointerException if r is null\n+   * @see #intersects(double, double, double, double)\n+   * @since 1.2\n+   */\n+  public boolean intersects(Rectangle2D r)\n   {\n-    return contains (x, y);\n+    return intersects(r.getX(), r.getY(), r.getWidth(), r.getHeight());\n   }\n \n-  /** Return true if this Polygon's interior intersects the given\n-   * rectangle's interior.\n-   * @param x The x coordinate\n-   * @param y The y coordinate\n-   * @param w The width\n-   * @param h The height\n+  /**\n+   * Test if a high-precision rectangle lies completely in the shape. This is\n+   * true if all points in the rectangle are in the shape. This implementation\n+   * is precise.\n+   *\n+   * @param x the x coordinate of the rectangle\n+   * @param y the y coordinate of the rectangle\n+   * @param w the width of the rectangle, treated as point if negative\n+   * @param h the height of the rectangle, treated as point if negative\n+   * @return true if the rectangle is contained in this shape\n+   * @since 1.2\n    */\n-  public boolean intersects (double x, double y, double w, double h)\n+  public boolean contains(double x, double y, double w, double h)\n   {\n-    return intersectOrContains (x, y, w, h, true);\n+    // First, the obvious bounds checks.\n+    if (w <= 0 || h <= 0 || ! contains(x, y)\n+        || ! bounds.contains(x, y, w, h))\n+      return false;\n+    // Now, if any of the four bounding lines intersects a polygon segment,\n+    // return false. The previous check had the side effect of setting\n+    // the condensed array, which we use. Be careful of the semantics of\n+    // Shape; coinciding lines do not necessarily return false.\n+    int limit = condensed[0];\n+    int curx = condensed[(limit << 1) - 1];\n+    int cury = condensed[limit << 1];\n+    for (int i = 1; i <= limit; i++)\n+      {\n+        int priorx = curx;\n+        int priory = cury;\n+        curx = condensed[(i << 1) - 1];\n+        cury = condensed[i << 1];\n+        if (curx > x && curx < x + w && cury > y && cury < y + h)\n+          return false; // Vertex is in rectangle.\n+        if (priorx == curx) // Vertical segment.\n+          {\n+            if (curx < x || curx > x + w) // Outside rectangle.\n+              continue;\n+            if ((cury >= y + h && priory <= y)\n+                || (cury <= y && priory >= y + h))\n+              return false; // Bisects rectangle.\n+            continue;\n+          }\n+        if (priory == cury) // Horizontal segment.\n+          {\n+            if (cury < y || cury > y + h) // Outside rectangle.\n+              continue;\n+            if ((curx >= x + w && priorx <= x)\n+                || (curx <= x && priorx >= x + w))\n+              return false; // Bisects rectangle.\n+            continue;\n+          }\n+        // Slanted segment.\n+        double slope = (double) (cury - priory) / (curx - priorx);\n+        double intersect = slope * (x - curx) + cury;\n+        if (intersect > y && intersect < y + h) // Intersects left edge.\n+          return false;\n+        intersect = slope * (x + w - curx) + cury;\n+        if (intersect > y && intersect < y + h) // Intersects right edge.\n+          return false;\n+        intersect = (y - cury) / slope + curx;\n+        if (intersect > x && intersect < x + w) // Intersects bottom edge.\n+          return false;\n+        intersect = (y + h - cury) / slope + cury;\n+        if (intersect > x && intersect < x + w) // Intersects top edge.\n+          return false;\n+      }\n+    return true;\n   }\n \n-  /** Return true if this Polygon's interior intersects the given\n-   * rectangle's interior.\n-   * @param r The rectangle\n+  /**\n+   * Test if a high-precision rectangle lies completely in the shape. This is\n+   * true if all points in the rectangle are in the shape. This implementation\n+   * is precise.\n+   *\n+   * @param r the rectangle\n+   * @return true if the rectangle is contained in this shape\n+   * @throws NullPointerException if r is null\n+   * @see #contains(double, double, double, double)\n+   * @since 1.2\n    */\n-  public boolean intersects (Rectangle2D r)\n+  public boolean contains(Rectangle2D r)\n   {\n-    return intersects (r.getX (), r.getY (), r.getWidth (), r.getHeight ());\n+    return contains(r.getX(), r.getY(), r.getWidth(), r.getHeight());\n   }\n \n-  // This tests for intersection with or containment of a rectangle,\n-  // depending on the INTERSECT argument.\n-  private boolean intersectOrContains (double x, double y, double w, double h,\n-\t\t\t\t       boolean intersect)\n+  /**\n+   * Return an iterator along the shape boundary. If the optional transform\n+   * is provided, the iterator is transformed accordingly. Each call returns\n+   * a new object, independent from others in use. This class is not\n+   * threadsafe to begin with, so the path iterator is not either.\n+   *\n+   * @param transform an optional transform to apply to the iterator\n+   * @return a new iterator over the boundary\n+   * @since 1.2\n+   */\n+  public PathIterator getPathIterator(final AffineTransform transform)\n   {\n-    // First compute the rectangle of possible intersection points.\n-    Rectangle r = getBounds ();\n-    int minx = Math.max (r.x, (int) x);\n-    int maxx = Math.min (r.x + r.width, (int) (x + w));\n-    int miny = Math.max (r.y, (int) y);\n-    int maxy = Math.min (r.y + r.height, (int) (y + h));\n-\n-    if (miny > maxy)\n-      return false;\n-\n-    double[] crosses = new double[npoints + 1];\n+    return new PathIterator()\n+    {\n+      /** The current vertex of iteration. */\n+      private int vertex;\n \n-    for (; miny < maxy; ++miny)\n+      public int getWindingRule()\n       {\n-\t// First compute every place where the polygon might intersect\n-\t// the scan line at Y.\n-\tint ins = 0;\n-\tfor (int i = 0; i < npoints; ++i)\n-\t  {\n-\t    // Handle the wrap case.\n-\t    int x2 = (i == npoints) ? xpoints[0] : xpoints[i + 1];\n-\t    int y2 = (i == npoints) ? ypoints[0] : ypoints[i + 1];\n-\n-\t    if (ypoints[i] == y2)\n-\t      {\n-\t\t// We ignore horizontal lines.  This might give weird\n-\t\t// results in some situations -- ?\n-\t\tcontinue;\n-\t      }\n-\n-\t    double t = (((double) miny - ypoints[i])\n-\t\t\t/ (double) (y2 - ypoints[i]));\n-\t    double x3 = xpoints[i] + t * (x2 - xpoints[i]);\n-\t    crosses[ins++] = x3;\n-\t  }\n-\n-\t// Now we can sort into increasing order and look to see if\n-\t// any point in the rectangle is in the polygon.  We examine\n-\t// every other pair due to our even-odd rule.\n-\tArrays.sort (crosses, 0, ins);\n-\tint i = intersect ? 0 : 1;\n-\tfor (; i < ins - 1; i += 2)\n-\t  {\n-\t    // Pathological case.\n-\t    if (crosses[i] == crosses[i + 1])\n-\t      continue;\n-\n-\t    // Found a point on the inside.\n-\t    if ((crosses[i] >= x && crosses[i] < x + w)\n-\t\t|| (crosses[i + 1] >= x && crosses[i + 1] < x + w))\n-\t      {\n-\t\t// If we're checking containment then we just lost.\n-\t\t// But if we're checking intersection then we just\n-\t\t// won.\n-\t\treturn intersect;\n-\t      }\n-\t  }\n+        return WIND_EVEN_ODD;\n       }\n \n-    return false;\n-  }\n-\n-  /** Translates all the vertices of the polygon via a given vector.\n-   * @param deltaX The X offset\n-   * @param deltaY The Y offset\n-   */\n-  public void translate (int deltaX, int deltaY)\n-  {\n-    for (int i = 0; i < npoints; ++i)\n+      public boolean isDone()\n       {\n-\txpoints[i] += deltaX;\n-\typoints[i] += deltaY;\n+        return vertex > npoints;\n       }\n \n-    if (bounds != null)\n+      public void next()\n       {\n-\tbounds.x += deltaX;\n-\tbounds.y += deltaY;\n+        vertex++;\n       }\n-  }\n \n-  // This computes the bounding box if required.\n-  private void computeBoundingBox ()\n-  {\n-    if (npoints == 0)\n+      public int currentSegment(float[] coords)\n       {\n-\t// This is wrong if the user adds a new point, but we\n-\t// account for that in addPoint().\n-\tbounds = new Rectangle (0, 0, 0, 0);\n+        if (vertex >= npoints)\n+          return SEG_CLOSE;\n+        coords[0] = xpoints[vertex];\n+        coords[1] = ypoints[vertex];\n+        if (transform != null)\n+          transform.transform(coords, 0, coords, 0, 1);\n+        return vertex == 0 ? SEG_MOVETO : SEG_LINETO;\n       }\n-    else\n+\n+      public int currentSegment(double[] coords)\n       {\n-\tint maxx = xpoints[0];\n-\tint minx = xpoints[0];\n-\tint maxy = ypoints[0];\n-\tint miny = ypoints[0];\n-\n-\tfor (int i = 1; i < npoints; ++i)\n-\t  {\n-\t    maxx = Math.max (maxx, xpoints[i]);\n-\t    minx = Math.min (minx, xpoints[i]);\n-\t    maxy = Math.max (maxy, ypoints[i]);\n-\t    miny = Math.min (miny, ypoints[i]);\n-\t  }\n-\n-\tbounds = new Rectangle (minx, miny, maxx - minx, maxy - miny);\n+        if (vertex >= npoints)\n+          return SEG_CLOSE;\n+        coords[0] = xpoints[vertex];\n+        coords[1] = ypoints[vertex];\n+        if (transform != null)\n+          transform.transform(coords, 0, coords, 0, 1);\n+        return vertex == 0 ? SEG_MOVETO : SEG_LINETO;\n       }\n+    };\n   }\n \n-  private class Iterator implements PathIterator\n+  /**\n+   * Return an iterator along the flattened version of the shape boundary.\n+   * Since polygons are already flat, the flatness parameter is ignored, and\n+   * the resulting iterator only has SEG_MOVETO, SEG_LINETO and SEG_CLOSE\n+   * points. If the optional transform is provided, the iterator is\n+   * transformed accordingly. Each call returns a new object, independent\n+   * from others in use. This class is not threadsafe to begin with, so the\n+   * path iterator is not either.\n+   *\n+   * @param transform an optional transform to apply to the iterator\n+   * @param double the maximum distance for deviation from the real boundary\n+   * @return a new iterator over the boundary\n+   * @since 1.2\n+   */\n+  public PathIterator getPathIterator(AffineTransform transform,\n+                                      double flatness)\n   {\n-    public AffineTransform xform;\n-    public int where;\n-\n-    public Iterator (AffineTransform xform)\n-    {\n-      this.xform = xform;\n-      where = 0;\n-    }\n-\n-    public int currentSegment (double[] coords)\n-    {\n-      int r;\n-\n-      if (where < npoints)\n-\t{\n-\t  coords[0] = xpoints[where];\n-\t  coords[1] = ypoints[where];\n-\t  r = (where == 0) ? SEG_MOVETO : SEG_LINETO;\n-\t  xform.transform (coords, 0, coords, 0, 1);\n-\t  ++where;\n-\t}\n-      else\n-\tr = SEG_CLOSE;\n-\n-      return r;\n-    }\n-\n-    public int currentSegment (float[] coords)\n-    {\n-      int r;\n-\n-      if (where < npoints)\n-\t{\n-\t  coords[0] = xpoints[where];\n-\t  coords[1] = ypoints[where];\n-\t  r = (where == 0) ? SEG_MOVETO : SEG_LINETO;\n-\t  xform.transform (coords, 0, coords, 0, 1);\n-\t}\n-      else\n-\tr = SEG_CLOSE;\n-\n-      return r;\n-    }\n-\n-    public int getWindingRule ()\n-    {\n-      return WIND_EVEN_ODD;\n-    }\n-\n-    public boolean isDone ()\n-    {\n-      return where == npoints + 1;\n-    }\n+    return getPathIterator(transform);\n+  }\n \n-    public void next ()\n-    {\n-      ++where;\n-    }\n+  /**\n+   * Helper for contains, which caches a condensed version of the polygon.\n+   * This condenses all colinear points, so that consecutive segments in\n+   * the condensed version always have different slope.\n+   *\n+   * @return true if the condensed polygon has area\n+   * @see #condensed\n+   * @see #contains(double, double)\n+   */\n+  private boolean condense()\n+  {\n+    if (npoints <= 2)\n+      return false;\n+    if (condensed != null)\n+      return condensed[0] > 2;\n+    condensed = new int[npoints * 2 + 1];\n+    int curx = xpoints[npoints - 1];\n+    int cury = ypoints[npoints - 1];\n+    double curslope = Double.NaN;\n+    int count = 0;\n+  outer:\n+    for (int i = 0; i < npoints; i++)\n+      {\n+        int priorx = curx;\n+        int priory = cury;\n+        double priorslope = curslope;\n+        curx = xpoints[i];\n+        cury = ypoints[i];\n+        while (curx == priorx && cury == priory)\n+          {\n+            if (++i == npoints)\n+              break outer;\n+            curx = xpoints[i];\n+            cury = ypoints[i];\n+          }\n+        curslope = (curx == priorx ? Double.POSITIVE_INFINITY\n+                    : (double) (cury - priory) / (curx - priorx));\n+        if (priorslope == curslope)\n+          {\n+            if (count > 1 && condensed[(count << 1) - 3] == curx\n+                && condensed[(count << 1) - 2] == cury)\n+              {\n+                count--;\n+                continue;\n+              }\n+          }\n+        else\n+          count++;\n+        condensed[(count << 1) - 1] = curx;\n+        condensed[count << 1] = cury;\n+      }\n+    condensed[0] = count;\n+    return count > 2;\n   }\n-}\n+} // class Polygon"}, {"sha": "4a65fcec510499f3494c17ad6c4da61610a33bec", "filename": "libjava/java/awt/PrintGraphics.java", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FPrintGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FPrintGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPrintGraphics.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,5 +1,5 @@\n-/* PrintGraphics.java -- A print graphics context.\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+/* PrintGraphics.java -- a print graphics context\n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,21 +39,19 @@\n package java.awt;\n \n /**\n-  * This interface allows the originating print job to be obtained.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n+ * This interface allows the originating print job to be obtained.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @since 1.0\n+ * @status updated to 1.4\n+ */\n public interface PrintGraphics\n {\n-\n-/**\n-  * Returns the <code>PrintJob</code> that this object is being\n-  * managed by.\n-  *\n-  * @return The print job for this object.\n-  */\n-public abstract PrintJob\n-getPrintJob();\n-\n+  /**\n+   * Returns the <code>PrintJob</code> that this object is being\n+   * managed by.\n+   *\n+   * @return the print job for this object\n+   */\n+  PrintJob getPrintJob();\n } // interface PrintGraphics\n-"}, {"sha": "9cf95f214952750bdf2dbbfbe423ba44da37bb6d", "filename": "libjava/java/awt/PrintJob.java", "status": "modified", "additions": 59, "deletions": 85, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FPrintJob.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FPrintJob.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPrintJob.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,5 +1,5 @@\n /* PrintJob.java -- A print job class\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,90 +39,64 @@\n package java.awt;\n \n /**\n-  * This abstract class represents a print job.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n-public abstract class PrintJob\n-{\n-\n-/*\n- * Constructors\n+ * This abstract class represents a print job.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @see Toolkit#getPrintJob(Frame, String, Properties)\n+ * @since 1.0\n+ * @status updated to 1.4\n  */\n-\n-/**\n-  * This method initializes a new instance of <code>PrintJob</code>.\n-  */\n-public\n-PrintJob()\n-{\n-}\n-\n-/*************************************************************************/\n-\n-/*\n- * Instance Methods\n- */\n-\n-/**\n-  * Returns a graphics context suitable for rendering the next page.\n-  *\n-  * @return A graphics context for printing the next page.\n-  */\n-public abstract Graphics\n-getGraphics();\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the dimension of the page in pixels.  The resolution will be\n-  * chosen to be similar to the on screen image.\n-  *\n-  * @return The page dimensions.\n-  */\n-public abstract Dimension\n-getPageDimension();\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the resolution of the page in pixels per inch.\n-  *\n-  * @return The resolution of the page in pixels per inch.\n-  */\n-public abstract int\n-getPageResolution();\n-\n-/*************************************************************************/\n-\n-/**\n-  * Tests whether or not the last page will be printed first.\n-  *\n-  * @return <code>true</code> if the last page prints first, <code>false</code>\n-  * otherwise.\n-  */\n-public abstract boolean\n-lastPageFirst();\n-\n-/*************************************************************************/\n-\n-/**\n-  * Informs the print job that printing is complete.\n-  */\n-public abstract void\n-end();\n-\n-/*************************************************************************/\n-\n-/**\n-  * This method explicitly ends the print job in the event the job\n-  * becomes un-referenced without the application having done so.\n-  */\n-public void\n-finalize()\n+public abstract class PrintJob\n {\n-  end();\n-}\n-\n+  /**\n+   * Create a new PrintJob.\n+   */\n+  public PrintJob()\n+  {\n+  }\n+\n+  /**\n+   * Returns a graphics context suitable for rendering the next page. The\n+   * return must also implement {@link PrintGraphics}.\n+   *\n+   * @return a graphics context for printing the next page\n+   */\n+  public abstract Graphics getGraphics();\n+\n+  /**\n+   * Returns the dimension of the page in pixels.  The resolution will be\n+   * chosen to be similar to the on screen image.\n+   *\n+   * @return the page dimensions\n+   */\n+  public abstract Dimension getPageDimension();\n+\n+  /**\n+   * Returns the resolution of the page in pixels per inch. Note that this is\n+   * not necessarily the printer's resolution.\n+   *\n+   * @return the resolution of the page in pixels per inch\n+   */\n+  public abstract int getPageResolution();\n+\n+  /**\n+   * Tests whether or not the last page will be printed first.\n+   *\n+   * @return true if the last page prints first\n+   */\n+  public abstract boolean lastPageFirst();\n+\n+  /**\n+   * Informs the print job that printing is complete or should be aborted.\n+   */\n+  public abstract void end();\n+\n+  /**\n+   * This method explicitly ends the print job in the event the job\n+   * becomes un-referenced without the application having done so.\n+   */\n+  public void finalize()\n+  {\n+    end();\n+  }\n } // class PrintJob\n-"}, {"sha": "451f116e6ce8574e8847c3928ac8ad447b676e87", "filename": "libjava/java/awt/Rectangle.java", "status": "modified", "additions": 423, "deletions": 309, "changes": 732, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FRectangle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FRectangle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FRectangle.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 1999, 2000, 2001, 2002  Free Software Foundation\n+/* Rectangle.java -- represents a graphics rectangle\n+   Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -37,41 +38,73 @@\n \n package java.awt;\n \n-import java.awt.geom.*;\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.Rectangle2D;\n import java.io.Serializable;\n \n-/* Status:  Mostly complete. Some of the Java2D stuff is commented out. */\n-\n /**\n  * This class represents a rectangle and all the interesting things you\n  * might want to do with it.  Note that the coordinate system uses\n  * the origin (0,0) as the top left of the screen, with the x and y\n  * values increasing as they move to the right and down respectively.\n  *\n+ * <p>It is valid for a rectangle to have negative width or height; but it\n+ * is considered to have no area or internal points. Therefore, the behavior\n+ * in methods like <code>contains</code> or <code>intersects</code> is\n+ * undefined unless the rectangle has positive width and height.\n+ *\n+ * <p>There are some public fields; if you mess with them in an inconsistent\n+ * manner, it is your own fault when you get NullPointerException,\n+ * ArrayIndexOutOfBoundsException, or invalid results. Also, this class is\n+ * not threadsafe.\n+ *\n  * @author Warren Levy  <warrenl@cygnus.com>\n- * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @since 1.0\n+ * @status updated to 1.4\n  */\n-public class Rectangle extends Rectangle2D\n-  implements Cloneable, Shape, Serializable\n+public class Rectangle extends Rectangle2D implements Shape, Serializable\n {\n   /**\n-  * The X coordinate of the top-left corner of the rectangle.\n-  */\n+   * Compatible with JDK 1.0+.\n+   */\n+  private static final long serialVersionUID = -4345857070255674764L;\n+\n+  /**\n+   * The X coordinate of the top-left corner of the rectangle.\n+   *\n+   * @see #setLocation(int, int)\n+   * @see #getLocation()\n+   * @serial the x coordinate\n+   */\n   public int x;\n \n   /**\n-  * The Y coordinate of the top-left corner of the rectangle;\n-  */\n+   * The Y coordinate of the top-left corner of the rectangle.\n+   *\n+   * @see #setLocation(int, int)\n+   * @see #getLocation()\n+   * @serial the y coordinate\n+   */\n   public int y;\n \n   /**\n-  * The width of the rectangle\n-  */\n+   * The width of the rectangle.\n+   *\n+   * @see #setSize(int, int)\n+   * @see #getSize()\n+   * @serial\n+   */\n   public int width;\n \n   /**\n-  * The height of the rectangle\n-  */\n+   * The height of the rectangle.\n+   *\n+   * @see #setSize(int, int)\n+   * @see #getSize()\n+   * @serial\n+   */\n   public int height;\n \n   /**\n@@ -80,17 +113,15 @@ public class Rectangle extends Rectangle2D\n    */\n   public Rectangle()\n   {\n-    x = 0;\n-    y = 0;\n-    width = 0;\n-    height = 0;\n   }\n \n   /**\n    * Initializes a new instance of <code>Rectangle</code> from the\n    * coordinates of the specified rectangle.\n    *\n-   * @param rect The rectangle to copy from.\n+   * @param r the rectangle to copy from\n+   * @throws NullPointerException if r is null\n+   * @since 1.1\n    */\n   public Rectangle(Rectangle r)\n   {\n@@ -104,10 +135,10 @@ public Rectangle(Rectangle r)\n    * Initializes a new instance of <code>Rectangle</code> from the specified\n    * inputs.\n    *\n-   * @param x The X coordinate of the top left corner of the rectangle.\n-   * @param y The Y coordinate of the top left corner of the rectangle.\n-   * @param width The width of the rectangle.\n-   * @param height The height of the rectangle.\n+   * @param x the X coordinate of the top left corner\n+   * @param y the Y coordinate of the top left corner\n+   * @param width the width of the rectangle\n+   * @param height the height of the rectangle\n    */\n   public Rectangle(int x, int y, int width, int height)\n   {\n@@ -119,16 +150,14 @@ public Rectangle(int x, int y, int width, int height)\n \n   /**\n    * Initializes a new instance of <code>Rectangle</code> with the specified\n-   * width and height.  The upper left corner of the rectangle will be at\n+   * width and height. The upper left corner of the rectangle will be at\n    * the origin (0,0).\n    *\n-   * @param width The width of the rectangle.\n-   * @param height the height of the rectange.\n+   * @param width the width of the rectangle\n+   * @param height the height of the rectange\n    */\n   public Rectangle(int width, int height)\n   {\n-    x = 0;\n-    y = 0;\n     this.width = width;\n     this.height = height;\n   }\n@@ -138,8 +167,9 @@ public Rectangle(int width, int height)\n    * corner represented by the specified point and the width and height\n    * represented by the specified dimension.\n    *\n-   * @param point The upper left corner of the rectangle.\n-   * @param dim The width and height of the rectangle.\n+   * @param p the upper left corner of the rectangle\n+   * @param d the width and height of the rectangle\n+   * @throws NullPointerException if p or d is null\n    */\n   public Rectangle(Point p, Dimension d)\n   {\n@@ -153,493 +183,577 @@ public Rectangle(Point p, Dimension d)\n    * Initializes a new instance of <code>Rectangle</code> with a top left\n    * corner at the specified point and a width and height of zero.\n    *\n-   * @param poin The upper left corner of the rectangle.\n+   * @param p the upper left corner of the rectangle\n    */\n   public Rectangle(Point p)\n   {\n     x = p.x;\n     y = p.y;\n-    width = 0;\n-    height = 0;\n   }\n \n   /**\n    * Initializes a new instance of <code>Rectangle</code> with an\n    * upper left corner at the origin (0,0) and a width and height represented\n    * by the specified dimension.\n    *\n-   * @param dim The width and height of the rectangle.\n+   * @param d the width and height of the rectangle\n    */\n   public Rectangle(Dimension d)\n   {\n-    x = 0;\n-    y = 0;\n     width = d.width;\n     height = d.height;\n   }\n \n   /**\n-   * Returns the bounding rectangle for this rectangle, which is simply\n-   * this rectange itself.\n+   * Get the X coordinate of the upper-left corner.\n    *\n-   * @return This rectangle.\n+   * @return the value of x, as a double\n    */\n-  public Rectangle getBounds ()\n+  public double getX()\n   {\n-    return (Rectangle) this.clone();\n+    return x;\n   }\n \n   /**\n-   * Modifies this rectangle so that it represents the smallest rectangle \n-   * that contains both the existing rectangle and the specified point.\n+   * Get the Y coordinate of the upper-left corner.\n    *\n-   * @param x The X coordinate of the point to add to this rectangle.\n-   * @param y The Y coordinate of the point to add to this rectangle.\n+   * @return the value of y, as a double\n    */\n-  public void add(int newx, int newy)\n+  public double getY()\n   {\n-    int x = this.x > newx ? newx : this.x;\n-    int y = this.y > newy ? newy : this.y;\n-    width = (this.x + width > newx ? this.x + width : newx) - x;\n-    height = (this.y + height > newy ? this.y + height : newy) - y;\n-    this.x = x;\n-    this.y = y;\n+    return y;\n   }\n \n   /**\n-   * Modifies this rectangle so that it represents the smallest rectangle \n-   * that contains both the existing rectangle and the specified point.\n+   * Get the width of the rectangle.\n    *\n-   * @param point The point to add to this rectangle.\n+   * @return the value of width, as a double\n    */\n-  public void add(Point pt)\n+  public double getWidth()\n   {\n-    add (pt.x, pt.y);\n+    return width;\n   }\n \n   /**\n-   * Modifies this rectangle so that it represents the smallest rectangle \n-   * that contains both the existing rectangle and the specified rectangle.\n+   * Get the height of the rectangle.\n    *\n-   * @param rect The rectangle to add to this rectangle.\n+   * @return the value of height, as a double\n    */\n-  public void add(Rectangle r)\n+  public double getHeight()\n   {\n-    int x = this.x > r.x ? r.x : this.x;\n-    int y = this.y > r.y ? r.y : this.y;\n-    width = (this.x + width > r.x + r.width ? \n-             this.x + width : r.x + r.width) - x;\n-    height = (this.y + height > r.y + r.height ?\n-              this.y + height : r.y + r.height) - y;\n-    this.x = x;\n-    this.y = y;\n+    return height;\n   }\n \n   /**\n-   * Tests whether or not the specified point is inside this rectangle.\n+   * Returns the bounds of this rectangle. A pretty useless method, as this\n+   * is already a rectangle; it is included to mimic the\n+   * <code>getBounds</code> method in Component.\n    *\n-   * @param x The X coordinate of the point to test.\n-   * @param y The Y coordinate of the point to test.\n-   *\n-   * @return <code>true</code> if the point is inside the rectangle,\n-   * <code>false</code> otherwise.\n+   * @return a copy of this rectangle\n+   * @see #setBounds(Rectangle)\n+   * @since 1.1\n    */\n-  public boolean contains(int x, int y)\n+  public Rectangle getBounds()\n   {\n-    return (x >= this.x && x <= this.x + this.width\n-            && y >= this.y && y <= this.y + this.height);\n-  }   \n+    return new Rectangle(this);\n+  }\n \n-  public boolean contains(int x, int y, int w, int h)\n+  /**\n+   * Returns the high-precision bounds of this rectangle. A pretty useless\n+   * method, as this is already a rectangle.\n+   *\n+   * @return a copy of this rectangle\n+   * @see #setBounds(Rectangle)\n+   * @since 1.2\n+   */\n+  public Rectangle2D getBounds2D()\n   {\n-    return (x >= this.x && x + w <= this.x + this.width\n-            && y >= this.y && y + h <= this.y + this.height);\n+    return new Rectangle(x, y, width, height);\n   }\n \n   /**\n-   * Tests whether or not the specified point is inside this rectangle.\n-   *\n-   * @param point The point to test.\n+   * Updates this rectangle to match the dimensions of the specified\n+   * rectangle.\n    *\n-   * @return <code>true</code> if the point is inside the rectangle,\n-   * <code>false</code> otherwise.\n+   * @param r the rectangle to update from\n+   * @throws NullPointerException if r is null\n+   * @see #setBounds(int, int, int, int)\n+   * @since 1.1\n    */\n-  public boolean contains(Point p)\n+  public void setBounds(Rectangle r)\n   {\n-    return contains(p.x, p.y);\n+    x = r.x;\n+    y = r.y;\n+    width = r.width;\n+    height = r.height;\n   }\n \n-  public boolean contains(Rectangle r)\n+  /**\n+   * Updates this rectangle to have the specified dimensions.\n+   *\n+   * @param x the new X coordinate of the upper left hand corner\n+   * @param y the new Y coordinate of the upper left hand corner\n+   * @param width the new width of this rectangle\n+   * @param height the new height of this rectangle\n+   * @since 1.1\n+   */\n+  public void setBounds(int x, int y, int width, int height)\n   {\n-    return contains(r.x, r.y, r.width, r.height);\n+    this.x = x;\n+    this.y = y;\n+    this.width = width;\n+    this.height = height;\n   }\n \n   /**\n-   * Tests this rectangle for equality against the specified object.  This\n-   * will be true if an only if the specified object:\n-   * <p>\n-   * <ul>\n-   * <li>Is not <code>null</code>.\n-   * <li>Is an instance of <code>Rectangle</code>.\n-   * <li>Has X and Y coordinates identical to this rectangle.\n-   * <li>Has a width and height identical to this rectangle.\n-   * </ul>\n-   *\n-   * @param obj The object to test against for equality.\n+   * Updates this rectangle to have the specified dimensions, as rounded to\n+   * integers.\n    *\n-   * @return <code>true</code> if the specified object is equal to this one,\n-   * <code>false</code> otherwise.\n+   * @param x the new X coordinate of the upper left hand corner\n+   * @param y the new Y coordinate of the upper left hand corner\n+   * @param width the new width of this rectangle\n+   * @param height the new height of this rectangle\n+   * @since 1.2\n    */\n-  public boolean equals(Object obj)\n+  public void setRect(double x, double y, double width, double height)\n   {\n-    if (obj instanceof Rectangle)\n-      {\n-\tRectangle r = (Rectangle) obj;\n-\treturn (r.x == x \n-\t        && r.y == y \n-\t\t&& r.width == width \n-\t\t&& r.height == height);\n-      }\n-    return false;\n+    this.x = (int) x;\n+    this.y = (int) y;\n+    this.width = (int) width;\n+    this.height = (int) height;\n   }\n \n-  public double getHeight()\n+  /**\n+   * Updates this rectangle to have the specified dimensions.\n+   *\n+   * @param x the new X coordinate of the upper left hand corner\n+   * @param y the new Y coordinate of the upper left hand corner\n+   * @param width the new width of this rectangle\n+   * @param height the new height of this rectangle\n+   * @deprecated use {@link #setBounds(int, int, int, int)} instead\n+   */\n+  public void reshape(int x, int y, int width, int height)\n   {\n-    return (double) this.height;     \n+    setBounds(x, y, width, height);\n   }\n \n   /**\n    * Returns the location of this rectangle, which is the coordinates of\n    * its upper left corner.\n    *\n-   * @return The point where this rectangle is located.\n+   * @return the point where this rectangle is located\n+   * @see setLocation(Point)\n+   * @since 1.1\n    */\n   public Point getLocation()\n   {\n     return new Point(x,y);\n   }\n \n   /**\n-   * Returns the size of this rectangle.\n+   * Moves the location of this rectangle by setting its upper left\n+   * corner to the specified point.\n    *\n-   * @return The size of this rectangle.\n+   * @param p the point to move the rectangle to\n+   * @throws NullPointerException if p is null\n+   * @see #getLocation()\n+   * @since 1.1\n    */\n-  public Dimension getSize()\n+  public void setLocation(Point p)\n   {\n-    return new Dimension(width, height);\n+    this.x = p.x;\n+    this.y = p.y;\n   }\n \n-  public double getWidth()\n+  /**\n+   * Moves the location of this rectangle by setting its upper left\n+   * corner to the specified coordinates.\n+   *\n+   * @param x the new X coordinate for this rectangle\n+   * @param y the new Y coordinate for this rectangle\n+   * @since 1.1\n+   */\n+  public void setLocation(int x, int y)\n   {\n-    return (double) this.width;\n+    this.x = x;\n+    this.y = y;\n   }\n \n-  public double getX()\n+  /**\n+   * Moves the location of this rectangle by setting its upper left\n+   * corner to the specified coordinates.\n+   *\n+   * @param x the new X coordinate for this rectangle\n+   * @param y the new Y coordinate for this rectangle\n+   * @deprecated use {@link #setLocation(int, int)} instead\n+   */\n+  public void move(int x, int y)\n   {\n-    return (double) x;\n+    setLocation(x, y);\n   }\n \n-  public double getY()\n+  /**\n+   * Translate the location of this rectangle by the given amounts.\n+   *\n+   * @param dx the x distance to move by\n+   * @param dy the y distance to move by\n+   * @see #setLocation(int, int)\n+   */\n+  public void translate(int dx, int dy)\n   {\n-    return (double) y;\n+    x += dx;\n+    y += dy;\n   }\n \n   /**\n-   * Expands the rectangle by the specified amount.  The horizontal\n-   * and vertical expansion values are applied both to the X,Y coordinate\n-   * of this rectangle, and its width and height.  Thus the width and\n-   * height will increase by 2h and 2v accordingly.\n+   * Returns the size of this rectangle.\n    *\n-   * @param h The horizontal expansion value.\n-   * @param v The vertical expansion value.\n+   * @return the size of this rectangle\n+   * @see #setSize(Dimension)\n+   * @since 1.1\n    */\n-  public void grow(int h, int v)\n+  public Dimension getSize()\n   {\n-    width += h;\n-    height += v;\n+    return new Dimension(width, height);\n   }\n \n   /**\n-   * Tests whether or not the specified point is inside this rectangle.\n-   *\n-   * @param x The X coordinate of the point to test.\n-   * @param y The Y coordinate of the point to test.\n-   *\n-   * @return <code>true</code> if the point is inside the rectangle,\n-   * <code>false</code> otherwise.\n+   * Sets the size of this rectangle based on the specified dimensions.\n    *\n-   * @deprecated This method is deprecated in favor of\n-   * <code>contains(int, int)</code>.\n+   * @param d the new dimensions of the rectangle\n+   * @throws NullPointerException if d is null\n+   * @see #getSize()\n+   * @since 1.1\n    */\n-  public boolean inside(int x, int y)\n+  public void setSize(Dimension d)\n   {\n-    return contains(x, y);\n+    width = d.width;\n+    height = d.height;\n   }\n \n   /**\n-   * Determines the rectange which is formed by the intersection of this\n-   * rectangle with the specified rectangle.\n-   *\n-   * @param rect The rectange to calculate the intersection with.\n-   *\n-   * @return The rectangle bounding the intersection.\n+   * Sets the size of this rectangle based on the specified dimensions.\n    *\n-   * @specnote If there is no intersection, an empty rectangle at 0,0 \n-   *           is returned.\n+   * @param width the new width of the rectangle\n+   * @param height the new height of the rectangle\n+   * @since 1.1\n    */\n-  public Rectangle intersection(Rectangle r)\n+  public void setSize(int width, int height)\n   {\n-    int newx = x < r.x ? r.x : x;\n-    int newy = y < r.y ? r.y : y;\n-    int neww = (x + width < r.x + r.width ?\n-        \tx + width : r.x + r.width) - newx;\n-    int newh = (y + height < r.y + r.height ?\n-        \ty + height : r.y + r.height) - newy;\n-    if (neww >= 0 && newh >= 0)\n-      return new Rectangle(newx, newy, neww, newh);\n-    else\n-      return new Rectangle(0, 0, 0, 0);\n+    this.width = width;\n+    this.height = height;\n   }\n \n   /**\n-   * Tests whether or not the specified rectangle intersects this rectangle.\n-   *\n-   * @param rect The rectangle to test against.\n-   *\n-   * @return <code>true</code> if the specified rectangle intersects this\n-   * one, <code>false</code> otherwise.\n+   * Sets the size of this rectangle based on the specified dimensions.\n    *\n-   * @specnote If the intersection is at an edge or corner only (an empty\n-   *           intersection with a non-zero location), false is returned.\n+   * @param width the new width of the rectangle\n+   * @param height the new height of the rectangle\n+   * @deprecated use {@link #setSize(int, int)} instead\n    */\n-  public boolean intersects(Rectangle r)\n+  public void resize(int width, int height)\n   {\n-    int neww = (x + width < r.x + r.width ?\n-        \tx + width : r.x + r.width) - (x < r.x ? r.x : x);\n-    int newh = (y + height < r.y + r.height ?\n-        \ty + height : r.y + r.height) - (y < r.y ? r.y : y);\n-    return (neww > 0 && newh > 0);\n+    setSize(width, height);\n   }\n \n   /**\n-   * Tests whether or not this rectangle is empty.  An empty rectangle\n-   * has a width or height of zero.\n+   * Tests whether or not the specified point is inside this rectangle.\n+   * According to the contract of Shape, a point on the border is in only if\n+   * it has an adjacent point inside the rectangle in either the increasing\n+   * x or y direction.\n    *\n-   * @return <code>true</code> if the rectangle is empty, <code>false</code>\n-   * otherwise.\n+   * @param p the point to test\n+   * @return true if the point is inside the rectangle\n+   * @throws NullPointerException if p is null\n+   * @see #contains(int, int)\n+   * @since 1.1\n    */\n-  public boolean isEmpty()\n+  public boolean contains(Point p)\n   {\n-    return !(width > 0 && height > 0);\n+    return width > 0 && height > 0\n+      && p.x >= x && p.x < x + width\n+      && p.y >= y && p.y < y + height;\n   }\n \n   /**\n-   * Moves the location of this rectangle by setting its upper left\n-   * corner to the specified coordinates.\n-   * // FIXME: Is this true?\n-   *\n-   * @param x The new X coordinate for this rectangle.\n-   * @param y The new Y coordinate for this rectangle.\n+   * Tests whether or not the specified point is inside this rectangle.\n+   * According to the contract of Shape, a point on the border is in only if\n+   * it has an adjacent point inside the rectangle in either the increasing\n+   * x or y direction.\n    *\n-   * @deprecated This method is deprecated in favor of\n-   * <code>setLocation(int, int)</code>.\n+   * @param x the X coordinate of the point to test\n+   * @param y the Y coordinate of the point to test\n+   * @return true if the point is inside the rectangle\n+   * @since 1.1\n    */\n-  public void move(int x, int y)\n+  public boolean contains(int x, int y)\n   {\n-    setLocation(x, y);\n+    return width > 0 && height > 0\n+      && x >= this.x && x < this.x + width\n+      && y >= this.y && y < this.y + height;\n   }\n \n-  public int outcode(double x, double y)\n+  /**\n+   * Checks whether all points in the given rectangle are contained in this\n+   * rectangle.\n+   *\n+   * @param r the rectangle to check\n+   * @return true if r is contained in this rectangle\n+   * @throws NullPointerException if r is null\n+   * @see #contains(int, int, int, int)\n+   * @since 1.1\n+   */\n+  public boolean contains(Rectangle r)\n   {\n-    // FIXME\n-    return 0;\n+    return width > 0 && height > 0 && r.width > 0 && r.height > 0\n+      && r.x >= x && r.x + r.width <= x + width\n+      && r.y >= y && r.y + r.height <= y + height;\n   }\n \n   /**\n-   * Updates this rectangle to have the specified dimensions.\n-   *\n-   * @param x The new X coordinate of the upper left hand corner.\n-   * @param y The new Y coordinate of the upper left hand corner.\n-   * @param width The new width of this rectangle.\n-   * @param height The new height of this rectangle.\n+   * Checks whether all points in the given rectangle are contained in this\n+   * rectangle.\n    *\n-   * @deprecated This method is deprecated in favor of \n-   * <code>setBounds(int, int, int, int)</code>.\n+   * @param x the x coordinate of the rectangle to check\n+   * @param y the y coordinate of the rectangle to check\n+   * @param w the width of the rectangle to check\n+   * @param h the height of the rectangle to check\n+   * @return true if the parameters are contained in this rectangle\n+   * @since 1.1\n    */\n-  public void reshape(int x, int y, int width, int height)\n+  public boolean contains(int x, int y, int w, int h)\n   {\n-    setBounds(x, y, width, height);\n+    return width > 0 && height > 0 && w > 0 && h > 0\n+      && x >= this.x && x + w <= this.x + this.width\n+      && y >= this.y && y + h <= this.y + this.height;\n   }\n \n   /**\n-   * Sets the size of this rectangle based on the specified dimensions.\n-   *\n-   * @param width The new width of the rectangle.\n-   * @param height The new height of the rectangle.\n+   * Tests whether or not the specified point is inside this rectangle.\n    *\n-   * @deprecated This method is deprecated in favor of\n-   * <code>setSize(int, int)</code>.\n+   * @param x the X coordinate of the point to test\n+   * @param y the Y coordinate of the point to test\n+   * @return true if the point is inside the rectangle\n+   * @deprecated use {@link #contains(int, int)} instead\n    */\n-  public void resize(int width, int height)\n+  public boolean inside(int x, int y)\n   {\n-    setSize(width, height);\n+    return contains(x, y);\n   }\n \n   /**\n-   * Updates this rectangle to have the specified dimensions.\n+   * Tests whether or not the specified rectangle intersects this rectangle.\n+   * This means the two rectangles share at least one internal point.\n    *\n-   * @param x The new X coordinate of the upper left hand corner.\n-   * @param y The new Y coordinate of the upper left hand corner.\n-   * @param width The new width of this rectangle.\n-   * @param height The new height of this rectangle.\n+   * @param r the rectangle to test against\n+   * @return true if the specified rectangle intersects this one\n+   * @throws NullPointerException if r is null\n+   * @since 1.2\n    */\n-  public void setBounds(int x, int y, int width, int height)\n+  public boolean intersects(Rectangle r)\n   {\n-    this.x = x;\n-    this.y = y;\n-    this.width = width;\n-    this.height = height;\n+    return width > 0 && height > 0 && r.width > 0 && r.height > 0\n+      && r.x < x + width && r.x + r.width > x\n+      && r.y < y + height && r.y + r.height > y;\n   }\n \n   /**\n-   * Updates this rectangle to match the dimensions of the specified \n-   * rectangle.\n+   * Determines the rectangle which is formed by the intersection of this\n+   * rectangle with the specified rectangle. If the two do not intersect,\n+   * an empty rectangle will be returned (meaning the width and/or height\n+   * will be non-positive).\n    *\n-   * @param rect The rectangle to update from.\n+   * @param r the rectange to calculate the intersection with\n+   * @return a new rectangle bounding the intersection\n+   * @throws NullPointerException if r is null\n    */\n-  public void setBounds(Rectangle r)\n+  public Rectangle intersection(Rectangle r)\n   {\n-    this.x = r.x;\n-    this.y = r.y;\n-    this.width = r.width;\n-    this.height = r.height;     \n+    Rectangle res = new Rectangle();\n+    intersect(this, r, res);\n+    return res;\n   }\n \n   /**\n-   * Moves the location of this rectangle by setting its upper left\n-   * corner to the specified coordinates.\n-   * // FIXME: Is this true?\n+   * Returns the smallest rectangle that contains both this rectangle\n+   * and the specified rectangle.\n    *\n-   * @param x The new X coordinate for this rectangle.\n-   * @param y The new Y coordinate for this rectangle.\n+   * @param r the rectangle to compute the union with\n+   * @return the smallest rectangle containing both rectangles\n+   * @throws NullPointerException if r is null\n    */\n-  public void setLocation(int x, int y)\n+  public Rectangle union(Rectangle r)\n   {\n-    this.x = x;\n-    this.y = y;\n+    Rectangle res = new Rectangle();\n+    union(this, r, res);\n+    return res;\n   }\n \n   /**\n-   * Moves the location of this rectangle by setting its upper left\n-   * corner to the specified point.\n-   * // FIXME: Is this true?\n+   * Modifies this rectangle so that it represents the smallest rectangle\n+   * that contains both the existing rectangle and the specified point.\n+   * However, if the point falls on one of the two borders which are not\n+   * inside the rectangle, a subsequent call to <code>contains</code> may\n+   * return false.\n    *\n-   * @param point The point to move the rectange to.\n+   * @param x the X coordinate of the point to add to this rectangle\n+   * @param y the Y coordinate of the point to add to this rectangle\n    */\n-  public void setLocation(Point p)\n+  public void add(int x, int y)\n   {\n-    this.x = p.x;\n-    this.y = p.y;\n+    add((double) x, (double) y);\n   }\n \n-  public void setRect(double x, double y, double width, double height)\n+  /**\n+   * Modifies this rectangle so that it represents the smallest rectangle\n+   * that contains both the existing rectangle and the specified point.\n+   * However, if the point falls on one of the two borders which are not\n+   * inside the rectangle, a subsequent call to <code>contains</code> may\n+   * return false.\n+   *\n+   * @param p the point to add to this rectangle\n+   * @throws NullPointerException if p is null\n+   */\n+  public void add(Point p)\n   {\n-    this.x = (int) x;\n-    this.y = (int) y;\n-    this.width = (int) width;\n-    this.height = (int) height;\n+    add((double) p.x, (double) p.y);\n   }\n \n   /**\n-   * Sets the size of this rectangle based on the specified dimensions.\n+   * Modifies this rectangle so that it represents the smallest rectangle\n+   * that contains both the existing rectangle and the specified rectangle.\n    *\n-   * @param dim The new dimensions of the rectangle.\n+   * @param r the rectangle to add to this rectangle\n+   * @throws NullPointerException if r is null\n+   * @see #union(Rectangle)\n    */\n-  public void setSize(Dimension d)\n+  public void add(Rectangle r)\n   {\n-    this.width = d.width;\n-    this.height = d.height;\n+    union(this, r, this);\n   }\n \n   /**\n-   * Sets the size of this rectangle based on the specified dimensions.\n+   * Expands the rectangle by the specified amount.  The horizontal\n+   * and vertical expansion values are applied both to the X,Y coordinate\n+   * of this rectangle, and its width and height.  Thus the width and\n+   * height will increase by 2h and 2v accordingly.\n    *\n-   * @param width The new width of the rectangle.\n-   * @param height The new height of the rectangle.\n+   * @param h the horizontal expansion value\n+   * @param v the vertical expansion value\n    */\n-  public void setSize(int width, int height)\n+  public void grow(int h, int v)\n   {\n-    this.width = width;\n-    this.height = height;\n+    x -= h;\n+    y -= v;\n+    width += h + h;\n+    height += v + v;\n   }\n \n-  public void translate(int x, int y)\n+  /**\n+   * Tests whether or not this rectangle is empty.  An empty rectangle\n+   * has a non-positive width or height.\n+   *\n+   * @return true if the rectangle is empty\n+   */\n+  public boolean isEmpty()\n   {\n-    x += x;\n-    y += y;\n+    return width <= 0 || height <= 0;\n   }\n \n   /**\n-   * Returns the smallest rectangle that contains both this rectangle\n-   * and the specified rectangle.\n+   * Determine where the point lies with respect to this rectangle. The\n+   * result will be the binary OR of the appropriate bit masks.\n    *\n-   * @param rect The rectangle to compute the union with.\n-   *\n-   * @return The smallest rectangle containing both rectangles.\n+   * @param x the x coordinate to check\n+   * @param y the y coordinate to check\n+   * @return the binary OR of the result\n+   * @see #OUT_LEFT\n+   * @see #OUT_TOP\n+   * @see #OUT_RIGHT\n+   * @see #OUT_BOTTOM\n+   * @since 1.2\n    */\n-  public Rectangle union(Rectangle r)\n+  public int outcode(double x, double y)\n   {\n-    int newx = x > r.x ? r.x : x;\n-    int newy = y > r.y ? r.y : y;     \n-    int neww = (this.x + width > r.x + r.width ? \n-               this.x + width : r.x + r.width) - newx;\n-    int newh = (this.y + height > r.y + r.height ?\n-        \tthis.y + height : r.y + r.height) - newy;\n-    return new Rectangle(newx, newy, neww, newh);\n-  }\n-\n-  // Commented out until we have Rectangle2D\n+    int result = 0;\n+    if (width <= 0)\n+      result |= OUT_LEFT | OUT_RIGHT;\n+    else if (x < this.x)\n+      result |= OUT_LEFT;\n+    else if (x > this.x + width)\n+      result |= OUT_RIGHT;\n+    if (height <= 0)\n+      result |= OUT_BOTTOM | OUT_TOP;\n+    else if (y < this.y) // Remember that +y heads top-to-bottom.\n+      result |= OUT_TOP;\n+    else if (y > this.y + height)\n+      result |= OUT_BOTTOM;\n+    return result;\n+  }\n+\n+  /**\n+   * Determines the rectangle which is formed by the intersection of this\n+   * rectangle with the specified rectangle. If the two do not intersect,\n+   * an empty rectangle will be returned (meaning the width and/or height\n+   * will be non-positive).\n+   *\n+   * @param r the rectange to calculate the intersection with\n+   * @return a new rectangle bounding the intersection\n+   * @throws NullPointerException if r is null\n+   * @since 1.2\n+   */\n   public Rectangle2D createIntersection(Rectangle2D r)\n   {\n-    // FIXME: maybe we should consider returning a Rectangle or\n-    // Rectangle2D.Float depending on type of R.\n-    Rectangle2D.Double res = new Rectangle2D.Double ();\n-    intersect (this, r, res);\n+    // Favor runtime type of other rectangle.\n+    Rectangle2D res = r.getBounds2D();\n+    intersect(this, r, res);\n     return res;\n   }\n \n+  /**\n+   * Returns the smallest rectangle that contains both this rectangle\n+   * and the specified rectangle.\n+   *\n+   * @param r the rectangle to compute the union with\n+   * @return the smallest rectangle containing both rectangles\n+   * @throws NullPointerException if r is null\n+   * @since 1.2\n+   */\n   public Rectangle2D createUnion(Rectangle2D r)\n   {\n-    // FIXME: maybe we should consider returning a Rectangle or\n-    // Rectangle2D.Float depending on type of R.\n-    Rectangle2D.Double res = new Rectangle2D.Double ();\n-    union (this, r, res);\n+    // Favor runtime type of other rectangle.\n+    Rectangle2D res = r.getBounds2D();\n+    union(this, r, res);\n     return res;\n   }\n \n-  public Rectangle2D getBounds2D()\n-  {\n-    return new Rectangle (x, y, width, height);\n-  }\n-\n   /**\n-   * Returns a string representation of this rectangle.\n+   * Tests this rectangle for equality against the specified object.  This\n+   * will be true if an only if the specified object is an instance of\n+   * Rectangle2D with the same coordinates and dimensions.\n    *\n-   * @return A string representation of this rectangle.\n+   * @param obj the object to test against for equality\n+   * @return true if the specified object is equal to this one\n    */\n-  public String toString()\n+  public boolean equals(Object obj)\n   {\n-    return getClass().getName() + \"[x=\" + x + \",y=\" + y + \",width=\" + width + \n-           \",height=\" + height + \"]\";\n+    if (! (obj instanceof Rectangle2D))\n+      return false;\n+    Rectangle2D r = (Rectangle2D) obj;\n+    return r.getX() == x && r.getY() == y\n+      && r.getWidth() == width && r.getHeight() == height;\n   }\n \n   /**\n-   * Returns a hash value for this object.\n+   * Returns a string representation of this rectangle. This is in the form\n+   * <code>getClass().getName() + \"[x=\" + x + \",y=\" + y + \",width=\" + width\n+   * + \",height=\" + height + ']'</code>.\n    *\n-   * @return A hash value for this object.\n+   * @return a string representation of this rectangle\n    */\n-  public int hashCode()\n+  public String toString()\n   {\n-    return x * y * width * height * 37;\n+    return getClass().getName() + \"[x=\" + x + \",y=\" + y + \",width=\" + width\n+      + \",height=\" + height + ']';\n   }\n-}\n+} // class Rectangle"}, {"sha": "9dc6d5f6419e79d0622cc3555948633cab59b7a2", "filename": "libjava/java/awt/RenderingHints.java", "status": "modified", "additions": 223, "deletions": 188, "changes": 411, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FRenderingHints.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FRenderingHints.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FRenderingHints.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 2000, 2001, 2002  Free Software Foundation\n+/* RenderingHints.java --\n+   Copyright (C) 2000, 2001, 2002  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -34,294 +35,328 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package java.awt;\n \n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+\n /**\n+ * NEEDS DOCUMENTATION\n+ *\n  * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @author Eric Blake <ebb9@email.byu.edu>\n  */\n-public class RenderingHints implements\n-    //java.util.Map,\n-    Cloneable\n+public class RenderingHints implements Map, Cloneable\n {\n-\n   public abstract static class Key\n   {\n-    private int intKey;\n+    private final int key;\n \n     protected Key(int privateKey)\n     {\n-      intKey = privateKey;\n+      key = privateKey;\n     }\n \n     public abstract boolean isCompatibleValue(Object value);\n-    \n-    protected final int intKey() \n+\n+    protected final int intKey()\n     {\n-      return intKey;\n-    }    \n+      return key;\n+    }\n \n-    public final int hashCode() \n+    public final int hashCode()\n     {\n       return System.identityHashCode(this);\n     }\n-    \n-    public final boolean equals(Object other) \n+\n+    public final boolean equals(Object other)\n     {\n-      return (this == other);\n+      return this == other;\n     }\n-  }\n+  } // class Key\n \n-  private static class KeyImpl extends Key\n+  private static final class KeyImpl extends Key\n   {\n-    String description;\n-    Object v1, v2, v3;\n+    final String description;\n+    final Object v1;\n+    final Object v2;\n+    final Object v3;\n \n     KeyImpl(int privateKey, String description,\n-\t    Object v1, Object v2, Object v3)\n+            Object v1, Object v2, Object v3)\n     {\n       super(privateKey);\n       this.description = description;\n       this.v1 = v1;\n       this.v2 = v2;\n       this.v3 = v3;\n     }\n-    \n-    public boolean isCompatibleValue(Object value) \n+\n+    public boolean isCompatibleValue(Object value)\n     {\n-      return (value == v1) || (value == v2) || (value == v3);\n+      return value == v1 || value == v2 || value == v3;\n     }\n \n-    public String toString() \n+    public String toString()\n     {\n       return description;\n     }\n-  }\n+  } // class KeyImpl\n \n-\n-  //java.util.HashMap hintMap;\n+  private HashMap hintMap = new HashMap();\n \n   public static final Key KEY_ANTIALIASING;\n-  public static final Object\n-    VALUE_ANTIALIAS_ON = \"Antialiased rendering mode\",\n-    VALUE_ANTIALIAS_DEFAULT = \"Default antialiasing rendering mode\";\n \n-  static \n-  {\n-    KEY_ANTIALIASING = new KeyImpl(1, \"Global antialiasing enable key\",\n-\t\t\t\t   VALUE_ANTIALIAS_ON,\n-\t\t\t\t   VALUE_ANTIALIAS_DEFAULT,\n-\t\t\t\t   VALUE_ANTIALIAS_DEFAULT);\n-  }\n+  public static final Object VALUE_ANTIALIAS_ON\n+    = \"Antialiased rendering mode\";\n+\n+  public static final Object VALUE_ANTIALIAS_OFF\n+    = \"Nonantialiased rendering mode\";\n+\n+  public static final Object VALUE_ANTIALIAS_DEFAULT\n+    = \"Default antialiasing rendering mode\";\n \n   public static final Key KEY_RENDERING;\n-  public static final Object \n-    VALUE_RENDER_SPEED = \"Fastest rendering methods\",\n-    VALUE_RENDER_QUALITY = \"Highest quality rendering methods\",\n-    VALUE_RENDER_DEFAULT = \"Default rendering methods\";\n \n-  static\n-  {\n-    KEY_RENDERING = new KeyImpl(2, \"Global rendering quality key\",\n-\t\t\t\tVALUE_RENDER_SPEED,\n-\t\t\t\tVALUE_RENDER_QUALITY,\n-\t\t\t\tVALUE_RENDER_DEFAULT);\n-  }\n-  \n+  public static final Object VALUE_RENDER_SPEED\n+    = \"Fastest rendering methods\";\n+\n+  public static final Object VALUE_RENDER_QUALITY\n+    = \"Highest quality rendering methods\";\n+\n+  public static final Object VALUE_RENDER_DEFAULT\n+    = \"Default rendering methods\";\n+\n   public static final Key KEY_DITHERING;\n-  public static final Object\n-    VALUE_DITHER_DISABLE = \"Nondithered rendering mode\",\n-    VALUE_DITHER_ENABLE = \"Dithered rendering mode\",\n-    VALUE_DITHER_DEFAULT = \"Default dithering mode\";\n \n-  static\n-  {\n-    KEY_DITHERING = new KeyImpl(3, \"Dithering quality key\",\n-\t\t\t\tVALUE_DITHER_DISABLE,\n-\t\t\t\tVALUE_DITHER_ENABLE,\n-\t\t\t\tVALUE_DITHER_DEFAULT);\n-  }\n-  \n+  public static final Object VALUE_DITHER_DISABLE\n+    = \"Nondithered rendering mode\";\n+\n+  public static final Object VALUE_DITHER_ENABLE\n+    = \"Dithered rendering mode\";\n+\n+  public static final Object VALUE_DITHER_DEFAULT\n+    = \"Default dithering mode\";\n+\n   public static final Key KEY_TEXT_ANTIALIASING;\n-  public static final Object\n-    VALUE_TEXT_ANTIALIAS_ON = \"Antialiased text mode\",\n-    VALUE_TEXT_ANTIALIAS_OFF = \"Nonantialiased text mode\",\n-    VALUE_TEXT_ANTIALIAS_DEFAULT = \"Default antialiasing text mode\";\n \n-  static \n-  {\n-    KEY_TEXT_ANTIALIASING = new KeyImpl(4, \"Text-specific antialiasing enable key\",\n-\t\t\t\t\tVALUE_TEXT_ANTIALIAS_ON,\n-\t\t\t\t\tVALUE_TEXT_ANTIALIAS_OFF,\n-\t\t\t\t\tVALUE_TEXT_ANTIALIAS_DEFAULT);\n-  }\n-  \n+  public static final Object VALUE_TEXT_ANTIALIAS_ON\n+    = \"Antialiased text mode\";\n+\n+  public static final Object VALUE_TEXT_ANTIALIAS_OFF\n+    = \"Nonantialiased text mode\";\n+\n+  public static final Object VALUE_TEXT_ANTIALIAS_DEFAULT\n+    = \"Default antialiasing text mode\";\n+\n   public static final Key KEY_FRACTIONALMETRICS;\n-  public static final Object\n-    VALUE_FRACTIONALMETRICS_OFF = \"Integer text metrics mode\",\n-    VALUE_FRACTIONALMETRICS_ON = \"Fractional text metrics mode\",\n-    VALUE_FRACTIONALMETRICS_DEFAULT = \"Default fractional text metrics mode\";\n \n-  static \n-  {\n-    KEY_FRACTIONALMETRICS = new KeyImpl(5, \"Fractional metrics enable key\",\n-\t\t\t\t\tVALUE_FRACTIONALMETRICS_OFF,\n-\t\t\t\t\tVALUE_FRACTIONALMETRICS_ON,\n-\t\t\t\t\tVALUE_FRACTIONALMETRICS_DEFAULT);\n-  }\n-  \n+  public static final Object VALUE_FRACTIONALMETRICS_OFF\n+    = \"Integer text metrics mode\";\n+\n+  public static final Object VALUE_FRACTIONALMETRICS_ON\n+    = \"Fractional text metrics mode\";\n+\n+  public static final Object VALUE_FRACTIONALMETRICS_DEFAULT\n+    = \"Default fractional text metrics mode\";\n+\n   public static final Key KEY_INTERPOLATION;\n-  public static final Object\n-    VALUE_INTERPOLATION_NEAREST_NEIGHBOR = \"Nearest Neighbor image interpolation mode\",\n-    VALUE_INTERPOLATION_BILINEAR = \"Bilinear image interpolation mode\",\n-    VALUE_INTERPOLATION_BICUBIC = \"Bicubic image interpolation mode\";\n \n-  static \n-  {\n-    KEY_INTERPOLATION = new KeyImpl(6, \"Image interpolation method key\",\n-\t\t\t\t    VALUE_INTERPOLATION_NEAREST_NEIGHBOR,\n-\t\t\t\t    VALUE_INTERPOLATION_BILINEAR,\n-\t\t\t\t    VALUE_INTERPOLATION_BICUBIC);\n-  }\n-  \n+  public static final Object VALUE_INTERPOLATION_NEAREST_NEIGHBOR\n+    = \"Nearest Neighbor image interpolation mode\";\n+\n+  public static final Object VALUE_INTERPOLATION_BILINEAR\n+    = \"Bilinear image interpolation mode\";\n+\n+  public static final Object VALUE_INTERPOLATION_BICUBIC\n+    = \"Bicubic image interpolation mode\";\n+\n   public static final Key KEY_ALPHA_INTERPOLATION;\n-  public static final Object\n-    VALUE_ALPHA_INTERPOLATION_SPEED = \"Fastest alpha blending methods\",\n-    VALUE_ALPHA_INTERPOLATION_QUALITY = \"Highest quality alpha blending methods\",\n-    VALUE_ALPHA_INTERPOLATION_DEFAULT = \"Default alpha blending methods\";\n \n-  static\n-  {\n-    KEY_ALPHA_INTERPOLATION = new KeyImpl(7, \"Alpha blending interpolation method key\",\n-\t\t\t\t\t  VALUE_ALPHA_INTERPOLATION_SPEED,\n-\t\t\t\t\t  VALUE_ALPHA_INTERPOLATION_QUALITY,\n-\t\t\t\t\t  VALUE_ALPHA_INTERPOLATION_DEFAULT);\n-  }\n-  \n+  public static final Object VALUE_ALPHA_INTERPOLATION_SPEED\n+    = \"Fastest alpha blending methods\";\n+\n+  public static final Object VALUE_ALPHA_INTERPOLATION_QUALITY\n+    = \"Highest quality alpha blending methods\";\n+\n+  public static final Object VALUE_ALPHA_INTERPOLATION_DEFAULT\n+    = \"Default alpha blending methods\";\n+\n   public static final Key KEY_COLOR_RENDERING;\n-  public static final Object\n-    VALUE_COLOR_RENDER_SPEED = \"Fastest color rendering mode\",\n-    VALUE_COLOR_RENDER_QUALITY = \"Highest quality color rendering mode\",\n-    VALUE_COLOR_RENDER_DEFAULT = \"Default color rendering mode\";\n \n-  static \n-  {\n-    KEY_COLOR_RENDERING = new KeyImpl(8, \"Color rendering quality key\",\n-\t\t\t\t      VALUE_COLOR_RENDER_SPEED,\n-\t\t\t\t      VALUE_COLOR_RENDER_QUALITY,\n-\t\t\t\t      VALUE_COLOR_RENDER_DEFAULT);\n-  }\n+  public static final Object VALUE_COLOR_RENDER_SPEED\n+    = \"Fastest color rendering mode\";\n+\n+  public static final Object VALUE_COLOR_RENDER_QUALITY\n+    = \"Highest quality color rendering mode\";\n+\n+  public static final Object VALUE_COLOR_RENDER_DEFAULT\n+    = \"Default color rendering mode\";\n \n   public static final Key KEY_STROKE_CONTROL;\n-  public static final Object\n-    VALUE_STROKE_DEFAULT = \"Default stroke control mode\",\n-    VALUE_STROKE_NORMALIZE = \"Normalize stroke control mode\",\n-    VALUE_STROKE_PURE = \"Pure stroke control mode\";\n \n-  static \n+  public static final Object VALUE_STROKE_DEFAULT\n+    = \"Default stroke normalization\";\n+\n+  public static final Object VALUE_STROKE_NORMALIZE\n+    = \"Normalize strokes for consistent rendering\";\n+\n+  public static final Object VALUE_STROKE_PURE\n+    = \"Pure stroke conversion for accurate paths\";\n+\n+  static\n   {\n+    KEY_ANTIALIASING = new KeyImpl(1, \"Global antialiasing enable key\",\n+                                   VALUE_ANTIALIAS_ON,\n+                                   VALUE_ANTIALIAS_OFF,\n+                                   VALUE_ANTIALIAS_DEFAULT);\n+    KEY_RENDERING = new KeyImpl(2, \"Global rendering quality key\",\n+                                VALUE_RENDER_SPEED,\n+                                VALUE_RENDER_QUALITY,\n+                                VALUE_RENDER_DEFAULT);\n+    KEY_DITHERING = new KeyImpl(3, \"Dithering quality key\",\n+                                VALUE_DITHER_DISABLE,\n+                                VALUE_DITHER_ENABLE,\n+                                VALUE_DITHER_DEFAULT);\n+    KEY_TEXT_ANTIALIASING\n+      = new KeyImpl(4, \"Text-specific antialiasing enable key\",\n+                    VALUE_TEXT_ANTIALIAS_ON,\n+                    VALUE_TEXT_ANTIALIAS_OFF,\n+                    VALUE_TEXT_ANTIALIAS_DEFAULT);\n+    KEY_FRACTIONALMETRICS = new KeyImpl(5, \"Fractional metrics enable key\",\n+                                        VALUE_FRACTIONALMETRICS_OFF,\n+                                        VALUE_FRACTIONALMETRICS_ON,\n+                                        VALUE_FRACTIONALMETRICS_DEFAULT);\n+    KEY_INTERPOLATION = new KeyImpl(6, \"Image interpolation method key\",\n+                                    VALUE_INTERPOLATION_NEAREST_NEIGHBOR,\n+                                    VALUE_INTERPOLATION_BILINEAR,\n+                                    VALUE_INTERPOLATION_BICUBIC);\n+    KEY_ALPHA_INTERPOLATION\n+      = new KeyImpl(7, \"Alpha blending interpolation method key\",\n+                    VALUE_ALPHA_INTERPOLATION_SPEED,\n+                    VALUE_ALPHA_INTERPOLATION_QUALITY,\n+                    VALUE_ALPHA_INTERPOLATION_DEFAULT);\n+    KEY_COLOR_RENDERING = new KeyImpl(8, \"Color rendering quality key\",\n+                                      VALUE_COLOR_RENDER_SPEED,\n+                                      VALUE_COLOR_RENDER_QUALITY,\n+                                      VALUE_COLOR_RENDER_DEFAULT);\n     KEY_STROKE_CONTROL = new KeyImpl(9, \"Stroke normalization control key\",\n-\t\t\t\t     VALUE_STROKE_DEFAULT,\n-\t\t\t\t     VALUE_STROKE_NORMALIZE,\n-\t\t\t\t     VALUE_STROKE_PURE);\n+                                     VALUE_STROKE_DEFAULT,\n+                                     VALUE_STROKE_NORMALIZE,\n+                                     VALUE_STROKE_PURE);\n+  }\n+\n+  public RenderingHints(Map init)\n+  {\n+    putAll(init);\n   }\n-  \n-  //public RenderingHints(Map init);\n \n   public RenderingHints(Key key, Object value)\n   {\n-    throw new UnsupportedOperationException(\"FIXME, not implemented yet\");\n+    put(key, value);\n   }\n \n-  public int size() \n+  public int size()\n   {\n-    throw new UnsupportedOperationException(\"FIXME, not implemented yet\");\n+    return hintMap.size();\n   }\n-  \n-  public boolean isEmpty() \n+\n+  public boolean isEmpty()\n   {\n-    throw new UnsupportedOperationException(\"FIXME, not implemented yet\");\n+    return hintMap.isEmpty();\n   }\n \n-  public boolean containsKey(Object key) \n-  {      \n-    throw new UnsupportedOperationException(\"FIXME, not implemented yet\");\n+  public boolean containsKey(Object key)\n+  {\n+    if (key == null)\n+      throw new NullPointerException();\n+    return hintMap.containsKey((Key) key);\n   }\n-  \n-  public boolean containsValue(Object value) \n+\n+  public boolean containsValue(Object value)\n   {\n-    throw new UnsupportedOperationException(\"FIXME, not implemented yet\");\n+    return hintMap.containsValue(value);\n   }\n-  \n+\n   public Object get(Object key)\n   {\n-    throw new UnsupportedOperationException(\"FIXME, not implemented yet\");\n+    return hintMap.get((Key) key);\n   }\n-  \n-  public Object put(Object key, Object value) \n+\n+  public Object put(Object key, Object value)\n   {\n-    throw new UnsupportedOperationException(\"FIXME, not implemented yet\");\n+    if (key == null || value == null)\n+      throw new NullPointerException();\n+    if (! ((Key) key).isCompatibleValue(value))\n+      throw new IllegalArgumentException();\n+    return hintMap.put(key, value);\n   }\n-  \n-  public void add(RenderingHints hints) \n+\n+  public void add(RenderingHints hints)\n   {\n-    throw new UnsupportedOperationException(\"FIXME, not implemented yet\");\n+    hintMap.putAll(hints);\n   }\n \n-  public void clear() \n+  public void clear()\n   {\n-    throw new UnsupportedOperationException(\"FIXME, not implemented yet\");\n+    hintMap.clear();\n   }\n-  \n-  public Object remove(Object key) \n+\n+  public Object remove(Object key)\n   {\n-    throw new UnsupportedOperationException(\"FIXME, not implemented yet\");\n+    return remove((Key) key);\n   }\n-  \n-  /*\n-  public void putAll(Map m) \n+\n+  public void putAll(Map m)\n   {\n-    throw new UnsupportedOperationException(\"FIXME, not implemented yet\");\n+    hintMap.putAll(m);\n   }\n-  */\n-  \n-  /*\n-  public Set keySet() \n+\n+  public Set keySet()\n   {\n-    throw new UnsupportedOperationException(\"FIXME, not implemented yet\");\n+    return hintMap.keySet();\n   }\n-  */\n-  \n-  /*\n-  public Collection values() \n+\n+  public Collection values()\n   {\n-    throw new UnsupportedOperationException(\"FIXME, not implemented yet\");\n+    return hintMap.values();\n   }\n-  */\n-  \n-  /*\n-  public Set entrySet() \n+\n+  public Set entrySet()\n   {\n-    throw new UnsupportedOperationException(\"FIXME, not implemented yet\");\n+    return Collections.unmodifiableSet(hintMap.entrySet());\n   }\n-  */\n-  \n-  public boolean equals(Object o) \n+\n+  public boolean equals(Object o)\n   {\n-    throw new UnsupportedOperationException(\"FIXME, not implemented yet\");\n+    return hintMap.equals(o);\n   }\n-  \n-  public int hashCode() \n+\n+  public int hashCode()\n   {\n-    throw new UnsupportedOperationException(\"FIXME, not implemented yet\");\n+    return hintMap.hashCode();\n   }\n-  \n-  public Object clone() \n+\n+  public Object clone()\n   {\n-    throw new UnsupportedOperationException(\"FIXME, not implemented yet\");\n+    try\n+      {\n+        RenderingHints copy = (RenderingHints) super.clone();\n+        copy.hintMap = (HashMap) hintMap.clone();\n+        return copy;\n+      }\n+    catch (CloneNotSupportedException e)\n+      {\n+        throw (Error) new InternalError().initCause(e); // Impossible\n+      }\n   }\n-  \n-  public String toString() \n+\n+  public String toString()\n   {\n-    throw new UnsupportedOperationException(\"FIXME, not implemented yet\");\n+    return hintMap.toString();\n   }\n-}\n+} // class RenderingHints"}, {"sha": "1de5f3f3706502ae077fb37fd94343e535d3e5b3", "filename": "libjava/java/awt/Robot.java", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FRobot.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FRobot.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FRobot.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,112 @@\n+/* Robot.java -- \n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+import java.awt.image.BufferedImage;\n+\n+/** STUB CLASS ONLY */\n+public class Robot\n+{\n+  private boolean waitForIdle;\n+  private int autoDelay;\n+  public Robot() throws AWTException\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+  public Robot(GraphicsDevice screen) throws AWTException\n+  {\n+    this();\n+  }\n+  public void mouseMove(int x, int y)\n+  {\n+  }\n+  public void mousePress(int buttons)\n+  {\n+  }\n+  public void mouseRelease(int buttons)\n+  {\n+  }\n+  public void mouseWheel(int wheelAmt)\n+  {\n+  }\n+  public void keyPress(int keycode)\n+  {\n+  }\n+  public void keyRelease(int keycode)\n+  {\n+  }\n+  public Color getPixelColor(int x, int y)\n+  {\n+    return null;\n+  }\n+  public BufferedImage createScreenCapture(Rectangle screen)\n+  {\n+    return null;\n+  }\n+  public boolean isAutoWaitForIdle()\n+  {\n+    return waitForIdle;\n+  }\n+  public void setAutoWaitForIdle(boolean value)\n+  {\n+    waitForIdle = value;\n+  }\n+  public int getAutoDelay()\n+  {\n+    return autoDelay;\n+  }\n+  public void setAutoDelay(int ms)\n+  {\n+    if (ms < 0 || ms > 60000)\n+      throw new IllegalArgumentException();\n+    autoDelay = ms;\n+  }\n+  public void delay(int ms)\n+  {\n+    if (ms < 0 || ms > 60000)\n+      throw new IllegalArgumentException();\n+  }\n+  public void waitForIdle()\n+  {\n+  }\n+  public String toString()\n+  {\n+    return \"unimplemented\";\n+  }\n+} // class Robot"}, {"sha": "546f8e64d178fe9af5f3f8451e493974c2001986", "filename": "libjava/java/awt/ScrollPane.java", "status": "modified", "additions": 435, "deletions": 309, "changes": 744, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FScrollPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FScrollPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FScrollPane.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,340 +1,466 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* ScrollPane.java -- Scrolling window\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n \n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n \n package java.awt;\n \n-import java.awt.event.AdjustmentListener;\n import java.awt.peer.ScrollPanePeer;\n+import java.awt.peer.ContainerPeer;\n+import java.awt.peer.ComponentPeer;\n+\n+/**\n+  * This widget provides a scrollable region that allows a single \n+  * subcomponent to be viewed through a smaller window.\n+  *\n+  * @author Aaron M. Renn (arenn@urbanophile.com)\n+  */\n+public class ScrollPane extends Container implements java.io.Serializable\n+{\n+\n+/*\n+ * Static Variables\n+ */\n+\n+/**\n+  * Constant indicating that scrollbars are created as needed in this\n+  * windows.\n+  */\n+public static final int SCROLLBARS_AS_NEEDED = 0;\n+\n+/**\n+  * Constant indicating that scrollbars are always displayed in this\n+  * window.\n+  */\n+public static final int SCROLLBARS_ALWAYS = 1;\n+\n+/**\n+  * Constant indicating that scrollbars are never displayed in this window.\n+  */\n+public static final int SCROLLBARS_NEVER = 2;\n \n-/** A ScrollPane is a component that has vertical and horizontal\n- * scrollbars as well as a single child which is scrolled by them.\n- * @author Tom Tromey <tromey@redhat.com>\n- * @date December 31, 2000\n+// Serialization constant\n+private static final long serialVersionUID = 7956609840827222915L;\n+\n+/*************************************************************************/\n+\n+/*\n+ * Instance Variables\n+ */\n+\n+/**\n+  * @serial The horizontal scrollbar for this window.  The methods\n+  * <code>setMinimum()</code>, <code>setMaximum</code>, and\n+  * <code>setVisibleAmount</code> must not be called on this scrollbar.\n+  */\n+private ScrollPaneAdjustable hAdjustable;\n+\n+/**\n+  * @serial The vertical scrollbar for this window.  The methods\n+  * <code>setMinimum()</code>, <code>setMaximum</code>, and\n+  * <code>setVisibleAmount</code> must not be called on this scrollbar.\n+  */\n+private ScrollPaneAdjustable vAdjustable;\n+\n+/**\n+  * @serial Indicates when scrollbars are displayed in this window, will\n+  * be one of the constants from this class.\n+  */\n+private int scrollbarDisplayPolicy;\n+\n+// Current scroll position\n+private Point scrollPosition = new Point(0, 0);\n+\n+/*************************************************************************/\n+\n+/*\n+ * Constructors\n  */\n-public class ScrollPane extends Container\n+\n+/**\n+  * Initializes a new instance of <code>ScrollPane</code> with a default\n+  * scrollbar policy of <code>SCROLLBARS_AS_NEEDED</code>.\n+  */\n+public\n+ScrollPane()\n {\n-  /** This indicates that scrollbars should only be displayed when\n-   * needed.  */\n-  public static final int SCROLLBARS_AS_NEEDED = 0;\n-  /** This indicates that scrollbars should always be displayed.  */\n-  public static final int SCROLLBARS_ALWAYS = 1;\n-  /** This indicates that scrollbars should never be displayed.  */\n-  public static final int SCROLLBARS_NEVER = 2;\n-\n-  /** Create a new ScrollPane object using the indicated scrollbar\n-   * display policy.  If the policy is not specified it defaults to\n-   * SCROLLBARS_AS_NEEDED.  The default size of this component is\n-   * 100x100.\n-   * @param policy The scrollbar display policy\n-   */\n-  public ScrollPane ()\n-  {\n-    this (SCROLLBARS_AS_NEEDED);\n-  }\n-\n-  public ScrollPane (int policy)\n-  {\n-    if (policy != SCROLLBARS_AS_NEEDED\n-\t&& policy != SCROLLBARS_ALWAYS\n-\t&& policy != SCROLLBARS_NEVER)\n-      throw new IllegalArgumentException (\"invalid value for policy\");\n-\n-    this.policy = policy;\n-    setSize (100, 100);\n-  }\n-\n-  /** Add a component to this ScrollPane.\n-   * @param comp The component to add\n-   * @param constraints Constraints.  This is ignored.\n-   * @param pos Position.  This must be <= 0, but is otherwise ignored.\n-   */\n-  protected final void addImpl (Component comp, Object constraints,\n-\t\t\t\tint pos)\n-  {\n-    if (pos > 0)\n-      throw new IllegalArgumentException (\"pos must be <= 0\");\n-\n-    if (ncomponents > 0)\n-      remove (component[0]);\n-\n-    if (comp.isLightweight ())\n-      {\n-\tPanel p = new Panel ();\n-\tp.add (comp);\n-\tcomp = p;\n-      }\n-\n-    super.addImpl (comp, constraints, pos);\n-  }\n-\n-  /** This creates the component's peer.  */\n-  public void addNotify ()\n-  {\n-    if (peer == null)\n-      peer = getToolkit ().createScrollPane (this);\n-    super.addNotify ();\n-  }\n-\n-  /** Lays out the components in this container.  */\n-  public void doLayout ()\n-  {\n-    ScrollPanePeer spp = (ScrollPanePeer) peer;\n-    Dimension c = component[0].getPreferredSize ();\n-    component[0].setSize (c.width, c.height);\n-    spp.childResized (c.width, c.height);\n-    // Update the scrollbar position to the closest valid value.\n-    setScrollPosition (hscroll.getValue (), vscroll.getValue ());\n-  }\n-\n-  /** Returns an Adjustable representing the horizontal scrollbar.\n-   * The methods setMaximum, setMinimum, and setVisibleAmount should\n-   * not be called on this Adjustable.  They will throw AWTError if\n-   * called.\n-   */\n-  public Adjustable getHAdjustable ()\n-  {\n-    return hscroll;\n-  }\n-\n-  /** Returns the height of the horizontal scrollbar.  */\n-  public int getHScrollbarHeight ()\n-  {\n-    if (peer == null)\n-      return 0;\n-    ScrollPanePeer spp = (ScrollPanePeer) peer;\n-    return spp.getHScrollbarHeight ();\n-  }\n-\n-  /** Returns the scrollbar display policy.  */\n-  public int getScrollbarDisplayPolicy ()\n-  {\n-    return policy;\n-  }\n-\n-  /** Returns the viewport's scroll position.  */\n-  public Point getScrollPosition ()\n-  {\n-    return new Point (hscroll.getValue (), vscroll.getValue ());\n-  }\n-\n-  /** Returns an Adjustable representing the vertical scrollbar.\n-   * The methods setMaximum, setMinimum, and setVisibleAmount should\n-   * not be called on this Adjustable.  They will throw AWTError if\n-   * called.\n-   */\n-  public Adjustable getVAdjustable ()\n-  {\n-    return vscroll;\n-  }\n-\n-  /** Returns the size of the viewport.  */\n-  public Dimension getViewportSize ()\n-  {\n-    // Note: according to the online docs, the Insets are\n-    // automatically updated by the peer to include the scrollbar\n-    // sizes.\n-    Insets ins = getInsets ();\n-    int myw = width - ins.left - ins.right;\n-    int myh = height - ins.top - ins.bottom;\n-\n-    Dimension cs;\n-    if (ncomponents > 0)\n-      cs = component[0].getPreferredSize ();\n-    else\n-      cs = new Dimension (myw, myh);\n-\n-    // A little optimization -- reuse the Dimension.\n-    cs.setSize (myw, myh);\n-    return cs;\n-  }\n-\n-  /** Returns the width of the vertical scrollbar.  */\n-  public int getVScrollbarWidth ()\n-  {\n-    if (peer == null)\n-      return 0;\n-    ScrollPanePeer spp = (ScrollPanePeer) peer;\n-    return spp.getVScrollbarWidth ();\n-  }\n-\n-  /** Generates a String representation of this ScrollPane's state.  */\n-  public String paramString ()\n-  {\n-    return (\"[\" + getClass ().getName ()\n-\t    + \": \" + ((ncomponents > 0) ? component[0].paramString () : \"\")\n-\t    + \"]\");\n-  }\n-\n-  /** Set the layout manager for this component.  ScrollPane has its\n-   * own layout manager and overrides this method so that the layout\n-   * manager cannot be changed.\n-   * @param m The new layout manager (ignored)\n-   */\n-  public final void setLayout (LayoutManager m)\n-  {\n-    // Nothing.\n-  }\n-\n-  /** Sets the scroll position for this ScrollPane.  If the point if\n-   * out of range it is silently moved within range.\n-   * @param x The x coordinate\n-   * @param y The y coordinate\n-   */\n-  public void setScrollPosition (int x, int y)\n-  {\n-    // According to the JCL we throw a NullPointerException if there\n-    // is no child.\n-    if (ncomponents == 0)\n-      throw new NullPointerException (\"no child in ScrollPane\");\n-\n-    Dimension child_d = component[0].getPreferredSize ();\n-    Dimension our_d = getViewportSize ();\n-\n-    int xmax = Math.max (0, child_d.width - our_d.width);\n-    int ymax = Math.max (0, child_d.height - our_d.height);\n-\n-    if (x < 0)\n-      x = 0;\n-    else if (x > xmax)\n-      x = xmax;\n-    if (y < 0)\n-      y = 0;\n-    else if (y > ymax)\n-      y = ymax;\n-\n-    ScrollPanePeer spp = (ScrollPanePeer) peer;\n-    spp.setScrollPosition (x, y);\n-  }\n-\n-  /** Sets the scroll position for this ScrollPane.  If the point if\n-   * out of range it is silently moved within range.\n-   * @param p The new point\n-   */\n-  public void setScrollPosition (Point p)\n-  {\n-    setScrollPosition (p.x, p.y);\n-  }\n-\n-  // This implements the Adjustable for each scrollbar.  The\n-  // expectation is that the peer will look at these objects directly\n-  // and modify the values in them when the user manipulates the\n-  // scrollbars.  This has to be done from CNI to bypass Java\n-  // protection rules.  The peer should also take care of calling the\n-  // adjustment listeners.\n-  class ScrollPaneAdjustable implements Adjustable\n-  {\n-    AdjustmentListener listeners;\n-    int orient;\n-    int unit;\n-    int block;\n-    int value;\n-\n-    public ScrollPaneAdjustable (int orient)\n-    {\n-      this.orient = orient;\n-    }\n+  this(SCROLLBARS_AS_NEEDED);\n+}\n \n-    public void addAdjustmentListener (AdjustmentListener l)\n-    {\n-      listeners = AWTEventMulticaster.add (listeners, l);\n-    }\n+/*************************************************************************/\n+\n+/**\n+  * Initializes a new instance of <code>ScrollPane</code> with the\n+  * specified scrollbar policy.\n+  *\n+  * @param scrollbarDisplayPolicy When to display scrollbars, which must\n+  * be one of the constants defined in this class.\n+  */\n+public\n+ScrollPane(int scrollbarDisplayPolicy)\n+{\n+  this.scrollbarDisplayPolicy = scrollbarDisplayPolicy;\n \n-    public int getBlockIncrement ()\n+  if ((scrollbarDisplayPolicy != SCROLLBARS_ALWAYS) ||\n+      (scrollbarDisplayPolicy != SCROLLBARS_AS_NEEDED) ||\n+      (scrollbarDisplayPolicy != SCROLLBARS_NEVER))\n+    throw new IllegalArgumentException(\"Bad scrollbarDisplayPolicy: \" +\n+                                       scrollbarDisplayPolicy);\n+\n+  if (scrollbarDisplayPolicy != SCROLLBARS_NEVER)\n     {\n-      return block;\n+      hAdjustable = new ScrollPaneAdjustable(Scrollbar.HORIZONTAL);\n+      vAdjustable = new ScrollPaneAdjustable(Scrollbar.VERTICAL);\n     }\n+}\n \n-    public int getMaximum ()\n-    {\n-      Dimension child_d = component[0].getPreferredSize ();\n-      Dimension our_d = getViewportSize ();\n+/*************************************************************************/\n \n-      int xmax = Math.max (0, child_d.width - our_d.width);\n-      int ymax = Math.max (0, child_d.height - our_d.height);\n+/*\n+ * Instance Variables\n+ */\n \n-      return (orient == Adjustable.HORIZONTAL) ? xmax : ymax;\n-    }\n+/**\n+  * Returns the current scrollbar display policy.\n+  *\n+  * @return The current scrollbar display policy.\n+  */\n+public int\n+getScrollbarDisplayPolicy()\n+{\n+  return(scrollbarDisplayPolicy);\n+}\n \n-    public int getMinimum ()\n-    {\n-      return 0;\n-    }\n+/*************************************************************************/\n+\n+/**\n+  * Returns the horizontal scrollbar for this object.  If the scrollbar\n+  * display policy is set to <code>SCROLLBARS_NEVER</code> then this\n+  * will be <code>null</code>.\n+  *\n+  * @return The horizontal scrollbar for this window.\n+  */\n+public Adjustable\n+getHAdjustable()\n+{\n+  return(hAdjustable);\n+}\n \n-    public int getOrientation ()\n-    {\n-      return orient;\n-    }\n+/*************************************************************************/\n+\n+/**\n+  * Returns the vertical scrollbar for this object.  If the scrollbar\n+  * display policy is set to <code>SCROLLBARS_NEVER</code> then this\n+  * will be <code>null</code>.\n+  *\n+  * @return The horizontal scrollbar for this window.\n+  */\n+public Adjustable\n+getVAdjustable()\n+{\n+  return(vAdjustable);\n+}\n \n-    public int getUnitIncrement ()\n-    {\n-      return unit;\n-    }\n+/*************************************************************************/\n \n-    public int getValue ()\n-    {\n-      return value;\n-    }\n+/**\n+  * Returns the current viewport size.  The viewport is the region of\n+  * this object's window where the child is actually displayed.\n+  *\n+  * @return The viewport size.\n+  */\n+public Dimension\n+getViewportSize()\n+{\n+  Dimension viewsize = getSize();\n+  Insets insets = getInsets();\n+  viewsize.width = viewsize.width - (insets.left + insets.right);\n+  viewsize.height = viewsize.height - (insets.top + insets.bottom);\n \n-    public int getVisibleAmount ()\n-    {\n-      Dimension d = getViewportSize ();\n-      return (orient == Adjustable.HORIZONTAL) ? d.width : d.height;\n-    }\n+  ScrollPaneAdjustable v = (ScrollPaneAdjustable)getVAdjustable();\n+  ScrollPaneAdjustable h = (ScrollPaneAdjustable)getHAdjustable();\n \n-    public void removeAdjustmentListener (AdjustmentListener l)\n-    {\n-      listeners = AWTEventMulticaster.remove (listeners, l);\n-    }\n+  if ((v != null) && v.isVisible())\n+    viewsize.width = viewsize.width - v.getSize().width;\n+  if ((h != null) && h.isVisible())\n+    viewsize.height = viewsize.height - v.getSize().height;\n \n-    public void setBlockIncrement (int b)\n-    {\n-      throw new AWTError (\"can't use setBlockIncrement on this Adjustable\");\n-    }\n+  return(viewsize);\n+}\n \n-    public void setMaximum (int max)\n-    {\n-      throw new AWTError (\"can't use setMaximum on this Adjustable\");\n-    }\n+/*************************************************************************/\n \n-    public void setMinimum (int min)\n-    {\n-      throw new AWTError (\"can't use setMinimum on this Adjustable\");\n-    }\n+/**\n+  * Returns the height of a horizontal scrollbar.\n+  *\n+  * @return The height of a horizontal scrollbar.\n+  */\n+public int\n+getHScrollbarHeight()\n+{\n+  ScrollPanePeer spp = (ScrollPanePeer)getPeer();\n+  if (spp != null)\n+    return(spp.getHScrollbarHeight());\n+  else\n+    return(0); // FIXME: What to do here?\n+}\n \n-    public void setUnitIncrement (int u)\n-    {\n-      unit = u;\n-      if (peer != null)\n-\t{\n-\t  ScrollPanePeer spp = (ScrollPanePeer) peer;\n-\t  spp.setUnitIncrement (this, u);\n-\t}\n-    }\n+/*************************************************************************/\n \n-    public void setValue (int v)\n-    {\n-      value = v;\n-      if (peer != null)\n-\t{\n-\t  ScrollPanePeer spp = (ScrollPanePeer) peer;\n-\t  spp.setValue (this, v);\n-\t}\n-    }\n+/**\n+  * Returns the width of a vertical scrollbar.\n+  *\n+  * @return The width of a vertical scrollbar.\n+  */\n+public int\n+getVScrollbarWidth()\n+{\n+  ScrollPanePeer spp = (ScrollPanePeer)getPeer();\n+  if (spp != null)\n+    return(spp.getVScrollbarWidth());\n+  else\n+    return(0); // FIXME: What to do here?\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Returns the current scroll position of the viewport.\n+  *\n+  * @return The current scroll position of the viewport.\n+  */\n+public Point\n+getScrollPosition()\n+{\n+  int x = 0;\n+  int y = 0;\n+\n+  Adjustable v = getVAdjustable();\n+  Adjustable h = getHAdjustable();\n+\n+  if (v != null)\n+    y = v.getValue();\n+  if (h != null)\n+    x = h.getValue();\n+\n+  return(new Point(x, y));\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Sets the scroll position to the specified value.\n+  *\n+  * @param scrollPosition The new scrollPosition.\n+  *\n+  * @exception IllegalArgumentException If the specified value is outside\n+  * the legal scrolling range.\n+  */\n+public void\n+setScrollPosition(Point scrollPosition) throws IllegalArgumentException\n+{\n+  setScrollPosition(scrollPosition.x, scrollPosition.y);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Sets the scroll position to the specified value.\n+  *\n+  * @param x The new X coordinate of the scroll position.\n+  * @param y The new Y coordinate of the scroll position.\n+  *\n+  * @exception IllegalArgumentException If the specified value is outside\n+  * the legal scrolling range.\n+  */\n+public void\n+setScrollPosition(int x, int y)\n+{\n+  Adjustable h = getHAdjustable();\n+  Adjustable v = getVAdjustable();\n+\n+  if (h != null)\n+    h.setValue(x);\n+  if (v != null)\n+    v.setValue(y);\n+\n+  ScrollPanePeer spp = (ScrollPanePeer)getPeer();\n+  if (spp != null)\n+    spp.setScrollPosition(x, y);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Notifies this object that it should create its native peer.\n+  */\n+public void\n+addNotify()\n+{\n+  if (getPeer() == null)\n+    return;\n+\n+  setPeer((ComponentPeer)getToolkit().createScrollPane(this));\n+\n+  if (hAdjustable != null)\n+    hAdjustable.addNotify();\n+  if (vAdjustable != null)\n+    vAdjustable.removeNotify();\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Notifies this object that it should destroy its native peers.\n+  */\n+public void\n+removeNotify()\n+{\n+  if (hAdjustable != null)\n+    hAdjustable.removeNotify();\n+  if (vAdjustable != null)\n+    vAdjustable.removeNotify();\n \n-    public void setVisibleAmount (int v)\n+  super.removeNotify();\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Adds the specified child component to this container.  A \n+  * <code>ScrollPane</code> can have at most one child, so if a second\n+  * one is added, then first one is removed.\n+  *\n+  * @param component The component to add to this container.\n+  * @param constraints A list of layout constraints for this object.\n+  * @param index The index at which to add the child, which is ignored\n+  * in this implementation.\n+  */\n+public final void\n+addImpl(Component component, Object constraints, int index)\n+{\n+  Component[] list = getComponents();\n+  if ((list != null) && (list.length > 0))\n+    remove(list[0]);\n+\n+  super.addImpl(component, constraints, -1);\n+\n+  doLayout();\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Lays out this component.  This consists of resizing the sole child\n+  * component to its perferred size.\n+  */\n+public void\n+doLayout()\n+{\n+  Component[] list = getComponents();\n+  if ((list != null) && (list.length > 0))\n     {\n-      throw new AWTError (\"can't use setVisibleAmount on this Adjustable\");\n+      Dimension dim = list[0].getPreferredSize();\n+      list[0].resize(dim);\n+\n+      Point p = getScrollPosition();\n+      if (p.x > dim.width)\n+        p.x = dim.width;\n+      if (p.y > dim.height)\n+        p.y = dim.height;\n+\n+      setScrollPosition(p);\n     }\n-  }\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Lays out this component.  This consists of resizing the sole child\n+  * component to its perferred size.\n+  *\n+  * @deprecated This method is deprecated in favor of\n+  * <code>doLayout()</code>.\n+  */\n+public void\n+layout()\n+{\n+  doLayout();\n+}\n \n-  ScrollPaneAdjustable hscroll\n-    = new ScrollPaneAdjustable (Adjustable.HORIZONTAL);\n-  ScrollPaneAdjustable vscroll\n-    = new ScrollPaneAdjustable (Adjustable.VERTICAL);\n-  int policy;\n+/*************************************************************************/\n+\n+/**\n+  * This method overrides its superclass method to ensure no layout\n+  * manager is set for this container.  <code>ScrollPane</code>'s do\n+  * not have layout managers.\n+  *\n+  * @param layoutManager Ignored\n+  */\n+public final void\n+setLayout(LayoutManager layoutManager)\n+{\n+  return;\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Prints all of the components in this container.\n+  *\n+  * @param graphics The desired graphics context for printing.\n+  */\n+public void\n+printComponents(Graphics graphics)\n+{\n+  super.printComponents(graphics);\n }\n+\n+/*************************************************************************/\n+\n+/**\n+  * Returns a debug string for this object.\n+  *\n+  * @return A debug string for this object.\n+  */\n+public String\n+paramString()\n+{\n+  return(getClass().getName());\n+}\n+\n+} // class ScrollPane \n+"}, {"sha": "62cfefc1f9abaf49accc13ee467b4ece75936be3", "filename": "libjava/java/awt/ScrollPaneAdjustable.java", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FScrollPaneAdjustable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FScrollPaneAdjustable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FScrollPaneAdjustable.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,72 @@\n+/* ScrollPaneAdjustable.java -- Scrollbars for a ScrollPane\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+/**\n+  * Need this class since the serialization spec for ScrollPane\n+  * uses it.\n+  *\n+  * @author Aaron M. Renn (arenn@urbanophile.com)\n+  */\n+class ScrollPaneAdjustable extends Scrollbar\n+{\n+\n+public\n+ScrollPaneAdjustable(int orientation)\n+{\n+  super(orientation);\n+}\n+\n+public void\n+setMaximum(int maximum)\n+{\n+}\n+\n+public void\n+setMinimum(int minimum)\n+{\n+}\n+\n+public void\n+setVisibleAmount(int visibleAmount)\n+{\n+}\n+\n+} // class ScrollPaneAdjustable\n+"}, {"sha": "8d61c4a9a88b8676ac749b453d14be7e1ce30b28", "filename": "libjava/java/awt/Shape.java", "status": "modified", "additions": 158, "deletions": 30, "changes": 188, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FShape.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FShape.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FShape.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,5 +1,5 @@\n-/* Shape.java -- Interface for shape abstractions.\n-   Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.\n+/* Shape.java -- the classic Object-Oriented shape interface\n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,38 +38,166 @@\n \n package java.awt;\n \n-import java.awt.geom.*;\n-\n-/* Written using \"Java Class Libraries\", 2nd edition.\n- * Status:  Believed complete and correct to JDK 1.2.\n- */\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.PathIterator;\n+import java.awt.geom.Point2D;\n+import java.awt.geom.Rectangle2D;\n \n /**\n-  * This interface represents an abstract shape.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Per Bothner <bothner@cygnus.com>\n-  */\n+ * This interface represents an abstract shape. The shape is described by\n+ * a {@link PathIterator}, and has callbacks for determining bounding box,\n+ * where points and rectangles lie in relation to the shape, and tracing\n+ * the trajectory.\n+ *\n+ * <p>A point is inside if it is completely inside, or on the boundary and\n+ * adjacent points in the increasing x or y direction are completely inside.\n+ * Unclosed shapes are considered as implicitly closed when performing\n+ * <code>contains</code> or <code>intersects</code>.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @see PathIterator\n+ * @see AffineTransform\n+ * @see FlatteningPathIterator\n+ * @see GeneralPath\n+ * @since 1.0\n+ * @status updated to 1.4\n+ */\n public interface Shape\n {\n+  /**\n+   * Returns a <code>Rectange</code> that bounds the shape. There is no\n+   * guarantee that this is the minimum bounding box, particularly if\n+   * the shape overflows the finite integer range of a bound. Generally,\n+   * <code>getBounds2D</code> returns a tighter bound.\n+   *\n+   * @return the shape's bounding box\n+   * @see #getBounds2D()\n+   */\n+  Rectangle getBounds();\n \n-/**\n-  * Returns a <code>Rectange</code> that bounds the shape.\n-  *\n-  * @return A <code>Rectange</code> that bounds the shape.\n-  */\n-public abstract Rectangle\n-getBounds();\n-\n-  public boolean contains (double x, double y);\n-  public boolean contains (double x, double y, double w, double h);\n-  public boolean contains (Point2D p);\n-  public boolean contains (Rectangle2D r);\n-  public Rectangle2D getBounds2D ();\n-  public PathIterator getPathIterator (AffineTransform at);\n-  public PathIterator getPathIterator (AffineTransform at, double flatness);\n-  public boolean intersects (double x, double y, double w, double h);\n-  public boolean intersects (Rectangle2D r);\n+  /**\n+   * Returns a high precision bounding box of the shape. There is no guarantee\n+   * that this is the minimum bounding box, but at least it never overflows.\n+   *\n+   * @return the shape's bounding box\n+   * @see #getBounds()\n+   * @since 1.2\n+   */\n+  Rectangle2D getBounds2D();\n \n-} // interface Shape\n+  /**\n+   * Test if the coordinates lie in the shape.\n+   *\n+   * @param x the x coordinate\n+   * @param y the y coordinate\n+   * @return true if (x,y) lies inside the shape\n+   * @since 1.2\n+   */\n+  boolean contains(double x, double y);\n+\n+  /**\n+   * Test if the point lie in the shape.\n+   *\n+   * @param p the high-precision point\n+   * @return true if p lies inside the shape\n+   * @throws NullPointerException if p is null\n+   * @since 1.2\n+   */\n+  boolean contains(Point2D p);\n \n+  /**\n+   * Test if a high-precision rectangle intersects the shape. This is true\n+   * if any point in the rectangle is in the shape, with the caveat that the\n+   * operation may include high probability estimates when the actual\n+   * calculation is prohibitively expensive. The {@link Area} class can\n+   * be used for more precise answers.\n+   *\n+   * @param x the x coordinate of the rectangle\n+   * @param y the y coordinate of the rectangle\n+   * @param w the width of the rectangle, undefined results if negative\n+   * @param h the height of the rectangle, undefined results if negative\n+   * @return true if the rectangle intersects this shape\n+   * @see Area\n+   * @since 1.2\n+   */\n+  boolean intersects(double x, double y, double w, double h);\n+\n+  /**\n+   * Test if a high-precision rectangle intersects the shape. This is true\n+   * if any point in the rectangle is in the shape, with the caveat that the\n+   * operation may include high probability estimates when the actual\n+   * calculation is prohibitively expensive. The {@link Area} class can\n+   * be used for more precise answers.\n+   *\n+   * @param r the rectangle\n+   * @return true if the rectangle intersects this shape\n+   * @throws NullPointerException if r is null\n+   * @see #intersects(double, double, double, double)\n+   * @since 1.2\n+   */\n+  boolean intersects(Rectangle2D r);\n+\n+  /**\n+   * Test if a high-precision rectangle lies completely in the shape. This is\n+   * true if all points in the rectangle are in the shape, with the caveat\n+   * that the operation may include high probability estimates when the actual\n+   * calculation is prohibitively expensive. The {@link Area} class can\n+   * be used for more precise answers.\n+   *\n+   * @param x the x coordinate of the rectangle\n+   * @param y the y coordinate of the rectangle\n+   * @param w the width of the rectangle, undefined results if negative\n+   * @param h the height of the rectangle, undefined results if negative\n+   * @return true if the rectangle is contained in this shape\n+   * @see Area\n+   * @since 1.2\n+   */\n+  boolean contains(double x, double y, double w, double h);\n+\n+  /**\n+   * Test if a high-precision rectangle lies completely in the shape. This is\n+   * true if all points in the rectangle are in the shape, with the caveat\n+   * that the operation may include high probability estimates when the actual\n+   * calculation is prohibitively expensive. The {@link Area} class can\n+   * be used for more precise answers.\n+   *\n+   * @param r the rectangle\n+   * @return true if the rectangle is contained in this shape\n+   * @throws NullPointerException if r is null\n+   * @see #contains(double, double, double, double)\n+   * @since 1.2\n+   */\n+  boolean contains(Rectangle2D r);\n+\n+  /**\n+   * Return an iterator along the shape boundary. If the optional transform\n+   * is provided, the iterator is transformed accordingly. Each call returns\n+   * a new object, independent from others in use. It is recommended, but\n+   * not required, that the Shape isolate iterations from future changes to\n+   * the boundary, and document this fact.\n+   *\n+   * @param transform an optional transform to apply to the iterator\n+   * @return a new iterator over the boundary\n+   * @since 1.2\n+   */\n+  PathIterator getPathIterator(AffineTransform transform);\n+\n+  /**\n+   * Return an iterator along the flattened version of the shape boundary.\n+   * Only SEG_MOVETO, SEG_LINETO, and SEG_CLOSE points are returned in the\n+   * iterator. The flatness paramter controls how far points are allowed to\n+   * differ from the real curve; although a limit on accuracy may cause this\n+   * parameter to be enlarged if needed.\n+   *\n+   * <p>If the optional transform is provided, the iterator is transformed\n+   * accordingly. Each call returns a new object, independent from others in\n+   * use. It is recommended, but not required, that the Shape isolate\n+   * iterations from future changes to the boundary, and document this fact.\n+   *\n+   * @param transform an optional transform to apply to the iterator\n+   * @param double the maximum distance for deviation from the real boundary\n+   * @return a new iterator over the boundary\n+   * @since 1.2\n+   */\n+  PathIterator getPathIterator(AffineTransform transform, double flatness);\n+} // interface Shape"}, {"sha": "8b9b7fc777fb5ddd95c76de98848d2ce690e270d", "filename": "libjava/java/awt/Stroke.java", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FStroke.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FStroke.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FStroke.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,65 @@\n+/* Stroke.java -- a stroked outline of a shape\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+/**\n+ * This interface allows a Graphics2D to grab the outline of a shape, as if\n+ * stroked by a marking pen of appropriate size and shape. The area inked\n+ * by the pen is the area of this stroke. Anything in the graphic which\n+ * traces an outline will use this stroke, such as <code>drawLine</code>.\n+ * Strokes must be immutable, because the graphics object does not clone\n+ * them.\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @see BasicStroke\n+ * @see Graphics2D#setStroke(Stroke)\n+ * @since 1.1\n+ * @status updated to 1.4\n+ */\n+public interface Stroke\n+{\n+  /**\n+   * Returns a shape which outlines the boundary of the given shape, in\n+   * effect converting the infinitely thin line into a new shape.\n+   *\n+   * @param s the shape to stroke\n+   * @return the stroked outline shape\n+   */\n+  Shape createStrokedShape(Shape s);\n+} // interface Stroke"}, {"sha": "c6bffe2101a057e8f9f55c9869455325dc28f567", "filename": "libjava/java/awt/SystemColor.java", "status": "modified", "additions": 422, "deletions": 390, "changes": 812, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FSystemColor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FSystemColor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FSystemColor.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -1,5 +1,5 @@\n-/* SystemColor.java -- Class to access system color values.\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+/* SystemColor.java -- access dynamic system color values\n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,393 +38,425 @@\n \n package java.awt;\n \n-/**\n-  * This class contains the various \"system colors\" in use by the\n-  * native windowing system.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n-public final class SystemColor extends Color implements java.io.Serializable\n-{\n-\n-/*\n- * Static Variables\n- */\n-\n-/**\n-  * Array index of the desktop color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int DESKTOP = 0;\n-\n-/**\n-  * Array index of the active caption color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int ACTIVE_CAPTION = 1;\n-\n-/**\n-  * Array index of the active caption text color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int ACTIVE_CAPTION_TEXT = 2;\n-\n-/**\n-  * Array index of the active caption border color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int ACTIVE_CAPTION_BORDER = 3;\n-\n-/**\n-  * Array index of the inactive caption color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int INACTIVE_CAPTION = 4;\n-\n-/**\n-  * Array index of the inactive caption text color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int INACTIVE_CAPTION_TEXT = 5;\n-\n-/**\n-  * Array index of the inactive caption border color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int INACTIVE_CAPTION_BORDER = 6;\n-\n-/**\n-  * Array index of the window background color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int WINDOW = 7;\n-\n-/**\n-  * Array index of the window border color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int WINDOW_BORDER = 8;\n-\n-/**\n-  * Array index of the window text color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int WINDOW_TEXT = 9;\n-\n-/**\n-  * Array index of the menu background color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int MENU = 10;\n-\n-/**\n-  * Array index of the menu text color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int MENU_TEXT = 11;\n-\n-/**\n-  * Array index of the text background color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int TEXT = 12;\n-\n-/**\n-  * Array index of the text foreground color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int TEXT_TEXT = 13;\n-\n-/**\n-  * Array index of the highlighted text background color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int TEXT_HIGHLIGHT = 14;\n-\n-/**\n-  * Array index of the highlighted text foreground color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int TEXT_HIGHLIGHT_TEXT = 15;\n-\n-/**\n-  * Array index of the inactive text foreground color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int TEXT_INACTIVE_TEXT = 16;\n-\n-/**\n-  * Array index of the control background color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int CONTROL = 17;\n-\n-/**\n-  * Array index of the control text color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int CONTROL_TEXT = 18;\n-\n-/**\n-  * Array index of the highlighted control background color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int CONTROL_HIGHLIGHT = 19;\n-\n-/**\n-  * Array index of the lightly highlighted control background color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int CONTROL_LT_HIGHLIGHT = 20;\n-\n-/**\n-  * Array index of the shadowed control background color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int CONTROL_SHADOW = 21;\n-\n-/**\n-  * Array index of the darkly shadowed control background color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int CONTROL_DK_SHADOW = 22;\n-\n-/**\n-  * Array index of the scrollbar background color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int SCROLLBAR = 23;\n-\n-/**\n-  * Array index of the info background color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int INFO = 24;\n-\n-/**\n-  * Array index of the info text color.  Used by \n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int INFO_TEXT = 25;\n-\n-/**\n-  * The number of system colors. Used by\n-  * <code>Toolkit.loadSystemColors()</code>.\n-  */\n-public static final int NUM_COLORS = 26;\n-\n-/**\n-  * The desktop color.\n-  */\n-public static final SystemColor desktop;\n-\n-/**\n-  * The active caption background color.\n-  */\n-public static final SystemColor activeCaption;\n-\n-/**\n-  * The active caption text color.\n-  */\n-public static final SystemColor activeCaptionText;\n-\n-/**\n-  * The active caption border color.\n-  */\n-public static final SystemColor activeCaptionBorder;\n-\n-/**\n-  * The inactive caption background color.\n-  */\n-public static final SystemColor inactiveCaption;\n-\n-/**\n-  * The inactive caption text color.\n-  */\n-public static final SystemColor inactiveCaptionText;\n-\n-/**\n-  * The inactive caption border color.\n-  */\n-public static final SystemColor inactiveCaptionBorder;\n-\n-/**\n-  * The window background color.\n-  */\n-public static final SystemColor window;\n-\n-/**\n-  * The window border color.\n-  */\n-public static final SystemColor windowBorder;\n-\n-/**\n-  * The window text color.\n-  */\n-public static final SystemColor windowText;\n-\n-/**\n-  * The menu background color.\n-  */\n-public static final SystemColor menu;\n-\n-/**\n-  * The menu text color.\n-  */\n-public static final SystemColor menuText;\n-\n-/**\n-  * The text background color.\n-  */\n-public static final SystemColor text;\n-\n-/**\n-  * The text foreground color.\n-  */\n-public static final SystemColor textText;\n-\n-/**\n-  * The highlighted text background color.\n-  */\n-public static final SystemColor textHighlight;\n-\n-/**\n-  * The highlighted text foreground color.\n-  */\n-public static final SystemColor textHighlightText;\n-\n-/**\n-  * The inactive text color.\n-  */\n-public static final SystemColor textInactiveText;\n-\n-/**\n-  * The control background color.\n-  */\n-public static final SystemColor control;\n-\n-/**\n-  * The control text color.\n-  */\n-public static final SystemColor controlText;\n-\n-/**\n-  * The control highlight color.\n-  */\n-public static final SystemColor controlHighlight;\n-\n-/**\n-  * The control light highlight color.\n-  */\n-public static final SystemColor controlLtHighlight; \n-\n-/**\n-  * The control shadow color.\n-  */\n-public static final SystemColor controlShadow;\n-\n-/**\n-  * The control dark shadow color.\n-  */\n-public static final SystemColor controlDkShadow;\n-\n-/**\n-  * The scrollbar color.\n-  */\n-public static final SystemColor scrollbar;\n-\n-/**\n-  * The info text background color.\n-  */\n-public static final SystemColor info;\n-\n-/**\n-  * The info text foreground color.\n-  */\n-public static final SystemColor infoText;\n-\n-// Serialization version constant\n-private static final long serialVersionUID = 4503142729533789064L;\n-\n-static\n-{\n-  int[] sys_color_rgbs = new int[NUM_COLORS];\n-  Toolkit.getDefaultToolkit().loadSystemColors(sys_color_rgbs);\n-\n-  desktop = new SystemColor(sys_color_rgbs[DESKTOP]);\n-  activeCaption= new SystemColor(sys_color_rgbs[ACTIVE_CAPTION]);\n-  activeCaptionText= new SystemColor(sys_color_rgbs[ACTIVE_CAPTION_TEXT]);\n-  activeCaptionBorder = new SystemColor(sys_color_rgbs[ACTIVE_CAPTION_BORDER]);\n-  inactiveCaption = new SystemColor(sys_color_rgbs[INACTIVE_CAPTION]);\n-  inactiveCaptionText = new SystemColor(sys_color_rgbs[INACTIVE_CAPTION_TEXT]);\n-  inactiveCaptionBorder = \n-    new SystemColor(sys_color_rgbs[INACTIVE_CAPTION_BORDER]);\n-  window = new SystemColor(sys_color_rgbs[WINDOW]);\n-  windowBorder = new SystemColor(sys_color_rgbs[WINDOW_BORDER]);\n-  windowText = new SystemColor(sys_color_rgbs[WINDOW_TEXT]);\n-  menu = new SystemColor(sys_color_rgbs[MENU]);\n-  menuText = new SystemColor(sys_color_rgbs[MENU_TEXT]);\n-  text = new SystemColor(sys_color_rgbs[TEXT]);\n-  textText = new SystemColor(sys_color_rgbs[TEXT_TEXT]);\n-  textHighlight = new SystemColor(sys_color_rgbs[TEXT_HIGHLIGHT]);\n-  textHighlightText = new SystemColor(sys_color_rgbs[TEXT_HIGHLIGHT_TEXT]);\n-  textInactiveText = new SystemColor(sys_color_rgbs[TEXT_INACTIVE_TEXT]);\n-  control = new SystemColor(sys_color_rgbs[CONTROL]);\n-  controlText = new SystemColor(sys_color_rgbs[CONTROL_TEXT]);\n-  controlHighlight = new SystemColor(sys_color_rgbs[CONTROL_HIGHLIGHT]);\n-  controlLtHighlight = new SystemColor(sys_color_rgbs[CONTROL_LT_HIGHLIGHT]);\n-  controlShadow = new SystemColor(sys_color_rgbs[CONTROL_SHADOW]);\n-  controlDkShadow = new SystemColor(sys_color_rgbs[CONTROL_DK_SHADOW]);\n-  scrollbar = new SystemColor(sys_color_rgbs[SCROLLBAR]);\n-  info = new SystemColor(sys_color_rgbs[INFO]);\n-  infoText = new SystemColor(sys_color_rgbs[INFO_TEXT]);\n-}\n-\n-/*************************************************************************/\n-\n-/*\n- * Constructors\n- */\n-\n-private\n-SystemColor(int rgb)\n-{\n-  super(rgb);\n-}\n-\n-/*************************************************************************/\n-\n-/*\n- * Instance Methods\n+import java.awt.image.ColorModel;\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.Rectangle2D;\n+import java.io.Serializable;\n+\n+/**\n+ * This class contains the various \"system colors\" in use by the native\n+ * windowing system. The <code>getRGB()</code> method is dynamic on systems\n+ * which support dynamic system color changes, and most methods in the\n+ * superclass are written to use this dynamic value when reporting colors.\n+ * However, the <code>equals()</code> method is not dynamic, and does not\n+ * track the actual color of instances in this class. This means that equals\n+ * may give surprising results; you are better off relying on getRGB.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @since 1.1\n+ * @status updated to 1.4\n  */\n-\n-/**\n-  * Returns the RGB value for this color as an <code>int</code>.  The first\n-  * byte is the blue value, the second the green value, the third the\n-  * red value and the fourth is set to 0xFF.\n-  *\n-  * @return The RGB value.\n-  */\n-public int\n-getRGB()\n+public final class SystemColor extends Color implements Serializable\n {\n-  // Override only to be spec consistent.\n-  return(super.getRGB());\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns a string describing this color.\n-  *\n-  * @return A string describing this color.\n-  */\n-public String\n-toString()\n-{\n-  return(\"SystemColor(R=\" + getRed() + \",G=\" + getGreen() + \",B=\" +\n-         getBlue() + \")\");\n-}\n-\n-} // class SystemColor \n-\n+  // Implementation note: To be serial compatible with JDK, this class must\n+  // violate the semantic meaning of super.value to be one of the\n+  // NUM_COLORS constants instead of the actual RGB value. Hence there are\n+  // a lot of ugly workarounds in Color and in this class. I would have\n+  // designed it MUCH differently, making a separate id field in this class.\n+\n+  /**\n+   * Compatible with JDK 1.1+.\n+   */\n+  private static final long serialVersionUID = 4503142729533789064L;\n+\n+  /**\n+   * Array index of the desktop color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #desktop\n+   */\n+  public static final int DESKTOP = 0;\n+\n+  /**\n+   * Array index of the active caption color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #activeCaption\n+   */\n+  public static final int ACTIVE_CAPTION = 1;\n+\n+  /**\n+   * Array index of the active caption text color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #activeCaptionText\n+   */\n+  public static final int ACTIVE_CAPTION_TEXT = 2;\n+\n+  /**\n+   * Array index of the active caption border color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #activeCaptionBorder\n+   */\n+  public static final int ACTIVE_CAPTION_BORDER = 3;\n+\n+  /**\n+   * Array index of the inactive caption color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #inactiveCaption\n+   */\n+  public static final int INACTIVE_CAPTION = 4;\n+\n+  /**\n+   * Array index of the inactive caption text color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #inactiveCaptionText\n+   */\n+  public static final int INACTIVE_CAPTION_TEXT = 5;\n+\n+  /**\n+   * Array index of the inactive caption border color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #inactiveCaptionBorder\n+   */\n+  public static final int INACTIVE_CAPTION_BORDER = 6;\n+\n+  /**\n+   * Array index of the window background color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #window\n+   */\n+  public static final int WINDOW = 7;\n+\n+  /**\n+   * Array index of the window border color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #windowBorder\n+   */\n+  public static final int WINDOW_BORDER = 8;\n+\n+  /**\n+   * Array index of the window text color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #windowText\n+   */\n+  public static final int WINDOW_TEXT = 9;\n+\n+  /**\n+   * Array index of the menu background color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #menu\n+   */\n+  public static final int MENU = 10;\n+\n+  /**\n+   * Array index of the menu text color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #menuText\n+   */\n+  public static final int MENU_TEXT = 11;\n+\n+  /**\n+   * Array index of the text background color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #text\n+   */\n+  public static final int TEXT = 12;\n+\n+  /**\n+   * Array index of the text foreground color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #textText\n+  */\n+  public static final int TEXT_TEXT = 13;\n+\n+  /**\n+   * Array index of the highlighted text background color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #textHighlight\n+   */\n+  public static final int TEXT_HIGHLIGHT = 14;\n+\n+  /**\n+   * Array index of the highlighted text foreground color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #textHighlightText\n+   */\n+  public static final int TEXT_HIGHLIGHT_TEXT = 15;\n+\n+  /**\n+   * Array index of the inactive text foreground color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #textInactiveText\n+   */\n+  public static final int TEXT_INACTIVE_TEXT = 16;\n+\n+  /**\n+   * Array index of the control background color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #control\n+   */\n+  public static final int CONTROL = 17;\n+\n+  /**\n+   * Array index of the control text color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #controlText\n+   */\n+  public static final int CONTROL_TEXT = 18;\n+\n+  /**\n+   * Array index of the highlighted control background color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #controlHighlight\n+   */\n+  public static final int CONTROL_HIGHLIGHT = 19;\n+\n+  /**\n+   * Array index of the lightly highlighted control background color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #controlLtHighlight\n+   */\n+  public static final int CONTROL_LT_HIGHLIGHT = 20;\n+\n+  /**\n+   * Array index of the shadowed control background color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #controlShadow\n+   */\n+  public static final int CONTROL_SHADOW = 21;\n+\n+  /**\n+   * Array index of the darkly shadowed control background color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #controlDkShadow\n+   */\n+  public static final int CONTROL_DK_SHADOW = 22;\n+\n+  /**\n+   * Array index of the scrollbar background color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #scrollbar\n+   */\n+  public static final int SCROLLBAR = 23;\n+\n+  /**\n+   * Array index of the info background color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #info\n+   */\n+  public static final int INFO = 24;\n+\n+  /**\n+   * Array index of the info text color.  Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   *\n+   * @see #infoText\n+   */\n+  public static final int INFO_TEXT = 25;\n+\n+  /**\n+   * The number of system colors. Used by\n+   * {@link Toolkit#loadSystemColors()}.\n+   */\n+  public static final int NUM_COLORS = 26;\n+\n+  /**\n+   * The internal array used to dynamically update <code>getRGB()</code>.\n+   */\n+  private static final int[] colors = new int[NUM_COLORS];\n+\n+  /** The desktop color. */\n+  public static final SystemColor desktop\n+    = new SystemColor(DESKTOP);\n+\n+  /** The active caption background color. */\n+  public static final SystemColor activeCaption\n+    = new SystemColor(ACTIVE_CAPTION);\n+\n+  /** The active caption text color. */\n+  public static final SystemColor activeCaptionText\n+    = new SystemColor(ACTIVE_CAPTION_TEXT);\n+\n+  /** The active caption border color. */\n+  public static final SystemColor activeCaptionBorder\n+    = new SystemColor(ACTIVE_CAPTION_BORDER);\n+\n+  /** The inactive caption background color. */\n+  public static final SystemColor inactiveCaption\n+    = new SystemColor(INACTIVE_CAPTION);\n+\n+  /** The inactive caption text color. */\n+  public static final SystemColor inactiveCaptionText\n+    = new SystemColor(INACTIVE_CAPTION_TEXT);\n+\n+  /** The inactive caption border color. */\n+  public static final SystemColor inactiveCaptionBorder\n+    = new SystemColor(INACTIVE_CAPTION_BORDER);\n+\n+  /** The window background color. */\n+  public static final SystemColor window\n+    = new SystemColor(WINDOW);\n+\n+  /** The window border color. */\n+  public static final SystemColor windowBorder\n+    = new SystemColor(WINDOW_BORDER);\n+\n+  /** The window text color. */\n+  public static final SystemColor windowText\n+    = new SystemColor(WINDOW_TEXT);\n+\n+  /** The menu background color. */\n+  public static final SystemColor menu\n+    = new SystemColor(MENU);\n+\n+  /** The menu text color. */\n+  public static final SystemColor menuText\n+    = new SystemColor(MENU_TEXT);\n+\n+  /** The text background color. */\n+  public static final SystemColor text\n+    = new SystemColor(TEXT);\n+\n+  /** The text foreground color. */\n+  public static final SystemColor textText\n+    = new SystemColor(TEXT_TEXT);\n+\n+  /** The highlighted text background color. */\n+  public static final SystemColor textHighlight\n+    = new SystemColor(TEXT_HIGHLIGHT);\n+\n+  /** The highlighted text foreground color. */\n+  public static final SystemColor textHighlightText\n+    = new SystemColor(TEXT_HIGHLIGHT_TEXT);\n+\n+  /** The inactive text color. */\n+  public static final SystemColor textInactiveText\n+    = new SystemColor(TEXT_INACTIVE_TEXT);\n+\n+  /** The control background color. */\n+  public static final SystemColor control\n+    = new SystemColor(CONTROL);\n+\n+  /** The control text color. */\n+  public static final SystemColor controlText\n+    = new SystemColor(CONTROL_TEXT);\n+\n+  /** The control highlight color. */\n+  public static final SystemColor controlHighlight\n+    = new SystemColor(CONTROL_HIGHLIGHT);\n+\n+  /** The control light highlight color. */\n+  public static final SystemColor controlLtHighlight\n+    = new SystemColor(CONTROL_LT_HIGHLIGHT);\n+\n+  /** The control shadow color. */\n+  public static final SystemColor controlShadow\n+    = new SystemColor(CONTROL_SHADOW);\n+\n+  /** The control dark shadow color. */\n+  public static final SystemColor controlDkShadow\n+    = new SystemColor(CONTROL_DK_SHADOW);\n+\n+  /** The scrollbar color. */\n+  public static final SystemColor scrollbar\n+    = new SystemColor(SCROLLBAR);\n+\n+  /** The info text background color. */\n+  public static final SystemColor info\n+    = new SystemColor(INFO);\n+\n+  /** The info text foreground color. */\n+  public static final SystemColor infoText\n+    = new SystemColor(INFO_TEXT);\n+\n+  /**\n+   * Construct a system color which is dynamically updated.\n+   *\n+   * @param id the color id\n+   */\n+  private SystemColor(int id)\n+  {\n+    // Note: See Color#Color(int, boolean) to explain why we use this\n+    // particular constructor.\n+    super(id, true);\n+  }\n+\n+  /**\n+   * Returns the RGB value for this color, in the sRGB color space. The blue\n+   * value will be in bits 0-7, green in 8-15, red in 6-23, and the alpha\n+   * value (bits 24-31) is 0xff. This is dynamically updated, so it may not\n+   * match the results of <code>getRed()</code>, <code>getGreen()</code>, or\n+   * <code>getBlue()</code>.\n+   *\n+   * @return the current RGB value\n+   */\n+  public int getRGB()\n+  {\n+    Toolkit.getDefaultToolkit().loadSystemColors(colors);\n+    return colors[value] | ALPHA_MASK;\n+  }\n+\n+  /**\n+   * Returns a paint context, used for filling areas of a raster scan with\n+   * the current value of this system color. Since the system colors may be\n+   * dynamically updated, the returned value may not always be the same; but\n+   * as the system color is solid, the context does not need any of the\n+   * passed parameters to do its job.\n+   *\n+   * @param cm the requested color model, ignored\n+   * @param deviceBounds the bounding box in device coordinates, ignored\n+   * @param userBounds the bounding box in user coordinates, ignored\n+   * @param xform the bounds transformation, ignored\n+   * @param hints any rendering hints, ignored\n+   * @return a context for painting this solid color\n+   */\n+  public PaintContext createContext(ColorModel cm, Rectangle deviceBounds,\n+                                    Rectangle2D userBounds,\n+                                    AffineTransform xform,\n+                                    RenderingHints hints)\n+  {\n+    Toolkit.getDefaultToolkit().loadSystemColors(colors);\n+    int color = colors[value] | ALPHA_MASK;\n+    if (context == null || color != context.color)\n+      context = new ColorPaintContext(color);\n+    return context;\n+  }    \n+\n+  /**\n+   * Returns a string describing this color. This is in the format\n+   * \"java.awt.SystemColor[i=\" + index + ']', where index is one of the\n+   * integer constants of this class. Unfortunately, this description\n+   * does not describe the current value of the color; for that you should\n+   * use <code>new Color(syscolor.getRGB()).toString()</code>.\n+   *\n+   * @return a string describing this color\n+   */\n+  public String toString()\n+  {\n+    return \"java.awt.SystemColor[i=\" + value + ']';\n+  }\n+} // class SystemColor"}, {"sha": "5ff0b57ecddd01cae3b4003f0c26236059edacda", "filename": "libjava/java/awt/TexturePaint.java", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FTexturePaint.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FTexturePaint.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FTexturePaint.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6", "patch": "@@ -0,0 +1,75 @@\n+/* TexturePaint.java -- \n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt;\n+\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.Rectangle2D;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.ColorModel;\n+\n+/** STUB CLASS ONLY */\n+public class TexturePaint implements Paint\n+{\n+  private final BufferedImage texture;\n+  private final Rectangle2D anchor;\n+  public TexturePaint(BufferedImage texture, Rectangle2D anchor)\n+  {\n+    this.texture = texture;\n+    this.anchor = anchor;\n+  }\n+  public BufferedImage getImage()\n+  {\n+    return texture;\n+  }\n+  public Rectangle2D getAnchorRect()\n+  {\n+    return anchor;\n+  }\n+  public PaintContext createContext(ColorModel cm, Rectangle deviceBounds,\n+                                    Rectangle2D userBounds,\n+                                    AffineTransform xform,\n+                                    RenderingHints hints)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+  public int getTransparency()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+} // class TexturePaint"}, {"sha": "7caec22dca95834ee1843fabe09f26e564d3b12c", "filename": "libjava/java/awt/Toolkit.java", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FToolkit.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "fc01f583955fbf9ce53dcee0c4758f7c9b409a27", "filename": "libjava/java/awt/Transparency.java", "status": "modified", "additions": 24, "deletions": 14, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FTransparency.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FTransparency.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FTransparency.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "7064511b2b68fbce92e22a921cc4e46ebde82fa1", "filename": "libjava/java/awt/Window.java", "status": "modified", "additions": 39, "deletions": 31, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2FWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FWindow.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "0d146e6c6ebd282f783ef8d3c6710346a8ed6adf", "filename": "libjava/java/awt/color/CMMException.java", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fcolor%2FCMMException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fcolor%2FCMMException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FCMMException.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "130781faf9bb66233bf73cef9bc95b5090a7d22f", "filename": "libjava/java/awt/color/ProfileDataException.java", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fcolor%2FProfileDataException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fcolor%2FProfileDataException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FProfileDataException.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "23fa9fa1fc1fdd500ec77062b988aafe826e463e", "filename": "libjava/java/awt/datatransfer/FlavorTable.java", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdatatransfer%2FFlavorTable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdatatransfer%2FFlavorTable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdatatransfer%2FFlavorTable.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "42aecac05283e3c14e7e392ebc86ace61181d989", "filename": "libjava/java/awt/datatransfer/MimeTypeParseException.java", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdatatransfer%2FMimeTypeParseException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdatatransfer%2FMimeTypeParseException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdatatransfer%2FMimeTypeParseException.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "ad957ed08682e112f0424461ee17603b4e04e6b8", "filename": "libjava/java/awt/datatransfer/Transferable.java", "status": "modified", "additions": 36, "deletions": 47, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdatatransfer%2FTransferable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdatatransfer%2FTransferable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdatatransfer%2FTransferable.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "620452be6f827b0a7f5e3cfd03a85af025e13a4e", "filename": "libjava/java/awt/datatransfer/UnsupportedFlavorException.java", "status": "modified", "additions": 23, "deletions": 20, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdatatransfer%2FUnsupportedFlavorException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdatatransfer%2FUnsupportedFlavorException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdatatransfer%2FUnsupportedFlavorException.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "3e78121a57a67b62756e072b5de08313c99fc09b", "filename": "libjava/java/awt/dnd/DnDConstants.java", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDnDConstants.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDnDConstants.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDnDConstants.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "84fa1cbb90121a97ea704369e9d14e69cf3f548c", "filename": "libjava/java/awt/dnd/DragGestureEvent.java", "status": "added", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragGestureEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragGestureEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragGestureEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "2673d0d5d1f95247d186da5d699321ffdb6753ef", "filename": "libjava/java/awt/dnd/DragGestureListener.java", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragGestureListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragGestureListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragGestureListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "674e26e8a3b314dbc20f3f261c323cc6f9b075e5", "filename": "libjava/java/awt/dnd/DragGestureRecognizer.java", "status": "added", "additions": 173, "deletions": 0, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragGestureRecognizer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragGestureRecognizer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragGestureRecognizer.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "01cae00a3cf2180d356a17617ec4288064dd62bf", "filename": "libjava/java/awt/dnd/DragSource.java", "status": "added", "additions": 163, "deletions": 0, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragSource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragSource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragSource.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "55daf41b257efe33a8f5f7b95f1818588bd89c01", "filename": "libjava/java/awt/dnd/DragSourceAdapter.java", "status": "added", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceAdapter.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "ff7e88257e9d47c1abd0083b3f82c9a21faf17c5", "filename": "libjava/java/awt/dnd/DragSourceContext.java", "status": "added", "additions": 138, "deletions": 0, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceContext.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "0a1d759e986ceaa3242f2f6455e56dd9b954a2d6", "filename": "libjava/java/awt/dnd/DragSourceDragEvent.java", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceDragEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceDragEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceDragEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "9d5b00bf9eb0b9a7d470229b4dfa72c9e3b95e68", "filename": "libjava/java/awt/dnd/DragSourceEvent.java", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "46326418fb95c5d516e71179b4550b97b07375ff", "filename": "libjava/java/awt/dnd/DragSourceListener.java", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "38d025c3a06d9e18e6a3584bff8f090eea072675", "filename": "libjava/java/awt/dnd/DragSourceMotionListener.java", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceMotionListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceMotionListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceMotionListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "9ae423438ec9ff9ccddff6388ee891fc82d327c4", "filename": "libjava/java/awt/dnd/DropTarget.java", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDropTarget.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FDropTarget.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDropTarget.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "927ab140627dcef6b3c3559c80e33005165db3e7", "filename": "libjava/java/awt/dnd/InvalidDnDOperationException.java", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FInvalidDnDOperationException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2FInvalidDnDOperationException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FInvalidDnDOperationException.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "da9e09833fd3aca01dcd80a58f3e4880f741890a", "filename": "libjava/java/awt/dnd/peer/DragSourceContextPeer.java", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2Fpeer%2FDragSourceContextPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fdnd%2Fpeer%2FDragSourceContextPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2Fpeer%2FDragSourceContextPeer.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "b735ce1197b15913f9c035a2d5992eaa35315a9e", "filename": "libjava/java/awt/event/AWTEventListener.java", "status": "modified", "additions": 56, "deletions": 14, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FAWTEventListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FAWTEventListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FAWTEventListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "7572e701a65762e6f1b7ba1d1bddf7553f9b4314", "filename": "libjava/java/awt/event/AWTEventListenerProxy.java", "status": "added", "additions": 154, "deletions": 0, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FAWTEventListenerProxy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FAWTEventListenerProxy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FAWTEventListenerProxy.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "4f77fe06eea54239c8d9efc4d4b477ab9aec7148", "filename": "libjava/java/awt/event/ActionEvent.java", "status": "modified", "additions": 196, "deletions": 36, "changes": 232, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FActionEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FActionEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FActionEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "40112080e538a4af808c23eca0805dd1e5812f06", "filename": "libjava/java/awt/event/ActionListener.java", "status": "modified", "additions": 51, "deletions": 13, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FActionListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FActionListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FActionListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "48b208b5d8617151dfa0bb68f963c0c564929f26", "filename": "libjava/java/awt/event/AdjustmentEvent.java", "status": "modified", "additions": 190, "deletions": 63, "changes": 253, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "050528b00c92ecf9d5bdf1c7e663d9cd61db04de", "filename": "libjava/java/awt/event/AdjustmentListener.java", "status": "modified", "additions": 50, "deletions": 13, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FAdjustmentListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "a8d6044fa2e1595c346fa03fb618fc75aff8b4b0", "filename": "libjava/java/awt/event/ComponentAdapter.java", "status": "modified", "additions": 77, "deletions": 15, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FComponentAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FComponentAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FComponentAdapter.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "0f208151d3c681ff4825055cd532b697fa665dc3", "filename": "libjava/java/awt/event/ComponentEvent.java", "status": "modified", "additions": 111, "deletions": 35, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FComponentEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FComponentEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FComponentEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "fbfc3335cf9806c5a2b75a0c5547099f5e7dc4a2", "filename": "libjava/java/awt/event/ComponentListener.java", "status": "modified", "additions": 75, "deletions": 15, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FComponentListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FComponentListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FComponentListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "b4c97be47b07d55bfc401c94777b7cd396585c52", "filename": "libjava/java/awt/event/ContainerAdapter.java", "status": "modified", "additions": 65, "deletions": 13, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FContainerAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FContainerAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FContainerAdapter.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "fe087d2e507ad7041409ecef478badddf3aabf0d", "filename": "libjava/java/awt/event/ContainerEvent.java", "status": "modified", "additions": 111, "deletions": 40, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FContainerEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FContainerEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FContainerEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "a937e1550aa1ab72110632495c2cf21fec2b88e8", "filename": "libjava/java/awt/event/ContainerListener.java", "status": "modified", "additions": 62, "deletions": 14, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FContainerListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FContainerListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FContainerListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "721878efccb534f3edd418bda81e4ccc5f5238bc", "filename": "libjava/java/awt/event/FocusAdapter.java", "status": "modified", "additions": 65, "deletions": 13, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FFocusAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FFocusAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FFocusAdapter.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "9f2b98f762a04519db33f51401628e775bae146a", "filename": "libjava/java/awt/event/FocusEvent.java", "status": "modified", "additions": 155, "deletions": 37, "changes": 192, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FFocusEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FFocusEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FFocusEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "e372843cb2ac43a78f8068132412c6e1f07e4bd9", "filename": "libjava/java/awt/event/FocusListener.java", "status": "modified", "additions": 61, "deletions": 14, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FFocusListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FFocusListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FFocusListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "5f807b38c9ee94e610e013e659618d11b19e2f1a", "filename": "libjava/java/awt/event/HierarchyBoundsAdapter.java", "status": "modified", "additions": 30, "deletions": 7, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyBoundsAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyBoundsAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyBoundsAdapter.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "4d74f0d8d348dde885188badf62af0081db66942", "filename": "libjava/java/awt/event/HierarchyBoundsListener.java", "status": "modified", "additions": 29, "deletions": 9, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyBoundsListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyBoundsListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyBoundsListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "fcb7db951d26e5f5df1d5ea4009ffc27f3cf9dbd", "filename": "libjava/java/awt/event/HierarchyEvent.java", "status": "modified", "additions": 176, "deletions": 51, "changes": 227, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "4fdbdff977be7225a9c80404bd59a8a4b0fdb182", "filename": "libjava/java/awt/event/HierarchyListener.java", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "1689e51143decee369c3ac0d6e5554bf3477f412", "filename": "libjava/java/awt/event/InputEvent.java", "status": "modified", "additions": 334, "deletions": 33, "changes": 367, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FInputEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FInputEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FInputEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "880025b0a9f507eba143d6ab8936f0b6c245ec03", "filename": "libjava/java/awt/event/InputMethodEvent.java", "status": "modified", "additions": 280, "deletions": 45, "changes": 325, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FInputMethodEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FInputMethodEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FInputMethodEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "bf09ed893369ff0edacded2b78ab5c55c0a29aa7", "filename": "libjava/java/awt/event/InputMethodListener.java", "status": "modified", "additions": 61, "deletions": 14, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FInputMethodListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FInputMethodListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FInputMethodListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "fbf7b5e9379bd14a44ad1d15c6406121a610949b", "filename": "libjava/java/awt/event/InvocationEvent.java", "status": "modified", "additions": 195, "deletions": 59, "changes": 254, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FInvocationEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FInvocationEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FInvocationEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "43784a865045b236ca2a518555d7982facbcbf1a", "filename": "libjava/java/awt/event/ItemEvent.java", "status": "modified", "additions": 125, "deletions": 51, "changes": 176, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FItemEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FItemEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FItemEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "5c67357851bd0b795aa7326c16dc2e77c9d0850e", "filename": "libjava/java/awt/event/ItemListener.java", "status": "modified", "additions": 53, "deletions": 13, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FItemListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FItemListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FItemListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "c60fd52e24542a6c864c2c2dc7636a7adee702ba", "filename": "libjava/java/awt/event/KeyAdapter.java", "status": "modified", "additions": 71, "deletions": 14, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FKeyAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FKeyAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FKeyAdapter.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "33390e48f42dedd0d7109f7d21910b8dcc841e9d", "filename": "libjava/java/awt/event/KeyEvent.java", "status": "modified", "additions": 1662, "deletions": 204, "changes": 1866, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "7443eedd8fbca7c22d79bea7f8adc396bee8dd48", "filename": "libjava/java/awt/event/KeyListener.java", "status": "modified", "additions": 68, "deletions": 14, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FKeyListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FKeyListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FKeyListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "2518d365576a5ca88f3f37f7c1694d0d4d091910", "filename": "libjava/java/awt/event/MouseAdapter.java", "status": "modified", "additions": 83, "deletions": 16, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FMouseAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FMouseAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseAdapter.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "5010eb9d92092c3847b73e09490afe4cbd77193a", "filename": "libjava/java/awt/event/MouseEvent.java", "status": "modified", "additions": 387, "deletions": 69, "changes": 456, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FMouseEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FMouseEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "6162b089769ca976949dca4adbae140081081e7d", "filename": "libjava/java/awt/event/MouseListener.java", "status": "modified", "additions": 85, "deletions": 16, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FMouseListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FMouseListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "cc7498820c7b32f068a0ae58ef5781337c447533", "filename": "libjava/java/awt/event/MouseMotionAdapter.java", "status": "modified", "additions": 65, "deletions": 13, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FMouseMotionAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FMouseMotionAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseMotionAdapter.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "16ced33c1f4fef49ad4972ffbfb6790d2d33b1c0", "filename": "libjava/java/awt/event/MouseMotionListener.java", "status": "modified", "additions": 64, "deletions": 14, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FMouseMotionListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FMouseMotionListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseMotionListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "be2366a19eed73266e53b59532a768927905ca96", "filename": "libjava/java/awt/event/MouseWheelEvent.java", "status": "added", "additions": 227, "deletions": 0, "changes": 227, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FMouseWheelEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FMouseWheelEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseWheelEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "15cbd0370f10974e619e16249c1e7afe64d1f82f", "filename": "libjava/java/awt/event/MouseWheelListener.java", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FMouseWheelListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FMouseWheelListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FMouseWheelListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "107c6b390b694a20da53e6aa169229ed69de7090", "filename": "libjava/java/awt/event/PaintEvent.java", "status": "modified", "additions": 101, "deletions": 37, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FPaintEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FPaintEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FPaintEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "58d9ab6086fb7a251c18193a97eded4a2aaeb17f", "filename": "libjava/java/awt/event/TextEvent.java", "status": "modified", "additions": 75, "deletions": 12, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FTextEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FTextEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FTextEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "efdd103d509cc23956180de9fba16b86c6c49d01", "filename": "libjava/java/awt/event/TextListener.java", "status": "modified", "additions": 52, "deletions": 14, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FTextListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FTextListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FTextListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "5dea18c3e8fb9237dd5d6a3ec4ab3b96e5fefc65", "filename": "libjava/java/awt/event/WindowAdapter.java", "status": "modified", "additions": 147, "deletions": 18, "changes": 165, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FWindowAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FWindowAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FWindowAdapter.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "ca51ba545b4f035931892e8129777cebafe0f78b", "filename": "libjava/java/awt/event/WindowEvent.java", "status": "modified", "additions": 289, "deletions": 43, "changes": 332, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FWindowEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FWindowEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FWindowEvent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "de684fbfce125c8eb99f4c2d843883c1d5a1b865", "filename": "libjava/java/awt/event/WindowFocusListener.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FWindowFocusListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FWindowFocusListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FWindowFocusListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "ab22c8fb826500326a62d289d04e791b4cd7114e", "filename": "libjava/java/awt/event/WindowListener.java", "status": "modified", "additions": 98, "deletions": 18, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FWindowListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FWindowListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FWindowListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "2d870a8dd9f10596b5b2711f438367b89734b4fc", "filename": "libjava/java/awt/event/WindowStateListener.java", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FWindowStateListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fevent%2FWindowStateListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FWindowStateListener.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "295b63478c5c81c19a7f0ae5c33539451ef340b1", "filename": "libjava/java/awt/font/TextHitInfo.java", "status": "added", "additions": 110, "deletions": 0, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Ffont%2FTextHitInfo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Ffont%2FTextHitInfo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FTextHitInfo.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "3c9486e68753955f487d7ee16c08fa23a2e2e165", "filename": "libjava/java/awt/geom/AffineTransform.java", "status": "modified", "additions": 1118, "deletions": 343, "changes": 1461, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FAffineTransform.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FAffineTransform.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FAffineTransform.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "d62fa676f89d7382bd403e56f210a91ed15af9e4", "filename": "libjava/java/awt/geom/Arc2D.java", "status": "added", "additions": 1123, "deletions": 0, "changes": 1123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FArc2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FArc2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FArc2D.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "85bc642cb222a86b63472266755ee5525733698d", "filename": "libjava/java/awt/geom/Area.java", "status": "added", "additions": 183, "deletions": 0, "changes": 183, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FArea.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FArea.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FArea.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "2d303c7f6a754e3f68af7f8134a4ae591e8076e0", "filename": "libjava/java/awt/geom/CubicCurve2D.java", "status": "added", "additions": 519, "deletions": 0, "changes": 519, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FCubicCurve2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FCubicCurve2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FCubicCurve2D.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "e111e5434cfe77cd61eb3c0c784c60113a03e82c", "filename": "libjava/java/awt/geom/Dimension2D.java", "status": "modified", "additions": 61, "deletions": 20, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FDimension2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FDimension2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FDimension2D.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "223a1930991795e6ef7ef242eee4b845c4457181", "filename": "libjava/java/awt/geom/Ellipse2D.java", "status": "modified", "additions": 50, "deletions": 50, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FEllipse2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FEllipse2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FEllipse2D.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "a7a57ef6fed520a8d98318645a66fe337fd08cee", "filename": "libjava/java/awt/geom/FlatteningPathIterator.java", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FFlatteningPathIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FFlatteningPathIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FFlatteningPathIterator.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "267db6ca0e3d01345afce864467dee081ffdea3e", "filename": "libjava/java/awt/geom/GeneralPath.java", "status": "added", "additions": 361, "deletions": 0, "changes": 361, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FGeneralPath.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FGeneralPath.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FGeneralPath.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "f0e388aac55c1dcbe9671c1d46bc3a03499b4153", "filename": "libjava/java/awt/geom/IllegalPathStateException.java", "status": "modified", "additions": 23, "deletions": 7, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FIllegalPathStateException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FIllegalPathStateException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FIllegalPathStateException.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "9e5511033322f6953199c7814decc0750590c361", "filename": "libjava/java/awt/geom/Line2D.java", "status": "modified", "additions": 850, "deletions": 340, "changes": 1190, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FLine2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FLine2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FLine2D.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "40b2c1802984fbb4822d3f9cbb239fadc4d66ddf", "filename": "libjava/java/awt/geom/NoninvertibleTransformException.java", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FNoninvertibleTransformException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FNoninvertibleTransformException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FNoninvertibleTransformException.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "871c9a8719b5dee73d8c51baec134997c0652225", "filename": "libjava/java/awt/geom/PathIterator.java", "status": "modified", "additions": 147, "deletions": 17, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FPathIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FPathIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FPathIterator.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "48b12f67dbdcdf297abd2bd8b849cc88346f8e36", "filename": "libjava/java/awt/geom/Point2D.java", "status": "modified", "additions": 257, "deletions": 59, "changes": 316, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FPoint2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FPoint2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FPoint2D.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "2f1aafad21ba85b284b85447ae41e87a37016464", "filename": "libjava/java/awt/geom/QuadCurve2D.java", "status": "added", "additions": 486, "deletions": 0, "changes": 486, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FQuadCurve2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FQuadCurve2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FQuadCurve2D.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "e0a278a575dc837c2d53653f477de43c8eb3df8d", "filename": "libjava/java/awt/geom/Rectangle2D.java", "status": "modified", "additions": 766, "deletions": 244, "changes": 1010, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "1801e80339dea011e22bb2cedc96f408052aae66", "filename": "libjava/java/awt/geom/RectangularShape.java", "status": "modified", "additions": 273, "deletions": 211, "changes": 484, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FRectangularShape.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FRectangularShape.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FRectangularShape.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "ec7e4615f0d09f09c9f03ffed03e6ea7f788bd91", "filename": "libjava/java/awt/geom/RoundRectangle2D.java", "status": "modified", "additions": 88, "deletions": 89, "changes": 177, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FRoundRectangle2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fgeom%2FRoundRectangle2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FRoundRectangle2D.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "e4431f9c3746d90635d22d36c81faf9fe1448b95", "filename": "libjava/java/awt/im/InputContext.java", "status": "added", "additions": 434, "deletions": 0, "changes": 434, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fim%2FInputContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fim%2FInputContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fim%2FInputContext.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "5398fc5de773571963522f8a186c94fe947c3337", "filename": "libjava/java/awt/im/InputMethodHighlight.java", "status": "added", "additions": 185, "deletions": 0, "changes": 185, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fim%2FInputMethodHighlight.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fim%2FInputMethodHighlight.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fim%2FInputMethodHighlight.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "88253ed6237c5018da27340033db5b539fcfb09a", "filename": "libjava/java/awt/im/InputMethodRequests.java", "status": "added", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fim%2FInputMethodRequests.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fim%2FInputMethodRequests.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fim%2FInputMethodRequests.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "10755fd49c78c3920cb4ead2773fb1c72edd1e73", "filename": "libjava/java/awt/im/InputSubset.java", "status": "added", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fim%2FInputSubset.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fim%2FInputSubset.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fim%2FInputSubset.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "88d4912307f7286b1802328281f5618c6320909f", "filename": "libjava/java/awt/image/BufferStrategy.java", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FBufferStrategy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FBufferStrategy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FBufferStrategy.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "b1b7575df7fe61321caa90b364b471ef5fce9200", "filename": "libjava/java/awt/image/BufferedImageOp.java", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FBufferedImageOp.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FBufferedImageOp.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FBufferedImageOp.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "28c3df132cc0697675674d324f4bbf0069f0cc23", "filename": "libjava/java/awt/image/ImagingOpException.java", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FImagingOpException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FImagingOpException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FImagingOpException.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "3e56f85e79fc96370373e5ab33aa4f0859653965", "filename": "libjava/java/awt/image/IndexColorModel.java", "status": "modified", "additions": 240, "deletions": 324, "changes": 564, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FIndexColorModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FIndexColorModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FIndexColorModel.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "fce112a0656006a3299f4e0e24e3993e5ff44bd8", "filename": "libjava/java/awt/image/MemoryImageSource.java", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FMemoryImageSource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FMemoryImageSource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FMemoryImageSource.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "24dd6d3fc490fab485d3fb51f336bae9e8a1c1e5", "filename": "libjava/java/awt/image/PixelGrabber.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FPixelGrabber.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FPixelGrabber.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FPixelGrabber.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "3a29877476b3783845b6c7706cfd9898e96a647d", "filename": "libjava/java/awt/image/RasterFormatException.java", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FRasterFormatException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FRasterFormatException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FRasterFormatException.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "f38b44a94d2976085bcec9cca9ff299f71264472", "filename": "libjava/java/awt/image/RenderedImage.java", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FRenderedImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FRenderedImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FRenderedImage.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "b76217870eae9fe995530a284f28bd4e475105bd", "filename": "libjava/java/awt/image/TileObserver.java", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FTileObserver.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FTileObserver.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FTileObserver.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "7455c2b17bebb5feb60b753856aee00c98b8844a", "filename": "libjava/java/awt/image/VolatileImage.java", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FVolatileImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FVolatileImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FVolatileImage.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "657d6fdb6a0b922d0b8e08becf336c8494f09941", "filename": "libjava/java/awt/image/WritableRenderedImage.java", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FWritableRenderedImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fimage%2FWritableRenderedImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FWritableRenderedImage.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "19014bacf6c9459c09dbd251f0c5fca2b23b417e", "filename": "libjava/java/awt/print/Book.java", "status": "added", "additions": 188, "deletions": 0, "changes": 188, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FBook.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FBook.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FBook.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "7328ab5287e5ebe7794deadf4a72ab5aad8b6c77", "filename": "libjava/java/awt/print/PageFormat.java", "status": "added", "additions": 293, "deletions": 0, "changes": 293, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FPageFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FPageFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FPageFormat.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "fc631c5ce7be59d06e2c63871adb2dc50d3fbcb8", "filename": "libjava/java/awt/print/Pageable.java", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FPageable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FPageable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FPageable.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "cba4aec23d14c7419ef9960e9f189af965d06592", "filename": "libjava/java/awt/print/Paper.java", "status": "added", "additions": 236, "deletions": 0, "changes": 236, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FPaper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FPaper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FPaper.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "8f3d0b64e9e66c593b5d2c4c5cbaa22252f545fd", "filename": "libjava/java/awt/print/Printable.java", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FPrintable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FPrintable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FPrintable.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "133fdfe116dcf28dab6cdeebefe359fc2602dbae", "filename": "libjava/java/awt/print/PrinterAbortException.java", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FPrinterAbortException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FPrinterAbortException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FPrinterAbortException.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "9476d935674da85313d639d2641c89e87909ab6f", "filename": "libjava/java/awt/print/PrinterException.java", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FPrinterException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FPrinterException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FPrinterException.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "3615107f3fcccd14d039fe6d8160ea3ebf304460", "filename": "libjava/java/awt/print/PrinterGraphics.java", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FPrinterGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FPrinterGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FPrinterGraphics.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "31f6381dc0d799311f2def25805dcf4864a2422e", "filename": "libjava/java/awt/print/PrinterIOException.java", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FPrinterIOException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FPrinterIOException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FPrinterIOException.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "b9e558caa26452384103a10bb95e859b458a28fa", "filename": "libjava/java/awt/print/PrinterJob.java", "status": "added", "additions": 259, "deletions": 0, "changes": 259, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FPrinterJob.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjava%2Fawt%2Fprint%2FPrinterJob.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FPrinterJob.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "1c407a682f50e1be57d14a58feb61a251c04e48f", "filename": "libjava/javax/accessibility/Accessible.java", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessible.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessible.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessible.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "b05883aa98c4014b175ffe81f6b64bf48ecd7650", "filename": "libjava/javax/accessibility/AccessibleAction.java", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleAction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleAction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleAction.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "11b9cb38efa281aecb6d28d26170d3693535b449", "filename": "libjava/javax/accessibility/AccessibleBundle.java", "status": "added", "additions": 120, "deletions": 0, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleBundle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleBundle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleBundle.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "7634eb5ba933b7555d69351cf8d5fdb9b6e93646", "filename": "libjava/javax/accessibility/AccessibleComponent.java", "status": "added", "additions": 321, "deletions": 0, "changes": 321, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleComponent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "d84c1463d39967530546ac4a116d6b4f987ad049", "filename": "libjava/javax/accessibility/AccessibleContext.java", "status": "added", "additions": 589, "deletions": 0, "changes": 589, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleContext.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "3387a7c56f4b49da3e525eb5e0c0a5b2d180ed56", "filename": "libjava/javax/accessibility/AccessibleEditableText.java", "status": "added", "additions": 142, "deletions": 0, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleEditableText.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleEditableText.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleEditableText.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "d57de19745f40ae11c493527bd724266b6af40f2", "filename": "libjava/javax/accessibility/AccessibleExtendedComponent.java", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleExtendedComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleExtendedComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleExtendedComponent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "627b02428252681c0d7fde6e61393bdc8686778b", "filename": "libjava/javax/accessibility/AccessibleExtendedTable.java", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleExtendedTable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleExtendedTable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleExtendedTable.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "716dd1dd0f52f7d98597eea4af33c61a5b03dc41", "filename": "libjava/javax/accessibility/AccessibleHyperlink.java", "status": "added", "additions": 139, "deletions": 0, "changes": 139, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleHyperlink.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleHyperlink.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleHyperlink.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "ae0d150bd02a10772c2d839b99de2cd520e20675", "filename": "libjava/javax/accessibility/AccessibleHypertext.java", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleHypertext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleHypertext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleHypertext.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "c13b14009b9212879166a9c184ec17c9f93e165d", "filename": "libjava/javax/accessibility/AccessibleIcon.java", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleIcon.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleIcon.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleIcon.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "777f8b734d67b645d4cbf49403dcc05de8835416", "filename": "libjava/javax/accessibility/AccessibleKeyBinding.java", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleKeyBinding.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleKeyBinding.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleKeyBinding.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "68f1f646a5994bfe414faaf13ee91a15e2057878", "filename": "libjava/javax/accessibility/AccessibleRelation.java", "status": "added", "additions": 220, "deletions": 0, "changes": 220, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleRelation.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleRelation.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleRelation.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "27dc58da3c34c6f156135d55950153b353fb5238", "filename": "libjava/javax/accessibility/AccessibleRelationSet.java", "status": "added", "additions": 222, "deletions": 0, "changes": 222, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleRelationSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleRelationSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleRelationSet.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "01c2bcfdf98f66a97caab0235cc3107ca08c4c51", "filename": "libjava/javax/accessibility/AccessibleResourceBundle.java", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleResourceBundle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleResourceBundle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleResourceBundle.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "86bfa6d382dc3b06e58b8b19105c944b13893095", "filename": "libjava/javax/accessibility/AccessibleRole.java", "status": "added", "additions": 478, "deletions": 0, "changes": 478, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleRole.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleRole.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleRole.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "d1e8c7c2a4605abdbfb095a4362d34da46e40472", "filename": "libjava/javax/accessibility/AccessibleSelection.java", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleSelection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleSelection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleSelection.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "24005ae9a6e7fa384afc4fc15e884a99f16a4734", "filename": "libjava/javax/accessibility/AccessibleState.java", "status": "added", "additions": 315, "deletions": 0, "changes": 315, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleState.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleState.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleState.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "e1b112abf793aa33b6f4e506f0cf069a75f084e4", "filename": "libjava/javax/accessibility/AccessibleStateSet.java", "status": "added", "additions": 172, "deletions": 0, "changes": 172, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleStateSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleStateSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleStateSet.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "4fd58c5a23718079436af19aec8de03b654ff4e8", "filename": "libjava/javax/accessibility/AccessibleTable.java", "status": "added", "additions": 236, "deletions": 0, "changes": 236, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleTable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleTable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleTable.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "9cff7bfa749e1af7953d7a92be0890a99e7ef1a4", "filename": "libjava/javax/accessibility/AccessibleTableModelChange.java", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleTableModelChange.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleTableModelChange.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleTableModelChange.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "14c324c77082616d2d110ee8254c2c1f0510c03d", "filename": "libjava/javax/accessibility/AccessibleText.java", "status": "added", "additions": 184, "deletions": 0, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleText.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleText.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleText.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "69da5c8a4eb32c960a68a64e26fca9ca7c6d257c", "filename": "libjava/javax/accessibility/AccessibleValue.java", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleValue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Faccessibility%2FAccessibleValue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Faccessibility%2FAccessibleValue.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "fb81c503b48328a404b1b29715b46abb8e0c6e69", "filename": "libjava/javax/swing/AbstractAction.java", "status": "added", "additions": 215, "deletions": 0, "changes": 215, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FAbstractAction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FAbstractAction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractAction.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "b675d808a423ce5c72248cea7750a1418a52e7a3", "filename": "libjava/javax/swing/AbstractButton.java", "status": "added", "additions": 795, "deletions": 0, "changes": 795, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FAbstractButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FAbstractButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractButton.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "098aa9901342e6341cc82d11f9a482113fe07f00", "filename": "libjava/javax/swing/AbstractCellEditor.java", "status": "added", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FAbstractCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FAbstractCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractCellEditor.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "13518cafa19e9fee1043e94aafce25f6e2aa1a08", "filename": "libjava/javax/swing/AbstractListModel.java", "status": "added", "additions": 204, "deletions": 0, "changes": 204, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FAbstractListModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FAbstractListModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractListModel.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "d83bb8a3b96dba0d44c28d0070dfb1995793b401", "filename": "libjava/javax/swing/AbstractSet.java", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FAbstractSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FAbstractSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractSet.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "e9fbc762b1fa76561d9fa3802835abd770cf6561", "filename": "libjava/javax/swing/Action.java", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FAction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FAction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAction.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "b95144de4f6d74cf66f74fdd63a906805283fea9", "filename": "libjava/javax/swing/ActionMap.java", "status": "added", "additions": 229, "deletions": 0, "changes": 229, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FActionMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FActionMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FActionMap.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "4a4433c7bff2f59121ecd36c1b1916fd1faf5001", "filename": "libjava/javax/swing/BorderFactory.java", "status": "added", "additions": 331, "deletions": 0, "changes": 331, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FBorderFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FBorderFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FBorderFactory.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "d2db8764c77d7253270c2d0dfdcabf9b68b38b84", "filename": "libjava/javax/swing/BoundedRangeModel.java", "status": "added", "additions": 138, "deletions": 0, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FBoundedRangeModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FBoundedRangeModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FBoundedRangeModel.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "a425db50b65818cdabbbba3101272c334c9ee2ae", "filename": "libjava/javax/swing/Box.java", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FBox.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "00d9cb438a275c9442027df84be9cb88ebf85314", "filename": "libjava/javax/swing/BoxLayout.java", "status": "added", "additions": 148, "deletions": 0, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FBoxLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FBoxLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FBoxLayout.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "2301e5194ef708f03c15144979adc72f0c0fb3ba", "filename": "libjava/javax/swing/ButtonGroup.java", "status": "added", "additions": 137, "deletions": 0, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FButtonGroup.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FButtonGroup.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FButtonGroup.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "6d6aa7abbf2eaef7c82528ecaae7cc8f023aa7d8", "filename": "libjava/javax/swing/ButtonModel.java", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FButtonModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FButtonModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FButtonModel.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "63a1ff498d7b22e0905b9d5b23aa9a158f4a2d48", "filename": "libjava/javax/swing/CellEditor.java", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FCellEditor.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "c93b919c817f20a46c1f47bf15e5b19bbe4f3f1c", "filename": "libjava/javax/swing/CellRendererPane.java", "status": "added", "additions": 215, "deletions": 0, "changes": 215, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FCellRendererPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FCellRendererPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FCellRendererPane.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "8235273306f0978417bcf9a5c394748b3ad6bcaa", "filename": "libjava/javax/swing/ComboBoxEditor.java", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FComboBoxEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FComboBoxEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FComboBoxEditor.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "f208aa953fd18fa610f34b9cda1313b50367de7a", "filename": "libjava/javax/swing/ComboBoxModel.java", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FComboBoxModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FComboBoxModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FComboBoxModel.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "d6183155c828586b614d41af18b65d9784b53149", "filename": "libjava/javax/swing/ComponentInputMap.java", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FComponentInputMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FComponentInputMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FComponentInputMap.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "9a4c6592d23deca1a1a75ae7e00b5a76042a836a", "filename": "libjava/javax/swing/DebugGraphics.java", "status": "added", "additions": 720, "deletions": 0, "changes": 720, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDebugGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDebugGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDebugGraphics.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "82ab7675890aa0fe276e3b43d1014f0cccb3ff88", "filename": "libjava/javax/swing/DefaultBoundedRangeModel.java", "status": "added", "additions": 338, "deletions": 0, "changes": 338, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultBoundedRangeModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultBoundedRangeModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultBoundedRangeModel.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "1dc0c8c97b6c3e08ccb824119fc9b94391520e7a", "filename": "libjava/javax/swing/DefaultButtonModel.java", "status": "added", "additions": 169, "deletions": 0, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultButtonModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultButtonModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultButtonModel.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "3f9442e08d130a833a0cfa9cecb182fcc97602e4", "filename": "libjava/javax/swing/DefaultCellEditor.java", "status": "added", "additions": 319, "deletions": 0, "changes": 319, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultCellEditor.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "2730314629a5fa80c962374de3c3c376c5dd0063", "filename": "libjava/javax/swing/DefaultCellRenderer.java", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultCellRenderer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultCellRenderer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultCellRenderer.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "2ceb15a6573193320cdff3300c5f4e2a9de06aed", "filename": "libjava/javax/swing/DefaultComboBoxModel.java", "status": "added", "additions": 182, "deletions": 0, "changes": 182, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultComboBoxModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultComboBoxModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultComboBoxModel.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "5581e580c4b29d384a823ea90119ab1bd14b4d29", "filename": "libjava/javax/swing/DefaultDesktopManager.java", "status": "added", "additions": 284, "deletions": 0, "changes": 284, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultDesktopManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultDesktopManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultDesktopManager.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "c2c5d610c7cef2e5fba37f75c77493523e09fe53", "filename": "libjava/javax/swing/DefaultFocusManager.java", "status": "added", "additions": 155, "deletions": 0, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultFocusManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultFocusManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultFocusManager.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "c6f8809e743a378d12fcec1166effc9306da05ba", "filename": "libjava/javax/swing/DefaultListCellRenderer.java", "status": "added", "additions": 253, "deletions": 0, "changes": 253, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultListCellRenderer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultListCellRenderer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultListCellRenderer.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "3a84163590311391d2ad8a58dce66e36c6d18de7", "filename": "libjava/javax/swing/DefaultListModel.java", "status": "added", "additions": 529, "deletions": 0, "changes": 529, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultListModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultListModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultListModel.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "64ae505fd12aaafe5adc8c10108eac7be1fa2d7c", "filename": "libjava/javax/swing/DefaultListSelectionModel.java", "status": "added", "additions": 181, "deletions": 0, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultListSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultListSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultListSelectionModel.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "50a35d9d9a59d38f689ad23282001b92b1fd0e4c", "filename": "libjava/javax/swing/DefaultSingleSelectionModel.java", "status": "added", "additions": 179, "deletions": 0, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultSingleSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDefaultSingleSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultSingleSelectionModel.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "898d79e9dbd563fba84acab631630c2cf634fbd9", "filename": "libjava/javax/swing/DesktopManager.java", "status": "added", "additions": 155, "deletions": 0, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDesktopManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FDesktopManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDesktopManager.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "c770bd0246e06094308d948a71057d07f5b0c473", "filename": "libjava/javax/swing/FocusManager.java", "status": "added", "additions": 182, "deletions": 0, "changes": 182, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FFocusManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FFocusManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FFocusManager.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "740653d1b9df3b156aa64eedc44d9d40b475723c", "filename": "libjava/javax/swing/GrayFilter.java", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FGrayFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FGrayFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FGrayFilter.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "b4839c09ab7a9bf3b22a04a6469a247c62b6e634", "filename": "libjava/javax/swing/Icon.java", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FIcon.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FIcon.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FIcon.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "ded11a13424576248de05508150b00bab0104305", "filename": "libjava/javax/swing/ImageIcon.java", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FImageIcon.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FImageIcon.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FImageIcon.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "9f81121c5a9b513bacdc4fcfdffea43458578729", "filename": "libjava/javax/swing/InputMap.java", "status": "added", "additions": 230, "deletions": 0, "changes": 230, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FInputMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FInputMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FInputMap.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "a125fe43502cf76745889d996ccc71bfd2412702", "filename": "libjava/javax/swing/InputVerifier.java", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FInputVerifier.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FInputVerifier.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FInputVerifier.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "094123a2c7b63f3011692c4a131f55f58c7cdd64", "filename": "libjava/javax/swing/JApplet.java", "status": "added", "additions": 213, "deletions": 0, "changes": 213, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJApplet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJApplet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJApplet.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "9bfe32edaa9e29a8fec205dbe669be343dc1fa13", "filename": "libjava/javax/swing/JButton.java", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJButton.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "4e6810ca22ee07e7be358010c2cc7e5afc9186ae", "filename": "libjava/javax/swing/JCheckBox.java", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJCheckBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJCheckBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJCheckBox.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "ac3b6600cbf0fd854cc959a2c04b4019e25e14f7", "filename": "libjava/javax/swing/JCheckBoxMenuItem.java", "status": "added", "additions": 241, "deletions": 0, "changes": 241, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJCheckBoxMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJCheckBoxMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJCheckBoxMenuItem.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "c9c22f18c57d8159b4f71094edc75224a5c85d10", "filename": "libjava/javax/swing/JColorChooser.java", "status": "added", "additions": 365, "deletions": 0, "changes": 365, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJColorChooser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJColorChooser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJColorChooser.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "4837e972087954ac138ccc23be75daba3cd75a6c", "filename": "libjava/javax/swing/JComboBox.java", "status": "added", "additions": 835, "deletions": 0, "changes": 835, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJComboBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJComboBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJComboBox.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "fad7b6cb2a5b723f55540e458f1a407d21bb7a6e", "filename": "libjava/javax/swing/JComponent.java", "status": "added", "additions": 1063, "deletions": 0, "changes": 1063, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJComponent.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "af979f3084a32fd85396cdce7f10d6e01f9672b4", "filename": "libjava/javax/swing/JDesktopPane.java", "status": "added", "additions": 284, "deletions": 0, "changes": 284, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJDesktopPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJDesktopPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJDesktopPane.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "61b9d40a49ba7c6628def7d39c09a9f538d40a70", "filename": "libjava/javax/swing/JDialog.java", "status": "added", "additions": 266, "deletions": 0, "changes": 266, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJDialog.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJDialog.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJDialog.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "a2db3ee9007134ba5146afc6a4a42abc574f9f35", "filename": "libjava/javax/swing/JEditorPane.java", "status": "added", "additions": 219, "deletions": 0, "changes": 219, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJEditorPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJEditorPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJEditorPane.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "cfa435c6d414813e1da8d6fe703af7fb3e6831c6", "filename": "libjava/javax/swing/JFileChooser.java", "status": "added", "additions": 968, "deletions": 0, "changes": 968, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJFileChooser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJFileChooser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJFileChooser.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "947bfab0e6ce4b89ee6ae7f77640412cd6e9cbb8", "filename": "libjava/javax/swing/JFrame.java", "status": "added", "additions": 245, "deletions": 0, "changes": 245, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJFrame.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "55162393412428424a8da4a6004e8bf5d6b0367c", "filename": "libjava/javax/swing/JInternalFrame.java", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJInternalFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJInternalFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJInternalFrame.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "a4d6fa16faf2643bc87c3938f18515cc8701ff91", "filename": "libjava/javax/swing/JLabel.java", "status": "added", "additions": 240, "deletions": 0, "changes": 240, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJLabel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJLabel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJLabel.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "ca49378dbb30e70651a5d03e0f85f59594c8b3f0", "filename": "libjava/javax/swing/JLayeredPane.java", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJLayeredPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJLayeredPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJLayeredPane.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "b12e3c3d73f173c34f0a769f54ae7c456dc1f8d3", "filename": "libjava/javax/swing/JList.java", "status": "added", "additions": 239, "deletions": 0, "changes": 239, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJList.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "0d4d86863005a1f6e00abb51d690feca6e3cae77", "filename": "libjava/javax/swing/JMenu.java", "status": "added", "additions": 756, "deletions": 0, "changes": 756, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJMenu.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "dcceb9e31222dfa5247618e9e78e650ddba21bc8", "filename": "libjava/javax/swing/JMenuBar.java", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJMenuBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJMenuBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJMenuBar.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "7d3bfef9a7a919b743880da4a8a5a933f245c862", "filename": "libjava/javax/swing/JMenuItem.java", "status": "added", "additions": 463, "deletions": 0, "changes": 463, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJMenuItem.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "71904021a9e5c72fb884bd50997fb1689c12cafd", "filename": "libjava/javax/swing/JOptionPane.java", "status": "added", "additions": 397, "deletions": 0, "changes": 397, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJOptionPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJOptionPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJOptionPane.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "b50271628b4d36b2ffb1e243296461171c5cb069", "filename": "libjava/javax/swing/JPanel.java", "status": "added", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJPanel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJPanel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJPanel.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "3e28a8fc1068c27e45cbfb15a4ee368dbc17b49e", "filename": "libjava/javax/swing/JPasswordField.java", "status": "added", "additions": 265, "deletions": 0, "changes": 265, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJPasswordField.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJPasswordField.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJPasswordField.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "a787332f17650c1db616ca42ce043366c130a0b9", "filename": "libjava/javax/swing/JPopupMenu.java", "status": "added", "additions": 667, "deletions": 0, "changes": 667, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJPopupMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJPopupMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJPopupMenu.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "6558bf83abc15e2510d8fd167c7b1f81af140349", "filename": "libjava/javax/swing/JProgressBar.java", "status": "added", "additions": 482, "deletions": 0, "changes": 482, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJProgressBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJProgressBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJProgressBar.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "7671b1d3f7b220345892364d188d3c9c1be67388", "filename": "libjava/javax/swing/JRadioButton.java", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJRadioButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJRadioButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJRadioButton.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "208b678ee5c9de07d44ad3ae3d2a8e64d0ae06bb", "filename": "libjava/javax/swing/JRadioButtonMenuItem.java", "status": "added", "additions": 221, "deletions": 0, "changes": 221, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJRadioButtonMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJRadioButtonMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJRadioButtonMenuItem.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "e7216d706a24aa9307ef8b2051ac4f465bb3d13a", "filename": "libjava/javax/swing/JRootPane.java", "status": "added", "additions": 209, "deletions": 0, "changes": 209, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJRootPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJRootPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJRootPane.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "482ed8f62bf64bb8c4e11951e22e3b19cb185f28", "filename": "libjava/javax/swing/JScrollBar.java", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJScrollBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJScrollBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJScrollBar.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "70cbd2d6ef7e2845ea779d5bda3b36cc527e8590", "filename": "libjava/javax/swing/JScrollPane.java", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJScrollPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJScrollPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJScrollPane.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "a49a77faa528f13cb7d29b1c65f715f44bdc0fd1", "filename": "libjava/javax/swing/JSeparator.java", "status": "added", "additions": 223, "deletions": 0, "changes": 223, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJSeparator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJSeparator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJSeparator.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "e0588288d6019cd84dab084a3d18c83db3ec52c1", "filename": "libjava/javax/swing/JSlider.java", "status": "added", "additions": 689, "deletions": 0, "changes": 689, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJSlider.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJSlider.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJSlider.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "f47ef7595d1bfe18f9e49c5a044accc990cea17d", "filename": "libjava/javax/swing/JSplitPane.java", "status": "added", "additions": 643, "deletions": 0, "changes": 643, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJSplitPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJSplitPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJSplitPane.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "915ec93258f4de2a56449e6afddb9340c7a97dd9", "filename": "libjava/javax/swing/JTabbedPane.java", "status": "added", "additions": 131, "deletions": 0, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJTabbedPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJTabbedPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTabbedPane.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "a30ad360adc9a73f4b3e0ea9169df43572040733", "filename": "libjava/javax/swing/JTable.java", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJTable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJTable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTable.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "806aa27dfb3b8d8b1337e7563dc561ac3a009ec8", "filename": "libjava/javax/swing/JTextField.java", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJTextField.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJTextField.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTextField.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "80e5a0e91c15c5b2af6c9a61e645cf7c0ed0667e", "filename": "libjava/javax/swing/JTextPane.java", "status": "added", "additions": 271, "deletions": 0, "changes": 271, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJTextPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJTextPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTextPane.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "d0e90cb59c846bfb1988577b99ab072ba827da23", "filename": "libjava/javax/swing/JToggleButton.java", "status": "added", "additions": 110, "deletions": 0, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJToggleButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJToggleButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJToggleButton.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "f5b18d900acb57d000f8d1e90f01dafacd71c95d", "filename": "libjava/javax/swing/JToolBar.java", "status": "added", "additions": 466, "deletions": 0, "changes": 466, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJToolBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJToolBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJToolBar.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "d245df99fe480aca638b176063656b34b721eace", "filename": "libjava/javax/swing/JToolTip.java", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJToolTip.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJToolTip.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJToolTip.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "f474c2f69ac98c77878f05da2ab9c4c46ff85612", "filename": "libjava/javax/swing/JTree.java", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJTree.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJTree.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTree.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "c4a8df6e15c711e322b5c646be1a27f84c6c43c5", "filename": "libjava/javax/swing/JViewport.java", "status": "added", "additions": 136, "deletions": 0, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJViewport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJViewport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJViewport.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "c74e33870c018bfbb03f947114465887df211974", "filename": "libjava/javax/swing/JWindow.java", "status": "added", "additions": 230, "deletions": 0, "changes": 230, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FJWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJWindow.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "b2687cdc18cc5dff7c9dbdb40e086d816522c7c9", "filename": "libjava/javax/swing/KeyStroke.java", "status": "added", "additions": 269, "deletions": 0, "changes": 269, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FKeyStroke.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FKeyStroke.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FKeyStroke.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "20cb97ef9c4654c0c6f06945c3e251d694f43607", "filename": "libjava/javax/swing/ListCellRenderer.java", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FListCellRenderer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FListCellRenderer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FListCellRenderer.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "02710272c861b22813c193ce7410d8fdad293d8d", "filename": "libjava/javax/swing/ListModel.java", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FListModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FListModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FListModel.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "e4b985b93e026c67d308b603e7fb568254663ca6", "filename": "libjava/javax/swing/ListSelectionModel.java", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FListSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FListSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FListSelectionModel.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "cd9d201dce6c737c54826813013f9a53d016dbe2", "filename": "libjava/javax/swing/LookAndFeel.java", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FLookAndFeel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FLookAndFeel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FLookAndFeel.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "24fd6e0cd07dedfb589f00fa66652e3a24374493", "filename": "libjava/javax/swing/MenuElement.java", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FMenuElement.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FMenuElement.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FMenuElement.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "4d635c0e81cc542adce86147a712112c08a87e97", "filename": "libjava/javax/swing/MenuSelectionManager.java", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FMenuSelectionManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FMenuSelectionManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FMenuSelectionManager.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "f722e9c92479450bc7cea54f97e7e4caaa9f7b0d", "filename": "libjava/javax/swing/MutableComboBoxModel.java", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FMutableComboBoxModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FMutableComboBoxModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FMutableComboBoxModel.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "a238a436a4744058c8cb7a4d9accd11beee30aad", "filename": "libjava/javax/swing/OverlayLayout.java", "status": "added", "additions": 186, "deletions": 0, "changes": 186, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FOverlayLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FOverlayLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FOverlayLayout.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "c3e01b5c0181c8727f9f06f6a8316fc713c23e74", "filename": "libjava/javax/swing/ProgressMonitor.java", "status": "added", "additions": 229, "deletions": 0, "changes": 229, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FProgressMonitor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FProgressMonitor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FProgressMonitor.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "46a36f5bb976354dd65c427b16eb7157afbe8948", "filename": "libjava/javax/swing/ProgressMonitorInputStream.java", "status": "added", "additions": 158, "deletions": 0, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FProgressMonitorInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FProgressMonitorInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FProgressMonitorInputStream.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "1c667798e521c46f22920904b039266cb1f8929c", "filename": "libjava/javax/swing/Renderer.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FRenderer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FRenderer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FRenderer.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "cce32b5a018187971810efaa0476131a207c2e4a", "filename": "libjava/javax/swing/RepaintManager.java", "status": "added", "additions": 278, "deletions": 0, "changes": 278, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FRepaintManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FRepaintManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FRepaintManager.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "983e9719a4929e2c85de53c71da9bfbc4f224e57", "filename": "libjava/javax/swing/RootPaneContainer.java", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FRootPaneContainer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FRootPaneContainer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FRootPaneContainer.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "6f9edb80de2589359c84f0dbba64217cdde17900", "filename": "libjava/javax/swing/ScrollPaneConstants.java", "status": "added", "additions": 157, "deletions": 0, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FScrollPaneConstants.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FScrollPaneConstants.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FScrollPaneConstants.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "503113e4545f3eeb9d2031cb11fb046edb1fe11f", "filename": "libjava/javax/swing/ScrollPaneLayout.java", "status": "added", "additions": 306, "deletions": 0, "changes": 306, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FScrollPaneLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FScrollPaneLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FScrollPaneLayout.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}, {"sha": "2f226f8528c77de8ca351fc1dd8e8f1a39fefdd4", "filename": "libjava/javax/swing/Scrollable.java", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FScrollable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bde45b2eb84502b62e77e46d947e46dcbd333d6/libjava%2Fjavax%2Fswing%2FScrollable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FScrollable.java?ref=7bde45b2eb84502b62e77e46d947e46dcbd333d6"}]}