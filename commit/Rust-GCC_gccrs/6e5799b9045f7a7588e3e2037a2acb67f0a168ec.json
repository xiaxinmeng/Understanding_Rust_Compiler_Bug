{"sha": "6e5799b9045f7a7588e3e2037a2acb67f0a168ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU1Nzk5YjkwNDVmN2E3NTg4ZTNlMjAzN2EyYWNiNjdmMGExNjhlYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-05-28T14:24:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-05-28T14:24:09Z"}, "message": "tree-ssa-propagate.c (add_control_edge): Print less vertical space.\n\n2014-05-28  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-propagate.c (add_control_edge): Print less vertical space.\n\t* tree-vrp.c (extract_range_from_ssa_name): Also copy VR_UNDEFINED.\n\t(vrp_visit_assignment_or_call): Print less vertical space.\n\t(vrp_visit_stmt): Likewise.\n\t(vrp_visit_phi_node): Likewise.  For a PHI argument with\n\tVR_VARYING range consider recording it as copy.\n\nFrom-SVN: r211022", "tree": {"sha": "e5127346b0caf1f86077aceeaa2b4a316f4f7d1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5127346b0caf1f86077aceeaa2b4a316f4f7d1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e5799b9045f7a7588e3e2037a2acb67f0a168ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e5799b9045f7a7588e3e2037a2acb67f0a168ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e5799b9045f7a7588e3e2037a2acb67f0a168ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e5799b9045f7a7588e3e2037a2acb67f0a168ec/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "47f9fca8551dcb661bc73e340790b68d2f971c25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47f9fca8551dcb661bc73e340790b68d2f971c25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47f9fca8551dcb661bc73e340790b68d2f971c25"}], "stats": {"total": 52, "additions": 37, "deletions": 15}, "files": [{"sha": "42aade9555c326b1a18303a94fcf436b492cc64a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e5799b9045f7a7588e3e2037a2acb67f0a168ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e5799b9045f7a7588e3e2037a2acb67f0a168ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e5799b9045f7a7588e3e2037a2acb67f0a168ec", "patch": "@@ -1,3 +1,12 @@\n+2014-05-28  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-propagate.c (add_control_edge): Print less vertical space.\n+\t* tree-vrp.c (extract_range_from_ssa_name): Also copy VR_UNDEFINED.\n+\t(vrp_visit_assignment_or_call): Print less vertical space.\n+\t(vrp_visit_stmt): Likewise.\n+\t(vrp_visit_phi_node): Likewise.  For a PHI argument with\n+\tVR_VARYING range consider recording it as copy.\n+\n 2014-05-28  Richard Biener  <rguenther@suse.de>\n \n \tRevert"}, {"sha": "1988835aa32638d97bc6697ad5e47726d1211601", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e5799b9045f7a7588e3e2037a2acb67f0a168ec/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e5799b9045f7a7588e3e2037a2acb67f0a168ec/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=6e5799b9045f7a7588e3e2037a2acb67f0a168ec", "patch": "@@ -301,7 +301,7 @@ add_control_edge (edge e)\n   cfg_blocks_add (bb);\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n-    fprintf (dump_file, \"Adding Destination of edge (%d -> %d) to worklist\\n\\n\",\n+    fprintf (dump_file, \"\\nAdding Destination of edge (%d -> %d) to worklist\\n\",\n \te->src->index, e->dest->index);\n }\n "}, {"sha": "034fa0720d2e7fafcef84bc7e0b0c6d6793a20fe", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 27, "deletions": 14, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e5799b9045f7a7588e3e2037a2acb67f0a168ec/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e5799b9045f7a7588e3e2037a2acb67f0a168ec/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=6e5799b9045f7a7588e3e2037a2acb67f0a168ec", "patch": "@@ -1810,7 +1810,7 @@ extract_range_from_ssa_name (value_range_t *vr, tree var)\n {\n   value_range_t *var_vr = get_value_range (var);\n \n-  if (var_vr->type != VR_UNDEFINED && var_vr->type != VR_VARYING)\n+  if (var_vr->type != VR_VARYING)\n     copy_value_range (vr, var_vr);\n   else\n     set_value_range (vr, VR_RANGE, var, var, NULL);\n@@ -6679,7 +6679,7 @@ vrp_visit_assignment_or_call (gimple stmt, tree *output_p)\n \t      print_generic_expr (dump_file, lhs, 0);\n \t      fprintf (dump_file, \": \");\n \t      dump_value_range (dump_file, &new_vr);\n-\t      fprintf (dump_file, \"\\n\\n\");\n+\t      fprintf (dump_file, \"\\n\");\n \t    }\n \n \t  if (new_vr.type == VR_VARYING)\n@@ -7473,7 +7473,6 @@ vrp_visit_stmt (gimple stmt, edge *taken_edge_p, tree *output_p)\n     {\n       fprintf (dump_file, \"\\nVisiting statement:\\n\");\n       print_gimple_stmt (dump_file, stmt, 0, dump_flags);\n-      fprintf (dump_file, \"\\n\");\n     }\n \n   if (!stmt_interesting_for_vrp (stmt))\n@@ -8242,7 +8241,7 @@ vrp_visit_phi_node (gimple phi)\n       if (dump_file && (dump_flags & TDF_DETAILS))\n \t{\n \t  fprintf (dump_file,\n-\t      \"\\n    Argument #%d (%d -> %d %sexecutable)\\n\",\n+\t      \"    Argument #%d (%d -> %d %sexecutable)\\n\",\n \t      (int) i, e->src->index, e->dest->index,\n \t      (e->flags & EDGE_EXECUTABLE) ? \"\" : \"not \");\n \t}\n@@ -8260,16 +8259,30 @@ vrp_visit_phi_node (gimple phi)\n \t      /* Do not allow equivalences or symbolic ranges to leak in from\n \t\t backedges.  That creates invalid equivalencies.\n \t\t See PR53465 and PR54767.  */\n-\t      if (e->flags & EDGE_DFS_BACK\n-\t\t  && (vr_arg.type == VR_RANGE\n-\t\t      || vr_arg.type == VR_ANTI_RANGE))\n+\t      if (e->flags & EDGE_DFS_BACK)\n \t\t{\n-\t\t  vr_arg.equiv = NULL;\n-\t\t  if (symbolic_range_p (&vr_arg))\n+\t\t  if (vr_arg.type == VR_RANGE\n+\t\t      || vr_arg.type == VR_ANTI_RANGE)\n \t\t    {\n-\t\t      vr_arg.type = VR_VARYING;\n-\t\t      vr_arg.min = NULL_TREE;\n-\t\t      vr_arg.max = NULL_TREE;\n+\t\t      vr_arg.equiv = NULL;\n+\t\t      if (symbolic_range_p (&vr_arg))\n+\t\t\t{\n+\t\t\t  vr_arg.type = VR_VARYING;\n+\t\t\t  vr_arg.min = NULL_TREE;\n+\t\t\t  vr_arg.max = NULL_TREE;\n+\t\t\t}\n+\t\t    }\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  /* If the non-backedge arguments range is VR_VARYING then\n+\t\t     we can still try recording a simple equivalence.  */\n+\t\t  if (vr_arg.type == VR_VARYING)\n+\t\t    {\n+\t\t      vr_arg.type = VR_RANGE;\n+\t\t      vr_arg.min = arg;\n+\t\t      vr_arg.max = arg;\n+\t\t      vr_arg.equiv = NULL;\n \t\t    }\n \t\t}\n \t    }\n@@ -8288,7 +8301,7 @@ vrp_visit_phi_node (gimple phi)\n \t    {\n \t      fprintf (dump_file, \"\\t\");\n \t      print_generic_expr (dump_file, arg, dump_flags);\n-\t      fprintf (dump_file, \"\\n\\tValue: \");\n+\t      fprintf (dump_file, \": \");\n \t      dump_value_range (dump_file, &vr_arg);\n \t      fprintf (dump_file, \"\\n\");\n \t    }\n@@ -8396,7 +8409,7 @@ vrp_visit_phi_node (gimple phi)\n \t  print_generic_expr (dump_file, lhs, 0);\n \t  fprintf (dump_file, \": \");\n \t  dump_value_range (dump_file, &vr_result);\n-\t  fprintf (dump_file, \"\\n\\n\");\n+\t  fprintf (dump_file, \"\\n\");\n \t}\n \n       return SSA_PROP_INTERESTING;"}]}