{"sha": "276e7ed0242aaa390159bb8e2e3b57f70face83a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc2ZTdlZDAyNDJhYWEzOTAxNTliYjhlMmUzYjU3ZjcwZmFjZTgzYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T15:44:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T15:44:22Z"}, "message": "[multiple changes]\n\n2011-08-04  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.ads, sem_unit.adb (Type_Without_Stream_Operation): determine\n\twhether a type lacks user-defined Read or Write operations, or has a\n\tcomponent that lacks them.\n\t* sem_attr.adb (Check_Stream_Attribute): if restriction\n\tNo_Default_Stream_Attributes is active, verify that all subcomponent\n\ttypes of the target have user-defined stream operations, and report\n\terror otherwise.\n\t* exp_ch3.adb (Stream_Operqtion_OK): use Type_Without_Stream_Operation.\n\t* exp_strm.adb: Build_Elementary_Input_Call,\n\tBuild_Elementary_Write_Call): remove checks for restriction\n\tNo_Default_Stream_Attributes, now checked in semantics.\n\n2011-08-04  Vincent Celier  <celier@adacore.com>\n\n\t* prj-conf.ads, prj-conf.adb (Do_Autoconf): If there is no --RTS\n\tswitches on the command line, look for all valid --RTS switches in the\n\tBuilder switches and for each language use the first runtime name found\n\tto invoke gprconfig.\n\t(Get_Or_Create_Configuration_File): Warn if --RTS is specified on the\n\tcommand line and there is no auto-configuration.\n\t(Runtime_Name_Set_For): New function.\n\n2011-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch7.adb (Build_Object_Declarations): Do not generate the\n\telaborate initialization expression for variable Abort when processing\n\ta package body or a declaration.\n\t(Create_Finalizer): Propagate the package context when creating the\n\texception-related variables.\n\t* exp_ch7.ads (Build_Object_Declarations): New formal parameter\n\tFor_Package along with usage comment.\n\nFrom-SVN: r177407", "tree": {"sha": "537a6ead5cdb714a61faecd070db42dccac0e0d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/537a6ead5cdb714a61faecd070db42dccac0e0d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/276e7ed0242aaa390159bb8e2e3b57f70face83a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/276e7ed0242aaa390159bb8e2e3b57f70face83a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/276e7ed0242aaa390159bb8e2e3b57f70face83a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/276e7ed0242aaa390159bb8e2e3b57f70face83a/comments", "author": null, "committer": null, "parents": [{"sha": "19172ae9356891e93e2a9bb8641a7796f4d962b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19172ae9356891e93e2a9bb8641a7796f4d962b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19172ae9356891e93e2a9bb8641a7796f4d962b0"}], "stats": {"total": 388, "additions": 290, "deletions": 98}, "files": [{"sha": "6162166601ab536cc14f913ce1d413b77a0fa810", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=276e7ed0242aaa390159bb8e2e3b57f70face83a", "patch": "@@ -1,3 +1,37 @@\n+2011-08-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.ads, sem_unit.adb (Type_Without_Stream_Operation): determine\n+\twhether a type lacks user-defined Read or Write operations, or has a\n+\tcomponent that lacks them.\n+\t* sem_attr.adb (Check_Stream_Attribute): if restriction\n+\tNo_Default_Stream_Attributes is active, verify that all subcomponent\n+\ttypes of the target have user-defined stream operations, and report\n+\terror otherwise.\n+\t* exp_ch3.adb (Stream_Operqtion_OK): use Type_Without_Stream_Operation.\n+\t* exp_strm.adb: Build_Elementary_Input_Call,\n+\tBuild_Elementary_Write_Call): remove checks for restriction\n+\tNo_Default_Stream_Attributes, now checked in semantics.\n+\n+2011-08-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-conf.ads, prj-conf.adb (Do_Autoconf): If there is no --RTS\n+\tswitches on the command line, look for all valid --RTS switches in the\n+\tBuilder switches and for each language use the first runtime name found\n+\tto invoke gprconfig.\n+\t(Get_Or_Create_Configuration_File): Warn if --RTS is specified on the\n+\tcommand line and there is no auto-configuration.\n+\t(Runtime_Name_Set_For): New function.\n+\n+2011-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch7.adb (Build_Object_Declarations): Do not generate the\n+\telaborate initialization expression for variable Abort when processing\n+\ta package body or a declaration.\n+\t(Create_Finalizer): Propagate the package context when creating the\n+\texception-related variables.\n+\t* exp_ch7.ads (Build_Object_Declarations): New formal parameter\n+\tFor_Package along with usage comment.\n+\n 2011-08-04  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gcc-interface/Makefile.in: Clean up targets."}, {"sha": "7f495ace586f4eebedb4301b8e4fa1940937f4dd", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 53, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=276e7ed0242aaa390159bb8e2e3b57f70face83a", "patch": "@@ -8964,58 +8964,6 @@ package body Exp_Ch3 is\n    is\n       Has_Predefined_Or_Specified_Stream_Attribute : Boolean := False;\n \n-      function Needs_Elementary_Stream_Operation\n-        (T : Entity_Id) return Boolean;\n-      --  AI05-0161 : if the restriction No_Default_Stream_Attributes is active\n-      --  then we can generate stream subprograms for records that have scalar\n-      --  subcomponents only if those subcomponents have user-defined stream\n-      --  subprograms. For elementary types only 'Read and 'Write are needed.\n-\n-      ---------------------------------------\n-      -- Needs_Elementary_Stream_Operation --\n-      ---------------------------------------\n-\n-      function Needs_Elementary_Stream_Operation\n-        (T : Entity_Id) return Boolean\n-      is\n-      begin\n-         if not Restriction_Active (No_Default_Stream_Attributes) then\n-            return False;\n-\n-         elsif Is_Elementary_Type (T) then\n-            return No (TSS (T, TSS_Stream_Read))\n-              or else No (TSS (T, TSS_Stream_Write));\n-\n-         elsif Is_Array_Type (T) then\n-            return Needs_Elementary_Stream_Operation (Component_Type (T));\n-\n-         elsif Is_Record_Type (T) then\n-            declare\n-               Comp : Entity_Id;\n-\n-            begin\n-               Comp := First_Component (T);\n-               while Present (Comp) loop\n-                  if Needs_Elementary_Stream_Operation (Etype (Comp)) then\n-                     return True;\n-                  end if;\n-                  Next_Component (Comp);\n-               end loop;\n-               return False;\n-            end;\n-\n-         elsif Is_Private_Type (T)\n-           and then Present (Full_View (T))\n-         then\n-            return Needs_Elementary_Stream_Operation (Full_View (T));\n-\n-         else\n-            return False;\n-         end if;\n-      end Needs_Elementary_Stream_Operation;\n-\n-   --  Start processing for Stream_Operation_OK\n-\n    begin\n       --  Special case of a limited type extension: a default implementation\n       --  of the stream attributes Read or Write exists if that attribute\n@@ -9109,7 +9057,7 @@ package body Exp_Ch3 is\n         and then not Restriction_Active (No_Dispatch)\n         and then not No_Run_Time_Mode\n         and then RTE_Available (RE_Tag)\n-        and then not Needs_Elementary_Stream_Operation (Typ)\n+        and then No (Type_Without_Stream_Operation (Typ))\n         and then RTE_Available (RE_Root_Stream_Type)\n         and then not Is_RTE (Typ, RE_Finalization_Collection);\n    end Stream_Operation_OK;"}, {"sha": "91384420a3e3c5f750ac8868606e3ff23c6e577b", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=276e7ed0242aaa390159bb8e2e3b57f70face83a", "patch": "@@ -1558,7 +1558,8 @@ package body Exp_Ch7 is\n            and then Exceptions_OK\n          then\n             Prepend_List_To (Finalizer_Decls,\n-              Build_Object_Declarations (Loc, Abort_Id, E_Id, Raised_Id));\n+              Build_Object_Declarations\n+                (Loc, Abort_Id, E_Id, Raised_Id, For_Package));\n          end if;\n \n          --  Create the body of the finalizer\n@@ -2926,10 +2927,11 @@ package body Exp_Ch7 is\n    -------------------------------\n \n    function Build_Object_Declarations\n-     (Loc       : Source_Ptr;\n-      Abort_Id  : Entity_Id;\n-      E_Id      : Entity_Id;\n-      Raised_Id : Entity_Id) return List_Id\n+     (Loc         : Source_Ptr;\n+      Abort_Id    : Entity_Id;\n+      E_Id        : Entity_Id;\n+      Raised_Id   : Entity_Id;\n+      For_Package : Boolean := False) return List_Id\n    is\n       A_Expr : Node_Id;\n       E_Decl : Node_Id;\n@@ -2956,8 +2958,12 @@ package body Exp_Ch7 is\n       --  does not include routine Raise_From_Controlled_Operation which is the\n       --  the sole user of flag Abort.\n \n+      --  This is not needed for library-level finalizers as they are called\n+      --  by the environment task and cannot be aborted.\n+\n       if Abort_Allowed\n         and then VM_Target = No_VM\n+        and then not For_Package\n       then\n          declare\n             Temp_Id : constant Entity_Id := Make_Temporary (Loc, 'E');"}, {"sha": "68e5e7538d949b8981dcd8eb6456ce55e9a70478", "filename": "gcc/ada/exp_ch7.ads", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2Fexp_ch7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2Fexp_ch7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.ads?ref=276e7ed0242aaa390159bb8e2e3b57f70face83a", "patch": "@@ -58,10 +58,11 @@ package Exp_Ch7 is\n    --  the controlling operations.\n \n    function Build_Object_Declarations\n-     (Loc       : Source_Ptr;\n-      Abort_Id  : Entity_Id;\n-      E_Id      : Entity_Id;\n-      Raised_Id : Entity_Id) return List_Id;\n+     (Loc         : Source_Ptr;\n+      Abort_Id    : Entity_Id;\n+      E_Id        : Entity_Id;\n+      Raised_Id   : Entity_Id;\n+      For_Package : Boolean := False) return List_Id;\n    --  Subsidiary to Make_Deep_Array_Body and Make_Deep_Record_Body. Return a\n    --  list containing the object declarations of boolean flag Abort_Id, the\n    --  exception occurrence E_Id and boolean flag Raised_Id.\n@@ -70,7 +71,7 @@ package Exp_Ch7 is\n    --                  Exception_Identity (Get_Current_Excep.all) =\n    --                    Standard'Abort_Signal'Identity;\n    --      <or>\n-   --    Abort_Id  : constant Boolean := False;  --  no abort\n+   --    Abort_Id  : constant Boolean := False;  --  no abort or For_Package\n    --\n    --    E_Id      : Exception_Occurrence;\n    --    Raised_Id : Boolean := False;"}, {"sha": "35fcb64052984134ebf685c1c558397952ee6a11", "filename": "gcc/ada/exp_strm.adb", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2Fexp_strm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2Fexp_strm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.adb?ref=276e7ed0242aaa390159bb8e2e3b57f70face83a", "patch": "@@ -25,14 +25,11 @@\n \n with Atree;    use Atree;\n with Einfo;    use Einfo;\n-with Errout;   use Errout;\n with Exp_Util; use Exp_Util;\n with Namet;    use Namet;\n with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n with Opt;      use Opt;\n-with Restrict; use Restrict;\n-with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem_Aux;  use Sem_Aux;\n with Sem_Util; use Sem_Util;\n@@ -475,18 +472,6 @@ package body Exp_Strm is\n       Lib_RE  : RE_Id;\n \n    begin\n-      Check_Restriction (No_Default_Stream_Attributes, N);\n-\n-      --  Are we sure following messages are issued in -gnatc mode ???\n-\n-      if Restriction_Active (No_Default_Stream_Attributes) then\n-         Error_Msg_NE\n-           (\"missing user-defined Input for type&\", N, Etype (Targ));\n-         if Nkind (Targ) = N_Selected_Component then\n-            Error_Msg_NE\n-              (\"\\which is a component of type&\", N, Etype (Prefix (Targ)));\n-         end if;\n-      end if;\n \n       --  Check first for Boolean and Character. These are enumeration types,\n       --  but we treat them specially, since they may require special handling\n@@ -696,16 +681,6 @@ package body Exp_Strm is\n       Libent  : Entity_Id;\n \n    begin\n-      Check_Restriction (No_Default_Stream_Attributes, N);\n-\n-      if Restriction_Active (No_Default_Stream_Attributes) then\n-         Error_Msg_NE\n-           (\"missing user-defined Write for type&\", N, Etype (Item));\n-         if Nkind (Item) = N_Selected_Component then\n-            Error_Msg_NE\n-              (\"\\which is a component of type&\", N, Etype (Prefix (Item)));\n-         end if;\n-      end if;\n \n       --  Compute the size of the stream element. This is either the size of\n       --  the first subtype or if given the size of the Stream_Size attribute."}, {"sha": "2df66930277dedb58b7ef914645612678a280eaf", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 125, "deletions": 8, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=276e7ed0242aaa390159bb8e2e3b57f70face83a", "patch": "@@ -921,10 +921,10 @@ package body Prj.Conf is\n          end loop;\n \n          declare\n-            Obj_Dir  : constant String := Name_Buffer (1 .. Name_Len);\n-            Switches : Argument_List_Access := Get_Config_Switches;\n-            Args     : Argument_List (1 .. 5);\n-            Arg_Last : Positive;\n+            Obj_Dir         : constant String := Name_Buffer (1 .. Name_Len);\n+            Config_Switches : Argument_List_Access;\n+            Args            : Argument_List (1 .. 5);\n+            Arg_Last         : Positive;\n \n             Obj_Dir_Exists : Boolean := True;\n \n@@ -968,6 +968,104 @@ package body Prj.Conf is\n                end case;\n             end if;\n \n+            --  If no switch --RTS have been specified on the command line,\n+            --  look for --RTS switches in the Builder switches.\n+\n+            if RTS_Languages.Get_First = No_Name then\n+               declare\n+                  Builder : constant Package_Id :=\n+                    Value_Of (Name_Builder, Project.Decl.Packages, Shared);\n+                  Switch_Array_Id : Array_Element_Id;\n+                  Switch_Array : Array_Element;\n+\n+                  Switch_List   : String_List_Id := Nil_String;\n+                  Switch : String_Element;\n+\n+                  Lang      : Name_Id;\n+                  Lang_Last : Positive;\n+\n+               begin\n+                  if Builder /= No_Package then\n+                     Switch_Array_Id :=\n+                       Value_Of\n+                         (Name      => Name_Switches,\n+                          In_Arrays =>\n+                            Shared.Packages.Table (Builder).Decl.Arrays,\n+                          Shared    => Shared);\n+\n+                     while Switch_Array_Id /= No_Array_Element loop\n+                        Switch_Array :=\n+                          Shared.Array_Elements.Table (Switch_Array_Id);\n+                           Switch_List := Switch_Array.Value.Values;\n+\n+                        while Switch_List /= Nil_String loop\n+                           Switch :=\n+                             Shared.String_Elements.Table (Switch_List);\n+\n+                           if Switch.Value /= No_Name then\n+                              Get_Name_String (Switch.Value);\n+\n+                              if Name_Len >= 7 and then\n+                                Name_Buffer (1 .. 5) = \"--RTS\"\n+                              then\n+                                 if Name_Buffer (6) = '=' then\n+                                    if not Runtime_Name_Set_For (Name_Ada) then\n+                                       Set_Runtime_For\n+                                         (Name_Ada,\n+                                          Name_Buffer (7 .. Name_Len));\n+                                    end if;\n+\n+                                 elsif Name_Len > 7 and then\n+                                   Name_Buffer (6) = ':' and then\n+                                   Name_Buffer (7) /= '='\n+                                 then\n+                                    Lang_Last := 7;\n+                                    while Lang_Last < Name_Len and then\n+                                      Name_Buffer (Lang_Last + 1) /= '='\n+                                    loop\n+                                       Lang_Last := Lang_Last + 1;\n+                                    end loop;\n+\n+                                    if\n+                                      Name_Buffer (Lang_Last + 1) = '='\n+                                    then\n+                                       declare\n+                                          RTS : constant String :=\n+                                            Name_Buffer (Lang_Last + 2 ..\n+                                                           Name_Len);\n+                                       begin\n+                                          Name_Buffer (1 .. Lang_Last - 6)\n+                                            := Name_Buffer (7 .. Lang_Last);\n+                                          Name_Len := Lang_Last - 6;\n+                                          To_Lower\n+                                            (Name_Buffer (1 .. Name_Len));\n+                                          Lang := Name_Find;\n+\n+                                          if\n+                                          not Runtime_Name_Set_For (Lang)\n+                                          then\n+                                             Set_Runtime_For (Lang, RTS);\n+                                          end if;\n+                                       end;\n+                                    end if;\n+                                 end if;\n+                              end if;\n+                           end if;\n+\n+                           Switch_List := Switch.Next;\n+                        end loop;\n+\n+                        Switch_Array_Id := Switch_Array.Next;\n+                     end loop;\n+                  end if;\n+               end;\n+            end if;\n+\n+            --  Get the config switches. This should be done only now, as some\n+            --  runtimes may have been found if the Builder switches.\n+\n+            Config_Switches := Get_Config_Switches;\n+\n             --  Invoke gprconfig\n \n             Args (1) := new String'(\"--batch\");\n@@ -1041,9 +1139,9 @@ package body Prj.Conf is\n                   Write_Str (Args (J).all);\n                end loop;\n \n-               for J in Switches'Range loop\n+               for J in Config_Switches'Range loop\n                   Write_Char (' ');\n-                  Write_Str (Switches (J).all);\n+                  Write_Str (Config_Switches (J).all);\n                end loop;\n \n                Write_Eol;\n@@ -1061,10 +1159,11 @@ package body Prj.Conf is\n                end if;\n             end if;\n \n-            Spawn (Gprconfig_Path.all, Args (1 .. Arg_Last) & Switches.all,\n+            Spawn (Gprconfig_Path.all, Args (1 .. Arg_Last) &\n+                   Config_Switches.all,\n                    Success);\n \n-            Free (Switches);\n+            Free (Config_Switches);\n \n             Config_File_Path := Locate_Config_File (Args (3).all);\n \n@@ -1122,6 +1221,15 @@ package body Prj.Conf is\n \n             Do_Autoconf;\n          end if;\n+\n+      --  If the config file is not auto-generated, warn if there is any --RTS\n+      --  switch on the command line.\n+\n+      elsif RTS_Languages.Get_First /= No_Name and then\n+        Opt.Warning_Mode /= Opt.Suppress\n+      then\n+         Write_Line\n+           (\"warning: --RTS is taken into account only in auto-configuration\");\n       end if;\n \n       --  Parse the configuration file\n@@ -1405,6 +1513,15 @@ package body Prj.Conf is\n       end if;\n    end Runtime_Name_For;\n \n+   --------------------------\n+   -- Runtime_Name_Set_For --\n+   --------------------------\n+\n+   function Runtime_Name_Set_For (Language : Name_Id) return Boolean is\n+   begin\n+      return RTS_Languages.Get (Language) /= No_Name;\n+   end Runtime_Name_Set_For;\n+\n    ---------------------\n    -- Set_Runtime_For --\n    ---------------------"}, {"sha": "977344d455e6854db32c1bf06a17713495984102", "filename": "gcc/ada/prj-conf.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2Fprj-conf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2Fprj-conf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.ads?ref=276e7ed0242aaa390159bb8e2e3b57f70face83a", "patch": "@@ -186,4 +186,7 @@ package Prj.Conf is\n    --  Returns the runtime name for a language. Returns an empty string if no\n    --  runtime was specified for the language using option --RTS.\n \n+   function Runtime_Name_Set_For (Language : Name_Id) return Boolean;\n+   --  Returns True only of Set_Runtime_For has been called for the Language\n+\n end Prj.Conf;"}, {"sha": "0f00423a85039c1e9cf5d46a7b9474785a638b16", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=276e7ed0242aaa390159bb8e2e3b57f70face83a", "patch": "@@ -1633,6 +1633,39 @@ package body Sem_Attr is\n             Check_Restriction (No_Streams, P);\n          end if;\n \n+         --  AI05-0057: if restriction No_Default_Stream_Attributes is active,\n+         --  it is illegal to use a predefined elementary type stream attribute\n+         --  either by itself, or more importantly as part of the attribute\n+         --  subprogram for a composite type.\n+\n+         if Restriction_Active (No_Default_Stream_Attributes) then\n+            declare\n+               T : Entity_Id;\n+            begin\n+               if Nam = TSS_Stream_Input\n+                 or else Nam = TSS_Stream_Read\n+               then\n+                  T :=\n+                    Type_Without_Stream_Operation (P_Type, TSS_Stream_Read);\n+               else\n+                  T :=\n+                    Type_Without_Stream_Operation (P_Type, TSS_Stream_Write);\n+               end if;\n+\n+               if Present (T) then\n+                  Check_Restriction (No_Default_Stream_Attributes, N);\n+\n+                  Error_Msg_NE\n+                    (\"missing user-defined Stream Read or Write for type&\",\n+                      N, T);\n+                  if not Is_Elementary_Type (P_Type) then\n+                     Error_Msg_NE\n+                     (\"\\which is a component of type&\", N, P_Type);\n+                  end if;\n+               end if;\n+            end;\n+         end if;\n+\n          --  Check special case of Exception_Id and Exception_Occurrence which\n          --  are not allowed for restriction No_Exception_Registration.\n "}, {"sha": "47a8c35f68feb7db20f4cdb5a134edee3078609d", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 66, "deletions": 2, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=276e7ed0242aaa390159bb8e2e3b57f70face83a", "patch": "@@ -31,7 +31,6 @@ with Errout;   use Errout;\n with Elists;   use Elists;\n with Exp_Ch11; use Exp_Ch11;\n with Exp_Disp; use Exp_Disp;\n-with Exp_Tss;  use Exp_Tss;\n with Exp_Util; use Exp_Util;\n with Fname;    use Fname;\n with Freeze;   use Freeze;\n@@ -10784,7 +10783,9 @@ package body Sem_Util is\n \n          elsif Is_Record_Type (Btype) then\n             Component := First_Entity (Btype);\n-            while Present (Component) loop\n+            while Present (Component)\n+              and then Comes_From_Source (Component)\n+            loop\n \n                --  Skip anonymous types generated by constrained components\n \n@@ -12229,6 +12230,69 @@ package body Sem_Util is\n       return Scope_Depth (Enclosing_Dynamic_Scope (Btyp));\n    end Type_Access_Level;\n \n+   ------------------------------------\n+   -- Type_Without_Stream_Operation  --\n+   ------------------------------------\n+\n+   function Type_Without_Stream_Operation\n+     (T : Entity_Id; Op : TSS_Name_Type := TSS_Null) return Entity_Id\n+   is\n+      BT : constant Entity_Id := Base_Type (T);\n+      Op_Missing : Boolean;\n+   begin\n+      if not Restriction_Active (No_Default_Stream_Attributes) then\n+         return Empty;\n+      end if;\n+\n+      if Is_Elementary_Type (T) then\n+         if Op = TSS_Null then\n+            Op_Missing :=\n+            No (TSS (BT, TSS_Stream_Read))\n+              or else No (TSS (BT, TSS_Stream_Write));\n+\n+         else\n+            Op_Missing := No (TSS (BT, Op));\n+         end if;\n+\n+         if Op_Missing then\n+            return T;\n+\n+         else\n+            return Empty;\n+         end if;\n+\n+      elsif Is_Array_Type (T) then\n+         return Type_Without_Stream_Operation (Component_Type (T), Op);\n+\n+      elsif Is_Record_Type (T) then\n+         declare\n+            Comp  : Entity_Id;\n+            C_Typ : Entity_Id;\n+\n+         begin\n+            Comp := First_Component (T);\n+            while Present (Comp) loop\n+               C_Typ := Type_Without_Stream_Operation (Etype (Comp), Op);\n+               if Present (C_Typ) then\n+                  return C_Typ;\n+               end if;\n+\n+               Next_Component (Comp);\n+            end loop;\n+\n+            return Empty;\n+         end;\n+\n+      elsif Is_Private_Type (T)\n+        and then Present (Full_View (T))\n+      then\n+         return Type_Without_Stream_Operation (Full_View (T), Op);\n+\n+      else\n+         return Empty;\n+      end if;\n+   end Type_Without_Stream_Operation;\n+\n    ----------------------------\n    -- Unique_Defining_Entity --\n    ----------------------------"}, {"sha": "ae04cc44e4cccf4a96a3d6c3d009e8459df6084a", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e7ed0242aaa390159bb8e2e3b57f70face83a/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=276e7ed0242aaa390159bb8e2e3b57f70face83a", "patch": "@@ -26,6 +26,7 @@\n --  Package containing utility procedures used throughout the semantics\n \n with Einfo;  use Einfo;\n+with Exp_Tss; use Exp_Tss;\n with Namet;  use Namet;\n with Nmake;  use Nmake;\n with Snames; use Snames;\n@@ -1377,6 +1378,16 @@ package Sem_Util is\n    function Type_Access_Level (Typ : Entity_Id) return Uint;\n    --  Return the accessibility level of Typ\n \n+   function Type_Without_Stream_Operation\n+     (T : Entity_Id; Op : TSS_Name_Type := TSS_Null) return Entity_Id;\n+   --  AI05-0161 : if the restriction No_Default_Stream_Attributes is active\n+   --  then we cannot generate stream subprograms for composite types with\n+   --  elementary subcomponents that lack user-defined stream subprograms.\n+   --  This predicate determines whether a type has such an elementary\n+   --  subcomponent. If Op is TSS_Null, a type that lacks either Read or Write\n+   --  prevents the construction of a composite stream operation. If Op is\n+   --  specified we check only for the given stream operation.\n+\n    function Unique_Defining_Entity (N : Node_Id) return Entity_Id;\n    --  Return the entity which represents declaration N, so that matching\n    --  declaration and body have the same entity."}]}