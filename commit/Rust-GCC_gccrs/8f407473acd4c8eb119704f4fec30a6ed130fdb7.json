{"sha": "8f407473acd4c8eb119704f4fec30a6ed130fdb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY0MDc0NzNhY2Q0YzhlYjExOTcwNGY0ZmVjMzBhNmVkMTMwZmRiNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-10-17T15:17:32Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-10-17T15:17:32Z"}, "message": "re PR libstdc++/26020 (std::advance() isn't stable for floating point numbers)\n\n2006-10-17  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/26020\n\t* include/bits/stl_iterator_base_funcs.h (advance): Convert\n\tdistance parameter to iterator_traits<>::difference_type.\n\t* testsuite/24_iterators/26020.cc: New.\n\nFrom-SVN: r117827", "tree": {"sha": "f519470139721610686b4f76c385abe5dc074060", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f519470139721610686b4f76c385abe5dc074060"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f407473acd4c8eb119704f4fec30a6ed130fdb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f407473acd4c8eb119704f4fec30a6ed130fdb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f407473acd4c8eb119704f4fec30a6ed130fdb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f407473acd4c8eb119704f4fec30a6ed130fdb7/comments", "author": null, "committer": null, "parents": [{"sha": "cd8dc1f9b90e8a7f8e645a29549696f399d6e9af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd8dc1f9b90e8a7f8e645a29549696f399d6e9af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd8dc1f9b90e8a7f8e645a29549696f399d6e9af"}], "stats": {"total": 60, "additions": 57, "deletions": 3}, "files": [{"sha": "ac94e35f9d81f5e014aa838f4d1b8c03ae62ea14", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f407473acd4c8eb119704f4fec30a6ed130fdb7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f407473acd4c8eb119704f4fec30a6ed130fdb7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8f407473acd4c8eb119704f4fec30a6ed130fdb7", "patch": "@@ -1,3 +1,10 @@\n+2006-10-17  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/26020\n+\t* include/bits/stl_iterator_base_funcs.h (advance): Convert\n+\tdistance parameter to iterator_traits<>::difference_type.\n+\t* testsuite/24_iterators/26020.cc: New.\n+\n 2006-10-17  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/tr1/random.tcc: Fixup long line."}, {"sha": "79fb6675fa25b4ec071bbafd3b438e1b2a53d7da", "filename": "libstdc++-v3/include/bits/stl_iterator_base_funcs.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f407473acd4c8eb119704f4fec30a6ed130fdb7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_funcs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f407473acd4c8eb119704f4fec30a6ed130fdb7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_funcs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_funcs.h?ref=8f407473acd4c8eb119704f4fec30a6ed130fdb7", "patch": "@@ -1,6 +1,7 @@\n // Functions used by iterators -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -131,7 +132,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   template<typename _BidirectionalIterator, typename _Distance>\n     inline void\n     __advance(_BidirectionalIterator& __i, _Distance __n,\n-              bidirectional_iterator_tag)\n+\t      bidirectional_iterator_tag)\n     {\n       // concept requirements\n       __glibcxx_function_requires(_BidirectionalIteratorConcept<\n@@ -172,7 +173,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     advance(_InputIterator& __i, _Distance __n)\n     {\n       // concept requirements -- taken care of in __advance\n-      std::__advance(__i, __n, std::__iterator_category(__i));\n+      typename iterator_traits<_InputIterator>::difference_type __d = __n;\n+      std::__advance(__i, __d, std::__iterator_category(__i));\n     }\n \n _GLIBCXX_END_NAMESPACE"}, {"sha": "80c4e715d1b76e94e299d5522fed163e83061378", "filename": "libstdc++-v3/testsuite/24_iterators/26020.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f407473acd4c8eb119704f4fec30a6ed130fdb7/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2F26020.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f407473acd4c8eb119704f4fec30a6ed130fdb7/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2F26020.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2F26020.cc?ref=8f407473acd4c8eb119704f4fec30a6ed130fdb7", "patch": "@@ -0,0 +1,45 @@\n+// Copyright (C) 2006 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 24.3.4 Iterator operations\n+\n+#include <iterator>\n+#include <list>\n+#include <testsuite_hooks.h>\n+\n+//libstdc++/26020\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;  \n+\n+  list<int> ll;\n+  ll.push_back(1);\n+\n+  list<int>::iterator it(ll.begin());\n+\n+  advance(it, 0.5);\n+\n+  VERIFY( it == ll.begin() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}