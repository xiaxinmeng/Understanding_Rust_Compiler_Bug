{"sha": "a0e02041176af1cbba5b0fb0ca030c8a86d96627", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBlMDIwNDExNzZhZjFjYmJhNWIwZmIwY2EwMzBjOGE4NmQ5NjYyNw==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gmail.com", "date": "2008-12-21T22:27:18Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2008-12-21T22:27:18Z"}, "message": "Index...\n\nIndex: config/ChangeLog\n+2008-12-21  Andrew Pinski  <pinskia@gmail.com>\n+\n+       PR target/38300\n+       * unwind_ipinfo.m4: Darwin before 9 does not have _Unwind_GetIPInfo.\n+\nIndex: gcc/ChangeLog\n+2008-12-21  Andrew Pinski  <pinskia@gmail.com>\n+\n+       PR target/38300\n+       * configure: Regenerate.\nIndex: libstdc++-v3/ChangeLog\n+2008-12-21  Andrew Pinski  <pinskia@gmail.com>\n+\n+       PR target/38300\n+       * configure: Regenerate.\n+\nIndex: libjava/ChangeLog\n+2008-12-21  Andrew Pinski  <pinskia@gmail.com>\n+\n+       PR target/38300\n+       * configure: Regenerate.\n\nFrom-SVN: r142877", "tree": {"sha": "b149ae7e459133e8a30ad11564f10f145ba80cba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b149ae7e459133e8a30ad11564f10f145ba80cba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0e02041176af1cbba5b0fb0ca030c8a86d96627", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0e02041176af1cbba5b0fb0ca030c8a86d96627", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0e02041176af1cbba5b0fb0ca030c8a86d96627", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0e02041176af1cbba5b0fb0ca030c8a86d96627/comments", "author": {"login": "pinskia", "id": 8496799, "node_id": "MDQ6VXNlcjg0OTY3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8496799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pinskia", "html_url": "https://github.com/pinskia", "followers_url": "https://api.github.com/users/pinskia/followers", "following_url": "https://api.github.com/users/pinskia/following{/other_user}", "gists_url": "https://api.github.com/users/pinskia/gists{/gist_id}", "starred_url": "https://api.github.com/users/pinskia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pinskia/subscriptions", "organizations_url": "https://api.github.com/users/pinskia/orgs", "repos_url": "https://api.github.com/users/pinskia/repos", "events_url": "https://api.github.com/users/pinskia/events{/privacy}", "received_events_url": "https://api.github.com/users/pinskia/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "19ce9ba0a2dd343020f9b7c2f32da0071b1f8b24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19ce9ba0a2dd343020f9b7c2f32da0071b1f8b24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19ce9ba0a2dd343020f9b7c2f32da0071b1f8b24"}], "stats": {"total": 80, "additions": 62, "deletions": 18}, "files": [{"sha": "c57ec35e6a0bfd02dd80824f7a5bfa4765bfa52c", "filename": "config/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e02041176af1cbba5b0fb0ca030c8a86d96627/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e02041176af1cbba5b0fb0ca030c8a86d96627/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=a0e02041176af1cbba5b0fb0ca030c8a86d96627", "patch": "@@ -1,3 +1,8 @@\n+2008-12-21  Andrew Pinski  <pinskia@gmail.com>\n+\n+\tPR target/38300\n+\t* unwind_ipinfo.m4: Darwin before 9 does not have _Unwind_GetIPInfo.\n+\n 2008-11-21  Kai Tietz  <kai.tietz@onevision.com>\n \n \tFix PR/25502"}, {"sha": "efc79903b771aaca7961217c032acb4a31cc28f2", "filename": "config/unwind_ipinfo.m4", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e02041176af1cbba5b0fb0ca030c8a86d96627/config%2Funwind_ipinfo.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e02041176af1cbba5b0fb0ca030c8a86d96627/config%2Funwind_ipinfo.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Funwind_ipinfo.m4?ref=a0e02041176af1cbba5b0fb0ca030c8a86d96627", "patch": "@@ -22,7 +22,13 @@ AC_DEFUN([GCC_CHECK_UNWIND_GETIPINFO], [\n       *) have_unwind_getipinfo=yes ;;\n     esac\n   else\n-     have_unwind_getipinfo=yes\n+    # Darwin before version 9 does not have _Unwind_GetIPInfo.\n+    changequote(,)\n+    case ${target} in\n+      *-*-darwin[3-8]|*-*-darwin[3-8].*) have_unwind_getipinfo=no ;;\n+      *) have_unwind_getipinfo=yes ;;\n+    esac\n+    changequote([,])\n   fi\n \n   if test x$have_unwind_getipinfo = xyes; then"}, {"sha": "2fefb8075f35afd3bb395d0756172dfdfdb84624", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e02041176af1cbba5b0fb0ca030c8a86d96627/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e02041176af1cbba5b0fb0ca030c8a86d96627/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0e02041176af1cbba5b0fb0ca030c8a86d96627", "patch": "@@ -1,3 +1,8 @@\n+2008-12-21  Andrew Pinski  <pinskia@gmail.com>\n+\n+\tPR target/38300\n+\t* configure: Regenerate.\n+\n 2008-12-21  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/mips/mips-dsp.md (mips_lbux): Turn into a define_expand,"}, {"sha": "c729da639e914323d0ef18503ddf9467eb47a3af", "filename": "gcc/configure", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e02041176af1cbba5b0fb0ca030c8a86d96627/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e02041176af1cbba5b0fb0ca030c8a86d96627/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=a0e02041176af1cbba5b0fb0ca030c8a86d96627", "patch": "@@ -13105,7 +13105,13 @@ fi;\n       *) have_unwind_getipinfo=yes ;;\n     esac\n   else\n-     have_unwind_getipinfo=yes\n+    # Darwin before version 9 does not have _Unwind_GetIPInfo.\n+\n+    case ${target} in\n+      *-*-darwin[3-8]|*-*-darwin[3-8].*) have_unwind_getipinfo=no ;;\n+      *) have_unwind_getipinfo=yes ;;\n+    esac\n+\n   fi\n \n   if test x$have_unwind_getipinfo = xyes; then\n@@ -14503,13 +14509,13 @@ if test \"${lt_cv_nm_interface+set}\" = set; then\n else\n   lt_cv_nm_interface=\"BSD nm\"\n   echo \"int some_variable = 0;\" > conftest.$ac_ext\n-  (eval echo \"\\\"\\$as_me:14506: $ac_compile\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:14512: $ac_compile\\\"\" >&5)\n   (eval \"$ac_compile\" 2>conftest.err)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:14509: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:14515: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n   (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:14512: output\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:14518: output\\\"\" >&5)\n   cat conftest.out >&5\n   if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n     lt_cv_nm_interface=\"MS dumpbin\"\n@@ -15666,7 +15672,7 @@ ia64-*-hpux*)\n   ;;\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 15669 \"configure\"' > conftest.$ac_ext\n+  echo '#line 15675 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -16965,11 +16971,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:16968: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:16974: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:16972: \\$? = $ac_status\" >&5\n+   echo \"$as_me:16978: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -17304,11 +17310,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:17307: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:17313: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:17311: \\$? = $ac_status\" >&5\n+   echo \"$as_me:17317: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -17409,11 +17415,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:17412: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:17418: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:17416: \\$? = $ac_status\" >&5\n+   echo \"$as_me:17422: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -17464,11 +17470,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:17467: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:17473: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:17471: \\$? = $ac_status\" >&5\n+   echo \"$as_me:17477: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -20276,7 +20282,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 20279 \"configure\"\n+#line 20285 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -20372,7 +20378,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 20375 \"configure\"\n+#line 20381 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "451c87162619aadfe438f3bc71dad12e050b7e37", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e02041176af1cbba5b0fb0ca030c8a86d96627/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e02041176af1cbba5b0fb0ca030c8a86d96627/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a0e02041176af1cbba5b0fb0ca030c8a86d96627", "patch": "@@ -1,3 +1,8 @@\n+2008-12-21  Andrew Pinski  <pinskia@gmail.com>\n+\n+\tPR target/38300\n+\t* configure: Regenerate.\n+\n 2008-12-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libgcj/38396"}, {"sha": "ec7dc2c02ff70abde38bd500d54af4f54d060198", "filename": "libjava/configure", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e02041176af1cbba5b0fb0ca030c8a86d96627/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e02041176af1cbba5b0fb0ca030c8a86d96627/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=a0e02041176af1cbba5b0fb0ca030c8a86d96627", "patch": "@@ -27915,7 +27915,13 @@ fi;\n       *) have_unwind_getipinfo=yes ;;\n     esac\n   else\n-     have_unwind_getipinfo=yes\n+    # Darwin before version 9 does not have _Unwind_GetIPInfo.\n+\n+    case ${target} in\n+      *-*-darwin[3-8]|*-*-darwin[3-8].*) have_unwind_getipinfo=no ;;\n+      *) have_unwind_getipinfo=yes ;;\n+    esac\n+\n   fi\n \n   if test x$have_unwind_getipinfo = xyes; then"}, {"sha": "2bc1097412a656ef14d0d6600cc078edd66f1197", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e02041176af1cbba5b0fb0ca030c8a86d96627/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e02041176af1cbba5b0fb0ca030c8a86d96627/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a0e02041176af1cbba5b0fb0ca030c8a86d96627", "patch": "@@ -1,3 +1,8 @@\n+2008-12-21  Andrew Pinski  <pinskia@gmail.com>\n+\n+\tPR target/38300\n+\t* configure: Regenerate.\n+\n 2008-12-21  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/38596"}, {"sha": "549acb4365749ba72985b8ad70116a32c8f72ea1", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0e02041176af1cbba5b0fb0ca030c8a86d96627/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0e02041176af1cbba5b0fb0ca030c8a86d96627/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=a0e02041176af1cbba5b0fb0ca030c8a86d96627", "patch": "@@ -104367,7 +104367,13 @@ fi;\n       *) have_unwind_getipinfo=yes ;;\n     esac\n   else\n-     have_unwind_getipinfo=yes\n+    # Darwin before version 9 does not have _Unwind_GetIPInfo.\n+\n+    case ${target} in\n+      *-*-darwin[3-8]|*-*-darwin[3-8].*) have_unwind_getipinfo=no ;;\n+      *) have_unwind_getipinfo=yes ;;\n+    esac\n+\n   fi\n \n   if test x$have_unwind_getipinfo = xyes; then"}]}