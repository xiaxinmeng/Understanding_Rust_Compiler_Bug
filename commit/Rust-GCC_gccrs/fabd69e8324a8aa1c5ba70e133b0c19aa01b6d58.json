{"sha": "fabd69e8324a8aa1c5ba70e133b0c19aa01b6d58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFiZDY5ZTgzMjRhOGFhMWM1YmE3MGUxMzNiMGMxOWFhMDFiNmQ1OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-14T01:21:45Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-14T01:21:45Z"}, "message": "(move_deaths): When have a multi-reg hard register, if don't find a\nnote, then recur for each individual hard register.\n\nFrom-SVN: r10225", "tree": {"sha": "7557c68fc68396a3c000ada17dfb94f0ff009c42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7557c68fc68396a3c000ada17dfb94f0ff009c42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fabd69e8324a8aa1c5ba70e133b0c19aa01b6d58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fabd69e8324a8aa1c5ba70e133b0c19aa01b6d58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fabd69e8324a8aa1c5ba70e133b0c19aa01b6d58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fabd69e8324a8aa1c5ba70e133b0c19aa01b6d58/comments", "author": null, "committer": null, "parents": [{"sha": "1b4a2731be82eb65e9dffd50459555be9fa7b40e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b4a2731be82eb65e9dffd50459555be9fa7b40e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b4a2731be82eb65e9dffd50459555be9fa7b40e"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "13eea3f8027f42fd3571d28af399e39f2fbc1318", "filename": "gcc/combine.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabd69e8324a8aa1c5ba70e133b0c19aa01b6d58/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabd69e8324a8aa1c5ba70e133b0c19aa01b6d58/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=fabd69e8324a8aa1c5ba70e133b0c19aa01b6d58", "patch": "@@ -10407,6 +10407,21 @@ move_deaths (x, from_cuid, to_insn, pnotes)\n \t\t\t       gen_rtx (REG, reg_raw_mode[i], i),\n \t\t\t       REG_NOTES (where_dead));\n \t    }\n+\t  /* If we didn't find any note, and we have a multi-reg hard\n+\t     register, then to be safe we must check for REG_DEAD notes\n+\t     for each register other than the first.  They could have\n+\t     their own REG_DEAD notes lying around.  */\n+\t  else if (note == 0 && regno < FIRST_PSEUDO_REGISTER\n+\t\t   && HARD_REGNO_NREGS (regno, GET_MODE (x)) > 1)\n+\t    {\n+\t      int ourend = regno + HARD_REGNO_NREGS (regno, GET_MODE (x));\n+\t      int i;\n+\t      rtx oldnotes = 0;\n+\n+\t      for (i = regno + 1; i < ourend; i++)\n+\t\tmove_deaths (gen_rtx (REG, reg_raw_mode[i], i),\n+\t\t\t     from_cuid, to_insn, &oldnotes);\n+\t    }\n \n \t  if (note != 0 && GET_MODE (XEXP (note, 0)) == GET_MODE (x))\n \t    {"}]}