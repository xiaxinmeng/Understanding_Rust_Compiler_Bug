{"sha": "ae16ec5f2c93d51d755ea453b4c4efa5e3557e97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUxNmVjNWYyYzkzZDUxZDc1NWVhNDUzYjRjNGVmYTVlMzU1N2U5Nw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-03-24T16:13:09Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-03-24T16:13:09Z"}, "message": "tree.c (mapcar): When dealing with a DECL, use it's constant value, if any.\n\n\ufffd\n\t* tree.c (mapcar): When dealing with a DECL, use it's constant\n\tvalue, if any.\n\t* pt.c (lookup_template_class): Don't mangle the names of template\n\tclasses whose arguments are unknown.\n\t* pt.c (tsubst_expr): Handle GOTO_STMT correctly.\n\nFrom-SVN: r18803", "tree": {"sha": "e242c05f32097dd5257be0cc5fab56ce93f3d6a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e242c05f32097dd5257be0cc5fab56ce93f3d6a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae16ec5f2c93d51d755ea453b4c4efa5e3557e97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae16ec5f2c93d51d755ea453b4c4efa5e3557e97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae16ec5f2c93d51d755ea453b4c4efa5e3557e97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae16ec5f2c93d51d755ea453b4c4efa5e3557e97/comments", "author": null, "committer": null, "parents": [{"sha": "d229896557dbe44439b0f64aa1cd01369da14c15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d229896557dbe44439b0f64aa1cd01369da14c15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d229896557dbe44439b0f64aa1cd01369da14c15"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "d23a3cdcc6a7da6661415cd873931e6f9ab7bbf0", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae16ec5f2c93d51d755ea453b4c4efa5e3557e97/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae16ec5f2c93d51d755ea453b4c4efa5e3557e97/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=ae16ec5f2c93d51d755ea453b4c4efa5e3557e97", "patch": "@@ -1473,8 +1473,18 @@ mapcar (t, func)\n       /* Rather than aborting, return error_mark_node.  This allows us\n \t to report a sensible error message on code like this:\n \n-\t void g() { int i; f<i>(7); } */\n-      return error_mark_node;\n+\t void g() { int i; f<i>(7); } \n+\n+         In a case like:\n+\n+           void g() { const int i = 7; f<i>(7); }\n+\n+\t however, we must actually return the constant initializer.  */\n+      tmp = decl_constant_value (t);\n+      if (tmp != t)\n+\treturn mapcar (tmp, func);\n+      else\n+\treturn error_mark_node;\n \n     case PARM_DECL:\n       {"}]}