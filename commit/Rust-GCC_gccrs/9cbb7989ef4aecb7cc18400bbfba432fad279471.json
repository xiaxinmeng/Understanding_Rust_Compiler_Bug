{"sha": "9cbb7989ef4aecb7cc18400bbfba432fad279471", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNiYjc5ODllZjRhZWNiN2NjMTg0MDBiYmZiYTQzMmZhZDI3OTQ3MQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-05-10T14:50:35Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-05-10T14:50:35Z"}, "message": "tree-data-ref.c (analyze_array_indexes, [...]): Use VEC instead of VARRAY.\n\n\t* tree-data-ref.c (analyze_array_indexes, analyze_array,\n\tinit_data_ref, access_functions_are_affine_or_constant_p,\n\tfree_data_refs): Use VEC instead of VARRAY.\n\t* tree-data-ref.h (data_reference): Change the type of\n\taccess_fns to VEC(tree,gc)*.\n\t(DR_ACCESS_FN, DR_NUM_DIMENSIONS): Use VEC instead of VARRAY.\n\nFrom-SVN: r99517", "tree": {"sha": "c31d8bba84ef62037ce64656b15511e9c7ed39b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c31d8bba84ef62037ce64656b15511e9c7ed39b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cbb7989ef4aecb7cc18400bbfba432fad279471", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cbb7989ef4aecb7cc18400bbfba432fad279471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cbb7989ef4aecb7cc18400bbfba432fad279471", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cbb7989ef4aecb7cc18400bbfba432fad279471/comments", "author": null, "committer": null, "parents": [{"sha": "30dc60c78c8b91da22d56f64847c2ec6f6029c4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30dc60c78c8b91da22d56f64847c2ec6f6029c4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30dc60c78c8b91da22d56f64847c2ec6f6029c4a"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "7e817dd251491f9e920dbcad1e3921aec7c33fb0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cbb7989ef4aecb7cc18400bbfba432fad279471/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cbb7989ef4aecb7cc18400bbfba432fad279471/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9cbb7989ef4aecb7cc18400bbfba432fad279471", "patch": "@@ -4,6 +4,13 @@\n \tconfig/sh/sh.md, config/sh/superh.h: Fix comment typos.\n \t* doc/invoke.texi: Fix typos.\n \n+\t* tree-data-ref.c (analyze_array_indexes, analyze_array,\n+\tinit_data_ref, access_functions_are_affine_or_constant_p,\n+\tfree_data_refs): Use VEC instead of VARRAY.\n+\t* tree-data-ref.h (data_reference): Change the type of\n+\taccess_fns to VEC(tree,gc)*.\n+\t(DR_ACCESS_FN, DR_NUM_DIMENSIONS): Use VEC instead of VARRAY.\n+\n 2005-05-10  Gabor Loki <loki@gcc.gnu.org>\n \n \tPR c/17913"}, {"sha": "e62519a201c6bcfbccfa97810a5099948941e88b", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cbb7989ef4aecb7cc18400bbfba432fad279471/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cbb7989ef4aecb7cc18400bbfba432fad279471/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=9cbb7989ef4aecb7cc18400bbfba432fad279471", "patch": "@@ -523,7 +523,7 @@ estimate_niter_from_size_of_data (struct loop *loop,\n \n static tree\n analyze_array_indexes (struct loop *loop,\n-\t\t       varray_type *access_fns, \n+\t\t       VEC(tree,heap) **access_fns, \n \t\t       tree ref, tree stmt)\n {\n   tree opnd0, opnd1;\n@@ -542,7 +542,7 @@ analyze_array_indexes (struct loop *loop,\n   if (loop->estimated_nb_iterations == NULL_TREE)\n     estimate_niter_from_size_of_data (loop, opnd0, access_fn, stmt);\n   \n-  VARRAY_PUSH_TREE (*access_fns, access_fn);\n+  VEC_safe_push (tree, heap, *access_fns, access_fn);\n   \n   /* Recursively record other array access functions.  */\n   if (TREE_CODE (opnd0) == ARRAY_REF)\n@@ -575,7 +575,7 @@ analyze_array (tree stmt, tree ref, bool is_read)\n   \n   DR_STMT (res) = stmt;\n   DR_REF (res) = ref;\n-  VARRAY_TREE_INIT (DR_ACCESS_FNS (res), 3, \"access_fns\");\n+  DR_ACCESS_FNS (res) = VEC_alloc (tree, heap, 3);\n   DR_BASE_NAME (res) = analyze_array_indexes \n     (loop_containing_stmt (stmt), &(DR_ACCESS_FNS (res)), ref, stmt);\n   DR_IS_READ (res) = is_read;\n@@ -610,9 +610,9 @@ init_data_ref (tree stmt,\n   \n   DR_STMT (res) = stmt;\n   DR_REF (res) = ref;\n-  VARRAY_TREE_INIT (DR_ACCESS_FNS (res), 5, \"access_fns\");\n+  DR_ACCESS_FNS (res) = VEC_alloc (tree, heap, 5);\n   DR_BASE_NAME (res) = base;\n-  VARRAY_PUSH_TREE (DR_ACCESS_FNS (res), access_fn);\n+  VEC_quick_push (tree, DR_ACCESS_FNS (res), access_fn);\n   DR_IS_READ (res) = is_read;\n   \n   if (dump_file && (dump_flags & TDF_DETAILS))\n@@ -2124,11 +2124,12 @@ static bool\n access_functions_are_affine_or_constant_p (struct data_reference *a)\n {\n   unsigned int i;\n-  varray_type fns = DR_ACCESS_FNS (a);\n+  VEC(tree,heap) **fns = &DR_ACCESS_FNS (a);\n+  tree t;\n   \n-  for (i = 0; i < VARRAY_ACTIVE_SIZE (fns); i++)\n-    if (!evolution_function_is_constant_p (VARRAY_TREE (fns, i))\n-\t&& !evolution_function_is_affine_multivariate_p (VARRAY_TREE (fns, i)))\n+  for (i = 0; VEC_iterate (tree, *fns, i, t); i++)\n+    if (!evolution_function_is_constant_p (t)\n+\t&& !evolution_function_is_affine_multivariate_p (t))\n       return false;\n   \n   return true;\n@@ -2457,8 +2458,7 @@ free_data_refs (varray_type datarefs)\n \tVARRAY_GENERIC_PTR (datarefs, i);\n       if (dr)\n \t{\n-\t  if (DR_ACCESS_FNS (dr))\n-\t    varray_clear (DR_ACCESS_FNS (dr));\n+\t  VEC_free (tree, heap, DR_ACCESS_FNS (dr));\n \t  free (dr);\n \t}\n     }"}, {"sha": "66d6644f717cba4cdee065f473d12e66333baf14", "filename": "gcc/tree-data-ref.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cbb7989ef4aecb7cc18400bbfba432fad279471/gcc%2Ftree-data-ref.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cbb7989ef4aecb7cc18400bbfba432fad279471/gcc%2Ftree-data-ref.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.h?ref=9cbb7989ef4aecb7cc18400bbfba432fad279471", "patch": "@@ -36,7 +36,7 @@ struct data_reference\n   tree base_name;\n   \n   /* A list of chrecs.  */\n-  varray_type access_fns;\n+  VEC(tree,heap) *access_fns;\n \n   /* Auxiliary info specific to a pass.  */\n   int aux;\n@@ -50,8 +50,8 @@ struct data_reference\n #define DR_REF(DR) DR->ref\n #define DR_BASE_NAME(DR) DR->base_name\n #define DR_ACCESS_FNS(DR) DR->access_fns\n-#define DR_ACCESS_FN(DR, I) VARRAY_TREE (DR_ACCESS_FNS (DR), I)\n-#define DR_NUM_DIMENSIONS(DR) VARRAY_ACTIVE_SIZE (DR_ACCESS_FNS (DR))\n+#define DR_ACCESS_FN(DR, I) VEC_index (tree, DR_ACCESS_FNS (DR), I)\n+#define DR_NUM_DIMENSIONS(DR) VEC_length (tree, DR_ACCESS_FNS (DR))\n #define DR_IS_READ(DR) DR->is_read\n \n enum data_dependence_direction {"}]}