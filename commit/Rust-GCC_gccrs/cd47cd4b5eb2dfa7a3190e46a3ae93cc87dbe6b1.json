{"sha": "cd47cd4b5eb2dfa7a3190e46a3ae93cc87dbe6b1", "node_id": "C_kwDOANBUbNoAKGNkNDdjZDRiNWViMmRmYTdhMzE5MGU0NmEzYWU5M2NjODdkYmU2YjE", "commit": {"author": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2021-12-02T17:31:28Z"}, "committer": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2021-12-02T17:39:05Z"}, "message": "[PR103437] Make backup code for overflow conditional\n\nSwitch off long long variant overflow code by preprocessor if the\nbuild compiler has __builtin_smul_overflow.\n\ngcc/ChangeLog:\n\tPR rtl-optimization/103437\n\t* ira-color.c (setup_allocno_priorities): Switch off backup code\n\tfor overflow if compiler has __builtin_smul_overflow.  Use <\n\tfor comparison with -INT_MAX.", "tree": {"sha": "b0d60bfcf433804c0b7fea269a5c71e3fa3334c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0d60bfcf433804c0b7fea269a5c71e3fa3334c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd47cd4b5eb2dfa7a3190e46a3ae93cc87dbe6b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd47cd4b5eb2dfa7a3190e46a3ae93cc87dbe6b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd47cd4b5eb2dfa7a3190e46a3ae93cc87dbe6b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd47cd4b5eb2dfa7a3190e46a3ae93cc87dbe6b1/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acf4fe96f12341da253fa9a932947581690122a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acf4fe96f12341da253fa9a932947581690122a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acf4fe96f12341da253fa9a932947581690122a4"}], "stats": {"total": 33, "additions": 16, "deletions": 17}, "files": [{"sha": "a1b02776e77c77ce99ff5b8ac9ddb89c9f2fb8bb", "filename": "gcc/ira-color.c", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd47cd4b5eb2dfa7a3190e46a3ae93cc87dbe6b1/gcc%2Fira-color.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd47cd4b5eb2dfa7a3190e46a3ae93cc87dbe6b1/gcc%2Fira-color.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-color.c?ref=cd47cd4b5eb2dfa7a3190e46a3ae93cc87dbe6b1", "patch": "@@ -2797,7 +2797,6 @@ static void\n setup_allocno_priorities (ira_allocno_t *consideration_allocnos, int n)\n {\n   int i, length, nrefs, priority, max_priority, mult, diff;\n-  bool overflow_backup_p = true;\n   ira_allocno_t a;\n \n   max_priority = 0;\n@@ -2810,27 +2809,27 @@ setup_allocno_priorities (ira_allocno_t *consideration_allocnos, int n)\n       ira_assert (mult >= 0);\n       mult *= ira_reg_class_max_nregs[ALLOCNO_CLASS (a)][ALLOCNO_MODE (a)];\n       diff = ALLOCNO_MEMORY_COST (a) - ALLOCNO_CLASS_COST (a);\n-      /* Multiplication can overflow for very large functions.\n-\t Check the overflow and constrain the result if necessary: */\n #ifdef __has_builtin\n #if __has_builtin(__builtin_smul_overflow)\n-      overflow_backup_p = false;\n+#define HAS_SMUL_OVERFLOW\n+#endif\n+#endif\n+      /* Multiplication can overflow for very large functions.\n+\t Check the overflow and constrain the result if necessary: */\n+#ifdef HAS_SMUL_OVERFLOW\n       if (__builtin_smul_overflow (mult, diff, &priority)\n-\t  || priority <= -INT_MAX)\n+\t  || priority < -INT_MAX)\n \tpriority = diff >= 0 ? INT_MAX : -INT_MAX;\n+#else\n+      static_assert\n+\t(sizeof (long long) >= 2 * sizeof (int),\n+\t \"overflow code does not work for such int and long long sizes\");\n+      long long priorityll = (long long) mult * diff;\n+      if (priorityll < -INT_MAX || priorityll > INT_MAX)\n+\tpriority = diff >= 0 ? INT_MAX : -INT_MAX;\n+      else\n+\tpriority = priorityll;\n #endif\n-#endif\n-      if (overflow_backup_p)\n-\t{\n-\t  static_assert\n-\t    (sizeof (long long) >= 2 * sizeof (int),\n-\t     \"overflow code does not work for such int and long long sizes\");\n-\t  long long priorityll = (long long) mult * diff;\n-\t  if (priorityll < -INT_MAX || priorityll > INT_MAX)\n-\t    priority = diff >= 0 ? INT_MAX : -INT_MAX;\n-\t  else\n-\t    priority = priorityll;\n-\t}\n       allocno_priorities[ALLOCNO_NUM (a)] = priority;\n       if (priority < 0)\n \tpriority = -priority;"}]}