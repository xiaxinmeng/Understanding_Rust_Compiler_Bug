{"sha": "89631998d2ffda0c0c05066c148c6fc19398da5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk2MzE5OThkMmZmZGEwYzBjMDUwNjZjMTQ4YzZmYzE5Mzk4ZGE1Yw==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-01-18T22:57:46Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-01-19T12:53:02Z"}, "message": "Delcare first case for ADT types field access fail to type resolve.\n\nThe type resolver must ensure LHS for assignments where the LHS was\ninfered to be ? and the node mappings have a definition ID we know\nthe declaration id and can reassign the TyTy so further references know\nits type.", "tree": {"sha": "2427840c4b76b2b295687f080133508f607e03a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2427840c4b76b2b295687f080133508f607e03a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89631998d2ffda0c0c05066c148c6fc19398da5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89631998d2ffda0c0c05066c148c6fc19398da5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89631998d2ffda0c0c05066c148c6fc19398da5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89631998d2ffda0c0c05066c148c6fc19398da5c/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3713577c36eeba454e8bd3aef6bfce5ee6683c2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3713577c36eeba454e8bd3aef6bfce5ee6683c2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3713577c36eeba454e8bd3aef6bfce5ee6683c2b"}], "stats": {"total": 49, "additions": 46, "deletions": 3}, "files": [{"sha": "a49dc70b5f06184481be1f8ba0a929c8afd24532", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 35, "deletions": 3, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89631998d2ffda0c0c05066c148c6fc19398da5c/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89631998d2ffda0c0c05066c148c6fc19398da5c/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=89631998d2ffda0c0c05066c148c6fc19398da5c", "patch": "@@ -137,9 +137,41 @@ class TypeCheckExpr : public TypeCheckBase\n     auto rhs = TypeCheckExpr::Resolve (expr.get_rhs ());\n \n     infered = lhs->combine (rhs);\n-    // need to overrite the lhs type with this combination\n-    context->insert_type (expr.get_lhs ()->get_mappings ().get_hirid (),\n-\t\t\t  infered);\n+\n+    // in the case of declare first for an ADT Type:\n+    //\n+    // let a;\n+    // a = Foo{..}\n+    // let b = a.field;\n+    //\n+    // The lhs will have a TyTy of INFER and so when the declaration is\n+    // referenced it will still have an unknown type so we will fail to resolve\n+    // FieldAccessExpr\n+    if (lhs->get_kind () == TyTy::TypeKind::INFER)\n+      {\n+\tNodeId ast_node_id = expr.get_lhs ()->get_mappings ().get_nodeid ();\n+\tNodeId ref_node_id;\n+\tif (!resolver->lookup_resolved_name (ast_node_id, &ref_node_id))\n+\t  return;\n+\n+\tDefinition def;\n+\tif (!resolver->lookup_definition (ref_node_id, &def))\n+\t  {\n+\t    rust_error_at (expr.get_locus (),\n+\t\t\t   \"assignment infer - unknown reference\");\n+\t    return;\n+\t  }\n+\n+\tHirId ref;\n+\tif (!mappings->lookup_node_to_hir (\n+\t      expr.get_mappings ().get_crate_num (), def.parent, &ref))\n+\t  {\n+\t    rust_error_at (expr.get_locus (),\n+\t\t\t   \"assignment infer - reverse lookup failure\");\n+\t    return;\n+\t  }\n+\tcontext->insert_type (ref, infered);\n+      }\n   }\n \n   void visit (HIR::IdentifierExpr &expr)"}, {"sha": "65c70584bd5cc2e33c308e633b36793ee9aad468", "filename": "gcc/testsuite/rust.test/compilable/type_infer5.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89631998d2ffda0c0c05066c148c6fc19398da5c/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Ftype_infer5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89631998d2ffda0c0c05066c148c6fc19398da5c/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Ftype_infer5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Ftype_infer5.rs?ref=89631998d2ffda0c0c05066c148c6fc19398da5c", "patch": "@@ -0,0 +1,11 @@\n+struct Foo {\n+    a: i32,\n+    b: i32,\n+}\n+\n+fn main() {\n+    let a;\n+    a = Foo { a: 1, b: 2 };\n+\n+    let b = a.a;\n+}"}]}