{"sha": "1e3a7e8662804a55bd4d01c7d5fe626b982c013a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUzYTdlODY2MjgwNGE1NWJkNGQwMWM3ZDVmZTYyNmI5ODJjMDEzYQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-09-05T12:20:03Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-09-05T12:20:03Z"}, "message": "re PR target/50289 ([avr]: call-prologues saving/restoring global register variables)\n\n\tPR target/50289\n\t* config/avr/avr.c (sequent_regs_live): Don't recognize sequences\n\tthat contain global register variable.\n\nFrom-SVN: r178528", "tree": {"sha": "8e4f0fedf4621356b1673e0074d0bab1b27eebbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e4f0fedf4621356b1673e0074d0bab1b27eebbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e3a7e8662804a55bd4d01c7d5fe626b982c013a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e3a7e8662804a55bd4d01c7d5fe626b982c013a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e3a7e8662804a55bd4d01c7d5fe626b982c013a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e3a7e8662804a55bd4d01c7d5fe626b982c013a/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1ab3876d2f2872741a554847a8ca503f58f430c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1ab3876d2f2872741a554847a8ca503f58f430c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1ab3876d2f2872741a554847a8ca503f58f430c"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "1534d479c30c1d2e81e72d3248acc2654ac2968e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e3a7e8662804a55bd4d01c7d5fe626b982c013a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e3a7e8662804a55bd4d01c7d5fe626b982c013a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e3a7e8662804a55bd4d01c7d5fe626b982c013a", "patch": "@@ -1,3 +1,9 @@\n+2011-09-05  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/50289\n+\t* config/avr/avr.c (sequent_regs_live): Don't recognize sequences\n+\tthat contain global register variable.\n+\n 2011-09-05  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-cfg.c (replace_uses_by): Use fold_stmt, not fold_stmt_inplace."}, {"sha": "f158cddefe95e56a341b7bc494e54ea4794ff463", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e3a7e8662804a55bd4d01c7d5fe626b982c013a/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e3a7e8662804a55bd4d01c7d5fe626b982c013a/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=1e3a7e8662804a55bd4d01c7d5fe626b982c013a", "patch": "@@ -522,6 +522,17 @@ sequent_regs_live (void)\n \n   for (reg = 0; reg < 18; ++reg)\n     {\n+      if (fixed_regs[reg])\n+        {\n+          /* Don't recognize sequences that contain global register\n+             variables.  */\n+      \n+          if (live_seq != 0)\n+            return 0;\n+          else\n+            continue;\n+        }\n+      \n       if (!call_used_regs[reg])\n \t{\n \t  if (df_regs_ever_live_p (reg))"}]}