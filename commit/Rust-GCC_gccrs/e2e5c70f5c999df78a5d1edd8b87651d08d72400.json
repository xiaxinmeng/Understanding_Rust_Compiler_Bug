{"sha": "e2e5c70f5c999df78a5d1edd8b87651d08d72400", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJlNWM3MGY1Yzk5OWRmNzhhNWQxZWRkOGI4NzY1MWQwOGQ3MjQwMA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-03-26T05:32:46Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-03-26T05:32:46Z"}, "message": "Correctly parse select case <-c <- v.\n\nFrom-SVN: r171540", "tree": {"sha": "01f8f324f7a665ba41e5e94ebd4743769f965567", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01f8f324f7a665ba41e5e94ebd4743769f965567"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2e5c70f5c999df78a5d1edd8b87651d08d72400", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2e5c70f5c999df78a5d1edd8b87651d08d72400", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2e5c70f5c999df78a5d1edd8b87651d08d72400", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2e5c70f5c999df78a5d1edd8b87651d08d72400/comments", "author": null, "committer": null, "parents": [{"sha": "8ac5e12e5f69ba3a8559e6b5836d6d18b8ac7ff3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ac5e12e5f69ba3a8559e6b5836d6d18b8ac7ff3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ac5e12e5f69ba3a8559e6b5836d6d18b8ac7ff3"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "18310ccac299010d56e232d1614f1f0569aadfcb", "filename": "gcc/go/gofrontend/parse.cc", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2e5c70f5c999df78a5d1edd8b87651d08d72400/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2e5c70f5c999df78a5d1edd8b87651d08d72400/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.cc?ref=e2e5c70f5c999df78a5d1edd8b87651d08d72400", "patch": "@@ -4375,16 +4375,24 @@ Parse::send_or_recv_stmt(bool* is_send, Expression** channel, Expression** val,\n   // send or receive expression.  If SAW_COMMA is true, then *VAL is\n   // set and we just read a comma.\n \n-  if (!saw_comma && this->peek_token()->is_op(OPERATOR_CHANOP))\n+  Expression* e;\n+  if (saw_comma || !this->peek_token()->is_op(OPERATOR_CHANOP))\n+    e = this->expression(PRECEDENCE_NORMAL, true, true, NULL);\n+  else\n     {\n       // case <-c:\n       *is_send = false;\n       this->advance_token();\n       *channel = this->expression(PRECEDENCE_NORMAL, false, true, NULL);\n-      return true;\n-    }\n \n-  Expression* e = this->expression(PRECEDENCE_NORMAL, true, true, NULL);\n+      // The next token should be ':'.  If it is '<-', then we have\n+      // case <-c <- v:\n+      // which is to say, send on a channel received from a channel.\n+      if (!this->peek_token()->is_op(OPERATOR_CHANOP))\n+\treturn true;\n+\n+      e = Expression::make_receive(*channel, (*channel)->location());\n+    }\n \n   if (this->peek_token()->is_op(OPERATOR_EQ))\n     {"}]}