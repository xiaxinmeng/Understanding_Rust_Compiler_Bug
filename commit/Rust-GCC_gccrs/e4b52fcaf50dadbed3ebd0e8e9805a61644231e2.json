{"sha": "e4b52fcaf50dadbed3ebd0e8e9805a61644231e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRiNTJmY2FmNTBkYWRiZWQzZWJkMGU4ZTk4MDVhNjE2NDQyMzFlMg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-02-05T12:17:45Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-02-05T12:17:45Z"}, "message": "GCOV: remove misleading branches and calls info for -f option (PR gcov-profile/89000).\n\n2019-02-05  Martin Liska  <mliska@suse.cz>\n\n\tPR gcov-profile/89000\n\t* gcov.c (function_summary): Remove argument.\n\t(file_summary): New function.\n\t(print_usage): Replace tabs with spaces.\n\t(generate_results): Use new function file_summary.\n\nFrom-SVN: r268533", "tree": {"sha": "9c04e33741acf3c1ded49eb0299a96b2eb507051", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c04e33741acf3c1ded49eb0299a96b2eb507051"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4b52fcaf50dadbed3ebd0e8e9805a61644231e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4b52fcaf50dadbed3ebd0e8e9805a61644231e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4b52fcaf50dadbed3ebd0e8e9805a61644231e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4b52fcaf50dadbed3ebd0e8e9805a61644231e2/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9aa2470ab2c98bdd276c2682a96e5a4bdfcdbb48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aa2470ab2c98bdd276c2682a96e5a4bdfcdbb48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aa2470ab2c98bdd276c2682a96e5a4bdfcdbb48"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "a6c7f8c6c7a0fb77d2b61fc4c7e8e47ecae7a0ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4b52fcaf50dadbed3ebd0e8e9805a61644231e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4b52fcaf50dadbed3ebd0e8e9805a61644231e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4b52fcaf50dadbed3ebd0e8e9805a61644231e2", "patch": "@@ -1,3 +1,11 @@\n+2019-02-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/89000\n+\t* gcov.c (function_summary): Remove argument.\n+\t(file_summary): New function.\n+\t(print_usage): Replace tabs with spaces.\n+\t(generate_results): Use new function file_summary.\n+\n 2019-02-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/89186"}, {"sha": "9e27a826ea4f490552cba3f3bddbf9f6f6157a02", "filename": "gcc/gcov.c", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4b52fcaf50dadbed3ebd0e8e9805a61644231e2/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4b52fcaf50dadbed3ebd0e8e9805a61644231e2/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=e4b52fcaf50dadbed3ebd0e8e9805a61644231e2", "patch": "@@ -615,7 +615,8 @@ static void find_exception_blocks (function_info *);\n static void add_branch_counts (coverage_info *, const arc_info *);\n static void add_line_counts (coverage_info *, function_info *);\n static void executed_summary (unsigned, unsigned);\n-static void function_summary (const coverage_info *, const char *);\n+static void function_summary (const coverage_info *);\n+static void file_summary (const coverage_info *);\n static const char *format_gcov (gcov_type, gcov_type, int);\n static void accumulate_line_counts (source_info *);\n static void output_gcov_file (const char *, source_info *);\n@@ -886,7 +887,7 @@ print_usage (int error_p)\n   fnotice (file, \"  -d, --display-progress          Display progress information\\n\");\n   fnotice (file, \"  -f, --function-summaries        Output summaries for each function\\n\");\n   fnotice (file, \"  -h, --help                      Print this help, then exit\\n\");\n-  fnotice (file, \"  -i, --json-format\t\t    Output JSON intermediate format into .gcov.json.gz file\\n\");\n+  fnotice (file, \"  -i, --json-format               Output JSON intermediate format into .gcov.json.gz file\\n\");\n   fnotice (file, \"  -j, --human-readable            Output human readable numbers\\n\");\n   fnotice (file, \"  -k, --use-colors                Emit colored output\\n\");\n   fnotice (file, \"  -l, --long-file-names           Use long output file names for included\\n\\\n@@ -1376,7 +1377,7 @@ generate_results (const char *file_name)\n       add_line_counts (flag_function_summary ? &coverage : NULL, fn);\n       if (flag_function_summary)\n \t{\n-\t  function_summary (&coverage, \"Function\");\n+\t  function_summary (&coverage);\n \t  fnotice (stdout, \"\\n\");\n \t}\n     }\n@@ -1427,7 +1428,7 @@ generate_results (const char *file_name)\n       accumulate_line_counts (src);\n \n       if (!flag_use_stdout)\n-\tfunction_summary (&src->coverage, \"File\");\n+\tfile_summary (&src->coverage);\n       total_lines += src->coverage.lines;\n       total_executed += src->coverage.lines_executed;\n       if (flag_gcov_file)\n@@ -2339,12 +2340,21 @@ executed_summary (unsigned lines, unsigned executed)\n     fnotice (stdout, \"No executable lines\\n\");\n }\n \n-/* Output summary info for a function or file.  */\n+/* Output summary info for a function.  */\n \n static void\n-function_summary (const coverage_info *coverage, const char *title)\n+function_summary (const coverage_info *coverage)\n {\n-  fnotice (stdout, \"%s '%s'\\n\", title, coverage->name);\n+  fnotice (stdout, \"%s '%s'\\n\", \"Function\", coverage->name);\n+  executed_summary (coverage->lines, coverage->lines_executed);\n+}\n+\n+/* Output summary info for a file.  */\n+\n+static void\n+file_summary (const coverage_info *coverage)\n+{\n+  fnotice (stdout, \"%s '%s'\\n\", \"File\", coverage->name);\n   executed_summary (coverage->lines, coverage->lines_executed);\n \n   if (flag_branches)"}]}