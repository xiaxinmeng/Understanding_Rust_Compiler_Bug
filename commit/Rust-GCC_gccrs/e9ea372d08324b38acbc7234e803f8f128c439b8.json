{"sha": "e9ea372d08324b38acbc7234e803f8f128c439b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTllYTM3MmQwODMyNGIzOGFjYmM3MjM0ZTgwM2Y4ZjEyOGM0MzliOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-12-02T19:04:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-12-02T19:04:32Z"}, "message": "* cp-gimplify.c (cp_fold): Use fold_build*.\n\nFrom-SVN: r231195", "tree": {"sha": "b24711f3767c1466724c323f7187c923e9f49ec6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b24711f3767c1466724c323f7187c923e9f49ec6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9ea372d08324b38acbc7234e803f8f128c439b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9ea372d08324b38acbc7234e803f8f128c439b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9ea372d08324b38acbc7234e803f8f128c439b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9ea372d08324b38acbc7234e803f8f128c439b8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e9e32ee6e8df82ba1d103ec2c501ecc7c185bc2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9e32ee6e8df82ba1d103ec2c501ecc7c185bc2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9e32ee6e8df82ba1d103ec2c501ecc7c185bc2e"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "259c312d57f6bb3bac379f1dc80781107cf99c19", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ea372d08324b38acbc7234e803f8f128c439b8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ea372d08324b38acbc7234e803f8f128c439b8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e9ea372d08324b38acbc7234e803f8f128c439b8", "patch": "@@ -1,3 +1,7 @@\n+2015-12-02  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-gimplify.c (cp_fold): Use fold_build*.\n+\n 2015-12-02  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR c/68162"}, {"sha": "86fef9ee4c6511dab0b602d912f1c72441f5ddce", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ea372d08324b38acbc7234e803f8f128c439b8/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ea372d08324b38acbc7234e803f8f128c439b8/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=e9ea372d08324b38acbc7234e803f8f128c439b8", "patch": "@@ -1944,9 +1944,9 @@ cp_fold (tree x)\n       op0 = cp_fold (op0);\n \n       if (op0 != TREE_OPERAND (x, 0))\n-        x = build1_loc (loc, code, TREE_TYPE (x), op0);\n-\n-      x = fold (x);\n+        x = fold_build1_loc (loc, code, TREE_TYPE (x), op0);\n+      else\n+\tx = fold (x);\n \n       /* Conversion of an out-of-range value has implementation-defined\n \t behavior; the language considers it different from arithmetic\n@@ -1976,9 +1976,9 @@ cp_fold (tree x)\n       op0 = cp_fold (TREE_OPERAND (x, 0));\n \n       if (op0 != TREE_OPERAND (x, 0))\n-        x = build1_loc (loc, code, TREE_TYPE (x), op0);\n-\n-      x = fold (x);\n+        x = fold_build1_loc (loc, code, TREE_TYPE (x), op0);\n+      else\n+\tx = fold (x);\n \n       gcc_assert (TREE_CODE (x) != COND_EXPR\n \t\t  || !VOID_TYPE_P (TREE_TYPE (TREE_OPERAND (x, 0))));\n@@ -2048,9 +2048,9 @@ cp_fold (tree x)\n \top0 = build_empty_stmt (loc);\n \n       if (op0 != TREE_OPERAND (x, 0) || op1 != TREE_OPERAND (x, 1))\n-\tx = build2_loc (loc, code, TREE_TYPE (x), op0, op1);\n-\n-      x = fold (x);\n+\tx = fold_build2_loc (loc, code, TREE_TYPE (x), op0, op1);\n+      else\n+\tx = fold (x);\n \n       if (TREE_CODE (x) == COMPOUND_EXPR && TREE_OPERAND (x, 0) == NULL_TREE\n \t  && TREE_OPERAND (x, 1))"}]}