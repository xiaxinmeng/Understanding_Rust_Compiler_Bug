{"sha": "308e51aa12cc0df15a524c9c90f4d349eca90290", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA4ZTUxYWExMmNjMGRmMTVhNTI0YzljOTBmNGQzNDllY2E5MDI5MA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-06-04T06:44:00Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-06-04T06:44:00Z"}, "message": "predicates.md (pic_symbolic_operand): Remove predicate.\n\n\t* config/i386/predicates.md (pic_symbolic_operand): Remove predicate.\n\t* config/i386/i386.md (*add<mode>_1): Do not use pic_symbolic_operand\n\tpredicate in \"type\" attribute calculation.\n\t(*addsi_1_zext): Ditto.\n\t(*add<mode>_2): Do not use pic_symbolic_operand in insn predicate.\n\t(*addsi_2_zext): Ditto.\n\t(*add<mode>_3): Ditto.\n\t(*addsi_3_zext): Ditto.\n\t(*add<mode>_5): Ditto.\n\nFrom-SVN: r160252", "tree": {"sha": "964680b29c77e748b69023f04069aef58270f518", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/964680b29c77e748b69023f04069aef58270f518"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/308e51aa12cc0df15a524c9c90f4d349eca90290", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308e51aa12cc0df15a524c9c90f4d349eca90290", "html_url": "https://github.com/Rust-GCC/gccrs/commit/308e51aa12cc0df15a524c9c90f4d349eca90290", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308e51aa12cc0df15a524c9c90f4d349eca90290/comments", "author": null, "committer": null, "parents": [{"sha": "f3cf730bdcfbb8b9132aa3c0d310407815f28c46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3cf730bdcfbb8b9132aa3c0d310407815f28c46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3cf730bdcfbb8b9132aa3c0d310407815f28c46"}], "stats": {"total": 174, "additions": 60, "deletions": 114}, "files": [{"sha": "bab4a24b1473548bf5553a7b86adc4c9c86d9093", "filename": "gcc/ChangeLog", "status": "modified", "additions": 55, "deletions": 56, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e51aa12cc0df15a524c9c90f4d349eca90290/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e51aa12cc0df15a524c9c90f4d349eca90290/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=308e51aa12cc0df15a524c9c90f4d349eca90290", "patch": "@@ -1,3 +1,15 @@\n+2010-06-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/predicates.md (pic_symbolic_operand): Remove predicate.\n+\t* config/i386/i386.md (*add<mode>_1): Do not use pic_symbolic_operand\n+\tpredicate in \"type\" attribute calculation.\n+\t(*addsi_1_zext): Ditto.\n+\t(*add<mode>_2): Do not use pic_symbolic_operand in insn predicate.\n+\t(*addsi_2_zext): Ditto.\n+\t(*add<mode>_3): Ditto.\n+\t(*addsi_3_zext): Ditto.\n+\t(*add<mode>_5): Ditto.\n+\n 2010-06-03  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-into-ssa.c (mark_block_for_update): Avoid redundant call\n@@ -70,7 +82,7 @@\n 2010-06-03  Jan Hubicka  <jh@suse.cz>\n \t    Jakub Jelinek  <jakub@redhat.com>\n \n-\t* var-tracking.c (dataflow_set_equiv_regs): Shortcut the loop if                                                                        \n+\t* var-tracking.c (dataflow_set_equiv_regs): Shortcut the loop if\n \tset->regs[i] is NULL or has just one entry.\n \n 2010-06-03  Jan Hubicka  <jh@suse.cz>\n@@ -128,14 +140,12 @@\n \n \tPR target/44218\n \t* doc/invoke.texi (RS/6000 and PowerPC Options): Delete obsolete\n-\t-mswdiv option.  Add -mrecip, -mrecip=<xxx>, -mrecip-precision\n-\toptions.\n+\t-mswdiv option.  Add -mrecip, -mrecip=<xxx>, -mrecip-precision options.\n \n \t* doc/extend.texi (powerpc builtins): Document vec_recip,\n \tvec_rsqrt, vec_rsqrte altivec/vsx builtins.\n \n-\t* config/rs6000/rs60000-protos.h (rs6000_emit_swdiv): New\n-\tfunction.\n+\t* config/rs6000/rs60000-protos.h (rs6000_emit_swdiv): New function.\n \t(rs6000_emit_swrsqrt): Ditto.\n \t(rs6000_emit_swdivsf): Delete.\n \t(rs6000_emit_swdivdf): Ditto.\n@@ -162,8 +172,7 @@\n \t(bdesc_2arg): Add reciprocal estimate builtins.\n \t(bdesc_1arg): Add reciprocal square root estimate builtins.\n \t(rs6000_expand_builtin): Rewrite to use a switch statement,\n-\tinstead of multiple if/then/elses.  Add reciprocal estimate\n-\tbuiltins.\n+\tinstead of multiple if/then/elses.  Add reciprocal estimate builtins.\n \t(rs6000_init_builtins): Create declarations for reciprocal\n \testimate builtins.\n \t(rs6000_preferred_reload_class): Simplify VSX preferences, if scalar\n@@ -186,8 +195,7 @@\n \t(rs6000_emit_swdiv): New common function to be called to replace a\n \tdivision with reciprocal estimate and fixup.\n \t(rs6000_emit_swrsqrt): Replace rs6000_emit_swrsqrtsf.  Add support\n-\tfor double and vector types.  Add support for high precision\n-\tmachines.\n+\tfor double and vector types.  Add support for high precision machines.\n \n \t* config/rs6000/rs6000.h (TARGET_FRES): New macro to say whether\n \tthe reciprocal estimate instructions can be generated.\n@@ -217,8 +225,7 @@\n \t(altivec_overloaded_builtins): Add reciprocal estimate builtins.\n \n \t* config/rs6000/rs6000.opt (-mrecip): Document add support for\n-\treplacing division instructions with reciprocal estimate and\n-\tfixup.\n+\treplacing division instructions with reciprocal estimate and fixup.\n \t(-mrecip=<opt>): New option.\n \t(-mrecip-precision): Ditto.\n \n@@ -230,8 +237,7 @@\n \t* config/rs6000/altivec.md (UNSPEC_RSQRTEFP): Delete.\n \t(UNSPEC_VREFP): Ditto.\n \t(altivec_vnmsubfp*): Make altivec nmsub mirror the scalar and VSX\n-\tconterparts with regard to support of -mno-fused-madd and\n-\t-ffast-math.\n+\tconterparts with regard to support of -mno-fused-madd and -ffast-math.\n \t(altivec_vrsqrtefp): Use common UNSPEC to allow scalar/vector\n \treciprocal estimate instructions to be generated.\n \t(altivec_vrefp): Ditto.\n@@ -256,8 +262,7 @@\n \t(fred_fpr): Ditto.\n \t(rsqrtdf_internal1): New function for frsqrte instruciton.\n \n-\t* config/rs6000/altivec.h (vec_recipdiv): Define new vector\n-\tbuiltin.\n+\t* config/rs6000/altivec.h (vec_recipdiv): Define new vector builtin.\n \t(vec_rsqrt): Ditto.\n \n 2010-06-03  Richard Guenther  <rguenther@suse.de>\n@@ -364,8 +369,7 @@\n \t(*mov<mode>_64 TD_TF, *mov<mode>_31 TD_TF, *mov<mode>_64dfp DD_DF,\n \t*mov<mode>_64 DD_DF, *mov<mode>_31, mov<mode>): Remove load zero\n \tinstruction.\n-\t* config/s390/s390.c: Don't accept fp zeros as valid constants\n-\tanymore.\n+\t* config/s390/s390.c: Don't accept fp zeros as valid constants anymore.\n \n 2010-06-02  Jan Hubicka  <jh@suse.cz>\n \n@@ -478,8 +482,7 @@\n \tInclude rtl.h.\n \t(copy_decl_for_dup_finish): Do not use NULL_RTX.\n \n-\t* tree-loop-linear.c: Do not include diagnostic.h, expr.h,\n-\tand optabs.h.\n+\t* tree-loop-linear.c: Do not include diagnostic.h, expr.h and optabs.h.\n \t* tree-loop-distribution.c: Likewise.\n \n 2010-06-01  Jan Hubicka  <jh@suse.cz>\n@@ -518,25 +521,26 @@\n \t* emit-rtl.c: (first_insn, last_insn): Remove defines.\n \t(get_insns, set_first_insn, get_last_insn, set_last_insn, get_max_uid):\n \tMove to emit-rtl.h.\n-\t(set_new_first_and_last_insn, get_last_insn_anywhere, get_first_nonnote_insn,\n-\tget_last_nonnote_insn, try_split, make_call_insn_raw, add_insn_after,\n-\tadd_insn_before, remove_insn, delete_insns_since, reorder_insns_nobb,\n-\temit_insn_after_1, emit_debug_insn_before, emit_insn, start_sequence,\n-\tpush_to_sequence, push_to_sequence2, push_topmost_sequence, end_sequence,\n-\tcopy_insn): Use accessor functions.\n+\t(set_new_first_and_last_insn, get_last_insn_anywhere,\n+\tget_first_nonnote_insn, get_last_nonnote_insn, try_split,\n+\tmake_call_insn_raw, add_insn_after, add_insn_before, remove_insn,\n+\tdelete_insns_since, reorder_insns_nobb, emit_insn_after_1,\n+\temit_debug_insn_before, emit_insn, start_sequence, push_to_sequence,\n+\tpush_to_sequence2, push_topmost_sequence, end_sequence, copy_insn):\n+\tUse accessor functions.\n \t* emit-rtl.h (gen_blockage, gen_rtvec, copy_insn_1, copy_insn,\n \t gen_int_mode, emit_copy_of_insn_after, set_reg_attrs_from_value,\n \tset_reg_attrs_for_parm, set_reg_attrs_for_decl_rtl, adjust_reg_mode,\n-\tmem_expr_equal_p): Move here from rtl.h\n+\tmem_expr_equal_p): Move here from rtl.h.\n \t(get_insns, set_first-insn, get_last_insn, set_last_insn, get_max_uid):\n \tMove here from emit-rtl.c; make inline.\n-\t* cfglayout.h: Include emit-rtl.h\n+\t* cfglayout.h: Include emit-rtl.h.\n \t* rtl.h (gen_blockage, gen_rtvec, copy_insn_1, copy_insn,\n \t gen_int_mode, emit_copy_of_insn_after, set_reg_attrs_from_value,\n \tset_reg_attrs_for_parm, set_reg_attrs_for_decl_rtl, adjust_reg_mode,\n-\tmem_expr_equal_p, get_insns, set_first-insn, get_last_insn, set_last_insn,\n-\tget_max_uid): Move to emit-rtl.h.\n-\t* reg-stack.c: Include emit-rtl.h\n+\tmem_expr_equal_p, get_insns, set_first-insn,\n+\tget_last_insn, set_last_insn, get_max_uid): Move to emit-rtl.h.\n+\t* reg-stack.c: Include emit-rtl.h.\n \t* dce.c: Likewise.\n \n 2010-06-01  Jan Hubicka  <jh@suse.cz>\n@@ -545,11 +549,11 @@\n \t(cgraph_function_versioning): Update prototype.\n \t* cgraphunit.c (cgraph_copy_node_for_versioning): Accept bbs_to_copy\n \tbitmap.\n-\t(cgraph_function_versioning): Accept new_entry_block and bbs_to_copy. \n+\t(cgraph_function_versioning): Accept new_entry_block and bbs_to_copy.\n \t(cgraph_materialize_clone, save_inline_function_body): Update use of\n \ttree_function_versioning.\n-\t* tree-inline.c (copy_bb): Look for previous copied block to link after;\n-\tfix debug output.\n+\t* tree-inline.c (copy_bb): Look for previous copied block to link\n+\tafter; fix debug output.\n \t(copy_cfg_body): Accept new_entry_block and bbs_to_copy.\n \t(copy_body): Likewise.\n \t(expand_call_inline): Update use of copy_body.\n@@ -577,7 +581,7 @@\n \t* c-opts.c (c_common_handle_option): Likewise.\n \n 2010-06-01  Arnaud Charlet  <charlet@adacore.com>\n-            Matthew Gingell  <gingell@adacore.com>\n+\t    Matthew Gingell  <gingell@adacore.com>\n \n \t* doc/invoke.texi: Mention -fdump-ada-spec.\n \t* tree-dump.c (dump_files): Add ada-spec.\n@@ -623,14 +627,13 @@\n \n 2010-06-01  Kai Tietz  <kai.tietz@onevision.com>\n \n-        * config/i386.c (ix86_output_addr_vec_elt): Make LPREFIX\n-        argument for fprintf.\n-        (ix86_output_addr_diff_elt): Likewise.\n-        (x86_function_profiler): Likewise.\n-        * config/cygming.h (LOCAL_LABEL_PREFIX): Fix\n-        for x64 no-underscore.\n-        (LPREFIX): Likewise.\n-        (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n+\t* config/i386.c (ix86_output_addr_vec_elt): Make LPREFIX\n+\targument for fprintf.\n+\t(ix86_output_addr_diff_elt): Likewise.\n+\t(x86_function_profiler): Likewise.\n+\t* config/cygming.h (LOCAL_LABEL_PREFIX): Fix for x64 no-underscore.\n+\t(LPREFIX): Likewise.\n+\t(ASM_GENERATE_INTERNAL_LABEL): Likewise.\n \n 2010-05-31  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -678,8 +681,7 @@\n 2010-05-31  Kai Tietz  <kai.tietz@onevision.com>\n \n \tPR target/44161\n-\t* config/i386/cygming.h (SUBTARGET_OVERRIDE_OPTIONS): Handle\n-\tflag_pic.\n+\t* config/i386/cygming.h (SUBTARGET_OVERRIDE_OPTIONS): Handle flag_pic.\n \n 2010-05-31  Eric Botcazou  <ebotcazou@adacore.com>\n \n@@ -688,8 +690,7 @@\n \n 2010-05-31  Richard Guenther  <rguenther@suse.de>\n \n-\t* tree-ssa-structalias.c (find_func_aliases): Handle\n-\tBUILT_IN_RETURN.\n+\t* tree-ssa-structalias.c (find_func_aliases): Handle BUILT_IN_RETURN.\n \n 2010-05-30  Jan Hubicka  <jh@suse.cz>\n \n@@ -713,7 +714,7 @@\n \t* config/rs6000/darwin.h (ASM_OUTPUT_COMMON): Ditto.\n \t* config/darwin.h (GLOBAL_ASM_OP): Ditto.\n \t* config/darwin9.h (ASM_OUTPUT_ALIGNED_COMMON): Ditto.\n-\t\n+\n 2010-05-30  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/rs6000/rs6000.c (rs6000_output_function_entry): Use\n@@ -734,8 +735,7 @@\n \n \t* cgraph.h (cgraph_dump_file): Declare.\n \t* cgraphunit.c (cgraph_dump_file): Export.\n-\t* ipa.c (dump_cgraph_node_set, dump_varpool_node_set): Be less\n-\tverbose.\n+\t* ipa.c (dump_cgraph_node_set, dump_varpool_node_set): Be less verbose.\n \n 2010-05-30  Jan Hubicka  <jh@suse.cz>\n \n@@ -752,9 +752,8 @@\n \t* ipa-pure-const.c (pure_const_names): New static var.\n \t(check_call): Handle calls not leading to return.\n \t(pure_const_read_summary): Dump info read.\n-\t(propagate): Dump info about propagation process; ignore side\n-\teffects of functions not leading to exit; fix handling of\n-\tpure functions.\n+\t(propagate): Dump info about propagation process; ignore side effects\n+\tof functions not leading to exit; fix handling of pure functions.\n \n 2010-05-30  Jan Hubicka  <jh@suse.cz>\n \n@@ -788,7 +787,7 @@\n \tdebug_asserts_for, debug_all_asserts): Annotate with DEBUG_FUNCTION.\n \t* tree-into-ssa.c (debug_decl_set, debug_defs_stack, debug_currdefs,\n \tdebug_tree_ssa, debug_tree_ssa_stats, debug_def_blocks,\n-\tdebug_names_replaced_by, debug_update_ssa): Likewise.\t\n+\tdebug_names_replaced_by, debug_update_ssa): Likewise.\n \t* sbitmap.c (debug_sbitmap): Likewise.\n \t* genrecog.c (debug_decision, debug_decision_list): Likewise.\n \t* tree-pretty-print.c (debug_generic_expr, debug_generic_stmt,\n@@ -986,7 +985,7 @@\n \t* cgraph.c (clone_function_name): Take SUFFIX argument; export.\n \t(cgraph_create_virtual_clone): Take SUFFIX argument; udpate\n \tuse of clone_function_name.\n-\t* cgraph.h (cgraph_create_virtual_clone, \n+\t* cgraph.h (cgraph_create_virtual_clone,\n \tcgraph_function_versioning): update prototypes.\n \t(clone_function_name): Declare.\n \t* ipa-cp.c (ipcp_insert_stage): Update call of\n@@ -1152,7 +1151,7 @@\n \n 2010-05-28  Iain Sandoe  <iains@gcc.gnu.org>\n \n-        * config.gcc (*-*-darwin*): Adjust t-make fragments for Darwin.\n+\t* config.gcc (*-*-darwin*): Adjust t-make fragments for Darwin.\n \n 2010-05-28  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n@@ -1433,7 +1432,7 @@\n 2010-05-27  Jon Beniston <jon@beniston.com>\n \n \tPR 43726\n-\t* config/lm32/lm32.h: Remove definition of \n+\t* config/lm32/lm32.h: Remove definition of\n \tGO_IF_MODE_DEPENDENT_ADDRESS. Update copyright year.\n \n 2010-05-27  Eric Botcazou  <ebotcazou@adacore.com>"}, {"sha": "6ed8db655946757249c553b80a70070375d84cbe", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 5, "deletions": 28, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e51aa12cc0df15a524c9c90f4d349eca90290/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e51aa12cc0df15a524c9c90f4d349eca90290/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=308e51aa12cc0df15a524c9c90f4d349eca90290", "patch": "@@ -6118,10 +6118,6 @@\n \t      (const_string \"lea\")\n             (eq_attr \"alternative\" \"3\")\n               (const_string \"lea\")\n-\t    ; Current assemblers are broken and do not allow @GOTOFF in\n-\t    ; ought but a memory context.\n-\t    (match_operand:SWI48 2 \"pic_symbolic_operand\" \"\")\n-\t      (const_string \"lea\")\n \t    (match_operand:SWI48 2 \"incdec_operand\" \"\")\n \t      (const_string \"incdec\")\n \t   ]\n@@ -6172,10 +6168,6 @@\n   [(set (attr \"type\")\n      (cond [(eq_attr \"alternative\" \"1\")\n \t      (const_string \"lea\")\n-\t    ; Current assemblers are broken and do not allow @GOTOFF in\n-\t    ; ought but a memory context.\n-\t    (match_operand:SI 2 \"pic_symbolic_operand\" \"\")\n-\t      (const_string \"lea\")\n \t    (match_operand:SI 2 \"incdec_operand\" \"\")\n \t      (const_string \"incdec\")\n \t   ]\n@@ -6410,10 +6402,7 @@\n    (set (match_operand:SWI48 0 \"nonimmediate_operand\" \"=r,rm\")\n \t(plus:SWI48 (match_dup 1) (match_dup 2)))]\n   \"ix86_match_ccmode (insn, CCGOCmode)\n-   && ix86_binary_operator_ok (PLUS, <MODE>mode, operands)\n-   /* Current assemblers are broken and do not allow @GOTOFF in\n-      ought but a memory context.  */\n-   && ! pic_symbolic_operand (operands[2], VOIDmode)\"\n+   && ix86_binary_operator_ok (PLUS, <MODE>mode, operands)\"\n {\n   switch (get_attr_type (insn))\n     {\n@@ -6458,10 +6447,7 @@\n    (set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI (plus:SI (match_dup 1) (match_dup 2))))]\n   \"TARGET_64BIT && ix86_match_ccmode (insn, CCGOCmode)\n-   && ix86_binary_operator_ok (PLUS, SImode, operands)\n-   /* Current assemblers are broken and do not allow @GOTOFF in\n-      ought but a memory context.  */\n-   && ! pic_symbolic_operand (operands[2], VOIDmode)\"\n+   && ix86_binary_operator_ok (PLUS, SImode, operands)\"\n {\n   switch (get_attr_type (insn))\n     {\n@@ -6576,10 +6562,7 @@\n \t  (match_operand:SWI48 1 \"nonimmediate_operand\" \"%0\")))\n    (clobber (match_scratch:SWI48 0 \"=r\"))]\n   \"ix86_match_ccmode (insn, CCZmode)\n-   && !(MEM_P (operands[1]) && MEM_P (operands[2]))\n-   /* Current assemblers are broken and do not allow @GOTOFF in\n-      ought but a memory context.  */\n-   && ! pic_symbolic_operand (operands[2], VOIDmode)\"\n+   && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n {\n   switch (get_attr_type (insn))\n     {\n@@ -6623,10 +6606,7 @@\n    (set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI (plus:SI (match_dup 1) (match_dup 2))))]\n   \"TARGET_64BIT && ix86_match_ccmode (insn, CCZmode)\n-   && ix86_binary_operator_ok (PLUS, SImode, operands)\n-   /* Current assemblers are broken and do not allow @GOTOFF in\n-      ought but a memory context.  */\n-   && ! pic_symbolic_operand (operands[2], VOIDmode)\"\n+   && ix86_binary_operator_ok (PLUS, SImode, operands)\"\n {\n   switch (get_attr_type (insn))\n     {\n@@ -6907,10 +6887,7 @@\n \t  (const_int 0)))\n    (clobber (match_scratch:SWI48 0 \"=r\"))]\n   \"ix86_match_ccmode (insn, CCGOCmode)\n-   && !(MEM_P (operands[1]) && MEM_P (operands[2]))\n-   /* Current assemblers are broken and do not allow @GOTOFF in\n-      ought but a memory context.  */\n-   && ! pic_symbolic_operand (operands[2], VOIDmode)\"\n+   && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n {\n   switch (get_attr_type (insn))\n     {"}, {"sha": "a33d3af9ec0e9d9199eb877311d5d2098fa8ac33", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e51aa12cc0df15a524c9c90f4d349eca90290/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e51aa12cc0df15a524c9c90f4d349eca90290/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=308e51aa12cc0df15a524c9c90f4d349eca90290", "patch": "@@ -420,36 +420,6 @@\n     }\n })\n \n-;; Return true if the operand contains a @GOT or @GOTOFF reference.\n-(define_predicate \"pic_symbolic_operand\"\n-  (match_code \"const\")\n-{\n-  op = XEXP (op, 0);\n-  if (TARGET_64BIT)\n-    {\n-      if (GET_CODE (op) == UNSPEC\n-\t  && XINT (op, 1) == UNSPEC_GOTPCREL)\n-\treturn 1;\n-      if (GET_CODE (op) == PLUS\n-\t  && GET_CODE (XEXP (op, 0)) == UNSPEC\n-\t  && XINT (XEXP (op, 0), 1) == UNSPEC_GOTPCREL)\n-\treturn 1;\n-    }\n-  else\n-    {\n-      if (GET_CODE (op) == UNSPEC)\n-\treturn 1;\n-      if (GET_CODE (op) != PLUS\n-\t  || !CONST_INT_P (XEXP (op, 1)))\n-\treturn 0;\n-      op = XEXP (op, 0);\n-      if (GET_CODE (op) == UNSPEC\n-\t  && XINT (op, 1) != UNSPEC_MACHOPIC_OFFSET)\n-\treturn 1;\n-    }\n-  return 0;\n-})\n-\n ;; Return true if OP is a symbolic operand that resolves locally.\n (define_predicate \"local_symbolic_operand\"\n   (match_code \"const,label_ref,symbol_ref\")"}]}