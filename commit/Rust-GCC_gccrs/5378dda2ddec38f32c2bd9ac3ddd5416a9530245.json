{"sha": "5378dda2ddec38f32c2bd9ac3ddd5416a9530245", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM3OGRkYTJkZGVjMzhmMzJjMmJkOWFjM2RkZDU0MTZhOTUzMDI0NQ==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2011-02-12T12:21:54Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2011-02-12T12:21:54Z"}, "message": "xtensa.h (REGISTER_MOVE_COST, [...]): Remove macros.\n\n\t* config/xtensa/xtensa.h (REGISTER_MOVE_COST, MEMORY_MOVE_COST):\n\tRemove macros.\n\t* config/xtensa/xtensa.c (xtensa_register_move_cost,\n\txtensa_memory_move_cost): New functions.\n\t(TARGET_REGISTER_MOVE_COST, TARGET_REGISTER_MOVE_COST): Define.\n\nFrom-SVN: r170071", "tree": {"sha": "8cf021057a154ee764f855e3ab3a5c4be000fa35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cf021057a154ee764f855e3ab3a5c4be000fa35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5378dda2ddec38f32c2bd9ac3ddd5416a9530245", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5378dda2ddec38f32c2bd9ac3ddd5416a9530245", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5378dda2ddec38f32c2bd9ac3ddd5416a9530245", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5378dda2ddec38f32c2bd9ac3ddd5416a9530245/comments", "author": null, "committer": null, "parents": [{"sha": "f3d533d3b5d828abef210862e9644b8ddf96c75b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3d533d3b5d828abef210862e9644b8ddf96c75b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3d533d3b5d828abef210862e9644b8ddf96c75b"}], "stats": {"total": 63, "additions": 43, "deletions": 20}, "files": [{"sha": "ec8f19cde4c14d72acf020f6e4f162959bee4a17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5378dda2ddec38f32c2bd9ac3ddd5416a9530245/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5378dda2ddec38f32c2bd9ac3ddd5416a9530245/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5378dda2ddec38f32c2bd9ac3ddd5416a9530245", "patch": "@@ -1,3 +1,11 @@\n+2011-02-12  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/xtensa/xtensa.h (REGISTER_MOVE_COST, MEMORY_MOVE_COST):\n+\tRemove macros.\n+\t* config/xtensa/xtensa.c (xtensa_register_move_cost,\n+\txtensa_memory_move_cost): New functions.\n+\t(TARGET_REGISTER_MOVE_COST, TARGET_REGISTER_MOVE_COST): Define.\n+\n 2011-02-12  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR lto/47225"}, {"sha": "e7c395be546c518383864d2fad1479f61c2e0364", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5378dda2ddec38f32c2bd9ac3ddd5416a9530245/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5378dda2ddec38f32c2bd9ac3ddd5416a9530245/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=5378dda2ddec38f32c2bd9ac3ddd5416a9530245", "patch": "@@ -137,6 +137,9 @@ static unsigned int xtensa_multibss_section_type_flags (tree, const char *,\n static section *xtensa_select_rtx_section (enum machine_mode, rtx,\n \t\t\t\t\t   unsigned HOST_WIDE_INT);\n static bool xtensa_rtx_costs (rtx, int, int, int *, bool);\n+static int xtensa_register_move_cost (enum machine_mode, reg_class_t,\n+\t\t\t\t      reg_class_t);\n+static int xtensa_memory_move_cost (enum machine_mode, reg_class_t, bool);\n static tree xtensa_build_builtin_va_list (void);\n static bool xtensa_return_in_memory (const_tree, const_tree);\n static tree xtensa_gimplify_va_arg_expr (tree, tree, gimple_seq *,\n@@ -213,6 +216,10 @@ static const struct default_options xtensa_option_optimization_table[] =\n #undef TARGET_MODE_DEPENDENT_ADDRESS_P\n #define TARGET_MODE_DEPENDENT_ADDRESS_P xtensa_mode_dependent_address_p\n \n+#undef TARGET_REGISTER_MOVE_COST\n+#define TARGET_REGISTER_MOVE_COST xtensa_register_move_cost\n+#undef TARGET_MEMORY_MOVE_COST\n+#define TARGET_MEMORY_MOVE_COST xtensa_memory_move_cost\n #undef TARGET_RTX_COSTS\n #define TARGET_RTX_COSTS xtensa_rtx_costs\n #undef TARGET_ADDRESS_COST\n@@ -3307,6 +3314,34 @@ xtensa_select_rtx_section (enum machine_mode mode ATTRIBUTE_UNUSED,\n   return function_section (current_function_decl);\n }\n \n+/* Worker function for TARGET_REGISTER_MOVE_COST.  */\n+\n+static int\n+xtensa_register_move_cost (enum machine_mode mode ATTRIBUTE_UNUSED,\n+\t\t\t   reg_class_t from, reg_class_t to)\n+{\n+  if (from == to && from != BR_REGS && to != BR_REGS)\n+    return 2;\n+  else if (reg_class_subset_p (from, AR_REGS)\n+\t   && reg_class_subset_p (to, AR_REGS))\n+    return 2;\n+  else if (reg_class_subset_p (from, AR_REGS) && to == ACC_REG)\n+    return 3;\n+  else if (from == ACC_REG && reg_class_subset_p (to, AR_REGS))\n+    return 3;\n+  else\n+    return 10;\n+}\n+\n+/* Worker function for TARGET_MEMORY_MOVE_COST.  */\n+\n+static int\n+xtensa_memory_move_cost (enum machine_mode mode ATTRIBUTE_UNUSED,\n+\t\t\t reg_class_t rclass ATTRIBUTE_UNUSED,\n+\t\t\t bool in ATTRIBUTE_UNUSED)\n+{\n+  return 4;\n+}\n \n /* Compute a (partial) cost for rtx X.  Return true if the complete\n    cost has been computed, and false if subexpressions should be"}, {"sha": "0a096cdb5e434ffaad6d1e64993e2a1cc6a1a22d", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5378dda2ddec38f32c2bd9ac3ddd5416a9530245/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5378dda2ddec38f32c2bd9ac3ddd5416a9530245/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=5378dda2ddec38f32c2bd9ac3ddd5416a9530245", "patch": "@@ -723,26 +723,6 @@ typedef struct xtensa_args\n    indexing purposes) so give the MEM rtx a words's mode.  */\n #define FUNCTION_MODE SImode\n \n-/* A C expression for the cost of moving data from a register in\n-   class FROM to one in class TO.  The classes are expressed using\n-   the enumeration values such as 'GENERAL_REGS'.  A value of 2 is\n-   the default; other values are interpreted relative to that.  */\n-#define REGISTER_MOVE_COST(MODE, FROM, TO)\t\t\t\t\\\n-  (((FROM) == (TO) && (FROM) != BR_REGS && (TO) != BR_REGS)\t\t\\\n-   ? 2\t\t\t\t\t\t\t\t\t\\\n-   : (reg_class_subset_p ((FROM), AR_REGS)\t\t\t\t\\\n-      && reg_class_subset_p ((TO), AR_REGS)\t\t\t\t\\\n-      ? 2\t\t\t\t\t\t\t\t\\\n-      : (reg_class_subset_p ((FROM), AR_REGS)\t\t\t\t\\\n-\t && (TO) == ACC_REG\t\t\t\t\t\t\\\n-\t ? 3\t\t\t\t\t\t\t\t\\\n-\t : ((FROM) == ACC_REG\t\t\t\t\t\t\\\n-\t    && reg_class_subset_p ((TO), AR_REGS)\t\t\t\\\n-\t    ? 3\t\t\t\t\t\t\t\t\\\n-\t    : 10))))\n-\n-#define MEMORY_MOVE_COST(MODE, CLASS, IN) 4\n-\n #define BRANCH_COST(speed_p, predictable_p) 3\n \n /* How to refer to registers in assembler output."}]}