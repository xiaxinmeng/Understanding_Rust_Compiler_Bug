{"sha": "1fe73fd6965364ba89ff2919ef8bfd416298615f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZlNzNmZDY5NjUzNjRiYTg5ZmYyOTE5ZWY4YmZkNDE2Mjk4NjE1Zg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2020-04-02T20:47:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-16T13:07:11Z"}, "message": "[Ada] Spurious undefined symbol with nested call to expression function\n\n2020-06-16  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* freeze.adb: (Freeze_Expression, In_Expanded_Body): Treat the\n\tgenerated body of an expression function like other bodies\n\tgenerated during expansion (e.g. stream subprograms) so that\n\tthose bodies are not treated as freezing points. Handle properly\n\tother global references in such completions.", "tree": {"sha": "75ff03b74f10bf0024016edec056534b209d613b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75ff03b74f10bf0024016edec056534b209d613b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fe73fd6965364ba89ff2919ef8bfd416298615f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fe73fd6965364ba89ff2919ef8bfd416298615f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fe73fd6965364ba89ff2919ef8bfd416298615f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fe73fd6965364ba89ff2919ef8bfd416298615f/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7769a80a8ca67be548ad926c81b8a23eedfc3ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7769a80a8ca67be548ad926c81b8a23eedfc3ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7769a80a8ca67be548ad926c81b8a23eedfc3ea"}], "stats": {"total": 36, "additions": 16, "deletions": 20}, "files": [{"sha": "5c0fbee50832d2b01e479a21b06e10cace975f2f", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 16, "deletions": 20, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fe73fd6965364ba89ff2919ef8bfd416298615f/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fe73fd6965364ba89ff2919ef8bfd416298615f/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=1fe73fd6965364ba89ff2919ef8bfd416298615f", "patch": "@@ -7071,8 +7071,9 @@ package body Freeze is\n       function In_Expanded_Body (N : Node_Id) return Boolean;\n       --  Given an N_Handled_Sequence_Of_Statements node N, determines whether\n       --  it is the handled statement sequence of an expander-generated\n-      --  subprogram (init proc, stream subprogram, or renaming as body).\n-      --  If so, this is not a freezing context.\n+      --  subprogram: init proc, stream subprogram, renaming as body, or body\n+      --  created for an expression function. If so, this is not a freezing\n+      --  context and the entity will be frozen at a later point.\n \n       -----------------------------------------\n       -- Find_Aggregate_Component_Desig_Type --\n@@ -7126,6 +7127,13 @@ package body Freeze is\n          if Nkind (P) /= N_Subprogram_Body then\n             return False;\n \n+         --  AI12-0152 : an expression function that is a completion\n+         --  is a freeze point. If the body is the result of expansion\n+         --  it is not.\n+\n+         elsif Was_Expression_Function (P) then\n+            return not Comes_From_Source (P);\n+\n          else\n             Id := Defining_Unit_Name (Specification (P));\n \n@@ -7539,28 +7547,16 @@ package body Freeze is\n                            end if;\n                         end if;\n \n-                        --  An expression function may act as a completion of\n-                        --  a function declaration. As such, it can reference\n-                        --  entities declared between the two views:\n-\n-                        --     Hidden [];                             -- 1\n-                        --     function F return ...;\n-                        --     private\n-                        --        function Hidden return ...;\n-                        --        function F return ... is (Hidden);  -- 2\n-\n-                        --  Refering to the example above, freezing the\n-                        --  expression of F (2) would place Hidden's freeze\n-                        --  node (1) in the wrong place. Avoid explicit\n-                        --  freezing and let the usual scenarios do the job\n-                        --  (for example, reaching the end of the private\n-                        --  declarations, or a call to F.)\n+                        --  If the entity is not frozen by an expression\n+                        --  function that is a completion, continue climing\n+                        --  the tree.\n \n-                        if Nkind (Original_Node (Subp)) = N_Expression_Function\n+                        if Nkind (Subp) = N_Subprogram_Body\n+                          and then Was_Expression_Function (Subp)\n                         then\n                            null;\n \n-                        --  Freeze outside the body\n+                           --  Freeze outside the body\n \n                         else\n                            Parent_P := Parent (Parent_P);"}]}