{"sha": "6b57ac2977821017212b879c4d0a80ed0f646ce5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI1N2FjMjk3NzgyMTAxNzIxMmI4NzljNGQwYTgwZWQwZjY0NmNlNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-05-24T22:37:10Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-05-24T22:37:10Z"}, "message": "decl.c (push_namespace): Namespaces have type void.\n\n\t* decl.c (push_namespace): Namespaces have type void.\n\t* typeck2.c (incomplete_type_error): Complain about namespace\n\tused as expression.\n\t* typeck.c (decay_conversion): Likewise.\n\t* error.c (dump_expr): Support namespaces.\n\nFrom-SVN: r20035", "tree": {"sha": "25d733423b5b8852475581fdaff777239157f6f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25d733423b5b8852475581fdaff777239157f6f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b57ac2977821017212b879c4d0a80ed0f646ce5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b57ac2977821017212b879c4d0a80ed0f646ce5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b57ac2977821017212b879c4d0a80ed0f646ce5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b57ac2977821017212b879c4d0a80ed0f646ce5/comments", "author": null, "committer": null, "parents": [{"sha": "51c4eb9bbfd126580e88d86b8d740d2c0c011558", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51c4eb9bbfd126580e88d86b8d740d2c0c011558", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51c4eb9bbfd126580e88d86b8d740d2c0c011558"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "917a3028d65f52be0b17617f495c8e040302831f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b57ac2977821017212b879c4d0a80ed0f646ce5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b57ac2977821017212b879c4d0a80ed0f646ce5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6b57ac2977821017212b879c4d0a80ed0f646ce5", "patch": "@@ -1,3 +1,14 @@\n+1998-05-24  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* decl.c (push_namespace): Namespaces have type void.\n+\t* typeck2.c (incomplete_type_error): Complain about namespace\n+\tused as expression.\n+\t* typeck.c (decay_conversion): Likewise.\n+\n+1998-05-24  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n+\n+\t* error.c (dump_expr): Support namespaces.\n+\n 1998-05-23  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* cp-tree.def: Add SRCLOC."}, {"sha": "1fb79382e6fe82ceff24d59a3c24e9082cf1ca12", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b57ac2977821017212b879c4d0a80ed0f646ce5/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b57ac2977821017212b879c4d0a80ed0f646ce5/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6b57ac2977821017212b879c4d0a80ed0f646ce5", "patch": "@@ -1816,7 +1816,7 @@ push_namespace (name)\n   if (need_new)\n     {\n       /* Make a new namespace, binding the name to it. */\n-      d = build_lang_decl (NAMESPACE_DECL, name, NULL_TREE);\n+      d = build_lang_decl (NAMESPACE_DECL, name, void_type_node);\n       /* The global namespace is not pushed, and the global binding\n \t level is set elsewhere.  */\n       if (!global)"}, {"sha": "4eb7da0692bfa58ab50e3c35e0a6f5aaf9b5227b", "filename": "gcc/cp/error.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b57ac2977821017212b879c4d0a80ed0f646ce5/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b57ac2977821017212b879c4d0a80ed0f646ce5/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=6b57ac2977821017212b879c4d0a80ed0f646ce5", "patch": "@@ -1191,6 +1191,7 @@ dump_expr (t, nop)\n     case CONST_DECL:\n     case FUNCTION_DECL:\n     case TEMPLATE_DECL:\n+    case NAMESPACE_DECL:\n       dump_decl (t, -1);\n       break;\n "}, {"sha": "135bbd1f61bfb33a040dba06f075bfbbd72721b7", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b57ac2977821017212b879c4d0a80ed0f646ce5/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b57ac2977821017212b879c4d0a80ed0f646ce5/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=6b57ac2977821017212b879c4d0a80ed0f646ce5", "patch": "@@ -1597,6 +1597,12 @@ decay_conversion (exp)\n       type = TREE_TYPE (exp);\n     }\n \n+  if (TREE_CODE (exp) == NAMESPACE_DECL)\n+    {\n+      cp_error (\"namespace `%D' used as expression\", exp);\n+      return error_mark_node;\n+    }\n+\n   /* build_c_cast puts on a NOP_EXPR to make the result not an lvalue.\n      Leave such NOP_EXPRs, since RHS is being used in non-lvalue context.  */\n "}, {"sha": "e53f2ac14ba3aa7c156835d35b9823417d18f156", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b57ac2977821017212b879c4d0a80ed0f646ce5/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b57ac2977821017212b879c4d0a80ed0f646ce5/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=6b57ac2977821017212b879c4d0a80ed0f646ce5", "patch": "@@ -274,6 +274,8 @@ incomplete_type_error (value, type)\n   if (value != 0 && (TREE_CODE (value) == VAR_DECL\n \t\t     || TREE_CODE (value) == PARM_DECL))\n     cp_error (\"`%D' has incomplete type\", value);\n+  else if (value && TREE_CODE (value) == NAMESPACE_DECL)\n+    cp_error (\"namespace `%D' used as expression\", value);\n   else\n     {\n     retry:"}]}