{"sha": "cebde9e9ebb9b9a29f2b6cd07b14fd88089f088f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ViZGU5ZTllYmI5YjlhMjlmMmI2Y2QwN2IxNGZkODgwODlmMDg4Zg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2016-03-11T22:32:11Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-03-11T22:32:11Z"}, "message": "re PR tree-optimization/70190 (ICE (segfault) at -O2 and -O3 on x86_64-linux-gnu)\n\n\tPR tree-optimization/70190\n\t* tree-ssa-threadbackward.c (fsm_find_control_statement_thread_paths):\n\tHandle cases where we can not extract the taken edge, even though we\n\tfound a constant value.\n\n\tPR tree-optimization/70190\n\t* gcc.c-torture/compile/pr70190.c: New test.\n\nFrom-SVN: r234151", "tree": {"sha": "1c289de319b6b0e834082080de232185abce2ed8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c289de319b6b0e834082080de232185abce2ed8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cebde9e9ebb9b9a29f2b6cd07b14fd88089f088f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cebde9e9ebb9b9a29f2b6cd07b14fd88089f088f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cebde9e9ebb9b9a29f2b6cd07b14fd88089f088f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cebde9e9ebb9b9a29f2b6cd07b14fd88089f088f/comments", "author": null, "committer": null, "parents": [{"sha": "015782a5aea37b0cd80b5f1888988d5c79398b81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/015782a5aea37b0cd80b5f1888988d5c79398b81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/015782a5aea37b0cd80b5f1888988d5c79398b81"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "1bc7ab5c8d373b649f48c9b8ba873bbe3b34eda0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cebde9e9ebb9b9a29f2b6cd07b14fd88089f088f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cebde9e9ebb9b9a29f2b6cd07b14fd88089f088f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cebde9e9ebb9b9a29f2b6cd07b14fd88089f088f", "patch": "@@ -1,5 +1,10 @@\n 2016-03-11  Jeff Law  <law@redhat.com>\n \n+\tPR tree-optimization/70190\n+\t* tree-ssa-threadbackward.c (fsm_find_control_statement_thread_paths):\n+\tHandle cases where we can not extract the taken edge, even though we\n+\tfound a constant value.\n+\n \tPR tree-optimization/64058\n \t* tree-ssa-coalesce.c (struct coalesce_pair): Add new field INDEX.\n \t(num_coalesce_pairs): Move up earlier in file."}, {"sha": "e48430c6f74181d6e6828cc8d7a0a6654f9b2e19", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cebde9e9ebb9b9a29f2b6cd07b14fd88089f088f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cebde9e9ebb9b9a29f2b6cd07b14fd88089f088f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cebde9e9ebb9b9a29f2b6cd07b14fd88089f088f", "patch": "@@ -1,3 +1,8 @@\n+2016-03-11  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/70190\n+\t* gcc.c-torture/compile/pr70190.c: New test.\n+\n 2016-03-11  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c/68187"}, {"sha": "d3d209ace98718a798bfde1a505826ffb6fd1145", "filename": "gcc/testsuite/gcc.c-torture/compile/pr70190.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cebde9e9ebb9b9a29f2b6cd07b14fd88089f088f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr70190.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cebde9e9ebb9b9a29f2b6cd07b14fd88089f088f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr70190.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr70190.c?ref=cebde9e9ebb9b9a29f2b6cd07b14fd88089f088f", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-require-effective-target indirect_jumps } */\n+/* { dg-require-effective-target label_values } */\n+\n+\n+int\n+fn1 ()\n+{\n+  static char a[] = \"foo\";\n+  static void *b[] = { &&l1, &&l2 };\n+  goto *(b[1]);\n+ l1: goto *(a[0]);\n+ l2: return 0;\n+}\n+"}, {"sha": "88f8d5eb7783f968dd205db113a412d979707a41", "filename": "gcc/tree-ssa-threadbackward.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cebde9e9ebb9b9a29f2b6cd07b14fd88089f088f/gcc%2Ftree-ssa-threadbackward.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cebde9e9ebb9b9a29f2b6cd07b14fd88089f088f/gcc%2Ftree-ssa-threadbackward.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadbackward.c?ref=cebde9e9ebb9b9a29f2b6cd07b14fd88089f088f", "patch": "@@ -385,6 +385,16 @@ fsm_find_control_statement_thread_paths (tree name,\n \n \t     We have to know the outgoing edge to figure this out.  */\n \t  edge taken_edge = find_taken_edge ((*path)[0], arg);\n+\n+\t  /* There are cases where we may not be able to extract the\n+\t     taken edge.  For example, a computed goto to an absolute\n+\t     address.  Handle those cases gracefully.  */\n+\t  if (taken_edge == NULL)\n+\t    {\n+\t      path->pop ();\n+\t      continue;\n+\t    }\n+\n \t  bool creates_irreducible_loop = false;\n \t  if (threaded_through_latch\n \t      && loop == taken_edge->dest->loop_father"}]}