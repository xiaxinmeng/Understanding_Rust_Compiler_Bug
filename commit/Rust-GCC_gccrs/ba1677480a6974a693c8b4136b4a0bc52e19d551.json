{"sha": "ba1677480a6974a693c8b4136b4a0bc52e19d551", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmExNjc3NDgwYTY5NzRhNjkzYzhiNDEzNmI0YTBiYzUyZTE5ZDU1MQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2018-11-17T11:35:01Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-11-17T11:35:01Z"}, "message": "re PR ipa/87957 (ICE tree check: expected tree that contains \u2018decl minimal\u2019 structure, have \u2018identifier_node\u2019 in warn_odr, at ipa-devirt.c:1051 since r265519)\n\n\tPR ipa/87957\n\t* ipa-devirt.c (warn_odr): Look for main variant to get TYPE_DECL.\n\nFrom-SVN: r266235", "tree": {"sha": "fa4f187a086189c2de819c1fc63b1fe07665d54d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa4f187a086189c2de819c1fc63b1fe07665d54d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba1677480a6974a693c8b4136b4a0bc52e19d551", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba1677480a6974a693c8b4136b4a0bc52e19d551", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba1677480a6974a693c8b4136b4a0bc52e19d551", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba1677480a6974a693c8b4136b4a0bc52e19d551/comments", "author": null, "committer": null, "parents": [{"sha": "d7815fc4509e0caf04c4b43de89b20ac57504307", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7815fc4509e0caf04c4b43de89b20ac57504307", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7815fc4509e0caf04c4b43de89b20ac57504307"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "a6097fde67c29099fd0fa16567fdd9974f7f8bf5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba1677480a6974a693c8b4136b4a0bc52e19d551/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba1677480a6974a693c8b4136b4a0bc52e19d551/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba1677480a6974a693c8b4136b4a0bc52e19d551", "patch": "@@ -1,3 +1,8 @@\n+2018-11-16  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/87957\n+\t* ipa-devirt.c (warn_odr): Look for main variant to get TYPE_DECL.\n+\n 2018-11-16  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* doc/invoke.texi (Option Summary): Fix whitespace and line"}, {"sha": "db8d34c4027403246793e790f9de1b91d0893d25", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba1677480a6974a693c8b4136b4a0bc52e19d551/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba1677480a6974a693c8b4136b4a0bc52e19d551/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=ba1677480a6974a693c8b4136b4a0bc52e19d551", "patch": "@@ -1000,11 +1000,11 @@ static void\n warn_odr (tree t1, tree t2, tree st1, tree st2,\n \t  bool warn, bool *warned, const char *reason)\n {\n-  tree decl2 = TYPE_NAME (t2);\n+  tree decl2 = TYPE_NAME (TYPE_MAIN_VARIANT (t2));\n   if (warned)\n     *warned = false;\n \n-  if (!warn || !TYPE_NAME(t1))\n+  if (!warn || !TYPE_NAME(TYPE_MAIN_VARIANT (t1)))\n     return;\n \n   /* ODR warnings are output druing LTO streaming; we must apply location\n@@ -1013,10 +1013,22 @@ warn_odr (tree t1, tree t2, tree st1, tree st2,\n     lto_location_cache::current_cache->apply_location_cache ();\n \n   auto_diagnostic_group d;\n-  if (!warning_at (DECL_SOURCE_LOCATION (TYPE_NAME (t1)), OPT_Wodr,\n-\t\t   \"type %qT violates the C++ One Definition Rule\",\n-\t\t   t1))\n-    return;\n+  if (t1 != TYPE_MAIN_VARIANT (t1)\n+      && TYPE_NAME (t1) != DECL_NAME (TYPE_MAIN_VARIANT (t1)))\n+    {\n+      if (!warning_at (DECL_SOURCE_LOCATION (TYPE_NAME (TYPE_MAIN_VARIANT (t1))),\n+\t\t       OPT_Wodr, \"type %qT (typedef of %qT) violates the \"\n+\t\t       \"C++ One Definition Rule\",\n+\t\t       t1, TYPE_MAIN_VARIANT (t1)))\n+\treturn;\n+    }\n+  else\n+    {\n+      if (!warning_at (DECL_SOURCE_LOCATION (TYPE_NAME (TYPE_MAIN_VARIANT (t1))),\n+\t\t       OPT_Wodr, \"type %qT violates the C++ One Definition Rule\",\n+\t\t       t1))\n+\treturn;\n+    }\n   if (!st1 && !st2)\n     ;\n   /* For FIELD_DECL support also case where one of fields is"}]}