{"sha": "eb4f83d1f100cae0cb66c6e6b4d67f5e53d3da51", "node_id": "C_kwDOANBUbNoAKGViNGY4M2QxZjEwMGNhZTBjYjY2YzZlNmI0ZDY3ZjVlNTNkM2RhNTE", "commit": {"author": {"name": "LiaoShihua", "email": "shihua@iscas.ac.cn", "date": "2022-03-08T03:30:51Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-03-16T13:11:45Z"}, "message": "RISC-V: Handle combine extension in canonical ordering.\n\nThe crypto extension have several shorthand extensions that don't consist of any extra instructions.\nTake zk for example, while the extension would imply zkn, zkr, zkt.\nThe 3 extensions should also combine back into zk to maintain the canonical order in isa strings.\nThis patch addresses the above.\nAnd if the other extension has the same situation, you can add them in riscv_combine_info[]\n\ngcc/ChangeLog:\n\n\t* common/config/riscv/riscv-common.cc\n\t(riscv_combine_info): New.\n\t(riscv_subset_list::handle_combine_ext): Combine back into zk to\n\tmaintain the canonical order in isa strings.\n\t(riscv_subset_list::parse): Ditto.\n\t* config/riscv/riscv-subset.h (handle_combine_ext): New.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/predef-17.c: New test.", "tree": {"sha": "5936fe82da0af0570083ab0c90550f5fd486f13d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5936fe82da0af0570083ab0c90550f5fd486f13d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb4f83d1f100cae0cb66c6e6b4d67f5e53d3da51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb4f83d1f100cae0cb66c6e6b4d67f5e53d3da51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb4f83d1f100cae0cb66c6e6b4d67f5e53d3da51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb4f83d1f100cae0cb66c6e6b4d67f5e53d3da51/comments", "author": {"login": "Liaoshihua", "id": 43035022, "node_id": "MDQ6VXNlcjQzMDM1MDIy", "avatar_url": "https://avatars.githubusercontent.com/u/43035022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Liaoshihua", "html_url": "https://github.com/Liaoshihua", "followers_url": "https://api.github.com/users/Liaoshihua/followers", "following_url": "https://api.github.com/users/Liaoshihua/following{/other_user}", "gists_url": "https://api.github.com/users/Liaoshihua/gists{/gist_id}", "starred_url": "https://api.github.com/users/Liaoshihua/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Liaoshihua/subscriptions", "organizations_url": "https://api.github.com/users/Liaoshihua/orgs", "repos_url": "https://api.github.com/users/Liaoshihua/repos", "events_url": "https://api.github.com/users/Liaoshihua/events{/privacy}", "received_events_url": "https://api.github.com/users/Liaoshihua/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6fb661ea8ac7e17c6924719de6219f002c4efef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6fb661ea8ac7e17c6924719de6219f002c4efef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6fb661ea8ac7e17c6924719de6219f002c4efef"}], "stats": {"total": 120, "additions": 120, "deletions": 0}, "files": [{"sha": "e4eedcdda2a661935b1448bbfd41acf6a48caf00", "filename": "gcc/common/config/riscv/riscv-common.cc", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4f83d1f100cae0cb66c6e6b4d67f5e53d3da51/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4f83d1f100cae0cb66c6e6b4d67f5e53d3da51/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc?ref=eb4f83d1f100cae0cb66c6e6b4d67f5e53d3da51", "patch": "@@ -189,6 +189,16 @@ static const struct riscv_ext_version riscv_ext_version_table[] =\n   {NULL, ISA_SPEC_CLASS_NONE, 0, 0}\n };\n \n+/* Combine extensions defined in this table  */\n+static const struct riscv_ext_version riscv_combine_info[] =\n+{\n+  {\"zk\",  ISA_SPEC_CLASS_NONE, 1, 0},\n+  {\"zkn\",  ISA_SPEC_CLASS_NONE, 1, 0},\n+  {\"zks\",  ISA_SPEC_CLASS_NONE, 1, 0},\n+  /* Terminate the list.  */\n+  {NULL, ISA_SPEC_CLASS_NONE, 0, 0}\n+};\n+\n static const riscv_cpu_info riscv_cpu_tables[] =\n {\n #define RISCV_CORE(CORE_NAME, ARCH, TUNE) \\\n@@ -813,6 +823,50 @@ riscv_subset_list::handle_implied_ext (riscv_subset_t *ext)\n     }\n }\n \n+/* Check any combine extensions for EXT.  */\n+void\n+riscv_subset_list::handle_combine_ext ()\n+{\n+  const riscv_ext_version *combine_info;\n+  const riscv_implied_info_t *implied_info;\n+  bool is_combined = false;\n+\n+  for (combine_info = &riscv_combine_info[0]; combine_info->name;\n+       ++combine_info)\n+    {\n+      /* Skip if combine extensions are present */\n+      if (lookup (combine_info->name))\n+\tcontinue;\n+\n+      /* Find all extensions of the combine extension   */\n+      for (implied_info = &riscv_implied_info[0]; implied_info->ext;\n+\t   ++implied_info)\n+\t{\n+\t  /* Skip if implied extension don't match combine extension */\n+\t  if (strcmp (combine_info->name, implied_info->ext) != 0)\n+\t    continue;\n+\n+\t  if (lookup (implied_info->implied_ext))\n+\t    is_combined = true;\n+\t  else\n+\t    {\n+\t      is_combined = false;\n+\t      break;\n+\t    }\n+\t}\n+\n+      /* Add combine extensions */\n+      if (is_combined)\n+\t{\n+\t  if (lookup (combine_info->name) == NULL)\n+\t    {\n+\t      add (combine_info->name, combine_info->major_version,\n+\t\t   combine_info->minor_version, false, true);\n+\t    }\n+\t}\n+    }\n+}\n+\n /* Parsing function for multi-letter extensions.\n \n    Return Value:\n@@ -992,6 +1046,8 @@ riscv_subset_list::parse (const char *arch, location_t loc)\n       subset_list->handle_implied_ext (itr);\n     }\n \n+  subset_list->handle_combine_ext ();\n+\n   return subset_list;\n \n fail:"}, {"sha": "c59265028f4ef1bb71a743f798cb68e75f6a182b", "filename": "gcc/config/riscv/riscv-subset.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4f83d1f100cae0cb66c6e6b4d67f5e53d3da51/gcc%2Fconfig%2Friscv%2Friscv-subset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4f83d1f100cae0cb66c6e6b4d67f5e53d3da51/gcc%2Fconfig%2Friscv%2Friscv-subset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-subset.h?ref=eb4f83d1f100cae0cb66c6e6b4d67f5e53d3da51", "patch": "@@ -68,6 +68,7 @@ class riscv_subset_list\n \t\t\t\t     const char *);\n \n   void handle_implied_ext (riscv_subset_t *);\n+  void handle_combine_ext ();\n \n public:\n   ~riscv_subset_list ();"}, {"sha": "1510d880f67fd571165f60ba900603c35a438cdf", "filename": "gcc/testsuite/gcc.target/riscv/predef-17.c", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4f83d1f100cae0cb66c6e6b4d67f5e53d3da51/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4f83d1f100cae0cb66c6e6b4d67f5e53d3da51/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-17.c?ref=eb4f83d1f100cae0cb66c6e6b4d67f5e53d3da51", "patch": "@@ -0,0 +1,63 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64i_zbkb_zbkc_zbkx_zknd_zkne_zknh_zksed_zksh_zkr_zkt -mabi=lp64 -mcmodel=medlow -misa-spec=2.2\" } */\n+\n+int main () {\n+\n+#ifndef __riscv_arch_test\n+#error \"__riscv_arch_test\"\n+#endif\n+\n+#if __riscv_xlen != 64\n+#error \"__riscv_xlen\"\n+#endif\n+\n+#if !defined(__riscv_i)\n+#error \"__riscv_i\"\n+#endif\n+\n+#if !defined(__riscv_zk)\n+#error \"__riscv_zk\"\n+#endif\n+\n+#if !defined(__riscv_zkr)\n+#error \"__riscv_zkr\"\n+#endif\n+\n+#if !defined(__riscv_zkn)\n+#error \"__riscv_zkn\"\n+#endif\n+\n+#if !defined(__riscv_zks)\n+#error \"__riscv_zks\"\n+#endif\n+\n+#if !defined(__riscv_zbkb)\n+#error \"__riscv_zbkb\"\n+#endif\n+\n+#if !defined(__riscv_zbkc)\n+#error \"__riscv_zbkc\"\n+#endif\n+\n+#if !defined(__riscv_zbkx)\n+#error \"__riscv_zbkx\"\n+#endif\n+\n+#if !defined(__riscv_zknd)\n+#error \"__riscv_zknd\"\n+#endif\n+\n+#if !defined(__riscv_zkne)\n+#error \"__riscv_zkne\"\n+#endif\n+\n+#if !defined(__riscv_zknh)\n+#error \"__riscv_zknh\"\n+#endif\n+\n+#if !defined(__riscv_zksh)\n+#error \"__riscv_zksh\"\n+#endif\n+\n+  return 0;\n+}"}]}