{"sha": "1d6aee1c9ed496b3e4338b60ea25814814a64154", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ2YWVlMWM5ZWQ0OTZiM2U0MzM4YjYwZWEyNTgxNDgxNGE2NDE1NA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2013-07-25T16:31:51Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2013-07-25T16:31:51Z"}, "message": "arm-fixed.md (ssmulsa3, usmulusa3): Adjust for arm_restrict_it.\n\n2013-07-25  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n\n\t* config/arm/arm-fixed.md (ssmulsa3, usmulusa3):\n\tAdjust for arm_restrict_it.\n\tRemove trailing whitespace.\n\nFrom-SVN: r201249", "tree": {"sha": "9064020a71df8bffff45cdb596dbaea2c6773922", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9064020a71df8bffff45cdb596dbaea2c6773922"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d6aee1c9ed496b3e4338b60ea25814814a64154", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d6aee1c9ed496b3e4338b60ea25814814a64154", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d6aee1c9ed496b3e4338b60ea25814814a64154", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d6aee1c9ed496b3e4338b60ea25814814a64154/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "017d38f508a019b173b909dd3314f0e1d52fe1bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/017d38f508a019b173b909dd3314f0e1d52fe1bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/017d38f508a019b173b909dd3314f0e1d52fe1bc"}], "stats": {"total": 68, "additions": 48, "deletions": 20}, "files": [{"sha": "84dd63026b5759805467328dc549d0a8c469a89d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6aee1c9ed496b3e4338b60ea25814814a64154/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6aee1c9ed496b3e4338b60ea25814814a64154/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d6aee1c9ed496b3e4338b60ea25814814a64154", "patch": "@@ -1,3 +1,9 @@\n+2013-07-25  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm-fixed.md (ssmulsa3, usmulusa3):\n+\tAdjust for arm_restrict_it.\n+\tRemove trailing whitespace.\n+\n 2013-07-25 \u00a0Mark Kettenis \u00a0<kettenis@openbsd.org>\n \n \t* config/pa/pa.c (pa_trampoline_init): Emit __enable_execute_stack"}, {"sha": "dc8e7ac8c140bd53464dfbb3d7da51e45d83b2a3", "filename": "gcc/config/arm/arm-fixed.md", "status": "modified", "additions": 42, "deletions": 20, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6aee1c9ed496b3e4338b60ea25814814a64154/gcc%2Fconfig%2Farm%2Farm-fixed.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6aee1c9ed496b3e4338b60ea25814814a64154/gcc%2Fconfig%2Farm%2Farm-fixed.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-fixed.md?ref=1d6aee1c9ed496b3e4338b60ea25814814a64154", "patch": "@@ -104,7 +104,7 @@\n   rtx tmp1 = gen_reg_rtx (HImode);\n   rtx tmp2 = gen_reg_rtx (HImode);\n   rtx tmp3 = gen_reg_rtx (SImode);\n-  \n+\n   emit_insn (gen_extendqihi2 (tmp1, gen_lowpart (QImode, operands[1])));\n   emit_insn (gen_extendqihi2 (tmp2, gen_lowpart (QImode, operands[2])));\n   emit_insn (gen_mulhisi3 (tmp3, tmp1, tmp2));\n@@ -140,7 +140,7 @@\n   rtx tmp1 = gen_reg_rtx (DImode);\n   rtx tmp2 = gen_reg_rtx (SImode);\n   rtx tmp3 = gen_reg_rtx (SImode);\n-  \n+\n   /* s.31 * s.31 -> s.62 multiplication.  */\n   emit_insn (gen_mulsidi3 (tmp1, gen_lowpart (SImode, operands[1]),\n \t\t\t   gen_lowpart (SImode, operands[2])));\n@@ -162,7 +162,7 @@\n   rtx tmp1 = gen_reg_rtx (DImode);\n   rtx tmp2 = gen_reg_rtx (SImode);\n   rtx tmp3 = gen_reg_rtx (SImode);\n-  \n+\n   emit_insn (gen_mulsidi3 (tmp1, gen_lowpart (SImode, operands[1]),\n \t\t\t   gen_lowpart (SImode, operands[2])));\n   emit_insn (gen_lshrsi3 (tmp2, gen_lowpart (SImode, tmp1), GEN_INT (15)));\n@@ -181,13 +181,13 @@\n   rtx tmp1 = gen_reg_rtx (DImode);\n   rtx tmp2 = gen_reg_rtx (SImode);\n   rtx tmp3 = gen_reg_rtx (SImode);\n-  \n+\n   emit_insn (gen_umulsidi3 (tmp1, gen_lowpart (SImode, operands[1]),\n \t\t\t    gen_lowpart (SImode, operands[2])));\n   emit_insn (gen_lshrsi3 (tmp2, gen_lowpart (SImode, tmp1), GEN_INT (16)));\n   emit_insn (gen_ashlsi3 (tmp3, gen_highpart (SImode, tmp1), GEN_INT (16)));\n   emit_insn (gen_iorsi3 (gen_lowpart (SImode, operands[0]), tmp2, tmp3));\n-  \n+\n   DONE;\n })\n \n@@ -217,7 +217,7 @@\n     }\n \n   /* We have:\n-      31  high word  0     31  low word  0 \n+      31  high word  0     31  low word  0\n \n     [ S i i .... i i i ] [ i f f f ... f f ]\n                         |\n@@ -229,17 +229,28 @@\n   output_asm_insn (\"ssat\\\\t%R3, #15, %R3\", operands);\n   output_asm_insn (\"mrs\\\\t%4, APSR\", operands);\n   output_asm_insn (\"tst\\\\t%4, #1<<27\", operands);\n-  if (TARGET_THUMB2)\n-    output_asm_insn (\"it\\\\tne\", operands);\n-  output_asm_insn (\"mvnne\\\\t%Q3, %R3, asr #32\", operands);\n+  if (arm_restrict_it)\n+    {\n+      output_asm_insn (\"mvn\\\\t%4, %R3, asr #32\", operands);\n+      output_asm_insn (\"it\\\\tne\", operands);\n+      output_asm_insn (\"movne\\\\t%Q3, %4\", operands);\n+    }\n+  else\n+    {\n+      if (TARGET_THUMB2)\n+        output_asm_insn (\"it\\\\tne\", operands);\n+      output_asm_insn (\"mvnne\\\\t%Q3, %R3, asr #32\", operands);\n+    }\n   output_asm_insn (\"mov\\\\t%0, %Q3, lsr #15\", operands);\n   output_asm_insn (\"orr\\\\t%0, %0, %R3, asl #17\", operands);\n   return \"\";\n }\n   [(set_attr \"conds\" \"clob\")\n    (set (attr \"length\")\n \t(if_then_else (eq_attr \"is_thumb\" \"yes\")\n-\t\t      (const_int 38)\n+\t\t      (if_then_else (match_test \"arm_restrict_it\")\n+\t\t                    (const_int 40)\n+\t\t                    (const_int 38))\n \t\t      (const_int 32)))])\n \n ;; Same goes for this.\n@@ -265,7 +276,7 @@\n     }\n \n   /* We have:\n-      31  high word  0     31  low word  0 \n+      31  high word  0     31  low word  0\n \n     [ i i i .... i i i ] [ f f f f ... f f ]\n                         |\n@@ -277,17 +288,28 @@\n   output_asm_insn (\"usat\\\\t%R3, #16, %R3\", operands);\n   output_asm_insn (\"mrs\\\\t%4, APSR\", operands);\n   output_asm_insn (\"tst\\\\t%4, #1<<27\", operands);\n-  if (TARGET_THUMB2)\n-    output_asm_insn (\"it\\\\tne\", operands);\n-  output_asm_insn (\"sbfxne\\\\t%Q3, %R3, #15, #1\", operands);\n+  if (arm_restrict_it)\n+    {\n+      output_asm_insn (\"sbfx\\\\t%4, %R3, #15, #1\", operands);\n+      output_asm_insn (\"it\\\\tne\", operands);\n+      output_asm_insn (\"movne\\\\t%Q3, %4\", operands);\n+    }\n+  else\n+    {\n+      if (TARGET_THUMB2)\n+        output_asm_insn (\"it\\\\tne\", operands);\n+      output_asm_insn (\"sbfxne\\\\t%Q3, %R3, #15, #1\", operands);\n+    }\n   output_asm_insn (\"lsr\\\\t%0, %Q3, #16\", operands);\n   output_asm_insn (\"orr\\\\t%0, %0, %R3, asl #16\", operands);\n   return \"\";\n }\n   [(set_attr \"conds\" \"clob\")\n    (set (attr \"length\")\n \t(if_then_else (eq_attr \"is_thumb\" \"yes\")\n-\t\t      (const_int 38)\n+\t\t      (if_then_else (match_test \"arm_restrict_it\")\n+\t\t                    (const_int 40)\n+\t\t                    (const_int 38))\n \t\t      (const_int 32)))])\n \n (define_expand \"mulha3\"\n@@ -297,7 +319,7 @@\n   \"TARGET_DSP_MULTIPLY && arm_arch_thumb2\"\n {\n   rtx tmp = gen_reg_rtx (SImode);\n-  \n+\n   emit_insn (gen_mulhisi3 (tmp, gen_lowpart (HImode, operands[1]),\n \t\t\t   gen_lowpart (HImode, operands[2])));\n   emit_insn (gen_extv (gen_lowpart (SImode, operands[0]), tmp, GEN_INT (16),\n@@ -315,7 +337,7 @@\n   rtx tmp1 = gen_reg_rtx (SImode);\n   rtx tmp2 = gen_reg_rtx (SImode);\n   rtx tmp3 = gen_reg_rtx (SImode);\n-  \n+\n   /* 8.8 * 8.8 -> 16.16 multiply.  */\n   emit_insn (gen_zero_extendhisi2 (tmp1, gen_lowpart (HImode, operands[1])));\n   emit_insn (gen_zero_extendhisi2 (tmp2, gen_lowpart (HImode, operands[2])));\n@@ -334,7 +356,7 @@\n {\n   rtx tmp = gen_reg_rtx (SImode);\n   rtx rshift;\n-  \n+\n   emit_insn (gen_mulhisi3 (tmp, gen_lowpart (HImode, operands[1]),\n \t\t\t   gen_lowpart (HImode, operands[2])));\n \n@@ -356,12 +378,12 @@\n   rtx tmp2 = gen_reg_rtx (SImode);\n   rtx tmp3 = gen_reg_rtx (SImode);\n   rtx rshift_tmp = gen_reg_rtx (SImode);\n-  \n+\n   /* Note: there's no smul[bt][bt] equivalent for unsigned multiplies.  Use a\n      normal 32x32->32-bit multiply instead.  */\n   emit_insn (gen_zero_extendhisi2 (tmp1, gen_lowpart (HImode, operands[1])));\n   emit_insn (gen_zero_extendhisi2 (tmp2, gen_lowpart (HImode, operands[2])));\n-  \n+\n   emit_insn (gen_mulsi3 (tmp3, tmp1, tmp2));\n \n   /* The operand to \"usat\" is signed, so we cannot use the \"..., asr #8\""}]}