{"sha": "20d83a046afd6ae7fdb091cd5ee2e0c27e058b32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBkODNhMDQ2YWZkNmFlN2ZkYjA5MWNkNWVlMmUwYzI3ZTA1OGIzMg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-02-08T21:43:39Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-02-08T21:43:39Z"}, "message": "* gcc.c-torture/execute/990208-1.c: New test.\n\nFrom-SVN: r25101", "tree": {"sha": "a50b66c87b232c06daaa87ccc2d7f1577e191364", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a50b66c87b232c06daaa87ccc2d7f1577e191364"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20d83a046afd6ae7fdb091cd5ee2e0c27e058b32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20d83a046afd6ae7fdb091cd5ee2e0c27e058b32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20d83a046afd6ae7fdb091cd5ee2e0c27e058b32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20d83a046afd6ae7fdb091cd5ee2e0c27e058b32/comments", "author": null, "committer": null, "parents": [{"sha": "acd693d10c5d694eb221071d0b171edbada6202a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acd693d10c5d694eb221071d0b171edbada6202a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acd693d10c5d694eb221071d0b171edbada6202a"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "74e96b08d51519ece2cad2959320cbc65a21f0fd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d83a046afd6ae7fdb091cd5ee2e0c27e058b32/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d83a046afd6ae7fdb091cd5ee2e0c27e058b32/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=20d83a046afd6ae7fdb091cd5ee2e0c27e058b32", "patch": "@@ -1,3 +1,7 @@\n+Mon Feb  8 21:42:57 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* gcc.c-torture/execute/990208-1.c: New test.\n+\n 1999-02-07  Jonathan Larmour  <jlarmour@cygnus.co.uk>\n \n \t* g++.dg/special/ecos.exp: New driver for new tests with special"}, {"sha": "37a11472962c568a48d6f3955d0c2ddea80e0f9d", "filename": "gcc/testsuite/gcc.c-torture/execute/990208-1.c", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d83a046afd6ae7fdb091cd5ee2e0c27e058b32/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990208-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d83a046afd6ae7fdb091cd5ee2e0c27e058b32/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990208-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990208-1.c?ref=20d83a046afd6ae7fdb091cd5ee2e0c27e058b32", "patch": "@@ -0,0 +1,46 @@\n+/* As a quality of implementation issue, we should not prevent inlining\n+   of function explicitly marked inline just because a label therein had\n+   its address taken.  */\n+\n+#ifndef NO_LABEL_VALUES\n+static void *ptr1, *ptr2;\n+\n+static __inline__ void doit(void **pptr, int cond)\n+{\n+  if (cond) {\n+  here:\n+    *pptr = &&here;\n+  }\n+}\n+\n+static void f(int cond)\n+{\n+  doit (&ptr1, cond);\n+}\n+\n+static void g(int cond)\n+{\n+  doit (&ptr2, cond);\n+}\n+\n+static void bar(void);\n+\n+int main()\n+{\n+  f (1);\n+  bar();\n+  g (1);\n+\n+#ifdef  __OPTIMIZE__\n+  if (ptr1 == ptr2)\n+    abort ();\n+#endif\n+\n+  exit (0);\n+}\n+\n+void bar(void) { }\n+\n+#else /* NO_LABEL_VALUES */\n+int main() { exit(0); }\n+#endif"}]}