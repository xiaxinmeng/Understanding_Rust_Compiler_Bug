{"sha": "668f8d452697359a150bd651149c75109f66eb06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY4ZjhkNDUyNjk3MzU5YTE1MGJkNjUxMTQ5Yzc1MTA5ZjY2ZWIwNg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2018-10-04T11:36:15Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2018-10-04T11:36:15Z"}, "message": "[C++ PATCH] String concatenation is a thing\n\nhttps://gcc.gnu.org/ml/gcc-patches/2018-10/msg00248.html\n\t* lang-specs.h: Use string contatenation, not line splicing.\n\nFrom-SVN: r264839", "tree": {"sha": "7b0b0fc957981c72d0d27711ca12091def473b0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b0b0fc957981c72d0d27711ca12091def473b0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/668f8d452697359a150bd651149c75109f66eb06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/668f8d452697359a150bd651149c75109f66eb06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/668f8d452697359a150bd651149c75109f66eb06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/668f8d452697359a150bd651149c75109f66eb06/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9a471714928470c52b21586dd135658a02317c69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a471714928470c52b21586dd135658a02317c69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a471714928470c52b21586dd135658a02317c69"}], "stats": {"total": 50, "additions": 28, "deletions": 22}, "files": [{"sha": "c76340cb23f2a0e8ff73cd1e823acf0a661a3674", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/668f8d452697359a150bd651149c75109f66eb06/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/668f8d452697359a150bd651149c75109f66eb06/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=668f8d452697359a150bd651149c75109f66eb06", "patch": "@@ -1,3 +1,7 @@\n+2018-10-04  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* lang-specs.h: Use string contatenation, not line splicing.\n+\n 2018-10-03  Jason Merrill  <jason@redhat.com>\n \n \tImplement P0840, language support for empty objects."}, {"sha": "ebae5c3b4445f82a5c69aa9614cf93a72f731716", "filename": "gcc/cp/lang-specs.h", "status": "modified", "additions": 24, "deletions": 22, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/668f8d452697359a150bd651149c75109f66eb06/gcc%2Fcp%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/668f8d452697359a150bd651149c75109f66eb06/gcc%2Fcp%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flang-specs.h?ref=668f8d452697359a150bd651149c75109f66eb06", "patch": "@@ -40,29 +40,31 @@ along with GCC; see the file COPYING3.  If not see\n   {\".tcc\", \"@c++-header\", 0, 0, 0},\n   {\".hh\",  \"@c++-header\", 0, 0, 0},\n   {\"@c++-header\",\n-    \"%{E|M|MM:cc1plus -E %(cpp_options) %2 %(cpp_debug_options)}\\\n-     %{!E:%{!M:%{!MM:\\\n-       %{save-temps*|no-integrated-cpp:cc1plus -E\\\n-\t\t%(cpp_options) %2 -o %{save-temps*:%b.ii} %{!save-temps*:%g.ii} \\n}\\\n-      cc1plus %{save-temps*|no-integrated-cpp:-fpreprocessed %{save-temps*:%b.ii} %{!save-temps*:%g.ii}}\\\n-\t      %{!save-temps*:%{!no-integrated-cpp:%(cpp_unique_options)}}\\\n-\t%(cc1_options) %2\\\n-\t%{!fsyntax-only:%{!S:-o %g.s} \\\n-\t    %{!fdump-ada-spec*:%{!o*:--output-pch=%i.gch}\\\n-\t\t\t       %W{o*:--output-pch=%*}}%V}}}}\",\n+      \"%{E|M|MM:cc1plus -E %(cpp_options) %2 %(cpp_debug_options)}\"\n+      \"%{!E:%{!M:%{!MM:\"\n+      \"  %{save-temps*|no-integrated-cpp:cc1plus -E\"\n+      \"\t   %(cpp_options) %2 -o %{save-temps*:%b.ii} %{!save-temps*:%g.ii} \\n}\"\n+      \"  cc1plus %{save-temps*|no-integrated-cpp:-fpreprocessed\"\n+      \" \t   %{save-temps*:%b.ii} %{!save-temps*:%g.ii}}\"\n+      \"  %{!save-temps*:%{!no-integrated-cpp:%(cpp_unique_options)}}\"\n+      \"  %(cc1_options) %2\"\n+      \"  %{!fsyntax-only:%{!S:-o %g.s}\"\n+      \"    %{!fdump-ada-spec*:%{!o*:--output-pch=%i.gch}\"\n+      \"      %W{o*:--output-pch=%*}}%V}}}}\",\n      CPLUSPLUS_CPP_SPEC, 0, 0},\n   {\"@c++\",\n-    \"%{E|M|MM:cc1plus -E %(cpp_options) %2 %(cpp_debug_options)}\\\n-     %{!E:%{!M:%{!MM:\\\n-       %{save-temps*|no-integrated-cpp:cc1plus -E\\\n-\t\t%(cpp_options) %2 -o %{save-temps*:%b.ii} %{!save-temps*:%g.ii} \\n}\\\n-      cc1plus %{save-temps*|no-integrated-cpp:-fpreprocessed %{save-temps*:%b.ii} %{!save-temps*:%g.ii}}\\\n-\t      %{!save-temps*:%{!no-integrated-cpp:%(cpp_unique_options)}}\\\n-\t%(cc1_options) %2\\\n-       %{!fsyntax-only:%(invoke_as)}}}}\",\n-     CPLUSPLUS_CPP_SPEC, 0, 0},\n+      \"%{E|M|MM:cc1plus -E %(cpp_options) %2 %(cpp_debug_options)}\"\n+      \"%{!E:%{!M:%{!MM:\"\n+      \"  %{save-temps*|no-integrated-cpp:cc1plus -E\"\n+      \"\t   %(cpp_options) %2 -o %{save-temps*:%b.ii} %{!save-temps*:%g.ii} \\n}\"\n+      \"  cc1plus %{save-temps*|no-integrated-cpp:-fpreprocessed\"\n+      \" \t   %{save-temps*:%b.ii} %{!save-temps*:%g.ii}}\"\n+      \"  %{!save-temps*:%{!no-integrated-cpp:%(cpp_unique_options)}}\"\n+      \"\t %(cc1_options) %2\"\n+      \"  %{!fsyntax-only:%(invoke_as)}}}}\",\n+      CPLUSPLUS_CPP_SPEC, 0, 0},\n   {\".ii\", \"@c++-cpp-output\", 0, 0, 0},\n   {\"@c++-cpp-output\",\n-   \"%{!M:%{!MM:%{!E:\\\n-    cc1plus -fpreprocessed %i %(cc1_options) %2\\\n-    %{!fsyntax-only:%(invoke_as)}}}}\", 0, 0, 0},\n+      \"%{!E:%{!M:%{!MM:\"\n+      \"  cc1plus -fpreprocessed %i %(cc1_options) %2\"\n+      \"  %{!fsyntax-only:%(invoke_as)}}}}\", 0, 0, 0},"}]}