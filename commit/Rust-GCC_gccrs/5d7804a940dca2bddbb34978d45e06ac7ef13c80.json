{"sha": "5d7804a940dca2bddbb34978d45e06ac7ef13c80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ3ODA0YTk0MGRjYTJiZGRiYjM0OTc4ZDQ1ZTA2YWM3ZWYxM2M4MA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2016-01-18T12:53:03Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2016-01-18T12:53:03Z"}, "message": "Add oacc kernels test in libgomp\n\n2016-01-18  Tom de Vries  <tom@codesourcery.com>\n\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-2.c: New test.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-3.c: Same.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-2.c: Same.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-3.c: Same.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-4.c: Same.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-5.c: Same.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-6.c: Same.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq.c: Same.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-collapse.c: Same.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-2.c: Same.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-enter-exit-2.c:\n\tSame.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-enter-exit.c:\n\tSame.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-update.c: Same.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data.c: Same.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-g.c: Same.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-mod-not-zero.c: Same.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-n.c: Same.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-nest.c: Same.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop.c: Same.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-parallel-loop-data-enter-exit.c:\n\tSame.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-reduction.c: Same.\n\nFrom-SVN: r232515", "tree": {"sha": "9a9bce380eb03bbaa28a848b7cae4328f3e46e22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a9bce380eb03bbaa28a848b7cae4328f3e46e22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d7804a940dca2bddbb34978d45e06ac7ef13c80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7804a940dca2bddbb34978d45e06ac7ef13c80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d7804a940dca2bddbb34978d45e06ac7ef13c80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7804a940dca2bddbb34978d45e06ac7ef13c80/comments", "author": null, "committer": null, "parents": [{"sha": "40e26f946cf21586b504c057af0184650c8ce209", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40e26f946cf21586b504c057af0184650c8ce209", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40e26f946cf21586b504c057af0184650c8ce209"}], "stats": {"total": 564, "additions": 564, "deletions": 0}, "files": [{"sha": "2efc516624aa83ce827c4137d556e6e2cb24d717", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=5d7804a940dca2bddbb34978d45e06ac7ef13c80", "patch": "@@ -1,3 +1,30 @@\n+2016-01-18  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-2.c: New test.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-3.c: Same.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-2.c: Same.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-3.c: Same.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-4.c: Same.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-5.c: Same.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-6.c: Same.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq.c: Same.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-collapse.c: Same.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-2.c: Same.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-enter-exit-2.c:\n+\tSame.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-enter-exit.c:\n+\tSame.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-update.c: Same.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data.c: Same.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-g.c: Same.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-mod-not-zero.c: Same.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-n.c: Same.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-nest.c: Same.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop.c: Same.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-parallel-loop-data-enter-exit.c:\n+\tSame.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-reduction.c: Same.\n+\n 2016-01-15  Jakub Jelinek  <jakub@redhat.com>\n \n \t* task.c (GOMP_PLUGIN_target_task_completion): Add missing return."}, {"sha": "13e57bd987786482bea0afb39158054cc86ed652", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-2.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-2.c?ref=5d7804a940dca2bddbb34978d45e06ac7ef13c80", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n+\n+#include <stdlib.h>\n+\n+#define N (1024 * 512)\n+#define COUNTERTYPE unsigned int\n+\n+int\n+main (void)\n+{\n+  unsigned int *__restrict a;\n+  unsigned int *__restrict b;\n+  unsigned int *__restrict c;\n+\n+  a = (unsigned int *__restrict)malloc (N * sizeof (unsigned int));\n+  b = (unsigned int *__restrict)malloc (N * sizeof (unsigned int));\n+  c = (unsigned int *__restrict)malloc (N * sizeof (unsigned int));\n+\n+#pragma acc kernels copyout (a[0:N])\n+  {\n+    for (COUNTERTYPE i = 0; i < N; i++)\n+      a[i] = i * 2;\n+  }\n+\n+#pragma acc kernels copyout (b[0:N])\n+  {\n+    for (COUNTERTYPE i = 0; i < N; i++)\n+      b[i] = i * 4;\n+  }\n+\n+#pragma acc kernels copyin (a[0:N], b[0:N]) copyout (c[0:N])\n+  {\n+    for (COUNTERTYPE ii = 0; ii < N; ii++)\n+      c[ii] = a[ii] + b[ii];\n+  }\n+\n+  for (COUNTERTYPE i = 0; i < N; i++)\n+    if (c[i] != a[i] + b[i])\n+      abort ();\n+\n+  free (a);\n+  free (b);\n+  free (c);\n+\n+  return 0;\n+}"}, {"sha": "f61a74a00fb2ccc2875cb85633616c0c00368e6c", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-3.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-3.c?ref=5d7804a940dca2bddbb34978d45e06ac7ef13c80", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n+\n+#include <stdlib.h>\n+\n+#define N (1024 * 512)\n+#define COUNTERTYPE unsigned int\n+\n+int\n+main (void)\n+{\n+  unsigned int i;\n+\n+  unsigned int *__restrict c;\n+\n+  c = (unsigned int *__restrict)malloc (N * sizeof (unsigned int));\n+\n+  for (COUNTERTYPE i = 0; i < N; i++)\n+    c[i] = i * 2;\n+\n+#pragma acc kernels copy (c[0:N])\n+  {\n+    for (COUNTERTYPE ii = 0; ii < N; ii++)\n+      c[ii] = c[ii] + ii + 1;\n+  }\n+\n+  for (COUNTERTYPE i = 0; i < N; i++)\n+    if (c[i] != i * 2 + i + 1)\n+      abort ();\n+\n+  free (c);\n+\n+  return 0;\n+}"}, {"sha": "2e4100fa7a2f267107b8ea3797b3e12427aa6606", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-2.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-2.c?ref=5d7804a940dca2bddbb34978d45e06ac7ef13c80", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n+\n+#include <stdlib.h>\n+\n+#define N 32\n+\n+unsigned int\n+foo (int n, unsigned int *a)\n+{\n+#pragma acc kernels copy (a[0:N])\n+  {\n+    a[0] = a[0] + 1;\n+\n+    for (int i = 0; i < n; i++)\n+      a[i] = 1;\n+  }\n+\n+  return a[0];\n+}\n+\n+int\n+main (void)\n+{\n+  unsigned int a[N];\n+  unsigned res, i;\n+\n+  for (i = 0; i < N; ++i)\n+    a[i] = i % 4;\n+\n+  res = foo (N, a);\n+  if (res != 1)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "b3e736bf3589e93cc4b68a774510689cd62ca03e", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-3.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-3.c?ref=5d7804a940dca2bddbb34978d45e06ac7ef13c80", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n+\n+#include <stdlib.h>\n+\n+#define N 32\n+\n+unsigned int\n+foo (int n, unsigned int *a)\n+{\n+\n+#pragma acc kernels copy (a[0:N])\n+  {\n+    for (int i = 0; i < n; i++)\n+      a[i] = 1;\n+\n+    a[0] = 2;\n+  }\n+\n+  return a[0];\n+}\n+\n+int\n+main (void)\n+{\n+  unsigned int a[N];\n+  unsigned res, i;\n+\n+  for (i = 0; i < N; ++i)\n+    a[i] = i % 4;\n+\n+  res = foo (N, a);\n+  if (res != 2)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "8b9affabedc86c03f1ab52366c707f0dfda2cd47", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-4.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-4.c?ref=5d7804a940dca2bddbb34978d45e06ac7ef13c80", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n+\n+#include <stdlib.h>\n+\n+#define N 32\n+\n+unsigned int\n+foo (int n, unsigned int *a)\n+{\n+#pragma acc kernels copy (a[0:N])\n+  {\n+    a[0] = 2;\n+\n+    for (int i = 0; i < n; i++)\n+      a[i] = 1;\n+  }\n+\n+  return a[0];\n+}\n+\n+int\n+main (void)\n+{\n+  unsigned int a[N];\n+  unsigned res, i;\n+\n+  for (i = 0; i < N; ++i)\n+    a[i] = i % 4;\n+\n+  res = foo (N, a);\n+  if (res != 1)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "83d4e7faf8f4bead623849920b7e77bf66721e91", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-5.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-5.c?ref=5d7804a940dca2bddbb34978d45e06ac7ef13c80", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n+\n+#include <stdlib.h>\n+\n+#define N 32\n+\n+unsigned int\n+foo (int n, unsigned int *a)\n+{\n+  int r;\n+#pragma acc kernels copyout(r) copy (a[0:N])\n+  {\n+    r = a[0];\n+\n+    for (int i = 0; i < n; i++)\n+      a[i] = 1;\n+  }\n+\n+  return r;\n+}\n+\n+int\n+main (void)\n+{\n+  unsigned int a[N];\n+  unsigned res, i;\n+\n+  for (i = 0; i < N; ++i)\n+    a[i] = i % 4;\n+\n+  res = foo (N, a);\n+  if (res != 0)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "01d5e5e4c24a4de4aa31b123424d937e399700de", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-6.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq-6.c?ref=5d7804a940dca2bddbb34978d45e06ac7ef13c80", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n+\n+#include <stdlib.h>\n+\n+#define N 32\n+\n+unsigned int\n+foo (int n, unsigned int *a)\n+{\n+#pragma acc kernels copy (a[0:N])\n+  {\n+    int r = a[0];\n+\n+    for (int i = 0; i < n; i++)\n+      a[i] = 1 + r;\n+  }\n+\n+  return a[0];\n+}\n+\n+int\n+main (void)\n+{\n+  unsigned int a[N];\n+  unsigned res, i;\n+\n+  for (i = 0; i < N; ++i)\n+    a[i] = i % 4;\n+\n+  res = foo (N, a);\n+  if (res != 1)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "61d1283a36a2dccd96484aa2f6b4f30cdad6b4a8", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-and-seq.c?ref=5d7804a940dca2bddbb34978d45e06ac7ef13c80", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n+\n+#include <stdlib.h>\n+\n+#define N 32\n+\n+unsigned int\n+foo (int n, unsigned int *a)\n+{\n+\n+#pragma acc kernels copy (a[0:N])\n+  {\n+    for (int i = 0; i < n; i++)\n+      a[i] = 1;\n+\n+    a[0] = a[0] + 1;\n+  }\n+\n+  return a[0];\n+}\n+\n+int\n+main (void)\n+{\n+  unsigned int a[N];\n+  unsigned res, i;\n+\n+  for (i = 0; i < N; ++i)\n+    a[i] = i % 4;\n+\n+  res = foo (N, a);\n+  if (res != 2)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "f7f04cb9ed5cce250619fc350f3e2433d016f4ad", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-collapse.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-collapse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-collapse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-collapse.c?ref=5d7804a940dca2bddbb34978d45e06ac7ef13c80", "patch": "@@ -0,0 +1,40 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n+\n+#include <stdlib.h>\n+\n+#define N 100\n+\n+int a[N][N];\n+\n+void __attribute__((noinline, noclone))\n+foo (int m, int n)\n+{\n+  int i, j;\n+  #pragma acc kernels\n+  {\n+#pragma acc loop collapse(2)\n+    for (i = 0; i < m; i++)\n+      for (j = 0; j < n; j++)\n+\ta[i][j] = 1;\n+  }\n+}\n+\n+int\n+main (void)\n+{\n+  int i, j;\n+\n+  for (i = 0; i < N; i++)\n+    for (j = 0; j < N; j++)\n+      a[i][j] = 0;\n+\n+  foo (N, N);\n+\n+  for (i = 0; i < N; i++)\n+    for (j = 0; j < N; j++)\n+      if (a[i][j] != 1)\n+\tabort ();\n+\n+  return 0;\n+}"}, {"sha": "96b6e4eaf455dfa16abe71217101bc9bf2dca7e2", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-g.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-g.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-g.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-g.c?ref=5d7804a940dca2bddbb34978d45e06ac7ef13c80", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n+/* { dg-additional-options \"-g\" } */\n+\n+#include \"kernels-loop.c\""}, {"sha": "1433cb203b8b4584d6d753ea0ef18183d7581e95", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-mod-not-zero.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-mod-not-zero.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-mod-not-zero.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-mod-not-zero.c?ref=5d7804a940dca2bddbb34978d45e06ac7ef13c80", "patch": "@@ -0,0 +1,41 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n+\n+#include <stdlib.h>\n+\n+#define N ((1024 * 512) + 1)\n+#define COUNTERTYPE unsigned int\n+\n+int\n+main (void)\n+{\n+  unsigned int *__restrict a;\n+  unsigned int *__restrict b;\n+  unsigned int *__restrict c;\n+\n+  a = (unsigned int *__restrict)malloc (N * sizeof (unsigned int));\n+  b = (unsigned int *__restrict)malloc (N * sizeof (unsigned int));\n+  c = (unsigned int *__restrict)malloc (N * sizeof (unsigned int));\n+\n+  for (COUNTERTYPE i = 0; i < N; i++)\n+    a[i] = i * 2;\n+\n+  for (COUNTERTYPE i = 0; i < N; i++)\n+    b[i] = i * 4;\n+\n+#pragma acc kernels copyin (a[0:N], b[0:N]) copyout (c[0:N])\n+  {\n+    for (COUNTERTYPE ii = 0; ii < N; ii++)\n+      c[ii] = a[ii] + b[ii];\n+  }\n+\n+  for (COUNTERTYPE i = 0; i < N; i++)\n+    if (c[i] != a[i] + b[i])\n+      abort ();\n+\n+  free (a);\n+  free (b);\n+  free (c);\n+\n+  return 0;\n+}"}, {"sha": "fd0d5b193a816bae6c02dc14f60c9449e5f3d493", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-n.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-n.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-n.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-n.c?ref=5d7804a940dca2bddbb34978d45e06ac7ef13c80", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n+\n+#include <stdlib.h>\n+\n+#define N ((1024 * 512) + 1)\n+#define COUNTERTYPE unsigned int\n+\n+static int __attribute__((noinline,noclone))\n+foo (COUNTERTYPE n)\n+{\n+  unsigned int *__restrict a;\n+  unsigned int *__restrict b;\n+  unsigned int *__restrict c;\n+\n+  a = (unsigned int *__restrict)malloc (n * sizeof (unsigned int));\n+  b = (unsigned int *__restrict)malloc (n * sizeof (unsigned int));\n+  c = (unsigned int *__restrict)malloc (n * sizeof (unsigned int));\n+\n+  for (COUNTERTYPE i = 0; i < n; i++)\n+    a[i] = i * 2;\n+\n+  for (COUNTERTYPE i = 0; i < n; i++)\n+    b[i] = i * 4;\n+\n+#pragma acc kernels copyin (a[0:n], b[0:n]) copyout (c[0:n])\n+  {\n+    for (COUNTERTYPE ii = 0; ii < n; ii++)\n+      c[ii] = a[ii] + b[ii];\n+  }\n+\n+  for (COUNTERTYPE i = 0; i < n; i++)\n+    if (c[i] != a[i] + b[i])\n+      abort ();\n+\n+  free (a);\n+  free (b);\n+  free (c);\n+\n+  return 0;\n+}\n+\n+int\n+main (void)\n+{\n+  return foo (N);\n+}"}, {"sha": "21d2599f0aa1b8de1a6d88b7b609fd4bb0871e43", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop-nest.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-nest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-nest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop-nest.c?ref=5d7804a940dca2bddbb34978d45e06ac7ef13c80", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n+\n+#include <stdlib.h>\n+\n+#define N 1000\n+\n+int\n+main (void)\n+{\n+  int x[N][N];\n+\n+#pragma acc kernels copyout (x)\n+  {\n+    for (int ii = 0; ii < N; ii++)\n+      for (int jj = 0; jj < N; jj++)\n+\tx[ii][jj] = ii + jj + 3;\n+  }\n+\n+  for (int i = 0; i < N; i++)\n+    for (int j = 0; j < N; j++)\n+      if (x[i][j] != i + j + 3)\n+\tabort ();\n+\n+  return 0;\n+}"}, {"sha": "3762e5a8b9ac4d0d9fd4d0983fe7e58cd2fe7687", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-loop.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-loop.c?ref=5d7804a940dca2bddbb34978d45e06ac7ef13c80", "patch": "@@ -0,0 +1,41 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n+\n+#include <stdlib.h>\n+\n+#define N (1024 * 512)\n+#define COUNTERTYPE unsigned int\n+\n+int\n+main (void)\n+{\n+  unsigned int *__restrict a;\n+  unsigned int *__restrict b;\n+  unsigned int *__restrict c;\n+\n+  a = (unsigned int *__restrict)malloc (N * sizeof (unsigned int));\n+  b = (unsigned int *__restrict)malloc (N * sizeof (unsigned int));\n+  c = (unsigned int *__restrict)malloc (N * sizeof (unsigned int));\n+\n+  for (COUNTERTYPE i = 0; i < N; i++)\n+    a[i] = i * 2;\n+\n+  for (COUNTERTYPE i = 0; i < N; i++)\n+    b[i] = i * 4;\n+\n+#pragma acc kernels copyin (a[0:N], b[0:N]) copyout (c[0:N])\n+  {\n+    for (COUNTERTYPE ii = 0; ii < N; ii++)\n+      c[ii] = a[ii] + b[ii];\n+  }\n+\n+  for (COUNTERTYPE i = 0; i < N; i++)\n+    if (c[i] != a[i] + b[i])\n+      abort ();\n+\n+  free (a);\n+  free (b);\n+  free (c);\n+\n+  return 0;\n+}"}, {"sha": "511e25f882aa073b83edd0c5faa803d6f9fd62b7", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-reduction.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-reduction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7804a940dca2bddbb34978d45e06ac7ef13c80/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-reduction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-reduction.c?ref=5d7804a940dca2bddbb34978d45e06ac7ef13c80", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=32\" } */\n+\n+#include <stdlib.h>\n+\n+#define n 10000\n+\n+unsigned int a[n];\n+\n+void  __attribute__((noinline,noclone))\n+foo (void)\n+{\n+  int i;\n+  unsigned int sum = 1;\n+\n+#pragma acc kernels copyin (a[0:n]) copy (sum)\n+  {\n+    for (i = 0; i < n; ++i)\n+      sum += a[i];\n+  }\n+\n+  if (sum != 5001)\n+    abort ();\n+}\n+\n+int\n+main ()\n+{\n+  int i;\n+\n+  for (i = 0; i < n; ++i)\n+    a[i] = i % 2;\n+\n+  foo ();\n+\n+  return 0;\n+}"}]}