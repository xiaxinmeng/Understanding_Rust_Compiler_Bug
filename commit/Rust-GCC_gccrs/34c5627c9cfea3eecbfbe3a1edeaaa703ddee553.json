{"sha": "34c5627c9cfea3eecbfbe3a1edeaaa703ddee553", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRjNTYyN2M5Y2ZlYTNlZWNiZmJlM2ExZWRlYWFhNzAzZGRlZTU1Mw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-02-15T23:08:49Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-02-15T23:08:49Z"}, "message": "linux.h (ASAN_CC1_SPEC): Define.\n\n\t* config/sparc/linux.h (ASAN_CC1_SPEC): Define.\n\t(CC1_SPEC): Use GNU_USER_TARGET_CC1_SPEC and ASAN_CC1_SPEC.\n\t* config/sparc/linux64.h (ASAN_CC1_SPEC): Likewise.\n\t(CC1_SPEC): Likewise.\n\t* config/sparc/sparc.c (sparc_asan_shadow_offset): Adjust for 64-bit.\n\nFrom-SVN: r268950", "tree": {"sha": "482e43b35197675e2b407dafeb3090d3324daf4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/482e43b35197675e2b407dafeb3090d3324daf4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34c5627c9cfea3eecbfbe3a1edeaaa703ddee553", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34c5627c9cfea3eecbfbe3a1edeaaa703ddee553", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34c5627c9cfea3eecbfbe3a1edeaaa703ddee553", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34c5627c9cfea3eecbfbe3a1edeaaa703ddee553/comments", "author": null, "committer": null, "parents": [{"sha": "362432c00db860483058ff609a893151bf8e4b1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/362432c00db860483058ff609a893151bf8e4b1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/362432c00db860483058ff609a893151bf8e4b1c"}], "stats": {"total": 38, "additions": 24, "deletions": 14}, "files": [{"sha": "c430cfd96770609674b75637cf59931daf362c5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34c5627c9cfea3eecbfbe3a1edeaaa703ddee553/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34c5627c9cfea3eecbfbe3a1edeaaa703ddee553/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34c5627c9cfea3eecbfbe3a1edeaaa703ddee553", "patch": "@@ -1,3 +1,11 @@\n+2019-02-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/sparc/linux.h (ASAN_CC1_SPEC): Define.\n+\t(CC1_SPEC): Use GNU_USER_TARGET_CC1_SPEC and ASAN_CC1_SPEC.\n+\t* config/sparc/linux64.h (ASAN_CC1_SPEC): Likewise.\n+\t(CC1_SPEC): Likewise.\n+\t* config/sparc/sparc.c (sparc_asan_shadow_offset): Adjust for 64-bit.\n+\n 2019-02-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* asan.c (asan_emit_stack_protection): Use full-sized mask to align"}, {"sha": "08476f1d94d45f11ae9624fba783bd7408caa430", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34c5627c9cfea3eecbfbe3a1edeaaa703ddee553/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34c5627c9cfea3eecbfbe3a1edeaaa703ddee553/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=34c5627c9cfea3eecbfbe3a1edeaaa703ddee553", "patch": "@@ -54,10 +54,11 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n \n #define DRIVER_SELF_SPECS MCPU_MTUNE_NATIVE_SPECS\n \n-/* This is for -profile to use -lc_p instead of -lc.  */\n-#undef\tCC1_SPEC\n-#define\tCC1_SPEC \"%{profile:-p} \\\n-\"\n+#undef  ASAN_CC1_SPEC\n+#define ASAN_CC1_SPEC \"%{%:sanitize(address):-funwind-tables}\"\n+\n+#undef  CC1_SPEC\n+#define CC1_SPEC GNU_USER_TARGET_CC1_SPEC ASAN_CC1_SPEC\n \n #undef SIZE_TYPE\n #define SIZE_TYPE \"unsigned int\""}, {"sha": "bbf5bab3b40927c1257bfc302d4dafc4f924b165", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34c5627c9cfea3eecbfbe3a1edeaaa703ddee553/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34c5627c9cfea3eecbfbe3a1edeaaa703ddee553/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=34c5627c9cfea3eecbfbe3a1edeaaa703ddee553", "patch": "@@ -143,24 +143,25 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n \n #define DRIVER_SELF_SPECS MCPU_MTUNE_NATIVE_SPECS\n \n-#undef\tCC1_SPEC\n+#undef  ASAN_CC1_SPEC\n+#define ASAN_CC1_SPEC \"%{%:sanitize(address):-funwind-tables}\"\n+\n+#undef  CC1_SPEC\n #if DEFAULT_ARCH32_P\n-#define CC1_SPEC \"%{profile:-p} \\\n-%{m32:%{m64:%emay not use both -m32 and -m64}} \\\n+#define CC1_SPEC GNU_USER_TARGET_CC1_SPEC ASAN_CC1_SPEC \\\n+\"%{m32:%{m64:%emay not use both -m32 and -m64}} \\\n %{m64:-mptr64 -mstack-bias -mlong-double-128 \\\n   %{!mcpu*:-mcpu=ultrasparc} \\\n-  %{!mno-vis:%{!mcpu=v9:-mvis}}} \\\n-\"\n+  %{!mno-vis:%{!mcpu=v9:-mvis}}}\"\n #else\n-#define CC1_SPEC \"%{profile:-p} \\\n-%{m32:%{m64:%emay not use both -m32 and -m64}} \\\n+#define CC1_SPEC GNU_USER_TARGET_CC1_SPEC ASAN_CC1_SPEC \\\n+\"%{m32:%{m64:%emay not use both -m32 and -m64}} \\\n %{m32:-mptr32 -mno-stack-bias %{!mlong-double-128:-mlong-double-64} \\\n   %{!mcpu*:-mcpu=cypress}} \\\n %{mv8plus:-mptr32 -mno-stack-bias %{!mlong-double-128:-mlong-double-64} \\\n   %{!mcpu*:-mcpu=v9}} \\\n %{!m32:%{!mcpu*:-mcpu=ultrasparc}} \\\n-%{!mno-vis:%{!m32:%{!mcpu=v9:-mvis}}} \\\n-\"\n+%{!mno-vis:%{!m32:%{!mcpu=v9:-mvis}}}\"\n #endif\n \n /* Support for a compile-time default CPU, et cetera.  The rules are:"}, {"sha": "faddd0661dbea34386291c7c33f0762c50db01b6", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34c5627c9cfea3eecbfbe3a1edeaaa703ddee553/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34c5627c9cfea3eecbfbe3a1edeaaa703ddee553/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=34c5627c9cfea3eecbfbe3a1edeaaa703ddee553", "patch": "@@ -12524,7 +12524,7 @@ sparc_init_machine_status (void)\n static unsigned HOST_WIDE_INT\n sparc_asan_shadow_offset (void)\n {\n-  return TARGET_ARCH64 ? HOST_WIDE_INT_C (0x7fff8000) : (HOST_WIDE_INT_1 << 29);\n+  return TARGET_ARCH64 ? (HOST_WIDE_INT_1 << 43) : (HOST_WIDE_INT_1 << 29);\n }\n \f\n /* This is called from dwarf2out.c via TARGET_ASM_OUTPUT_DWARF_DTPREL."}]}