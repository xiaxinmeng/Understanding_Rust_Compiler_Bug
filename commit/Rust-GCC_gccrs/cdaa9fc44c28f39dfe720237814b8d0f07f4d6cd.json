{"sha": "cdaa9fc44c28f39dfe720237814b8d0f07f4d6cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RhYTlmYzQ0YzI4ZjM5ZGZlNzIwMjM3ODE0YjhkMGYwN2Y0ZDZjZA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargls@comcast.net", "date": "2004-06-13T18:25:53Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-06-13T18:25:53Z"}, "message": "random.c: Fix several spelling and formatting mistakes in comments.\n\n* random.c: Fix several spelling and formatting mistakes in\ncomments.\n(random_r8): Fix loop to make random numbers range in [0,1(.\n\nCo-Authored-By: Tobias Schl\u00fcter <tobias.schlueter@physik.uni-muenchen.de>\n\nFrom-SVN: r83063", "tree": {"sha": "8d92352bcd3fb8d2a11ed037d6c6c1e68873c535", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d92352bcd3fb8d2a11ed037d6c6c1e68873c535"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cdaa9fc44c28f39dfe720237814b8d0f07f4d6cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdaa9fc44c28f39dfe720237814b8d0f07f4d6cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdaa9fc44c28f39dfe720237814b8d0f07f4d6cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdaa9fc44c28f39dfe720237814b8d0f07f4d6cd/comments", "author": null, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d409075cb2e052ce66b91bdc791b8c6cf37dcbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d409075cb2e052ce66b91bdc791b8c6cf37dcbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d409075cb2e052ce66b91bdc791b8c6cf37dcbb"}], "stats": {"total": 34, "additions": 21, "deletions": 13}, "files": [{"sha": "0f812ea6ba19b126179e4343ebc3515bb35faad7", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdaa9fc44c28f39dfe720237814b8d0f07f4d6cd/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdaa9fc44c28f39dfe720237814b8d0f07f4d6cd/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=cdaa9fc44c28f39dfe720237814b8d0f07f4d6cd", "patch": "@@ -1,3 +1,11 @@\n+2004-06-13  Steven G. Kargl  <kargls@comcast.net>\n+\t    Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* random.c: Fix several spelling and formatting mistakes in \n+\tcomments.\n+\t(random_r8): Fix loop to make random numbers range in [0,1(.\n+\t\n+\n 2004-06-13  Steven G. Kargl  <kargls@comcast.net>\n \n \t* random.c (random_r4): Burn a random number."}, {"sha": "ef09d857e812a0eb5f00a244afbae31496622678", "filename": "libgfortran/intrinsics/random.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdaa9fc44c28f39dfe720237814b8d0f07f4d6cd/libgfortran%2Fintrinsics%2Frandom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdaa9fc44c28f39dfe720237814b8d0f07f4d6cd/libgfortran%2Fintrinsics%2Frandom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Frandom.c?ref=cdaa9fc44c28f39dfe720237814b8d0f07f4d6cd", "patch": "@@ -416,7 +416,7 @@ arandom_r8 (gfc_array_r8 * harv)\n    wish to acknowledge the source, as a courtesy.\n \n \"There is no copyright on the code below.\" included the original\n-KISS algorithm. */\n+KISS algorithm.  */\n \n #include \"config.h\"\n #include \"libgfortran.h\"\n@@ -449,7 +449,7 @@ kiss_random_kernel(void)\n \n }\n \n-/*  This function produces a REAL(4) value in the uniform distribution\n+/*  This function produces a REAL(4) value from the uniform distribution\n     with range [0,1).  */\n \n void\n@@ -485,7 +485,7 @@ prefix(random_r8) (GFC_REAL_8 *x)\n \t     + kiss_random_kernel ();\n       *x = (GFC_REAL_8)kiss / (GFC_REAL_8)(~(GFC_UINTEGER_8) 0);\n     }\n-  while (*x == 0);\n+  while (*x == 1.0);\n \n }\n \n@@ -554,7 +554,7 @@ prefix(arandom_r4) (gfc_array_r4 *x)\n     }\n }\n \n-/*  This function fills a REAL(8) array with valuse from the uniform\n+/*  This function fills a REAL(8) array with values from the uniform\n     distribution with range [0,1).  */\n \n void\n@@ -620,7 +620,7 @@ prefix(arandom_r8) (gfc_array_r8 *x)\n }\n \n /* prefix(random_seed) is used to seed the PRNG with either a default\n-   set of seeds or user specified set of seed.  prefix(random_seed) \n+   set of seeds or user specified set of seeds.  prefix(random_seed) \n    must be called with no argument or exactly one argument.  */\n \n void\n@@ -633,7 +633,7 @@ random_seed (GFC_INTEGER_4 *size, gfc_array_i4 * put,\n   if (size == NULL && put == NULL && get == NULL)\n     {\n       /* From the standard: \"If no argument is present, the processor assigns\n-         a processor-dependent value to the seed.\" */\n+         a processor-dependent value to the seed.\"  */\n       kiss_seed[0] = kiss_default_seed[0];\n       kiss_seed[1] = kiss_default_seed[1];\n       kiss_seed[2] = kiss_default_seed[2];\n@@ -645,37 +645,37 @@ random_seed (GFC_INTEGER_4 *size, gfc_array_i4 * put,\n \n   if (put != NULL)\n     {\n-      /* If the rank of the array is not 1, abort */\n+      /* If the rank of the array is not 1, abort.  */\n       if (GFC_DESCRIPTOR_RANK (put) != 1)\n         runtime_error (\"Array rank of PUT is not 1.\");\n \n-      /* If the array is too small, abort */\n+      /* If the array is too small, abort.  */\n       if (((put->dim[0].ubound + 1 - put->dim[0].lbound)) < kiss_size)\n         runtime_error (\"Array size of PUT is too small.\");\n \n       if (put->dim[0].stride == 0)\n \tput->dim[0].stride = 1;\n \n-      /*  This code now should do correct strides. */\n+      /*  This code now should do correct strides.  */\n       for (i = 0; i < kiss_size; i++)\n         kiss_seed[i] =(GFC_UINTEGER_4) put->data[i * put->dim[0].stride];\n     }\n \n-  /* Return the seed to GET data */\n+  /* Return the seed to GET data.  */\n   if (get != NULL)\n     {\n-      /* If the rank of the array is not 1, abort. */\n+      /* If the rank of the array is not 1, abort.  */\n       if (GFC_DESCRIPTOR_RANK (get) != 1)\n \truntime_error (\"Array rank of GET is not 1.\");\n \n-      /* If the array is too small, abort. */\n+      /* If the array is too small, abort.  */\n       if (((get->dim[0].ubound + 1 - get->dim[0].lbound)) < kiss_size)\n \truntime_error (\"Array size of GET is too small.\");\n \n       if (get->dim[0].stride == 0)\n \tget->dim[0].stride = 1;\n \n-      /*  This code now should do correct strides. */\n+      /*  This code now should do correct strides.  */\n       for (i = 0; i < kiss_size; i++)\n         get->data[i * get->dim[0].stride] = (GFC_INTEGER_4) kiss_seed[i];\n     }"}]}