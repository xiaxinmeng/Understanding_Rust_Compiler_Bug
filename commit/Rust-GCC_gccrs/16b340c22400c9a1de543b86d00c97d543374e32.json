{"sha": "16b340c22400c9a1de543b86d00c97d543374e32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZiMzQwYzIyNDAwYzlhMWRlNTQzYjg2ZDAwYzk3ZDU0MzM3NGUzMg==", "commit": {"author": {"name": "Szabolcs Nagy", "email": "szabolcs.nagy@arm.com", "date": "2015-10-20T09:37:27Z"}, "committer": {"name": "Szabolcs Nagy", "email": "nsz@gcc.gnu.org", "date": "2015-10-20T09:37:27Z"}, "message": "Fix default_binds_local_p_2 for extern protected data\n\ngcc:\n\n\tPR target/66912\n\t* varasm.c (default_binds_local_p_2): Turn on extern_protected_data.\n\ngcc/testsuite:\n\n\tPR target/66912\n\t* gcc.target/aarch64/pr66912.c: New.\n\t* gcc.target/arm/pr66912.c: New.\n\nFrom-SVN: r229024", "tree": {"sha": "dce6e793bfe1e2e81905f34a709a2c4c92618ce3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dce6e793bfe1e2e81905f34a709a2c4c92618ce3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16b340c22400c9a1de543b86d00c97d543374e32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b340c22400c9a1de543b86d00c97d543374e32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16b340c22400c9a1de543b86d00c97d543374e32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b340c22400c9a1de543b86d00c97d543374e32/comments", "author": {"login": "nsz-arm", "id": 30925343, "node_id": "MDQ6VXNlcjMwOTI1MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nsz-arm", "html_url": "https://github.com/nsz-arm", "followers_url": "https://api.github.com/users/nsz-arm/followers", "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}", "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions", "organizations_url": "https://api.github.com/users/nsz-arm/orgs", "repos_url": "https://api.github.com/users/nsz-arm/repos", "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/nsz-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d8ab59ce04e7df40bf505c7e341599b141e98c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d8ab59ce04e7df40bf505c7e341599b141e98c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d8ab59ce04e7df40bf505c7e341599b141e98c4"}], "stats": {"total": 100, "additions": 98, "deletions": 2}, "files": [{"sha": "e3206f43b6cb9c295b943fd994cc150bc193f7e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b340c22400c9a1de543b86d00c97d543374e32/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b340c22400c9a1de543b86d00c97d543374e32/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16b340c22400c9a1de543b86d00c97d543374e32", "patch": "@@ -1,3 +1,8 @@\n+2015-10-20  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\tPR target/66912\n+\t* varasm.c (default_binds_local_p_2): Turn on extern_protected_data.\n+\n 2015-10-20  Arkadiusz Drabczyk  <arkadiusz@drabczyk.org>\n \n \t* doc/extend.texi: Update documentation WRT inline functions."}, {"sha": "4415ac38fe02e80337cc4c6db88046417d587a7b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b340c22400c9a1de543b86d00c97d543374e32/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b340c22400c9a1de543b86d00c97d543374e32/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=16b340c22400c9a1de543b86d00c97d543374e32", "patch": "@@ -1,3 +1,9 @@\n+2015-10-20  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\tPR target/66912\n+\t* gcc.target/aarch64/pr66912.c: New.\n+\t* gcc.target/arm/pr66912.c: New.\n+\n 2015-10-19  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \t* gfortran.dg/pr67900.f90: New tests."}, {"sha": "b8aabcd3b130cdae23295ab5c3b4d69fb3ae1556", "filename": "gcc/testsuite/gcc.target/aarch64/pr66912.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b340c22400c9a1de543b86d00c97d543374e32/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr66912.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b340c22400c9a1de543b86d00c97d543374e32/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr66912.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr66912.c?ref=16b340c22400c9a1de543b86d00c97d543374e32", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-do compile { target *-*-linux* } } */\n+/* { dg-options \"-O2 -fpic\" } */\n+\n+__attribute__((visibility(\"protected\")))\n+int n_common;\n+\n+__attribute__((weak, visibility(\"protected\")))\n+int n_weak_common;\n+\n+__attribute__((visibility(\"protected\")))\n+int n_init = -1;\n+\n+__attribute__((weak, visibility(\"protected\")))\n+int n_weak_init = -1;\n+\n+int\n+f1 ()\n+{\n+  /* { dg-final { scan-assembler \":got(page_lo15)?:n_common\" } } */\n+  return n_common;\n+}\n+\n+int\n+f2 ()\n+{\n+  /* { dg-final { scan-assembler \":got(page_lo15)?:n_weak_common\" } } */\n+  return n_weak_common;\n+}\n+\n+int\n+f3 ()\n+{\n+  /* { dg-final { scan-assembler \":got(page_lo15)?:n_init\" } } */\n+  return n_init;\n+}\n+\n+int\n+f4 ()\n+{\n+  /* { dg-final { scan-assembler \":got(page_lo15)?:n_weak_init\" } } */\n+  return n_weak_init;\n+}"}, {"sha": "27e4c452bd305d9544905122e3a28177627eccd3", "filename": "gcc/testsuite/gcc.target/arm/pr66912.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b340c22400c9a1de543b86d00c97d543374e32/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr66912.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b340c22400c9a1de543b86d00c97d543374e32/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr66912.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr66912.c?ref=16b340c22400c9a1de543b86d00c97d543374e32", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-do compile { target *-*-linux* } } */\n+/* { dg-options \"-O2 -fpic\" } */\n+\n+__attribute__((visibility(\"protected\")))\n+int n_common;\n+\n+__attribute__((weak, visibility(\"protected\")))\n+int n_weak_common;\n+\n+__attribute__((visibility(\"protected\")))\n+int n_init = -1;\n+\n+__attribute__((weak, visibility(\"protected\")))\n+int n_weak_init = -1;\n+\n+int\n+f1 ()\n+{\n+  /* { dg-final { scan-assembler \"\\\\.word\\\\tn_common\\\\(GOT\\\\)\" } } */\n+  return n_common;\n+}\n+\n+int\n+f2 ()\n+{\n+  /* { dg-final { scan-assembler \"\\\\.word\\\\tn_weak_common\\\\(GOT\\\\)\" } } */\n+  return n_weak_common;\n+}\n+\n+int\n+f3 ()\n+{\n+  /* { dg-final { scan-assembler \"\\\\.word\\\\tn_init\\\\(GOT\\\\)\" } } */\n+  return n_init;\n+}\n+\n+int\n+f4 ()\n+{\n+  /* { dg-final { scan-assembler \"\\\\.word\\\\tn_weak_init\\\\(GOT\\\\)\" } } */\n+  return n_weak_init;\n+}"}, {"sha": "ff9d271d424a6269381576902bb4b6f6d0f6d71d", "filename": "gcc/varasm.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b340c22400c9a1de543b86d00c97d543374e32/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b340c22400c9a1de543b86d00c97d543374e32/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=16b340c22400c9a1de543b86d00c97d543374e32", "patch": "@@ -6898,12 +6898,13 @@ default_binds_local_p (const_tree exp)\n   return default_binds_local_p_3 (exp, flag_shlib != 0, true, false, false);\n }\n \n-/* Similar to default_binds_local_p, but common symbol may be local.  */\n+/* Similar to default_binds_local_p, but common symbol may be local and\n+   extern protected data is non-local.  */\n \n bool\n default_binds_local_p_2 (const_tree exp)\n {\n-  return default_binds_local_p_3 (exp, flag_shlib != 0, true, false,\n+  return default_binds_local_p_3 (exp, flag_shlib != 0, true, true,\n \t\t\t\t  !flag_pic);\n }\n "}]}