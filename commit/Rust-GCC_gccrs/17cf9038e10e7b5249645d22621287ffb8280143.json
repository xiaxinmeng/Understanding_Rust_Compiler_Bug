{"sha": "17cf9038e10e7b5249645d22621287ffb8280143", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdjZjkwMzhlMTBlN2I1MjQ5NjQ1ZDIyNjIxMjg3ZmZiODI4MDE0Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-05-21T11:05:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-05-21T11:05:25Z"}, "message": "[multiple changes]\n\n2014-05-21  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_ugn.texi: Clearly document -gnatw.g (GNAT warnings).\n\tClearly document -gnatyg (GNAT style switches).\n\t* usage.adb: Add line line for -gnatw.g (GNAT warnings) More\n\tdetail for line for -gnatyg (GNAT style switches) -gnatw.d/D is\n\tavailable for VMS after all.\n\t* warnsw.adb: Reorganize to eliminate duplicated code\n\t(Restore_Warnings): Add a couple of missing entries\n\t(Save_Warnings): Add a couple of missing entries.\n\t* warnsw.ads: Add missing entries to Warning_Record (not clear\n\twhat the impact is).\n\n2014-05-21  Robert Dewar  <dewar@adacore.com>\n\n\t* errout.adb (Set_Msg_Insertion_Warning): Handle ?*? (restriction\n\twarning) case.\n\t* errout.ads: Document ?*? (restriction warning) insertion.\n\t* erroutc.adb (Get_Warning_Tag): Deal with ?*? (restriction\n\twarning) case.\n\t* erroutc.ads: Document use of * for restriction warning tag.\n\t* restrict.adb (Restriction_Msg): Tag with ?*? instead of ??.\n\n2014-05-21  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch9.adb (Push_Scope_And_Install_Discriminants): Do not\n\tmake discriminants immediately visible when analyzing an aspect\n\tof a subtype declaration.\n\t(Uninstall_Discriminants): Do not apply to the entity in a\n\tsubtype declaration.\n\nFrom-SVN: r210693", "tree": {"sha": "c4ae7b5f562ad64a46ade314191f1169ecc0f74d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4ae7b5f562ad64a46ade314191f1169ecc0f74d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17cf9038e10e7b5249645d22621287ffb8280143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17cf9038e10e7b5249645d22621287ffb8280143", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17cf9038e10e7b5249645d22621287ffb8280143", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17cf9038e10e7b5249645d22621287ffb8280143/comments", "author": null, "committer": null, "parents": [{"sha": "632f2871edb2859c94d8fca573a1f74606a14332", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/632f2871edb2859c94d8fca573a1f74606a14332", "html_url": "https://github.com/Rust-GCC/gccrs/commit/632f2871edb2859c94d8fca573a1f74606a14332"}], "stats": {"total": 462, "additions": 242, "deletions": 220}, "files": [{"sha": "31891da8ab428436448587af9bfc846a915315d1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=17cf9038e10e7b5249645d22621287ffb8280143", "patch": "@@ -1,3 +1,34 @@\n+2014-05-21  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_ugn.texi: Clearly document -gnatw.g (GNAT warnings).\n+\tClearly document -gnatyg (GNAT style switches).\n+\t* usage.adb: Add line line for -gnatw.g (GNAT warnings) More\n+\tdetail for line for -gnatyg (GNAT style switches) -gnatw.d/D is\n+\tavailable for VMS after all.\n+\t* warnsw.adb: Reorganize to eliminate duplicated code\n+\t(Restore_Warnings): Add a couple of missing entries\n+\t(Save_Warnings): Add a couple of missing entries.\n+\t* warnsw.ads: Add missing entries to Warning_Record (not clear\n+\twhat the impact is).\n+\n+2014-05-21  Robert Dewar  <dewar@adacore.com>\n+\n+\t* errout.adb (Set_Msg_Insertion_Warning): Handle ?*? (restriction\n+\twarning) case.\n+\t* errout.ads: Document ?*? (restriction warning) insertion.\n+\t* erroutc.adb (Get_Warning_Tag): Deal with ?*? (restriction\n+\twarning) case.\n+\t* erroutc.ads: Document use of * for restriction warning tag.\n+\t* restrict.adb (Restriction_Msg): Tag with ?*? instead of ??.\n+\n+2014-05-21  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch9.adb (Push_Scope_And_Install_Discriminants): Do not\n+\tmake discriminants immediately visible when analyzing an aspect\n+\tof a subtype declaration.\n+\t(Uninstall_Discriminants): Do not apply to the entity in a\n+\tsubtype declaration.\n+\n 2014-05-21  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_util.adb: Code clean up."}, {"sha": "897c11f8186109e10ef93445a813cd1d44a69f75", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=17cf9038e10e7b5249645d22621287ffb8280143", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2764,7 +2764,9 @@ package body Errout is\n          elsif P + 1 <= Text'Last\n            and then (Text (P) in 'a' .. 'z'\n                        or else\n-                     Text (P) in 'A' .. 'Z')\n+                     Text (P) in 'A' .. 'Z'\n+                       or else\n+                     Text (P) = '*')\n            and then Text (P + 1) = C\n          then\n             Warning_Msg_Char := Text (P);"}, {"sha": "8c561fb5c2d1955f11a53ee16d855546ca85d919", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=17cf9038e10e7b5249645d22621287ffb8280143", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -60,10 +60,12 @@ package Errout is\n    --  Exception raised if Raise_Exception_On_Error is true\n \n    Warning_Doc_Switch : Boolean renames Err_Vars.Warning_Doc_Switch;\n-   --  If this is set True, then the ??/?x?/?X? sequences in error messages\n-   --  are active (see errout.ads for details). If this switch is False, then\n-   --  these sequences are ignored (i.e. simply equivalent to a single ?). The\n-   --  -gnatw.d switch sets this flag True, -gnatw.D sets this flag False.\n+   --  If this is set True, then the ??/?*?/?x?/?X? sequences in error messages\n+   --  generate appropriate tags for the output error messages. If this switch\n+   --  is False, then these sequences are still recognized (for the purposes\n+   --  of implementing pragmas Warnings (Off,..) and Warning_As_Pragma(...) but\n+   --  do not result in adding the error message tag. The -gnatw.d switch sets\n+   --  this flag True, -gnatw.D sets this flag False.\n \n    -----------------------------------\n    -- Suppression of Error Messages --\n@@ -281,7 +283,7 @@ package Errout is\n    --      messages, and the usual style is to include it, since it makes it\n    --      clear that the continuation is part of a warning message.\n    --\n-   --      Note: this usage is obsolete, use ??, ?x? or ?X? instead to specify\n+   --      Note: this usage is obsolete, use ?? ?*? ?x? ?X? instead to specify\n    --      the string to be added when Warn_Doc_Switch is set to True. If this\n    --      switch is True, then for simple ? messages it has no effect. This\n    --      simple form is to ease transition and will be removed later.\n@@ -302,6 +304,11 @@ package Errout is\n    --      letter corresponding to the lower case letter x in the message.\n    --      For continuations, use this on each continuation message.\n \n+   --    Insertion character ?*? (restriction warning)\n+   --      Like ?, but if the flag Warn_Doc_Switch is True, adds the string\n+   --      \"[restriction warning]\" at the end of the warning message. For\n+   --      continuations, use this on each continuation message.\n+\n    --    Insertion character < (Less Than: conditional warning message)\n    --      The character < appearing anywhere in a message is used for a\n    --      conditional error message. If Error_Msg_Warn is True, then the"}, {"sha": "5a7a11a72112e12d58a859e811e49c9e5e6410c7", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=17cf9038e10e7b5249645d22621287ffb8280143", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -310,6 +310,8 @@ package body Erroutc is\n       if Warn and then Warn_Chr /= ' ' then\n          if Warn_Chr = '?' then\n             return \"[enabled by default]\";\n+         elsif Warn_Chr = '*' then\n+            return \"[restriction warning]\";\n          elsif Warn_Chr in 'a' .. 'z' then\n             return \"[-gnatw\" & Warn_Chr & ']';\n          else pragma Assert (Warn_Chr in 'A' .. 'Z');"}, {"sha": "03bc8c9d4d82bdc818fc55a8bd844616b5331884", "filename": "gcc/ada/erroutc.ads", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Ferroutc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Ferroutc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.ads?ref=17cf9038e10e7b5249645d22621287ffb8280143", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -64,10 +64,11 @@ package Erroutc is\n \n    Warning_Msg_Char : Character;\n    --  Warning character, valid only if Is_Warning_Msg is True\n-   --    ' '      -- ? appeared on its own in message\n-   --    '?'      -- ?? appeared in message\n-   --    'x'      -- ?x? appeared in message\n-   --    'X'      -- ?x? appeared in message (X is upper case of x)\n+   --    ' '      -- ?   appeared on its own in message\n+   --    '?'      -- ??  appeared in message\n+   --    'x'      -- ?x? appeared in message (x = a .. z)\n+   --    'X'      -- ?X? appeared in message (X = A .. Z)\n+   --    '*'      -- ?*? appeared in message\n \n    Is_Style_Msg : Boolean := False;\n    --  Set True to indicate if the current message is a style message\n@@ -201,10 +202,11 @@ package Erroutc is\n \n       Warn_Chr : Character;\n       --  Warning character (note: set even if Warning_Doc_Switch is False)\n-      --    ' '      -- ? appeared on its own in message or no ? in message\n-      --    '?'      -- ?? appeared in message\n-      --    'x'      -- ?x? appeared in message\n-      --    'X'      -- ?x? appeared in message (X is upper case of x)\n+      --    ' '      -- ?   appeared on its own in message\n+      --    '?'      -- ??  appeared in message\n+      --    'x'      -- ?x? appeared in message (x = a .. z)\n+      --    'X'      -- ?X? appeared in message (X = A .. Z)\n+      --    '*'      -- ?*? appeared in message\n \n       Style : Boolean;\n       --  True if style message (starts with \"(style)\")"}, {"sha": "f2ebbcb4657fd6dda9b1255398913c5d61d4a6bb", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=17cf9038e10e7b5249645d22621287ffb8280143", "patch": "@@ -4018,7 +4018,7 @@ Internal GNAT implementation mode. This should not be used for\n applications programs, it is intended only for use by the compiler\n and its run-time library. For documentation, see the GNAT sources.\n Note that @option{^-gnatg^/GNAT_INTERNAL^} implies\n-@option{^-gnatwae^/WARNINGS=ALL,ERRORS^} and\n+@option{^-gnatw.ge^/WARNINGS=GNAT,ERRORS^} and\n @option{^-gnatyg^/STYLE_CHECKS=GNAT^}\n so that all standard warnings and all standard style options are turned on.\n All warnings and style messages are treated as errors.\n@@ -5167,6 +5167,14 @@ Manual requirement that such warnings appear).\n @cindex @option{-gnatwG} (@command{gcc})\n This switch suppresses warnings for unrecognized pragmas.\n \n+@item -gnatw.g\n+@emph{Warnings used for GNAT sources}\n+@cindex @option{-gnatw.g} (@command{gcc})\n+This switch sets the warning categories that are used by the standard\n+GNAT style. Currently this is equivalent to\n+@option{-gnatwAao.sI.C.V.X}\n+but more warnings may be added in the future without advanced notice.\n+\n @item -gnatwh\n @emph{Activate warnings on hiding.}\n @cindex @option{-gnatwh} (@command{gcc})\n@@ -6381,7 +6389,9 @@ in the source text.\n @emph{GNAT style mode.}\n The set of style check switches is set to match that used by the GNAT sources.\n This may be useful when developing code that is eventually intended to be\n-incorporated into GNAT. For further details, see GNAT sources.\n+incorporated into GNAT. Currently this is equivalent to @option{-gnatwydISux})\n+but additional style switches may be added to this set in the future without\n+advance notice.\n \n @item ^h^HTABS^\n @emph{No horizontal tabs.}"}, {"sha": "abf294a1caeb583b3ee1c3386354da7994442344", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=17cf9038e10e7b5249645d22621287ffb8280143", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1047,7 +1047,7 @@ package body Restrict is\n       --  Set warning message if warning\n \n       if Restriction_Warnings (R) then\n-         Add_Str (\"??\");\n+         Add_Str (\"?*?\");\n \n       --  If real violation (not warning), then mark it as non-serious unless\n       --  it is a violation of No_Finalization in which case we leave it as a"}, {"sha": "75599305d28b8d2a719224c89dedf845114fe348", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 41, "deletions": 30, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=17cf9038e10e7b5249645d22621287ffb8280143", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -3447,7 +3447,13 @@ package body Sem_Ch9 is\n    begin\n       if Has_Discriminants (E) then\n          Push_Scope (E);\n-         Install_Discriminants (E);\n+\n+         --  Make discriminants visible for type declarations and protected\n+         --  type declarations, not for subtype declarations (RM 13.1.1 (12/3))\n+\n+         if Nkind (Parent (E)) /= N_Subtype_Declaration then\n+            Install_Discriminants (E);\n+         end if;\n       end if;\n    end Push_Scope_And_Install_Discriminants;\n \n@@ -3461,40 +3467,45 @@ package body Sem_Ch9 is\n       Outer : Entity_Id;\n \n    begin\n-      Disc := First_Discriminant (E);\n-      while Present (Disc) loop\n-         if Disc /= Current_Entity (Disc) then\n-            Prev := Current_Entity (Disc);\n-            while Present (Prev)\n-              and then Present (Homonym (Prev))\n-              and then Homonym (Prev) /= Disc\n-            loop\n-               Prev := Homonym (Prev);\n-            end loop;\n-         else\n-            Prev := Empty;\n-         end if;\n+      --  Discriminants have been made visible for type declarations and\n+      --  protected type declarations, not for subtype declarations.\n+\n+      if Nkind (Parent (E)) /= N_Subtype_Declaration then\n+         Disc := First_Discriminant (E);\n+         while Present (Disc) loop\n+            if Disc /= Current_Entity (Disc) then\n+               Prev := Current_Entity (Disc);\n+               while Present (Prev)\n+                 and then Present (Homonym (Prev))\n+                 and then Homonym (Prev) /= Disc\n+               loop\n+                  Prev := Homonym (Prev);\n+               end loop;\n+            else\n+               Prev := Empty;\n+            end if;\n \n-         Set_Is_Immediately_Visible (Disc, False);\n+            Set_Is_Immediately_Visible (Disc, False);\n \n-         Outer := Homonym (Disc);\n-         while Present (Outer) and then Scope (Outer) = E loop\n-            Outer := Homonym (Outer);\n-         end loop;\n+            Outer := Homonym (Disc);\n+            while Present (Outer) and then Scope (Outer) = E loop\n+               Outer := Homonym (Outer);\n+            end loop;\n \n-         --  Reset homonym link of other entities, but do not modify link\n-         --  between entities in current scope, so that the back-end can have\n-         --  a proper count of local overloadings.\n+            --  Reset homonym link of other entities, but do not modify link\n+            --  between entities in current scope, so that the back-end can\n+            --  have a proper count of local overloadings.\n \n-         if No (Prev) then\n-            Set_Name_Entity_Id (Chars (Disc), Outer);\n+            if No (Prev) then\n+               Set_Name_Entity_Id (Chars (Disc), Outer);\n \n-         elsif Scope (Prev) /= Scope (Disc) then\n-            Set_Homonym (Prev,  Outer);\n-         end if;\n+            elsif Scope (Prev) /= Scope (Disc) then\n+               Set_Homonym (Prev,  Outer);\n+            end if;\n \n-         Next_Discriminant (Disc);\n-      end loop;\n+            Next_Discriminant (Disc);\n+         end loop;\n+      end if;\n    end Uninstall_Discriminants;\n \n    -------------------------------------------"}, {"sha": "4516bb2e289fa7a708e044e5e5d6cddc21ff033b", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=17cf9038e10e7b5249645d22621287ffb8280143", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                B o d y                                   --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -121,8 +121,8 @@ begin\n    Write_Eol;\n \n    --  Individual lines for switches. Write_Switch_Char outputs fourteen\n-   --  characters, so the remaining message is allowed to be a maximum\n-   --  of 65 characters to be comfortable in an 80 character window.\n+   --  characters, so the remaining message is allowed to be a maximum of\n+   --  65 characters to be comfortable in an 80 character window.\n \n    --  Line for -gnata switch\n \n@@ -494,23 +494,16 @@ begin\n    Write_Line (\"        .C*  turn off warnings for unrepped components\");\n    Write_Line (\"        d    turn on warnings for implicit dereference\");\n    Write_Line (\"        D*   turn off warnings for implicit dereference\");\n-\n-   --  Switches -gnatw.d/w.D not available on VMS\n-\n-   if not OpenVMS_On_Target then\n-      Write_Line\n-        (\"        .d   turn on tagging of warnings with -gnatw switch\");\n-      Write_Line\n-        (\"        .D*  turn off tagging of warnings with -gnatw switch\");\n-   end if;\n-\n+   Write_Line (\"        .d   turn on tagging of warnings with -gnatw switch\");\n+   Write_Line (\"        .D*  turn off tagging of warnings with -gnatw switch\");\n    Write_Line (\"        e    treat all warnings (but not info) as errors\");\n    Write_Line (\"        .e   turn on every optional info/warning \" &\n                                                   \"(no exceptions)\");\n    Write_Line (\"        f+   turn on warnings for unreferenced formal\");\n    Write_Line (\"        F*   turn off warnings for unreferenced formal\");\n    Write_Line (\"        g*+  turn on warnings for unrecognized pragma\");\n    Write_Line (\"        G    turn off warnings for unrecognized pragma\");\n+   Write_Line (\"        .g   turn on GNAT warnings, same as Aao.sI.C.V.X\");\n    Write_Line (\"        h    turn on warnings for hiding declarations\");\n    Write_Line (\"        H*   turn off warnings for hiding declarations\");\n    Write_Line (\"        .h   turn on warnings for holes in records\");\n@@ -640,7 +633,7 @@ begin\n    Write_Line (\"        d    check no DOS line terminators\");\n    Write_Line (\"        e    check end/exit labels present\");\n    Write_Line (\"        f    check no form feeds/vertical tabs in source\");\n-   Write_Line (\"        g    check standard GNAT style rules\");\n+   Write_Line (\"        g    check standard GNAT style rules, same as ydISux\");\n    Write_Line (\"        h    check no horizontal tabs in source\");\n    Write_Line (\"        i    check if-then layout\");\n    Write_Line (\"        I    check mode in\");"}, {"sha": "9691c10a0bcc79caf060ad019e44d3457f98cc4d", "filename": "gcc/ada/warnsw.adb", "status": "modified", "additions": 115, "deletions": 153, "changes": 268, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Fwarnsw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Fwarnsw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwarnsw.adb?ref=17cf9038e10e7b5249645d22621287ffb8280143", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1999-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,6 +29,65 @@ with Output;   use Output;\n \n package body Warnsw is\n \n+   --  Local Subprograms\n+\n+   procedure All_Warnings (Setting : Boolean);\n+   --  Sets all warnings off if Setting = False, and on if Setting = True\n+\n+   procedure WA_Warnings;\n+   --  Turn on all warnings set by -gnatwa (also used by -gnatw.g)\n+\n+   ------------------\n+   -- All_Warnings --\n+   ------------------\n+\n+   procedure All_Warnings (Setting : Boolean) is\n+   begin\n+      Address_Clause_Overlay_Warnings     := Setting;\n+      Check_Unreferenced                  := Setting;\n+      Check_Unreferenced_Formals          := Setting;\n+      Check_Withs                         := Setting;\n+      Constant_Condition_Warnings         := Setting;\n+      Elab_Warnings                       := Setting;\n+      Implementation_Unit_Warnings        := Setting;\n+      Ineffective_Inline_Warnings         := Setting;\n+      List_Body_Required_Info             := Setting;\n+      List_Inherited_Aspects              := Setting;\n+      Warn_On_Ada_2005_Compatibility      := Setting;\n+      Warn_On_Ada_2012_Compatibility      := Setting;\n+      Warn_On_All_Unread_Out_Parameters   := Setting;\n+      Warn_On_Assertion_Failure           := Setting;\n+      Warn_On_Assumed_Low_Bound           := Setting;\n+      Warn_On_Atomic_Synchronization      := Setting;\n+      Warn_On_Bad_Fixed_Value             := Setting;\n+      Warn_On_Biased_Representation       := Setting;\n+      Warn_On_Constant                    := Setting;\n+      Warn_On_Deleted_Code                := Setting;\n+      Warn_On_Dereference                 := Setting;\n+      Warn_On_Export_Import               := Setting;\n+      Warn_On_Hiding                      := Setting;\n+      Warn_On_Modified_Unread             := Setting;\n+      Warn_On_No_Value_Assigned           := Setting;\n+      Warn_On_Non_Local_Exception         := Setting;\n+      Warn_On_Object_Renames_Function     := Setting;\n+      Warn_On_Obsolescent_Feature         := Setting;\n+      Warn_On_Overlap                     := Setting;\n+      Warn_On_Overridden_Size             := Setting;\n+      Warn_On_Parameter_Order             := Setting;\n+      Warn_On_Questionable_Missing_Parens := Setting;\n+      Warn_On_Record_Holes                := Setting;\n+      Warn_On_Redundant_Constructs        := Setting;\n+      Warn_On_Reverse_Bit_Order           := Setting;\n+      Warn_On_Standard_Redefinition       := Setting;\n+      Warn_On_Suspicious_Contract         := Setting;\n+      Warn_On_Suspicious_Modulus_Value    := Setting;\n+      Warn_On_Unchecked_Conversion        := Setting;\n+      Warn_On_Unordered_Enumeration_Type  := Setting;\n+      Warn_On_Unrecognized_Pragma         := Setting;\n+      Warn_On_Unrepped_Components         := Setting;\n+      Warn_On_Warnings_Off                := Setting;\n+   end All_Warnings;\n+\n    ----------------------\n    -- Restore_Warnings --\n    ----------------------\n@@ -57,6 +116,8 @@ package body Warnsw is\n         W.List_Body_Required_Info;\n       List_Inherited_Aspects              :=\n         W.List_Inherited_Aspects;\n+      No_Warn_On_Non_Local_Exception      :=\n+        W.No_Warn_On_Non_Local_Exception;\n       Warning_Doc_Switch                  :=\n         W.Warning_Doc_Switch;\n       Warn_On_Ada_2005_Compatibility      :=\n@@ -155,6 +216,8 @@ package body Warnsw is\n         List_Body_Required_Info;\n       W.List_Inherited_Aspects              :=\n         List_Inherited_Aspects;\n+      W.No_Warn_On_Non_Local_Exception      :=\n+        No_Warn_On_Non_Local_Exception;\n       W.Warning_Doc_Switch                  :=\n         Warning_Doc_Switch;\n       W.Warn_On_Ada_2005_Compatibility      :=\n@@ -221,7 +284,6 @@ package body Warnsw is\n         Warn_On_Unrepped_Components;\n       W.Warn_On_Warnings_Off                :=\n         Warn_On_Warnings_Off;\n-\n       return W;\n    end Save_Warnings;\n \n@@ -257,48 +319,7 @@ package body Warnsw is\n             Warning_Doc_Switch                  := False;\n \n          when 'e' =>\n-            Address_Clause_Overlay_Warnings     := True;\n-            Check_Unreferenced                  := True;\n-            Check_Unreferenced_Formals          := True;\n-            Check_Withs                         := True;\n-            Constant_Condition_Warnings         := True;\n-            Elab_Warnings                       := True;\n-            Implementation_Unit_Warnings        := True;\n-            Ineffective_Inline_Warnings         := True;\n-            List_Body_Required_Info             := True;\n-            List_Inherited_Aspects              := True;\n-            Warn_On_Ada_2005_Compatibility      := True;\n-            Warn_On_Ada_2012_Compatibility      := True;\n-            Warn_On_All_Unread_Out_Parameters   := True;\n-            Warn_On_Assertion_Failure           := True;\n-            Warn_On_Assumed_Low_Bound           := True;\n-            Warn_On_Atomic_Synchronization      := True;\n-            Warn_On_Bad_Fixed_Value             := True;\n-            Warn_On_Biased_Representation       := True;\n-            Warn_On_Constant                    := True;\n-            Warn_On_Deleted_Code                := True;\n-            Warn_On_Dereference                 := True;\n-            Warn_On_Export_Import               := True;\n-            Warn_On_Hiding                      := True;\n-            Warn_On_Modified_Unread             := True;\n-            Warn_On_No_Value_Assigned           := True;\n-            Warn_On_Non_Local_Exception         := True;\n-            Warn_On_Object_Renames_Function     := True;\n-            Warn_On_Obsolescent_Feature         := True;\n-            Warn_On_Overlap                     := True;\n-            Warn_On_Overridden_Size             := True;\n-            Warn_On_Parameter_Order             := True;\n-            Warn_On_Questionable_Missing_Parens := True;\n-            Warn_On_Record_Holes                := True;\n-            Warn_On_Redundant_Constructs        := True;\n-            Warn_On_Reverse_Bit_Order           := True;\n-            Warn_On_Standard_Redefinition       := True;\n-            Warn_On_Suspicious_Contract         := True;\n-            Warn_On_Unchecked_Conversion        := True;\n-            Warn_On_Unordered_Enumeration_Type  := True;\n-            Warn_On_Unrecognized_Pragma         := True;\n-            Warn_On_Unrepped_Components         := True;\n-            Warn_On_Warnings_Off                := True;\n+            All_Warnings (True);\n \n          when 'g' =>\n             Set_GNAT_Mode_Warnings;\n@@ -417,48 +438,23 @@ package body Warnsw is\n \n    procedure Set_GNAT_Mode_Warnings is\n    begin\n+      --  Set -gnatwa warnings and no others\n+\n+      All_Warnings (False);\n+      WA_Warnings;\n+\n+      --  These warnings are added to the -gnatwa set\n+\n       Address_Clause_Overlay_Warnings     := True;\n-      Check_Unreferenced                  := True;\n-      Check_Unreferenced_Formals          := True;\n-      Check_Withs                         := True;\n-      Constant_Condition_Warnings         := True;\n-      Elab_Warnings                       := False;\n+      Warn_On_Overridden_Size             := True;\n+\n+      --  These warnings are removed from the -gnatwa set\n+\n       Implementation_Unit_Warnings        := False;\n-      Ineffective_Inline_Warnings         := True;\n-      List_Body_Required_Info             := False;\n-      List_Inherited_Aspects              := False;\n-      Warning_Doc_Switch                  := False;\n-      Warn_On_Ada_2005_Compatibility      := True;\n-      Warn_On_Ada_2012_Compatibility      := True;\n-      Warn_On_All_Unread_Out_Parameters   := False;\n-      Warn_On_Assertion_Failure           := True;\n-      Warn_On_Assumed_Low_Bound           := True;\n-      Warn_On_Atomic_Synchronization      := False;\n-      Warn_On_Bad_Fixed_Value             := True;\n-      Warn_On_Biased_Representation       := True;\n-      Warn_On_Constant                    := True;\n-      Warn_On_Deleted_Code                := False;\n-      Warn_On_Dereference                 := False;\n-      Warn_On_Export_Import               := True;\n-      Warn_On_Hiding                      := False;\n-      Warn_On_Modified_Unread             := True;\n-      Warn_On_No_Value_Assigned           := True;\n       Warn_On_Non_Local_Exception         := False;\n-      Warn_On_Object_Renames_Function     := True;\n-      Warn_On_Obsolescent_Feature         := True;\n-      Warn_On_Overlap                     := True;\n-      Warn_On_Overridden_Size             := True;\n-      Warn_On_Parameter_Order             := True;\n-      Warn_On_Questionable_Missing_Parens := True;\n-      Warn_On_Record_Holes                := False;\n-      Warn_On_Redundant_Constructs        := True;\n+      No_Warn_On_Non_Local_Exception      := True;\n       Warn_On_Reverse_Bit_Order           := False;\n-      Warn_On_Suspicious_Contract         := True;\n-      Warn_On_Unchecked_Conversion        := True;\n-      Warn_On_Unordered_Enumeration_Type  := False;\n-      Warn_On_Unrecognized_Pragma         := True;\n       Warn_On_Unrepped_Components         := False;\n-      Warn_On_Warnings_Off                := False;\n    end Set_GNAT_Mode_Warnings;\n \n    ------------------------\n@@ -469,80 +465,10 @@ package body Warnsw is\n    begin\n       case C is\n          when 'a' =>\n-            Check_Unreferenced                  := True;\n-            Check_Unreferenced_Formals          := True;\n-            Check_Withs                         := True;\n-            Constant_Condition_Warnings         := True;\n-            Implementation_Unit_Warnings        := True;\n-            Ineffective_Inline_Warnings         := True;\n-            Warn_On_Ada_2005_Compatibility      := True;\n-            Warn_On_Ada_2012_Compatibility      := True;\n-            Warn_On_Assertion_Failure           := True;\n-            Warn_On_Assumed_Low_Bound           := True;\n-            Warn_On_Bad_Fixed_Value             := True;\n-            Warn_On_Biased_Representation       := True;\n-            Warn_On_Constant                    := True;\n-            Warn_On_Export_Import               := True;\n-            Warn_On_Modified_Unread             := True;\n-            Warn_On_No_Value_Assigned           := True;\n-            Warn_On_Non_Local_Exception         := True;\n-            Warn_On_Object_Renames_Function     := True;\n-            Warn_On_Obsolescent_Feature         := True;\n-            Warn_On_Overlap                     := True;\n-            Warn_On_Parameter_Order             := True;\n-            Warn_On_Questionable_Missing_Parens := True;\n-            Warn_On_Redundant_Constructs        := True;\n-            Warn_On_Reverse_Bit_Order           := True;\n-            Warn_On_Suspicious_Contract         := True;\n-            Warn_On_Unchecked_Conversion        := True;\n-            Warn_On_Unrecognized_Pragma         := True;\n-            Warn_On_Unrepped_Components         := True;\n+            WA_Warnings;\n \n          when 'A' =>\n-            Address_Clause_Overlay_Warnings     := False;\n-            Check_Unreferenced                  := False;\n-            Check_Unreferenced_Formals          := False;\n-            Check_Withs                         := False;\n-            Constant_Condition_Warnings         := False;\n-            Elab_Warnings                       := False;\n-            Implementation_Unit_Warnings        := False;\n-            Ineffective_Inline_Warnings         := False;\n-            List_Body_Required_Info             := False;\n-            List_Inherited_Aspects              := False;\n-            Warning_Doc_Switch                  := False;\n-            Warn_On_Ada_2005_Compatibility      := False;\n-            Warn_On_Ada_2012_Compatibility      := False;\n-            Warn_On_All_Unread_Out_Parameters   := False;\n-            Warn_On_Assertion_Failure           := False;\n-            Warn_On_Assumed_Low_Bound           := False;\n-            Warn_On_Bad_Fixed_Value             := False;\n-            Warn_On_Biased_Representation       := False;\n-            Warn_On_Constant                    := False;\n-            Warn_On_Deleted_Code                := False;\n-            Warn_On_Dereference                 := False;\n-            Warn_On_Export_Import               := False;\n-            Warn_On_Hiding                      := False;\n-            Warn_On_Modified_Unread             := False;\n-            Warn_On_No_Value_Assigned           := False;\n-            Warn_On_Non_Local_Exception         := False;\n-            Warn_On_Object_Renames_Function     := False;\n-            Warn_On_Obsolescent_Feature         := False;\n-            Warn_On_Overlap                     := False;\n-            Warn_On_Overridden_Size             := False;\n-            Warn_On_Parameter_Order             := False;\n-            Warn_On_Record_Holes                := False;\n-            Warn_On_Questionable_Missing_Parens := False;\n-            Warn_On_Redundant_Constructs        := False;\n-            Warn_On_Reverse_Bit_Order           := False;\n-            Warn_On_Standard_Redefinition       := False;\n-            Warn_On_Suspicious_Contract         := False;\n-            Warn_On_Suspicious_Modulus_Value    := False;\n-            Warn_On_Unchecked_Conversion        := False;\n-            Warn_On_Unordered_Enumeration_Type  := False;\n-            Warn_On_Unrecognized_Pragma         := False;\n-            Warn_On_Unrepped_Components         := False;\n-            Warn_On_Warnings_Off                := False;\n-\n+            All_Warnings (False);\n             No_Warn_On_Non_Local_Exception      := True;\n \n          when 'b' =>\n@@ -704,4 +630,40 @@ package body Warnsw is\n       return True;\n    end Set_Warning_Switch;\n \n+   -----------------\n+   -- WA_Warnings --\n+   -----------------\n+\n+   procedure WA_Warnings is\n+   begin\n+      Check_Unreferenced                  := True;\n+      Check_Unreferenced_Formals          := True;\n+      Check_Withs                         := True;\n+      Constant_Condition_Warnings         := True;\n+      Implementation_Unit_Warnings        := True;\n+      Ineffective_Inline_Warnings         := True;\n+      Warn_On_Ada_2005_Compatibility      := True;\n+      Warn_On_Ada_2012_Compatibility      := True;\n+      Warn_On_Assertion_Failure           := True;\n+      Warn_On_Assumed_Low_Bound           := True;\n+      Warn_On_Bad_Fixed_Value             := True;\n+      Warn_On_Biased_Representation       := True;\n+      Warn_On_Constant                    := True;\n+      Warn_On_Export_Import               := True;\n+      Warn_On_Modified_Unread             := True;\n+      Warn_On_No_Value_Assigned           := True;\n+      Warn_On_Non_Local_Exception         := True;\n+      Warn_On_Object_Renames_Function     := True;\n+      Warn_On_Obsolescent_Feature         := True;\n+      Warn_On_Overlap                     := True;\n+      Warn_On_Parameter_Order             := True;\n+      Warn_On_Questionable_Missing_Parens := True;\n+      Warn_On_Redundant_Constructs        := True;\n+      Warn_On_Reverse_Bit_Order           := True;\n+      Warn_On_Suspicious_Contract         := True;\n+      Warn_On_Unchecked_Conversion        := True;\n+      Warn_On_Unrecognized_Pragma         := True;\n+      Warn_On_Unrepped_Components         := True;\n+   end WA_Warnings;\n+\n end Warnsw;"}, {"sha": "89c5fb1ac52c08fc1ef1f7861d3a80ed263cf188", "filename": "gcc/ada/warnsw.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Fwarnsw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17cf9038e10e7b5249645d22621287ffb8280143/gcc%2Fada%2Fwarnsw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwarnsw.ads?ref=17cf9038e10e7b5249645d22621287ffb8280143", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -71,6 +71,7 @@ package Warnsw is\n       Ineffective_Inline_Warnings         : Boolean;\n       List_Body_Required_Info             : Boolean;\n       List_Inherited_Aspects              : Boolean;\n+      No_Warn_On_Non_Local_Exception      : Boolean;\n       Warning_Doc_Switch                  : Boolean;\n       Warn_On_Ada_2005_Compatibility      : Boolean;\n       Warn_On_Ada_2012_Compatibility      : Boolean;\n@@ -99,6 +100,7 @@ package Warnsw is\n       Warn_On_Reverse_Bit_Order           : Boolean;\n       Warn_On_Standard_Redefinition       : Boolean;\n       Warn_On_Suspicious_Contract         : Boolean;\n+      Warn_On_Suspicious_Modulus_Value    : Boolean;\n       Warn_On_Unchecked_Conversion        : Boolean;\n       Warn_On_Unordered_Enumeration_Type  : Boolean;\n       Warn_On_Unrecognized_Pragma         : Boolean;"}]}