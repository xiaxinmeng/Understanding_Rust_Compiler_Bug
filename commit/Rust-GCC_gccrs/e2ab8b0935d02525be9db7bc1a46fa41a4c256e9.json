{"sha": "e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJhYjhiMDkzNWQwMjUyNWJlOWRiN2JjMWE0NmZhNDFhNGMyNTZlOQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-08-02T10:58:44Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-08-02T10:58:44Z"}, "message": "re PR fortran/40881 ([F03] warn for obsolescent features)\n\n2009-08-02  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/40881\n\t* decl.c (match_char_length): Warn about old-style character length\n\tdeclarations.\n\t* match.c (match_arithmetic_if,gfc_match_if): Modify warning message\n\tfor arithmetic if.\n\t(gfc_match_goto): Warn about computed gotos.\n\t(gfc_match_return): Warn about alternate return.\n\t(gfc_match_st_function): Warn about statement functions.\n\t* resolve.c (resolve_fl_procedure): Modify warning message for\n\tassumed-length character functions.\n\n\n2009-08-02  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/40881\n\t* gfortran.dg/aliasing_dummy_1.f90: Add -std=legacy.\n\t* gfortran.dg/altreturn_3.f90: Ditto.\n\t* gfortran.dg/altreturn_5.f90: Ditto.\n\t* gfortran.dg/altreturn_6.f90: Ditto.\n\t* gfortran.dg/altreturn_7.f90: Ditto.\n\t* gfortran.dg/array_constructor_13.f90: Ditto.\n\t* gfortran.dg/arrayio_7.f90: Ditto.\n\t* gfortran.dg/arrayio_8.f90: Ditto.\n\t* gfortran.dg/assumed_charlen_function_3.f90: Modified warning message.\n\t* gfortran.dg/assumed_charlen_function_4.f90: Add -std=legacy.\n\t* gfortran.dg/assumed_charlen_function_5.f90: Modified warning message.\n\t* gfortran.dg/backspace_8.f: Add -std=legacy.\n\t* gfortran.dg/backspace_9.f: Ditto.\n\t* gfortran.dg/char_comparison_1.f: Ditto.\n\t* gfortran.dg/char_decl_1.f90: Ditto.\n\t* gfortran.dg/char_initialiser_actual.f90: Ditto.\n\t* gfortran.dg/char_pointer_assign.f90: Ditto.\n\t* gfortran.dg/char_pointer_dependency.f90: Ditto.\n\t* gfortran.dg/char_pointer_dummy.f90: Ditto.\n\t* gfortran.dg/char_pointer_func.f90: Ditto.\n\t* gfortran.dg/common_8.f90: Ditto.\n\t* gfortran.dg/constant_substring.f: Ditto.\n\t* gfortran.dg/data_char_2.f90: Ditto.\n\t* gfortran.dg/der_array_io_1.f90: Ditto.\n\t* gfortran.dg/der_array_io_2.f90: Ditto.\n\t* gfortran.dg/der_array_io_3.f90: Ditto.\n\t* gfortran.dg/der_io_3.f90: Ditto.\n\t* gfortran.dg/dev_null.F90: Ditto.\n\t* gfortran.dg/direct_io_2.f90: Ditto.\n\t* gfortran.dg/do_iterator_2.f90: Ditto.\n\t* gfortran.dg/e_d_fmt.f90: Ditto.\n\t* gfortran.dg/empty_format_1.f90: Ditto.\n\t* gfortran.dg/entry_17.f90: Modified warning message.\n\t* gfortran.dg/entry_7.f90: Add -std=legacy.\n\t* gfortran.dg/eor_1.f90: Ditto.\n\t* gfortran.dg/equiv_2.f90: Ditto.\n\t* gfortran.dg/equiv_constraint_2.f90: Use new-style character length.\n\t* gfortran.dg/equiv_substr.f90: Add -std=legacy.\n\t* gfortran.dg/extended_char_comparison_1.f: Ditto.\n\t* gfortran.dg/fmt_bz_bn_err.f: Ditto.\n\t* gfortran.dg/fmt_error_2.f90: Ditto.\n\t* gfortran.dg/fmt_read_bz_bn.f90: Ditto.\n\t* gfortran.dg/fmt_tl.f: Ditto.\n\t* gfortran.dg/fmt_white.f: Ditto.\n\t* gfortran.dg/func_derived_1.f90: Ditto.\n\t* gfortran.dg/g77_intrinsics_funcs.f: Ditto.\n\t* gfortran.dg/g77_intrinsics_sub.f: Ditto.\n\t* gfortran.dg/global_references_2.f90: Ditto.\n\t* gfortran.dg/hollerith_1.f90: Ditto.\n\t* gfortran.dg/hollerith.f90: Use new-style character length.\n\t* gfortran.dg/hollerith_f95.f90: Ditto.\n\t* gfortran.dg/ichar_1.f90: Add -std=legacy.\n\t* gfortran.dg/implicit_6.f90: Ditto.\n\t* gfortran.dg/implicit_9.f90: Ditto.\n\t* gfortran.dg/inquire_13.f90: Ditto.\n\t* gfortran.dg/inquire_5.f90: Ditto.\n\t* gfortran.dg/inquire_6.f90: Ditto.\n\t* gfortran.dg/inquire.f90: Ditto.\n\t* gfortran.dg/io_constraints_1.f90: Use new-style character length.\n\t* gfortran.dg/io_constraints_2.f90: Ditto.\n\t* gfortran.dg/list_read_2.f90: Add -std=legacy.\n\t* gfortran.dg/loc_2.f90: Ditto.\n\t* gfortran.dg/logical_1.f90: Ditto.\n\t* gfortran.dg/longline.f: Ditto.\n\t* gfortran.dg/merge_char_1.f90: Ditto.\n\t* gfortran.dg/namelist_12.f: Ditto.\n\t* gfortran.dg/namelist_14.f90: Ditto.\n\t* gfortran.dg/namelist_18.f90: Ditto.\n\t* gfortran.dg/namelist_19.f90: Ditto.\n\t* gfortran.dg/namelist_21.f90: Ditto.\n\t* gfortran.dg/namelist_22.f90: Ditto.\n\t* gfortran.dg/namelist_37.f90: Ditto.\n\t* gfortran.dg/namelist_54.f90: Ditto.\n\t* gfortran.dg/namelist_55.f90: Ditto.\n\t* gfortran.dg/namelist_empty.f90: Ditto.\n\t* gfortran.dg/namelist_use.f90: Use new-style character length.\n\t* gfortran.dg/namelist_use_only.f90: Add -std=legacy.\n\t* gfortran.dg/nested_modules_4.f90: Ditto.\n\t* gfortran.dg/nested_modules_5.f90: Ditto.\n\t* gfortran.dg/open-options-blanks.f: Ditto.\n\t* gfortran.dg/output_exponents_1.f90: Ditto.\n\t* gfortran.dg/parens_5.f90: Ditto.\n\t* gfortran.dg/parens_6.f90: Ditto.\n\t* gfortran.dg/parent_result_ref_2.f90: Modified warning message.\n\t* gfortran.dg/pointer_function_actual_1.f90: Add -std=legacy.\n\t* gfortran.dg/pr15129.f90: Ditto.\n\t* gfortran.dg/pr15332.f: Ditto.\n\t* gfortran.dg/pr16597.f90: Ditto.\n\t* gfortran.dg/pr17143.f90: Ditto.\n\t* gfortran.dg/pr17164.f90: Ditto.\n\t* gfortran.dg/pr17229.f: Modified warning message.\n\t* gfortran.dg/pr18210.f90: Add -std=legacy.\n\t* gfortran.dg/pr19155.f: Ditto.\n\t* gfortran.dg/pr20086.f90: Ditto.\n\t* gfortran.dg/pr20124.f90: Ditto.\n\t* gfortran.dg/pr20755.f: Ditto.\n\t* gfortran.dg/pr20865.f90: Ditto.\n\t* gfortran.dg/pr20950.f: Ditto.\n\t* gfortran.dg/pr21730.f: Ditto.\n\t* gfortran.dg/pr22491.f: Ditto.\n\t* gfortran.dg/pr29713.f90: Ditto.\n\t* gfortran.dg/print_parentheses_1.f: Ditto.\n\t* gfortran.dg/print_parentheses_2.f90: Ditto.\n\t* gfortran.dg/proc_assign_1.f90: Ditto.\n\t* gfortran.dg/proc_decl_1.f90: Ditto.\n\t* gfortran.dg/proc_ptr_17.f90: Add dg-warning.\n\t* gfortran.dg/read_eor.f90: : Add -std=legacy.\n\t* gfortran.dg/read_float_1.f90: Ditto.\n\t* gfortran.dg/read_logical.f90: Ditto.\n\t* gfortran.dg/recursive_statement_functions.f90: Ditto.\n\t* gfortran.dg/return_1.f90: Ditto.\n\t* gfortran.dg/rewind_1.f90: Ditto.\n\t* gfortran.dg/runtime_warning_1.f90: Use new-style character length.\n\t* gfortran.dg/scalar_return_1.f90: Add -std=legacy.\n\t* gfortran.dg/stfunc_1.f90: Ditto.\n\t* gfortran.dg/stfunc_3.f90: Ditto.\n\t* gfortran.dg/stfunc_4.f90: Ditto.\n\t* gfortran.dg/stfunc_6.f90: Ditto.\n\t* gfortran.dg/streamio_2.f90: Ditto.\n\t* gfortran.dg/string_ctor_1.f90: Ditto.\n\t* gfortran.dg/string_null_compare_1.f: Ditto.\n\t* gfortran.dg/substr_6.f90: Ditto.\n\t* gfortran.dg/tl_editing.f90: Ditto.\n\t* gfortran.dg/unf_io_convert_1.f90: Use new-style character length.\n\t* gfortran.dg/warnings_are_errors_1.f90: Modified warning message.\n\t* gfortran.dg/x_slash_1.f: Add -std=legacy.\n\t* gfortran.dg/g77/1832.f: Ditto.\n\t* gfortran.dg/g77/19981216-0.f Ditto.\n\t* gfortran.dg/g77/19990525-0.f: Ditto.\n\t* gfortran.dg/g77/19990826-2.f: Ditto.\n\t* gfortran.dg/g77/20000630-2.f: Ditto.\n\t* gfortran.dg/g77/20010116.f: Ditto.\n\t* gfortran.dg/g77/20010519-1.f: Use new-style character length.\n\t* gfortran.dg/g77/980419-2.f: Add -std=legacy.\n\t* gfortran.dg/g77/980520-1.f: Ditto.\n\t* gfortran.dg/g77/check0.f: Ditto.\n\t* gfortran.dg/g77/cpp3.F: Ditto.\n\t* gfortran.dg/g77/cpp4.F: Use new-style character length.\n\t* gfortran.dg/g77/f77-edit-i-in.f: Add -std=legacy.\n\t* gfortran.dg/g77/f77-edit-t-in.f: Ditto.\n\t* gfortran.dg/g77/short.f: Ditto.\n\nFrom-SVN: r150349", "tree": {"sha": "6a1a93ecbcf75eabde439a41d80983d70477ef7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a1a93ecbcf75eabde439a41d80983d70477ef7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "657e81c74ffdd2917174e326f0facc996dfbfa1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/657e81c74ffdd2917174e326f0facc996dfbfa1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/657e81c74ffdd2917174e326f0facc996dfbfa1d"}], "stats": {"total": 543, "additions": 483, "deletions": 60}, "files": [{"sha": "45cec953230c3c3afb12e6e6af53defbd6bda798", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,3 +1,16 @@\n+2009-08-02  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/40881\n+\t* decl.c (match_char_length): Warn about old-style character length\n+\tdeclarations.\n+\t* match.c (match_arithmetic_if,gfc_match_if): Modify warning message\n+\tfor arithmetic if.\n+\t(gfc_match_goto): Warn about computed gotos.\n+\t(gfc_match_return): Warn about alternate return.\n+\t(gfc_match_st_function): Warn about statement functions.\n+\t* resolve.c (resolve_fl_procedure): Modify warning message for\n+\tassumed-length character functions.\n+\n 2009-08-01  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/40011"}, {"sha": "8dad9bf2594906c83bd082afe72e832e1bd6e5ef", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -655,6 +655,9 @@ match_char_length (gfc_expr **expr)\n \n   if (m == MATCH_YES)\n     {\n+      if (gfc_notify_std (GFC_STD_F95_OBS, \"Obsolescent feature: \"\n+\t\t\t  \"Old-style character length at %C\") == FAILURE)\n+\treturn MATCH_ERROR;\n       *expr = gfc_int_expr (length);\n       return m;\n     }"}, {"sha": "b9b9d54d44ee71b29211f1a3db27315937292f8e", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1383,8 +1383,8 @@ match_arithmetic_if (void)\n       return MATCH_ERROR;\n     }\n \n-  if (gfc_notify_std (GFC_STD_F95_OBS, \"Obsolescent: arithmetic IF statement \"\n-\t\t      \"at %C\") == FAILURE)\n+  if (gfc_notify_std (GFC_STD_F95_OBS, \"Obsolescent feature: Arithmetic IF \"\n+\t\t      \"statement at %C\") == FAILURE)\n     return MATCH_ERROR;\n \n   new_st.op = EXEC_ARITHMETIC_IF;\n@@ -1464,7 +1464,7 @@ gfc_match_if (gfc_statement *if_type)\n \t  return MATCH_ERROR;\n \t}\n       \n-      if (gfc_notify_std (GFC_STD_F95_OBS, \"Obsolescent: arithmetic IF \"\n+      if (gfc_notify_std (GFC_STD_F95_OBS, \"Obsolescent feature: Arithmetic IF \"\n \t\t\t  \"statement at %C\") == FAILURE)\n \treturn MATCH_ERROR;\n \n@@ -2180,6 +2180,10 @@ gfc_match_goto (void)\n   if (gfc_match (\" %e%t\", &expr) != MATCH_YES)\n     goto syntax;\n \n+  if (gfc_notify_std (GFC_STD_F95_OBS, \"Obsolescent feature: Computed GOTO \"\n+\t\t      \"at %C\") == FAILURE)\n+    return MATCH_ERROR;\n+\n   /* At this point, a computed GOTO has been fully matched and an\n      equivalent SELECT statement constructed.  */\n \n@@ -2580,6 +2584,10 @@ gfc_match_return (void)\n       goto cleanup;\n     }\n \n+  if (gfc_notify_std (GFC_STD_F95_OBS, \"Obsolescent feature: Alternate RETURN \"\n+\t\t      \"at %C\") == FAILURE)\n+    return MATCH_ERROR;\n+\n   if (gfc_current_form == FORM_FREE)\n     {\n       /* The following are valid, so we can't require a blank after the\n@@ -3517,6 +3525,10 @@ gfc_match_st_function (void)\n \n   sym->value = expr;\n \n+  if (gfc_notify_std (GFC_STD_F95_OBS, \"Obsolescent feature: \"\n+\t\t      \"Statement function at %C\") == FAILURE)\n+    return MATCH_ERROR;\n+\n   return MATCH_YES;\n \n undo_error:"}, {"sha": "14a111e3ad7dedd7629af28c9a9e08f188a6ef47", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -8289,8 +8289,8 @@ resolve_fl_procedure (gfc_symbol *sym, int mp_flag)\n       /* Appendix B.2 of the standard.  Contained functions give an\n \t error anyway.  Fixed-form is likely to be F77/legacy.  */\n       if (!sym->attr.contained && gfc_current_form != FORM_FIXED)\n-\tgfc_notify_std (GFC_STD_F95_OBS, \"CHARACTER(*) function \"\n-\t\t\t\"'%s' at %L is obsolescent in fortran 95\",\n+\tgfc_notify_std (GFC_STD_F95_OBS, \"Obsolescent feature: \"\n+\t\t\t\"CHARACTER(*) function '%s' at %L\",\n \t\t\tsym->name, &sym->declared_at);\n     }\n "}, {"sha": "d01a1a7b52a9e143a849074ede4b449e72954dbf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 145, "deletions": 0, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,3 +1,148 @@\n+2009-08-02  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/40881\n+\t* gfortran.dg/aliasing_dummy_1.f90: Add -std=legacy.\n+\t* gfortran.dg/altreturn_3.f90: Ditto.\n+\t* gfortran.dg/altreturn_5.f90: Ditto.\n+\t* gfortran.dg/altreturn_6.f90: Ditto.\n+\t* gfortran.dg/altreturn_7.f90: Ditto.\n+\t* gfortran.dg/array_constructor_13.f90: Ditto.\n+\t* gfortran.dg/arrayio_7.f90: Ditto.\n+\t* gfortran.dg/arrayio_8.f90: Ditto.\n+\t* gfortran.dg/assumed_charlen_function_3.f90: Modified warning message.\n+\t* gfortran.dg/assumed_charlen_function_4.f90: Add -std=legacy.\n+\t* gfortran.dg/assumed_charlen_function_5.f90: Modified warning message.\n+\t* gfortran.dg/backspace_8.f: Add -std=legacy.\n+\t* gfortran.dg/backspace_9.f: Ditto.\n+\t* gfortran.dg/char_comparison_1.f: Ditto.\n+\t* gfortran.dg/char_decl_1.f90: Ditto.\n+\t* gfortran.dg/char_initialiser_actual.f90: Ditto.\n+\t* gfortran.dg/char_pointer_assign.f90: Ditto.\n+\t* gfortran.dg/char_pointer_dependency.f90: Ditto.\n+\t* gfortran.dg/char_pointer_dummy.f90: Ditto.\n+\t* gfortran.dg/char_pointer_func.f90: Ditto.\n+\t* gfortran.dg/common_8.f90: Ditto.\n+\t* gfortran.dg/constant_substring.f: Ditto.\n+\t* gfortran.dg/data_char_2.f90: Ditto.\n+\t* gfortran.dg/der_array_io_1.f90: Ditto.\n+\t* gfortran.dg/der_array_io_2.f90: Ditto.\n+\t* gfortran.dg/der_array_io_3.f90: Ditto.\n+\t* gfortran.dg/der_io_3.f90: Ditto.\n+\t* gfortran.dg/dev_null.F90: Ditto.\n+\t* gfortran.dg/direct_io_2.f90: Ditto.\n+\t* gfortran.dg/do_iterator_2.f90: Ditto.\n+\t* gfortran.dg/e_d_fmt.f90: Ditto.\n+\t* gfortran.dg/empty_format_1.f90: Ditto.\n+\t* gfortran.dg/entry_17.f90: Modified warning message.\n+\t* gfortran.dg/entry_7.f90: Add -std=legacy.\n+\t* gfortran.dg/eor_1.f90: Ditto.\n+\t* gfortran.dg/equiv_2.f90: Ditto.\n+\t* gfortran.dg/equiv_constraint_2.f90: Use new-style character length.\n+\t* gfortran.dg/equiv_substr.f90: Add -std=legacy.\n+\t* gfortran.dg/extended_char_comparison_1.f: Ditto.\n+\t* gfortran.dg/fmt_bz_bn_err.f: Ditto.\n+\t* gfortran.dg/fmt_error_2.f90: Ditto.\n+\t* gfortran.dg/fmt_read_bz_bn.f90: Ditto.\n+\t* gfortran.dg/fmt_tl.f: Ditto.\n+\t* gfortran.dg/fmt_white.f: Ditto.\n+\t* gfortran.dg/func_derived_1.f90: Ditto.\n+\t* gfortran.dg/g77_intrinsics_funcs.f: Ditto.\n+\t* gfortran.dg/g77_intrinsics_sub.f: Ditto.\n+\t* gfortran.dg/global_references_2.f90: Ditto.\n+\t* gfortran.dg/hollerith_1.f90: Ditto.\n+\t* gfortran.dg/hollerith.f90: Use new-style character length.\n+\t* gfortran.dg/hollerith_f95.f90: Ditto.\n+\t* gfortran.dg/ichar_1.f90: Add -std=legacy.\n+\t* gfortran.dg/implicit_6.f90: Ditto.\n+\t* gfortran.dg/implicit_9.f90: Ditto.\n+\t* gfortran.dg/inquire_13.f90: Ditto.\n+\t* gfortran.dg/inquire_5.f90: Ditto.\n+\t* gfortran.dg/inquire_6.f90: Ditto.\n+\t* gfortran.dg/inquire.f90: Ditto.\n+\t* gfortran.dg/io_constraints_1.f90: Use new-style character length.\n+\t* gfortran.dg/io_constraints_2.f90: Ditto.\n+\t* gfortran.dg/list_read_2.f90: Add -std=legacy.\n+\t* gfortran.dg/loc_2.f90: Ditto.\n+\t* gfortran.dg/logical_1.f90: Ditto.\n+\t* gfortran.dg/longline.f: Ditto.\n+\t* gfortran.dg/merge_char_1.f90: Ditto.\n+\t* gfortran.dg/namelist_12.f: Ditto.\n+\t* gfortran.dg/namelist_14.f90: Ditto.\n+\t* gfortran.dg/namelist_18.f90: Ditto.\n+\t* gfortran.dg/namelist_19.f90: Ditto.\n+\t* gfortran.dg/namelist_21.f90: Ditto.\n+\t* gfortran.dg/namelist_22.f90: Ditto.\n+\t* gfortran.dg/namelist_37.f90: Ditto.\n+\t* gfortran.dg/namelist_54.f90: Ditto.\n+\t* gfortran.dg/namelist_55.f90: Ditto.\n+\t* gfortran.dg/namelist_empty.f90: Ditto.\n+\t* gfortran.dg/namelist_use.f90: Use new-style character length.\n+\t* gfortran.dg/namelist_use_only.f90: Add -std=legacy.\n+\t* gfortran.dg/nested_modules_4.f90: Ditto.\n+\t* gfortran.dg/nested_modules_5.f90: Ditto.\n+\t* gfortran.dg/open-options-blanks.f: Ditto.\n+\t* gfortran.dg/output_exponents_1.f90: Ditto.\n+\t* gfortran.dg/parens_5.f90: Ditto.\n+\t* gfortran.dg/parens_6.f90: Ditto.\n+\t* gfortran.dg/parent_result_ref_2.f90: Modified warning message.\n+\t* gfortran.dg/pointer_function_actual_1.f90: Add -std=legacy.\n+\t* gfortran.dg/pr15129.f90: Ditto.\n+\t* gfortran.dg/pr15332.f: Ditto.\n+\t* gfortran.dg/pr16597.f90: Ditto.\n+\t* gfortran.dg/pr17143.f90: Ditto.\n+\t* gfortran.dg/pr17164.f90: Ditto.\n+\t* gfortran.dg/pr17229.f: Modified warning message.\n+\t* gfortran.dg/pr18210.f90: Add -std=legacy.\n+\t* gfortran.dg/pr19155.f: Ditto.\n+\t* gfortran.dg/pr20086.f90: Ditto.\n+\t* gfortran.dg/pr20124.f90: Ditto.\n+\t* gfortran.dg/pr20755.f: Ditto.\n+\t* gfortran.dg/pr20865.f90: Ditto.\n+\t* gfortran.dg/pr20950.f: Ditto.\n+\t* gfortran.dg/pr21730.f: Ditto.\n+\t* gfortran.dg/pr22491.f: Ditto.\n+\t* gfortran.dg/pr29713.f90: Ditto.\n+\t* gfortran.dg/print_parentheses_1.f: Ditto.\n+\t* gfortran.dg/print_parentheses_2.f90: Ditto.\n+\t* gfortran.dg/proc_assign_1.f90: Ditto.\n+\t* gfortran.dg/proc_decl_1.f90: Ditto.\n+\t* gfortran.dg/proc_ptr_17.f90: Add dg-warning.\n+\t* gfortran.dg/read_eor.f90: : Add -std=legacy.\n+\t* gfortran.dg/read_float_1.f90: Ditto.\n+\t* gfortran.dg/read_logical.f90: Ditto.\n+\t* gfortran.dg/recursive_statement_functions.f90: Ditto.\n+\t* gfortran.dg/return_1.f90: Ditto.\n+\t* gfortran.dg/rewind_1.f90: Ditto.\n+\t* gfortran.dg/runtime_warning_1.f90: Use new-style character length.\n+\t* gfortran.dg/scalar_return_1.f90: Add -std=legacy.\n+\t* gfortran.dg/stfunc_1.f90: Ditto.\n+\t* gfortran.dg/stfunc_3.f90: Ditto.\n+\t* gfortran.dg/stfunc_4.f90: Ditto.\n+\t* gfortran.dg/stfunc_6.f90: Ditto.\n+\t* gfortran.dg/streamio_2.f90: Ditto.\n+\t* gfortran.dg/string_ctor_1.f90: Ditto.\n+\t* gfortran.dg/string_null_compare_1.f: Ditto.\n+\t* gfortran.dg/substr_6.f90: Ditto.\n+\t* gfortran.dg/tl_editing.f90: Ditto.\n+\t* gfortran.dg/unf_io_convert_1.f90: Use new-style character length.\n+\t* gfortran.dg/warnings_are_errors_1.f90: Modified warning message.\n+\t* gfortran.dg/x_slash_1.f: Add -std=legacy.\n+\t* gfortran.dg/g77/1832.f: Ditto.\n+\t* gfortran.dg/g77/19981216-0.f Ditto.\n+\t* gfortran.dg/g77/19990525-0.f: Ditto.\n+\t* gfortran.dg/g77/19990826-2.f: Ditto.\n+\t* gfortran.dg/g77/20000630-2.f: Ditto.\n+\t* gfortran.dg/g77/20010116.f: Ditto.\n+\t* gfortran.dg/g77/20010519-1.f: Use new-style character length.\n+\t* gfortran.dg/g77/980419-2.f: Add -std=legacy.\n+\t* gfortran.dg/g77/980520-1.f: Ditto.\n+\t* gfortran.dg/g77/check0.f: Ditto.\n+\t* gfortran.dg/g77/cpp3.F: Ditto.\n+\t* gfortran.dg/g77/cpp4.F: Use new-style character length.\n+\t* gfortran.dg/g77/f77-edit-i-in.f: Add -std=legacy.\n+\t* gfortran.dg/g77/f77-edit-t-in.f: Ditto.\n+\t* gfortran.dg/g77/short.f: Ditto.\n+\n 2009-08-01  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* gcc.target/mips/ext-3.c: Add NOMIPS16."}, {"sha": "686853a1c08ebf9f4bf636f57d6bfd732cbf793e", "filename": "gcc/testsuite/gfortran.dg/aliasing_dummy_1.f90", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Faliasing_dummy_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Faliasing_dummy_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Faliasing_dummy_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! This tests the fix for PR24276, which originated from the Loren P. Meissner example,\n ! Array_List.  The PR concerns dummy argument aliassing of components of arrays of derived\n ! types as arrays of the type of the component.  gfortran would compile and run this\n@@ -61,4 +63,5 @@ subroutine foo3 (slist, i)\n     write (slist(1,1), '(2hi=,i3)') i\n   end subroutine foo3\n \n-end program test_lex\n\\ No newline at end of file\n+end program test_lex\n+"}, {"sha": "daa09017859b6b8865b9d44070674971f7ba4cbb", "filename": "gcc/testsuite/gfortran.dg/altreturn_3.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_3.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Tests the fix for PR30236, which was due to alternate returns\n ! in generic interfaces causing a segfault.  They now work\n ! correctly."}, {"sha": "a8b6ff83cd12b1cb039317afc69f73f4fe74d9fc", "filename": "gcc/testsuite/gfortran.dg/altreturn_5.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_5.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Tests the fix for PR31483, in which dummy argument procedures\n ! produced an ICE if they had an alternate return.\n !"}, {"sha": "19c851e5092f2a328c29713156aa7a621c9c2be0", "filename": "gcc/testsuite/gfortran.dg/altreturn_6.f90", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_6.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,3 +1,6 @@\n+! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR 32938\n subroutine r (*)\n   integer(kind=8) :: i"}, {"sha": "d1786d038c8cdfeff7ba5b38ccb1abaf441e86b8", "filename": "gcc/testsuite/gfortran.dg/altreturn_7.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_7.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n !\n ! PR 40848: [4.5 Regression] ICE with alternate returns\n !"}, {"sha": "74f3d497a751944edccb76e6bdd9eaf32728fe64", "filename": "gcc/testsuite/gfortran.dg/array_constructor_13.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_13.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_13.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_13.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Tests patch for PR29431, which arose from PR29373.\n !\n ! Contributed by Tobias Schlueter  <tobi@gcc.gnu.org>"}, {"sha": "68d1fbf97e69aa8e80803390b0ff5730e9ff972d", "filename": "gcc/testsuite/gfortran.dg/arrayio_7.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_7.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR24224 Test formatted input/output to/from character arrays with strides\n ! other than 1.  Test that reading stops at the end of the current record.\n ! Contributed by Jerry DeLisle <jvdelisle@verizon.net>."}, {"sha": "7b609bd061cdba905edc6164d497c51e69146487", "filename": "gcc/testsuite/gfortran.dg/arrayio_8.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_8.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR28339, This test checks that internal unit array I/O handles a full record\n ! and advances to the next record properly.  Test case derived from PR\n ! Submitted by Jerry DeLisle  <jvdelisle@gcc.gnu.org>"}, {"sha": "912126fe72ac5c437c851d42593ee7fa53faa7ed", "filename": "gcc/testsuite/gfortran.dg/assumed_charlen_function_3.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_charlen_function_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_charlen_function_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_charlen_function_3.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -5,13 +5,13 @@\n !\r\n ! Contributed by Paul Thomas  <pault@gcc.gnu.org>\r\n !\r\n-function is_OK (ch)                ! { dg-warning \"is obsolescent in fortran 95\" }\r\n+function is_OK (ch)                ! { dg-warning \"Obsolescent feature\" }\r\n   character(*) is_OK, ch           ! OK in an external function\r\n   is_OK = ch\r\n end function is_OK\r\n \r\n ! The warning occurs twice for the next line; for 'more_OK' and for 'fcn';\r\n-function more_OK (ch, fcn)         ! { dg-warning \"is obsolescent in fortran 95\" }\r\n+function more_OK (ch, fcn)         ! { dg-warning \"Obsolescent feature\" }\r\n   character(*) more_OK, ch\r\n   character (*), external :: fcn   ! OK as a dummy argument\r\n   more_OK = fcn (ch)\r"}, {"sha": "c8f804465b7c5da676e08be1a49fb29205ade0d8", "filename": "gcc/testsuite/gfortran.dg/assumed_charlen_function_4.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_charlen_function_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_charlen_function_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_charlen_function_4.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Tests the fix for PR28600 in which the declaration for the\n ! character length n, would be given the DECL_CONTEXT of 'gee'\n ! thus causing an ICE."}, {"sha": "8a0788978afa341edd10efb62d6571917ae3bcdc", "filename": "gcc/testsuite/gfortran.dg/assumed_charlen_function_5.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_charlen_function_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_charlen_function_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_charlen_function_5.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -5,14 +5,14 @@\n !\n ! Contributed by Paul Thomas  <pault@gcc.gnu.org>\n !\n-character(*) function charrext (n)  ! { dg-warning \"is obsolescent in fortran 95\" }\n+character(*) function charrext (n)  ! { dg-warning \"Obsolescent feature\" }\n   character(26) :: alpha =\"abcdefghijklmnopqrstuvwxyz\"\n   charrext = alpha (1:n)\n end function charrext\n \n   character(26), external :: charrext\n   interface\n-    integer(4) function test(charr, i)  ! { dg-warning \"is obsolescent in fortran 95\" }\n+    integer(4) function test(charr, i)  ! { dg-warning \"Obsolescent feature\" }\n      character(*), external :: charr\n      integer :: i\n     end function test\n@@ -23,15 +23,15 @@ end function test\n     m = ctest (charrext, 27 - j)\n   end do\n contains\n-  integer(4) function ctest(charr, i)  ! { dg-warning \"is obsolescent in fortran 95\" }\n+  integer(4) function ctest(charr, i)  ! { dg-warning \"Obsolescent feature\" }\n     character(*) :: charr\n     integer :: i\n     print *, charr(i)\n     ctest = 1\n   end function ctest\n end\n \n-integer(4) function test(charr, i)  ! { dg-warning \"is obsolescent in fortran 95\" }\n+integer(4) function test(charr, i)  ! { dg-warning \"Obsolescent feature\" }\n   character(*) :: charr\n   integer :: i\n   print *, charr(i)"}, {"sha": "2dd6b72e9d938789f6ffd32042f987d5da66dc41", "filename": "gcc/testsuite/gfortran.dg/backspace_8.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fbackspace_8.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fbackspace_8.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbackspace_8.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n C { dg-do run }\n+C { dg-options \"-std=legacy\" }\n+C\n C PR libfortran/31618 - backspace after an error didn't work.\n       program main\n       character*78 msg"}, {"sha": "851f518a2a94dc5da9362bd02c6c56ae332fa8a1", "filename": "gcc/testsuite/gfortran.dg/backspace_9.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fbackspace_9.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fbackspace_9.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbackspace_9.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR32235 incorrectly position text file after backspace\n ! Test case from PR, prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n       program main"}, {"sha": "02f69e07661a92e53fa31bae966c337046320923", "filename": "gcc/testsuite/gfortran.dg/char_comparison_1.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_comparison_1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_comparison_1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_comparison_1.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n C { dg-do run }\n+C { dg-options \"-std=legacy\" }\n+C\n C     PR 30525 - comparisons with padded spaces were done\n C     signed.\n       program main"}, {"sha": "3bef08342eed7effe1b476a62bff871542f6f9c8", "filename": "gcc/testsuite/gfortran.dg/char_decl_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_decl_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_decl_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_decl_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR32644 \"CHARACTER*1, c\" produces \"Unclassifiable statement\"\n program f\n character*1, c"}, {"sha": "d123aca136d6b120a631bbc6b25644521db4884f", "filename": "gcc/testsuite/gfortran.dg/char_initialiser_actual.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_initialiser_actual.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_initialiser_actual.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_initialiser_actual.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Tests passing of character array initialiser as actual argument.\n ! Fixes PR18109.\n ! Contributed by Paul Thomas pault@gcc.gnu.org  "}, {"sha": "62fcf0360a325859e01b1b13819175b77b822db3", "filename": "gcc/testsuite/gfortran.dg/char_pointer_assign.f90", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_pointer_assign.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_pointer_assign.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_pointer_assign.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n program char_pointer_assign\r\n ! Test character pointer assignments, required\r\n ! to fix PR18890 and PR21297\r\n@@ -38,4 +40,5 @@ program char_pointer_assign\n   if (any (t2 /= \"lnmo\")) call abort ()\r\n   if (any (c2 /= \"onml\")) call abort ()\r\n   deallocate (c3, c4)\r\n-end program char_pointer_assign\n\\ No newline at end of file\n+end program char_pointer_assign\n+"}, {"sha": "ef2d783e1ffbb1e28eed3f77a08565c61178502b", "filename": "gcc/testsuite/gfortran.dg/char_pointer_dependency.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_pointer_dependency.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_pointer_dependency.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_pointer_dependency.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Test assignments from character pointer functions with dependencies\n ! are correctly resolved.\n ! Provided by Paul Thomas pault@gcc.gnu.org"}, {"sha": "b533a1cb98c7caf34aa0bb5adeacaa2aae586ac1", "filename": "gcc/testsuite/gfortran.dg/char_pointer_dummy.f90", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_pointer_dummy.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_pointer_dummy.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_pointer_dummy.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n program char_pointer_dummy\r\n ! Test character pointer dummy arguments, required\r\n ! to fix PR16939 and PR18689\r\n@@ -30,4 +32,5 @@ subroutine afoo (ac1)\n     character*4, pointer       :: ac1(:)\r\n     if (ac1(1) /= \"wxyz\") call abort ()\r\n   end subroutine afoo\r\n-end program char_pointer_dummy\n\\ No newline at end of file\n+end program char_pointer_dummy\n+"}, {"sha": "23f867eeb45b244e9979e20786aae4da154f8a0a", "filename": "gcc/testsuite/gfortran.dg/char_pointer_func.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_pointer_func.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_pointer_func.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_pointer_func.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n program char_pointer_func\n ! Test assignments from character pointer functions, required\n ! to fix PR17192 and PR17202"}, {"sha": "ada4408f5d6c5228f1fb653121baaab09d4e0a6b", "filename": "gcc/testsuite/gfortran.dg/common_8.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_8.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n !\n ! PR fortran/25062\n !"}, {"sha": "4ca11bc160a8c1ba0cbb7193c2f5905a3915eaa6", "filename": "gcc/testsuite/gfortran.dg/constant_substring.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fconstant_substring.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fconstant_substring.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fconstant_substring.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,5 +1,7 @@\n ! Simplify constant substring\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n       character*2 a\n       character*4 b\n       character*6 c"}, {"sha": "26e31a14f082b36f4ef6d1ab02dc6a6b23873acb", "filename": "gcc/testsuite/gfortran.dg/data_char_2.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_char_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_char_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_char_2.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n !  Test that getting a character from a\n ! string data works.\n "}, {"sha": "244b600746c615bec97d4b34ff6b13eea2c0fc1c", "filename": "gcc/testsuite/gfortran.dg/der_array_io_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_array_io_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_array_io_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_array_io_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,5 +1,7 @@\n ! Test IO of arrays of integers in derived types\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n program main\n \n   character* 10000 :: buf1, buf2"}, {"sha": "21e10d21306032011304f4e781912ea467b217d6", "filename": "gcc/testsuite/gfortran.dg/der_array_io_2.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_array_io_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_array_io_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_array_io_2.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,5 +1,7 @@\n ! Test IO of arrays in derived type arrays\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n program main\n \n   character *1000 buf1, buf2"}, {"sha": "de562152c4958937699647633e63d3bccd96ef76", "filename": "gcc/testsuite/gfortran.dg/der_array_io_3.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_array_io_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_array_io_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_array_io_3.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,5 +1,7 @@\n ! Test IO of character arrays in derived types.\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n program main\n  character*1000 buf1, buf2\n  type :: foo_type"}, {"sha": "1cb370ce17c73bfc887db2dc015f6a72e6602400", "filename": "gcc/testsuite/gfortran.dg/der_io_3.f90", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_io_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_io_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_io_3.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,3 +1,6 @@\n+! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR23843\n ! Make sure derived type I/O with PRIVATE components works where it's allowed\n module m1"}, {"sha": "b8ba5748593736cf65f034b3cdcd51e55b135e6b", "filename": "gcc/testsuite/gfortran.dg/dev_null.F90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fdev_null.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fdev_null.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdev_null.F90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! pr19478 read from /dev/null\n ! Thomas.Koenig@online.de\n #if defined  _WIN32"}, {"sha": "8e18052ff011f12d2d623e7dd1c54f6935cef759", "filename": "gcc/testsuite/gfortran.dg/direct_io_2.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fdirect_io_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fdirect_io_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdirect_io_2.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n !\n ! this testcase derived from NIST test FM413.FOR\n ! tests writing direct access files in ascending and descending"}, {"sha": "7422b9eb575e0b401dd0172bb74481036c598f86", "filename": "gcc/testsuite/gfortran.dg/do_iterator_2.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_iterator_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_iterator_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_iterator_2.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Tests the fix for pr32613 - see:\n ! http://groups.google.com/group/comp.lang.fortran/browse_thread/thread/495c154ee188d7f1/ea292134fe68b1d0#ea292134fe68b1d0\n !"}, {"sha": "f2a3a5fc553e454298ab471767d20adb630dc4a9", "filename": "gcc/testsuite/gfortran.dg/e_d_fmt.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fe_d_fmt.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fe_d_fmt.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fe_d_fmt.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Verify that the D format uses 'D' as the exponent character.\n !   \"     \"    \"  E   \"     \"   'E' \"   \"     \"         \" \n CHARACTER*10 c1, c2"}, {"sha": "ad60afa3f47c986e303e62c38b498c21bf579303", "filename": "gcc/testsuite/gfortran.dg/empty_format_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fempty_format_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fempty_format_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fempty_format_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR 17709\n ! We weren't resetting the internal EOR flag correctly, so the second read\n ! wasn't advancing to the next line."}, {"sha": "22aabb3a88f8cba99c4416ba570365a78a80bfe2", "filename": "gcc/testsuite/gfortran.dg/entry_17.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_17.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_17.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_17.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -17,19 +17,19 @@ function test2()\n   bar2 = \"\"\n end function test2\n \n-function test3() ! { dg-warning \"is obsolescent\" }\n+function test3() ! { dg-warning \"Obsolescent feature\" }\n   character(*) :: test3\n-  character(*) :: bar3 ! { dg-warning \"is obsolescent\" }\n+  character(*) :: bar3 ! { dg-warning \"Obsolescent feature\" }\n   test3 = \"\"\n   return\n entry bar3()\n   bar3 = \"\"\n-end function test3 ! { dg-warning \"is obsolescent\" }\n+end function test3 ! { dg-warning \"Obsolescent feature\" }\n \n function test4(n) ! { dg-error \"returning variables of different string lengths\" }\n   integer  :: n\n   character(n) :: test4\n-  character(*) :: bar4 ! { dg-warning \"is obsolescent\" }\n+  character(*) :: bar4 ! { dg-warning \"Obsolescent feature\" }\n   test4 = \"\"\n   return\n entry bar4()\n@@ -45,11 +45,11 @@ function test5() ! { dg-error \"returning variables of different string lengths\"\n   bar5 = \"\"\n end function test5\n \n-function test6() ! { dg-warning \"is obsolescent|returning variables of different string lengths\" }\n+function test6() ! { dg-warning \"Obsolescent feature|returning variables of different string lengths\" }\n   character(*) :: test6\n   character(2) :: bar6\n   test6 = \"\"\n   return\n entry bar6()\n   bar6 = \"\"\n-end function test6 ! { dg-warning \"is obsolescent\" }\n+end function test6 ! { dg-warning \"Obsolescent feature\" }"}, {"sha": "b011fe63bfd44adff8165725411d7ebddeefd2a8", "filename": "gcc/testsuite/gfortran.dg/entry_7.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_7.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Check that PR20877 and PR25047 are fixed by the patch for\n ! PR24558. Both modules would emit the error:\n ! insert_bbt(): Duplicate key found!"}, {"sha": "cd0004bb2a702e8e326bc5d9ed027e9a54bb0206", "filename": "gcc/testsuite/gfortran.dg/eor_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Feor_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Feor_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Feor_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR 19451: The test for advance='NO' with eor used to be reversed.\n program main\n   character*2 c"}, {"sha": "ee671f964fdfd3dfc48618cc29a49a731848b6ba", "filename": "gcc/testsuite/gfortran.dg/equiv_2.f90", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fequiv_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fequiv_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fequiv_2.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,3 +1,6 @@\n+! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n       subroutine broken_equiv1\n       character*4 h\n       character*3 i"}, {"sha": "8a4e0b5ff85ec88af89b97cbccde6a7b0ad3f401", "filename": "gcc/testsuite/gfortran.dg/equiv_constraint_2.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fequiv_constraint_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fequiv_constraint_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fequiv_constraint_2.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -30,16 +30,16 @@\n \n   type       :: char_type\n     sequence\n-    character*4 :: ch\n-    character*4 :: cha (6)\n+    character(4) :: ch\n+    character(4) :: cha (6)\n   end type char_type\n \n   type (char_type) ::  my_char\n \n   type       :: mixed_type\n     sequence\n     integer     :: i(4)\n-    character*4 :: cha (6)\n+    character(4) :: cha (6)\n   end type mixed_type\n \n   type (mixed_type) ::  my_mixed, thy_mixed"}, {"sha": "bad3a3a20e88b542c47e8c208193202bb236a2b0", "filename": "gcc/testsuite/gfortran.dg/equiv_substr.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fequiv_substr.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fequiv_substr.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fequiv_substr.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n !\n ! PR fortran/34557\n !"}, {"sha": "b3d7c0456209d7be1983e5adba7b636f29396581", "filename": "gcc/testsuite/gfortran.dg/extended_char_comparison_1.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fextended_char_comparison_1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fextended_char_comparison_1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fextended_char_comparison_1.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR 27715 - the front end and the library used to have different ideas\n ! about ordering for characters whose encoding is above 127.\n "}, {"sha": "579ab26f4d9f0b36be990c5791f46019a6de5973", "filename": "gcc/testsuite/gfortran.dg/fmt_bz_bn_err.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_bz_bn_err.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_bz_bn_err.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_bz_bn_err.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR38772 r143102 reveals missed error checking on floating point reads.\n ! Test case contributed by Jack Howarth.\n       program badread"}, {"sha": "ae818da7f04952e90d40731ef7294b3afa4eafe3", "filename": "gcc/testsuite/gfortran.dg/fmt_error_2.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_error_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_error_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_error_2.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR 33269: we used to not simplify format strings before checking if\n ! they were valid, leading to a missed error.\n "}, {"sha": "5eea29a6c1448246d70219a1d8538d1031acb45c", "filename": "gcc/testsuite/gfortran.dg/fmt_read_bz_bn.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_read_bz_bn.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_read_bz_bn.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_read_bz_bn.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Test various uses of BZ and BN format specifiers.\n ! Portions inspired by NIST F77 testsuite FM711.f\n ! Contributed by jvdelisle@verizon.net"}, {"sha": "656499ed05ef069b4f749c1b8e3d3b2bd82f22f8", "filename": "gcc/testsuite/gfortran.dg/fmt_tl.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_tl.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_tl.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_tl.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR25631 Check that TL editing works for special case of no bytes written yet.\n ! Contributed by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n       real x"}, {"sha": "6921a722f6a87b57a47059509683fb237268d082", "filename": "gcc/testsuite/gfortran.dg/fmt_white.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_white.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_white.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_white.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR24268 Test case derived from example given by Iwan Kawrakow\n ! Embedded spaces in format strings should be ignored.\n ! Prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>"}, {"sha": "2cf8e449c7e66ebea6a32baacad293056035d6fa", "filename": "gcc/testsuite/gfortran.dg/func_derived_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_derived_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_derived_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_derived_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR 17244\n ! verifies that functions returning derived type work\n module m"}, {"sha": "6b7617d62e09972d9ffaeafabaa710e2ca77e4e6", "filename": "gcc/testsuite/gfortran.dg/g77/1832.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F1832.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F1832.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F1832.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n c { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n       character*5   string\n       write(string, *) \"a \"\n       if (string .ne. ' a') call abort"}, {"sha": "82d259d3cb5d6b6512c11d0c7a1208694e1bb3cf", "filename": "gcc/testsuite/gfortran.dg/g77/19981216-0.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19981216-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19981216-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19981216-0.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n c { dg-do compile }\n+c { dg-options \"-std=legacy\" }\n+c\n * Resent-From: Craig Burley <burley@gnu.org>\n * Resent-To: craig@jcb-sc.com\n * X-Delivered: at request of burley on mescaline.gnu.org"}, {"sha": "4eb104cdbe23a61b9260af35376a23011aeacd4a", "filename": "gcc/testsuite/gfortran.dg/g77/19990525-0.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19990525-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19990525-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19990525-0.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n c { dg-do compile }\n+c { dg-options \"-std=legacy\" }\n+c\n * Mailing-List: contact egcs-bugs-help@egcs.cygnus.com; run by ezmlm\n * Precedence: bulk\n * Sender: owner-egcs-bugs@egcs.cygnus.com"}, {"sha": "8870c2588d40e68e62bc675b377af7b7905a4cbf", "filename": "gcc/testsuite/gfortran.dg/g77/19990826-2.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19990826-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19990826-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19990826-2.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n c { dg-do run }\n+c { dg-options \"-std=legacy\" }\n+c\n * From: \"Billinghurst, David (RTD)\" <David.Billinghurst@riotinto.com.au>\n * Subject: RE: single precision complex bug in g77 - was Testing g77 with LA\n * PACK 3.0"}, {"sha": "4948c49e4944966ee59f48412f9c4a032da38d41", "filename": "gcc/testsuite/gfortran.dg/g77/20000630-2.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F20000630-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F20000630-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F20000630-2.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n c { dg-do compile }\n+c { dg-options \"-std=legacy\" }\n+c\n       SUBROUTINE CHOUT(CHR,ICNT)\n C ICE: failed assertion `expr != NULL'\n C Reduced version of GNATS PR fortran/329 from trond.bo@dnmi.no"}, {"sha": "ca7375d0f688e0d475a8e721c1af6bf157f03cf1", "filename": "gcc/testsuite/gfortran.dg/g77/20010116.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F20010116.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F20010116.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F20010116.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n c { dg-do run }\n+c { dg-options \"-std=legacy\" }\n+c\n *\n *  Derived from LAPACK 3.0 routine CHGEQZ\n *  Fails on i686-pc-cygwin with gcc-2.97 snapshots at -O2 and higher"}, {"sha": "c268bf03eb58c1f37481c488b0fd7bc635fe2d5c", "filename": "gcc/testsuite/gfortran.dg/g77/20010519-1.f", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F20010519-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F20010519-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F20010519-1.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -340,10 +340,10 @@ SUBROUTINE NMDIMB(X,Y,Z,NAT3,BNBND,BIMAG,LNOMA,AMASS,DDS,DDSCR,\n C..##ENDIF\n C..##IF ADUMB\n C..##ENDIF\n-      CHARACTER*4 GTRMA, NEXTA4, CURRA4\n-      CHARACTER*6 NEXTA6\n-      CHARACTER*8 NEXTA8\n-      CHARACTER*20 NEXT20\n+      CHARACTER(4) GTRMA, NEXTA4, CURRA4\n+      CHARACTER(6) NEXTA6\n+      CHARACTER(8) NEXTA8\n+      CHARACTER(20) NEXT20\n       INTEGER     ALLCHR, ALLSTK, ALLHP, DECODI, FIND52,\n      *            GETATN, GETRES, GETRSN, GETSEG, GTRMI, I4VAL,\n      *            ICHAR4, ICMP16, ILOGI4, INDX, INDXA, INDXAF,\n@@ -390,11 +390,11 @@ SUBROUTINE NMDIMB(X,Y,Z,NAT3,BNBND,BIMAG,LNOMA,AMASS,DDS,DDSCR,\n C..##IF MMFF\n       INTEGER LEN_TRIM\n       EXTERNAL LEN_TRIM\n-      CHARACTER*4 AtName\n+      CHARACTER(4) AtName\n       external AtName\n-      CHARACTER*8 ElementName\n+      CHARACTER(8) ElementName\n       external ElementName\n-      CHARACTER*10 QNAME\n+      CHARACTER(10) QNAME\n       external QNAME\n       integer  IATTCH, IBORDR, CONN12, CONN13, CONN14\n       integer  LEQUIV, LPATH\n@@ -576,7 +576,7 @@ SUBROUTINE NMDIMB(X,Y,Z,NAT3,BNBND,BIMAG,LNOMA,AMASS,DDS,DDSCR,\n      &            PIXX = 28, PIXY = 29, PIXZ = 30, PIYX = 31,\n      &            PIYY = 32, PIYZ = 33, PIZX = 34, PIZY = 35,\n      &            PIZZ = 36)\n-      CHARACTER*4  CEPROP, CETERM, CEPRSS\n+      CHARACTER(4)  CEPROP, CETERM, CEPRSS\n       COMMON /ANER/ CEPROP(LENENP), CETERM(LENENT), CEPRSS(LENENV)\n       LOGICAL  QEPROP, QETERM, QEPRSS\n       COMMON /QENER/ QEPROP(LENENP), QETERM(LENENT), QEPRSS(LENENV)\n@@ -653,7 +653,7 @@ SUBROUTINE NMDIMB(X,Y,Z,NAT3,BNBND,BIMAG,LNOMA,AMASS,DDS,DDSCR,\n       INTEGER MAXTIT\n       PARAMETER (MAXTIT=32)\n       INTEGER NTITLA,NTITLB\n-      CHARACTER*80 TITLEA,TITLEB\n+      CHARACTER(80) TITLEA,TITLEB\n       COMMON /NTITLA/ NTITLA,NTITLB\n       COMMON /CTITLA/ TITLEA(MAXTIT),TITLEB(MAXTIT)\n C..##IF SAVEFCM"}, {"sha": "bb02862e30c4b15c97c3b18935b54e902297fce6", "filename": "gcc/testsuite/gfortran.dg/g77/980419-2.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F980419-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F980419-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F980419-2.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n c { dg-do compile }\n+c { dg-options \"-std=legacy\" }\n+c\n c     SEGVs in loop.c with -O2.\n \n       character*80 function nxtlin(lun,ierr,itok)"}, {"sha": "855b9a442d70c1f826771565fffbcb9755063eb6", "filename": "gcc/testsuite/gfortran.dg/g77/980520-1.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F980520-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F980520-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F980520-1.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n c { dg-do run }\n+c { dg-options \"-std=legacy\" }\n+c\n c     Produced a link error through not eliminating the unused statement\n c     function after 1998-05-15 change to gcc/toplev.c.  It's in\n c     `execute' since it needs to link."}, {"sha": "f0a14f826cf3dba41b7640fd1491c24b30f31f45", "filename": "gcc/testsuite/gfortran.dg/g77/check0.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fcheck0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fcheck0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fcheck0.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n c { dg-do compile }\n+c { dg-options \"-std=legacy\" }\n+c\n CCC Abort fixed by:\n CCC1998-04-21  Jim Wilson  <wilson@cygnus.com>\n CCC"}, {"sha": "ab25b532945782a21bcce1f21613fea88ddc7541", "filename": "gcc/testsuite/gfortran.dg/g77/cpp3.F", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fcpp3.F", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fcpp3.F", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fcpp3.F?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n c { dg-do run }\n+c { dg-options \"-std=legacy\" }\n+c\n !  Some versions of cpp will delete \"//'World' as a C++ comment.\n       character*40    title\n       title = 'Hello '//'World'"}, {"sha": "bc14e0469ea94add30f8306136cb4d91fbee6d7d", "filename": "gcc/testsuite/gfortran.dg/g77/cpp4.F", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fcpp4.F", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fcpp4.F", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fcpp4.F?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,8 +1,8 @@\n-      ! { dg-do run }\n+c { dg-do run }\n C The preprocessor must not mangle Hollerith constants\n C which contain apostrophes.\n       integer i\n-      character*4 j\n+      character(4) j\n       data i /4hbla'/\n       write (j, '(4a)') i\n       if (j .ne. \"bla'\") call abort"}, {"sha": "0369b79db330f8f11e28494c1f4d9880c5e881cd", "filename": "gcc/testsuite/gfortran.dg/g77/f77-edit-i-in.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Ff77-edit-i-in.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Ff77-edit-i-in.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Ff77-edit-i-in.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -4,6 +4,8 @@\n C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n C\n C { dg-do run }\n+C { dg-options \"-std=legacy\" }\n+C\n \n       integer i,j\n       character*10 buf"}, {"sha": "524b18e317970fbd5fe43ca9134f45149536b6de", "filename": "gcc/testsuite/gfortran.dg/g77/f77-edit-t-in.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Ff77-edit-t-in.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Ff77-edit-t-in.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Ff77-edit-t-in.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -4,6 +4,8 @@\n C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n C\n C { dg-do run }\n+C { dg-options \"-std=legacy\" }\n+C\n       integer i,j\n       real a,b,c,d,e\n       character*32 in"}, {"sha": "330f0ac52b15d68bfa547c014e5e9d03efdfbc23", "filename": "gcc/testsuite/gfortran.dg/g77/short.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fshort.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fshort.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fshort.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n c { dg-do run }\n+c { dg-options \"-std=legacy\" }\n+c\n       program short\n \n       parameter   (   N=2  )"}, {"sha": "f9e0195bcdbd60c55331ed213f85ad4dcaab0e8f", "filename": "gcc/testsuite/gfortran.dg/g77_intrinsics_funcs.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77_intrinsics_funcs.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77_intrinsics_funcs.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77_intrinsics_funcs.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Testing g77 intrinsics as subroutines\n       integer(kind=8) i8\n       integer i4"}, {"sha": "6ee5f837cc49228edd22131cedcb25b45cfde1f0", "filename": "gcc/testsuite/gfortran.dg/g77_intrinsics_sub.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77_intrinsics_sub.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77_intrinsics_sub.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77_intrinsics_sub.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Testing g77 intrinsics as subroutines\n       integer(kind=8) i8, j8\n       integer i4, j4"}, {"sha": "bf2528006a07e193db61881313eb6b1b7bc372b4", "filename": "gcc/testsuite/gfortran.dg/global_references_2.f90", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fglobal_references_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fglobal_references_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fglobal_references_2.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! This program tests the patch for PR25964. This is a\n ! regression that would not allow a common block and a statement\n ! to share the same name.\n@@ -7,4 +9,5 @@\n   common /foo/ a, b, c\n   foo (x) = x + 1.0\n   print *, foo (0.0)\n-  end\n\\ No newline at end of file\n+  end\n+"}, {"sha": "697ed22d8925e2b22d85c1a154ce09a77558f04b", "filename": "gcc/testsuite/gfortran.dg/hollerith.f90", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fhollerith.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fhollerith.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fhollerith.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -3,14 +3,14 @@\n implicit none\n complex(kind=8) x(2) \n complex a(2,2)\n-character*4 z\n+character(4) z\n character z1(4)\n-character*4 z2(2,2)\n-character*80 line\n+character(4) z2(2,2)\n+character(80) line\n integer i\n integer j\n real r\n-character*8 c\n+character(8) c\n \n data x /16Habcdefghijklmnop, 16Hqrstuvwxyz012345/\n data a /8H(i3),abc, 0, 4H(i4), 8H    (i9)/\n@@ -53,7 +53,7 @@\n \n subroutine test (h)\n integer(kind=8) h\n-character*80 line\n+character(80) line\n \n write (line, '(8a)') h\n if (line .ne. '   hello') call abort"}, {"sha": "829ca7f99c285b36499e7bfc4cd38605170f157a", "filename": "gcc/testsuite/gfortran.dg/hollerith_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fhollerith_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fhollerith_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fhollerith_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR 21260\n ! We wrongly interpreted the '!' as the beginning of a comment.\n ! Also verifies the functioning of hollerith formatting."}, {"sha": "dc52187adb91306eb6dda55aed0762331cde10a2", "filename": "gcc/testsuite/gfortran.dg/hollerith_f95.f90", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fhollerith_f95.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fhollerith_f95.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fhollerith_f95.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -4,14 +4,14 @@\n implicit none\n complex(kind=8) x(2) \n complex a(2,2)\n-character*4 z\n+character(4) z\n character z1(4)\n-character*4 z2(2,2)\n-character*80 line\n+character(4) z2(2,2)\n+character(80) line\n integer i\n logical l\n real r\n-character*8 c\n+character(8) c\n \n data x /16Habcdefghijklmnop, 16Hqrstuvwxyz012345/\n data a /8H(i3),abc, 0, 4H(i4), 8H    (i9)/\n@@ -54,7 +54,7 @@\n \n subroutine test (h)\n integer(kind=8) h\n-character*80 line\n+character(80) line\n \n write (line, '(8a)') h\n if (line .ne. '   hello') call abort"}, {"sha": "362cd2f453bdb702ed590d1ce57d3226bd081a45", "filename": "gcc/testsuite/gfortran.dg/ichar_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fichar_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fichar_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fichar_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR20879\n ! Check that we reject expressions longer than one character for the\n ! ICHAR and IACHAR intrinsics."}, {"sha": "a74ecc29ba5e92d66203b732f555e36166b94248", "filename": "gcc/testsuite/gfortran.dg/implicit_6.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_6.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR 24643\n ! substring references on implicitly typed CHARACTER variables didn't work\n         PROGRAM P"}, {"sha": "04b7afa4ed82b98b11ebbc7878dd493d7746e70c", "filename": "gcc/testsuite/gfortran.dg/implicit_9.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_9.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Tests patch for PR29373, in which the implicit character\n ! statement messes up the function declaration because the\n ! requisite functions in decl.c were told nothing about"}, {"sha": "7115913c6c6346b089e0fbdda9a8f9a6089a4788", "filename": "gcc/testsuite/gfortran.dg/inquire.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! check to see that you cannot open a direct access file\n ! for sequential i/o.\n ! derived from NIST test fm910.for"}, {"sha": "d074861a97b9858f4f0913ef8c66c96bd683b325", "filename": "gcc/testsuite/gfortran.dg/inquire_13.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_13.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_13.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_13.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR34795 inquire statement , direct= specifier incorrectly returns YES\n ! Test case from PR, modified by Jerry DeLisle  <jvdelisle@gcc.gnu.org\n program testinquire"}, {"sha": "fe107a1986347376313c20ffbae5b2350ea8c374", "filename": "gcc/testsuite/gfortran.dg/inquire_5.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_5.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run { target fd_truncate } }\n+! { dg-options \"-std=legacy\" }\n+!\n ! pr19314 inquire(..position=..) segfaults\n ! test by Thomas.Koenig@online.de\n !         bdavis9659@comcast.net"}, {"sha": "b657df831d9cb10dd2c744450c64f5018a3fd4c1", "filename": "gcc/testsuite/gfortran.dg/inquire_6.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_6.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n !pr19313 - inquire(..pad=..)\n       implicit none\n !     logical debug"}, {"sha": "db1e949e7a59381761a5db7bc76ba81a5758b18a", "filename": "gcc/testsuite/gfortran.dg/io_constraints_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fio_constraints_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fio_constraints_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fio_constraints_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -29,7 +29,7 @@ end module global\n  use global\n  integer :: a,b, c(20)\n  integer(8) :: ierr\n- character*80 :: buffer(3)\n+ character(80) :: buffer(3)\n \n ! Appending to a USE associated namelist is an extension.\n "}, {"sha": "8d3ae6b45f4382159d82df9f8c15678413be9c81", "filename": "gcc/testsuite/gfortran.dg/io_constraints_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fio_constraints_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fio_constraints_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fio_constraints_2.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -25,7 +25,7 @@ end module global\n  use global\n  integer :: a,b, c(20)\n  integer(8) :: ierr\n- character*80 :: buffer(3)\n+ character(80) :: buffer(3)\n \n \n ! Appending to a USE associated namelist is an extension."}, {"sha": "3e6c233c09a7e040b0aac8fc5364799ffb517f71", "filename": "gcc/testsuite/gfortran.dg/list_read_2.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Flist_read_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Flist_read_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flist_read_2.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR16805\n ! Test list directed reads from character substrings\n ! The IO library was reporting an error rather the end-of-record when it"}, {"sha": "d905fc0f74b24a783311ebad77c495bbe4aa0156", "filename": "gcc/testsuite/gfortran.dg/loc_2.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Floc_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Floc_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Floc_2.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Series of routines for testing a loc() implementation\n program test\n   common /errors/errors(12)"}, {"sha": "69d9e6a437eec2a17b00247ae44bb3b2d4ba014c", "filename": "gcc/testsuite/gfortran.dg/logical_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Flogical_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Flogical_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flogical_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR middle-end/19543\n program logical_1\n   implicit none"}, {"sha": "c2a5f5afd70a602e4a608b52c7b0e9522ef68a99", "filename": "gcc/testsuite/gfortran.dg/longline.f", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Flongline.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Flongline.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flongline.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,5 +1,6 @@\n # 1 \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.f\"\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n \n       subroutine foo\n       character*10 cpnam"}, {"sha": "5974e8c06c389387cdaa230d60717b104675d57f", "filename": "gcc/testsuite/gfortran.dg/merge_char_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fmerge_char_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fmerge_char_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmerge_char_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR 15327\n ! The merge intrinsic didn't work for strings\n character*2 :: c(2)"}, {"sha": "1752bfa07df17952c72417094b0c7bd2d95ec743", "filename": "gcc/testsuite/gfortran.dg/namelist_12.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_12.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_12.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_12.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n c{ dg-do run { target fd_truncate } }\n+c{ dg-options \"-std=legacy\" }\n+c\n c This program repeats many of the same tests as test_nml_1 but for integer\n c instead of real. It also tests repeat nulls, comma delimited character read,\n c a triplet qualifier, a range with an assumed start, a quote delimited string,"}, {"sha": "478e07fe67fe038e1fd577b6de7432a807b9cbbd", "filename": "gcc/testsuite/gfortran.dg/namelist_14.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_14.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n !{ dg-do run }\n+!{ dg-options \"-std=legacy\" }\n+!\n ! Tests various combinations of intrinsic types, derived types, arrays,\n ! dummy arguments and common to check nml_get_addr_expr in trans-io.c.\n ! See comments below for selection."}, {"sha": "87b66012d4c73ff00a0129769d2cd8c358b9982b", "filename": "gcc/testsuite/gfortran.dg/namelist_18.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_18.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_18.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_18.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n !{ dg-do run }\n+!{ dg-options \"-std=legacy\" }\n+!\n ! Tests character delimiters for namelist write \n ! provided by Paul Thomas - pault@gcc.gnu.org\n "}, {"sha": "4821033ecd7cc43d195327345a9ee6a8253cc73a", "filename": "gcc/testsuite/gfortran.dg/namelist_19.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_19.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_19.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_19.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n !{ dg-do run }\n+!{ dg-options \"-std=legacy\" }\n+!\n ! Test namelist error trapping.\n ! provided by Paul Thomas - pault@gcc.gnu.org\n "}, {"sha": "de88200c167a282876b4f62a2649583406416cbc", "filename": "gcc/testsuite/gfortran.dg/namelist_21.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_21.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_21.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_21.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n !{ dg-do run { target fd_truncate } }\n+!{ dg-options \"-std=legacy\" }\n+!\n ! Tests filling arrays from a namelist read when object list is not complete.\n ! Developed from a test case provided by Christoph Jacob.\n ! Contributed by Jerry DeLisle  <jvdelisle@gcc.gnu.org>."}, {"sha": "e877b5beeae09eb5be81e2f65b5fde136dd0d981", "filename": "gcc/testsuite/gfortran.dg/namelist_22.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_22.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_22.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_22.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n !{ dg-do run { target fd_truncate } }\n+!{ dg-options \"-std=legacy\" }\n+!\n ! Tests filling arrays from a namelist read when object list is not complete.\n ! This is the same as namelist_21.f90 except using spaces as seperators instead\n ! of commas. Developed from a test case provided by Christoph Jacob."}, {"sha": "4a46b534f67d3075d40552d700add0db5818af26", "filename": "gcc/testsuite/gfortran.dg/namelist_37.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_37.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_37.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_37.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR33039 Read NAMELIST:  reads wrong namelist name\n ! Test case from PR modified by Jerry DeLisle <jvdelisle@gcc.gnu.org>\r\n PROGRAM namelist\r"}, {"sha": "0133268934067d7876513ac292c4ce740912f9fd", "filename": "gcc/testsuite/gfortran.dg/namelist_54.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_54.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_54.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_54.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR37707 Namelist read of array of derived type incorrect.\n type s\n    integer m"}, {"sha": "9690d858d07e8a280dfc4ef870d9d0bc51f6f4c3", "filename": "gcc/testsuite/gfortran.dg/namelist_55.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_55.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_55.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_55.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR37707 Namelist read of array of derived type incorrect\n ! Test case from PR, prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n TYPE geometry"}, {"sha": "89493a84b343b2103ba24fa53d6abbe54e085e92", "filename": "gcc/testsuite/gfortran.dg/namelist_empty.f90", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_empty.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_empty.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_empty.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,3 +1,6 @@\n+! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! pr24584, segfault on namelist reading an empty string\n ! Contributed by Jerry DeLisle  <jvdelisle@verizon.net> \n       implicit none "}, {"sha": "d550e00aa6d403c6431613dafc1e3d362a18f03a", "filename": "gcc/testsuite/gfortran.dg/namelist_use.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_use.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_use.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_use.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -6,7 +6,7 @@\n ! Contributed by Paul Thomas  pault@gcc.gnu.org\n !\n module global\n-  character*4 :: aa\n+  character(4) :: aa\n   integer :: ii\n   real    :: rr\n   namelist /nml1/ aa, ii, rr"}, {"sha": "d9a28a8567b2c8b371fdd79b6fa5ded09d1da4fa", "filename": "gcc/testsuite/gfortran.dg/namelist_use_only.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_use_only.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_use_only.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_use_only.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! This tests the fix for PR22010, where namelists were not being written to\n ! and read back from modules.  It checks that namelists from modules that are\n ! selected by an ONLY declaration work correctly, even when the variables in"}, {"sha": "6be77b36760f24ceadb4a2659bdf67a63f225ba0", "filename": "gcc/testsuite/gfortran.dg/nested_modules_4.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnested_modules_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnested_modules_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnested_modules_4.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n !\n ! Test for the fix to PR24409 - the name clash between the module\n ! name and the interface formal argument would cause an ICE."}, {"sha": "2ed68244ede7ec8cfaba16621a118a400eee5d6b", "filename": "gcc/testsuite/gfortran.dg/nested_modules_5.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnested_modules_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fnested_modules_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnested_modules_5.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n !\n ! Test for supplementary fix to PR24409 - the name clash between the module\n ! variable and the interface formal argument would cause an ICE."}, {"sha": "4db31b9e31a2a07e7f186c16f6d2572bc270111b", "filename": "gcc/testsuite/gfortran.dg/open-options-blanks.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fopen-options-blanks.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fopen-options-blanks.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fopen-options-blanks.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR 20163, first half:  Trailing blanks on an option to\n !                        open used to cause an error\n       CHARACTER*8 ST"}, {"sha": "db47b0bfc6231eff3649ca95e473eacae1567e7d", "filename": "gcc/testsuite/gfortran.dg/output_exponents_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Foutput_exponents_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Foutput_exponents_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Foutput_exponents_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR 21376\n ! we used to take the logarithm of zero in this special case\n   character*10 c"}, {"sha": "ac631ef08af4bf353948f11fcc954a3ac627e4f4", "filename": "gcc/testsuite/gfortran.dg/parens_5.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fparens_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fparens_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fparens_5.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Another case of fallout from the original patch for PR14771\n ! Testcase by Erik Zeek\n module para"}, {"sha": "6d5ee3b520fb87cf85f28ec4defd767ada6e2e2b", "filename": "gcc/testsuite/gfortran.dg/parens_6.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fparens_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fparens_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fparens_6.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR fortran/33626\n ! Types were not always propagated correctly\n   logical(kind=1) :: i, j"}, {"sha": "38a5fdc7b2c693260d30e31f19c84503dc7e02ff", "filename": "gcc/testsuite/gfortran.dg/parent_result_ref_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fparent_result_ref_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fparent_result_ref_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fparent_result_ref_2.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -16,7 +16,7 @@ subroutine sub\n   end subroutine sub\n end function f\n \n-function g()              ! { dg-warning \"is obsolescent in fortran 95\" }\n+function g()              ! { dg-warning \"Obsolescent feature\" }\n   character(*) :: g\n   g = \"efgh\"\n   call sub ()"}, {"sha": "0924117080c684ef8b75dd11f234eea8cd746d87", "filename": "gcc/testsuite/gfortran.dg/pointer_function_actual_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_function_actual_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_function_actual_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_function_actual_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Tests the fix for PR31209, in which an ICE would result because\n ! the reference to the pointer function f would be indirected, as\n ! if it were the result that is being passed."}, {"sha": "df3854d7a5f6fdc12b3b0da8dfff4c6c421404cf", "filename": "gcc/testsuite/gfortran.dg/pr15129.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr15129.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr15129.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr15129.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR 15129: we used to share the character length between A and B in the \n ! subroutine.\n CHARACTER*10 A"}, {"sha": "813e3018839be2e2ade8c798bc20bc4c03e2bb7a", "filename": "gcc/testsuite/gfortran.dg/pr15332.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr15332.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr15332.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr15332.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,5 +1,7 @@\n ! PR libfortran/15332\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n       character*12 c\n \n       write (c,100) 0, 1"}, {"sha": "c29147411a810503bc3db3ecd6ff6f9b28324a59", "filename": "gcc/testsuite/gfortran.dg/pr16597.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr16597.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr16597.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr16597.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! pr 16597\n ! libgfortran\n ! reading a direct access record after it was written did"}, {"sha": "4423eab7354e0e5b02972a3aaa28c0dea80e2f17", "filename": "gcc/testsuite/gfortran.dg/pr17143.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr17143.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr17143.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr17143.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! pr17143\n ! does not print 2*63 correctly\n        character*25 l"}, {"sha": "c9b4d4537d7bd8e5d1cff2e4f750369568512f52", "filename": "gcc/testsuite/gfortran.dg/pr17164.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr17164.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr17164.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr17164.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! pr17164\n ! index aborts when substring is longer than string\n       implicit none"}, {"sha": "65f72b04d10ed2cd9f3503f51897f8235ed794e9", "filename": "gcc/testsuite/gfortran.dg/pr17229.f", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr17229.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr17229.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr17229.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,22 +1,23 @@\n ! PR fortran/17229\n ! { dg-do run }\n+\n       integer i\n       logical l\n \n       l = .false.\n       i = -1\n-      if (l) if (i) 999,999,999 ! { dg-warning \"Obsolescent: arithmetic IF statement\" }\n+      if (l) if (i) 999,999,999 ! { dg-warning \"Obsolescent feature\" }\n \n       l = .true.\n-      if (l) if (i) 10,999,999 ! { dg-warning \"Obsolescent: arithmetic IF statement\" }\n+      if (l) if (i) 10,999,999 ! { dg-warning \"Obsolescent feature\" }\n       go to 999\n \n    10 i = 0\n-      if (l) if (i) 999,20,999 ! { dg-warning \"Obsolescent: arithmetic IF statement\" }\n+      if (l) if (i) 999,20,999 ! { dg-warning \"Obsolescent feature\" }\n       go to 999\n \n    20 i = 1\n-      if (l) if (i) 999,999,30 ! { dg-warning \"Obsolescent: arithmetic IF statement\" }\n+      if (l) if (i) 999,999,30 ! { dg-warning \"Obsolescent feature\" }\n       go to 999\n \n   999 call abort"}, {"sha": "85c5afa3e956525bfd3fba76f5990961a277262e", "filename": "gcc/testsuite/gfortran.dg/pr18210.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr18210.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr18210.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr18210.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Names in upper case and object names starting column 2\n ! Based on example provided by thomas.koenig@online.de\n "}, {"sha": "770b008f9d91b5c12845c9df200d5ffa91914016", "filename": "gcc/testsuite/gfortran.dg/pr19155.f", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr19155.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr19155.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr19155.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n !\n ! PR libfortran/19155\n ! We accept 'E+00' as a valid real number. The standard says it is not,"}, {"sha": "26b53276dc3d5cfc28faeeee8f0fc13702f6321a", "filename": "gcc/testsuite/gfortran.dg/pr20086.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20086.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20086.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20086.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }     \n+! { dg-options \"-std=legacy\" }\n+!\n ! PR 20086 - Missing characters in output with hollerith strings\n       implicit none\n       character*80 line"}, {"sha": "5d05abf6eb11a95b485b326fcd1c3a63ae224ef2", "filename": "gcc/testsuite/gfortran.dg/pr20124.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20124.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20124.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20124.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! pr 20124\n       character*80 line\n       x = -.01"}, {"sha": "4a9b69cad5724041bae9ece450a5059a3364a6d0", "filename": "gcc/testsuite/gfortran.dg/pr20755.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20755.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20755.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20755.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,5 +1,7 @@\n ! PR libfortran/20755\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n       character*30 s\n       \n       write (s,2000) 0.0, 0.02"}, {"sha": "5c26965ccc56dcb7d61c5d6dd2829dd8b8fd83c4", "filename": "gcc/testsuite/gfortran.dg/pr20865.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20865.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20865.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20865.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR fortran/20865\n   subroutine tt(j)\n    integer :: j"}, {"sha": "942696c618fa66f16bd82ebb9fc327248df8333d", "filename": "gcc/testsuite/gfortran.dg/pr20950.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20950.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20950.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20950.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,6 +1,8 @@\n ! PR libfortran/20950\n ! Original bug-report by Walt Brainerd, The Fortran Company\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n       character*20 c\n       inquire (33, sequential = c)\n       if (c .ne. \"UNKNOWN\") call abort"}, {"sha": "1fe19edfae4d4a34ede8d14af23fb3b7e9a9d052", "filename": "gcc/testsuite/gfortran.dg/pr21730.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr21730.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr21730.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr21730.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,5 +1,7 @@\n ! PR fortran/21730\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n       character*2 a\n       character*4 b\n       character*6 c"}, {"sha": "70210f6b095c3730df3ac643ae28595c41b7ae13", "filename": "gcc/testsuite/gfortran.dg/pr22491.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr22491.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr22491.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr22491.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,5 +1,7 @@\n ! PR fortran/21730\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n       character*2 a (1)\n       character*4 b (1)\n       character*6 c"}, {"sha": "e60904395aebc484051f7719606ffbd3687050f5", "filename": "gcc/testsuite/gfortran.dg/pr29713.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr29713.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr29713.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr29713.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n       character*2 a\n       character*4 b\n       parameter (a=\"12\")"}, {"sha": "d644483232a82b0d8905174abdc44873b288c3e6", "filename": "gcc/testsuite/gfortran.dg/print_parentheses_1.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fprint_parentheses_1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fprint_parentheses_1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fprint_parentheses_1.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n       program main\n       character*80 line\n       print (line,'(A)'), 'hello' ! { dg-error \"Syntax error\" }"}, {"sha": "520973ed160b0b717f40bdbe849381804fb67bdf", "filename": "gcc/testsuite/gfortran.dg/print_parentheses_2.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fprint_parentheses_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fprint_parentheses_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fprint_parentheses_2.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n program main\n   character*80 line\n   print (line,'(A)'), 'hello' ! { dg-error \"Syntax error\" }"}, {"sha": "e85df7635deb9739f13235bb95559b45a3c636aa", "filename": "gcc/testsuite/gfortran.dg/proc_assign_1.f90", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_assign_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_assign_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_assign_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n-! { dg-do compile }\r\n+! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\r\n ! This tests the patch for PR26787 in which it was found that setting\r\n ! the result of one module procedure from within another produced an\r\n ! ICE rather than an error.\r"}, {"sha": "de7cb4159c16502cad5bf11168fccac713a9db76", "filename": "gcc/testsuite/gfortran.dg/proc_decl_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_decl_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_decl_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_decl_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! This tests various error messages for PROCEDURE declarations.\n ! Contributed by Janus Weil <jaydub66@gmail.com>\n "}, {"sha": "55b8bce24d9e9965d90e7ccde124951aa9655366", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_17.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_17.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_17.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_17.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -6,7 +6,7 @@\n ! Contributed by Tobias Burnus <burnus@net-b.de>\n \n   procedure(), pointer :: p\n-  f(x) = x**2\n+  f(x) = x**2  ! { dg-warning \"Obsolescent feature\" }\n   p => f  ! { dg-error \"invalid in procedure pointer assignment\" }\n   p => sub  ! { dg-error \"invalid in procedure pointer assignment\" }\n contains"}, {"sha": "e6c849eab76736d3532ce856e643020865f906de", "filename": "gcc/testsuite/gfortran.dg/read_eor.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_eor.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_eor.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_eor.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR24489 Assure that read does not go past the end of record. The width of\n ! the format specifier is 8, but the internal unit record length is 4 so only\n ! the first 4 characters should be read."}, {"sha": "0848ee67590bee1945367e64f4c6ec3e31e4c3db", "filename": "gcc/testsuite/gfortran.dg/read_float_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_float_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_float_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_float_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR18218\n ! The IO library has an algorithm that involved repeated multiplication by 10,\n ! resulting in introducing large cumulative floating point errors."}, {"sha": "7b7ba8c3a2524397c06a88e93ae8dcef11ae4cab", "filename": "gcc/testsuite/gfortran.dg/read_logical.f90", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_logical.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_logical.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_logical.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR 26554 : Test logical read from string. Test case derived from PR.\n ! Submitted by Jerry DeLisle <jvdelisle@verizon.net>.\n program bug\n@@ -13,4 +15,4 @@ program bug\n   read (strg,*) l\n   if (.not.l) call abort()\n   end\n-      \n\\ No newline at end of file\n+"}, {"sha": "bcf51f8d5e99c2d473e32acaa222026a50f2d9be", "filename": "gcc/testsuite/gfortran.dg/recursive_statement_functions.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Frecursive_statement_functions.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Frecursive_statement_functions.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Frecursive_statement_functions.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR20866 - A statement function cannot be recursive.\n ! Contributed by Joost VandeVondele <jv244@cam.ac.uk>\n !"}, {"sha": "a8067b03c08c5317f4d6eb2a5f0ec8a313930f62", "filename": "gcc/testsuite/gfortran.dg/return_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Freturn_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Freturn_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freturn_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Test cases where no blank is required after RETURN\n subroutine sub(*)\n return(1)"}, {"sha": "92edf6dfed9f3750ff89c782e8d8311c547938eb", "filename": "gcc/testsuite/gfortran.dg/rewind_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Frewind_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Frewind_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Frewind_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Check that rewind doesn't delete a file.\n ! Writing to the file truncates it at the end of the current record.  Out\n ! IO library was defering the actual truncation until the file was rewound."}, {"sha": "cff9eae7ae7fe26efc6bdcce999e32abefe208b6", "filename": "gcc/testsuite/gfortran.dg/runtime_warning_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fruntime_warning_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fruntime_warning_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fruntime_warning_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -5,7 +5,7 @@\n ! { dg-options \"-pedantic\" }\n ! { dg-do run }\n !\n-     character*5 c\n+     character(5) c\n      open (42,status='scratch')\n      write (42,'(A,$)') 'abc' ! { dg-warning \".*descriptor\" \"\" }\n      write (42,'(A)') 'de'"}, {"sha": "df206458e3a885cd2ed57182e6026e87425b1aa9", "filename": "gcc/testsuite/gfortran.dg/scalar_return_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fscalar_return_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fscalar_return_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fscalar_return_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! tests the fix for pr25082 in which the return of an array by a\n ! subroutine went undremarked.\n !"}, {"sha": "46dde6286b617766827816efefe2e37821757980", "filename": "gcc/testsuite/gfortran.dg/stfunc_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fstfunc_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fstfunc_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstfunc_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! this is a problem which disappeared between 2005-01-02 and 2005-03-13\n ! PR 18600\n       logical a, b"}, {"sha": "90980a924485cd08eec237a5df393359b8df4291", "filename": "gcc/testsuite/gfortran.dg/stfunc_3.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fstfunc_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fstfunc_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstfunc_3.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Tests the fix for PR20867 in which implicit typing was not done within\n ! statement functions and so was not confirmed or not by subsequent\n ! type delarations."}, {"sha": "2f0efccf3260ec86bdc68867a863731c1318344f", "filename": "gcc/testsuite/gfortran.dg/stfunc_4.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fstfunc_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fstfunc_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstfunc_4.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Tests the fix for PR29389, in which the  statement function would not be\n ! recognised as PURE within a PURE procedure.\n "}, {"sha": "482d12592f35715cc7d59b3ed6db72d3d1fc93ed", "filename": "gcc/testsuite/gfortran.dg/stfunc_6.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fstfunc_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fstfunc_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstfunc_6.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Tests the fix for the second bit of PR29389, in which the\n ! statement function would not be recognised as not PURE\n ! when it referenced a procedure that is not PURE."}, {"sha": "8260a7481c92a06a5095db94ad7e63a71bfeea77", "filename": "gcc/testsuite/gfortran.dg/streamio_2.f90", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_2.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR25828 Stream IO test 2\n ! Contributed by Jerry DeLisle <jvdelisle@verizon.net>.\n PROGRAM readUstream\n@@ -16,4 +18,5 @@ PROGRAM readUstream\n   if (string.ne.\"rst\") call abort()\n   if (n.ne.7) call abort()\n   close(unit=11, status=\"delete\")\n-END PROGRAM readUstream\n\\ No newline at end of file\n+END PROGRAM readUstream\n+"}, {"sha": "7e5c2f9f030418f36480ad9ec6ea229f408e8ac9", "filename": "gcc/testsuite/gfortran.dg/string_ctor_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fstring_ctor_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fstring_ctor_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstring_ctor_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Program to test character array constructors.\n ! PR17144\n subroutine test1 (n, t, u)"}, {"sha": "659b3eb3709f597209f022413a7d1bf3bbfc9737", "filename": "gcc/testsuite/gfortran.dg/string_null_compare_1.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fstring_null_compare_1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fstring_null_compare_1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstring_null_compare_1.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! PR 27784 - Different strings should compare unequal even if they\n !            have CHAR(0) in them.\n "}, {"sha": "813a02521a34dbad6fb7c7eb89e932d51d7c92da", "filename": "gcc/testsuite/gfortran.dg/substr_6.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubstr_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubstr_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubstr_6.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n ! Check that NULs don't mess up constant substring simplification\n CHARACTER(5), parameter :: c0(1) = (/ \"123\" // ACHAR(0) // \"5\" /)\n CHARACTER*5 c(1)"}, {"sha": "830c7eb71bdc8297fa8e93cde62e9e23497e6505", "filename": "gcc/testsuite/gfortran.dg/tl_editing.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Ftl_editing.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Ftl_editing.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftl_editing.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }     \n+! { dg-options \"-std=legacy\" }\n+!\n ! Test of fix to bug triggered by NIST fm908.for.\n ! Left tabbing, followed by X or T-tabbing to the right would\n ! cause spaces to be overwritten on output data."}, {"sha": "31765699750431c1af4be3fd1cda7f958a49ada5", "filename": "gcc/testsuite/gfortran.dg/unf_io_convert_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Funf_io_convert_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Funf_io_convert_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Funf_io_convert_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -16,7 +16,7 @@ program main\n   integer n\n   real r(size)\n   integer i\n-  character*4 str\n+  character(4) str\n \n   m(1) = Z'11223344' ! { dg-warning \"BOZ literal at .1. outside a DATA statement\" }\n   m(2) = Z'55667788' ! { dg-warning \"BOZ literal at .1. outside a DATA statement\" }"}, {"sha": "0a0883c67c300714dcb1995fadd11445aff6d23a", "filename": "gcc/testsuite/gfortran.dg/warnings_are_errors_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarnings_are_errors_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarnings_are_errors_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarnings_are_errors_1.f90?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -5,7 +5,7 @@\n ! free-form tests\n \n ! gfc_notify_std:\n-       function char_ (ch) ! { dg-warning \"is obsolescent in fortran 95\" }\n+       function char_ (ch) ! { dg-warning \"Obsolescent feature\" }\n        character(*) :: char_, ch\n         char_ = ch\n        end function char_"}, {"sha": "435e46122277c368f0253ad5702c6c590bc0bd19", "filename": "gcc/testsuite/gfortran.dg/x_slash_1.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fx_slash_1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ab8b0935d02525be9db7bc1a46fa41a4c256e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fx_slash_1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fx_slash_1.f?ref=e2ab8b0935d02525be9db7bc1a46fa41a4c256e9", "patch": "@@ -1,4 +1,6 @@\n c { dg-do run { target fd_truncate } }\n+c { dg-options \"-std=legacy\" }\n+c\n c This program tests the fixes to PR22570.\n c\n c Provided by Paul Thomas - pault@gcc.gnu.org"}]}