{"sha": "6cd1ee98eaf775b062c90cb1ef0dc777c086afc2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNkMWVlOThlYWY3NzViMDYyYzkwY2IxZWYwZGM3NzdjMDg2YWZjMg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-09-26T09:18:52Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-09-26T09:18:52Z"}, "message": "[Ada] Spurious error on private extension with predicate\n\nThis patch fixes a spurious error involving a private extension whose\nfull view includes a dynamic predicate, when the parent type is itself\nprivate at the point of the predicate check.  The conversion is known to\nbe legal so no extra conversion checks are required.\n\n2018-09-26  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* exp_util.adb (Make_Predicate_Call): Use OK_Convert_To when\n\tapplying a predicate check to prevent spurious errors when\n\tprivate ancestors are involved.\n\ngcc/testsuite/\n\n\t* gnat.dg/predicate2-containers.ads,\n\tgnat.dg/predicate2-project-name_values.ads,\n\tgnat.dg/predicate2-project-registry-attribute.ads,\n\tgnat.dg/predicate2-project-registry.ads,\n\tgnat.dg/predicate2-project-typ-set.ads,\n\tgnat.dg/predicate2-project-typ.ads,\n\tgnat.dg/predicate2-project.ads,\n\tgnat.dg/predicate2-source_reference.ads, gnat.dg/predicate2.ads,\n\tgnat.dg/predicate2_main.adb: New testcase.\n\nFrom-SVN: r264626", "tree": {"sha": "48ec6bb21378f378e57d68460d582c5e90fa6fed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48ec6bb21378f378e57d68460d582c5e90fa6fed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "abbfd69841b2357d242d47abda8d0430269ab829", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abbfd69841b2357d242d47abda8d0430269ab829", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abbfd69841b2357d242d47abda8d0430269ab829"}], "stats": {"total": 182, "additions": 180, "deletions": 2}, "files": [{"sha": "9731513188fbf26817b10d32c75551df65cd2dce", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6cd1ee98eaf775b062c90cb1ef0dc777c086afc2", "patch": "@@ -1,3 +1,9 @@\n+2018-09-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_util.adb (Make_Predicate_Call): Use OK_Convert_To when\n+\tapplying a predicate check to prevent spurious errors when\n+\tprivate ancestors are involved.\n+\n 2018-09-26  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch4.adb (Expand_N_Allocator): Ensure that the use of the"}, {"sha": "cf277c1bb5d83be4c12340fd70838a44b047df09", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=6cd1ee98eaf775b062c90cb1ef0dc777c086afc2", "patch": "@@ -9313,14 +9313,16 @@ package body Exp_Util is\n \n       --  If the type is tagged, the expression may be class-wide, in which\n       --  case it has to be converted to its root type, given that the\n-      --  generated predicate function is not dispatching.\n+      --  generated predicate function is not dispatching. The conversion\n+      --  is type-safe and does not need validation, which matters when\n+      --  private extensions are involved.\n \n       if Is_Tagged_Type (Typ) then\n          Call :=\n            Make_Function_Call (Loc,\n              Name                   => New_Occurrence_Of (Func_Id, Loc),\n              Parameter_Associations =>\n-               New_List (Convert_To (Typ, Relocate_Node (Expr))));\n+               New_List (OK_Convert_To (Typ, Relocate_Node (Expr))));\n       else\n          Call :=\n            Make_Function_Call (Loc,"}, {"sha": "e285be64939219686e5880660df6f270f1948781", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6cd1ee98eaf775b062c90cb1ef0dc777c086afc2", "patch": "@@ -1,3 +1,15 @@\n+2018-09-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/predicate2-containers.ads,\n+\tgnat.dg/predicate2-project-name_values.ads,\n+\tgnat.dg/predicate2-project-registry-attribute.ads,\n+\tgnat.dg/predicate2-project-registry.ads,\n+\tgnat.dg/predicate2-project-typ-set.ads,\n+\tgnat.dg/predicate2-project-typ.ads,\n+\tgnat.dg/predicate2-project.ads,\n+\tgnat.dg/predicate2-source_reference.ads, gnat.dg/predicate2.ads,\n+\tgnat.dg/predicate2_main.adb: New testcase.\n+\n 2018-09-26  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* gnat.dg/dynhash1.adb: New testcase."}, {"sha": "d02cfe3cdf0a8f7bf6f74752aaf11a9fd34418ff", "filename": "gcc/testsuite/gnat.dg/predicate2-containers.ads", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-containers.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-containers.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-containers.ads?ref=6cd1ee98eaf775b062c90cb1ef0dc777c086afc2", "patch": "@@ -0,0 +1,13 @@\n+----\n+with Ada.Containers.Indefinite_Vectors;\n+\n+package Predicate2.Containers is\n+\n+   subtype Count_Type is Ada.Containers.Count_Type;\n+\n+   package Value_Type_List is\n+     new Ada.Containers.Indefinite_Vectors (Positive, Value_Type);\n+\n+   subtype Value_List is Value_Type_List.Vector;\n+\n+end Predicate2.Containers;"}, {"sha": "a68fa0e1ffee0c9c65856b2d4c280a5937ab21b8", "filename": "gcc/testsuite/gnat.dg/predicate2-project-name_values.ads", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-project-name_values.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-project-name_values.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-project-name_values.ads?ref=6cd1ee98eaf775b062c90cb1ef0dc777c086afc2", "patch": "@@ -0,0 +1,37 @@\n+\n+----\n+with Predicate2.Containers;\n+with Predicate2.Project.Registry.Attribute;\n+with Predicate2.Source_Reference;\n+\n+private with Ada.Strings.Unbounded;\n+\n+package Predicate2.Project.Name_Values is\n+\n+   use type Containers.Count_Type;\n+   use all type Registry.Attribute.Value_Kind;\n+\n+   type Object is new Source_Reference.Object with private;\n+\n+   Undefined : constant Object;\n+\n+   subtype Value_Kind is Registry.Attribute.Value_Kind;\n+\n+   function Kind (Self : Object'Class) return Registry.Attribute.Value_Kind\n+     with Pre => Object (Self) /= Undefined;\n+   --  Returns the Kind for the Name/Values pair object\n+\n+private\n+\n+   use Ada.Strings.Unbounded;\n+\n+   type Object is new Source_Reference.Object with record\n+      Kind   : Registry.Attribute.Value_Kind := List;\n+      Name   : Unbounded_String;\n+      Values : Containers.Value_List;\n+   end record;\n+\n+   Undefined : constant Object :=\n+                 Object'(Source_Reference.Object with others => <>);\n+\n+end Predicate2.Project.Name_Values;"}, {"sha": "b0d671eb6442c9bc64fbe062e7bf1f2a69300e28", "filename": "gcc/testsuite/gnat.dg/predicate2-project-registry-attribute.ads", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-project-registry-attribute.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-project-registry-attribute.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-project-registry-attribute.ads?ref=6cd1ee98eaf775b062c90cb1ef0dc777c086afc2", "patch": "@@ -0,0 +1,7 @@\n+\n+----\n+package Predicate2.Project.Registry.Attribute is\n+\n+   type Value_Kind is (Single, List);\n+\n+end Predicate2.Project.Registry.Attribute;"}, {"sha": "680cb9f7dce69a9bef647f8583689014158e84b9", "filename": "gcc/testsuite/gnat.dg/predicate2-project-registry.ads", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-project-registry.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-project-registry.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-project-registry.ads?ref=6cd1ee98eaf775b062c90cb1ef0dc777c086afc2", "patch": "@@ -0,0 +1,3 @@\n+----\n+package Predicate2.Project.Registry is\n+end Predicate2.Project.Registry;"}, {"sha": "1ba058052e9d24b15826db0c6a0d5c898a8ca697", "filename": "gcc/testsuite/gnat.dg/predicate2-project-typ-set.ads", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-project-typ-set.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-project-typ-set.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-project-typ-set.ads?ref=6cd1ee98eaf775b062c90cb1ef0dc777c086afc2", "patch": "@@ -0,0 +1,13 @@\n+----\n+with Ada.Containers.Indefinite_Ordered_Maps;\n+\n+package Predicate2.Project.Typ.Set is\n+\n+   --  The type names must not be case-sensitive\n+\n+   package Set is new Ada.Containers.Indefinite_Ordered_Maps\n+     (Name_Type, Object, \"<\");\n+\n+   subtype Object is Set.Map;\n+\n+end Predicate2.Project.Typ.Set;"}, {"sha": "353833bf689b233980ae8331c6b81604c65d8b1d", "filename": "gcc/testsuite/gnat.dg/predicate2-project-typ.ads", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-project-typ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-project-typ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-project-typ.ads?ref=6cd1ee98eaf775b062c90cb1ef0dc777c086afc2", "patch": "@@ -0,0 +1,24 @@\n+----\n+with Predicate2.Project.Name_Values;\n+\n+private with Predicate2.Project.Registry.Attribute;\n+\n+package Predicate2.Project.Typ is\n+\n+   type Object is new Name_Values.Object with private;\n+\n+   Undefined : constant Object;\n+\n+private\n+\n+   use all type Predicate2.Project.Registry.Attribute.Value_Kind;\n+\n+   -- ???? BUG HERE: removing the Dynamic_Predicate below will allow\n+   --  compilation of the unit.\n+\n+   type Object is new Name_Values.Object with null record\n+    with Dynamic_Predicate => Object.Kind = List;\n+\n+   Undefined : constant Object := (Name_Values.Undefined with null record);\n+\n+end Predicate2.Project.Typ;"}, {"sha": "4036ff3cdc3c7574a943bbe7824bfd39dc2e4259", "filename": "gcc/testsuite/gnat.dg/predicate2-project.ads", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-project.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-project.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-project.ads?ref=6cd1ee98eaf775b062c90cb1ef0dc777c086afc2", "patch": "@@ -0,0 +1,4 @@\n+----\n+package Predicate2.Project is\n+\n+end Predicate2.Project;"}, {"sha": "1ad4c3fe647af824713084f0c5b2f5282466b230", "filename": "gcc/testsuite/gnat.dg/predicate2-source_reference.ads", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-source_reference.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-source_reference.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2-source_reference.ads?ref=6cd1ee98eaf775b062c90cb1ef0dc777c086afc2", "patch": "@@ -0,0 +1,33 @@\n+\n+private with Ada.Strings.Unbounded;\n+\n+package Predicate2.Source_Reference is\n+\n+   type Object is tagged private;\n+\n+   subtype Source_Reference is Object;\n+\n+   function \"<\" (Left, Right : Object) return Boolean;\n+\n+   Undefined : constant Object;\n+\n+private\n+\n+   use Ada.Strings.Unbounded;\n+\n+   type Object is tagged record\n+      Line     : Natural;\n+      Column   : Natural;\n+      Filename : Unbounded_String;\n+   end record\n+     with Dynamic_Predicate => Filename /= Null_Unbounded_String;\n+\n+   function \"<\" (Left, Right : Object) return Boolean is\n+     (Left.Filename < Right.Filename\n+       or else\n+      (Left.Filename = Right.Filename and then Left.Line < Right.Line));\n+\n+   Undefined : constant Object :=\n+                 (0, 0, To_Unbounded_String (\"@\"));\n+\n+end Predicate2.Source_Reference;"}, {"sha": "4e918f93250040668cc6a4738f36d09dde03e106", "filename": "gcc/testsuite/gnat.dg/predicate2.ads", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2.ads?ref=6cd1ee98eaf775b062c90cb1ef0dc777c086afc2", "patch": "@@ -0,0 +1,14 @@\n+package Predicate2 is\n+\n+   type Optional_Name_Type is new String;\n+\n+   subtype Name_Type is Optional_Name_Type\n+     with Dynamic_Predicate => Name_Type'Length > 0;\n+   --  A non case sensitive name\n+\n+   subtype Value_Type is String;\n+\n+   overriding function \"=\" (Left, Right : Optional_Name_Type) return Boolean;\n+   overriding function \"<\" (Left, Right : Optional_Name_Type) return Boolean;\n+\n+end Predicate2;"}, {"sha": "3dc9528d728ff106bfa59090eb076063957441a7", "filename": "gcc/testsuite/gnat.dg/predicate2_main.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2_main.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd1ee98eaf775b062c90cb1ef0dc777c086afc2/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2_main.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate2_main.adb?ref=6cd1ee98eaf775b062c90cb1ef0dc777c086afc2", "patch": "@@ -0,0 +1,10 @@\n+--  { dg-do compile }\n+\n+with Predicate2.Project.Typ.Set;\n+\n+procedure Predicate2_Main is\n+   Type_Def : Predicate2.Project.Typ.Object := Predicate2.Project.Typ.Undefined;\n+   Types    : Predicate2.Project.Typ.Set.Object;\n+begin\n+   Type_Def := Types (\"toto\");\n+end Predicate2_Main;"}]}