{"sha": "1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE5YjE1YTdkNzZlZTNlZTJjZDk2MDY5OGE4NGUzNGVjMTBjMmJmMA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-04-04T22:38:10Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-04-04T22:38:10Z"}, "message": "PR middle-end/89957 - ICE calling strnlen with an int128_t bound in a known range\n\nPR middle-end/89957 - ICE calling strnlen with an int128_t bound in a known range\nPR middle-end/89911 - [9 Regression] ICE in get_attr_nonstring_decl\n\ngcc/ChangeLog:\n\n\tPR middle-end/89957\n\tPR middle-end/89911\n\t* builtins.c (expand_builtin_strnlen): Make sure wi::ltu_p operands\n\thave the same precision since the function crashes otherwise.\n\t* calls.c (maybe_warn_nonstring_arg): Avoid assuming strnlen() call\n\thas non-zero arguments.\n\ngcc/testsuite/ChangeLog:\n\n\tPR middle-end/89957\n\tPR middle-end/89911\n\t* gcc.dg/Wstringop-overflow-13.c: New test.\n\nFrom-SVN: r270154", "tree": {"sha": "b55605cb740d88748c0349945fe87a7b06634d12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b55605cb740d88748c0349945fe87a7b06634d12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9a0cbb60d28042893135cee60ad28a48a7e2235d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a0cbb60d28042893135cee60ad28a48a7e2235d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a0cbb60d28042893135cee60ad28a48a7e2235d"}], "stats": {"total": 62, "additions": 60, "deletions": 2}, "files": [{"sha": "4e17249cda354c8ce1704712d0f77b51a971e351", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0", "patch": "@@ -1,3 +1,12 @@\n+2019-04-04  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/89957\n+\tPR middle-end/89911\n+\t* builtins.c (expand_builtin_strnlen): Make sure wi::ltu_p operands\n+\thave the same precision since the function crashes otherwise.\n+\t* calls.c (maybe_warn_nonstring_arg): Avoid assuming strnlen() call\n+\thas non-zero arguments.\n+\n 2019-04-04  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/89934"}, {"sha": "d37d73fc4a0fdd9ff0883ea3adfb385775a8a684", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0", "patch": "@@ -3151,7 +3151,7 @@ expand_builtin_strnlen (tree exp, rtx target, machine_mode target_mode)\n     return NULL_RTX;\n \n   if (!TREE_NO_WARNING (exp)\n-      && wi::ltu_p (wi::to_wide (maxobjsize), min)\n+      && wi::ltu_p (wi::to_wide (maxobjsize, min.get_precision ()), min)\n       && warning_at (loc, OPT_Wstringop_overflow_,\n \t\t     \"%K%qD specified bound [%wu, %wu] \"\n \t\t     \"exceeds maximum object size %E\","}, {"sha": "6b22e7a2315052d0b9cf113c975b106fd68624fa", "filename": "gcc/calls.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0", "patch": "@@ -1555,7 +1555,10 @@ maybe_warn_nonstring_arg (tree fndecl, tree exp)\n   if (TREE_NO_WARNING (exp) || !warn_stringop_overflow)\n     return;\n \n+  /* Avoid clearly invalid calls (more checking done below).  */\n   unsigned nargs = call_expr_nargs (exp);\n+  if (!nargs)\n+    return;\n \n   /* The bound argument to a bounded string function like strncpy.  */\n   tree bound = NULL_TREE;"}, {"sha": "6954748fa156be58db5a768abaae5b1cf9b7395d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0", "patch": "@@ -1,3 +1,9 @@\n+2019-04-04  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/89957\n+\tPR middle-end/89911\n+\t* gcc.dg/Wstringop-overflow-13.c: New test.\n+\n 2019-04-04  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/89934\n@@ -8,7 +14,7 @@\n \n \tPR rtl-optimization/89399\n \t* gcc.c-torture/compile/pr89399.c: New test.\n- \n+\n 2019-04-04  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/89004"}, {"sha": "bd513151cea0ec74fbb0ed51dd148055876b30a8", "filename": "gcc/testsuite/gcc.dg/Wstringop-overflow-13.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-13.c?ref=1a9b15a7d76ee3ee2cd960698a84e34ec10c2bf0", "patch": "@@ -0,0 +1,40 @@\n+/* PR middle-end/89957 - ICE calling strnlen with an int128_t bound\n+   in a known range\n+   PR middle-end/89911 - ICE on a call with no arguments to strnlen\n+   declared with no prototype\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall\" } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+extern size_t strnlen ();\n+\n+size_t f0 (void)\n+{\n+  return strnlen ();          /* { dg-warning \"too few arguments to built-in function 'strnlen'\" } */\n+}\n+\n+size_t f1 (const char *s)\n+{\n+  return strnlen (s);         /* { dg-warning \"too few arguments to built-in function 'strnlen'\" } */\n+}\n+\n+size_t f2 (const char *s)\n+{\n+  return strnlen (s, s);      /* { dg-warning \"\\\\\\[-Wint-conversion]\" } */\n+}\n+\n+#if __SIZEOF_INT128__ == 16\n+\n+size_t fi128 (const char *s, __int128_t n)\n+{\n+ if (n < 0)\n+   n = 0;\n+\n+ /* PR middle-end/89957 */\n+ return strnlen (s, n);       /* { dg-warning \"\\\\\\[-Wbuiltin-declaration-mismatch]\" \"int128\" { target int128 } } */\n+}\n+\n+#endif\n+\n+/* { dg-prune-output \"\\\\\\[-Wint-conversion]\" } */"}]}