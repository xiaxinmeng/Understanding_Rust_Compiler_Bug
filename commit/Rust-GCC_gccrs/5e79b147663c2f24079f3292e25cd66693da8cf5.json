{"sha": "5e79b147663c2f24079f3292e25cd66693da8cf5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU3OWIxNDc2NjNjMmYyNDA3OWYzMjkyZTI1Y2Q2NjY5M2RhOGNmNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-07-15T12:48:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-07-15T12:48:47Z"}, "message": "re PR tree-optimization/91162 (ICE: tree check: expected class 'type', have 'exceptional' (error_mark) in useless_type_conversion_p, at gimple-expr.c:86 (error: invalid 'PHI' argument))\n\n2019-07-15  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/91162\n\t* tree-cfg.c (move_block_to_fn): When releasing a virtual PHI\n\tnode make sure to replace all uses with something valid.\n\n\t* gcc.dg/autopar/pr91162.c: New testcase.\n\nFrom-SVN: r273492", "tree": {"sha": "e5028f68e7dc374635a75bfb45a2d367fbac4d8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5028f68e7dc374635a75bfb45a2d367fbac4d8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e79b147663c2f24079f3292e25cd66693da8cf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e79b147663c2f24079f3292e25cd66693da8cf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e79b147663c2f24079f3292e25cd66693da8cf5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e79b147663c2f24079f3292e25cd66693da8cf5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6c2833e74e4e64a71bafaf6e20e65506bbce5a5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c2833e74e4e64a71bafaf6e20e65506bbce5a5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c2833e74e4e64a71bafaf6e20e65506bbce5a5c"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "af0b4b5e165c54dfda66a6f63d2d5a72fb5c284f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e79b147663c2f24079f3292e25cd66693da8cf5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e79b147663c2f24079f3292e25cd66693da8cf5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e79b147663c2f24079f3292e25cd66693da8cf5", "patch": "@@ -1,3 +1,9 @@\n+2019-07-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/91162\n+\t* tree-cfg.c (move_block_to_fn): When releasing a virtual PHI\n+\tnode make sure to replace all uses with something valid.\n+\n 2019-07-15  Kewen Lin  <linkw@gcc.gnu.org>\n \n \tPR tree-optimization/88497"}, {"sha": "d36652f91e2e5574a43333ad1a7b59e798e8094f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e79b147663c2f24079f3292e25cd66693da8cf5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e79b147663c2f24079f3292e25cd66693da8cf5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5e79b147663c2f24079f3292e25cd66693da8cf5", "patch": "@@ -1,3 +1,8 @@\n+2019-07-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/91162\n+\t* gcc.dg/autopar/pr91162.c: New testcase.\n+\n 2019-07-15  Kewen Lin  <linkw@gcc.gnu.org>\n \n \tPR tree-optimization/88497"}, {"sha": "4bfedb908e512a6d87651a0ef1fa0f8f5c36b5dd", "filename": "gcc/testsuite/gcc.dg/autopar/pr91162.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e79b147663c2f24079f3292e25cd66693da8cf5/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr91162.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e79b147663c2f24079f3292e25cd66693da8cf5/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr91162.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr91162.c?ref=5e79b147663c2f24079f3292e25cd66693da8cf5", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -ftree-parallelize-loops=2 -fno-tree-dominator-opts --param parloops-min-per-thread=30\" } */\n+\n+void\n+zf (__int128 ct)\n+{\n+  __int128 *rk = &ct;\n+\n+  if (0)\n+    {\n+      int jj;\n+\n+t9:\n+      for (jj = 0; jj < 60; ++jj)\n+\t{\n+\t}\n+\n+      __builtin_unreachable ();\n+    }\n+\n+  while (*rk < 1)\n+    ++*rk;\n+\n+  goto t9;\n+}"}, {"sha": "4521fe347dc464472e7f70604ee1089b9455f0ed", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e79b147663c2f24079f3292e25cd66693da8cf5/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e79b147663c2f24079f3292e25cd66693da8cf5/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=5e79b147663c2f24079f3292e25cd66693da8cf5", "patch": "@@ -7088,7 +7088,14 @@ move_block_to_fn (struct function *dest_cfun, basic_block bb,\n       if (virtual_operand_p (op))\n \t{\n \t  /* Remove the phi nodes for virtual operands (alias analysis will be\n-\t     run for the new function, anyway).  */\n+\t     run for the new function, anyway).  But replace all uses that\n+\t     might be outside of the region we move.  */\n+\t  use_operand_p use_p;\n+\t  imm_use_iterator iter;\n+\t  gimple *use_stmt;\n+\t  FOR_EACH_IMM_USE_STMT (use_stmt, iter, op)\n+\t    FOR_EACH_IMM_USE_ON_STMT (use_p, iter)\n+\t      SET_USE (use_p, SSA_NAME_VAR (op));\n           remove_phi_node (&psi, true);\n \t  continue;\n \t}"}]}