{"sha": "6fca1761a16c68740f875fc487b98b6bde8e9be7", "node_id": "C_kwDOANBUbNoAKDZmY2ExNzYxYTE2YzY4NzQwZjg3NWZjNDg3Yjk4YjZiZGU4ZTliZTc", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-10-20T05:15:17Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-10-20T10:22:55Z"}, "message": "Remove unused back_threader destructor.\n\nTested on x86-64 Linux.\n\ngcc/ChangeLog:\n\n\t* tree-ssa-threadbackward.c (back_threader::~back_threader): Remove.", "tree": {"sha": "40e04c923ac43d2105ba189d5f8a3d6dd46257bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40e04c923ac43d2105ba189d5f8a3d6dd46257bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fca1761a16c68740f875fc487b98b6bde8e9be7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fca1761a16c68740f875fc487b98b6bde8e9be7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fca1761a16c68740f875fc487b98b6bde8e9be7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fca1761a16c68740f875fc487b98b6bde8e9be7/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b7f9c40ef42411b6f51b508d41a580d4682069e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b7f9c40ef42411b6f51b508d41a580d4682069e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b7f9c40ef42411b6f51b508d41a580d4682069e"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "d94e3b962db415bb071b771c0331be5aa127aa5d", "filename": "gcc/tree-ssa-threadbackward.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fca1761a16c68740f875fc487b98b6bde8e9be7/gcc%2Ftree-ssa-threadbackward.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fca1761a16c68740f875fc487b98b6bde8e9be7/gcc%2Ftree-ssa-threadbackward.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadbackward.c?ref=6fca1761a16c68740f875fc487b98b6bde8e9be7", "patch": "@@ -76,7 +76,6 @@ class back_threader\n {\n public:\n   back_threader (bool speed_p, bool resolve);\n-  ~back_threader ();\n   void maybe_thread_block (basic_block bb);\n   bool thread_through_all_blocks (bool may_peel_loop_headers);\n private:\n@@ -128,10 +127,6 @@ back_threader::back_threader (bool speed_p, bool resolve)\n   m_resolve = resolve;\n }\n \n-back_threader::~back_threader ()\n-{\n-}\n-\n // Register the current path for jump threading if it's profitable to\n // do so.\n //"}]}