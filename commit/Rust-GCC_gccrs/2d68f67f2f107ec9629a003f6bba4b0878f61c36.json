{"sha": "2d68f67f2f107ec9629a003f6bba4b0878f61c36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ2OGY2N2YyZjEwN2VjOTYyOWEwMDNmNmJiYTRiMDg3OGY2MWMzNg==", "commit": {"author": {"name": "Greta Yorsh", "email": "greta.yorsh@arm.com", "date": "2012-03-02T12:09:04Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2012-03-02T12:09:04Z"}, "message": "For Greta Yorsh.\n\n2012-03-02  Greta Yorsh  <Greta.Yorsh@arm.com>\n\n       * config/arm/arm-ldmstm.ml (write_ldm_commutative_peephole):\n\tImprove conditions for peepholes of loads followed by commutative\n\toperators.\n       * config/arm/ldmstm.md: Regenerated.\n\nFrom-SVN: r184783", "tree": {"sha": "69b90070e353abc45cd2c8d08168172fb39949c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69b90070e353abc45cd2c8d08168172fb39949c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d68f67f2f107ec9629a003f6bba4b0878f61c36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d68f67f2f107ec9629a003f6bba4b0878f61c36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d68f67f2f107ec9629a003f6bba4b0878f61c36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d68f67f2f107ec9629a003f6bba4b0878f61c36/comments", "author": null, "committer": null, "parents": [{"sha": "7167a5015e9cdbb3e24dea6c345f5482296bfdce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7167a5015e9cdbb3e24dea6c345f5482296bfdce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7167a5015e9cdbb3e24dea6c345f5482296bfdce"}], "stats": {"total": 40, "additions": 31, "deletions": 9}, "files": [{"sha": "49e59dd80dbdce62a77c933d1ea5ddcac8169a99", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d68f67f2f107ec9629a003f6bba4b0878f61c36/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d68f67f2f107ec9629a003f6bba4b0878f61c36/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d68f67f2f107ec9629a003f6bba4b0878f61c36", "patch": "@@ -1,3 +1,10 @@\n+2012-03-02  Greta Yorsh  <Greta.Yorsh@arm.com>\n+\n+       * config/arm/arm-ldmstm.ml (write_ldm_commutative_peephole):\n+\tImprove conditions for peepholes of loads followed by commutative\n+\toperators.\n+       * config/arm/ldmstm.md: Regenerated.\n+\n 2012-03-02  Richard Guenther  <rguenther@suse.de>\n \n \t* BASE-VER: Set to 4.8.0."}, {"sha": "1d98ef038efbb5d51aed5de5615772b6131b0b63", "filename": "gcc/config/arm/arm-ldmstm.ml", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d68f67f2f107ec9629a003f6bba4b0878f61c36/gcc%2Fconfig%2Farm%2Farm-ldmstm.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d68f67f2f107ec9629a003f6bba4b0878f61c36/gcc%2Fconfig%2Farm%2Farm-ldmstm.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-ldmstm.ml?ref=2d68f67f2f107ec9629a003f6bba4b0878f61c36", "patch": "@@ -216,9 +216,14 @@ let write_ldm_commutative_peephole thumb =\n     Printf.printf \"%s          (match_operand:SI %d \\\"s_register_operand\\\" \\\"\\\")]))\\n\" indent (nregs * 2 + 3);\n     Printf.printf \"%s   (clobber (reg:CC CC_REGNUM))])]\\n\" indent\n   end;\n-  Printf.printf \"  \\\"(((operands[%d] == operands[0] && operands[%d] == operands[1])\\n\" (nregs * 2 + 2) (nregs * 2 + 3);\n-  Printf.printf \"     || (operands[%d] == operands[0] && operands[%d] == operands[1]))\\n\" (nregs * 2 + 3) (nregs * 2 + 2);\n-  Printf.printf \"    && peep2_reg_dead_p (%d, operands[0]) && peep2_reg_dead_p (%d, operands[1]))\\\"\\n\" (nregs + 1) (nregs + 1);\n+  Printf.printf \"  \\\"((((REGNO (operands[%d]) == REGNO (operands[0]))\\n\" (nregs * 2 + 2);\n+  Printf.printf \"         && (REGNO (operands[%d]) == REGNO (operands[1])))\\n\"  (nregs * 2 + 3);\n+  Printf.printf \"      || ((REGNO (operands[%d]) == REGNO (operands[0]))\\n\" (nregs * 2 + 3);\n+  Printf.printf \"         && (REGNO (operands[%d]) == REGNO (operands[1]))))\\n\" (nregs * 2 + 2);\n+  Printf.printf \"    && (peep2_regno_dead_p (%d, REGNO (operands[0]))\\n\" (nregs + 1);\n+  Printf.printf \"      || (REGNO (operands[0]) == REGNO (operands[%d])))\\n\"  (nregs * 2);\n+  Printf.printf \"    && (peep2_regno_dead_p (%d, REGNO (operands[1]))\\n\" (nregs + 1);\n+  Printf.printf \"      || (REGNO (operands[1]) == REGNO (operands[%d]))))\\\"\\n\" (nregs * 2);\n   begin\n     if thumb then\n       Printf.printf \"  [(set (match_dup %d) (match_op_dup %d [(match_dup %d) (match_dup %d)]))]\\n\""}, {"sha": "0835f1637a88b7db23518a5bd75538e3400fe974", "filename": "gcc/config/arm/ldmstm.md", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d68f67f2f107ec9629a003f6bba4b0878f61c36/gcc%2Fconfig%2Farm%2Fldmstm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d68f67f2f107ec9629a003f6bba4b0878f61c36/gcc%2Fconfig%2Farm%2Fldmstm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fldmstm.md?ref=2d68f67f2f107ec9629a003f6bba4b0878f61c36", "patch": "@@ -1160,9 +1160,14 @@\n             [(match_operand:SI 6 \"s_register_operand\" \"\")\n              (match_operand:SI 7 \"s_register_operand\" \"\")]))\n       (clobber (reg:CC CC_REGNUM))])]\n-  \"(((operands[6] == operands[0] && operands[7] == operands[1])\n-     || (operands[7] == operands[0] && operands[6] == operands[1]))\n-    && peep2_reg_dead_p (3, operands[0]) && peep2_reg_dead_p (3, operands[1]))\"\n+  \"((((REGNO (operands[6]) == REGNO (operands[0]))\n+         && (REGNO (operands[7]) == REGNO (operands[1])))\n+      || ((REGNO (operands[7]) == REGNO (operands[0]))\n+         && (REGNO (operands[6]) == REGNO (operands[1]))))\n+    && (peep2_regno_dead_p (3, REGNO (operands[0]))\n+      || (REGNO (operands[0]) == REGNO (operands[4])))\n+    && (peep2_regno_dead_p (3, REGNO (operands[1]))\n+      || (REGNO (operands[1]) == REGNO (operands[4]))))\"\n   [(parallel\n     [(set (match_dup 4) (match_op_dup 5 [(match_dup 6) (match_dup 7)]))\n      (clobber (reg:CC CC_REGNUM))])]\n@@ -1180,9 +1185,14 @@\n         (match_operator:SI 5 \"commutative_binary_operator\"\n          [(match_operand:SI 6 \"s_register_operand\" \"\")\n           (match_operand:SI 7 \"s_register_operand\" \"\")]))]\n-  \"(((operands[6] == operands[0] && operands[7] == operands[1])\n-     || (operands[7] == operands[0] && operands[6] == operands[1]))\n-    && peep2_reg_dead_p (3, operands[0]) && peep2_reg_dead_p (3, operands[1]))\"\n+  \"((((REGNO (operands[6]) == REGNO (operands[0]))\n+         && (REGNO (operands[7]) == REGNO (operands[1])))\n+      || ((REGNO (operands[7]) == REGNO (operands[0]))\n+         && (REGNO (operands[6]) == REGNO (operands[1]))))\n+    && (peep2_regno_dead_p (3, REGNO (operands[0]))\n+      || (REGNO (operands[0]) == REGNO (operands[4])))\n+    && (peep2_regno_dead_p (3, REGNO (operands[1]))\n+      || (REGNO (operands[1]) == REGNO (operands[4]))))\"\n   [(set (match_dup 4) (match_op_dup 5 [(match_dup 6) (match_dup 7)]))]\n {\n   if (!gen_ldm_seq (operands, 2, true))"}]}