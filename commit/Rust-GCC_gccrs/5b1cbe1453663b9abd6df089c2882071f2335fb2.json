{"sha": "5b1cbe1453663b9abd6df089c2882071f2335fb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIxY2JlMTQ1MzY2M2I5YWJkNmRmMDg5YzI4ODIwNzFmMjMzNWZiMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-01-14T22:41:02Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-01-14T22:41:02Z"}, "message": "re PR c++/42608 (Undefined reference not reported in case of explicit template instantiation)\n\n\tPR c++/42608\n\t* varasm.c (declare_weak): Add weak attribute to decl if it\n\tdoesn't have one already.\n\t(assemble_external): Only add decls to weak_decls if they also\n\thave weak attribute.\n\n\t* g++.dg/template/instantiate11.C: New test.\n\nFrom-SVN: r155919", "tree": {"sha": "cce96a1384605a32918e26237bbc9b895bbda31d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cce96a1384605a32918e26237bbc9b895bbda31d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b1cbe1453663b9abd6df089c2882071f2335fb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b1cbe1453663b9abd6df089c2882071f2335fb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b1cbe1453663b9abd6df089c2882071f2335fb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b1cbe1453663b9abd6df089c2882071f2335fb2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d2a845248174754046207cb2e634b64aea86b01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d2a845248174754046207cb2e634b64aea86b01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d2a845248174754046207cb2e634b64aea86b01"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "29f71b12d14678e818a0e5258888b529f4af0917", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1cbe1453663b9abd6df089c2882071f2335fb2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1cbe1453663b9abd6df089c2882071f2335fb2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b1cbe1453663b9abd6df089c2882071f2335fb2", "patch": "@@ -1,3 +1,11 @@\n+2010-01-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/42608\n+\t* varasm.c (declare_weak): Add weak attribute to decl if it\n+\tdoesn't have one already.\n+\t(assemble_external): Only add decls to weak_decls if they also\n+\thave weak attribute.\n+\n 2010-01-14  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* var-tracking.c (var_reg_delete): Don't delete the association"}, {"sha": "5b284490686b2f1a25638e96b5558d294fc45f47", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1cbe1453663b9abd6df089c2882071f2335fb2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1cbe1453663b9abd6df089c2882071f2335fb2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5b1cbe1453663b9abd6df089c2882071f2335fb2", "patch": "@@ -1,3 +1,8 @@\n+2010-01-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/42608\n+\t* g++.dg/template/instantiate11.C: New test.\n+\n 2010-01-14  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/42701"}, {"sha": "3598d5890bf862c068b4011cfccaf597b99be82c", "filename": "gcc/testsuite/g++.dg/template/instantiate11.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1cbe1453663b9abd6df089c2882071f2335fb2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1cbe1453663b9abd6df089c2882071f2335fb2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate11.C?ref=5b1cbe1453663b9abd6df089c2882071f2335fb2", "patch": "@@ -0,0 +1,25 @@\n+// PR c++/42608\n+// { dg-do compile }\n+\n+template <class U, class V>\n+struct A;\n+\n+template <class V>\n+struct A<int, V>\n+{\n+  void f ();\n+};\n+\n+template struct A<int, int>;\n+\n+int\n+main ()\n+{\n+  A<int, int> a;\n+  a.f ();\n+  return 0;\n+}\n+\n+// Make sure we get undefined reference error if\n+// A<int, int>::f () isn't instantiated elsewhere.\n+// { dg-final { scan-assembler-not \"weak\\[\\n\\t\\]*_ZN1AIiiE1fEv\" } }"}, {"sha": "7ed59055745b6d13fc7f1403412b0f468d3e9b46", "filename": "gcc/varasm.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1cbe1453663b9abd6df089c2882071f2335fb2/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1cbe1453663b9abd6df089c2882071f2335fb2/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=5b1cbe1453663b9abd6df089c2882071f2335fb2", "patch": "@@ -2337,13 +2337,15 @@ assemble_external (tree decl ATTRIBUTE_UNUSED)\n   /* We want to output annotation for weak and external symbols at\n      very last to check if they are references or not.  */\n \n-  if (SUPPORTS_WEAK && DECL_WEAK (decl)\n+  if (SUPPORTS_WEAK\n+      && DECL_WEAK (decl)\n       /* TREE_STATIC is a weird and abused creature which is not\n \t generally the right test for whether an entity has been\n \t locally emitted, inlined or otherwise not-really-extern, but\n \t for declarations that can be weak, it happens to be\n \t match.  */\n       && !TREE_STATIC (decl)\n+      && lookup_attribute (\"weak\", DECL_ATTRIBUTES (decl))\n       && value_member (decl, weak_decls) == NULL_TREE)\n     weak_decls = tree_cons (NULL, decl, weak_decls);\n \n@@ -5227,6 +5229,9 @@ declare_weak (tree decl)\n     warning (0, \"weak declaration of %q+D not supported\", decl);\n \n   mark_weak (decl);\n+  if (!lookup_attribute (\"weak\", DECL_ATTRIBUTES (decl)))\n+    DECL_ATTRIBUTES (decl)\n+      = tree_cons (get_identifier (\"weak\"), NULL, DECL_ATTRIBUTES (decl));\n }\n \n static void"}]}