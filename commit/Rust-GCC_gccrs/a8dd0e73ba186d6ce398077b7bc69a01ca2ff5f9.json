{"sha": "a8dd0e73ba186d6ce398077b7bc69a01ca2ff5f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThkZDBlNzNiYTE4NmQ2Y2UzOTgwNzdiN2JjNjlhMDFjYTJmZjVmOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-22T22:41:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-22T22:41:55Z"}, "message": "(gen_lowpart_common): Do nothing if size is greater than twice host\nwordsize, not just if equal.\n\nFrom-SVN: r8552", "tree": {"sha": "8fa4b3be743ab3da99009e53695c83084afcfbbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fa4b3be743ab3da99009e53695c83084afcfbbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8dd0e73ba186d6ce398077b7bc69a01ca2ff5f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8dd0e73ba186d6ce398077b7bc69a01ca2ff5f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8dd0e73ba186d6ce398077b7bc69a01ca2ff5f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8dd0e73ba186d6ce398077b7bc69a01ca2ff5f9/comments", "author": null, "committer": null, "parents": [{"sha": "e33745253e33bdb3cfdaa0608bf8d1f9f6422abf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e33745253e33bdb3cfdaa0608bf8d1f9f6422abf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e33745253e33bdb3cfdaa0608bf8d1f9f6422abf"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d6dc980814cc6f11bc958c575b9b2128a0b16a35", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8dd0e73ba186d6ce398077b7bc69a01ca2ff5f9/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8dd0e73ba186d6ce398077b7bc69a01ca2ff5f9/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=a8dd0e73ba186d6ce398077b7bc69a01ca2ff5f9", "patch": "@@ -651,7 +651,7 @@ gen_lowpart_common (mode, x)\n \t either a reasonable negative value or a reasonable unsigned value\n \t for this mode.  */\n \n-      if (GET_MODE_BITSIZE (mode) == 2 * HOST_BITS_PER_WIDE_INT)\n+      if (GET_MODE_BITSIZE (mode) >= 2 * HOST_BITS_PER_WIDE_INT)\n \treturn x;\n       else if (GET_MODE_BITSIZE (mode) > HOST_BITS_PER_WIDE_INT)\n \treturn 0;"}]}