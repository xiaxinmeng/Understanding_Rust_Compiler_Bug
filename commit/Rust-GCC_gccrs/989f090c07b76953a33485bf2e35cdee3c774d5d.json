{"sha": "989f090c07b76953a33485bf2e35cdee3c774d5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg5ZjA5MGMwN2I3Njk1M2EzMzQ4NWJmMmUzNWNkZWUzYzc3NGQ1ZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-06-05T03:10:46Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-06-05T03:10:46Z"}, "message": "* alpha.md (insxh-1): New insxl pattern for combine.\n\nFrom-SVN: r20239", "tree": {"sha": "7f79bb20c7c1aa49d865832d4e7165f613e7a930", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f79bb20c7c1aa49d865832d4e7165f613e7a930"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/989f090c07b76953a33485bf2e35cdee3c774d5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/989f090c07b76953a33485bf2e35cdee3c774d5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/989f090c07b76953a33485bf2e35cdee3c774d5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/989f090c07b76953a33485bf2e35cdee3c774d5d/comments", "author": null, "committer": null, "parents": [{"sha": "b9e199ac5d521975b00e624d948c6dc42f942aa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9e199ac5d521975b00e624d948c6dc42f942aa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9e199ac5d521975b00e624d948c6dc42f942aa5"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "4cc35197b73e4db93a09e9bd83bf7b3bd52f8cec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/989f090c07b76953a33485bf2e35cdee3c774d5d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/989f090c07b76953a33485bf2e35cdee3c774d5d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=989f090c07b76953a33485bf2e35cdee3c774d5d", "patch": "@@ -1,3 +1,7 @@\n+Fri Jun  5 03:05:34 1998  Richard Henderson  <rth@cygnus.com>\n+\n+\t* alpha.md (insxh-1): New insxl pattern for combine.\n+\n Fri Jun  5 01:12:15 1998  H.J. Lu  (hjl@gnu.org)\n \n \t* i386/i386.c (output_fp_conditional_move): New function"}, {"sha": "6c001e304addc425ea7e4607f382d508753eb68a", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/989f090c07b76953a33485bf2e35cdee3c774d5d/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/989f090c07b76953a33485bf2e35cdee3c774d5d/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=989f090c07b76953a33485bf2e35cdee3c774d5d", "patch": "@@ -1614,6 +1614,39 @@\n   \"insql %1,%2,%0\"\n   [(set_attr \"type\" \"shift\")])\n \n+;; Combine has this sometimes habit of moving the and outside of the\n+;; shift, making life more interesting.\n+\n+(define_insn \"\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(and:DI (ashift:DI (match_operand:DI 1 \"register_operand\" \"r\")\n+\t\t   \t   (match_operand:DI 2 \"mul8_operand\" \"I\"))\n+\t\t(match_operand:DI 3 \"immediate_operand\" \"i\")))]\n+  \"HOST_BITS_PER_WIDE_INT == 64\n+   && GET_CODE (operands[3]) == CONST_INT\n+   && (((unsigned HOST_WIDE_INT) 0xff << INTVAL (operands[2])\n+        == INTVAL (operands[3]))\n+       || ((unsigned HOST_WIDE_INT) 0xffff << INTVAL (operands[2])\n+        == INTVAL (operands[3]))\n+       || ((unsigned HOST_WIDE_INT) 0xffffffff << INTVAL (operands[2])\n+        == INTVAL (operands[3])))\"\n+  \"*\n+{\n+#if HOST_BITS_PER_WIDE_INT == 64\n+  if ((unsigned HOST_WIDE_INT) 0xff << INTVAL (operands[2])\n+      == INTVAL (operands[3]))\n+    return \\\"insbl %1,%s2,%0\\\";\n+  if ((unsigned HOST_WIDE_INT) 0xffff << INTVAL (operands[2])\n+      == INTVAL (operands[3]))\n+    return \\\"inswl %1,%s2,%0\\\";\n+  if ((unsigned HOST_WIDE_INT) 0xffffffff << INTVAL (operands[2])\n+      == INTVAL (operands[3]))\n+    return \\\"insll %1,%s2,%0\\\";\n+#endif\n+  abort();\n+}\"\n+  [(set_attr \"type\" \"shift\")])\n+\n ;; We do not include the insXh insns because they are complex to express\n ;; and it does not appear that we would ever want to generate them.\n ;;"}]}