{"sha": "a3c8d7fbe29d4ab60cc46196a1376854734a4f8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNjOGQ3ZmJlMjlkNGFiNjBjYzQ2MTk2YTEzNzY4NTQ3MzRhNGY4ZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-06-24T12:09:51Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-06-24T12:09:51Z"}, "message": "Fix std::midpoint for denormal values\n\n\t* include/std/numeric (midpoint(T, T)): Change implementation for\n\tfloating-point types to avoid incorrect rounding of denormals.\n\t* testsuite/26_numerics/midpoint/floating.cc: Add check for correct\n\trounding with denormals.\n\t* testsuite/26_numerics/gcd/gcd_neg.cc: Adjust dg-error line numbers.\n\t* testsuite/26_numerics/lcm/lcm_neg.cc: Likewise.\n\nFrom-SVN: r272616", "tree": {"sha": "5443500477c03424be3f577a036c328b5802073c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5443500477c03424be3f577a036c328b5802073c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3c8d7fbe29d4ab60cc46196a1376854734a4f8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3c8d7fbe29d4ab60cc46196a1376854734a4f8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3c8d7fbe29d4ab60cc46196a1376854734a4f8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3c8d7fbe29d4ab60cc46196a1376854734a4f8d/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff164b601b75a9aba47edfaa9a215cb376ab055e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff164b601b75a9aba47edfaa9a215cb376ab055e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff164b601b75a9aba47edfaa9a215cb376ab055e"}], "stats": {"total": 69, "additions": 52, "deletions": 17}, "files": [{"sha": "35c79f933898c7c7a967b1f159b4843c11f8fbaf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3c8d7fbe29d4ab60cc46196a1376854734a4f8d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3c8d7fbe29d4ab60cc46196a1376854734a4f8d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a3c8d7fbe29d4ab60cc46196a1376854734a4f8d", "patch": "@@ -1,5 +1,12 @@\n 2019-06-24  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/std/numeric (midpoint(T, T)): Change implementation for\n+\tfloating-point types to avoid incorrect rounding of denormals.\n+\t* testsuite/26_numerics/midpoint/floating.cc: Add check for correct\n+\trounding with denormals.\n+\t* testsuite/26_numerics/gcd/gcd_neg.cc: Adjust dg-error line numbers.\n+\t* testsuite/26_numerics/lcm/lcm_neg.cc: Likewise.\n+\n \t* testsuite/18_support/headers/cfloat/values_c++17.cc: New test.\n \n 2019-06-20  Jonathan Wakely  <jwakely@redhat.com>"}, {"sha": "af6844697699132f507f04ec64d3016db64412f7", "filename": "libstdc++-v3/include/std/numeric", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3c8d7fbe29d4ab60cc46196a1376854734a4f8d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3c8d7fbe29d4ab60cc46196a1376854734a4f8d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric?ref=a3c8d7fbe29d4ab60cc46196a1376854734a4f8d", "patch": "@@ -69,9 +69,8 @@\n  * @defgroup numerics Numerics\n  *\n  * Components for performing numeric operations. Includes support for\n- * for complex number types, random number generation, numeric\n- * (n-at-a-time) arrays, generalized numeric algorithms, and special\n- * math functions.\n+ * complex number types, random number generation, numeric (n-at-a-time)\n+ * arrays, generalized numeric algorithms, and mathematical special functions.\n  */\n \n #if __cplusplus >= 201402L\n@@ -156,11 +155,22 @@ namespace __detail\n \n #endif // C++17\n \n+_GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace std\n+\n+#endif // C++14\n+\n #if __cplusplus > 201703L\n+#include <limits>\n+#include <bits/std_abs.h>\n+\n+namespace std _GLIBCXX_VISIBILITY(default)\n+{\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // midpoint\n # define __cpp_lib_interpolate 201902L\n \n-template<typename _Tp>\n+  template<typename _Tp>\n     constexpr\n     enable_if_t<__and_v<is_arithmetic<_Tp>, is_same<remove_cv_t<_Tp>, _Tp>,\n \t\t\t__not_<is_same<_Tp, bool>>>,\n@@ -182,11 +192,17 @@ template<typename _Tp>\n \t    }\n \t  return __a + __k * _Tp(_Up(__M - __m) / 2);\n \t}\n-      else\n+      else // is_floating\n \t{\n-\t  return __builtin_isnormal(__a) && __builtin_isnormal(__b)\n-\t    ? __a / 2 + __b / 2\n-\t    : (__a + __b) / 2;\n+\t  constexpr _Tp __lo = numeric_limits<_Tp>::min() * 2;\n+\t  constexpr _Tp __hi = numeric_limits<_Tp>::max() / 2;\n+\t  if (std::abs(__a) <= __hi && std::abs(__b) <= __hi) [[likely]]\n+\t    return (__a + __b) / 2; // always correctly rounded\n+\t  if (std::abs(__a) < __lo) // not safe to halve __a\n+\t    return __a + __b/2;\n+\t  if (std::abs(__b) < __lo) // not safe to halve __b\n+\t    return __a/2 + __b;\n+\t  return __a/2 + __b/2;\t    // otherwise correctly rounded\n \t}\n     }\n \n@@ -197,12 +213,10 @@ template<typename _Tp>\n     {\n       return __a  + (__b - __a) / 2;\n     }\n-#endif // C++20\n-\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace std\n \n-#endif // C++14\n+#endif // C++20\n \n #if __cplusplus > 201402L\n #include <bits/stl_function.h>"}, {"sha": "05e21431313f8745aa88ab5ed4f4f318fd7e4136", "filename": "libstdc++-v3/testsuite/26_numerics/gcd/gcd_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3c8d7fbe29d4ab60cc46196a1376854734a4f8d/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fgcd%2Fgcd_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3c8d7fbe29d4ab60cc46196a1376854734a4f8d/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fgcd%2Fgcd_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fgcd%2Fgcd_neg.cc?ref=a3c8d7fbe29d4ab60cc46196a1376854734a4f8d", "patch": "@@ -46,9 +46,9 @@ test01()\n   std::gcd<const int&, const int&>(0.1, 0.1);   // { dg-error \"from here\" }\n }\n \n+// { dg-error \"integers\" \"\" { target *-*-* } 133 }\n // { dg-error \"integers\" \"\" { target *-*-* } 134 }\n-// { dg-error \"integers\" \"\" { target *-*-* } 135 }\n-// { dg-error \"not bools\" \"\" { target *-*-* } 136 }\n-// { dg-error \"not bools\" \"\" { target *-*-* } 138 }\n+// { dg-error \"not bools\" \"\" { target *-*-* } 135 }\n+// { dg-error \"not bools\" \"\" { target *-*-* } 137 }\n // { dg-prune-output \"deleted function\" }\n // { dg-prune-output \"invalid operands\" }"}, {"sha": "3a0f5bbe3eb35bf6e906ad5bdee0e28d266b5220", "filename": "libstdc++-v3/testsuite/26_numerics/lcm/lcm_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3c8d7fbe29d4ab60cc46196a1376854734a4f8d/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Flcm%2Flcm_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3c8d7fbe29d4ab60cc46196a1376854734a4f8d/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Flcm%2Flcm_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Flcm%2Flcm_neg.cc?ref=a3c8d7fbe29d4ab60cc46196a1376854734a4f8d", "patch": "@@ -46,9 +46,9 @@ test01()\n   std::lcm<const int&, const int&>(0.1, 0.1);   // { dg-error \"from here\" }\n }\n \n+// { dg-error \"integers\" \"\" { target *-*-* } 147 }\n // { dg-error \"integers\" \"\" { target *-*-* } 148 }\n-// { dg-error \"integers\" \"\" { target *-*-* } 149 }\n-// { dg-error \"not bools\" \"\" { target *-*-* } 150 }\n-// { dg-error \"not bools\" \"\" { target *-*-* } 152 }\n+// { dg-error \"not bools\" \"\" { target *-*-* } 149 }\n+// { dg-error \"not bools\" \"\" { target *-*-* } 151 }\n // { dg-prune-output \"deleted function\" }\n // { dg-prune-output \"invalid operands\" }"}, {"sha": "32a966e2c63f9c296ddbf47f58957369d93b778d", "filename": "libstdc++-v3/testsuite/26_numerics/midpoint/floating.cc", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3c8d7fbe29d4ab60cc46196a1376854734a4f8d/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fmidpoint%2Ffloating.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3c8d7fbe29d4ab60cc46196a1376854734a4f8d/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fmidpoint%2Ffloating.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fmidpoint%2Ffloating.cc?ref=a3c8d7fbe29d4ab60cc46196a1376854734a4f8d", "patch": "@@ -20,6 +20,7 @@\n \n #include <numeric>\n #include <limits>\n+#include <cfloat>\n #include <testsuite_hooks.h>\n \n void\n@@ -57,6 +58,19 @@ test03()\n   VERIFY( std::midpoint(9e9l, -9e9l) == 0.0l );\n }\n \n+namespace test04\n+{\n+  // https://gcc.gnu.org/ml/libstdc++/2019-03/msg00065.html\n+  constexpr double d = DBL_MIN + DBL_TRUE_MIN;\n+  static_assert( std::midpoint(d, d) == d );\n+\n+  constexpr float f = FLT_MIN + FLT_TRUE_MIN;\n+  static_assert( std::midpoint(f, f) == f );\n+\n+  constexpr long double l = LDBL_MIN + LDBL_TRUE_MIN;\n+  static_assert( std::midpoint(l, l) == l );\n+}\n+\n int main()\n {\n   test01();"}]}