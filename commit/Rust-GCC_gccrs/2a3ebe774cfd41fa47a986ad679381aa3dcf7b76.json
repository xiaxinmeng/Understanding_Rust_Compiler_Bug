{"sha": "2a3ebe774cfd41fa47a986ad679381aa3dcf7b76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmEzZWJlNzc0Y2ZkNDFmYTQ3YTk4NmFkNjc5MzgxYWEzZGNmN2I3Ng==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-11-27T01:40:01Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-11-27T01:40:01Z"}, "message": "floatunsisf.c, [...]: New files.\n\n\t* config/floatunsisf.c, config/floatunsidf.c,\n\tconfig/floatunsixf.c, config/floatunsitf.c: New files.\n\t* config/ia64/t-hpux: Add floatunsitf.c.\n\t* config/ia64/ia64.c (ia64_init_libfuncs): Use\n\t_U_Qfcnvxuf_dbl_to_quad for unsigned DImode-to-TFmode conversion.\n\nFrom-SVN: r107558", "tree": {"sha": "2db07474144f37c8bebba3285efbcf75df9b6387", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2db07474144f37c8bebba3285efbcf75df9b6387"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b48a88cdcb63e1fb4cf01528d87dafe5d3d9d0f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b48a88cdcb63e1fb4cf01528d87dafe5d3d9d0f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b48a88cdcb63e1fb4cf01528d87dafe5d3d9d0f3"}], "stats": {"total": 76, "additions": 75, "deletions": 1}, "files": [{"sha": "b654b62da7b39624768f53da55a79fa04f97a2f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a3ebe774cfd41fa47a986ad679381aa3dcf7b76", "patch": "@@ -1,3 +1,11 @@\n+2005-11-27  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* config/floatunsisf.c, config/floatunsidf.c,\n+\tconfig/floatunsixf.c, config/floatunsitf.c: New files.\n+\t* config/ia64/t-hpux: Add floatunsitf.c.\n+\t* config/ia64/ia64.c (ia64_init_libfuncs): Use\n+\t_U_Qfcnvxuf_dbl_to_quad for unsigned DImode-to-TFmode conversion.\n+\n 2005-11-26  Richard Henderson  <rth@redhat.com>\n \n \t* c-lex.c (pragma_lex): Rename from c_lex."}, {"sha": "ff28112502b7e95cb4a66dc99a2c91e6aec7e595", "filename": "gcc/config/floatunsidf.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76/gcc%2Fconfig%2Ffloatunsidf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76/gcc%2Fconfig%2Ffloatunsidf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffloatunsidf.c?ref=2a3ebe774cfd41fa47a986ad679381aa3dcf7b76", "patch": "@@ -0,0 +1,15 @@\n+/* Public domain.  */\n+typedef int SItype __attribute__ ((mode (SI)));\n+typedef unsigned int USItype __attribute__ ((mode (SI)));\n+typedef float DFtype __attribute__ ((mode (DF)));\n+\n+DFtype\n+__floatunsidf (USItype u)\n+{\n+  SItype s = (SItype) u;\n+  DFtype r = (DFtype) s;\n+  if (s < 0)\n+    r += (DFtype)2.0 * (DFtype) ((USItype) 1\n+\t\t\t\t << (sizeof (USItype) * __CHAR_BIT__ - 1));\n+  return r;\n+}"}, {"sha": "11d4aa78cbe29d700534a41f677b85cf5b7fce16", "filename": "gcc/config/floatunsisf.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76/gcc%2Fconfig%2Ffloatunsisf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76/gcc%2Fconfig%2Ffloatunsisf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffloatunsisf.c?ref=2a3ebe774cfd41fa47a986ad679381aa3dcf7b76", "patch": "@@ -0,0 +1,18 @@\n+/* Public domain.  */\n+typedef int SItype __attribute__ ((mode (SI)));\n+typedef unsigned int USItype __attribute__ ((mode (SI)));\n+typedef float SFtype __attribute__ ((mode (SF)));\n+\n+SFtype\n+__floatunsisf (USItype u)\n+{\n+  SItype s = (SItype) u;\n+  if (s < 0)\n+    {\n+      /* As in expand_float, compute (u & 1) | (u >> 1) to ensure\n+\t correct rounding if a nonzero bit is shifted out.  */\n+      return (SFtype) 2.0 * (SFtype) (SItype) ((u & 1) | (u >> 1));\n+    }\n+  else\n+    return (SFtype) s;\n+}"}, {"sha": "955d67666c5bb7cbb9b7aac46f57c767e5e4b099", "filename": "gcc/config/floatunsitf.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76/gcc%2Fconfig%2Ffloatunsitf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76/gcc%2Fconfig%2Ffloatunsitf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffloatunsitf.c?ref=2a3ebe774cfd41fa47a986ad679381aa3dcf7b76", "patch": "@@ -0,0 +1,15 @@\n+/* Public domain.  */\n+typedef int SItype __attribute__ ((mode (SI)));\n+typedef unsigned int USItype __attribute__ ((mode (SI)));\n+typedef float TFtype __attribute__ ((mode (TF)));\n+\n+TFtype\n+__floatunsitf (USItype u)\n+{\n+  SItype s = (SItype) u;\n+  TFtype r = (TFtype) s;\n+  if (s < 0)\n+    r += (TFtype)2.0 * (TFtype) ((USItype) 1\n+\t\t\t\t << (sizeof (USItype) * __CHAR_BIT__ - 1));\n+  return r;\n+}"}, {"sha": "52511688dad3bbb0a9ab9dfcc640a4b05496deef", "filename": "gcc/config/floatunsixf.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76/gcc%2Fconfig%2Ffloatunsixf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76/gcc%2Fconfig%2Ffloatunsixf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffloatunsixf.c?ref=2a3ebe774cfd41fa47a986ad679381aa3dcf7b76", "patch": "@@ -0,0 +1,15 @@\n+/* Public domain.  */\n+typedef int SItype __attribute__ ((mode (SI)));\n+typedef unsigned int USItype __attribute__ ((mode (SI)));\n+typedef float XFtype __attribute__ ((mode (XF)));\n+\n+XFtype\n+__floatunsixf (USItype u)\n+{\n+  SItype s = (SItype) u;\n+  XFtype r = (XFtype) s;\n+  if (s < 0)\n+    r += (XFtype)2.0 * (XFtype) ((USItype) 1\n+\t\t\t\t << (sizeof (USItype) * __CHAR_BIT__ - 1));\n+  return r;\n+}"}, {"sha": "72676255c007a4ba30f1cc306194c5f2a2244340", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=2a3ebe774cfd41fa47a986ad679381aa3dcf7b76", "patch": "@@ -8437,6 +8437,9 @@ ia64_init_libfuncs (void)\n \n   set_conv_libfunc (sfloat_optab, TFmode, SImode, \"_U_Qfcnvxf_sgl_to_quad\");\n   set_conv_libfunc (sfloat_optab, TFmode, DImode, \"_U_Qfcnvxf_dbl_to_quad\");\n+  /* HP-UX 11.23 libc does not have a function for unsigned\n+     SImode-to-TFmode conversion.  */\n+  set_conv_libfunc (ufloat_optab, TFmode, DImode, \"_U_Qfcnvxuf_dbl_to_quad\");\n }\n \n /* Rename all the TFmode libfuncs using the HPUX conventions.  */"}, {"sha": "7d294d17457c6f4ca7adfee2e5af0b1a07265b3d", "filename": "gcc/config/ia64/t-hpux", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76/gcc%2Fconfig%2Fia64%2Ft-hpux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76/gcc%2Fconfig%2Fia64%2Ft-hpux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ft-hpux?ref=2a3ebe774cfd41fa47a986ad679381aa3dcf7b76", "patch": "@@ -9,7 +9,7 @@ MULTILIB_MATCHES =\n \n # Support routines for HP-UX 128 bit floats.\n \n-LIB2FUNCS_EXTRA=quadlib.c\n+LIB2FUNCS_EXTRA=quadlib.c $(srcdir)/config/floatunsitf.c\n \n quadlib.c: $(srcdir)/config/ia64/quadlib.c\n \tcat $(srcdir)/config/ia64/quadlib.c > quadlib.c"}]}