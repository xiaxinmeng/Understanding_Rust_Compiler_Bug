{"sha": "6f84708ae065be56867aa161a5e9d07a328a8782", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY4NDcwOGFlMDY1YmU1Njg2N2FhMTYxYTVlOWQwN2EzMjhhODc4Mg==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2003-03-26T19:21:08Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2003-03-26T19:21:08Z"}, "message": "s390.c (s390_optimize_prolog): Do not save/restore registers used for global asm variables.\n\n\t* config/s390/s390.c (s390_optimize_prolog): Do not save/restore\n\tregisters used for global asm variables.\n\t(s390_frame_info, s390_arg_frame_offset): Likewise.\n\t(s390_emit_prologue, s390_emit_epilogue): Likewise.\n\nFrom-SVN: r64902", "tree": {"sha": "ba82244bbf52e3fbe6979b38937df17c5318598c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba82244bbf52e3fbe6979b38937df17c5318598c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f84708ae065be56867aa161a5e9d07a328a8782", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f84708ae065be56867aa161a5e9d07a328a8782", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f84708ae065be56867aa161a5e9d07a328a8782", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f84708ae065be56867aa161a5e9d07a328a8782/comments", "author": null, "committer": null, "parents": [{"sha": "5e8006fa728c84b2075a8ff3540d2528846e862e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e8006fa728c84b2075a8ff3540d2528846e862e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e8006fa728c84b2075a8ff3540d2528846e862e"}], "stats": {"total": 40, "additions": 30, "deletions": 10}, "files": [{"sha": "af1a27d37889470b2c7b5535328bc3c02d5f66f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f84708ae065be56867aa161a5e9d07a328a8782/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f84708ae065be56867aa161a5e9d07a328a8782/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f84708ae065be56867aa161a5e9d07a328a8782", "patch": "@@ -1,3 +1,10 @@\n+2003-03-26  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_optimize_prolog): Do not save/restore\n+\tregisters used for global asm variables.\n+\t(s390_frame_info, s390_arg_frame_offset): Likewise.\n+\t(s390_emit_prologue, s390_emit_epilogue): Likewise.\n+\n 2003-03-26  Vladimir Makarov  <vmakarov@redhat.com>\n \n         * config/rs6000/8540.md: New file."}, {"sha": "befaf8f8481d18c377e0de32c57701a3afe68088", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f84708ae065be56867aa161a5e9d07a328a8782/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f84708ae065be56867aa161a5e9d07a328a8782/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=6f84708ae065be56867aa161a5e9d07a328a8782", "patch": "@@ -4779,11 +4779,21 @@ s390_optimize_prolog (temp_regno)\n   \n   for (i = 6; i < 16; i++)\n     if (regs_ever_live[i])\n-      break;\n+      if (!global_regs[i]\n+\t  || i == STACK_POINTER_REGNUM \n+          || i == RETURN_REGNUM\n+          || i == BASE_REGISTER \n+          || (flag_pic && i == (int)PIC_OFFSET_TABLE_REGNUM))\n+\tbreak;\n \n   for (j = 15; j > i; j--)\n     if (regs_ever_live[j])\n-      break;\n+      if (!global_regs[j]\n+\t  || j == STACK_POINTER_REGNUM \n+          || j == RETURN_REGNUM\n+          || j == BASE_REGISTER \n+          || (flag_pic && j == (int)PIC_OFFSET_TABLE_REGNUM))\n+\tbreak;\n \n   if (i == 16)\n     {\n@@ -5077,7 +5087,7 @@ s390_frame_info ()\n   cfun->machine->save_fprs_p = 0;\n   if (TARGET_64BIT)\n     for (i = 24; i < 32; i++) \n-      if (regs_ever_live[i])\n+      if (regs_ever_live[i] && !global_regs[i])\n \t{\n           cfun->machine->save_fprs_p = 1;\n \t  break;\n@@ -5101,8 +5111,11 @@ s390_frame_info ()\n      prolog/epilog code is modified again.  */\n \n   for (i = 0; i < 16; i++)\n-    gprs_ever_live[i] = regs_ever_live[i];\n+    gprs_ever_live[i] = regs_ever_live[i] && !global_regs[i];\n \n+  if (flag_pic)\n+    gprs_ever_live[PIC_OFFSET_TABLE_REGNUM] =\n+    regs_ever_live[PIC_OFFSET_TABLE_REGNUM];\n   gprs_ever_live[BASE_REGISTER] = 1;\n   gprs_ever_live[RETURN_REGNUM] = 1;\n   gprs_ever_live[STACK_POINTER_REGNUM] = cfun->machine->frame_size > 0;\n@@ -5139,7 +5152,7 @@ s390_arg_frame_offset ()\n   save_fprs_p = 0;\n   if (TARGET_64BIT)\n     for (i = 24; i < 32; i++) \n-      if (regs_ever_live[i])\n+      if (regs_ever_live[i] && !global_regs[i])\n \t{\n           save_fprs_p = 1;\n \t  break;\n@@ -5368,12 +5381,12 @@ s390_emit_prologue ()\n   if (!TARGET_64BIT)\n     {\n       /* Save fpr 4 and 6.  */\n-      if (regs_ever_live[18])\n+      if (regs_ever_live[18] && !global_regs[18])\n \t{\n \t  insn = save_fpr (stack_pointer_rtx, STACK_POINTER_OFFSET - 16, 18);\n \t  RTX_FRAME_RELATED_P (insn) = 1;\n \t}\n-      if (regs_ever_live[19]) \n+      if (regs_ever_live[19] && !global_regs[19])\n \t{\n \t  insn = save_fpr (stack_pointer_rtx, STACK_POINTER_OFFSET - 8, 19); \n \t  RTX_FRAME_RELATED_P (insn) = 1;\n@@ -5425,7 +5438,7 @@ s390_emit_prologue ()\n       insn = emit_insn (gen_add2_insn (temp_reg, GEN_INT(-64)));\n \n       for (i = 24; i < 32; i++)\n-\tif (regs_ever_live[i])\n+\tif (regs_ever_live[i] && !global_regs[i])\n \t  {\n \t    rtx addr = plus_constant (stack_pointer_rtx, \n \t\t\t\t      cfun->machine->frame_size - 64 + (i-24)*8);\n@@ -5523,14 +5536,14 @@ s390_emit_epilogue ()\n     }\n   else\n     {\n-      if (regs_ever_live[18])\n+      if (regs_ever_live[18] && !global_regs[18])\n \t{\n \t  if (area_bottom > STACK_POINTER_OFFSET - 16)\n \t    area_bottom = STACK_POINTER_OFFSET - 16;\n \t  if (area_top < STACK_POINTER_OFFSET - 8)\n \t    area_top = STACK_POINTER_OFFSET - 8;\n \t}\n-      if (regs_ever_live[19])\n+      if (regs_ever_live[19] && !global_regs[19])\n \t{\n \t  if (area_bottom > STACK_POINTER_OFFSET - 8)\n \t    area_bottom = STACK_POINTER_OFFSET - 8;"}]}