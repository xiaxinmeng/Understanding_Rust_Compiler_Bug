{"sha": "9f8aa64ac1bc6b282cb1c7aa362fb59dc6803250", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY4YWE2NGFjMWJjNmIyODJjYjFjN2FhMzYyZmI1OWRjNjgwMzI1MA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-08-04T09:16:52Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-08-04T09:16:52Z"}, "message": "fpu-387.h (get_fpu_trap_exceptions): Add temporary variable to improve generated code.\n\n\t* config/fpu-387.h (get_fpu_trap_exceptions): Add temporary variable\n\tto improve generated code.\n\nFrom-SVN: r226549", "tree": {"sha": "61138ddebd0e04f47cef8b477d8c57f77968a9ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61138ddebd0e04f47cef8b477d8c57f77968a9ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f8aa64ac1bc6b282cb1c7aa362fb59dc6803250", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f8aa64ac1bc6b282cb1c7aa362fb59dc6803250", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f8aa64ac1bc6b282cb1c7aa362fb59dc6803250", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f8aa64ac1bc6b282cb1c7aa362fb59dc6803250/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22a499884f31391a6ab02739861b2b343eebc94e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a499884f31391a6ab02739861b2b343eebc94e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22a499884f31391a6ab02739861b2b343eebc94e"}], "stats": {"total": 44, "additions": 26, "deletions": 18}, "files": [{"sha": "744a913c61f1f56a8053d0faad2598bc86f84732", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8aa64ac1bc6b282cb1c7aa362fb59dc6803250/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8aa64ac1bc6b282cb1c7aa362fb59dc6803250/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=9f8aa64ac1bc6b282cb1c7aa362fb59dc6803250", "patch": "@@ -1,3 +1,8 @@\n+2015-08-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/fpu-387.h (get_fpu_trap_exceptions): Add temporary variable\n+\tto improve generated code.\n+\n 2015-08-04  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/64022"}, {"sha": "b6071afa65aafd1169a1d185ae7baa730d9eaa1a", "filename": "libgfortran/config/fpu-387.h", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8aa64ac1bc6b282cb1c7aa362fb59dc6803250/libgfortran%2Fconfig%2Ffpu-387.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8aa64ac1bc6b282cb1c7aa362fb59dc6803250/libgfortran%2Fconfig%2Ffpu-387.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig%2Ffpu-387.h?ref=9f8aa64ac1bc6b282cb1c7aa362fb59dc6803250", "patch": "@@ -215,28 +215,31 @@ set_fpu (void)\n int\n get_fpu_trap_exceptions (void)\n {\n-  int res = 0;\n   unsigned short cw;\n+  int mask;\n+  int res = 0;\n \n   __asm__ __volatile__ (\"fstcw\\t%0\" : \"=m\" (cw));\n-  cw &= _FPU_MASK_ALL;\n-\n+  mask = cw;\n+  \n   if (has_sse())\n     {\n       unsigned int cw_sse;\n \n       __asm__ __volatile__ (\"%vstmxcsr\\t%0\" : \"=m\" (cw_sse));\n \n       /* The SSE exception masks are shifted by 7 bits.  */\n-      cw = cw | ((cw_sse >> 7) & _FPU_MASK_ALL);\n+      mask |= (cw_sse >> 7);\n     }\n \n-  if (~cw & _FPU_MASK_IM) res |= GFC_FPE_INVALID;\n-  if (~cw & _FPU_MASK_DM) res |= GFC_FPE_DENORMAL;\n-  if (~cw & _FPU_MASK_ZM) res |= GFC_FPE_ZERO;\n-  if (~cw & _FPU_MASK_OM) res |= GFC_FPE_OVERFLOW;\n-  if (~cw & _FPU_MASK_UM) res |= GFC_FPE_UNDERFLOW;\n-  if (~cw & _FPU_MASK_PM) res |= GFC_FPE_INEXACT;\n+  mask = ~mask & _FPU_MASK_ALL;\n+\n+  if (mask & _FPU_MASK_IM) res |= GFC_FPE_INVALID;\n+  if (mask & _FPU_MASK_DM) res |= GFC_FPE_DENORMAL;\n+  if (mask & _FPU_MASK_ZM) res |= GFC_FPE_ZERO;\n+  if (mask & _FPU_MASK_OM) res |= GFC_FPE_OVERFLOW;\n+  if (mask & _FPU_MASK_UM) res |= GFC_FPE_UNDERFLOW;\n+  if (mask & _FPU_MASK_PM) res |= GFC_FPE_INEXACT;\n \n   return res;\n }\n@@ -252,7 +255,7 @@ get_fpu_except_flags (void)\n {\n   unsigned short cw;\n   int excepts;\n-  int result = 0;\n+  int res = 0;\n \n   __asm__ __volatile__ (\"fnstsw\\t%0\" : \"=am\" (cw));\n   excepts = cw;\n@@ -267,14 +270,14 @@ get_fpu_except_flags (void)\n \n   excepts &= _FPU_EX_ALL;\n \n-  if (excepts & _FPU_MASK_IM) result |= GFC_FPE_INVALID;\n-  if (excepts & _FPU_MASK_DM) result |= GFC_FPE_DENORMAL;\n-  if (excepts & _FPU_MASK_ZM) result |= GFC_FPE_ZERO;\n-  if (excepts & _FPU_MASK_OM) result |= GFC_FPE_OVERFLOW;\n-  if (excepts & _FPU_MASK_UM) result |= GFC_FPE_UNDERFLOW;\n-  if (excepts & _FPU_MASK_PM) result |= GFC_FPE_INEXACT;\n+  if (excepts & _FPU_MASK_IM) res |= GFC_FPE_INVALID;\n+  if (excepts & _FPU_MASK_DM) res |= GFC_FPE_DENORMAL;\n+  if (excepts & _FPU_MASK_ZM) res |= GFC_FPE_ZERO;\n+  if (excepts & _FPU_MASK_OM) res |= GFC_FPE_OVERFLOW;\n+  if (excepts & _FPU_MASK_UM) res |= GFC_FPE_UNDERFLOW;\n+  if (excepts & _FPU_MASK_PM) res |= GFC_FPE_INEXACT;\n \n-  return result;\n+  return res;\n }\n \n void"}]}