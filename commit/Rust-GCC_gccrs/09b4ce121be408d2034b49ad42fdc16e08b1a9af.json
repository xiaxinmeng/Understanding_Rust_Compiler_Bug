{"sha": "09b4ce121be408d2034b49ad42fdc16e08b1a9af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDliNGNlMTIxYmU0MDhkMjAzNGI0OWFkNDJmZGMxNmUwOGIxYTlhZg==", "commit": {"author": {"name": "Philippe De Muyter", "email": "phdm@macqel.be", "date": "1998-03-19T20:24:35Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-03-19T20:24:35Z"}, "message": "* libgcc2.c (exit): Do not call __bb_exit_func if HAVE_ATEXIT.\n\nFrom-SVN: r18717", "tree": {"sha": "8d54791c2da0e893598b5a01521039f9a5ee65eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d54791c2da0e893598b5a01521039f9a5ee65eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09b4ce121be408d2034b49ad42fdc16e08b1a9af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09b4ce121be408d2034b49ad42fdc16e08b1a9af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09b4ce121be408d2034b49ad42fdc16e08b1a9af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09b4ce121be408d2034b49ad42fdc16e08b1a9af/comments", "author": {"login": "phdm", "id": 2923420, "node_id": "MDQ6VXNlcjI5MjM0MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2923420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phdm", "html_url": "https://github.com/phdm", "followers_url": "https://api.github.com/users/phdm/followers", "following_url": "https://api.github.com/users/phdm/following{/other_user}", "gists_url": "https://api.github.com/users/phdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/phdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phdm/subscriptions", "organizations_url": "https://api.github.com/users/phdm/orgs", "repos_url": "https://api.github.com/users/phdm/repos", "events_url": "https://api.github.com/users/phdm/events{/privacy}", "received_events_url": "https://api.github.com/users/phdm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba3ad5e002ee9c9523e4b61eb47b1b510d8841ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba3ad5e002ee9c9523e4b61eb47b1b510d8841ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba3ad5e002ee9c9523e4b61eb47b1b510d8841ef"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "d587b1ed1bfa635f455ade3de2cb206521ed61aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b4ce121be408d2034b49ad42fdc16e08b1a9af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b4ce121be408d2034b49ad42fdc16e08b1a9af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09b4ce121be408d2034b49ad42fdc16e08b1a9af", "patch": "@@ -1,5 +1,7 @@\n Thu Mar 19 20:30:31 1998  Philippe De Muyter  <phdm@macqel.be>\n \n+\t* libgcc2.c (exit): Do not call __bb_exit_func if HAVE_ATEXIT.\n+\n \t* fold-const.c (fold): Replace sign-extension of a zero extended\n \tvalue by a single zero extension.\n "}, {"sha": "663609b00fa6f16fed33e387496a0f05a0c3cc7d", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b4ce121be408d2034b49ad42fdc16e08b1a9af/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b4ce121be408d2034b49ad42fdc16e08b1a9af/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=09b4ce121be408d2034b49ad42fdc16e08b1a9af", "patch": "@@ -2984,10 +2984,16 @@ exit (int status)\n #else /* No NEED_ATEXIT */\n   __do_global_dtors ();\n #endif /* No NEED_ATEXIT */\n-#endif\n+#endif /* !defined (INIT_SECTION_ASM_OP) || !defined (OBJECT_FORMAT_ELF) */\n+/* In gbl-ctors.h, ON_EXIT is defined if HAVE_ATEXIT is defined.  In\n+__bb_init_func and _bb_init_prg, __bb_exit_func is registered with ON_EXIT if\n+ON_EXIT is defined.  Thus we must not call __bb_exit_func here anymore if\n+HAVE_ATEXIT is defined. */\n+#ifndef HAVE_ATEXIT\n #ifndef inhibit_libc\n   __bb_exit_func ();\n #endif\n+#endif /* !HAVE_ATEXIT */\n #ifdef EXIT_BODY\n   EXIT_BODY;\n #else"}]}