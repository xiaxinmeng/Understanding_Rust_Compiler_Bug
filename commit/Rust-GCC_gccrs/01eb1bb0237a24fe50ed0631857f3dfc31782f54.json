{"sha": "01eb1bb0237a24fe50ed0631857f3dfc31782f54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFlYjFiYjAyMzdhMjRmZTUwZWQwNjMxODU3ZjNkZmMzMTc4MmY1NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-03T09:44:24Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-03T09:44:24Z"}, "message": "s390: Fix --with-arch=... --with-tune=... [PR26877]\n\nIn Fedora we configure GCC with --with-arch=zEC12 --with-tune=z13 right now\nand furthermore redhat-rpm-config adds to rpm packages -march=zEC12 -mtune=z13\noptions (among others).  While looking at the git compilation, I've been\nsurprised that -O2 actually behaves differently from -O2 -mtune=z13 in this\nconfiguration, and indeed, seems --with-tune= is completely ignored on s390\nif --with-arch= is specified.\n\ni386 had the same problem, but got that fixed in 2006, see PR26877.\nThe thing is that for tune, we add -mtune=%(VALUE) only if neither -mtune=\nnor -march= is present, but as arch is processed first, it adds\n-march=%(VALUE) first and then -march= is always present and so -mtune= is\nnever added.\nBy reordering it in OPTION_DEFAULT_SPECS, we process tune first, add the\ndefault -mtune=%(VALUE) if -mtune= or -march= isn't seen, and then\nadd -march=%(VALUE) if -march= isn't seen.  It is true that cc1 etc.\nwill be then invoked with -mtune=z13 -march=zEC12, but like if the user\nspecifies it in that order, it should still use z13 tuning and zEC12\nISA set.\n\n2020-03-03  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/26877\n\t* config/s390/s390.h (OPTION_DEFAULT_SPECS): Reorder.", "tree": {"sha": "e1680867f5d621a6b63db5d30740b6c518b83d44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1680867f5d621a6b63db5d30740b6c518b83d44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01eb1bb0237a24fe50ed0631857f3dfc31782f54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01eb1bb0237a24fe50ed0631857f3dfc31782f54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01eb1bb0237a24fe50ed0631857f3dfc31782f54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01eb1bb0237a24fe50ed0631857f3dfc31782f54/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ab503d34f2a8c22262ceefea6c882ae2ff75230", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ab503d34f2a8c22262ceefea6c882ae2ff75230", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ab503d34f2a8c22262ceefea6c882ae2ff75230"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "08ce80e25e442efa5ef3b64450b3c3528fccc99e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01eb1bb0237a24fe50ed0631857f3dfc31782f54/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01eb1bb0237a24fe50ed0631857f3dfc31782f54/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01eb1bb0237a24fe50ed0631857f3dfc31782f54", "patch": "@@ -1,5 +1,8 @@\n 2020-03-03  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/26877\n+\t* config/s390/s390.h (OPTION_DEFAULT_SPECS): Reorder.\n+\n \tPR rtl-optimization/94002\n \t* explow.c (plus_constant): Punt if cst has VOIDmode and\n \tget_pool_mode is different from mode."}, {"sha": "2e29dbe97e872f2f5c01f6bbe634da4cc6a10462", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01eb1bb0237a24fe50ed0631857f3dfc31782f54/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01eb1bb0237a24fe50ed0631857f3dfc31782f54/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=01eb1bb0237a24fe50ed0631857f3dfc31782f54", "patch": "@@ -227,11 +227,13 @@ enum processor_flags\n #define TARGET_DEFAULT             0\n #endif\n \n-/* Support for configure-time defaults.  */\n+/* Support for configure-time defaults.\n+   The order here is important so that -march doesn't squash the\n+   tune values.  */\n #define OPTION_DEFAULT_SPECS\t\t\t\t\t\\\n   { \"mode\", \"%{!mesa:%{!mzarch:-m%(VALUE)}}\" },\t\t\t\\\n-  { \"arch\", \"%{!march=*:-march=%(VALUE)}\" },\t\t\t\\\n-  { \"tune\", \"%{!mtune=*:%{!march=*:-mtune=%(VALUE)}}\" }\n+  { \"tune\", \"%{!mtune=*:%{!march=*:-mtune=%(VALUE)}}\" },\t\\\n+  { \"arch\", \"%{!march=*:-march=%(VALUE)}\" }\n \n #ifdef __s390__\n extern const char *s390_host_detect_local_cpu (int argc, const char **argv);"}]}