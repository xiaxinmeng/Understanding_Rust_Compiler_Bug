{"sha": "eb1474baeebc8263d54ed50d532f40f777d5fabd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIxNDc0YmFlZWJjODI2M2Q1NGVkNTBkNTMyZjQwZjc3N2Q1ZmFiZA==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2019-03-15T22:20:20Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gcc.gnu.org", "date": "2019-03-15T22:20:20Z"}, "message": "re PR fortran/60091 (Misleading error messages in rank-2 pointer assignment to rank-1 target)\n\n2019-03-15  Harald Anlauf  <anlauf@gmx.de>\n\n\tPR fortran/60091\n\t* expr.c (gfc_check_pointer_assign): Correct and improve error\n\tmessages for invalid pointer assignments.\n\n\tPR fortran/60091\n\t* gfortran.dg/pointer_remapping_3.f08: Adjust error messages.\n\t* gfortran.dg/pointer_remapping_7.f90: Adjust error message.\n\nFrom-SVN: r269717", "tree": {"sha": "576f2a50e290e3b1d4c62e1669f984c7a3667ae1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/576f2a50e290e3b1d4c62e1669f984c7a3667ae1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb1474baeebc8263d54ed50d532f40f777d5fabd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1474baeebc8263d54ed50d532f40f777d5fabd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb1474baeebc8263d54ed50d532f40f777d5fabd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1474baeebc8263d54ed50d532f40f777d5fabd/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "850b8aa3091a2c62200bde93fc61101e4dec45b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/850b8aa3091a2c62200bde93fc61101e4dec45b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/850b8aa3091a2c62200bde93fc61101e4dec45b6"}], "stats": {"total": 87, "additions": 67, "deletions": 20}, "files": [{"sha": "754bfebb81864c135630acb166c6648376c3a28b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1474baeebc8263d54ed50d532f40f777d5fabd/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1474baeebc8263d54ed50d532f40f777d5fabd/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=eb1474baeebc8263d54ed50d532f40f777d5fabd", "patch": "@@ -1,3 +1,9 @@\n+2019-03-15  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/60091\n+\t* expr.c (gfc_check_pointer_assign): Correct and improve error\n+\tmessages for invalid pointer assignments.\n+\n 2019-03-14  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \t* gfortran.texi: Document Q edit descriptor under"}, {"sha": "d654f4e74d04fd6b46a1d38f124ecef2520b9fb6", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 47, "deletions": 13, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1474baeebc8263d54ed50d532f40f777d5fabd/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1474baeebc8263d54ed50d532f40f777d5fabd/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=eb1474baeebc8263d54ed50d532f40f777d5fabd", "patch": "@@ -3703,6 +3703,7 @@ gfc_check_pointer_assign (gfc_expr *lvalue, gfc_expr *rvalue,\n   gfc_ref *ref;\n   bool is_pure, is_implicit_pure, rank_remap;\n   int proc_pointer;\n+  bool same_rank;\n \n   lhs_attr = gfc_expr_attr (lvalue);\n   if (lvalue->ts.type == BT_UNKNOWN && !lhs_attr.proc_pointer)\n@@ -3724,6 +3725,7 @@ gfc_check_pointer_assign (gfc_expr *lvalue, gfc_expr *rvalue,\n   proc_pointer = lvalue->symtree->n.sym->attr.proc_pointer;\n \n   rank_remap = false;\n+  same_rank = lvalue->rank == rvalue->rank;\n   for (ref = lvalue->ref; ref; ref = ref->next)\n     {\n       if (ref->type == REF_COMPONENT)\n@@ -3748,34 +3750,66 @@ gfc_check_pointer_assign (gfc_expr *lvalue, gfc_expr *rvalue,\n \t\t\t       lvalue->symtree->n.sym->name, &lvalue->where))\n \t    return false;\n \n-\t  /* When bounds are given, all lbounds are necessary and either all\n-\t     or none of the upper bounds; no strides are allowed.  If the\n-\t     upper bounds are present, we may do rank remapping.  */\n+\t  /* Fortran standard (e.g. F2018, 10.2.2 Pointer assignment):\n+\t   *\n+\t   * (C1017) If bounds-spec-list is specified, the number of\n+\t   * bounds-specs shall equal the rank of data-pointer-object.\n+\t   *\n+\t   * If bounds-spec-list appears, it specifies the lower bounds.\n+\t   *\n+\t   * (C1018) If bounds-remapping-list is specified, the number of\n+\t   * bounds-remappings shall equal the rank of data-pointer-object.\n+\t   *\n+\t   * If bounds-remapping-list appears, it specifies the upper and\n+\t   * lower bounds of each dimension of the pointer; the pointer target\n+\t   * shall be simply contiguous or of rank one.\n+\t   *\n+\t   * (C1019) If bounds-remapping-list is not specified, the ranks of\n+\t   * data-pointer-object and data-target shall be the same.\n+\t   *\n+\t   * Thus when bounds are given, all lbounds are necessary and either\n+\t   * all or none of the upper bounds; no strides are allowed.  If the\n+\t   * upper bounds are present, we may do rank remapping.  */\n \t  for (dim = 0; dim < ref->u.ar.dimen; ++dim)\n \t    {\n-\t      if (!ref->u.ar.start[dim]\n-\t\t  || ref->u.ar.dimen_type[dim] != DIMEN_RANGE)\n+\t      if (ref->u.ar.stride[dim])\n \t\t{\n-\t\t  gfc_error (\"Lower bound has to be present at %L\",\n+\t\t  gfc_error (\"Stride must not be present at %L\",\n \t\t\t     &lvalue->where);\n \t\t  return false;\n \t\t}\n-\t      if (ref->u.ar.stride[dim])\n+\t      if (!same_rank && (!ref->u.ar.start[dim] ||!ref->u.ar.end[dim]))\n \t\t{\n-\t\t  gfc_error (\"Stride must not be present at %L\",\n-\t\t\t     &lvalue->where);\n+\t\t  gfc_error (\"Rank remapping requires a \"\n+\t\t\t     \"list of %<lower-bound : upper-bound%> \"\n+\t\t\t     \"specifications at %L\", &lvalue->where);\n+\t\t  return false;\n+\t\t}\n+\t      if (!ref->u.ar.start[dim]\n+\t\t  || ref->u.ar.dimen_type[dim] != DIMEN_RANGE)\n+\t\t{\n+\t\t  gfc_error (\"Expected list of %<lower-bound :%> or \"\n+\t\t\t     \"list of %<lower-bound : upper-bound%> \"\n+\t\t\t     \"specifications at %L\", &lvalue->where);\n \t\t  return false;\n \t\t}\n \n \t      if (dim == 0)\n \t\trank_remap = (ref->u.ar.end[dim] != NULL);\n \t      else\n \t\t{\n-\t\t  if ((rank_remap && !ref->u.ar.end[dim])\n-\t\t      || (!rank_remap && ref->u.ar.end[dim]))\n+\t\t  if ((rank_remap && !ref->u.ar.end[dim]))\n+\t\t    {\n+\t\t      gfc_error (\"Rank remapping requires a \"\n+\t\t\t\t \"list of %<lower-bound : upper-bound%> \"\n+\t\t\t\t \"specifications at %L\", &lvalue->where);\n+\t\t      return false;\n+\t\t    }\n+\t\t  if (!rank_remap && ref->u.ar.end[dim])\n \t\t    {\n-\t\t      gfc_error (\"Either all or none of the upper bounds\"\n-\t\t\t\t \" must be specified at %L\", &lvalue->where);\n+\t\t      gfc_error (\"Expected list of %<lower-bound :%> or \"\n+\t\t\t\t \"list of %<lower-bound : upper-bound%> \"\n+\t\t\t\t \"specifications at %L\", &lvalue->where);\n \t\t      return false;\n \t\t    }\n \t\t}"}, {"sha": "cad9617fc6ffd5e1a961f6f207aabff088253586", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1474baeebc8263d54ed50d532f40f777d5fabd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1474baeebc8263d54ed50d532f40f777d5fabd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eb1474baeebc8263d54ed50d532f40f777d5fabd", "patch": "@@ -1,3 +1,9 @@\n+2019-03-15  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/60091\n+\t* gfortran.dg/pointer_remapping_3.f08: Adjust error messages.\n+\t* gfortran.dg/pointer_remapping_7.f90: Adjust error message.\n+\n 2019-03-15  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n \n \tPR target/87532"}, {"sha": "c498a364507c98bb964b1b161bf994cb18bd0126", "filename": "gcc/testsuite/gfortran.dg/pointer_remapping_3.f08", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1474baeebc8263d54ed50d532f40f777d5fabd/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_remapping_3.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1474baeebc8263d54ed50d532f40f777d5fabd/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_remapping_3.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_remapping_3.f08?ref=eb1474baeebc8263d54ed50d532f40f777d5fabd", "patch": "@@ -3,6 +3,7 @@\n \n ! PR fortran/29785\n ! PR fortran/45016\n+! PR fortran/60091\n ! Check for pointer remapping compile-time errors.\n \n ! Contributed by Daniel Kraft, d@domob.eu.\n@@ -13,13 +14,13 @@ PROGRAM main\n   INTEGER, POINTER :: vec(:), mat(:, :)\n \n   ! Existence of reference elements.\n-  vec(:) => arr ! { dg-error \"Lower bound has to be present\" }\n-  vec(5:7:1) => arr ! { dg-error \"Stride must not be present\" }\n-  mat(1:, 2:5) => arr ! { dg-error \"Either all or none of the upper bounds\" }\n-  mat(2, 6) => arr ! { dg-error \"Expected bounds specification\" }\n+  vec(:) => arr ! { dg-error \"or list of 'lower-bound : upper-bound'\" }\n+  vec(5:7:1)  => arr ! { dg-error \"Stride must not be present\" }\n+  mat(1:,2:5) => arr ! { dg-error \"Rank remapping requires a list of \" }\n+  mat(1:3,4:) => arr ! { dg-error \"Rank remapping requires a list of \" }\n+  mat(2, 6)   => arr ! { dg-error \"Expected bounds specification\" }\n \n-  ! This is bound remapping not rank remapping!\n-  mat(1:, 3:) => arr ! { dg-error \"Different ranks\" }\n+  mat(1:,3:)  => arr ! { dg-error \"Rank remapping requires a list of \" }\n \n   ! Invalid remapping target; for non-rank one we already check the F2008\n   ! error elsewhere.  Here, test that not-contiguous target is disallowed"}, {"sha": "6006807fc34a80f22d94203920d8326a78c9e7a5", "filename": "gcc/testsuite/gfortran.dg/pointer_remapping_7.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1474baeebc8263d54ed50d532f40f777d5fabd/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_remapping_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1474baeebc8263d54ed50d532f40f777d5fabd/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_remapping_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_remapping_7.f90?ref=eb1474baeebc8263d54ed50d532f40f777d5fabd", "patch": "@@ -4,5 +4,5 @@\n !\n   integer, target :: A(100)\n   integer,pointer :: P(:,:)\n-  p(10,1:) => A  ! { dg-error \"Lower bound has to be present\" }\n+  p(10,1:) => A  ! { dg-error \"or list of 'lower-bound : upper-bound'\" }\n   end"}]}