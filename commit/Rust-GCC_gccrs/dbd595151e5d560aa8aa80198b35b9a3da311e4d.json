{"sha": "dbd595151e5d560aa8aa80198b35b9a3da311e4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJkNTk1MTUxZTVkNTYwYWE4YWE4MDE5OGIzNWI5YTNkYTMxMWU0ZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-05-24T11:31:11Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-05-24T11:31:11Z"}, "message": "re PR middle-end/90607 (gcc.dg/pr53265.c FAILs)\n\n2019-05-24  Richard Biener  <rguenther@suse.de>\n\n\tPR testsuite/90607\n\t* tree-loop-distribution.c (struct partition): Add location\n\tmember.\n\t(partition_alloc): Initialize all fields.\n\t(generate_memset_builtin): Use the location recorded in the\n\tpartition for the generated call.\n\t(generate_memcpy_builtin): Likewise.\n\t(classify_partition): Record the location of a single store\n\tas location for the partition.\n\n\t* gcc.dg/pr53265.c: Amend for new expected diagnostic.\n\nFrom-SVN: r271601", "tree": {"sha": "5b585983ffe7669b6ef450bc3880e4140d99ba47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b585983ffe7669b6ef450bc3880e4140d99ba47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbd595151e5d560aa8aa80198b35b9a3da311e4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbd595151e5d560aa8aa80198b35b9a3da311e4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbd595151e5d560aa8aa80198b35b9a3da311e4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbd595151e5d560aa8aa80198b35b9a3da311e4d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3258c2d6fb886798b320b33b832ee5747f7c0de8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3258c2d6fb886798b320b33b832ee5747f7c0de8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3258c2d6fb886798b320b33b832ee5747f7c0de8"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "d731bed21a39f7c116557133ded444321496dda8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbd595151e5d560aa8aa80198b35b9a3da311e4d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbd595151e5d560aa8aa80198b35b9a3da311e4d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dbd595151e5d560aa8aa80198b35b9a3da311e4d", "patch": "@@ -1,3 +1,15 @@\n+2019-05-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR testsuite/90607\n+\t* tree-loop-distribution.c (struct partition): Add location\n+\tmember.\n+\t(partition_alloc): Initialize all fields.\n+\t(generate_memset_builtin): Use the location recorded in the\n+\tpartition for the generated call.\n+\t(generate_memcpy_builtin): Likewise.\n+\t(classify_partition): Record the location of a single store\n+\tas location for the partition.\n+\n 2019-05-24  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* config/gcn/gcn.c (gcn_expand_prologue): Use gen_addsi3_scalar_carry"}, {"sha": "95b0c9db5674e0dd5eb034d15f2f27ae74eaab62", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbd595151e5d560aa8aa80198b35b9a3da311e4d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbd595151e5d560aa8aa80198b35b9a3da311e4d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dbd595151e5d560aa8aa80198b35b9a3da311e4d", "patch": "@@ -1,3 +1,8 @@\n+2019-05-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR testsuite/90607\n+\t* gcc.dg/pr53265.c: Amend for new expected diagnostic.\n+\n 2019-05-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/90106"}, {"sha": "a72721194c17631aba90eb0d5397e7a8a18e3d83", "filename": "gcc/testsuite/gcc.dg/pr53265.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbd595151e5d560aa8aa80198b35b9a3da311e4d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr53265.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbd595151e5d560aa8aa80198b35b9a3da311e4d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr53265.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr53265.c?ref=dbd595151e5d560aa8aa80198b35b9a3da311e4d", "patch": "@@ -38,7 +38,8 @@ fn3 (void)\n   for (i = 0; i < (int) (sizeof (a) / sizeof (a[0])); i++)\t/* { dg-message \"note: within this loop\" } */\n     {\n       c[i + 8] = b[i];\t/* { dg-warning \"8 invokes undefined behavior\" } */\n-      a[i + 8] = b[i + 8];\n+\t/* { dg-warning \"out of the bounds\" \"\" { target *-*-* } .-1 } */\n+      a[i + 8] = b[i + 8]; /* { dg-warning \"out of the bounds\" } */\n     }\n   bar (a);\n   bar (c);"}, {"sha": "b2f2fd225a47bab6483e2102cd2d449c4dc9aa73", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbd595151e5d560aa8aa80198b35b9a3da311e4d/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbd595151e5d560aa8aa80198b35b9a3da311e4d/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=dbd595151e5d560aa8aa80198b35b9a3da311e4d", "patch": "@@ -636,6 +636,7 @@ struct partition\n   bitmap stmts;\n   /* True if the partition defines variable which is used outside of loop.  */\n   bool reduction_p;\n+  location_t loc;\n   enum partition_kind kind;\n   enum partition_type type;\n   /* Data references in the partition.  */\n@@ -653,7 +654,9 @@ partition_alloc (void)\n   partition *partition = XCNEW (struct partition);\n   partition->stmts = BITMAP_ALLOC (NULL);\n   partition->reduction_p = false;\n+  partition->loc = UNKNOWN_LOCATION;\n   partition->kind = PKIND_NORMAL;\n+  partition->type = PTYPE_PARALLEL;\n   partition->datarefs = BITMAP_ALLOC (NULL);\n   return partition;\n }\n@@ -1028,6 +1031,7 @@ generate_memset_builtin (struct loop *loop, partition *partition)\n \n   fn = build_fold_addr_expr (builtin_decl_implicit (BUILT_IN_MEMSET));\n   fn_call = gimple_build_call (fn, 3, mem, val, nb_bytes);\n+  gimple_set_location (fn_call, partition->loc);\n   gsi_insert_after (&gsi, fn_call, GSI_CONTINUE_LINKING);\n   fold_stmt (&gsi);\n \n@@ -1072,6 +1076,7 @@ generate_memcpy_builtin (struct loop *loop, partition *partition)\n \t\t\t\t  false, GSI_CONTINUE_LINKING);\n   fn = build_fold_addr_expr (builtin_decl_implicit (kind));\n   fn_call = gimple_build_call (fn, 3, dest, src, nb_bytes);\n+  gimple_set_location (fn_call, partition->loc);\n   gsi_insert_after (&gsi, fn_call, GSI_CONTINUE_LINKING);\n   fold_stmt (&gsi);\n \n@@ -1706,6 +1711,8 @@ classify_partition (loop_p loop, struct graph *rdg, partition *partition,\n   if (!find_single_drs (loop, rdg, partition, &single_st, &single_ld))\n     return;\n \n+  partition->loc = gimple_location (DR_STMT (single_st));\n+\n   /* Classify the builtin kind.  */\n   if (single_ld == NULL)\n     classify_builtin_st (loop, partition, single_st);"}]}