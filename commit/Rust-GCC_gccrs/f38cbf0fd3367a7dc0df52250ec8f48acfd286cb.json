{"sha": "f38cbf0fd3367a7dc0df52250ec8f48acfd286cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM4Y2JmMGZkMzM2N2E3ZGMwZGY1MjI1MGVjOGY0OGFjZmQyODZjYg==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1999-02-25T11:16:17Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1999-02-25T11:16:17Z"}, "message": "rtl.h (insn_first_p): Don't declare.\n\n\t* rtl.h (insn_first_p): Don't declare.\n\t* rtlanal.c (insn_first_p): Delete.\n\t* loop.c (loop_insn_first_p): Faster implementation.\n\nFrom-SVN: r25436", "tree": {"sha": "b7142fcf64245477de6a9288ec0bd85da437e5b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7142fcf64245477de6a9288ec0bd85da437e5b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f38cbf0fd3367a7dc0df52250ec8f48acfd286cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f38cbf0fd3367a7dc0df52250ec8f48acfd286cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f38cbf0fd3367a7dc0df52250ec8f48acfd286cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f38cbf0fd3367a7dc0df52250ec8f48acfd286cb/comments", "author": null, "committer": null, "parents": [{"sha": "dfa08768aa9e461d52b3c5f5e6840f2699be21ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfa08768aa9e461d52b3c5f5e6840f2699be21ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfa08768aa9e461d52b3c5f5e6840f2699be21ab"}], "stats": {"total": 55, "additions": 27, "deletions": 28}, "files": [{"sha": "b1d72eed3f906e31360bb31cd06c477b1b9bc51e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f38cbf0fd3367a7dc0df52250ec8f48acfd286cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f38cbf0fd3367a7dc0df52250ec8f48acfd286cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f38cbf0fd3367a7dc0df52250ec8f48acfd286cb", "patch": "@@ -1,3 +1,9 @@\n+Thu Feb 25 19:13:42 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* rtl.h (insn_first_p): Don't declare.\n+\t* rtlanal.c (insn_first_p): Delete.\n+\t* loop.c (loop_insn_first_p): Faster implementation.\n+\n Thu Feb 25 10:44:35 1999  Richard Earnshaw (rearnsha@arm.com)\n \n \t* arm.h (TARGET_SWITCHES): Delete deprecated switches -m[236]."}, {"sha": "c5666f97e4007aad4a610113c67f81633de51ef5", "filename": "gcc/loop.c", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f38cbf0fd3367a7dc0df52250ec8f48acfd286cb/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f38cbf0fd3367a7dc0df52250ec8f48acfd286cb/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=f38cbf0fd3367a7dc0df52250ec8f48acfd286cb", "patch": "@@ -8106,18 +8106,32 @@ maybe_eliminate_biv (bl, loop_start, end, eliminate_p, threshold, insn_count)\n }\n \f\n /* INSN and REFERENCE are instructions in the same insn chain.\n-   Return non-zero if INSN is first.\n-   This is like insn_first_p, except that we use the luid information if\n-   available.  */\n+   Return non-zero if INSN is first.  */\n \n int\n loop_insn_first_p (insn, reference)\n      rtx insn, reference;\n {\n-  return ((INSN_UID (insn) < max_uid_for_loop\n-\t   && INSN_UID (reference) < max_uid_for_loop)\n-\t  ? INSN_LUID (insn) < INSN_LUID (reference)\n-\t  : insn_first_p (insn, reference));\n+  rtx p, q;\n+\n+  for (p = insn, q = reference; ;)\n+    {\n+      /* Start with test for not first so that INSN == REFERENCE yields not\n+         first.  */\n+      if (q == insn || ! p)\n+        return 0;\n+      if (p == reference || ! q)\n+        return 1;\n+\n+      if (INSN_UID (p) < max_uid_for_loop\n+\t  && INSN_UID (q) < max_uid_for_loop)\n+\treturn INSN_LUID (p) < INSN_LUID (q);\n+\n+      if (INSN_UID (p) >= max_uid_for_loop)\n+\tp = NEXT_INSN (p);\n+      if (INSN_UID (q) >= max_uid_for_loop)\n+\tq = NEXT_INSN (q);\n+    }\n }\n \n /* We are trying to eliminate BIV in INSN using GIV.  Return non-zero if"}, {"sha": "3d51c88ad1e1117b4510d0e4454373f6641180d4", "filename": "gcc/rtl.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f38cbf0fd3367a7dc0df52250ec8f48acfd286cb/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f38cbf0fd3367a7dc0df52250ec8f48acfd286cb/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=f38cbf0fd3367a7dc0df52250ec8f48acfd286cb", "patch": "@@ -1036,7 +1036,6 @@ extern rtx replace_regs\t\t\tPROTO((rtx, rtx *, int, int));\n extern int computed_jump_p\t\tPROTO((rtx));\n typedef int (*rtx_function)             PROTO((rtx *, void *));\n extern int for_each_rtx                 PROTO((rtx *, rtx_function, void *));\n-extern int insn_first_p\t\t\tPROTO((rtx, rtx));\n extern rtx regno_use_in\t\t\tPROTO((int, rtx));\n \n /* flow.c */"}, {"sha": "d061273a172135b67cd8c0895820d05216f6ffb3", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f38cbf0fd3367a7dc0df52250ec8f48acfd286cb/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f38cbf0fd3367a7dc0df52250ec8f48acfd286cb/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=f38cbf0fd3367a7dc0df52250ec8f48acfd286cb", "patch": "@@ -2204,26 +2204,6 @@ for_each_rtx (x, f, data)\n   return 0;\n }\n \n-/* INSN and REFERENCE are instructions in the same insn chain.\n-   Return non-zero if INSN is first.  */\n-int\n-insn_first_p (insn, reference)\n-     rtx insn, reference;\n-{\n-  rtx p, q;\n-\n-  for (p = insn, q = reference; ; p = NEXT_INSN (p), q = NEXT_INSN (q))\n-    {\n-      /* Start with test for not first so that INSN == REFERENCE yields not\n-\t first.  */\n-      if (q == insn || ! p)\n-\treturn 0;\n-      if (p == reference || ! q)\n-\treturn 1;\n-    }\n-}\n-\n-\n /* Searches X for any reference to REGNO, returning the rtx of the\n    reference found if any.  Otherwise, returns NULL_RTX.  */\n "}]}