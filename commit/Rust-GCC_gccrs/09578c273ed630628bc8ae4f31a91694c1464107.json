{"sha": "09578c273ed630628bc8ae4f31a91694c1464107", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk1NzhjMjczZWQ2MzA2MjhiYzhhZTRmMzFhOTE2OTRjMTQ2NDEwNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-20T22:48:39Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-20T22:48:39Z"}, "message": "(output_inline_function): Turn on flag_no_inline to avoid function integration...\n\n(output_inline_function): Turn on flag_no_inline to avoid function\nintegration once we begin writing deferred output functions.\n\nFrom-SVN: r10488", "tree": {"sha": "9d676cfed425cd55b93c8c0b4027e2482610fc1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d676cfed425cd55b93c8c0b4027e2482610fc1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09578c273ed630628bc8ae4f31a91694c1464107", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09578c273ed630628bc8ae4f31a91694c1464107", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09578c273ed630628bc8ae4f31a91694c1464107", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09578c273ed630628bc8ae4f31a91694c1464107/comments", "author": null, "committer": null, "parents": [{"sha": "d904e9ed26fdf01cd9ba844de0563bab3ea79b3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d904e9ed26fdf01cd9ba844de0563bab3ea79b3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d904e9ed26fdf01cd9ba844de0563bab3ea79b3c"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "fcd242c9823924563ea9496a9f531ae0a33206f1", "filename": "gcc/integrate.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09578c273ed630628bc8ae4f31a91694c1464107/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09578c273ed630628bc8ae4f31a91694c1464107/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=09578c273ed630628bc8ae4f31a91694c1464107", "patch": "@@ -707,10 +707,10 @@ copy_decl_rtls (block)\n    modified.  In the second case, FNDECL is used for the last time,\n    so modifying the rtl is not a problem.\n \n-   ??? Actually, we do not verify that FNDECL is not inline expanded\n-   by other functions which must also be written down at the end\n-   of compilation.  We could set flag_no_inline to nonzero when\n-   the time comes to write down such functions.  */\n+   We don't have to worry about FNDECL being inline expanded by\n+   other functions which are written at the end of compilation\n+   because flag_no_inline is turned on when we begin writing\n+   functions at the end of compilation.  */\n \n void\n save_for_inline_nocopy (fndecl)\n@@ -3003,6 +3003,7 @@ output_inline_function (fndecl)\n {\n   rtx head;\n   rtx last;\n+  int save_flag_no_inline = flag_no_inline;\n \n   if (output_bytecode)\n     {\n@@ -3097,8 +3098,15 @@ output_inline_function (fndecl)\n   /* We're not deferring this any longer.  */\n   DECL_DEFER_OUTPUT (fndecl) = 0;\n \n+  /* Integrating function calls isn't safe anymore, so turn on\n+     flag_no_inline.  */\n+  flag_no_inline = 1;\n+\n   /* Compile this function all the way down to assembly code.  */\n   rest_of_compilation (fndecl);\n \n+  /* Reset flag_no_inline to its original value.  */\n+  flag_no_inline = save_flag_no_inline;\n+\n   current_function_decl = 0;\n }"}]}