{"sha": "805c42ba46d243ca0a22d73f4e78ed68f7514459", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA1YzQyYmE0NmQyNDNjYTBhMjJkNzNmNGU3OGVkNjhmNzUxNDQ1OQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2002-05-16T01:12:42Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2002-05-16T01:12:42Z"}, "message": "altivec.h: Cleanups for tighter typechecking.\n\n2002-05-15  Aldy Hernandez  <aldyh@redhat.com>\n\n        * config/rs6000/altivec.h: Cleanups for tighter typechecking.\n        Cleanups for accepting modifiers on pointers.\n        Fix predicate typos.\n        Allow long pointers as well as int pointers.\n\nFrom-SVN: r53500", "tree": {"sha": "6ab2febded7910c6cfa644e1cfe0c133e59f5b1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ab2febded7910c6cfa644e1cfe0c133e59f5b1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/805c42ba46d243ca0a22d73f4e78ed68f7514459", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/805c42ba46d243ca0a22d73f4e78ed68f7514459", "html_url": "https://github.com/Rust-GCC/gccrs/commit/805c42ba46d243ca0a22d73f4e78ed68f7514459", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/805c42ba46d243ca0a22d73f4e78ed68f7514459/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "34fb9ba554ab82c877dc0475d78deb166c745941", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34fb9ba554ab82c877dc0475d78deb166c745941", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34fb9ba554ab82c877dc0475d78deb166c745941"}], "stats": {"total": 955, "additions": 770, "deletions": 185}, "files": [{"sha": "8d45451b494aaa3d97236dd4b9ea080f1f2c130b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/805c42ba46d243ca0a22d73f4e78ed68f7514459/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/805c42ba46d243ca0a22d73f4e78ed68f7514459/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=805c42ba46d243ca0a22d73f4e78ed68f7514459", "patch": "@@ -1,3 +1,10 @@\n+2002-05-15  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * config/rs6000/altivec.h: Cleanups for tighter typechecking.\n+        Cleanups for accepting modifiers on pointers.\n+        Fix predicate typos.\n+        Allow long pointers as well as int pointers.\n+\n 2002-05-15  Richard Henderson  <rth@redhat.com>\n \n \t* varasm.c (merge_weak): Remove special case for extern and common."}, {"sha": "f1387c0c89880d7f2053df08d5b589fcca330b45", "filename": "gcc/config/rs6000/altivec.h", "status": "modified", "additions": 763, "deletions": 185, "changes": 948, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/805c42ba46d243ca0a22d73f4e78ed68f7514459/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/805c42ba46d243ca0a22d73f4e78ed68f7514459/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=805c42ba46d243ca0a22d73f4e78ed68f7514459", "patch": "@@ -122,13 +122,80 @@ extern int __altivec_link_error_invalid_argument ();\n    inlined.  */\n inline vector float vec_ctf (vector unsigned int, const char) __attribute__ ((always_inline));\n inline vector float vec_ctf (vector signed int, const char) __attribute__ ((always_inline));\n+inline vector float vec_vcfsx (vector signed int a1, const char a2) __attribute__ ((always_inline));\n+inline vector float vec_vcfux (vector unsigned int a1, const char a2) __attribute__ ((always_inline));\n inline vector signed int vec_cts (vector float, const char) __attribute__ ((always_inline));\n inline vector unsigned int vec_ctu (vector float, const char) __attribute__ ((always_inline));\n inline void vec_dss (const char) __attribute__ ((always_inline));\n-inline void vec_dst (void *, int, const char) __attribute__ ((always_inline));\n-inline void vec_dstst (void *, int, const char) __attribute__ ((always_inline));\n-inline void vec_dststt (void *, int, const char) __attribute__ ((always_inline));\n-inline void vec_dstt (void *, int, const char) __attribute__ ((always_inline));\n+\n+inline void vec_dst (vector unsigned char *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dst (vector signed char *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dst (vector unsigned short *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dst (vector signed short *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dst (vector unsigned int *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dst (vector signed int *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dst (vector float *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dst (unsigned char *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dst (signed char *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dst (unsigned short *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dst (signed short *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dst (unsigned int *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dst (signed int *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dst (unsigned long *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dst (signed long *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dst (float *, int, const char) __attribute__ ((always_inline));\n+\n+inline void vec_dstst (vector unsigned char *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstst (vector signed char *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstst (vector unsigned short *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstst (vector signed short *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstst (vector unsigned int *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstst (vector signed int *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstst (vector float *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstst (unsigned char *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstst (signed char *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstst (unsigned short *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstst (signed short *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstst (unsigned int *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstst (signed int *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstst (unsigned long *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstst (signed long *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstst (float *, int, const char) __attribute__ ((always_inline));\n+\n+inline void vec_dststt (vector unsigned char *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dststt (vector signed char *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dststt (vector unsigned short *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dststt (vector signed short *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dststt (vector unsigned int *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dststt (vector signed int *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dststt (vector float *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dststt (unsigned char *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dststt (signed char *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dststt (unsigned short *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dststt (signed short *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dststt (unsigned int *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dststt (signed int *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dststt (unsigned long *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dststt (signed long *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dststt (float *, int, const char) __attribute__ ((always_inline));\n+\n+inline void vec_dstt (vector unsigned char *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstt (vector signed char *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstt (vector unsigned short *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstt (vector signed short *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstt (vector unsigned int *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstt (vector signed int *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstt (vector float *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstt (unsigned char *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstt (signed char *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstt (unsigned short *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstt (signed short *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstt (unsigned int *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstt (signed int *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstt (unsigned long *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstt (signed long *, int, const char) __attribute__ ((always_inline));\n+inline void vec_dstt (float *, int, const char) __attribute__ ((always_inline));\n+\n inline vector float vec_sld (vector float, vector float, const char) __attribute__ ((always_inline));\n inline vector signed int vec_sld (vector signed int, vector signed int, const char) __attribute__ ((always_inline));\n inline vector unsigned int vec_sld (vector unsigned int, vector unsigned int, const char) __attribute__ ((always_inline));\n@@ -149,6 +216,13 @@ inline vector signed int vec_splat_s32 (const char) __attribute__ ((always_inlin\n inline vector unsigned char vec_splat_u8 (const char) __attribute__ ((always_inline));\n inline vector unsigned short vec_splat_u16 (const char) __attribute__ ((always_inline));\n inline vector unsigned int vec_splat_u32 (const char) __attribute__ ((always_inline));\n+inline vector float vec_vspltw (vector float a1, const char a2) __attribute__ ((always_inline));\n+inline vector signed int vec_vspltw (vector signed int a1, const char a2) __attribute__ ((always_inline));\n+inline vector unsigned int vec_vspltw (vector unsigned int a1, const char a2) __attribute__ ((always_inline));\n+inline vector signed short vec_vsplth (vector signed short a1, const char a2) __attribute__ ((always_inline));\n+inline vector unsigned short vec_vsplth (vector unsigned short a1, const char a2) __attribute__ ((always_inline));\n+inline vector signed char vec_vspltb (vector signed char a1, const char a2) __attribute__ ((always_inline));\n+inline vector unsigned char vec_vspltb (vector unsigned char a1, const char a2) __attribute__ ((always_inline));\n \n /* vec_abs */\n \n@@ -1132,31 +1206,391 @@ vec_dssall ()\n /* vec_dst */\n \n inline void\n-vec_dst (void *a1, int a2, const char a3)\n+vec_dst (vector unsigned char *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dst (vector signed char *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dst (vector unsigned short *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dst (vector signed short *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dst (vector unsigned int *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dst (vector signed int *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dst (vector float *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dst (unsigned char *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dst (signed char *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dst (unsigned short *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dst (signed short *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dst (unsigned int *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dst (signed int *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dst (unsigned long *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dst (signed long *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dst (float *a1, int a2, const char a3)\n {\n   __builtin_altivec_dst ((void *) a1, a2, a3);\n }\n \n /* vec_dstst */\n \n inline void\n-vec_dstst (void *a1, int a2, const char a3)\n+vec_dstst (vector unsigned char *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstst (vector signed char *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstst (vector unsigned short *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstst (vector signed short *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstst (vector unsigned int *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstst (vector signed int *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstst (vector float *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstst (unsigned char *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstst (signed char *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstst (unsigned short *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstst (signed short *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstst (unsigned int *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstst (signed int *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstst (unsigned long *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstst (signed long *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstst ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstst (float *a1, int a2, const char a3)\n {\n   __builtin_altivec_dstst ((void *) a1, a2, a3);\n }\n \n /* vec_dststt */\n \n inline void\n-vec_dststt (void *a1, int a2, const char a3)\n+vec_dststt (vector unsigned char *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dststt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dststt (vector signed char *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dststt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dststt (vector unsigned short *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dststt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dststt (vector signed short *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dststt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dststt (vector unsigned int *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dststt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dststt (vector signed int *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dststt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dststt (vector float *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dststt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dststt (unsigned char *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dststt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dststt (signed char *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dststt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dststt (unsigned short *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dststt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dststt (signed short *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dststt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dststt (unsigned int *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dststt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dststt (signed int *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dststt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dststt (unsigned long *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dststt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dststt (signed long *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dststt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dststt (float *a1, int a2, const char a3)\n {\n   __builtin_altivec_dststt ((void *) a1, a2, a3);\n }\n \n /* vec_dstt */\n \n inline void\n-vec_dstt (void *a1, int a2, const char a3)\n+vec_dstt (vector unsigned char *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstt (vector signed char *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstt (vector unsigned short *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstt (vector signed short *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstt (vector unsigned int *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstt (vector signed int *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstt (vector float *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstt (unsigned char *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstt (signed char *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstt (unsigned short *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstt (signed short *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstt (unsigned int *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstt (signed int *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstt (unsigned long *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstt (signed long *a1, int a2, const char a3)\n+{\n+  __builtin_altivec_dstt ((void *) a1, a2, a3);\n+}\n+\n+inline void\n+vec_dstt (float *a1, int a2, const char a3)\n {\n   __builtin_altivec_dstt ((void *) a1, a2, a3);\n }\n@@ -1535,6 +1969,18 @@ vec_lvsl (int a1, signed int *a2)\n   return (vector unsigned char) __builtin_altivec_lvsl (a1, (void *) a2);\n }\n \n+inline vector unsigned char\n+vec_lvsl (int a1, unsigned long *a2)\n+{\n+  return (vector unsigned char) __builtin_altivec_lvsl (a1, (void *) a2);\n+}\n+\n+inline vector unsigned char\n+vec_lvsl (int a1, signed long *a2)\n+{\n+  return (vector unsigned char) __builtin_altivec_lvsl (a1, (void *) a2);\n+}\n+\n inline vector unsigned char\n vec_lvsl (int a1, float *a2)\n {\n@@ -1579,6 +2025,18 @@ vec_lvsr (int a1, signed int *a2)\n   return (vector unsigned char) __builtin_altivec_lvsr (a1, (void *) a2);\n }\n \n+inline vector unsigned char\n+vec_lvsr (int a1, unsigned long *a2)\n+{\n+  return (vector unsigned char) __builtin_altivec_lvsr (a1, (void *) a2);\n+}\n+\n+inline vector unsigned char\n+vec_lvsr (int a1, signed long *a2)\n+{\n+  return (vector unsigned char) __builtin_altivec_lvsr (a1, (void *) a2);\n+}\n+\n inline vector unsigned char\n vec_lvsr (int a1, float *a2)\n {\n@@ -4692,7 +5150,7 @@ vec_all_ge (vector signed int a1, vector signed int a2)\n inline int\n vec_all_ge (vector float a1, vector float a2)\n {\n-  return __builtin_altivec_vcmpgefp_p (__CR6_EQ, a1, a2);\n+  return __builtin_altivec_vcmpgefp_p (__CR6_LT, a1, a2);\n }\n \n /* vec_all_gt */\n@@ -5388,7 +5846,7 @@ vec_any_le (vector signed int a1, vector signed int a2)\n inline int\n vec_any_le (vector float a1, vector float a2)\n {\n-  return __builtin_altivec_vcmpgefp_p (__CR6_LT_REV, a2, a1);\n+  return __builtin_altivec_vcmpgefp_p (__CR6_EQ_REV, a2, a1);\n }\n \n /* vec_any_lt */\n@@ -6087,17 +6545,25 @@ __ch (__bin_args_eq (vector unsigned int, (a1), int, (a2)), \\\n       ((vector float) __builtin_altivec_vcfux ((vector signed int) (a1), (const char) (a2))), \\\n __ch (__bin_args_eq (vector signed int, (a1), int, (a2)), \\\n       ((vector float) __builtin_altivec_vcfsx ((vector signed int) (a1), (const char) (a2))), \\\n-    __altivec_link_error_invalid_argument ()))\n+__ch (__bin_args_eq (vector unsigned int, (a1), unsigned int, (a2)), \\\n+      ((vector float) __builtin_altivec_vcfux ((vector signed int) (a1), (const char) (a2))), \\\n+__ch (__bin_args_eq (vector signed int, (a1), unsigned int, (a2)), \\\n+      ((vector float) __builtin_altivec_vcfsx ((vector signed int) (a1), (const char) (a2))), \\\n+    __altivec_link_error_invalid_argument ()))))\n \n #define vec_vcfsx(a1, a2) \\\n __ch (__bin_args_eq (vector signed int, (a1), int, (a2)), \\\n       ((vector float) __builtin_altivec_vcfsx ((vector signed int) (a1), (const char) (a2))), \\\n-  __altivec_link_error_invalid_argument ())\n+__ch (__bin_args_eq (vector signed int, (a1), unsigned int, (a2)), \\\n+      ((vector float) __builtin_altivec_vcfsx ((vector signed int) (a1), (const char) (a2))), \\\n+  __altivec_link_error_invalid_argument ()))\n \n #define vec_vcfux(a1, a2) \\\n __ch (__bin_args_eq (vector unsigned int, (a1), int, (a2)), \\\n       ((vector float) __builtin_altivec_vcfux ((vector signed int) (a1), (const char) (a2))), \\\n-  __altivec_link_error_invalid_argument ())\n+__ch (__bin_args_eq (vector unsigned int, (a1), unsigned int, (a2)), \\\n+      ((vector float) __builtin_altivec_vcfux ((vector signed int) (a1), (const char) (a2))), \\\n+  __altivec_link_error_invalid_argument ()))\n \n #define vec_cts(a1, a2) __builtin_altivec_vctsxs ((a1), (a2))\n \n@@ -6107,241 +6573,311 @@ __ch (__bin_args_eq (vector unsigned int, (a1), int, (a2)), \\\n \n #define vec_dssall() __builtin_altivec_dssall ()\n \n-#define vec_dst(a1, a2, a3) __builtin_altivec_dst ((a1), (a2), (a3))\n-\n-#define vec_dstst(a1, a2, a3) __builtin_altivec_dstst ((a1), (a2), (a3))\n-\n-#define vec_dststt(a1, a2, a3) __builtin_altivec_dststt ((a1), (a2), (a3))\n-\n-#define vec_dstt(a1, a2, a3) __builtin_altivec_dstt ((a1), (a2), (a3))\n+#define vec_dst(a1, a2, a3) \\\n+__ch (__un_args_eq (vector unsigned char, *(a1)), \\\n+      __builtin_altivec_dst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector signed char, *(a1)), \\\n+      __builtin_altivec_dst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector unsigned short, *(a1)), \\\n+      __builtin_altivec_dst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector signed short, *(a1)), \\\n+      __builtin_altivec_dst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector unsigned int, *(a1)), \\\n+      __builtin_altivec_dst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector signed int, *(a1)), \\\n+      __builtin_altivec_dst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector float, *(a1)), \\\n+      __builtin_altivec_dst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (unsigned char, *(a1)), \\\n+      __builtin_altivec_dst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (signed char, *(a1)), \\\n+      __builtin_altivec_dst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (unsigned short, *(a1)), \\\n+      __builtin_altivec_dst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (signed short, *(a1)), \\\n+      __builtin_altivec_dst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (unsigned int, *(a1)), \\\n+      __builtin_altivec_dst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (signed int, *(a1)), \\\n+      __builtin_altivec_dst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (unsigned long, *(a1)), \\\n+      __builtin_altivec_dst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (signed long, *(a1)), \\\n+      __builtin_altivec_dst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (float, *(a1)), \\\n+      __builtin_altivec_dst ((void *) (a1), (a2), (a3)), \\\n+  __altivec_link_error_invalid_argument ()))))))))))))))))\n+\n+#define vec_dstst(a1, a2, a3) \\\n+__ch (__un_args_eq (vector unsigned char, *(a1)), \\\n+      __builtin_altivec_dstst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector signed char, *(a1)), \\\n+      __builtin_altivec_dstst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector unsigned short, *(a1)), \\\n+      __builtin_altivec_dstst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector signed short, *(a1)), \\\n+      __builtin_altivec_dstst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector unsigned int, *(a1)), \\\n+      __builtin_altivec_dstst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector signed int, *(a1)), \\\n+      __builtin_altivec_dstst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector float, *(a1)), \\\n+      __builtin_altivec_dstst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (unsigned char, *(a1)), \\\n+      __builtin_altivec_dstst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (signed char, *(a1)), \\\n+      __builtin_altivec_dstst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (unsigned short, *(a1)), \\\n+      __builtin_altivec_dstst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (signed short, *(a1)), \\\n+      __builtin_altivec_dstst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (unsigned int, *(a1)), \\\n+      __builtin_altivec_dstst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (signed int, *(a1)), \\\n+      __builtin_altivec_dstst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (unsigned long, *(a1)), \\\n+      __builtin_altivec_dstst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (signed long, *(a1)), \\\n+      __builtin_altivec_dstst ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (float, *(a1)), \\\n+      __builtin_altivec_dstst ((void *) (a1), (a2), (a3)), \\\n+  __altivec_link_error_invalid_argument ()))))))))))))))))\n+\n+#define vec_dststt(a1, a2, a3) \\\n+__ch (__un_args_eq (vector unsigned char, *(a1)), \\\n+      __builtin_altivec_dststt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector signed char, *(a1)), \\\n+      __builtin_altivec_dststt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector unsigned short, *(a1)), \\\n+      __builtin_altivec_dststt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector signed short, *(a1)), \\\n+      __builtin_altivec_dststt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector unsigned int, *(a1)), \\\n+      __builtin_altivec_dststt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector signed int, *(a1)), \\\n+      __builtin_altivec_dststt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector float, *(a1)), \\\n+      __builtin_altivec_dststt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (unsigned char, *(a1)), \\\n+      __builtin_altivec_dststt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (signed char, *(a1)), \\\n+      __builtin_altivec_dststt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (unsigned short, *(a1)), \\\n+      __builtin_altivec_dststt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (signed short, *(a1)), \\\n+      __builtin_altivec_dststt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (unsigned int, *(a1)), \\\n+      __builtin_altivec_dststt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (signed int, *(a1)), \\\n+      __builtin_altivec_dststt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (unsigned long, *(a1)), \\\n+      __builtin_altivec_dststt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (signed long, *(a1)), \\\n+      __builtin_altivec_dststt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (float, *(a1)), \\\n+      __builtin_altivec_dststt ((void *) (a1), (a2), (a3)), \\\n+  __altivec_link_error_invalid_argument ()))))))))))))))))\n+\n+#define vec_dstt(a1, a2, a3) \\\n+__ch (__un_args_eq (vector unsigned char, *(a1)), \\\n+      __builtin_altivec_dstt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector signed char, *(a1)), \\\n+      __builtin_altivec_dstt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector unsigned short, *(a1)), \\\n+      __builtin_altivec_dstt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector signed short, *(a1)), \\\n+      __builtin_altivec_dstt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector unsigned int, *(a1)), \\\n+      __builtin_altivec_dstt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector signed int, *(a1)), \\\n+      __builtin_altivec_dstt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (vector float, *(a1)), \\\n+      __builtin_altivec_dstt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (unsigned char, *(a1)), \\\n+      __builtin_altivec_dstt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (signed char, *(a1)), \\\n+      __builtin_altivec_dstt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (unsigned short, *(a1)), \\\n+      __builtin_altivec_dstt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (signed short, *(a1)), \\\n+      __builtin_altivec_dstt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (unsigned int, *(a1)), \\\n+      __builtin_altivec_dstt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (signed int, *(a1)), \\\n+      __builtin_altivec_dstt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (unsigned long, *(a1)), \\\n+      __builtin_altivec_dstt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (signed long, *(a1)), \\\n+      __builtin_altivec_dstt ((void *) (a1), (a2), (a3)), \\\n+__ch (__un_args_eq (float, *(a1)), \\\n+      __builtin_altivec_dstt ((void *) (a1), (a2), (a3)), \\\n+  __altivec_link_error_invalid_argument ()))))))))))))))))\n \n #define vec_expte(a1) __builtin_altivec_vexptefp ((a1))\n \n #define vec_floor(a1) __builtin_altivec_vrfim (a1)\n \n #define vec_ld(a, b) \\\n-__ch (__un_args_eq (vector unsigned char *, (b)), \\\n-      ((vector unsigned char) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (vector unsigned char [], (b)), \\\n+__ch (__un_args_eq (vector unsigned char, *(b)), \\\n       ((vector unsigned char) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned char *, (b)), \\\n+__ch (__un_args_eq (unsigned char, *(b)), \\\n       ((vector unsigned char) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned char [], (b)), \\\n-      ((vector unsigned char) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (vector signed char *, (b)), \\\n-      ((vector signed char) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (vector signed char [], (b)), \\\n-      ((vector signed char) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (signed char *, (b)), \\\n+__ch (__un_args_eq (vector signed char, *(b)), \\\n       ((vector signed char) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (signed char [], (b)), \\\n+__ch (__un_args_eq (signed char, *(b)), \\\n       ((vector signed char) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (vector unsigned short *, (b)), \\\n+__ch (__un_args_eq (vector unsigned short, *(b)), \\\n       ((vector unsigned short) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (vector unsigned short [], (b)), \\\n+__ch (__un_args_eq (unsigned short, *(b)), \\\n       ((vector unsigned short) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned short *, (b)), \\\n-      ((vector unsigned short) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned short [], (b)), \\\n-      ((vector unsigned short) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (vector signed short *, (b)), \\\n-      ((vector signed short) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (vector signed short [], (b)), \\\n+__ch (__un_args_eq (vector signed short, *(b)), \\\n       ((vector signed short) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (signed short *, (b)), \\\n+__ch (__un_args_eq (signed short, *(b)), \\\n       ((vector signed short) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (signed short [], (b)), \\\n-      ((vector signed short) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (vector unsigned int *, (b)), \\\n-      ((vector unsigned int) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (vector unsigned int [], (b)), \\\n-      ((vector unsigned int) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned int *, (b)), \\\n-      ((vector unsigned int) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned int [], (b)), \\\n+__ch (__un_args_eq (vector unsigned int, *(b)), \\\n       ((vector unsigned int) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned long *, (b)), \\\n+__ch (__un_args_eq (unsigned int, *(b)), \\\n       ((vector unsigned int) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned long [], (b)), \\\n+__ch (__un_args_eq (unsigned long, *(b)), \\\n       ((vector unsigned int) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (vector signed int *, (b)), \\\n-      ((vector signed int) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (vector signed int [], (b)), \\\n-      ((vector signed int) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (signed int *, (b)), \\\n-      ((vector signed int) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (signed int [], (b)), \\\n+__ch (__un_args_eq (vector signed int, *(b)), \\\n       ((vector signed int) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (signed long *, (b)), \\\n+__ch (__un_args_eq (signed int, *(b)), \\\n       ((vector signed int) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (signed long [], (b)), \\\n+__ch (__un_args_eq (signed long, *(b)), \\\n       ((vector signed int) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (vector float *, (b)), \\\n+__ch (__un_args_eq (vector float, *(b)), \\\n       ((vector float) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (vector float [], (b)), \\\n+__ch (__un_args_eq (float, *(b)), \\\n       ((vector float) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (float *, (b)), \\\n-      ((vector float) __builtin_altivec_lvx ((a), (b))), \\\n-__ch (__un_args_eq (float [], (b)), \\\n-      ((vector float) __builtin_altivec_lvx ((a), (b))), \\\n-__altivec_link_error_invalid_argument ()))))))))))))))))))))))))))))))))\n+__altivec_link_error_invalid_argument ()))))))))))))))))\n \n #define vec_lde(a, b) \\\n-__ch (__un_args_eq (unsigned char *, (b)), \\\n-      ((vector unsigned char) __builtin_altivec_lvebx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned char [], (b)), \\\n+__ch (__un_args_eq (unsigned char, *(b)), \\\n       ((vector unsigned char) __builtin_altivec_lvebx ((a), (b))), \\\n-__ch (__un_args_eq (signed char *, (b)), \\\n+__ch (__un_args_eq (signed char, *(b)), \\\n       ((vector signed char) __builtin_altivec_lvebx ((a), (b))), \\\n-__ch (__un_args_eq (signed char [], (b)), \\\n-      ((vector signed char) __builtin_altivec_lvebx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned short *, (b)), \\\n-      ((vector unsigned short) __builtin_altivec_lvehx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned short [], (b)), \\\n+__ch (__un_args_eq (unsigned short, *(b)), \\\n       ((vector unsigned short) __builtin_altivec_lvehx ((a), (b))), \\\n-__ch (__un_args_eq (signed short *, (b)), \\\n-      ((vector signed short) __builtin_altivec_lvehx ((a), (b))), \\\n-__ch (__un_args_eq (signed short [], (b)), \\\n+__ch (__un_args_eq (signed short, *(b)), \\\n       ((vector signed short) __builtin_altivec_lvehx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned long *, (b)), \\\n+__ch (__un_args_eq (unsigned long, *(b)), \\\n       ((vector unsigned int) __builtin_altivec_lvewx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned long [], (b)), \\\n-      ((vector unsigned int) __builtin_altivec_lvewx ((a), (b))), \\\n-__ch (__un_args_eq (signed long *, (b)), \\\n-      ((vector signed int) __builtin_altivec_lvewx ((a), (b))), \\\n-__ch (__un_args_eq (signed long [], (b)), \\\n+__ch (__un_args_eq (signed long, *(b)), \\\n       ((vector signed int) __builtin_altivec_lvewx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned int *, (b)), \\\n+__ch (__un_args_eq (unsigned int, *(b)), \\\n       ((vector unsigned int) __builtin_altivec_lvewx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned int [], (b)), \\\n-      ((vector unsigned int) __builtin_altivec_lvewx ((a), (b))), \\\n-__ch (__un_args_eq (signed int *, (b)), \\\n-      ((vector signed int) __builtin_altivec_lvewx ((a), (b))), \\\n-__ch (__un_args_eq (signed int [], (b)), \\\n+__ch (__un_args_eq (signed int, *(b)), \\\n       ((vector signed int) __builtin_altivec_lvewx ((a), (b))), \\\n-__ch (__un_args_eq (float *, (b)), \\\n+__ch (__un_args_eq (float, *(b)), \\\n       ((vector float) __builtin_altivec_lvewx ((a), (b))), \\\n-__ch (__un_args_eq (float [], (b)), \\\n-      ((vector float) __builtin_altivec_lvewx ((a), (b))), \\\n-__altivec_link_error_invalid_argument ()))))))))))))))))))\n+__altivec_link_error_invalid_argument ())))))))))\n \n #define vec_lvewx(a, b) \\\n-__ch (__un_args_eq (unsigned int *, (b)), \\\n-      ((vector unsigned int) __builtin_altivec_lvewx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned int [], (b)), \\\n+__ch (__un_args_eq (unsigned int, *(b)), \\\n       ((vector unsigned int) __builtin_altivec_lvewx ((a), (b))), \\\n-__ch (__un_args_eq (signed int *, (b)), \\\n-      ((vector signed int) __builtin_altivec_lvewx ((a), (b))), \\\n-__ch (__un_args_eq (signed int [], (b)), \\\n+__ch (__un_args_eq (signed int, *(b)), \\\n       ((vector signed int) __builtin_altivec_lvewx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned long *, (b)), \\\n+__ch (__un_args_eq (unsigned long, *(b)), \\\n       ((vector unsigned int) __builtin_altivec_lvewx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned long [], (b)), \\\n-      ((vector unsigned int) __builtin_altivec_lvewx ((a), (b))), \\\n-__ch (__un_args_eq (signed long *, (b)), \\\n-      ((vector signed int) __builtin_altivec_lvewx ((a), (b))), \\\n-__ch (__un_args_eq (signed long [], (b)), \\\n+__ch (__un_args_eq (signed long, *(b)), \\\n       ((vector signed int) __builtin_altivec_lvewx ((a), (b))), \\\n-__ch (__un_args_eq (float *, (b)), \\\n-      ((vector float) __builtin_altivec_lvewx ((a), (b))), \\\n-__ch (__un_args_eq (float [], (b)), \\\n+__ch (__un_args_eq (float, *(b)), \\\n       ((vector float) __builtin_altivec_lvewx ((a), (b))), \\\n-__altivec_link_error_invalid_argument ()))))))))))\n+__altivec_link_error_invalid_argument ())))))\n \n #define vec_lvehx(a, b) \\\n-__ch (__un_args_eq (unsigned short *, (b)), \\\n+__ch (__un_args_eq (unsigned short, *(b)), \\\n       ((vector unsigned short) __builtin_altivec_lvehx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned short [], (b)), \\\n-      ((vector unsigned short) __builtin_altivec_lvehx ((a), (b))), \\\n-__ch (__un_args_eq (signed short *, (b)), \\\n-      ((vector signed short) __builtin_altivec_lvehx ((a), (b))), \\\n-__ch (__un_args_eq (signed short [], (b)), \\\n+__ch (__un_args_eq (signed short, *(b)), \\\n       ((vector signed short) __builtin_altivec_lvehx ((a), (b))), \\\n-__altivec_link_error_invalid_argument ()))))\n+__altivec_link_error_invalid_argument ()))\n \n #define vec_lvebx(a, b) \\\n-__ch (__un_args_eq (unsigned char *, (b)), \\\n-      ((vector unsigned char) __builtin_altivec_lvebx ((a), (b))), \\\n-__ch (__un_args_eq (unsigned char [], (b)), \\\n+__ch (__un_args_eq (unsigned char, *(b)), \\\n       ((vector unsigned char) __builtin_altivec_lvebx ((a), (b))), \\\n-__ch (__un_args_eq (signed char *, (b)), \\\n+__ch (__un_args_eq (signed char, *(b)), \\\n       ((vector signed char) __builtin_altivec_lvebx ((a), (b))), \\\n-__ch (__un_args_eq (signed char [], (b)), \\\n-      ((vector signed char) __builtin_altivec_lvebx ((a), (b))), \\\n-__altivec_link_error_invalid_argument ()))))\n+__altivec_link_error_invalid_argument ()))\n \n #define vec_ldl(a, b) \\\n-__ch (__un_args_eq (vector unsigned char *, (b)), \\\n-      ((vector unsigned char) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (vector unsigned char [], (b)), \\\n-      ((vector unsigned char) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (unsigned char *, (b)), \\\n+__ch (__un_args_eq (vector unsigned char, *(b)), \\\n       ((vector unsigned char) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (unsigned char [], (b)), \\\n+__ch (__un_args_eq (unsigned char, *(b)), \\\n       ((vector unsigned char) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (vector signed char *, (b)), \\\n+__ch (__un_args_eq (vector signed char, *(b)), \\\n       ((vector signed char) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (vector signed char [], (b)), \\\n+__ch (__un_args_eq (signed char, *(b)), \\\n       ((vector signed char) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (signed char *, (b)), \\\n-      ((vector signed char) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (signed char [], (b)), \\\n-      ((vector signed char) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (vector unsigned short *, (b)), \\\n-      ((vector unsigned short) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (vector unsigned short [], (b)), \\\n+__ch (__un_args_eq (vector unsigned short, *(b)), \\\n       ((vector unsigned short) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (unsigned short *, (b)), \\\n+__ch (__un_args_eq (unsigned short, *(b)), \\\n       ((vector unsigned short) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (unsigned short [], (b)), \\\n-      ((vector unsigned short) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (vector signed short *, (b)), \\\n-      ((vector signed short) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (vector signed short [], (b)), \\\n-      ((vector signed short) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (signed short *, (b)), \\\n+__ch (__un_args_eq (vector signed short, *(b)), \\\n       ((vector signed short) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (signed short [], (b)), \\\n+__ch (__un_args_eq (signed short, *(b)), \\\n       ((vector signed short) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (vector unsigned int *, (b)), \\\n+__ch (__un_args_eq (vector unsigned int, *(b)), \\\n       ((vector unsigned int) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (vector unsigned int [], (b)), \\\n+__ch (__un_args_eq (unsigned int, *(b)), \\\n       ((vector unsigned int) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (unsigned int *, (b)), \\\n+__ch (__un_args_eq (unsigned long, *(b)), \\\n       ((vector unsigned int) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (unsigned int [], (b)), \\\n-      ((vector unsigned int) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (unsigned long *, (b)), \\\n-      ((vector unsigned int) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (unsigned long [], (b)), \\\n-      ((vector unsigned int) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (vector signed int *, (b)), \\\n-      ((vector signed int) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (vector signed int [], (b)), \\\n+__ch (__un_args_eq (vector signed int, *(b)), \\\n       ((vector signed int) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (signed int *, (b)), \\\n+__ch (__un_args_eq (signed int, *(b)), \\\n       ((vector signed int) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (signed int [], (b)), \\\n+__ch (__un_args_eq (signed long, *(b)), \\\n       ((vector signed int) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (signed long *, (b)), \\\n-      ((vector signed int) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (signed long [], (b)), \\\n-      ((vector signed int) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (vector float *, (b)), \\\n-      ((vector float) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (vector float [], (b)), \\\n+__ch (__un_args_eq (vector float, *(b)), \\\n       ((vector float) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (float *, (b)), \\\n+__ch (__un_args_eq (float, *(b)), \\\n       ((vector float) __builtin_altivec_lvxl ((a), (b))), \\\n-__ch (__un_args_eq (float [], (b)), \\\n-      ((vector float) __builtin_altivec_lvxl ((a), (b))), \\\n-__altivec_link_error_invalid_argument ()))))))))))))))))))))))))))))))))\n+__altivec_link_error_invalid_argument ()))))))))))))))))\n \n #define vec_loge(a1) __builtin_altivec_vlogefp ((a1))\n \n-#define vec_lvsl(a1, a2) ((vector unsigned char) __builtin_altivec_lvsl ((a1), (a2)))\n-\n-#define vec_lvsr(a1, a2) ((vector unsigned char) __builtin_altivec_lvsr ((a1), (a2)))\n+#define vec_lvsl(a1, a2) \\\n+__ch (__un_args_eq (unsigned char, *(a2)), \\\n+      ((vector unsigned char) __builtin_altivec_lvsl ((a1), (void *) (a2))), \\\n+__ch (__un_args_eq (signed char, *(a2)), \\\n+      ((vector unsigned char) __builtin_altivec_lvsl ((a1), (void *) (a2))), \\\n+__ch (__un_args_eq (unsigned short, *(a2)), \\\n+      ((vector unsigned char) __builtin_altivec_lvsl ((a1), (void *) (a2))), \\\n+__ch (__un_args_eq (signed short, *(a2)), \\\n+      ((vector unsigned char) __builtin_altivec_lvsl ((a1), (void *) (a2))), \\\n+__ch (__un_args_eq (unsigned int, *(a2)), \\\n+      ((vector unsigned char) __builtin_altivec_lvsl ((a1), (void *) (a2))), \\\n+__ch (__un_args_eq (signed int, *(a2)), \\\n+      ((vector unsigned char) __builtin_altivec_lvsl ((a1), (void *) (a2))), \\\n+__ch (__un_args_eq (unsigned long, *(a2)), \\\n+      ((vector unsigned char) __builtin_altivec_lvsl ((a1), (void *) (a2))), \\\n+__ch (__un_args_eq (signed long, *(a2)), \\\n+      ((vector unsigned char) __builtin_altivec_lvsl ((a1), (void *) (a2))), \\\n+__ch (__un_args_eq (float, *(a2)), \\\n+      ((vector unsigned char) __builtin_altivec_lvsl ((a1), (void *) (a2))), \\\n+__altivec_link_error_invalid_argument ())))))))))\n+\n+#define vec_lvsr(a1, a2) \\\n+__ch (__un_args_eq (unsigned char, *(a2)), \\\n+      ((vector unsigned char) __builtin_altivec_lvsr ((a1), (void *) (a2))), \\\n+__ch (__un_args_eq (signed char, *(a2)), \\\n+      ((vector unsigned char) __builtin_altivec_lvsr ((a1), (void *) (a2))), \\\n+__ch (__un_args_eq (unsigned short, *(a2)), \\\n+      ((vector unsigned char) __builtin_altivec_lvsr ((a1), (void *) (a2))), \\\n+__ch (__un_args_eq (signed short, *(a2)), \\\n+      ((vector unsigned char) __builtin_altivec_lvsr ((a1), (void *) (a2))), \\\n+__ch (__un_args_eq (unsigned int, *(a2)), \\\n+      ((vector unsigned char) __builtin_altivec_lvsr ((a1), (void *) (a2))), \\\n+__ch (__un_args_eq (signed int, *(a2)), \\\n+      ((vector unsigned char) __builtin_altivec_lvsr ((a1), (void *) (a2))), \\\n+__ch (__un_args_eq (unsigned long, *(a2)), \\\n+      ((vector unsigned char) __builtin_altivec_lvsr ((a1), (void *) (a2))), \\\n+__ch (__un_args_eq (signed long, *(a2)), \\\n+      ((vector unsigned char) __builtin_altivec_lvsr ((a1), (void *) (a2))), \\\n+__ch (__un_args_eq (float, *(a2)), \\\n+      ((vector unsigned char) __builtin_altivec_lvsr ((a1), (void *) (a2))), \\\n+__altivec_link_error_invalid_argument ())))))))))\n \n #define vec_madd(a1, a2, a3) (__builtin_altivec_vmaddfp ((a1), (a2), (a3)))\n \n@@ -6985,19 +7521,33 @@ __altivec_link_error_invalid_argument ()))\n #define vec_sld(a1, a2, a3) \\\n __ch (__tern_args_eq (vector float, (a1), vector float, (a2), int, (a3)), \\\n       ((vector float) __builtin_altivec_vsldoi_4si ((vector signed int) (a1), (vector signed int) (a2), (const char) (a3))), \\\n+__ch (__tern_args_eq (vector float, (a1), vector float, (a2), unsigned int, (a3)), \\\n+      ((vector float) __builtin_altivec_vsldoi_4si ((vector signed int) (a1), (vector signed int) (a2), (const char) (a3))), \\\n __ch (__tern_args_eq (vector signed int, (a1), vector signed int, (a2), int, (a3)), \\\n       ((vector signed int) __builtin_altivec_vsldoi_4si ((vector signed int) (a1), (vector signed int) (a2), (const char) (a3))), \\\n+__ch (__tern_args_eq (vector signed int, (a1), vector signed int, (a2), unsigned int, (a3)), \\\n+      ((vector signed int) __builtin_altivec_vsldoi_4si ((vector signed int) (a1), (vector signed int) (a2), (const char) (a3))), \\\n __ch (__tern_args_eq (vector unsigned int, (a1), vector unsigned int, (a2), int, (a3)), \\\n       ((vector unsigned int) __builtin_altivec_vsldoi_4si ((vector signed int) (a1), (vector signed int) (a2), (const char) (a3))), \\\n+__ch (__tern_args_eq (vector unsigned int, (a1), vector unsigned int, (a2), unsigned int, (a3)), \\\n+      ((vector unsigned int) __builtin_altivec_vsldoi_4si ((vector signed int) (a1), (vector signed int) (a2), (const char) (a3))), \\\n __ch (__tern_args_eq (vector signed short, (a1), vector signed short, (a2), int, (a3)), \\\n       ((vector signed short) __builtin_altivec_vsldoi_4si ((vector signed int) (a1), (vector signed int) (a2), (const char) (a3))), \\\n+__ch (__tern_args_eq (vector signed short, (a1), vector signed short, (a2), unsigned int, (a3)), \\\n+      ((vector signed short) __builtin_altivec_vsldoi_4si ((vector signed int) (a1), (vector signed int) (a2), (const char) (a3))), \\\n __ch (__tern_args_eq (vector unsigned short, (a1), vector unsigned short, (a2), int, (a3)), \\\n       ((vector unsigned short) __builtin_altivec_vsldoi_4si ((vector signed int) (a1), (vector signed int) (a2), (const char) (a3))), \\\n+__ch (__tern_args_eq (vector unsigned short, (a1), vector unsigned short, (a2), unsigned int, (a3)), \\\n+      ((vector unsigned short) __builtin_altivec_vsldoi_4si ((vector signed int) (a1), (vector signed int) (a2), (const char) (a3))), \\\n __ch (__tern_args_eq (vector signed char, (a1), vector signed char, (a2), int, (a3)), \\\n       ((vector signed char) __builtin_altivec_vsldoi_4si ((vector signed int) (a1), (vector signed int) (a2), (const char) (a3))), \\\n+__ch (__tern_args_eq (vector signed char, (a1), vector signed char, (a2), unsigned int, (a3)), \\\n+      ((vector signed char) __builtin_altivec_vsldoi_4si ((vector signed int) (a1), (vector signed int) (a2), (const char) (a3))), \\\n __ch (__tern_args_eq (vector unsigned char, (a1), vector unsigned char, (a2), int, (a3)), \\\n       ((vector unsigned char) __builtin_altivec_vsldoi_4si ((vector signed int) (a1), (vector signed int) (a2), (const char) (a3))), \\\n-    __altivec_link_error_invalid_argument ())))))))\n+__ch (__tern_args_eq (vector unsigned char, (a1), vector unsigned char, (a2), unsigned int, (a3)), \\\n+      ((vector unsigned char) __builtin_altivec_vsldoi_4si ((vector signed int) (a1), (vector signed int) (a2), (const char) (a3))), \\\n+    __altivec_link_error_invalid_argument ()))))))))))))))\n \n #define vec_sll(a1, a2) \\\n __ch (__bin_args_eq (vector signed int, (a1), vector unsigned int, (a2)), \\\n@@ -7072,42 +7622,70 @@ __ch (__bin_args_eq (vector unsigned char, (a1), vector unsigned char, (a2)), \\\n #define vec_splat(a1, a2) \\\n __ch (__bin_args_eq (vector signed char, ((a1)), int, ((a2))), \\\n       ((vector signed char) __builtin_altivec_vspltb ((vector signed char) ((a1)), (const char) ((a2)))), \\\n+__ch (__bin_args_eq (vector signed char, ((a1)), unsigned int, ((a2))), \\\n+      ((vector signed char) __builtin_altivec_vspltb ((vector signed char) ((a1)), (const char) ((a2)))), \\\n __ch (__bin_args_eq (vector unsigned char, ((a1)), int, ((a2))), \\\n       ((vector unsigned char) __builtin_altivec_vspltb ((vector signed char) ((a1)), (const char) ((a2)))), \\\n+__ch (__bin_args_eq (vector unsigned char, ((a1)), unsigned int, ((a2))), \\\n+      ((vector unsigned char) __builtin_altivec_vspltb ((vector signed char) ((a1)), (const char) ((a2)))), \\\n __ch (__bin_args_eq (vector signed short, ((a1)), int, ((a2))), \\\n       ((vector signed short) __builtin_altivec_vsplth ((vector signed short) ((a1)), (const char) ((a2)))), \\\n+__ch (__bin_args_eq (vector signed short, ((a1)), unsigned int, ((a2))), \\\n+      ((vector signed short) __builtin_altivec_vsplth ((vector signed short) ((a1)), (const char) ((a2)))), \\\n __ch (__bin_args_eq (vector unsigned short, ((a1)), int, ((a2))), \\\n       ((vector unsigned short) __builtin_altivec_vsplth ((vector signed short) ((a1)), (const char) ((a2)))), \\\n+__ch (__bin_args_eq (vector unsigned short, ((a1)), unsigned int, ((a2))), \\\n+      ((vector unsigned short) __builtin_altivec_vsplth ((vector signed short) ((a1)), (const char) ((a2)))), \\\n __ch (__bin_args_eq (vector float, ((a1)), int, ((a2))), \\\n       ((vector float) __builtin_altivec_vspltw ((vector signed int) ((a1)), (const char) ((a2)))), \\\n+__ch (__bin_args_eq (vector float, ((a1)), unsigned int, ((a2))), \\\n+      ((vector float) __builtin_altivec_vspltw ((vector signed int) ((a1)), (const char) ((a2)))), \\\n __ch (__bin_args_eq (vector signed int, ((a1)), int, ((a2))), \\\n       ((vector signed int) __builtin_altivec_vspltw ((vector signed int) ((a1)), (const char) ((a2)))), \\\n+__ch (__bin_args_eq (vector signed int, ((a1)), unsigned int, ((a2))), \\\n+      ((vector signed int) __builtin_altivec_vspltw ((vector signed int) ((a1)), (const char) ((a2)))), \\\n __ch (__bin_args_eq (vector unsigned int, ((a1)), int, ((a2))), \\\n       ((vector unsigned int) __builtin_altivec_vspltw ((vector signed int) (a1), (const char) ((a2)))), \\\n-    __altivec_link_error_invalid_argument ())))))))\n+__ch (__bin_args_eq (vector unsigned int, ((a1)), unsigned int, ((a2))), \\\n+      ((vector unsigned int) __builtin_altivec_vspltw ((vector signed int) (a1), (const char) ((a2)))), \\\n+    __altivec_link_error_invalid_argument ()))))))))))))))\n \n #define vec_vspltw(a1, a2) \\\n __ch (__bin_args_eq (vector float, ((a1)), int, ((a2))), \\\n       ((vector float) __builtin_altivec_vspltw ((vector signed int) ((a1)), (const char) ((a2)))), \\\n+__ch (__bin_args_eq (vector float, ((a1)), unsigned int, ((a2))), \\\n+      ((vector float) __builtin_altivec_vspltw ((vector signed int) ((a1)), (const char) ((a2)))), \\\n __ch (__bin_args_eq (vector signed int, ((a1)), int, ((a2))), \\\n       ((vector signed int) __builtin_altivec_vspltw ((vector signed int) ((a1)), (const char) ((a2)))), \\\n+__ch (__bin_args_eq (vector signed int, ((a1)), unsigned int, ((a2))), \\\n+      ((vector signed int) __builtin_altivec_vspltw ((vector signed int) ((a1)), (const char) ((a2)))), \\\n __ch (__bin_args_eq (vector unsigned int, ((a1)), int, ((a2))), \\\n       ((vector unsigned int) __builtin_altivec_vspltw ((vector signed int) (a1), (const char) ((a2)))), \\\n-__altivec_link_error_invalid_argument ())))\n+__ch (__bin_args_eq (vector unsigned int, ((a1)), unsigned int, ((a2))), \\\n+      ((vector unsigned int) __builtin_altivec_vspltw ((vector signed int) (a1), (const char) ((a2)))), \\\n+__altivec_link_error_invalid_argument ()))))))\n \n #define vec_vsplth(a1, a2) \\\n __ch (__bin_args_eq (vector signed short, ((a1)), int, ((a2))), \\\n       ((vector signed short) __builtin_altivec_vsplth ((vector signed short) ((a1)), (const char) ((a2)))), \\\n+__ch (__bin_args_eq (vector signed short, ((a1)), unsigned int, ((a2))), \\\n+      ((vector signed short) __builtin_altivec_vsplth ((vector signed short) ((a1)), (const char) ((a2)))), \\\n __ch (__bin_args_eq (vector unsigned short, ((a1)), int, ((a2))), \\\n       ((vector unsigned short) __builtin_altivec_vsplth ((vector signed short) ((a1)), (const char) ((a2)))), \\\n-__altivec_link_error_invalid_argument ()))\n+__ch (__bin_args_eq (vector unsigned short, ((a1)), unsigned int, ((a2))), \\\n+      ((vector unsigned short) __builtin_altivec_vsplth ((vector signed short) ((a1)), (const char) ((a2)))), \\\n+__altivec_link_error_invalid_argument ()))))\n \n #define vec_vspltb(a1, a2) \\\n __ch (__bin_args_eq (vector signed char, ((a1)), int, ((a2))), \\\n       ((vector signed char) __builtin_altivec_vspltb ((vector signed char) ((a1)), (const char) ((a2)))), \\\n+__ch (__bin_args_eq (vector signed char, ((a1)), unsigned int, ((a2))), \\\n+      ((vector signed char) __builtin_altivec_vspltb ((vector signed char) ((a1)), (const char) ((a2)))), \\\n __ch (__bin_args_eq (vector unsigned char, ((a1)), int, ((a2))), \\\n       ((vector unsigned char) __builtin_altivec_vspltb ((vector signed char) ((a1)), (const char) ((a2)))), \\\n-__altivec_link_error_invalid_argument ()))\n+__ch (__bin_args_eq (vector unsigned char, ((a1)), unsigned int, ((a2))), \\\n+      ((vector unsigned char) __builtin_altivec_vspltb ((vector signed char) ((a1)), (const char) ((a2)))), \\\n+__altivec_link_error_invalid_argument ()))))\n \n #define vec_splat_s8(a1) __builtin_altivec_vspltisb ((a1))\n \n@@ -7634,7 +8212,7 @@ __ch (__bin_args_eq (vector unsigned int, (a1), vector unsigned int, (a2)), \\\n __ch (__bin_args_eq (vector signed int, (a1), vector signed int, (a2)), \\\n       __builtin_altivec_vcmpgtsw_p (__CR6_EQ, (vector signed int) (a2), (vector signed int) (a1)), \\\n __ch (__bin_args_eq (vector float, (a1), vector float, (a2)), \\\n-      __builtin_altivec_vcmpgefp_p (__CR6_EQ, (vector float) (a1), (vector float) (a2)), \\\n+      __builtin_altivec_vcmpgefp_p (__CR6_LT, (vector float) (a1), (vector float) (a2)), \\\n     __altivec_link_error_invalid_argument ())))))))))))))\n \n #define vec_all_gt(a1, a2) \\"}]}