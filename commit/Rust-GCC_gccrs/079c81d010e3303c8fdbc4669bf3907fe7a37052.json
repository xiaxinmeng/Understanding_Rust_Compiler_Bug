{"sha": "079c81d010e3303c8fdbc4669bf3907fe7a37052", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc5YzgxZDAxMGUzMzAzYzhmZGJjNDY2OWJmMzkwN2ZlN2EzNzA1Mg==", "commit": {"author": {"name": "Robin Dapp", "email": "rdapp@linux.ibm.com", "date": "2018-10-19T06:25:30Z"}, "committer": {"name": "Robin Dapp", "email": "rdapp@gcc.gnu.org", "date": "2018-10-19T06:25:30Z"}, "message": "Reset insn priority after inc/ref replacement\n\nThis patch recomputes the insn priority when a replacement for one of its\ndependent insns is applied.\n\ngcc/ChangeLog:\n\n\t* haifa-sched.c (priority): Add force_recompute parameter.\n\t(apply_replacement): Call priority () with force_recompute = true.\n\t(restore_pattern): Likewise.\n\nFrom-SVN: r265304", "tree": {"sha": "62a104b46c142a0806e88524cf3af84a78d8c3e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62a104b46c142a0806e88524cf3af84a78d8c3e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/079c81d010e3303c8fdbc4669bf3907fe7a37052", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/079c81d010e3303c8fdbc4669bf3907fe7a37052", "html_url": "https://github.com/Rust-GCC/gccrs/commit/079c81d010e3303c8fdbc4669bf3907fe7a37052", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/079c81d010e3303c8fdbc4669bf3907fe7a37052/comments", "author": {"login": "rdapp-ibm", "id": 80318053, "node_id": "MDQ6VXNlcjgwMzE4MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/80318053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp-ibm", "html_url": "https://github.com/rdapp-ibm", "followers_url": "https://api.github.com/users/rdapp-ibm/followers", "following_url": "https://api.github.com/users/rdapp-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp-ibm/subscriptions", "organizations_url": "https://api.github.com/users/rdapp-ibm/orgs", "repos_url": "https://api.github.com/users/rdapp-ibm/repos", "events_url": "https://api.github.com/users/rdapp-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e75883a503330846f7a76bc6610513fd10a45cf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e75883a503330846f7a76bc6610513fd10a45cf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e75883a503330846f7a76bc6610513fd10a45cf4"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "82cc005283ff55c2a6ae360584016842d9ec0b4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/079c81d010e3303c8fdbc4669bf3907fe7a37052/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/079c81d010e3303c8fdbc4669bf3907fe7a37052/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=079c81d010e3303c8fdbc4669bf3907fe7a37052", "patch": "@@ -1,3 +1,9 @@\n+2018-10-19  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* haifa-sched.c (priority): Add force_recompute parameter.\n+\t(apply_replacement): Call priority () with force_recompute = true.\n+\t(restore_pattern): Likewise.\n+\n 2018-10-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* simplify-rtx.c (simplify_subreg): Limit mask of vec_merge to"}, {"sha": "2c84ce3814357b30e1aaed57f1de3034d99afd57", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/079c81d010e3303c8fdbc4669bf3907fe7a37052/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/079c81d010e3303c8fdbc4669bf3907fe7a37052/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=079c81d010e3303c8fdbc4669bf3907fe7a37052", "patch": "@@ -830,7 +830,7 @@ add_delay_dependencies (rtx_insn *insn)\n \f\n /* Forward declarations.  */\n \n-static int priority (rtx_insn *);\n+static int priority (rtx_insn *, bool force_recompute = false);\n static int autopref_rank_for_schedule (const rtx_insn *, const rtx_insn *);\n static int rank_for_schedule (const void *, const void *);\n static void swap_sort (rtx_insn **, int);\n@@ -1590,15 +1590,15 @@ bool sched_fusion;\n \n /* Compute the priority number for INSN.  */\n static int\n-priority (rtx_insn *insn)\n+priority (rtx_insn *insn, bool force_recompute)\n {\n   if (! INSN_P (insn))\n     return 0;\n \n   /* We should not be interested in priority of an already scheduled insn.  */\n   gcc_assert (QUEUE_INDEX (insn) != QUEUE_SCHEDULED);\n \n-  if (!INSN_PRIORITY_KNOWN (insn))\n+  if (force_recompute || !INSN_PRIORITY_KNOWN (insn))\n     {\n       int this_priority = -1;\n \n@@ -4713,7 +4713,12 @@ apply_replacement (dep_t dep, bool immediately)\n       success = validate_change (desc->insn, desc->loc, desc->newval, 0);\n       gcc_assert (success);\n \n+      rtx_insn *insn = DEP_PRO (dep);\n+\n+      /* Recompute priority since dependent priorities may have changed.  */\n+      priority (insn, true);\n       update_insn_after_change (desc->insn);\n+\n       if ((TODO_SPEC (desc->insn) & (HARD_DEP | DEP_POSTPONED)) == 0)\n \tfix_tick_ready (desc->insn);\n \n@@ -4767,7 +4772,17 @@ restore_pattern (dep_t dep, bool immediately)\n \n       success = validate_change (desc->insn, desc->loc, desc->orig, 0);\n       gcc_assert (success);\n+\n+      rtx_insn *insn = DEP_PRO (dep);\n+\n+      if (QUEUE_INDEX (insn) != QUEUE_SCHEDULED)\n+\t{\n+\t  /* Recompute priority since dependent priorities may have changed.  */\n+\t  priority (insn, true);\n+\t}\n+\n       update_insn_after_change (desc->insn);\n+\n       if (backtrack_queue != NULL)\n \t{\n \t  backtrack_queue->replacement_deps.safe_push (dep);"}]}