{"sha": "beabed99977d3b905ea304a8049a7891574f158f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVhYmVkOTk5NzdkM2I5MDVlYTMwNGE4MDQ5YTc4OTE1NzRmMTU4Zg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-10-04T14:09:23Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-10-04T14:09:23Z"}, "message": "i386.c (ix86_nsaved_regs): Use GENERAL_REGNO_P to check for general register.\n\n\t* config/i386/i386.c (ix86_nsaved_regs): Use GENERAL_REGNO_P to\n\tcheck for general register.\n\t(ix86_emit_save_regs): Ditto.\n\t(ix86_emit_save_regs_using_mov): Ditto.\n\t(ix86_emit_restore_regs_using_pop): Ditto.\n\t(ix86_emit_restore_regs_using_mov): Ditto.\n\nFrom-SVN: r228460", "tree": {"sha": "d65873224d7131c363bf3ba8536adcafc29944a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d65873224d7131c363bf3ba8536adcafc29944a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/beabed99977d3b905ea304a8049a7891574f158f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beabed99977d3b905ea304a8049a7891574f158f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beabed99977d3b905ea304a8049a7891574f158f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beabed99977d3b905ea304a8049a7891574f158f/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "51daf35866a68b9c082f90bafd45d5a307257ab4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51daf35866a68b9c082f90bafd45d5a307257ab4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51daf35866a68b9c082f90bafd45d5a307257ab4"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "4ba93a24d652019fde3d086329329c2b90f9d6e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beabed99977d3b905ea304a8049a7891574f158f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beabed99977d3b905ea304a8049a7891574f158f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=beabed99977d3b905ea304a8049a7891574f158f", "patch": "@@ -1,3 +1,12 @@\n+2015-10-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_nsaved_regs): Use GENERAL_REGNO_P to\n+\tcheck for general register.\n+\t(ix86_emit_save_regs): Ditto.\n+\t(ix86_emit_save_regs_using_mov): Ditto.\n+\t(ix86_emit_restore_regs_using_pop): Ditto.\n+\t(ix86_emit_restore_regs_using_mov): Ditto.\n+\n 2015-10-03  Marek Polacek  <polacek@redhat.com>\n \n \t* Makefile.in (insn-latencytab.o): Remove -Wno-duplicated-cond."}, {"sha": "9c4cfbdc3f34bae946efcc23a1e3318753a18045", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beabed99977d3b905ea304a8049a7891574f158f/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beabed99977d3b905ea304a8049a7891574f158f/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=beabed99977d3b905ea304a8049a7891574f158f", "patch": "@@ -11083,7 +11083,7 @@ ix86_nsaved_regs (void)\n   int regno;\n \n   for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n-    if (!SSE_REGNO_P (regno) && ix86_save_reg (regno, true))\n+    if (GENERAL_REGNO_P (regno) && ix86_save_reg (regno, true))\n       nregs ++;\n   return nregs;\n }\n@@ -11493,7 +11493,7 @@ ix86_emit_save_regs (void)\n   rtx_insn *insn;\n \n   for (regno = FIRST_PSEUDO_REGISTER - 1; regno-- > 0; )\n-    if (!SSE_REGNO_P (regno) && ix86_save_reg (regno, true))\n+    if (GENERAL_REGNO_P (regno) && ix86_save_reg (regno, true))\n       {\n \tinsn = emit_insn (gen_push (gen_rtx_REG (word_mode, regno)));\n \tRTX_FRAME_RELATED_P (insn) = 1;\n@@ -11573,7 +11573,7 @@ ix86_emit_save_regs_using_mov (HOST_WIDE_INT cfa_offset)\n   unsigned int regno;\n \n   for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n-    if (!SSE_REGNO_P (regno) && ix86_save_reg (regno, true))\n+    if (GENERAL_REGNO_P (regno) && ix86_save_reg (regno, true))\n       {\n         ix86_emit_save_reg_using_mov (word_mode, regno, cfa_offset);\n \tcfa_offset -= UNITS_PER_WORD;\n@@ -11591,7 +11591,7 @@ ix86_emit_save_sse_regs_using_mov (HOST_WIDE_INT cfa_offset)\n     if (SSE_REGNO_P (regno) && ix86_save_reg (regno, true))\n       {\n \tix86_emit_save_reg_using_mov (V4SFmode, regno, cfa_offset);\n-\tcfa_offset -= 16;\n+\tcfa_offset -= GET_MODE_SIZE (V4SFmode);\n       }\n }\n \n@@ -12991,7 +12991,7 @@ ix86_emit_restore_regs_using_pop (void)\n   unsigned int regno;\n \n   for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n-    if (!SSE_REGNO_P (regno) && ix86_save_reg (regno, false))\n+    if (GENERAL_REGNO_P (regno) && ix86_save_reg (regno, false))\n       ix86_emit_restore_reg_using_pop (gen_rtx_REG (word_mode, regno));\n }\n \n@@ -13034,7 +13034,7 @@ ix86_emit_restore_regs_using_mov (HOST_WIDE_INT cfa_offset,\n   unsigned int regno;\n \n   for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n-    if (!SSE_REGNO_P (regno) && ix86_save_reg (regno, maybe_eh_return))\n+    if (GENERAL_REGNO_P (regno) && ix86_save_reg (regno, maybe_eh_return))\n       {\n \trtx reg = gen_rtx_REG (word_mode, regno);\n \trtx mem;\n@@ -13085,7 +13085,7 @@ ix86_emit_restore_sse_regs_using_mov (HOST_WIDE_INT cfa_offset,\n \n \tix86_add_cfa_restore_note (NULL, reg, cfa_offset);\n \n-\tcfa_offset -= 16;\n+\tcfa_offset -= GET_MODE_SIZE (V4SFmode);\n       }\n }\n "}]}