{"sha": "9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY3MGQyYmMzYWU2ODllOWZlODZjZDFlYmQwN2Q3YjUxYTc4NWUyYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-12-18T07:55:42Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-12-18T07:55:42Z"}, "message": "re PR rtl-optimization/16968 (loop optimizer miscompilation)\n\n\tPR rtl-optimization/16968\n\t* loop.c (scan_loop): Stop scanning the loop for movable\n\tinsns as soon as an optimization barrier is encountered.\n\nFrom-SVN: r92348", "tree": {"sha": "2b690f3b251c1444c16804e71fd3a29ca5c237a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b690f3b251c1444c16804e71fd3a29ca5c237a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b/comments", "author": null, "committer": null, "parents": [{"sha": "bc6d19abb1155efe6938d3e96c409f4c10269bee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc6d19abb1155efe6938d3e96c409f4c10269bee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc6d19abb1155efe6938d3e96c409f4c10269bee"}], "stats": {"total": 130, "additions": 130, "deletions": 0}, "files": [{"sha": "a98a1d7d83bf4a77135f06d67f1a452a77ad2853", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b", "patch": "@@ -1,3 +1,9 @@\n+2004-12-18  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR rtl-optimization/16968\n+\t* loop.c (scan_loop): Stop scanning the loop for movable\n+\tinsns as soon as an optimization barrier is encountered.\n+\n 2004-12-17  Zack Weinberg  <zack@codesourcery.com>\n \n \tPR 18897"}, {"sha": "faf6cb23b8254e9bfad9d81c7d88c7cb01b86055", "filename": "gcc/loop.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b", "patch": "@@ -1119,6 +1119,9 @@ scan_loop (struct loop *loop, int flags)\n \tin_libcall--;\n       if (NONJUMP_INSN_P (p))\n \t{\n+\t  /* Do not scan past an optimization barrier.  */\n+\t  if (GET_CODE (PATTERN (p)) == ASM_INPUT)\n+\t    break;\n \t  temp = find_reg_note (p, REG_LIBCALL, NULL_RTX);\n \t  if (temp)\n \t    in_libcall++;"}, {"sha": "1ef26bacd31c6d8bee8eb29e8c4a46a2647cde7f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b", "patch": "@@ -1,3 +1,7 @@\n+2004-12-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c-torture/execute/20041218-1.c: New test.\n+\n 2004-12-17  Diego Novillo  <dnovillo@redhat.com>\n \n \t* gcc.dg/pr18501.c: New test."}, {"sha": "4d113e4557cae2e21e0374bef400d227f7f1cff1", "filename": "gcc/testsuite/gcc.c-torture/execute/20041218-1.c", "status": "added", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20041218-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20041218-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20041218-1.c?ref=9f70d2bc3ae689e9fe86cd1ebd07d7b51a785e2b", "patch": "@@ -0,0 +1,117 @@\n+/* PR rtl-optimization/16968 */\n+/* Testcase by Jakub Jelinek  <jakub@redhat.com> */\n+\n+struct T\n+{\n+  unsigned int b, c, *d;\n+  unsigned char e;\n+};\n+struct S\n+{\n+  unsigned int a;\n+  struct T f;\n+};\n+struct U\n+{\n+  struct S g, h;\n+};\n+struct V\n+{\n+  unsigned int i;\n+  struct U j;\n+};\n+\n+extern void exit (int);\n+extern void abort (void);\n+\n+void *\n+dummy1 (void *x)\n+{\n+  return \"\";\n+}\n+\n+void *\n+dummy2 (void *x, void *y)\n+{\n+  exit (0);\n+}\n+\n+struct V *\n+baz (unsigned int x)\n+{\n+  static struct V v;\n+  __builtin_memset (&v, 0x55, sizeof (v));\n+  return &v;\n+}\n+\n+int\n+check (void *x, struct S *y)\n+{\n+  if (y->a || y->f.b || y->f.c || y->f.d || y->f.e)\n+    abort ();\n+  return 1;\n+}\n+\n+static struct V *\n+bar (unsigned int x, void *y)\n+{\n+  const struct T t = { 0, 0, (void *) 0, 0 };\n+  struct V *u;\n+  void *v;\n+  v = dummy1 (y);\n+  if (!v)\n+    return (void *) 0;\n+\n+  u = baz (sizeof (struct V));\n+  u->i = x;\n+  u->j.g.a = 0;\n+  u->j.g.f = t;\n+  u->j.h.a = 0;\n+  u->j.h.f = t;\n+\n+  if (!check (v, &u->j.g) || !check (v, &u->j.h))\n+    return (void *) 0;\n+  return u;\n+}\n+\n+int\n+foo (unsigned int *x, unsigned int y, void **z)\n+{\n+  void *v;\n+  unsigned int i, j;\n+\n+  *z = v = (void *) 0;\n+\n+  for (i = 0; i < y; i++)\n+    {\n+      struct V *c;\n+\n+      j = *x;\n+\n+      switch (j)\n+\t{\n+\tcase 1:\n+\t  c = bar (j, x);\n+\t  break;\n+\tdefault:\n+\t  c = 0;\n+\t  break;\n+\t}\n+      if (c)\n+\tv = dummy2 (v, c);\n+      else\n+        return 1;\n+    }\n+\n+  *z = v;\n+  return 0;\n+}\n+\n+int\n+main (void)\n+{\n+  unsigned int one = 1;\n+  void *p;\n+  foo (&one, 1, &p);\n+  abort ();\n+}"}]}