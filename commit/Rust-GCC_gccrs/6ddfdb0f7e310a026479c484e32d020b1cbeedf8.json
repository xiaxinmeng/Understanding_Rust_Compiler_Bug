{"sha": "6ddfdb0f7e310a026479c484e32d020b1cbeedf8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRkZmRiMGY3ZTMxMGEwMjY0NzljNDg0ZTMyZDAyMGIxY2JlZWRmOA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@codesourcery.com", "date": "2010-04-16T09:32:21Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2010-04-16T09:32:21Z"}, "message": "recog.h (struct recog_data): New field is_operator.\n\n\t* recog.h (struct recog_data): New field is_operator.\n\t(struct insn_operand_data): New field is_operator.\n\t* recog.c (extract_insn): Set recog_data.is_operator.\n\t* genoutput.c (output_operand_data): Emit code to set the\n\tis_operator field.\n\t* reload.c (find_reloads): Use it rather than testing for an\n\tempty constraint string.\n\nFrom-SVN: r158403", "tree": {"sha": "e2e650590b499c11d4614b72675674b86849b851", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2e650590b499c11d4614b72675674b86849b851"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ddfdb0f7e310a026479c484e32d020b1cbeedf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ddfdb0f7e310a026479c484e32d020b1cbeedf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ddfdb0f7e310a026479c484e32d020b1cbeedf8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ddfdb0f7e310a026479c484e32d020b1cbeedf8/comments", "author": null, "committer": null, "parents": [{"sha": "5312b0660e6f24145896e84382d184c16c884bf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5312b0660e6f24145896e84382d184c16c884bf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5312b0660e6f24145896e84382d184c16c884bf1"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "79f4c59bcabfea138f96805013ae323729e25dc7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ddfdb0f7e310a026479c484e32d020b1cbeedf8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ddfdb0f7e310a026479c484e32d020b1cbeedf8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ddfdb0f7e310a026479c484e32d020b1cbeedf8", "patch": "@@ -1,3 +1,13 @@\n+2010-04-16  Bernd Schmidt  <bernd.schmidt@codesourcery.com>\n+\n+\t* recog.h (struct recog_data): New field is_operator.\n+\t(struct insn_operand_data): New field is_operator.\n+\t* recog.c (extract_insn): Set recog_data.is_operator.\n+\t* genoutput.c (output_operand_data): Emit code to set the\n+\tis_operator field.\n+\t* reload.c (find_reloads): Use it rather than testing for an\n+\tempty constraint string.\n+\n 2010-04-16  Jakub Jelinek  <jakub@redhat.com>\n \n \t* alias.c (memrefs_conflict_p): If x and y are the same VALUE,"}, {"sha": "b0be21c476b8462adf66d9cb77ab8616d433e538", "filename": "gcc/genoutput.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ddfdb0f7e310a026479c484e32d020b1cbeedf8/gcc%2Fgenoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ddfdb0f7e310a026479c484e32d020b1cbeedf8/gcc%2Fgenoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenoutput.c?ref=6ddfdb0f7e310a026479c484e32d020b1cbeedf8", "patch": "@@ -266,6 +266,8 @@ output_operand_data (void)\n \n       printf (\"    %d,\\n\", d->strict_low);\n \n+      printf (\"    %d,\\n\", d->constraint == NULL ? 1 : 0);\n+\n       printf (\"    %d\\n\", d->eliminable);\n \n       printf(\"  },\\n\");"}, {"sha": "0dea35fb3d7eaa36967e3fae65371d394b1909bd", "filename": "gcc/recog.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ddfdb0f7e310a026479c484e32d020b1cbeedf8/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ddfdb0f7e310a026479c484e32d020b1cbeedf8/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=6ddfdb0f7e310a026479c484e32d020b1cbeedf8", "patch": "@@ -2082,6 +2082,7 @@ extract_insn (rtx insn)\n \t\t\t       recog_data.operand_loc,\n \t\t\t       recog_data.constraints,\n \t\t\t       recog_data.operand_mode, NULL);\n+\t  memset (recog_data.is_operator, 0, sizeof recog_data.is_operator);\n \t  if (noperands > 0)\n \t    {\n \t      const char *p =  recog_data.constraints[0];\n@@ -2111,6 +2112,7 @@ extract_insn (rtx insn)\n       for (i = 0; i < noperands; i++)\n \t{\n \t  recog_data.constraints[i] = insn_data[icode].operand[i].constraint;\n+\t  recog_data.is_operator[i] = insn_data[icode].operand[i].is_operator;\n \t  recog_data.operand_mode[i] = insn_data[icode].operand[i].mode;\n \t  /* VOIDmode match_operands gets mode from their real operand.  */\n \t  if (recog_data.operand_mode[i] == VOIDmode)"}, {"sha": "3daac6225c2e953fd5717084182602a7140b644b", "filename": "gcc/recog.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ddfdb0f7e310a026479c484e32d020b1cbeedf8/gcc%2Frecog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ddfdb0f7e310a026479c484e32d020b1cbeedf8/gcc%2Frecog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.h?ref=6ddfdb0f7e310a026479c484e32d020b1cbeedf8", "patch": "@@ -194,6 +194,9 @@ struct recog_data\n   /* Gives the constraint string for operand N.  */\n   const char *constraints[MAX_RECOG_OPERANDS];\n \n+  /* Nonzero if operand N is a match_operator or a match_parallel.  */\n+  char is_operator[MAX_RECOG_OPERANDS];\n+\n   /* Gives the mode of operand N.  */\n   enum machine_mode operand_mode[MAX_RECOG_OPERANDS];\n \n@@ -260,6 +263,8 @@ struct insn_operand_data\n \n   const char strict_low;\n \n+  const char is_operator;\n+\n   const char eliminable;\n };\n "}, {"sha": "2406b6bc5503fb9512d74ca7729ae2cdd5c46d52", "filename": "gcc/reload.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ddfdb0f7e310a026479c484e32d020b1cbeedf8/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ddfdb0f7e310a026479c484e32d020b1cbeedf8/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=6ddfdb0f7e310a026479c484e32d020b1cbeedf8", "patch": "@@ -3631,7 +3631,7 @@ find_reloads (rtx insn, int replace, int ind_levels, int live_known,\n \t\t   || modified[j] != RELOAD_WRITE)\n \t\t  && j != i\n \t\t  /* Ignore things like match_operator operands.  */\n-\t\t  && *recog_data.constraints[j] != 0\n+\t\t  && !recog_data.is_operator[j]\n \t\t  /* Don't count an input operand that is constrained to match\n \t\t     the early clobber operand.  */\n \t\t  && ! (this_alternative_matches[j] == i"}]}