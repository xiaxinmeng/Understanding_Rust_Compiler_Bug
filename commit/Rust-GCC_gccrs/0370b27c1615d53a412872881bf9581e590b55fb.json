{"sha": "0370b27c1615d53a412872881bf9581e590b55fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM3MGIyN2MxNjE1ZDUzYTQxMjg3Mjg4MWJmOTU4MWU1OTBiNTVmYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-12-02T22:02:30Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-12-02T22:02:30Z"}, "message": "tree.c (build_range_type_1): Do not SET_TYPE_STRUCTURAL_EQUALITY for a non-shared type.\n\n\t* tree.c (build_range_type_1): Do not SET_TYPE_STRUCTURAL_EQUALITY\n\tfor a non-shared type.\n\nFrom-SVN: r167393", "tree": {"sha": "4707bd0b11d69f2645fde2f8ffd49d873abd7815", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4707bd0b11d69f2645fde2f8ffd49d873abd7815"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0370b27c1615d53a412872881bf9581e590b55fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0370b27c1615d53a412872881bf9581e590b55fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0370b27c1615d53a412872881bf9581e590b55fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0370b27c1615d53a412872881bf9581e590b55fb/comments", "author": null, "committer": null, "parents": [{"sha": "4aa9afb41f6c68620efc35697c00bbd60b3ba460", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aa9afb41f6c68620efc35697c00bbd60b3ba460", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4aa9afb41f6c68620efc35697c00bbd60b3ba460"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "5bcef5d002585ff3c9b02b71000113757ac7336e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0370b27c1615d53a412872881bf9581e590b55fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0370b27c1615d53a412872881bf9581e590b55fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0370b27c1615d53a412872881bf9581e590b55fb", "patch": "@@ -1,3 +1,8 @@\n+2010-12-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree.c (build_range_type_1): Do not SET_TYPE_STRUCTURAL_EQUALITY\n+\tfor a non-shared type.\n+\n 2010-12-02  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/45297"}, {"sha": "5f48ec73002c6828aa8b154eb550a1461f56237e", "filename": "gcc/tree.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0370b27c1615d53a412872881bf9581e590b55fb/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0370b27c1615d53a412872881bf9581e590b55fb/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=0370b27c1615d53a412872881bf9581e590b55fb", "patch": "@@ -7096,6 +7096,7 @@ static tree\n build_range_type_1 (tree type, tree lowval, tree highval, bool shared)\n {\n   tree itype = make_node (INTEGER_TYPE);\n+  hashval_t hashcode = 0;\n \n   TREE_TYPE (itype) = type;\n \n@@ -7109,6 +7110,9 @@ build_range_type_1 (tree type, tree lowval, tree highval, bool shared)\n   TYPE_ALIGN (itype) = TYPE_ALIGN (type);\n   TYPE_USER_ALIGN (itype) = TYPE_USER_ALIGN (type);\n \n+  if (!shared)\n+    return itype;\n+\n   if ((TYPE_MIN_VALUE (itype)\n        && TREE_CODE (TYPE_MIN_VALUE (itype)) != INTEGER_CST)\n       || (TYPE_MAX_VALUE (itype)\n@@ -7120,13 +7124,10 @@ build_range_type_1 (tree type, tree lowval, tree highval, bool shared)\n       return itype;\n     }\n \n-  if (shared)\n-    {\n-      hashval_t hash = iterative_hash_expr (TYPE_MIN_VALUE (itype), 0);\n-      hash = iterative_hash_expr (TYPE_MAX_VALUE (itype), hash);\n-      hash = iterative_hash_hashval_t (TYPE_HASH (type), hash);\n-      itype = type_hash_canon (hash, itype);\n-    }\n+  hashcode = iterative_hash_expr (TYPE_MIN_VALUE (itype), hashcode);\n+  hashcode = iterative_hash_expr (TYPE_MAX_VALUE (itype), hashcode);\n+  hashcode = iterative_hash_hashval_t (TYPE_HASH (type), hashcode);\n+  itype = type_hash_canon (hashcode, itype);\n \n   return itype;\n }"}]}