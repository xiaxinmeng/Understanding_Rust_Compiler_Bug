{"sha": "a02ee5b2cf851df60c65a3152100b588ff06cb78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAyZWU1YjJjZjg1MWRmNjBjNjVhMzE1MjEwMGI1ODhmZjA2Y2I3OA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-04-23T17:39:54Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-04-23T17:39:54Z"}, "message": "fr30.md (addsi_small_int): Use REGNO_PTR_FRAME_P to identify potentially eliminable registers to...\n\n\n\t* config/fr30/fr30.md (addsi_small_int): Use REGNO_PTR_FRAME_P to\n\tidentify potentially eliminable registers to additionally catch\n\tVIRTUAL_INCOMING_ARGS_REGNUM.\n\t(addsi3): Update the conditions on when to use addsi_small_int.\n\nFrom-SVN: r113197", "tree": {"sha": "06c0ee947082869b8a934b580fa64ce2f7bb4374", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06c0ee947082869b8a934b580fa64ce2f7bb4374"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a02ee5b2cf851df60c65a3152100b588ff06cb78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a02ee5b2cf851df60c65a3152100b588ff06cb78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a02ee5b2cf851df60c65a3152100b588ff06cb78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a02ee5b2cf851df60c65a3152100b588ff06cb78/comments", "author": null, "committer": null, "parents": [{"sha": "c21242e8e034676c367a0c6e6d47cf3ba53eb942", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21242e8e034676c367a0c6e6d47cf3ba53eb942", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c21242e8e034676c367a0c6e6d47cf3ba53eb942"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "91293c1dfbbacd15e9325463ebee38e1becfbcaa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a02ee5b2cf851df60c65a3152100b588ff06cb78/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a02ee5b2cf851df60c65a3152100b588ff06cb78/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a02ee5b2cf851df60c65a3152100b588ff06cb78", "patch": "@@ -1,3 +1,10 @@\n+2006-04-23  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* config/fr30/fr30.md (addsi_small_int): Use REGNO_PTR_FRAME_P to\n+\tidentify potentially eliminable registers to additionally catch\n+\tVIRTUAL_INCOMING_ARGS_REGNUM.\n+\t(addsi3): Update the conditions on when to use addsi_small_int.\n+\n 2006-04-23  Roger Sayle  <roger@eyesopen.com>\n \n \tPR target/16641"}, {"sha": "0398eccc005a8d1687e3970d4bdd20f3f9bf70fd", "filename": "gcc/config/fr30/fr30.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a02ee5b2cf851df60c65a3152100b588ff06cb78/gcc%2Fconfig%2Ffr30%2Ffr30.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a02ee5b2cf851df60c65a3152100b588ff06cb78/gcc%2Fconfig%2Ffr30%2Ffr30.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.md?ref=a02ee5b2cf851df60c65a3152100b588ff06cb78", "patch": "@@ -654,10 +654,10 @@\n     emit_insn (gen_addsi_regs (operands[0], operands[1], operands[2]));\n   else if (GET_CODE (operands[2]) != CONST_INT)\n     emit_insn (gen_addsi_big_int (operands[0], operands[1], operands[2]));\n-  else if (   (REGNO (operands[1]) != FRAME_POINTER_REGNUM)\n-           && (REGNO (operands[1]) != ARG_POINTER_REGNUM)\n-\t   && (INTVAL (operands[2]) >= -16)\n-\t   && (INTVAL (operands[2]) <= 15))\n+  else if (INTVAL (operands[2]) >= -16\n+\t   && INTVAL (operands[2]) <= 15\n+\t   && (!REGNO_PTR_FRAME_P (REGNO (operands[1]))\n+\t       || REGNO (operands[1]) == STACK_POINTER_REGNUM))\n     emit_insn (gen_addsi_small_int (operands[0], operands[1], operands[2]));\n   else\n     emit_insn (gen_addsi_big_int (operands[0], operands[1], operands[2]));\n@@ -680,8 +680,8 @@\n   [(set (match_operand:SI 0 \"register_operand\"              \"=r,r\")\n \t(plus:SI (match_operand:SI 1 \"register_operand\"      \"0,0\")\n \t\t (match_operand:SI 2 \"add_immediate_operand\" \"I,J\")))]\n-  \"   (REGNO (operands[1]) != FRAME_POINTER_REGNUM)\n-   && (REGNO (operands[1]) != ARG_POINTER_REGNUM)\"\n+  \"! REGNO_PTR_FRAME_P (REGNO (operands[1]))\n+   || REGNO (operands[1]) == STACK_POINTER_REGNUM\"\n   \"@\n    addn\t%2, %0\n    addn2\t%2, %0\""}]}