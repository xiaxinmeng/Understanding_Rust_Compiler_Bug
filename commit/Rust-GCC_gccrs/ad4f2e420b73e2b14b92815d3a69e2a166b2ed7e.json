{"sha": "ad4f2e420b73e2b14b92815d3a69e2a166b2ed7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ0ZjJlNDIwYjczZTJiMTRiOTI4MTVkM2E2OWUyYTE2NmIyZWQ3ZQ==", "commit": {"author": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1994-09-07T15:28:04Z"}, "committer": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1994-09-07T15:28:04Z"}, "message": "(conformsTo:): Change implementati to allways use class to do lookup.\n\nFrom-SVN: r8030", "tree": {"sha": "9d360bf91257eaf48e03b1734922efdc0a3e3b3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d360bf91257eaf48e03b1734922efdc0a3e3b3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad4f2e420b73e2b14b92815d3a69e2a166b2ed7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad4f2e420b73e2b14b92815d3a69e2a166b2ed7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad4f2e420b73e2b14b92815d3a69e2a166b2ed7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad4f2e420b73e2b14b92815d3a69e2a166b2ed7e/comments", "author": null, "committer": null, "parents": [{"sha": "decab89ee4d8a92725c09febfd95e84ca9e8d859", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/decab89ee4d8a92725c09febfd95e84ca9e8d859", "html_url": "https://github.com/Rust-GCC/gccrs/commit/decab89ee4d8a92725c09febfd95e84ca9e8d859"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "1716d1d37c336264cbfb68b7c7c74a2fc8b34bf6", "filename": "gcc/objc/Object.m", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4f2e420b73e2b14b92815d3a69e2a166b2ed7e/gcc%2Fobjc%2FObject.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4f2e420b73e2b14b92815d3a69e2a166b2ed7e/gcc%2Fobjc%2FObject.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FObject.m?ref=ad4f2e420b73e2b14b92815d3a69e2a166b2ed7e", "patch": "@@ -194,12 +194,17 @@ + (IMP)instanceMethodFor:(SEL)aSel\n \n // Indicates if the receiving class or instance conforms to the given protocol\n // not usually overridden by subclasses\n-- (BOOL) conformsTo: (Protocol*)aProtocol\n+//\n+// Modified 9/5/94 to always search the class object's protocol list, rather\n+// than the meta class.\n+\n++ (BOOL) conformsTo: (Protocol*)aProtocol\n {\n   int i;\n   struct objc_protocol_list* proto_list;\n+  id parent;\n \n-  for (proto_list = isa->protocols;\n+  for (proto_list = ((Class*)self)->protocols;\n        proto_list; proto_list = proto_list->next)\n     {\n       for (i=0; i < proto_list->count; i++)\n@@ -209,12 +214,17 @@ - (BOOL) conformsTo: (Protocol*)aProtocol\n       }\n     }\n \n-  if ([self superClass])\n-    return [[self superClass] conformsTo: aProtocol];\n+  if (parent = [self superClass])\n+    return [parent conformsTo: aProtocol];\n   else\n     return NO;\n }\n \n+- (BOOL) conformsTo: (Protocol*)aProtocol\n+{\n+  return [[self class] conformsTo:aProtocol];\n+}\n+\n - (IMP)methodFor:(SEL)aSel\n {\n   return (method_get_imp(object_is_instance(self)"}]}