{"sha": "798eed5ebb0cf04e983c0b5dbace09523201db35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk4ZWVkNWViYjBjZjA0ZTk4M2MwYjVkYmFjZTA5NTIzMjAxZGIzNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-02-14T15:49:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-02-14T15:49:20Z"}, "message": "* call.c (standard_conversion): Fix multi-level ptr conversions.\n\nFrom-SVN: r17999", "tree": {"sha": "20a10ba1ffee0769871ed7e3309aa40cf5afe5da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20a10ba1ffee0769871ed7e3309aa40cf5afe5da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/798eed5ebb0cf04e983c0b5dbace09523201db35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/798eed5ebb0cf04e983c0b5dbace09523201db35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/798eed5ebb0cf04e983c0b5dbace09523201db35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/798eed5ebb0cf04e983c0b5dbace09523201db35/comments", "author": null, "committer": null, "parents": [{"sha": "d757d1410f8de5908bbd669a097fcd898cef5a85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d757d1410f8de5908bbd669a097fcd898cef5a85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d757d1410f8de5908bbd669a097fcd898cef5a85"}], "stats": {"total": 42, "additions": 16, "deletions": 26}, "files": [{"sha": "bd3003fd2d1d3dc051e5751c5ff5f0e46f8be0d9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/798eed5ebb0cf04e983c0b5dbace09523201db35/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/798eed5ebb0cf04e983c0b5dbace09523201db35/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=798eed5ebb0cf04e983c0b5dbace09523201db35", "patch": "@@ -1,6 +1,6 @@\n-Fri Feb 13 14:30:35 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+Fri Feb 13 14:55:37 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n-\t* pt.c (determine_specialization): Give better errors.\n+\t* call.c (standard_conversion): Fix multi-level ptr conversions.\n \n Fri Feb 13 14:06:22 1998  Mike Stump  <mrs@wrs.com>\n "}, {"sha": "8853ba31e28ba676582759bc83e3862803104fae", "filename": "gcc/cp/call.c", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/798eed5ebb0cf04e983c0b5dbace09523201db35/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/798eed5ebb0cf04e983c0b5dbace09523201db35/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=798eed5ebb0cf04e983c0b5dbace09523201db35", "patch": "@@ -3107,19 +3107,15 @@ standard_conversion (to, from, expr)\n     {\n       enum tree_code ufcode = TREE_CODE (TREE_TYPE (from));\n       enum tree_code utcode = TREE_CODE (TREE_TYPE (to));\n-      tree nconv = NULL_TREE;\n \n-      if (comptypes (TYPE_MAIN_VARIANT (TREE_TYPE (from)),\n-\t\t     TYPE_MAIN_VARIANT (TREE_TYPE (to)), 1))\n-\tnconv = conv;\n-      else if (utcode == VOID_TYPE && ufcode != OFFSET_TYPE\n-\t       && ufcode != FUNCTION_TYPE)\n+      if (utcode == VOID_TYPE && ufcode != OFFSET_TYPE\n+\t  && ufcode != FUNCTION_TYPE)\n \t{\n \t  from = build_pointer_type\n \t    (cp_build_type_variant (void_type_node,\n \t\t\t\t    TYPE_READONLY (TREE_TYPE (from)),\n \t\t\t\t    TYPE_VOLATILE (TREE_TYPE (from))));\n-\t  nconv = build_conv (PTR_CONV, from, conv);\n+\t  conv = build_conv (PTR_CONV, from, conv);\n \t}\n       else if (ufcode == OFFSET_TYPE && utcode == OFFSET_TYPE)\n \t{\n@@ -3133,7 +3129,7 @@ standard_conversion (to, from, expr)\n \t    {\n \t      from = build_offset_type (tbase, TREE_TYPE (TREE_TYPE (from)));\n \t      from = build_pointer_type (from);\n-\t      nconv = build_conv (PMEM_CONV, from, conv);\n+\t      conv = build_conv (PMEM_CONV, from, conv);\n \t    }\n \t}\n       else if (IS_AGGR_TYPE (TREE_TYPE (from))\n@@ -3145,14 +3141,14 @@ standard_conversion (to, from, expr)\n \t\t\t\t\t    TYPE_READONLY (TREE_TYPE (from)),\n \t\t\t\t\t    TYPE_VOLATILE (TREE_TYPE (from)));\n \t      from = build_pointer_type (from);\n-\t      nconv = build_conv (PTR_CONV, from, conv);\n+\t      conv = build_conv (PTR_CONV, from, conv);\n \t    }\n \t}\n \n-      if (nconv && comptypes (from, to, 1))\n-\tconv = nconv;\n-      else if (nconv && comp_ptr_ttypes (TREE_TYPE (to), TREE_TYPE (from)))\n-\tconv = build_conv (QUAL_CONV, to, nconv);\n+      if (comptypes (from, to, 1))\n+\t/* OK */;\n+      else if (comp_ptr_ttypes (TREE_TYPE (to), TREE_TYPE (from)))\n+\tconv = build_conv (QUAL_CONV, to, conv);\n       else if (ptr_reasonably_similar (TREE_TYPE (to), TREE_TYPE (from)))\n \t{\n \t  conv = build_conv (PTR_CONV, to, conv);"}, {"sha": "e4fa8bb29b9286da6c996496c8b5ffefdba8a388", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/798eed5ebb0cf04e983c0b5dbace09523201db35/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/798eed5ebb0cf04e983c0b5dbace09523201db35/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=798eed5ebb0cf04e983c0b5dbace09523201db35", "patch": "@@ -519,15 +519,7 @@ determine_specialization (template_id, decl, targs_out,\n \ttmpl = DECL_TI_TEMPLATE (fn);\n       else if (TREE_CODE (fn) != TEMPLATE_DECL\n \t       || (need_member_template && !is_member_template (fn)))\n-\t{\n-\t  if (decls_match (decl, fn) && 0)\n-\t    {\n-\t      cp_error (\"`template <>' applied to non-specialization `%D'\",\n-\t\t\tfn);\n-\t      return NULL_TREE;\n-\t    }\n-\t  continue;\n-\t}\n+\tcontinue;\n       else\n \ttmpl = fn;\n \n@@ -572,7 +564,8 @@ determine_specialization (template_id, decl, targs_out,\n     {\n     no_match:\n       if (complain)\n-\tcp_error (\"`%D' does not match any template declaration\", decl);\n+\tcp_error (\"`%D' does not match any template declaration\",\n+\t\t  template_id);\n       \n       return NULL_TREE;\n     }\n@@ -581,7 +574,8 @@ determine_specialization (template_id, decl, targs_out,\n     ambiguous:\n       if (complain)\n \t{\n-\t  cp_error (\"ambiguous template specialization `%D'\", decl);\n+\t  cp_error (\"ambiguous template specialization `%D'\",\n+\t\t    template_id);\n \t  print_candidates (templates);\n \t}\n       return NULL_TREE;"}]}