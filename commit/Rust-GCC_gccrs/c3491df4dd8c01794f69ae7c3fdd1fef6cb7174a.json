{"sha": "c3491df4dd8c01794f69ae7c3fdd1fef6cb7174a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM0OTFkZjRkZDhjMDE3OTRmNjlhZTdjM2ZkZDFmZWY2Y2I3MTc0YQ==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2005-02-19T00:47:33Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2005-02-19T00:47:33Z"}, "message": "NEWS: Draft of libgcj NEWS for 4.0.\n\n2005-02-18  Anthony Green  <green@redhat.com>\n\n        * NEWS: Draft of libgcj NEWS for 4.0.\n\nFrom-SVN: r95256", "tree": {"sha": "b1a906ae9c08f95c66f245c2fbe90b3f11ae9f3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1a906ae9c08f95c66f245c2fbe90b3f11ae9f3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3491df4dd8c01794f69ae7c3fdd1fef6cb7174a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3491df4dd8c01794f69ae7c3fdd1fef6cb7174a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3491df4dd8c01794f69ae7c3fdd1fef6cb7174a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3491df4dd8c01794f69ae7c3fdd1fef6cb7174a/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "58cb41e617c5af9a01dff6d1e6cb80907a48f49d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58cb41e617c5af9a01dff6d1e6cb80907a48f49d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58cb41e617c5af9a01dff6d1e6cb80907a48f49d"}], "stats": {"total": 212, "additions": 212, "deletions": 0}, "files": [{"sha": "051484c35a5ad407717f29a6fd262d7ba1604460", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3491df4dd8c01794f69ae7c3fdd1fef6cb7174a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3491df4dd8c01794f69ae7c3fdd1fef6cb7174a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c3491df4dd8c01794f69ae7c3fdd1fef6cb7174a", "patch": "@@ -1,3 +1,7 @@\n+2005-02-18  Anthony Green  <green@redhat.com>\n+\n+\t* NEWS: Draft of libgcj NEWS for 4.0.\n+\n 2005-02-18  Anthony Green  <green@redhat.com>\n \n \t* java/lang/natRuntime.cc (insertSystemProperties): Normalize x86"}, {"sha": "24fd45677161e76a4d1419ca47d4e1f594903743", "filename": "libjava/NEWS", "status": "modified", "additions": 208, "deletions": 0, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3491df4dd8c01794f69ae7c3fdd1fef6cb7174a/libjava%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3491df4dd8c01794f69ae7c3fdd1fef6cb7174a/libjava%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FNEWS?ref=c3491df4dd8c01794f69ae7c3fdd1fef6cb7174a", "patch": "@@ -1,3 +1,211 @@\n+*** Changes in GCC 4.0:\n+\n+* Character encoders and decoders have been added for: iso-8859-6\n+(arabic), iso-8859-7 (greek), iso-8859-8 (hebrew), iso-8859-9\n+(latin-5), iso-8859-13, iso-8859-15 (latin-9), cp1047 (ebcdic),\n+ebcdic-xml-us,ascii, windows-1250, windows-1252, UTF-16BE (Big Endian),\n+UTF-16LE (Little Endian), UTF-32BE (Big Endian), UTF-32LE (Little\n+Endian).\n+\n+* Lots of Calendar bug fixes.\n+\n+* The http url protocol handler has been replaced with a full HTTP/1.1\n+version from GNU inetlib.\n+\n+* A new ftp url protocol handler has been added also from GNU inetlib.\n+\n+* java.beans has been updated to 1.4 including support for XMLEncoder\n+and XMLDecoder.\n+\n+* Added implementations of javax.xml (JAXP 1.3), org.xml.sax (SAX2)\n+and org.w3c.dom (DOM Level 3) interfaces. It is possible to switch\n+between different implementations AElfred2, GNU DOM, GNU XSL, libxmlj\n+SAX, libxmlj DOM and libxmlj XSL by setting different system\n+properties.  Also provided is a preliminary XPath 1.0\n+implementation. The libxmlj versions are build around libxml2 and\n+libxslt and have to be enabled during build time by the --enable-xmlj\n+configure flag. The current support is equal to the last released GNU\n+JAXP 1.3 release. These packages will be maintained as part of the GNU\n+Classpath core classes in the future. For more information,\n+conformance results and documentation on selecting different\n+implementations see doc/README.jaxp.\n+\n+* Much fuller collection documentation.\n+\n+* libgcj can now load service providers that are described via\n+META-INF/services/* resources in extension JARs. This is useful for\n+implementing the various APIs that are supposed to be extensible via\n+custom plugins. For details, please see the documentation of\n+gnu.classpath.ServiceFactory.\n+\n+* GNU Classpath's JAR implementation now has preliminary support for\n+signed entries, for so called \"signed JAR\" file support. Signed JAR\n+files are one of the key security features of managed runtimes, and\n+allows code to run privileged given unforgeable proofs of identity.\n+\n+* A much improved version of X.509 certificates has been added,\n+including a robust certificate path checking algorithm. Also included\n+is an implementation of the RSA signature scheme.\n+\n+* New javax.crypto, javax.crypto.interfaces, javax.crypto.spec,\n+javax.net, javax.net.ssl, javax.security.auth,\n+javax.security.auth.callback, javax.security.auth.login,\n+javax.security.auth.x500, javax.security.sasl and org.ietf.jgss\n+packages are now officially part of GNU Classpath. Extra crypto\n+algorithms can be obtained from the GNU Crypto project, a full TLS\n+implementation is provided by the Jessie project.\n+http://www.gnu.org/software/gnu-crypto/ \n+http://www.nongnu.org/jessie/\n+\n+* java.security.AccessController has been implemented.\n+\n+* The default java.lang.SecurityManager now uses AccessController.\n+\n+* Lookahead support for regular expressions.\n+\n+* java.util.regexp implementation through gnu.regexp wrappers.\n+\n+* Serialization object stream fixes for multiple ClassLoader scenarios.\n+\n+* java.net.URL now uses application classloader to load\n+URLStreamHandlers and reuses URLStreamHandlers when URL is reset (but\n+protocol isn't changed).\n+\n+* java.io.File.deleteOnExit() implementation.\n+\n+* java.io is now implemented by delegating most tasks directly to\n+java.nio.\n+\n+* Reworked/Optimized implementations of java.nio.Buffer and subclasses.\n+\n+* BufferedReader speed improvements.\n+\n+* Multiple java.net.InetAdress fixes and java.rmi fixes.\n+\n+* ServerSocket.accept() now restarts listening when system call\n+interrupted.\n+\n+* java.net.URI implementation.\n+\n+* New javax.print, javax.print.attribute[.standard] and\n+javax.print.event packages and classes.\n+\n+* java.text multiple new features and bug fixes (only 2 out of the\n+1000+ java.text Mauve tests now fail).\n+\n+* java.text attributed iterators support.\n+\n+* Improved useabilty of java.text implementation for several\n+applications.\n+\n+* More AWT accessible support.\n+\n+* AWT gtk+ peers component layout, dialog placement, keyboard focus\n+handling and text positioning have been improved.\n+\n+* ImageIO interfaces are more complete.\n+\n+* JList, JTable and JTree have been hugely improved.\n+\n+* java.awt.Robot support with GdkRobot in the gtk+ awt peers. Needs\n+XTest Extension (libXtst) XServer support.\n+\n+* Full java.awt.color implementation, with all standard ICC profiles,\n+except for PhotoYCC color space.\n+\n+* java.awt.image support updated to 1.4.\n+\n+* Big-endian (PowerPC) fixes for native awt GTK+ peers.\n+\n+* Better AWT focus management fro GTK+ peers.\n+\n+* Much faster and better fonts support (for both gdk Graphics and cairo\n+Graphics2D)\n+\n+* AWT Choice fixes for hidden components.\n+\n+* More javax.imageio support.\n+\n+* Better AWT Help MenuBar support.\n+\n+* Swing TabbedPane, ColorChooser and ComboBox improvements.\n+\n+* Start of JTree functionality.\n+\n+* javax.swing.Spring and SpringLayout support.\n+\n+* Added pluggable look and feel support for BasicTextFieldUI and\n+BasicToolBarSeparatorUI.\n+\n+* java.swing.text support for (Default and Layered) Highlighter,\n+FieldView, PlainView, TabExpander and TabableView added.\n+\n+* Start of JTable and JTree implementation.\n+\n+* Internal Swing frames work.\n+\n+* JMenu and JPopupMenu work.\n+\n+* New gtk+ AWT FileDialog peer now based on gtk+2.4 or higher.\n+\n+* java.awt.image LookupTables and kernel support.\n+\n+* Improved java.awt.image.BufferedImage support.\n+\n+* AWT 1.0 event model support.\n+\n+* Frame.setIconImage() support.\n+\n+* AWT GDKGraphics scaling.\n+\n+* New configure flag --enable-gtk-cairo to build Graphics2D\n+implementation build on cairo and pangoft2. Enabled at runtime by\n+defining the system property gnu.java.awt.peer.gtk.Graphics=Graphics2D.\n+\n+* javax.swing.JSpinner implemented.\n+\n+* java.awt.geom completed. Area, Arc2D, Ellipse2D and Line2D\n+implemented.\n+\n+* JColorChooser, JComboBox and JTextField implemented, including\n+example uses in GNU Classpath Examples swing Demo.\n+\n+* Better (non-black) default AWT System colors.\n+\n+* AWT lists use GTK treeviews.\n+\n+* Proper AWT focus management has been implemented.\n+\n+* Swing menus and scrollpanes are beginning to work.\n+\n+* Swing splitpanes, dialogs and internal frames were added.\n+\n+* Swing repainting / double buffering was redone.\n+\n+* Font management and Pango DPI conversion fixes.\n+\n+* A lot of AWT imaging and event bugs have been picked out.\n+\n+* More of javax.swing.text has been implemented.\n+\n+* javax.swing.Timer has been reimplemented.\n+\n+* The gnu.java.awt.EmbeddedWindow class has been improved, and now\n+supports embedding AWT windows in other top-level X windows. This\n+functionality is required by gcjwebplugin.\n+\n+* New javax.imageio, javax.imageio.event and javax.imageio.spi packages\n+and classes.\n+\n+* Working implementation of javax.swing.undo.\n+\n+* java.awt.geom.CubicCurve2D/QuadCurve2D: Can now solve cubic and\n+quadratic equations; implementation adapted from the GNU Scientific\n+Library.\n+\n+* Lots of java.awt and gtk+ peer improvements. Also more Swing work.\n+Start of EmbeddedWindow support.\n+\n *** Changes in GCC 3.4:\n \n * Compiling a .jar file will now cause non-.class entries to be automatically "}]}