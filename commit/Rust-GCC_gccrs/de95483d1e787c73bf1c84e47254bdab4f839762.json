{"sha": "de95483d1e787c73bf1c84e47254bdab4f839762", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU5NTQ4M2QxZTc4N2M3M2JmMWM4NGU0NzI1NGJkYWI0ZjgzOTc2Mg==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2011-06-29T16:19:08Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2011-06-29T16:19:08Z"}, "message": "re PR rtl-optimization/49114 ([x32] Reload failed to handle (set reg:X (plus:X (subreg:X (reg:Y) 0) (const_int))))\n\n\tPR rtl-optimization/49114\n\t* reload.c (push_reload): Define in_subreg_loc and out_subreg_loc\n\tonly if LIMIT_RELOAD_CLASS to avoid -Werror build breaks.\n\nFrom-SVN: r175652", "tree": {"sha": "9507c4b7ce3490e5dad6d22f43b158015c68c49b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9507c4b7ce3490e5dad6d22f43b158015c68c49b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de95483d1e787c73bf1c84e47254bdab4f839762", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de95483d1e787c73bf1c84e47254bdab4f839762", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de95483d1e787c73bf1c84e47254bdab4f839762", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de95483d1e787c73bf1c84e47254bdab4f839762/comments", "author": null, "committer": null, "parents": [{"sha": "931050d044409ae6f3e18ac2fe4128e1e2bee11b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/931050d044409ae6f3e18ac2fe4128e1e2bee11b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/931050d044409ae6f3e18ac2fe4128e1e2bee11b"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "2e9a8910e8b72a97dfd3d378ab1d10f26c390a59", "filename": "gcc/reload.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de95483d1e787c73bf1c84e47254bdab4f839762/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de95483d1e787c73bf1c84e47254bdab4f839762/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=de95483d1e787c73bf1c84e47254bdab4f839762", "patch": "@@ -923,7 +923,9 @@ push_reload (rtx in, rtx out, rtx *inloc, rtx *outloc,\n   int i;\n   int dont_share = 0;\n   int dont_remove_subreg = 0;\n+#ifdef LIMIT_RELOAD_CLASS\n   rtx *in_subreg_loc = 0, *out_subreg_loc = 0;\n+#endif\n   int secondary_in_reload = -1, secondary_out_reload = -1;\n   enum insn_code secondary_in_icode = CODE_FOR_nothing;\n   enum insn_code secondary_out_icode = CODE_FOR_nothing;\n@@ -1068,7 +1070,9 @@ push_reload (rtx in, rtx out, rtx *inloc, rtx *outloc,\n #endif\n \t  ))\n     {\n+#ifdef LIMIT_RELOAD_CLASS\n       in_subreg_loc = inloc;\n+#endif\n       inloc = &SUBREG_REG (in);\n       in = *inloc;\n #if ! defined (LOAD_EXTEND_OP) && ! defined (WORD_REGISTER_OPERATIONS)\n@@ -1163,7 +1167,9 @@ push_reload (rtx in, rtx out, rtx *inloc, rtx *outloc,\n #endif\n \t  ))\n     {\n+#ifdef LIMIT_RELOAD_CLASS\n       out_subreg_loc = outloc;\n+#endif\n       outloc = &SUBREG_REG (out);\n       out = *outloc;\n #if ! defined (LOAD_EXTEND_OP) && ! defined (WORD_REGISTER_OPERATIONS)"}]}