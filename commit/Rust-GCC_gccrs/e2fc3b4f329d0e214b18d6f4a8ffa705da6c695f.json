{"sha": "e2fc3b4f329d0e214b18d6f4a8ffa705da6c695f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJmYzNiNGYzMjlkMGUyMTRiMThkNmY0YThmZmE3MDVkYTZjNjk1Zg==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2014-02-10T18:19:01Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2014-02-10T18:19:01Z"}, "message": "re PR middle-end/60080 (gcc.dg/vect/vect-nop-move.c FAILs)\n\n2014-02-10  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        PR middle-end/60080\n        * cfgexpand.c (expand_asm_operands): Attach source location to\n        ASM_INPUT rtx objects.\n        * print-rtl.c (print_rtx): Check for UNKNOWN_LOCATION.\n\nFrom-SVN: r207668", "tree": {"sha": "263ae58025f3ef32705aa60e81faeec9d6d3466b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/263ae58025f3ef32705aa60e81faeec9d6d3466b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2fc3b4f329d0e214b18d6f4a8ffa705da6c695f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2fc3b4f329d0e214b18d6f4a8ffa705da6c695f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2fc3b4f329d0e214b18d6f4a8ffa705da6c695f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2fc3b4f329d0e214b18d6f4a8ffa705da6c695f/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a22ad890b654fae0dc7cdd1a7c304059fb48a19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a22ad890b654fae0dc7cdd1a7c304059fb48a19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a22ad890b654fae0dc7cdd1a7c304059fb48a19"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "a5ad4facea7b0ad772b002f84a471341dbc4e193", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2fc3b4f329d0e214b18d6f4a8ffa705da6c695f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2fc3b4f329d0e214b18d6f4a8ffa705da6c695f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2fc3b4f329d0e214b18d6f4a8ffa705da6c695f", "patch": "@@ -1,3 +1,10 @@\n+2014-02-10  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR middle-end/60080\n+\t* cfgexpand.c (expand_asm_operands): Attach source location to\n+\tASM_INPUT rtx objects.\n+\t* print-rtl.c (print_rtx): Check for UNKNOWN_LOCATION.\n+\n 2014-02-10  Nick Clifton  <nickc@redhat.com>\n \n \t* config/mn10300/mn10300.c (popcount): New function.\n@@ -489,7 +496,7 @@\n \n 2014-02-04  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n-\t* gcc/config/host-linux.c (linux_gt_pch_use_address): Don't\n+\t* config/host-linux.c (linux_gt_pch_use_address): Don't\n \tuse SSIZE_MAX because it is not always defined. \n \n 2014-02-04  Vladimir Makarov  <vmakarov@redhat.com>"}, {"sha": "06d494c3d9211e23ad7f0e11a24838ee32a6de81", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2fc3b4f329d0e214b18d6f4a8ffa705da6c695f/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2fc3b4f329d0e214b18d6f4a8ffa705da6c695f/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=e2fc3b4f329d0e214b18d6f4a8ffa705da6c695f", "patch": "@@ -2678,8 +2678,9 @@ expand_asm_operands (tree string, tree outputs, tree inputs,\n       ASM_OPERANDS_INPUT (body, i) = op;\n \n       ASM_OPERANDS_INPUT_CONSTRAINT_EXP (body, i)\n-\t= gen_rtx_ASM_INPUT (TYPE_MODE (type),\n-\t\t\t     ggc_strdup (constraints[i + noutputs]));\n+\t= gen_rtx_ASM_INPUT_loc (TYPE_MODE (type),\n+\t\t\t\t ggc_strdup (constraints[i + noutputs]),\n+\t\t\t\t locus);\n \n       if (tree_conflicts_with_clobbers_p (val, &clobbered_regs))\n \tclobber_conflict_found = 1;\n@@ -2701,7 +2702,7 @@ expand_asm_operands (tree string, tree outputs, tree inputs,\n \n       sprintf (buffer, \"%d\", j);\n       ASM_OPERANDS_INPUT_CONSTRAINT_EXP (body, ninputs - ninout + i)\n-\t= gen_rtx_ASM_INPUT (inout_mode[i], ggc_strdup (buffer));\n+\t= gen_rtx_ASM_INPUT_loc (inout_mode[i], ggc_strdup (buffer), locus);\n     }\n \n   /* Copy labels to the vector.  */"}, {"sha": "09ac387d18bcd0e81446f2dc12830f8fc9e3052d", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2fc3b4f329d0e214b18d6f4a8ffa705da6c695f/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2fc3b4f329d0e214b18d6f4a8ffa705da6c695f/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=e2fc3b4f329d0e214b18d6f4a8ffa705da6c695f", "patch": "@@ -417,17 +417,19 @@ print_rtx (const_rtx in_rtx)\n \telse if (i == 6 && GET_CODE (in_rtx) == ASM_OPERANDS)\n \t  {\n #ifndef GENERATOR_FILE\n-\t    fprintf (outfile, \" %s:%i\",\n-\t\t     LOCATION_FILE (ASM_OPERANDS_SOURCE_LOCATION (in_rtx)),\n-\t\t     LOCATION_LINE (ASM_OPERANDS_SOURCE_LOCATION (in_rtx)));\n+\t    if (ASM_OPERANDS_SOURCE_LOCATION (in_rtx) != UNKNOWN_LOCATION)\n+\t      fprintf (outfile, \" %s:%i\",\n+\t\t       LOCATION_FILE (ASM_OPERANDS_SOURCE_LOCATION (in_rtx)),\n+\t\t       LOCATION_LINE (ASM_OPERANDS_SOURCE_LOCATION (in_rtx)));\n #endif\n \t  }\n \telse if (i == 1 && GET_CODE (in_rtx) == ASM_INPUT)\n \t  {\n #ifndef GENERATOR_FILE\n-\t    fprintf (outfile, \" %s:%i\",\n-\t\t     LOCATION_FILE (ASM_INPUT_SOURCE_LOCATION (in_rtx)),\n-\t\t     LOCATION_LINE (ASM_INPUT_SOURCE_LOCATION (in_rtx)));\n+\t    if (ASM_INPUT_SOURCE_LOCATION (in_rtx) != UNKNOWN_LOCATION)\n+\t      fprintf (outfile, \" %s:%i\",\n+\t\t       LOCATION_FILE (ASM_INPUT_SOURCE_LOCATION (in_rtx)),\n+\t\t       LOCATION_LINE (ASM_INPUT_SOURCE_LOCATION (in_rtx)));\n #endif\n \t  }\n \telse if (i == 6 && NOTE_P (in_rtx))"}]}