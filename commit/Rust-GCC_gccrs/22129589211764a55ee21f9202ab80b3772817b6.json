{"sha": "22129589211764a55ee21f9202ab80b3772817b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIxMjk1ODkyMTE3NjRhNTVlZTIxZjkyMDJhYjgwYjM3NzI4MTdiNg==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2008-07-30T18:22:50Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2008-07-30T18:22:50Z"}, "message": "re PR rtl-optimization/36929 (internal compiler error: Segmentation fault)\n\nPR rtl-optimization/36929\n* dse.c (replace_inc_dec): Use emit_insn_before instead of\nadd_insn_before and fix argument order.\n(replace_inc_dec_mem): Handle NULL rtx.\n\nFrom-SVN: r138333", "tree": {"sha": "a911881e679a11ef0a285741dc407eb11e6aa0be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a911881e679a11ef0a285741dc407eb11e6aa0be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22129589211764a55ee21f9202ab80b3772817b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22129589211764a55ee21f9202ab80b3772817b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22129589211764a55ee21f9202ab80b3772817b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22129589211764a55ee21f9202ab80b3772817b6/comments", "author": null, "committer": null, "parents": [{"sha": "2a9cc4de004bb6dbf2cfa89293f83b7feb40cc00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a9cc4de004bb6dbf2cfa89293f83b7feb40cc00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a9cc4de004bb6dbf2cfa89293f83b7feb40cc00"}], "stats": {"total": 452, "additions": 228, "deletions": 224}, "files": [{"sha": "02485f738ff79c890aea6c8750ed8d38edda2286", "filename": "gcc/ChangeLog", "status": "modified", "additions": 219, "deletions": 212, "changes": 431, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22129589211764a55ee21f9202ab80b3772817b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22129589211764a55ee21f9202ab80b3772817b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22129589211764a55ee21f9202ab80b3772817b6", "patch": "@@ -1,7 +1,14 @@\n+2008-07-30  Andreas Schwab  <schwab@suse.de>\n+\n+\tPR rtl-optimization/36929\n+\t* dse.c (replace_inc_dec): Use emit_insn_before instead of\n+\tadd_insn_before and fix argument order.\n+\t(replace_inc_dec_mem): Handle NULL rtx.\n+\n 2008-07-30  Andrew Jenner  <andrew@codesourcery.com>\n \n \t* config/arm/arm.c (arm_compute_static_chain_stack_bytes): New\n-        function.\n+\tfunction.\n \t(arm_compute_initial_elimination_offset): Use it.\n \t(arm_compute_save_reg_mask): Include static chain save slot when\n \tcalculating alignment.\n@@ -19,8 +26,8 @@\n \n 2008-07-30  Nathan Froyd  <froydnj@codesourcery.com>\n \n-        * config/arm/arm.c (arm_expand_prologue): Use 0-length rtvec\n-        instead of NULL_RTVEC.\n+\t* config/arm/arm.c (arm_expand_prologue): Use 0-length rtvec\n+\tinstead of NULL_RTVEC.\n \n 2008-07-30  Nathan Froyd  <froydnj@codesourcery.com>\n \n@@ -59,7 +66,7 @@\n \t(conversion_warning): Use the new function. Handle non-negative\n \tconstant in bitwise-and.\n \t* c-common.h (shorten_binary_op): Declare.\n-\t\n+\n 2008-07-30  Olivier Hainque  <hainque@adacore.com>\n \n \t* scan.c (make_sstring_space): Add explicit conversions of\n@@ -150,7 +157,7 @@\n \n \tPR 34985\n \t* c-decl.c (merge_decls): Merge USED flags.\n-\t\n+\n 2008-07-29  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/sh.c (sh_gimplify_va_arg_expr): Unshare the addr,\n@@ -418,7 +425,7 @@\n \t(is_ctor_dtor): Return symkind instead of int.  Adjust prototype,\n \tcode and head comment accordingly.\n \t(scan_prog_file): Use symkind names instead of bare integers.\n-\t\n+\n 2008-07-25  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.c (cgraph_function_possibly_inlined_p): Do not rely on DECL_INLINE.\n@@ -427,7 +434,7 @@\n \t* dojump.c (clear_pending_stack_adjust): Likewise.\n \t* print-tree.c (print_node): Ignore DECL_INLINE.\n \t* tree-inline.c (inlinable_function_p): Likewise.\n-\t\n+\n 2008-07-25  Michael Meissner  <gnu@the-meissners.org>\n \n \t* doc/extend.texi (hot attribute): Document that the hot attribute\n@@ -521,7 +528,7 @@\n \t(cgraph_gate_early_inlining): Likewise.\n \t(gate_inline_passes): Remove.\n \t(pass_inline_parameters, pass_ipa_inline): Remove gates.\n-\t(cgraph_gate_O0_always_inline, cgraph_O0_always_inline, \n+\t(cgraph_gate_O0_always_inline, cgraph_O0_always_inline,\n \tpass_O0_always_inline): Remove.\n \t* c-pch.c (c_pch_matching): Remove -funit-at-a-time.\n \t* dwarf2out.c (reference_to_unused): Remove flag_unit_at_a_time check.\n@@ -576,7 +583,7 @@\n \t* config/i386/i386.c (get_dllimport_decl): Treat user_label_prefix for\n \timp symbol extension.\n \n-        2008-07-23  Ian Lance Taylor  <iant@google.com>\n+\t2008-07-23  Ian Lance Taylor  <iant@google.com>\n \n \t* tree-vrp.c (infer_value_range): Ignore asm statements when\n \tlooking for memory accesses for -fdelete-null-pointer-checks.\n@@ -603,20 +610,20 @@\n \n 2008-07-23  Martin Jambor  <mjambor@suse.cz>\n \n-        * ipa-cp.c (ipcp_print_edge_profiles): Test for node->analyzed\n+\t* ipa-cp.c (ipcp_print_edge_profiles): Test for node->analyzed\n \trather than for DECL_SAVED_TREE.\n \t* ipa-prop.c: Include diagnostic.h.\n-        (ipa_check_stmt_modifications): Check LHS of GIMPLE_MODIFY_EXPRs\n+\t(ipa_check_stmt_modifications): Check LHS of GIMPLE_MODIFY_EXPRs\n \tthoroughly.\n \t(ipa_detect_param_modifications): Function rewritten from scratch.\n \t(ipa_compute_jump_functions): Changed accesses to modification flags.\n \t(ipa_free_node_params_substructures): Update flags destruction.\n \t(ipa_node_duplication_hook): Update flags duplication.\n \t(ipa_print_all_params_modified): Updated flag access.\n \t* ipa-prop.h (struct ipa_param_flags): New structure.\n-        (struct ipa_node_params): New field modification_analysis_done,\n-        modified_flags changed into param_flags.\n-        (ipa_is_ith_param_modified): Changed to use new flags.\n+\t(struct ipa_node_params): New field modification_analysis_done,\n+\tmodified_flags changed into param_flags.\n+\t(ipa_is_ith_param_modified): Changed to use new flags.\n \t* Makefile.in (ipa-prop.o): Add $(DIAGNOSTIC_H) to dependencies.\n \n \t* ipa-prop.c (ipa_print_all_jump_functions): Moved here from\n@@ -645,18 +652,18 @@\n \t* doc/invoke.texi (Optimize options): Add description of\n \t-findirect-inlining.\n \t* common.opt (flag_indirect_inlining): New flag.\n-\t* opts.c (decode_options): Set flag_indirect_inlining when \n+\t* opts.c (decode_options): Set flag_indirect_inlining when\n \toptimize >= 3.\n \n \t* ipa-inline.c: Include ipa-prop.h.\n \t(inline_indirect_intraprocedural_analysis): New function.\n \t(inline_generate_summary): Allocate parameter and argument info\n \tstructures, call inline_indirect_intraprocedural_analysis on each\n-\tnode when doing indirect inlining and deallocate indirect inlining \n+\tnode when doing indirect inlining and deallocate indirect inlining\n \tdata structures in the end.\n \t* ipa-prop.c (ipa_create_param_decls_array): Return if already done.\n \t(free_all_ipa_structures_after_iinln): New function.\n-\t(free_all_ipa_structures_after_ipa_cp): Checks whether iinln will be \n+\t(free_all_ipa_structures_after_ipa_cp): Checks whether iinln will be\n \tdone.\n \t* Makefile.in (ipa-inline.o): Added $(IPA_PROP_H) to dependencies.\n \n@@ -665,7 +672,7 @@\n \tof computing the frequency separately.\n \t(rebuild_cgraph_edges): Call compute_call_stmt_bb_frequency instead\n \tof computing the frequency separately.\n-\t* ipa-cp.c (ipcp_print_all_structures): Replace a call to \n+\t* ipa-cp.c (ipcp_print_all_structures): Replace a call to\n \tipa_print_all_param_modified with a call to ipa_print_all_param_flags.\n \t* ipa-prop.c (ipa_get_member_ptr_load_param): New function.\n \t(ipa_get_stmt_member_ptr_load_param): New function.\n@@ -727,7 +734,7 @@\n \t* testsuite/g++.dg/ipa/iinline-1.C: New testcase.\n \t* testsuite/gcc.dg/ipa/iinline-1.c: New testcase.\n \t* testsuite/gcc.dg/ipa/modif-1.c: New testcase.\n-\t\n+\n 2008-07-23  Michael Meissner  <gnu@the-meissners.org>\n \n \tPR 36907\n@@ -754,7 +761,7 @@\n \t* c-typeck.c: All calls to pedwarn changed.\n \t* c-common.c: All calls to pedwarn changed.\n \t* c-parser.c: All calls to pedwarn changed.\n-\t\n+\n 2008-07-23  Michael Meissner  <gnu@the-meissners.org>\n \t    Karthik Kumar  <karthikkumar@gmail.com>\n \n@@ -1221,7 +1228,7 @@\n \n \tPR tree-opt/36879\n \t* tree-switch-conversion.c (build_one_array): Call\n-\tvarpool_mark_needed_node and varpool_finalize_decl \n+\tvarpool_mark_needed_node and varpool_finalize_decl\n \tinstead of assemble_variable.\n \n 2008-07-19  Jan Hubicka  <jh@suse.cz>\n@@ -1312,7 +1319,7 @@\n \t(gen_array_type_die): Factorize comments about the MIPS_DEBUG_INFO\n \tissues, centralize the nested array types collapsing control and\n \tdisable the transformation for Ada.\n-\t\n+\n 2008-07-18  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/36786\n@@ -1504,10 +1511,10 @@\n \t* config/sh/sh.md (symGOT_load): Don't add REG_EQUAL note.\n \n 2008-07-15  Bob Wilson  <bob.wilson@acm.org>\n-\t\n+\n \t* config/xtensa/libgcc-xtensa.ver: New file.\n \t* config/xtensa/t-linux (SHLIB_MAPFILES): Append libgcc-xtensa.ver.\n-\t\n+\n 2008-07-15  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* df-problems.c (df_set_note): Avoid C++ keywords.\n@@ -1759,7 +1766,7 @@\n \n \t* config/h8300/h8300.md (length): Fix branch offset limit.\n \n-2008-07-11  Anatoly Sokolov  <aesok@post.ru>\t\n+2008-07-11  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/avr/avr-protos.h (avr_peep2_scratch_safe): Remove prototype.\n \t* config/avr/avr.c (avr_peep2_scratch_safe): Remove.\n@@ -1898,7 +1905,7 @@\n \tcallers.\n \t* omp-low.c (lower_omp_sections, lower_omp_single, lower_omp_master,\n \tlower_omp_ordered, lower_omp_critical, lower_omp_for,\n-\tcreate_task_copyfn, lower_omp_taskreg, execute_lower_omp): \n+\tcreate_task_copyfn, lower_omp_taskreg, execute_lower_omp):\n \t* tree-ssa-ccp.c (convert_to_gimple_builtin): Likewise.\n \t* tree-sra.c (generate_element_init): Likewise.\n \t* tree-mudflap.c (execute_mudflap_function_ops,\n@@ -2007,7 +2014,7 @@\n \t* tree-sra.c (sra_build_assignment): Handle CONVERT_EXPR_P dst.\n \n 2008-07-05  Daniel Berlin  <dberlin@dberlin.org>\n-\t\n+\n \tFix PR tree-optimization/23455\n \tFix PR tree-optimization/35286\n \tFix PR tree-optimization/35287\n@@ -2060,7 +2067,7 @@\n \t(vn_nary_op_compute_hash): De-staticify.\n \t(vn_nary_op_eq): Ditto.\n \t(vn_nary_op_lookup_pieces): New function.\n-\t(vn_nary_op_lookup): Add new argument.  \n+\t(vn_nary_op_lookup): Add new argument.\n \t(vn_nary_op_insert_pieces): New function.\n \t(vn_nary_op_insert): Add return type. Modify to deal with value ids.\n \t(vn_phi_insert): Ditto.\n@@ -2069,7 +2076,7 @@\n \t(visit_reference_op_load): Ditto.\n \t(visit_reference_op_store): Ditto.\n \t(init_scc_vn): Init next_value_id, constant_to_value_id and\n-\tconstant_value_ids. \n+\tconstant_value_ids.\n \t(free_scc_vn): Free them.\n \t(set_hashtable_value_ids): New function.\n \t(run_scc_vn): Use it.\n@@ -2082,7 +2089,7 @@\n \tabove).\n \t* tree.c (iterative_hash_hashval_t): Made non-static\n \t* tree.h (iterative_hash_hashval_t): Declare it.\n-\t\n+\n 2008-07-08  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-cp.c (ipcp_init_cloned_node): Call ipa_check_create_node_params\n@@ -2114,18 +2121,18 @@\n \t(ipa_register_cgraph_hooks): New function.\n \t(ipa_unregister_cgraph_hooks): New function.\n \t(free_all_ipa_structures_after_ipa_cp): New function.\n-\t\n+\n \t* ipa-prop.h: Include vec.h.\n \t(ipa_node_params_t): New typedef with vector types for it.\n \t(ipa_edge_args_t):  New typedef with vector types for it.\n \t(IPA_NODE_REF): Changed to access an on-the-side vector.\n \t(IPA_EDGE_REF): Changed to access an on-the-side vector.\n \t(ipa_check_create_node_params): New function.\n \t(ipa_check_create_edge_args): New function.\n-\t\n+\n \t* Makefile.in (IPA_PROP_H): New variable for ipa-prop.h.  Converted\n \tall users.\n-\t\n+\n 2008-07-07  Tom Tromey  <tromey@redhat.com>\n \n \t* configure, config.in: Rebuilt.\n@@ -2208,7 +2215,7 @@\n \t-print-sysroot option.\n \t(main): Print the sysroot if requested.\n \t* doc/invoke.texi (Debugging Options): Document -print-sysroot.\n-\t\n+\n 2008-07-07  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR target/34780\n@@ -2261,7 +2268,7 @@\n 2008-07-07  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* config/m68k/m68k.c (m68k_return_in_memory): Fix arguments types.\n-\t\n+\n 2008-07-07  Mark Shinwell  <shinwell@codesourcery.com>\n \n \t* config/m68k/lb1sf68.asm: Add PIC macros for Linux targets.\n@@ -2659,7 +2666,7 @@\n 2008-07-02  Martin Jambor  <mjambor@suse.cz>\n \n \t* tree-switch-conversion.c: Included timevar.h which I forgot before.\n-\t\n+\n 2008-07-02  Martin Jambor  <mjambor@suse.cz>\n \n \t* tree-switch-conversion.c: Included timevar.h\n@@ -2787,7 +2794,7 @@\n 2008-06-30  Kenneth Zadeck <zadeck@naturalbridge.com>\n \n \t* ifcvt.c (cond_move_process_if_block): Free vectors on false return.\n-\t\n+\n 2008-06-30  Kenneth Zadeck <zadeck@naturalbridge.com>\n \n \tPR rtl-optimization/34744\n@@ -2816,7 +2823,7 @@\n \t(ix86_init_builtins): Here.\n \t(ix86_scalar_mode_supported_p): Always return true for TFmode.\n \t(ix86_c_mode_for_suffix): Always return TFmode and XFmode for\n-\t'q' and 'w', respectively. \n+\t'q' and 'w', respectively.\n \n \t* config/i386/i386.md (movtf): Check TARGET_SSE2 instead of\n \tTARGET_64BIT.\n@@ -3700,7 +3707,7 @@\n 2008-06-22  Andy Hutchinson  <hutchinsonandy@aim.com>\n \n \t* config/avr/avr.h (SUPPORTS_INIT_PRIORITY): Define.\n-\t\n+\n 2008-06-22  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n \n \tPR middle-end/34906\n@@ -3848,7 +3855,7 @@\n \t* tree-ssa-loop-im.c (mem_ref_in_stmt, memref_hash, memref_eq,\n \tmemref_free, gather_mem_refs_stmt, vtoe_hash, vtoe_eq, vtoe_free,\n \trecord_vop_access, get_vop_accesses, get_vop_stores): Likewise.\n-\t* tree-ssa-loop-prefetch.c (determine_loop_nest_reuse): Likewise. \n+\t* tree-ssa-loop-prefetch.c (determine_loop_nest_reuse): Likewise.\n \t* tree-ssa-sccvn.c (VN_INFO_GET, free_phi, free_reference,\n \tvn_nary_op_insert): Likewise.\n \t* tree-ssa.c (redirect_edge_var_map_add,\n@@ -4174,20 +4181,20 @@\n 2008-06-17  Eric B. Weddington  <eric.weddington@atmel.com>\n \n \t* config/avr/avr.c (avr_mcu_t): Remove atmega32hvb.\n-\t* config/avr/avr.h (LINK_SPEC, CRT_BINUTILS_SPECS): Likewise. \n-\t* config/avr/t-avr (MULTILIB_MATCHES): Likewise. \n+\t* config/avr/avr.h (LINK_SPEC, CRT_BINUTILS_SPECS): Likewise.\n+\t* config/avr/t-avr (MULTILIB_MATCHES): Likewise.\n \n 2008-06-17  Eric B. Weddington  <eric.weddington@atmel.com>\n \n \t* config/avr/avr.c (avr_mcu_t): Add attiny167.\n-\t* config/avr/avr.h (LINK_SPEC, CRT_BINUTILS_SPECS): Likewise. \n-\t* gcc/config/avr/t-avr (MULTILIB_MATCHES): Likewise. \n+\t* config/avr/avr.h (LINK_SPEC, CRT_BINUTILS_SPECS): Likewise.\n+\t* gcc/config/avr/t-avr (MULTILIB_MATCHES): Likewise.\n \n 2008-06-17  Eric B. Weddington  <eric.weddington@atmel.com>\n \n \t* config/avr/avr.c (avr_mcu_t): Add atmega32u4.\n-\t* config/avr/avr.h (LINK_SPEC, CRT_BINUTILS_SPECS): Likewise. \n-\t* config/avr/t-avr (MULTILIB_MATCHES): Likewise. \n+\t* config/avr/avr.h (LINK_SPEC, CRT_BINUTILS_SPECS): Likewise.\n+\t* config/avr/t-avr (MULTILIB_MATCHES): Likewise.\n \n 2008-06-17  Bernhard Fischer  <aldot@gcc.gnu.org>\n \n@@ -4248,7 +4255,7 @@\n \t(delete_unmarked_insns): Don't handle libcall blocks.\n \t(preserve_libcall_for_dce): Remove.\n \t(prescan_insns_for_dce): Don't special-case libcall block insns.\n-\t* reload1 (reload): Don't handle libcall notes. \n+\t* reload1 (reload): Don't handle libcall notes.\n \t* doc/rtl.texi (REG_LIBCALL, REG_RETVAL, REG_LIBCALL_ID): Remove\n \tdocumentation.\n \n@@ -4262,7 +4269,7 @@\n \n \t* config/avr/avr.c (avr_mcu_t): Add atmega32m1.\n \t* config/avr/avr.h (LINK_SPEC, CRT_BINUTILS_SPECS): Likewise.\n-\t* config/avr/t-avr (MULTILIB_MATCHES): Likewise. \n+\t* config/avr/t-avr (MULTILIB_MATCHES): Likewise.\n \n 2008-06-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n@@ -4283,7 +4290,7 @@\n 2008-06-015  Andy Hutchinson  <hutchinsonandy@aim.com>\n \n \tPR target/36336\n-\t* config/avr/avr.h (LEGITIMIZE_RELOAD_ADDRESS): Add check for \n+\t* config/avr/avr.h (LEGITIMIZE_RELOAD_ADDRESS): Add check for\n \treg_equiv_constant.\n \n 2008-06-15  Maxim Kuvyrkov  <maxim@codesourcery.com>\n@@ -4359,7 +4366,7 @@\n \t    Nathan Sidwell  <nathan@codesourcery.com>\n \t    Maxim Kuvyrkov  <maxim@codesourcery.com>\n \t    Richard Sandiford  <rdsandiford@googlemail.com>\n-\t\n+\n \t* config/mips/mips-modes.def: Add V8QI, V4HI and V2SI modes.\n \t* config/mips/mips-protos.h (mips_expand_vector_init): New.\n \t* config/mips/mips-ftypes.def: Add function types for Loongson-2E/2F\n@@ -4662,7 +4669,7 @@\n 2008-06-09  Andy Hutchinson  <hutchinsonandy@aim.com>\n \n \tPR middle-end/36447\n-\t* simplify-rtx.c (simplify_subreg): Add check for shift count \n+\t* simplify-rtx.c (simplify_subreg): Add check for shift count\n \tgreater than size.\n \n 2008-06-09  Richard Sandiford  <rdsandiford@googlemail.com>\n@@ -4777,7 +4784,7 @@\n \n \t* doc/invoke.texi (Wenum-compare): Mention that it is enabled by\n \tdefault.\n-\t\n+\n 2008-06-08  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR tree-optimization/36218\n@@ -4791,8 +4798,8 @@\n \n \tPR target/36424\n \t* config/avr/avr.h (HARD_REGNO_RENAME_OK): Define.\n-\t* config/avr/avr.c (avr_hard_regno_rename_ok): New function. \n-\t* config/avr/avr-protos.h (avr_hard_regno_rename_ok): New prototype. \n+\t* config/avr/avr.c (avr_hard_regno_rename_ok): New function.\n+\t* config/avr/avr-protos.h (avr_hard_regno_rename_ok): New prototype.\n \n 2008-06-07  Danny Smith  <dannysmith@users.sourceforge.net>\n \n@@ -5120,7 +5127,7 @@\n \tRename parallel_nesting_level to taskreg_nesting_level.\n \t(scan_omp_task): New function.\n \t(lower_rec_input_clauses): Don't run constructors for firstprivate\n-\texplicit task vars which are initialized by *_omp_cpyfn*.  \n+\texplicit task vars which are initialized by *_omp_cpyfn*.\n \tPass outer var ref to omp_clause_default_ctor hook if\n \tOMP_CLAUSE_PRIVATE_OUTER_REF or OMP_CLAUSE_LASTPRIVATE.\n \tReplace OMP_CLAUSE_REDUCTION_PLACEHOLDER decls in\n@@ -5394,11 +5401,11 @@\n \n \tPR target/30243\n \t* builtins.c (expand_builtin_signbit): Don't take lowpart when\n-\tregister is already smaller or equal to required mode. \n+\tregister is already smaller or equal to required mode.\n \n 2008-06-04  Xinliang David Li  <davidxl@google.com>\n \n-\t* tree-call-cdce.c: New file. \n+\t* tree-call-cdce.c: New file.\n \t(cond_dead_built_in_calls): New static variable.\n \t(input_domain): New struct.\n \t(check_pow): New function.\n@@ -5573,7 +5580,7 @@\n \t* config/i386/mingw32.h (EXTRA_OS_CPP_BUILTINS): Replace\n \tTARGET_64BIT_MS_ABI by DEFAULT_ABI compare to MS_ABI.\n \n-2008-06-02  Andy Hutchinson  <hutchinsonandy@aim.com> \n+2008-06-02  Andy Hutchinson  <hutchinsonandy@aim.com>\n \n \tPR target/34879\n \t* config/avr/avr.c (TARGET_BUILTIN_SETJMP_FRAME_VALUE): Redefine.\n@@ -5709,10 +5716,10 @@\n \t* config/avr/avr.md (UNSPECV_WRITE_SP_IRQ_ON): New constants.\n \t(UNSPECV_WRITE_SP_IRQ_OFF): (Ditto.).\n \t(movhi_sp_r_irq_off, movhi_sp_r_irq_on): New insn.\n-\t* config/avr/avr.c (expand_prologue, expand_epilogue): Use \n-\tmovhi_sp_r_irq_off and movhi_sp_r_irq_on insns for writing to the \n+\t* config/avr/avr.c (expand_prologue, expand_epilogue): Use\n+\tmovhi_sp_r_irq_off and movhi_sp_r_irq_on insns for writing to the\n \tstack pointer register.\n-\t(output_movhi): Remove code for interrupt specific writing to the \n+\t(output_movhi): Remove code for interrupt specific writing to the\n \tstack pointer register.\n \n 2008-05-31  Richard Guenther  <rguenther@suse.de>\n@@ -5841,7 +5848,7 @@\n \tcall clobber check for NMTs.\n \n 2008-05-28  Seongbae Park  <seongbae.park@gmail.com>\n-\t\n+\n \t* value-prof.c (tree_ic_transform): Use HOST_WIDEST_INT_PRINT_DEC\n \tfor printing gcov_type.\n \n@@ -6079,9 +6086,9 @@\n \tthat the bitfield is of integral type before testing its precision.\n \n 2008-05-27  Trevor Smigiel  <trevor_smigiel@playstation.sony.com>\n-\t    Sa Liu  <saliu@de.ibm.com> \n+\t    Sa Liu  <saliu@de.ibm.com>\n \n-\t* config/spu/spu.c (spu_init_libfuncs): Add __multi3, __divti3, \n+\t* config/spu/spu.c (spu_init_libfuncs): Add __multi3, __divti3,\n \t__modti3, __udivti3, __umodti3 and __udivmodti4.\n \t* config/spu/t-spu-elf (LIB2FUNCS_STATIC_EXTRA): Add files\n \tthat implement TImode mul and div functions.\n@@ -6120,7 +6127,7 @@\n \n \t* config/avr/avr.md (\"call_prologue_saves\"): Use hi8(gs())/lo8(gs())\n \tinstead of pm_lo8/pm_hi8 to makes this call working on avr6.\n-\t* config/avr/avr.c (expand_prologue): Tune \"call_prologue\" \n+\t* config/avr/avr.c (expand_prologue): Tune \"call_prologue\"\n \toptimization for 'avr6' architecture.\n \n 2008-05-26  Andy Hutchinson  <hutchinsonandy@aim.com>\n@@ -6658,7 +6665,7 @@\n \t* tree-data-ref.c (dr_analyze_indices): Replace resolve_mixers with\n \tinstantiate_scev.\n \t(analyze_siv_subscript): Pass in the loop nest number.\n-\tCall evolution_function_is_affine_in_loop instead of \n+\tCall evolution_function_is_affine_in_loop instead of\n \tevolution_function_is_affine_p.\n \t(analyze_overlapping_iterations): Pass in the loop nest number.\n \n@@ -6724,7 +6731,7 @@\n \n 2008-05-19  Xinliang David Li  <davidxl@google.com>\n \n-\t* tree-ssa-dce.c: Revert patches of 2008-05-17 and 2008-05-18. \n+\t* tree-ssa-dce.c: Revert patches of 2008-05-17 and 2008-05-18.\n \t* opts.c: Ditto.\n \t* common.opt: Ditto.\n \t* doc/invoke.texi: Ditto.\n@@ -6783,15 +6790,15 @@\n 2008-05-18 Xinliang David Li   <davidxl@google.com>\n \n \t* gcc/tree-ssa-dce.c: Coding style fix.\n-\t(check_pow): Documentation comment. \n+\t(check_pow): Documentation comment.\n \t(check_log): Documenation comment. Coding style fix.\n \t(is_unnecessary_except_errno_call): Ditto.\n \t(gen_conditions_for_pow): Ditto.\n \t(gen_conditions_for_log): Ditto.\n \t(gen_shrink_wrap_conditions): Ditto.\n \t(shrink_wrap_one_built_in_calls): Ditto.\n \t* gcc/doc/invoke.texi: Better documentation string.\n-\t* ChangeLog: Fix wrong change log entries from \n+\t* ChangeLog: Fix wrong change log entries from\n \tMay 17 checkin on function call DCE.\n \n 2008-05-17  Kaz Kojima  <kkojima@gcc.gnu.org>\n@@ -6803,7 +6810,7 @@\n \t* doc/rtl.texi (RTL_CONST_CALL_P, RTL_PURE_CALL_P): Fixed typos.\n \t* df-problems.c (simulation routines): Fixed block comment to\n \tproperly say how to add forwards scanning functions.\n-\t\n+\n 2008-05-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-inline.c (setup_one_parameter): Remove dead code.\n@@ -6816,8 +6823,8 @@\n 2008-05-17 Xinliang David Li   <davidxl@google.com>\n \n \t* gcc/tree-ssa-dce.c (cond_dead_built_in_calls): New static variable.\n-\t(check_pow, check_log, is_unnecessary_except_errno_call): New \n-\tfunctions to check for eliminating math functions that are pure \n+\t(check_pow, check_log, is_unnecessary_except_errno_call): New\n+\tfunctions to check for eliminating math functions that are pure\n \texcept for setting errno.\n \t(gen_conditions_for_pow, gen_conditionas_for_log): New functions to\n \tgeneral condition expressions for shrink-wrapping pow/log calls.\n@@ -6880,7 +6887,7 @@\n 2008-05-16  Kenneth Zadeck <zadeck@naturalbridge.com>\n \n \t* tree-ssa-dse (max_stmt_uid): Removed.\n-\t(get_stmt_uid, dse_possible_dead_store_p, dse_optimize_stmt, \n+\t(get_stmt_uid, dse_possible_dead_store_p, dse_optimize_stmt,\n \ttree_ssa_dse): Encapsulate all uses of stmt_ann->uid.\n \t* tree-ssa-sccvn.c (compare_ops, init_scc_vn): Ditto.\n \t* function.h (cfun.last_stmt_uid): New field.\n@@ -6959,7 +6966,7 @@\n \twrite_summary, read_summary.\n \t* cgraphunit.c (cgraph_process_new_functions): Changed call from\n \tpass_ipa_inline.function_generate_summary, to\n-\tcompute_inline_parameters. \n+\tcompute_inline_parameters.\n \t* ipa-inline.c (compute_inline_parameters): Made public and added\n \tnode parameter.\n \t(compute_inline_parameters_for_current): New function.\n@@ -6969,19 +6976,19 @@\n \t(pass_ipa_inline): Updated for new IPA_PASS structure.\n \t* passes.c (execute_ipa_summary_passes): Now is called once per\n \tpass rather than once per node*pass.\n-\t\n+\n 2008-05-15  Anatoly Sokolov <aesok@post.ru>\n \n-\t* config/avr/avr.c (avr_base_arch_macro, avr_have_movw_lpmx_p, \n+\t* config/avr/avr.c (avr_base_arch_macro, avr_have_movw_lpmx_p,\n \tavr_have_mul_p, avr_asm_only_p): Remove variables.\n \t(avr_override_options): Remove initialization of removed variables.\n-\t(avr_file_start):  Convert removed variables to fields of \n-\t'struct base_arch_s *avr_current_arch'. \n+\t(avr_file_start):  Convert removed variables to fields of\n+\t'struct base_arch_s *avr_current_arch'.\n \t* config/avr/avr.h (TARGET_CPU_CPP_BUILTINS): (Ditto.).\n \t(AVR_HAVE_MUL): (Ditto.).\n \t(AVR_HAVE_MOVW): (Ditto.).\n-\t(AVR_HAVE_LPMX): (Ditto.). \n-\t(avr_base_arch_macro, avr_have_movw_lpmx_p, avr_have_mul_p, \n+\t(AVR_HAVE_LPMX): (Ditto.).\n+\t(avr_base_arch_macro, avr_have_movw_lpmx_p, avr_have_mul_p,\n \tavr_asm_only_p): Remove declaration.\n \n 2008-05-15  Diego Novillo  <dnovillo@google.com>\n@@ -6997,7 +7004,7 @@\n \t(record_truncated_value): Turn it into a for_each_rtx callback.\n \t(record_truncated_values): New function.\n \t(combine_instructions): Call note_uses with record_truncated_values.\n-\tChange name of check_conversion to check_promoted_subreg. \n+\tChange name of check_conversion to check_promoted_subreg.\n \n 2008-05-15  Janis Johnson  <janis187@us.ibm.com>\n \n@@ -7281,14 +7288,14 @@\n \n \t* optabs.c (prepare_cmp_insn): Changed LCT_PURE_MAKE_BLOCK to\n \tLCT_PURE and LCT_CONST_MAKE_BLOCK to LCT_CONST in calls to\n-\temit_library_call_value. \n+\temit_library_call_value.\n \t* builtins.c (expand_builtin_powi, expand_builtin_memcmp): Ditto.\n \t* tree.h (ECF_LIBCALL_BLOCK): Removed.\n-\t* calls.c (initialize_argument_information, precompute_arguments, \n+\t* calls.c (initialize_argument_information, precompute_arguments,\n \texpand_call, emit_library_call_value_1): Remove ECF_LIBCALL_BLOCK.\n \t(precompute_arguments): Removed flags parameter.\n \t* rtl.h (LCT_CONST_MAKE_BLOCK, LCT_PURE_MAKE_BLOCK): Removed.\n-\t\n+\n 2008-05-14  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-dse.c (dse_possible_dead_store_p): Remove dead code.\n@@ -7476,7 +7483,7 @@\n 2008-05-10  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t* gcse.c (store_killed_in_insn): Negated call to RTL_CONST_CALL_P.\n-\t\t\n+\n 2008-05-10  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.c (bdesc_ptest): Removed.\n@@ -7619,7 +7626,7 @@\n \tCONVERT_EXPR_P.\n \t(CONVERT_EXPR_P): Define.\n \t(CASE_CONVERT): Define.\n-\t\n+\n 2008-05-08  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \tPR middle-end/36117\n@@ -7703,7 +7710,7 @@\n \n 2008-05-08  David Daney  <ddaney@avtrex.com>\n \t    Richard Sandiford  <rsandifo@nildram.co.uk>\n-\t\n+\n \t* config/mips/mips.md (mips_expand_compare_and_swap_12): Handle\n \tspecial case of constant zero operands.\n \t* config/mips/mips.c (mips_expand_compare_and_swap_12): Zero extend\n@@ -7928,9 +7935,9 @@\n \t(analyze_function): Rename DECL_IS_PURE to DECL_PURE_P.\n \t(static_execute): Set looping true for recursive functions.\n \tUndo setting state to IPA_NEITHER for recursive functions.\n-\t* cse.c (cse_insn): \n+\t* cse.c (cse_insn):\n \t* ifcvt.c (noce_can_store_speculate_p): Changed\n-\tCONST_OR_PURE_CALL_P and pure_call_p to RTL_CONST_CALL_P or \n+\tCONST_OR_PURE_CALL_P and pure_call_p to RTL_CONST_CALL_P or\n \tRTL_CONST_OR_PURE_CALL_P.\n \t* dse.c (scan_insn): Ditto.\n \t* local-alloc.c (validate_equiv_mem, memref_used_between_p): Ditto.\n@@ -7972,7 +7979,7 @@\n \tDECL_PURE_P.\n \t* tree-cfg.c (update_call_expr_flags): Do not clear tree side\n \teffects for looping pure or const calls.\n-\t(verify_gimple_expr): Added verification code. \n+\t(verify_gimple_expr): Added verification code.\n \t* config/alpha/alpha.c (alpha_legitimize_address,\n \talpha_emit_xfloating_libcall): Changed CONST_OR_PURE_CALL_P to\n \tRTL_CONST_CALL_P.\n@@ -8266,14 +8273,14 @@\n \t(ipcp_redirect): Removed newly unused local variable callee.\n \t(ipcp_redirect): Removed (a bit confusing) local variable type.\n \t(ipcp_insert_stage): Added local variable info.\n-\t(ipcp_cval_changed): Renamed to ipcp_lattice_changed, parameters \n+\t(ipcp_cval_changed): Renamed to ipcp_lattice_changed, parameters\n \trenamed too\n \t(ipcp_formal_create): Removed.\n \t(ipcp_method_cval_set): Removed.\n \t(ipcp_propagate_stage): Renamed lattice variables.\n \t(ipcp_method_cval_set_cvalue_type): Removed.\n \t(ipcp_method_cval_print): Renamed to ipcp_print_all_lattices\n-\t(ipcp_print_all_lattices): Changed printed strings to refer to \n+\t(ipcp_print_all_lattices): Changed printed strings to refer to\n \tlattices rather than cvals.\n \t(ipcp_method_cval_init): Renamed to ipcp_initialize_node_lattices\n \t(ipcp_propagate_const): Changed formal parameters.\n@@ -8284,7 +8291,7 @@\n \t(ipcp_after_propagate): Renamed to ipcp_change_tops_to_bottom\n \t(ipcp_callsite_param_print): Renamed to ipcp_print_all_jump_functions\n \t(ipcp_profile_mt_count_print): Renamed to ipcp_print_func_profile_counts\n-\t(ipcp_print_func_profile_counts): Changed string from \"method\" to \n+\t(ipcp_print_func_profile_counts): Changed string from \"method\" to\n \t\"function\"\n \t(ipcp_profile_cs_count_print): Renamed to ipcp_print_call_profile_counts\n \t(ipcp_profile_edge_print): Renamed to ipcp_print_edge_profiles\n@@ -8294,7 +8301,7 @@\n \t(ipcp_lat_is_const): Changed parameters and made inline.\n \t(ipcp_replace_map_create): Renamed to ipcp_create_replace_map\n \t(ipcp_redirect): Renamed to ipcp_need_redirect_p\n-\t(ipcp_need_redirect_p): Calls ipcp_lat_is_const instead of using \n+\t(ipcp_need_redirect_p): Calls ipcp_lat_is_const instead of using\n \tthe predicate condition directly\n \t(ipcp_propagate_stage): Added local variable args. Removed local\n \tvariable callee.  (Both are mere code simplifications.)\n@@ -8421,13 +8428,13 @@\n \t* gthr-single.h: Add in required interface elements as per gthr.h.\n \tAdd stub types for __gthread_key_t, __gthread_once_t. Add defines\n \tfor __GTHREAD_ONCE_INIT, __GTHREAD_RECURSIVE_MUTEX_INIT.\n-\tGeneralize UNUSED macro. \n+\tGeneralize UNUSED macro.\n \t(__gthread_once): Add.\n \t(__gthread_key_create): Add.\n \t(__gthread_key_delete): Add.\n \t(__gthread_getspecific): Add.\n \t(__gthread_setspecific): Add.\n-\t\n+\n 2008-05-05  Andrew Pinski  <Andrew.Pinski@playstation.sony.com>\n \n \t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): If we have\n@@ -8509,7 +8516,7 @@\n \n \t* doc/invoke.texi (max-flow-memory-locations): Removed.\n \t* params.def (PARAM_MAX_FLOW_MEMORY_LOCATIONS): Removed.\n-\t\n+\n 2008-05-03  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/34973\n@@ -8791,13 +8798,13 @@\n \n \t* ipa-cp.c (ipcp_init_stage): Calls ipa_set_called_with_variable_arg\n \tinstead of setting number of formal parameters to zero.\n-\t(ipcp_init_stage): Do not set the number of actual parameters to zero \n+\t(ipcp_init_stage): Do not set the number of actual parameters to zero\n \teither.\n \t(ipcp_propagate_stage): Explicitly skipping all calls to nodes\n \twhich are called with variable number of arguments.\n \t(ipcp_insert_stage): Explicitely skipping all nodes which are\n \tcalled with variable number of arguments.\n-\t(ipcp_callsite_param_print): Skipps callsites to nodes with varaible \n+\t(ipcp_callsite_param_print): Skipps callsites to nodes with varaible\n \tnumber of parameters.\n \n \t* ipa-prop.h (struct ipa_node_params): Added flag\n@@ -8809,13 +8816,13 @@\n \t(ipa_is_called_with_var_arguments): Added.\n \t(ipa_get_ith_param): Added.  All readers of param_decls converted\n \tto use it instead.\n-\t(ipa_set_cs_argument_count): Added, sole writer to argument_count \n-\tchanged to use it. \n+\t(ipa_set_cs_argument_count): Added, sole writer to argument_count\n+\tchanged to use it.\n \t(ipa_get_cs_argument_count): Added, all readers of argument_count\n \tchanged to cal it.\n-\t(ipa_get_ith_jump_func): Added. Accessors of jump values changed \n+\t(ipa_get_ith_jump_func): Added. Accessors of jump values changed\n \tto use it.\n-\t\n+\n \t* ipa-prop.h (struct ipcp_formal): Renamed to ipcp_lattice\n \t(struct ipcp_lattice): Renamed cval_type to type\n \t(struct ipa_node_params): ipcp_cval renamed to ipcp_lattices\n@@ -8827,9 +8834,9 @@\n \t(build_const_val): Changed the type of parameter cvalue to tree\n \t(ipcp_propagate_const): Changed the type of parameter cvalue to tree\n \t(ipcp_method_cval_set_cvalue_type): Renamed parameter cval_type1 to type\n-\t\n-\t* ipa-prop.h (struct ipcp_formal): Replaced cvalue with tree called \n-\tconstant \n+\n+\t* ipa-prop.h (struct ipcp_formal): Replaced cvalue with tree called\n+\tconstant\n \n \t* ipa-prop.c (ipa_methodlist_init): Renamed to ipa_init_func_list\n \t(ipa_methodlist_not_empty): Removed, the sole user now checks directly\n@@ -8847,7 +8854,7 @@\n \t(ipa_method_tree_map_create): Removed.\n \t(ipa_method_compute_tree_map): Renamed to ipa_create_param_decls_array\n \t(ipa_create_param_decls_array): Creates the array itself\n-\t(ipa_create_param_decls_array): Temporary variable info instead of \n+\t(ipa_create_param_decls_array): Temporary variable info instead of\n \ta few dereferences.\n \t(ipa_method_formal_compute_count): Renamed to ipa_count_formal_params\n \t(ipa_method_compute_modify): Renamed to ipa_detect_param_modifications\n@@ -8859,7 +8866,7 @@\n \t(ipa_edges_create): Renamed to ipa_create_all_edge_args\n \t(ipa_edges_free): Renamed to ipa_free_all_edge_args\n \t(ipa_nodes_free): Integrated into ipa_free_all_node_params and removed\n-\t(ipa_free_all_node_params): Deallocation to jump_functions moved to \n+\t(ipa_free_all_node_params): Deallocation to jump_functions moved to\n \tipa_free_all_edge_args\n \t(ipa_method_tree_print): Renamed to ipa_print_all_tree_maps\n \t(ipa_method_modify_print): Renamed to ipa_print_all_params_modified\n@@ -8870,22 +8877,22 @@\n \t(ipa_methodlist_next_method_set): Removed.\n \t(ipa_method_is_modified): Removed.\n \t(ipa_method_modify_create): Removed.\n-\t(ipa_method_modify_init): Temporary variable info instead of a few \n+\t(ipa_method_modify_init): Temporary variable info instead of a few\n \tdereferences.\n-\t(ipa_detect_param_modifications): Temporary variable info instead of \n+\t(ipa_detect_param_modifications): Temporary variable info instead of\n \ta few dereferences.\n-\t(ipa_compute_jump_functions): Temporary variable info instead of \n+\t(ipa_compute_jump_functions): Temporary variable info instead of\n \ta few dereferences.\n \t(ipa_method_modify_set): Removed.\n \t(ipa_method_tree_map): Renamed to ipa_get_param_decl_index\n-\t(ipa_get_param_decl_index): Now accepts struct ipa_node_params rather \n+\t(ipa_get_param_decl_index): Now accepts struct ipa_node_params rather\n \tthan craph_node as the first parameter.\n \t(ipa_method_modify_stmt): Renamed to ipa_check_stmt_modifications\n \t(ipa_method_modify_init): Removed.\n-\t(ipa_compute_jump_functions): Added a temp variable instead of \n+\t(ipa_compute_jump_functions): Added a temp variable instead of\n \trepeatadly dereferencing the cgraph_edge.aux pointer\n \t(ipa_callsite_param_set_type): Removed.\n-\t(ipa_compute_jump_functions): i renamed to index and moved to \n+\t(ipa_compute_jump_functions): i renamed to index and moved to\n \tan inner block\n \t(ipa_callsite_param_set_info_type_formal): Removed.\n \t(ipa_callsite_param_set_info_type): Removed.\n@@ -8896,9 +8903,9 @@\n \n \t* ipa-prop.h (enum cvalue_type): Renamed to ipa_lattice_type,\n \tprefixed all values with IPA_. Changed all users.\n-\t(enum jump_func_type): Rnamed UNKNOWN_IPATYPE to IPA_UNKNOWN, \n-\tCONST_IPATYPE to IPA_CONST, CONST_IPATYPE_REF to IPA_CONST_REF \n-\tand FORMAL_IPATYPE IPA_PASS_THROUGH. \n+\t(enum jump_func_type): Rnamed UNKNOWN_IPATYPE to IPA_UNKNOWN,\n+\tCONST_IPATYPE to IPA_CONST, CONST_IPATYPE_REF to IPA_CONST_REF\n+\tand FORMAL_IPATYPE IPA_PASS_THROUGH.\n \t(union parameter_info): Renamed to jump_func_value.\n \t(union jump_func_value): Renamed value to constant\n \t(struct ipa_jump_func): Renamed info_type to value\n@@ -9055,7 +9062,7 @@\n \t* tree-ssa-loop-manip.c (find_uses_to_rename_use): Only record\n \tuses outside of the loop.\n \t(tree_duplicate_loop_to_header_edge): Only verify loop-closed SSA\n-\tform if it is available.  \n+\tform if it is available.\n \t* tree-flow.h (tree_unroll_loops_completely): Add extra parameter.\n \t* passes.c (init_optimization_passes): Schedule complete inner\n \tloop unrolling pass before the first CCP pass after final inlining.\n@@ -9397,9 +9404,9 @@\n \t(init_elim_table): Update.\n \n 2008-04-25  Bob Wilson  <bob.wilson@acm.org>\n-\t\n+\n \t* optabs.c (expand_float): Fix REG_EQUAL for UNSIGNED_FLOAT libcall.\n-\t\n+\n 2008-04-25  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/sse.md (mov<mode>): Replace SSEMODEI with SSEMODE.\n@@ -9470,7 +9477,7 @@\n \tof code delimited by two edges in the CFG.\n \t(separate_decls_in_loop_name): Renamed separate_decls_in_region_name.\n \t(separate_decls_in_loop_stmt): Renamed separate_decls_in_region_stmt.\n-\t(separate_decls_in_loop): Renamed separate_decls_in_region.  Isolate \n+\t(separate_decls_in_loop): Renamed separate_decls_in_region.  Isolate\n \tthe case of parallelisation of reductions.\n \t(expr_invariant_in_region_p): New.\n \n@@ -9637,7 +9644,7 @@\n \tPR middle-end/36003\n \t* passes.c (init_optimization_passes): Remove\n \tpass_fast_rtl_byte_dce.\n-\t\n+\n 2008-04-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/29096\n@@ -9728,22 +9735,22 @@\n \n \t* dbgcnt.def (ra_byte_scan): Added.\n \t* dbgcnt.c (dbg_cnt): Added code to print message to dump_file\n-\twhen the last hit happens for a counter.  \n+\twhen the last hit happens for a counter.\n \t* timevar.def (TV_DF_BYTE_LR): New variable.\n \t* tree-pass.h (pass_fast_rtl_byte_dce): New pass.\n \t* passes.c (pass_fast_rtl_byte_dce): New pass.\n \t* fwprop.c (update_df): Added mode to call df_ref_create.\n \tRenamed DF_REF_WIDTH and DF_REF_OFFSET to DF_REF_EXTRACT_WIDTH and\n \tDF_REF_EXTRACT_OFFSET.\n-\t* df.h (DF_BYTE_LR, DF_BYTE_LR_BB_INFO, DF_BYTE_LR_IN, \n+\t* df.h (DF_BYTE_LR, DF_BYTE_LR_BB_INFO, DF_BYTE_LR_IN,\n \tDF_BYTE_LR_OUT, df_byte_lr): New macro.\n \t(df_mm): New enum.\n \t(df_ref_extract): Added mode field.\n \t(DF_REF_WIDTH, DF_REF_OFFSET) Renamed to DF_REF_EXTRACT_WIDTH and\n \tDF_REF_EXTRACT_OFFSET.\n \t(DF_REF_EXTRACT_MODE): New macro.\n \t(df_byte_lr_bb_info): New structure.\n-\t(df_print_byte_regset, df_compute_accessed_bytes, \n+\t(df_print_byte_regset, df_compute_accessed_bytes,\n \tdf_byte_lr_add_problem, df_byte_lr_get_regno_start,\n \tdf_byte_lr_get_regno_len, df_byte_lr_simulate_defs,\n \tdf_byte_lr_simulate_uses,\n@@ -9754,9 +9761,9 @@\n \t(df_byte_lr_get_bb_info): New inline function.\n \t* df-scan.c (df_ref_record, df_uses_record,\n \tdf_ref_create_structure): Added mode parameter.\n-\t(df_ref_create, df_notes_rescan, df_ref_record, df_def_record_1, \n+\t(df_ref_create, df_notes_rescan, df_ref_record, df_def_record_1,\n \tdf_defs_record, df_uses_record, df_get_conditional_uses,\n-\tdf_get_call_refs, df_insn_refs_collect, df_bb_refs_collect, \n+\tdf_get_call_refs, df_insn_refs_collect, df_bb_refs_collect,\n \tdf_entry_block_defs_collect, df_exit_block_uses_collect):\n \tAdded mode parameter to calls to df_ref_record, df_uses_record,\n \tdf_ref_create_structure.\n@@ -9767,25 +9774,25 @@\n \t* df-core.c (df_print_byte_regset): New function.\n \t* df-byte-scan.c: New file.\n \t* df-problems.c (df_rd_transfer_function): Removed unnecessary\n-\tcalls to BITMAP_FREE.  \n+\tcalls to BITMAP_FREE.\n \t(df_byte_lr_problem_data, df_problem problem_BYTE_LR): New structure.\n \t(df_byte_lr_get_regno_start, df_byte_lr_get_regno_len,\n-\tdf_byte_lr_set_bb_info, df_byte_lr_free_bb_info, \n-\tdf_byte_lr_check_regs, df_byte_lr_expand_bitmap, \n+\tdf_byte_lr_set_bb_info, df_byte_lr_free_bb_info,\n+\tdf_byte_lr_check_regs, df_byte_lr_expand_bitmap,\n \tdf_byte_lr_alloc, df_byte_lr_reset, df_byte_lr_bb_local_compute,\n \tdf_byte_lr_local_compute, df_byte_lr_init,\n-\tdf_byte_lr_confluence_0, df_byte_lr_confluence_n, \n-\tdf_byte_lr_transfer_function, df_byte_lr_free, \n+\tdf_byte_lr_confluence_0, df_byte_lr_confluence_n,\n+\tdf_byte_lr_transfer_function, df_byte_lr_free,\n \tdf_byte_lr_top_dump, df_byte_lr_bottom_dump,\n-\tdf_byte_lr_add_problem, df_byte_lr_simulate_defs, \n+\tdf_byte_lr_add_problem, df_byte_lr_simulate_defs,\n \tdf_byte_lr_simulate_uses,\n \tdf_byte_lr_simulate_artificial_refs_at_top,\n \tdf_byte_lr_simulate_artificial_refs_at_end): New function.\n \t* dce.c (byte_dce_process_block): New function.\n \t(dce_process_block): au is now passed in rather than computed\n \tlocally.  Changed loops that look at artificial defs to not look\n-\tfor conditional or partial ones, because there never are any.  \n-\t(fast_dce): Now is able to drive byte_dce_process_block or \n+\tfor conditional or partial ones, because there never are any.\n+\t(fast_dce): Now is able to drive byte_dce_process_block or\n \tdce_process_block depending on the kind of dce being done.\n \t(rest_of_handle_fast_dce): Add parameter to fast_dce.\n \t(rest_of_handle_fast_byte_dce): New function.\n@@ -9833,14 +9840,14 @@\n \tpointer_may_wrap_p to disable some false positives.\n \n 2008-04-18  Kris Van Hees <kris.van.hees@oracle.com>\n-\t  \n+\n \t* c-common.c (CHAR16_TYPE, CHAR32_TYPE): New macros.\n \t(fname_as_string): Match updated cpp_interpret_string prototype.\n \t(fix_string_type): Support char16_t* and char32_t*.\n \t(c_common_nodes_and_builtins): Add char16_t and char32_t (and\n \tderivative) nodes.  Register as builtin if C++0x.\n \t(c_parse_error): Support CPP_CHAR{16,32}.\n-\t* c-common.h (RID_CHAR16, RID_CHAR32): New elements. \n+\t* c-common.h (RID_CHAR16, RID_CHAR32): New elements.\n \t(enum c_tree_index) <CTI_CHAR16_TYPE, CTI_SIGNED_CHAR16_TYPE,\n \tCTI_UNSIGNED_CHAR16_TYPE, CTI_CHAR32_TYPE, CTI_SIGNED_CHAR32_TYPE,\n \tCTI_UNSIGNED_CHAR32_TYPE, CTI_CHAR16_ARRAY_TYPE,\n@@ -10006,7 +10013,7 @@\n \n \t* config/sh/sh.c (expand_cbranchdi4): Use original operands for\n \tmsw_skip comparison.\n-\t\n+\n 2008-04-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/35739\n@@ -10062,7 +10069,7 @@\n \tunused.\n \tMove filter, exc_ptr, ttype_data, ehspec_data, action_record_data and\n \texception_handler_label_map, ehr_stackadj, ehr_handler, ehr_label,\n-\tsjlj_fc, sjlj_exit_after to rth_eh in function.h. \n+\tsjlj_fc, sjlj_exit_after to rth_eh in function.h.\n \tRemove call_site_data_used, call_site_data_size.\n \tTurn call_site_record into vector in function.h.\n \t(note_current_region_may_contain_throw): Remove.\n@@ -10072,7 +10079,7 @@\n \tadd_ttypes_entry, add_ehspec_entry, assign_filter_values,\n \tbuild_post_landing_pads, dw2_build_landing_pads,\n \tsjlj_assign_call_site_values, sjlj_mark_call_sites,\n-\tsjlj_emit_function_enter, sjlj_emit_function_enter, \n+\tsjlj_emit_function_enter, sjlj_emit_function_enter,\n \tsjlj_emit_function_exit, sjlj_emit_dispatch_table,\n \tsjlj_build_landing_pads, finish_eh_generation,\n \tremove_exception_handler_label, remove_eh_handler,\n@@ -10298,7 +10305,7 @@\n \t(*<code>extendsfdf2): Macroize insn pattern from *absextendsfdf2 and\n \t*negextendsfdf2 patterns using absneg code iterator.\n \t* config/i386/sse.md (<code><mode>2): Macroize expander from\n-\tabs<mode>2 and neg<mode>2 patterns using absneg code iterator. \n+\tabs<mode>2 and neg<mode>2 patterns using absneg code iterator.\n \n 2008-04-10  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n@@ -10538,10 +10545,10 @@\n \n 2008-04-08  Anatoly Sokolov <aesok@post.ru>\n \n-\t* config/avr/avr.h (TARGET_CPU_CPP_BUILTINS): Define \n-\t__AVR_HAVE_EIJMP_EICALL__ macro if device have EIJMP and EICALL \n+\t* config/avr/avr.h (TARGET_CPU_CPP_BUILTINS): Define\n+\t__AVR_HAVE_EIJMP_EICALL__ macro if device have EIJMP and EICALL\n \tinstructions.\n-\t* config/avr/avr.c (avr_mcu_types): Set AVR31 architecture for \n+\t* config/avr/avr.c (avr_mcu_types): Set AVR31 architecture for\n \tatmega103 device.\n \n 2008-04-07  Jan Hubicka  <jh@suse.cz>\n@@ -10562,7 +10569,7 @@\n \t(assign_stack_local): Update\n \t(expand_function_end): Update.\n \t(get_art_pointer_save_area): Update\n-\t* function.h \n+\t* function.h\n \t* emit-rtl.c (rtl): Declare.\n \t(regno_reg_rtx): Declare.\n \t(first_insn, last_insn, cur_insn_uid, last_location, first_label_num):\n@@ -10657,7 +10664,7 @@\n \t(avr_asm_init_sections): (Ditto.).\n \t(avr_rtx_costs): (Ditto.).\n \t* config/avr/avr.md: (Ditto.).\n-\t* config/avr/avr.h: Use '__AVR_HAVE_JMP_CALL__' instead of \n+\t* config/avr/avr.h: Use '__AVR_HAVE_JMP_CALL__' instead of\n \t'__AVR_MEGA__'.\n \n 2008-04-06  Richard Guenther  <rguenther@suse.de>\n@@ -10825,7 +10832,7 @@\n \n \t* c-objc-common.h (LANG_HOOKS_FUNCTION_MISSING_NORETURN_OK_P):\n \tRename to LANG_HOOKS_MISSING_NORETURN_OK_P.\n-\t\n+\n 2008-04-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/35440\n@@ -11021,10 +11028,10 @@\n \n 2008-04-02  Anatoly Sokolov <aesok@post.ru>\n \n-\t* config/avr/predicates.md (io_address_operand): New predicate. \n+\t* config/avr/predicates.md (io_address_operand): New predicate.\n \t* config/avr/avr-protos.h (avr_io_address_p): Remove declaration.\n \t* config/avr/avr.c (avr_io_address_p): Remove function.\n-\t(out_movqi_r_mr): Use 'io_address_operand' predicate instead of \n+\t(out_movqi_r_mr): Use 'io_address_operand' predicate instead of\n \t'avr_io_address_p' function.\n \t(out_movhi_r_mr): (Ditto.).\n \t(out_movqi_mr_r): (Ditto.).\n@@ -11721,7 +11728,7 @@\n \n \t* config/alpha/x-vms (EXTRA_PROGRAMS): Remove.\n \t* config/t-openbsd-thread: Remove commented out lines.\n-\t\n+\n \t* config/x-interix: Remove.\n \n \t* config/m68hc11/t-m68hc11-gas: Rename to...\n@@ -11845,7 +11852,7 @@\n \t(reload_reg_rtx_for_input): New variable.\n \t(reload_reg_rtx_for_output): Likewise.\n \t(emit_input_reload_insns): Use reloadreg rather than rl->reg_rtx\n-\twhen reassigning a pseudo register.  Load reloadreg from \n+\twhen reassigning a pseudo register.  Load reloadreg from\n \treload_reg_rtx_for_input, moving the mode and register\n \tcalculation to...\n \t(do_input_reload): ...here.  Use the mode-adjusted reg_rtx\n@@ -11887,12 +11894,12 @@\n \t(build/genflags.o): Likewise.\n \n 2008-03-25  Bob Wilson  <bob.wilson@acm.org>\n-\t\n+\n \t* config/xtensa/xtensa.c (xtensa_va_start): Use build_int_cst\n \tinstead of size_int for integer types.\n \t(xtensa_gimplify_va_arg_expr): Likewise.  Convert index to sizetype\n \tto match type of MINUS_EXPR.\n-\t\n+\n 2008-03-25  Tom Tromey  <tromey@redhat.com>\n \n \t* configure: Rebuilt.\n@@ -12010,7 +12017,7 @@\n 2008-03-25  Naveen.H.S  <naveen.hs@kpitcummins.com>\n \n \t* config/sh/sh.md (prefetch): Add condition for SH2A target.\n-\t(prefetch_sh2a): New.\t\n+\t(prefetch_sh2a): New.\n \n 2008-03-25  Jayant Sonar  <Jayant.sonar@kpitcummins.com>\n \t    Naveen.H.S  <naveen.hs@kpitcummins.com>\n@@ -12063,7 +12070,7 @@\n \n \t* diagnostic.c (diagnostic_count_diagnostic): Delete.\n \t(diagnostic_report_diagnostic): Update. Handle ICEs here.\n-\t\n+\n 2008-03-24  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* gthr-vxworks.h (UNUSED): Define.\n@@ -12076,7 +12083,7 @@\n \n \t* doc/extend.texi (Function Attributes): Add missing comma in the\n \texample of the \"alloc_size\" attribute.\n-\t\n+\n 2008-03-23  Uros Bizjak  <ubizjak@gmail.com>\n \n \tRevert:\n@@ -12554,34 +12561,34 @@\n \t* config/avr/avr.c (avr_arch_types): Add avr6 entry.\n \t(avr_arch): Add ARCH_AVR6.\n \t(avr_mcu_types): Add 'atmega2560' and 'atmega2561' entry.\n- \t(initial_elimination_offset): Initialize and use 'avr_pc_size' \n+ \t(initial_elimination_offset): Initialize and use 'avr_pc_size'\n \tinstead of fixed value 2.\n \t(print_operand_address): Use gs() asm specifier instead of pm().\n \t(avr_assemble_integer): (Ditto.).\n \t(avr_output_addr_vec_elt): (Ditto.).\n \t(print_operand): Handle \"!\" code.\n-\t* config/avr/avr.h (TARGET_CPU_CPP_BUILTINS): Add \n+\t* config/avr/avr.h (TARGET_CPU_CPP_BUILTINS): Add\n \t__AVR_3_BYTE_PC__, __AVR_2_BYTE_PC__ and __AVR_HAVE_JMP_CALL__.\n \t(AVR_HAVE_EIJMP_EICALL): Define.\n \t(AVR_3_BYTE_PC): Redefine.\n \t(AVR_2_BYTE_PC): (Ditto.).\n \t(PRINT_OPERAND_PUNCT_VALID_P): Add '!' code.\n \t(LINK_SPEC): Add atmega2560 and atmega2561.\n-\t(CRT_BINUTILS_SPEC): Add atmega2560 (crtm2560.o) and atmega2561 \n+\t(CRT_BINUTILS_SPEC): Add atmega2560 (crtm2560.o) and atmega2561\n \t(crtm2561.o).\n-\t* config/avr/avr.md (call_insn): Use eicall instead of icall \n+\t* config/avr/avr.md (call_insn): Use eicall instead of icall\n \tfor 3 byte PC devices.\n \t(call_value_insn): (Ditto.).\n \t(*tablejump_enh): Use eijmp instead of ijmp for 3 byte PC devices.\n \t(indirect_jump): Use only for for 2 byte PC devices.\n \t(*tablejump): (Ditto.).\n \t(*indirect_jump_avr6): Add insn.\n \t(*tablejump_rjmp): Don't use for 3 byte PC devices.\n-\t* config/avr/libgcc.S (__prologue_saves__): Use eijmp \n+\t* config/avr/libgcc.S (__prologue_saves__): Use eijmp\n \tinstead of ijmp for 3 byte PC devices.\n \t(__tablejump2__): (Ditto.).\n \t* config/avr/t-avr (MULITLIB_OPTIONS): Add avr6 architecture.\n-\t(MULITLIB_DIRNAMES): (Ditto.). \n+\t(MULITLIB_DIRNAMES): (Ditto.).\n \t(MULTILIB_MATCHES): Add atmega2560 and atmega2561 to list.\n \n 2008-03-15  Uros Bizjak  <ubizjak@gmail.com>\n@@ -12608,7 +12615,7 @@\n \tbeing a PHI_NODE.\n \n 2008-03-14  Bob Wilson  <bob.wilson@acm.org>\n-\t\n+\n \t* doc/invoke.texi (Option Summary, Xtensa Options): Document\n \t-mserialize-volatile and -mno-serialize-volatile Xtensa options.\n \t* config/xtensa/xtensa.c (print_operand): Do not emit MEMW instructions\n@@ -13226,7 +13233,7 @@\n \t(df_ref_create_structure): Allocate df_ref_extract if offset and\n \twidth fields are used.\n \t(df_def_record_1): Get offset and width from ZERO_EXTRACT.\n-\t(df_uses_record): Get offset and width from ZERO_EXTRACT \n+\t(df_uses_record): Get offset and width from ZERO_EXTRACT\n \tand SIGN_EXTRACT.\n \t* global.c (build_insn_chain): Change DF_REF_EXTRACT to either\n \tDF_REF_ZERO_EXTRACT or DF_REF_SIGN_EXTRACT.  Change\n@@ -13237,7 +13244,7 @@\n \t(df_ref_extract): New structure.\n \t(DF_REF_WIDTH, DF_REF_OFFSET): New macros.\n \t(df_ref_create): Add width and offset parameters.\n-\t\n+\n 2008-03-05  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-structalias.c (get_constraint_for_component_ref):\n@@ -13468,7 +13475,7 @@\n \t* Makefile.in (OBJS-common): Remove struct-equiv.o.\n \t(struct-equiv.o): Remove rule.\n \t* basic-block.h (struct_equiv_checkpoint, STRUCT_EQUIV_*,\n-\tinsns_match_p, struct_equiv_block_eq, struct_equiv_init, \n+\tinsns_match_p, struct_equiv_block_eq, struct_equiv_init,\n \trtx_equiv_p, condjump_equiv_p): Remove prototypes.\n \n 2008-03-01  Alexandre Oliva  <aoliva@redhat.com>\n@@ -13655,7 +13662,7 @@\n \t* tree-vect-analyze.c: Remove unused static decls.\n \t* lambda.h (dependence_level): New.\n \t* common.opt (ftree-loop-distribution): New.\n-\t* tree-flow.h (mark_virtual_ops_in_bb, \n+\t* tree-flow.h (mark_virtual_ops_in_bb,\n \tslpeel_tree_duplicate_loop_to_edge_cfg,\n \trename_variables_in_loop): Declared.\n \t* Makefile.in (TREE_DATA_REF_H): Depend on tree-chrec.h.\n@@ -13865,7 +13872,7 @@\n 2008-02-26  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/35315\n-\t* attribs.c (decl_attributes): Leave ATTR_FLAG_TYPE_IN_PLACE \n+\t* attribs.c (decl_attributes): Leave ATTR_FLAG_TYPE_IN_PLACE\n \talone if it's the naming decl for the type's main variant.\n \n 2008-02-26  Tom Tromey  <tromey@redhat.com>\n@@ -13959,7 +13966,7 @@\n \t* builtins.c (expand_builtin): Remove BUILT_IN_STDARG_START.\n \t* tree-stdarg.c (execute_optimize_stdarg): Likewise.\n \t* tree-inline.c (inline_forbidden_p_1): Likewise.\n-\t\n+\n 2008-02-26  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-flow.h (uid_decl_map_hash, uid_decl_map_eq): Move ...\n@@ -14028,7 +14035,7 @@\n \tWvolatile-register-var.\n \t* common.opt: Move Wvolatile-register-var to...\n \t* c.opt: ...here.\n-\t\n+\n 2008-02-26  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \t* common.opt (Wlarger-than=): New.\n@@ -14039,7 +14046,7 @@\n \t* opth-gen.awk: Likewise.\n \t* stor-layout.c (layout_decl): Use -Wlarger-than= for warning.\n \t* tree-optimize.c (tree_rest_of_compilation): Likewise.\n-\t\n+\n 2008-02-26  Manuel Lopez-Ibanez <manu@gcc.gnu.org>\n \n \t* c-common.c (match_case_to_enum_1): Add appropriate\n@@ -14062,7 +14069,7 @@\n \t(print_ignored_options): New.\n \t(handle_option): Postpone errors for unknown -Wno-* options.\n \t* opts.h (print_ignored_options): Declare.\n-\t\n+\n 2008-02-25  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* config/mips/mips.md (loadgp_blockage, blockage): Change type\n@@ -14141,7 +14148,7 @@\n \tPR c/35162\n \t* doc/invoke.texi (-fcx-limited-range): Correct to be in line with\n \tactual behaviour and C99.\n-\t\n+\n 2008-02-26  Ben Elliston  <bje@au.ibm.com>\n \n \t* config/rs6000/rs6000.h (ASM_CPU_POWER5_SPEC): Define.\n@@ -14244,7 +14251,7 @@\n \tunused local variable `has_hot_blocks'.\n \t(fix_crossing_conditional_branches): Remove unused local variable\n \t`prev_bb'.\n-\t\n+\n 2008-02-25  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR middle-end/19984\n@@ -14336,7 +14343,7 @@\n 2008-02-23  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/22076\n-\tPR target/34256\t\n+\tPR target/34256\n \t* config/i386/mmx.md (*mov<mode>_internal_rex64): Use \"!y\" to\n \tprevent reload from using MMX registers.\n \t(*mov<mode>_internal): Ditto.\n@@ -14471,7 +14478,7 @@\n \n \t* config/h8300/h8300.c (h8300_expand_epilogue): Emit return insn\n \tas a jump, not as a plain insn.\n-\t\n+\n 2008-02-20  Seongbae Park <seongbae.park@gmail.com>\n \n \t* doc/invoke.texi (Warning Options): Add new option\n@@ -14524,7 +14531,7 @@\n \t* doc/install.texi: Correct references to CFLAGS, replacing them\n \twith BOOT_CFLAGS.  Document flags used during bootstrap for\n \ttarget libraries.\n-\t\t\t\t\n+\n 2008-02-20  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.h (SSE_VEC_FLOAT_MODE_P): New define.\n@@ -14657,7 +14664,7 @@\n \tcannot be disambiguated.\n \t* c.opt (v): Pass on to the common option handler.\n \n-2008-02-19  Revital Eres  <eres@il.ibm.com> \n+2008-02-19  Revital Eres  <eres@il.ibm.com>\n \n \t* modulo-sched.c (sms_schedule): Change dump message when\n \tcreate_ddg function fails.\n@@ -14779,7 +14786,7 @@\n 2008-02-17  Uros Bizjak  <ubizjak@gmail.com>\n \n \tRevert:\n-\t2008-02-15  Uros Bizjak  <ubizjak@gmail.com>\t\n+\t2008-02-15  Uros Bizjak  <ubizjak@gmail.com>\n \t* config/i386/sfp-machine.h (CMPtype): Define as typedef using\n \tlibgcc_cmp_return mode.\n \n@@ -14955,7 +14962,7 @@\n \tAdd -fdump-ipa-inline.\n \t* tree-dump.c (dump_files): Remove tree-inlined dump.\n \t* tree-pass.h (tree_dump_index): Remove TDI_inlined.\n-\t\n+\n 2008-02-12  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/35171\n@@ -15045,7 +15052,7 @@\n \n 2008-02-08  Sa Liu  <saliu@de.ibm.com>\n \n-\t* config/spu/spu-builtins.def: Fixed wrong parameter type in spu \n+\t* config/spu/spu-builtins.def: Fixed wrong parameter type in spu\n \tintrinsics spu_convts, spu_convtu, spu_convtf.\n \n 2008-02-08  Hans-Peter Nilsson  <hp@axis.com>\n@@ -15060,7 +15067,7 @@\n \toptc-gen.awk.\n \t* opts-common.c: Likewise.\n \t* optc-gen.awk: Likewise.\n-\t\n+\n 2008-02-07  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* config/s390/s390.h (FUNCTION_ARG_REGNO_P): Fix fprs for 64 bit.\n@@ -15069,7 +15076,7 @@\n \n \tPR rtl-opt/33410\n \t* config/alpha/alpha.c (alpha_emit_xfloating_compare): Use an\n-\tEXPR_LIST for the REG_EQUAL instead of a comparison with a \n+\tEXPR_LIST for the REG_EQUAL instead of a comparison with a\n \tfunny mode.\n \n 2008-02-07  Uros Bizjak  <ubizjak@gmail.com>\n@@ -15106,7 +15113,7 @@\n \n 2008-02-06  Ralf Corsepius  <ralf.corsepius@rtems.org>\n \n-\t* config/arm/rtems-elf.h (TARGET_OS_CPP_BUILTINS): Add \n+\t* config/arm/rtems-elf.h (TARGET_OS_CPP_BUILTINS): Add\n \tbuiltin_define (\"__USE_INIT_FINI__\").\n \t* config/h8300/t-rtems (MULTILIB_OPTION,MULTILIB_DIRNAMES): Add\n \t-msx multilibs.\n@@ -15239,16 +15246,16 @@\n \t* doc/c-tree.texi (Types): Fix grammar.\n \t(Expression trees): Ditto.\n \t* doc/passes.texi (Tree-SSA passes): Ditto.\n-\t\n+\n \t* doc/configterms.texi (Configure Terms): Fix typo.\n \t* doc/cpp.texi (Common Predefined Macros): Ditto.\n \t* doc/md.texi (Machine Constraints): Ditto.\n-\t\n+\n \t* doc/makefile.texi (Makefile): Add comma.\n \n 2008-01-31  Tom Browder  <tom.browder@gmail.com>\n \t    Gerald Pfeifer  <gerald@pfeifer.com>\n-\t\n+\n \t* doc/sourcebuild.texi (Front End): Remove references to CVS\n \tand CVSROOT/modules.\n \t(Texinfo Manuals): Replace reference to CVS by one to SVN.\n@@ -15269,7 +15276,7 @@\n \toptions. Minor fixes.\n \t(-std): Move reference to standards closer to where language\n \tstandards are first mentioned.\n-\t\n+\n 2008-01-31  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \tPR rtl-optimization/34995\n@@ -15365,7 +15372,7 @@\n 2008-01-28  Andy Hutchinson   <hutchinsonandy@netscape.net>\n \n \tPR target/34412\n-\t* config/avr/avr.c (expand_prologue): Use correct QI mode frame \n+\t* config/avr/avr.c (expand_prologue): Use correct QI mode frame\n \tpointer for tiny stack.\n \n 2008-01-28  Bernhard Fischer  <aldot@gcc.gnu.org>\n@@ -15450,7 +15457,7 @@\n \tChange type of cost to comp_cost.\n \t(determine_iv_cost): Increase cost of non-original ivs, instead\n \tof decreasing the cost of original ones.\n-\t(get_address_cost): Indicate the complexity of the addressing mode \n+\t(get_address_cost): Indicate the complexity of the addressing mode\n \tin comp_cost.\n \t(try_add_cand_for): Prefer using ivs not specific to some object.\n \t* tree-flow.h (force_expr_to_var_cost): Declaration removed.\n@@ -15693,10 +15700,10 @@\n \t* ipa-struct-reorg.c (remove_str_allocs_in_func, remove_str_allocs):\n \tNew functions.\n \t(remove_structure): Update allocations list before removing structure.\n-\t\n+\n 2008-01-25  Golovanevsky Olga  <olga@il.ibm.com>\n \n-\t* ipa-struct-reorg.c (is_safe_cond_expr, \n+\t* ipa-struct-reorg.c (is_safe_cond_expr,\n \tcreate_new_stmts_for_cond_expr): Use integer_zerop function,\n \tthat recognize not only zero-pointer, but zero-integer too.\n \n@@ -15752,7 +15759,7 @@\n \n \tPR c++/25701\n \t* doc/gcc.texi (Software development): Add a direntry for g++.\n-\t\n+\n 2008-01-23  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* config/cris/cris.h (CC1PLUS_SPEC, OPTIMIZATION_OPTIONS): Drop\n@@ -15780,17 +15787,17 @@\n \t(avr_arch_types): Add 'avr31' and 'avr51' entries.\n \t(avr_arch): Add 'ARCH_AVR31' and 'ARCH_AVR51'.\n \t(avr_mcu_types): Add 'avr31' and 'avr51' architectures.\n-\t(avr_override_options): Init 'avr_current_arch'. \n+\t(avr_override_options): Init 'avr_current_arch'.\n \t(base_arch_s): Move from here...\n-\t* config/avr/avr.h (base_arch_s): ... here. Add new members \n-\t'have_elpm', 'have_elpmx', 'have_eijmp_eicall', 'reserved'. Rename \n+\t* config/avr/avr.h (base_arch_s): ... here. Add new members\n+\t'have_elpm', 'have_elpmx', 'have_eijmp_eicall', 'reserved'. Rename\n \t'mega' to 'have_jmp_call'.\n-\t(TARGET_CPU_CPP_BUILTINS): Define \"__AVR_HAVE_JMP_CALL__\", \n+\t(TARGET_CPU_CPP_BUILTINS): Define \"__AVR_HAVE_JMP_CALL__\",\n \t\"__AVR_HAVE_RAMPZ__\", \t\"__AVR_HAVE_ELPM__\" and  \"__AVR_HAVE_ELPMX__\"\n \tmacros.\n-\t(LINK_SPEC, CRT_BINUTILS_SPECS, ASM_SPEC): Add 'avr31' and 'avr51' \n+\t(LINK_SPEC, CRT_BINUTILS_SPECS, ASM_SPEC): Add 'avr31' and 'avr51'\n \tarchitectures.\n-\t* config/avr/t-avr (MULTILIB_OPTIONS, MULTILIB_DIRNAMES, \n+\t* config/avr/t-avr (MULTILIB_OPTIONS, MULTILIB_DIRNAMES,\n \tMULTILIB_MATCHES): (Ditto.).\n \n 2008-01-23  Richard Guenther  <rguenther@suse.de>\n@@ -15960,15 +15967,15 @@\n \n 2008-01-21  Alon Dayan  <alond@il.ibm.com>\n \t    Olga Golovanevsky  <olga@il.ibm.com>\n-\t\n+\n \tPR tree-optimization/34701\n \t* ipa-struct-reorg.c (gen_size): Fix the malloc parameter calculation\n \twhen the structure size is not a power of 2.\n \n 2008-01-20  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t* doc/install.texi: Add doc for --enable-checking=df.\n-\t\n+\n 2008-01-20  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \tPR rtl-optimization/34808\n@@ -16042,7 +16049,7 @@\n \t(df_live_init): Init the df_live sets only with the variables\n \tfound live by df_lr.\n \t(df_live_transfer_function): Use the df_lr sets to prune the\n-\tdf_live sets as they are being computed.  \n+\tdf_live sets as they are being computed.\n \t(df_live_free): Free df_live_scratch.\n \n 2008-01-18  Ian Lance Taylor  <iant@google.com>\n@@ -16224,7 +16231,7 @@\n \n 2008-01-16  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* tree-data-ref.c (subscript_dependence_tester_1): Call \n+\t* tree-data-ref.c (subscript_dependence_tester_1): Call\n \tfree_conflict_function.\n \t(compute_self_dependence): Same.\n \n@@ -16263,7 +16270,7 @@\n \tPR c++/24924\n \t* c-opts (c_common_post_options): Do not enable CPP\n \tflag_pedantic_errors by default.\n-\t\n+\n 2008-01-14  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/31944\n@@ -16325,18 +16332,18 @@\n \tcorrect type.\n \n 2008-01-11  Bob Wilson  <bob.wilson@acm.org>\n-\t\n+\n \t* config/xtensa/xtensa.c (override_options): Set flag_shlib.\n-\t\n+\n 2008-01-11  James E. Wilson  <wilson@specifix.com>\n \n \tPR target/26015\n \t* config/vax/elf.h (FRAME_POINTER_CFA_OFFSET): Define.\n \n 2008-01-11  Anatoly Sokolov <aesok@post.ru>\n \n-\t* config/avr/avr.c (expand_prologue, expand_epilogue): Don't \n-\tsave/restore frame pointer register and don't use 'call-prologues' \n+\t* config/avr/avr.c (expand_prologue, expand_epilogue): Don't\n+\tsave/restore frame pointer register and don't use 'call-prologues'\n \toptimization in function with \"OS_task\" attribute.\n \n 2008-01-11  Eric Botcazou  <ebotcazou@adacore.com>\n@@ -16462,13 +16469,13 @@\n \n \t2008-01-05  Uros Bizjak  <ubizjak@gmail.com>\n \t* config/i386/i386.c (ix86_builtin_reciprocal): Remove check\n-\tfor TARGET_RECIP.\t\n-\t\n+\tfor TARGET_RECIP.\n+\n 2008-01-08  Jan Sjodin  <jan.sjodin@amd.com>\n-\t\n+\n \t* config/i386/i386.c (k8_cost, amdfam10_cost): Branch costs\n \tfor vectorization tuned.\n-\t\n+\n 2008-01-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/34683"}, {"sha": "992332663772774e6d568ce5e5946a96fef5f2e1", "filename": "gcc/dse.c", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22129589211764a55ee21f9202ab80b3772817b6/gcc%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22129589211764a55ee21f9202ab80b3772817b6/gcc%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.c?ref=22129589211764a55ee21f9202ab80b3772817b6", "patch": "@@ -783,10 +783,9 @@ replace_inc_dec (rtx *r, void *d)\n       {\n \trtx r1 = XEXP (x, 0);\n \trtx c = gen_int_mode (Pmode, data->size);\n-\tadd_insn_before (data->insn, \n-\t\t\t gen_rtx_SET (Pmode, r1, \n-\t\t\t\t      gen_rtx_PLUS (Pmode, r1, c)),\n-\t\t\t NULL);\n+\temit_insn_before (gen_rtx_SET (Pmode, r1, \n+\t\t\t\t       gen_rtx_PLUS (Pmode, r1, c)),\n+\t\t\t  data->insn);\n \treturn -1;\n       }\n \t\t \n@@ -795,10 +794,9 @@ replace_inc_dec (rtx *r, void *d)\n       {\n \trtx r1 = XEXP (x, 0);\n \trtx c = gen_int_mode (Pmode, -data->size);\n-\tadd_insn_before (data->insn, \n-\t\t\t gen_rtx_SET (Pmode, r1, \n-\t\t\t\t      gen_rtx_PLUS (Pmode, r1, c)),\n-\t\t\t NULL);\n+\temit_insn_before (gen_rtx_SET (Pmode, r1, \n+\t\t\t\t       gen_rtx_PLUS (Pmode, r1, c)),\n+\t\t\t  data->insn);\n \treturn -1;\n       }\n \t\n@@ -809,8 +807,7 @@ replace_inc_dec (rtx *r, void *d)\n \t   insn that contained it.  */\n \trtx add = XEXP (x, 0);\n \trtx r1 = XEXP (add, 0);\n-\tadd_insn_before (data->insn, \n-\t\t\t gen_rtx_SET (Pmode, r1, add), NULL);\n+\temit_insn_before (gen_rtx_SET (Pmode, r1, add), data->insn);\n \treturn -1;\n       }\n \n@@ -827,12 +824,12 @@ static int\n replace_inc_dec_mem (rtx *r, void *d)\n {\n   rtx x = *r;\n-  if (GET_CODE (x) == MEM)\n+  if (x != NULL_RTX && MEM_P (x))\n     {\n       struct insn_size data;\n \n       data.size = GET_MODE_SIZE (GET_MODE (x));\n-      data.insn = (rtx)d;\n+      data.insn = (rtx) d;\n \n       for_each_rtx (&XEXP (x, 0), replace_inc_dec, &data);\n \t"}]}