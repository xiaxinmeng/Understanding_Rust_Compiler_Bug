{"sha": "43694e8bbb002aac45baaf35cc70861c546a1a40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM2OTRlOGJiYjAwMmFhYzQ1YmFhZjM1Y2M3MDg2MWM1NDZhMWE0MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-07-20T05:06:52Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-07-20T05:06:52Z"}, "message": "PR c++/67164 - clean up dead code\n\n\t* pt.c (iterative_hash_template_arg, template_args_equal): Don't\n\thandle ARGUMENT_PACK_SELECT.\n\nFrom-SVN: r238507", "tree": {"sha": "ba5ef5c5526537d41142bef480688fba06895388", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba5ef5c5526537d41142bef480688fba06895388"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43694e8bbb002aac45baaf35cc70861c546a1a40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43694e8bbb002aac45baaf35cc70861c546a1a40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43694e8bbb002aac45baaf35cc70861c546a1a40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43694e8bbb002aac45baaf35cc70861c546a1a40/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "30bfa23492def68e9d6449aa41647f3ef1f183fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30bfa23492def68e9d6449aa41647f3ef1f183fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30bfa23492def68e9d6449aa41647f3ef1f183fb"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "417cb82b3ee9683e63852d3421dfbc14311266c2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43694e8bbb002aac45baaf35cc70861c546a1a40/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43694e8bbb002aac45baaf35cc70861c546a1a40/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=43694e8bbb002aac45baaf35cc70861c546a1a40", "patch": "@@ -1,3 +1,9 @@\n+2016-07-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/67164\n+\t* pt.c (iterative_hash_template_arg, template_args_equal): Don't\n+\thandle ARGUMENT_PACK_SELECT.\n+\n 2016-07-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/70869"}, {"sha": "7c7024c00461639fdd742a9122aeb68c615eb45c", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43694e8bbb002aac45baaf35cc70861c546a1a40/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43694e8bbb002aac45baaf35cc70861c546a1a40/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=43694e8bbb002aac45baaf35cc70861c546a1a40", "patch": "@@ -1704,9 +1704,7 @@ iterative_hash_template_arg (tree arg, hashval_t val)\n     STRIP_NOPS (arg);\n \n   if (TREE_CODE (arg) == ARGUMENT_PACK_SELECT)\n-    /* We can get one of these when re-hashing a previous entry in the middle\n-       of substituting into a pack expansion.  Just look through it.  */\n-    arg = ARGUMENT_PACK_SELECT_FROM_PACK (arg);\n+    gcc_unreachable ();\n \n   code = TREE_CODE (arg);\n   tclass = TREE_CODE_CLASS (code);\n@@ -7894,17 +7892,7 @@ template_args_equal (tree ot, tree nt)\n       return 1;\n     }\n   else if (ot && TREE_CODE (ot) == ARGUMENT_PACK_SELECT)\n-    {\n-      /* We get here probably because we are in the middle of substituting\n-         into the pattern of a pack expansion. In that case the\n-\t ARGUMENT_PACK_SELECT temporarily replaces the pack argument we are\n-\t interested in. So we want to use the initial pack argument for\n-\t the comparison.  */\n-      ot = ARGUMENT_PACK_SELECT_FROM_PACK (ot);\n-      if (nt && TREE_CODE (nt) == ARGUMENT_PACK_SELECT)\n-\tnt = ARGUMENT_PACK_SELECT_FROM_PACK (nt);\n-      return template_args_equal (ot, nt);\n-    }\n+    gcc_unreachable ();\n   else if (TYPE_P (nt))\n     {\n       if (!TYPE_P (ot))"}]}