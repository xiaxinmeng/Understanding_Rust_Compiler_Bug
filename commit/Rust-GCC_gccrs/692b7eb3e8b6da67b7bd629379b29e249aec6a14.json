{"sha": "692b7eb3e8b6da67b7bd629379b29e249aec6a14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkyYjdlYjNlOGI2ZGE2N2I3YmQ2MjkzNzliMjllMjQ5YWVjNmExNA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2001-11-12T17:27:35Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2001-11-12T17:27:35Z"}, "message": "h8300.c (get_shift_alg): Remove a redundant label.\n\n\t* config/h8300/h8300.c (get_shift_alg): Remove a redundant\n\tlabel.\n\nFrom-SVN: r46957", "tree": {"sha": "826ac6f565f88b7ec363072273b0f5bfa755c127", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/826ac6f565f88b7ec363072273b0f5bfa755c127"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/692b7eb3e8b6da67b7bd629379b29e249aec6a14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/692b7eb3e8b6da67b7bd629379b29e249aec6a14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/692b7eb3e8b6da67b7bd629379b29e249aec6a14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/692b7eb3e8b6da67b7bd629379b29e249aec6a14/comments", "author": null, "committer": null, "parents": [{"sha": "0af5bc3eae6d6cc0bd0e40c5d770f0f4cd083b47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0af5bc3eae6d6cc0bd0e40c5d770f0f4cd083b47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0af5bc3eae6d6cc0bd0e40c5d770f0f4cd083b47"}], "stats": {"total": 54, "additions": 29, "deletions": 25}, "files": [{"sha": "e1c508af1af1094d761dacee772c16fad256c345", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/692b7eb3e8b6da67b7bd629379b29e249aec6a14/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/692b7eb3e8b6da67b7bd629379b29e249aec6a14/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=692b7eb3e8b6da67b7bd629379b29e249aec6a14", "patch": "@@ -1,3 +1,8 @@\n+2001-11-12  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.c (get_shift_alg): Remove a redundant\n+\tlabel.\n+\n Mon Nov 12 11:58:26 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* alias.c (nonoverlapping_memrefs_p): Only update size from memref"}, {"sha": "e4d81bad4bdf1fff8d7c03c6fe8f3ba7b3f30821", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 24, "deletions": 25, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/692b7eb3e8b6da67b7bd629379b29e249aec6a14/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/692b7eb3e8b6da67b7bd629379b29e249aec6a14/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=692b7eb3e8b6da67b7bd629379b29e249aec6a14", "patch": "@@ -2413,7 +2413,7 @@ get_shift_alg (shift_type, shift_mode, count, info)\n       if (shift_type == SHIFT_ASHIFTRT && count == 7)\n \t{\n \t  info->special = \"shll\\t%X0\\n\\tsubx\\t%X0,%X0\";\n-\t  goto return_shift_special;\n+\t  goto end;\n \t}\n       abort ();\n \n@@ -2423,31 +2423,31 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t  if (shift_type == SHIFT_ASHIFT && TARGET_H8300)\n \t    {\n \t      info->special = \"shar.b\\t%t0\\n\\tmov.b\\t%s0,%t0\\n\\trotxr.b\\t%t0\\n\\trotr.b\\t%s0\\n\\tand.b\\t#0x80,%s0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    }\n \n \t  if (shift_type == SHIFT_ASHIFT && TARGET_H8300H)\n \t    {\n \t      info->special = \"shar.b\\t%t0\\n\\tmov.b\\t%s0,%t0\\n\\trotxr.w\\t%T0\\n\\tand.b\\t#0x80,%s0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    }\n \n \t  if (shift_type == SHIFT_LSHIFTRT && TARGET_H8300)\n \t    {\n \t      info->special = \"shal.b\\t%s0\\n\\tmov.b\\t%t0,%s0\\n\\trotxl.b\\t%s0\\n\\trotl.b\\t%t0\\n\\tand.b\\t#0x01,%t0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    }\n \n \t  if (shift_type == SHIFT_LSHIFTRT && TARGET_H8300H)\n \t    {\n \t      info->special = \"shal.b\\t%s0\\n\\tmov.b\\t%t0,%s0\\n\\trotxl.w\\t%T0\\n\\tand.b\\t#0x01,%t0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    }\n \n \t  if (shift_type == SHIFT_ASHIFTRT)\n \t    {\n \t      info->special = \"shal.b\\t%s0\\n\\tmov.b\\t%t0,%s0\\n\\trotxl.b\\t%s0\\n\\tsubx\\t%t0,%t0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    }\n \t}\n       else if (8 <= count && count <= 12)\n@@ -2460,26 +2460,26 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t      info->special = \"mov.b\\t%s0,%t0\\n\\tsub.b\\t%s0,%s0\";\n \t      info->shift1  = \"shal.b\\t%t0\";\n \t      info->shift2  = \"shal.b\\t#2,%t0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    case SHIFT_LSHIFTRT:\n \t      info->special = \"mov.b\\t%t0,%s0\\n\\tsub.b\\t%t0,%t0\";\n \t      info->shift1  = \"shlr.b\\t%s0\";\n \t      info->shift2  = \"shlr.b\\t#2,%s0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    case SHIFT_ASHIFTRT:\n \t      if (TARGET_H8300)\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\tbld\\t#7,%s0\\n\\tsubx\\t%t0,%t0\";\n \t      else\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\texts.w\\t%T0\";\n \t      info->shift1 = \"shar.b\\t%s0\";\n \t      info->shift2 = \"shar.b\\t#2,%s0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    }\n \t}\n       else if (count == 15 && shift_type == SHIFT_ASHIFTRT)\n \t{\n \t  info->special = \"shll\\t%t0\\n\\tsubx\\t%t0,%t0\\n\\tmov.b\\t%t0,%s0\";\n-\t  goto return_shift_special;\n+\t  goto end;\n \t}\n       abort ();\n \n@@ -2490,13 +2490,13 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t    {\n \t    case SHIFT_ASHIFT:\n \t      info->special = \"mov.b\\t%y0,%z0\\n\\tmov.b\\t%x0,%y0\\n\\tmov.b\\t%w0,%x0\\n\\tsub.b\\t%w0,%w0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    case SHIFT_LSHIFTRT:\n \t      info->special = \"mov.b\\t%x0,%w0\\n\\tmov.b\\t%y0,%x0\\n\\tmov.b\\t%z0,%y0\\n\\tsub.b\\t%z0,%z0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    case SHIFT_ASHIFTRT:\n \t      info->special = \"mov.b\\t%x0,%w0\\n\\tmov.b\\t%y0,%x0\\n\\tmov.b\\t%z0,%y0\\n\\tshll\\t%z0\\n\\tsubx\\t%z0,%z0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    }\n \t}\n       else if (count == 8 && !TARGET_H8300)\n@@ -2505,13 +2505,13 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t    {\n \t    case SHIFT_ASHIFT:\n \t      info->special = \"mov.w\\t%e0,%f4\\n\\tmov.b\\t%s4,%t4\\n\\tmov.b\\t%t0,%s4\\n\\tmov.b\\t%s0,%t0\\n\\tsub.b\\t%s0,%s0\\n\\tmov.w\\t%f4,%e0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    case SHIFT_LSHIFTRT:\n \t      info->special = \"mov.w\\t%e0,%f4\\n\\tmov.b\\t%t0,%s0\\n\\tmov.b\\t%s4,%t0\\n\\tmov.b\\t%t4,%s4\\n\\textu.w\\t%f4\\n\\tmov.w\\t%f4,%e0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    case SHIFT_ASHIFTRT:\n \t      info->special = \"mov.w\\t%e0,%f4\\n\\tmov.b\\t%t0,%s0\\n\\tmov.b\\t%s4,%t0\\n\\tmov.b\\t%t4,%s4\\n\\texts.w\\t%f4\\n\\tmov.w\\t%f4,%e0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    }\n \t}\n       else if ((TARGET_H8300 && count == 16)\n@@ -2526,20 +2526,20 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t      info->special = \"mov.w\\t%f0,%e0\\n\\tsub.w\\t%f0,%f0\";\n \t      info->shift1  = \"shll.l\\t%S0\";\n \t      info->shift2  = \"shll.l\\t#2,%S0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    case SHIFT_LSHIFTRT:\n \t      info->special = \"mov.w\\t%e0,%f0\\n\\tsub.w\\t%e0,%e0\";\n \t      info->shift1  = \"shlr.l\\t%S0\";\n \t      info->shift2  = \"shlr.l\\t#2,%S0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    case SHIFT_ASHIFTRT:\n \t      if (TARGET_H8300)\n \t\tinfo->special = \"mov.w\\t%e0,%f0\\n\\tshll\\t%z0\\n\\tsubx\\t%z0,%z0\\n\\tmov.b\\t%z0,%y0\";\n \t      else\n \t\tinfo->special = \"mov.w\\t%e0,%f0\\n\\texts.l\\t%S0\";\n \t      info->shift1 = \"shar.l\\t%S0\";\n \t      info->shift2 = \"shar.l\\t#2,%S0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    }\n \t}\n       else if (count == 24 && !TARGET_H8300)\n@@ -2548,13 +2548,13 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t    {\n \t    case SHIFT_ASHIFT:\n \t      info->special = \"mov.b\\t%s0,%t0\\n\\tsub.b\\t%s0,%s0\\n\\tmov.w\\t%f0,%e0\\n\\tsub.w\\t%f0,%f0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    case SHIFT_LSHIFTRT:\n \t      info->special = \"mov.w\\t%e0,%f0\\n\\tmov.b\\t%t0,%s0\\n\\textu.w\\t%f0\\n\\textu.l\\t%S0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    case SHIFT_ASHIFTRT:\n \t      info->special = \"mov.w\\t%e0,%f0\\n\\tmov.b\\t%t0,%s0\\n\\texts.w\\t%f0\\n\\texts.l\\t%S0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    }\n \t}\n       else if (count == 31)\n@@ -2565,7 +2565,7 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t\tinfo->special = \"shll\\t%z0\\n\\tsubx\\t%w0,%w0\\n\\tmov.b\\t%w0,%x0\\n\\tmov.w\\t%f0,%e0\";\n \t      else\n \t\tinfo->special = \"shll\\t%e0\\n\\tsubx\\t%w0,%w0\\n\\tmov.b\\t%w0,%x0\\n\\tmov.w\\t%f0,%e0\";\n-\t      goto return_shift_special;\n+\t      goto end;\n \t    }\n \t  else\n \t    {\n@@ -2575,7 +2575,7 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t\t    info->special = \"sub.w\\t%e0,%e0\\n\\tshlr\\t%w0\\n\\tmov.w\\t%e0,%f0\\n\\trotxr\\t%z0\";\n \t\t  else\n \t\t    info->special = \"sub.w\\t%f0,%f0\\n\\tshll\\t%z0\\n\\tmov.w\\t%f0,%e0\\n\\trotxl\\t%w0\";\n-\t\t  goto return_shift_special;\n+\t\t  goto end;\n \t\t}\n \t    }\n \t}\n@@ -2585,7 +2585,6 @@ get_shift_alg (shift_type, shift_mode, count, info)\n       abort ();\n     }\n \n- return_shift_special:\n  end:\n   if (!TARGET_H8300S)\n     info->shift2 = NULL;"}]}