{"sha": "837b01f66fe08ec9c8fcd542aebb2c5f881c44e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM3YjAxZjY2ZmUwOGVjOWM4ZmNkNTQyYWViYjJjNWY4ODFjNDRlOQ==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana.radhakrishnan@arm.com", "date": "2011-01-20T22:03:29Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2011-01-20T22:03:29Z"}, "message": "Rename f_load to f_fpa_loads patch\n\n2011-01-20  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n\n\t* config/arm/arm.md (define_attr type): Rename f_load\n\tand f_store to f_fpa_load and f_fpa_store. Update.\n\t(write_conflict): Deal with rename fallout.\n\t(*push_fp_multi): Likewise.\n\t* config/arm/fpa.md (f_load): Use f_fpa_load.\n\t(f_store): Use f_fpa_store.\n\t(*movsf_fpa): Likewise.\n\t(*movdf_fpa): Likewise.\n\t(*movxf_fpa): Likewise.\n\t(*thumb2_movsf_fpa): Likewise.\n\t(*thumb2_movdf_fpa): Likewise.\n\t(*thumb2_movxf_fpa): Likewise.\n\t* config/arm/vfp.md (*thumb2_movdf_vfp): Fix attribute to\n\tf_loadd and f_stored.\n\t(*thumb2_movdi_vfp): Likewise.\n\t(*thumb2_movsf_vfp): Fix attribute to f_loads.\n\t(*thumb2_movsi_vfp): Likewise.\n\t* config/arm/cortex-m4-fpu.md (cortex_m4_f_load):\n\tUse f_loads instead of f_load.\n\t* config/arm/cortex-a5.md (cortex_a5_f_loads): Remove f_load.\n\nFrom-SVN: r169071", "tree": {"sha": "1cfaa96681b7b188714753b6564def1eeddefcfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cfaa96681b7b188714753b6564def1eeddefcfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/837b01f66fe08ec9c8fcd542aebb2c5f881c44e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/837b01f66fe08ec9c8fcd542aebb2c5f881c44e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/837b01f66fe08ec9c8fcd542aebb2c5f881c44e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/837b01f66fe08ec9c8fcd542aebb2c5f881c44e9/comments", "author": null, "committer": null, "parents": [{"sha": "aaab40fa2adbf1c494f8ef1ee1724b7c90e477e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaab40fa2adbf1c494f8ef1ee1724b7c90e477e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaab40fa2adbf1c494f8ef1ee1724b7c90e477e5"}], "stats": {"total": 69, "additions": 46, "deletions": 23}, "files": [{"sha": "cc28b24f31431129e210bb08a7824f18adac646d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/837b01f66fe08ec9c8fcd542aebb2c5f881c44e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/837b01f66fe08ec9c8fcd542aebb2c5f881c44e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=837b01f66fe08ec9c8fcd542aebb2c5f881c44e9", "patch": "@@ -1,3 +1,26 @@\n+2011-01-20  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+\t* config/arm/arm.md (define_attr type): Rename f_load\n+\tand f_store to f_fpa_load and f_fpa_store. Update.\n+\t(write_conflict): Deal with rename fallout.\n+\t(*push_fp_multi): Likewise.\n+\t* config/arm/fpa.md (f_load): Use f_fpa_load.\n+\t(f_store): Use f_fpa_store.\n+\t(*movsf_fpa): Likewise.\n+\t(*movdf_fpa): Likewise.\n+\t(*movxf_fpa): Likewise.\n+\t(*thumb2_movsf_fpa): Likewise.\n+\t(*thumb2_movdf_fpa): Likewise.\n+\t(*thumb2_movxf_fpa): Likewise.\n+\t* config/arm/vfp.md (*thumb2_movdf_vfp): Fix attribute to\n+\tf_loadd and f_stored.\n+\t(*thumb2_movdi_vfp): Likewise.\n+\t(*thumb2_movsf_vfp): Fix attribute to f_loads.\n+\t(*thumb2_movsi_vfp): Likewise.\n+\t* config/arm/cortex-m4-fpu.md (cortex_m4_f_load):\n+\tUse f_loads instead of f_load.\n+\t* config/arm/cortex-a5.md (cortex_a5_f_loads): Remove f_load.\n+\n 2011-01-20  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/xtensa/xtensa.h (GO_IF_MODE_DEPENDENT_ADDRESS): Remove."}, {"sha": "73a879e93845460e4b19ec510d25eb73a4743e41", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/837b01f66fe08ec9c8fcd542aebb2c5f881c44e9/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/837b01f66fe08ec9c8fcd542aebb2c5f881c44e9/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=837b01f66fe08ec9c8fcd542aebb2c5f881c44e9", "patch": "@@ -299,10 +299,10 @@\n ; ffarith\tFast floating point arithmetic (2 cycle)\n ; float_em\ta floating point arithmetic operation that is normally emulated\n ;\t\teven on a machine with an fpa.\n-; f_load\ta floating point load from memory\n-; f_store\ta floating point store to memory\n-; f_load[sd]\tsingle/double load from memory\n-; f_store[sd]\tsingle/double store to memory\n+; f_fpa_load\ta floating point load from memory. Only for the FPA.\n+; f_fpa_store\ta floating point store to memory. Only for the FPA.\n+; f_load[sd]\tA single/double load from memory. Used for VFP unit.\n+; f_store[sd]\tA single/double store to memory. Used for VFP unit.\n ; f_flag\ta transfer of co-processor flags to the CPSR\n ; f_mem_r\ta transfer of a floating point register to a real reg via mem\n ; r_mem_f\tthe reverse of f_mem_r\n@@ -326,7 +326,7 @@\n ;\n \n (define_attr \"type\"\n-\t\"alu,alu_shift,alu_shift_reg,mult,block,float,fdivx,fdivd,fdivs,fmul,fmuls,fmuld,fmacs,fmacd,ffmul,farith,ffarith,f_flag,float_em,f_load,f_store,f_loads,f_loadd,f_stores,f_stored,f_mem_r,r_mem_f,f_2_r,r_2_f,f_cvt,branch,call,load_byte,load1,load2,load3,load4,store1,store2,store3,store4,mav_farith,mav_dmult,fconsts,fconstd,fadds,faddd,ffariths,ffarithd,fcmps,fcmpd,fcpys\"\n+\t\"alu,alu_shift,alu_shift_reg,mult,block,float,fdivx,fdivd,fdivs,fmul,fmuls,fmuld,fmacs,fmacd,ffmul,farith,ffarith,f_flag,float_em,f_fpa_load,f_fpa_store,f_loads,f_loadd,f_stores,f_stored,f_mem_r,r_mem_f,f_2_r,r_2_f,f_cvt,branch,call,load_byte,load1,load2,load3,load4,store1,store2,store3,store4,mav_farith,mav_dmult,fconsts,fconstd,fadds,faddd,ffariths,ffarithd,fcmps,fcmpd,fcpys\"\n \t(if_then_else \n \t (eq_attr \"insn\" \"smulxy,smlaxy,smlalxy,smulwy,smlawx,mul,muls,mla,mlas,umull,umulls,umlal,umlals,smull,smulls,smlal,smlals\")\n \t (const_string \"mult\")\n@@ -450,7 +450,7 @@\n ; to stall the processor.  Used with model_wbuf above.\n (define_attr \"write_conflict\" \"no,yes\"\n   (if_then_else (eq_attr \"type\"\n-\t\t \"block,float_em,f_load,f_store,f_mem_r,r_mem_f,call,load1\")\n+\t\t \"block,float_em,f_fpa_load,f_fpa_store,f_mem_r,r_mem_f,call,load1\")\n \t\t(const_string \"yes\")\n \t\t(const_string \"no\")))\n \n@@ -10285,7 +10285,7 @@\n     output_asm_insn (pattern, operands);\n     return \\\"\\\";\n   }\"\n-  [(set_attr \"type\" \"f_store\")]\n+  [(set_attr \"type\" \"f_fpa_store\")]\n )\n \n ;; Special patterns for dealing with the constant pool"}, {"sha": "eb154e2980382befc77027ec8a0a35fcc34a1ff5", "filename": "gcc/config/arm/cortex-a5.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/837b01f66fe08ec9c8fcd542aebb2c5f881c44e9/gcc%2Fconfig%2Farm%2Fcortex-a5.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/837b01f66fe08ec9c8fcd542aebb2c5f881c44e9/gcc%2Fconfig%2Farm%2Fcortex-a5.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a5.md?ref=837b01f66fe08ec9c8fcd542aebb2c5f881c44e9", "patch": "@@ -270,7 +270,7 @@\n \n (define_insn_reservation \"cortex_a5_f_loadd\" 5\n   (and (eq_attr \"tune\" \"cortexa5\")\n-       (eq_attr \"type\" \"f_load,f_loadd\"))\n+       (eq_attr \"type\" \"f_loadd\"))\n   \"cortex_a5_ex1+cortex_a5_branch, cortex_a5_ex1\")\n \n (define_insn_reservation \"cortex_a5_f_stores\" 0\n@@ -280,7 +280,7 @@\n \n (define_insn_reservation \"cortex_a5_f_stored\" 0\n   (and (eq_attr \"tune\" \"cortexa5\")\n-       (eq_attr \"type\" \"f_store,f_stored\"))\n+       (eq_attr \"type\" \"f_stored\"))\n   \"cortex_a5_ex1+cortex_a5_branch, cortex_a5_ex1\")\n \n ;; Load-to-use for floating-point values has a penalty of one cycle,"}, {"sha": "6fd5faf74ee6336c7cc865946bf2db5d2bcc14cb", "filename": "gcc/config/arm/cortex-m4-fpu.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/837b01f66fe08ec9c8fcd542aebb2c5f881c44e9/gcc%2Fconfig%2Farm%2Fcortex-m4-fpu.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/837b01f66fe08ec9c8fcd542aebb2c5f881c44e9/gcc%2Fconfig%2Farm%2Fcortex-m4-fpu.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-m4-fpu.md?ref=837b01f66fe08ec9c8fcd542aebb2c5f881c44e9", "patch": "@@ -76,12 +76,12 @@\n \n (define_insn_reservation \"cortex_m4_f_load\" 2\n   (and (eq_attr \"tune\" \"cortexm4\")\n-       (eq_attr \"type\" \"f_load\"))\n+       (eq_attr \"type\" \"f_loads\"))\n   \"cortex_m4_ex_v*2\")\n \n (define_insn_reservation \"cortex_m4_f_store\" 2\n   (and (eq_attr \"tune\" \"cortexm4\")\n-       (eq_attr \"type\" \"f_store\"))\n+       (eq_attr \"type\" \"f_stores\"))\n   \"cortex_m4_ex_v*2\")\n \n (define_insn_reservation \"cortex_m4_f_loadd\" 3"}, {"sha": "6e6dd8d43c1cfeed1fdc6abb26f7267a6ad0067f", "filename": "gcc/config/arm/fpa.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/837b01f66fe08ec9c8fcd542aebb2c5f881c44e9/gcc%2Fconfig%2Farm%2Ffpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/837b01f66fe08ec9c8fcd542aebb2c5f881c44e9/gcc%2Fconfig%2Farm%2Ffpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffpa.md?ref=837b01f66fe08ec9c8fcd542aebb2c5f881c44e9", "patch": "@@ -83,11 +83,11 @@\n   \"core+fpa*2\")\n \n (define_insn_reservation \"f_load\" 3\n-  (and (eq_attr \"fpu\" \"fpa\") (eq_attr \"type\" \"f_load\"))\n+  (and (eq_attr \"fpu\" \"fpa\") (eq_attr \"type\" \"f_fpa_load\"))\n   \"fpa_mem+core*3\")\n \n (define_insn_reservation \"f_store\" 4\n-  (and (eq_attr \"fpu\" \"fpa\") (eq_attr \"type\" \"f_store\"))\n+  (and (eq_attr \"fpu\" \"fpa\") (eq_attr \"type\" \"f_fpa_store\"))\n   \"core*4\")\n \n (define_insn_reservation \"r_mem_f\" 6\n@@ -545,7 +545,7 @@\n   [(set_attr \"length\" \"4,4,4,4,8,8,4,4,4\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"type\"\n-\t \"ffarith,ffarith,f_load,f_store,r_mem_f,f_mem_r,*,load1,store1\")\n+\t \"ffarith,ffarith,f_fpa_load,f_fpa_store,r_mem_f,f_mem_r,*,load1,store1\")\n    (set_attr \"pool_range\" \"*,*,1024,*,*,*,*,4096,*\")\n    (set_attr \"neg_pool_range\" \"*,*,1012,*,*,*,*,4084,*\")]\n )\n@@ -580,7 +580,7 @@\n   [(set_attr \"length\" \"4,4,8,8,8,4,4,4,4,8,8\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"type\"\n-    \"load1,store2,*,store2,load1,ffarith,ffarith,f_load,f_store,r_mem_f,f_mem_r\")\n+    \"load1,store2,*,store2,load1,ffarith,ffarith,f_fpa_load,f_fpa_store,r_mem_f,f_mem_r\")\n    (set_attr \"pool_range\" \"*,*,*,*,1020,*,*,1024,*,*,*\")\n    (set_attr \"neg_pool_range\" \"*,*,*,*,1008,*,*,1008,*,*,*\")]\n )\n@@ -609,7 +609,7 @@\n   \"\n   [(set_attr \"length\" \"4,4,4\")\n    (set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"ffarith,f_load,f_store\")]\n+   (set_attr \"type\" \"ffarith,f_fpa_load,f_fpa_store\")]\n )\n \n ;; stfs/ldfs always use a conditional infix.  This works around the\n@@ -635,7 +635,7 @@\n    (set_attr \"ce_count\" \"1,1,1,1,2,2,1,1,1\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"type\"\n-\t \"ffarith,ffarith,f_load,f_store,r_mem_f,f_mem_r,*,load1,store1\")\n+\t \"ffarith,ffarith,f_fpa_load,f_fpa_store,r_mem_f,f_mem_r,*,load1,store1\")\n    (set_attr \"pool_range\" \"*,*,1024,*,*,*,*,4096,*\")\n    (set_attr \"neg_pool_range\" \"*,*,1012,*,*,*,*,0,*\")]\n )\n@@ -669,7 +669,7 @@\n   \"\n   [(set_attr \"length\" \"4,4,8,8,8,4,4,4,4,8,8\")\n    (set_attr \"type\"\n-    \"load1,store2,*,store2,load1,ffarith,ffarith,f_load,f_store,r_mem_f,f_mem_r\")\n+    \"load1,store2,*,store2,load1,ffarith,ffarith,f_fpa_load,f_fpa_store,r_mem_f,f_mem_r\")\n    (set_attr \"pool_range\" \"*,*,*,*,4092,*,*,1024,*,*,*\")\n    (set_attr \"neg_pool_range\" \"*,*,*,*,0,*,*,1020,*,*,*\")]\n )\n@@ -698,7 +698,7 @@\n     }\n   \"\n   [(set_attr \"length\" \"4,4,4,4,8,8,12\")\n-   (set_attr \"type\" \"ffarith,ffarith,f_load,f_store,r_mem_f,f_mem_r,*\")\n+   (set_attr \"type\" \"ffarith,ffarith,f_fpa_load,f_fpa_store,r_mem_f,f_mem_r,*\")\n    (set_attr \"pool_range\" \"*,*,1024,*,*,*,*\")\n    (set_attr \"neg_pool_range\" \"*,*,1004,*,*,*,*\")]\n )"}, {"sha": "1ac2d0c2d80c456164c1ca58cf4f4eed36b7557c", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/837b01f66fe08ec9c8fcd542aebb2c5f881c44e9/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/837b01f66fe08ec9c8fcd542aebb2c5f881c44e9/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=837b01f66fe08ec9c8fcd542aebb2c5f881c44e9", "patch": "@@ -124,7 +124,7 @@\n     }\n   \"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"*,*,*,*,load1,load1,store1,store1,r_2_f,f_2_r,fcpys,f_load,f_store\")\n+   (set_attr \"type\" \"*,*,*,*,load1,load1,store1,store1,r_2_f,f_2_r,fcpys,f_loads,f_stores\")\n    (set_attr \"insn\" \"mov,mov,mvn,mov,*,*,*,*,*,*,*,*,*\")\n    (set_attr \"pool_range\"     \"*,*,*,*,1020,4096,*,*,*,*,*,1020,*\")\n    (set_attr \"neg_pool_range\" \"*,*,*,*,   0,   0,*,*,*,*,*,1008,*\")]\n@@ -200,7 +200,7 @@\n       abort ();\n     }\n   \"\n-  [(set_attr \"type\" \"*,load2,store2,r_2_f,f_2_r,ffarithd,f_load,f_store\")\n+  [(set_attr \"type\" \"*,load2,store2,r_2_f,f_2_r,ffarithd,f_loadd,f_stored\")\n    (set (attr \"length\") (cond [(eq_attr \"alternative\" \"0,1,2\") (const_int 8)\n \t\t\t       (eq_attr \"alternative\" \"5\")\n \t\t\t\t(if_then_else\n@@ -391,7 +391,7 @@\n   \"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"type\"\n-     \"r_2_f,f_2_r,fconsts,f_load,f_store,load1,store1,fcpys,*\")\n+     \"r_2_f,f_2_r,fconsts,f_loads,f_stores,load1,store1,fcpys,*\")\n    (set_attr \"insn\" \"*,*,*,*,*,*,*,*,mov\")\n    (set_attr \"pool_range\" \"*,*,*,1020,*,4092,*,*,*\")\n    (set_attr \"neg_pool_range\" \"*,*,*,1008,*,0,*,*,*\")]\n@@ -478,7 +478,7 @@\n     }\n   \"\n   [(set_attr \"type\"\n-     \"r_2_f,f_2_r,fconstd,load2,store2,f_load,f_store,ffarithd,*\")\n+     \"r_2_f,f_2_r,fconstd,load2,store2,f_loadd,f_stored,ffarithd,*\")\n    (set (attr \"length\") (cond [(eq_attr \"alternative\" \"3,4,8\") (const_int 8)\n \t\t\t       (eq_attr \"alternative\" \"7\")\n \t\t\t\t(if_then_else"}]}