{"sha": "d2d501339411782a6322b5a49f3de0d36c4bfd7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJkNTAxMzM5NDExNzgyYTYzMjJiNWE0OWYzZGUwZDM2YzRiZmQ3Zg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-08-24T11:09:10Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-08-24T11:09:10Z"}, "message": "Opps.\n\nFrom-SVN: r21936", "tree": {"sha": "0b7f695d02904a8b54b217aafd2ac5aeaef70ecf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b7f695d02904a8b54b217aafd2ac5aeaef70ecf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2d501339411782a6322b5a49f3de0d36c4bfd7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2d501339411782a6322b5a49f3de0d36c4bfd7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2d501339411782a6322b5a49f3de0d36c4bfd7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2d501339411782a6322b5a49f3de0d36c4bfd7f/comments", "author": null, "committer": null, "parents": [{"sha": "ef9e3c5bce9f4279387578cdefc75f766a257cf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9e3c5bce9f4279387578cdefc75f766a257cf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef9e3c5bce9f4279387578cdefc75f766a257cf9"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "88377d1fe52af884a484d4c44a059230b092d132", "filename": "gcc/loop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d501339411782a6322b5a49f3de0d36c4bfd7f/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d501339411782a6322b5a49f3de0d36c4bfd7f/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=d2d501339411782a6322b5a49f3de0d36c4bfd7f", "patch": "@@ -785,7 +785,6 @@ scan_loop (loop_start, end, unroll_p)\n #ifdef AVOID_CCMODE_COPIES\n   /* Don't try to move insns which set CC registers if we should not\n      create CCmode register copies.  */\n-     be avoiding\n   for (i = FIRST_PSEUDO_REGISTER; i < nregs - loop_mems_idx; i++)\n     if (GET_MODE_CLASS (GET_MODE (regno_reg_rtx[i])) == MODE_CC)\n       may_not_optimize[i] = 1;"}]}