{"sha": "15225362fe308ee1cf71018ac84203574feaa99d", "node_id": "C_kwDOANBUbNoAKDE1MjI1MzYyZmUzMDhlZTFjZjcxMDE4YWM4NDIwMzU3NGZlYWE5OWQ", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-05-03T08:17:16Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-05-11T07:38:21Z"}, "message": "converter: Add TokenStream conversion function\n\nAdd a tokenstream conversion function dispatching to inner elements\n\ngcc/rust/ChangeLog:\n\n\t* util/rust-token-converter.cc (to_tokenstream): Change function\n\tname from to_tokenstream to convert.\n\t(convert): Likewise.\n\t(from_tokenstream): Add tokenstream handler.\n\t(from_ident): Add empty function.\n\t(from_literal): Likewise.\n\t(from_punct): Likewise.\n\t(from_group): Likewise.\n\t* util/rust-token-converter.h (to_tokenstream): Change function\n\tname from to_tokenstream to convert.\n\t(convert): Likewise.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "24b891da7d005324c9ea80fd54c341a62bc8aa4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24b891da7d005324c9ea80fd54c341a62bc8aa4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15225362fe308ee1cf71018ac84203574feaa99d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15225362fe308ee1cf71018ac84203574feaa99d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15225362fe308ee1cf71018ac84203574feaa99d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15225362fe308ee1cf71018ac84203574feaa99d/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b12481cf8ca462dd49ff101f50bda02418f777d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b12481cf8ca462dd49ff101f50bda02418f777d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b12481cf8ca462dd49ff101f50bda02418f777d8"}], "stats": {"total": 62, "additions": 59, "deletions": 3}, "files": [{"sha": "25abf763e241ab5beffff32fdf5f934def7860b0", "filename": "gcc/rust/util/rust-token-converter.cc", "status": "modified", "additions": 54, "deletions": 1, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15225362fe308ee1cf71018ac84203574feaa99d/gcc%2Frust%2Futil%2Frust-token-converter.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15225362fe308ee1cf71018ac84203574feaa99d/gcc%2Frust%2Futil%2Frust-token-converter.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-token-converter.cc?ref=15225362fe308ee1cf71018ac84203574feaa99d", "patch": "@@ -122,7 +122,7 @@ dispatch_integer_literals (ProcMacro::TokenStream &ts, TokenPtr &token)\n }\n \n ProcMacro::TokenStream\n-to_tokenstream (std::vector<TokenPtr> tokens)\n+convert (std::vector<TokenPtr> tokens)\n {\n   std::vector<ProcMacro::TokenStream> trees;\n   trees.push_back (ProcMacro::TokenStream::make_tokenstream ());\n@@ -297,4 +297,57 @@ to_tokenstream (std::vector<TokenPtr> tokens)\n   return trees.back ();\n }\n \n+static void\n+from_tokenstream (ProcMacro::TokenStream ts, std::vector<TokenPtr> &result);\n+\n+static void\n+from_ident (ProcMacro::Ident ident, std::vector<TokenPtr> &result)\n+{}\n+\n+static void\n+from_literal (ProcMacro::Literal literal, std::vector<TokenPtr> &result)\n+{}\n+\n+static void\n+from_punct (ProcMacro::Punct punct, std::vector<TokenPtr> &result)\n+{}\n+\n+static void\n+from_group (ProcMacro::Group g, std::vector<TokenPtr> &result)\n+{}\n+\n+static void\n+from_tokenstream (ProcMacro::TokenStream ts, std::vector<TokenPtr> &result)\n+{\n+  for (std::uint64_t i = 0; i < ts.size; i++)\n+    {\n+      ProcMacro::TokenTree &tt = ts.data[i];\n+      switch (tt.tag)\n+\t{\n+\tcase ProcMacro::GROUP:\n+\t  from_group (tt.payload.group, result);\n+\t  break;\n+\tcase ProcMacro::IDENT:\n+\t  from_ident (tt.payload.ident, result);\n+\t  break;\n+\tcase ProcMacro::PUNCT:\n+\t  from_punct (tt.payload.punct, result);\n+\t  break;\n+\tcase ProcMacro::LITERAL:\n+\t  from_literal (tt.payload.literal, result);\n+\t  break;\n+\tdefault:\n+\t  gcc_unreachable ();\n+\t}\n+    }\n+}\n+\n+std::vector<TokenPtr>\n+convert (ProcMacro::TokenStream ts)\n+{\n+  std::vector<TokenPtr> result;\n+  from_tokenstream (ts, result);\n+  return result;\n+}\n+\n } // namespace Rust"}, {"sha": "ee82d0bc13f3eb83b4eb7e800b54db6805832812", "filename": "gcc/rust/util/rust-token-converter.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15225362fe308ee1cf71018ac84203574feaa99d/gcc%2Frust%2Futil%2Frust-token-converter.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15225362fe308ee1cf71018ac84203574feaa99d/gcc%2Frust%2Futil%2Frust-token-converter.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-token-converter.h?ref=15225362fe308ee1cf71018ac84203574feaa99d", "patch": "@@ -19,12 +19,15 @@\n \n #include <vector>\n #include \"rust-token.h\"\n-#include \"libproc_macro/tokenstream.h\"\n+#include \"libproc_macro/proc_macro.h\"\n \n namespace Rust {\n \n ProcMacro::TokenStream\n-to_tokenstream (std::vector<TokenPtr> tokens);\n+convert (std::vector<TokenPtr> tokens);\n+\n+std::vector<TokenPtr>\n+convert (ProcMacro::TokenStream ts);\n \n } // namespace Rust\n "}]}