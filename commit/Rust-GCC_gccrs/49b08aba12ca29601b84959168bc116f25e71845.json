{"sha": "49b08aba12ca29601b84959168bc116f25e71845", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDliMDhhYmExMmNhMjk2MDFiODQ5NTkxNjhiYzExNmYyNWU3MTg0NQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-15T23:43:52Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-15T23:43:52Z"}, "message": "(copy_node): Handle length of INTEGER_CST like make_node.\n\nFrom-SVN: r6241", "tree": {"sha": "76744158360ab0df76fbb2eae441b841d4a16f08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76744158360ab0df76fbb2eae441b841d4a16f08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49b08aba12ca29601b84959168bc116f25e71845", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49b08aba12ca29601b84959168bc116f25e71845", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49b08aba12ca29601b84959168bc116f25e71845", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49b08aba12ca29601b84959168bc116f25e71845/comments", "author": null, "committer": null, "parents": [{"sha": "c11ffdbd029ce4037aea19e8df0c23e0f64a3580", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c11ffdbd029ce4037aea19e8df0c23e0f64a3580", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c11ffdbd029ce4037aea19e8df0c23e0f64a3580"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "ed6411d257720e83b924f8187b518f7eb5bcb070", "filename": "gcc/tree.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49b08aba12ca29601b84959168bc116f25e71845/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49b08aba12ca29601b84959168bc116f25e71845/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=49b08aba12ca29601b84959168bc116f25e71845", "patch": "@@ -1011,9 +1011,17 @@ copy_node (node)\n       break;\n \n     case 'c':  /* a constant */\n-      /* We can't use tree_code_length for this, since the number of words\n-\t is machine-dependent due to varying alignment of `double'.  */\n-      if (code == REAL_CST)\n+      /* We can't use tree_code_length for INTEGER_CST, since the number of\n+\t words is machine-dependent due to varying length of HOST_WIDE_INT,\n+\t which might be wider than a pointer (e.g., long long).  Similarly\n+\t for REAL_CST, since the number of words is machine-dependent due\n+\t to varying size and alignment of `double'.  */\n+      if (code == INTEGER_CST)\n+        {\n+          length = sizeof (struct tree_int_cst);\n+          break;\n+        }\n+      else if (code == REAL_CST)\n \t{\n \t  length = sizeof (struct tree_real_cst);\n \t  break;"}]}