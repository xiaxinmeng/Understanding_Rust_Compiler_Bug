{"sha": "c376c05b38ddd5763372e1946f4705ec2437391a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM3NmMwNWIzOGRkZDU3NjMzNzJlMTk0NmY0NzA1ZWMyNDM3MzkxYQ==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-08-25T20:21:53Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-08-25T20:21:53Z"}, "message": "(LINK_COST_ZERO, LINK_COST_FREE): New macros.\n\nFrom-SVN: r1949", "tree": {"sha": "0a48ce926a0f30b038f72c7d5222b4f874e2b213", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a48ce926a0f30b038f72c7d5222b4f874e2b213"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c376c05b38ddd5763372e1946f4705ec2437391a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c376c05b38ddd5763372e1946f4705ec2437391a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c376c05b38ddd5763372e1946f4705ec2437391a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c376c05b38ddd5763372e1946f4705ec2437391a/comments", "author": null, "committer": null, "parents": [{"sha": "84ef5060e2d1b86df5bb722e4eda45c82f7b0d23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84ef5060e2d1b86df5bb722e4eda45c82f7b0d23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84ef5060e2d1b86df5bb722e4eda45c82f7b0d23"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "7f2bee91389464353defad23092052dc91dcd39c", "filename": "gcc/rtl.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c376c05b38ddd5763372e1946f4705ec2437391a/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c376c05b38ddd5763372e1946f4705ec2437391a/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=c376c05b38ddd5763372e1946f4705ec2437391a", "patch": "@@ -481,6 +481,16 @@ extern char *note_insn_name[];\n    with the preceding insn.  */\n #define SCHED_GROUP_P(INSN) ((INSN)->in_struct)\n \n+/* During sched, for the LOG_LINKS of an insn, these cache the adjusted\n+   cost of the dependence link.  The cost of executing an instruction\n+   may vary based on how the results are used.  LINK_COST_ZERO is 1 when\n+   the cost through the link varies and is unchanged (i.e., the link has\n+   zero additional cost).  LINK_COST_FREE is 1 when the cost through the\n+   link is zero (i.e., the link makes the cost free).  In other cases,\n+   the adjustment to the cost is recomputed each time it is needed.  */\n+#define LINK_COST_ZERO(X) ((X)->jump)\n+#define LINK_COST_FREE(X) ((X)->call)\n+\n /* For a SET rtx, SET_DEST is the place that is set\n    and SET_SRC is the value it is set to.  */\n #define SET_DEST(RTX) ((RTX)->fld[0].rtx)"}]}