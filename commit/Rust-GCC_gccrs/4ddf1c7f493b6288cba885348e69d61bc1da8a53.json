{"sha": "4ddf1c7f493b6288cba885348e69d61bc1da8a53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRkZjFjN2Y0OTNiNjI4OGNiYTg4NTM0OGU2OWQ2MWJjMWRhOGE1Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-11-11T00:06:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-11-11T00:06:34Z"}, "message": "re PR c++/46369 (ICE: unexpected expression '((unsigned char*)&*r)[24]' of kind bit_field_ref)\n\n\tPR c++/46369\n\t* semantics.c (cxx_eval_bit_field_ref): New.\n\t(cxx_eval_constant_expression): Call it.\n\nFrom-SVN: r166576", "tree": {"sha": "c785ed676f302e79f948b4e4b322582bad60e785", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c785ed676f302e79f948b4e4b322582bad60e785"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ddf1c7f493b6288cba885348e69d61bc1da8a53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ddf1c7f493b6288cba885348e69d61bc1da8a53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ddf1c7f493b6288cba885348e69d61bc1da8a53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ddf1c7f493b6288cba885348e69d61bc1da8a53/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a34779030e763fc62e90f78cfc6d368a8c120fed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a34779030e763fc62e90f78cfc6d368a8c120fed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a34779030e763fc62e90f78cfc6d368a8c120fed"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "f85f4b1619f18b26c1b439d1666b9c72d2f70206", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ddf1c7f493b6288cba885348e69d61bc1da8a53/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ddf1c7f493b6288cba885348e69d61bc1da8a53/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4ddf1c7f493b6288cba885348e69d61bc1da8a53", "patch": "@@ -1,3 +1,9 @@\n+2010-11-10  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/46369\n+\t* semantics.c (cxx_eval_bit_field_ref): New.\n+\t(cxx_eval_constant_expression): Call it.\n+\n 2010-11-10  Joseph Myers  <joseph@codesourcery.com>\n \n \t* cvt.c (cp_convert_to_pointer): Use %' in diagnostic."}, {"sha": "38e03f6060de89a604756d0f8f6bc46a93b4496f", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ddf1c7f493b6288cba885348e69d61bc1da8a53/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ddf1c7f493b6288cba885348e69d61bc1da8a53/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=4ddf1c7f493b6288cba885348e69d61bc1da8a53", "patch": "@@ -6263,6 +6263,45 @@ cxx_eval_component_reference (const constexpr_call *call, tree t,\n   return error_mark_node;\n }\n \n+/* Subroutine of cxx_eval_constant_expression.\n+   Attempt to reduce a field access of a value of class type that is\n+   expressed as a BIT_FIELD_REF.  */\n+\n+static tree\n+cxx_eval_bit_field_ref (const constexpr_call *call, tree t,\n+\t\t\tbool allow_non_constant, bool addr,\n+\t\t\tbool *non_constant_p)\n+{\n+  tree orig_whole = TREE_OPERAND (t, 0);\n+  tree whole = cxx_eval_constant_expression (call, orig_whole,\n+\t\t\t\t\t     allow_non_constant, addr,\n+\t\t\t\t\t     non_constant_p);\n+  tree start, field, value;\n+  unsigned HOST_WIDE_INT i;\n+\n+  if (whole == orig_whole)\n+    return t;\n+  /* Don't VERIFY_CONSTANT here; we only want to check that we got a\n+     CONSTRUCTOR.  */\n+  if (!*non_constant_p && TREE_CODE (whole) != CONSTRUCTOR)\n+    {\n+      if (!allow_non_constant)\n+\terror (\"%qE is not a constant expression\", orig_whole);\n+      *non_constant_p = true;\n+    }\n+  if (*non_constant_p)\n+    return t;\n+\n+  start = TREE_OPERAND (t, 2);\n+  FOR_EACH_CONSTRUCTOR_ELT (CONSTRUCTOR_ELTS (whole), i, field, value)\n+    {\n+      if (bit_position (field) == start)\n+\treturn value;\n+    }\n+  gcc_unreachable();\n+  return error_mark_node;\n+}\n+\n /* Subroutine of cxx_eval_constant_expression.\n    Evaluate a short-circuited logical expression T in the context\n    of a given constexpr CALL.  BAILOUT_VALUE is the value for\n@@ -6841,6 +6880,11 @@ cxx_eval_constant_expression (const constexpr_call *call, tree t,\n \t\t\t\t\tnon_constant_p);\n       break;\n \n+    case BIT_FIELD_REF:\n+      r = cxx_eval_bit_field_ref (call, t, allow_non_constant, addr,\n+\t\t\t\t  non_constant_p);\n+      break;\n+\n     case COND_EXPR:\n     case VEC_COND_EXPR:\n       r = cxx_eval_conditional_expression (call, t, allow_non_constant, addr,"}, {"sha": "4c10cc7a6c76f638c1aae2bc1b0dd9e4e711e1da", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ddf1c7f493b6288cba885348e69d61bc1da8a53/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ddf1c7f493b6288cba885348e69d61bc1da8a53/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4ddf1c7f493b6288cba885348e69d61bc1da8a53", "patch": "@@ -1,3 +1,7 @@\n+2010-11-10  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/constexpr-bitfield.C: New.\n+\n 2010-11-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/46409"}, {"sha": "7eba49833f27f0a22472ac576cefbc7e950fd2f5", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-bitfield.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ddf1c7f493b6288cba885348e69d61bc1da8a53/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-bitfield.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ddf1c7f493b6288cba885348e69d61bc1da8a53/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-bitfield.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-bitfield.C?ref=4ddf1c7f493b6288cba885348e69d61bc1da8a53", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/46369\n+// { dg-options -std=c++0x }\n+\n+struct A\n+{\n+  unsigned i : 1;\n+};\n+\n+constexpr A f() { return { 1 }; }\n+constexpr bool b = (f().i == 1);"}]}