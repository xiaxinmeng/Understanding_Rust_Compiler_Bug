{"sha": "19699da4045196c225bcb3a9cac80270617a64e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk2OTlkYTQwNDUxOTZjMjI1YmNiM2E5Y2FjODAyNzA2MTdhNjRlNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-07-23T01:26:40Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-07-23T01:26:40Z"}, "message": "haifa-sched.c (reemit_notes): Tidy.\n\n        * haifa-sched.c (reemit_notes): Tidy.\n        * sched.c (reemit_notes): Duplicate 1998-08-31 patch to\n        haifa's routine.\n\nFrom-SVN: r28223", "tree": {"sha": "37f45bdd0e639d0c77fd372622f5eedd9bcf4b76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37f45bdd0e639d0c77fd372622f5eedd9bcf4b76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19699da4045196c225bcb3a9cac80270617a64e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19699da4045196c225bcb3a9cac80270617a64e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19699da4045196c225bcb3a9cac80270617a64e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19699da4045196c225bcb3a9cac80270617a64e7/comments", "author": null, "committer": null, "parents": [{"sha": "7e4ce834b2867f4c7bb2b44e434f5d2778e23ca3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e4ce834b2867f4c7bb2b44e434f5d2778e23ca3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e4ce834b2867f4c7bb2b44e434f5d2778e23ca3"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "776115ec109fcef223b6de39a6f523414f3a79ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19699da4045196c225bcb3a9cac80270617a64e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19699da4045196c225bcb3a9cac80270617a64e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19699da4045196c225bcb3a9cac80270617a64e7", "patch": "@@ -1,3 +1,9 @@\n+Thu Jul 22 18:23:56 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* haifa-sched.c (reemit_notes): Tidy.\n+\t* sched.c (reemit_notes): Duplicate 1998-08-31 patch to\n+\thaifa's routine.\n+\n Thu Jul 22 18:21:04 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* explow.c (trunc_int_for_mode): New function."}, {"sha": "60b340fa788b15ba82e33d042fffe65516ca2aa1", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19699da4045196c225bcb3a9cac80270617a64e7/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19699da4045196c225bcb3a9cac80270617a64e7/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=19699da4045196c225bcb3a9cac80270617a64e7", "patch": "@@ -6597,7 +6597,7 @@ reemit_notes (insn, last)\n \t    }\n \t  else\n \t    {\n-\t      last = emit_note_before (INTVAL (XEXP (note, 0)), last);\n+\t      last = emit_note_before (note_type, last);\n \t      remove_note (insn, note);\n \t      note = XEXP (note, 1);\n \t      NOTE_BLOCK_NUMBER (last) = INTVAL (XEXP (note, 0));"}, {"sha": "c0eb5dc9651412c2795bf403ed920981811919b5", "filename": "gcc/sched.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19699da4045196c225bcb3a9cac80270617a64e7/gcc%2Fsched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19699da4045196c225bcb3a9cac80270617a64e7/gcc%2Fsched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched.c?ref=19699da4045196c225bcb3a9cac80270617a64e7", "patch": "@@ -2578,16 +2578,25 @@ reemit_notes (insn, last)\n       if (REG_NOTE_KIND (note) == REG_DEAD\n \t  && GET_CODE (XEXP (note, 0)) == CONST_INT)\n \t{\n-\t  if (INTVAL (XEXP (note, 0)) == NOTE_INSN_SETJMP)\n+\t  int note_type = INTVAL (XEXP (note, 0));\n+\t  if (note_type == NOTE_INSN_SETJMP)\n \t    {\n-\t      CONST_CALL_P (emit_note_after (INTVAL (XEXP (note, 0)), insn))\n+\t      CONST_CALL_P (emit_note_after (note_type, insn))\n \t\t= CONST_CALL_P (note);\n \t      remove_note (insn, note);\n \t      note = XEXP (note, 1);\n \t    }\n+\t  else if (note_type == NOTE_INSN_RANGE_START\n+                   || note_type == NOTE_INSN_RANGE_END)\n+\t    {\n+\t      last = emit_note_before (note_type, last);\n+\t      remove_note (insn, note);\n+\t      note = XEXP (note, 1);\n+\t      NOTE_RANGE_INFO (last) = XEXP (note, 0);\n+\t    }\n \t  else\n \t    {\n-\t      last = emit_note_before (INTVAL (XEXP (note, 0)), last);\n+\t      last = emit_note_before (note_type, last);\n \t      remove_note (insn, note);\n \t      note = XEXP (note, 1);\n \t      NOTE_BLOCK_NUMBER (last) = INTVAL (XEXP (note, 0));"}]}