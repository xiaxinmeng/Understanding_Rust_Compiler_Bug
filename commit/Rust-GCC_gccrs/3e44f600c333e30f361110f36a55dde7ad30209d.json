{"sha": "3e44f600c333e30f361110f36a55dde7ad30209d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U0NGY2MDBjMzMzZTMwZjM2MTExMGYzNmE1NWRkZTdhZDMwMjA5ZA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2011-12-02T12:53:03Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2011-12-02T12:53:03Z"}, "message": "re PR tree-optimization/50622 (ICE: verify_gimple failed for std::complex<double>)\n\n2011-12-02  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/50622\n\t* tree-sra.c (load_assign_lhs_subreplacements): Force gimple operand\n\tif both lacc and racc are grp_partial_lhs.\n\n\t* testsuite/g++.dg/tree-ssa/pr50622.C: New test.\n\nFrom-SVN: r181908", "tree": {"sha": "d1fa5c4db72da1a4f338be2510f3fbae364044a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1fa5c4db72da1a4f338be2510f3fbae364044a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e44f600c333e30f361110f36a55dde7ad30209d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e44f600c333e30f361110f36a55dde7ad30209d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e44f600c333e30f361110f36a55dde7ad30209d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e44f600c333e30f361110f36a55dde7ad30209d/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "45608a43c4716d018288df65f56dacd931f7e74f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45608a43c4716d018288df65f56dacd931f7e74f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45608a43c4716d018288df65f56dacd931f7e74f"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "5e559196d8b54d8744489d5352c48118b56be5af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e44f600c333e30f361110f36a55dde7ad30209d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e44f600c333e30f361110f36a55dde7ad30209d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e44f600c333e30f361110f36a55dde7ad30209d", "patch": "@@ -1,3 +1,9 @@\n+2011-12-02  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/50622\n+\t* tree-sra.c (load_assign_lhs_subreplacements): Force gimple operand\n+\tif both lacc and racc are grp_partial_lhs.\n+\n 2011-12-01  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \tPR target/50814."}, {"sha": "2d3dc33784bcb826188900a18a25fc4588a7045c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e44f600c333e30f361110f36a55dde7ad30209d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e44f600c333e30f361110f36a55dde7ad30209d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3e44f600c333e30f361110f36a55dde7ad30209d", "patch": "@@ -1,3 +1,8 @@\n+2011-12-02  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/50622\n+\t* g++.dg/tree-ssa/pr50622.C: New test.\n+\n 2011-12-01  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/initlist61.C: New."}, {"sha": "d7f4fa74b953d8f6ed9fbdf843a4562b4c49ee5e", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr50622.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e44f600c333e30f361110f36a55dde7ad30209d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr50622.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e44f600c333e30f361110f36a55dde7ad30209d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr50622.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr50622.C?ref=3e44f600c333e30f361110f36a55dde7ad30209d", "patch": "@@ -0,0 +1,30 @@\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+typedef __complex__ double Value;\n+struct LorentzVector\n+{\n+  LorentzVector & operator+=(const LorentzVector & a) {\n+    theX += a.theX;\n+    theY += a.theY;\n+    theZ += a.theZ;\n+    theT += a.theT;\n+    return *this;\n+  }\n+\n+  Value theX;\n+  Value theY;\n+  Value theZ;\n+  Value theT;\n+};\n+\n+inline LorentzVector\n+operator+(LorentzVector a, const LorentzVector & b) {\n+  return a += b;\n+}\n+\n+Value ex, et;\n+LorentzVector sum() {\n+  LorentzVector v1; v1.theX =ex; v1.theY =ex+et; v1.theZ =ex-et;   v1.theT =et;\n+  return v1+v1;\n+}"}, {"sha": "dec5316468c1eec10c53f62d66747156e13c0471", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e44f600c333e30f361110f36a55dde7ad30209d/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e44f600c333e30f361110f36a55dde7ad30209d/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=3e44f600c333e30f361110f36a55dde7ad30209d", "patch": "@@ -2692,6 +2692,10 @@ load_assign_lhs_subreplacements (struct access *lacc, struct access *top_racc,\n \t      rhs = get_access_replacement (racc);\n \t      if (!useless_type_conversion_p (lacc->type, racc->type))\n \t\trhs = fold_build1_loc (loc, VIEW_CONVERT_EXPR, lacc->type, rhs);\n+\n+\t      if (racc->grp_partial_lhs && lacc->grp_partial_lhs)\n+\t\trhs = force_gimple_operand_gsi (old_gsi, rhs, true, NULL_TREE,\n+\t\t\t\t\t\ttrue, GSI_SAME_STMT);\n \t    }\n \t  else\n \t    {"}]}