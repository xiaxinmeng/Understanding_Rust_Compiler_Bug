{"sha": "247b14bd495dfa8ed32986c59fbdda7c4a482265", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ3YjE0YmQ0OTVkZmE4ZWQzMjk4NmM1OWZiZGRhN2M0YTQ4MjI2NQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-02-08T22:02:13Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-02-08T22:02:13Z"}, "message": "Clarify inline substitution failure.\n\nFrom-SVN: r25103", "tree": {"sha": "3124911c1cb5b517283d1448d6c7b7a7862212e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3124911c1cb5b517283d1448d6c7b7a7862212e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/247b14bd495dfa8ed32986c59fbdda7c4a482265", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247b14bd495dfa8ed32986c59fbdda7c4a482265", "html_url": "https://github.com/Rust-GCC/gccrs/commit/247b14bd495dfa8ed32986c59fbdda7c4a482265", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247b14bd495dfa8ed32986c59fbdda7c4a482265/comments", "author": null, "committer": null, "parents": [{"sha": "29ae5b893490bb4f005b9597946be24be043a080", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29ae5b893490bb4f005b9597946be24be043a080", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29ae5b893490bb4f005b9597946be24be043a080"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "a90be58e7aaf4bae0ae9c823fcba7c7fc9d67c6d", "filename": "gcc/extend.texi", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247b14bd495dfa8ed32986c59fbdda7c4a482265/gcc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247b14bd495dfa8ed32986c59fbdda7c4a482265/gcc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fextend.texi?ref=247b14bd495dfa8ed32986c59fbdda7c4a482265", "patch": "@@ -2258,10 +2258,16 @@ inc (int *a)\n \n (If you are writing a header file to be included in ANSI C programs, write\n @code{__inline__} instead of @code{inline}.  @xref{Alternate Keywords}.)\n-\n You can also make all ``simple enough'' functions inline with the option\n-@samp{-finline-functions}.  Note that certain usages in a function\n-definition can make it unsuitable for inline substitution.\n+@samp{-finline-functions}. \n+\n+Note that certain usages in a function definition can make it unsuitable\n+for inline substitution.  Among these usages are: use of varargs, use of\n+alloca, use of variable sized data types (@pxref{Variable Length}),\n+use of computed goto (@pxref{Labels as Values}), use of nonlocal goto,\n+and nested functions (@pxref{Nested Functions}).  Using @samp{-Winline}\n+will warn when a function marked @code{inline} could not be substituted,\n+and will give the reason for the failure.\n \n Note that in C and Objective C, unlike C++, the @code{inline} keyword\n does not affect the linkage of the function."}]}