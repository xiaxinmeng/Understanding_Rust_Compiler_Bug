{"sha": "2295aa75224be0b765cf5c58865e97d094990579", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI5NWFhNzUyMjRiZTBiNzY1Y2Y1YzU4ODY1ZTk3ZDA5NDk5MDU3OQ==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2018-04-30T13:15:35Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2018-04-30T13:15:35Z"}, "message": "[ARC] Update movhi and movdi patterns.\n\nAllow signed 6-bit short immediates into st[d] instructions.\n\n2017-10-19  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc.c (arc_split_move): Allow signed 6-bit constants\n\tas source of std instructions.\n\t* config/arc/arc.md (movsi_insn): Update pattern predicate to\n\tallow 6-bit constants as source for store instructions.\n\t(movdi_insn): Update instruction pattern to allow 6-bit constants\n\tas source for store instructions.\n\ntestsuite/\n2017-10-19  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* gcc.target/arc/store-merge-1.c: New test.\n\t* gcc.target/arc/add_n-combine.c: Update test.\n\nFrom-SVN: r259762", "tree": {"sha": "e5335eb0207fadcc76a43593635d2ad223ebd47d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5335eb0207fadcc76a43593635d2ad223ebd47d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2295aa75224be0b765cf5c58865e97d094990579", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2295aa75224be0b765cf5c58865e97d094990579", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2295aa75224be0b765cf5c58865e97d094990579", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2295aa75224be0b765cf5c58865e97d094990579/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e2df7e6df4b08b930bb0045cdb626dd4940f46ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2df7e6df4b08b930bb0045cdb626dd4940f46ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2df7e6df4b08b930bb0045cdb626dd4940f46ae"}], "stats": {"total": 61, "additions": 47, "deletions": 14}, "files": [{"sha": "e2be3b136bc1b0b42fb6a7aeb8a5dc7c9763f7ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2295aa75224be0b765cf5c58865e97d094990579/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2295aa75224be0b765cf5c58865e97d094990579/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2295aa75224be0b765cf5c58865e97d094990579", "patch": "@@ -1,3 +1,12 @@\n+2018-04-30  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc.c (arc_split_move): Allow signed 6-bit constants\n+\tas source of std instructions.\n+\t* config/arc/arc.md (movsi_insn): Update pattern predicate to\n+\tallow 6-bit constants as source for store instructions.\n+\t(movdi_insn): Update instruction pattern to allow 6-bit constants\n+\tas source for store instructions.\n+\n 2018-04-30  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/invoke.texi (-fdebug-types-section): Fix grammar."}, {"sha": "33bf3d87ed73d8c128d5d0f4e4dc11376b8f8bfd", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2295aa75224be0b765cf5c58865e97d094990579/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2295aa75224be0b765cf5c58865e97d094990579/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=2295aa75224be0b765cf5c58865e97d094990579", "patch": "@@ -9651,7 +9651,8 @@ arc_split_move (rtx *operands)\n \n   if (TARGET_LL64\n       && ((memory_operand (operands[0], mode)\n-\t   && even_register_operand (operands[1], mode))\n+\t   && (even_register_operand (operands[1], mode)\n+\t       || satisfies_constraint_Cm3 (operands[1])))\n \t  || (memory_operand (operands[1], mode)\n \t      && even_register_operand (operands[0], mode))))\n     {"}, {"sha": "398b201af2a82e32f5930b3abc3086f948b6d823", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2295aa75224be0b765cf5c58865e97d094990579/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2295aa75224be0b765cf5c58865e97d094990579/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=2295aa75224be0b765cf5c58865e97d094990579", "patch": "@@ -724,7 +724,9 @@\n        /* Don't use a LIMM that we could load with a single insn - we loose\n \t  delay-slot filling opportunities.  */\n        && !satisfies_constraint_I (operands[1])\n-       && satisfies_constraint_Usc (operands[0]))\"\n+       && satisfies_constraint_Usc (operands[0]))\n+   || (satisfies_constraint_Cm3 (operands[1])\n+      && memory_operand (operands[0], SImode))\"\n   \"@\n    mov%? %0,%1%&\t;0\n    mov%? %0,%1%&\t;1\n@@ -1221,10 +1223,12 @@\n   \")\n \n (define_insn_and_split \"*movdi_insn\"\n-  [(set (match_operand:DI 0 \"move_dest_operand\"      \"=w, w,r,m\")\n-\t(match_operand:DI 1 \"move_double_src_operand\" \"c,Hi,m,c\"))]\n+  [(set (match_operand:DI 0 \"move_dest_operand\"      \"=w, w,r,   m\")\n+\t(match_operand:DI 1 \"move_double_src_operand\" \"c,Hi,m,cCm3\"))]\n   \"register_operand (operands[0], DImode)\n-   || register_operand (operands[1], DImode)\"\n+   || register_operand (operands[1], DImode)\n+   || (satisfies_constraint_Cm3 (operands[1])\n+      && memory_operand (operands[0], DImode))\"\n   \"*\n {\n   switch (which_alternative)\n@@ -1234,19 +1238,16 @@\n \n     case 2:\n     if (TARGET_LL64\n-\t&& ((even_register_operand (operands[0], DImode)\n-\t     && memory_operand (operands[1], DImode))\n-\t    || (memory_operand (operands[0], DImode)\n-\t        && even_register_operand (operands[1], DImode))))\n+        && memory_operand (operands[1], DImode)\n+\t&& even_register_operand (operands[0], DImode))\n       return \\\"ldd%U1%V1 %0,%1%&\\\";\n     return \\\"#\\\";\n \n     case 3:\n     if (TARGET_LL64\n-\t&& ((even_register_operand (operands[0], DImode)\n-\t     && memory_operand (operands[1], DImode))\n-\t    || (memory_operand (operands[0], DImode)\n-\t        && even_register_operand (operands[1], DImode))))\n+\t&& memory_operand (operands[0], DImode)\n+\t&& (even_register_operand (operands[1], DImode)\n+\t    || satisfies_constraint_Cm3 (operands[1])))\n      return \\\"std%U0%V0 %1,%0\\\";\n     return \\\"#\\\";\n     }"}, {"sha": "9eff0ad4804c947ddddf02123faf77efc92116e2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2295aa75224be0b765cf5c58865e97d094990579/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2295aa75224be0b765cf5c58865e97d094990579/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2295aa75224be0b765cf5c58865e97d094990579", "patch": "@@ -1,3 +1,8 @@\n+2018-04-30  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* gcc.target/arc/store-merge-1.c: New test.\n+\t* gcc.target/arc/add_n-combine.c: Update test.\n+\n 2018-04-30 Andrew Sadek  <andrew.sadek.se@gmail.com>\n \n \tMicroblaze Target: PIC data text relative"}, {"sha": "cd32ed386f5956f099132b5bff76d215fc32a83a", "filename": "gcc/testsuite/gcc.target/arc/add_n-combine.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2295aa75224be0b765cf5c58865e97d094990579/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fadd_n-combine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2295aa75224be0b765cf5c58865e97d094990579/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fadd_n-combine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fadd_n-combine.c?ref=2295aa75224be0b765cf5c58865e97d094990579", "patch": "@@ -45,4 +45,4 @@ void f() {\n   a(at3.bn[bu]);\n }\n \n-/* { dg-final { scan-rtl-dump-times \"\\\\*add_n\" 3 \"combine\" } } */\n+/* { dg-final { scan-rtl-dump-times \"\\\\*add_n\" 2 \"combine\" } } */"}, {"sha": "4bb8dcb7bf32fa9839b3011924a94aab317626c2", "filename": "gcc/testsuite/gcc.target/arc/store-merge-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2295aa75224be0b765cf5c58865e97d094990579/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fstore-merge-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2295aa75224be0b765cf5c58865e97d094990579/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fstore-merge-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fstore-merge-1.c?ref=2295aa75224be0b765cf5c58865e97d094990579", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+/* This tests checks if we use st w6,[reg] format.  */\n+\n+typedef struct {\n+  unsigned long __val[2];\n+} sigset_t;\n+\n+int sigemptyset2 (sigset_t *set)\n+{\n+  set->__val[0] = 0;\n+  set->__val[1] = 0;\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler-times \"st 0,\\\\\\[r\" 2 } } */"}]}