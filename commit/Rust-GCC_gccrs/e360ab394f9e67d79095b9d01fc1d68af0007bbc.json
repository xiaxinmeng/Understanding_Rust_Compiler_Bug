{"sha": "e360ab394f9e67d79095b9d01fc1d68af0007bbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM2MGFiMzk0ZjllNjdkNzkwOTViOWQwMWZjMWQ2OGFmMDAwN2JiYw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-02-18T19:35:08Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-02-18T19:35:08Z"}, "message": "sbitmap.c (sbitmap_resize): New function.\n\n\n\t* sbitmap.c (sbitmap_resize): New function.\n\t* sbitmap.h (sbitmap_resize): Prototype here.\n\t* recog.c (split_all_insns): Use sbitmap_resize.\n\nFrom-SVN: r63058", "tree": {"sha": "de15fe52360bf719ed5c0a49ace9daae5c91c295", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de15fe52360bf719ed5c0a49ace9daae5c91c295"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e360ab394f9e67d79095b9d01fc1d68af0007bbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e360ab394f9e67d79095b9d01fc1d68af0007bbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e360ab394f9e67d79095b9d01fc1d68af0007bbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e360ab394f9e67d79095b9d01fc1d68af0007bbc/comments", "author": null, "committer": null, "parents": [{"sha": "6b00cbc7f441c9c8f3f38772bd7ff520e9765b70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b00cbc7f441c9c8f3f38772bd7ff520e9765b70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b00cbc7f441c9c8f3f38772bd7ff520e9765b70"}], "stats": {"total": 82, "additions": 68, "deletions": 14}, "files": [{"sha": "d791614a13350589827dfd63288bd6f0f3d275fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e360ab394f9e67d79095b9d01fc1d68af0007bbc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e360ab394f9e67d79095b9d01fc1d68af0007bbc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e360ab394f9e67d79095b9d01fc1d68af0007bbc", "patch": "@@ -1,3 +1,9 @@\n+2003-02-18  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* sbitmap.c (sbitmap_resize): New function.\n+\t* sbitmap.h (sbitmap_resize): Prototype here.\n+\t* recog.c (split_all_insns): Use sbitmap_resize.\n+\n 2003-02-18  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (*zero_extendhisi2_h8300): Fix the"}, {"sha": "6f4a73335e2c4236ebd3b94c8b3e206afc58e49a", "filename": "gcc/recog.c", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e360ab394f9e67d79095b9d01fc1d68af0007bbc/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e360ab394f9e67d79095b9d01fc1d68af0007bbc/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=e360ab394f9e67d79095b9d01fc1d68af0007bbc", "patch": "@@ -2883,18 +2883,7 @@ split_all_insns (upd_life)\n       find_many_sub_basic_blocks (blocks);\n \n       if (old_last_basic_block != last_basic_block && upd_life)\n-\t{\n-\t  sbitmap new_blocks = sbitmap_alloc (last_basic_block);\n-\n-\t  sbitmap_copy (new_blocks, blocks);\n-\t  while (old_last_basic_block < last_basic_block)\n-\t    {\n-\t      SET_BIT (new_blocks, old_last_basic_block);\n-\t      old_last_basic_block++;\n-\t    }\n-\t  sbitmap_free (blocks);\n-\t  new_blocks = blocks;\n-\t}\n+\tblocks = sbitmap_resize (blocks, last_basic_block, 1);\n     }\n \n   if (changed && upd_life)"}, {"sha": "e79ff940812c58d1196490d62ce9c9605bd50354", "filename": "gcc/sbitmap.c", "status": "modified", "additions": 59, "deletions": 1, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e360ab394f9e67d79095b9d01fc1d68af0007bbc/gcc%2Fsbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e360ab394f9e67d79095b9d01fc1d68af0007bbc/gcc%2Fsbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsbitmap.c?ref=e360ab394f9e67d79095b9d01fc1d68af0007bbc", "patch": "@@ -1,5 +1,5 @@\n /* Simple bitmaps.\n-   Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -49,6 +49,64 @@ sbitmap_alloc (n_elms)\n   return bmap;\n }\n \n+/* Resize a simple bitmap BMAP to N_ELMS bits.  If increasing the\n+   size of BMAP, clear the new bits to zero if the DEF argument\n+   is zero, and set them to one otherwise.  */\n+\n+sbitmap\n+sbitmap_resize (bmap, n_elms, def)\n+     sbitmap bmap;\n+     unsigned int n_elms;\n+     int def;\n+{\n+  unsigned int bytes, size, amt;\n+  unsigned int last_bit;\n+\n+  size = SBITMAP_SET_SIZE (n_elms);\n+  bytes = size * sizeof (SBITMAP_ELT_TYPE);\n+  if (bytes > bmap->bytes)\n+    {\n+      amt = (sizeof (struct simple_bitmap_def)\n+\t    + bytes - sizeof (SBITMAP_ELT_TYPE));\n+      bmap = (sbitmap) xrealloc ((PTR) bmap, amt);\n+    }\n+\n+  if (n_elms > bmap->n_bits)\n+    {\n+      if (def)\n+\t{\n+\t  memset ((PTR) (bmap->elms + bmap->size), -1, bytes - bmap->bytes);\n+\n+\t  /* Set the new bits if the original last element.  */\n+\t  last_bit = bmap->n_bits % SBITMAP_ELT_BITS;\n+\t  if (last_bit)\n+\t    bmap->elms[bmap->size - 1]\n+\t      |= ~((SBITMAP_ELT_TYPE)-1 >> (SBITMAP_ELT_BITS - last_bit));\n+\n+\t  /* Clear the unused bit in the new last element.  */\n+\t  last_bit = n_elms % SBITMAP_ELT_BITS;\n+\t  if (last_bit)\n+\t    bmap->elms[size - 1]\n+\t      &= (SBITMAP_ELT_TYPE)-1 >> (SBITMAP_ELT_BITS - last_bit);\n+\t}\n+      else\n+\tmemset ((PTR) (bmap->elms + bmap->size), 0, bytes - bmap->bytes);\n+    }\n+  else if (n_elms < bmap->n_bits)\n+    {\n+      /* Clear the surplus bits in the last word. */\n+      last_bit = n_elms % SBITMAP_ELT_BITS;\n+      if (last_bit)\n+\tbmap->elms[size - 1]\n+\t  &= (SBITMAP_ELT_TYPE)-1 >> (SBITMAP_ELT_BITS - last_bit);\n+    }\n+\n+  bmap->n_bits = n_elms;\n+  bmap->size = size;\n+  bmap->bytes = bytes;\n+  return bmap;\n+}\n+\n /* Allocate a vector of N_VECS bitmaps of N_ELMS bits.  */\n \n sbitmap *"}, {"sha": "42e466e437ecef1ff3f0ec574b5df8303c67a259", "filename": "gcc/sbitmap.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e360ab394f9e67d79095b9d01fc1d68af0007bbc/gcc%2Fsbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e360ab394f9e67d79095b9d01fc1d68af0007bbc/gcc%2Fsbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsbitmap.h?ref=e360ab394f9e67d79095b9d01fc1d68af0007bbc", "patch": "@@ -1,5 +1,5 @@\n /* Simple bitmaps.\n-   Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -125,6 +125,7 @@ extern void dump_sbitmap_vector \tPARAMS ((FILE *, const char *,\n \t\t\t\t\t\t int));\n extern sbitmap sbitmap_alloc\t\tPARAMS ((unsigned int));\n extern sbitmap *sbitmap_vector_alloc\tPARAMS ((unsigned int, unsigned int));\n+extern sbitmap sbitmap_resize\t\tPARAMS ((sbitmap, unsigned int, int));\n extern void sbitmap_copy \t\tPARAMS ((sbitmap, sbitmap));\n extern int sbitmap_equal                PARAMS ((sbitmap, sbitmap));\n extern void sbitmap_zero\t\tPARAMS ((sbitmap));"}]}