{"sha": "79644b2756eda84f7e6de4c8b6bd6198f2aa0c55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk2NDRiMjc1NmVkYTg0ZjdlNmRlNGM4YjZiZDYxOThmMmFhMGM1NQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-12-26T16:35:22Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-12-26T16:35:22Z"}, "message": "atomic-6.c: Add -mieee for alpha*-*-* targets.\n\n\t* testsuite/libgomp.c/atomic-6.c: Add -mieee for alpha*-*-* targets.\n\nFrom-SVN: r142927", "tree": {"sha": "b46e9f3a0465e9ded2165deb906e8cc6ad217b74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b46e9f3a0465e9ded2165deb906e8cc6ad217b74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79644b2756eda84f7e6de4c8b6bd6198f2aa0c55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79644b2756eda84f7e6de4c8b6bd6198f2aa0c55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79644b2756eda84f7e6de4c8b6bd6198f2aa0c55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79644b2756eda84f7e6de4c8b6bd6198f2aa0c55/comments", "author": null, "committer": null, "parents": [{"sha": "53b558a3f7fc9b6e49d3a565a96cbaf1b1889e2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b558a3f7fc9b6e49d3a565a96cbaf1b1889e2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53b558a3f7fc9b6e49d3a565a96cbaf1b1889e2a"}], "stats": {"total": 113, "additions": 56, "deletions": 57}, "files": [{"sha": "c2fda35bdacd864383cf87f41ec24df3c01c5768", "filename": "gcc/ChangeLog", "status": "modified", "additions": 50, "deletions": 56, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79644b2756eda84f7e6de4c8b6bd6198f2aa0c55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79644b2756eda84f7e6de4c8b6bd6198f2aa0c55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79644b2756eda84f7e6de4c8b6bd6198f2aa0c55", "patch": "@@ -22,10 +22,9 @@\n \tREG_EQUIV note.\n \n \t* dse.c (struct store_info): Add redundant_reason field.\n-\t(record_store): When storing the same constant as has been\n-\tstored by an earlier store, set redundant_reason field\n-\tto the earlier store's insn_info_t.  Don't delete cannot_delete\n-\tinsns.\n+\t(record_store): When storing the same constant as has been stored by\n+\tan earlier store, set redundant_reason field to the earlier store's\n+\tinsn_info_t.  Don't delete cannot_delete insns.\n \t(find_shift_sequence): Remove read_info argument, add read_mode\n \tand require_cst arguments.  Return early if require_cst and\n \tconstant wouldn't be returned.\n@@ -72,8 +71,7 @@\n \n \t* expr.c (block_clear_fn): No longer static.\n \t* expr.h (block_clear_fn): Declare.\n-\t* dse.c (scan_insn): Memset and bzero can just read their\n-\targuments.\n+\t* dse.c (scan_insn): Memset and bzero can just read their arguments.\n \n \t* config/i386/i386.c (expand_setmem_via_rep_stos): Add ORIG_VALUE\n \targument.  If ORIG_VALUE is const0_rtx and COUNT is constant,\n@@ -83,7 +81,8 @@\n \tPR target/38488\n \t* expr.h (get_mem_align_offset): New prototype.\n \t* emit-rtl.c (get_mem_align_offset): New function.\n-\t* config/i386/i386.c (expand_movmem_via_rep_mov): Set MEM_SIZE correctly.\n+\t* config/i386/i386.c (expand_movmem_via_rep_mov): Set MEM_SIZE\n+\tcorrectly.\n \t(expand_constant_movmem_prologue, expand_constant_setmem_prologue):\n \tNew functions.\n \t(ix86_expand_movmem): Optimize if COUNT_EXP\n@@ -96,7 +95,7 @@\n \n 2008-12-22  Uros Bizjak  <ubizjak@gmail.com>\n \n-\t* config/alpha/alpha.h (ASM_OUTPUT_EXTERNAL): New macro.\n+\t* config/alpha/elf.h (ASM_OUTPUT_EXTERNAL): New macro.\n \n \tPR target/34571\n \t* config/alpha/predicates.md (symbolic_operand): Return 1 for a\n@@ -119,7 +118,7 @@\n 2008-12-21  Jan Hubicka  <jh@suse.cz>\n \t    Kai Tietz <kai.tietz@onevision.com>\n \n-\t* i376.md (UNSPEC_MS_TO_SYSV_CALL): New constant.\n+\t* i386.md (UNSPEC_MS_TO_SYSV_CALL): New constant.\n \t(call_1_rex64_ms_sysv, call_value_0_rex64_ms_sysv,\n \tcall_value_1_rex64_ms_sysv): New patterns.\n \t* i386.c (function_arg_ms_64): Pass magical value of -2 as callarg.\n@@ -164,7 +163,7 @@\n \n 2008-12-19  Steve Ellcey  <sje@cup.hp.com>\n \n-\t* df-scan.c ( df_hard_reg_init): Move declaration of i.\n+\t* df-scan.c (df_hard_reg_init): Move declaration of i.\n \n 2008-12-19  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -238,23 +237,18 @@\n \t(dse_step1): Added regs_live bitmap and initialize it.\n \t(rest_of_handle_dse): Added DF_NOTES problem and earlier call to\n \tdf_analyze.\n-\t* df-problems.c Renamed to \n-\tdf_simulate_initialize_backwards.\n-\t(df_simulate_one_insn): Renamed to\n-\tdf_simulate_one_insn_backwards.\n-\t(df_simulate_artificial_refs_at_top): Renamed to \n+\t* df-problems.c Renamed to df_simulate_initialize_backwards.\n+\t(df_simulate_one_insn): Renamed to df_simulate_one_insn_backwards.\n+\t(df_simulate_artificial_refs_at_top): Renamed to\n \tdf_simulate_finalize_backwards.\n-\t(df_simulate_initialized_forwards,\n-\tdf_simulate_one_insn_forwards,\n+\t(df_simulate_initialized_forwards, df_simulate_one_insn_forwards,\n \tdf_simulate_finalize_backwards): New functions.\n-\t* df.h (df_simulate_artificial_refs_at_end): Renamed to \n+\t* df.h (df_simulate_artificial_refs_at_end): Renamed to\n \tdf_simulate_initialize_backwards.\n-\t(df_simulate_one_insn): Renamed to\n-\tdf_simulate_one_insn_backwards.\n-\t(df_simulate_artificial_refs_at_top): Renamed to \n+\t(df_simulate_one_insn): Renamed to df_simulate_one_insn_backwards.\n+\t(df_simulate_artificial_refs_at_top): Renamed to\n \tdf_simulate_finalize_backwards.\n-\t(df_simulate_initialized_forwards,\n-\tdf_simulate_one_insn_forwards,\n+\t(df_simulate_initialized_forwards, df_simulate_one_insn_forwards,\n \tdf_simulate_finalize_backwards): New functions.\n \t* ra-conflict.c (global_conflicts): Renamed\n \tdf_simulate_artificial_refs_at_end to\n@@ -359,7 +353,7 @@\n \tasm and change the signature of brev and byteSwap functions to use\n \tunsigned values.\n \t* config/picochip/picochip.md (commsTestPort): This is a complex\n-\tinstruction and should not be vliwed. Dont set insn type.\n+\tinstruction and should not be vliwed. Don't set insn type.\n \n 2008-12-15  Wolfgang Gellerich  <gellerich@de.ibm.com>\n \t* config/s390/s390.c (s390_swap_cmp): New function.\n@@ -2335,7 +2329,7 @@\n \t* config/mips/linux.h (LINUX_DRIVER_SELF_SPECS): New.\n \t(BASE_DRIVER_SELF_SPECS): Remove.\n \t(DRIVER_SELF_SPECS): New definition.\n-\t* config/mips/elfoabi.h: (DRIVER_SELF_SPECS): Include\n+\t* config/mips/elfoabi.h (DRIVER_SELF_SPECS): Include\n \tBASE_DRIVER_SELF_SPECS.\n \t* config/mips/sde.h: Likewise.\n \t* config/mips/iris6.h: Likewise.\n@@ -2774,7 +2768,7 @@\n 2008-10-29  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR target/32277\n-\t* libgcov.c ( __gcov_indirect_call_profiler): Check\n+\t* libgcov.c (__gcov_indirect_call_profiler): Check\n \tTARGET_VTABLE_USES_DESCRIPTORS.\n \n 2008-10-29  Stefan Schulze Frielinghaus  <xxschulz@de.ibm.com>\n@@ -3377,7 +3371,7 @@\n \n 2008-10-15  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n-\t* config/s390/s390.h: (TARGET_DFP): This requires TARGET_HARD_FLOAT.\n+\t* config/s390/s390.h (TARGET_DFP): This requires TARGET_HARD_FLOAT.\n \t* config/s390/s390.md: Replace \"TARGET_HARD_FLOAT &&\n \tTARGET_(HARD_)DFP\" with only TARGET_(HARD_)DFP since this\n \talready implies hard float.  Also fix several insn condition\n@@ -3726,7 +3720,7 @@\n 2008-10-11  Kenneth Zadeck <zadeck@naturalbridge.com>\n \n \tPR rtl-optimization/37448\n-\t* df.h: (df_ref_class): New enum.\n+\t* df.h (df_ref_class): New enum.\n \t(DF_REF_TYPE_NAMES, df_ref_extract): Removed.\n \t(struct df_ref): Replaced with union df_ref_d.\n \t(df_base_ref, df_artificial_ref, df_regular_ref, df_extract_ref):\n@@ -3921,7 +3915,7 @@\n \t* config/rs6000/rs6000.c (rs6000_parse_fpu_option): Interpret\n \t-mfpu options.\n \t(rs6000_handle_option): Process -mfpu options.\n-\t* config/rs6000/rs6000.h: (TARGET_XILINX_FPU): New.\n+\t* config/rs6000/rs6000.h (TARGET_XILINX_FPU): New.\n \t(enum fpu_type_t): New.\n \t* config/rs6000/rs6000.md (attr fp_type): New.  Include xfpu.md.\n \t(addsf3, subsf3, mulsf3, adddf3, subdf3, muldf3, trunctfdf2): Set\n@@ -3930,7 +3924,7 @@\n \t(floatdidf2): Add TARGET_SINGLE_FPU condition.\n \t* config/rs6000/rs6000.opt (-mfpu): New.\n \t(-mxilinx-fpu): New.\n-\t* config/rs6000/sysv4.h: (DRIVER_SELF_SPECS): New.\n+\t* config/rs6000/sysv4.h (DRIVER_SELF_SPECS): New.\n \t* config/rs6000/xfpu.h: New. Define TARGET_XILINX_FPU.\n \t* config/rs6000/xfpu.md: New. Define Xilinx pipeline.\n \t* gcc/config.gcc: powerpc-xilinx-eabi target: New.\n@@ -4449,7 +4443,7 @@\n 2008-10-02  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \tPR target/37528\n-\t* config/i386/mingw32.h (LIBGCC_SPEC) : Replace with ..\n+\t* config/i386/mingw32.h (LIBGCC_SPEC): Replace with ..\n \t(REAL_LIBGCC_SPEC): New.  Always include -lgcc.\n \n 2008-10-01  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n@@ -6306,8 +6300,8 @@\n \tPR target/36609\n \t* config/avr/avr.c (avr_reorg): Create RTL for reversed compare with\n \tzero.\n-\t* config/avr/avr.md  (QISI) : Define mode iterator.\n-\t(negated_tst<mode>) : Redefine as split using mode macro.\n+\t* config/avr/avr.md  (QISI): Define mode iterator.\n+\t(negated_tst<mode>): Redefine as split using mode macro.\n \t(reversed_tstqi): Define insn as reversed compare with zero.\n \t(reversed_tsthi): Ditto.\n \t(reversed_tstsi): Ditto.\n@@ -6457,10 +6451,10 @@\n \n \tImproved branch hints, safe hints, and scheduling.\n \n-\t* haifa-sched.c (sched_emit_insn) : Define.\n-\t* sched-int.h (sched_emit_insn) : Add prototype.\n+\t* haifa-sched.c (sched_emit_insn): Define.\n+\t* sched-int.h (sched_emit_insn): Add prototype.\n \t* doc/invoke.texi (-mdual-nops, -mhint-max-nops,\n-\t-mhint-max-distance -msafe-hints) : Document.\n+\t-mhint-max-distance -msafe-hints): Document.\n \t* config/spu/spu.c (spu_flag_var_tracking): New.\n \t(TARGET_SCHED_INIT_GLOBAL, TARGET_SCHED_INIT,\n \tTARGET_SCHED_REORDER, TARGET_SCHED_REORDER2,\n@@ -7386,7 +7380,7 @@\n \t(haifa_luid_for_non_insn): New static function.\n \t(init_before_recovery): Use haifa_init_only_bb instead of add_block.\n \t(increase_insn_priority): New.\n-\t* modulo-sched.c: (issue_rate): Remove static declaration.\n+\t* modulo-sched.c (issue_rate): Remove static declaration.\n \t(sms_sched_info): Change type to haifa_sched_info.\n \t(sms_sched_deps_info, sms_common_sched_info): New variables.\n \t(setup_sched_infos): New.\n@@ -7944,7 +7938,7 @@\n \tTI_CURRENT_OPTION_PRAGMA.\n \t(current_target_pragma): Rename from current_option_pragma.\n \n-\t* target.h: (struct target_option): Delete booleans for changing\n+\t* target.h (struct target_option): Delete booleans for changing\n \tthe optimization level on hot/cold functions.  Change signature of\n \tpragma_parse hook to take a second tree.\n \n@@ -10848,7 +10842,7 @@\n \t* tree-vectorizer.h (supportable_widening_operation): Add two\n \targuments.\n \t(supportable_narrowing_operation): Likewise.\n-\t* tree-vect-patterns.c (vect_recog_widen_mult_pattern) : Call\n+\t* tree-vect-patterns.c (vect_recog_widen_mult_pattern): Call\n \tsupportable_widening_operation with correct arguments.\n \t* tree-vect-transform.c (vectorizable_conversion): Likewise.\n \t(vectorizable_type_demotion): Support double type conversions.\n@@ -11447,7 +11441,7 @@\n 2008-08-06  Michael Matz  <matz@suse.de>\n \n \t* Makefile.in (write_entries_to_file): Quote words.\n-\t* gengtype.c: (read_input_line): Skip over leading white-space.\n+\t* gengtype.c (read_input_line): Skip over leading white-space.\n \n 2008-08-06  Marc Gauthier  <marc@tensilica.com>\n \n@@ -13807,7 +13801,7 @@\n 2008-07-14  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \tPR target/36745\n-\t* config/s390/s390.c: (s390_secondary_reload): Add a secondary\n+\t* config/s390/s390.c (s390_secondary_reload): Add a secondary\n \treload for symbol refs moved to r0 with -fPIC.\n \t(legitimize_pic_address): Use the target register as temporary\n \treg if possible.\n@@ -14902,7 +14896,7 @@\n \t* Makefile.in (tree-switch-conversion.o): Add.\n \t(OBJS-common): Add tree-swtch-conversion.o.\n \t* passes.c (init_optimization_passes): Add pass_convert_switch.\n-\t* tree-pass.h: (pass_convert_switch): Add.\n+\t* tree-pass.h (pass_convert_switch): Add.\n \t* tree-switch-conversion.c: New file.\n \t* gcc.dg/tree-ssa/cswtch.c: New testcase.\n \t* common.opt (ftree-cswtch): New option.\n@@ -15713,7 +15707,7 @@\n 2008-06-25  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/36627\n-\t* config/i386/i386.md : Change constraints of HImode and QImode\n+\t* config/i386/i386.md: Change constraints of HImode and QImode\n \timmediate operands from \"i\" to \"n\".  Change SImode \"ni\" constraint to\n \t\"i\" and SImode \"rmi\" constraint to \"g\".  Remove all constraints\n \tfrom const0_operand and const1_operand predicated operands.\n@@ -16971,7 +16965,7 @@\n \t* configure: Regenerate.\n \t* doc/cpp.texi: Don't mention BeOS.\n \t* doc/extend.texi (interrupt): Don't mention MS1.\n-\t* doc/install.texi: (i386-@var{any}-sysv, m68k-bull-sysv,\n+\t* doc/install.texi (i386-@var{any}-sysv, m68k-bull-sysv,\n \tm68k-hp-hpux, m68000-hp-hpux, m68000-att-sysv,\n \talphaev5-cray-unicosmk*, xscale-*-*, i?86-*-linux*aout,\n \ti?86-*-sco3.2v5*, i?86-*-udk, m68k-hp-hpux, powerpc-*-sysv4,\n@@ -16981,7 +16975,7 @@\n \t(-mwindiss): Remove.\n \t(CRIS Options): Remove cris-axis-aout references.\n \t(HPPA Options): Don't mention hppa1.1-*-pro.\n-\t* doc/md.texi: (MorphoTech family): Remove.\n+\t* doc/md.texi (MorphoTech family): Remove.\n \t* libgcc2.c: Don't handle UWIN.\n \t* config/alpha/t-unicosmk: Remove.\n \t* config/alpha/unicosmk.h: Remove.\n@@ -17557,7 +17551,7 @@\n \t(tree_call_cdce): Ditto.\n \t(gate_call_cdce): Ditto.\n \t(pass_call_cdce): New gimple pass.\n-\t* passes.c: (init_optimization_passes): New pass.\n+\t* passes.c (init_optimization_passes): New pass.\n \t* tree-pass.h: New pass declaration.\n \t* opts.c (decode_options): New flag setting.\n \t* common.opt: Add -ftree-builtin-call-dce flag.\n@@ -18180,7 +18174,7 @@\n \n 2008-05-27  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n-\t* reload.c: (find_reloads): Skip alternatives according to the\n+\t* reload.c (find_reloads): Skip alternatives according to the\n \t\"enabled\" attribute. Constify the constraint variable.\n \t* recog.c (get_attr_enabled): Add default implementation.\n \t(extract_insn): Set the alternative_enabled_p array\n@@ -18189,7 +18183,7 @@\n \talternatives according to the \"enabled\" attribute\n \t* recog.h (struct recog_data): New field alternative_enabled_p.\n \t(skip_alternative): New inline function.\n-\t* regclass.c: (record_operand_costs): Check the \"enabled\" attribute.\n+\t* regclass.c (record_operand_costs): Check the \"enabled\" attribute.\n \t(record_reg_classes): Skip alternative according to the\n \t\"enabled\" attribute.\n \n@@ -19466,7 +19460,7 @@\n \texpand_copysign_bit): Change call to emit_no_conflict_block to\n \temit_insn and remove unneeded code to construct extra args.\n \t(emit_no_conflict_block): Removed.\n-\t* optabls.h: (emit_no_conflict_block): Removed.\n+\t* optabls.h (emit_no_conflict_block): Removed.\n \t* cse.c (cse_extended_basic_block): Remove search for\n \tREG_NO_CONFLICT note.\n \t* global.c: Removed incorrect comment added in revision 117.\n@@ -21252,7 +21246,7 @@\n \n \t* config/i386/i386.md (fix_trunc<mode>_i387_fisttp_with_temp): Use 'X'\n \tconstraint for operand 2 when operand 0 is memory operand.\n-\t(fix_truncdi_i387_with_temp): : Use 'X' constraint for operand 4 when\n+\t(fix_truncdi_i387_with_temp): Use 'X' constraint for operand 4 when\n \toperand 0 is memory operand.\n \t(fix_trunc<mode>_i387_with_temp): Ditto.\n \t(*floatsi<mode>2_vector_mixed_with_temp): Use 'X' constraint for\n@@ -22505,7 +22499,7 @@\n \t2008-04-07  Peter Bergner  <bergner@vnet.ibm.com>\n \n \tPR middle-end/PR28690\n-\t* rtlanal.c: (commutative_operand_precedence): Give SYMBOL_REF's the\n+\t* rtlanal.c (commutative_operand_precedence): Give SYMBOL_REF's the\n \tsame precedence as REG_POINTER and MEM_POINTER operands.\n \n 2008-04-08  Richard Guenther  <rguenther@suse.de>\n@@ -24368,7 +24362,7 @@\n \t* config/i386/t-cygming: Add build rule for msformat-c.o.\n \t* doc/extend.texi: Add new format names gnu_* and ms_* and\n \tfurther details.\n-\t* doc/tm.texi: (TARGET_OVERRIDES_FORMAT_ATTRIBUTES): New.\n+\t* doc/tm.texi (TARGET_OVERRIDES_FORMAT_ATTRIBUTES): New.\n \n 2008-03-20  Ira Rosen  <irar@il.ibm.com>\n \n@@ -25584,7 +25578,7 @@\n \t* flags.h (flag_permissive): Declare. Update description.\n \t* diagnostic.c (pedwarn): Update.\n \t(permerror): New.\n-\t* diagnostic.h: (pedantic_error_kind): Rename as pedantic_warning_kind.\n+\t* diagnostic.h (pedantic_error_kind): Rename as pedantic_warning_kind.\n \t(permissive_error_kind): New.\n \t* toplev.c (flag_permissive): Define. Update description.\n \t* toplev.h (permissive_error_kind): Declare.\n@@ -27136,7 +27130,7 @@\n \n 2008-02-11  Kai Tietz  <kai.tietz@onevision.com>\n \n-\t* config/i386/cygwin.asm: (__alloca): Correct calling\n+\t* config/i386/cygwin.asm (__alloca): Correct calling\n \tconvention and alignment.\n \t(__chkstk): Force 8 byte stack alignment.\n \n@@ -27791,7 +27785,7 @@\n \txstormy16_gimplify_va_arg_expr.\n \tFix up some formatting issues.\n \n-\t* config/stormy16/stormy16.c: (xstormy16_carry_plus_operand):\n+\t* config/stormy16/stormy16.c (xstormy16_carry_plus_operand):\n \tMove to predicates.md.\n \t(xs_hi_general_operand): Likewise.\n \t(xs_hi_nonmemory_operand): Likewise.\n@@ -28435,7 +28429,7 @@\n \n 2008-01-12  Doug Kwan  <dougkwan@google.com>\n \n-\t* c-decl.c: (grokdeclarator): Use OPT_Wignored_qualifiers\n+\t* c-decl.c (grokdeclarator): Use OPT_Wignored_qualifiers\n \tinstead of OPT_Wreturn_type in warning due to ignored return type\n \tqualifiers.\n \t* c-opt.c (c_common_post_option): Add -Wignored-qualifiers to"}, {"sha": "4afbc8cc5bfdc74784b30823c68fa2271cd9b0bc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79644b2756eda84f7e6de4c8b6bd6198f2aa0c55/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79644b2756eda84f7e6de4c8b6bd6198f2aa0c55/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=79644b2756eda84f7e6de4c8b6bd6198f2aa0c55", "patch": "@@ -7182,7 +7182,7 @@\n 2008-06-19  Andy Hutchinson  <hutchinsonandy@aim.com>\n \n \t* lib/target-supports.exp \n-\t(check_effective_target_keeps_null_pointer_checks) : New function.\n+\t(check_effective_target_keeps_null_pointer_checks): New function.\n \t* gcc.dg/tree-ssa/20030730-1.c: Use keeps_null_pointer_checks to \n \tdetermine correct test response.\n \t* gcc.dg/tree-ssa/20030730-2.c: Ditto."}, {"sha": "f9afd432cdbe35fe081189c071382800a7d60439", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79644b2756eda84f7e6de4c8b6bd6198f2aa0c55/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79644b2756eda84f7e6de4c8b6bd6198f2aa0c55/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=79644b2756eda84f7e6de4c8b6bd6198f2aa0c55", "patch": "@@ -1,3 +1,7 @@\n+2008-12-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* testsuite/libgomp.c/atomic-6.c: Add -mieee for alpha*-*-* targets.\n+\n 2008-12-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* configure: Regenerate."}, {"sha": "8e7fca596007184988ec2d8ca007ce01720e1908", "filename": "libgomp/testsuite/libgomp.c/atomic-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79644b2756eda84f7e6de4c8b6bd6198f2aa0c55/libgomp%2Ftestsuite%2Flibgomp.c%2Fatomic-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79644b2756eda84f7e6de4c8b6bd6198f2aa0c55/libgomp%2Ftestsuite%2Flibgomp.c%2Fatomic-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fatomic-6.c?ref=79644b2756eda84f7e6de4c8b6bd6198f2aa0c55", "patch": "@@ -1,5 +1,6 @@\n /* PR middle-end/36106 */\n /* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -mieee\" { target alpha*-*-* } } */\n /* { dg-options \"-O2 -march=i586\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n \n #ifdef __i386__"}]}