{"sha": "cc6a467f450424a14bfc71d03e83b3981f4fc864", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M2YTQ2N2Y0NTA0MjRhMTRiZmM3MWQwM2U4M2IzOTgxZjRmYzg2NA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-08-09T21:08:33Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-08-09T21:08:33Z"}, "message": "rs6000: Use SAVE_MULTIPLE only if we restore what it saves (PR80938)\n\nWe can have SAVE_MULTIPLE while we do not have REST_MULTIPLE.  If the\ninline restore does not restore all registers, the CFI for the save\nand restore can conflict if things are shrink-wrapped.\n\nWe could restore all registers that are saved (not ideal), or emit\nthe CFI notes to say we did (which will work fine, but is also not\nso great); instead, let's not save the registers that are unused.\n\n\n\tPR target/80938\n\t* config/rs6000/rs6000.c (rs6000_savres_strategy): Don't use\n\tSAVE_MULTIPLE if not all the registers that saves, should be saved.\n\nFrom-SVN: r251005", "tree": {"sha": "8630b82450ca497021fe09a477cf138ac39daa8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8630b82450ca497021fe09a477cf138ac39daa8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc6a467f450424a14bfc71d03e83b3981f4fc864", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc6a467f450424a14bfc71d03e83b3981f4fc864", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc6a467f450424a14bfc71d03e83b3981f4fc864", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc6a467f450424a14bfc71d03e83b3981f4fc864/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a8a581af9ec2c7c774b5309d9d4e6555ddfc440b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8a581af9ec2c7c774b5309d9d4e6555ddfc440b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8a581af9ec2c7c774b5309d9d4e6555ddfc440b"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "f69aeed99d3c7040b7d77fb9628f549f9e6f893b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6a467f450424a14bfc71d03e83b3981f4fc864/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6a467f450424a14bfc71d03e83b3981f4fc864/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc6a467f450424a14bfc71d03e83b3981f4fc864", "patch": "@@ -1,3 +1,9 @@\n+2017-08-09  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/80938\n+\t* config/rs6000/rs6000.c (rs6000_savres_strategy): Don't use\n+\tSAVE_MULTIPLE if not all the registers that saves, should be saved.\n+\n 2017-08-09  Jim Wilson  <jim.wilson@linaro.org>\n \n \t* config/aarch64/aarch64-cores.def (falkor): Use falkor pipeline."}, {"sha": "8f502dbdf041efd99e833ab2f0d1a45339b47905", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6a467f450424a14bfc71d03e83b3981f4fc864/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6a467f450424a14bfc71d03e83b3981f4fc864/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=cc6a467f450424a14bfc71d03e83b3981f4fc864", "patch": "@@ -24431,6 +24431,21 @@ rs6000_savres_strategy (rs6000_stack_t *info,\n   else if (!lr_save_p && info->first_gp_reg_save > 29)\n     strategy |= SAVE_INLINE_GPRS | REST_INLINE_GPRS;\n \n+  /* We can only use save multiple if we need to save all the registers from\n+     first_gp_reg_save.  Otherwise, the CFI gets messed up (we save some\n+     register we do not restore).  */\n+  if (strategy & SAVE_MULTIPLE)\n+    {\n+      int i;\n+\n+      for (i = info->first_gp_reg_save; i < 32; i++)\n+\tif (fixed_reg_p (i) || !save_reg_p (i))\n+\t  {\n+\t    strategy &= ~SAVE_MULTIPLE;\n+\t    break;\n+\t  }\n+    }\n+\n   /* We can only use load multiple or the out-of-line routines to\n      restore gprs if we've saved all the registers from\n      first_gp_reg_save.  Otherwise, we risk loading garbage."}]}