{"sha": "759ebd17e39203678e1fd35611628f6dddc44117", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU5ZWJkMTdlMzkyMDM2NzhlMWZkMzU2MTE2MjhmNmRkZGM0NDExNw==", "commit": {"author": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2017-10-27T17:52:55Z"}, "committer": {"name": "Will Schmidt", "email": "willschm@gcc.gnu.org", "date": "2017-10-27T17:52:55Z"}, "message": "fold-vec-neg-char.c: New.\n\n[testsuite]\n\n2017-10-27  Will Schmidt  <will_schmidt@vnet.ibm.com>\n\n\t* gcc.target/powerpc/fold-vec-neg-char.c: New.\n\t* gcc.target/powerpc/fold-vec-neg-floatdouble.c: New.\n\t* gcc.target/powerpc/fold-vec-neg-int.c: New.\n\t* gcc.target/powerpc/fold-vec-neg-longlong.c: New.\n\t* gcc.target/powerpc/fold-vec-neg-short.c: New.\n\nFrom-SVN: r254164", "tree": {"sha": "831bea76fea7f24200c5ae79c74f2821bd3f4a02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/831bea76fea7f24200c5ae79c74f2821bd3f4a02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/759ebd17e39203678e1fd35611628f6dddc44117", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/759ebd17e39203678e1fd35611628f6dddc44117", "html_url": "https://github.com/Rust-GCC/gccrs/commit/759ebd17e39203678e1fd35611628f6dddc44117", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/759ebd17e39203678e1fd35611628f6dddc44117/comments", "author": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "730de5a59ed3f0669b0d5cd85392f14fd337b895", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/730de5a59ed3f0669b0d5cd85392f14fd337b895", "html_url": "https://github.com/Rust-GCC/gccrs/commit/730de5a59ed3f0669b0d5cd85392f14fd337b895"}], "stats": {"total": 104, "additions": 104, "deletions": 0}, "files": [{"sha": "b8dac7e625a95eb187702aacffe124bc8a617f6a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/759ebd17e39203678e1fd35611628f6dddc44117/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/759ebd17e39203678e1fd35611628f6dddc44117/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=759ebd17e39203678e1fd35611628f6dddc44117", "patch": "@@ -1,3 +1,11 @@\n+2017-10-27  Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/fold-vec-neg-char.c: New.\n+\t* gcc.target/powerpc/fold-vec-neg-floatdouble.c: New.\n+\t* gcc.target/powerpc/fold-vec-neg-int.c: New.\n+\t* gcc.target/powerpc/fold-vec-neg-longlong.c: New.\n+\t* gcc.target/powerpc/fold-vec-neg-short.c: New.\n+\n 2017-10-27  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/56342"}, {"sha": "19ea3d3184ae84422e6a164a9b368a49253bcf89", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-neg-char.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/759ebd17e39203678e1fd35611628f6dddc44117/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/759ebd17e39203678e1fd35611628f6dddc44117/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-char.c?ref=759ebd17e39203678e1fd35611628f6dddc44117", "patch": "@@ -0,0 +1,19 @@\n+/* Verify that overloaded built-ins for vec_neg with char\n+   inputs produce the right code.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec -O2\" } */\n+\n+#include <altivec.h>\n+\n+vector signed char\n+test2 (vector signed char x)\n+{\n+  return vec_neg (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"xxspltib|vspltisw|vxor\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vsububm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmaxsb\" 0 } } */\n+"}, {"sha": "79ad92465a2d28f8e6a3ee0acc3ba981d443c739", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-neg-floatdouble.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/759ebd17e39203678e1fd35611628f6dddc44117/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-floatdouble.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/759ebd17e39203678e1fd35611628f6dddc44117/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-floatdouble.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-floatdouble.c?ref=759ebd17e39203678e1fd35611628f6dddc44117", "patch": "@@ -0,0 +1,23 @@\n+/* Verify that overloaded built-ins for vec_neg with float and\n+   double inputs for VSX produce the right code.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-mvsx -O2\" } */\n+\n+#include <altivec.h>\n+\n+vector float\n+test1 (vector float x)\n+{\n+  return vec_neg (x);\n+}\n+\n+vector double\n+test2 (vector double x)\n+{\n+  return vec_neg (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"xvnegsp\" 1 } } */\n+/* { dg-final { scan-assembler-times \"xvnegdp\" 1 } } */"}, {"sha": "d6ca1283bc9b985c32ad641dc9ba53cf0fbd8841", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-neg-int.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/759ebd17e39203678e1fd35611628f6dddc44117/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/759ebd17e39203678e1fd35611628f6dddc44117/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-int.c?ref=759ebd17e39203678e1fd35611628f6dddc44117", "patch": "@@ -0,0 +1,18 @@\n+/* Verify that overloaded built-ins for vec_neg with int\n+   inputs produce the right code.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec -O2\" } */\n+\n+#include <altivec.h>\n+\n+vector signed int\n+test1 (vector signed int x)\n+{\n+  return vec_neg (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"xxspltib|vspltisw|vxor\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vsubuwm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmaxsw\" 0 } } */"}, {"sha": "48f717886488f909284929f7da39d26f7b82c5ce", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-neg-longlong.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/759ebd17e39203678e1fd35611628f6dddc44117/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-longlong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/759ebd17e39203678e1fd35611628f6dddc44117/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-longlong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-longlong.c?ref=759ebd17e39203678e1fd35611628f6dddc44117", "patch": "@@ -0,0 +1,18 @@\n+/* Verify that overloaded built-ins for vec_neg with long long\n+   inputs produce the right code.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_p8vector_ok } */\n+/* { dg-options \"-mpower8-vector -O2\" } */\n+\n+#include <altivec.h>\n+\n+vector signed long long\n+test3 (vector signed long long x)\n+{\n+  return vec_neg (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"xxspltib|vspltisw\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vsubudm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmaxsd\" 0 } } */"}, {"sha": "997a9d4861744cf269a72334f6285e8bee271f73", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-neg-short.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/759ebd17e39203678e1fd35611628f6dddc44117/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/759ebd17e39203678e1fd35611628f6dddc44117/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-neg-short.c?ref=759ebd17e39203678e1fd35611628f6dddc44117", "patch": "@@ -0,0 +1,18 @@\n+/* Verify that overloaded built-ins for vec_neg with short\n+   inputs produce the right code.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec -O2\" } */\n+\n+#include <altivec.h>\n+\n+vector signed short\n+test3 (vector signed short x)\n+{\n+  return vec_neg (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"xxspltib|vspltisw|vxor\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vsubuhm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmaxsh\" 0 } } */"}]}