{"sha": "3524fe03395ca14f1ab9d86addef627c275c1be6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUyNGZlMDMzOTVjYTE0ZjFhYjlkODZhZGRlZjYyN2MyNzVjMWJlNg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-03-10T21:36:35Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-03-10T21:36:35Z"}, "message": "gcse.c (compute_pre_local_properties): Delete.\n\n        * gcse.c (compute_pre_local_properties): Delete.\n        (compute_pre_data): Use compute_local_properties instead of\n        compute_pre_local_properties.\n\nFrom-SVN: r25678", "tree": {"sha": "8c308cd284bebe784c09664edd41e9ff4a804312", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c308cd284bebe784c09664edd41e9ff4a804312"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3524fe03395ca14f1ab9d86addef627c275c1be6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3524fe03395ca14f1ab9d86addef627c275c1be6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3524fe03395ca14f1ab9d86addef627c275c1be6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3524fe03395ca14f1ab9d86addef627c275c1be6/comments", "author": null, "committer": null, "parents": [{"sha": "b5ce41ff0f8655782069932f963f7ed7c183182f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5ce41ff0f8655782069932f963f7ed7c183182f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5ce41ff0f8655782069932f963f7ed7c183182f"}], "stats": {"total": 79, "additions": 5, "deletions": 74}, "files": [{"sha": "d74b95fa00916d81c6e617c31cf362c6b97a7e0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3524fe03395ca14f1ab9d86addef627c275c1be6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3524fe03395ca14f1ab9d86addef627c275c1be6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3524fe03395ca14f1ab9d86addef627c275c1be6", "patch": "@@ -22,6 +22,10 @@ Wed Mar 10 23:11:19 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n Wed Mar 10 20:28:29 1999  Jeffrey A Law  (law@cygnus.com)\n \n+\t* gcse.c (compute_pre_local_properties): Delete.\n+\t(compute_pre_data): Use compute_local_properties instead of\n+\tcompute_pre_local_properties.\n+\n \t* gcse.c: More comments, whitespace and similar fixes.\n \t(dump_cuid_table, maybe_set_rd_gen, dump_cprop_data): Delete.\n \t(dump_pre_data, compute_cprop_local_properties): Likewise."}, {"sha": "a522755a0902180aed904d2a779dd35f7f3abecc", "filename": "gcc/gcse.c", "status": "modified", "additions": 1, "deletions": 74, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3524fe03395ca14f1ab9d86addef627c275c1be6/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3524fe03395ca14f1ab9d86addef627c275c1be6/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=3524fe03395ca14f1ab9d86addef627c275c1be6", "patch": "@@ -577,7 +577,6 @@ static int one_cprop_pass\t     PROTO ((int, int));\n \n static void alloc_pre_mem\t     PROTO ((int, int));\n static void free_pre_mem\t      PROTO ((void));\n-static void compute_pre_local_properties PROTO ((void));\n static void compute_pre_avinout       PROTO ((void));\n static void compute_pre_antinout      PROTO ((void));\n static void compute_pre_pavinout      PROTO ((void));\n@@ -4000,78 +3999,6 @@ free_pre_mem ()\n   free (pre_transpout);\n }\n \n-/* Compute the local properties of each recorded expression.\n-   Local properties are those that are defined by the block, irrespective\n-   of other blocks.\n-\n-   An expression is transparent in a block if its operands are not modified\n-   in the block.\n-\n-   An expression is computed (locally available) in a block if it is computed\n-   at least once and expression would contain the same value if the\n-   computation was moved to the end of the block.\n-\n-   An expression is locally anticipatable in a block if it is computed at\n-   least once and expression would contain the same value if the computation\n-   was moved to the beginning of the block.  */\n-\n-static void\n-compute_pre_local_properties ()\n-{\n-  int i;\n-\n-  sbitmap_vector_ones (pre_transp, n_basic_blocks);\n-  sbitmap_vector_zero (pre_comp, n_basic_blocks);\n-  sbitmap_vector_zero (pre_antloc, n_basic_blocks);\n-\n-  for (i = 0; i < expr_hash_table_size; i++)\n-    {\n-      struct expr *expr;\n-\n-      for (expr = expr_hash_table[i]; expr != NULL; expr = expr->next_same_hash)\n-\t{\n-\t  struct occr *occr;\n-\t  int indx = expr->bitmap_index;\n-\n-\t  /* The expression is transparent in this block if it is not killed.\n-\t     We start by assuming all are transparent [none are killed], and then\n-\t     reset the bits for those that are.  */\n-\n-\t  compute_transp (expr->expr, indx, pre_transp, 0);\n-\n-\t  /* The occurrences recorded in antic_occr are exactly those that\n-\t     we want to set to non-zero in ANTLOC.  */\n-\n-\t  for (occr = expr->antic_occr; occr != NULL; occr = occr->next)\n-\t    {\n-\t      int bb = BLOCK_NUM (occr->insn);\n-\t      SET_BIT (pre_antloc[bb], indx);\n-\n-\t      /* While we're scanning the table, this is a good place to\n-\t\t initialize this.  */\n-\t      occr->deleted_p = 0;\n-\t    }\n-\n-\t  /* The occurrences recorded in avail_occr are exactly those that\n-\t     we want to set to non-zero in COMP.  */\n-\n-\t  for (occr = expr->avail_occr; occr != NULL; occr = occr->next)\n-\t    {\n-\t      int bb = BLOCK_NUM (occr->insn);\n-\t      SET_BIT (pre_comp[bb], indx);\n-\n-\t      /* While we're scanning the table, this is a good place to\n-\t\t initialize this.  */\n-\t      occr->copied_p = 0;\n-\t    }\n-\n-\t  /* While we're scanning the table, this is a good place to\n-\t     initialize this.  */\n-\t  expr->reaching_reg = 0;\n-\t}\n-    }\n-}\n-\n /* Compute expression availability at entrance and exit of each block.  */\n \n static void\n@@ -4337,7 +4264,7 @@ compute_pre_ppinout ()\n static void\n compute_pre_data ()\n {\n-  compute_pre_local_properties ();\n+  compute_local_properties (pre_transp, pre_comp, pre_antloc, 0);\n   compute_pre_avinout ();\n   compute_pre_antinout ();\n   compute_pre_pavinout ();"}]}