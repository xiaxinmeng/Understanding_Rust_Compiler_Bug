{"sha": "4192d75b251845c010da43f83c5ff6c815159dd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE5MmQ3NWIyNTE4NDVjMDEwZGE0M2Y4M2M1ZmY2YzgxNTE1OWRkNA==", "commit": {"author": {"name": "Victor Kaplansky", "email": "victork@il.ibm.com", "date": "2006-08-07T11:28:31Z"}, "committer": {"name": "Victor Kaplansky", "email": "victork@gcc.gnu.org", "date": "2006-08-07T11:28:31Z"}, "message": "re PR tree-optimization/26969 (ICE with -O1 -funswitch-loops -ftree-vectorize)\n\nChangeLog\n        PR tree-optimization/26969\n        * tree-vect-analyze.c (vect_analyze_loop_form): Add check of latch\n         witch an empty list of PHIs.\n\ntestsuite/Changelog:\n        PR tree-optimizations/26969\n        * gcc.dg/vect/vect.exp: Compile tests prefixed with\n\t\"unswitch-loops\" with -funswitch-loops.\n        * gcc.dg/vect/unswitch-loops-pr26969.c: New test.\n\nFrom-SVN: r115995", "tree": {"sha": "2a815da8cd510d65ff313810b7ecb7deddfa81f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a815da8cd510d65ff313810b7ecb7deddfa81f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4192d75b251845c010da43f83c5ff6c815159dd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4192d75b251845c010da43f83c5ff6c815159dd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4192d75b251845c010da43f83c5ff6c815159dd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4192d75b251845c010da43f83c5ff6c815159dd4/comments", "author": null, "committer": null, "parents": [{"sha": "105d82a07bbdfcaaf4440dcaa33724d7dfefb97c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/105d82a07bbdfcaaf4440dcaa33724d7dfefb97c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/105d82a07bbdfcaaf4440dcaa33724d7dfefb97c"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "c147849fd6915d8780d53f5c456d7da20541e0e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4192d75b251845c010da43f83c5ff6c815159dd4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4192d75b251845c010da43f83c5ff6c815159dd4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4192d75b251845c010da43f83c5ff6c815159dd4", "patch": "@@ -1,6 +1,8 @@\n-2006-08-06  Andreas Schwab  <schwab@suse.de>\n+2006-08-07  Victor Kaplansky <victork@il.ibm.com>\n \n-\t* config/m68k/m68k.md (truncxfsf2): Readd.\n+        PR tree-optimization/26969\n+        * tree-vect-analyze.c (vect_analyze_loop_form): Add check of latch\n+         with an empty list of PHIs.\n \n 2006-08-06  Paolo Bonzini  <bonzini@gnu.org>\n "}, {"sha": "8fdda6be9d61f4dee24071ec168bdc676c564b8d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4192d75b251845c010da43f83c5ff6c815159dd4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4192d75b251845c010da43f83c5ff6c815159dd4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4192d75b251845c010da43f83c5ff6c815159dd4", "patch": "@@ -1,3 +1,10 @@\n+2006-08-07  Victor Kaplansky <victork@il.ibm.com>\n+\n+\tPR tree-optimizations/26969\n+        * gcc.dg/vect/vect.exp: Compile tests prefixed with\n+\t\"unswitch-loops\" with -funswitch-loops.\n+        * gcc.dg/vect/unswitch-loops-pr26969.c: New test.\n+\n 2006-08-07  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.dg/sparc-getcontext-1.c: Fix typo."}, {"sha": "b92a7fb7cb6c9ad3abec045f04067335b689b569", "filename": "gcc/testsuite/gcc.dg/vect/unswitch-loops-pr26969.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4192d75b251845c010da43f83c5ff6c815159dd4/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Funswitch-loops-pr26969.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4192d75b251845c010da43f83c5ff6c815159dd4/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Funswitch-loops-pr26969.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Funswitch-loops-pr26969.c?ref=4192d75b251845c010da43f83c5ff6c815159dd4", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n+\n+void\n+ruby_re_compile_fastmap (char *fastmap, int options)\n+{\n+  int j;\n+  for (j = 0; j < (1 << 8); j++)\n+    {\n+      if (j != '\\n' || (options & 4))\n+\tfastmap[j] = 1;\n+    }\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "001c97ad61d29044a2c87f9a321c9dadfba718c6", "filename": "gcc/testsuite/gcc.dg/vect/vect.exp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4192d75b251845c010da43f83c5ff6c815159dd4/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4192d75b251845c010da43f83c5ff6c815159dd4/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp?ref=4192d75b251845c010da43f83c5ff6c815159dd4", "patch": "@@ -133,6 +133,12 @@ lappend DEFAULT_VECTCFLAGS \"-fno-section-anchors\"\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/no-section-anchors-*.\\[cS\\]]]  \\\n \t\"\" $DEFAULT_VECTCFLAGS\n \n+# -funswitch-loops tests\n+set DEFAULT_VECTCFLAGS $SAVED_DEFAULT_VECTCFLAGS\n+lappend DEFAULT_VECTCFLAGS \"-funswitch-loops\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/unswitch-loops-*.\\[cS\\]]]  \\\n+\t\"\" $DEFAULT_VECTCFLAGS\n+\n # With -Os\n lappend DEFAULT_VECTCFLAGS \"-Os\"\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/Os-vect-*.\\[cS\\]]]  \\"}, {"sha": "f247cd9ab31f39dcbb46545250fbdd8b8c2d395c", "filename": "gcc/tree-vect-analyze.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4192d75b251845c010da43f83c5ff6c815159dd4/gcc%2Ftree-vect-analyze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4192d75b251845c010da43f83c5ff6c815159dd4/gcc%2Ftree-vect-analyze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-analyze.c?ref=4192d75b251845c010da43f83c5ff6c815159dd4", "patch": "@@ -1889,7 +1889,8 @@ vect_analyze_loop_form (struct loop *loop)\n      that the loop is represented as a do-while (with a proper if-guard\n      before the loop if needed), where the loop header contains all the\n      executable statements, and the latch is empty.  */\n-  if (!empty_block_p (loop->latch))\n+  if (!empty_block_p (loop->latch)\n+        || phi_nodes (loop->latch))\n     {\n       if (vect_print_dump_info (REPORT_BAD_FORM_LOOPS))\n         fprintf (vect_dump, \"not vectorized: unexpected loop form.\");"}]}