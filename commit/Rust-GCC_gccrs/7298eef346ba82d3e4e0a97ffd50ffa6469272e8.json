{"sha": "7298eef346ba82d3e4e0a97ffd50ffa6469272e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI5OGVlZjM0NmJhODJkM2U0ZTBhOTdmZmQ1MGZmYTY0NjkyNzJlOA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2011-11-09T09:51:49Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2011-11-09T09:51:49Z"}, "message": "re PR fortran/50540 (Internal Error: Can't convert UNKNOWN to INTEGER(4)  (r178939))\n\n\tPR fortran/50540\n\t* resolve.c (resolve_forall_iterators): Transform internal errors\n\tto normal errors.\n\t* gfortran.dg/forall_16.f90: New test.\n\nFrom-SVN: r181200", "tree": {"sha": "21b7f86becc62380f19119a2313da5ef229932a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21b7f86becc62380f19119a2313da5ef229932a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7298eef346ba82d3e4e0a97ffd50ffa6469272e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7298eef346ba82d3e4e0a97ffd50ffa6469272e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7298eef346ba82d3e4e0a97ffd50ffa6469272e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7298eef346ba82d3e4e0a97ffd50ffa6469272e8/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c63ca5a1da8f003feff00d808d5d67931038d29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c63ca5a1da8f003feff00d808d5d67931038d29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c63ca5a1da8f003feff00d808d5d67931038d29"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "6d7c35b1fe121c4a02b354e18849c18f3da691d5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7298eef346ba82d3e4e0a97ffd50ffa6469272e8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7298eef346ba82d3e4e0a97ffd50ffa6469272e8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7298eef346ba82d3e4e0a97ffd50ffa6469272e8", "patch": "@@ -1,3 +1,9 @@\n+2011-11-09  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/50540\n+\t* resolve.c (resolve_forall_iterators): Transform internal errors\n+\tto normal errors.\n+\n 2011-11-09  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/50960\n@@ -8,7 +14,7 @@\n \tbe resolved again.\n \t(resolve_fl_parameter): Make sure the symbol has a value.\n \n-2011-11-08  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+2011-11-09  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/38718\n \t* intrinsic.c (add_functions): Allow dreal simplification."}, {"sha": "d96b33225ede01065f04f25811bbac2bf2aaf6c4", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7298eef346ba82d3e4e0a97ffd50ffa6469272e8/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7298eef346ba82d3e4e0a97ffd50ffa6469272e8/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=7298eef346ba82d3e4e0a97ffd50ffa6469272e8", "patch": "@@ -6427,14 +6427,14 @@ resolve_forall_iterators (gfc_forall_iterator *it)\n \tgfc_error (\"FORALL start expression at %L must be a scalar INTEGER\",\n \t\t   &iter->start->where);\n       if (iter->var->ts.kind != iter->start->ts.kind)\n-\tgfc_convert_type (iter->start, &iter->var->ts, 2);\n+\tgfc_convert_type (iter->start, &iter->var->ts, 1);\n \n       if (gfc_resolve_expr (iter->end) == SUCCESS\n \t  && (iter->end->ts.type != BT_INTEGER || iter->end->rank != 0))\n \tgfc_error (\"FORALL end expression at %L must be a scalar INTEGER\",\n \t\t   &iter->end->where);\n       if (iter->var->ts.kind != iter->end->ts.kind)\n-\tgfc_convert_type (iter->end, &iter->var->ts, 2);\n+\tgfc_convert_type (iter->end, &iter->var->ts, 1);\n \n       if (gfc_resolve_expr (iter->stride) == SUCCESS)\n \t{\n@@ -6448,7 +6448,7 @@ resolve_forall_iterators (gfc_forall_iterator *it)\n \t\t       &iter->stride->where);\n \t}\n       if (iter->var->ts.kind != iter->stride->ts.kind)\n-\tgfc_convert_type (iter->stride, &iter->var->ts, 2);\n+\tgfc_convert_type (iter->stride, &iter->var->ts, 1);\n     }\n \n   for (iter = it; iter; iter = iter->next)"}, {"sha": "c85c864616b9660e7230bcbf3a2b2c7406d0b8c9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7298eef346ba82d3e4e0a97ffd50ffa6469272e8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7298eef346ba82d3e4e0a97ffd50ffa6469272e8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7298eef346ba82d3e4e0a97ffd50ffa6469272e8", "patch": "@@ -1,3 +1,8 @@\n+2011-11-09  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/50540\n+\t* gfortran.dg/forall_16.f90: New test.\n+\n 2011-11-09  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/38718"}, {"sha": "017aa5afdacea14b0109e5e0f804bb48c41dfd8d", "filename": "gcc/testsuite/gfortran.dg/forall_16.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7298eef346ba82d3e4e0a97ffd50ffa6469272e8/gcc%2Ftestsuite%2Fgfortran.dg%2Fforall_16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7298eef346ba82d3e4e0a97ffd50ffa6469272e8/gcc%2Ftestsuite%2Fgfortran.dg%2Fforall_16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fforall_16.f90?ref=7298eef346ba82d3e4e0a97ffd50ffa6469272e8", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+! PR fortran/50540\n+!\n+  implicit none\n+  integer i,dest(10)\n+  forall (i=2:ix)  dest(i)=i ! { dg-error \"has no IMPLICIT type\" }\n+end\n+\n+! { dg-excess-errors \"Can't convert UNKNOWN to INTEGER\" }"}]}