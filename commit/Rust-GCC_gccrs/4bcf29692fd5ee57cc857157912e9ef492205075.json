{"sha": "4bcf29692fd5ee57cc857157912e9ef492205075", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJjZjI5NjkyZmQ1ZWU1N2NjODU3MTU3OTEyZTllZjQ5MjIwNTA3NQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2019-12-12T10:03:11Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-12T10:03:11Z"}, "message": "[Ada] Fix processing of standard predefined operators\n\n2019-12-12  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb: Fix processing of standard predefined operators.\n\nFrom-SVN: r279296", "tree": {"sha": "8ddb41a19ff265a4c5f2b212341df8961225c09b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ddb41a19ff265a4c5f2b212341df8961225c09b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bcf29692fd5ee57cc857157912e9ef492205075", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bcf29692fd5ee57cc857157912e9ef492205075", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bcf29692fd5ee57cc857157912e9ef492205075", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bcf29692fd5ee57cc857157912e9ef492205075/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ddb677163af059a8b16f53d9f6ebaf7af774f0e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddb677163af059a8b16f53d9f6ebaf7af774f0e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddb677163af059a8b16f53d9f6ebaf7af774f0e3"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "49fdae76d969ebc41772eea859477c90ac4a74c2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bcf29692fd5ee57cc857157912e9ef492205075/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bcf29692fd5ee57cc857157912e9ef492205075/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4bcf29692fd5ee57cc857157912e9ef492205075", "patch": "@@ -1,3 +1,7 @@\n+2019-12-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb: Fix processing of standard predefined operators.\n+\n 2019-12-12  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* libgnarl/a-dispat.ads (Yield): Update Global contract."}, {"sha": "560f0f0a3f429c45893c71a8d6b3b4e2f1677f5c", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bcf29692fd5ee57cc857157912e9ef492205075/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bcf29692fd5ee57cc857157912e9ef492205075/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=4bcf29692fd5ee57cc857157912e9ef492205075", "patch": "@@ -8481,12 +8481,16 @@ package body Sem_Res is\n                --  matches that of the formals. For a predefined operqtor,\n                --  it is the scope that matters, given that the predefined\n                --  equality has Any_Type formals. In either case the result\n-               --  type (most often Booleam) must match the context .\n+               --  type (most often Booleam) must match the context .The\n+               --  scope is either that of the type if there is a generated\n+               --  equality (when there is an equality for the component type)\n+               --  or else Standard otherwise.\n \n                while Present (It.Typ) loop\n                   if Etype (It.Nam) = Typ\n                     and then\n                      (Etype (First_Entity (It.Nam)) = Etype (L)\n+                       or else Scope (It.Nam) = Standard_Standard\n                        or else Scope (It.Nam) = Scope (T))\n                   then\n                      Set_Entity (N, It.Nam);"}]}