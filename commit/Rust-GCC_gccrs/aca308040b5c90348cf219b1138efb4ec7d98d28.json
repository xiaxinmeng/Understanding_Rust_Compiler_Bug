{"sha": "aca308040b5c90348cf219b1138efb4ec7d98d28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNhMzA4MDQwYjVjOTAzNDhjZjIxOWIxMTM4ZWZiNGVjN2Q5OGQyOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-10-17T20:34:29Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-10-17T20:34:29Z"}, "message": "* gcc.dg/attr-alloc_size-11.c: UnXFAIL for visium-*-*.\n\nFrom-SVN: r253831", "tree": {"sha": "0a210e10e6b772f6842c761ba121c6369b9d3951", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a210e10e6b772f6842c761ba121c6369b9d3951"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aca308040b5c90348cf219b1138efb4ec7d98d28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aca308040b5c90348cf219b1138efb4ec7d98d28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aca308040b5c90348cf219b1138efb4ec7d98d28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aca308040b5c90348cf219b1138efb4ec7d98d28/comments", "author": null, "committer": null, "parents": [{"sha": "34311c5ee64df8dd6dbdaa6141adfe16534c1349", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34311c5ee64df8dd6dbdaa6141adfe16534c1349", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34311c5ee64df8dd6dbdaa6141adfe16534c1349"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "b731059a8cb5b4db322e9ad7849d3b308b36d451", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aca308040b5c90348cf219b1138efb4ec7d98d28/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aca308040b5c90348cf219b1138efb4ec7d98d28/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aca308040b5c90348cf219b1138efb4ec7d98d28", "patch": "@@ -1,3 +1,7 @@\n+2017-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.dg/attr-alloc_size-11.c: UnXFAIL for visium-*-*.\n+\n 2017-10-17  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/71821"}, {"sha": "6e1099551834b21071843de9eda6ed424082fb11", "filename": "gcc/testsuite/gcc.dg/attr-alloc_size-11.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aca308040b5c90348cf219b1138efb4ec7d98d28/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-alloc_size-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aca308040b5c90348cf219b1138efb4ec7d98d28/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-alloc_size-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-alloc_size-11.c?ref=aca308040b5c90348cf219b1138efb4ec7d98d28", "patch": "@@ -47,8 +47,8 @@ typedef __SIZE_TYPE__    size_t;\n \n /* The following tests fail because of missing range information.  The xfail\n    exclusions are PR79356.  */\n-TEST (signed char, SCHAR_MIN + 2, ALLOC_MAX);   /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" \"missing range info for signed char\" { xfail { ! { aarch64*-*-* arm*-*-* alpha*-*-* ia64-*-* mips*-*-* powerpc*-*-* sparc*-*-* s390*-*-* } } } } */\n-TEST (short, SHRT_MIN + 2, ALLOC_MAX); /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" \"missing range info for short\" { xfail { ! { aarch64*-*-* arm*-*-* alpha*-*-* ia64-*-* mips*-*-* powerpc*-*-* sparc*-*-* s390x-*-* } } } } */\n+TEST (signed char, SCHAR_MIN + 2, ALLOC_MAX);   /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" \"missing range info for signed char\" { xfail { ! { aarch64*-*-* arm*-*-* alpha*-*-* ia64-*-* mips*-*-* powerpc*-*-* sparc*-*-* s390*-*-* visium-*-* } } } } */\n+TEST (short, SHRT_MIN + 2, ALLOC_MAX); /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" \"missing range info for short\" { xfail { ! { aarch64*-*-* arm*-*-* alpha*-*-* ia64-*-* mips*-*-* powerpc*-*-* sparc*-*-* s390x-*-* visium-*-* } } } } */\n TEST (int, INT_MIN + 2, ALLOC_MAX);    /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" } */\n TEST (int, -3, ALLOC_MAX);             /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" } */\n TEST (int, -2, ALLOC_MAX);             /* { dg-warning \"argument 1 range \\\\\\[13, \\[0-9\\]+\\\\\\] exceeds maximum object size 12\" } */"}]}