{"sha": "4934454bed73a1a770ae7d4cf9b16df9c8c7a720", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkzNDQ1NGJlZDczYTFhNzcwYWU3ZDRjZjliMTZkZjljOGM3YTcyMA==", "commit": {"author": {"name": "Dorit Nuzman", "email": "dorit@il.ibm.com", "date": "2007-09-15T18:24:23Z"}, "committer": {"name": "Dorit Nuzman", "email": "dorit@gcc.gnu.org", "date": "2007-09-15T18:24:23Z"}, "message": "tree-vect-transform.c (vect_get_vec_defs_for_stmt_copy): check if the VEC is not NULL.\n\n        * tree-vect-transform.c (vect_get_vec_defs_for_stmt_copy): check if\n        the VEC is not NULL.\n        (vectorizable_type_demotion, vectorizable_type_promotion): Check that\n        get_vectype_for_scalar_type succeeded.\n        (vectorizable_conversion): Likewise.\n\nFrom-SVN: r128514", "tree": {"sha": "fdfb5ac34e4835967e8b7112ee680cce9fbb38c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdfb5ac34e4835967e8b7112ee680cce9fbb38c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4934454bed73a1a770ae7d4cf9b16df9c8c7a720", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4934454bed73a1a770ae7d4cf9b16df9c8c7a720", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4934454bed73a1a770ae7d4cf9b16df9c8c7a720", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4934454bed73a1a770ae7d4cf9b16df9c8c7a720/comments", "author": null, "committer": null, "parents": [{"sha": "8a0c568f7df0c9a9d48e437486b60c6daa53ead3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a0c568f7df0c9a9d48e437486b60c6daa53ead3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a0c568f7df0c9a9d48e437486b60c6daa53ead3"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "71a8ad96d63b9b58f17217fb4b35554032f0b7a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4934454bed73a1a770ae7d4cf9b16df9c8c7a720/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4934454bed73a1a770ae7d4cf9b16df9c8c7a720/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4934454bed73a1a770ae7d4cf9b16df9c8c7a720", "patch": "@@ -1,3 +1,11 @@\n+2007-09-15  Dorit Nuzman  <dorit@il.ibm.com>\n+\n+\t* tree-vect-transform.c (vect_get_vec_defs_for_stmt_copy): check if \n+\tthe VEC is not NULL.\n+\t(vectorizable_type_demotion, vectorizable_type_promotion): Check that \n+\tget_vectype_for_scalar_type succeeded.\n+\t(vectorizable_conversion): Likewise.\n+\n 2007-09-14  Jan Hubicka  <jh@suse.cz>\n \n \t* config/i386/i386.md (*floatdi<mode>2_i387): Guard against"}, {"sha": "073027f0ecf0d740d64b92e3c50c1a2df29461a3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4934454bed73a1a770ae7d4cf9b16df9c8c7a720/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4934454bed73a1a770ae7d4cf9b16df9c8c7a720/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4934454bed73a1a770ae7d4cf9b16df9c8c7a720", "patch": "@@ -1,3 +1,7 @@\n+2007-09-15  Dorit Nuzman  <dorit@il.ibm.com>\n+\n+\t* gcc.dg/vect/pr33373b.c: New test.\n+\n 2007-09-14  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/33438"}, {"sha": "c294a385c263be16f0e41a86e14cd65ccf33748a", "filename": "gcc/testsuite/gcc.dg/vect/pr33373b.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4934454bed73a1a770ae7d4cf9b16df9c8c7a720/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr33373b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4934454bed73a1a770ae7d4cf9b16df9c8c7a720/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr33373b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr33373b.c?ref=4934454bed73a1a770ae7d4cf9b16df9c8c7a720", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+void f (unsigned int *d, unsigned int *s, int w)\n+{\n+  int i;\n+  for (i = 0; i < w; ++i)\n+    d [i] = s [i] * (unsigned short) (~d [i] >> 24);\n+}\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "df4bd08f4cd1005bc81b1691d0b4550953767ece", "filename": "gcc/tree-vect-transform.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4934454bed73a1a770ae7d4cf9b16df9c8c7a720/gcc%2Ftree-vect-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4934454bed73a1a770ae7d4cf9b16df9c8c7a720/gcc%2Ftree-vect-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-transform.c?ref=4934454bed73a1a770ae7d4cf9b16df9c8c7a720", "patch": "@@ -1938,7 +1938,7 @@ vect_get_vec_defs_for_stmt_copy (enum vect_def_type *dt,\n   vec_oprnd = vect_get_vec_def_for_stmt_copy (dt[0], vec_oprnd);\n   VEC_quick_push (tree, *vec_oprnds0, vec_oprnd);\n \n-  if (vec_oprnds1)\n+  if (vec_oprnds1 && *vec_oprnds1)\n     {\n       vec_oprnd = VEC_pop (tree, *vec_oprnds1);\n       vec_oprnd = vect_get_vec_def_for_stmt_copy (dt[1], vec_oprnd);\n@@ -3309,11 +3309,15 @@ vectorizable_conversion (tree stmt, block_stmt_iterator *bsi,\n   op0 = TREE_OPERAND (operation, 0);\n   rhs_type = TREE_TYPE (op0);\n   vectype_in = get_vectype_for_scalar_type (rhs_type);\n+  if (!vectype_in)\n+    return false;\n   nunits_in = TYPE_VECTOR_SUBPARTS (vectype_in);\n \n   scalar_dest = GIMPLE_STMT_OPERAND (stmt, 0);\n   lhs_type = TREE_TYPE (scalar_dest);\n   vectype_out = get_vectype_for_scalar_type (lhs_type);\n+  if (!vectype_out)\n+    return false;\n   nunits_out = TYPE_VECTOR_SUBPARTS (vectype_out);\n \n   /* FORNOW */\n@@ -4083,10 +4087,14 @@ vectorizable_type_demotion (tree stmt, block_stmt_iterator *bsi,\n \n   op0 = TREE_OPERAND (operation, 0);\n   vectype_in = get_vectype_for_scalar_type (TREE_TYPE (op0));\n+  if (!vectype_in)\n+    return false;\n   nunits_in = TYPE_VECTOR_SUBPARTS (vectype_in);\n \n   scalar_dest = GIMPLE_STMT_OPERAND (stmt, 0);\n   vectype_out = get_vectype_for_scalar_type (TREE_TYPE (scalar_dest));\n+  if (!vectype_out)\n+    return false;\n   nunits_out = TYPE_VECTOR_SUBPARTS (vectype_out);\n   if (nunits_in != nunits_out / 2) /* FORNOW */\n     return false;\n@@ -4241,10 +4249,14 @@ vectorizable_type_promotion (tree stmt, block_stmt_iterator *bsi,\n \n   op0 = TREE_OPERAND (operation, 0);\n   vectype_in = get_vectype_for_scalar_type (TREE_TYPE (op0));\n+  if (!vectype_in)\n+    return false;\n   nunits_in = TYPE_VECTOR_SUBPARTS (vectype_in);\n \n   scalar_dest = GIMPLE_STMT_OPERAND (stmt, 0);\n   vectype_out = get_vectype_for_scalar_type (TREE_TYPE (scalar_dest));\n+  if (!vectype_out)\n+    return false;\n   nunits_out = TYPE_VECTOR_SUBPARTS (vectype_out);\n   if (nunits_out != nunits_in / 2) /* FORNOW */\n     return false;"}]}