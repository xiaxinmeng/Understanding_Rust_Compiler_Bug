{"sha": "7254e4eab9fa736b5a47fd44617b7604d83ff576", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI1NGU0ZWFiOWZhNzM2YjVhNDdmZDQ0NjE3Yjc2MDRkODNmZjU3Ng==", "commit": {"author": {"name": "Warren Levy", "email": "warrenl@cygnus.com", "date": "2000-06-13T23:44:05Z"}, "committer": {"name": "Warren Levy", "email": "warrenl@gcc.gnu.org", "date": "2000-06-13T23:44:05Z"}, "message": "Test for PR java.lang/258:\n\n\t* libjava.lang/Class_1.java: New file.\n\t* libjava.lang/Class_1.out: New file.\n\nFrom-SVN: r34532", "tree": {"sha": "d1f8636f0121d089548ceddfd77ecba259a1f824", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1f8636f0121d089548ceddfd77ecba259a1f824"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7254e4eab9fa736b5a47fd44617b7604d83ff576", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7254e4eab9fa736b5a47fd44617b7604d83ff576", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7254e4eab9fa736b5a47fd44617b7604d83ff576", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7254e4eab9fa736b5a47fd44617b7604d83ff576/comments", "author": null, "committer": null, "parents": [{"sha": "46327bc509a091ca9def304efd65b37110160d24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46327bc509a091ca9def304efd65b37110160d24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46327bc509a091ca9def304efd65b37110160d24"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "317ddfb28b274aa7f78c1d5581920d084aa7503f", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7254e4eab9fa736b5a47fd44617b7604d83ff576/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7254e4eab9fa736b5a47fd44617b7604d83ff576/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=7254e4eab9fa736b5a47fd44617b7604d83ff576", "patch": "@@ -1,3 +1,9 @@\n+2000-06-13  Warren Levy  <warrenl@cygnus.com>\n+\n+\tTest for PR java.lang/258:\n+\t* libjava.lang/Class_1.java: New file.\n+\t* libjava.lang/Class_1.out: New file.\n+\n 2000-05-29  Bryce McKinlay  <bryce@albatross.co.nz>\n \n \t* libjava.lang/PR242.java: New file. PR gcj/242."}, {"sha": "f2156ebff3009ea01f95bea868e14c021d8f3d4e", "filename": "libjava/testsuite/libjava.lang/Class_1.java", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7254e4eab9fa736b5a47fd44617b7604d83ff576/libjava%2Ftestsuite%2Flibjava.lang%2FClass_1.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7254e4eab9fa736b5a47fd44617b7604d83ff576/libjava%2Ftestsuite%2Flibjava.lang%2FClass_1.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FClass_1.java?ref=7254e4eab9fa736b5a47fd44617b7604d83ff576", "patch": "@@ -0,0 +1,49 @@\n+class C {}\n+class D extends C implements I {}\n+interface I {}\n+interface J extends I {}\n+\n+public class Class_1\n+{\n+  static void printIsAssignableFrom(Class a, Class b, boolean c)\n+    {\n+      // The field 'c' can be viewed to see the expected value.\n+      System.out.println(a.isAssignableFrom(b));\n+    }\n+\n+  public static void main (String arg[])\n+  {\n+    System.out.println(\"Testing class `Class_1'...\");\n+    printIsAssignableFrom(C.class, Object.class, false);\n+    printIsAssignableFrom(C.class, C.class, true);\n+    printIsAssignableFrom(C.class, D.class, true);\n+    printIsAssignableFrom(D.class, C.class, false);\n+\n+    printIsAssignableFrom(Object.class, int[].class, true);\n+    printIsAssignableFrom(int[].class, int[].class, true);\n+    printIsAssignableFrom(C[].class, D.class, false);\n+    printIsAssignableFrom(C[].class, D[].class, true);\n+    // Known compiler limitation prevents next case from compiling.\n+    // printIsAssignableFrom(C[].class, C[][].class, false);\n+    System.out.println(\"printIsAssignableFrom(C[].class, C[][].class, false);\" +\n+      \" case uncompilable due to known compiler limitation.\");\n+\n+    printIsAssignableFrom(Object.class, I.class, true);\n+    printIsAssignableFrom(I.class, I.class, true);\n+    printIsAssignableFrom(D.class, I.class, false);\n+    printIsAssignableFrom(I.class, D.class, true);\n+\n+    printIsAssignableFrom(D.class, J.class, false);\n+    printIsAssignableFrom(J.class, D.class, false);\n+\n+    printIsAssignableFrom(I.class, J.class, true);\n+    printIsAssignableFrom(J.class, J.class, true);\n+    printIsAssignableFrom(J.class, I.class, false);\n+\n+    // Returns true iff both Class objects are equal.\n+    printIsAssignableFrom(long.class, long.class, true);\n+\n+    // Does not work for primitive types in general.\n+    printIsAssignableFrom(long.class, int.class, false);\n+  }\n+}"}, {"sha": "6a5863ae1e1aed8480efd58ceb2576025b0da01d", "filename": "libjava/testsuite/libjava.lang/Class_1.out", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7254e4eab9fa736b5a47fd44617b7604d83ff576/libjava%2Ftestsuite%2Flibjava.lang%2FClass_1.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7254e4eab9fa736b5a47fd44617b7604d83ff576/libjava%2Ftestsuite%2Flibjava.lang%2FClass_1.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FClass_1.out?ref=7254e4eab9fa736b5a47fd44617b7604d83ff576", "patch": "@@ -0,0 +1,21 @@\n+Testing class `Class_1'...\n+false\n+true\n+true\n+false\n+true\n+true\n+false\n+true\n+printIsAssignableFrom(C[].class, C[][].class, false); case uncompilable due to known compiler limitation.\n+true\n+true\n+false\n+true\n+false\n+false\n+true\n+true\n+false\n+true\n+false"}]}