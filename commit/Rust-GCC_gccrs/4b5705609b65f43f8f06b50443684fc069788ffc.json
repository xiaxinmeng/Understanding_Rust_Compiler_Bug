{"sha": "4b5705609b65f43f8f06b50443684fc069788ffc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI1NzA1NjA5YjY1ZjQzZjhmMDZiNTA0NDM2ODRmYzA2OTc4OGZmYw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-06-27T05:37:52Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-06-27T05:37:52Z"}, "message": "dwarf2out.c: Remove trailing white spaces.\n\n2008-06-26  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* dwarf2out.c: Remove trailing white spaces.  Break long line\n\tin comments.\n\nFrom-SVN: r137169", "tree": {"sha": "7ebc84c9b42306b59fefed75d88316595f77330a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ebc84c9b42306b59fefed75d88316595f77330a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b5705609b65f43f8f06b50443684fc069788ffc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b5705609b65f43f8f06b50443684fc069788ffc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b5705609b65f43f8f06b50443684fc069788ffc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b5705609b65f43f8f06b50443684fc069788ffc/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d5add736edbaf02570a8d79de417e9961cf5f32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d5add736edbaf02570a8d79de417e9961cf5f32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d5add736edbaf02570a8d79de417e9961cf5f32"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "d16198ef85bbc1b14f9cda28ddad6f4228856b34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b5705609b65f43f8f06b50443684fc069788ffc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b5705609b65f43f8f06b50443684fc069788ffc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b5705609b65f43f8f06b50443684fc069788ffc", "patch": "@@ -1,3 +1,8 @@\n+2008-06-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* dwarf2out.c: Remove trailing white spaces.  Break long line\n+\tin comments.\n+\n 2008-06-26  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* libfuncs.h (LTI_synchronize): New libfunc_index."}, {"sha": "80bdc0a4bb0eaf63ec5cc6e20ab78c7a294c1d96", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b5705609b65f43f8f06b50443684fc069788ffc/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b5705609b65f43f8f06b50443684fc069788ffc/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=4b5705609b65f43f8f06b50443684fc069788ffc", "patch": "@@ -4280,7 +4280,7 @@ static int type_is_enum (const_tree);\n static unsigned int dbx_reg_number (const_rtx);\n static void add_loc_descr_op_piece (dw_loc_descr_ref *, int);\n static dw_loc_descr_ref reg_loc_descriptor (rtx, enum var_init_status);\n-static dw_loc_descr_ref one_reg_loc_descriptor (unsigned int, \n+static dw_loc_descr_ref one_reg_loc_descriptor (unsigned int,\n \t\t\t\t\t\tenum var_init_status);\n static dw_loc_descr_ref multiple_reg_loc_descriptor (rtx, rtx,\n \t\t\t\t\t\t     enum var_init_status);\n@@ -8910,7 +8910,7 @@ one_reg_loc_descriptor (unsigned int regno, enum var_init_status initialized)\n    designates a value that spans more than one register.  */\n \n static dw_loc_descr_ref\n-multiple_reg_loc_descriptor (rtx rtl, rtx regs, \n+multiple_reg_loc_descriptor (rtx rtl, rtx regs,\n \t\t\t     enum var_init_status initialized)\n {\n   int nregs, size, i;\n@@ -9298,7 +9298,7 @@ mem_loc_descriptor (rtx rtl, enum machine_mode mode,\n       break;\n \n     case CONCATN:\n-      mem_loc_result = concatn_mem_loc_descriptor (rtl, mode, \n+      mem_loc_result = concatn_mem_loc_descriptor (rtl, mode,\n \t\t\t\t\t\t   VAR_INIT_STATUS_INITIALIZED);\n       break;\n \n@@ -9529,7 +9529,7 @@ loc_descriptor_from_tree_1 (tree loc, int want_address)\n \t      first_op = DW_OP_addr;\n \t      second_op = DW_OP_form_tls_address;\n \t    }\n-\t  \n+\n \t  rtl = rtl_for_decl_location (loc);\n \t  if (rtl == NULL_RTX)\n \t    return 0;\n@@ -9543,7 +9543,7 @@ loc_descriptor_from_tree_1 (tree loc, int want_address)\n \t  ret = new_loc_descr (first_op, 0, 0);\n \t  ret->dw_loc_oprnd1.val_class = dw_val_class_addr;\n \t  ret->dw_loc_oprnd1.v.val_addr = rtl;\n-\t  \n+\n \t  ret1 = new_loc_descr (second_op, 0, 0);\n \t  add_loc_descr (&ret, ret1);\n \n@@ -10887,7 +10887,7 @@ add_location_or_const_value_attribute (dw_die_ref die, tree decl,\n \t    enum var_init_status initialized =\n \t      NOTE_VAR_LOCATION_STATUS (node->var_loc_note);\n \t    varloc = NOTE_VAR_LOCATION (node->var_loc_note);\n-\t    add_loc_descr_to_loc_list (&list, \n+\t    add_loc_descr_to_loc_list (&list,\n \t\t\t\t       loc_descriptor (varloc, initialized),\n \t\t\t\t       node->label, node->next->label, secname);\n \t  }\n@@ -10909,7 +10909,7 @@ add_location_or_const_value_attribute (dw_die_ref die, tree decl,\n \t\t\t\t\t   current_function_funcdef_no);\n \t      endname = ggc_strdup (label_id);\n \t    }\n-\t  add_loc_descr_to_loc_list (&list, \n+\t  add_loc_descr_to_loc_list (&list,\n \t\t\t\t     loc_descriptor (varloc, initialized),\n \t\t\t\t     node->label, endname, secname);\n \t}\n@@ -14154,13 +14154,13 @@ static void\n dwarf2out_global_decl (tree decl)\n {\n   /* Output DWARF2 information for file-scope tentative data object\n-     declarations, file-scope (extern) function declarations (which had no\n-     corresponding body) and file-scope tagged type declarations and\n-     definitions which have not yet been forced out.\n+     declarations, file-scope (extern) function declarations (which\n+     had no corresponding body) and file-scope tagged type declarations\n+     and definitions which have not yet been forced out.\n \n-     Ignore the global decl of any Fortran COMMON blocks which also wind up here\n-     though they have already been described in the local scope for the \n-     procedures using them.  */\n+     Ignore the global decl of any Fortran COMMON blocks which also\n+     wind up here though they have already been described in the local\n+     scope for the procedures using them.  */\n   if (TREE_CODE (decl) == VAR_DECL\n       && TREE_PUBLIC (decl) && TREE_STATIC (decl) && is_fortran ())\n     return;"}]}