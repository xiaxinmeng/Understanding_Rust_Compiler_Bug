{"sha": "f2be3ce484398bc0aa55714fa069fd1bbd61d894", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJiZTNjZTQ4NDM5OGJjMGFhNTU3MTRmYTA2OWZkMWJiZDYxZDg5NA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-10-25T19:29:10Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-10-25T19:29:10Z"}, "message": "utils2.c: Include flags.h and remove prototypes.\n\n\t* gcc-interface/utils2.c: Include flags.h and remove prototypes.\n\t(build_unary_op) <TRUTH_NOT_EXPR>: When not optimizing, fold the result\n\tof the call to invert_truthvalue_loc.\n\t* gcc-interface/Make-lang.in (utils2.o): Add $(FLAGS_H).\n\nFrom-SVN: r165928", "tree": {"sha": "c5d5d07a5dd6ae510ee695debbf6305c1e603568", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5d5d07a5dd6ae510ee695debbf6305c1e603568"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2be3ce484398bc0aa55714fa069fd1bbd61d894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2be3ce484398bc0aa55714fa069fd1bbd61d894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2be3ce484398bc0aa55714fa069fd1bbd61d894", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2be3ce484398bc0aa55714fa069fd1bbd61d894/comments", "author": null, "committer": null, "parents": [{"sha": "4d138338207c43831fb4de7e1183efbbcad1f517", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d138338207c43831fb4de7e1183efbbcad1f517", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d138338207c43831fb4de7e1183efbbcad1f517"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "3ab14974838a30699d08c2bb92705ba87021bbbd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2be3ce484398bc0aa55714fa069fd1bbd61d894/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2be3ce484398bc0aa55714fa069fd1bbd61d894/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f2be3ce484398bc0aa55714fa069fd1bbd61d894", "patch": "@@ -1,3 +1,10 @@\n+2010-10-25  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/utils2.c: Include flags.h and remove prototypes.\n+\t(build_unary_op) <TRUTH_NOT_EXPR>: When not optimizing, fold the result\n+\tof the call to invert_truthvalue_loc.\n+\t* gcc-interface/Make-lang.in (utils2.o): Add $(FLAGS_H).\n+\n 2010-10-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils.c (update_pointer_to): Clear TYPE_POINTER_TO and"}, {"sha": "578f9f26faa281499ed48a724582a1836c135323", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2be3ce484398bc0aa55714fa069fd1bbd61d894/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2be3ce484398bc0aa55714fa069fd1bbd61d894/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=f2be3ce484398bc0aa55714fa069fd1bbd61d894", "patch": "@@ -1264,7 +1264,7 @@ ada/utils.o : ada/gcc-interface/utils.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n \n ada/utils2.o : ada/gcc-interface/utils2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) output.h $(TREE_INLINE_H) \\\n+   $(TM_H) $(TREE_H) $(FLAGS_H) output.h $(TREE_INLINE_H) \\\n    ada/gcc-interface/ada.h ada/types.h ada/atree.h ada/elists.h ada/namet.h \\\n    ada/nlists.h ada/snames.h ada/stringt.h ada/uintp.h ada/fe.h ada/sinfo.h \\\n    ada/einfo.h $(ADA_TREE_H) ada/gcc-interface/gigi.h"}, {"sha": "4c0853ea0ffbdf95c1d35671d953b1e628b94f96", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2be3ce484398bc0aa55714fa069fd1bbd61d894/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2be3ce484398bc0aa55714fa069fd1bbd61d894/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=f2be3ce484398bc0aa55714fa069fd1bbd61d894", "patch": "@@ -28,6 +28,7 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"flags.h\"\n #include \"ggc.h\"\n #include \"output.h\"\n #include \"tree-inline.h\"\n@@ -47,11 +48,6 @@\n #include \"ada-tree.h\"\n #include \"gigi.h\"\n \n-static tree find_common_type (tree, tree);\n-static tree compare_arrays (tree, tree, tree);\n-static tree nonbinary_modular_operation (enum tree_code, tree, tree, tree);\n-static tree build_simple_component_ref (tree, tree, tree, bool);\n-\f\n /* Return the base type of TYPE.  */\n \n tree\n@@ -1024,6 +1020,11 @@ build_unary_op (enum tree_code op_code, tree result_type, tree operand)\n       gcc_assert (TREE_CODE (get_base_type (result_type)) == BOOLEAN_TYPE);\n #endif\n       result = invert_truthvalue_loc (EXPR_LOCATION (operand), operand);\n+      /* When not optimizing, fold the result as invert_truthvalue_loc\n+\t doesn't fold the result of comparisons.  This is intended to undo\n+\t the trick used for boolean rvalues in gnat_to_gnu.  */\n+      if (!optimize)\n+\tresult = fold (result);\n       break;\n \n     case ATTR_ADDR_EXPR:"}]}