{"sha": "4fa6356be14414957be05bdf5e22037fe1bea283", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZhNjM1NmJlMTQ0MTQ5NTdiZTA1YmRmNWUyMjAzN2ZlMWJlYTI4Mw==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-03-09T22:52:36Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-03-10T23:52:50Z"}, "message": "aix: align double complex\n\nAIX word-aligns floating point doubles.  This behavior also extends to\ndouble _Complex, which had been overlooked when compiler support for\ndouble _Complex was added.\n\nThis patch adds DCmode to the modes whose alignment is adjusted and\nadds a testcase to confirm the correct alignment.\n\ngcc/ChangeLog:\n\n2021-03-10  David Edelsohn  <dje.gcc@gmail.com>\n\n\tPR target/99492\n\t* config/rs6000/aix.h (ADJUST_FIELD_ALIGN): Add check for DCmode.\n\t* config/rs6000/rs6000.c (rs6000_special_round_type_align): Same.\n\ngcc/testsuite/ChangeLog:\n\n2021-03-10  David Edelsohn  <dje.gcc@gmail.com>\n\n\tPR target/99492\n\t* gcc.target/powerpc/pr99492.c: New testcase.", "tree": {"sha": "9633995df16c876eedf1b570016ed91be3698d56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9633995df16c876eedf1b570016ed91be3698d56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fa6356be14414957be05bdf5e22037fe1bea283", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fa6356be14414957be05bdf5e22037fe1bea283", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fa6356be14414957be05bdf5e22037fe1bea283", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fa6356be14414957be05bdf5e22037fe1bea283/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c21bc6646dbe3365d7f89843a79eee823aa3b52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c21bc6646dbe3365d7f89843a79eee823aa3b52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c21bc6646dbe3365d7f89843a79eee823aa3b52"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "2db50c8007f112ef89b6a0e43124b0947cdd94f6", "filename": "gcc/config/rs6000/aix.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fa6356be14414957be05bdf5e22037fe1bea283/gcc%2Fconfig%2Frs6000%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fa6356be14414957be05bdf5e22037fe1bea283/gcc%2Fconfig%2Frs6000%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.h?ref=4fa6356be14414957be05bdf5e22037fe1bea283", "patch": "@@ -224,7 +224,8 @@\n /* AIX word-aligns FP doubles but doubleword-aligns 64-bit ints.  */\n #define ADJUST_FIELD_ALIGN(FIELD, TYPE, COMPUTED) \\\n   ((TARGET_ALIGN_NATURAL == 0\t\t\t\t\t\t\\\n-    && TYPE_MODE (strip_array_types (TYPE)) == DFmode)\t\t\t\\\n+    && (TYPE_MODE (strip_array_types (TYPE)) == DFmode\t\t\t\\\n+\t|| TYPE_MODE (strip_array_types (TYPE)) == DCmode))\t\t\\\n    ? MIN ((COMPUTED), 32)\t\t\t\t\t\t\\\n    : (COMPUTED))\n "}, {"sha": "35ecf5ac9ab76f1e3d6f6576d165c376697a724b", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fa6356be14414957be05bdf5e22037fe1bea283/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fa6356be14414957be05bdf5e22037fe1bea283/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=4fa6356be14414957be05bdf5e22037fe1bea283", "patch": "@@ -7855,7 +7855,8 @@ rs6000_special_round_type_align (tree type, unsigned int computed,\n       while (TREE_CODE (type) == ARRAY_TYPE)\n \ttype = TREE_TYPE (type);\n \n-      if (type != error_mark_node && TYPE_MODE (type) == DFmode)\n+      if (type != error_mark_node\n+\t  && (TYPE_MODE (type) == DFmode || TYPE_MODE (type) == DCmode))\n \talign = MAX (align, 64);\n     }\n "}, {"sha": "ae36cb3baf7f039aa0b17f7cf1e32a525bb9d75c", "filename": "gcc/testsuite/gcc.target/powerpc/pr99492.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fa6356be14414957be05bdf5e22037fe1bea283/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr99492.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fa6356be14414957be05bdf5e22037fe1bea283/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr99492.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr99492.c?ref=4fa6356be14414957be05bdf5e22037fe1bea283", "patch": "@@ -0,0 +1,50 @@\n+/* { dg-do run { target { powerpc*-ibm-aix* } } } */\n+/* { dg-options \"\" } */\n+\n+void abort (void);\n+\n+struct A {\n+    double _Complex a[64];\n+};\n+\n+struct B {\n+    double b[64];\n+};\n+\n+struct C {\n+    char c1;\n+    double _Complex c2;\n+};\n+\n+struct D {\n+    char c1;\n+    double c2;\n+};\n+\n+int main() {   \n+  if (__alignof(double _Complex) != 8)\n+    abort();\n+\n+  if (__alignof(struct A) != 8)\n+    abort;\n+\n+  if (__alignof(struct C) != 4)\n+    abort;\n+\n+  if (__builtin_offsetof(struct C, c2) != 4)\n+    abort();\n+\n+  if (__alignof(double) != 8)\n+    abort();\n+\n+  if (__alignof(struct B) != 8)\n+    abort();\n+\n+  if (__alignof(struct D) != 4)\n+    abort();\n+\n+  if (__builtin_offsetof(struct D, c2) != 4)\n+    abort();\n+\n+  return 0;\n+}"}]}