{"sha": "ba57a9c052405d4a7912498bdb00a8be346a514e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE1N2E5YzA1MjQwNWQ0YTc5MTI0OThiZGIwMGE4YmUzNDZhNTE0ZQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2002-07-02T22:28:18Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-07-02T22:28:18Z"}, "message": "cppinit.c (cpp_handle_option): Suppress warnings with an implicit \"-w\" for \"-M\" and \"-MM\".\n\n\t* cppinit.c (cpp_handle_option):  Suppress warnings with an\n\timplicit \"-w\" for \"-M\" and \"-MM\".\n\nFrom-SVN: r55195", "tree": {"sha": "50a56a3007a634eb2f3f9e7037c166db420209e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50a56a3007a634eb2f3f9e7037c166db420209e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba57a9c052405d4a7912498bdb00a8be346a514e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba57a9c052405d4a7912498bdb00a8be346a514e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba57a9c052405d4a7912498bdb00a8be346a514e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba57a9c052405d4a7912498bdb00a8be346a514e/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6fb43ab3e59a0a4d9063daed96812eeb5a9fb47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6fb43ab3e59a0a4d9063daed96812eeb5a9fb47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6fb43ab3e59a0a4d9063daed96812eeb5a9fb47"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "5b75217644cc0a204492d6ffbab86fc982c8b4f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba57a9c052405d4a7912498bdb00a8be346a514e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba57a9c052405d4a7912498bdb00a8be346a514e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba57a9c052405d4a7912498bdb00a8be346a514e", "patch": "@@ -29,6 +29,7 @@ Tue Jul  2 18:45:45 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n 2002-07-02  Neil Booth  <neil@daikokuya.co.uk>\n \n+\tPR preprocessor/7029\n \t* cppinit.c (cpp_handle_option):  Suppress warnings with an\n \timplicit \"-w\" for \"-M\" and \"-MM\".\n \t* doc/cppopts.texi: Update."}, {"sha": "db1314dd8f30544e313fcf9722aa163e6bcef36a", "filename": "gcc/cppinit.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba57a9c052405d4a7912498bdb00a8be346a514e/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba57a9c052405d4a7912498bdb00a8be346a514e/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=ba57a9c052405d4a7912498bdb00a8be346a514e", "patch": "@@ -1532,10 +1532,12 @@ cpp_handle_option (pfile, argc, argv)\n \t     or environment var dependency generation is used.  */\n \t  CPP_OPTION (pfile, print_deps) = 2;\n \t  CPP_OPTION (pfile, no_output) = 1;\n+\t  CPP_OPTION (pfile, inhibit_warnings) = 1;\n \t  break;\n \tcase OPT_MM:\n \t  CPP_OPTION (pfile, print_deps) = 1;\n \t  CPP_OPTION (pfile, no_output) = 1;\n+\t  CPP_OPTION (pfile, inhibit_warnings) = 1;\n \t  break;\n \tcase OPT_MF:\n \t  CPP_OPTION (pfile, deps_file) = arg;\n@@ -1794,32 +1796,30 @@ cpp_post_options (pfile)\n   if (CPP_OPTION (pfile, traditional))\n     CPP_OPTION (pfile, show_column) = 0;\n \n-  /* -dM makes no normal output.  This is set here so that -dM -dD\n-     works as expected.  */\n+  /* -dM and dependencies suppress normal output; do it here so that\n+     the last -d[MDN] switch overrides earlier ones.  */\n   if (CPP_OPTION (pfile, dump_macros) == dump_only)\n     CPP_OPTION (pfile, no_output) = 1;\n \n-  /* Disable -dD, -dN and -dI if we should make no normal output\n-     (such as with -M). Allow -M -dM since some software relies on\n-     this.  */\n+  /* Disable -dD, -dN and -dI if normal output is suppressed.  Allow\n+     -dM since at least glibc relies on -M -dM to work.  */\n   if (CPP_OPTION (pfile, no_output))\n     {\n       if (CPP_OPTION (pfile, dump_macros) != dump_only)\n \tCPP_OPTION (pfile, dump_macros) = dump_none;\n       CPP_OPTION (pfile, dump_includes) = 0;\n     }\n \n-  /* We need to do this after option processing and before\n-     cpp_start_read, as cppmain.c relies on the options->no_output to\n-     set its callbacks correctly before calling cpp_start_read.  */\n+  /* Intialize, and check environment variables for, dependency\n+     output.  */\n   init_dependency_output (pfile);\n \n-  /* After checking the environment variables, check if -M or -MM has\n-     not been specified, but other -M options have.  */\n-  if (CPP_OPTION (pfile, print_deps) == 0 &&\n-      (CPP_OPTION (pfile, print_deps_missing_files)\n-       || CPP_OPTION (pfile, deps_file)\n-       || CPP_OPTION (pfile, deps_phony_targets)))\n+  /* If we're not outputting dependencies, complain if other -M\n+     options have been given.  */\n+  if (!CPP_OPTION (pfile, print_deps)\n+      && (CPP_OPTION (pfile, print_deps_missing_files)\n+\t  || CPP_OPTION (pfile, deps_file)\n+\t  || CPP_OPTION (pfile, deps_phony_targets)))\n     cpp_error (pfile, DL_ERROR,\n \t       \"you must additionally specify either -M or -MM\");\n }"}]}