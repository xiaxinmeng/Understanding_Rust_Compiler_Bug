{"sha": "aea625ddaee76c08abeb3d1eccd7bcd63dc455de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVhNjI1ZGRhZWU3NmMwOGFiZWIzZDFlY2NkN2JjZDYzZGM0NTVkZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2006-02-17T16:05:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-17T16:05:46Z"}, "message": "re PR ada/26315 (ACATS failures c43208b c85006a c85006d cd92001)\n\n2006-02-17  Eric Botcazou  <botcazou@adacore.com>\n\n\tPR ada/26315\n\n\t* utils2.c (find_common_type): If both input types are BLKmode and\n\thave the same constant size, keep using the first one.\n\n\t* bindgen.adb: (Gen_Versions_Ada): Revert previous workaround.\n\n\t* decl.c (gnat_to_gnu_entity): Only check TREE_OVERFLOW for a constant.\n\n\t* misc.c (gnat_handle_option): New case for -Woverlength-strings.\n\nFrom-SVN: r111183", "tree": {"sha": "04e5ca2a80a1640835e53e495bd47c66b25f210d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04e5ca2a80a1640835e53e495bd47c66b25f210d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aea625ddaee76c08abeb3d1eccd7bcd63dc455de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aea625ddaee76c08abeb3d1eccd7bcd63dc455de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aea625ddaee76c08abeb3d1eccd7bcd63dc455de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aea625ddaee76c08abeb3d1eccd7bcd63dc455de/comments", "author": null, "committer": null, "parents": [{"sha": "69e6a03e46224219467e99564de4f370656931a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69e6a03e46224219467e99564de4f370656931a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69e6a03e46224219467e99564de4f370656931a5"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "0b595fe044c310dad76ffe558102d35f18e3844a", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aea625ddaee76c08abeb3d1eccd7bcd63dc455de/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aea625ddaee76c08abeb3d1eccd7bcd63dc455de/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=aea625ddaee76c08abeb3d1eccd7bcd63dc455de", "patch": "@@ -2538,13 +2538,7 @@ package body Bindgen is\n       end loop;\n \n       WBI (\"\");\n-\n-      --  We used to have more complex code: Ubuf := \"u00000\";\n-      --  which was being miscompiled, so use simpler code instead:\n-\n-      for J in Ubuf'First + 1 .. Ubuf'Last loop\n-         Ubuf (J) := '0';\n-      end loop;\n+      Ubuf := \"u00000\";\n \n       for U in Units.First .. Units.Last loop\n          Increment_Ubuf;"}, {"sha": "2144ff2080246b9103db0d227c061cb7b6c37ae2", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aea625ddaee76c08abeb3d1eccd7bcd63dc455de/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aea625ddaee76c08abeb3d1eccd7bcd63dc455de/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=aea625ddaee76c08abeb3d1eccd7bcd63dc455de", "patch": "@@ -3435,6 +3435,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t   a function that returns that type.  This usage doesn't make\n \t   sense anyway, so give an error here.  */\n \tif (TYPE_SIZE_UNIT (gnu_return_type)\n+\t    && TREE_CONSTANT (TYPE_SIZE_UNIT (gnu_return_type))\n \t    && TREE_OVERFLOW (TYPE_SIZE_UNIT (gnu_return_type)))\n \t  {\n \t    post_error (\"cannot return type whose size overflows\","}, {"sha": "3c4e8cba33d2de169fe0b5e307abe74cb789965d", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aea625ddaee76c08abeb3d1eccd7bcd63dc455de/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aea625ddaee76c08abeb3d1eccd7bcd63dc455de/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=aea625ddaee76c08abeb3d1eccd7bcd63dc455de", "patch": "@@ -286,6 +286,7 @@ gnat_handle_option (size_t scode, const char *arg, int value ATTRIBUTE_UNUSED)\n     case OPT_Wvariadic_macros:\n     case OPT_Wold_style_definition:\n     case OPT_Wmissing_format_attribute:\n+    case OPT_Woverlength_strings:\n       break;\n \n       /* This is handled by the front-end.  */"}, {"sha": "ee8dec57d4385b9835cc3fe9c716c1a64897d21e", "filename": "gcc/ada/utils2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aea625ddaee76c08abeb3d1eccd7bcd63dc455de/gcc%2Fada%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aea625ddaee76c08abeb3d1eccd7bcd63dc455de/gcc%2Fada%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils2.c?ref=aea625ddaee76c08abeb3d1eccd7bcd63dc455de", "patch": "@@ -232,9 +232,10 @@ find_common_type (tree t1, tree t2)\n   else if (TYPE_MODE (t2) != BLKmode)\n     return t2;\n \n-  /* If both types have constant size, use the smaller one.  */\n+  /* If both types have constant size, use the smaller one.  Keep returning\n+     T1 if we have a tie, to be consistent with the other cases.  */\n   if (TREE_CONSTANT (TYPE_SIZE (t1)) && TREE_CONSTANT (TYPE_SIZE (t2)))\n-    return tree_int_cst_lt (TYPE_SIZE (t1), TYPE_SIZE (t2)) ? t1 : t2;\n+    return tree_int_cst_lt (TYPE_SIZE (t2), TYPE_SIZE (t1)) ? t2 : t1;\n \n   /* Otherwise, if either type has a constant size, use it.  */\n   else if (TREE_CONSTANT (TYPE_SIZE (t1)))"}]}