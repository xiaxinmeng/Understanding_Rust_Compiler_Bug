{"sha": "4d01c30fb52de3af8ebfda893e84a61563f6b78a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQwMWMzMGZiNTJkZTNhZjhlYmZkYTg5M2U4NGE2MTU2M2Y2Yjc4YQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-28T19:01:21Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-28T19:01:21Z"}, "message": "(GO_IF_LEGITIMATE_INDEX): Check explicitly for\nupper and lower bounds of valid INDEX.\n\nFrom-SVN: r4584", "tree": {"sha": "96da3e9f8d216ab77581f93b17c0c946941ebc4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96da3e9f8d216ab77581f93b17c0c946941ebc4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d01c30fb52de3af8ebfda893e84a61563f6b78a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d01c30fb52de3af8ebfda893e84a61563f6b78a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d01c30fb52de3af8ebfda893e84a61563f6b78a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d01c30fb52de3af8ebfda893e84a61563f6b78a/comments", "author": null, "committer": null, "parents": [{"sha": "6e498949dba764fa067f14f5d03b763bebda905d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e498949dba764fa067f14f5d03b763bebda905d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e498949dba764fa067f14f5d03b763bebda905d"}], "stats": {"total": 53, "additions": 28, "deletions": 25}, "files": [{"sha": "2f2658355dd0947b81027c20cb28040930d4cd96", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 28, "deletions": 25, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d01c30fb52de3af8ebfda893e84a61563f6b78a/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d01c30fb52de3af8ebfda893e84a61563f6b78a/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=4d01c30fb52de3af8ebfda893e84a61563f6b78a", "patch": "@@ -678,31 +678,34 @@ enum reg_class\n /* A C statement (sans semicolon) to jump to LABEL for legitimate index RTXs\n    used by the macro GO_IF_LEGITIMATE_ADDRESS.  Floating point indices can\n    only be small constants. */\n-#define GO_IF_LEGITIMATE_INDEX(MODE, BASE_REGNO, INDEX, LABEL)  \\\n-do \\\n-{\t\t\t\t\t\t\t\t\t\t      \\\n-  int range;\t\t\t\t\t\t\t\t\t      \\\n-\t\t\t\t\t\t\t\t\t\t      \\\n-  if (GET_MODE_CLASS (MODE) == MODE_FLOAT)\t\t\t\t\t      \\\n-    range = 1024;\t\t\t\t\t\t\t\t      \\\n-  else\t\t\t\t\t\t\t\t\t\t      \\\n-    {\t\t\t\t\t\t\t\t\t\t      \\\n-      if (INDEX_REGISTER_RTX_P (INDEX))\t\t\t\t\t\t      \\\n-\tgoto LABEL;\t\t\t\t\t\t\t\t      \\\n-      if (GET_MODE_SIZE (MODE) <= 4  &&  GET_CODE (INDEX) == MULT)\t\t      \\\n-\t{\t\t\t\t\t\t\t\t\t      \\\n-\t  rtx xiop0 = XEXP (INDEX, 0);\t\t\t\t\t\t      \\\n-\t  rtx xiop1 = XEXP (INDEX, 1);\t\t\t\t\t\t      \\\n-\t  if (INDEX_REGISTER_RTX_P (xiop0) &&  power_of_two_operand (xiop1, SImode))  \\\n-\t    goto LABEL;\t\t\t\t\t\t\t\t      \\\n-\t  if (INDEX_REGISTER_RTX_P (xiop1) &&  power_of_two_operand (xiop0, SImode))  \\\n-\t    goto LABEL;\t\t\t\t\t\t\t\t      \\\n-\t}\t\t\t\t\t\t\t\t\t      \\\n-      range = 4096;\t\t\t\t\t\t\t\t      \\\n-    }\t\t\t\t\t\t\t\t\t\t      \\\n-\t\t\t\t\t\t\t\t\t\t      \\\n-    if (GET_CODE (INDEX) == CONST_INT && abs (INTVAL (INDEX)) < range)  \t      \\\n-      goto LABEL;\t\t\t\t\t\t\t\t      \\\n+#define GO_IF_LEGITIMATE_INDEX(MODE, BASE_REGNO, INDEX, LABEL)\t\t\\\n+do\t\t\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  int range;\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  if (GET_MODE_CLASS (MODE) == MODE_FLOAT)\t\t\t\t\\\n+    range = 1024;\t\t\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      if (INDEX_REGISTER_RTX_P (INDEX))\t\t\t\t\t\\\n+\tgoto LABEL;\t\t\t\t\t\t\t\\\n+      if (GET_MODE_SIZE (MODE) <= 4  &&  GET_CODE (INDEX) == MULT)\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  rtx xiop0 = XEXP (INDEX, 0);\t\t\t\t\t\\\n+\t  rtx xiop1 = XEXP (INDEX, 1);\t\t\t\t\t\\\n+\t  if (INDEX_REGISTER_RTX_P (xiop0)\t\t\t\t\\\n+\t      && power_of_two_operand (xiop1, SImode))\t\t\t\\\n+\t    goto LABEL;\t\t\t\t\t\t\t\\\n+\t  if (INDEX_REGISTER_RTX_P (xiop1)\t\t\t\t\\\n+\t      && power_of_two_operand (xiop0, SImode))\t\t\t\\\n+\t    goto LABEL;\t\t\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+      range = 4096;\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    if (GET_CODE (INDEX) == CONST_INT && INTVAL (INDEX) < range\t\t\\\n+\t&& INTVAL (INDEX) > -range)\t\t\t\t\t\\\n+      goto LABEL;\t\t\t\t\t\t\t\\\n } while (0)\n \n /* Jump to LABEL if X is a valid address RTX.  This must also take"}]}