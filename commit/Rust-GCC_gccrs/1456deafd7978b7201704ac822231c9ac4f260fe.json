{"sha": "1456deafd7978b7201704ac822231c9ac4f260fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ1NmRlYWZkNzk3OGI3MjAxNzA0YWM4MjIyMzFjOWFjNGYyNjBmZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-10-09T05:44:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-10-09T05:44:57Z"}, "message": "stmt.c (resolve_asm_operand_names): Call check_unique_operand_names here.\n\n        * stmt.c (resolve_asm_operand_names): Call check_unique_operand_names\n        here.\n        (expand_asm_operands): Not here.\n        (parse_input_constraint): No longer static.\n        * tree.h: Declare it.\n\n        * coverage.c (build_ctr_info_value): Use build_decl to make a\n        VAR_DECL.\n        (create_coverage): Likewise.\njava/\n        * parse.y (patch_assignment): Use make_node to create a BLOCK.\n        * parse.h (BUILD_PTR_FROM_NAME): Use make_node to create a\n        POINTER_TYPE.\ncp/\n        * tree.c (build_cplus_new): Use build_decl to create a VAR_DECL.\n        (build_target_expr_with_type): Likewise.\n\n        * pt.c (instantiate_class_template): Sanity check that our\n        enclosing class has been instantiated.\n\nFrom-SVN: r72255", "tree": {"sha": "4afd5b15eb7fe41b0e949cd004d55cb26834adbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4afd5b15eb7fe41b0e949cd004d55cb26834adbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1456deafd7978b7201704ac822231c9ac4f260fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1456deafd7978b7201704ac822231c9ac4f260fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1456deafd7978b7201704ac822231c9ac4f260fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1456deafd7978b7201704ac822231c9ac4f260fe/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "08cffcce0f0569711be8949bbaf579a54264b9ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08cffcce0f0569711be8949bbaf579a54264b9ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08cffcce0f0569711be8949bbaf579a54264b9ce"}], "stats": {"total": 64, "additions": 50, "deletions": 14}, "files": [{"sha": "32165693ab110fd29c11f411d5efd23c0b6dc6f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1456deafd7978b7201704ac822231c9ac4f260fe", "patch": "@@ -1,3 +1,15 @@\n+2003-10-09  Jason Merrill  <jason@redhat.com>\n+\n+\t* coverage.c (build_ctr_info_value): Use build_decl to make a\n+\tVAR_DECL.\n+\t(create_coverage): Likewise.\n+\n+\t* stmt.c (resolve_asm_operand_names): Call check_unique_operand_names\n+\there.\n+\t(expand_asm_operands): Not here.\n+\t(parse_input_constraint): No longer static.\n+\t* tree.h: Declare it.\n+\n 2003-10-08  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/t-linux (SHLIB_LINK): Override to use a linker script"}, {"sha": "b02c97c15d652a1702b331a934b3eefd19d74f50", "filename": "gcc/coverage.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=1456deafd7978b7201704ac822231c9ac4f260fe", "patch": "@@ -637,7 +637,7 @@ build_ctr_info_value (unsigned int counter, tree type)\n       array_type = build_array_type (TREE_TYPE (TREE_TYPE (fields)),\n \t\t\t\t     array_type);\n \n-      array = build (VAR_DECL, array_type, NULL_TREE, NULL_TREE);\n+      array = build_decl (VAR_DECL, NULL_TREE, array_type);\n       TREE_STATIC (array) = 1;\n       DECL_NAME (array) = get_identifier (XSTR (ctr_labels[counter], 0));\n       assemble_variable (array, 0, 0, 0);\n@@ -824,8 +824,7 @@ create_coverage (void)\n \n   gcov_info_value = build_gcov_info ();\n \n-  gcov_info = build (VAR_DECL, TREE_TYPE (gcov_info_value),\n-\t\t     NULL_TREE, NULL_TREE);\n+  gcov_info = build_decl (VAR_DECL, NULL_TREE, TREE_TYPE (gcov_info_value));\n   DECL_INITIAL (gcov_info) = gcov_info_value;\n \n   TREE_STATIC (gcov_info) = 1;"}, {"sha": "b7cf0299843daa8514777b7538d4a4af5c503476", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1456deafd7978b7201704ac822231c9ac4f260fe", "patch": "@@ -1,3 +1,11 @@\n+2003-10-09  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree.c (build_cplus_new): Use build_decl to create a VAR_DECL.\n+\t(build_target_expr_with_type): Likewise.\n+\n+\t* pt.c (instantiate_class_template): Sanity check that our\n+\tenclosing class has been instantiated.\n+\n 2003-10-08  Giovanni Bajo  <giovannibajo@libero.it>\n \n \t* cp_tree.h: Added TFF_NO_FUNCTION_ARGUMENTS."}, {"sha": "909eede693d1fe10e83bafc3b3540bec98431759", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=1456deafd7978b7201704ac822231c9ac4f260fe", "patch": "@@ -5182,7 +5182,18 @@ instantiate_class_template (tree type)\n     SET_ANON_AGGR_TYPE_P (type);\n \n   pbinfo = TYPE_BINFO (pattern);\n-  \n+\n+#ifdef ENABLE_CHECKING\n+  if (DECL_CLASS_SCOPE_P (TYPE_MAIN_DECL (pattern))\n+      && ! COMPLETE_TYPE_P (TYPE_CONTEXT (type))\n+      && ! TYPE_BEING_DEFINED (TYPE_CONTEXT (type)))\n+    /* We should never instantiate a nested class before its enclosing\n+       class; we need to look up the nested class by name before we can\n+       instantiate it, and that lookup should instantiate the enclosing\n+       class.  */\n+    abort ();\n+#endif\n+\n   if (BINFO_BASETYPES (pbinfo))\n     {\n       tree base_list = NULL_TREE;"}, {"sha": "109f7e52f187724951c27ee6fc84ed580275b0b7", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=1456deafd7978b7201704ac822231c9ac4f260fe", "patch": "@@ -269,7 +269,7 @@ build_cplus_new (tree type, tree init)\n \t     && TREE_CODE (TREE_OPERAND (fn, 0)) == FUNCTION_DECL\n \t     && DECL_CONSTRUCTOR_P (TREE_OPERAND (fn, 0)));\n \n-  slot = build (VAR_DECL, type);\n+  slot = build_decl (VAR_DECL, NULL_TREE, type);\n   DECL_ARTIFICIAL (slot) = 1;\n   DECL_CONTEXT (slot) = current_function_decl;\n   layout_decl (slot, 0);\n@@ -311,7 +311,7 @@ build_target_expr_with_type (tree init, tree type)\n   if (TREE_CODE (init) == TARGET_EXPR)\n     return init;\n \n-  slot = build (VAR_DECL, type);\n+  slot = build_decl (VAR_DECL, NULL_TREE, type);\n   DECL_ARTIFICIAL (slot) = 1;\n   DECL_CONTEXT (slot) = current_function_decl;\n   layout_decl (slot, 0);"}, {"sha": "d2b6d26ff0c1ea4bd28fcceffeb8053cd22526a1", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=1456deafd7978b7201704ac822231c9ac4f260fe", "patch": "@@ -1,3 +1,9 @@\n+2003-10-09  Jason Merrill  <jason@redhat.com>\n+\n+\t* parse.y (patch_assignment): Use make_node to create a BLOCK.\n+\t* parse.h (BUILD_PTR_FROM_NAME): Use make_node to create a\n+\tPOINTER_TYPE.\n+\n 2003-10-06  Mark Mitchell  <mark@codesourcery.com>\n \n \t* Make-lang.in (java.info): Replace with ..."}, {"sha": "70d2b1806b628debc42ba6f529934b46ee892880", "filename": "gcc/java/parse.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2Fjava%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2Fjava%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.h?ref=1456deafd7978b7201704ac822231c9ac4f260fe", "patch": "@@ -154,7 +154,7 @@ extern tree stabilize_reference (tree);\n /* Quickly build a temporary pointer on hypothetical type NAME. */\n #define BUILD_PTR_FROM_NAME(ptr, name)\t\t\\\n   do {\t\t\t\t\t\t\\\n-    ptr = build (POINTER_TYPE, NULL_TREE);\t\\\n+    ptr = make_node (POINTER_TYPE);\t\t\\\n     TYPE_NAME (ptr) = name;\t\t\t\\\n   } while (0)\n "}, {"sha": "144ac7e52cf06c551b2d5ae4a3cdd214d4788fe4", "filename": "gcc/java/parse.y", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=1456deafd7978b7201704ac822231c9ac4f260fe", "patch": "@@ -12913,10 +12913,11 @@ patch_assignment (tree node, tree wfl_op1)\n \t  {\n \t    tree tmp = build_decl (VAR_DECL, get_identifier (\"<tmp>\"), \n \t\t\t\t   TREE_TYPE (new_rhs));\n-\t    tree block = build (BLOCK, TREE_TYPE (new_rhs), NULL);\n+\t    tree block = make_node (BLOCK);\n \t    tree assignment \n \t      = build (MODIFY_EXPR, TREE_TYPE (new_rhs), tmp, fold (new_rhs));\n \t    DECL_CONTEXT (tmp) = current_function_decl;\n+\t    TREE_TYPE (block) = TREE_TYPE (new_rhs);\n \t    BLOCK_VARS (block) = tmp;\n \t    BLOCK_EXPR_BODY (block) \n \t      = build (COMPOUND_EXPR, TREE_TYPE (new_rhs), assignment, tmp);"}, {"sha": "718f2558e7dd260f0118d0337acdb17ec951e3ad", "filename": "gcc/stmt.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=1456deafd7978b7201704ac822231c9ac4f260fe", "patch": "@@ -391,8 +391,6 @@ struct stmt_status GTY(())\n static int using_eh_for_cleanups_p = 0;\n \n static int n_occurrences (int, const char *);\n-static bool parse_input_constraint (const char **, int, int, int, int,\n-\t\t\t\t    const char * const *, bool *, bool *);\n static bool decl_conflicts_with_clobbers_p (tree, const HARD_REG_SET);\n static void expand_goto_internal (tree, rtx, rtx);\n static int expand_fixup (tree, rtx, rtx);\n@@ -1253,7 +1251,7 @@ parse_output_constraint (const char **constraint_p, int operand_num,\n \n /* Similar, but for input constraints.  */\n \n-static bool\n+bool\n parse_input_constraint (const char **constraint_p, int input_num,\n \t\t\tint ninputs, int noutputs, int ninout,\n \t\t\tconst char * const * constraints,\n@@ -1465,9 +1463,6 @@ expand_asm_operands (tree string, tree outputs, tree inputs,\n   if (! check_operand_nalternatives (outputs, inputs))\n     return;\n \n-  if (! check_unique_operand_names (outputs, inputs))\n-    return;\n-\n   string = resolve_asm_operand_names (string, outputs, inputs);\n \n   /* Collect constraints.  */\n@@ -1975,6 +1970,8 @@ resolve_asm_operand_names (tree string, tree outputs, tree inputs)\n   const char *c;\n   tree t;\n \n+  check_unique_operand_names (outputs, inputs);\n+\n   /* Substitute [<name>] in input constraint strings.  There should be no\n      named operands in output constraints.  */\n   for (t = inputs; t ; t = TREE_CHAIN (t))"}, {"sha": "d46e60ac3768fefd7596d0f0e3de69f1a9636433", "filename": "gcc/tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1456deafd7978b7201704ac822231c9ac4f260fe/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=1456deafd7978b7201704ac822231c9ac4f260fe", "patch": "@@ -2977,6 +2977,8 @@ extern void emit_nop (void);\n extern void expand_computed_goto (tree);\n extern bool parse_output_constraint (const char **, int, int, int,\n \t\t\t\t     bool *, bool *, bool *);\n+extern bool parse_input_constraint (const char **, int, int, int, int,\n+\t\t\t\t    const char * const *, bool *, bool *);\n extern void expand_asm_operands (tree, tree, tree, tree, int, location_t);\n extern tree resolve_asm_operand_names (tree, tree, tree);\n extern int any_pending_cleanups (void);"}]}