{"sha": "a14ae50814020a46d9e281a8cc493843c0a04cf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE0YWU1MDgxNDAyMGE0NmQ5ZTI4MWE4Y2M0OTM4NDNjMGEwNGNmMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-04T01:48:54Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-04T01:48:54Z"}, "message": "(assign_parms): Pass objects who size depends on the contents of the\nobject by invisible reference.\n\nFrom-SVN: r5585", "tree": {"sha": "22be81373526ee9a4dc8320bed86807192b1f295", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22be81373526ee9a4dc8320bed86807192b1f295"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a14ae50814020a46d9e281a8cc493843c0a04cf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a14ae50814020a46d9e281a8cc493843c0a04cf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a14ae50814020a46d9e281a8cc493843c0a04cf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a14ae50814020a46d9e281a8cc493843c0a04cf3/comments", "author": null, "committer": null, "parents": [{"sha": "b50d17a1482fcdbb9823b5028c585b02ef247dea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b50d17a1482fcdbb9823b5028c585b02ef247dea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b50d17a1482fcdbb9823b5028c585b02ef247dea"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "824855dc44b2e07f21533987fc2dc3d55c465c98", "filename": "gcc/function.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a14ae50814020a46d9e281a8cc493843c0a04cf3/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a14ae50814020a46d9e281a8cc493843c0a04cf3/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=a14ae50814020a46d9e281a8cc493843c0a04cf3", "patch": "@@ -3015,16 +3015,23 @@ assign_parms (fndecl, second_time)\n \t  continue;\n \t}\n \n+      /* See if this arg was passed by invisible reference.  It is if\n+\t it is an object whose size depends on the contents of the\n+\t object itself or if the machine requires these objects be passed\n+\t that way.  */\n+\n+      if ((TREE_CODE (TYPE_SIZE (passed_type)) != INTEGER_CST\n+\t   && contains_placeholder_p (TYPE_SIZE (passed_type)))\n #ifdef FUNCTION_ARG_PASS_BY_REFERENCE\n-      /* See if this arg was passed by invisible reference.  */\n-      if (FUNCTION_ARG_PASS_BY_REFERENCE (args_so_far, passed_mode,\n-\t\t\t\t\t  passed_type, ! last_named))\n+\t  || FUNCTION_ARG_PASS_BY_REFERENCE (args_so_far, passed_mode,\n+\t\t\t\t\t      passed_type, ! last_named)\n+#endif\n+\t  )\n \t{\n \t  passed_type = build_pointer_type (passed_type);\n \t  passed_pointer = 1;\n \t  passed_mode = nominal_mode = Pmode;\n \t}\n-#endif\n \n       promoted_mode = passed_mode;\n "}]}