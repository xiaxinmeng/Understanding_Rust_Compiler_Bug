{"sha": "807fb853ee3a10c5ce2f5ed52d3c84ede3dbbd2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA3ZmI4NTNlZTNhMTBjNWNlMmY1ZWQ1MmQzYzg0ZWRlM2RiYmQyYQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-10-26T04:35:45Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-10-26T04:35:45Z"}, "message": "re PR fortran/29563 (Internal read loses data.)\n\n2006-10-25  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/29563\n\t* io/io.h (st_parameter_dt): Add new flag at_eof.\n\t* io/list_read.c (next_char): Set flag when EOF and return '\\n' to\n\tsignal EOR.  Check flag on next call and jump out.\n\t* io/unit.c (get_internal_unit): Initialize new flag.\n\nFrom-SVN: r118059", "tree": {"sha": "47c5d1a5bbaf45540c19e9a7ef06f27799fc240b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47c5d1a5bbaf45540c19e9a7ef06f27799fc240b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/807fb853ee3a10c5ce2f5ed52d3c84ede3dbbd2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/807fb853ee3a10c5ce2f5ed52d3c84ede3dbbd2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/807fb853ee3a10c5ce2f5ed52d3c84ede3dbbd2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/807fb853ee3a10c5ce2f5ed52d3c84ede3dbbd2a/comments", "author": null, "committer": null, "parents": [{"sha": "7445de0a7b7dceda90638c48bc7933271f3ca5ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7445de0a7b7dceda90638c48bc7933271f3ca5ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7445de0a7b7dceda90638c48bc7933271f3ca5ce"}], "stats": {"total": 53, "additions": 37, "deletions": 16}, "files": [{"sha": "efe39c8d0948c29587a30028b8b8e4f1fe65a778", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/807fb853ee3a10c5ce2f5ed52d3c84ede3dbbd2a/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/807fb853ee3a10c5ce2f5ed52d3c84ede3dbbd2a/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=807fb853ee3a10c5ce2f5ed52d3c84ede3dbbd2a", "patch": "@@ -1,3 +1,11 @@\n+2006-10-25  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/29563\n+\t* io/io.h (st_parameter_dt): Add new flag at_eof.\n+\t* io/list_read.c (next_char): Set flag when EOF and return '\\n' to\n+\tsignal EOR.  Check flag on next call and jump out.\n+\t* io/unit.c (get_internal_unit): Initialize new flag.\n+\n 2006-10-22  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/26025"}, {"sha": "e009f17e3c47e397265ff686c359352beddeccb1", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/807fb853ee3a10c5ce2f5ed52d3c84ede3dbbd2a/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/807fb853ee3a10c5ce2f5ed52d3c84ede3dbbd2a/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=807fb853ee3a10c5ce2f5ed52d3c84ede3dbbd2a", "patch": "@@ -415,7 +415,10 @@ typedef struct st_parameter_dt\n \t  /* An internal unit specific flag used to identify that the associated\n \t     unit is internal.  */\n \t  unsigned unit_is_internal : 1;\n-\t  /* 17 unused bits.  */\n+\t  /* An internal unit specific flag to signify an EOF condition for list\n+\t     directed read.  */\n+\t  unsigned at_eof : 1;\n+\t  /* 16 unused bits.  */\n \n \t  char last_char;\n \t  char nml_delim;"}, {"sha": "f10a0997617661838b0f2c777f9d32fb3f22362b", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/807fb853ee3a10c5ce2f5ed52d3c84ede3dbbd2a/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/807fb853ee3a10c5ce2f5ed52d3c84ede3dbbd2a/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=807fb853ee3a10c5ce2f5ed52d3c84ede3dbbd2a", "patch": "@@ -163,26 +163,35 @@ next_char (st_parameter_dt *dtp)\n \tdtp->u.p.line_buffer_enabled = 0;\n     }    \n \n-  /* Handle the end-of-record condition for internal array unit */\n-  if (is_array_io(dtp) && dtp->u.p.current_unit->bytes_left == 0)\n+  /* Handle the end-of-record and end-of-file conditions for\n+     internal array unit.  */\n+  if (is_array_io(dtp))\n     {\n-      c = '\\n';\n-      record = next_array_record (dtp, dtp->u.p.current_unit->ls);\n-\n-      /* Check for \"end-of-file\" condition */      \n-      if (record == 0)\n+      if (dtp->u.p.at_eof)\n \tlongjmp (*dtp->u.p.eof_jump, 1);\n \n-      record *= dtp->u.p.current_unit->recl;\n-      \n-      if (sseek (dtp->u.p.current_unit->s, record) == FAILURE)\n-\tlongjmp (*dtp->u.p.eof_jump, 1);\n+      /* Check for \"end-of-record\" condition.  */\n+      if (dtp->u.p.current_unit->bytes_left == 0)\n+\t{\n+\t  record = next_array_record (dtp, dtp->u.p.current_unit->ls);\n \n-      dtp->u.p.current_unit->bytes_left = dtp->u.p.current_unit->recl;\n-      goto done;\n+\t  /* Check for \"end-of-file\" condition.  */      \n+\t  if (record == 0)\n+\t    {\n+\t      dtp->u.p.at_eof = 1;\n+\t      c = '\\n';\n+\t      goto done;\n+\t    }\n+\n+\t  record *= dtp->u.p.current_unit->recl;\n+\t  if (sseek (dtp->u.p.current_unit->s, record) == FAILURE)\n+\t    longjmp (*dtp->u.p.eof_jump, 1);\n+\n+\t  dtp->u.p.current_unit->bytes_left = dtp->u.p.current_unit->recl;\n+\t}\n     }\n \n-  /* Get the next character and handle end-of-record conditions */\n+  /* Get the next character and handle end-of-record conditions.  */\n \n   length = 1;\n \n@@ -196,7 +205,7 @@ next_char (st_parameter_dt *dtp)\n       if (is_array_io(dtp))\n \t{\n \t  /* End of record is handled in the next pass through, above.  The\n-\t     check for NULL here is cautionary. */\n+\t     check for NULL here is cautionary.  */\n \t  if (p == NULL)\n \t    {\n \t      generate_error (&dtp->common, ERROR_INTERNAL_UNIT, NULL);"}, {"sha": "90e6d85f6dad1a079e392694cd82669acf2e99d9", "filename": "libgfortran/io/unit.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/807fb853ee3a10c5ce2f5ed52d3c84ede3dbbd2a/libgfortran%2Fio%2Funit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/807fb853ee3a10c5ce2f5ed52d3c84ede3dbbd2a/libgfortran%2Fio%2Funit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funit.c?ref=807fb853ee3a10c5ce2f5ed52d3c84ede3dbbd2a", "patch": "@@ -430,6 +430,7 @@ get_internal_unit (st_parameter_dt *dtp)\n   dtp->u.p.skips = 0;\n   dtp->u.p.pending_spaces = 0;\n   dtp->u.p.max_pos = 0;\n+  dtp->u.p.at_eof = 0;\n \n   /* This flag tells us the unit is assigned to internal I/O.  */\n   "}]}