{"sha": "e5ac0b9bceadbaf799f72e80c84902e2dafb44f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVhYzBiOWJjZWFkYmFmNzk5ZjcyZTgwYzg0OTAyZTJkYWZiNDRmOQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2007-05-26T14:34:21Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2007-05-26T14:34:21Z"}, "message": "i386-protos.h (ix86_expand_sse4_unpack): New.\n\n2007-05-26  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/i386-protos.h (ix86_expand_sse4_unpack): New.\n\n\t* config/i386/i386.c (ix86_expand_sse4_unpack): New.\n\n\t* config/i386/sse.md (vec_unpacku_hi_v16qi): Call\n\tix86_expand_sse4_unpack if SSE4.1 is enabled.\n\t(vec_unpacks_hi_v16qi): Likewise.\n\t(vec_unpacku_lo_v16qi): Likewise.\n\t(vec_unpacks_lo_v16qi): Likewise.\n\t(vec_unpacku_hi_v8hi): Likewise.\n\t(vec_unpacks_hi_v8hi): Likewise.\n\t(vec_unpacku_lo_v8hi): Likewise.\n\t(vec_unpacks_lo_v8hi): Likewise.\n\t(vec_unpacku_hi_v4si): Likewise.\n\t(vec_unpacks_hi_v4si): Likewise.\n\t(vec_unpacku_lo_v4si): Likewise.\n\t(vec_unpacks_lo_v4si): Likewise.\n\nFrom-SVN: r125093", "tree": {"sha": "b4417bea9cf60754231d7ed67f88717dd9f67f86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4417bea9cf60754231d7ed67f88717dd9f67f86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5ac0b9bceadbaf799f72e80c84902e2dafb44f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5ac0b9bceadbaf799f72e80c84902e2dafb44f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5ac0b9bceadbaf799f72e80c84902e2dafb44f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5ac0b9bceadbaf799f72e80c84902e2dafb44f9/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0cb58b2cdeccc118360d4f0a9b01e51c0cfe05c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0cb58b2cdeccc118360d4f0a9b01e51c0cfe05c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0cb58b2cdeccc118360d4f0a9b01e51c0cfe05c"}], "stats": {"total": 130, "additions": 118, "deletions": 12}, "files": [{"sha": "cdd0b84ffc9aaab6173dba2378d9bebaa7edbd4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ac0b9bceadbaf799f72e80c84902e2dafb44f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ac0b9bceadbaf799f72e80c84902e2dafb44f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e5ac0b9bceadbaf799f72e80c84902e2dafb44f9", "patch": "@@ -1,3 +1,23 @@\n+2007-05-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386-protos.h (ix86_expand_sse4_unpack): New.\n+\n+\t* config/i386/i386.c (ix86_expand_sse4_unpack): New.\n+\n+\t* config/i386/sse.md (vec_unpacku_hi_v16qi): Call\n+\tix86_expand_sse4_unpack if SSE4.1 is enabled.\n+\t(vec_unpacks_hi_v16qi): Likewise.\n+\t(vec_unpacku_lo_v16qi): Likewise.\n+\t(vec_unpacks_lo_v16qi): Likewise.\n+\t(vec_unpacku_hi_v8hi): Likewise.\n+\t(vec_unpacks_hi_v8hi): Likewise.\n+\t(vec_unpacku_lo_v8hi): Likewise.\n+\t(vec_unpacks_lo_v8hi): Likewise.\n+\t(vec_unpacku_hi_v4si): Likewise.\n+\t(vec_unpacks_hi_v4si): Likewise.\n+\t(vec_unpacku_lo_v4si): Likewise.\n+\t(vec_unpacks_lo_v4si): Likewise.\n+\n 2007-05-26  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* c-typeck.c, config/arm/arm.c, config/darwin.c,"}, {"sha": "60b495582aa0f7c25bd2e1027bea9a77e10c8aca", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ac0b9bceadbaf799f72e80c84902e2dafb44f9/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ac0b9bceadbaf799f72e80c84902e2dafb44f9/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=e5ac0b9bceadbaf799f72e80c84902e2dafb44f9", "patch": "@@ -112,6 +112,7 @@ extern int ix86_expand_fp_movcc (rtx[]);\n extern bool ix86_expand_fp_vcond (rtx[]);\n extern bool ix86_expand_int_vcond (rtx[]);\n extern void ix86_expand_sse_unpack (rtx[], bool, bool);\n+extern void ix86_expand_sse4_unpack (rtx[], bool, bool);\n extern int ix86_expand_int_addcc (rtx[]);\n extern void ix86_expand_call (rtx, rtx, rtx, rtx, rtx, int);\n extern void x86_initialize_trampoline (rtx, rtx, rtx);"}, {"sha": "b0db9504e3d40387e160c7682a11071fb1bcd1e1", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ac0b9bceadbaf799f72e80c84902e2dafb44f9/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ac0b9bceadbaf799f72e80c84902e2dafb44f9/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e5ac0b9bceadbaf799f72e80c84902e2dafb44f9", "patch": "@@ -12843,6 +12843,55 @@ ix86_expand_sse_unpack (rtx operands[2], bool unsigned_p, bool high_p)\n   emit_insn (unpack (dest, operands[1], se));\n }\n \n+/* This function performs the same task as ix86_expand_sse_unpack,\n+   but with SSE4.1 instructions.  */\n+\n+void\n+ix86_expand_sse4_unpack (rtx operands[2], bool unsigned_p, bool high_p)\n+{\n+  enum machine_mode imode = GET_MODE (operands[1]);\n+  rtx (*unpack)(rtx, rtx);\n+  rtx src, dest;\n+\n+  switch (imode)\n+    {\n+    case V16QImode:\n+      if (unsigned_p)\n+\tunpack = gen_sse4_1_zero_extendv8qiv8hi2;\n+      else\n+\tunpack = gen_sse4_1_extendv8qiv8hi2;\n+      break;\n+    case V8HImode:\n+      if (unsigned_p)\n+\tunpack = gen_sse4_1_zero_extendv4hiv4si2;\n+      else\n+\tunpack = gen_sse4_1_extendv4hiv4si2;\n+      break;\n+    case V4SImode:\n+      if (unsigned_p)\n+\tunpack = gen_sse4_1_zero_extendv2siv2di2;\n+      else\n+\tunpack = gen_sse4_1_extendv2siv2di2;\n+      break;\n+    default:\n+      gcc_unreachable ();\n+    }\n+\n+  dest = operands[0];\n+  if (high_p)\n+    {\n+      /* Shift higher 8 bytes to lower 8 bytes.  */\n+      src = gen_reg_rtx (imode);\n+      emit_insn (gen_sse2_lshrti3 (gen_lowpart (TImode, src),\n+\t\t\t\t   gen_lowpart (TImode, operands[1]),\n+\t\t\t\t   GEN_INT (64)));\n+    }\n+  else\n+    src = operands[1];\n+\n+  emit_insn (unpack (dest, src));\n+}\n+\n /* Expand conditional increment or decrement using adb/sbb instructions.\n    The default case using setcc followed by the conditional move can be\n    done by generic code.  */"}, {"sha": "81ff9258ef9f270b6b4bf65e5e4ef6f2951fea5f", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 48, "deletions": 12, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ac0b9bceadbaf799f72e80c84902e2dafb44f9/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ac0b9bceadbaf799f72e80c84902e2dafb44f9/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=e5ac0b9bceadbaf799f72e80c84902e2dafb44f9", "patch": "@@ -4722,7 +4722,10 @@\n    (match_operand:V16QI 1 \"register_operand\" \"\")]\n   \"TARGET_SSE2\"\n {\n-  ix86_expand_sse_unpack (operands, true, true);\n+  if (TARGET_SSE4_1)\n+    ix86_expand_sse4_unpack (operands, true, true);\n+  else\n+    ix86_expand_sse_unpack (operands, true, true);\n   DONE;\n })\n \n@@ -4731,7 +4734,10 @@\n    (match_operand:V16QI 1 \"register_operand\" \"\")]\n   \"TARGET_SSE2\"\n {\n-  ix86_expand_sse_unpack (operands, false, true);\n+  if (TARGET_SSE4_1)\n+    ix86_expand_sse4_unpack (operands, false, true);\n+  else\n+    ix86_expand_sse_unpack (operands, false, true);\n   DONE;\n })\n \n@@ -4740,7 +4746,10 @@\n    (match_operand:V16QI 1 \"register_operand\" \"\")]\n   \"TARGET_SSE2\"\n {\n-  ix86_expand_sse_unpack (operands, true, false);\n+  if (TARGET_SSE4_1)\n+    ix86_expand_sse4_unpack (operands, true, false);\n+  else\n+    ix86_expand_sse_unpack (operands, true, false);\n   DONE;\n })\n \n@@ -4749,7 +4758,10 @@\n    (match_operand:V16QI 1 \"register_operand\" \"\")]\n   \"TARGET_SSE2\"\n {\n-  ix86_expand_sse_unpack (operands, false, false);\n+  if (TARGET_SSE4_1)\n+    ix86_expand_sse4_unpack (operands, false, false);\n+  else\n+    ix86_expand_sse_unpack (operands, false, false);\n   DONE;\n })\n \n@@ -4758,7 +4770,10 @@\n    (match_operand:V8HI 1 \"register_operand\" \"\")]\n   \"TARGET_SSE2\"\n {\n-  ix86_expand_sse_unpack (operands, true, true);\n+  if (TARGET_SSE4_1)\n+    ix86_expand_sse4_unpack (operands, true, true);\n+  else\n+    ix86_expand_sse_unpack (operands, true, true);\n   DONE;\n })\n \n@@ -4767,7 +4782,10 @@\n    (match_operand:V8HI 1 \"register_operand\" \"\")]\n   \"TARGET_SSE2\"\n {\n-  ix86_expand_sse_unpack (operands, false, true);\n+  if (TARGET_SSE4_1)\n+    ix86_expand_sse4_unpack (operands, false, true);\n+  else\n+    ix86_expand_sse_unpack (operands, false, true);\n   DONE;\n })\n \n@@ -4776,7 +4794,10 @@\n    (match_operand:V8HI 1 \"register_operand\" \"\")]\n   \"TARGET_SSE2\"\n {\n-  ix86_expand_sse_unpack (operands, true, false);\n+  if (TARGET_SSE4_1)\n+    ix86_expand_sse4_unpack (operands, true, false);\n+  else\n+    ix86_expand_sse_unpack (operands, true, false);\n   DONE;\n })\n \n@@ -4785,7 +4806,10 @@\n    (match_operand:V8HI 1 \"register_operand\" \"\")]\n   \"TARGET_SSE2\"\n {\n-  ix86_expand_sse_unpack (operands, false, false);\n+  if (TARGET_SSE4_1)\n+    ix86_expand_sse4_unpack (operands, false, false);\n+  else\n+    ix86_expand_sse_unpack (operands, false, false);\n   DONE;\n })\n \n@@ -4794,7 +4818,10 @@\n    (match_operand:V4SI 1 \"register_operand\" \"\")]\n   \"TARGET_SSE2\"\n {\n-  ix86_expand_sse_unpack (operands, true, true);\n+  if (TARGET_SSE4_1)\n+    ix86_expand_sse4_unpack (operands, true, true);\n+  else\n+    ix86_expand_sse_unpack (operands, true, true);\n   DONE;\n })\n \n@@ -4803,7 +4830,10 @@\n    (match_operand:V4SI 1 \"register_operand\" \"\")]\n   \"TARGET_SSE2\"\n {\n-  ix86_expand_sse_unpack (operands, false, true);\n+  if (TARGET_SSE4_1)\n+    ix86_expand_sse4_unpack (operands, false, true);\n+  else\n+    ix86_expand_sse_unpack (operands, false, true);\n   DONE;\n })\n \n@@ -4812,7 +4842,10 @@\n    (match_operand:V4SI 1 \"register_operand\" \"\")]\n   \"TARGET_SSE2\"\n {\n-  ix86_expand_sse_unpack (operands, true, false);\n+  if (TARGET_SSE4_1)\n+    ix86_expand_sse4_unpack (operands, true, false);\n+  else\n+    ix86_expand_sse_unpack (operands, true, false);\n   DONE;\n })\n \n@@ -4821,7 +4854,10 @@\n    (match_operand:V4SI 1 \"register_operand\" \"\")]\n   \"TARGET_SSE2\"\n {\n-  ix86_expand_sse_unpack (operands, false, false);\n+  if (TARGET_SSE4_1)\n+    ix86_expand_sse4_unpack (operands, false, false);\n+  else\n+    ix86_expand_sse_unpack (operands, false, false);\n   DONE;\n })\n "}]}