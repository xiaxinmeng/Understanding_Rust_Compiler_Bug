{"sha": "b5b071a5688e68b783547add84949c63c49d7dc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjViMDcxYTU2ODhlNjhiNzgzNTQ3YWRkODQ5NDljNjNjNDlkN2RjMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-08-02T20:44:38Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-08-02T20:44:38Z"}, "message": "recog.c (split_insn): Copy the original SET_SRC before using it as a note.\n\ngcc/\n\t* recog.c (split_insn): Copy the original SET_SRC before using\n\tit as a note.\n\nFrom-SVN: r190102", "tree": {"sha": "7ebf193fc0886aa75e0dc830a863e6b85d974649", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ebf193fc0886aa75e0dc830a863e6b85d974649"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5b071a5688e68b783547add84949c63c49d7dc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5b071a5688e68b783547add84949c63c49d7dc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5b071a5688e68b783547add84949c63c49d7dc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5b071a5688e68b783547add84949c63c49d7dc1/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8e6ecdc0ad4533626d35206318b254b76748e370", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e6ecdc0ad4533626d35206318b254b76748e370", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e6ecdc0ad4533626d35206318b254b76748e370"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "524ae209da8f867a4d70ea0748fdbcc9bda79419", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b071a5688e68b783547add84949c63c49d7dc1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b071a5688e68b783547add84949c63c49d7dc1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5b071a5688e68b783547add84949c63c49d7dc1", "patch": "@@ -1,3 +1,8 @@\n+2012-08-02  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* recog.c (split_insn): Copy the original SET_SRC before using\n+\tit as a note.\n+\n 2012-08-02  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* reorg.c (dbr_schedule): Delete REG_BR_PRED loop."}, {"sha": "d7381abd579a6e2affad83f1aa306719addf9e15", "filename": "gcc/recog.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b071a5688e68b783547add84949c63c49d7dc1/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b071a5688e68b783547add84949c63c49d7dc1/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=b5b071a5688e68b783547add84949c63c49d7dc1", "patch": "@@ -2831,7 +2831,8 @@ split_insn (rtx insn)\n \t  if (note && CONSTANT_P (XEXP (note, 0)))\n \t    set_unique_reg_note (last, REG_EQUAL, XEXP (note, 0));\n \t  else if (CONSTANT_P (SET_SRC (insn_set)))\n-\t    set_unique_reg_note (last, REG_EQUAL, SET_SRC (insn_set));\n+\t    set_unique_reg_note (last, REG_EQUAL,\n+\t\t\t\t copy_rtx (SET_SRC (insn_set)));\n \t}\n     }\n "}]}