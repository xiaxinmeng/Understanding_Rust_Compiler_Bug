{"sha": "47a61e65148c6f1c237638144eb72ed5afd86387", "node_id": "C_kwDOANBUbNoAKDQ3YTYxZTY1MTQ4YzZmMWMyMzc2MzgxNDRlYjcyZWQ1YWZkODYzODc", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-08-17T00:17:17Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-08-17T00:17:17Z"}, "message": "Daily bump.", "tree": {"sha": "3fc8256deeaaa671540097df0a8f82d6a3714f41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fc8256deeaaa671540097df0a8f82d6a3714f41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47a61e65148c6f1c237638144eb72ed5afd86387", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47a61e65148c6f1c237638144eb72ed5afd86387", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47a61e65148c6f1c237638144eb72ed5afd86387", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47a61e65148c6f1c237638144eb72ed5afd86387/comments", "author": null, "committer": null, "parents": [{"sha": "bf13a13c65bd06c75d0e40e27f5ad34c7373fc55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf13a13c65bd06c75d0e40e27f5ad34c7373fc55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf13a13c65bd06c75d0e40e27f5ad34c7373fc55"}], "stats": {"total": 361, "additions": 360, "deletions": 1}, "files": [{"sha": "578613119d3d0edceaa5e311eb6383bd2f5c921d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 142, "deletions": 0, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47a61e65148c6f1c237638144eb72ed5afd86387/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47a61e65148c6f1c237638144eb72ed5afd86387/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47a61e65148c6f1c237638144eb72ed5afd86387", "patch": "@@ -1,3 +1,145 @@\n+2022-08-16  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/106637\n+\t* doc/install.texi: Remove link to www.bullfreeware.com\n+\n+2022-08-16  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* common/config/riscv/riscv-common.cc (riscv_implied_info): Add\n+\tzfh and zfhmin.\n+\t(riscv_ext_version_table): Ditto.\n+\t(riscv_ext_flag_table): Ditto.\n+\t* config/riscv/riscv-opts.h (MASK_ZFHMIN): New.\n+\t(MASK_ZFH): Ditto.\n+\t(TARGET_ZFHMIN): Ditto.\n+\t(TARGET_ZFH): Ditto.\n+\t* config/riscv/riscv.cc (riscv_output_move): Handle HFmode move\n+\tfor zfh and zfhmin.\n+\t(riscv_emit_float_compare): Handle HFmode.\n+\t* config/riscv/riscv.md (ANYF): Add HF.\n+\t(SOFTF): Add HF.\n+\t(load): Ditto.\n+\t(store): Ditto.\n+\t(truncsfhf2): New.\n+\t(truncdfhf2): Ditto.\n+\t(extendhfsf2): Ditto.\n+\t(extendhfdf2): Ditto.\n+\t(*movhf_hardfloat): Ditto.\n+\t(*movhf_softfloat): Make sure not ZFHMIN.\n+\t* config/riscv/riscv.opt (riscv_zf_subext): New.\n+\n+2022-08-16  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* config/riscv/riscv-builtins.cc: include stringpool.h\n+\t(riscv_float16_type_node): New.\n+\t(riscv_init_builtin_types): Ditto.\n+\t(riscv_init_builtins): Call riscv_init_builtin_types.\n+\t* config/riscv/riscv-modes.def (HF): New.\n+\t* config/riscv/riscv.cc (riscv_output_move): Handle HFmode.\n+\t(riscv_mangle_type): New.\n+\t(riscv_scalar_mode_supported_p): Ditto.\n+\t(riscv_libgcc_floating_mode_supported_p): Ditto.\n+\t(riscv_excess_precision): Ditto.\n+\t(riscv_floatn_mode): Ditto.\n+\t(riscv_init_libfuncs): Ditto.\n+\t(TARGET_MANGLE_TYPE): Ditto.\n+\t(TARGET_SCALAR_MODE_SUPPORTED_P): Ditto.\n+\t(TARGET_LIBGCC_FLOATING_MODE_SUPPORTED_P): Ditto.\n+\t(TARGET_INIT_LIBFUNCS): Ditto.\n+\t(TARGET_C_EXCESS_PRECISION): Ditto.\n+\t(TARGET_FLOATN_MODE): Ditto.\n+\t* config/riscv/riscv.md (mode): Add HF.\n+\t(softload): Add HF.\n+\t(softstore): Ditto.\n+\t(fmt): Ditto.\n+\t(UNITMODE): Ditto.\n+\t(movhf): New.\n+\t(*movhf_softfloat): New.\n+\n+2022-08-16  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-threadbackward.cc (back_threader::find_paths_to_names):\n+\tDo not walk further if we are leaving the current loop.\n+\n+2022-08-16  Sergei Trofimovich  <siarheit@google.com>\n+\n+\tPR driver/106624\n+\t* gcc.cc (driver::detect_jobserver): Allocate storage xputenv()\n+\targument using xstrdup().\n+\n+2022-08-16  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* gimple-range-path.cc (path_range_query::import_p): Rename to...\n+\t(path_range_query::exit_dependency_p): ...this.\n+\t(path_range_query::dump): Rename imports to exit dependencies.\n+\t(path_range_query::compute_ranges_in_phis): Same.\n+\t(path_range_query::compute_ranges_in_block): Same.\n+\t(path_range_query::adjust_for_non_null_uses): Same.\n+\t(path_range_query::compute_ranges): Same.\n+\t(path_range_query::compute_phi_relations): Same.\n+\t(path_range_query::add_to_imports): Rename to...\n+\t(path_range_query::add_to_exit_dependencies): ...this.\n+\t(path_range_query::compute_imports): Rename to...\n+\t(path_range_query::compute_exit_dependencies): ...this.\n+\t* gimple-range-path.h (class path_range_query): Rename imports to\n+\texit dependencies.\n+\n+2022-08-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* value-range-storage.h (class obstack_vrange_allocator): Mark\n+\t  the class as final.\n+\t(class ggc_vrange_allocator): Likewise.\n+\n+2022-08-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* value-range-equiv.h (class value_range_equiv): Add virtual\n+\t  destructor.\n+\t* value-range.h: Likewise.\n+\n+2022-08-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/106630\n+\t* match.pd ((T)(x * CST) -> (T)x * CST): Restrict to\n+\tnarrowing conversions.\n+\n+2022-08-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* value-range-equiv.h (class value_range_equiv):\n+\n+2022-08-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/i386/i386-features.h (class general_scalar_chain): Add\n+\t  final override for a method.\n+\t(class timode_scalar_chain): Likewise.\n+\n+2022-08-16  Richard Biener  <rguenther@suse.de>\n+\n+\t* doc/invoke.texi (max-jump-thread-paths): Adjust.\n+\n+2022-08-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* opts-common.cc (jobserver_info::connect): Open fifo\n+\tin non-blocking mode.\n+\n+2022-08-16  Kewen.Lin  <linkw@gcc.gnu.org>\n+\n+\tPR target/103353\n+\t* config/rs6000/mma.md (define_expand movoo): Move TARGET_MMA condition\n+\tcheck to preparation statements and add handlings for !TARGET_MMA.\n+\t(define_expand movxo): Likewise.\n+\n+2022-08-16  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR tree-optimization/106322\n+\t* tree-vect-stmts.cc (vectorizable_call): Don't allow\n+\tvect_emulated_vector_p type for both vectype_in and vectype_out.\n+\n+2022-08-16  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n+\n+\t* common/config/xtensa/xtensa-common.cc\n+\t(xtensa_option_optimization_table): Add OPT_fsplit_wide_types_early\n+\tfor OPT_LEVELS_ALL in order to restore pre-GCC10 behavior.\n+\n 2022-08-15  Andrew MacLeod  <amacleod@redhat.com>\n \n \tPR tree-optimization/106621"}, {"sha": "3016a0c44cbb6e255ff1a83378e6c49397986149", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47a61e65148c6f1c237638144eb72ed5afd86387/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47a61e65148c6f1c237638144eb72ed5afd86387/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=47a61e65148c6f1c237638144eb72ed5afd86387", "patch": "@@ -1 +1 @@\n-20220816\n+20220817"}, {"sha": "482ab882e671d9fc568108dfccdd4ada2a5f4b10", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47a61e65148c6f1c237638144eb72ed5afd86387/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47a61e65148c6f1c237638144eb72ed5afd86387/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=47a61e65148c6f1c237638144eb72ed5afd86387", "patch": "@@ -1,3 +1,9 @@\n+2022-08-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* region-model.cc: Fix -Winconsistent-missing-override clang\n+\t  warning.\n+\t* region.h: Likewise.\n+\n 2022-08-15  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/106626"}, {"sha": "c738e579ff214237c72e620f0a8403bf8e954a37", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47a61e65148c6f1c237638144eb72ed5afd86387/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47a61e65148c6f1c237638144eb72ed5afd86387/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=47a61e65148c6f1c237638144eb72ed5afd86387", "patch": "@@ -1,3 +1,10 @@\n+2022-08-16  Tom Honermann  <tom@honermann.net>\n+\n+\tPR c++/106423\n+\t* c-opts.cc (c_common_post_options): Disable -Wc++20-compat\n+\tdiagnostics in C++20 and later.\n+\t* c.opt (Wc++20-compat): Enable hooks for the preprocessor.\n+\n 2022-08-11  Marek Polacek  <polacek@redhat.com>\n \n \tPR middle-end/102633"}, {"sha": "8cac94efdba07b4cfb2aa771c208f591ec686b6b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47a61e65148c6f1c237638144eb72ed5afd86387/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47a61e65148c6f1c237638144eb72ed5afd86387/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=47a61e65148c6f1c237638144eb72ed5afd86387", "patch": "@@ -1,3 +1,17 @@\n+2022-08-16  Tom Honermann  <tom@honermann.net>\n+\n+\tPR c++/106423\n+\t* parser.cc (cp_lexer_saving_tokens): Add comment regarding\n+\tdiagnostic requirements.\n+\n+2022-08-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* typeck.cc (cp_build_modify_expr): Implement\n+\tP2327R1 - De-deprecating volatile compound operations.  Don't warn\n+\tfor |=, &= or ^= with volatile lhs.\n+\t* expr.cc (mark_use) <case MODIFY_EXPR>: Adjust warning wording,\n+\tleave out simple.\n+\n 2022-08-15  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/106276"}, {"sha": "ebb63916b3cfdee19cbc6f137dfef2f20d46f76f", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47a61e65148c6f1c237638144eb72ed5afd86387/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47a61e65148c6f1c237638144eb72ed5afd86387/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=47a61e65148c6f1c237638144eb72ed5afd86387", "patch": "@@ -1,3 +1,9 @@\n+2022-08-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/106638\n+\t* gdc.texi: Update DIP links to point at upstream dlang/DIPs\n+\trepository.\n+\n 2022-08-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* d-tree.h (d_defer_declaration): Declare."}, {"sha": "cd7be0f633f0821e699db96f08515d7c75e030ce", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47a61e65148c6f1c237638144eb72ed5afd86387/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47a61e65148c6f1c237638144eb72ed5afd86387/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=47a61e65148c6f1c237638144eb72ed5afd86387", "patch": "@@ -1,3 +1,7 @@\n+2022-08-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* gfortran.texi: Fix link destination to a valid URL.\n+\n 2022-07-31  Harald Anlauf  <anlauf@gmx.de>\n \t    Steven G. Kargl  <kargl@gcc.gnu.org>\n "}, {"sha": "855b964c519b24bc49990d5b030804a02193f0bf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47a61e65148c6f1c237638144eb72ed5afd86387/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47a61e65148c6f1c237638144eb72ed5afd86387/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=47a61e65148c6f1c237638144eb72ed5afd86387", "patch": "@@ -1,3 +1,59 @@\n+2022-08-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/warn/Wstringop-overflow-4.C: Only xfail for C++98.\n+\t* g++.target/i386/bfloat_cpp_typecheck.C: Remove xfail.\n+\n+2022-08-16  Tom Honermann  <tom@honermann.net>\n+\n+\tPR c++/106423\n+\t* g++.dg/cpp0x/keywords2.C: New test.\n+\t* g++.dg/cpp2a/keywords2.C: New test.\n+\n+2022-08-16  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* gcc.target/riscv/_Float16-zfh-1.c: New.\n+\t* gcc.target/riscv/_Float16-zfh-2.c: Ditto.\n+\t* gcc.target/riscv/_Float16-zfh-3.c: Ditto.\n+\t* gcc.target/riscv/_Float16-zfhmin-1.c: Ditto.\n+\t* gcc.target/riscv/_Float16-zfhmin-2.c: Ditto.\n+\t* gcc.target/riscv/_Float16-zfhmin-3.c: Ditto.\n+\t* gcc.target/riscv/arch-16.c: Ditto.\n+\t* gcc.target/riscv/arch-17.c: Ditto.\n+\t* gcc.target/riscv/predef-21.c: Ditto.\n+\t* gcc.target/riscv/predef-22.c: Ditto.\n+\n+2022-08-16  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* g++.target/riscv/_Float16.C: New.\n+\t* gcc.target/riscv/_Float16-soft-1.c: Ditto.\n+\t* gcc.target/riscv/_Float16-soft-2.c: Ditto.\n+\t* gcc.target/riscv/_Float16-soft-3.c: Ditto.\n+\t* gcc.target/riscv/_Float16-soft-4.c: Ditto.\n+\t* gcc.target/riscv/_Float16.c: Ditto.\n+\n+2022-08-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/cpp2a/volatile1.C: Adjust for de-deprecation of volatile\n+\tcompound |=, &= and ^= operations.\n+\t* g++.dg/cpp2a/volatile3.C: Likewise.\n+\t* g++.dg/cpp2a/volatile5.C: Likewise.\n+\n+2022-08-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/106630\n+\t* gcc.dg/torture/pr106630.c: New testcase.\n+\n+2022-08-16  Kewen.Lin  <linkw@gcc.gnu.org>\n+\n+\tPR target/103353\n+\t* gcc.target/powerpc/pr103353.c: New test.\n+\n+2022-08-16  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR tree-optimization/106322\n+\t* gcc.target/i386/pr106322.c: New test.\n+\t* gcc.target/powerpc/pr106322.c: New test.\n+\n 2022-08-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/106623"}, {"sha": "ac99688c8b2833a321715d8cf72dcb4b919007eb", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47a61e65148c6f1c237638144eb72ed5afd86387/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47a61e65148c6f1c237638144eb72ed5afd86387/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=47a61e65148c6f1c237638144eb72ed5afd86387", "patch": "@@ -1,3 +1,9 @@\n+2022-08-16  Tom Honermann  <tom@honermann.net>\n+\n+\tPR c++/106423\n+\t* include/cpplib.h (cpp_warning_reason): Add CPP_W_CXX20_COMPAT.\n+\t* init.cc (cpp_create_reader): Add cpp_warn_cxx20_compat.\n+\n 2022-08-08  Tom Honermann  <tom@honermann.net>\n \n \tPR preprocessor/106426"}, {"sha": "5fe8e73fc1d1d59c7362b7250db48379eecfe1fe", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47a61e65148c6f1c237638144eb72ed5afd86387/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47a61e65148c6f1c237638144eb72ed5afd86387/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=47a61e65148c6f1c237638144eb72ed5afd86387", "patch": "@@ -1,3 +1,121 @@\n+2022-08-16  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* config/riscv/sfp-machine.h (_FP_NANFRAC_H): New.\n+\t(_FP_NANFRAC_H): Ditto.\n+\t(_FP_NANSIGN_H): Ditto.\n+\t* config/riscv/t-softfp32 (softfp_extensions): Add HF related\n+\troutines.\n+\t(softfp_truncations): Ditto.\n+\t(softfp_extras): Ditto.\n+\t* config/riscv/t-softfp64 (softfp_extras): Add HF related routines.\n+\n+2022-08-16  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* soft-fp/fixhfdi.c: New.\n+\t* soft-fp/fixhfsi.c: Likewise.\n+\t* soft-fp/fixunshfdi.c: Likewise.\n+\t* soft-fp/fixunshfsi.c: Likewise.\n+\t* soft-fp/floatdihf.c: Likewise.\n+\t* soft-fp/floatsihf.c: Likewise.\n+\t* soft-fp/floatundihf.c: Likewise.\n+\t* soft-fp/floatunsihf.c: Likewise.\n+\t* soft-fp/adddf3.c: Updating copyright years, removing \"Contributed by\"\n+\tlines and update URL for license.\n+\t* soft-fp/addsf3.c: Likewise.\n+\t* soft-fp/addtf3.c: Likewise.\n+\t* soft-fp/divdf3.c: Likewise.\n+\t* soft-fp/divsf3.c: Likewise.\n+\t* soft-fp/divtf3.c: Likewise.\n+\t* soft-fp/double.h: Likewise.\n+\t* soft-fp/eqdf2.c: Likewise.\n+\t* soft-fp/eqhf2.c: Likewise.\n+\t* soft-fp/eqsf2.c: Likewise.\n+\t* soft-fp/eqtf2.c: Likewise.\n+\t* soft-fp/extenddftf2.c: Likewise.\n+\t* soft-fp/extended.h: Likewise.\n+\t* soft-fp/extendhfdf2.c: Likewise.\n+\t* soft-fp/extendhfsf2.c: Likewise.\n+\t* soft-fp/extendhftf2.c: Likewise.\n+\t* soft-fp/extendhfxf2.c: Likewise.\n+\t* soft-fp/extendsfdf2.c: Likewise.\n+\t* soft-fp/extendsftf2.c: Likewise.\n+\t* soft-fp/extendxftf2.c: Likewise.\n+\t* soft-fp/fixdfdi.c: Likewise.\n+\t* soft-fp/fixdfsi.c: Likewise.\n+\t* soft-fp/fixdfti.c: Likewise.\n+\t* soft-fp/fixhfti.c: Likewise.\n+\t* soft-fp/fixsfdi.c: Likewise.\n+\t* soft-fp/fixsfsi.c: Likewise.\n+\t* soft-fp/fixsfti.c: Likewise.\n+\t* soft-fp/fixtfdi.c: Likewise.\n+\t* soft-fp/fixtfsi.c: Likewise.\n+\t* soft-fp/fixtfti.c: Likewise.\n+\t* soft-fp/fixunsdfdi.c: Likewise.\n+\t* soft-fp/fixunsdfsi.c: Likewise.\n+\t* soft-fp/fixunsdfti.c: Likewise.\n+\t* soft-fp/fixunshfti.c: Likewise.\n+\t* soft-fp/fixunssfdi.c: Likewise.\n+\t* soft-fp/fixunssfsi.c: Likewise.\n+\t* soft-fp/fixunssfti.c: Likewise.\n+\t* soft-fp/fixunstfdi.c: Likewise.\n+\t* soft-fp/fixunstfsi.c: Likewise.\n+\t* soft-fp/fixunstfti.c: Likewise.\n+\t* soft-fp/floatdidf.c: Likewise.\n+\t* soft-fp/floatdisf.c: Likewise.\n+\t* soft-fp/floatditf.c: Likewise.\n+\t* soft-fp/floatsidf.c: Likewise.\n+\t* soft-fp/floatsisf.c: Likewise.\n+\t* soft-fp/floatsitf.c: Likewise.\n+\t* soft-fp/floattidf.c: Likewise.\n+\t* soft-fp/floattihf.c: Likewise.\n+\t* soft-fp/floattisf.c: Likewise.\n+\t* soft-fp/floattitf.c: Likewise.\n+\t* soft-fp/floatundidf.c: Likewise.\n+\t* soft-fp/floatundisf.c: Likewise.\n+\t* soft-fp/floatunditf.c: Likewise.\n+\t* soft-fp/floatunsidf.c: Likewise.\n+\t* soft-fp/floatunsisf.c: Likewise.\n+\t* soft-fp/floatunsitf.c: Likewise.\n+\t* soft-fp/floatuntidf.c: Likewise.\n+\t* soft-fp/floatuntihf.c: Likewise.\n+\t* soft-fp/floatuntisf.c: Likewise.\n+\t* soft-fp/floatuntitf.c: Likewise.\n+\t* soft-fp/gedf2.c: Likewise.\n+\t* soft-fp/gesf2.c: Likewise.\n+\t* soft-fp/getf2.c: Likewise.\n+\t* soft-fp/half.h: Likewise.\n+\t* soft-fp/ledf2.c: Likewise.\n+\t* soft-fp/lesf2.c: Likewise.\n+\t* soft-fp/letf2.c: Likewise.\n+\t* soft-fp/muldf3.c: Likewise.\n+\t* soft-fp/mulsf3.c: Likewise.\n+\t* soft-fp/multf3.c: Likewise.\n+\t* soft-fp/negdf2.c: Likewise.\n+\t* soft-fp/negsf2.c: Likewise.\n+\t* soft-fp/negtf2.c: Likewise.\n+\t* soft-fp/op-1.h: Likewise.\n+\t* soft-fp/op-2.h: Likewise.\n+\t* soft-fp/op-4.h: Likewise.\n+\t* soft-fp/op-8.h: Likewise.\n+\t* soft-fp/op-common.h: Likewise.\n+\t* soft-fp/quad.h: Likewise.\n+\t* soft-fp/single.h: Likewise.\n+\t* soft-fp/soft-fp.h: Likewise.\n+\t* soft-fp/subdf3.c: Likewise.\n+\t* soft-fp/subsf3.c: Likewise.\n+\t* soft-fp/subtf3.c: Likewise.\n+\t* soft-fp/truncdfhf2.c: Likewise.\n+\t* soft-fp/truncdfsf2.c: Likewise.\n+\t* soft-fp/truncsfhf2.c: Likewise.\n+\t* soft-fp/trunctfdf2.c: Likewise.\n+\t* soft-fp/trunctfhf2.c: Likewise.\n+\t* soft-fp/trunctfsf2.c: Likewise.\n+\t* soft-fp/trunctfxf2.c: Likewise.\n+\t* soft-fp/truncxfhf2.c: Likewise.\n+\t* soft-fp/unorddf2.c: Likewise.\n+\t* soft-fp/unordsf2.c: Likewise.\n+\t* soft-fp/unordtf2.c: Likewise.\n+\n 2022-07-18  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/lib2funcs.c (udivmodsi4): Update AND mask."}]}