{"sha": "84c672b950e3427d9abb5b74d635e586bda74c4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRjNjcyYjk1MGUzNDI3ZDlhYmI1Yjc0ZDYzNWU1ODZiZGE3NGM0ZQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2004-05-19T18:31:35Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2004-05-19T18:31:35Z"}, "message": "tree-ssa-phiopt.c (value_replacement): Handle the case where the desired edge out of COND_BLOCK reaches OTHER_BLOCK...\n\n\t* tree-ssa-phiopt.c (value_replacement): Handle the case where\n\tthe desired edge out of COND_BLOCK reaches OTHER_BLOCK rather than\n\tBB directly.\n\nFrom-SVN: r82031", "tree": {"sha": "8caf03eb5bb52d5bd46e5a0506f75d33507b2517", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8caf03eb5bb52d5bd46e5a0506f75d33507b2517"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84c672b950e3427d9abb5b74d635e586bda74c4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84c672b950e3427d9abb5b74d635e586bda74c4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84c672b950e3427d9abb5b74d635e586bda74c4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84c672b950e3427d9abb5b74d635e586bda74c4e/comments", "author": null, "committer": null, "parents": [{"sha": "0aea6467d5022e3858bfed5ce5d24aa877bfed1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aea6467d5022e3858bfed5ce5d24aa877bfed1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0aea6467d5022e3858bfed5ce5d24aa877bfed1a"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "2bdfb82e847fde40cec33da903a92241a2c399e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c672b950e3427d9abb5b74d635e586bda74c4e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c672b950e3427d9abb5b74d635e586bda74c4e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84c672b950e3427d9abb5b74d635e586bda74c4e", "patch": "@@ -1,3 +1,9 @@\n+2004-05-19  Jeff Law <law@redhat.com>\n+\n+\t* tree-ssa-phiopt.c (value_replacement): Handle the case where\n+\tthe desired edge out of COND_BLOCK reaches OTHER_BLOCK rather than\n+\tBB directly.\n+\n 2004-05-19  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n \tPR c++/15463"}, {"sha": "fa342700d65fec44118a4246d9d8a842c0a3b443", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c672b950e3427d9abb5b74d635e586bda74c4e/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c672b950e3427d9abb5b74d635e586bda74c4e/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=84c672b950e3427d9abb5b74d635e586bda74c4e", "patch": "@@ -464,7 +464,20 @@ value_replacement (basic_block bb, tree phi, tree arg0, tree arg1)\n       edge e;\n       tree arg;\n \n+      /* For NE_EXPR, we want to build an assignment result = arg where\n+\t arg is the PHI argument associated with the true edge.  For\n+\t EQ_EXPR we want the PHI argument associated with the false edge.  */\n       e = (TREE_CODE (cond) == NE_EXPR ? true_edge : false_edge);\n+\n+      /* Unfortunately, E may not reach BB (it may instead have gone to\n+\t OTHER_BLOCK).  If that is the case, then we want the single outgoing\n+\t edge from OTHER_BLOCK which reaches BB and represents the desired\n+\t path from COND_BLOCK.  */\n+      if (e->dest == other_block)\n+\te = e->dest->succ;\n+\n+      /* Now we know the incoming edge to BB that has the argument for the\n+\t RHS of our new assignment statement.  */\n       if (PHI_ARG_EDGE (phi, 0) == e)\n \targ = arg0;\n       else"}]}