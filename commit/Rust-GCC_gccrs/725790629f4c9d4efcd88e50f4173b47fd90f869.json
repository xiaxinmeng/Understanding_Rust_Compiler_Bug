{"sha": "725790629f4c9d4efcd88e50f4173b47fd90f869", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI1NzkwNjI5ZjRjOWQ0ZWZjZDg4ZTUwZjQxNzNiNDdmZDkwZjg2OQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cygnus.com", "date": "2000-02-18T18:22:10Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2000-02-18T18:22:10Z"}, "message": "Prevent emission of \"a.lign 0\" directives\n\nFrom-SVN: r32052", "tree": {"sha": "c26369d1fb9467c96e1407110dd6668104cf2d4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c26369d1fb9467c96e1407110dd6668104cf2d4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/725790629f4c9d4efcd88e50f4173b47fd90f869", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/725790629f4c9d4efcd88e50f4173b47fd90f869", "html_url": "https://github.com/Rust-GCC/gccrs/commit/725790629f4c9d4efcd88e50f4173b47fd90f869", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/725790629f4c9d4efcd88e50f4173b47fd90f869/comments", "author": null, "committer": null, "parents": [{"sha": "a0f4cca64282e20ad9736528dc5d1b20ce4536e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0f4cca64282e20ad9736528dc5d1b20ce4536e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0f4cca64282e20ad9736528dc5d1b20ce4536e0"}], "stats": {"total": 39, "additions": 29, "deletions": 10}, "files": [{"sha": "db5b0a851cef6ec44231bf884b4fdbc6e43fe37c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/725790629f4c9d4efcd88e50f4173b47fd90f869/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/725790629f4c9d4efcd88e50f4173b47fd90f869/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=725790629f4c9d4efcd88e50f4173b47fd90f869", "patch": "@@ -1,3 +1,11 @@\n+2000-02-18  Nick Clifton  <nickc@cygnus.com>\n+\n+\t* config/arm/elf.h (ASM_OUTPUT_ALIGN): Do not generate\n+\tanything for an alignment of zero.\n+\n+\t* config/arm/thumb.h (ASM_OUTPUT_ALIGN): Do not generate\n+\tanything for an alignment of zero.\n+\n 2000-02-18  Martin von Loewis  <loewis@informatik.hu-berlin.de>\n \n \t* gcc.texi (Bug Reporting): Refer to bugs.html."}, {"sha": "9b620206da6faac5517f199e837dd31cf5ecb196", "filename": "gcc/config/arm/elf.h", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/725790629f4c9d4efcd88e50f4173b47fd90f869/gcc%2Fconfig%2Farm%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/725790629f4c9d4efcd88e50f4173b47fd90f869/gcc%2Fconfig%2Farm%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Felf.h?ref=725790629f4c9d4efcd88e50f4173b47fd90f869", "patch": "@@ -356,8 +356,14 @@ dtors_section ()\t\t\t\t\t\t\t\\\n    not defined, the default value is `BIGGEST_ALIGNMENT'.  */\n #define MAX_OFILE_ALIGNMENT (32768 * 8)\n \n-/* Align output to a power of two.  */\n-#define ASM_OUTPUT_ALIGN(STREAM, POWER)  \\\n-  fprintf (STREAM, \"\\t.align\\t%d\\n\", POWER)\n+/* Align output to a power of two.  Note \".align 0\" is redundant,\n+   and also GAS will treat it as \".align 2\" which we do not want.  */\n+#define ASM_OUTPUT_ALIGN(STREAM, POWER)\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      if ((POWER) > 0)\t\t\t\t\t\\\n+\tfprintf (STREAM, \"\\t.align\\t%d\\n\", POWER);\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (0)\n \n #include \"arm/aout.h\""}, {"sha": "2366e14c356493818669a0f79fa51035db62f4df", "filename": "gcc/config/arm/thumb.h", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/725790629f4c9d4efcd88e50f4173b47fd90f869/gcc%2Fconfig%2Farm%2Fthumb.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/725790629f4c9d4efcd88e50f4173b47fd90f869/gcc%2Fconfig%2Farm%2Fthumb.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb.h?ref=725790629f4c9d4efcd88e50f4173b47fd90f869", "patch": "@@ -139,13 +139,18 @@ extern int target_flags;\n #define ASM_OUTPUT_SKIP(STREAM, NBYTES)  \\\n   fprintf ((STREAM), \"\\t.space\\t%u\\n\", (NBYTES))\n \n-/* This is how to output an assembler line\n-   that says to advance the location counter\n-   to a multiple of 2**LOG bytes.  */\n-#define ASM_OUTPUT_ALIGN(STREAM,LOG)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  fprintf (STREAM, \"\\t.align\\t%d\\n\", (LOG));\t\t\t\t\\\n-}\n+/* This is how to output an assembler line that says to advance the\n+   location counter to a multiple of 2**LOG bytes.  Advancing to the\n+   nearest 1 byte boundary is redundant, and anyway the assembler would\n+   treat it as meaning \"advance to nearest 4 byte boundary\", which we do\n+   not want.  */\n+#define ASM_OUTPUT_ALIGN(STREAM,LOG)\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      if ((LOG) > 0)\t\t\t\t\t\\\n+\tfprintf (STREAM, \"\\t.align\\t%d\\n\", LOG);\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (0)\n \n /* Output a common block */\n #define ASM_OUTPUT_COMMON(STREAM, NAME, SIZE, ROUNDED)  \t\t\\"}]}