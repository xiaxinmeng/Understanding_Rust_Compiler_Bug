{"sha": "a4bd198ceeb0445d62574073a8326312a284a16b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRiZDE5OGNlZWIwNDQ1ZDYyNTc0MDczYTgzMjYzMTJhMjg0YTE2Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-04-27T05:17:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-04-27T05:17:20Z"}, "message": "re PR c++/42687 (The prevention of ADL with the help of parentheses doesn't work)\n\n\tPR c++/42687\n\t* parser.c (cp_parser_primary_expression): Set *idk to\n\tCP_ID_KIND_NONE for a parenthesized identifier.\n\nFrom-SVN: r173007", "tree": {"sha": "d337fd4219b2fd8ae43096e87520722f232b4c5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d337fd4219b2fd8ae43096e87520722f232b4c5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4bd198ceeb0445d62574073a8326312a284a16b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4bd198ceeb0445d62574073a8326312a284a16b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4bd198ceeb0445d62574073a8326312a284a16b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4bd198ceeb0445d62574073a8326312a284a16b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0dc5e4ac9d0263c8c2d2d3f4029212833a26f6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0dc5e4ac9d0263c8c2d2d3f4029212833a26f6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0dc5e4ac9d0263c8c2d2d3f4029212833a26f6a"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "c6e83decff2a95856e101ced725ab98c43f78ef2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4bd198ceeb0445d62574073a8326312a284a16b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4bd198ceeb0445d62574073a8326312a284a16b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a4bd198ceeb0445d62574073a8326312a284a16b", "patch": "@@ -1,5 +1,9 @@\n 2011-04-26  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/42687\n+\t* parser.c (cp_parser_primary_expression): Set *idk to\n+\tCP_ID_KIND_NONE for a parenthesized identifier.\n+\n \t* ptree.c (cxx_print_type) [TYPENAME_TYPE]: Dump fullname.\n \t(cxx_print_identifier): Correct indentation.\n "}, {"sha": "68ce052612a2e6e3ff2ae2798e0704c529be26f5", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4bd198ceeb0445d62574073a8326312a284a16b/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4bd198ceeb0445d62574073a8326312a284a16b/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=a4bd198ceeb0445d62574073a8326312a284a16b", "patch": "@@ -3437,6 +3437,12 @@ cp_parser_primary_expression (cp_parser *parser,\n \t       `&A::B' might be a pointer-to-member, but `&(A::B)' is\n \t       not.  */\n \t    finish_parenthesized_expr (expr);\n+\t    /* DR 705: Wrapping an unqualified name in parentheses\n+\t       suppresses arg-dependent lookup.  We want to pass back\n+\t       CP_ID_KIND_QUALIFIED for suppressing vtable lookup\n+\t       (c++/37862), but none of the others.  */\n+\t    if (*idk != CP_ID_KIND_QUALIFIED)\n+\t      *idk = CP_ID_KIND_NONE;\n \t  }\n \t/* The `>' token might be the end of a template-id or\n \t   template-parameter-list now.  */"}, {"sha": "f39f7edef7db199b673916d87cbf8e7245873811", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4bd198ceeb0445d62574073a8326312a284a16b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4bd198ceeb0445d62574073a8326312a284a16b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a4bd198ceeb0445d62574073a8326312a284a16b", "patch": "@@ -1,5 +1,7 @@\n 2011-04-26  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/lookup/koenig13.C: New.\n+\n \t* g++.dg/cpp0x/initlist48.C: New.\n \n 2011-04-25  Jason Merrill  <jason@redhat.com>"}, {"sha": "625a181f6214a7a529439e5a3c59a92dc518ed36", "filename": "gcc/testsuite/g++.dg/lookup/koenig13.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4bd198ceeb0445d62574073a8326312a284a16b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4bd198ceeb0445d62574073a8326312a284a16b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig13.C?ref=a4bd198ceeb0445d62574073a8326312a284a16b", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/42687\n+// DR 705\n+\n+namespace N\n+{\n+    struct S { };\n+    void f(const S &) { }\n+}\n+\n+void f(const N::S &) { }\n+\n+int main()\n+{\n+    N::S v;\n+    (f)(v); // no ambiguity: ADL is prevented with (), only ::f is considered\n+}"}]}