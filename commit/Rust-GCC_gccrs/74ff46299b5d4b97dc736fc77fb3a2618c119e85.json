{"sha": "74ff46299b5d4b97dc736fc77fb3a2618c119e85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRmZjQ2Mjk5YjVkNGI5N2RjNzM2ZmM3N2ZiM2EyNjE4YzExOWU4NQ==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2000-10-17T06:52:06Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2000-10-17T06:52:06Z"}, "message": "c-common.h (warn_missing_format_attribute): New variable.\n\n\t* c-common.h (warn_missing_format_attribute): New variable.\n\t* c-decl.c (warn_missing_format_attribute): New variable.\n\t(c_decode_option): Decode -Wmissing-format-attribute and\n\t-Wno-missing-format-attribute.\n\t* c-common.c (check_function_format): If\n\t-Wmissing-format-attribute, give a warning where a vprintf or\n\tvscanf function is called by a function without its own printf or\n\tscanf attribute.\n\t* toplev.c (documented_lang_options): Add\n\t-Wmissing-format-attribute.\n\t* invoke.texi: Document -Wmissing-format-attribute.\n\ncp:\n\t* decl2.c (warn_missing_format_attribute): New variable.\n\t(lang_decode_option): Decode -Wmissing-format-attribute.\n\ntestsuite:\n\t* gcc.dg/format-miss-1.c: New test.\n\nFrom-SVN: r36897", "tree": {"sha": "0d78db7f736f6806e242f06d781a29dd0b8f8ae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d78db7f736f6806e242f06d781a29dd0b8f8ae2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74ff46299b5d4b97dc736fc77fb3a2618c119e85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74ff46299b5d4b97dc736fc77fb3a2618c119e85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74ff46299b5d4b97dc736fc77fb3a2618c119e85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74ff46299b5d4b97dc736fc77fb3a2618c119e85/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d3b0e2c196a53b8d0e0b8ecabf5b110f666c442", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d3b0e2c196a53b8d0e0b8ecabf5b110f666c442", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d3b0e2c196a53b8d0e0b8ecabf5b110f666c442"}], "stats": {"total": 114, "additions": 113, "deletions": 1}, "files": [{"sha": "791233cc391337154cc21464e14c1aefa158686e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74ff46299b5d4b97dc736fc77fb3a2618c119e85", "patch": "@@ -1,3 +1,17 @@\n+2000-10-17  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* c-common.h (warn_missing_format_attribute): New variable.\n+\t* c-decl.c (warn_missing_format_attribute): New variable.\n+\t(c_decode_option): Decode -Wmissing-format-attribute and\n+\t-Wno-missing-format-attribute.\n+\t* c-common.c (check_function_format): If\n+\t-Wmissing-format-attribute, give a warning where a vprintf or\n+\tvscanf function is called by a function without its own printf or\n+\tscanf attribute.\n+\t* toplev.c (documented_lang_options): Add\n+\t-Wmissing-format-attribute.\n+\t* invoke.texi: Document -Wmissing-format-attribute.\n+\n 2000-10-17  Marc Espie <espie@openbsd.org>\n \n \t* invoke.texi (-shared): Insist on requiring code generation flags"}, {"sha": "db28750bc5698a94241b1df142a1ab13c08432d7", "filename": "gcc/c-common.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=74ff46299b5d4b97dc736fc77fb3a2618c119e85", "patch": "@@ -1926,7 +1926,9 @@ record_international_format (name, assembler_name, format_num)\n    NAME is the function identifier.\n    ASSEMBLER_NAME is the function's assembler identifier.\n    (Either NAME or ASSEMBLER_NAME, but not both, may be NULL_TREE.)\n-   PARAMS is the list of argument values.  */\n+   PARAMS is the list of argument values.  Also, if -Wmissing-format-attribute,\n+   warn for calls to vprintf or vscanf in functions with no such format\n+   attribute themselves.  */\n \n void\n check_function_format (status, name, assembler_name, params)\n@@ -1946,6 +1948,20 @@ check_function_format (status, name, assembler_name, params)\n \t{\n \t  /* Yup; check it.  */\n \t  check_format_info (status, info, params);\n+\t  if (warn_missing_format_attribute && info->first_arg_num == 0\n+\t      && (format_types[info->format_type].flags & FMT_FLAG_ARG_CONVERT))\n+\t    {\n+\t      function_format_info *info2;\n+\t      for (info2 = function_format_list; info2; info2 = info2->next)\n+\t\tif ((info2->assembler_name\n+\t\t     ? (info2->assembler_name == DECL_ASSEMBLER_NAME (current_function_decl))\n+\t\t     : (info2->name == DECL_NAME (current_function_decl)))\n+\t\t    && info2->format_type == info->format_type)\n+\t\t  break;\n+\t      if (info2 == NULL)\n+\t\twarning (\"function might be possible candidate for `%s' format attribute\",\n+\t\t\t format_types[info->format_type].name);\n+\t    }\n \t  break;\n \t}\n     }"}, {"sha": "3781adffdad2155c02f03af5caef198ff21e749d", "filename": "gcc/c-common.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=74ff46299b5d4b97dc736fc77fb3a2618c119e85", "patch": "@@ -337,6 +337,10 @@ extern int flag_const_strings;\n \n extern int warn_format;\n \n+/* Warn about functions which might be candidates for format attributes.  */\n+\n+extern int warn_missing_format_attribute;\n+\n /* Nonzero means do some things the same way PCC does.  */\n \n extern int flag_traditional;"}, {"sha": "f95cccc7b488f507dc25b594f74cc3f414da507c", "filename": "gcc/c-decl.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=74ff46299b5d4b97dc736fc77fb3a2618c119e85", "patch": "@@ -416,6 +416,10 @@ int warn_cast_qual;\n \n int warn_bad_function_cast;\n \n+/* Warn about functions which might be candidates for format attributes.  */\n+\n+int warn_missing_format_attribute;\n+\n /* Warn about traditional constructs whose meanings changed in ANSI C.  */\n \n int warn_traditional;\n@@ -716,6 +720,10 @@ c_decode_option (argc, argv)\n     warn_missing_noreturn = 1;\n   else if (!strcmp (p, \"-Wno-missing-noreturn\"))\n     warn_missing_noreturn = 0;\n+  else if (!strcmp (p, \"-Wmissing-format-attribute\"))\n+    warn_missing_format_attribute = 1;\n+  else if (!strcmp (p, \"-Wno-missing-format-attribute\"))\n+    warn_missing_format_attribute = 0;\n   else if (!strcmp (p, \"-Wpointer-arith\"))\n     warn_pointer_arith = 1;\n   else if (!strcmp (p, \"-Wno-pointer-arith\"))"}, {"sha": "b9c74aded94a2720c7f415848bf75f7f59d857d8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=74ff46299b5d4b97dc736fc77fb3a2618c119e85", "patch": "@@ -1,3 +1,8 @@\n+2000-10-17  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* decl2.c (warn_missing_format_attribute): New variable.\n+\t(lang_decode_option): Decode -Wmissing-format-attribute.\n+\n 2000-10-16  Mark Mitchell  <mark@codesourcery.com>\n \n \t* typeck.c (qualify_type): Remove."}, {"sha": "4f6b57e15d78b77dbc2d85a02d9b002f814fae26", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=74ff46299b5d4b97dc736fc77fb3a2618c119e85", "patch": "@@ -290,6 +290,10 @@ int warn_float_equal = 0;\n \n int warn_format;\n \n+/* Warn about functions which might be candidates for format attributes.  */\n+\n+int warn_missing_format_attribute;\n+\n /* Warn about a subscript that has type char.  */\n \n int warn_char_subscripts;\n@@ -751,6 +755,8 @@ lang_decode_option (argc, argv)\n \twarn_float_equal = setting;\n       else if (!strcmp (p, \"format\"))\n \twarn_format = setting;\n+      else if (!strcmp (p, \"missing-format-attribute\"))\n+\twarn_missing_format_attribute = setting;\n       else if (!strcmp (p, \"conversion\"))\n \twarn_conversion = setting;\n       else if (!strcmp (p, \"parentheses\"))"}, {"sha": "47d4fd53e0f6715b119e70340175de5829b7bdf8", "filename": "gcc/invoke.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=74ff46299b5d4b97dc736fc77fb3a2618c119e85", "patch": "@@ -2012,6 +2012,16 @@ be taken to manually verify functions actually do not ever return before\n adding the @code{noreturn} attribute, otherwise subtle code generation\n bugs could be introduced.\n \n+@item -Wmissing-format-attribute\n+If @samp{-Wformat} is enabled, also warn about functions which might be\n+candidates for @code{format} attributes.  Note these are only possible\n+candidates, not absolute ones.  GCC will guess that @code{format}\n+attributes might be appropriate for any function that calls a function\n+like @code{vprintf} or @code{vscanf}, but this might not always be the\n+case, and some functions for which @code{format} attributes are\n+appropriate may not be detected.  This option has no effect unless\n+@samp{-Wformat} is enabled (possibly by @samp{-Wall}).\n+\n @item -Wpacked\n Warn if a structure is given the packed attribute, but the packed\n attribute has no effect on the layout or size of the structure.  "}, {"sha": "04e3adb6cab2ee398d5bc6c59897abfa7fe4b29c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=74ff46299b5d4b97dc736fc77fb3a2618c119e85", "patch": "@@ -1,3 +1,7 @@\n+2000-10-17  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* gcc.dg/format-miss-1.c: New test.\n+\n 2000-10-16  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.c-torture/execute/20001013-1.c: New test."}, {"sha": "a5d467adc352e4f5e56b365d3bcc6fc6cdd0c26e", "filename": "gcc/testsuite/gcc.dg/format-miss-1.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2Ftestsuite%2Fgcc.dg%2Fformat-miss-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2Ftestsuite%2Fgcc.dg%2Fformat-miss-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat-miss-1.c?ref=74ff46299b5d4b97dc736fc77fb3a2618c119e85", "patch": "@@ -0,0 +1,42 @@\n+/* Test for warnings for missing format attributes.  */\n+/* Origin: Joseph Myers <jsm28@cam.ac.uk> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99 -Wformat -Wmissing-format-attribute\" } */\n+\n+#include <stdarg.h>\n+\n+extern int vprintf (const char *restrict, va_list);\n+extern int vscanf (const char *restrict, va_list);\n+\n+void\n+foo (const char *fmt, ...)\n+{\n+  va_list ap;\n+  va_start (ap, fmt);\n+  vprintf (fmt, ap); /* { dg-warning \"candidate\" \"printf attribute warning\" } */\n+  va_end (ap);\n+}\n+\n+void\n+bar (const char *fmt, ...)\n+{\n+  va_list ap;\n+  va_start (ap, fmt);\n+  vscanf (fmt, ap); /* { dg-warning \"candidate\" \"scanf attribute warning\" } */\n+  va_end (ap);\n+}\n+\n+__attribute__((__format__(__printf__, 1, 2))) void\n+foo2 (const char *fmt, ...)\n+{\n+  va_list ap;\n+  va_start (ap, fmt);\n+  vprintf (fmt, ap);\n+  va_end (ap);\n+}\n+\n+void\n+vfoo (const char *fmt, va_list arg)\n+{\n+  vprintf (fmt, arg); /* { dg-warning \"candidate\" \"printf attribute warning 2\" } */\n+}"}, {"sha": "cccdb3521474fc5a65d72cba199351c089cc5f62", "filename": "gcc/toplev.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74ff46299b5d4b97dc736fc77fb3a2618c119e85/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=74ff46299b5d4b97dc736fc77fb3a2618c119e85", "patch": "@@ -1207,6 +1207,9 @@ documented_lang_options[] =\n   { \"-Wmissing-noreturn\",\n     \"Warn about functions which might be candidates for attribute noreturn\" },\n   { \"-Wno-missing-noreturn\", \"\" },\n+  { \"-Wmissing-format-attribute\",\n+    \"Warn about functions which might be candidates for format attributes\" },\n+  { \"-Wno-missing-format-attribute\", \"\" },\n   { \"-Wcast-qual\", \"Warn about casts which discard qualifiers\"},\n   { \"-Wno-cast-qual\", \"\" },\n   { \"-Wchar-subscripts\", \"Warn about subscripts whose type is 'char'\"},"}]}