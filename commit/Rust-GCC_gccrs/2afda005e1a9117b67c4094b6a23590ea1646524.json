{"sha": "2afda005e1a9117b67c4094b6a23590ea1646524", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFmZGEwMDVlMWE5MTE3YjY3YzQwOTRiNmEyMzU5MGVhMTY0NjUyNA==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@adacore.com", "date": "2012-02-27T17:25:28Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-02-27T17:25:28Z"}, "message": "decl.c (gnat_to_gnu_entity): Reuse dummy fat type for gnu_ptr_template and gnu_template_type.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) [E_String_Type,\n\tE_Array_Type]: Reuse dummy fat type for gnu_ptr_template and\n\tgnu_template_type.\n\nFrom-SVN: r184605", "tree": {"sha": "73d40ff35bfb198a0911e580b2ab06e0f609f407", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73d40ff35bfb198a0911e580b2ab06e0f609f407"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2afda005e1a9117b67c4094b6a23590ea1646524", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2afda005e1a9117b67c4094b6a23590ea1646524", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2afda005e1a9117b67c4094b6a23590ea1646524", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2afda005e1a9117b67c4094b6a23590ea1646524/comments", "author": {"login": "gingold-adacore", "id": 16334725, "node_id": "MDQ6VXNlcjE2MzM0NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16334725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingold-adacore", "html_url": "https://github.com/gingold-adacore", "followers_url": "https://api.github.com/users/gingold-adacore/followers", "following_url": "https://api.github.com/users/gingold-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/gingold-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingold-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingold-adacore/subscriptions", "organizations_url": "https://api.github.com/users/gingold-adacore/orgs", "repos_url": "https://api.github.com/users/gingold-adacore/repos", "events_url": "https://api.github.com/users/gingold-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/gingold-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "afbf6e97a557f6af04aac6eeba3de6c20f0082f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afbf6e97a557f6af04aac6eeba3de6c20f0082f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afbf6e97a557f6af04aac6eeba3de6c20f0082f7"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "b0b51ee4f47f4296ec8ff54bf242cd33de561dc4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afda005e1a9117b67c4094b6a23590ea1646524/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afda005e1a9117b67c4094b6a23590ea1646524/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2afda005e1a9117b67c4094b6a23590ea1646524", "patch": "@@ -1,3 +1,9 @@\n+2012-02-27  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) [E_String_Type,\n+\tE_Array_Type]: Reuse dummy fat type for gnu_ptr_template and\n+\tgnu_template_type.\n+\n 2012-02-27  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/ada-tree.h (TYPE_PACKED_ARRAY_TYPE_P): Add checking."}, {"sha": "80ad5a3fdbb5c264d66d5f52eb89384b82ff733e", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afda005e1a9117b67c4094b6a23590ea1646524/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afda005e1a9117b67c4094b6a23590ea1646524/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=2afda005e1a9117b67c4094b6a23590ea1646524", "patch": "@@ -2003,8 +2003,8 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \tconst bool convention_fortran_p\n \t  = (Convention (gnat_entity) == Convention_Fortran);\n \tconst int ndim = Number_Dimensions (gnat_entity);\n-\ttree gnu_template_type = make_node (RECORD_TYPE);\n-\ttree gnu_ptr_template = build_pointer_type (gnu_template_type);\n+\ttree gnu_template_type;\n+\ttree gnu_ptr_template;\n \ttree gnu_template_reference, gnu_template_fields, gnu_fat_type;\n \ttree *gnu_index_types = XALLOCAVEC (tree, ndim);\n \ttree *gnu_temp_fields = XALLOCAVEC (tree, ndim);\n@@ -2035,9 +2035,16 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t    TYPE_NAME (gnu_fat_type) = NULL_TREE;\n \t    /* Save the contents of the dummy type for update_pointer_to.  */\n \t    TYPE_POINTER_TO (gnu_type) = copy_type (gnu_fat_type);\n+\t    gnu_ptr_template =\n+\t      TREE_TYPE (TREE_CHAIN (TYPE_FIELDS (gnu_fat_type)));\n+\t    gnu_template_type = TREE_TYPE (gnu_ptr_template);\n \t  }\n \telse\n-\t  gnu_fat_type = make_node (RECORD_TYPE);\n+\t  {\n+\t    gnu_fat_type = make_node (RECORD_TYPE);\n+\t    gnu_template_type = make_node (RECORD_TYPE);\n+\t    gnu_ptr_template = build_pointer_type (gnu_template_type);\n+\t  }\n \n \t/* Make a node for the array.  If we are not defining the array\n \t   suppress expanding incomplete types.  */"}, {"sha": "a267742a66fa520892b976b381c9559bf3245f59", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afda005e1a9117b67c4094b6a23590ea1646524/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afda005e1a9117b67c4094b6a23590ea1646524/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2afda005e1a9117b67c4094b6a23590ea1646524", "patch": "@@ -1,3 +1,7 @@\n+2012-02-27  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* gnat.dg/array20.ad[sb]: New test.\n+\n 2012-02-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/52375"}, {"sha": "86eb61b4ce8b81d6863cbf5adf50cff5022ff514", "filename": "gcc/testsuite/gnat.dg/array20.adb", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afda005e1a9117b67c4094b6a23590ea1646524/gcc%2Ftestsuite%2Fgnat.dg%2Farray20.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afda005e1a9117b67c4094b6a23590ea1646524/gcc%2Ftestsuite%2Fgnat.dg%2Farray20.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray20.adb?ref=2afda005e1a9117b67c4094b6a23590ea1646524", "patch": "@@ -0,0 +1,13 @@\n+-- { dg-do assemble }\n+\n+package body Array20 is\n+\n+   type Arr is array (Positive range <>) of Integer;\n+\n+   type P_Arr is access Arr;\n+\n+   N : constant P_Arr := null;\n+\n+   Table : P_Arr := N;\n+\n+end Array20;"}, {"sha": "b132b27e5d4b086d844e7a4d102736bbc3348584", "filename": "gcc/testsuite/gnat.dg/array20.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afda005e1a9117b67c4094b6a23590ea1646524/gcc%2Ftestsuite%2Fgnat.dg%2Farray20.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afda005e1a9117b67c4094b6a23590ea1646524/gcc%2Ftestsuite%2Fgnat.dg%2Farray20.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray20.ads?ref=2afda005e1a9117b67c4094b6a23590ea1646524", "patch": "@@ -0,0 +1,5 @@\n+package Array20 is\n+\n+   pragma Elaborate_Body;\n+\n+end array20;"}]}