{"sha": "a5f38dd83e88a6f2325798cd46a1b5ed5107e2ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVmMzhkZDgzZTg4YTZmMjMyNTc5OGNkNDZhMWI1ZWQ1MTA3ZTJjZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-12-14T14:58:49Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-04-29T08:00:44Z"}, "message": "[Ada] Fix static computation of 'Succ for floating point without denormals\n\ngcc/ada/\n\n\t* eval_fat.adb (Succ): Add a special case for zero if the type does\n\tnot support denormalized numbers.  Always use the canonical formula\n\tin other cases and add commentary throughout the function.", "tree": {"sha": "509101f8a922aaa9e91060cd7d3def81cc26e9c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/509101f8a922aaa9e91060cd7d3def81cc26e9c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5f38dd83e88a6f2325798cd46a1b5ed5107e2ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5f38dd83e88a6f2325798cd46a1b5ed5107e2ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5f38dd83e88a6f2325798cd46a1b5ed5107e2ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5f38dd83e88a6f2325798cd46a1b5ed5107e2ce/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4345c9e79ec17c066b4d2d46dd547adbe8fa5e1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4345c9e79ec17c066b4d2d46dd547adbe8fa5e1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4345c9e79ec17c066b4d2d46dd547adbe8fa5e1d"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "69ba7428933a4006b06454ea3fbb2b3d6de5bf7d", "filename": "gcc/ada/eval_fat.adb", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5f38dd83e88a6f2325798cd46a1b5ed5107e2ce/gcc%2Fada%2Feval_fat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5f38dd83e88a6f2325798cd46a1b5ed5107e2ce/gcc%2Fada%2Feval_fat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feval_fat.adb?ref=a5f38dd83e88a6f2325798cd46a1b5ed5107e2ce", "patch": "@@ -729,22 +729,30 @@ package body Eval_Fat is\n       New_Frac : T;\n \n    begin\n+      --  Treat zero as a regular denormalized number if they are supported,\n+      --  otherwise return the smallest normalized number.\n+\n       if UR_Is_Zero (X) then\n-         Exp := Emin;\n+         if Has_Denormals (RT) then\n+            Exp := Emin;\n+         else\n+            return Scaling (RT, Ureal_1, Emin - 1);\n+         end if;\n       end if;\n \n-      --  Set exponent such that the radix point will be directly following the\n-      --  mantissa after scaling.\n-\n-      if Has_Denormals (RT) or Exp /= Emin then\n-         Exp := Exp - Mantissa;\n-      else\n-         Exp := Exp - 1;\n-      end if;\n+      --  Multiply the number by 2.0**(Mantissa-Exp) so that the radix point\n+      --  will be directly following the mantissa after scaling.\n \n+      Exp := Exp - Mantissa;\n       Frac := Scaling (RT, X, -Exp);\n+\n+      --  Round to the neareast integer towards +Inf\n+\n       New_Frac := Ceiling (RT, Frac);\n \n+      --  If the rounding was a NOP, add one, except for -2.0**(Mantissa-1)\n+      --  because the exponent is going to be reduced.\n+\n       if New_Frac = Frac then\n          if New_Frac = Scaling (RT, -Ureal_1, Mantissa - 1) then\n             New_Frac := New_Frac + Scaling (RT, Ureal_1, Uint_Minus_1);\n@@ -753,6 +761,8 @@ package body Eval_Fat is\n          end if;\n       end if;\n \n+      --  Divide back by 2.0**(Mantissa-Exp) to get the final result\n+\n       return Scaling (RT, New_Frac, Exp);\n    end Succ;\n "}]}