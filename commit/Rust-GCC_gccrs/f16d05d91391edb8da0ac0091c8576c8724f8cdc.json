{"sha": "f16d05d91391edb8da0ac0091c8576c8724f8cdc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE2ZDA1ZDkxMzkxZWRiOGRhMGFjMDA5MWM4NTc2Yzg3MjRmOGNkYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-07T16:15:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-07T16:15:57Z"}, "message": "[multiple changes]\n\n2009-04-07  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-sothco.ads (Int_Access): Remove extraneous access type (use\n\tanonymous access instead).\n\t(Get_Socket_From_Set): Fix incorrectly reverted formals\n\tLast and Socket to match the underlying C routine.\n\n\t* g-socket.adb\n\t(Get): Use named parameter associations instead of positional ones in\n\tcall go Get_Socket_From_Set, since this routine has two formals of the\n\tsame type.\n\n\t* g-socthi-vms.adb, g-socthi-vms.ads, g-socthi-vxworks.adb,\n\tg-socthi-vxworks.ads, g-socthi-mingw.ads, g-socthi.adb, g-socthi.ads:\n\t(C_Ioctl, Syscall_Ioctl): use \"access C.int\" instead of \"Int_Access\"\n\tfor type of Arg formal.\n\n\t* sem_warn.adb: Minor reformatting\n\n2009-04-07  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.adb (Has_Tagged_Component): Fix typo in loop that iterates\n\tover record components.\n\n2009-04-07  Nicolas Roche  <roche@adacore.com>\n\n\t* gsocket.h:\n\tDon't include resolvLib.h on VxWorks 6 (kernel and rtp). This library\n\thas disappeared between VxWorks 6.4 and VxWorks 6.5\n\tIn RTP mode use time.h instead of times.h\n\n2009-04-07  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Op_Concat): Improve lower bound handling\n\n2009-04-07  Kevin Pouget  <pouget@adacore.com>\n\n\t* exp_dist.adb: Modify Build_From_Any_Fonction procedure to correct\n\texpanded code for constrained types.\n\n2009-04-07  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Analyze_Overloaded_Selected_Component): implement\n\tAI05-105: in an object renaming declaration, anonymousness is a name\n\tresolution rule.\n\n\tsem_ch8.adb (Analyze_Object_Renaming): Ditto.\n\n2009-04-07  Arnaud Charlet  <charlet@adacore.com>\n\n\t* g-comlin.adb (Expansion): Fix old regression: also return directory\n\tnames when matching.\n\nFrom-SVN: r145689", "tree": {"sha": "9c171f84305a0b31542ecb4136c605cc2fc2f573", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c171f84305a0b31542ecb4136c605cc2fc2f573"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f16d05d91391edb8da0ac0091c8576c8724f8cdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f16d05d91391edb8da0ac0091c8576c8724f8cdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f16d05d91391edb8da0ac0091c8576c8724f8cdc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f16d05d91391edb8da0ac0091c8576c8724f8cdc/comments", "author": null, "committer": null, "parents": [{"sha": "2fc05e3d5e8689d847e7392f7998a6e363e3918d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fc05e3d5e8689d847e7392f7998a6e363e3918d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fc05e3d5e8689d847e7392f7998a6e363e3918d"}], "stats": {"total": 444, "additions": 319, "deletions": 125}, "files": [{"sha": "ba395384fbd343933f4fd141619b70df896a9701", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f16d05d91391edb8da0ac0091c8576c8724f8cdc", "patch": "@@ -1,3 +1,56 @@\n+2009-04-07  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-sothco.ads (Int_Access): Remove extraneous access type (use\n+\tanonymous access instead).\n+\t(Get_Socket_From_Set): Fix incorrectly reverted formals\n+\tLast and Socket to match the underlying C routine.\n+\n+\t* g-socket.adb\n+\t(Get): Use named parameter associations instead of positional ones in\n+\tcall go Get_Socket_From_Set, since this routine has two formals of the\n+\tsame type.\n+\n+\t* g-socthi-vms.adb, g-socthi-vms.ads, g-socthi-vxworks.adb,\n+\tg-socthi-vxworks.ads, g-socthi-mingw.ads, g-socthi.adb, g-socthi.ads:\n+\t(C_Ioctl, Syscall_Ioctl): use \"access C.int\" instead of \"Int_Access\"\n+\tfor type of Arg formal.\n+\n+\t* sem_warn.adb: Minor reformatting\n+\n+2009-04-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.adb (Has_Tagged_Component): Fix typo in loop that iterates\n+\tover record components.\n+\n+2009-04-07  Nicolas Roche  <roche@adacore.com>\n+\n+\t* gsocket.h:\n+\tDon't include resolvLib.h on VxWorks 6 (kernel and rtp). This library\n+\thas disappeared between VxWorks 6.4 and VxWorks 6.5\n+\tIn RTP mode use time.h instead of times.h\n+\n+2009-04-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Op_Concat): Improve lower bound handling\n+\n+2009-04-07  Kevin Pouget  <pouget@adacore.com>\n+\n+\t* exp_dist.adb: Modify Build_From_Any_Fonction procedure to correct\n+\texpanded code for constrained types.\n+\n+2009-04-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Overloaded_Selected_Component): implement\n+\tAI05-105: in an object renaming declaration, anonymousness is a name\n+\tresolution rule.\n+\n+\t* sem_ch8.adb (Analyze_Object_Renaming): Ditto.\n+\n+2009-04-07  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* g-comlin.adb (Expansion): Fix old regression: also return directory\n+\tnames when matching.\n+\n 2009-04-07  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch4.adb:"}, {"sha": "fb116444de1eec5e09e7f90a5989cbbed6b3892f", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=f16d05d91391edb8da0ac0091c8576c8724f8cdc", "patch": "@@ -2368,7 +2368,14 @@ package body Exp_Ch4 is\n             --  Set lower bound to lower bound of index subtype. This is not\n             --  right where the index subtype bound is dynamic ???\n \n-            Fixed_Low_Bound (NN) := Expr_Value (Type_Low_Bound (Ityp));\n+            if Compile_Time_Known_Value (Type_Low_Bound (Ityp)) then\n+               Fixed_Low_Bound (NN) :=\n+                 Expr_Value (Type_Low_Bound (Ityp));\n+            else\n+               Fixed_Low_Bound (NN) :=\n+                 Expr_Value (Type_Low_Bound (Base_Type (Ityp)));\n+            end if;\n+\n             Set := True;\n \n          --  String literal case (can only occur for strings of course)"}, {"sha": "14136fd4acf0562d9189aeca87b447ba0193edc6", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 74, "deletions": 31, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=f16d05d91391edb8da0ac0091c8576c8724f8cdc", "patch": "@@ -9114,39 +9114,82 @@ package body Exp_Dist is\n                         New_Occurrence_Of (Any_Parameter, Loc),\n                         New_Occurrence_Of (Strm, Loc))));\n \n-                  --  declare\n-                  --     Res : constant T := T'Input (Strm);\n-                  --  begin\n-                  --     Release_Buffer (Strm);\n-                  --     return Res;\n-                  --  end;\n-\n-                  Append_To (Stms, Make_Block_Statement (Loc,\n-                    Declarations => New_List (\n-                      Make_Object_Declaration (Loc,\n-                        Defining_Identifier => Res,\n-                        Constant_Present    => True,\n-                        Object_Definition   => New_Occurrence_Of (Typ, Loc),\n-                        Expression          =>\n-                            Make_Attribute_Reference (Loc,\n-                              Prefix         => New_Occurrence_Of (Typ, Loc),\n-                              Attribute_Name => Name_Input,\n-                              Expressions => New_List (\n-                                Make_Attribute_Reference (Loc,\n-                                  Prefix => New_Occurrence_Of (Strm, Loc),\n-                                  Attribute_Name => Name_Access))))),\n+                  if Transmit_As_Unconstrained (Typ) then\n+\n+                     --  declare\n+                     --     Res : constant T := T'Input (Strm);\n+                     --  begin\n+                     --     Release_Buffer (Strm);\n+                     --     return Res;\n+                     --  end;\n+\n+                     Append_To (Stms, Make_Block_Statement (Loc,\n+                       Declarations               => New_List (\n+                         Make_Object_Declaration (Loc,\n+                           Defining_Identifier => Res,\n+                           Constant_Present    => True,\n+                           Object_Definition   => New_Occurrence_Of (Typ, Loc),\n+                           Expression          =>\n+                             Make_Attribute_Reference (Loc,\n+                               Prefix         => New_Occurrence_Of (Typ, Loc),\n+                               Attribute_Name => Name_Input,\n+                               Expressions    => New_List (\n+                                 Make_Attribute_Reference (Loc,\n+                                   Prefix         =>\n+                                     New_Occurrence_Of (Strm, Loc),\n+                                   Attribute_Name => Name_Access))))),\n+\n+                       Handled_Statement_Sequence =>\n+                         Make_Handled_Sequence_Of_Statements (Loc,\n+                           Statements => New_List (\n+                             Make_Procedure_Call_Statement (Loc,\n+                               Name                   =>\n+                                 New_Occurrence_Of\n+                                   (RTE (RE_Release_Buffer), Loc),\n+                               Parameter_Associations =>\n+                                 New_List (New_Occurrence_Of (Strm, Loc))),\n+                             Make_Simple_Return_Statement (Loc,\n+                               Expression => New_Occurrence_Of (Res, Loc))))));\n+                  else\n \n-                    Handled_Statement_Sequence =>\n-                      Make_Handled_Sequence_Of_Statements (Loc,\n-                        Statements => New_List (\n-                          Make_Procedure_Call_Statement (Loc,\n-                            Name =>\n-                              New_Occurrence_Of (RTE (RE_Release_Buffer), Loc),\n-                            Parameter_Associations =>\n-                              New_List (New_Occurrence_Of (Strm, Loc))),\n-                          Make_Simple_Return_Statement (Loc,\n-                            Expression => New_Occurrence_Of (Res, Loc))))));\n+                     --  declare\n+                     --     Res : T;\n+                     --  begin\n+                     --     T'Read (Strm, Res);\n+                     --     Release_Buffer (Strm);\n+                     --     return Res;\n+                     --  end;\n+\n+                     Append_To (Stms, Make_Block_Statement (Loc,\n+                       Declarations               => New_List (\n+                         Make_Object_Declaration (Loc,\n+                           Defining_Identifier => Res,\n+                           Constant_Present    => False,\n+                           Object_Definition   =>\n+                             New_Occurrence_Of (Typ, Loc))),\n+\n+                       Handled_Statement_Sequence =>\n+                         Make_Handled_Sequence_Of_Statements (Loc,\n+                           Statements => New_List (\n+                             Make_Attribute_Reference (Loc,\n+                               Prefix         => New_Occurrence_Of (Typ, Loc),\n+                               Attribute_Name => Name_Read,\n+                               Expressions    => New_List (\n+                                 Make_Attribute_Reference (Loc,\n+                                   Prefix         =>\n+                                     New_Occurrence_Of (Strm, Loc),\n+                                   Attribute_Name => Name_Access),\n+                                New_Occurrence_Of (Res, Loc))),\n+                             Make_Procedure_Call_Statement (Loc,\n+                               Name                   =>\n+                                 New_Occurrence_Of\n+                                   (RTE (RE_Release_Buffer), Loc),\n+                               Parameter_Associations =>\n+                                 New_List (New_Occurrence_Of (Strm, Loc))),\n+                             Make_Simple_Return_Statement (Loc,\n+                               Expression => New_Occurrence_Of (Res, Loc))))));\n \n+                  end if;\n                end;\n             end if;\n "}, {"sha": "ba8ed162abeb926daf1d57de8133a1156e31fb92", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=f16d05d91391edb8da0ac0091c8576c8724f8cdc", "patch": "@@ -263,24 +263,25 @@ package body GNAT.Command_Line is\n                     (It.Levels (Current).Dir, It.Dir_Name (1 .. NL));\n                end if;\n             end if;\n+         end if;\n \n-         --  If not a directory, check the relative path against the pattern\n+         --  Check the relative path against the pattern.\n+         --  Note that we try to match also against directory names, since\n+         --  clients of this function may expect to retrieve directories.\n \n-         else\n-            declare\n-               Name : String :=\n-                        It.Dir_Name (It.Start .. It.Levels (Current).Name_Last)\n-                          & S (1 .. Last);\n-            begin\n-               Canonical_Case_File_Name (Name);\n+         declare\n+            Name : String :=\n+                     It.Dir_Name (It.Start .. It.Levels (Current).Name_Last)\n+                       & S (1 .. Last);\n+         begin\n+            Canonical_Case_File_Name (Name);\n \n-               --  If it matches return the relative path\n+            --  If it matches return the relative path\n \n-               if GNAT.Regexp.Match (Name, Iterator.Regexp) then\n-                  return Name;\n-               end if;\n-            end;\n-         end if;\n+            if GNAT.Regexp.Match (Name, Iterator.Regexp) then\n+               return Name;\n+            end if;\n+         end;\n       end loop;\n    end Expansion;\n "}, {"sha": "e586a2d03d83f9e7bfa5d3c50d736f8e27a92556", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=f16d05d91391edb8da0ac0091c8576c8724f8cdc", "patch": "@@ -58,6 +58,10 @@ package body GNAT.Sockets is\n \n    ENOERROR : constant := 0;\n \n+   Empty_Socket_Set : Socket_Set_Type;\n+   --  Variable set in Initialize, and then used internally to provide an\n+   --  initial value for Socket_Set_Type objects.\n+\n    Netdb_Buffer_Size : constant := SOSC.Need_Netdb_Buffer * 1024;\n    --  The network database functions gethostbyname, gethostbyaddr,\n    --  getservbyname and getservbyport can either be guaranteed task safe by\n@@ -426,7 +430,7 @@ package body GNAT.Sockets is\n       Status       : out Selector_Status;\n       Timeout      : Selector_Duration := Forever)\n    is\n-      E_Socket_Set : Socket_Set_Type; --  (No_Socket, No_Fd_Set_Access)\n+      E_Socket_Set : Socket_Set_Type := Empty_Socket_Set;\n    begin\n       Check_Selector\n         (Selector, R_Socket_Set, W_Socket_Set, E_Socket_Set, Status, Timeout);\n@@ -813,7 +817,7 @@ package body GNAT.Sockets is\n    begin\n       if Item.Last /= No_Socket then\n          Get_Socket_From_Set\n-           (Item.Set'Access, L'Unchecked_Access, S'Unchecked_Access);\n+           (Item.Set'Access, Last => L'Access, Socket => S'Access);\n          Item.Last := Socket_Type (L);\n          Socket    := Socket_Type (S);\n       else\n@@ -1208,6 +1212,33 @@ package body GNAT.Sockets is\n       return Socket'Img;\n    end Image;\n \n+   -----------\n+   -- Image --\n+   -----------\n+\n+   function Image (Item : Socket_Set_Type) return String is\n+      Socket_Set : Socket_Set_Type := Item;\n+   begin\n+      declare\n+         Last_Img : constant String := Socket_Set.Last'Img;\n+         Buffer   : String\n+                      (1 .. (Integer (Socket_Set.Last) + 1) * Last_Img'Length);\n+         Index    : Positive := 1;\n+         Socket   : Socket_Type;\n+      begin\n+         while not Is_Empty (Socket_Set) loop\n+            Get (Socket_Set, Socket);\n+            declare\n+               Socket_Img : constant String := Socket'Img;\n+            begin\n+               Buffer (Index .. Index + Socket_Img'Length - 1) := Socket_Img;\n+               Index := Index + Socket_Img'Length;\n+            end;\n+         end loop;\n+         return \"[\" & Last_Img & \"]\" & Buffer (1 .. Index - 1);\n+      end;\n+   end Image;\n+\n    ---------------\n    -- Inet_Addr --\n    ---------------\n@@ -1270,6 +1301,8 @@ package body GNAT.Sockets is\n    begin\n       if not Initialized then\n          Initialized := True;\n+         Empty_Socket_Set.Last := No_Socket;\n+         Reset_Socket_Set (Empty_Socket_Set.Set'Access);\n          Thin.Initialize;\n       end if;\n    end Initialize;"}, {"sha": "408d789665c63a300620ec6ce6e99bbdf92663e6", "filename": "gcc/ada/g-socthi-mingw.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-socthi-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-socthi-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.ads?ref=f16d05d91391edb8da0ac0091c8576c8724f8cdc", "patch": "@@ -121,7 +121,7 @@ package GNAT.Sockets.Thin is\n    function C_Ioctl\n      (S    : C.int;\n       Req  : C.int;\n-      Arg  : Int_Access) return C.int;\n+      Arg  : access C.int) return C.int;\n \n    function C_Listen\n      (S       : C.int;"}, {"sha": "389c256c1b8d03dfcce5acd768e3939eeaad2d14", "filename": "gcc/ada/g-socthi-vms.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-socthi-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-socthi-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.adb?ref=f16d05d91391edb8da0ac0091c8576c8724f8cdc", "patch": "@@ -73,7 +73,7 @@ package body GNAT.Sockets.Thin is\n    function Syscall_Ioctl\n      (S    : C.int;\n       Req  : C.int;\n-      Arg  : Int_Access) return C.int;\n+      Arg  : access C.int) return C.int;\n    pragma Import (C, Syscall_Ioctl, \"ioctl\");\n \n    function Syscall_Recv\n@@ -148,7 +148,7 @@ package body GNAT.Sockets.Thin is\n          --  tracks sockets set in non-blocking mode by user.\n \n          Set_Non_Blocking_Socket (R, Non_Blocking_Socket (S));\n-         Discard := Syscall_Ioctl (R, SOSC.FIONBIO, Val'Unchecked_Access);\n+         Discard := Syscall_Ioctl (R, SOSC.FIONBIO, Val'Access);\n       end if;\n \n       return R;\n@@ -219,7 +219,7 @@ package body GNAT.Sockets.Thin is\n    function C_Ioctl\n      (S   : C.int;\n       Req : C.int;\n-      Arg : Int_Access) return C.int\n+      Arg : access C.int) return C.int\n    is\n    begin\n       if not SOSC.Thread_Blocking_IO\n@@ -361,7 +361,7 @@ package body GNAT.Sockets.Thin is\n          --  Do not use C_Ioctl as this subprogram tracks sockets set\n          --  in non-blocking mode by user.\n \n-         Discard := Syscall_Ioctl (R, SOSC.FIONBIO, Val'Unchecked_Access);\n+         Discard := Syscall_Ioctl (R, SOSC.FIONBIO, Val'Access);\n          Set_Non_Blocking_Socket (R, False);\n       end if;\n "}, {"sha": "dd317bfce9ab5acfe2a2a125078a63b3512ee46b", "filename": "gcc/ada/g-socthi-vms.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-socthi-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-socthi-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.ads?ref=f16d05d91391edb8da0ac0091c8576c8724f8cdc", "patch": "@@ -124,7 +124,7 @@ package GNAT.Sockets.Thin is\n    function C_Ioctl\n      (S    : C.int;\n       Req  : C.int;\n-      Arg  : Int_Access) return C.int;\n+      Arg  : access C.int) return C.int;\n \n    function C_Listen\n      (S       : C.int;"}, {"sha": "81a8d96eeedc827a708f6e461fc6a4c0c59bbf97", "filename": "gcc/ada/g-socthi-vxworks.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-socthi-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-socthi-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.adb?ref=f16d05d91391edb8da0ac0091c8576c8724f8cdc", "patch": "@@ -83,7 +83,7 @@ package body GNAT.Sockets.Thin is\n    function Syscall_Ioctl\n      (S    : C.int;\n       Req  : C.int;\n-      Arg  : Int_Access) return C.int;\n+      Arg  : access C.int) return C.int;\n    pragma Import (C, Syscall_Ioctl, \"ioctl\");\n \n    function Syscall_Recv\n@@ -160,7 +160,7 @@ package body GNAT.Sockets.Thin is\n          --  tracks sockets set in non-blocking mode by user.\n \n          Set_Non_Blocking_Socket (R, Non_Blocking_Socket (S));\n-         Res := Syscall_Ioctl (R, SOSC.FIONBIO, Val'Unchecked_Access);\n+         Res := Syscall_Ioctl (R, SOSC.FIONBIO, Val'Access);\n          --  Is it OK to ignore result ???\n       end if;\n \n@@ -232,7 +232,7 @@ package body GNAT.Sockets.Thin is\n    function C_Ioctl\n      (S    : C.int;\n       Req  : C.int;\n-      Arg  : Int_Access) return C.int\n+      Arg  : access C.int) return C.int\n    is\n    begin\n       if not SOSC.Thread_Blocking_IO\n@@ -374,7 +374,7 @@ package body GNAT.Sockets.Thin is\n          --  Do not use C_Ioctl as this subprogram tracks sockets set\n          --  in non-blocking mode by user.\n \n-         Res := Syscall_Ioctl (R, SOSC.FIONBIO, Val'Unchecked_Access);\n+         Res := Syscall_Ioctl (R, SOSC.FIONBIO, Val'Access);\n          --  Is it OK to ignore result ???\n          Set_Non_Blocking_Socket (R, False);\n       end if;"}, {"sha": "06b75e339cb9f3b03942e92893363d42d5b6e88c", "filename": "gcc/ada/g-socthi-vxworks.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-socthi-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-socthi-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.ads?ref=f16d05d91391edb8da0ac0091c8576c8724f8cdc", "patch": "@@ -122,7 +122,7 @@ package GNAT.Sockets.Thin is\n    function C_Ioctl\n      (S    : C.int;\n       Req  : C.int;\n-      Arg  : Int_Access) return C.int;\n+      Arg  : access C.int) return C.int;\n \n    function C_Listen\n      (S       : C.int;"}, {"sha": "1062354f9b58a6026e9840db690162e128a50a55", "filename": "gcc/ada/g-socthi.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-socthi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-socthi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.adb?ref=f16d05d91391edb8da0ac0091c8576c8724f8cdc", "patch": "@@ -79,7 +79,7 @@ package body GNAT.Sockets.Thin is\n    function Syscall_Ioctl\n      (S    : C.int;\n       Req  : C.int;\n-      Arg  : Int_Access) return C.int;\n+      Arg  : access C.int) return C.int;\n    pragma Import (C, Syscall_Ioctl, \"ioctl\");\n \n    function Syscall_Recv\n@@ -164,7 +164,7 @@ package body GNAT.Sockets.Thin is\n          --  tracks sockets set in non-blocking mode by user.\n \n          Set_Non_Blocking_Socket (R, Non_Blocking_Socket (S));\n-         Discard := Syscall_Ioctl (R, SOSC.FIONBIO, Val'Unchecked_Access);\n+         Discard := Syscall_Ioctl (R, SOSC.FIONBIO, Val'Access);\n       end if;\n \n       Disable_SIGPIPE (R);\n@@ -237,7 +237,7 @@ package body GNAT.Sockets.Thin is\n    function C_Ioctl\n      (S   : C.int;\n       Req : C.int;\n-      Arg : Int_Access) return C.int\n+      Arg : access C.int) return C.int\n    is\n    begin\n       if not SOSC.Thread_Blocking_IO\n@@ -379,7 +379,7 @@ package body GNAT.Sockets.Thin is\n          --  Do not use C_Ioctl as this subprogram tracks sockets set\n          --  in non-blocking mode by user.\n \n-         Discard := Syscall_Ioctl (R, SOSC.FIONBIO, Val'Unchecked_Access);\n+         Discard := Syscall_Ioctl (R, SOSC.FIONBIO, Val'Access);\n          Set_Non_Blocking_Socket (R, False);\n       end if;\n       Disable_SIGPIPE (R);"}, {"sha": "8eae6c6e9bf2f5c15138080350d43c38c8637161", "filename": "gcc/ada/g-socthi.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-socthi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-socthi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.ads?ref=f16d05d91391edb8da0ac0091c8576c8724f8cdc", "patch": "@@ -123,7 +123,7 @@ package GNAT.Sockets.Thin is\n    function C_Ioctl\n      (S    : C.int;\n       Req  : C.int;\n-      Arg  : Int_Access) return C.int;\n+      Arg  : access C.int) return C.int;\n \n    function C_Listen\n      (S       : C.int;"}, {"sha": "5c886b569b715f9ad95781f35b09dcb469ff8c27", "filename": "gcc/ada/g-sothco.ads", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-sothco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fg-sothco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sothco.ads?ref=f16d05d91391edb8da0ac0091c8576c8724f8cdc", "patch": "@@ -247,14 +247,10 @@ package GNAT.Sockets.Thin_Common is\n    -- Socket sets management --\n    ----------------------------\n \n-   type Int_Access is access all C.int;\n-   pragma Convention (C, Int_Access);\n-   --  Access to C integers\n-\n    procedure Get_Socket_From_Set\n      (Set    : access Fd_Set;\n-      Socket : Int_Access;\n-      Last   : Int_Access);\n+      Last   : access C.int;\n+      Socket : access C.int);\n    --  Get last socket in Socket and remove it from the socket set. The\n    --  parameter Last is a maximum value of the largest socket. This hint is\n    --  used to avoid scanning very large socket sets. After a call to\n@@ -274,7 +270,7 @@ package GNAT.Sockets.Thin_Common is\n \n    procedure Last_Socket_In_Set\n      (Set  : access Fd_Set;\n-      Last : Int_Access);\n+      Last : access C.int);\n    --  Find the largest socket in the socket set. This is needed for select().\n    --  When Last_Socket_In_Set is called, parameter Last is a maximum value of\n    --  the largest socket. This hint is used to avoid scanning very large"}, {"sha": "bbb19da144eb658e3be63ec57aaf9286b0328be4", "filename": "gcc/ada/gsocket.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fgsocket.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fgsocket.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgsocket.h?ref=f16d05d91391edb8da0ac0091c8576c8724f8cdc", "patch": "@@ -66,7 +66,7 @@\n #include <vxWorks.h>\n #include <ioLib.h>\n #include <hostLib.h>\n-#ifndef __RTP__\n+#if (_WRS_VXWORKS_MAJOR != 6) && ! defined (__RTP__)\n #include <resolvLib.h>\n #endif\n #define SHUT_RD\t\t0\n@@ -176,7 +176,7 @@\n \n #endif\n \n-#ifdef __vxworks\n+#if defined (__vxworks) && ! defined (__RTP__)\n #include <sys/times.h>\n #else\n #include <sys/time.h>"}, {"sha": "0808288fab3b52c95946d1b455e77347411d3049", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=f16d05d91391edb8da0ac0091c8576c8724f8cdc", "patch": "@@ -2638,14 +2638,36 @@ package body Sem_Ch4 is\n                if Chars (Comp) = Chars (Sel)\n                  and then Is_Visible_Component (Comp)\n                then\n-                  Set_Entity (Sel, Comp);\n-                  Set_Etype (Sel, Etype (Comp));\n-                  Add_One_Interp (N, Etype (Comp), Etype (Comp));\n \n-                  --  This also specifies a candidate to resolve the name.\n-                  --  Further overloading will be resolved from context.\n+                  --  AI05-105:  if the context is an object renaming with\n+                  --  an anonymous access type, the expected type of the\n+                  --  object must be anonymous. This is a name resolution rule.\n \n-                  Set_Etype (Nam, It.Typ);\n+                  if Nkind (Parent (N)) /= N_Object_Renaming_Declaration\n+                    or else No (Access_Definition (Parent (N)))\n+                    or else Ekind (Etype (Comp)) = E_Anonymous_Access_Type\n+                    or else\n+                      Ekind (Etype (Comp)) = E_Anonymous_Access_Subprogram_Type\n+                  then\n+                     Set_Entity (Sel, Comp);\n+                     Set_Etype (Sel, Etype (Comp));\n+                     Add_One_Interp (N, Etype (Comp), Etype (Comp));\n+\n+                     --  This also specifies a candidate to resolve the name.\n+                     --  Further overloading will be resolved from context.\n+                     --  The selector name itself does not carry overloading\n+                     --  information.\n+\n+                     Set_Etype (Nam, It.Typ);\n+\n+                  else\n+\n+                     --  Nnamed access type in the context of a renaming\n+                     --  declaration with an access definition. Remove\n+                     --  inapplicable candidate.\n+\n+                     Remove_Interp (I);\n+                  end if;\n                end if;\n \n                Next_Entity (Comp);"}, {"sha": "1930c7955c0bdd0ee943f6c252e2f122a9364b3b", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=f16d05d91391edb8da0ac0091c8576c8724f8cdc", "patch": "@@ -767,7 +767,46 @@ package body Sem_Ch8 is\n                 (Related_Nod => N,\n                  N           => Access_Definition (N));\n \n-         Analyze_And_Resolve (Nam, T);\n+         Analyze (Nam);\n+\n+         --  Ada 2005 AI05-105: if the declaration has an anonymous access\n+         --  type, the renamed object must also have an anonymous type, and\n+         --  this is a name resolution rule. This was implicit in the last\n+         --  part of the first sentence in 8.5.1.(3/2), and is made explicit\n+         --  by this recent AI.\n+\n+         if not Is_Overloaded (Nam) then\n+            if Ekind (Etype (Nam)) /= Ekind (T) then\n+               Error_Msg_N\n+                 (\"Expect anonymous access type is object renaming\", N);\n+            end if;\n+         else\n+            declare\n+               I   : Interp_Index;\n+               It  : Interp;\n+               Typ : Entity_Id := Empty;\n+\n+            begin\n+               Get_First_Interp (Nam, I, It);\n+               while Present (It.Typ) loop\n+                  if No (Typ) then\n+                     if Ekind (It.Typ) = Ekind (T)\n+                       and then Covers (T, It.Typ)\n+                     then\n+                        Typ := It.Typ;\n+                        Set_Etype (Nam, Typ);\n+                        Set_Is_Overloaded (Nam, False);\n+                     end if;\n+                  else\n+                     Error_Msg_N (\"ambiguous expression in renaming\", N);\n+                  end if;\n+\n+                  Get_Next_Interp (I, It);\n+               end loop;\n+            end;\n+         end if;\n+\n+         Resolve (Nam, T);\n \n          --  Ada 2005 (AI-231): \"In the case where the type is defined by an\n          --  access_definition, the renamed entity shall be of an access-to-"}, {"sha": "7535808076fecb1038ad4070209535ae00a23784", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=f16d05d91391edb8da0ac0091c8576c8724f8cdc", "patch": "@@ -4831,7 +4831,7 @@ package body Sem_Util is\n                return True;\n             end if;\n \n-            Comp := Next_Component (Typ);\n+            Next_Component (Comp);\n          end loop;\n \n          return False;"}, {"sha": "5e420c6e267a2959de750841679cc4c17f9861fb", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f16d05d91391edb8da0ac0091c8576c8724f8cdc/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=f16d05d91391edb8da0ac0091c8576c8724f8cdc", "patch": "@@ -1004,7 +1004,7 @@ package body Sem_Warn is\n                   --  Do not output complaint about never being assigned a\n                   --  value if a pragma Unmodified applies to the variable\n                   --  we are examining, or if it is a parameter, if there is\n-                  --  a pragma Unreferenced for the corresponding spec, of\n+                  --  a pragma Unreferenced for the corresponding spec, or\n                   --  if the type is marked as having unreferenced objects.\n                   --  The last is a little peculiar, but better too few than\n                   --  too many warnings in this situation.\n@@ -1026,7 +1026,7 @@ package body Sem_Warn is\n                      --  has a separate declaration in a different unit. This\n                      --  is the case where the client of a package sees only\n                      --  the private type, and it may be quite reasonable\n-                     --  for the logical view to be in out, even if the\n+                     --  for the logical view to be IN OUT, even if the\n                      --  implementation ends up using access types or some\n                      --  other method to achieve the local effect of a\n                      --  modification. On the other hand if the spec and body\n@@ -1050,10 +1050,10 @@ package body Sem_Warn is\n                      then\n                         null;\n \n-                     --  Suppress warning if composite type containing any\n-                     --  access element component, since the logical effect\n-                     --  of modifying a parameter may be achieved by modifying\n-                     --  a referenced entity.\n+                     --  Suppress warning if composite type contains any access\n+                     --  component, since the logical effect of modifying a\n+                     --  parameter may be achieved by modifying a referenced\n+                     --  object.\n \n                      elsif Is_Composite_Type (E1T)\n                        and then Has_Access_Values (E1T)\n@@ -1237,7 +1237,7 @@ package body Sem_Warn is\n \n                --  If Referenced_As_LHS is set, then that's still interesting\n                --  (potential \"assigned but never read\" case), but not if we\n-               --  have pragma Unreferenced, which cancels this error.\n+               --  have pragma Unreferenced, which cancels this warning.\n \n               and then (not Referenced_As_LHS_Check_Spec (E1)\n                           or else not Has_Unreferenced (E1))\n@@ -1253,13 +1253,13 @@ package body Sem_Warn is\n                       (Check_Unreferenced_Formals and then Is_Formal (E1))\n \n                      --  Case of warning on unread variables modified by an\n-                     --  assignment, or an out parameter if it is the only one.\n+                     --  assignment, or an OUT parameter if it is the only one.\n \n                      or else\n                        (Warn_On_Modified_Unread\n                           and then Referenced_As_LHS_Check_Spec (E1))\n \n-                     --  Case of warning on any unread out parameter (note\n+                     --  Case of warning on any unread OUT parameter (note\n                      --  such indications are only set if the appropriate\n                      --  warning options were set, so no need to recheck here.\n \n@@ -1285,11 +1285,11 @@ package body Sem_Warn is\n                            or else\n                          Is_Overloadable (E1)\n \n-                           --  Package case, if the main unit is a package\n-                           --  spec or generic package spec, then there may\n-                           --  be a corresponding body that references this\n-                           --  package in some other file. Otherwise we can\n-                           --  be sure that there is no other reference.\n+                           --  Package case, if the main unit is a package spec\n+                           --  or generic package spec, then there may be a\n+                           --  corresponding body that references this package\n+                           --  in some other file. Otherwise we can be sure\n+                           --  that there is no other reference.\n \n                            or else\n                              (Ekind (E1) = E_Package\n@@ -1314,7 +1314,7 @@ package body Sem_Warn is\n                                and then\n                              Referenced (Spec_Entity (E1)))\n \n-               --  Consider private type referenced if full view is referenced\n+               --  Consider private type referenced if full view is referenced.\n                --  If there is not full view, this is a generic type on which\n                --  warnings are also useful.\n \n@@ -1330,7 +1330,7 @@ package body Sem_Warn is\n \n                --  Eliminate dispatching operations from consideration, we\n                --  cannot tell if these are referenced or not in any easy\n-               --  manner (note this also catches Adjust/Finalize/Initialize)\n+               --  manner (note this also catches Adjust/Finalize/Initialize).\n \n                and then not Is_Dispatching_Operation (E1)\n \n@@ -1356,7 +1356,7 @@ package body Sem_Warn is\n                            or else not Is_Task_Type (E1T))\n \n                --  For subunits, only place warnings on the main unit itself,\n-               --  since parent units are not completely compiled\n+               --  since parent units are not completely compiled.\n \n                and then (Nkind (Unit (Cunit (Main_Unit))) /= N_Subunit\n                            or else\n@@ -1372,7 +1372,7 @@ package body Sem_Warn is\n             then\n                --  Suppress warnings in internal units if not in -gnatg mode\n                --  (these would be junk warnings for an applications program,\n-               --  since they refer to problems in internal units)\n+               --  since they refer to problems in internal units).\n \n                if GNAT_Mode\n                  or else not\n@@ -1425,8 +1425,8 @@ package body Sem_Warn is\n             end if;\n          end if;\n \n-         --  Recurse into nested package or block. Do not recurse into a\n-         --  formal package, because the corresponding body is not analyzed.\n+         --  Recurse into nested package or block. Do not recurse into a formal\n+         --  package, because the corresponding body is not analyzed.\n \n          <<Continue>>\n             if (Is_Package_Or_Generic_Package (E1)\n@@ -1484,7 +1484,7 @@ package body Sem_Warn is\n \n       function Prefix_Has_Dereference (Pref : Node_Id) return Boolean is\n       begin\n-         --  If prefix is of an access type, certainly need a dereference\n+         --  If prefix is of an access type, it certainly needs a dereference\n \n          if Is_Access_Type (Etype (Pref)) then\n             return True;\n@@ -1526,13 +1526,13 @@ package body Sem_Warn is\n          return;\n       end if;\n \n-      --  Otherwise see what kind of node we have. If the entity already\n-      --  has an unset reference, it is not necessarily the earliest in\n-      --  the text, because resolution of the prefix of selected components\n-      --  is completed before the resolution of the selected component itself.\n-      --  as a result, given  (R /= null and then R.X > 0), the occurrences\n-      --  of R are examined in right-to-left order. If there is already an\n-      --  unset reference, we check whether N is earlier before proceeding.\n+      --  Otherwise see what kind of node we have. If the entity already has an\n+      --  unset reference, it is not necessarily the earliest in the text,\n+      --  because resolution of the prefix of selected components is completed\n+      --  before the resolution of the selected component itself. As a result,\n+      --  given (R /= null and then R.X > 0), the occurrences of R are examined\n+      --  in right-to-left order. If there is already an unset reference, we\n+      --  check whether N is earlier before proceeding.\n \n       case Nkind (N) is\n \n@@ -1560,11 +1560,11 @@ package body Sem_Warn is\n                   --  component with default initialization. Both of these\n                   --  cases can be ignored, since the actual object that is\n                   --  referenced is definitely initialized. Note that this\n-                  --  covers the case of reading discriminants of an out\n+                  --  covers the case of reading discriminants of an OUT\n                   --  parameter, which is OK even in Ada 83.\n \n                   --  Note that we are only interested in a direct reference to\n-                  --  a record component here. If the reference is via an\n+                  --  a record component here. If the reference is through an\n                   --  access type, then the access object is being referenced,\n                   --  not the record, and still deserves an unset reference.\n \n@@ -1622,9 +1622,9 @@ package body Sem_Warn is\n                         SR := Scope (SR);\n                      end loop;\n \n-                     --  Case of reference has an access type. This is special\n-                     --  case since access types are always set to null so\n-                     --  cannot be truly uninitialized, but we still want to\n+                     --  Case of reference has an access type. This is a\n+                     --  special case since access types are always set to null\n+                     --  so cannot be truly uninitialized, but we still want to\n                      --  warn about cases of obvious null dereference.\n \n                      if Is_Access_Type (Typ) then\n@@ -1634,7 +1634,7 @@ package body Sem_Warn is\n                            function Process\n                              (N : Node_Id) return Traverse_Result;\n                            --  Process function for instantiation of Traverse\n-                           --  below. Checks if N contains reference to other\n+                           --  below. Checks if N contains reference to E other\n                            --  than a dereference.\n \n                            function Ref_In (Nod : Node_Id) return Boolean;\n@@ -1699,7 +1699,7 @@ package body Sem_Warn is\n                            end if;\n \n                            --  One more check, don't bother with references\n-                           --  that are inside conditional statements or while\n+                           --  that are inside conditional statements or WHILE\n                            --  loops if the condition references the entity in\n                            --  question. This avoids most false positives.\n \n@@ -1864,22 +1864,22 @@ package body Sem_Warn is\n          Pack                : Entity_Id;\n \n          procedure Check_Inner_Package (Pack : Entity_Id);\n-         --  Pack is a package local to a unit in a with_clause. Both the\n-         --  unit and Pack are referenced. If none of the entities in Pack\n-         --  are referenced, then the only occurrence of Pack is in a use\n-         --  clause or a pragma, and a warning is worthwhile as well.\n+         --  Pack is a package local to a unit in a with_clause. Both the unit\n+         --  and Pack are referenced. If none of the entities in Pack are\n+         --  referenced, then the only occurrence of Pack is in a USE clause\n+         --  or a pragma, and a warning is worthwhile as well.\n \n          function Check_System_Aux return Boolean;\n-         --  Before giving a warning on a with_clause for System, check\n-         --  whether a system extension is present.\n+         --  Before giving a warning on a with_clause for System, check wheter\n+         --  a system extension is present.\n \n          function Find_Package_Renaming\n            (P : Entity_Id;\n             L : Entity_Id) return Entity_Id;\n          --  The only reference to a context unit may be in a renaming\n-         --  declaration. If this renaming declares a visible entity, do\n-         --  not warn that the context clause could be moved to the body,\n-         --  because the renaming may be intended to re-export the unit.\n+         --  declaration. If this renaming declares a visible entity, do not\n+         --  warn that the context clause could be moved to the body, because\n+         --  the renaming may be intended to re-export the unit.\n \n          -------------------------\n          -- Check_Inner_Package --"}]}