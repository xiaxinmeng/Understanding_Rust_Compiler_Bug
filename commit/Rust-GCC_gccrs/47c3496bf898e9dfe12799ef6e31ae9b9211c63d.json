{"sha": "47c3496bf898e9dfe12799ef6e31ae9b9211c63d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdjMzQ5NmJmODk4ZTlkZmUxMjc5OWVmNmUzMWFlOWI5MjExYzYzZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-08-27T13:21:28Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-08-27T13:21:28Z"}, "message": "Sanopt: ignore params with DECL_HAS_VALUE_EXPR_P (PR sanitizer/86962).\n\n2018-08-27  Martin Liska  <mliska@suse.cz>\n\n        PR sanitizer/86962\n\t* sanopt.c (sanitize_rewrite_addressable_params): Ignore\n        params with DECL_HAS_VALUE_EXPR_P.\n2018-08-27  Martin Liska  <mliska@suse.cz>\n\n        PR sanitizer/86962\n\t* gcc.dg/asan/pr86962.c: New test.\n\nFrom-SVN: r263882", "tree": {"sha": "a380f3ec58ab3725fe955cde6665f72ac5fa7692", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a380f3ec58ab3725fe955cde6665f72ac5fa7692"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47c3496bf898e9dfe12799ef6e31ae9b9211c63d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47c3496bf898e9dfe12799ef6e31ae9b9211c63d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47c3496bf898e9dfe12799ef6e31ae9b9211c63d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47c3496bf898e9dfe12799ef6e31ae9b9211c63d/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b60ee204f80649803dc78c24ab9c94ff8f51789", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b60ee204f80649803dc78c24ab9c94ff8f51789", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b60ee204f80649803dc78c24ab9c94ff8f51789"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "6a047129086b8ea713cbe277c32f9de57f5262f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47c3496bf898e9dfe12799ef6e31ae9b9211c63d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47c3496bf898e9dfe12799ef6e31ae9b9211c63d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47c3496bf898e9dfe12799ef6e31ae9b9211c63d", "patch": "@@ -1,3 +1,9 @@\n+2018-08-27  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/86962\n+\t* sanopt.c (sanitize_rewrite_addressable_params): Ignore\n+\tparams with DECL_HAS_VALUE_EXPR_P.\n+\n 2018-08-27  Martin Liska  <mliska@suse.cz>\n \n \t* config/i386/i386.c (ix86_expand_set_or_movmem): Dump"}, {"sha": "082f936adb50a76bc5e159f37013265c4ec458a0", "filename": "gcc/sanopt.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47c3496bf898e9dfe12799ef6e31ae9b9211c63d/gcc%2Fsanopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47c3496bf898e9dfe12799ef6e31ae9b9211c63d/gcc%2Fsanopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsanopt.c?ref=47c3496bf898e9dfe12799ef6e31ae9b9211c63d", "patch": "@@ -1165,13 +1165,15 @@ sanitize_rewrite_addressable_params (function *fun)\n \n \t  gimple_add_tmp_var (var);\n \n+\t  /* We skip parameters that have a DECL_VALUE_EXPR.  */\n+\t  if (DECL_HAS_VALUE_EXPR_P (arg))\n+\t    continue;\n+\n \t  if (dump_file)\n \t    fprintf (dump_file,\n \t\t     \"Rewriting parameter whose address is taken: %s\\n\",\n \t\t     IDENTIFIER_POINTER (DECL_NAME (arg)));\n \n-\t  gcc_assert (!DECL_HAS_VALUE_EXPR_P (arg));\n-\n \t  SET_DECL_PT_UID (var, DECL_PT_UID (arg));\n \n \t  /* Assign value of parameter to newly created variable.  */"}, {"sha": "4f49ffd055aa373eb85eef93eddea61bd74042f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47c3496bf898e9dfe12799ef6e31ae9b9211c63d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47c3496bf898e9dfe12799ef6e31ae9b9211c63d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=47c3496bf898e9dfe12799ef6e31ae9b9211c63d", "patch": "@@ -1,3 +1,8 @@\n+2018-08-27  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/86962\n+\t* gcc.dg/asan/pr86962.c: New test.\n+\n 2018-08-27  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/tree-prof/val-prof-10.c: New test."}, {"sha": "7a8cfa98f0eef9cc5fec9fd915837235f4ce9801", "filename": "gcc/testsuite/gcc.dg/asan/pr86962.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47c3496bf898e9dfe12799ef6e31ae9b9211c63d/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr86962.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47c3496bf898e9dfe12799ef6e31ae9b9211c63d/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr86962.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr86962.c?ref=47c3496bf898e9dfe12799ef6e31ae9b9211c63d", "patch": "@@ -0,0 +1,13 @@\n+/* PR sanitizer/86962 */\n+/* { dg-do compile } */\n+\n+extern int dummy (int *);\n+\n+void foo(int i)\n+{\n+  int j=i;\n+\n+  void bar() { int x=j, y=i; }\n+\n+  dummy(&i);\n+}"}]}