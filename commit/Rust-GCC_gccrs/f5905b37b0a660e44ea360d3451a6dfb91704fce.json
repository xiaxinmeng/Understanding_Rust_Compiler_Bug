{"sha": "f5905b37b0a660e44ea360d3451a6dfb91704fce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU5MDViMzdiMGE2NjBlNDRlYTM2MGQzNDUxYTZkZmI5MTcwNGZjZQ==", "commit": {"author": {"name": "Adrian Straetling", "email": "straetling@de.ibm.com", "date": "2005-05-09T17:29:33Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-05-09T17:29:33Z"}, "message": "s390.md: (\"FPR\") New mode macro.\n\n2005-05-09  Adrian Straetling  <straetling@de.ibm.com>\n\n\t* config/s390/s390.md: (\"FPR\") New mode macro.\n\t(\"de\", \"dee\"): New mode attributes.\n\t(\"cmpdf\", \"cmpsf\"): Merge.\n\t(\"*cmpdf_ccs_0\", \"*cmpsf_ccs_0\"): Merge.\n\t(\"*cmpdf_ccs_0_ibm\", \"*cmpdf_ccs_0_ibm\"): Merge.\n\t(\"*cmpdf_ccs\", \"*cmpsf_ccs\"): Merge.\n\t(\"*cmpdf_ccs_ibm\", \"*cmpsf_ccs_ibm\"): Merge.\n\t(\"floatdidf2\", \"floatdisf2\"): Merge.\n\t(\"adddf3\", \"addsf3\"): Merge.\n\t(\"*adddf3\", \"*addsf3\"): Merge.\n\t(\"*adddf3_cc\", \"*addsf3_cc\"): Merge.\n\t(\"*adddf3_cconly\", \"*addsf3_cconly\"): Merge.\n\t(\"*adddf3_ibm\", \"*addsf3_ibm\"): Merge.\n\t(\"subdf3\", \"subsf3\"): Merge.\n\t(\"*subdf3\", \"*subsf3\"): Merge.\n\t(\"*subdf3_cc\", \"*subsf3_cc\"): Merge.\n\t(\"*subdf3_cconly\", \"*subsf3_cconly\"): Merge.\n\t(\"*subdf3_ibm\", \"*subsf3_ibm\"): Merge.\n\t(\"muldf3\", \"mulsf3\"): Merge.\n\t(\"*muldf3\", \"*mulsf3\" \"): Merge.\n\t(\"*muldf3_ibm\", \"*mulsf3_ibm\"): Merge.\n\t(\"*fmadddf\", \"*fmaddsf\"): Merge.\n\t(\"*fmsubdf\", \"*fmsubsf\"): Merge.\n\t(\"divdf3\", \"divsf3\"): Merge.\n\t(\"*divdf3\", \"*divsf3\"): Merge.\n\t(\"*divdf3_ibm\", \"*divsf3_ibm\"): Merge.\n\t(\"negdf2\", \"negsf2\"): Merge.\n\t(\"*negdf2_cc\", \"*negsf2_cc\"): Merge.\n\t(\"*negdf2_cconly\", \"*negsf2_cconly\"): Merge.\n\t(\"*negdf2\", \"*negsf2\"): Merge.\n\t(\"*negdf2_ibm\", \"*negsf2_ibm\"): Merge.\n\t(\"absdf2\", \"abssf2\"): Merge.\n\t(\"*absdf2_cc\", \"*abssf2_cc\"): Merge.\n\t(\"*absdf2_cconly\", \"*abssf2_cconly\"): Merge.\n\t(\"*absdf2\", \"*abssf2\"): Merge.\n\t(\"*absdf2_ibm\", \"*abssf2_ibm\"): Merge.\n\t(\"*negabsdf2_cc\", \"*negabssf2_cc\"): Merge.\n\t(\"*negabsdf2_cconly\", \"*negabssf2_cconly\"): Merge.\n\t(\"*negabsdf2\", \"*negabssf2\"): Merge.\n\t(\"sqrtdf2\", \"sqrtsf2\"): Merge.\n\nFrom-SVN: r99457", "tree": {"sha": "d9be3da30ccab146fa7c4ad4d6a4df4e954539b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9be3da30ccab146fa7c4ad4d6a4df4e954539b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5905b37b0a660e44ea360d3451a6dfb91704fce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5905b37b0a660e44ea360d3451a6dfb91704fce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5905b37b0a660e44ea360d3451a6dfb91704fce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5905b37b0a660e44ea360d3451a6dfb91704fce/comments", "author": null, "committer": null, "parents": [{"sha": "cfdb984baf8b9cbc0a9b5b54737537d12d84b52f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfdb984baf8b9cbc0a9b5b54737537d12d84b52f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfdb984baf8b9cbc0a9b5b54737537d12d84b52f"}], "stats": {"total": 956, "additions": 291, "deletions": 665}, "files": [{"sha": "c3ad2e8901e86a69d6373141a3305e4a65b53952", "filename": "gcc/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5905b37b0a660e44ea360d3451a6dfb91704fce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5905b37b0a660e44ea360d3451a6dfb91704fce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5905b37b0a660e44ea360d3451a6dfb91704fce", "patch": "@@ -1,3 +1,46 @@\n+2005-05-09  Adrian Straetling  <straetling@de.ibm.com>\n+\n+\t* config/s390/s390.md: (\"FPR\") New mode macro.\n+\t(\"de\", \"dee\"): New mode attributes.\n+\t(\"cmpdf\", \"cmpsf\"): Merge.\n+\t(\"*cmpdf_ccs_0\", \"*cmpsf_ccs_0\"): Merge.\n+\t(\"*cmpdf_ccs_0_ibm\", \"*cmpdf_ccs_0_ibm\"): Merge.\n+\t(\"*cmpdf_ccs\", \"*cmpsf_ccs\"): Merge.\n+\t(\"*cmpdf_ccs_ibm\", \"*cmpsf_ccs_ibm\"): Merge.\n+\t(\"floatdidf2\", \"floatdisf2\"): Merge.\n+\t(\"adddf3\", \"addsf3\"): Merge.\n+\t(\"*adddf3\", \"*addsf3\"): Merge.\n+\t(\"*adddf3_cc\", \"*addsf3_cc\"): Merge.\n+\t(\"*adddf3_cconly\", \"*addsf3_cconly\"): Merge.\n+\t(\"*adddf3_ibm\", \"*addsf3_ibm\"): Merge.\n+\t(\"subdf3\", \"subsf3\"): Merge.\n+\t(\"*subdf3\", \"*subsf3\"): Merge.\n+\t(\"*subdf3_cc\", \"*subsf3_cc\"): Merge.\n+\t(\"*subdf3_cconly\", \"*subsf3_cconly\"): Merge.\n+\t(\"*subdf3_ibm\", \"*subsf3_ibm\"): Merge.\n+\t(\"muldf3\", \"mulsf3\"): Merge.\n+\t(\"*muldf3\", \"*mulsf3\" \"): Merge.\n+\t(\"*muldf3_ibm\", \"*mulsf3_ibm\"): Merge.\n+\t(\"*fmadddf\", \"*fmaddsf\"): Merge.\n+\t(\"*fmsubdf\", \"*fmsubsf\"): Merge.\n+\t(\"divdf3\", \"divsf3\"): Merge.\n+\t(\"*divdf3\", \"*divsf3\"): Merge.\n+\t(\"*divdf3_ibm\", \"*divsf3_ibm\"): Merge.\n+\t(\"negdf2\", \"negsf2\"): Merge.\n+\t(\"*negdf2_cc\", \"*negsf2_cc\"): Merge.\n+\t(\"*negdf2_cconly\", \"*negsf2_cconly\"): Merge.\n+\t(\"*negdf2\", \"*negsf2\"): Merge.\n+\t(\"*negdf2_ibm\", \"*negsf2_ibm\"): Merge.\n+\t(\"absdf2\", \"abssf2\"): Merge.\n+\t(\"*absdf2_cc\", \"*abssf2_cc\"): Merge.\n+\t(\"*absdf2_cconly\", \"*abssf2_cconly\"): Merge.\n+\t(\"*absdf2\", \"*abssf2\"): Merge.\n+\t(\"*absdf2_ibm\", \"*abssf2_ibm\"): Merge.\n+\t(\"*negabsdf2_cc\", \"*negabssf2_cc\"): Merge.\n+\t(\"*negabsdf2_cconly\", \"*negabssf2_cconly\"): Merge.\n+\t(\"*negabsdf2\", \"*negabssf2\"): Merge.\n+\t(\"sqrtdf2\", \"sqrtsf2\"): Merge.\n+\n 2005-05-09  Adrian Straetling  <straetling@de.ibm.com>\n \n \t* config/s390/s390.c: (s390_adjust_priority): Adapt to changed "}, {"sha": "0c752f5e02c7a954701cde046ba0894bf8ec4944", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 248, "deletions": 665, "changes": 913, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5905b37b0a660e44ea360d3451a6dfb91704fce/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5905b37b0a660e44ea360d3451a6dfb91704fce/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=f5905b37b0a660e44ea360d3451a6dfb91704fce", "patch": "@@ -235,6 +235,10 @@\n \n ;; Macros\n \n+;; This mode macro allows DF and SF patterns to be generated from the\n+;; same template.\n+(define_mode_macro FPR     [DF SF])\n+\n ;; These mode macros allow 31-bit and 64-bit GPR patterns to be generated\n ;; from the same template.\n (define_mode_macro GPR [(DI \"TARGET_64BIT\") SI])\n@@ -264,6 +268,14 @@\n (define_code_macro SHIFT [ashift lshiftrt])\n \n \n+;; In FPR templates, a string like \"lt<de>br\" will expand to \"ltdbr\" in DFmode\n+;; and \"ltebr\" in SFmode.\n+(define_mode_attr de [(DF \"d\") (SF \"e\")])\n+\n+;; In FPR templates, a string like \"m<dee>br\" will expand to \"mdbr\" in DFmode\n+;; and \"meebr\" in SFmode.  This is needed for the 'mul<mode>3' pattern. \n+(define_mode_attr dee [(DF \"d\") (SF \"ee\")])\n+\n ;; In SHIFT templates, a string like \"s<lr>dl\" will expand to \"sldl\" in \n ;; 'ashift' and \"srdl\" in 'lshiftrt'.\n (define_code_attr lr [(ashift \"l\") (lshiftrt \"r\")])\n@@ -311,21 +323,10 @@\n   DONE;\n })\n \n-(define_expand \"cmpdf\"\n-  [(set (reg:CC 33)\n-        (compare:CC (match_operand:DF 0 \"register_operand\" \"\")\n-                    (match_operand:DF 1 \"general_operand\" \"\")))]\n-  \"TARGET_HARD_FLOAT\"\n-{\n-  s390_compare_op0 = operands[0];\n-  s390_compare_op1 = operands[1];\n-  DONE;\n-})\n-\n-(define_expand \"cmpsf\"\n+(define_expand \"cmp<mode>\"\n   [(set (reg:CC 33)\n-        (compare:CC (match_operand:SF 0 \"register_operand\" \"\")\n-                    (match_operand:SF 1 \"general_operand\" \"\")))]\n+        (compare:CC (match_operand:FPR 0 \"register_operand\" \"\")\n+                    (match_operand:FPR 1 \"general_operand\" \"\")))]\n   \"TARGET_HARD_FLOAT\"\n {\n   s390_compare_op0 = operands[0];\n@@ -692,90 +693,47 @@\n })\n \n \n-; DF instructions\n-\n-(define_insn \"*cmpdf_ccs_0\"\n-  [(set (reg 33)\n-        (compare (match_operand:DF 0 \"register_operand\" \"f\")\n-                 (match_operand:DF 1 \"const0_operand\" \"\")))]\n-  \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"ltdbr\\t%0,%0\"\n-   [(set_attr \"op_type\" \"RRE\")\n-    (set_attr \"type\"  \"fsimpdf\")])\n-\n-(define_insn \"*cmpdf_ccs_0_ibm\"\n-  [(set (reg 33)\n-        (compare (match_operand:DF 0 \"register_operand\" \"f\")\n-                 (match_operand:DF 1 \"const0_operand\" \"\")))]\n-  \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n-  \"ltdr\\t%0,%0\"\n-   [(set_attr \"op_type\" \"RR\")\n-    (set_attr \"type\"  \"fsimpdf\")])\n-\n-(define_insn \"*cmpdf_ccs\"\n-  [(set (reg 33)\n-        (compare (match_operand:DF 0 \"register_operand\" \"f,f\")\n-                 (match_operand:DF 1 \"general_operand\" \"f,R\")))]\n-  \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"@\n-   cdbr\\t%0,%1\n-   cdb\\t%0,%1\"\n-   [(set_attr \"op_type\" \"RRE,RXE\")\n-    (set_attr \"type\"  \"fsimpdf\")])\n-\n-(define_insn \"*cmpdf_ccs_ibm\"\n-  [(set (reg 33)\n-        (compare (match_operand:DF 0 \"register_operand\" \"f,f\")\n-                 (match_operand:DF 1 \"general_operand\" \"f,R\")))]\n-  \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n-  \"@\n-   cdr\\t%0,%1\n-   cd\\t%0,%1\"\n-   [(set_attr \"op_type\" \"RR,RX\")\n-    (set_attr \"type\"  \"fsimpdf\")])\n-\n-\n-; SF instructions\n+; (DF|SF) instructions\n \n-(define_insn \"*cmpsf_ccs_0\"\n+(define_insn \"*cmp<mode>_ccs_0\"\n   [(set (reg 33)\n-        (compare (match_operand:SF 0 \"register_operand\" \"f\")\n-                 (match_operand:SF 1 \"const0_operand\" \"\")))]\n+        (compare (match_operand:FPR 0 \"register_operand\" \"f\")\n+                 (match_operand:FPR 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"ltebr\\t%0,%0\"\n+  \"lt<de>br\\t%0,%0\"\n    [(set_attr \"op_type\" \"RRE\")\n-    (set_attr \"type\"  \"fsimpsf\")])\n+    (set_attr \"type\"  \"fsimp<mode>\")])\n \n-(define_insn \"*cmpsf_ccs_0_ibm\"\n+(define_insn \"*cmp<mode>_ccs_0_ibm\"\n   [(set (reg 33)\n-        (compare (match_operand:SF 0 \"register_operand\" \"f\")\n-                 (match_operand:SF 1 \"const0_operand\" \"\")))]\n+        (compare (match_operand:FPR 0 \"register_operand\" \"f\")\n+                 (match_operand:FPR 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n-  \"lter\\t%0,%0\"\n+  \"lt<de>r\\t%0,%0\"\n    [(set_attr \"op_type\" \"RR\")\n-    (set_attr \"type\"  \"fsimpsf\")])\n+    (set_attr \"type\"  \"fsimp<mode>\")])\n \n-(define_insn \"*cmpsf_ccs\"\n+(define_insn \"*cmp<mode>_ccs\"\n   [(set (reg 33)\n-        (compare (match_operand:SF 0 \"register_operand\" \"f,f\")\n-                 (match_operand:SF 1 \"general_operand\" \"f,R\")))]\n+        (compare (match_operand:FPR 0 \"register_operand\" \"f,f\")\n+                 (match_operand:FPR 1 \"general_operand\" \"f,R\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n-   cebr\\t%0,%1\n-   ceb\\t%0,%1\"\n+   c<de>br\\t%0,%1\n+   c<de>b\\t%0,%1\"\n    [(set_attr \"op_type\" \"RRE,RXE\")\n-    (set_attr \"type\"  \"fsimpsf\")])\n+    (set_attr \"type\"  \"fsimp<mode>\")])\n \n-(define_insn \"*cmpsf_ccs\"\n+(define_insn \"*cmp<mode>_ccs_ibm\"\n   [(set (reg 33)\n-        (compare (match_operand:SF 0 \"register_operand\" \"f,f\")\n-                 (match_operand:SF 1 \"general_operand\" \"f,R\")))]\n+        (compare (match_operand:FPR 0 \"register_operand\" \"f,f\")\n+                 (match_operand:FPR 1 \"general_operand\" \"f,R\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n-   cer\\t%0,%1\n-   ce\\t%0,%1\"\n+   c<de>r\\t%0,%1\n+   c<de>\\t%0,%1\"\n    [(set_attr \"op_type\" \"RR,RX\")\n-    (set_attr \"type\"  \"fsimpsf\")])\n+    (set_attr \"type\"  \"fsimp<mode>\")])\n \n \n ;;\n@@ -2954,26 +2912,14 @@\n    (set_attr \"type\"    \"ftoi\")])\n \n ;\n-; floatdidf2 instruction pattern(s).\n-;\n-\n-(define_insn \"floatdidf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-        (float:DF (match_operand:DI 1 \"register_operand\" \"d\")))]\n-  \"TARGET_64BIT && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"cdgbr\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"type\"    \"itof\" )])\n-\n-;\n-; floatdisf2 instruction pattern(s).\n+; floatdi(df|sf)2 instruction pattern(s).\n ;\n \n-(define_insn \"floatdisf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-        (float:SF (match_operand:DI 1 \"register_operand\" \"d\")))]\n+(define_insn \"floatdi<mode>2\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n+        (float:FPR (match_operand:DI 1 \"register_operand\" \"d\")))]\n   \"TARGET_64BIT && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"cegbr\\t%0,%1\"\n+  \"c<de>gbr\\t%0,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n    (set_attr \"type\"    \"itof\" )])\n \n@@ -3514,132 +3460,68 @@\n   [(set_attr \"op_type\"  \"RR,RI,RX,RXY\")])\n \n ;\n-; adddf3 instruction pattern(s).\n+; add(df|sf)3 instruction pattern(s).\n ;\n \n-(define_expand \"adddf3\"\n+(define_expand \"add<mode>3\"\n   [(parallel\n-    [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-          (plus:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n-                   (match_operand:DF 2 \"general_operand\" \"f,R\")))\n+    [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n+          (plus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n+                    (match_operand:FPR 2 \"general_operand\" \"f,R\")))\n      (clobber (reg:CC 33))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n-(define_insn \"*adddf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-        (plus:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:DF 2 \"general_operand\" \"f,R\")))\n+(define_insn \"*add<mode>3\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n+        (plus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n+                  (match_operand:FPR 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n-   adbr\\t%0,%2\n-   adb\\t%0,%2\"\n+   a<de>br\\t%0,%2\n+   a<de>b\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n \n-(define_insn \"*adddf3_cc\"\n+(define_insn \"*add<mode>3_cc\"\n   [(set (reg 33)\n-\t(compare (plus:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t\t  (match_operand:DF 2 \"general_operand\" \"f,R\"))\n-\t\t (match_operand:DF 3 \"const0_operand\" \"\")))\n-   (set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-\t(plus:DF (match_dup 1) (match_dup 2)))]\n+\t(compare (plus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n+\t\t\t   (match_operand:FPR 2 \"general_operand\" \"f,R\"))\n+\t\t (match_operand:FPR 3 \"const0_operand\" \"\")))\n+   (set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n+\t(plus:FPR (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n-   adbr\\t%0,%2\n-   adb\\t%0,%2\"\n+   a<de>br\\t%0,%2\n+   a<de>b\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n \n-(define_insn \"*adddf3_cconly\"\n+(define_insn \"*add<mode>3_cconly\"\n   [(set (reg 33)\n-\t(compare (plus:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t\t  (match_operand:DF 2 \"general_operand\" \"f,R\"))\n-\t\t (match_operand:DF 3 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:DF 0 \"=f,f\"))]\n+\t(compare (plus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n+\t\t\t   (match_operand:FPR 2 \"general_operand\" \"f,R\"))\n+\t\t (match_operand:FPR 3 \"const0_operand\" \"\")))\n+   (clobber (match_scratch:FPR 0 \"=f,f\"))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n-  adbr\\t%0,%2\n-  adb\\t%0,%2\"\n+   a<de>br\\t%0,%2\n+   a<de>b\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n \n-(define_insn \"*adddf3_ibm\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-        (plus:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:DF 2 \"general_operand\" \"f,R\")))\n+(define_insn \"*add<mode>3_ibm\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n+        (plus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n+                  (match_operand:FPR 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n-   adr\\t%0,%2\n-   ad\\t%0,%2\"\n+   a<de>r\\t%0,%2\n+   a<de>\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n-\n-;\n-; addsf3 instruction pattern(s).\n-;\n-\n-(define_expand \"addsf3\"\n-  [(parallel\n-    [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-          (plus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n-                   (match_operand:SF 2 \"general_operand\" \"f,R\")))\n-     (clobber (reg:CC 33))])]\n-  \"TARGET_HARD_FLOAT\"\n-  \"\")\n-\n-(define_insn \"*addsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-        (plus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:SF 2 \"general_operand\" \"f,R\")))\n-   (clobber (reg:CC 33))]\n-  \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"@\n-   aebr\\t%0,%2\n-   aeb\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n-\n-(define_insn \"*addsf3_cc\"\n-  [(set (reg 33)\n-\t(compare (plus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t\t  (match_operand:SF 2 \"general_operand\" \"f,R\"))\n-\t\t (match_operand:SF 3 \"const0_operand\" \"\")))\n-   (set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-\t(plus:SF (match_dup 1) (match_dup 2)))]\n-  \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"@\n-   aebr\\t%0,%2\n-   aeb\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n-\n-(define_insn \"*addsf3_cconly\"\n-  [(set (reg 33)\n-\t(compare (plus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t\t  (match_operand:SF 2 \"general_operand\" \"f,R\"))\n-\t\t (match_operand:SF 3 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:SF 0 \"=f,f\"))]\n-  \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"@\n-   aebr\\t%0,%2\n-   aeb\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n-\n-(define_insn \"*addsf3_ibm\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-        (plus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:SF 2 \"general_operand\" \"f,R\")))\n-   (clobber (reg:CC 33))]\n-  \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n-  \"@\n-   aer\\t%0,%2\n-   ae\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n \n \n ;;\n@@ -3982,132 +3864,68 @@\n \n \n ;\n-; subdf3 instruction pattern(s).\n+; sub(df|sf)3 instruction pattern(s).\n ;\n \n-(define_expand \"subdf3\"\n+(define_expand \"sub<mode>3\"\n   [(parallel\n-    [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-          (minus:DF (match_operand:DF 1 \"register_operand\" \"0,0\")\n-                    (match_operand:DF 2 \"general_operand\" \"f,R\")))\n+    [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n+          (minus:FPR (match_operand:FPR 1 \"register_operand\" \"0,0\")\n+                     (match_operand:FPR 2 \"general_operand\" \"f,R\")))\n      (clobber (reg:CC 33))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n-(define_insn \"*subdf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-        (minus:DF (match_operand:DF 1 \"register_operand\" \"0,0\")\n-                  (match_operand:DF 2 \"general_operand\" \"f,R\")))\n+(define_insn \"*sub<mode>3\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n+        (minus:FPR (match_operand:FPR 1 \"register_operand\" \"0,0\")\n+                   (match_operand:FPR 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n-   sdbr\\t%0,%2\n-   sdb\\t%0,%2\"\n+   s<de>br\\t%0,%2\n+   s<de>b\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n \n-(define_insn \"*subdf3_cc\"\n+(define_insn \"*sub<mode>3_cc\"\n   [(set (reg 33)\n-\t(compare (minus:DF (match_operand:DF 1 \"nonimmediate_operand\" \"0,0\")\n-\t\t\t   (match_operand:DF 2 \"general_operand\" \"f,R\"))\n-\t\t (match_operand:DF 3 \"const0_operand\" \"\")))\n-   (set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-\t(minus:DF (match_dup 1) (match_dup 2)))]\n+\t(compare (minus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"0,0\")\n+\t\t\t    (match_operand:FPR 2 \"general_operand\" \"f,R\"))\n+\t\t (match_operand:FPR 3 \"const0_operand\" \"\")))\n+   (set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n+\t(minus:FPR (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n-   sdbr\\t%0,%2\n-   sdb\\t%0,%2\"\n+   s<de>br\\t%0,%2\n+   s<de>b\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n \n-(define_insn \"*subdf3_cconly\"\n+(define_insn \"*sub<mode>3_cconly\"\n   [(set (reg 33)\n-\t(compare (minus:DF (match_operand:DF 1 \"nonimmediate_operand\" \"0,0\")\n-\t\t\t   (match_operand:DF 2 \"general_operand\" \"f,R\"))\n-\t\t (match_operand:DF 3 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:DF 0 \"=f,f\"))]\n+\t(compare (minus:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"0,0\")\n+\t\t\t    (match_operand:FPR 2 \"general_operand\" \"f,R\"))\n+\t\t (match_operand:FPR 3 \"const0_operand\" \"\")))\n+   (clobber (match_scratch:FPR 0 \"=f,f\"))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n-   sdbr\\t%0,%2\n-   sdb\\t%0,%2\"\n+   s<de>br\\t%0,%2\n+   s<de>b\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n \n-(define_insn \"*subdf3_ibm\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-        (minus:DF (match_operand:DF 1 \"register_operand\" \"0,0\")\n-                  (match_operand:DF 2 \"general_operand\" \"f,R\")))\n+(define_insn \"*sub<mode>3_ibm\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n+        (minus:FPR (match_operand:FPR 1 \"register_operand\" \"0,0\")\n+                   (match_operand:FPR 2 \"general_operand\" \"f,R\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n-   sdr\\t%0,%2\n-   sd\\t%0,%2\"\n+   s<de>r\\t%0,%2\n+   s<de>\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n-\n-;\n-; subsf3 instruction pattern(s).\n-;\n-\n-(define_expand \"subsf3\"\n-  [(parallel\n-    [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-          (minus:SF (match_operand:SF 1 \"register_operand\" \"0,0\")\n-                    (match_operand:SF 2 \"general_operand\" \"f,R\")))\n-     (clobber (reg:CC 33))])]\n-  \"TARGET_HARD_FLOAT\"\n-  \"\")\n-\n-(define_insn \"*subsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-        (minus:SF (match_operand:SF 1 \"register_operand\" \"0,0\")\n-                  (match_operand:SF 2 \"general_operand\" \"f,R\")))\n-   (clobber (reg:CC 33))]\n-  \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"@\n-   sebr\\t%0,%2\n-   seb\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n-\n-(define_insn \"*subsf3_cc\"\n-  [(set (reg 33)\n-\t(compare (minus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"0,0\")\n-\t\t\t   (match_operand:SF 2 \"general_operand\" \"f,R\"))\n-\t\t (match_operand:SF 3 \"const0_operand\" \"\")))\n-   (set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-\t(minus:SF (match_dup 1) (match_dup 2)))]\n-  \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"@\n-   sebr\\t%0,%2\n-   seb\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n-\n-(define_insn \"*subsf3_cconly\"\n-  [(set (reg 33)\n-\t(compare (minus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"0,0\")\n-\t\t\t   (match_operand:SF 2 \"general_operand\" \"f,R\"))\n-\t\t (match_operand:SF 3 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:SF 0 \"=f,f\"))]\n-  \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"@\n-   sebr\\t%0,%2\n-   seb\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n-\n-(define_insn \"*subsf3_ibm\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-        (minus:SF (match_operand:SF 1 \"register_operand\" \"0,0\")\n-                  (match_operand:SF 2 \"general_operand\" \"f,R\")))\n-   (clobber (reg:CC 33))]\n-  \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n-  \"@\n-   ser\\t%0,%2\n-   se\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n \n \n ;;\n@@ -4320,118 +4138,61 @@\n    (set_attr \"type\"     \"imulsi\")])\n \n ;\n-; muldf3 instruction pattern(s).\n+; mul(df|sf)3 instruction pattern(s).\n ;\n \n-(define_expand \"muldf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-        (mult:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:DF 2 \"general_operand\" \"f,R\")))]\n+(define_expand \"mul<mode>3\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n+        (mult:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n+                  (match_operand:FPR 2 \"general_operand\" \"f,R\")))]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n-(define_insn \"*muldf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-        (mult:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:DF 2 \"general_operand\" \"f,R\")))]\n+(define_insn \"*mul<mode>3\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n+        (mult:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n+                  (match_operand:FPR 2 \"general_operand\" \"f,R\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n-   mdbr\\t%0,%2\n-   mdb\\t%0,%2\"\n+   m<dee>br\\t%0,%2\n+   m<dee>b\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fmuldf\")])\n+   (set_attr \"type\"     \"fmul<mode>\")])\n \n-(define_insn \"*muldf3_ibm\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-        (mult:DF (match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:DF 2 \"general_operand\" \"f,R\")))]\n+(define_insn \"*mul<mode>3_ibm\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n+        (mult:FPR (match_operand:FPR 1 \"nonimmediate_operand\" \"%0,0\")\n+                  (match_operand:FPR 2 \"general_operand\" \"f,R\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n-   mdr\\t%0,%2\n-   md\\t%0,%2\"\n+   m<de>r\\t%0,%2\n+   m<de>\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"    \"fmuldf\")])\n+   (set_attr \"type\"     \"fmul<mode>\")])\n \n-(define_insn \"*fmadddf\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-\t(plus:DF (mult:DF (match_operand:DF 1 \"register_operand\" \"%f,f\")\n-\t\t\t  (match_operand:DF 2 \"nonimmediate_operand\"  \"f,R\"))\n-\t\t (match_operand:DF 3 \"register_operand\" \"0,0\")))]\n+(define_insn \"*fmadd<mode>\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n+\t(plus:FPR (mult:FPR (match_operand:FPR 1 \"register_operand\" \"%f,f\")\n+\t\t\t   (match_operand:FPR 2 \"nonimmediate_operand\"  \"f,R\"))\n+\t\t (match_operand:FPR 3 \"register_operand\" \"0,0\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT && TARGET_FUSED_MADD\"\n   \"@\n-   madbr\\t%0,%1,%2\n-   madb\\t%0,%1,%2\"\n+   ma<de>br\\t%0,%1,%2\n+   ma<de>b\\t%0,%1,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\" \"fmuldf\")])\n+   (set_attr \"type\"     \"fmul<mode>\")])\n \n-(define_insn \"*fmsubdf\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-\t(minus:DF (mult:DF (match_operand:DF 1 \"register_operand\" \"f,f\")\n-\t\t\t   (match_operand:DF 2 \"nonimmediate_operand\"  \"f,R\"))\n-\t\t (match_operand:DF 3 \"register_operand\" \"0,0\")))]\n+(define_insn \"*fmsub<mode>\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n+\t(minus:FPR (mult:FPR (match_operand:FPR 1 \"register_operand\" \"f,f\")\n+\t\t\t    (match_operand:FPR 2 \"nonimmediate_operand\"  \"f,R\"))\n+\t\t (match_operand:FPR 3 \"register_operand\" \"0,0\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT && TARGET_FUSED_MADD\"\n   \"@\n-   msdbr\\t%0,%1,%2\n-   msdb\\t%0,%1,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\" \"fmuldf\")])\n-\n-;\n-; mulsf3 instruction pattern(s).\n-;\n-\n-(define_expand \"mulsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-        (mult:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:SF 2 \"general_operand\" \"f,R\")))]\n-  \"TARGET_HARD_FLOAT\"\n-  \"\")\n-\n-(define_insn \"*mulsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-        (mult:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:SF 2 \"general_operand\" \"f,R\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"@\n-   meebr\\t%0,%2\n-   meeb\\t%0,%2\"\n+   ms<de>br\\t%0,%1,%2\n+   ms<de>b\\t%0,%1,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fmulsf\")])\n-\n-(define_insn \"*mulsf3_ibm\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-        (mult:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (match_operand:SF 2 \"general_operand\" \"f,R\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n-  \"@\n-   mer\\t%0,%2\n-   me\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"     \"fmulsf\")])\n-\n-(define_insn \"*fmaddsf\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-\t(plus:SF (mult:SF (match_operand:SF 1 \"register_operand\" \"%f,f\")\n-\t\t\t  (match_operand:SF 2 \"nonimmediate_operand\"  \"f,R\"))\n-\t\t (match_operand:SF 3 \"register_operand\" \"0,0\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT && TARGET_FUSED_MADD\"\n-  \"@\n-   maebr\\t%0,%1,%2\n-   maeb\\t%0,%1,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\" \"fmulsf\")])\n-\n-(define_insn \"*fmsubsf\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-\t(minus:SF (mult:SF (match_operand:SF 1 \"register_operand\" \"f,f\")\n-\t\t\t   (match_operand:SF 2 \"nonimmediate_operand\"  \"f,R\"))\n-\t\t  (match_operand:SF 3 \"register_operand\" \"0,0\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT && TARGET_FUSED_MADD\"\n-  \"@\n-   msebr\\t%0,%1,%2\n-   mseb\\t%0,%1,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\" \"fmulsf\")])\n+   (set_attr \"type\"     \"fmul<mode>\")])\n \n ;;\n ;;- Divide and modulo instructions.\n@@ -4870,70 +4631,37 @@\n })\n \n ;\n-; divdf3 instruction pattern(s).\n+; div(df|sf)3 instruction pattern(s).\n ;\n \n-(define_expand \"divdf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-        (div:DF (match_operand:DF 1 \"register_operand\" \"0,0\")\n-                (match_operand:DF 2 \"general_operand\" \"f,R\")))]\n+(define_expand \"div<mode>3\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n+        (div:FPR (match_operand:FPR 1 \"register_operand\" \"0,0\")\n+                 (match_operand:FPR 2 \"general_operand\" \"f,R\")))]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n-(define_insn \"*divdf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-        (div:DF (match_operand:DF 1 \"register_operand\" \"0,0\")\n-                (match_operand:DF 2 \"general_operand\" \"f,R\")))]\n+(define_insn \"*div<mode>3\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n+        (div:FPR (match_operand:FPR 1 \"register_operand\" \"0,0\")\n+                 (match_operand:FPR 2 \"general_operand\" \"f,R\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n-   ddbr\\t%0,%2\n-   ddb\\t%0,%2\"\n+   d<de>br\\t%0,%2\n+   d<de>b\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fdivdf\")])\n+   (set_attr \"type\"     \"fdiv<mode>\")])\n \n-(define_insn \"*divdf3_ibm\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-        (div:DF (match_operand:DF 1 \"register_operand\" \"0,0\")\n-                (match_operand:DF 2 \"general_operand\" \"f,R\")))]\n+(define_insn \"*div<mode>3_ibm\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n+        (div:FPR (match_operand:FPR 1 \"register_operand\" \"0,0\")\n+                 (match_operand:FPR 2 \"general_operand\" \"f,R\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"@\n-   ddr\\t%0,%2\n-   dd\\t%0,%2\"\n+   d<de>r\\t%0,%2\n+   d<de>\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"     \"fdivdf\")])\n-\n-;\n-; divsf3 instruction pattern(s).\n-;\n-\n-(define_expand \"divsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-        (div:SF (match_operand:SF 1 \"register_operand\" \"0,0\")\n-                (match_operand:SF 2 \"general_operand\" \"f,R\")))]\n-  \"TARGET_HARD_FLOAT\"\n-  \"\")\n-\n-(define_insn \"*divsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-        (div:SF (match_operand:SF 1 \"register_operand\" \"0,0\")\n-                (match_operand:SF 2 \"general_operand\" \"f,R\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"@\n-   debr\\t%0,%2\n-   deb\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fdivsf\")])\n-\n-(define_insn \"*divsf3_ibm\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-        (div:SF (match_operand:SF 1 \"register_operand\" \"0,0\")\n-                (match_operand:SF 2 \"general_operand\" \"f,R\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n-  \"@\n-   der\\t%0,%2\n-   de\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"     \"fdivsf\")])\n+   (set_attr \"type\"     \"fdiv<mode>\")])\n \n \n ;;\n@@ -5893,106 +5621,55 @@\n    operands[6] = gen_label_rtx ();\")\n \n ;\n-; negdf2 instruction pattern(s).\n-;\n-\n-(define_expand \"negdf2\"\n-  [(parallel\n-    [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-          (neg:DF (match_operand:DF 1 \"register_operand\" \"f\")))\n-     (clobber (reg:CC 33))])]\n-  \"TARGET_HARD_FLOAT\"\n-  \"\")\n-\n-(define_insn \"*negdf2_cc\"\n-  [(set (reg 33)\n-        (compare (neg:DF (match_operand:DF 1 \"register_operand\" \"f\"))\n-                 (match_operand:DF 2 \"const0_operand\" \"\")))\n-   (set (match_operand:DF 0 \"register_operand\" \"=f\")\n-        (neg:DF (match_dup 1)))]\n-  \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"lcdbr\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n-  \n-(define_insn \"*negdf2_cconly\"\n-  [(set (reg 33)\n-        (compare (neg:DF (match_operand:DF 1 \"register_operand\" \"f\"))\n-                 (match_operand:DF 2 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:DF 0 \"=f\"))]\n-  \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"lcdbr\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n-  \n-(define_insn \"*negdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-        (neg:DF (match_operand:DF 1 \"register_operand\" \"f\")))\n-   (clobber (reg:CC 33))]\n-  \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"lcdbr\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n-\n-(define_insn \"*negdf2_ibm\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-        (neg:DF (match_operand:DF 1 \"register_operand\" \"f\")))\n-   (clobber (reg:CC 33))]\n-  \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n-  \"lcdr\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RR\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n-\n-;\n-; negsf2 instruction pattern(s).\n+; neg(df|sf)2 instruction pattern(s).\n ;\n \n-(define_expand \"negsf2\"\n+(define_expand \"neg<mode>2\"\n   [(parallel\n-    [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-          (neg:SF (match_operand:SF 1 \"register_operand\" \"f\")))\n+    [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n+          (neg:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n      (clobber (reg:CC 33))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n-(define_insn \"*negsf2_cc\"\n+(define_insn \"*neg<mode>2_cc\"\n   [(set (reg 33)\n-        (compare (neg:SF (match_operand:SF 1 \"register_operand\" \"f\"))\n-                 (match_operand:SF 2 \"const0_operand\" \"\")))\n-   (set (match_operand:SF 0 \"register_operand\" \"=f\")\n-        (neg:SF (match_dup 1)))]\n+        (compare (neg:FPR (match_operand:FPR 1 \"register_operand\" \"f\"))\n+                 (match_operand:FPR 2 \"const0_operand\" \"\")))\n+   (set (match_operand:FPR 0 \"register_operand\" \"=f\")\n+        (neg:FPR (match_dup 1)))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"lcebr\\t%0,%1\"\n+  \"lc<de>br\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n   \n-(define_insn \"*negsf2_cconly\"\n+(define_insn \"*neg<mode>2_cconly\"\n   [(set (reg 33)\n-        (compare (neg:SF (match_operand:SF 1 \"register_operand\" \"f\"))\n-                 (match_operand:SF 2 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:SF 0 \"=f\"))]\n+        (compare (neg:FPR (match_operand:FPR 1 \"register_operand\" \"f\"))\n+                 (match_operand:FPR 2 \"const0_operand\" \"\")))\n+   (clobber (match_scratch:FPR 0 \"=f\"))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"lcebr\\t%0,%1\"\n+  \"lc<de>br\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n   \n-(define_insn \"*negsf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-        (neg:SF (match_operand:SF 1 \"register_operand\" \"f\")))\n+(define_insn \"*neg<mode>2\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n+        (neg:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"lcebr\\t%0,%1\"\n+  \"lc<de>br\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n \n-(define_insn \"*negsf2_ibm\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-        (neg:SF (match_operand:SF 1 \"register_operand\" \"f\")))\n+(define_insn \"*neg<mode>2_ibm\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n+        (neg:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n-  \"lcer\\t%0,%1\"\n+  \"lc<de>r\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RR\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n \n \n ;;\n@@ -6051,106 +5728,55 @@\n   [(set_attr \"op_type\"  \"RR<E>\")])\n \n ;\n-; absdf2 instruction pattern(s).\n+; abs(df|sf)2 instruction pattern(s).\n ;\n \n-(define_expand \"absdf2\"\n+(define_expand \"abs<mode>2\"\n   [(parallel\n-    [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-          (abs:DF (match_operand:DF 1 \"register_operand\" \"f\")))\n+    [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n+          (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n      (clobber (reg:CC 33))])]\n   \"TARGET_HARD_FLOAT\"\n   \"\")\n \n-(define_insn \"*absdf2_cc\"\n-  [(set (reg 33)\n-        (compare (abs:DF (match_operand:DF 1 \"register_operand\" \"f\"))\n-                 (match_operand:DF 2 \"const0_operand\" \"\")))\n-   (set (match_operand:DF 0 \"register_operand\" \"=f\")\n-        (abs:DF (match_dup 1)))]\n-  \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"lpdbr\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n-  \n-(define_insn \"*absdf2_cconly\"\n-  [(set (reg 33)\n-        (compare (abs:DF (match_operand:DF 1 \"register_operand\" \"f\"))\n-                 (match_operand:DF 2 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:DF 0 \"=f\"))]\n-  \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"lpdbr\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n-  \n-(define_insn \"*absdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-        (abs:DF (match_operand:DF 1 \"register_operand\" \"f\")))\n-   (clobber (reg:CC 33))]\n-  \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"lpdbr\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n-\n-(define_insn \"*absdf2_ibm\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-        (abs:DF (match_operand:DF 1 \"register_operand\" \"f\")))\n-   (clobber (reg:CC 33))]\n-  \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n-  \"lpdr\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RR\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n-\n-;\n-; abssf2 instruction pattern(s).\n-;\n-\n-(define_expand \"abssf2\"\n-  [(parallel\n-    [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-          (abs:SF (match_operand:SF 1 \"register_operand\" \"f\")))\n-     (clobber (reg:CC 33))])]\n-  \"TARGET_HARD_FLOAT\"\n-  \"\")\n-\n-(define_insn \"*abssf2_cc\"\n+(define_insn \"*abs<mode>2_cc\"\n   [(set (reg 33)\n-        (compare (abs:SF (match_operand:SF 1 \"register_operand\" \"f\"))\n-                 (match_operand:SF 2 \"const0_operand\" \"\")))\n-   (set (match_operand:SF 0 \"register_operand\" \"=f\")\n-        (abs:SF (match_dup 1)))]\n+        (compare (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\"))\n+                 (match_operand:FPR 2 \"const0_operand\" \"\")))\n+   (set (match_operand:FPR 0 \"register_operand\" \"=f\")\n+        (abs:FPR (match_dup 1)))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"lpebr\\t%0,%1\"\n+  \"lp<de>br\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n   \n-(define_insn \"*abssf2_cconly\"\n+(define_insn \"*abs<mode>2_cconly\"\n   [(set (reg 33)\n-        (compare (abs:SF (match_operand:SF 1 \"register_operand\" \"f\"))\n-                 (match_operand:SF 2 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:SF 0 \"=f\"))]\n+        (compare (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\"))\n+                 (match_operand:FPR 2 \"const0_operand\" \"\")))\n+   (clobber (match_scratch:FPR 0 \"=f\"))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"lpebr\\t%0,%1\"\n+  \"lp<de>br\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n   \n-(define_insn \"*abssf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-        (abs:SF (match_operand:SF 1 \"register_operand\" \"f\")))\n+(define_insn \"*abs<mode>2\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n+        (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"lpebr\\t%0,%1\"\n+  \"lp<de>br\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n \n-(define_insn \"*abssf2_ibm\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-        (abs:SF (match_operand:SF 1 \"register_operand\" \"f\")))\n+(define_insn \"*abs<mode>2_ibm\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n+        (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n-  \"lper\\t%0,%1\"\n+  \"lp<de>r\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RR\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n \n ;;\n ;;- Negated absolute value instructions\n@@ -6212,97 +5838,54 @@\n ; Floating point\n ;\n \n-(define_insn \"*negabsdf2_cc\"\n-  [(set (reg 33)\n-        (compare (neg:DF (abs:DF (match_operand:DF 1 \"register_operand\" \"f\")))\n-                 (match_operand:DF 2 \"const0_operand\" \"\")))\n-   (set (match_operand:DF 0 \"register_operand\" \"=f\")\n-        (neg:DF (abs:DF (match_dup 1))))]\n-  \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"lndbr\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n-  \n-(define_insn \"*negabsdf2_cconly\"\n-  [(set (reg 33)\n-        (compare (neg:DF (abs:DF (match_operand:DF 1 \"register_operand\" \"f\")))\n-                 (match_operand:DF 2 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:DF 0 \"=f\"))]\n-  \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"lndbr\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n-  \n-(define_insn \"*negabsdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-        (neg:DF (abs:DF (match_operand:DF 1 \"register_operand\" \"f\"))))\n-   (clobber (reg:CC 33))]\n-  \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"lndbr\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpdf\")])\n-\n-(define_insn \"*negabssf2_cc\"\n+(define_insn \"*negabs<mode>2_cc\"\n   [(set (reg 33)\n-        (compare (neg:SF (abs:SF (match_operand:SF 1 \"register_operand\" \"f\")))\n-                 (match_operand:SF 2 \"const0_operand\" \"\")))\n-   (set (match_operand:SF 0 \"register_operand\" \"=f\")\n-        (neg:SF (abs:SF (match_dup 1))))]\n+        (compare (neg:FPR (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n+                 (match_operand:FPR 2 \"const0_operand\" \"\")))\n+   (set (match_operand:FPR 0 \"register_operand\" \"=f\")\n+        (neg:FPR (abs:FPR (match_dup 1))))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"lnebr\\t%0,%1\"\n+  \"ln<de>br\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n   \n-(define_insn \"*negabssf2_cconly\"\n+(define_insn \"*negabs<mode>2_cconly\"\n   [(set (reg 33)\n-        (compare (neg:SF (abs:SF (match_operand:SF 1 \"register_operand\" \"f\")))\n-                 (match_operand:SF 2 \"const0_operand\" \"\")))\n-   (clobber (match_scratch:SF 0 \"=f\"))]\n+        (compare (neg:FPR (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n+                 (match_operand:FPR 2 \"const0_operand\" \"\")))\n+   (clobber (match_scratch:FPR 0 \"=f\"))]\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"lnebr\\t%0,%1\"\n+  \"ln<de>br\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n   \n-(define_insn \"*negabssf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-        (neg:SF (abs:SF (match_operand:SF 1 \"register_operand\" \"f\"))))\n+(define_insn \"*negabs<mode>2\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f\")\n+        (neg:FPR (abs:FPR (match_operand:FPR 1 \"register_operand\" \"f\"))))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"lnebr\\t%0,%1\"\n+  \"ln<de>br\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpsf\")])\n+   (set_attr \"type\"     \"fsimp<mode>\")])\n \n ;;\n ;;- Square root instructions.\n ;;\n \n ;\n-; sqrtdf2 instruction pattern(s).\n+; sqrt(df|sf)2 instruction pattern(s).\n ;\n \n-(define_insn \"sqrtdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-\t(sqrt:DF (match_operand:DF 1 \"general_operand\" \"f,R\")))]\n+(define_insn \"sqrt<mode>2\"\n+  [(set (match_operand:FPR 0 \"register_operand\" \"=f,f\")\n+\t(sqrt:FPR (match_operand:FPR 1 \"general_operand\" \"f,R\")))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"@\n-   sqdbr\\t%0,%1\n-   sqdb\\t%0,%1\"\n+   sq<de>br\\t%0,%1\n+   sq<de>b\\t%0,%1\"\n   [(set_attr \"op_type\" \"RRE,RXE\")\n-   (set_attr \"type\" \"fsqrtdf\")])\n+   (set_attr \"type\" \"fsqrt<mode>\")])\n \n-;\n-; sqrtsf2 instruction pattern(s).\n-;\n-\n-(define_insn \"sqrtsf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-\t(sqrt:SF (match_operand:SF 1 \"general_operand\" \"f,R\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"@\n-   sqebr\\t%0,%1\n-   sqeb\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RRE,RXE\")\n-   (set_attr \"type\" \"fsqrtsf\")])\n \n ;;\n ;;- One complement instructions."}]}