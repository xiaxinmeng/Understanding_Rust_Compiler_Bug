{"sha": "d3379e9151ffd3974cf50aaf3e37033ab579c610", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMzNzllOTE1MWZmZDM5NzRjZjUwYWFmM2UzNzAzM2FiNTc5YzYxMA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-03-20T02:14:45Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-03-20T02:14:45Z"}, "message": "Add prototypes.h\n\nFrom-SVN: r3793", "tree": {"sha": "4ba26fea29758f2a625f05cad5d607bed5172e39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ba26fea29758f2a625f05cad5d607bed5172e39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3379e9151ffd3974cf50aaf3e37033ab579c610", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3379e9151ffd3974cf50aaf3e37033ab579c610", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3379e9151ffd3974cf50aaf3e37033ab579c610", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3379e9151ffd3974cf50aaf3e37033ab579c610/comments", "author": null, "committer": null, "parents": [{"sha": "3eb76828b0c258833705e627d67b7c57bbea27c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eb76828b0c258833705e627d67b7c57bbea27c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eb76828b0c258833705e627d67b7c57bbea27c9"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "8fc2efb4772724f8baba3a9643a54288aa54112e", "filename": "gcc/recog.h", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3379e9151ffd3974cf50aaf3e37033ab579c610/gcc%2Frecog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3379e9151ffd3974cf50aaf3e37033ab579c610/gcc%2Frecog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.h?ref=d3379e9151ffd3974cf50aaf3e37033ab579c610", "patch": "@@ -17,36 +17,45 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n+/* Add prototype support.  */\n+#ifndef PROTO\n+#if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n+#define PROTO(ARGS) ARGS\n+#else\n+#define PROTO(ARGS) ()\n+#endif\n+#endif\n+\n /* Recognize an insn and return its insn-code,\n    which is the sequence number of the DEFINE_INSN that it matches.\n    If the insn does not match, return -1.  */\n \n-extern int recog_memoized ();\n+extern int recog_memoized PROTO((rtx));\n \n /* Determine whether a proposed change to an insn or MEM will make it\n    invalid.  Make the change if not.  */\n \n-extern int validate_change ();\n+extern int validate_change PROTO((rtx, rtx *, rtx, int));\n \n /* Apply a group of changes if valid.  */\n \n-extern int apply_change_group ();\n+extern int apply_change_group PROTO((void));\n \n /* Return the number of changes so far in the current group.   */\n \n-extern int num_validated_changes ();\n+extern int num_validated_changes PROTO((void));\n \n /* Retract some changes.  */\n \n-extern void cancel_changes ();\n+extern void cancel_changes PROTO((int));\n \n /* Nonzero means volatile operands are recognized.  */\n \n extern int volatile_ok;\n \n /* Extract the operands from an insn that has been recognized.  */\n \n-extern void insn_extract ();\n+extern void insn_extract PROTO((rtx));\n \n /* The following vectors hold the results from insn_extract.  */\n "}]}