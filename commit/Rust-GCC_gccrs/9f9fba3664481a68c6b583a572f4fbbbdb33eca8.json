{"sha": "9f9fba3664481a68c6b583a572f4fbbbdb33eca8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY5ZmJhMzY2NDQ4MWE2OGM2YjU4M2E1NzJmNGZiYmJkYjMzZWNhOA==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1995-03-10T23:17:34Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1995-03-10T23:17:34Z"}, "message": "(PROMOTE_MODE): Define.\n\nFrom-SVN: r9170", "tree": {"sha": "39b6c4b4f4cc935ce0061e1a39d570b9a38c35dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39b6c4b4f4cc935ce0061e1a39d570b9a38c35dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f9fba3664481a68c6b583a572f4fbbbdb33eca8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f9fba3664481a68c6b583a572f4fbbbdb33eca8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f9fba3664481a68c6b583a572f4fbbbdb33eca8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f9fba3664481a68c6b583a572f4fbbbdb33eca8/comments", "author": null, "committer": null, "parents": [{"sha": "4255220d922400aeb4c3da7b627b716c908d9a4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4255220d922400aeb4c3da7b627b716c908d9a4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4255220d922400aeb4c3da7b627b716c908d9a4e"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "5e2ba95c1d1324400d321afd9377c528cbbc5037", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f9fba3664481a68c6b583a572f4fbbbdb33eca8/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f9fba3664481a68c6b583a572f4fbbbdb33eca8/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=9f9fba3664481a68c6b583a572f4fbbbdb33eca8", "patch": "@@ -265,6 +265,17 @@ do {\t\t\t\t\t\t\t\t\\\n    or endianess (e.g. VAX, x86).  */\n #define REAL_ARITHMETIC\n \n+/* Define this macro if it is advisable to hold scalars in registers\n+   in a wider mode than that declared by the program.  In such cases, \n+   the value is constrained to be within the bounds of the declared\n+   type, but kept valid in the wider mode.  The signedness of the\n+   extension may differ from that of the type.  */\n+\n+#define PROMOTE_MODE(MODE,UNSIGNEDP,TYPE)  \\\n+  if (GET_MODE_CLASS (MODE) == MODE_INT\t\\\n+      && GET_MODE_SIZE (MODE) < 4)  \t\\\n+    (MODE) = SImode;\n+\n /* Define this if most significant bit is lowest numbered\n    in instructions that operate on numbered bit-fields.  */\n #define BITS_BIG_ENDIAN 1"}]}