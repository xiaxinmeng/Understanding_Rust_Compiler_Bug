{"sha": "b8b2d9829aa9c3caa053de687701de3ebb506b4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhiMmQ5ODI5YWE5YzNjYWEwNTNkZTY4NzcwMWRlM2ViYjUwNmI0Yw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T13:10:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T13:10:48Z"}, "message": "[multiple changes]\n\n2014-07-29  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_attr.adb, types.ads, types.h, exp_ch11.adb, a-except.adb,\n\ta-except-2005.adb: Add new reason code PE_Stream_Operation_Not_Allowed,\n\tand then use it when a stream operation is used from a library generic\n\twhen the restriction (No_Streams) is active.\n\n2014-07-29  Thomas Quinot  <quinot@adacore.com>\n\n\t* projects.texi: Fix minor typo.\n\n2014-07-29  Yannick Moy  <moy@adacore.com>\n\n\t* sem_attr.adb (Analyze_Attribute): Fix generation of warning.\n\n2014-07-29  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_ch5.adb (Check_Unreachable_Code): Do not remove code in\n\tCodePeer mode.\n\n2014-07-29  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch7.adb (Find_Last_Init): Add local variable\n\tDeep_Init_Found. Check the statement immediately following the\n\tdeclaration if [Deep_]Initialization was not found.\n\n2014-07-29  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_util.adb (Is_Aliased): It appears that\n\t'reference-d and renamed objects still play some role in Boolean\n\texpression with actions and cannot be finalized immediately.\n\n2014-07-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_dbug.adb (Qualify_Needed):  For debugging purposes,\n\tLoop names are not part of the full qualification of entity names.\n\nFrom-SVN: r213164", "tree": {"sha": "50aacdff34afb91561ece2913f57947c52e42805", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50aacdff34afb91561ece2913f57947c52e42805"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8b2d9829aa9c3caa053de687701de3ebb506b4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8b2d9829aa9c3caa053de687701de3ebb506b4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8b2d9829aa9c3caa053de687701de3ebb506b4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8b2d9829aa9c3caa053de687701de3ebb506b4c/comments", "author": null, "committer": null, "parents": [{"sha": "02bb07655823135ef3e8b06f63b201bc19f54758", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02bb07655823135ef3e8b06f63b201bc19f54758", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02bb07655823135ef3e8b06f63b201bc19f54758"}], "stats": {"total": 221, "additions": 148, "deletions": 73}, "files": [{"sha": "2ccfdf417ca4eade07da2a0c7871130edca7a423", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b8b2d9829aa9c3caa053de687701de3ebb506b4c", "patch": "@@ -1,3 +1,40 @@\n+2014-07-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_attr.adb, types.ads, types.h, exp_ch11.adb, a-except.adb,\n+\ta-except-2005.adb: Add new reason code PE_Stream_Operation_Not_Allowed,\n+\tand then use it when a stream operation is used from a library generic\n+\twhen the restriction (No_Streams) is active.\n+\n+2014-07-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* projects.texi: Fix minor typo.\n+\n+2014-07-29  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_attr.adb (Analyze_Attribute): Fix generation of warning.\n+\n+2014-07-29  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_ch5.adb (Check_Unreachable_Code): Do not remove code in\n+\tCodePeer mode.\n+\n+2014-07-29  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch7.adb (Find_Last_Init): Add local variable\n+\tDeep_Init_Found. Check the statement immediately following the\n+\tdeclaration if [Deep_]Initialization was not found.\n+\n+2014-07-29  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_util.adb (Is_Aliased): It appears that\n+\t'reference-d and renamed objects still play some role in Boolean\n+\texpression with actions and cannot be finalized immediately.\n+\n+2014-07-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_dbug.adb (Qualify_Needed):  For debugging purposes,\n+\tLoop names are not part of the full qualification of entity names.\n+\n 2014-07-29  Robert Dewar  <dewar@adacore.com>\n \n \t* einfo.adb (Has_Protected): Test base type."}, {"sha": "52de66f21878251094a5451d971b269875b0aea0", "filename": "gcc/ada/a-except-2005.adb", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fa-except-2005.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fa-except-2005.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except-2005.adb?ref=b8b2d9829aa9c3caa053de687701de3ebb506b4c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -456,16 +456,18 @@ package body Ada.Exceptions is\n      (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_Missing_Return\n      (File : System.Address; Line : Integer);\n+   procedure Rcheck_PE_Non_Transportable_Actual\n+     (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_Overlaid_Controlled_Object\n      (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_Potentially_Blocking_Operation\n      (File : System.Address; Line : Integer);\n+   procedure Rcheck_PE_Stream_Operation_Not_Allowed\n+     (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_Stubbed_Subprogram_Called\n      (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_Unchecked_Union_Restriction\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Non_Transportable_Actual\n-     (File : System.Address; Line : Integer);\n    procedure Rcheck_SE_Empty_Storage_Pool\n      (File : System.Address; Line : Integer);\n    procedure Rcheck_SE_Explicit_Raise\n@@ -545,16 +547,18 @@ package body Ada.Exceptions is\n                   \"__gnat_rcheck_PE_Misaligned_Address_Value\");\n    pragma Export (C, Rcheck_PE_Missing_Return,\n                   \"__gnat_rcheck_PE_Missing_Return\");\n+   pragma Export (C, Rcheck_PE_Non_Transportable_Actual,\n+                  \"__gnat_rcheck_PE_Non_Transportable_Actual\");\n    pragma Export (C, Rcheck_PE_Overlaid_Controlled_Object,\n                   \"__gnat_rcheck_PE_Overlaid_Controlled_Object\");\n    pragma Export (C, Rcheck_PE_Potentially_Blocking_Operation,\n                   \"__gnat_rcheck_PE_Potentially_Blocking_Operation\");\n+   pragma Export (C, Rcheck_PE_Stream_Operation_Not_Allowed,\n+                  \"__gnat_rcheck_PE_Stream_Operation_Not_Allowed\");\n    pragma Export (C, Rcheck_PE_Stubbed_Subprogram_Called,\n                   \"__gnat_rcheck_PE_Stubbed_Subprogram_Called\");\n    pragma Export (C, Rcheck_PE_Unchecked_Union_Restriction,\n                   \"__gnat_rcheck_PE_Unchecked_Union_Restriction\");\n-   pragma Export (C, Rcheck_PE_Non_Transportable_Actual,\n-                  \"__gnat_rcheck_PE_Non_Transportable_Actual\");\n    pragma Export (C, Rcheck_SE_Empty_Storage_Pool,\n                   \"__gnat_rcheck_SE_Empty_Storage_Pool\");\n    pragma Export (C, Rcheck_SE_Explicit_Raise,\n@@ -603,11 +607,12 @@ package body Ada.Exceptions is\n    pragma No_Return (Rcheck_PE_Implicit_Return);\n    pragma No_Return (Rcheck_PE_Misaligned_Address_Value);\n    pragma No_Return (Rcheck_PE_Missing_Return);\n+   pragma No_Return (Rcheck_PE_Non_Transportable_Actual);\n    pragma No_Return (Rcheck_PE_Overlaid_Controlled_Object);\n    pragma No_Return (Rcheck_PE_Potentially_Blocking_Operation);\n+   pragma No_Return (Rcheck_PE_Stream_Operation_Not_Allowed);\n    pragma No_Return (Rcheck_PE_Stubbed_Subprogram_Called);\n    pragma No_Return (Rcheck_PE_Unchecked_Union_Restriction);\n-   pragma No_Return (Rcheck_PE_Non_Transportable_Actual);\n    pragma No_Return (Rcheck_PE_Finalize_Raised_Exception);\n    pragma No_Return (Rcheck_SE_Empty_Storage_Pool);\n    pragma No_Return (Rcheck_SE_Explicit_Raise);\n@@ -668,6 +673,7 @@ package body Ada.Exceptions is\n    Rmsg_33 : constant String := \"explicit raise\"                   & NUL;\n    Rmsg_34 : constant String := \"infinite recursion\"               & NUL;\n    Rmsg_35 : constant String := \"object too large\"                 & NUL;\n+   Rmsg_36 : constant String := \"stream operation not allowed\"     & NUL;\n \n    -----------------------\n    -- Polling Interface --\n@@ -1392,6 +1398,13 @@ package body Ada.Exceptions is\n       Raise_Program_Error_Msg (File, Line, Rmsg_26'Address);\n    end Rcheck_PE_Missing_Return;\n \n+   procedure Rcheck_PE_Non_Transportable_Actual\n+     (File : System.Address; Line : Integer)\n+   is\n+   begin\n+      Raise_Program_Error_Msg (File, Line, Rmsg_31'Address);\n+   end Rcheck_PE_Non_Transportable_Actual;\n+\n    procedure Rcheck_PE_Overlaid_Controlled_Object\n      (File : System.Address; Line : Integer)\n    is\n@@ -1406,6 +1419,13 @@ package body Ada.Exceptions is\n       Raise_Program_Error_Msg (File, Line, Rmsg_28'Address);\n    end Rcheck_PE_Potentially_Blocking_Operation;\n \n+   procedure Rcheck_PE_Stream_Operation_Not_Allowed\n+     (File : System.Address; Line : Integer)\n+   is\n+   begin\n+      Raise_Program_Error_Msg (File, Line, Rmsg_36'Address);\n+   end Rcheck_PE_Stream_Operation_Not_Allowed;\n+\n    procedure Rcheck_PE_Stubbed_Subprogram_Called\n      (File : System.Address; Line : Integer)\n    is\n@@ -1420,13 +1440,6 @@ package body Ada.Exceptions is\n       Raise_Program_Error_Msg (File, Line, Rmsg_30'Address);\n    end Rcheck_PE_Unchecked_Union_Restriction;\n \n-   procedure Rcheck_PE_Non_Transportable_Actual\n-     (File : System.Address; Line : Integer)\n-   is\n-   begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_31'Address);\n-   end Rcheck_PE_Non_Transportable_Actual;\n-\n    procedure Rcheck_SE_Empty_Storage_Pool\n      (File : System.Address; Line : Integer)\n    is"}, {"sha": "61632046972866728a5e09dec42cbd228676c14a", "filename": "gcc/ada/a-except.adb", "status": "modified", "additions": 34, "deletions": 18, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.adb?ref=b8b2d9829aa9c3caa053de687701de3ebb506b4c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -412,16 +412,18 @@ package body Ada.Exceptions is\n      (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_Missing_Return\n      (File : System.Address; Line : Integer);\n+   procedure Rcheck_PE_Non_Transportable_Actual\n+     (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_Overlaid_Controlled_Object\n      (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_Potentially_Blocking_Operation\n      (File : System.Address; Line : Integer);\n+   procedure Rcheck_PE_Stream_Operation_Not_Allowed\n+     (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_Stubbed_Subprogram_Called\n      (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_Unchecked_Union_Restriction\n      (File : System.Address; Line : Integer);\n-   procedure Rcheck_PE_Non_Transportable_Actual\n-     (File : System.Address; Line : Integer);\n    procedure Rcheck_SE_Empty_Storage_Pool\n      (File : System.Address; Line : Integer);\n    procedure Rcheck_SE_Explicit_Raise\n@@ -492,16 +494,18 @@ package body Ada.Exceptions is\n                   \"__gnat_rcheck_PE_Misaligned_Address_Value\");\n    pragma Export (C, Rcheck_PE_Missing_Return,\n                   \"__gnat_rcheck_PE_Missing_Return\");\n+   pragma Export (C, Rcheck_PE_Non_Transportable_Actual,\n+                  \"__gnat_rcheck_PE_Non_Transportable_Actual\");\n    pragma Export (C, Rcheck_PE_Overlaid_Controlled_Object,\n                   \"__gnat_rcheck_PE_Overlaid_Controlled_Object\");\n    pragma Export (C, Rcheck_PE_Potentially_Blocking_Operation,\n                   \"__gnat_rcheck_PE_Potentially_Blocking_Operation\");\n+   pragma Export (C, Rcheck_PE_Stream_Operation_Not_Allowed,\n+                  \"__gnat_rcheck_PE_Stream_Operation_Not_Allowed\");\n    pragma Export (C, Rcheck_PE_Stubbed_Subprogram_Called,\n                   \"__gnat_rcheck_PE_Stubbed_Subprogram_Called\");\n    pragma Export (C, Rcheck_PE_Unchecked_Union_Restriction,\n                   \"__gnat_rcheck_PE_Unchecked_Union_Restriction\");\n-   pragma Export (C, Rcheck_PE_Non_Transportable_Actual,\n-                  \"__gnat_rcheck_PE_Non_Transportable_Actual\");\n    pragma Export (C, Rcheck_SE_Empty_Storage_Pool,\n                   \"__gnat_rcheck_SE_Empty_Storage_Pool\");\n    pragma Export (C, Rcheck_SE_Explicit_Raise,\n@@ -542,10 +546,11 @@ package body Ada.Exceptions is\n    pragma No_Return (Rcheck_PE_Misaligned_Address_Value);\n    pragma No_Return (Rcheck_PE_Missing_Return);\n    pragma No_Return (Rcheck_PE_Overlaid_Controlled_Object);\n+   pragma No_Return (Rcheck_PE_Non_Transportable_Actual);\n    pragma No_Return (Rcheck_PE_Potentially_Blocking_Operation);\n+   pragma No_Return (Rcheck_PE_Stream_Operation_Not_Allowed);\n    pragma No_Return (Rcheck_PE_Stubbed_Subprogram_Called);\n    pragma No_Return (Rcheck_PE_Unchecked_Union_Restriction);\n-   pragma No_Return (Rcheck_PE_Non_Transportable_Actual);\n    pragma No_Return (Rcheck_PE_Finalize_Raised_Exception);\n    pragma No_Return (Rcheck_SE_Empty_Storage_Pool);\n    pragma No_Return (Rcheck_SE_Explicit_Raise);\n@@ -576,6 +581,7 @@ package body Ada.Exceptions is\n    procedure Rcheck_19 (File : System.Address; Line : Integer);\n    procedure Rcheck_20 (File : System.Address; Line : Integer);\n    procedure Rcheck_21 (File : System.Address; Line : Integer);\n+   procedure Rcheck_22 (File : System.Address; Line : Integer);\n    procedure Rcheck_23 (File : System.Address; Line : Integer);\n    procedure Rcheck_24 (File : System.Address; Line : Integer);\n    procedure Rcheck_25 (File : System.Address; Line : Integer);\n@@ -589,8 +595,7 @@ package body Ada.Exceptions is\n    procedure Rcheck_33 (File : System.Address; Line : Integer);\n    procedure Rcheck_34 (File : System.Address; Line : Integer);\n    procedure Rcheck_35 (File : System.Address; Line : Integer);\n-\n-   procedure Rcheck_22 (File : System.Address; Line : Integer);\n+   procedure Rcheck_36 (File : System.Address; Line : Integer);\n \n    pragma Export (C, Rcheck_00, \"__gnat_rcheck_00\");\n    pragma Export (C, Rcheck_01, \"__gnat_rcheck_01\");\n@@ -628,6 +633,7 @@ package body Ada.Exceptions is\n    pragma Export (C, Rcheck_33, \"__gnat_rcheck_33\");\n    pragma Export (C, Rcheck_34, \"__gnat_rcheck_34\");\n    pragma Export (C, Rcheck_35, \"__gnat_rcheck_35\");\n+   pragma Export (C, Rcheck_36, \"__gnat_rcheck_36\");\n \n    --  None of these procedures ever returns (they raise an exception). By\n    --  using pragma No_Return, we ensure that any junk code after the call,\n@@ -668,6 +674,7 @@ package body Ada.Exceptions is\n    pragma No_Return (Rcheck_33);\n    pragma No_Return (Rcheck_34);\n    pragma No_Return (Rcheck_35);\n+   pragma No_Return (Rcheck_36);\n \n    ---------------------------------------------\n    -- Reason Strings for Run-Time Check Calls --\n@@ -718,6 +725,7 @@ package body Ada.Exceptions is\n    Rmsg_33 : constant String := \"explicit raise\"                   & NUL;\n    Rmsg_34 : constant String := \"infinite recursion\"               & NUL;\n    Rmsg_35 : constant String := \"object too large\"                 & NUL;\n+   Rmsg_36 : constant String := \"stream operation not allowed\"     & NUL;\n \n    -----------------------\n    -- Polling Interface --\n@@ -1357,6 +1365,13 @@ package body Ada.Exceptions is\n       Raise_Program_Error_Msg (File, Line, Rmsg_26'Address);\n    end Rcheck_PE_Missing_Return;\n \n+   procedure Rcheck_PE_Non_Transportable_Actual\n+     (File : System.Address; Line : Integer)\n+   is\n+   begin\n+      Raise_Program_Error_Msg (File, Line, Rmsg_31'Address);\n+   end Rcheck_PE_Non_Transportable_Actual;\n+\n    procedure Rcheck_PE_Overlaid_Controlled_Object\n      (File : System.Address; Line : Integer)\n    is\n@@ -1371,6 +1386,13 @@ package body Ada.Exceptions is\n       Raise_Program_Error_Msg (File, Line, Rmsg_28'Address);\n    end Rcheck_PE_Potentially_Blocking_Operation;\n \n+   procedure Rcheck_PE_Stream_Operation_Not_Allowed\n+     (File : System.Address; Line : Integer)\n+   is\n+   begin\n+      Raise_Program_Error_Msg (File, Line, Rmsg_36'Address);\n+   end Rcheck_PE_Stream_Operation_Not_Allowed;\n+\n    procedure Rcheck_PE_Stubbed_Subprogram_Called\n      (File : System.Address; Line : Integer)\n    is\n@@ -1385,13 +1407,6 @@ package body Ada.Exceptions is\n       Raise_Program_Error_Msg (File, Line, Rmsg_30'Address);\n    end Rcheck_PE_Unchecked_Union_Restriction;\n \n-   procedure Rcheck_PE_Non_Transportable_Actual\n-     (File : System.Address; Line : Integer)\n-   is\n-   begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_31'Address);\n-   end Rcheck_PE_Non_Transportable_Actual;\n-\n    procedure Rcheck_SE_Empty_Storage_Pool\n      (File : System.Address; Line : Integer)\n    is\n@@ -1483,6 +1498,8 @@ package body Ada.Exceptions is\n      renames Rcheck_PE_Duplicated_Entry_Address;\n    procedure Rcheck_22 (File : System.Address; Line : Integer)\n      renames Rcheck_PE_Explicit_Raise;\n+   procedure Rcheck_23 (File : System.Address; Line : Integer)\n+     renames Rcheck_PE_Finalize_Raised_Exception;\n    procedure Rcheck_24 (File : System.Address; Line : Integer)\n      renames Rcheck_PE_Implicit_Return;\n    procedure Rcheck_25 (File : System.Address; Line : Integer)\n@@ -1507,9 +1524,8 @@ package body Ada.Exceptions is\n      renames Rcheck_SE_Infinite_Recursion;\n    procedure Rcheck_35 (File : System.Address; Line : Integer)\n      renames Rcheck_SE_Object_Too_Large;\n-\n-   procedure Rcheck_23 (File : System.Address; Line : Integer)\n-     renames Rcheck_PE_Finalize_Raised_Exception;\n+   procedure Rcheck_36 (File : System.Address; Line : Integer)\n+     renames Rcheck_PE_Stream_Operation_Not_Allowed;\n \n    -------------\n    -- Reraise --"}, {"sha": "b24c3d1472062344743c30c199ed08df3216e7b4", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=b8b2d9829aa9c3caa053de687701de3ebb506b4c", "patch": "@@ -3246,13 +3246,10 @@ package body Exp_Attr is\n          --  container). In that case rewrite the attribute as a Raise to\n          --  prevent any run-time use.\n \n-         --  This is not an explicit raise, the Reason code is wrong, we most\n-         --  likely need a new Reason code ???\n-\n          if Restriction_Active (No_Streams) then\n             Rewrite (N,\n               Make_Raise_Program_Error (Sloc (N),\n-                Reason => PE_Explicit_Raise));\n+                Reason => PE_Stream_Operation_Not_Allowed));\n             Set_Etype (N, B_Type);\n             return;\n          end if;\n@@ -4248,7 +4245,7 @@ package body Exp_Attr is\n          if Restriction_Active (No_Streams) then\n             Rewrite (N,\n               Make_Raise_Program_Error (Sloc (N),\n-                Reason => PE_Explicit_Raise));\n+                Reason => PE_Stream_Operation_Not_Allowed));\n             Set_Etype (N, Standard_Void_Type);\n             return;\n          end if;\n@@ -4888,7 +4885,7 @@ package body Exp_Attr is\n          if Restriction_Active (No_Streams) then\n             Rewrite (N,\n               Make_Raise_Program_Error (Sloc (N),\n-                Reason => PE_Explicit_Raise));\n+                Reason => PE_Stream_Operation_Not_Allowed));\n             Set_Etype (N, B_Type);\n             return;\n          end if;\n@@ -6600,7 +6597,7 @@ package body Exp_Attr is\n          if Restriction_Active (No_Streams) then\n             Rewrite (N,\n               Make_Raise_Program_Error (Sloc (N),\n-                Reason => PE_Explicit_Raise));\n+                Reason => PE_Stream_Operation_Not_Allowed));\n             Set_Etype (N, U_Type);\n             return;\n          end if;"}, {"sha": "e9e1232afa5a597dfcb6d09a2bad0181c7f6f6e2", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=b8b2d9829aa9c3caa053de687701de3ebb506b4c", "patch": "@@ -2137,16 +2137,18 @@ package body Exp_Ch11 is\n             Add_Str_To_Name_Buffer (\"PE_Misaligned_Address_Value\");\n          when PE_Missing_Return =>\n             Add_Str_To_Name_Buffer (\"PE_Missing_Return\");\n+         when PE_Non_Transportable_Actual =>\n+            Add_Str_To_Name_Buffer (\"PE_Non_Transportable_Actual\");\n          when PE_Overlaid_Controlled_Object =>\n             Add_Str_To_Name_Buffer (\"PE_Overlaid_Controlled_Object\");\n          when PE_Potentially_Blocking_Operation =>\n             Add_Str_To_Name_Buffer (\"PE_Potentially_Blocking_Operation\");\n+         when PE_Stream_Operation_Not_Allowed =>\n+            Add_Str_To_Name_Buffer (\"PE_Stream_Operation_Not_Allowed\");\n          when PE_Stubbed_Subprogram_Called =>\n             Add_Str_To_Name_Buffer (\"PE_Stubbed_Subprogram_Called\");\n          when PE_Unchecked_Union_Restriction =>\n             Add_Str_To_Name_Buffer (\"PE_Unchecked_Union_Restriction\");\n-         when PE_Non_Transportable_Actual =>\n-            Add_Str_To_Name_Buffer (\"PE_Non_Transportable_Actual\");\n \n          when SE_Empty_Storage_Pool =>\n             Add_Str_To_Name_Buffer (\"SE_Empty_Storage_Pool\");"}, {"sha": "1abda22085d3849405ebb9593dbbbb1ec1aa5428", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=b8b2d9829aa9c3caa053de687701de3ebb506b4c", "patch": "@@ -2399,6 +2399,9 @@ package body Exp_Ch7 is\n             Stmt   : Node_Id;\n             Stmt_2 : Node_Id;\n \n+            Deep_Init_Found : Boolean := False;\n+            --  A flag set when a call to [Deep_]Initialize has been found\n+\n          --  Start of processing for Find_Last_Init\n \n          begin\n@@ -2488,19 +2491,22 @@ package body Exp_Ch7 is\n                      Call := Find_Last_Init_In_Block (Stmt_2);\n \n                      if Present (Call) then\n-                        Last_Init   := Call;\n-                        Body_Insert := Stmt_2;\n+                        Deep_Init_Found := True;\n+                        Last_Init       := Call;\n+                        Body_Insert     := Stmt_2;\n                      end if;\n \n                   elsif Is_Init_Call (Stmt_2) then\n-                     Last_Init   := Stmt_2;\n-                     Body_Insert := Last_Init;\n+                     Deep_Init_Found := True;\n+                     Last_Init       := Stmt_2;\n+                     Body_Insert     := Last_Init;\n                   end if;\n+               end if;\n \n                --  If the object lacks a call to Deep_Initialize, then it must\n                --  have a call to its related type init proc.\n \n-               elsif Is_Init_Call (Stmt) then\n+               if not Deep_Init_Found and then Is_Init_Call (Stmt) then\n                   Last_Init   := Stmt;\n                   Body_Insert := Last_Init;\n                end if;"}, {"sha": "e184cb6a263e54ca143e73b0eb3373d7f860629f", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=b8b2d9829aa9c3caa053de687701de3ebb506b4c", "patch": "@@ -1103,7 +1103,8 @@ package body Exp_Dbug is\n \n       function Qualify_Needed (S : Entity_Id) return Boolean;\n       --  Given a scope, determines if the scope is to be included in the\n-      --  fully qualified name, True if so, False if not.\n+      --  fully qualified name, True if so, False if not. Blocks and loops\n+      --  are excluded from a qualified name.\n \n       procedure Set_BNPE_Suffix (E : Entity_Id);\n       --  Recursive routine to append the BNPE qualification suffix. Works\n@@ -1218,6 +1219,7 @@ package body Exp_Dbug is\n             return Is_Subprogram (Ent)\n               or else Ekind (Ent) = E_Subprogram_Body\n               or else (Ekind (S) /= E_Block\n+                        and then Ekind (S) /= E_Loop\n                         and then not Is_Dynamic_Scope (S));\n          end if;\n       end Qualify_Needed;"}, {"sha": "6f8ad43843f3ffc82c8c11f1fcf8c212b5128c0e", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=b8b2d9829aa9c3caa053de687701de3ebb506b4c", "patch": "@@ -4556,17 +4556,6 @@ package body Exp_Util is\n       --  Start of processing for Is_Aliased\n \n       begin\n-         --  'Reference-d or renamed transient objects are not consider aliased\n-         --  when the related context is a Boolean expression_with_actions. The\n-         --  Boolean result is always known after the action list is evaluated,\n-         --  therefore the transient objects must be finalized at that point.\n-\n-         if Nkind (Rel_Node) = N_Expression_With_Actions\n-           and then Is_Boolean_Type (Etype (Rel_Node))\n-         then\n-            return False;\n-         end if;\n-\n          Stmt := First_Stmt;\n          while Present (Stmt) loop\n             if Nkind (Stmt) = N_Object_Declaration then"}, {"sha": "d66ed9affbd880c8c648dba5cc054b6b388f3338", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=b8b2d9829aa9c3caa053de687701de3ebb506b4c", "patch": "@@ -1,7 +1,7 @@\n @set gprconfig GPRconfig\n \n @c ------ projects.texi\n-@c Copyright (C) 2002-2013, Free Software Foundation, Inc.\n+@c Copyright (C) 2002-2014, Free Software Foundation, Inc.\n @c This file is shared between the GNAT user's guide and gprbuild. It is not\n @c compilable on its own, you should instead compile the other two manuals.\n @c For that reason, there is no toplevel @menu\n@@ -2465,7 +2465,7 @@ use a project file like:\n \n @smallexample @c projectfile\n aggregate project Agg is\n-    for Project_Path use (external(\"SETUP\") % \"path\");\n+    for Project_Path use (external(\"SETUP\") & \"path\");\n     for Project_Files use (\"myproject.gpr\");\n end Agg;\n "}, {"sha": "0495c7c9668e623a2b7ff895267777f034c03aa5", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=b8b2d9829aa9c3caa053de687701de3ebb506b4c", "patch": "@@ -412,8 +412,7 @@ package body Sem_Attr is\n       procedure Uneval_Old_Msg;\n       --  Called when Loop_Entry or Old is used in a potentially unevaluated\n       --  expression. Generates appropriate message or warning depending on\n-      --  the setting of Opt.Uneval_Old. The caller has put the Name_Id of\n-      --  the attribute in Error_Msg_Name_1 prior to the call.\n+      --  the setting of Opt.Uneval_Old.\n \n       procedure Unexpected_Argument (En : Node_Id);\n       --  Signal unexpected attribute argument (En is the argument)\n@@ -2284,9 +2283,10 @@ package body Sem_Attr is\n                   & \"unevaluated must denote an entity\");\n \n             when 'W' =>\n-               Error_Attr_P\n+               Error_Msg_Name_1 := Aname;\n+               Error_Msg_F\n                  (\"??prefix of attribute % appears in potentially \"\n-                  & \"unevaluated context, exception may be raised\");\n+                  & \"unevaluated context, exception may be raised\", P);\n \n             when 'A' =>\n                null;"}, {"sha": "3ac6e6b42d90f8549bfbf5ec85d6f9ca7a20cc01", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=b8b2d9829aa9c3caa053de687701de3ebb506b4c", "patch": "@@ -3182,16 +3182,20 @@ package body Sem_Ch5 is\n                   --  unreachable code, since it is useless and we don't\n                   --  want to generate junk warnings.\n \n-                  --  We skip this step if we are not in code generation mode.\n+                  --  We skip this step if we are not in code generation mode\n+                  --  or CodePeer mode.\n                   --  This is the one case where we remove dead code in the\n                   --  semantics as opposed to the expander, and we do not want\n                   --  to remove code if we are not in code generation mode,\n-                  --  since this messes up the ASIS trees.\n+                  --  since this messes up the ASIS trees or loses useful\n+                  --  information in the CodePeer tree.\n \n                   --  Note that one might react by moving the whole circuit to\n                   --  exp_ch5, but then we lose the warning in -gnatc mode.\n \n-                  if Operating_Mode = Generate_Code then\n+                  if Operating_Mode = Generate_Code\n+                    and then not CodePeer_Mode\n+                  then\n                      loop\n                         Nxt := Next (N);\n "}, {"sha": "c54097b2c4811b4d387bfbe99e374e37f2d56940", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=b8b2d9829aa9c3caa053de687701de3ebb506b4c", "patch": "@@ -823,12 +823,16 @@ package Types is\n    --    1. Modify the type and subtype declarations below appropriately,\n    --       keeping things in alphabetical order.\n \n-   --    2. Modify the corresponding definitions in types.h, including the\n+   --    2. Assign a new number to the reason. Do not renumber existing codes,\n+   --       this causes compatibility/bootstrap issues. So always add the new\n+   --       code at the end of the existing range.\n+\n+   --    3. Modify the corresponding definitions in types.h, including the\n    --       definition of last_reason_code.\n \n-   --    3. Add the name of the routines in exp_ch11.Get_RT_Exception_Name\n+   --    4. Add the name of the routines in exp_ch11.Get_RT_Exception_Name\n \n-   --    4. Add a new routine in Ada.Exceptions with the appropriate call and\n+   --    5. Add a new routine in Ada.Exceptions with the appropriate call and\n    --       static string constant. Note that there is more than one version\n    --       of a-except.adb which must be modified.\n \n@@ -861,24 +865,28 @@ package Types is\n       PE_Implicit_Return,                -- 24\n       PE_Misaligned_Address_Value,       -- 25\n       PE_Missing_Return,                 -- 26\n+      PE_Non_Transportable_Actual,       -- 31\n       PE_Overlaid_Controlled_Object,     -- 27\n       PE_Potentially_Blocking_Operation, -- 28\n+      PE_Stream_Operation_Not_Allowed,   -- 36\n       PE_Stubbed_Subprogram_Called,      -- 29\n       PE_Unchecked_Union_Restriction,    -- 30\n-      PE_Non_Transportable_Actual,       -- 31\n \n       SE_Empty_Storage_Pool,             -- 32\n       SE_Explicit_Raise,                 -- 33\n       SE_Infinite_Recursion,             -- 34\n       SE_Object_Too_Large);              -- 35\n \n+   Last_Reason_Code : constant := 36;\n+   --  Last reason code\n+\n    subtype RT_CE_Exceptions is RT_Exception_Code range\n      CE_Access_Check_Failed ..\n      CE_Tag_Check_Failed;\n \n    subtype RT_PE_Exceptions is RT_Exception_Code range\n      PE_Access_Before_Elaboration ..\n-     PE_Non_Transportable_Actual;\n+     PE_Unchecked_Union_Restriction;\n \n    subtype RT_SE_Exceptions is RT_Exception_Code range\n      SE_Empty_Storage_Pool .."}, {"sha": "949065c2c806fdcbcf6f6213dce473a9f43848c5", "filename": "gcc/ada/types.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b2d9829aa9c3caa053de687701de3ebb506b4c/gcc%2Fada%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.h?ref=b8b2d9829aa9c3caa053de687701de3ebb506b4c", "patch": "@@ -383,15 +383,16 @@ typedef Int Mechanism_Type;\n #define PE_Implicit_Return                 24\n #define PE_Misaligned_Address_Value        25\n #define PE_Missing_Return                  26\n+#define PE_Non_Transportable_Actual        31\n #define PE_Overlaid_Controlled_Object      27\n #define PE_Potentially_Blocking_Operation  28\n+#define PE_Stream_Operation_Not_Allowed    36\n #define PE_Stubbed_Subprogram_Called       29\n #define PE_Unchecked_Union_Restriction     30\n-#define PE_Non_Transportable_Actual        31\n \n #define SE_Empty_Storage_Pool              32\n #define SE_Explicit_Raise                  33\n #define SE_Infinite_Recursion              34\n #define SE_Object_Too_Large                35\n \n-#define LAST_REASON_CODE                   35\n+#define LAST_REASON_CODE                   36"}]}