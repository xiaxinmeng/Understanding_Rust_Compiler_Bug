{"sha": "aa4e0c43bc9db9ae1411e4957720b887fe5e1edf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE0ZTBjNDNiYzlkYjlhZTE0MTFlNDk1NzcyMGI4ODdmZTVlMWVkZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-06-08T11:09:17Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-06-08T11:09:17Z"}, "message": "re PR libstdc++/66417 (std::codecvt_utf16<char32_t, 0x10FFFF, std::codecvt_mode::generate_header> generates incorrect output)\n\n\tPR libstdc++/66417\n\t* src/c++11/codecvt.cc (write_utf16_code_point): Use adjust_byte_order\n\tfor single UTF-16 units.\n\t* testsuite/22_locale/codecvt/codecvt_utf16/66417.cc: New.\n\nFrom-SVN: r224217", "tree": {"sha": "fdbd72bd86a3d42fcef6252358719cc3ba090765", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdbd72bd86a3d42fcef6252358719cc3ba090765"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa4e0c43bc9db9ae1411e4957720b887fe5e1edf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4e0c43bc9db9ae1411e4957720b887fe5e1edf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa4e0c43bc9db9ae1411e4957720b887fe5e1edf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4e0c43bc9db9ae1411e4957720b887fe5e1edf/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d216b2e085ddba748c0f61c5487783281e1f5f9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d216b2e085ddba748c0f61c5487783281e1f5f9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d216b2e085ddba748c0f61c5487783281e1f5f9f"}], "stats": {"total": 85, "additions": 84, "deletions": 1}, "files": [{"sha": "2aa8f0c3aa956dc6e0a5af9693d1b13be42884d6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4e0c43bc9db9ae1411e4957720b887fe5e1edf/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4e0c43bc9db9ae1411e4957720b887fe5e1edf/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=aa4e0c43bc9db9ae1411e4957720b887fe5e1edf", "patch": "@@ -1,3 +1,10 @@\n+2015-06-08  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/66417\n+\t* src/c++11/codecvt.cc (write_utf16_code_point): Use adjust_byte_order\n+\tfor single UTF-16 units.\n+\t* testsuite/22_locale/codecvt/codecvt_utf16/66417.cc: New.\n+\n 2015-06-07  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* include/bits/stl_tree.h (_Rb_tree<>::__is_transparent<>): Move to"}, {"sha": "2a11ca3130f80e05d21ba601a0507cbaf6d0879b", "filename": "libstdc++-v3/src/c++11/codecvt.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4e0c43bc9db9ae1411e4957720b887fe5e1edf/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcodecvt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4e0c43bc9db9ae1411e4957720b887fe5e1edf/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcodecvt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcodecvt.cc?ref=aa4e0c43bc9db9ae1411e4957720b887fe5e1edf", "patch": "@@ -319,7 +319,7 @@ namespace\n       {\n \tif (to.size() > 0)\n \t  {\n-\t    *to.next = codepoint;\n+\t    *to.next = adjust_byte_order(codepoint, mode);\n \t    ++to.next;\n \t    return true;\n \t  }"}, {"sha": "f9e429176f44e2838f078b37f4b2b2a9dd9cbbbc", "filename": "libstdc++-v3/testsuite/22_locale/codecvt/codecvt_utf16/66417.cc", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4e0c43bc9db9ae1411e4957720b887fe5e1edf/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fcodecvt_utf16%2F66417.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4e0c43bc9db9ae1411e4957720b887fe5e1edf/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fcodecvt_utf16%2F66417.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fcodecvt_utf16%2F66417.cc?ref=aa4e0c43bc9db9ae1411e4957720b887fe5e1edf", "patch": "@@ -0,0 +1,76 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+\n+#include <codecvt>\n+#include <testsuite_hooks.h>\n+\n+using namespace std;\n+\n+void\n+test01()\n+{\n+  constexpr auto mode = generate_header;\n+  codecvt_utf16<char32_t, 0x10ffff, mode> cvt;\n+  mbstate_t state{};\n+  const char32_t* from = U\"ABC\";\n+  const char32_t* from_next;\n+  char to[100];\n+  char* to_next;\n+\n+  cvt.out(state, from, from + 3, from_next, to, to + 100, to_next);\n+\n+  VERIFY((unsigned char)to[0] == 0xfe);\n+  VERIFY((unsigned char)to[1] == 0xff);\n+  VERIFY(to[2] == 0x00);\n+  VERIFY(to[3] == 0x41);\n+  VERIFY(to[4] == 0x00);\n+  VERIFY(to[5] == 0x42);\n+  VERIFY(to[6] == 0x00);\n+  VERIFY(to[7] == 0x43);\n+}\n+\n+void\n+test02()\n+{\n+  constexpr auto mode = codecvt_mode(generate_header|little_endian);\n+  codecvt_utf16<char32_t, 0x10ffff, mode> cvt;\n+  mbstate_t state{};\n+  const char32_t* from = U\"ABC\";\n+  const char32_t* from_next;\n+  char to[100];\n+  char* to_next;\n+\n+  cvt.out(state, from, from + 3, from_next, to, to + 100, to_next);\n+\n+  VERIFY((unsigned char)to[0] == 0xff);\n+  VERIFY((unsigned char)to[1] == 0xfe);\n+  VERIFY(to[2] == 0x41);\n+  VERIFY(to[3] == 0x00);\n+  VERIFY(to[4] == 0x42);\n+  VERIFY(to[5] == 0x00);\n+  VERIFY(to[6] == 0x43);\n+  VERIFY(to[7] == 0x00);\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  test02();\n+}"}]}