{"sha": "19ffb35d17474bb4dd3eb78963c28d10b5362321", "node_id": "C_kwDOANBUbNoAKDE5ZmZiMzVkMTc0NzRiYjRkZDNlYjc4OTYzYzI4ZDEwYjUzNjIzMjE", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-08-03T17:55:42Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-08-03T18:40:55Z"}, "message": "Do not walk equivalence set in path_oracle::killing_def.\n\nWhen killing a def in the path ranger, there is no need to walk the set\nof existing equivalences clearing bits.  An equivalence match requires\nthat both ssa-names have to be in each others set.  As killing_def\ncreates a new empty set contianing only the current def,  it already\nensures false equivaelnces won't happen.\n\n\tPR tree-optimization/106514\n\t* value-relation.cc (path_oracle::killing_def) Do not walk the\n\t  equivalence set clearing bits.", "tree": {"sha": "cd22fffececf71669149e1540995947ddee061ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd22fffececf71669149e1540995947ddee061ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19ffb35d17474bb4dd3eb78963c28d10b5362321", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19ffb35d17474bb4dd3eb78963c28d10b5362321", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19ffb35d17474bb4dd3eb78963c28d10b5362321", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19ffb35d17474bb4dd3eb78963c28d10b5362321/comments", "author": null, "committer": null, "parents": [{"sha": "f0688c82ba8206a3d8960eb1d4821dc6a5f2a9f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0688c82ba8206a3d8960eb1d4821dc6a5f2a9f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0688c82ba8206a3d8960eb1d4821dc6a5f2a9f4"}], "stats": {"total": 11, "additions": 1, "deletions": 10}, "files": [{"sha": "3f0957ccdd64d455466f2239626815b50b33c6da", "filename": "gcc/value-relation.cc", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19ffb35d17474bb4dd3eb78963c28d10b5362321/gcc%2Fvalue-relation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19ffb35d17474bb4dd3eb78963c28d10b5362321/gcc%2Fvalue-relation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-relation.cc?ref=19ffb35d17474bb4dd3eb78963c28d10b5362321", "patch": "@@ -1400,16 +1400,7 @@ path_oracle::killing_def (tree ssa)\n   unsigned v = SSA_NAME_VERSION (ssa);\n \n   bitmap_set_bit (m_killed_defs, v);\n-\n-  // Walk the equivalency list and remove SSA from any equivalencies.\n-  if (bitmap_bit_p (m_equiv.m_names, v))\n-    {\n-      for (equiv_chain *ptr = m_equiv.m_next; ptr; ptr = ptr->m_next)\n-\tif (bitmap_bit_p (ptr->m_names, v))\n-\t  bitmap_clear_bit (ptr->m_names, v);\n-    }\n-  else\n-    bitmap_set_bit (m_equiv.m_names, v);\n+  bitmap_set_bit (m_equiv.m_names, v);\n \n   // Now add an equivalency with itself so we don't look to the root oracle.\n   bitmap b = BITMAP_ALLOC (&m_bitmaps);"}]}