{"sha": "f02a5d0e98248b0a1302553e56de7e93f1c82c76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAyYTVkMGU5ODI0OGIwYTEzMDI1NTNlNTZkZTdlOTNmMWM4MmM3Ng==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@analog.com", "date": "2005-04-12T14:26:52Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2005-04-12T14:26:52Z"}, "message": "bfin.c (bfin_library_id_string): Remove.\n\n\t* config/bfin/bfin.c (bfin_library_id_string): Remove.\n\t(bfin_library_id): New variable.\n\t(bfin_expand_prologue): Use bfin_library_id and bfin_lib_id_given\n\tinstead of bfin_library_id_string.\n\t(bfin_handle_option): New function.\n\t(override_options): Remove most code to deal with shared library IDs,\n\tjust check they aren't used without -mid-shared-library.\n\t(TARGET_HANDLE_OPTION): Define.\n\t* config/bfin/bfin.h (TARGET_OPTIONS): Delete macro.\n\t* config/bfin/bfin.opt (mshared-library-id=): New.\n\nFrom-SVN: r98023", "tree": {"sha": "dedf68a358f1570a9a0aa70d16574f9726533820", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dedf68a358f1570a9a0aa70d16574f9726533820"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f02a5d0e98248b0a1302553e56de7e93f1c82c76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f02a5d0e98248b0a1302553e56de7e93f1c82c76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f02a5d0e98248b0a1302553e56de7e93f1c82c76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f02a5d0e98248b0a1302553e56de7e93f1c82c76/comments", "author": null, "committer": null, "parents": [{"sha": "1ff7682ce15e1365c2cf726e0be93625b18b732f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ff7682ce15e1365c2cf726e0be93625b18b732f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ff7682ce15e1365c2cf726e0be93625b18b732f"}], "stats": {"total": 76, "additions": 46, "deletions": 30}, "files": [{"sha": "df41196fcb3bf7c357dfc5c0ab51972210fd7035", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f02a5d0e98248b0a1302553e56de7e93f1c82c76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f02a5d0e98248b0a1302553e56de7e93f1c82c76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f02a5d0e98248b0a1302553e56de7e93f1c82c76", "patch": "@@ -1,3 +1,16 @@\n+2005-04-12  Bernd Schmidt  <bernd.schmidt@analog.com>\n+\n+\t* config/bfin/bfin.c (bfin_library_id_string): Remove.\n+\t(bfin_library_id): New variable.\n+\t(bfin_expand_prologue): Use bfin_library_id and bfin_lib_id_given\n+\tinstead of bfin_library_id_string.\n+\t(bfin_handle_option): New function.\n+\t(override_options): Remove most code to deal with shared library IDs,\n+\tjust check they aren't used without -mid-shared-library.\n+\t(TARGET_HANDLE_OPTION): Define.\n+\t* config/bfin/bfin.h (TARGET_OPTIONS): Delete macro.\n+\t* config/bfin/bfin.opt (mshared-library-id=): New.\n+\n 2005-04-12  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* tree-vect-transform.c: Fix comment typos."}, {"sha": "c4287a1f91785b6a463f2a12fa2ab522fd1fcc48", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 29, "deletions": 16, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f02a5d0e98248b0a1302553e56de7e93f1c82c76/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f02a5d0e98248b0a1302553e56de7e93f1c82c76/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=f02a5d0e98248b0a1302553e56de7e93f1c82c76", "patch": "@@ -67,7 +67,8 @@ const char *byte_reg_names[]   =  BYTE_REGISTER_NAMES;\n \n static int arg_regs[] = FUNCTION_ARG_REGISTERS;\n \n-const char *bfin_library_id_string;\n+/* The value passed to -mshared-library-id=.  */\n+static int bfin_library_id;\n \n static void\n bfin_globalize_label (FILE *stream, const char *name)\n@@ -776,8 +777,8 @@ bfin_expand_prologue (void)\n     {\n       rtx addr;\n       \n-      if (bfin_library_id_string)\n-\taddr = plus_constant (pic_offset_table_rtx, atoi (bfin_library_id_string));\n+      if (bfin_lib_id_given)\n+\taddr = plus_constant (pic_offset_table_rtx, -4 - bfin_library_id * 4);\n       else\n \taddr = gen_rtx_PLUS (Pmode, pic_offset_table_rtx,\n \t\t\t     gen_rtx_UNSPEC (Pmode, gen_rtvec (1, const0_rtx),\n@@ -1711,6 +1712,26 @@ secondary_output_reload_class (enum reg_class class, enum machine_mode mode,\n   return secondary_input_reload_class (class, mode, x);\n }\n \f\n+/* Implement TARGET_HANDLE_OPTION.  */\n+\n+static bool\n+bfin_handle_option (size_t code, const char *arg, int value)\n+{\n+  switch (code)\n+    {\n+    case OPT_mshared_library_id_:\n+      if (value > MAX_LIBRARY_ID)\n+\terror (\"-mshared-library-id=%s is not between 0 and %d\",\n+\t       arg, MAX_LIBRARY_ID);\n+      else\n+\tbfin_library_id = value;\n+      return true;\n+\n+    default:\n+      return true;\n+    }\n+}\n+\n /* Implement the macro OVERRIDE_OPTIONS.  */\n \n void\n@@ -1720,19 +1741,8 @@ override_options (void)\n     flag_omit_frame_pointer = 1;\n \n   /* Library identification */\n-  if (bfin_library_id_string)\n-    {\n-      int id;\n-\n-      if (! TARGET_ID_SHARED_LIBRARY)\n-\terror (\"-mshared-library-id= specified without -mid-shared-library\");\n-      id = atoi (bfin_library_id_string);\n-      if (id < 0 || id > MAX_LIBRARY_ID)\n-\terror (\"-mshared-library-id=%d is not between 0 and %d\", id, MAX_LIBRARY_ID);\n-\n-      /* From now on, bfin_library_id_string will contain the library offset.  */\n-      asprintf ((char **)&bfin_library_id_string, \"%d\", (id * -4) - 4);\n-    }\n+  if (bfin_lib_id_given && ! TARGET_ID_SHARED_LIBRARY)\n+    error (\"-mshared-library-id= specified without -mid-shared-library\");\n \n   if (TARGET_ID_SHARED_LIBRARY)\n     /* ??? Provide a way to use a bigger GOT.  */\n@@ -2725,4 +2735,7 @@ bfin_output_mi_thunk (FILE *file ATTRIBUTE_UNUSED,\n #undef TARGET_VECTOR_MODE_SUPPORTED_P\n #define TARGET_VECTOR_MODE_SUPPORTED_P bfin_vector_mode_supported_p\n \n+#undef TARGET_HANDLE_OPTION\n+#define TARGET_HANDLE_OPTION bfin_handle_option\n+\n struct gcc_target targetm = TARGET_INITIALIZER;"}, {"sha": "512525afb819cc780b62b28317923bfbf5fbfa1f", "filename": "gcc/config/bfin/bfin.h", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f02a5d0e98248b0a1302553e56de7e93f1c82c76/gcc%2Fconfig%2Fbfin%2Fbfin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f02a5d0e98248b0a1302553e56de7e93f1c82c76/gcc%2Fconfig%2Fbfin%2Fbfin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.h?ref=f02a5d0e98248b0a1302553e56de7e93f1c82c76", "patch": "@@ -50,20 +50,6 @@ extern int target_flags;\n \n #define TARGET_DEFAULT MASK_CSYNC\n \n-/* This macro is similar to `TARGET_SWITCHES' but defines names of\n-   command options that have values.  Its definition is an\n-   initializer with a subgrouping for each command option.\n-\n-   Each subgrouping contains a string constant, that defines the\n-   fixed part of the option name, and the address of a variable.  The\n-   variable, type `char *', is set to the variable part of the given\n-   option if the fixed part matches.  The actual option name is made\n-   by appending `-m' to the specified name.  */\n-#define TARGET_OPTIONS\t\t\t\t\t\t\t\\\n-{ { \"shared-library-id=\",\t&bfin_library_id_string,\t\t\\\n-    \"ID of shared library to build\", 0}\t\t\t\t\t\\\n-}\n-\n /* Maximum number of library ids we permit */\n #define MAX_LIBRARY_ID 255\n "}, {"sha": "8a07bc3187bb16cb031743d4d3d1673e0fb13130", "filename": "gcc/config/bfin/bfin.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f02a5d0e98248b0a1302553e56de7e93f1c82c76/gcc%2Fconfig%2Fbfin%2Fbfin.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f02a5d0e98248b0a1302553e56de7e93f1c82c76/gcc%2Fconfig%2Fbfin%2Fbfin.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.opt?ref=f02a5d0e98248b0a1302553e56de7e93f1c82c76", "patch": "@@ -34,3 +34,7 @@ Avoid speculative loads by inserting CSYNC or equivalent\n mid-shared-library\n Target Report Mask(ID_SHARED_LIBRARY)\n Enabled ID based shared library\n+\n+mshared-library-id=\n+Target RejectNegative Joined UInteger Var(bfin_lib_id_given)\n+ID of shared library to build"}]}