{"sha": "ded7b411a896034096b8896681ee2e3329d4c946", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVkN2I0MTFhODk2MDM0MDk2Yjg4OTY2ODFlZTJlMzMyOWQ0Yzk0Ng==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2018-11-14T20:05:13Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2018-11-14T20:05:13Z"}, "message": "re PR middle-end/59658 (Document -f* flags enabled by -Og)\n\n2018-11-14  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tPR middle-end/59658\n\n\tgcc/\n\t* doc/invoke.texi (Optimize Options): Clarify that -O0 and -Og\n\talso suppress many optimizations.  Alphabetize option lists for\n\t-O1, -O2, and -Os.  Add list of options disabled with -Og, and\n\tcorrect documentation for those options to say that.\n\t* opts.c (default_options_table): Sort table by level and option\n\tname, to make it easier to correlate to the manual.\n\nFrom-SVN: r266162", "tree": {"sha": "b88d61e538c7168ee3582492c8d579e2f1625867", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b88d61e538c7168ee3582492c8d579e2f1625867"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ded7b411a896034096b8896681ee2e3329d4c946", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ded7b411a896034096b8896681ee2e3329d4c946", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ded7b411a896034096b8896681ee2e3329d4c946", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ded7b411a896034096b8896681ee2e3329d4c946/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "281d448d0cdb09728e96f3b667545766bfaed891", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/281d448d0cdb09728e96f3b667545766bfaed891", "html_url": "https://github.com/Rust-GCC/gccrs/commit/281d448d0cdb09728e96f3b667545766bfaed891"}], "stats": {"total": 280, "additions": 165, "deletions": 115}, "files": [{"sha": "36c0907c61b8e554694819f357b5fbab7ba7520c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded7b411a896034096b8896681ee2e3329d4c946/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded7b411a896034096b8896681ee2e3329d4c946/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ded7b411a896034096b8896681ee2e3329d4c946", "patch": "@@ -1,3 +1,13 @@\n+2018-11-14  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\tPR middle-end/59658\n+\t* doc/invoke.texi (Optimize Options): Clarify that -O0 and -Og\n+\talso suppress many optimizations.  Alphabetize option lists for\n+\t-O1, -O2, and -Os.  Add list of options disabled with -Og, and\n+\tcorrect documentation for those options to say that.\n+\t* opts.c (default_options_table): Sort table by level and option\n+\tname, to make it easier to correlate to the manual.\n+\n 2018-11-14  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (ix86_print_operand_address_as): Simplify"}, {"sha": "ed7ef0044938277be6dd9bf72c7e3c1fb0e30704", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 79, "deletions": 50, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded7b411a896034096b8896681ee2e3329d4c946/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded7b411a896034096b8896681ee2e3329d4c946/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ded7b411a896034096b8896681ee2e3329d4c946", "patch": "@@ -7897,9 +7897,10 @@ each of them.\n Not all optimizations are controlled directly by a flag.  Only\n optimizations that have a flag are listed in this section.\n \n-Most optimizations are only enabled if an @option{-O} level is set on\n-the command line.  Otherwise they are disabled, even if individual\n-optimization flags are specified.\n+Most optimizations are completely disabled at @option{-O0} or if an\n+@option{-O} level is not set on the command line, even if individual\n+optimization flags are specified.  Similarly, @option{-Og} suppresses\n+many optimization passes.\n \n Depending on the target and how GCC was configured, a slightly different\n set of optimizations may be enabled at each @option{-O} level than\n@@ -7919,9 +7920,14 @@ With @option{-O}, the compiler tries to reduce code size and execution\n time, without performing any optimizations that take a great deal of\n compilation time.\n \n+@c Note that in addition to the default_options_table list in opts.c,\n+@c several optimization flags default to true but control optimization\n+@c passes that are explicitly disabled at -O0.\n+\n @option{-O} turns on the following optimization flags:\n-@gccoptlist{\n--fauto-inc-dec @gol\n+\n+@c Please keep the following list alphabetized.\n+@gccoptlist{-fauto-inc-dec @gol\n -fbranch-count-reg @gol\n -fcombine-stack-adjustments @gol\n -fcompare-elim @gol\n@@ -7932,11 +7938,11 @@ compilation time.\n -fdse @gol\n -fforward-propagate @gol\n -fguess-branch-probability @gol\n--fif-conversion2 @gol\n -fif-conversion @gol\n+-fif-conversion2 @gol\n -finline-functions-called-once @gol\n--fipa-pure-const @gol\n -fipa-profile @gol\n+-fipa-pure-const @gol\n -fipa-reference @gol\n -fipa-reference-addressable @gol\n -fmerge-constants @gol\n@@ -7959,11 +7965,11 @@ compilation time.\n -ftree-forwprop @gol\n -ftree-fre @gol\n -ftree-phiprop @gol\n+-ftree-pta @gol\n -ftree-scev-cprop @gol\n -ftree-sink @gol\n -ftree-slsr @gol\n -ftree-sra @gol\n--ftree-pta @gol\n -ftree-ter @gol\n -funit-at-a-time}\n \n@@ -7976,10 +7982,12 @@ and the performance of the generated code.\n \n @option{-O2} turns on all optimization flags specified by @option{-O}.  It\n also turns on the following optimization flags:\n-@gccoptlist{-fthread-jumps @gol\n--falign-functions  -falign-jumps @gol\n--falign-loops  -falign-labels @gol\n+\n+@c Please keep the following list alphabetized!\n+@gccoptlist{-falign-functions  -falign-jumps @gol\n+-falign-labels  -falign-loops @gol\n -fcaller-saves @gol\n+-fcode-hoisting @gol\n -fcrossjumping @gol\n -fcse-follow-jumps  -fcse-skip-blocks @gol\n -fdelete-null-pointer-checks @gol\n@@ -7989,11 +7997,8 @@ also turns on the following optimization flags:\n -fhoist-adjacent-loads @gol\n -finline-small-functions @gol\n -findirect-inlining @gol\n--fipa-cp @gol\n--fipa-bit-cp @gol\n--fipa-vrp @gol\n--fipa-sra @gol\n--fipa-icf @gol\n+-fipa-bit-cp  -fipa-cp  -fipa-icf @gol\n+-fipa-ra  -fipa-sra  -fipa-vrp @gol\n -fisolate-erroneous-paths-dereference @gol\n -flra-remat @gol\n -foptimize-sibling-calls @gol\n@@ -8003,16 +8008,15 @@ also turns on the following optimization flags:\n -freorder-blocks-algorithm=stc @gol\n -freorder-blocks-and-partition -freorder-functions @gol\n -frerun-cse-after-loop  @gol\n--fsched-interblock  -fsched-spec @gol\n -fschedule-insns  -fschedule-insns2 @gol\n+-fsched-interblock  -fsched-spec @gol\n -fstore-merging @gol\n -fstrict-aliasing @gol\n+-fthread-jumps @gol\n -ftree-builtin-call-dce @gol\n--ftree-switch-conversion -ftree-tail-merge @gol\n--fcode-hoisting @gol\n -ftree-pre @gol\n--ftree-vrp @gol\n--fipa-ra}\n+-ftree-switch-conversion -ftree-tail-merge @gol\n+-ftree-vrp}\n \n Please note the warning under @option{-fgcse} about\n invoking @option{-O2} on programs that use computed gotos.\n@@ -8021,21 +8025,23 @@ invoking @option{-O2} on programs that use computed gotos.\n @opindex O3\n Optimize yet more.  @option{-O3} turns on all optimizations specified\n by @option{-O2} and also turns on the following optimization flags:\n-@gccoptlist{-finline-functions @gol\n--funswitch-loops @gol\n--fpredictive-commoning @gol\n--fgcse-after-reload @gol\n--ftree-loop-vectorize @gol\n--ftree-loop-distribution @gol\n--ftree-loop-distribute-patterns @gol\n+\n+@c Please keep the following list alphabetized!\n+@gccoptlist{-fgcse-after-reload @gol\n+-finline-functions @gol\n+-fipa-cp-clone\n -floop-interchange @gol\n -floop-unroll-and-jam @gol\n+-fpeel-loops @gol\n+-fpredictive-commoning @gol\n -fsplit-paths @gol\n--ftree-slp-vectorize @gol\n--fvect-cost-model @gol\n+-ftree-loop-distribute-patterns @gol\n+-ftree-loop-distribution @gol\n+-ftree-loop-vectorize @gol\n -ftree-partial-pre @gol\n--fpeel-loops @gol\n--fipa-cp-clone}\n+-ftree-slp-vectorize @gol\n+-funswitch-loops @gol\n+-fvect-cost-model}\n \n @item -O0\n @opindex O0\n@@ -8044,13 +8050,16 @@ results.  This is the default.\n \n @item -Os\n @opindex Os\n-Optimize for size.  @option{-Os} enables all @option{-O2} optimizations that\n-do not typically increase code size.  It also performs further\n-optimizations designed to reduce code size.\n+Optimize for size.  @option{-Os} enables all @option{-O2} optimizations \n+except those that often increase code size:\n+\n+@gccoptlist{-falign-functions  -falign-jumps @gol\n+-falign-labels  -falign-loops @gol\n+-fprefetch-loop-arrays  -freorder-blocks-algorithm=stc}\n \n-@option{-Os} disables the following optimization flags:\n-@gccoptlist{-falign-functions  -falign-jumps  -falign-loops @gol\n--falign-labels  -fprefetch-loop-arrays}\n+It also enables @option{-finline-functions}, causes the compiler to tune for\n+code size rather than execution speed, and performs further optimizations\n+designed to reduce code size.  \n \n @item -Ofast\n @opindex Ofast\n@@ -8063,11 +8072,24 @@ specified, and @option{-fno-protect-parens}.\n \n @item -Og\n @opindex Og\n-Optimize debugging experience.  @option{-Og} enables optimizations\n-that do not interfere with debugging. It should be the optimization\n+Optimize debugging experience.  @option{-Og} should be the optimization\n level of choice for the standard edit-compile-debug cycle, offering\n a reasonable level of optimization while maintaining fast compilation\n-and a good debugging experience.\n+and a good debugging experience.  It is a better choice than @option{-O0}\n+for producing debuggable code because some compiler passes\n+that collect debug information are disabled at @option{-O0}.\n+\n+Like @option{-O0}, @option{-Og} completely disables a number of \n+optimization passes so that individual options controlling them have\n+no effect.  Otherwise @option{-Og} enables all @option{-O1} \n+optimization flags except for those that may interfere with debugging:\n+\n+@gccoptlist{-fbranch-count-reg  -fdelayed-branch @gol\n+-fif-conversion  -fif-conversion2  @gol\n+-finline-functions-called-once @gol\n+-fmove-loop-invariants  -fssa-phiopt @gol\n+-ftree-bit-ccp  -ftree-pta  -ftree-sra}\n+\n @end table\n \n If you use multiple @option{-O} options, with or without level numbers,\n@@ -8194,7 +8216,8 @@ caller even if they are not marked @code{inline}.  If a call to a given\n function is integrated, then the function is not output as assembler code\n in its own right.\n \n-Enabled at levels @option{-O1}, @option{-O2}, @option{-O3} and @option{-Os}.\n+Enabled at levels @option{-O1}, @option{-O2}, @option{-O3} and @option{-Os},\n+but not @option{-Og}.\n \n @item -fearly-inlining\n @opindex fearly-inlining\n@@ -8322,7 +8345,8 @@ IA-64 and S/390.  Note that the @option{-fno-branch-count-reg} option\n doesn't remove the decrement and branch instructions from the generated\n instruction stream introduced by other optimization passes.\n \n-The default is @option{-fbranch-count-reg} at @option{-O1} and higher.\n+The default is @option{-fbranch-count-reg} at @option{-O1} and higher,\n+except for @option{-Og}.\n \n @item -fno-function-cse\n @opindex fno-function-cse\n@@ -8490,14 +8514,16 @@ includes use of conditional moves, min, max, set flags and abs instructions, and\n some tricks doable by standard arithmetics.  The use of conditional execution\n on chips where it is available is controlled by @option{-fif-conversion2}.\n \n-Enabled at levels @option{-O}, @option{-O2}, @option{-O3}, @option{-Os}.\n+Enabled at levels @option{-O}, @option{-O2}, @option{-O3}, @option{-Os}, but\n+not with @option{-Og}.\n \n @item -fif-conversion2\n @opindex fif-conversion2\n Use conditional execution (where available) to transform conditional jumps into\n branch-less equivalents.\n \n-Enabled at levels @option{-O}, @option{-O2}, @option{-O3}, @option{-Os}.\n+Enabled at levels @option{-O}, @option{-O2}, @option{-O3}, @option{-Os}, but\n+not with @option{-Og}.\n \n @item -fdeclone-ctor-dtor\n @opindex fdeclone-ctor-dtor\n@@ -9072,7 +9098,8 @@ enabled by default at @option{-O} and higher.\n Perform sparse conditional bit constant propagation on trees and propagate\n pointer alignment information.\n This pass only operates on local scalar variables and is enabled by default\n-at @option{-O} and higher.  It requires that @option{-ftree-ccp} is enabled.\n+at @option{-O1} and higher, except for @option{-Og}.\n+It requires that @option{-ftree-ccp} is enabled.\n \n @item -ftree-ccp\n @opindex ftree-ccp\n@@ -9090,7 +9117,8 @@ enabled by default at @option{-O} and higher.\n @item -fssa-phiopt\n @opindex fssa-phiopt\n Perform pattern matching on SSA PHI nodes to optimize conditional\n-code.  This pass is enabled by default at @option{-O} and higher.\n+code.  This pass is enabled by default at @option{-O1} and higher,\n+except for @option{-Og}.\n \n @item -ftree-switch-conversion\n @opindex ftree-switch-conversion\n@@ -9312,13 +9340,14 @@ that have support for @option{-pthread}.\n @item -ftree-pta\n @opindex ftree-pta\n Perform function-local points-to analysis on trees.  This flag is\n-enabled by default at @option{-O} and higher.\n+enabled by default at @option{-O1} and higher, except for @option{-Og}.\n \n @item -ftree-sra\n @opindex ftree-sra\n Perform scalar replacement of aggregates.  This pass replaces structure\n references with scalars to prevent committing structures to memory too\n-early.  This flag is enabled by default at @option{-O} and higher.\n+early.  This flag is enabled by default at @option{-O1} and higher,\n+except for @option{-Og}.\n \n @item -fstore-merging\n @opindex fstore-merging\n@@ -10475,7 +10504,7 @@ Enabled with @option{-O3} and/or @option{-fprofile-use}.\n @item -fmove-loop-invariants\n @opindex fmove-loop-invariants\n Enables the loop invariant motion pass in the RTL loop optimizer.  Enabled\n-at level @option{-O1}\n+at level @option{-O1} and higher, except for @option{-Og}.\n \n @item -fsplit-loops\n @opindex fsplit-loops"}, {"sha": "e513296c34b931e1a29e94a07bd58ef5acfb4931", "filename": "gcc/opts.c", "status": "modified", "additions": 76, "deletions": 65, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded7b411a896034096b8896681ee2e3329d4c946/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded7b411a896034096b8896681ee2e3329d4c946/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=ded7b411a896034096b8896681ee2e3329d4c946", "patch": "@@ -435,116 +435,127 @@ maybe_default_options (struct gcc_options *opts,\n \t\t\t  lang_mask, handlers, loc, dc);\n }\n \n-/* Table of options enabled by default at different levels.  */\n+/* Table of options enabled by default at different levels.\n+   Please keep this list sorted by level and alphabetized within\n+   each level; this makes it easier to keep the documentation\n+   in sync.  */\n \n static const struct default_options default_options_table[] =\n   {\n-    /* -O1 optimizations.  */\n-    { OPT_LEVELS_1_PLUS, OPT_fdefer_pop, NULL, 1 },\n-#if DELAY_SLOTS\n-    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fdelayed_branch, NULL, 1 },\n-#endif\n-    { OPT_LEVELS_1_PLUS, OPT_fguess_branch_probability, NULL, 1 },\n+    /* -O1 and -Og optimizations.  */\n+    { OPT_LEVELS_1_PLUS, OPT_fcombine_stack_adjustments, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS, OPT_fcompare_elim, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_fcprop_registers, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS, OPT_fdefer_pop, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_fforward_propagate, NULL, 1 },\n-    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fif_conversion, NULL, 1 },\n-    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fif_conversion2, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS, OPT_fguess_branch_probability, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS, OPT_fipa_profile, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_fipa_pure_const, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_fipa_reference, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_fipa_reference_addressable, NULL, 1 },\n-    { OPT_LEVELS_1_PLUS, OPT_fipa_profile, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_fmerge_constants, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS, OPT_fomit_frame_pointer, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_freorder_blocks, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_fshrink_wrap, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_fsplit_wide_types, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS, OPT_ftree_builtin_call_dce, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_ftree_ccp, NULL, 1 },\n-    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_ftree_bit_ccp, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS, OPT_ftree_ch, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_ftree_coalesce_vars, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS, OPT_ftree_copy_prop, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_ftree_dce, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_ftree_dominator_opts, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_ftree_dse, NULL, 1 },\n-    { OPT_LEVELS_1_PLUS, OPT_ftree_ter, NULL, 1 },\n-    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_ftree_sra, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_ftree_fre, NULL, 1 },\n-    { OPT_LEVELS_1_PLUS, OPT_ftree_copy_prop, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_ftree_sink, NULL, 1 },\n-    { OPT_LEVELS_1_PLUS, OPT_ftree_ch, NULL, 1 },\n-    { OPT_LEVELS_1_PLUS, OPT_fcombine_stack_adjustments, NULL, 1 },\n-    { OPT_LEVELS_1_PLUS, OPT_fcompare_elim, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_ftree_slsr, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS, OPT_ftree_ter, NULL, 1 },\n+\n+    /* -O1 (and not -Og) optimizations.  */\n     { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fbranch_count_reg, NULL, 1 },\n+#if DELAY_SLOTS\n+    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fdelayed_branch, NULL, 1 },\n+#endif\n+    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fif_conversion, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fif_conversion2, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_finline_functions_called_once, NULL, 1 },\n     { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fmove_loop_invariants, NULL, 1 },\n-    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_ftree_pta, NULL, 1 },\n     { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fssa_phiopt, NULL, 1 },\n-    { OPT_LEVELS_1_PLUS, OPT_ftree_builtin_call_dce, NULL, 1 },\n-    { OPT_LEVELS_1_PLUS, OPT_fomit_frame_pointer, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_ftree_bit_ccp, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_ftree_sra, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_ftree_pta, NULL, 1 },\n \n-    /* -O2 optimizations.  */\n-    { OPT_LEVELS_2_PLUS, OPT_finline_small_functions, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_findirect_inlining, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_fpartial_inlining, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_fthread_jumps, NULL, 1 },\n+    /* -O2 and -Os optimizations.  */\n+    { OPT_LEVELS_2_PLUS, OPT_fcaller_saves, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_fcode_hoisting, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_fcrossjumping, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_foptimize_sibling_calls, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_fcse_follow_jumps, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_fgcse, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_fdevirtualize, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_fdevirtualize_speculatively, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_fexpensive_optimizations, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_frerun_cse_after_loop, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_fcaller_saves, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_fgcse, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_fhoist_adjacent_loads, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_findirect_inlining, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_finline_small_functions, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_fipa_bit_cp, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_fipa_cp, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_fipa_icf, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_fipa_ra, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_fipa_sra, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_fipa_vrp, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_fisolate_erroneous_paths_dereference, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_flra_remat, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_foptimize_sibling_calls, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_fpartial_inlining, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_fpeephole2, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_freorder_functions, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_frerun_cse_after_loop, NULL, 1 },\n #ifdef INSN_SCHEDULING\n-  /* Only run the pre-regalloc scheduling pass if optimizing for speed.  */\n-    { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_fschedule_insns, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_fschedule_insns2, NULL, 1 },\n #endif\n     { OPT_LEVELS_2_PLUS, OPT_fstrict_aliasing, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_freorder_blocks_algorithm_, NULL,\n-      REORDER_BLOCKS_ALGORITHM_STC },\n-    { OPT_LEVELS_2_PLUS, OPT_freorder_functions, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_ftree_vrp, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_fcode_hoisting, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_fstore_merging, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_fthread_jumps, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_ftree_pre, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_ftree_switch_conversion, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_fipa_cp, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_fipa_bit_cp, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_fipa_vrp, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_fdevirtualize, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_fdevirtualize_speculatively, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_fipa_sra, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_falign_loops, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_falign_jumps, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_falign_labels, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_falign_functions, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_ftree_tail_merge, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_ftree_vrp, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_fvect_cost_model_, NULL, VECT_COST_MODEL_CHEAP },\n+\n+    /* -O2 and -Os optimizations.  */\n+    { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_falign_functions, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_falign_jumps, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_falign_labels, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_falign_loops, NULL, 1 },\n     { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_foptimize_strlen, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_fhoist_adjacent_loads, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_fipa_icf, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_fisolate_erroneous_paths_dereference, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_fipa_ra, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_flra_remat, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_fstore_merging, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_freorder_blocks_algorithm_, NULL,\n+      REORDER_BLOCKS_ALGORITHM_STC },\n+#ifdef INSN_SCHEDULING\n+  /* Only run the pre-regalloc scheduling pass if optimizing for speed.  */\n+    { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_fschedule_insns, NULL, 1 },\n+#endif\n \n-    /* -O3 optimizations.  */\n-    { OPT_LEVELS_3_PLUS, OPT_ftree_loop_distribute_patterns, NULL, 1 },\n-    { OPT_LEVELS_3_PLUS, OPT_ftree_loop_distribution, NULL, 1 },\n-    { OPT_LEVELS_3_PLUS, OPT_floop_interchange, NULL, 1 },\n-    { OPT_LEVELS_3_PLUS, OPT_fpredictive_commoning, NULL, 1 },\n-    { OPT_LEVELS_3_PLUS, OPT_fsplit_paths, NULL, 1 },\n+    /* -O3 and -Os optimizations.  */\n     /* Inlining of functions reducing size is a good idea with -Os\n        regardless of them being declared inline.  */\n     { OPT_LEVELS_3_PLUS_AND_SIZE, OPT_finline_functions, NULL, 1 },\n-    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_finline_functions_called_once, NULL, 1 },\n-    { OPT_LEVELS_3_PLUS, OPT_fsplit_loops, NULL, 1 },\n-    { OPT_LEVELS_3_PLUS, OPT_funswitch_loops, NULL, 1 },\n-    { OPT_LEVELS_3_PLUS, OPT_floop_unroll_and_jam, NULL, 1 },\n+\n+    /* -O3 optimizations.  */\n     { OPT_LEVELS_3_PLUS, OPT_fgcse_after_reload, NULL, 1 },\n+    { OPT_LEVELS_3_PLUS, OPT_fipa_cp_clone, NULL, 1 },\n+    { OPT_LEVELS_3_PLUS, OPT_floop_interchange, NULL, 1 },\n+    { OPT_LEVELS_3_PLUS, OPT_floop_unroll_and_jam, NULL, 1 },\n+    { OPT_LEVELS_3_PLUS, OPT_fpeel_loops, NULL, 1 },\n+    { OPT_LEVELS_3_PLUS, OPT_fpredictive_commoning, NULL, 1 },\n+    { OPT_LEVELS_3_PLUS, OPT_fsplit_loops, NULL, 1 },\n+    { OPT_LEVELS_3_PLUS, OPT_fsplit_paths, NULL, 1 },\n+    { OPT_LEVELS_3_PLUS, OPT_ftree_loop_distribute_patterns, NULL, 1 },\n+    { OPT_LEVELS_3_PLUS, OPT_ftree_loop_distribution, NULL, 1 },\n     { OPT_LEVELS_3_PLUS, OPT_ftree_loop_vectorize, NULL, 1 },\n+    { OPT_LEVELS_3_PLUS, OPT_ftree_partial_pre, NULL, 1 },\n     { OPT_LEVELS_3_PLUS, OPT_ftree_slp_vectorize, NULL, 1 },\n+    { OPT_LEVELS_3_PLUS, OPT_funswitch_loops, NULL, 1 },\n     { OPT_LEVELS_3_PLUS, OPT_fvect_cost_model_, NULL, VECT_COST_MODEL_DYNAMIC },\n-    { OPT_LEVELS_3_PLUS, OPT_fipa_cp_clone, NULL, 1 },\n-    { OPT_LEVELS_3_PLUS, OPT_ftree_partial_pre, NULL, 1 },\n-    { OPT_LEVELS_3_PLUS, OPT_fpeel_loops, NULL, 1 },\n \n     /* -Ofast adds optimizations to -O3.  */\n     { OPT_LEVELS_FAST, OPT_ffast_math, NULL, 1 },"}]}