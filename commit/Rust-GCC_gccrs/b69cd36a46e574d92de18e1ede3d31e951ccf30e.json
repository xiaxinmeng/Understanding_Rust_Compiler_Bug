{"sha": "b69cd36a46e574d92de18e1ede3d31e951ccf30e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY5Y2QzNmE0NmU1NzRkOTJkZTE4ZTFlZGUzZDMxZTk1MWNjZjMwZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-12T13:41:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-12T13:41:03Z"}, "message": "[multiple changes]\n\n2013-04-12  Robert Dewar  <dewar@adacore.com>\n\n\t* namet.adb, namet.ads: Minor addition (7 arg version of Nam_In).\n\t* exp_prag.adb, sem_ch3.adb, sem_intr.adb, sem_type.adb, exp_util.adb,\n\tsem_aux.adb, exp_ch9.adb, sem_ch7.adb, sem_ch10.adb, sem_prag.adb,\n\tpar-ch2.adb, tbuild.adb, rtsfind.adb, freeze.adb, sem_util.adb,\n\tsem_res.adb, sem_attr.adb, exp_ch2.adb, prj-makr.adb, sem_elab.adb,\n\texp_ch4.adb, sem_ch4.adb, sem_mech.adb, sem_ch6.adb, par-prag.adb,\n\tprj-nmsc.adb, exp_disp.adb, sem_ch8.adb, sem_warn.adb, par-util.adb,\n\tsem_eval.adb, exp_intr.adb, sem_ch13.adb, exp_cg.adb, lib-xref.adb,\n\tsem_disp.adb, exp_ch3.adb: Minor code reorganization (use Nam_In).\n\n2013-04-12  Doug Rupp  <rupp@adacore.com>\n\n\t* init.c: Don't clobber condition code on VMS.\n\nFrom-SVN: r197917", "tree": {"sha": "983081c2f329d06316f9687cf9737e4c99522cc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/983081c2f329d06316f9687cf9737e4c99522cc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b69cd36a46e574d92de18e1ede3d31e951ccf30e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b69cd36a46e574d92de18e1ede3d31e951ccf30e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b69cd36a46e574d92de18e1ede3d31e951ccf30e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b69cd36a46e574d92de18e1ede3d31e951ccf30e/comments", "author": null, "committer": null, "parents": [{"sha": "7893514cf6a62a34a48f61ddd4b03bdd47b1b4be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7893514cf6a62a34a48f61ddd4b03bdd47b1b4be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7893514cf6a62a34a48f61ddd4b03bdd47b1b4be"}], "stats": {"total": 708, "additions": 302, "deletions": 406}, "files": [{"sha": "6bd9853aafd640819fd3684019e40149160928a0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -1,3 +1,19 @@\n+2013-04-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* namet.adb, namet.ads: Minor addition (7 arg version of Nam_In).\n+\t* exp_prag.adb, sem_ch3.adb, sem_intr.adb, sem_type.adb, exp_util.adb,\n+\tsem_aux.adb, exp_ch9.adb, sem_ch7.adb, sem_ch10.adb, sem_prag.adb,\n+\tpar-ch2.adb, tbuild.adb, rtsfind.adb, freeze.adb, sem_util.adb,\n+\tsem_res.adb, sem_attr.adb, exp_ch2.adb, prj-makr.adb, sem_elab.adb,\n+\texp_ch4.adb, sem_ch4.adb, sem_mech.adb, sem_ch6.adb, par-prag.adb,\n+\tprj-nmsc.adb, exp_disp.adb, sem_ch8.adb, sem_warn.adb, par-util.adb,\n+\tsem_eval.adb, exp_intr.adb, sem_ch13.adb, exp_cg.adb, lib-xref.adb,\n+\tsem_disp.adb, exp_ch3.adb: Minor code reorganization (use Nam_In).\n+\n+2013-04-12  Doug Rupp  <rupp@adacore.com>\n+\n+\t* init.c: Don't clobber condition code on VMS.\n+\n 2013-04-12  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_aggr.adb: Minor reformatting."}, {"sha": "d8a7022e504443e4745b16cfb9a29a556a7c5975", "filename": "gcc/ada/exp_cg.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fexp_cg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fexp_cg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_cg.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2010-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2010-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -261,12 +261,10 @@ package body Exp_CG is\n             return True;\n \n          elsif not Has_Fully_Qualified_Name (E) then\n-            if        Chars (E) = Name_uSize\n-              or else Chars (E) = Name_uAlignment\n+            if Nam_In (Chars (E), Name_uSize, Name_uAlignment, Name_uAssign)\n               or else\n                 (Chars (E) = Name_Op_Eq\n-                   and then Etype (First_Formal (E)) = Etype (Last_Formal (E)))\n-              or else Chars (E) = Name_uAssign\n+                  and then Etype (First_Formal (E)) = Etype (Last_Formal (E)))\n               or else Is_Predefined_Interface_Primitive (E)\n             then\n                return True;"}, {"sha": "af35113b7b95c8319b15cdd48de73b53b98617e2", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -162,12 +162,11 @@ package body Exp_Ch2 is\n          --  lvalue references in the arguments.\n \n          and then not (Nkind (Parent (N)) = N_Attribute_Reference\n-                         and then\n-                           (Attribute_Name (Parent (N)) = Name_Asm_Input\n-                              or else\n-                            Attribute_Name (Parent (N)) = Name_Asm_Output\n-                              or else\n-                            Prefix (Parent (N)) = N))\n+                        and then\n+                          (Nam_In (Attribute_Name (Parent (N)),\n+                                   Name_Asm_Input,\n+                                   Name_Asm_Output)\n+                            or else Prefix (Parent (N)) = N))\n \n       then\n          --  Case of Current_Value is a compile time known value"}, {"sha": "a0b08ed937c5f9a18ae7901d09d5cab5cd4c974a", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -1829,9 +1829,8 @@ package body Exp_Ch3 is\n          --  traversing the expression. ???\n \n          if Kind = N_Attribute_Reference\n-           and then (Attribute_Name (N) = Name_Unchecked_Access\n-                       or else\n-                     Attribute_Name (N) = Name_Unrestricted_Access)\n+           and then Nam_In (Attribute_Name (N), Name_Unchecked_Access,\n+                                                Name_Unrestricted_Access)\n            and then Is_Entity_Name (Prefix (N))\n            and then Is_Type (Entity (Prefix (N)))\n            and then Entity (Prefix (N)) = Rec_Type\n@@ -2833,9 +2832,9 @@ package body Exp_Ch3 is\n \n                elsif Ekind (Scope (Id)) = E_Record_Type\n                  and then Present (Corresponding_Concurrent_Type (Scope (Id)))\n-                 and then (Chars (Id) = Name_uCPU                or else\n-                           Chars (Id) = Name_uDispatching_Domain or else\n-                           Chars (Id) = Name_uPriority)\n+                 and then Nam_In (Chars (Id), Name_uCPU,\n+                                              Name_uDispatching_Domain,\n+                                              Name_uPriority)\n                then\n                   declare\n                      Exp   : Node_Id;\n@@ -4182,7 +4181,7 @@ package body Exp_Ch3 is\n       Eq_Op := Empty;\n       while Present (Prim) loop\n          if Chars (Node (Prim)) = Name_Op_Eq\n-              and then Comes_From_Source (Node (Prim))\n+           and then Comes_From_Source (Node (Prim))\n \n          --  Don't we also need to check formal types and return type as in\n          --  User_Defined_Eq above???"}, {"sha": "31c689e232b7f148c15332e39ceada176bfb86d8", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -6485,11 +6485,9 @@ package body Exp_Ch4 is\n                return;\n \n             elsif Nkind (Parnt) = N_Attribute_Reference\n-              and then (Attribute_Name (Parnt) = Name_Address\n-                          or else\n-                        Attribute_Name (Parnt) = Name_Bit\n-                          or else\n-                        Attribute_Name (Parnt) = Name_Size)\n+              and then Nam_In (Attribute_Name (Parnt), Name_Address,\n+                                                       Name_Bit,\n+                                                       Name_Size)\n               and then Prefix (Parnt) = Child\n             then\n                return;"}, {"sha": "69eaafff1ede4ca99423fc92ea9ee616a8c35506", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -1933,9 +1933,8 @@ package body Exp_Ch9 is\n          --  Transfer ppc pragmas to the declarations of the wrapper\n \n          while Present (P) loop\n-            if Pragma_Name (P) = Name_Precondition\n-                 or else\n-               Pragma_Name (P) = Name_Postcondition\n+            if Nam_In (Pragma_Name (P), Name_Precondition,\n+                                        Name_Postcondition)\n             then\n                Append (Relocate_Node (P), Decls);\n                Set_Analyzed (Last (Decls), False);\n@@ -14087,11 +14086,10 @@ package body Exp_Ch9 is\n         and then (Nkind_In (Stmt, N_Null_Statement, N_Label)\n                     or else\n                       (Nkind (Stmt) = N_Pragma\n-                         and then (Pragma_Name (Stmt) = Name_Unreferenced\n-                                     or else\n-                                   Pragma_Name (Stmt) = Name_Unmodified\n-                                     or else\n-                                   Pragma_Name (Stmt) = Name_Warnings)))\n+                        and then\n+                          Nam_In (Pragma_Name (Stmt), Name_Unreferenced,\n+                                                      Name_Unmodified,\n+                                                      Name_Warnings)))\n       loop\n          Next (Stmt);\n       end loop;"}, {"sha": "7490e9df7bf16c4187dc136769490a4216d3de8e", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -2106,11 +2106,10 @@ package body Exp_Disp is\n            TSS_Name_Type\n              (Name_Buffer (Name_Len - TSS_Name'Length + 1 .. Name_Len));\n \n-         if        Chars (E) = Name_uSize\n+         if Nam_In (Chars (E), Name_uSize, Name_uAssign)\n            or else\n              (Chars (E) = Name_Op_Eq\n-                and then Etype (First_Formal (E)) = Etype (Last_Formal (E)))\n-           or else Chars (E) = Name_uAssign\n+               and then Etype (First_Formal (E)) = Etype (Last_Formal (E)))\n            or else TSS_Name  = TSS_Deep_Adjust\n            or else TSS_Name  = TSS_Deep_Finalize\n            or else Is_Predefined_Interface_Primitive (E)"}, {"sha": "7302f0770122a3e1be5e1afcc34ae9c4ae015820", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -518,11 +518,9 @@ package body Exp_Intr is\n       elsif Nam = Name_Generic_Dispatching_Constructor then\n          Expand_Dispatching_Constructor_Call (N);\n \n-      elsif Nam = Name_Import_Address\n-              or else\n-            Nam = Name_Import_Largest_Value\n-              or else\n-            Nam = Name_Import_Value\n+      elsif Nam_In (Nam, Name_Import_Address,\n+                         Name_Import_Largest_Value,\n+                         Name_Import_Value)\n       then\n          Expand_Import_Call (N);\n \n@@ -556,10 +554,10 @@ package body Exp_Intr is\n       elsif Nam = Name_To_Pointer then\n          Expand_To_Pointer (N);\n \n-      elsif Nam = Name_File\n-        or else Nam = Name_Line\n-        or else Nam = Name_Source_Location\n-        or else Nam = Name_Enclosing_Entity\n+      elsif Nam_In (Nam, Name_File,\n+                         Name_Line,\n+                         Name_Source_Location,\n+                         Name_Enclosing_Entity)\n       then\n          Expand_Source_Info (N, Nam);\n "}, {"sha": "ae59ae1d35cae2e3ab16923bb14c78dbf06fd756", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -392,10 +392,7 @@ package body Exp_Prag is\n                --  that the failure is not at the point of occurrence of the\n                --  pragma, unlike the other Check cases.\n \n-               elsif Nam = Name_Precondition\n-                       or else\n-                     Nam = Name_Postcondition\n-               then\n+               elsif Nam_In (Nam, Name_Precondition, Name_Postcondition) then\n                   Get_Name_String (Nam);\n                   Insert_Str_In_Name_Buffer (\"failed \", 1);\n                   Add_Str_To_Name_Buffer (\" from \");"}, {"sha": "38114c1f40866759e8b37eff9d14b1482ee06955", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -5189,11 +5189,9 @@ package body Exp_Util is\n       --  True if access attribute\n \n       elsif Nkind (N) = N_Attribute_Reference\n-        and then (Attribute_Name (N) = Name_Access\n-                    or else\n-                  Attribute_Name (N) = Name_Unchecked_Access\n-                    or else\n-                  Attribute_Name (N) = Name_Unrestricted_Access)\n+        and then Nam_In (Attribute_Name (N), Name_Access,\n+                                             Name_Unchecked_Access,\n+                                             Name_Unrestricted_Access)\n       then\n          return True;\n "}, {"sha": "87bc2c0b0c16359a27c156a2c26c0d4642be6bc0", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -249,12 +249,13 @@ package body Freeze is\n         --  has an interface name, or if it is one of the shift/rotate\n         --  operations known to the compiler.\n \n-        and then (Present (Interface_Name (Renamed_Subp))\n-                   or else Chars (Renamed_Subp) = Name_Rotate_Left\n-                   or else Chars (Renamed_Subp) = Name_Rotate_Right\n-                   or else Chars (Renamed_Subp) = Name_Shift_Left\n-                   or else Chars (Renamed_Subp) = Name_Shift_Right\n-                   or else Chars (Renamed_Subp) = Name_Shift_Right_Arithmetic)\n+        and then\n+          (Present (Interface_Name (Renamed_Subp))\n+            or else Nam_In (Chars (Renamed_Subp), Name_Rotate_Left,\n+                                                  Name_Rotate_Right,\n+                                                  Name_Shift_Left,\n+                                                  Name_Shift_Right,\n+                                                  Name_Shift_Right_Arithmetic))\n       then\n          Set_Interface_Name (Ent, Interface_Name (Renamed_Subp));\n \n@@ -1834,9 +1835,8 @@ package body Freeze is\n          begin\n             case Nkind (N) is\n                when N_Attribute_Reference =>\n-                  if (Attribute_Name (N) = Name_Access\n-                        or else\n-                      Attribute_Name (N) = Name_Unchecked_Access)\n+                  if Nam_In (Attribute_Name (N), Name_Access,\n+                                                 Name_Unchecked_Access)\n                     and then Is_Entity_Name (Prefix (N))\n                     and then Is_Type (Entity (Prefix (N)))\n                     and then Entity (Prefix (N)) = E\n@@ -4550,9 +4550,9 @@ package body Freeze is\n \n                   begin\n                      pragma Assert\n-                       (Op_Name = Name_Allocate\n-                         or else Op_Name = Name_Deallocate\n-                         or else Op_Name = Name_Storage_Size);\n+                       (Nam_In (Op_Name, Name_Allocate,\n+                                         Name_Deallocate,\n+                                         Name_Storage_Size));\n \n                      Error_Msg_Name_1 := Op_Name;\n \n@@ -4601,7 +4601,8 @@ package body Freeze is\n                            if Op_Name = Name_Allocate then\n                               Validate_Simple_Pool_Op_Formal\n                                 (Op, Formal, E_Out_Parameter,\n-                                 Address_Type, \"Storage_Address\", Is_OK);\n+                                  Address_Type, \"Storage_Address\", Is_OK);\n+\n                            elsif Op_Name = Name_Deallocate then\n                               Validate_Simple_Pool_Op_Formal\n                                 (Op, Formal, E_In_Parameter,"}, {"sha": "d5057c8ea3d0824093e03e334a0c5e224f9d1aba", "filename": "gcc/ada/init.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -906,6 +906,10 @@ extern Exception_Code Base_Code_In (Exception_Code);\n /* DEC Ada exceptions are not defined in a header file, so they\n    must be declared.  */\n \n+#define FAC_MASK  \t\t0x0fff0000\n+#define MSG_MASK  \t\t0x0000fff8\n+#define DECADA_M_FACILITY\t0x00310000\n+\n #define ADA$_ALREADY_OPEN\t0x0031a594\n #define ADA$_CONSTRAINT_ERRO\t0x00318324\n #define ADA$_DATA_ERROR\t\t0x003192c4\n@@ -1060,7 +1064,7 @@ __gnat_default_resignal_p (int code)\n   int i, iexcept;\n \n   for (i = 0; facility_resignal_table [i]; i++)\n-    if ((code & 0xfff0000) == facility_resignal_table [i])\n+    if ((code & FAC_MASK) == facility_resignal_table [i])\n       return 1;\n \n   for (i = 0, iexcept = 0;\n@@ -1231,7 +1235,14 @@ __gnat_handle_vms_condition (int *sigargs, void *mechargs)\n   message[0] = 0;\n   /* Subtract PC & PSL fields as per ABI for SYS$PUTMSG.  */\n   sigargs[0] -= 2;\n-  SYS$PUTMSG (sigargs, copy_msg, &gnat_facility, message);\n+\n+  /* If it was a DEC Ada specific condtiion, make it GNAT otherwise\n+     keep the old facility.  */\n+  if (sigargs [1] & FAC_MASK == DECADA_M_FACILITY)\n+    SYS$PUTMSG (sigargs, copy_msg, &gnat_facility, message);\n+  else\n+    SYS$PUTMSG (sigargs, copy_msg, 0, message);\n+\n   /* Add back PC & PSL fields as per ABI for SYS$PUTMSG.  */\n   sigargs[0] += 2;\n   msg = message;"}, {"sha": "ba9221b2bd4cbb27548c509958f3a474a4efb604", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -516,11 +516,9 @@ package body Lib.Xref is\n                P := Parent (P);\n \n                if Nkind (P) = N_Pragma then\n-                  if Pragma_Name (P) = Name_Warnings\n-                       or else\n-                     Pragma_Name (P) = Name_Unmodified\n-                       or else\n-                     Pragma_Name (P) = Name_Unreferenced\n+                  if Nam_In (Pragma_Name (P), Name_Warnings,\n+                                              Name_Unmodified,\n+                                              Name_Unreferenced)\n                   then\n                      return False;\n                   end if;"}, {"sha": "1cebb464b8e28d65673773d8a6b50ffbcebd3f7a", "filename": "gcc/ada/namet.adb", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fnamet.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fnamet.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -1113,6 +1113,26 @@ package body Namet is\n              T = V6;\n    end Nam_In;\n \n+   function Nam_In\n+     (T  : Name_Id;\n+      V1 : Name_Id;\n+      V2 : Name_Id;\n+      V3 : Name_Id;\n+      V4 : Name_Id;\n+      V5 : Name_Id;\n+      V6 : Name_Id;\n+      V7 : Name_Id) return Boolean\n+   is\n+   begin\n+      return T = V1 or else\n+             T = V2 or else\n+             T = V3 or else\n+             T = V4 or else\n+             T = V5 or else\n+             T = V6 or else\n+             T = V7;\n+   end Nam_In;\n+\n    ------------------\n    -- Reinitialize --\n    ------------------"}, {"sha": "dcce9ea91c9b1331ad9756755f69bde69047581e", "filename": "gcc/ada/namet.ads", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fnamet.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fnamet.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.ads?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -211,6 +211,16 @@ package Namet is\n       V5 : Name_Id;\n       V6 : Name_Id) return Boolean;\n \n+   function Nam_In\n+     (T  : Name_Id;\n+      V1 : Name_Id;\n+      V2 : Name_Id;\n+      V3 : Name_Id;\n+      V4 : Name_Id;\n+      V5 : Name_Id;\n+      V6 : Name_Id;\n+      V7 : Name_Id) return Boolean;\n+\n    pragma Inline (Nam_In);\n    --  Inline all above functions\n "}, {"sha": "e8d6a9cd2276b5aa09bf48dfb161bc7a24eda96d", "filename": "gcc/ada/par-ch2.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fpar-ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fpar-ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch2.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -433,9 +433,7 @@ package body Ch2 is\n          P := P_Pragma;\n \n          if Nkind (P) /= N_Error\n-          and then (Pragma_Name (P) = Name_Assert\n-                      or else\n-                    Pragma_Name (P) = Name_Debug)\n+           and then Nam_In (Pragma_Name (P), Name_Assert, Name_Debug)\n          then\n             Error_Msg_Name_1 := Pragma_Name (P);\n             Error_Msg_N"}, {"sha": "214a150f82bc2bce361f65096dc5321889d577f6", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -155,9 +155,7 @@ function Prag (Pragma_Node : Node_Id; Semi : Source_Ptr) return Node_Id is\n \n    begin\n       if Nkind (Expression (Arg)) /= N_Identifier\n-        or else (Chars (Argx) /= Name_On\n-                   and then\n-                 Chars (Argx) /= Name_Off)\n+        or else not Nam_In (Chars (Argx), Name_On, Name_Off)\n       then\n          Error_Msg_Name_2 := Name_On;\n          Error_Msg_Name_3 := Name_Off;"}, {"sha": "f2ac335e08caacb62161ba87f36173b367189fe6", "filename": "gcc/ada/par-util.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fpar-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fpar-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-util.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -181,8 +181,7 @@ package body Util is\n       if Ada_Version = Ada_95\n         and then Warn_On_Ada_2005_Compatibility\n       then\n-         if Token_Name = Name_Overriding\n-           or else Token_Name = Name_Synchronized\n+         if Nam_In (Token_Name, Name_Overriding, Name_Synchronized)\n            or else (Token_Name = Name_Interface\n                      and then Prev_Token /= Tok_Pragma)\n          then"}, {"sha": "de55a74802c1dcadeeee841b99e797727c42538f", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -954,10 +954,10 @@ package body Prj.Makr is\n                      then\n                         Name := Prj.Tree.Name_Of (Current_Node, Tree);\n \n-                        if Name = Name_Source_Files     or else\n-                           Name = Name_Source_List_File or else\n-                           Name = Name_Source_Dirs      or else\n-                           Name = Name_Naming\n+                        if Nam_In (Name, Name_Source_Files,\n+                                         Name_Source_List_File,\n+                                         Name_Source_Dirs,\n+                                         Name_Naming)\n                         then\n                            Comments :=\n                              Tree.Project_Nodes.Table (Current_Node).Comments;"}, {"sha": "758cd52928019b4c27568f12ff1668196ee832bf", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2000-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -5022,9 +5022,8 @@ package body Prj.Nmsc is\n       function Is_Reserved (Name : Name_Id) return Boolean is\n       begin\n          if Get_Name_Table_Byte (Name) /= 0\n-           and then Name /= Name_Project\n-           and then Name /= Name_Extends\n-           and then Name /= Name_External\n+           and then\n+             not Nam_In (Name, Name_Project, Name_Extends, Name_External)\n            and then Name not in Ada_2005_Reserved_Words\n          then\n             Unit := No_Name;\n@@ -7729,7 +7728,7 @@ package body Prj.Nmsc is\n \n                if Language.First_Source = No_Source\n                  and then (Data.Flags.Require_Sources_Other_Lang\n-                           or else Language.Name = Name_Ada)\n+                            or else Language.Name = Name_Ada)\n                then\n                   Iter := For_Each_Source (In_Tree => Data.Tree,\n                                            Project => Project.Project);"}, {"sha": "382d2d1b015f2accd638146d395d3e3cc1a5030a", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -537,15 +537,11 @@ package body Rtsfind is\n       return\n         Nkind (Prf) = N_Identifier\n           and then\n-           (Chars (Prf) = Name_Text_IO\n-              or else\n-            Chars (Prf) = Name_Wide_Text_IO\n-              or else\n-            Chars (Prf) = Name_Wide_Wide_Text_IO)\n-          and then\n-        Nkind (Sel) = N_Identifier\n-          and then\n-        Chars (Sel) in Text_IO_Package_Name;\n+            Nam_In (Chars (Prf), Name_Text_IO,\n+                                 Name_Wide_Text_IO,\n+                                 Name_Wide_Wide_Text_IO)\n+          and then Nkind (Sel) = N_Identifier\n+          and then Chars (Sel) in Text_IO_Package_Name;\n    end Is_Text_IO_Kludge_Unit;\n \n    ---------------"}, {"sha": "42615c1c0914854f70a112adef7afc16b85639a2", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -1225,11 +1225,9 @@ package body Sem_Attr is\n             --  the prefix of another attribute. Error is posted on parent.\n \n             if Nkind (Parent (N)) = N_Attribute_Reference\n-              and then (Attribute_Name (Parent (N)) = Name_Address\n-                          or else\n-                        Attribute_Name (Parent (N)) = Name_Code_Address\n-                          or else\n-                        Attribute_Name (Parent (N)) = Name_Access)\n+              and then Nam_In (Attribute_Name (Parent (N)), Name_Address,\n+                                                            Name_Code_Address,\n+                                                            Name_Access)\n             then\n                Error_Msg_Name_1 := Attribute_Name (Parent (N));\n                Error_Msg_N (\"illegal prefix for % attribute\", Parent (N));\n@@ -2204,9 +2202,7 @@ package body Sem_Attr is\n          --  a context check\n \n          if Ada_Version >= Ada_2005\n-           and then (Aname = Name_Count\n-                      or else Aname = Name_Caller\n-                      or else Aname = Name_AST_Entry)\n+           and then Nam_In (Aname, Name_Count, Name_Caller, Name_AST_Entry)\n          then\n             declare\n                Count : Natural := 0;\n@@ -2845,9 +2841,7 @@ package body Sem_Attr is\n          Check_E0;\n \n          if Nkind (P) = N_Attribute_Reference\n-           and then (Attribute_Name (P) = Name_Elab_Body\n-                       or else\n-                     Attribute_Name (P) = Name_Elab_Spec)\n+           and then Nam_In (Attribute_Name (P), Name_Elab_Body, Name_Elab_Spec)\n          then\n             null;\n \n@@ -3818,11 +3812,10 @@ package body Sem_Attr is\n \n             if Nkind (Original_Node (Stmt)) = N_Pragma\n               and then\n-                (Pragma_Name (Original_Node (Stmt)) = Name_Assert\n-                   or else\n-                 Pragma_Name (Original_Node (Stmt)) = Name_Loop_Invariant\n-                   or else\n-                 Pragma_Name (Original_Node (Stmt)) = Name_Loop_Variant)\n+                Nam_In (Pragma_Name (Original_Node (Stmt)),\n+                        Name_Assert,\n+                        Name_Loop_Invariant,\n+                        Name_Loop_Variant)\n             then\n                In_Loop_Assertion := True;\n "}, {"sha": "556156af08e9cfe557378cd51275e9fe84fd1398", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -467,8 +467,8 @@ package body Sem_Aux is\n          elsif Nkind (N) = N_Attribute_Definition_Clause\n            and then\n              (Chars (N) = Nam\n-                or else (Nam = Name_Priority\n-                          and then Chars (N) = Name_Interrupt_Priority))\n+               or else (Nam = Name_Priority\n+                         and then Chars (N) = Name_Interrupt_Priority))\n          then\n             if Check_Parents or else Entity (N) = E then\n                return N;\n@@ -477,9 +477,9 @@ package body Sem_Aux is\n          elsif Nkind (N) = N_Aspect_Specification\n            and then\n              (Chars (Identifier (N)) = Nam\n-                or else (Nam = Name_Priority\n-                          and then Chars (Identifier (N)) =\n-                                     Name_Interrupt_Priority))\n+               or else\n+                 (Nam = Name_Priority\n+                   and then Chars (Identifier (N)) = Name_Interrupt_Priority))\n          then\n             if Check_Parents then\n                return N;"}, {"sha": "98b0d5795aedef6af40abb238cda0f13bf743abb", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -401,9 +401,8 @@ package body Sem_Ch10 is\n \n                elsif Nkind (Cont_Item) = N_Pragma\n                  and then\n-                   (Pragma_Name (Cont_Item) = Name_Elaborate\n-                      or else\n-                    Pragma_Name (Cont_Item) = Name_Elaborate_All)\n+                   Nam_In (Pragma_Name (Cont_Item), Name_Elaborate,\n+                                                     Name_Elaborate_All)\n                  and then not Used_Type_Or_Elab\n                then\n                   Prag_Unit :=\n@@ -2493,9 +2492,9 @@ package body Sem_Ch10 is\n          if Nkind (Nam) = N_Selected_Component\n            and then Nkind (Prefix (Nam)) = N_Identifier\n            and then Chars (Prefix (Nam)) = Name_Gnat\n-           and then (Chars (Selector_Name (Nam)) = Name_Most_Recent_Exception\n-                       or else\n-                     Chars (Selector_Name (Nam)) = Name_Exception_Traces)\n+           and then Nam_In (Chars (Selector_Name (Nam)),\n+                            Name_Most_Recent_Exception,\n+                            Name_Exception_Traces)\n          then\n             Check_Restriction (No_Exception_Propagation, N);\n             Special_Exception_Package_Used := True;"}, {"sha": "32f1f6d76ac6562f7207b0d4d2c6ef59fe5eaccc", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 11, "deletions": 23, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -1001,8 +1001,8 @@ package body Sem_Ch13 is\n                begin\n                   A := First (L);\n                   while Present (A) loop\n-                     exit when Chars (Identifier (A)) = Name_Export\n-                       or else Chars (Identifier (A)) = Name_Import;\n+                     exit when Nam_In (Chars (Identifier (A)), Name_Export,\n+                                                               Name_Import);\n                      Next (A);\n                   end loop;\n \n@@ -1349,9 +1349,7 @@ package body Sem_Ch13 is\n                      while Present (A) loop\n                         A_Name := Chars (Identifier (A));\n \n-                        if A_Name = Name_Import or else\n-                           A_Name = Name_Export\n-                        then\n+                        if Nam_In (A_Name, Name_Import, Name_Export) then\n                            if Found then\n                               Error_Msg_N (\"conflicting\", A);\n                            else\n@@ -7568,13 +7566,10 @@ package body Sem_Ch13 is\n                Check_Expr_Constants (Prefix (Nod));\n \n             when N_Attribute_Reference =>\n-               if Attribute_Name (Nod) = Name_Address\n-                   or else\n-                  Attribute_Name (Nod) = Name_Access\n-                    or else\n-                  Attribute_Name (Nod) = Name_Unchecked_Access\n-                    or else\n-                  Attribute_Name (Nod) = Name_Unrestricted_Access\n+               if Nam_In (Attribute_Name (Nod), Name_Address,\n+                                                Name_Access,\n+                                                Name_Unchecked_Access,\n+                                                Name_Unrestricted_Access)\n                then\n                   Check_At_Constant_Address (Prefix (Nod));\n \n@@ -7739,10 +7734,7 @@ package body Sem_Ch13 is\n             --  record, both at location zero. This seems a bit strange, but\n             --  it seems to happen in some circumstances, perhaps on an error.\n \n-            if Chars (C1_Ent) = Name_uTag\n-                 and then\n-               Chars (C2_Ent) = Name_uTag\n-            then\n+            if Nam_In (Chars (C1_Ent), Name_uTag, Name_uTag) then\n                return;\n             end if;\n \n@@ -9322,11 +9314,8 @@ package body Sem_Ch13 is\n          declare\n             Pname : constant Name_Id := Pragma_Name (N);\n          begin\n-            if Pname = Name_Convention or else\n-               Pname = Name_Import     or else\n-               Pname = Name_Export     or else\n-               Pname = Name_External   or else\n-               Pname = Name_Interface\n+            if Nam_In (Pname, Name_Convention, Name_Import,   Name_Export,\n+                              Name_External,   Name_Interface)\n             then\n                return False;\n             end if;\n@@ -9928,8 +9917,7 @@ package body Sem_Ch13 is\n       procedure No_Independence is\n       begin\n          if Pragma_Name (N) = Name_Independent then\n-            Error_Msg_NE\n-              (\"independence cannot be guaranteed for&\", N, E);\n+            Error_Msg_NE (\"independence cannot be guaranteed for&\", N, E);\n          else\n             Error_Msg_NE\n               (\"independent components cannot be guaranteed for&\", N, E);"}, {"sha": "9a687dbfaa77c80e3d05fd9b023c9e509eed7a98", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 17, "deletions": 20, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -9651,7 +9651,7 @@ package body Sem_Ch3 is\n \n             elsif Is_Subprogram (E)\n               and then (not Comes_From_Source (E)\n-                          or else Chars (E) = Name_uCall)\n+                         or else Chars (E) = Name_uCall)\n             then\n                null;\n \n@@ -12068,9 +12068,9 @@ package body Sem_Ch3 is\n          Set_Ekind (Def_Id, E_Signed_Integer_Subtype);\n       end if;\n \n-      Set_Etype            (Def_Id, Base_Type        (T));\n-      Set_Size_Info        (Def_Id,                  (T));\n-      Set_First_Rep_Item   (Def_Id, First_Rep_Item   (T));\n+      Set_Etype            (Def_Id, Base_Type      (T));\n+      Set_Size_Info        (Def_Id,                (T));\n+      Set_First_Rep_Item   (Def_Id, First_Rep_Item (T));\n       Set_Discrete_RM_Size (Def_Id);\n    end Constrain_Integer;\n \n@@ -12086,10 +12086,10 @@ package body Sem_Ch3 is\n \n    begin\n       Set_Ekind          (Def_Id, E_Ordinary_Fixed_Point_Subtype);\n-      Set_Etype          (Def_Id, Base_Type        (T));\n-      Set_Size_Info      (Def_Id,                  (T));\n-      Set_First_Rep_Item (Def_Id, First_Rep_Item   (T));\n-      Set_Small_Value    (Def_Id, Small_Value      (T));\n+      Set_Etype          (Def_Id, Base_Type      (T));\n+      Set_Size_Info      (Def_Id,                (T));\n+      Set_First_Rep_Item (Def_Id, First_Rep_Item (T));\n+      Set_Small_Value    (Def_Id, Small_Value    (T));\n \n       --  Process the constraint\n \n@@ -12437,9 +12437,7 @@ package body Sem_Ch3 is\n          then\n             Old_C := First_Component (Typ);\n             while Present (Old_C) loop\n-               if Chars ((Old_C)) = Name_uTag\n-                 or else Chars ((Old_C)) = Name_uParent\n-               then\n+               if Nam_In (Chars (Old_C), Name_uTag, Name_uParent) then\n                   Append_Elmt (Old_C, Comp_List);\n                end if;\n \n@@ -13276,9 +13274,9 @@ package body Sem_Ch3 is\n         or else Is_Internal (Parent_Subp)\n         or else Is_Private_Overriding\n         or else Is_Internal_Name (Chars (Parent_Subp))\n-        or else Chars (Parent_Subp) = Name_Initialize\n-        or else Chars (Parent_Subp) = Name_Adjust\n-        or else Chars (Parent_Subp) = Name_Finalize\n+        or else Nam_In (Chars (Parent_Subp), Name_Initialize,\n+                                             Name_Adjust,\n+                                             Name_Finalize)\n       then\n          Set_Derived_Name;\n \n@@ -13451,10 +13449,9 @@ package body Sem_Ch3 is\n       --  set on both views of the type.\n \n       if Is_Controlled (Parent_Type)\n-        and then\n-          (Chars (Parent_Subp) = Name_Initialize or else\n-           Chars (Parent_Subp) = Name_Adjust     or else\n-           Chars (Parent_Subp) = Name_Finalize)\n+        and then Nam_In (Chars (Parent_Subp), Name_Initialize,\n+                                              Name_Adjust,\n+                                              Name_Finalize)\n         and then Is_Hidden (Parent_Subp)\n         and then not Is_Visibly_Controlled (Parent_Type)\n       then\n@@ -19326,7 +19323,7 @@ package body Sem_Ch3 is\n                        or else\n                          (Is_Class_Wide_Type (Entity (Subt))\n                            and then\n-                           Chars (Etype (Base_Type (Entity (Subt)))) =\n+                             Chars (Etype (Base_Type (Entity (Subt)))) =\n                                                                   Type_Id));\n             end if;\n \n@@ -20162,7 +20159,7 @@ package body Sem_Ch3 is\n \n       --  Complete both implicit base and declared first subtype entities\n \n-      Set_Etype          (Implicit_Base, Base_Typ);\n+      Set_Etype          (Implicit_Base,                 Base_Typ);\n       Set_Size_Info      (Implicit_Base,                (Base_Typ));\n       Set_RM_Size        (Implicit_Base, RM_Size        (Base_Typ));\n       Set_First_Rep_Item (Implicit_Base, First_Rep_Item (Base_Typ));"}, {"sha": "83d71aa8aa27d839af1b9855f206b7f56bc0ca80", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 13, "deletions": 18, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -4111,13 +4111,11 @@ package body Sem_Ch4 is\n                        and then Nkind (Name) /= N_Selected_Component)\n                      or else\n                       (Nkind (Parent_N) = N_Attribute_Reference\n-                         and then (Attribute_Name (Parent_N) = Name_First\n-                                     or else\n-                                   Attribute_Name (Parent_N) = Name_Last\n-                                     or else\n-                                   Attribute_Name (Parent_N) = Name_Length\n-                                     or else\n-                                   Attribute_Name (Parent_N) = Name_Range)))\n+                        and then\n+                          Nam_In (Attribute_Name (Parent_N), Name_First,\n+                                                             Name_Last,\n+                                                             Name_Length,\n+                                                             Name_Range)))\n                then\n                   Set_Etype (N, Etype (Comp));\n \n@@ -4780,9 +4778,9 @@ package body Sem_Ch4 is\n \n       elsif Nkind (Expr) = N_Attribute_Reference\n         and then\n-          (Attribute_Name (Expr) = Name_Access            or else\n-           Attribute_Name (Expr) = Name_Unchecked_Access  or else\n-           Attribute_Name (Expr) = Name_Unrestricted_Access)\n+          Nam_In (Attribute_Name (Expr), Name_Access,\n+                                         Name_Unchecked_Access,\n+                                         Name_Unrestricted_Access)\n       then\n          Error_Msg_N (\"argument of conversion cannot be access\", N);\n          Error_Msg_N (\"\\use qualified expression instead\", N);\n@@ -5037,8 +5035,7 @@ package body Sem_Ch4 is\n    --  Start of processing for Check_Arithmetic_Pair\n \n    begin\n-      if Op_Name = Name_Op_Add or else Op_Name = Name_Op_Subtract then\n-\n+      if Nam_In (Op_Name, Name_Op_Add, Name_Op_Subtract) then\n          if Is_Numeric_Type (T1)\n            and then Is_Numeric_Type (T2)\n            and then (Covers (T1 => T1, T2 => T2)\n@@ -5048,11 +5045,9 @@ package body Sem_Ch4 is\n             Add_One_Interp (N, Op_Id, Specific_Type (T1, T2));\n          end if;\n \n-      elsif Op_Name = Name_Op_Multiply or else Op_Name = Name_Op_Divide then\n-\n+      elsif Nam_In (Op_Name, Name_Op_Multiply, Name_Op_Divide) then\n          if Is_Fixed_Point_Type (T1)\n-           and then (Is_Fixed_Point_Type (T2)\n-                       or else T2 = Universal_Real)\n+           and then (Is_Fixed_Point_Type (T2) or else T2 = Universal_Real)\n          then\n             --  If Treat_Fixed_As_Integer is set then the Etype is already set\n             --  and no further processing is required (this is the case of an\n@@ -5090,7 +5085,7 @@ package body Sem_Ch4 is\n \n          elsif Is_Fixed_Point_Type (T1)\n            and then (Base_Type (T2) = Base_Type (Standard_Integer)\n-                       or else T2 = Universal_Integer)\n+                      or else T2 = Universal_Integer)\n          then\n             Add_One_Interp (N, Op_Id, T1);\n \n@@ -5107,7 +5102,7 @@ package body Sem_Ch4 is\n \n          elsif Is_Fixed_Point_Type (T2)\n            and then (Base_Type (T1) = Base_Type (Standard_Integer)\n-                       or else T1 = Universal_Integer)\n+                      or else T1 = Universal_Integer)\n            and then Op_Name = Name_Op_Multiply\n          then\n             Add_One_Interp (N, Op_Id, T2);"}, {"sha": "6f2bee5659c8313e57d2d9673b0d4ab77a8f2654", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 14, "deletions": 22, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -1461,9 +1461,9 @@ package body Sem_Ch6 is\n       --  Special processing for Elab_Spec, Elab_Body and Elab_Subp_Body calls\n \n       if Nkind (P) = N_Attribute_Reference\n-        and then (Attribute_Name (P) = Name_Elab_Spec      or else\n-                  Attribute_Name (P) = Name_Elab_Body      or else\n-                  Attribute_Name (P) = Name_Elab_Subp_Body)\n+        and then Nam_In (Attribute_Name (P), Name_Elab_Spec,\n+                                             Name_Elab_Body,\n+                                             Name_Elab_Subp_Body)\n       then\n          if Present (Actuals) then\n             Error_Msg_N\n@@ -4010,9 +4010,8 @@ package body Sem_Ch6 is\n             Nxt := Next (Decl);\n \n             if Nkind (Decl) = N_Pragma\n-              and then (Pragma_Name (Decl) = Name_Unreferenced\n-                          or else\n-                        Pragma_Name (Decl) = Name_Unmodified)\n+              and then Nam_In (Pragma_Name (Decl), Name_Unreferenced,\n+                                                   Name_Unmodified)\n             then\n                Remove (Decl);\n             end if;\n@@ -4515,8 +4514,8 @@ package body Sem_Ch6 is\n                   Conv := Current_Entity (Id);\n \n                elsif Nkind_In (Id, N_Selected_Component, N_Expanded_Name)\n-                 and then Chars (Selector_Name (Id))\n-                            = Name_Unchecked_Conversion\n+                 and then\n+                   Chars (Selector_Name (Id)) = Name_Unchecked_Conversion\n                then\n                   Conv := Current_Entity (Selector_Name (Id));\n                else\n@@ -5100,9 +5099,8 @@ package body Sem_Ch6 is\n                Nxt := Next (Decl);\n \n                if Nkind (Decl) = N_Pragma\n-                 and then (Pragma_Name (Decl) = Name_Unreferenced\n-                           or else\n-                             Pragma_Name (Decl) = Name_Unmodified)\n+                 and then Nam_In (Pragma_Name (Decl), Name_Unreferenced,\n+                                                      Name_Unmodified)\n                then\n                   Remove (Decl);\n                end if;\n@@ -6499,11 +6497,9 @@ package body Sem_Ch6 is\n       if Present (Overridden_Subp)\n         and then (not Is_Hidden (Overridden_Subp)\n                    or else\n-                     ((Chars (Overridden_Subp) = Name_Initialize\n-                         or else\n-                       Chars (Overridden_Subp) = Name_Adjust\n-                         or else\n-                       Chars (Overridden_Subp) = Name_Finalize)\n+                     (Nam_In (Chars (Overridden_Subp), Name_Initialize,\n+                                                       Name_Adjust,\n+                                                       Name_Finalize)\n                       and then Present (Alias (Overridden_Subp))\n                       and then not Is_Hidden (Alias (Overridden_Subp))))\n       then\n@@ -12910,16 +12906,12 @@ package body Sem_Ch6 is\n       --  Verify that user-defined operators have proper number of arguments\n       --  First case of operators which can only be unary\n \n-      if Id = Name_Op_Not\n-        or else Id = Name_Op_Abs\n-      then\n+      if Nam_In (Id, Name_Op_Not, Name_Op_Abs) then\n          N_OK := (N = 1);\n \n       --  Case of operators which can be unary or binary\n \n-      elsif Id = Name_Op_Add\n-        or Id = Name_Op_Subtract\n-      then\n+      elsif Nam_In (Id, Name_Op_Add, Name_Op_Subtract) then\n          N_OK := (N in 1 .. 2);\n \n       --  All other operators can only be binary"}, {"sha": "f8e2799dc85c418bc5c22b7eed13479bb4ca37c0", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1394,9 +1394,8 @@ package body Sem_Ch7 is\n             begin\n                ASN := First (Aspect_Specifications (Parent (E)));\n                while Present (ASN) loop\n-                  if Chars (Identifier (ASN)) = Name_Invariant\n-                       or else\n-                     Chars (Identifier (ASN)) = Name_Type_Invariant\n+                  if Nam_In (Chars (Identifier (ASN)), Name_Invariant,\n+                                                       Name_Type_Invariant)\n                   then\n                      Build_Invariant_Procedure (E, N);\n                      exit;"}, {"sha": "12b37f447a42ebcb4db2557fe8acdc5a49a1bbe4", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -3362,13 +3362,9 @@ package body Sem_Ch8 is\n          Error_Msg_N (\"illegal expressions in attribute reference\", Nam);\n \n       elsif\n-        Aname = Name_Compose      or else\n-        Aname = Name_Exponent     or else\n-        Aname = Name_Leading_Part or else\n-        Aname = Name_Pos          or else\n-        Aname = Name_Round        or else\n-        Aname = Name_Scaling      or else\n-        Aname = Name_Val\n+        Nam_In (Aname, Name_Compose, Name_Exponent, Name_Leading_Part,\n+                       Name_Pos,     Name_Round,    Name_Scaling,\n+                       Name_Val)\n       then\n          if Nkind (N) = N_Subprogram_Renaming_Declaration\n            and then Present (Corresponding_Formal_Spec (N))\n@@ -4569,7 +4565,7 @@ package body Sem_Ch8 is\n             --  is put or put_line, then add a special error message (since\n             --  this is a very common error for beginners to make).\n \n-            if Chars (N) = Name_Put or else Chars (N) = Name_Put_Line then\n+            if Nam_In (Chars (N), Name_Put, Name_Put_Line) then\n                Error_Msg_N -- CODEFIX\n                  (\"\\\\possible missing `WITH Ada.Text_'I'O; \" &\n                   \"USE Ada.Text_'I'O`!\", N);"}, {"sha": "e60574a14960192ac952b1dc74fe05ba7d958166", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -1213,9 +1213,7 @@ package body Sem_Disp is\n \n          Check_Subtype_Conformant (Subp, Ovr_Subp);\n \n-         if (Chars (Subp) = Name_Initialize\n-           or else Chars (Subp) = Name_Adjust\n-           or else Chars (Subp) = Name_Finalize)\n+         if Nam_In (Chars (Subp), Name_Initialize, Name_Adjust, Name_Finalize)\n            and then Is_Controlled (Tagged_Type)\n            and then not Is_Visibly_Controlled (Tagged_Type)\n          then\n@@ -1386,11 +1384,10 @@ package body Sem_Disp is\n          Set_DT_Position (Subp, No_Uint);\n \n       elsif Has_Controlled_Component (Tagged_Type)\n-        and then\n-          (Chars (Subp) = Name_Initialize or else\n-           Chars (Subp) = Name_Adjust     or else\n-           Chars (Subp) = Name_Finalize   or else\n-           Chars (Subp) = Name_Finalize_Address)\n+        and then Nam_In (Chars (Subp), Name_Initialize,\n+                                       Name_Adjust,\n+                                       Name_Finalize,\n+                                       Name_Finalize_Address)\n       then\n          declare\n             F_Node   : constant Node_Id := Freeze_Node (Tagged_Type);"}, {"sha": "6d941025c0de09ecd27b4a9ea2e0c9056c146bc3", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -2021,9 +2021,8 @@ package body Sem_Elab is\n \n          elsif not Debug_Flag_Dot_UU\n            and then Nkind (N) = N_Attribute_Reference\n-           and then (Attribute_Name (N) = Name_Access\n-                       or else\n-                     Attribute_Name (N) = Name_Unrestricted_Access)\n+           and then Nam_In (Attribute_Name (N), Name_Access,\n+                                                Name_Unrestricted_Access)\n            and then Is_Entity_Name (Prefix (N))\n            and then Is_Subprogram (Entity (Prefix (N)))\n          then"}, {"sha": "0f3d55db3da028f35c82571e225bf79ad05fac80", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -528,9 +528,7 @@ package body Sem_Eval is\n          --  Fixup only required for First/Last attribute reference\n \n          if Nkind (N) = N_Attribute_Reference\n-           and then (Attribute_Name (N) = Name_First\n-                       or else\n-                     Attribute_Name (N) = Name_Last)\n+           and then Nam_In (Attribute_Name (N), Name_First, Name_Last)\n          then\n             Xtyp := Etype (Prefix (N));\n \n@@ -697,9 +695,7 @@ package body Sem_Eval is\n \n          elsif Nkind (Lf) = N_Attribute_Reference\n            and then Attribute_Name (Lf) = Attribute_Name (Rf)\n-           and then (Attribute_Name (Lf) = Name_First\n-                       or else\n-                     Attribute_Name (Lf) = Name_Last)\n+           and then Nam_In (Attribute_Name (Lf), Name_First, Name_Last)\n            and then Nkind_In (Prefix (Lf), N_Identifier, N_Expanded_Name)\n            and then Nkind_In (Prefix (Rf), N_Identifier, N_Expanded_Name)\n            and then Entity (Prefix (Lf)) = Entity (Prefix (Rf))"}, {"sha": "ed607ce53c10fc7676b99b435e5a9c61c034468d", "filename": "gcc/ada/sem_intr.adb", "status": "modified", "additions": 16, "deletions": 57, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_intr.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -127,11 +127,9 @@ package body Sem_Intr is\n       --  literal is legal even in Ada 83 mode, where such literals are\n       --  not static.\n \n-      if Cnam = Name_Import_Address\n-           or else\n-         Cnam = Name_Import_Largest_Value\n-           or else\n-         Cnam = Name_Import_Value\n+      if Nam_In (Cnam, Name_Import_Address,\n+                       Name_Import_Largest_Value,\n+                       Name_Import_Value)\n       then\n          if Etype (Arg1) = Any_Type\n            or else Raises_Constraint_Error (Arg1)\n@@ -196,30 +194,13 @@ package body Sem_Intr is\n    begin\n       --  Arithmetic operators\n \n-      if Nam = Name_Op_Add\n-           or else\n-         Nam = Name_Op_Subtract\n-           or else\n-         Nam = Name_Op_Multiply\n-           or else\n-         Nam = Name_Op_Divide\n-           or else\n-         Nam = Name_Op_Rem\n-           or else\n-         Nam = Name_Op_Mod\n-           or else\n-         Nam = Name_Op_Abs\n+      if Nam_In (Nam, Name_Op_Add, Name_Op_Subtract, Name_Op_Multiply,\n+                      Name_Op_Divide, Name_Op_Rem, Name_Op_Mod, Name_Op_Abs)\n       then\n          T1 := Etype (First_Formal (E));\n \n          if No (Next_Formal (First_Formal (E))) then\n-\n-            if Nam = Name_Op_Add\n-                 or else\n-               Nam = Name_Op_Subtract\n-                 or else\n-               Nam = Name_Op_Abs\n-            then\n+            if Nam_In (Nam, Name_Op_Add, Name_Op_Subtract, Name_Op_Abs) then\n                T2 := T1;\n \n             --  Previous error in declaration\n@@ -254,17 +235,8 @@ package body Sem_Intr is\n \n       --  Comparison operators\n \n-      elsif Nam = Name_Op_Eq\n-              or else\n-            Nam = Name_Op_Ge\n-              or else\n-            Nam = Name_Op_Gt\n-              or else\n-            Nam = Name_Op_Le\n-              or else\n-            Nam = Name_Op_Lt\n-              or else\n-            Nam = Name_Op_Ne\n+      elsif Nam_In (Nam, Name_Op_Eq, Name_Op_Ge, Name_Op_Gt, Name_Op_Le,\n+                         Name_Op_Lt, Name_Op_Ne)\n       then\n          T1 := Etype (First_Formal (E));\n \n@@ -370,35 +342,22 @@ package body Sem_Intr is\n       --  Shift cases. We allow user specification of intrinsic shift\n       --  operators for any numeric types.\n \n-      elsif\n-        Nam = Name_Rotate_Left\n-          or else\n-        Nam = Name_Rotate_Right\n-          or else\n-        Nam = Name_Shift_Left\n-          or else\n-        Nam = Name_Shift_Right\n-          or else\n-        Nam = Name_Shift_Right_Arithmetic\n+      elsif Nam_In (Nam, Name_Rotate_Left, Name_Rotate_Right, Name_Shift_Left,\n+                         Name_Shift_Right, Name_Shift_Right_Arithmetic)\n       then\n          Check_Shift (E, N);\n \n-      elsif\n-        Nam = Name_Exception_Information\n-          or else\n-        Nam = Name_Exception_Message\n-          or else\n-        Nam = Name_Exception_Name\n+      elsif Nam_In (Nam, Name_Exception_Information,\n+                         Name_Exception_Message,\n+                         Name_Exception_Name)\n       then\n          Check_Exception_Function (E, N);\n \n       elsif Nkind (E) = N_Defining_Operator_Symbol then\n          Check_Intrinsic_Operator (E, N);\n \n-      elsif Nam = Name_File\n-        or else Nam = Name_Line\n-        or else Nam = Name_Source_Location\n-        or else Nam = Name_Enclosing_Entity\n+      elsif Nam_In (Nam, Name_File, Name_Line, Name_Source_Location,\n+                         Name_Enclosing_Entity)\n       then\n          null;\n "}, {"sha": "924b58c76af540d3d8d03e9f8e7be6ef97f02276", "filename": "gcc/ada/sem_mech.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_mech.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_mech.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_mech.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -110,8 +110,9 @@ package body Sem_Mech is\n          Class := First (Expressions (Mech_Name));\n \n          if Nkind (Prefix (Mech_Name)) /= N_Identifier\n-           or else not (Chars (Prefix (Mech_Name)) = Name_Descriptor or else\n-                        Chars (Prefix (Mech_Name)) = Name_Short_Descriptor)\n+           or else\n+             not Nam_In (Chars (Prefix (Mech_Name)), Name_Descriptor,\n+                                                     Name_Short_Descriptor)\n            or else Present (Next (Class))\n          then\n             Bad_Mechanism;\n@@ -129,8 +130,9 @@ package body Sem_Mech is\n          Param := First (Parameter_Associations (Mech_Name));\n \n          if Nkind (Name (Mech_Name)) /= N_Identifier\n-           or else not (Chars (Name (Mech_Name)) = Name_Descriptor or else\n-                        Chars (Name (Mech_Name)) = Name_Short_Descriptor)\n+           or else\n+             not Nam_In (Chars (Name (Mech_Name)), Name_Descriptor,\n+                                                   Name_Short_Descriptor)\n            or else Present (Next (Param))\n            or else No (Selector_Name (Param))\n            or else Chars (Selector_Name (Param)) /= Name_Class"}, {"sha": "8cd435b065b4ce8d81b42a58201d7fcd60b9f359", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 28, "deletions": 56, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -306,10 +306,7 @@ package body Sem_Prag is\n       --  Preanalyze the boolean expressions, we treat these as spec\n       --  expressions (i.e. similar to a default expression).\n \n-      if Pragma_Name (N) = Name_Test_Case\n-           or else\n-         Pragma_Name (N) = Name_Contract_Case\n-      then\n+      if Nam_In (Pragma_Name (N), Name_Test_Case, Name_Contract_Case) then\n          Preanalyze_CTC_Args\n            (N,\n             Get_Requires_From_CTC_Pragma (N),\n@@ -1321,7 +1318,7 @@ package body Sem_Prag is\n       begin\n          Check_Arg_Is_Identifier (Argx);\n \n-         if Chars (Argx) /= N1 and then Chars (Argx) /= N2 then\n+         if not Nam_In (Chars (Argx), N1, N2) then\n             Error_Msg_Name_2 := N1;\n             Error_Msg_Name_3 := N2;\n             Error_Pragma_Arg (\"argument for pragma% must be% or%\", Argx);\n@@ -1337,10 +1334,7 @@ package body Sem_Prag is\n       begin\n          Check_Arg_Is_Identifier (Argx);\n \n-         if Chars (Argx) /= N1\n-           and then Chars (Argx) /= N2\n-           and then Chars (Argx) /= N3\n-         then\n+         if not Nam_In (Chars (Argx), N1, N2, N3) then\n             Error_Pragma_Arg (\"invalid argument for pragma%\", Argx);\n          end if;\n       end Check_Arg_Is_One_Of;\n@@ -1354,11 +1348,7 @@ package body Sem_Prag is\n       begin\n          Check_Arg_Is_Identifier (Argx);\n \n-         if Chars (Argx) /= N1\n-           and then Chars (Argx) /= N2\n-           and then Chars (Argx) /= N3\n-           and then Chars (Argx) /= N4\n-         then\n+         if not Nam_In (Chars (Argx), N1, N2, N3, N4) then\n             Error_Pragma_Arg (\"invalid argument for pragma%\", Argx);\n          end if;\n       end Check_Arg_Is_One_Of;\n@@ -1372,12 +1362,7 @@ package body Sem_Prag is\n       begin\n          Check_Arg_Is_Identifier (Argx);\n \n-         if Chars (Argx) /= N1\n-           and then Chars (Argx) /= N2\n-           and then Chars (Argx) /= N3\n-           and then Chars (Argx) /= N4\n-           and then Chars (Argx) /= N5\n-         then\n+         if not Nam_In (Chars (Argx), N1, N2, N3, N4, N5) then\n             Error_Pragma_Arg (\"invalid argument for pragma%\", Argx);\n          end if;\n       end Check_Arg_Is_One_Of;\n@@ -2179,9 +2164,7 @@ package body Sem_Prag is\n \n       procedure Check_No_Link_Name is\n       begin\n-         if Present (Arg3)\n-           and then Chars (Arg3) = Name_Link_Name\n-         then\n+         if Present (Arg3) and then Chars (Arg3) = Name_Link_Name then\n             Arg4 := Arg3;\n          end if;\n \n@@ -3499,19 +3482,16 @@ package body Sem_Prag is\n                   then\n                      --  Give error if same as our pragma or Export/Convention\n \n-                     if Pragma_Name (Decl) = Name_Export\n-                          or else\n-                        Pragma_Name (Decl) = Name_Convention\n-                          or else\n-                        Pragma_Name (Decl) = Pragma_Name (N)\n+                     if Nam_In (Pragma_Name (Decl), Name_Export,\n+                                                    Name_Convention,\n+                                                    Pragma_Name (N))\n                      then\n                         exit;\n \n                      --  Case of Import/Interface or the other way round\n \n-                     elsif Pragma_Name (Decl) = Name_Interface\n-                             or else\n-                           Pragma_Name (Decl) = Name_Import\n+                     elsif Nam_In (Pragma_Name (Decl), Name_Interface,\n+                                                       Name_Import)\n                      then\n                         --  Here we know that we have Import and Interface. It\n                         --  doesn't matter which way round they are. See if\n@@ -4287,9 +4267,7 @@ package body Sem_Prag is\n \n                elsif Etype (Def_Id) /= Standard_Void_Type\n                  and then\n-                   (Pname = Name_Export_Procedure\n-                      or else\n-                    Pname = Name_Import_Procedure)\n+                   Nam_In (Pname, Name_Export_Procedure, Name_Import_Procedure)\n                then\n                   Match := False;\n \n@@ -6409,9 +6387,10 @@ package body Sem_Prag is\n             Class := First (Expressions (Mech_Name));\n \n             if Nkind (Prefix (Mech_Name)) /= N_Identifier\n-             or else not (Chars (Prefix (Mech_Name)) = Name_Descriptor or else\n-                          Chars (Prefix (Mech_Name)) = Name_Short_Descriptor)\n-             or else Present (Next (Class))\n+              or else\n+                not Nam_In (Chars (Prefix (Mech_Name)), Name_Descriptor,\n+                                                        Name_Short_Descriptor)\n+              or else Present (Next (Class))\n             then\n                Bad_Mechanism;\n             else\n@@ -6436,8 +6415,9 @@ package body Sem_Prag is\n             Param := First (Parameter_Associations (Mech_Name));\n \n             if Nkind (Name (Mech_Name)) /= N_Identifier\n-              or else not (Chars (Name (Mech_Name)) = Name_Descriptor or else\n-                           Chars (Name (Mech_Name)) = Name_Short_Descriptor)\n+              or else\n+                not Nam_In (Chars (Name (Mech_Name)), Name_Descriptor,\n+                                                      Name_Short_Descriptor)\n               or else Present (Next (Param))\n               or else No (Selector_Name (Param))\n               or else Chars (Selector_Name (Param)) /= Name_Class\n@@ -9722,11 +9702,11 @@ package body Sem_Prag is\n                      Mode : Name_Id)\n                   is\n                   begin\n-                     if Mode = Name_In_Out or else Mode = Name_Input then\n+                     if Nam_In (Mode, Name_In_Out, Name_Input) then\n                         Add_Item (Item, Subp_Inputs);\n                      end if;\n \n-                     if Mode = Name_In_Out or else Mode = Name_Output then\n+                     if Nam_In (Mode, Name_In_Out, Name_Output) then\n                         Add_Item (Item, Subp_Outputs);\n                      end if;\n                   end Collect_Global_Item;\n@@ -11574,9 +11554,7 @@ package body Sem_Prag is\n                      --  volatile Input state.\n \n                      if Is_Input_State (Item_Id)\n-                       and then (Global_Mode = Name_In_Out\n-                                   or else\n-                                 Global_Mode = Name_Output)\n+                       and then Nam_In (Global_Mode, Name_In_Out, Name_Output)\n                      then\n                         Error_Msg_N\n                           (\"global item of mode In_Out or Output cannot \"\n@@ -11586,9 +11564,7 @@ package body Sem_Prag is\n                      --  a volatile Output state.\n \n                      elsif Is_Output_State (Item_Id)\n-                       and then (Global_Mode = Name_In_Out\n-                                   or else\n-                                 Global_Mode = Name_Input)\n+                       and then Nam_In (Global_Mode, Name_In_Out, Name_Input)\n                      then\n                         Error_Msg_N\n                           (\"global item of mode In_Out or Input cannot \"\n@@ -13845,8 +13821,8 @@ package body Sem_Prag is\n \n             Variant := First (Pragma_Argument_Associations (N));\n             while Present (Variant) loop\n-               if Chars (Variant) /= Name_Decreases\n-                 and then Chars (Variant) /= Name_Increases\n+               if not Nam_In (Chars (Variant), Name_Decreases,\n+                                               Name_Increases)\n                then\n                   Error_Pragma_Arg (\"wrong change modifier\", Variant);\n                end if;\n@@ -17491,10 +17467,7 @@ package body Sem_Prag is\n                   --  On/Off one argument case was processed by parser\n \n                   if Nkind (Argx) = N_Identifier\n-                    and then\n-                      (Chars (Argx) = Name_On\n-                         or else\n-                       Chars (Argx) = Name_Off)\n+                    and then Nam_In (Chars (Argx), Name_On, Name_Off)\n                   then\n                      null;\n \n@@ -17896,9 +17869,8 @@ package body Sem_Prag is\n \n    function Delay_Config_Pragma_Analyze (N : Node_Id) return Boolean is\n    begin\n-      return Pragma_Name (N) = Name_Interrupt_State\n-               or else\n-             Pragma_Name (N) = Name_Priority_Specific_Dispatching;\n+      return Nam_In (Pragma_Name (N), Name_Interrupt_State,\n+                                      Name_Priority_Specific_Dispatching);\n    end Delay_Config_Pragma_Analyze;\n \n    -------------------------"}, {"sha": "f78f2ae2d48c606952b66336623d00bf9d2d07a0", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -1005,9 +1005,9 @@ package body Sem_Res is\n          --  functions, this is never a parameterless call (RM 4.1.4(6)).\n \n          if Nkind (Parent (N)) = N_Attribute_Reference\n-            and then (Attribute_Name (Parent (N)) = Name_Address      or else\n-                      Attribute_Name (Parent (N)) = Name_Code_Address or else\n-                      Attribute_Name (Parent (N)) = Name_Access)\n+            and then Nam_In (Attribute_Name (Parent (N)), Name_Address,\n+                                                          Name_Code_Address,\n+                                                          Name_Access)\n          then\n             return False;\n          end if;\n@@ -1373,7 +1373,7 @@ package body Sem_Res is\n          elsif In_Instance then\n             null;\n \n-         elsif (Op_Name = Name_Op_Multiply or else Op_Name = Name_Op_Divide)\n+         elsif Nam_In (Op_Name, Name_Op_Multiply, Name_Op_Divide)\n            and then Is_Fixed_Point_Type (Etype (Left_Opnd  (Op_Node)))\n            and then Is_Fixed_Point_Type (Etype (Right_Opnd (Op_Node)))\n          then\n@@ -1385,7 +1385,7 @@ package body Sem_Res is\n          --  available.\n \n          elsif Ada_Version >= Ada_2005\n-           and then (Op_Name = Name_Op_Eq or else Op_Name = Name_Op_Ne)\n+           and then Nam_In (Op_Name, Name_Op_Eq, Name_Op_Ne)\n            and then Ekind (Etype (Act1)) = E_Anonymous_Access_Type\n          then\n             null;\n@@ -1496,9 +1496,7 @@ package body Sem_Res is\n            and then not In_Instance\n          then\n             if Is_Fixed_Point_Type (Typ)\n-              and then (Op_Name = Name_Op_Multiply\n-                          or else\n-                        Op_Name = Name_Op_Divide)\n+              and then Nam_In (Op_Name, Name_Op_Multiply, Name_Op_Divide)\n             then\n                --  Already checked above\n \n@@ -1534,7 +1532,7 @@ package body Sem_Res is\n       --  the equality node will not resolve any remaining ambiguity, and it\n       --  assumes that the first operand is not overloaded.\n \n-      if (Op_Name = Name_Op_Eq or else Op_Name = Name_Op_Ne)\n+      if Nam_In (Op_Name, Name_Op_Eq, Name_Op_Ne)\n         and then Ekind (Func) = E_Function\n         and then Is_Overloaded (Act1)\n       then\n@@ -1947,9 +1945,9 @@ package body Sem_Res is\n       --  access-to-subprogram type.\n \n       if Nkind (N) = N_Attribute_Reference\n-        and then (Attribute_Name (N) = Name_Access              or else\n-                  Attribute_Name (N) = Name_Unrestricted_Access or else\n-                  Attribute_Name (N) = Name_Unchecked_Access)\n+        and then Nam_In (Attribute_Name (N), Name_Access,\n+                                             Name_Unrestricted_Access,\n+                                             Name_Unchecked_Access)\n         and then Comes_From_Source (N)\n         and then Is_Entity_Name (Prefix (N))\n         and then Is_Subprogram (Entity (Prefix (N)))"}, {"sha": "fa5c085392f4c7e7a775289db38938df7c2e0409", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -2057,8 +2057,7 @@ package body Sem_Type is\n            and then not In_Instance\n          then\n             if Is_Fixed_Point_Type (Typ)\n-              and then (Chars (Nam1) = Name_Op_Multiply\n-                          or else Chars (Nam1) = Name_Op_Divide)\n+              and then Nam_In (Chars (Nam1), Name_Op_Multiply, Name_Op_Divide)\n               and then\n                 (Ada_Version = Ada_83\n                   or else\n@@ -2079,9 +2078,7 @@ package body Sem_Type is\n             --  declared in the same declarative list as the type. The node\n             --  may be an operator or a function call.\n \n-            elsif (Chars (Nam1) = Name_Op_Eq\n-                     or else\n-                   Chars (Nam1) = Name_Op_Ne)\n+            elsif Nam_In (Chars (Nam1), Name_Op_Eq, Name_Op_Ne)\n               and then Ada_Version >= Ada_2005\n               and then Etype (User_Subp) = Standard_Boolean\n               and then Ekind (Operand_Type) = E_Anonymous_Access_Type\n@@ -3059,10 +3056,7 @@ package body Sem_Type is\n       elsif Num = 1 then\n          T1 := Etype (First_Formal (New_S));\n \n-         if Op_Name = Name_Op_Subtract\n-           or else Op_Name = Name_Op_Add\n-           or else Op_Name = Name_Op_Abs\n-         then\n+         if Nam_In (Op_Name, Name_Op_Subtract, Name_Op_Add, Name_Op_Abs) then\n             return Base_Type (T1) = Base_Type (T)\n               and then Is_Numeric_Type (T);\n \n@@ -3080,26 +3074,24 @@ package body Sem_Type is\n          T1 := Etype (First_Formal (New_S));\n          T2 := Etype (Next_Formal (First_Formal (New_S)));\n \n-         if Op_Name =  Name_Op_And or else Op_Name = Name_Op_Or\n-           or else Op_Name = Name_Op_Xor\n-         then\n+         if Nam_In (Op_Name, Name_Op_And, Name_Op_Or, Name_Op_Xor) then\n             return Base_Type (T1) = Base_Type (T2)\n               and then Base_Type (T1) = Base_Type (T)\n               and then Valid_Boolean_Arg (Base_Type (T));\n \n-         elsif Op_Name = Name_Op_Eq or else Op_Name = Name_Op_Ne then\n+         elsif Nam_In (Op_Name, Name_Op_Eq, Name_Op_Ne) then\n             return Base_Type (T1) = Base_Type (T2)\n               and then not Is_Limited_Type (T1)\n               and then Is_Boolean_Type (T);\n \n-         elsif Op_Name = Name_Op_Lt or else Op_Name = Name_Op_Le\n-           or else Op_Name = Name_Op_Gt or else Op_Name = Name_Op_Ge\n+         elsif Nam_In (Op_Name, Name_Op_Lt, Name_Op_Le,\n+                                Name_Op_Gt, Name_Op_Ge)\n          then\n             return Base_Type (T1) = Base_Type (T2)\n               and then Valid_Comparison_Arg (T1)\n               and then Is_Boolean_Type (T);\n \n-         elsif Op_Name = Name_Op_Add or else Op_Name = Name_Op_Subtract then\n+         elsif Nam_In (Op_Name, Name_Op_Add, Name_Op_Subtract) then\n             return Base_Type (T1) = Base_Type (T2)\n               and then Base_Type (T1) = Base_Type (T)\n               and then Is_Numeric_Type (T);\n@@ -3152,7 +3144,7 @@ package body Sem_Type is\n                         and then Is_Floating_Point_Type (T2)\n                         and then Base_Type (T2) = Base_Type (T));\n \n-         elsif Op_Name = Name_Op_Mod or else Op_Name = Name_Op_Rem then\n+         elsif Nam_In (Op_Name, Name_Op_Mod, Name_Op_Rem) then\n             return Base_Type (T1) = Base_Type (T2)\n               and then Base_Type (T1) = Base_Type (T)\n               and then Is_Integer_Type (T);"}, {"sha": "00db63d6f9c8c8b63d908ee90d16382a69a8d4c5", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -8478,9 +8478,8 @@ package body Sem_Util is\n    begin\n       if Is_Class_Wide_Type (Typ)\n         and then\n-          (Chars (Etype (Typ)) = Name_Forward_Iterator\n-             or else\n-           Chars (Etype (Typ)) = Name_Reversible_Iterator)\n+          Nam_In (Chars (Etype (Typ)), Name_Forward_Iterator,\n+                                       Name_Reversible_Iterator)\n         and then\n           Is_Predefined_File_Name\n             (Unit_File_Name (Get_Source_Unit (Etype (Typ))))\n@@ -8643,9 +8642,7 @@ package body Sem_Util is\n             --  Attributes 'Input and 'Result produce objects\n \n             when N_Attribute_Reference =>\n-               return Attribute_Name (N) = Name_Input\n-                        or else\n-                      Attribute_Name (N) = Name_Result;\n+               return Nam_In (Attribute_Name (N), Name_Input, Name_Result);\n \n             when N_Selected_Component =>\n                return\n@@ -14530,9 +14527,7 @@ package body Sem_Util is\n                   return False;\n \n                elsif not Ekind_In (E, E_Discriminant, E_Component)\n-                 or else (Chars (E) = Name_uTag\n-                            or else\n-                          Chars (E) = Name_uParent)\n+                 or else Nam_In (Chars (E), Name_uTag, Name_uParent)\n                then\n                   Next_Entity (E);\n "}, {"sha": "630b635bf236cd5a4e5e88ebee1198263c97c1b2", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -1788,9 +1788,8 @@ package body Sem_Warn is\n \n                               if Nkind (P) = N_Pragma\n                                 and then\n-                                  (Pragma_Name (P) = Name_Contract_Case\n-                                     or else\n-                                   Pragma_Name (P) = Name_Test_Case)\n+                                  Nam_In (Pragma_Name (P), Name_Contract_Case,\n+                                                           Name_Test_Case)\n                                 and then\n                                   Nod = Get_Ensures_From_CTC_Pragma (P)\n                               then\n@@ -3226,9 +3225,8 @@ package body Sem_Warn is\n             --  node, since assert pragmas get rewritten at analysis time.\n \n             elsif Nkind (Original_Node (P)) = N_Pragma\n-              and then (Pragma_Name (Original_Node (P)) = Name_Assert\n-                          or else\n-                        Pragma_Name (Original_Node (P)) = Name_Check)\n+              and then Nam_In (Pragma_Name (Original_Node (P)), Name_Assert,\n+                                                                Name_Check)\n             then\n                return;\n             end if;"}, {"sha": "01ea5d56cbdfc835ed253d59a816cce072bdcd04", "filename": "gcc/ada/tbuild.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Ftbuild.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b69cd36a46e574d92de18e1ede3d31e951ccf30e/gcc%2Fada%2Ftbuild.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.adb?ref=b69cd36a46e574d92de18e1ede3d31e951ccf30e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -174,9 +174,8 @@ package body Tbuild is\n               Attribute_Name => Attribute_Name);\n \n    begin\n-      pragma Assert (Attribute_Name = Name_Address\n-                       or else\n-                     Attribute_Name = Name_Unrestricted_Access);\n+      pragma Assert (Nam_In (Attribute_Name, Name_Address,\n+                                             Name_Unrestricted_Access));\n       Set_Must_Be_Byte_Aligned (N, True);\n       return N;\n    end Make_Byte_Aligned_Attribute_Reference;"}]}