{"sha": "78681a7b92549b1daa579aeeb78bb498aa167040", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg2ODFhN2I5MjU0OWIxZGFhNTc5YWVlYjc4YmI0OThhYTE2NzA0MA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-11-25T14:23:25Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-11-25T14:23:25Z"}, "message": "Don't use priority {cd}tors if not supported by a target (PR\n\n\tPR gcov-profile/78086\n\t* g++.dg/gcov/pr16855.C: Clean up the test case.\n\t* g++.dg/gcov/pr16855-priority.C: New test.\n\t* coverage.c (build_init_ctor): Don't use priority {cd}tors if\n\tnot supported by a target.  Set priority to 100 if possible.\n\t(build_gcov_exit_decl): Likewise.\n\nFrom-SVN: r242877", "tree": {"sha": "b8258052adb5bdf2b8dba387b6948962aa3effe0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8258052adb5bdf2b8dba387b6948962aa3effe0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78681a7b92549b1daa579aeeb78bb498aa167040", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78681a7b92549b1daa579aeeb78bb498aa167040", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78681a7b92549b1daa579aeeb78bb498aa167040", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78681a7b92549b1daa579aeeb78bb498aa167040/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a77af1829fd2dc976599383d01ab4467c05eba5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a77af1829fd2dc976599383d01ab4467c05eba5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a77af1829fd2dc976599383d01ab4467c05eba5b"}], "stats": {"total": 160, "additions": 129, "deletions": 31}, "files": [{"sha": "39e980a254e0824b70cb3713a8372170aa42558b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78681a7b92549b1daa579aeeb78bb498aa167040/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78681a7b92549b1daa579aeeb78bb498aa167040/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78681a7b92549b1daa579aeeb78bb498aa167040", "patch": "@@ -1,3 +1,10 @@\n+2016-11-25  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/78086\n+\t* coverage.c (build_init_ctor): Don't use priority {cd}tors if\n+\tnot supported by a target.  Set priority to 100 if possible.\n+\t(build_gcov_exit_decl): Likewise.\n+\n 2016-11-25  Richard Biener  <rguenther@suse.de>\n \n \tPR ipa/78515"}, {"sha": "4167e26b20811dafbdbc06359ea6b65005328654", "filename": "gcc/coverage.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78681a7b92549b1daa579aeeb78bb498aa167040/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78681a7b92549b1daa579aeeb78bb498aa167040/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=78681a7b92549b1daa579aeeb78bb498aa167040", "patch": "@@ -1056,8 +1056,10 @@ build_init_ctor (tree gcov_info_type)\n   stmt = build_call_expr (init_fn, 1, stmt);\n   append_to_statement_list (stmt, &ctor);\n \n-  /* Generate a constructor to run it (with priority 99).  */\n-  cgraph_build_static_cdtor ('I', ctor, DEFAULT_INIT_PRIORITY - 1);\n+  /* Generate a constructor to run it.  */\n+  int priority = SUPPORTS_INIT_PRIORITY\n+    ? MAX_RESERVED_INIT_PRIORITY: DEFAULT_INIT_PRIORITY;\n+  cgraph_build_static_cdtor ('I', ctor, priority);\n }\n \n /* Generate the destructor function to call __gcov_exit.  */\n@@ -1078,8 +1080,11 @@ build_gcov_exit_decl (void)\n   tree stmt = build_call_expr (init_fn, 0);\n   append_to_statement_list (stmt, &dtor);\n \n-  /* Generate a destructor to run it (with priority 99).  */\n-  cgraph_build_static_cdtor ('D', dtor, MAX_RESERVED_INIT_PRIORITY - 1);\n+  /* Generate a destructor to run it.  */\n+  int priority = SUPPORTS_INIT_PRIORITY\n+    ? MAX_RESERVED_INIT_PRIORITY: DEFAULT_INIT_PRIORITY;\n+\n+  cgraph_build_static_cdtor ('D', dtor, priority);\n }\n \n /* Create the gcov_info types and object.  Generate the constructor"}, {"sha": "25663cefe0a0b0636a40d0e1e0cb6b8eee2ce672", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78681a7b92549b1daa579aeeb78bb498aa167040/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78681a7b92549b1daa579aeeb78bb498aa167040/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=78681a7b92549b1daa579aeeb78bb498aa167040", "patch": "@@ -1,3 +1,9 @@\n+2016-11-25  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/78086\n+\t* g++.dg/gcov/pr16855.C: Clean up the test case.\n+\t* g++.dg/gcov/pr16855-priority.C: New test.\n+\n 2016-11-25  Richard Biener  <rguenther@suse.de>\n \n \tPR ipa/78515"}, {"sha": "7e395652a63199be3c182f186dfa5e0a56f235b9", "filename": "gcc/testsuite/g++.dg/gcov/pr16855-priority.C", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78681a7b92549b1daa579aeeb78bb498aa167040/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fpr16855-priority.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78681a7b92549b1daa579aeeb78bb498aa167040/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fpr16855-priority.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fpr16855-priority.C?ref=78681a7b92549b1daa579aeeb78bb498aa167040", "patch": "@@ -0,0 +1,79 @@\n+/* { dg-options \"-fprofile-arcs -ftest-coverage\" } */\n+/* { dg-do run { target native } } */\n+/* { dg-require-effective-target init_priority } */\n+\n+#include <stdlib.h>\n+#include <stdio.h>\n+\n+int a;\n+\n+void\n+foo ()\n+{\n+  fprintf (stderr, \"In foo\\n\");\n+  a = 123; /* count(1) */\n+}\n+\n+using namespace std;\n+class Test\n+{\n+public:\n+  Test (void) { fprintf (stderr, \"In Test::Test\\n\"); /* count(1) */ }\n+  ~Test (void) { fprintf (stderr, \"In Test::~Test\\n\"); /* count(1) */ }\n+} T1;\n+\n+void\n+uncalled (void)\n+{\n+  fprintf (stderr, \"In uncalled\\n\"); /* count(#####) */\n+}\n+\n+int\n+main (void)\n+{\n+  atexit (&foo);\n+  fprintf (stderr, \"In main\\n\"); /* count(1) */\n+  return 0;\n+}\n+\n+static void __attribute__ ((constructor)) ctor_default ()\n+{\n+  fprintf (stderr, \"in constructor(())\\n\"); /* count(1) */\n+}\n+\n+static void __attribute__ ((constructor ((101)))) ctor_100 ()\n+{\n+  fprintf (stderr, \"in constructor((101))\\n\"); /* count(1) */\n+}\n+\n+static void __attribute__ ((constructor ((500)))) ctor_500 ()\n+{\n+  fprintf (stderr, \"in constructor((500))\\n\"); /* count(1) */\n+}\n+\n+static void __attribute__ ((constructor ((65535)))) ctor_65535 ()\n+{\n+  fprintf (stderr, \"in constructor((65535))\\n\"); /* count(1) */\n+}\n+\n+static void __attribute__ ((destructor)) dtor_default ()\n+{\n+  fprintf (stderr, \"in destructor(())\\n\"); /* count(1) */\n+}\n+\n+static void __attribute__ ((destructor ((101)))) dtor_100 ()\n+{\n+  fprintf (stderr, \"in destructor((101))\\n\"); /* count(1) */\n+}\n+\n+static void __attribute__ ((destructor ((500)))) dtor_500 ()\n+{\n+  fprintf (stderr, \"in destructor((500))\\n\"); /* count(1) */\n+}\n+\n+static void __attribute__ ((destructor ((65535)))) dtor_65535 ()\n+{\n+  fprintf (stderr, \"in destructor((65535))\\n\"); /* count(1) */\n+}\n+\n+/* { dg-final { run-gcov branches { -b pr16855-priority.C } } } */"}, {"sha": "d7aa8a4f72cb01774464ebd534422273a0b566c9", "filename": "gcc/testsuite/g++.dg/gcov/pr16855.C", "status": "modified", "additions": 28, "deletions": 27, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78681a7b92549b1daa579aeeb78bb498aa167040/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fpr16855.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78681a7b92549b1daa579aeeb78bb498aa167040/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fpr16855.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fpr16855.C?ref=78681a7b92549b1daa579aeeb78bb498aa167040", "patch": "@@ -2,46 +2,47 @@\n /* { dg-do run { target native } } */\n \n #include <stdlib.h>\n+#include <stdio.h>\n \n int a;\n \n-void foo()\n+void\n+foo ()\n {\n-  a = 123;\t\t\t\t\t\t  /* count(1) */\n+  fprintf (stderr, \"In foo\\n\");\n+  a = 123; /* count(1) */\n }\n \n-#include <iostream>\n using namespace std;\n-class Test {\n+class Test\n+{\n public:\n-\tTest(void){\n-\tcout<< \"In Test ctor\" << endl;\t\t\t  /* count(1) */\n-\t}\n-\t~Test(void){\n-\tcout<< \"In Test dtor\" << endl;\t\t\t  /* count(1) */\n-\t}\n-}T1;\n-\n-void uncalled(void){\n-\tcout<< \"In uncalled\" << endl;\t\t\t  /* count(#####) */\n-}\n-int main(void){\n-atexit (&foo);\n-// Test T2;\n-cout<< \"In main\" << endl;\t\t\t\t  /* count(1) */\n-return 0;\n+  Test (void) { fprintf (stderr, \"In Test::Test\\n\"); /* count(1) */ }\n+  ~Test (void) { fprintf (stderr, \"In Test::~Test\\n\"); /* count(1) */ }\n+} T1;\n+\n+void\n+uncalled (void)\n+{\n+  fprintf (stderr, \"In uncalled\\n\"); /* count(#####) */\n }\n \n-#include <stdio.h>\n+int\n+main (void)\n+{\n+  atexit (&foo);\n+  fprintf (stderr, \"In main\\n\"); /* count(1) */\n+  return 0;\n+}\n \n-__attribute__((constructor))\n-static void construct_navigationBarImages() {\n-  fprintf (stderr,  \"((construct_navigationBarImages))\"); /* count(1) */\n+static void __attribute__ ((constructor)) ctor_default ()\n+{\n+  fprintf (stderr, \"in constructor(())\\n\"); /* count(1) */\n }\n \n-__attribute__((destructor))\n-static void destroy_navigationBarImages() {\n-  fprintf (stderr,  \"((destroy_navigationBarImages))\");\t  /* count(1) */\n+static void __attribute__ ((destructor)) dtor_default ()\n+{\n+  fprintf (stderr, \"in destructor(())\\n\"); /* count(1) */\n }\n \n /* { dg-final { run-gcov branches { -b pr16855.C } } } */"}]}