{"sha": "e7041633a5b9ac8eb09b92de5321bf3184a7b98f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcwNDE2MzNhNWI5YWM4ZWIwOWI5MmRlNTMyMWJmMzE4NGE3Yjk4Zg==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-06-27T20:00:50Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-06-27T20:00:50Z"}, "message": "gfortran.h (gfc_code): Split backend_decl field into cycle_label and exit_label fields.\n\n\t* gfortran.h (gfc_code): Split backend_decl field into cycle_label\n\tand exit_label fields.\n\t* trans-openmp.c (gfc_trans_omp_do): Assign to new fields\n\tindividually.\n\t* trans-stmt.c (gfc_trans_simple_do): Likewise.\n\t(gfc_trans_do): Likewise.\n\t(gfc_trans_do_while): Likewise.\n\t(gfc_trans_cycle): Use cycle_label directly.\n\t(gfc_trans_exit): Use exit_label directly.\n\nFrom-SVN: r161473", "tree": {"sha": "fa9685b9314b38bc39469f771fb889342e130b2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa9685b9314b38bc39469f771fb889342e130b2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7041633a5b9ac8eb09b92de5321bf3184a7b98f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7041633a5b9ac8eb09b92de5321bf3184a7b98f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7041633a5b9ac8eb09b92de5321bf3184a7b98f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7041633a5b9ac8eb09b92de5321bf3184a7b98f/comments", "author": null, "committer": null, "parents": [{"sha": "de8f4b07c03ffb0db0562f462be066684af2f0b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de8f4b07c03ffb0db0562f462be066684af2f0b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de8f4b07c03ffb0db0562f462be066684af2f0b7"}], "stats": {"total": 44, "additions": 27, "deletions": 17}, "files": [{"sha": "d58299dc4d59abb659d739f096df5e8870afd86f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7041633a5b9ac8eb09b92de5321bf3184a7b98f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7041633a5b9ac8eb09b92de5321bf3184a7b98f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e7041633a5b9ac8eb09b92de5321bf3184a7b98f", "patch": "@@ -1,3 +1,15 @@\n+2010-06-27  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* gfortran.h (gfc_code): Split backend_decl field into cycle_label\n+\tand exit_label fields.\n+\t* trans-openmp.c (gfc_trans_omp_do): Assign to new fields\n+\tindividually.\n+\t* trans-stmt.c (gfc_trans_simple_do): Likewise.\n+\t(gfc_trans_do): Likewise.\n+\t(gfc_trans_do_while): Likewise.\n+\t(gfc_trans_cycle): Use cycle_label directly.\n+\t(gfc_trans_exit): Use exit_label directly.\n+\n 2010-06-27  Daniel Kraft  <d@domob.eu>\n \n \t* dump-parse-tree.c (show_symbol): Dump target-expression for"}, {"sha": "0c96bf40e6e1f79817bd87f0f7da596a095d3b87", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7041633a5b9ac8eb09b92de5321bf3184a7b98f/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7041633a5b9ac8eb09b92de5321bf3184a7b98f/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=e7041633a5b9ac8eb09b92de5321bf3184a7b98f", "patch": "@@ -2077,9 +2077,9 @@ typedef struct gfc_code\n   }\n   ext;\t\t/* Points to additional structures required by statement */\n \n-  /* Backend_decl is used for cycle and break labels in do loops, and\n-     probably for other constructs as well, once we translate them.  */\n-  tree backend_decl;\n+  /* Cycle and break labels in do loops.  */\n+  tree cycle_label;\n+  tree exit_label;\n }\n gfc_code;\n "}, {"sha": "a5d5ba133e7aee3e0db4a770c3765e5e6a6d401a", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7041633a5b9ac8eb09b92de5321bf3184a7b98f/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7041633a5b9ac8eb09b92de5321bf3184a7b98f/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=e7041633a5b9ac8eb09b92de5321bf3184a7b98f", "patch": "@@ -1357,12 +1357,10 @@ gfc_trans_omp_do (gfc_code *code, stmtblock_t *pblock,\n      present for this loop.  */\n   cycle_label = gfc_build_label_decl (NULL_TREE);\n \n-  /* Put these labels where they can be found later. We put the\n-     labels in a TREE_LIST node (because TREE_CHAIN is already\n-     used). cycle_label goes in TREE_PURPOSE (backend_decl), exit\n-     label in TREE_VALUE (backend_decl).  */\n+  /* Put these labels where they can be found later.  */\n \n-  code->block->backend_decl = tree_cons (cycle_label, NULL, NULL);\n+  code->block->cycle_label = cycle_label;\n+  code->block->exit_label = NULL_TREE;\n \n   /* Main loop body.  */\n   tmp = gfc_trans_omp_code (code->block->next, true);"}, {"sha": "6fa84b9169443ae8137e431dc3585ca86928d01e", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7041633a5b9ac8eb09b92de5321bf3184a7b98f/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7041633a5b9ac8eb09b92de5321bf3184a7b98f/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=e7041633a5b9ac8eb09b92de5321bf3184a7b98f", "patch": "@@ -928,7 +928,8 @@ gfc_trans_simple_do (gfc_code * code, stmtblock_t *pblock, tree dovar,\n   exit_label = gfc_build_label_decl (NULL_TREE);\n \n   /* Put the labels where they can be found later. See gfc_trans_do().  */\n-  code->block->backend_decl = tree_cons (cycle_label, exit_label, NULL);\n+  code->block->cycle_label = cycle_label;\n+  code->block->exit_label = exit_label;\n \n   /* Loop body.  */\n   gfc_start_block (&body);\n@@ -1196,12 +1197,10 @@ gfc_trans_do (gfc_code * code, tree exit_cond)\n   /* Loop body.  */\n   gfc_start_block (&body);\n \n-  /* Put these labels where they can be found later. We put the\n-     labels in a TREE_LIST node (because TREE_CHAIN is already\n-     used). cycle_label goes in TREE_PURPOSE (backend_decl), exit\n-     label in TREE_VALUE (backend_decl).  */\n+  /* Put these labels where they can be found later.  */\n \n-  code->block->backend_decl = tree_cons (cycle_label, exit_label, NULL);\n+  code->block->cycle_label = cycle_label;\n+  code->block->exit_label = exit_label;\n \n   /* Main loop body.  */\n   tmp = gfc_trans_code_cond (code->block->next, exit_cond);\n@@ -1305,7 +1304,8 @@ gfc_trans_do_while (gfc_code * code)\n   exit_label = gfc_build_label_decl (NULL_TREE);\n \n   /* Put the labels where they can be found later. See gfc_trans_do().  */\n-  code->block->backend_decl = tree_cons (cycle_label, exit_label, NULL);\n+  code->block->cycle_label = cycle_label;\n+  code->block->exit_label = exit_label;\n \n   /* Create a GIMPLE version of the exit condition.  */\n   gfc_init_se (&cond, NULL);\n@@ -4080,7 +4080,7 @@ gfc_trans_cycle (gfc_code * code)\n {\n   tree cycle_label;\n \n-  cycle_label = TREE_PURPOSE (code->ext.whichloop->backend_decl);\n+  cycle_label = code->ext.whichloop->cycle_label;\n   TREE_USED (cycle_label) = 1;\n   return build1_v (GOTO_EXPR, cycle_label);\n }\n@@ -4095,7 +4095,7 @@ gfc_trans_exit (gfc_code * code)\n {\n   tree exit_label;\n \n-  exit_label = TREE_VALUE (code->ext.whichloop->backend_decl);\n+  exit_label = code->ext.whichloop->exit_label;\n   TREE_USED (exit_label) = 1;\n   return build1_v (GOTO_EXPR, exit_label);\n }"}]}