{"sha": "0da912fc4535110c8568bfd331d05c12fd7056dd", "node_id": "C_kwDOANBUbNoAKDBkYTkxMmZjNDUzNTExMGM4NTY4YmZkMzMxZDA1YzEyZmQ3MDU2ZGQ", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-07-05T14:36:09Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-07-07T08:53:03Z"}, "message": "ast: Add ResolveGenericArgs resolver\n\nThis resolver replaces the helper function\n`ResolveType::type_resolve_generic_args` and will later benefit from\nmore functionality such as generic disambiguation", "tree": {"sha": "08c3c9420c8c55d100b3913f1edd86ffc15d75d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08c3c9420c8c55d100b3913f1edd86ffc15d75d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0da912fc4535110c8568bfd331d05c12fd7056dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0da912fc4535110c8568bfd331d05c12fd7056dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0da912fc4535110c8568bfd331d05c12fd7056dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0da912fc4535110c8568bfd331d05c12fd7056dd/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aafb11016d0c3afb8c5aa22c398f192235159971", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aafb11016d0c3afb8c5aa22c398f192235159971", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aafb11016d0c3afb8c5aa22c398f192235159971"}], "stats": {"total": 37, "additions": 20, "deletions": 17}, "files": [{"sha": "2553c8546410fc25d7b218a8af001059f46f1778", "filename": "gcc/rust/resolve/rust-ast-resolve-expr.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da912fc4535110c8568bfd331d05c12fd7056dd/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da912fc4535110c8568bfd331d05c12fd7056dd/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.cc?ref=0da912fc4535110c8568bfd331d05c12fd7056dd", "patch": "@@ -87,7 +87,7 @@ ResolveExpr::visit (AST::MethodCallExpr &expr)\n   if (expr.get_method_name ().has_generic_args ())\n     {\n       AST::GenericArgs &args = expr.get_method_name ().get_generic_args ();\n-      ResolveType::type_resolve_generic_args (args);\n+      ResolveGenericArgs::go (args);\n     }\n \n   auto const &in_params = expr.get_params ();"}, {"sha": "a03bfb435b5869e48be90f387f94fc31ffe92527", "filename": "gcc/rust/resolve/rust-ast-resolve-path.cc", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da912fc4535110c8568bfd331d05c12fd7056dd/gcc%2Frust%2Fresolve%2Frust-ast-resolve-path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da912fc4535110c8568bfd331d05c12fd7056dd/gcc%2Frust%2Fresolve%2Frust-ast-resolve-path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-path.cc?ref=0da912fc4535110c8568bfd331d05c12fd7056dd", "patch": "@@ -99,9 +99,7 @@ ResolvePath::resolve_path (AST::PathInExpression *expr)\n \n       // resolve any generic args\n       if (segment.has_generic_args ())\n-\t{\n-\t  ResolveType::type_resolve_generic_args (segment.get_generic_args ());\n-\t}\n+\tResolveGenericArgs::go (segment.get_generic_args ());\n \n       // logic is awkward here there are a few cases\n       //\n@@ -252,9 +250,7 @@ ResolvePath::resolve_path (AST::QualifiedPathInExpression *expr)\n       // the job of the type system to figure it out but we can resolve any\n       // generic arguments used\n       if (segment.has_generic_args ())\n-\t{\n-\t  ResolveType::type_resolve_generic_args (segment.get_generic_args ());\n-\t}\n+\tResolveGenericArgs::go (segment.get_generic_args ());\n     }\n }\n "}, {"sha": "910468ed729034904be021ae52c33cdd2402ee93", "filename": "gcc/rust/resolve/rust-ast-resolve-type.cc", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da912fc4535110c8568bfd331d05c12fd7056dd/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da912fc4535110c8568bfd331d05c12fd7056dd/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.cc?ref=0da912fc4535110c8568bfd331d05c12fd7056dd", "patch": "@@ -140,9 +140,7 @@ ResolveRelativeTypePath::go (AST::TypePath &path, NodeId &resolved_node_id)\n \t    AST::TypePathSegmentGeneric *s\n \t      = static_cast<AST::TypePathSegmentGeneric *> (segment.get ());\n \t    if (s->has_generic_args ())\n-\t      {\n-\t\tResolveType::type_resolve_generic_args (s->get_generic_args ());\n-\t      }\n+\t      ResolveGenericArgs::go (s->get_generic_args ());\n \t  }\n \t  break;\n \n@@ -334,7 +332,7 @@ ResolveRelativeQualTypePath::visit (AST::TypePathSegmentGeneric &seg)\n       return;\n     }\n \n-  ResolveType::type_resolve_generic_args (seg.get_generic_args ());\n+  ResolveGenericArgs::go (seg.get_generic_args ());\n }\n \n void\n@@ -471,5 +469,12 @@ ResolveTypeToCanonicalPath::ResolveTypeToCanonicalPath ()\n   : ResolverBase (), result (CanonicalPath::create_empty ())\n {}\n \n+void\n+ResolveGenericArgs::go (AST::GenericArgs &args)\n+{\n+  for (auto &gt : args.get_type_args ())\n+    ResolveType::go (gt.get ());\n+}\n+\n } // namespace Resolver\n } // namespace Rust"}, {"sha": "f933d1ec917d61e5fc26951ff83891cde1e2b11e", "filename": "gcc/rust/resolve/rust-ast-resolve-type.h", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da912fc4535110c8568bfd331d05c12fd7056dd/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da912fc4535110c8568bfd331d05c12fd7056dd/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.h?ref=0da912fc4535110c8568bfd331d05c12fd7056dd", "patch": "@@ -64,12 +64,6 @@ class ResolveType : public ResolverBase\n     return resolver.resolved_node;\n   }\n \n-  static void type_resolve_generic_args (AST::GenericArgs &args)\n-  {\n-    for (auto &gt : args.get_type_args ())\n-      ResolveType::go (gt.get ());\n-  }\n-\n   void visit (AST::BareFunctionType &fntype) override\n   {\n     for (auto &param : fntype.get_function_params ())\n@@ -255,6 +249,14 @@ class ResolveTypeToCanonicalPath : public ResolverBase\n   CanonicalPath result;\n };\n \n+class ResolveGenericArgs : public ResolverBase\n+{\n+  using Rust::Resolver::ResolverBase::visit;\n+\n+public:\n+  static void go (AST::GenericArgs &generic_args);\n+};\n+\n } // namespace Resolver\n } // namespace Rust\n "}]}