{"sha": "0213a547b0ec72dbd0ea3e98181c9ebc20275a92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIxM2E1NDdiMGVjNzJkYmQwZWEzZTk4MTgxYzllYmMyMDI3NWE5Mg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-10-11T17:45:29Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-10-11T17:45:29Z"}, "message": "compiler: accept integral float constants as string indices.\n\nFrom-SVN: r203452", "tree": {"sha": "1c6584a26684533c45df878420d1189e72daa251", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c6584a26684533c45df878420d1189e72daa251"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0213a547b0ec72dbd0ea3e98181c9ebc20275a92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0213a547b0ec72dbd0ea3e98181c9ebc20275a92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0213a547b0ec72dbd0ea3e98181c9ebc20275a92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0213a547b0ec72dbd0ea3e98181c9ebc20275a92/comments", "author": null, "committer": null, "parents": [{"sha": "8d28e3fc183b10b3c74240d87ec375233e31f3e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d28e3fc183b10b3c74240d87ec375233e31f3e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d28e3fc183b10b3c74240d87ec375233e31f3e7"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "06c34297a5377ff2d244a5223c1343141595bce2", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0213a547b0ec72dbd0ea3e98181c9ebc20275a92/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0213a547b0ec72dbd0ea3e98181c9ebc20275a92/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=0213a547b0ec72dbd0ea3e98181c9ebc20275a92", "patch": "@@ -10888,11 +10888,20 @@ String_index_expression::do_determine_type(const Type_context*)\n void\n String_index_expression::do_check_types(Gogo*)\n {\n-  if (this->start_->type()->integer_type() == NULL)\n+  Numeric_constant nc;\n+  unsigned long v;\n+  if (this->start_->type()->integer_type() == NULL\n+      && !this->start_->type()->is_error()\n+      && (!this->start_->numeric_constant_value(&nc)\n+\t  || nc.to_unsigned_long(&v) == Numeric_constant::NC_UL_NOTINT))\n     this->report_error(_(\"index must be integer\"));\n   if (this->end_ != NULL\n       && this->end_->type()->integer_type() == NULL\n-      && !this->end_->is_nil_expression())\n+      && !this->end_->type()->is_error()\n+      && !this->end_->is_nil_expression()\n+      && !this->end_->is_error_expression()\n+      && (!this->end_->numeric_constant_value(&nc)\n+\t  || nc.to_unsigned_long(&v) == Numeric_constant::NC_UL_NOTINT))\n     this->report_error(_(\"slice end must be integer\"));\n \n   std::string sval;"}]}