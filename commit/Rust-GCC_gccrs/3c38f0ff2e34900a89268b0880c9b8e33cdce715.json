{"sha": "3c38f0ff2e34900a89268b0880c9b8e33cdce715", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MzOGYwZmYyZTM0OTAwYTg5MjY4YjA4ODBjOWI4ZTMzY2RjZTcxNQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2007-03-12T00:26:39Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2007-03-12T00:26:39Z"}, "message": "re PR c++/30328 (bit-field: unassemblable assembly code)\n\n\tPR c++/30328\n\t* semantics.c (finish_typeof): Use unlowered_expr_type.\n\t\n\tPR c++/30328\n\t* g++.dg/ext/bitfield1.C: New test.\n\n\tPR c++/31038\n\t* parser.c (cp_parser_postfix_expression): Disallow compound\n\tliterals in constant expressions.\n\n\tPR c++/31038\n\t* g++.dg/template/complit2.C: New test.\n\nFrom-SVN: r122829", "tree": {"sha": "e8f2a57a999cd544124fd9b8e1410f55c4e85e82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8f2a57a999cd544124fd9b8e1410f55c4e85e82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c38f0ff2e34900a89268b0880c9b8e33cdce715", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c38f0ff2e34900a89268b0880c9b8e33cdce715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c38f0ff2e34900a89268b0880c9b8e33cdce715", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c38f0ff2e34900a89268b0880c9b8e33cdce715/comments", "author": null, "committer": null, "parents": [{"sha": "efb84847dfc11e5fb694c984f5421562bcc200f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efb84847dfc11e5fb694c984f5421562bcc200f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efb84847dfc11e5fb694c984f5421562bcc200f8"}], "stats": {"total": 73, "additions": 72, "deletions": 1}, "files": [{"sha": "acc64352947e4f00f02d20b18bb5d2fbb20542b0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c38f0ff2e34900a89268b0880c9b8e33cdce715/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c38f0ff2e34900a89268b0880c9b8e33cdce715/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3c38f0ff2e34900a89268b0880c9b8e33cdce715", "patch": "@@ -1,3 +1,12 @@\n+2007-03-11  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/31038\n+\t* parser.c (cp_parser_postfix_expression): Disallow compound\n+\tliterals in constant expressions.\n+\n+\tPR c++/30328\n+\t* semantics.c (finish_typeof): Use unlowered_expr_type.\n+\t\n 2007-03-10  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/30274"}, {"sha": "54c7668a50d7efce920c5e62980d19361b593155", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c38f0ff2e34900a89268b0880c9b8e33cdce715/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c38f0ff2e34900a89268b0880c9b8e33cdce715/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=3c38f0ff2e34900a89268b0880c9b8e33cdce715", "patch": "@@ -4343,6 +4343,21 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p)\n \t\t   allowed in standard C++.  */\n \t\tif (pedantic)\n \t\t  pedwarn (\"ISO C++ forbids compound-literals\");\n+\t\t/* For simplicitly, we disallow compound literals in\n+\t\t   constant-expressions for simpliicitly.  We could\n+\t\t   allow compound literals of integer type, whose\n+\t\t   initializer was a constant, in constant\n+\t\t   expressions.  Permitting that usage, as a further\n+\t\t   extension, would not change the meaning of any\n+\t\t   currently accepted programs.  (Of course, as\n+\t\t   compound literals are not part of ISO C++, the\n+\t\t   standard has nothing to say.)  */\n+\t\tif (cp_parser_non_integral_constant_expression \n+\t\t    (parser, \"non-constant compound literals\"))\n+\t\t  {\n+\t\t    postfix_expression = error_mark_node;\n+\t\t    break;\n+\t\t  }\n \t\t/* Form the representation of the compound-literal.  */\n \t\tpostfix_expression\n \t\t  = finish_compound_literal (type, initializer_list);"}, {"sha": "e016b0a40dec0b28ab221784711ee2a6a62da8b3", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c38f0ff2e34900a89268b0880c9b8e33cdce715/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c38f0ff2e34900a89268b0880c9b8e33cdce715/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=3c38f0ff2e34900a89268b0880c9b8e33cdce715", "patch": "@@ -2927,7 +2927,7 @@ finish_typeof (tree expr)\n       return type;\n     }\n \n-  type = TREE_TYPE (expr);\n+  type = unlowered_expr_type (expr);\n \n   if (!type || type == unknown_type_node)\n     {"}, {"sha": "fb51c23ea0cba60f76df58f6c4f7391f21c764d6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c38f0ff2e34900a89268b0880c9b8e33cdce715/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c38f0ff2e34900a89268b0880c9b8e33cdce715/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3c38f0ff2e34900a89268b0880c9b8e33cdce715", "patch": "@@ -1,3 +1,11 @@\n+2007-03-11  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/31038\n+\t* g++.dg/template/complit2.C: New test.\n+\n+\tPR c++/30328\n+\t* g++.dg/ext/bitfield1.C: New test.\n+\n 2007-03-11  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/30883"}, {"sha": "25c90df4191b84c1d08cfd21fd0278c6d010c7f7", "filename": "gcc/testsuite/g++.dg/ext/bitfield1.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c38f0ff2e34900a89268b0880c9b8e33cdce715/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c38f0ff2e34900a89268b0880c9b8e33cdce715/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield1.C?ref=3c38f0ff2e34900a89268b0880c9b8e33cdce715", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/30328\n+// { dg-do link }\n+// { dg-options \"\" }\n+\n+struct S\n+{\n+  signed int a:17;\n+} x;\n+\n+typedef typeof (x.a) foo;\n+\n+template <class T>\n+T* inc(T* p) { return p+1; }\n+\n+int main ()\n+{\n+  foo x[2] = { 1,2 };\n+  int y[2] = { 1,2 };\n+  *inc(x);\n+  *inc(y);\n+  return 0;\n+}"}, {"sha": "cf3856d474e799bf4f8dee408df764ca4805937e", "filename": "gcc/testsuite/g++.dg/template/complit2.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c38f0ff2e34900a89268b0880c9b8e33cdce715/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcomplit2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c38f0ff2e34900a89268b0880c9b8e33cdce715/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcomplit2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcomplit2.C?ref=3c38f0ff2e34900a89268b0880c9b8e33cdce715", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/31038\n+// { dg-options \"\" }\n+\n+template<int> void foo()\n+{\n+  int i = (int) { 0 };\n+}\n+\n+template void foo<0>();\n+int f();\n+\n+template<int> void bar()\n+{\n+  int i = (int) { f() };\n+}\n+\n+template void bar<0>();"}]}