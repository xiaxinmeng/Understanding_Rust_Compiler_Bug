{"sha": "cf3b3080558eb84d79b0dfe73683c7d2b65bb3ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YzYjMwODA1NThlYjg0ZDc5YjBkZmU3MzY4M2M3ZDJiNjViYjNhYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-03-25T20:12:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-03-25T20:12:37Z"}, "message": "printf_fp.c (__quadmath_printf_fp): Use memcpy instead of mempcpy.\n\n\t* printf/printf_fp.c (__quadmath_printf_fp): Use memcpy instead of\n\tmempcpy.\n\nFrom-SVN: r171525", "tree": {"sha": "7a933efcb896ac336286893ac49db4f2df1ccd40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a933efcb896ac336286893ac49db4f2df1ccd40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf3b3080558eb84d79b0dfe73683c7d2b65bb3ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf3b3080558eb84d79b0dfe73683c7d2b65bb3ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf3b3080558eb84d79b0dfe73683c7d2b65bb3ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf3b3080558eb84d79b0dfe73683c7d2b65bb3ac/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7657ab90b46149b27703a397f3764ef9517eb988", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7657ab90b46149b27703a397f3764ef9517eb988", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7657ab90b46149b27703a397f3764ef9517eb988"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "942f955d34bff89a147f169ef4e94c47f8d3a906", "filename": "libquadmath/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf3b3080558eb84d79b0dfe73683c7d2b65bb3ac/libquadmath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf3b3080558eb84d79b0dfe73683c7d2b65bb3ac/libquadmath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FChangeLog?ref=cf3b3080558eb84d79b0dfe73683c7d2b65bb3ac", "patch": "@@ -1,3 +1,8 @@\n+2011-03-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* printf/printf_fp.c (__quadmath_printf_fp): Use memcpy instead of\n+\tmempcpy.\n+\n 2011-03-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR bootstrap/48135"}, {"sha": "eb663726da14fa3129f2cfc0caa3f381930c8058", "filename": "libquadmath/printf/printf_fp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf3b3080558eb84d79b0dfe73683c7d2b65bb3ac/libquadmath%2Fprintf%2Fprintf_fp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf3b3080558eb84d79b0dfe73683c7d2b65bb3ac/libquadmath%2Fprintf%2Fprintf_fp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fprintf%2Fprintf_fp.c?ref=cf3b3080558eb84d79b0dfe73683c7d2b65bb3ac", "patch": "@@ -1197,7 +1197,7 @@ __quadmath_printf_fp (struct __quadmath_printf_file *fp,\n \t    if (*copywc == decimalwc)\n \t      memcpy (cp, decimal, decimal_len), cp += decimal_len;\n \t    else if (*copywc == thousands_sepwc)\n-\t      mempcpy (cp, thousands_sep, thousands_sep_len), cp += thousands_sep_len;\n+\t      memcpy (cp, thousands_sep, thousands_sep_len), cp += thousands_sep_len;\n \t    else\n \t      *cp++ = (char) *copywc;\n \t}"}]}