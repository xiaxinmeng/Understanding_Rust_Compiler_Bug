{"sha": "cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RkOGYwMzFjN2VkZjBmY2JmNWYyMGJmNWZiZDE1MjZhNjQ0NjFkNQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-26T00:16:25Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-26T00:16:25Z"}, "message": "Daily bump.", "tree": {"sha": "b437047160371256c4a7da220a7e88f4a4bd9b4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b437047160371256c4a7da220a7e88f4a4bd9b4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5/comments", "author": null, "committer": null, "parents": [{"sha": "f46f899b4fa41ec889540c4a663feaa814b73d24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f46f899b4fa41ec889540c4a663feaa814b73d24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f46f899b4fa41ec889540c4a663feaa814b73d24"}], "stats": {"total": 213, "additions": 212, "deletions": 1}, "files": [{"sha": "d8144b2932ed9b899d2b3da2499bdf35eca6194b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5", "patch": "@@ -1,3 +1,88 @@\n+2020-09-25  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* doc/invoke.texi: Add -fno-ipa-modref to flags disabled by\n+\t-flive-patching.\n+\t* opts.c (control_options_for_live_patching): Disable ipa-modref.\n+\n+2020-09-25  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-modref.c (analyze_stmt): Fix return value for gimple_clobber.\n+\n+2020-09-25  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64-option-extensions.def (rng): Add\n+\tcpuinfo string.\n+\n+2020-09-25  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* config/arm/arm-cpus.in (neoverse-v1): Add FP16.\n+\n+2020-09-25  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/64636\n+\t* value-prof.c (stream_out_histogram_value): Allow negative\n+\tvalues for HIST_TYPE_IOR.\n+\n+2020-09-25  Tom de Vries  <tdevries@suse.de>\n+\n+\t* config/nvptx/nvptx.c (nvptx_assemble_integer, nvptx_print_operand):\n+\tUse gcc_fallthrough ().\n+\n+2020-09-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/96814\n+\t* expr.c (store_constructor): Handle VECTOR_BOOLEAN_TYPE_P\n+\tCTORs correctly.\n+\n+2020-09-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/97207\n+\t* vec.h (auto_vec<T>::operator=(auto_vec<T>&&)): Implement.\n+\n+2020-09-25  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/arm/arm-protos.h (arm_mve_mode_and_operands_type_check):\n+\tDelete.\n+\t* config/arm/arm.c (arm_coproc_mem_operand_wb): Use a scale factor\n+\tof 2 rather than 4 for 16-bit modes.\n+\t(arm_mve_mode_and_operands_type_check): Delete.\n+\t* config/arm/constraints.md (Uj): Allow writeback for Neon,\n+\tbut continue to disallow it for MVE.\n+\t* config/arm/arm.md (*arm32_mov<HFBF:mode>): Add !TARGET_HAVE_MVE.\n+\t* config/arm/vfp.md (*mov_load_vfp_hf16, *mov_store_vfp_hf16): Fold\n+\tback into...\n+\t(*mov<mode>_vfp_<mode>16): ...here but use Uj for the FPR memory\n+\tconstraints.  Use for base MVE too.\n+\n+2020-09-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/97199\n+\t* tree-if-conv.c (combine_blocks): Remove edges only\n+\tafter looking at virtual PHI args.\n+\n+2020-09-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* omp-low.c (scan_omp_1_stmt): Don't call scan_omp_simd for\n+\tcollapse > 1 loops as simt doesn't support collapsed loops yet.\n+\t* omp-expand.c (expand_omp_for_init_counts, expand_omp_for_init_vars):\n+\tSmall tweaks to function comment.\n+\t(expand_omp_simd): Rewritten collapse > 1 support to only attempt\n+\tto vectorize the innermost loop and emit set of outer loops around it.\n+\tFor non-composite simd with collapse > 1 without broken loop don't\n+\teven try to compute number of iterations first.  Add support for\n+\tnon-rectangular simd loops.\n+\t(expand_omp_for): Don't sorry_at on non-rectangular simd loops.\n+\n+2020-09-25  Martin Liska  <mliska@suse.cz>\n+\n+\t* cgraph.c (cgraph_edge::debug): New.\n+\t* cgraph.h (cgraph_edge::debug): New.\n+\n+2020-09-25  Martin Liska  <mliska@suse.cz>\n+\n+\t* cgraph.c (cgraph_node::dump): Always print space at the end\n+\tof a message.  Remove one extra space.\n+\n 2020-09-24  Alex Coplan  <alex.coplan@arm.com>\n \n \t* config/arm/arm-cpus.in (neoverse-n2): New."}, {"sha": "bfdd19d304c5f50a71a0efda170a90024730327d", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5", "patch": "@@ -1 +1 @@\n-20200925\n+20200926"}, {"sha": "04f63a4dcb439d1b0af5d2f185aa15d482243f42", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5", "patch": "@@ -1,3 +1,69 @@\n+2020-09-25  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* cp-tree.h (duplicate_decls): Replace 'is_friend' with 'hiding'\n+\tand add 'was_hidden'.\n+\t* name-lookup.h (pushdecl_namespace_level): Replace 'is_friend'\n+\twith 'hiding'.\n+\t(pushdecl): Likewise.\n+\t(pushdecl_top_level): Drop is_friend parm.\n+\t* decl.c (check_no_redeclaration_friend_default_args): Rename parm\n+\tolddelc_hidden_p.\n+\t(duplicate_decls): Replace 'is_friend' with 'hiding'\n+\tand 'was_hidden'.  Do minimal adjustments in body.\n+\t(cxx_builtin_function): Pass 'hiding' to pushdecl.\n+\t* friend.c (do_friend): Pass 'hiding' to pushdecl.\n+\t* name-lookup.c (supplement_binding_1): Drop defaulted arg to\n+\tduplicate_decls.\n+\t(update_binding): Replace 'is_friend' with 'hiding'.  Drop\n+\tdefaulted arg to duplicate_decls.\n+\t(do_pushdecl): Replace 'is_friend' with 'hiding'.  Assert no\n+\tsurprise hidhing.  Adjust duplicate_decls calls to inform of old\n+\tdecl's hiddennes.\n+\t(pushdecl): Replace 'is_friend' with 'hiding'.\n+\t(set_identifier_type_value_with_scope): Adjust update_binding\n+\tcall.\n+\t(do_pushdecl_with_scope): Replace 'is_friend' with 'hiding'.\n+\t(pushdecl_outermost_localscope): Drop default arg to\n+\tdo_pushdecl_with_scope.\n+\t(pushdecl_namespace_level): Replace 'is_friend' with 'hiding'.\n+\t(pushdecl_top_level): Drop is_friend parm.\n+\t* pt.c (register_specialization): Comment duplicate_decls call\n+\targs.\n+\t(push_template_decl): Commont pushdecl_namespace_level.\n+\t(tsubst_friend_function, tsubst_friend_class): Likewise.\n+\n+2020-09-25  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* name-lookup.h (enum tag_scope): Replace with ...\n+\t(enum class TAG_how): ... this.  Add HIDDEN_FRIEND value.\n+\t(lookup_type_scope): Replace with ...\n+\t(lookup_elaborated_type): ... this.\n+\t(pushtag): Use TAG_how, not tag_scope.\n+\t* cp-tree.h (xref_tag): Parameter is TAG_how, not tag_scope.\n+\t* decl.c (lookup_and_check_tag): Likewise.  Adjust.\n+\t(xref_tag_1, xref_tag): Likewise. adjust.\n+\t(start_enum): Adjust lookup_and_check_tag call.\n+\t* name-lookup.c (lookup_type_scope_1): Rename to ...\n+\t(lookup_elaborated_type_1) ... here. Use TAG_how, not tag_scope.\n+\t(lookup_type_scope): Rename to ...\n+\t(lookup_elaborated_type): ... here.  Use TAG_how, not tag_scope.\n+\t(do_pushtag): Use TAG_how, not tag_scope.  Adjust.\n+\t(pushtag): Likewise.\n+\t* parser.c (cp_parser_elaborated_type_specifier): Adjust.\n+\t(cp_parser_class_head): Likewise.\n+\n+2020-09-25  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* cp-tree.h (DECL_BUILTIN_P): New.\n+\t* decl.c (duplicate_decls): Use it.  Do not treat omp-udr as a\n+\tbuiltin.\n+\t* name-lookup.c (anticipated_builtin): Use it.\n+\t(set_decl_context_in_fn): Function-scope OMP UDRs have function context.\n+\t(do_nonmember_using_decl): Use DECL_BUILTIN_P.\n+\t* parser.c (cp_parser_omp_declare_reduction): Function-scope OMP\n+\tUDRs have function context.  Assert we never find a valid duplicate.\n+\t* pt.c (tsubst_expr): Function-scope OMP UDRs have function context.\n+\n 2020-09-24  Nathan Sidwell  <nathan@acm.org>\n \n \t* cp-tree.h (duplicate_decls): Default is_friend to false."}, {"sha": "64a0debb86f594a4dddf7c5eb6716f97a8102d0a", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5", "patch": "@@ -1,3 +1,8 @@\n+2020-09-25  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* objcp-decl.c (objcp_start_struct): Use TAG_how not tag_scope.\n+\t(objcp_xref_tag): Likewise.\n+\n 2020-09-24  Nathan Sidwell  <nathan@acm.org>\n \n \t* objcp-decl.c (objcp_start_struct): Drop default args to"}, {"sha": "df23a0953d801cefb7da9a14667bd9e6887bd7d1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5", "patch": "@@ -1,3 +1,45 @@\n+2020-09-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/96814\n+\t* gcc.target/i386/pr96814.c: New testcase.\n+\n+2020-09-25  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/arm/mve/intrinsics/mve-vldstr16-no-writeback.c: Allow\n+\tthe store to use GPRs instead of FPRs.  Add scan-assembler-nots\n+\tfor writeback.\n+\t* gcc.target/arm/armv8_1m-fp16-move-1.c: New test.\n+\t* gcc.target/arm/armv8_1m-fp32-move-1.c: Likewise.\n+\t* gcc.target/arm/armv8_1m-fp64-move-1.c: Likewise.\n+\n+2020-09-25  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\tPR target/71233\n+\t* gcc.target/aarch64/advsimd-intrinsics/vtrn_half.c: Remove\n+\tdeclarations of vector, vector2, vector_res for float64x2 type.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vuzp_half.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vzip_half.c: Likewise.\n+\n+2020-09-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR testsuite/97204\n+\t* gcc.target/i386/sse2-mmx-pinsrw.c: Fix.\n+\n+2020-09-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/vect/vect-simd-17.c: New test.\n+\n+2020-09-25  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gcc.dg/analyzer/pr93355-localealias.c: Require effective target\n+\talloca.\n+\n+2020-09-25  Tom de Vries  <tdevries@suse.de>\n+\n+\t* lib/target-supports.exp (check_effective_target_ident_directive): New proc.\n+\t* c-c++-common/ident-1b.c: Require effective target ident_directive.\n+\t* c-c++-common/ident-2b.c: Same.\n+\n 2020-09-24  Nathan Sidwell  <nathan@acm.org>\n \n \t* g++.dg/template/local-var1.C: New."}, {"sha": "bf9671ad3a6181e6341bbf85b1ca09ad93ca1e82", "filename": "libcc1/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5/libcc1%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5/libcc1%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FChangeLog?ref=cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5", "patch": "@@ -1,3 +1,7 @@\n+2020-09-25  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* libcp1plugin.cc (supplement_binding): Use DECL_BULTIN_P.\n+\n 2020-09-24  Nathan Sidwell  <nathan@acm.org>\n \n \t* libcp1plugin.cc (supplement_binding): Drop default args to"}, {"sha": "e53507862840bf3f623d363d79ffe6d9eeb77d19", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5", "patch": "@@ -1,3 +1,7 @@\n+2020-09-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/libgomp.c/loop-25.c: New test.\n+\n 2020-09-22  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/95654"}, {"sha": "2e45a6d47cfe09cbd6d60ffc6f406f0897171c07", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cdd8f031c7edf0fcbf5f20bf5fbd1526a64461d5", "patch": "@@ -1,3 +1,8 @@\n+2020-09-25  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* libsupc++/Makefile.am: Remove redundant -std=gnu++1z flags.\n+\t* libsupc++/Makefile.in: Regenerate.\n+\n 2020-09-24  Antony Polukhin  <antoshkka@gmail.com>\n \n \tPR libstdc++/71579"}]}