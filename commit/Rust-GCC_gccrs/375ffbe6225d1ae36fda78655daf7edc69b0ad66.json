{"sha": "375ffbe6225d1ae36fda78655daf7edc69b0ad66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc1ZmZiZTYyMjVkMWFlMzZmZGE3ODY1NWRhZjdlZGM2OWIwYWQ2Ng==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-04-01T20:45:19Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-04-01T20:45:19Z"}, "message": "sparc.c (input_operand): Accept bare CONSTANT_P_RTX operands.\n\n\t* config/sparc/sparc.c (input_operand): Accept bare\n\tCONSTANT_P_RTX operands.\n\nFrom-SVN: r65143", "tree": {"sha": "7bce62cf7c83fbd3092e85503cb0c15d8e4727ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bce62cf7c83fbd3092e85503cb0c15d8e4727ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/375ffbe6225d1ae36fda78655daf7edc69b0ad66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375ffbe6225d1ae36fda78655daf7edc69b0ad66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/375ffbe6225d1ae36fda78655daf7edc69b0ad66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375ffbe6225d1ae36fda78655daf7edc69b0ad66/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "28ea4c880db02d9390106efcff91da797c11ed49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28ea4c880db02d9390106efcff91da797c11ed49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28ea4c880db02d9390106efcff91da797c11ed49"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "9410ca539a17c10f4a213960b0548baecec90b4b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375ffbe6225d1ae36fda78655daf7edc69b0ad66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375ffbe6225d1ae36fda78655daf7edc69b0ad66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=375ffbe6225d1ae36fda78655daf7edc69b0ad66", "patch": "@@ -1,3 +1,8 @@\n+2003-04-01  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* config/sparc/sparc.c (input_operand): Accept bare\n+\tCONSTANT_P_RTX operands.\n+\n 2003-04-01  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n \t* gcse.c (struct ls_expr): Added pattern_regs field."}, {"sha": "3d99ac9ef1a347dade7edf50432d78753e78574a", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375ffbe6225d1ae36fda78655daf7edc69b0ad66/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375ffbe6225d1ae36fda78655daf7edc69b0ad66/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=375ffbe6225d1ae36fda78655daf7edc69b0ad66", "patch": "@@ -1297,8 +1297,8 @@ input_operand (op, mode)\n   if (mode != VOIDmode && GET_MODE (op) != VOIDmode && mode != GET_MODE (op))\n     return 0;\n \n-  /* Only a tiny bit of handling for CONSTANT_P_RTX is necessary.  */\n-  if (GET_CODE (op) == CONST && GET_CODE (XEXP (op, 0)) == CONSTANT_P_RTX)\n+  /* Accept CONSTANT_P_RTX, since it will be gone by CSE1 and result in 0/1.  */\n+  if (GET_CODE (op) == CONSTANT_P_RTX)\n     return 1;\n \n   /* Allow any one instruction integer constant, and all CONST_INT"}]}