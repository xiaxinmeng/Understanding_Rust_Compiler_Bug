{"sha": "a4296998322d3bb3b53c7412715cc2169f1d4f61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQyOTY5OTgzMjJkM2JiM2I1M2M3NDEyNzE1Y2MyMTY5ZjFkNGY2MQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2018-02-08T16:11:39Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2018-02-08T16:11:39Z"}, "message": "[C++ PATCH] initializer_list diagnostic\n\nhttps://gcc.gnu.org/ml/gcc-patches/2018-02/msg00434.html\n\t* class.c (finish_struct): Fix std:initializer_list diagnostic\n\tformatting.\n\n\t* g++.dg/cpp0x/initlist93.C: Adjust diagnostic.\n\nFrom-SVN: r257496", "tree": {"sha": "879d9d62daee4c26656b7dd92f6c37b9b9b5bff0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/879d9d62daee4c26656b7dd92f6c37b9b9b5bff0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4296998322d3bb3b53c7412715cc2169f1d4f61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4296998322d3bb3b53c7412715cc2169f1d4f61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4296998322d3bb3b53c7412715cc2169f1d4f61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4296998322d3bb3b53c7412715cc2169f1d4f61/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "74e6f14adb7057b29d361cc35c76f16663d1e649", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e6f14adb7057b29d361cc35c76f16663d1e649", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74e6f14adb7057b29d361cc35c76f16663d1e649"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "2fc35d2dea15daa8f5b374281c09f2f9b4cfa7e7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4296998322d3bb3b53c7412715cc2169f1d4f61/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4296998322d3bb3b53c7412715cc2169f1d4f61/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a4296998322d3bb3b53c7412715cc2169f1d4f61", "patch": "@@ -1,3 +1,8 @@\n+2018-02-08  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* class.c (finish_struct): Fix std:initializer_list diagnostic\n+\tformatting.\n+\n 2018-02-08  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/83204"}, {"sha": "e48a04ade7de9f32ddead55e83b8e1f992929f00", "filename": "gcc/cp/class.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4296998322d3bb3b53c7412715cc2169f1d4f61/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4296998322d3bb3b53c7412715cc2169f1d4f61/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=a4296998322d3bb3b53c7412715cc2169f1d4f61", "patch": "@@ -7062,7 +7062,7 @@ finish_struct (tree t, tree attributes)\n       /* People keep complaining that the compiler crashes on an invalid\n \t definition of initializer_list, so I guess we should explicitly\n \t reject it.  What the compiler internals care about is that it's a\n-\t template and has a pointer field followed by an integer field.  */\n+\t template and has a pointer field followed by size_type field.  */\n       bool ok = false;\n       if (processing_template_decl)\n \t{\n@@ -7075,9 +7075,8 @@ finish_struct (tree t, tree attributes)\n \t    }\n \t}\n       if (!ok)\n-\tfatal_error (input_location,\n-\t\t     \"definition of std::initializer_list does not match \"\n-\t\t     \"#include <initializer_list>\");\n+\tfatal_error (input_location, \"definition of %qD does not match \"\n+\t\t     \"%<#include <initializer_list>%>\", TYPE_NAME (t));\n     }\n \n   input_location = saved_loc;"}, {"sha": "6d451959f1292a18c395d4adc6b6179b191ae19f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4296998322d3bb3b53c7412715cc2169f1d4f61/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4296998322d3bb3b53c7412715cc2169f1d4f61/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a4296998322d3bb3b53c7412715cc2169f1d4f61", "patch": "@@ -1,3 +1,7 @@\n+2018-02-08  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* g++.dg/cpp0x/initlist93.C: Adjust diagnostic.\n+\n 2018-02-08  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \tPR tree-optimization/84265"}, {"sha": "7a0b02191740b61fde7853a8154c8c1891bf514f", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist93.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4296998322d3bb3b53c7412715cc2169f1d4f61/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist93.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4296998322d3bb3b53c7412715cc2169f1d4f61/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist93.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist93.C?ref=a4296998322d3bb3b53c7412715cc2169f1d4f61", "patch": "@@ -3,7 +3,7 @@\n \n namespace std\n {\n-template <class> class initializer_list // { dg-error \"definition of std::initializer_list does not match\" }\n+template <class> class initializer_list // { dg-error \"definition of .*std::initializer_list.* does not match\" }\n {\n   int *_M_array;\n   int _M_len;"}]}