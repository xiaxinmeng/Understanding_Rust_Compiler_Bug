{"sha": "8f47a7f6d81ea93edcea5fe63c61a7c727f7cb1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY0N2E3ZjZkODFlYTkzZWRjZWE1ZmU2M2M2MWE3YzcyN2Y3Y2IxZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-10-15T22:08:09Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-10-15T22:08:09Z"}, "message": "forward_list.h (forward_list<>::max_size): Use Node_allocator; minor cosmetic changes.\n\n2008-10-15  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/forward_list.h (forward_list<>::max_size): Use\n\tNode_allocator; minor cosmetic changes.\n\t* testsuite/23_containers/forward_list/capacity/1.cc: Adjust.\n\nFrom-SVN: r141151", "tree": {"sha": "77d2e1c0e6a9ffe07ffe72266867e943abf9f43e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77d2e1c0e6a9ffe07ffe72266867e943abf9f43e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f47a7f6d81ea93edcea5fe63c61a7c727f7cb1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f47a7f6d81ea93edcea5fe63c61a7c727f7cb1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f47a7f6d81ea93edcea5fe63c61a7c727f7cb1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f47a7f6d81ea93edcea5fe63c61a7c727f7cb1e/comments", "author": null, "committer": null, "parents": [{"sha": "bf52069846762e65eb721f2897175971339379ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf52069846762e65eb721f2897175971339379ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf52069846762e65eb721f2897175971339379ca"}], "stats": {"total": 43, "additions": 23, "deletions": 20}, "files": [{"sha": "dd9e945d5ebad0e085a4536b85a4d7ee62d952f5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f47a7f6d81ea93edcea5fe63c61a7c727f7cb1e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f47a7f6d81ea93edcea5fe63c61a7c727f7cb1e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8f47a7f6d81ea93edcea5fe63c61a7c727f7cb1e", "patch": "@@ -1,3 +1,9 @@\n+2008-10-15  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/forward_list.h (forward_list<>::max_size): Use\n+\tNode_allocator; minor cosmetic changes.\n+\t* testsuite/23_containers/forward_list/capacity/1.cc: Adjust.\n+\n 2008-10-15  Edward Smith-Rowland  <3dw4rd@verizon.net>\n \n \t* include/std/forward_list: New."}, {"sha": "4e16b9c8c55845da9ee3e278372a1c9921bfecba", "filename": "libstdc++-v3/include/bits/forward_list.h", "status": "modified", "additions": 15, "deletions": 19, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f47a7f6d81ea93edcea5fe63c61a7c727f7cb1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f47a7f6d81ea93edcea5fe63c61a7c727f7cb1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h?ref=8f47a7f6d81ea93edcea5fe63c61a7c727f7cb1e", "patch": "@@ -604,9 +604,9 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  that the resulting %forward_list's size is the same as the number\n        *  of elements assigned.  Old data may be lost.\n        */\n-      template<typename InputIterator>\n+      template<typename _InputIterator>\n         void\n-        assign(InputIterator __first, InputIterator __last)\n+        assign(_InputIterator __first, _InputIterator __last)\n         {\n           clear();\n           insert_after(cbefore_begin(), __first, __last);\n@@ -743,7 +743,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        */\n       size_type\n       max_size() const\n-      { return _Alloc().max_size(); }\n+      { return this->_M_get_Node_allocator().max_size(); }\n \n       // 23.2.3.3 element access:\n \n@@ -783,9 +783,9 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  and references.\n        */\n       template<typename... _Args>\n-      void\n-      emplace_front(_Args&&... __args)\n-      { _M_insert_after(cbefore_begin(), std::forward<_Args>(__args)...); }\n+        void\n+        emplace_front(_Args&&... __args)\n+        { _M_insert_after(cbefore_begin(), std::forward<_Args>(__args)...); }\n \n       /**\n        *  @brief  Add data to the front of the %forward_list.\n@@ -838,9 +838,9 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  and references.\n        */\n       template<typename... _Args>\n-      iterator\n-      emplace_after(const_iterator __pos, _Args&&... __args)\n-      { _M_insert_after(__pos, std::forward<_Args>(__args)...); }\n+        iterator\n+        emplace_after(const_iterator __pos, _Args&&... __args)\n+        { _M_insert_after(__pos, std::forward<_Args>(__args)...); }\n \n       /**\n        *  @brief  Inserts given value into %forward_list after specified\n@@ -893,8 +893,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  does not invalidate iterators and references.\n        */\n       void\n-      insert_after(const_iterator __pos,\n-                   size_type __n, const _Tp& __val);\n+      insert_after(const_iterator __pos, size_type __n,\n+\t\t   const _Tp& __val);\n \n       /**\n        *  @brief  Inserts a range into the %forward_list.\n@@ -1055,8 +1055,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  Requires this != @a x.\n        */\n       void\n-      splice_after(const_iterator __pos,\n-                   forward_list&& __list)\n+      splice_after(const_iterator __pos, forward_list&& __list)\n       {\n         if (!__list.empty() && &__list != this)\n           {\n@@ -1079,8 +1078,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  inserts it into the current list after @a pos.\n        */\n       void\n-      splice_after(const_iterator __pos,\n-                   forward_list&& __list,\n+      splice_after(const_iterator __pos, forward_list&& __list,\n                    const_iterator __it)\n       { this->splice_after(__pos, __list, __it, __it._M_next()); }\n \n@@ -1098,10 +1096,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  Undefined if @a pos is in (before,last).\n        */\n       void\n-      splice_after(const_iterator __pos,\n-                   forward_list&& __list,\n-                   const_iterator __before,\n-                   const_iterator __last)\n+      splice_after(const_iterator __pos, forward_list&& __list,\n+                   const_iterator __before, const_iterator __last)\n       {\n         _Fwd_list_node_base* __tmp\n           = const_cast<_Fwd_list_node_base* const>(__pos._M_node);"}, {"sha": "e5ad77be9173799d37e2a7dcc36096c37411d4a1", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/capacity/1.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f47a7f6d81ea93edcea5fe63c61a7c727f7cb1e/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcapacity%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f47a7f6d81ea93edcea5fe63c61a7c727f7cb1e/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcapacity%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcapacity%2F1.cc?ref=8f47a7f6d81ea93edcea5fe63c61a7c727f7cb1e", "patch": "@@ -39,7 +39,8 @@ test01()\n   fld.resize(0);\n   VERIFY(fld.empty() == true);\n \n-  VERIFY(fld.max_size() == fld.get_allocator().max_size());\n+  VERIFY( fld.max_size()\n+\t  == std::allocator<std::_Fwd_list_node<double> >().max_size() );\n }\n \n int"}]}