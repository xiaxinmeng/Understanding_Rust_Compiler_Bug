{"sha": "cfebcf30eae6e2f41e61d600f129872aaa286fb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZlYmNmMzBlYWU2ZTJmNDFlNjFkNjAwZjEyOTg3MmFhYTI4NmZiMw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2011-04-06T15:30:20Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-04-06T15:30:20Z"}, "message": "Use backend interface for expression statements.\n\n\t* go-gcc.cc (Gcc_backend::expression_statement): New function.\n\nFrom-SVN: r172051", "tree": {"sha": "e4c5789d3e18768d85a0d98624e3eb6b2fd8fa0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4c5789d3e18768d85a0d98624e3eb6b2fd8fa0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfebcf30eae6e2f41e61d600f129872aaa286fb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfebcf30eae6e2f41e61d600f129872aaa286fb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfebcf30eae6e2f41e61d600f129872aaa286fb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfebcf30eae6e2f41e61d600f129872aaa286fb3/comments", "author": null, "committer": null, "parents": [{"sha": "763ea608b45d48c7bf8d81160ed0227e201af548", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/763ea608b45d48c7bf8d81160ed0227e201af548", "html_url": "https://github.com/Rust-GCC/gccrs/commit/763ea608b45d48c7bf8d81160ed0227e201af548"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "b83eae8cb26e76959cd46c843f785e0a43140079", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfebcf30eae6e2f41e61d600f129872aaa286fb3/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfebcf30eae6e2f41e61d600f129872aaa286fb3/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=cfebcf30eae6e2f41e61d600f129872aaa286fb3", "patch": "@@ -1,3 +1,7 @@\n+2011-04-06  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::expression_statement): New function.\n+\n 2011-04-04  Ian Lance Taylor  <iant@google.com>\n \n \t* go-gcc.c (class Blabel): Define."}, {"sha": "ce26d4d844e5654feb74173e0ba079a1b6e031a8", "filename": "gcc/go/go-gcc.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfebcf30eae6e2f41e61d600f129872aaa286fb3/gcc%2Fgo%2Fgo-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfebcf30eae6e2f41e61d600f129872aaa286fb3/gcc%2Fgo%2Fgo-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-gcc.cc?ref=cfebcf30eae6e2f41e61d600f129872aaa286fb3", "patch": "@@ -166,6 +166,9 @@ class Gcc_backend : public Backend\n \n   // Statements.\n \n+  Bstatement*\n+  expression_statement(Bexpression*);\n+\n   Bstatement*\n   assignment_statement(Bexpression* lhs, Bexpression* rhs, source_location);\n \n@@ -206,6 +209,15 @@ get_identifier_from_string(const std::string& str)\n {\n   return get_identifier_with_length(str.data(), str.length());\n }\n+\n+// An expression as a statement.\n+\n+Bstatement*\n+Gcc_backend::expression_statement(Bexpression* expr)\n+{\n+  return this->make_statement(expr->get_tree());\n+}\n+\n // Assignment.\n \n Bstatement*"}, {"sha": "a84b9e84c69860a15acc965886e7f61066c1c056", "filename": "gcc/go/gofrontend/backend.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfebcf30eae6e2f41e61d600f129872aaa286fb3/gcc%2Fgo%2Fgofrontend%2Fbackend.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfebcf30eae6e2f41e61d600f129872aaa286fb3/gcc%2Fgo%2Fgofrontend%2Fbackend.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fbackend.h?ref=cfebcf30eae6e2f41e61d600f129872aaa286fb3", "patch": "@@ -107,6 +107,10 @@ class Backend\n \n   // Statements.\n \n+  // Create an expression statement.\n+  virtual Bstatement*\n+  expression_statement(Bexpression*) = 0;\n+\n   // Create an assignment statement.\n   virtual Bstatement*\n   assignment_statement(Bexpression* lhs, Bexpression* rhs,"}, {"sha": "da29a35d00dd6bdef25cbec1da25df693570a382", "filename": "gcc/go/gofrontend/statements.cc", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfebcf30eae6e2f41e61d600f129872aaa286fb3/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfebcf30eae6e2f41e61d600f129872aaa286fb3/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fstatements.cc?ref=cfebcf30eae6e2f41e61d600f129872aaa286fb3", "patch": "@@ -1551,8 +1551,7 @@ class Expression_statement : public Statement\n   do_may_fall_through() const;\n \n   tree\n-  do_get_tree(Translate_context* context)\n-  { return this->expr_->get_tree(context); }\n+  do_get_tree(Translate_context* context);\n \n  private:\n   Expression* expr_;\n@@ -1589,6 +1588,17 @@ Expression_statement::do_may_fall_through() const\n   return true;\n }\n \n+// Convert to backend representation.\n+\n+tree\n+Expression_statement::do_get_tree(Translate_context* context)\n+{\n+  tree expr_tree = this->expr_->get_tree(context);\n+  Bexpression* bexpr = tree_to_expr(expr_tree);\n+  Bstatement* ret = context->backend()->expression_statement(bexpr);\n+  return statement_to_tree(ret);\n+}\n+\n // Make an expression statement from an Expression.\n \n Statement*"}]}