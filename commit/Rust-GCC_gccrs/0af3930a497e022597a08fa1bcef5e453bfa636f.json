{"sha": "0af3930a497e022597a08fa1bcef5e453bfa636f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFmMzkzMGE0OTdlMDIyNTk3YTA4ZmExYmNlZjVlNDUzYmZhNjM2Zg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-11-09T10:16:07Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-11-09T14:28:38Z"}, "message": "libstdc++: Use 'inline' consistently in std::exception_ptr [PR 97729]\n\nWith PR c++/67453 fixed we can rely on the 'used' attribute to emit\ninline constructors and destructors in libsupc++/eh_ptr.cc. This means\nwe don't need to suppress the 'inline' keyword on them in that file, and\ndon't need to force 'always_inline' on them in other files.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/97729\n\t* libsupc++/exception_ptr.h (exception_ptr::exception_ptr())\n\t(exception_ptr::exception_ptr(const exception_ptr&))\n\t(exception_ptr::~exception_ptr()): Remove 'always_inline'\n\tattributes. Use 'inline' unconditionally.", "tree": {"sha": "a8ae49e2951dddfcce07361cc651dd987f877639", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8ae49e2951dddfcce07361cc651dd987f877639"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0af3930a497e022597a08fa1bcef5e453bfa636f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0af3930a497e022597a08fa1bcef5e453bfa636f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0af3930a497e022597a08fa1bcef5e453bfa636f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0af3930a497e022597a08fa1bcef5e453bfa636f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99bf3a817b9d31905dd12448e853ad2685635250", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99bf3a817b9d31905dd12448e853ad2685635250", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99bf3a817b9d31905dd12448e853ad2685635250"}], "stats": {"total": 9, "additions": 0, "deletions": 9}, "files": [{"sha": "6ae4d4ca944d945fb1d1acbdbc396e7673fdd263", "filename": "libstdc++-v3/libsupc++/exception_ptr.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0af3930a497e022597a08fa1bcef5e453bfa636f/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0af3930a497e022597a08fa1bcef5e453bfa636f/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception_ptr.h?ref=0af3930a497e022597a08fa1bcef5e453bfa636f", "patch": "@@ -174,19 +174,13 @@ namespace std\n     };\n \n     _GLIBCXX_EH_PTR_USED\n-#ifndef  _GLIBCXX_EH_PTR_COMPAT\n-    __attribute__((__always_inline__)) // XXX see PR 97729\n     inline\n-#endif\n     exception_ptr::exception_ptr() _GLIBCXX_NOEXCEPT\n     : _M_exception_object(0)\n     { }\n \n     _GLIBCXX_EH_PTR_USED\n-#ifndef  _GLIBCXX_EH_PTR_COMPAT\n-    __attribute__((__always_inline__))\n     inline\n-#endif\n     exception_ptr::exception_ptr(const exception_ptr& __other) _GLIBCXX_NOEXCEPT\n     : _M_exception_object(__other._M_exception_object)\n     {\n@@ -195,10 +189,7 @@ namespace std\n     }\n \n     _GLIBCXX_EH_PTR_USED\n-#ifndef  _GLIBCXX_EH_PTR_COMPAT\n-    __attribute__((__always_inline__))\n     inline\n-#endif\n     exception_ptr::~exception_ptr() _GLIBCXX_USE_NOEXCEPT\n     {\n       if (_M_exception_object)"}]}