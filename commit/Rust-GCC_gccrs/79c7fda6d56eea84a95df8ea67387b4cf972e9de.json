{"sha": "79c7fda6d56eea84a95df8ea67387b4cf972e9de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzljN2ZkYTZkNTZlZWE4NGE5NWRmOGVhNjczODdiNGNmOTcyZTlkZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-03-03T07:25:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-03-03T07:25:50Z"}, "message": "re PR middle-end/60175 (ICE on gcc.dg/asan/nosanitize-and-inline.c)\n\n\tPR middle-end/60175\n\t* function.c (expand_function_end): Don't emit\n\tclobber_return_register sequence if clobber_after is a BARRIER.\n\t* cfgexpand.c (construct_exit_block): Append instructions before\n\treturn_label to prev_bb.\n\nFrom-SVN: r208267", "tree": {"sha": "d6a8ebe478c2d5333110bafe9cc7ce6fe4dcbb45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6a8ebe478c2d5333110bafe9cc7ce6fe4dcbb45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79c7fda6d56eea84a95df8ea67387b4cf972e9de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79c7fda6d56eea84a95df8ea67387b4cf972e9de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79c7fda6d56eea84a95df8ea67387b4cf972e9de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79c7fda6d56eea84a95df8ea67387b4cf972e9de/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "715a5c85f7db0146b2df19452958e26d15d6eab8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/715a5c85f7db0146b2df19452958e26d15d6eab8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/715a5c85f7db0146b2df19452958e26d15d6eab8"}], "stats": {"total": 54, "additions": 39, "deletions": 15}, "files": [{"sha": "93effc9fae23846dc128b540138c8bff7fc1da6c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c7fda6d56eea84a95df8ea67387b4cf972e9de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c7fda6d56eea84a95df8ea67387b4cf972e9de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79c7fda6d56eea84a95df8ea67387b4cf972e9de", "patch": "@@ -1,3 +1,11 @@\n+2014-03-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/60175\n+\t* function.c (expand_function_end): Don't emit\n+\tclobber_return_register sequence if clobber_after is a BARRIER.\n+\t* cfgexpand.c (construct_exit_block): Append instructions before\n+\treturn_label to prev_bb.\n+\n 2014-03-02  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/constraints.md: Document reserved use of \"wc\"."}, {"sha": "5c23b72ee7dbb15f5aa6ad6921ee6f8bd063d943", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c7fda6d56eea84a95df8ea67387b4cf972e9de/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c7fda6d56eea84a95df8ea67387b4cf972e9de/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=79c7fda6d56eea84a95df8ea67387b4cf972e9de", "patch": "@@ -5273,7 +5273,8 @@ construct_exit_block (void)\n   edge e, e2;\n   unsigned ix;\n   edge_iterator ei;\n-  rtx orig_end = BB_END (EXIT_BLOCK_PTR_FOR_FN (cfun)->prev_bb);\n+  basic_block prev_bb = EXIT_BLOCK_PTR_FOR_FN (cfun)->prev_bb;\n+  rtx orig_end = BB_END (prev_bb);\n \n   rtl_profile_for_bb (EXIT_BLOCK_PTR_FOR_FN (cfun));\n \n@@ -5288,13 +5289,25 @@ construct_exit_block (void)\n   end = get_last_insn ();\n   if (head == end)\n     return;\n-  /* While emitting the function end we could move end of the last basic block.\n-   */\n-  BB_END (EXIT_BLOCK_PTR_FOR_FN (cfun)->prev_bb) = orig_end;\n+  /* While emitting the function end we could move end of the last basic\n+     block.  */\n+  BB_END (prev_bb) = orig_end;\n   while (NEXT_INSN (head) && NOTE_P (NEXT_INSN (head)))\n     head = NEXT_INSN (head);\n-  exit_block = create_basic_block (NEXT_INSN (head), end,\n-\t\t\t\t   EXIT_BLOCK_PTR_FOR_FN (cfun)->prev_bb);\n+  /* But make sure exit_block starts with RETURN_LABEL, otherwise the\n+     bb frequency counting will be confused.  Any instructions before that\n+     label are emitted for the case where PREV_BB falls through into the\n+     exit block, so append those instructions to prev_bb in that case.  */\n+  if (NEXT_INSN (head) != return_label)\n+    {\n+      while (NEXT_INSN (head) != return_label)\n+\t{\n+\t  if (!NOTE_P (NEXT_INSN (head)))\n+\t    BB_END (prev_bb) = NEXT_INSN (head);\n+\t  head = NEXT_INSN (head);\n+\t}\n+    }\n+  exit_block = create_basic_block (NEXT_INSN (head), end, prev_bb);\n   exit_block->frequency = EXIT_BLOCK_PTR_FOR_FN (cfun)->frequency;\n   exit_block->count = EXIT_BLOCK_PTR_FOR_FN (cfun)->count;\n   if (current_loops && EXIT_BLOCK_PTR_FOR_FN (cfun)->loop_father)"}, {"sha": "e67d3c1553f8802545ed6797fa16bf47c0f4da67", "filename": "gcc/function.c", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c7fda6d56eea84a95df8ea67387b4cf972e9de/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c7fda6d56eea84a95df8ea67387b4cf972e9de/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=79c7fda6d56eea84a95df8ea67387b4cf972e9de", "patch": "@@ -5156,17 +5156,20 @@ expand_function_end (void)\n       crtl->return_rtx = outgoing;\n     }\n \n-  /* Emit the actual code to clobber return register.  */\n-  {\n-    rtx seq;\n+  /* Emit the actual code to clobber return register.  Don't emit\n+     it if clobber_after is a barrier, then the previous basic block\n+     certainly doesn't fall thru into the exit block.  */\n+  if (!BARRIER_P (clobber_after))\n+    {\n+      rtx seq;\n \n-    start_sequence ();\n-    clobber_return_register ();\n-    seq = get_insns ();\n-    end_sequence ();\n+      start_sequence ();\n+      clobber_return_register ();\n+      seq = get_insns ();\n+      end_sequence ();\n \n-    emit_insn_after (seq, clobber_after);\n-  }\n+      emit_insn_after (seq, clobber_after);\n+    }\n \n   /* Output the label for the naked return from the function.  */\n   if (naked_return_label)"}]}