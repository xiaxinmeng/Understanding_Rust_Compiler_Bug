{"sha": "0a8ff576dbd2806fef992e52e1148a84dabebe5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE4ZmY1NzZkYmQyODA2ZmVmOTkyZTUyZTExNDhhODRkYWJlYmU1ZA==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-12-13T09:04:01Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-13T09:04:01Z"}, "message": "[Ada] Avoid spurious errors on Global/Depends in instantiations\n\n2019-12-13  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* sem_prag.adb (Analyze_Depends_In_Decl_Part,\n\tAnalyze_Global_In_Decl_Part,\n\tAnalyze_Refined_Depends_In_Decl_Part,\n\tAnalyze_Refined_Global_In_Decl_Part, Check_Missing_Part_Of):\n\tSkip redundant checking involving visibility inside\n\tinstantiations.\n\nFrom-SVN: r279348", "tree": {"sha": "02d349d26f4422d550af1b392f0e1c8f5c125c20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02d349d26f4422d550af1b392f0e1c8f5c125c20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a8ff576dbd2806fef992e52e1148a84dabebe5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a8ff576dbd2806fef992e52e1148a84dabebe5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a8ff576dbd2806fef992e52e1148a84dabebe5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a8ff576dbd2806fef992e52e1148a84dabebe5d/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2e3795d016a7263c82a4f64a7204f416d12a72da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e3795d016a7263c82a4f64a7204f416d12a72da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e3795d016a7263c82a4f64a7204f416d12a72da"}], "stats": {"total": 70, "additions": 35, "deletions": 35}, "files": [{"sha": "598b20160854f10e3f06efd553c02263b2f63351", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a8ff576dbd2806fef992e52e1148a84dabebe5d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a8ff576dbd2806fef992e52e1148a84dabebe5d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0a8ff576dbd2806fef992e52e1148a84dabebe5d", "patch": "@@ -1,3 +1,12 @@\n+2019-12-13  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Depends_In_Decl_Part,\n+\tAnalyze_Global_In_Decl_Part,\n+\tAnalyze_Refined_Depends_In_Decl_Part,\n+\tAnalyze_Refined_Global_In_Decl_Part, Check_Missing_Part_Of):\n+\tSkip redundant checking involving visibility inside\n+\tinstantiations.\n+\n 2019-12-13  Yannick Moy  <moy@adacore.com>\n \n \t* sem_res.adb (Resolve_Call): Prevent inlining inside while loop"}, {"sha": "d1d474775c5ab2dcb9c6c9b91379b9e06c6cc9ec", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 26, "deletions": 35, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a8ff576dbd2806fef992e52e1148a84dabebe5d/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a8ff576dbd2806fef992e52e1148a84dabebe5d/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=0a8ff576dbd2806fef992e52e1148a84dabebe5d", "patch": "@@ -1091,7 +1091,7 @@ package body Sem_Prag is\n                         --  template is legal, do not perform this check in\n                         --  the instance to circumvent this oddity.\n \n-                        if Is_Generic_Instance (Spec_Id) then\n+                        if In_Instance then\n                            null;\n \n                         --  An abstract state with visible refinement cannot\n@@ -2390,7 +2390,7 @@ package body Sem_Prag is\n                   --  do not perform this check in the instance to circumvent\n                   --  this oddity.\n \n-                  if Is_Generic_Instance (Spec_Id) then\n+                  if In_Instance then\n                      null;\n \n                   --  An abstract state with visible refinement cannot appear\n@@ -26026,18 +26026,17 @@ package body Sem_Prag is\n       --  matched items found in pragma Depends.\n \n       procedure Check_Output_States\n-        (Spec_Id      : Entity_Id;\n-         Spec_Inputs  : Elist_Id;\n+        (Spec_Inputs  : Elist_Id;\n          Spec_Outputs : Elist_Id;\n          Body_Inputs  : Elist_Id;\n          Body_Outputs : Elist_Id);\n       --  Determine whether pragma Depends contains an output state with a\n       --  visible refinement and if so, ensure that pragma Refined_Depends\n-      --  mentions all its constituents as outputs. Spec_Id is the entity of\n-      --  the related subprograms. Spec_Inputs and Spec_Outputs denote the\n-      --  inputs and outputs of the subprogram spec synthesized from pragma\n-      --  Depends. Body_Inputs and Body_Outputs denote the inputs and outputs\n-      --  of the subprogram body synthesized from pragma Refined_Depends.\n+      --  mentions all its constituents as outputs. Spec_Inputs and\n+      --  Spec_Outputs denote the inputs and outputs of the subprogram spec\n+      --  synthesized from pragma Depends. Body_Inputs and Body_Outputs denote\n+      --  the inputs and outputs of the subprogram body synthesized from pragma\n+      --  Refined_Depends.\n \n       function Collect_States (Clauses : List_Id) return Elist_Id;\n       --  Given a normalized list of dependencies obtained from calling\n@@ -26059,11 +26058,8 @@ package body Sem_Prag is\n       --  all special cases. Matched_Items contains the entities of all matched\n       --  items found in pragma Depends.\n \n-      procedure Report_Extra_Clauses\n-        (Spec_Id : Entity_Id;\n-         Clauses : List_Id);\n-      --  Emit an error for each extra clause found in list Clauses. Spec_Id\n-      --  denotes the entity of the related subprogram.\n+      procedure Report_Extra_Clauses (Clauses : List_Id);\n+      --  Emit an error for each extra clause found in list Clauses\n \n       -----------------------------\n       -- Check_Dependency_Clause --\n@@ -26327,7 +26323,7 @@ package body Sem_Prag is\n          --  Do not perform this check in an instance because it was already\n          --  performed successfully in the generic template.\n \n-         if Is_Generic_Instance (Spec_Id) then\n+         if In_Instance then\n             return;\n          end if;\n \n@@ -26494,8 +26490,7 @@ package body Sem_Prag is\n       -------------------------\n \n       procedure Check_Output_States\n-        (Spec_Id      : Entity_Id;\n-         Spec_Inputs  : Elist_Id;\n+        (Spec_Inputs  : Elist_Id;\n          Spec_Outputs : Elist_Id;\n          Body_Inputs  : Elist_Id;\n          Body_Outputs : Elist_Id)\n@@ -26588,7 +26583,7 @@ package body Sem_Prag is\n          --  Do not perform this check in an instance because it was already\n          --  performed successfully in the generic template.\n \n-         if Is_Generic_Instance (Spec_Id) then\n+         if In_Instance then\n             null;\n \n          --  Inspect the outputs of pragma Depends looking for a state with a\n@@ -26933,17 +26928,14 @@ package body Sem_Prag is\n       -- Report_Extra_Clauses --\n       --------------------------\n \n-      procedure Report_Extra_Clauses\n-        (Spec_Id : Entity_Id;\n-         Clauses : List_Id)\n-      is\n+      procedure Report_Extra_Clauses (Clauses : List_Id) is\n          Clause : Node_Id;\n \n       begin\n          --  Do not perform this check in an instance because it was already\n          --  performed successfully in the generic template.\n \n-         if Is_Generic_Instance (Spec_Id) then\n+         if In_Instance then\n             null;\n \n          elsif Present (Clauses) then\n@@ -27078,8 +27070,7 @@ package body Sem_Prag is\n             --  constituents appear as outputs in the dependency refinement.\n \n             Check_Output_States\n-              (Spec_Id      => Spec_Id,\n-               Spec_Inputs  => Spec_Inputs,\n+              (Spec_Inputs  => Spec_Inputs,\n                Spec_Outputs => Spec_Outputs,\n                Body_Inputs  => Body_Inputs,\n                Body_Outputs => Body_Outputs);\n@@ -27149,7 +27140,7 @@ package body Sem_Prag is\n          Remove_Extra_Clauses (Refinements, Matched_Items);\n \n          if Serious_Errors_Detected = Errors then\n-            Report_Extra_Clauses (Spec_Id, Refinements);\n+            Report_Extra_Clauses (Refinements);\n          end if;\n       end if;\n \n@@ -27402,7 +27393,7 @@ package body Sem_Prag is\n          --  Do not perform this check in an instance because it was already\n          --  performed successfully in the generic template.\n \n-         if Is_Generic_Instance (Spec_Id) then\n+         if In_Instance then\n             null;\n \n          --  Inspect the In_Out items of the corresponding Global pragma\n@@ -27511,7 +27502,7 @@ package body Sem_Prag is\n          --  Do not perform this check in an instance because it was already\n          --  performed successfully in the generic template.\n \n-         if Is_Generic_Instance (Spec_Id) then\n+         if In_Instance then\n             null;\n \n          --  Inspect the Input items of the corresponding Global pragma looking\n@@ -27634,7 +27625,7 @@ package body Sem_Prag is\n          --  Do not perform this check in an instance because it was already\n          --  performed successfully in the generic template.\n \n-         if Is_Generic_Instance (Spec_Id) then\n+         if In_Instance then\n             null;\n \n          --  Inspect the Output items of the corresponding Global pragma\n@@ -27740,7 +27731,7 @@ package body Sem_Prag is\n          --  Do not perform this check in an instance because it was already\n          --  performed successfully in the generic template.\n \n-         if Is_Generic_Instance (Spec_Id) then\n+         if In_Instance then\n             null;\n \n          --  Inspect the Proof_In items of the corresponding Global pragma\n@@ -27906,7 +27897,7 @@ package body Sem_Prag is\n          --  Do not perform this check in an instance because it was already\n          --  performed successfully in the generic template.\n \n-         if Is_Generic_Instance (Spec_Id) then\n+         if In_Instance then\n             null;\n \n          elsif Nkind (List) = N_Null then\n@@ -28157,7 +28148,7 @@ package body Sem_Prag is\n          --  Do not perform this check in an instance because it was already\n          --  performed successfully in the generic template.\n \n-         if Is_Generic_Instance (Spec_Id) then\n+         if In_Instance then\n             null;\n \n          else\n@@ -28180,7 +28171,7 @@ package body Sem_Prag is\n          --  Do not perform this check in an instance because it was already\n          --  performed successfully in the generic template.\n \n-         if Is_Generic_Instance (Spec_Id) then\n+         if In_Instance then\n             null;\n \n          else\n@@ -28244,7 +28235,7 @@ package body Sem_Prag is\n       --  body contract is instantiated. Since the generic template is legal,\n       --  do not perform this check in the instance to circumvent this oddity.\n \n-      if Is_Generic_Instance (Spec_Id) then\n+      if In_Instance then\n          null;\n \n       --  Non-instance case\n@@ -28360,7 +28351,7 @@ package body Sem_Prag is\n       --  in the generic template.\n \n       if Serious_Errors_Detected = Errors\n-        and then not Is_Generic_Instance (Spec_Id)\n+        and then not In_Instance\n         and then not Has_Null_State\n         and then No_Constit\n       then"}]}