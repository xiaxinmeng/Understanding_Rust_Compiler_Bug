{"sha": "eeb109f2cf3af694342375fcb14a70f6be4cf413", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWViMTA5ZjJjZjNhZjY5NDM0MjM3NWZjYjE0YTcwZjZiZTRjZjQxMw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-01-13T15:37:03Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-01-13T15:37:03Z"}, "message": "g++spec.c (lang_specific_driver): Add -fnew-abi if ENABLE_NEW_GXX_ABI defined.\n\n\t* g++spec.c (lang_specific_driver): Add -fnew-abi if\n\tENABLE_NEW_GXX_ABI defined.\n\t* Make-lang.in (tinfo.o, tinfo2.o, exception.o, new.o,\n\topnew.o, opnewnt.o, opvnew.o, opvnewnt.o, opdel.o, opdelnt.o,\n\topvdel.o, opvdelnt.o): Use GXX_ABI_FLAG switch.\n\nFrom-SVN: r31388", "tree": {"sha": "93b8754409bada92103ca12ae9d99a680949af5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93b8754409bada92103ca12ae9d99a680949af5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eeb109f2cf3af694342375fcb14a70f6be4cf413", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeb109f2cf3af694342375fcb14a70f6be4cf413", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeb109f2cf3af694342375fcb14a70f6be4cf413", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeb109f2cf3af694342375fcb14a70f6be4cf413/comments", "author": null, "committer": null, "parents": [{"sha": "7441a352713e009a3b87ccf4c31fb993873e32a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7441a352713e009a3b87ccf4c31fb993873e32a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7441a352713e009a3b87ccf4c31fb993873e32a1"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "04d3828ae49ff7b4ba3b0cc8dab2e358907756e7", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeb109f2cf3af694342375fcb14a70f6be4cf413/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeb109f2cf3af694342375fcb14a70f6be4cf413/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=eeb109f2cf3af694342375fcb14a70f6be4cf413", "patch": "@@ -1,5 +1,5 @@\n # Top level makefile fragment for GNU C++.\n-#   Copyright (C) 1994, 1995, 1997, 1998, 1999 Free Software Foundation, Inc.\n+#   Copyright (C) 1994, 1995, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n \n #This file is part of GNU CC.\n \n@@ -137,40 +137,40 @@ c++.dvi:\n \n # C++ language-support library pieces for libgcc.\n tinfo.o: cc1plus$(exeext) $(srcdir)/cp/tinfo.cc\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(CXXFLAGS) $(INCLUDES) \\\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(GXX_ABI_FLAG) $(CXXFLAGS) $(INCLUDES) \\\n \t  -c $(srcdir)/cp/tinfo.cc\n tinfo2.o: cc1plus$(exeext) $(srcdir)/cp/tinfo2.cc\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(CXXFLAGS) $(INCLUDES) \\\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(GXX_ABI_FLAG) $(CXXFLAGS) $(INCLUDES) \\\n \t  -c $(srcdir)/cp/tinfo2.cc\n exception.o: cc1plus$(exeext) $(srcdir)/cp/exception.cc\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(CXXFLAGS) $(INCLUDES) \\\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(GXX_ABI_FLAG) $(CXXFLAGS) $(INCLUDES) \\\n \t  -c -fexceptions $(srcdir)/cp/exception.cc\n new.o: cc1plus$(exeext) $(srcdir)/cp/new.cc\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(CXXFLAGS) $(INCLUDES) \\\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(GXX_ABI_FLAG) $(CXXFLAGS) $(INCLUDES) \\\n \t  -c $(srcdir)/cp/new.cc\n opnew.o: cc1plus$(exeext) $(srcdir)/cp/new1.cc\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(CXXFLAGS) $(INCLUDES) \\\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(GXX_ABI_FLAG) $(CXXFLAGS) $(INCLUDES) \\\n \t  -c $(srcdir)/cp/new1.cc -DL_op_new -o opnew.o\n opnewnt.o: cc1plus$(exeext) $(srcdir)/cp/new1.cc\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(CXXFLAGS) $(INCLUDES) \\\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(GXX_ABI_FLAG) $(CXXFLAGS) $(INCLUDES) \\\n \t  -c $(srcdir)/cp/new1.cc -DL_op_newnt -o opnewnt.o\n opvnew.o: cc1plus$(exeext) $(srcdir)/cp/new2.cc\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(CXXFLAGS) $(INCLUDES) \\\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(GXX_ABI_FLAG) $(CXXFLAGS) $(INCLUDES) \\\n \t  -c $(srcdir)/cp/new2.cc -DL_op_vnew -o opvnew.o\n opvnewnt.o: cc1plus$(exeext) $(srcdir)/cp/new2.cc\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(CXXFLAGS) $(INCLUDES) \\\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(GXX_ABI_FLAG) $(CXXFLAGS) $(INCLUDES) \\\n \t  -c $(srcdir)/cp/new2.cc -DL_op_vnewnt -o opvnewnt.o\n opdel.o: cc1plus$(exeext) $(srcdir)/cp/new2.cc\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(CXXFLAGS) $(INCLUDES) \\\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(GXX_ABI_FLAG) $(CXXFLAGS) $(INCLUDES) \\\n \t  -c $(srcdir)/cp/new2.cc -DL_op_delete -o opdel.o\n opdelnt.o: cc1plus$(exeext) $(srcdir)/cp/new2.cc\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(CXXFLAGS) $(INCLUDES) \\\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(GXX_ABI_FLAG) $(CXXFLAGS) $(INCLUDES) \\\n \t  -c $(srcdir)/cp/new2.cc -DL_op_delnt -o opdelnt.o\n opvdel.o: cc1plus$(exeext) $(srcdir)/cp/new2.cc\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(CXXFLAGS) $(INCLUDES) \\\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(GXX_ABI_FLAG) $(CXXFLAGS) $(INCLUDES) \\\n \t  -c $(srcdir)/cp/new2.cc -DL_op_vdel -o opvdel.o\n opvdelnt.o: cc1plus$(exeext) $(srcdir)/cp/new2.cc\n-\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(CXXFLAGS) $(INCLUDES) \\\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(GXX_ABI_FLAG) $(CXXFLAGS) $(INCLUDES) \\\n \t  -c $(srcdir)/cp/new2.cc -DL_op_vdelnt -o opvdelnt.o\n \n # We want to update cplib2.txt if any of the source files change..."}, {"sha": "ca1ab68c06f4898e55d80203274965736e6f2ae4", "filename": "gcc/cp/g++spec.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeb109f2cf3af694342375fcb14a70f6be4cf413/gcc%2Fcp%2Fg%2B%2Bspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeb109f2cf3af694342375fcb14a70f6be4cf413/gcc%2Fcp%2Fg%2B%2Bspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fg%2B%2Bspec.c?ref=eeb109f2cf3af694342375fcb14a70f6be4cf413", "patch": "@@ -1,5 +1,5 @@\n /* Specific flags and argument handling of the C++ front-end.\n-   Copyright (C) 1996, 1997, 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -95,6 +95,10 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n   /* The total number of arguments with the new stuff.  */\n   int num_args = 1;\n \n+#if ENABLE_NEW_GXX_ABI\n+  added++;\n+#endif\n+\n   argc = *in_argc;\n   argv = *in_argv;\n   added_libraries = *in_added_libraries;\n@@ -235,6 +239,10 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n \t}\n   }\n \n+#if ENABLE_NEW_GXX_ABI\n+  arglist[j++] = \"-fnew-abi\";\n+#endif\n+\n   /* Add `-lstdc++' if we haven't already done so.  */\n   if (library)\n     {"}]}