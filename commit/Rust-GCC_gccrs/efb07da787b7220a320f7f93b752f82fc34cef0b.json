{"sha": "efb07da787b7220a320f7f93b752f82fc34cef0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZiMDdkYTc4N2I3MjIwYTMyMGY3ZjkzYjc1MmY4MmZjMzRjZWYwYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-14T11:39:24Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-14T11:39:24Z"}, "message": "(life_analysis, propagate_block, dump_flow_info): Add more missing\ncasts to REGSET_ELT_TYPE.\n\nFrom-SVN: r1826", "tree": {"sha": "a0150797fbbf3aa09273454edcd4c1022c95396b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0150797fbbf3aa09273454edcd4c1022c95396b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efb07da787b7220a320f7f93b752f82fc34cef0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efb07da787b7220a320f7f93b752f82fc34cef0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efb07da787b7220a320f7f93b752f82fc34cef0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efb07da787b7220a320f7f93b752f82fc34cef0b/comments", "author": null, "committer": null, "parents": [{"sha": "858a47b165a39fff21125accb5f433a8e9e434d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/858a47b165a39fff21125accb5f433a8e9e434d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/858a47b165a39fff21125accb5f433a8e9e434d3"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "717865e76ba10e9733194e5f38a2c6e611e920f9", "filename": "gcc/flow.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efb07da787b7220a320f7f93b752f82fc34cef0b/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efb07da787b7220a320f7f93b752f82fc34cef0b/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=efb07da787b7220a320f7f93b752f82fc34cef0b", "patch": "@@ -853,10 +853,10 @@ life_analysis (f, nregs)\n \t   consider the stack pointer live at the end of the function.  */\n \tbasic_block_live_at_end[n_basic_blocks - 1]\n \t  [STACK_POINTER_REGNUM / REGSET_ELT_BITS]\n-\t    |= 1 << (STACK_POINTER_REGNUM % REGSET_ELT_BITS);\n+\t    |= (REGSET_ELT_TYPE) 1 << (STACK_POINTER_REGNUM % REGSET_ELT_BITS);\n \tbasic_block_new_live_at_end[n_basic_blocks - 1]\n \t  [STACK_POINTER_REGNUM / REGSET_ELT_BITS]\n-\t    |= 1 << (STACK_POINTER_REGNUM % REGSET_ELT_BITS);\n+\t    |= (REGSET_ELT_TYPE) 1 << (STACK_POINTER_REGNUM % REGSET_ELT_BITS);\n       }\n \n   /* Mark all global registers as being live at the end of the function\n@@ -867,9 +867,11 @@ life_analysis (f, nregs)\n       if (global_regs[i])\n \t{\n \t  basic_block_live_at_end[n_basic_blocks - 1]\n-\t    [i / REGSET_ELT_BITS] |= 1 << (i % REGSET_ELT_BITS);\n+\t    [i / REGSET_ELT_BITS]\n+\t      |= (REGSET_ELT_TYPE) 1 << (i % REGSET_ELT_BITS);\n \t  basic_block_new_live_at_end[n_basic_blocks - 1]\n-\t    [i / REGSET_ELT_BITS] |= 1 << (i % REGSET_ELT_BITS);\n+\t    [i / REGSET_ELT_BITS]\n+\t      |= (REGSET_ELT_TYPE) 1 << (i % REGSET_ELT_BITS);\n \t}\n \n   /* Propagate life info through the basic blocks\n@@ -1430,7 +1432,7 @@ propagate_block (old, first, last, final, significant, bnum)\n \t\t  register struct sometimes *p = regs_sometimes_live;\n \n \t\t  for (i = 0; i < sometimes_max; i++, p++)\n-\t\t    if (old[p->offset] & (1 << p->bit))\n+\t\t    if (old[p->offset] & ((REGSET_ELT_TYPE) 1 << p->bit))\n \t\t      reg_n_calls_crossed[p->offset * REGSET_ELT_BITS + p->bit]+= 1;\n \t\t}\n \t    }\n@@ -2639,7 +2641,8 @@ dump_flow_info (file)\n       for (regno = 0; regno < max_regno; regno++)\n \t{\n \t  register int offset = regno / REGSET_ELT_BITS;\n-\t  register int bit = 1 << (regno % REGSET_ELT_BITS);\n+\t  register REGSET_ELT_TYPE bit\n+\t    = (REGSET_ELT_TYPE) 1 << (regno % REGSET_ELT_BITS);\n \t  if (basic_block_live_at_start[i][offset] & bit)\n \t      fprintf (file, \" %d\", regno);\n \t}"}]}