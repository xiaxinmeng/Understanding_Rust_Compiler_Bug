{"sha": "bae8b6b2c3a56ab3405445cae8502df405cf815b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFlOGI2YjJjM2E1NmFiMzQwNTQ0NWNhZTg1MDJkZjQwNWNmODE1Yg==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2007-05-12T18:15:38Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2007-05-12T18:15:38Z"}, "message": "gcse.c (gcse_main): Do jump bypassing in CPROP2.\n\n\t* gcse.c (gcse_main): Do jump bypassing in CPROP2.\n\t* passes.c (init_optimization_passes): Move pass_jump_bypass\n\tafter loop2.\n\n\t* basic-block.h (bb_has_eh_pred): Fix style issue.\n\nFrom-SVN: r124640", "tree": {"sha": "75725d6ce95d2bc9a7b1042c5fbda74a6335834d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75725d6ce95d2bc9a7b1042c5fbda74a6335834d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bae8b6b2c3a56ab3405445cae8502df405cf815b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae8b6b2c3a56ab3405445cae8502df405cf815b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bae8b6b2c3a56ab3405445cae8502df405cf815b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae8b6b2c3a56ab3405445cae8502df405cf815b/comments", "author": null, "committer": null, "parents": [{"sha": "7f6055d052b5e8407b136322af334a62b2f2719d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f6055d052b5e8407b136322af334a62b2f2719d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f6055d052b5e8407b136322af334a62b2f2719d"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "8fa8e7c6c9a1c8d56dcd71e5584e3deab8ddd158", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae8b6b2c3a56ab3405445cae8502df405cf815b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae8b6b2c3a56ab3405445cae8502df405cf815b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bae8b6b2c3a56ab3405445cae8502df405cf815b", "patch": "@@ -1,3 +1,11 @@\n+2007-05-12  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* gcse.c (gcse_main): Do jump bypassing in CPROP2.\n+\t* passes.c (init_optimization_passes): Move pass_jump_bypass\n+\tafter loop2.\n+\n+\t* basic-block.h (bb_has_eh_pred): Fix style issue.\n+\n 2007-05-12  Steven Bosscher  <steven@gcc.gnu.org>\n \n \tPR rtl-optimization/31848"}, {"sha": "3116a52d7523779a19faea3c763661ee51ba4d5e", "filename": "gcc/basic-block.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae8b6b2c3a56ab3405445cae8502df405cf815b/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae8b6b2c3a56ab3405445cae8502df405cf815b/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=bae8b6b2c3a56ab3405445cae8502df405cf815b", "patch": "@@ -1159,7 +1159,8 @@ extern bool rtx_equiv_p (rtx *, rtx, int, struct equiv_info *);\n extern bool condjump_equiv_p (struct equiv_info *, bool);\n \n /* Return true when one of the predecessor edges of BB is marked with EDGE_EH.  */\n-static inline bool bb_has_eh_pred (basic_block bb)\n+static inline bool\n+bb_has_eh_pred (basic_block bb)\n {\n   edge e;\n   edge_iterator ei;"}, {"sha": "b18d17a34e75ad8ba5ecddc41cae736d12c6330b", "filename": "gcc/gcse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae8b6b2c3a56ab3405445cae8502df405cf815b/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae8b6b2c3a56ab3405445cae8502df405cf815b/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=bae8b6b2c3a56ab3405445cae8502df405cf815b", "patch": "@@ -789,7 +789,7 @@ gcse_main (rtx f ATTRIBUTE_UNUSED)\n   alloc_gcse_mem ();\n   /* This time, go ahead and allow cprop to alter jumps.  */\n   timevar_push (TV_CPROP2);\n-  one_cprop_pass (pass + 1, true, false);\n+  one_cprop_pass (pass + 1, true, true);\n   timevar_pop (TV_CPROP2);\n   free_gcse_mem ();\n "}, {"sha": "bea89b6f714e432b71c80c3bc0ffadf7d30926c1", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae8b6b2c3a56ab3405445cae8502df405cf815b/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae8b6b2c3a56ab3405445cae8502df405cf815b/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=bae8b6b2c3a56ab3405445cae8502df405cf815b", "patch": "@@ -664,7 +664,6 @@ init_optimization_passes (void)\n       NEXT_PASS (pass_cse);\n       NEXT_PASS (pass_rtl_fwprop);\n       NEXT_PASS (pass_gcse);\n-      NEXT_PASS (pass_jump_bypass);\n       NEXT_PASS (pass_rtl_ifcvt);\n       NEXT_PASS (pass_tracer);\n       /* Perform loop optimizations.  It might be better to do them a bit\n@@ -682,6 +681,7 @@ init_optimization_passes (void)\n \t  *p = NULL;\n \t}\n       NEXT_PASS (pass_web);\n+      NEXT_PASS (pass_jump_bypass);\n       NEXT_PASS (pass_cse2);\n       NEXT_PASS (pass_rtl_fwprop_addr);\n       NEXT_PASS (pass_outof_cfg_layout_mode);"}]}