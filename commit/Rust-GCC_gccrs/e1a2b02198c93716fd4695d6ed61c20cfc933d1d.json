{"sha": "e1a2b02198c93716fd4695d6ed61c20cfc933d1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFhMmIwMjE5OGM5MzcxNmZkNDY5NWQ2ZWQ2MWMyMGNmYzkzM2QxZA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-05-19T07:09:23Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-05-19T07:09:23Z"}, "message": "df.h (df_ref_change_reg_with_loc): Remove old_regno parameter.\n\ngcc/\n\t* df.h (df_ref_change_reg_with_loc): Remove old_regno parameter.\n\tChange type of new_regno to unsigned int.\n\t* df-scan.c (df_ref_change_reg_with_loc_1): Change type of\n\tnew_regno to unsigned int.\n\t(df_ref_change_reg_with_loc): Remove old_regno parameter.\n\tChange type of new_regno to unsigned int.  Use SET_REGNO_RAW.\n\t* rtl.h (SET_REGNO): Update call to df_ref_change_reg_with_loc.\n\t(SET_REGNO_RAW): Add space after \",\".\n\nFrom-SVN: r223338", "tree": {"sha": "625b290a5561d2ca2554e081f1d9861deebab18f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/625b290a5561d2ca2554e081f1d9861deebab18f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1a2b02198c93716fd4695d6ed61c20cfc933d1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a2b02198c93716fd4695d6ed61c20cfc933d1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1a2b02198c93716fd4695d6ed61c20cfc933d1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a2b02198c93716fd4695d6ed61c20cfc933d1d/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dc8afb709d753622e5110bb4bb88415200ce0c5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc8afb709d753622e5110bb4bb88415200ce0c5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc8afb709d753622e5110bb4bb88415200ce0c5a"}], "stats": {"total": 56, "additions": 37, "deletions": 19}, "files": [{"sha": "d847d5681ed9dba2803a8045599c1653bd12d950", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a2b02198c93716fd4695d6ed61c20cfc933d1d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a2b02198c93716fd4695d6ed61c20cfc933d1d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e1a2b02198c93716fd4695d6ed61c20cfc933d1d", "patch": "@@ -1,3 +1,14 @@\n+2015-05-19  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* df.h (df_ref_change_reg_with_loc): Remove old_regno parameter.\n+\tChange type of new_regno to unsigned int.\n+\t* df-scan.c (df_ref_change_reg_with_loc_1): Change type of\n+\tnew_regno to unsigned int.\n+\t(df_ref_change_reg_with_loc): Remove old_regno parameter.\n+\tChange type of new_regno to unsigned int.  Use SET_REGNO_RAW.\n+\t* rtl.h (SET_REGNO): Update call to df_ref_change_reg_with_loc.\n+\t(SET_REGNO_RAW): Add space after \",\".\n+\n 2015-05-19  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* rtl.h (REG_NREGS): New macro"}, {"sha": "6175fd9f56b8e99a85b1744c703d92f4e750d247", "filename": "gcc/df-scan.c", "status": "modified", "additions": 23, "deletions": 15, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a2b02198c93716fd4695d6ed61c20cfc933d1d/gcc%2Fdf-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a2b02198c93716fd4695d6ed61c20cfc933d1d/gcc%2Fdf-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.c?ref=e1a2b02198c93716fd4695d6ed61c20cfc933d1d", "patch": "@@ -1819,7 +1819,7 @@ df_insn_change_bb (rtx_insn *insn, basic_block new_bb)\n static void\n df_ref_change_reg_with_loc_1 (struct df_reg_info *old_df,\n \t\t\t      struct df_reg_info *new_df,\n-\t\t\t      int new_regno, rtx loc)\n+\t\t\t      unsigned int new_regno, rtx loc)\n {\n   df_ref the_ref = old_df->reg_chain;\n \n@@ -1904,25 +1904,33 @@ df_ref_change_reg_with_loc_1 (struct df_reg_info *old_df,\n }\n \n \n-/* Change the regno of all refs that contained LOC from OLD_REGNO to\n-   NEW_REGNO.  Refs that do not match LOC are not changed which means\n-   that artificial refs are not changed since they have no loc.  This\n-   call is to support the SET_REGNO macro. */\n+/* Change the regno of register LOC to NEW_REGNO and update the df\n+   information accordingly.  Refs that do not match LOC are not changed\n+   which means that artificial refs are not changed since they have no loc.\n+   This call is to support the SET_REGNO macro. */\n \n void\n-df_ref_change_reg_with_loc (int old_regno, int new_regno, rtx loc)\n+df_ref_change_reg_with_loc (rtx loc, unsigned int new_regno)\n {\n-  if ((!df) || (old_regno == -1) || (old_regno == new_regno))\n+  unsigned int old_regno = REGNO (loc);\n+  if (old_regno == new_regno)\n     return;\n \n-  df_grow_reg_info ();\n-\n-  df_ref_change_reg_with_loc_1 (DF_REG_DEF_GET (old_regno),\n-\t\t\t\tDF_REG_DEF_GET (new_regno), new_regno, loc);\n-  df_ref_change_reg_with_loc_1 (DF_REG_USE_GET (old_regno),\n-\t\t\t\tDF_REG_USE_GET (new_regno), new_regno, loc);\n-  df_ref_change_reg_with_loc_1 (DF_REG_EQ_USE_GET (old_regno),\n-\t\t\t\tDF_REG_EQ_USE_GET (new_regno), new_regno, loc);\n+  if (df)\n+    {\n+      df_grow_reg_info ();\n+\n+      df_ref_change_reg_with_loc_1 (DF_REG_DEF_GET (old_regno),\n+\t\t\t\t    DF_REG_DEF_GET (new_regno),\n+\t\t\t\t    new_regno, loc);\n+      df_ref_change_reg_with_loc_1 (DF_REG_USE_GET (old_regno),\n+\t\t\t\t    DF_REG_USE_GET (new_regno),\n+\t\t\t\t    new_regno, loc);\n+      df_ref_change_reg_with_loc_1 (DF_REG_EQ_USE_GET (old_regno),\n+\t\t\t\t    DF_REG_EQ_USE_GET (new_regno),\n+\t\t\t\t    new_regno, loc);\n+    }\n+  SET_REGNO_RAW (loc, new_regno);\n }\n \n "}, {"sha": "7e233667fc7ae74d9fb43805042eb42ede85d8ad", "filename": "gcc/df.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a2b02198c93716fd4695d6ed61c20cfc933d1d/gcc%2Fdf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a2b02198c93716fd4695d6ed61c20cfc933d1d/gcc%2Fdf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf.h?ref=e1a2b02198c93716fd4695d6ed61c20cfc933d1d", "patch": "@@ -1049,7 +1049,7 @@ extern void df_recompute_luids (basic_block);\n extern void df_insn_change_bb (rtx_insn *, basic_block);\n extern void df_maybe_reorganize_use_refs (enum df_ref_order);\n extern void df_maybe_reorganize_def_refs (enum df_ref_order);\n-extern void df_ref_change_reg_with_loc (int, int, rtx);\n+extern void df_ref_change_reg_with_loc (rtx, unsigned int);\n extern void df_notes_rescan (rtx_insn *);\n extern void df_hard_reg_init (void);\n extern void df_update_entry_block_defs (void);"}, {"sha": "664d3fafad174b7571d46ce4d34c4980a3cbf1fe", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a2b02198c93716fd4695d6ed61c20cfc933d1d/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a2b02198c93716fd4695d6ed61c20cfc933d1d/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=e1a2b02198c93716fd4695d6ed61c20cfc933d1d", "patch": "@@ -1693,9 +1693,8 @@ inline rtx_insn *JUMP_LABEL_AS_INSN (const rtx_insn *insn)\n /* For a REG rtx, REGNO extracts the register number.  REGNO can only\n    be used on RHS.  Use SET_REGNO to change the value.  */\n #define REGNO(RTX) (rhs_regno(RTX))\n-#define SET_REGNO(RTX,N) \\\n-  (df_ref_change_reg_with_loc (REGNO (RTX), N, RTX), XCUINT (RTX, 0, REG) = N)\n-#define SET_REGNO_RAW(RTX,N) (XCUINT (RTX, 0, REG) = N)\n+#define SET_REGNO(RTX, N) (df_ref_change_reg_with_loc (RTX, N))\n+#define SET_REGNO_RAW(RTX, N) (XCUINT (RTX, 0, REG) = N)\n \n /* Return the number of consecutive registers in a REG.  This is always\n    1 for pseudo registers and is determined by HARD_REGNO_NREGS for"}]}