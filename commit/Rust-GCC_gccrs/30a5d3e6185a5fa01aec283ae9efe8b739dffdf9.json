{"sha": "30a5d3e6185a5fa01aec283ae9efe8b739dffdf9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBhNWQzZTYxODVhNWZhMDFhZWMyODNhZTllZmU4YjczOWRmZmRmOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-05-16T07:28:16Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-05-16T07:28:16Z"}, "message": "re PR target/66140 (ICE at extract_insn, at recog.c:2343 when compiling for alpha with gcc-5.1.1)\n\n\tPR target/66140\n\t* config/alpha/alpha.c (get_aligned_mem): Also look for reload\n\treplacements in memory addresses.\n\t(get_unaligned_address): Ditto.\n\ntestsuite/ChangeLog:\n\n\tPR target/66140\n\t* gcc.target/alpha/pr66140.c: New test.\n\nFrom-SVN: r223232", "tree": {"sha": "765de0283dc457aa33c8508aaa8271d8fae71fc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/765de0283dc457aa33c8508aaa8271d8fae71fc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30a5d3e6185a5fa01aec283ae9efe8b739dffdf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30a5d3e6185a5fa01aec283ae9efe8b739dffdf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30a5d3e6185a5fa01aec283ae9efe8b739dffdf9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30a5d3e6185a5fa01aec283ae9efe8b739dffdf9/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ea73ae3b8b3df5d0b015df5536c9fe4875c8a4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ea73ae3b8b3df5d0b015df5536c9fe4875c8a4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ea73ae3b8b3df5d0b015df5536c9fe4875c8a4f"}], "stats": {"total": 72, "additions": 67, "deletions": 5}, "files": [{"sha": "da14ae887609d3addfe272b57ac52c105e536145", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30a5d3e6185a5fa01aec283ae9efe8b739dffdf9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30a5d3e6185a5fa01aec283ae9efe8b739dffdf9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30a5d3e6185a5fa01aec283ae9efe8b739dffdf9", "patch": "@@ -1,3 +1,10 @@\n+2015-05-16  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/66140\n+\t* config/alpha/alpha.c (get_aligned_mem): Also look for reload\n+\treplacements in memory addresses.\n+\t(get_unaligned_address): Ditto.\n+\n 2015-05-15  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR tree-optimization/64454"}, {"sha": "6865321d4570584abaf8d97bc35be61e74b43e45", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30a5d3e6185a5fa01aec283ae9efe8b739dffdf9/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30a5d3e6185a5fa01aec283ae9efe8b739dffdf9/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=30a5d3e6185a5fa01aec283ae9efe8b739dffdf9", "patch": "@@ -1556,8 +1556,7 @@ get_aligned_mem (rtx ref, rtx *paligned_mem, rtx *pbitnum)\n \n   gcc_assert (MEM_P (ref));\n \n-  if (reload_in_progress\n-      && ! memory_address_p (GET_MODE (ref), XEXP (ref, 0)))\n+  if (reload_in_progress)\n     {\n       base = find_replacement (&XEXP (ref, 0));\n       gcc_assert (memory_address_p (GET_MODE (ref), base));\n@@ -1602,11 +1601,9 @@ get_unaligned_address (rtx ref)\n \n   gcc_assert (MEM_P (ref));\n \n-  if (reload_in_progress\n-      && ! memory_address_p (GET_MODE (ref), XEXP (ref, 0)))\n+  if (reload_in_progress)\n     {\n       base = find_replacement (&XEXP (ref, 0));\n-\n       gcc_assert (memory_address_p (GET_MODE (ref), base));\n     }\n   else"}, {"sha": "123dadfbaf31fb73cb33a2ac7ee6cffe5d478b4c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30a5d3e6185a5fa01aec283ae9efe8b739dffdf9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30a5d3e6185a5fa01aec283ae9efe8b739dffdf9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=30a5d3e6185a5fa01aec283ae9efe8b739dffdf9", "patch": "@@ -1,3 +1,8 @@\n+2015-05-16  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/66140\n+\t* gcc.target/alpha/pr66140.c: New test.\n+\n 2015-05-15  Mikhail Maltsev  <maltsevm@gmail.com>\n \n \tPR c/48956"}, {"sha": "d559f69a02bc5e06218cd796d11eaf5c29045303", "filename": "gcc/testsuite/gcc.target/alpha/pr66140.c", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30a5d3e6185a5fa01aec283ae9efe8b739dffdf9/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fpr66140.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30a5d3e6185a5fa01aec283ae9efe8b739dffdf9/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fpr66140.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fpr66140.c?ref=30a5d3e6185a5fa01aec283ae9efe8b739dffdf9", "patch": "@@ -0,0 +1,53 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mcpu=ev4\" } */\n+\n+struct scsi_cmnd {\n+\tint sc_data_direction;\n+};\n+struct lpfc_hba {\n+\tunsigned cfg_total_seg_cnt;\n+};\n+struct lpfc_scsi_buf {\n+\tstruct scsi_cmnd *pCmd;\n+\tunsigned seg_cnt;\n+\tunsigned *fcp_bpl;\n+};\n+\n+extern void *sg_next(void *sg);\n+extern void *scsi_sglist(struct scsi_cmnd *cmd);\n+extern unsigned scsi_sg_count(struct scsi_cmnd *cmd);\n+\n+static inline void dma_map_sg_attrs(void *sg, int nents, int dir)\n+{\n+\tint i;\n+\n+\tfor (i = 0; i < nents; i++, sg = sg_next(sg))\n+\t\t;\n+\n+\tif (!dir)\n+\t\tasm volatile( \"call_pal %0\" : : \"i\"(129));\n+}\n+\n+static inline void lpfc_bg_setup_bpl(struct lpfc_hba *phba, struct scsi_cmnd *sc,\n+\t\t\t\t     unsigned *pde5)\n+{\n+\tvoid *sgde;\n+\tint i;\n+\n+\t*pde5 = (((0x85 & 0x000000ff) << 24) | (*pde5 & ~(0x000000ff << 24)));\n+\tfor (i = 0, sgde = scsi_sglist(sc); i < 2; i++, sgde = sg_next(sgde))\n+\t\t;\n+}\n+\n+void lpfc_bg_scsi_prep_dma_buf_s3(struct lpfc_hba *phba,\n+\t\t\t\t  struct lpfc_scsi_buf *lpfc_cmd)\n+{\n+\tstruct scsi_cmnd *scsi_cmnd = lpfc_cmd->pCmd;\n+\tunsigned *bpl = lpfc_cmd->fcp_bpl;\n+\n+\tdma_map_sg_attrs(scsi_sglist(scsi_cmnd),\n+\t\t\t scsi_sg_count(scsi_cmnd),\n+\t\t\t scsi_cmnd->sc_data_direction);\n+\tif (lpfc_cmd->seg_cnt > phba->cfg_total_seg_cnt)\n+\t\tlpfc_bg_setup_bpl(phba, scsi_cmnd, bpl);\n+}"}]}