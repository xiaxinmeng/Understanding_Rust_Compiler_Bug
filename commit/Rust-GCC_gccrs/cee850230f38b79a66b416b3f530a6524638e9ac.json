{"sha": "cee850230f38b79a66b416b3f530a6524638e9ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2VlODUwMjMwZjM4Yjc5YTY2YjQxNmIzZjUzMGE2NTI0NjM4ZTlhYw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-06T00:05:51Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-06T00:05:51Z"}, "message": "(expand_binop): When trying to expand a multiple word add into multiple single word adds...\n\n(expand_binop): When trying to expand a multiple word\nadd into multiple single word adds, don't overwrite OP0 and OP1 in\ncase we must backtrack.  We use instead new variables XOP0 and XOP1.\n\nFrom-SVN: r2696", "tree": {"sha": "c83ad80b2559ce551fb3cf7f3746a7a6eecc2967", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c83ad80b2559ce551fb3cf7f3746a7a6eecc2967"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cee850230f38b79a66b416b3f530a6524638e9ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cee850230f38b79a66b416b3f530a6524638e9ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cee850230f38b79a66b416b3f530a6524638e9ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cee850230f38b79a66b416b3f530a6524638e9ac/comments", "author": null, "committer": null, "parents": [{"sha": "432a2edec07bfa2311541b194071b32d4b9890ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/432a2edec07bfa2311541b194071b32d4b9890ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/432a2edec07bfa2311541b194071b32d4b9890ec"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "57da821a0eefda99bd8da7e50d98a9e63434650a", "filename": "gcc/optabs.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cee850230f38b79a66b416b3f530a6524638e9ac/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cee850230f38b79a66b416b3f530a6524638e9ac/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=cee850230f38b79a66b416b3f530a6524638e9ac", "patch": "@@ -558,6 +558,7 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n       optab otheroptab = binoptab == add_optab ? sub_optab : add_optab;\n       int nwords = GET_MODE_BITSIZE (mode) / BITS_PER_WORD;\n       rtx carry_in, carry_out;\n+      rtx xop0, xop1;\n \n       /* We can handle either a 1 or -1 value for the carry.  If STORE_FLAG\n \t value is one of those, use it.  Otherwise, use 1 since it is the\n@@ -569,20 +570,20 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n #endif\n \n       /* Prepare the operands.  */\n-      op0 = force_reg (mode, op0);\n-      op1 = force_reg (mode, op1);\n+      xop0 = force_reg (mode, op0);\n+      xop1 = force_reg (mode, op1);\n \n       if (target == 0 || GET_CODE (target) != REG\n-\t  || target == op0 || target == op1)\n+\t  || target == xop0 || target == xop1)\n \ttarget = gen_reg_rtx (mode);\n \n       /* Do the actual arithmetic.  */\n       for (i = 0; i < nwords; i++)\n \t{\n \t  int index = (WORDS_BIG_ENDIAN ? nwords - i - 1 : i);\n \t  rtx target_piece = operand_subword (target, index, 1, mode);\n-\t  rtx op0_piece = operand_subword_force (op0, index, mode);\n-\t  rtx op1_piece = operand_subword_force (op1, index, mode);\n+\t  rtx op0_piece = operand_subword_force (xop0, index, mode);\n+\t  rtx op1_piece = operand_subword_force (xop1, index, mode);\n \t  rtx x;\n \n \t  /* Main add/subtract of the input operands.  */\n@@ -641,7 +642,7 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t  \n \t  temp = emit_move_insn (target, target);\n \t  REG_NOTES (temp) = gen_rtx (EXPR_LIST, REG_EQUAL,\n-\t\t\t\t      gen_rtx (binoptab->code, mode, op0, op1),\n+\t\t\t\t      gen_rtx (binoptab->code, mode, xop0, xop1),\n \t\t\t\t      REG_NOTES (temp));\n \t  return target;\n \t}"}]}