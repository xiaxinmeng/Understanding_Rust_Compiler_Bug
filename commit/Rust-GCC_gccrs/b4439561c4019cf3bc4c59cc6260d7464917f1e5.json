{"sha": "b4439561c4019cf3bc4c59cc6260d7464917f1e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ0Mzk1NjFjNDAxOWNmM2JjNGM1OWNjNjI2MGQ3NDY0OTE3ZjFlNQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2018-10-12T18:13:25Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2018-10-12T18:13:25Z"}, "message": "Fix error-recovery ICE in check_proc_interface\n\n        PR fortran/58787\n        * decl.c (get_proc_name): Return with error before\n        creating sym_tree.\n\n        PR fortran/58787\n        * gfortran.dg/goacc/pr77765.f90: Modify dg-error.\n        * gfortran.dg/interface_42.f90: Ditto.\n        * gfortran.dg/internal_references_1.f90: Ditto.\n        * gfortran.dg/invalid_procedure_name.f90: Ditto.\n        * gfortran.dg/pr65453.f90: Ditto.\n        * gfortran.dg/pr77414.f90: Ditto.\n        * gfortran.dg/pr78741.f90: Ditto.\n        * gfortran.dg/same_name_2.f90: Ditto.\n\nFrom-SVN: r265125", "tree": {"sha": "c4412a931256b6cbf19606a293be351d0b3ea9c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4412a931256b6cbf19606a293be351d0b3ea9c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4439561c4019cf3bc4c59cc6260d7464917f1e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4439561c4019cf3bc4c59cc6260d7464917f1e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4439561c4019cf3bc4c59cc6260d7464917f1e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4439561c4019cf3bc4c59cc6260d7464917f1e5/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8d3cc098eda75481a13d66f6e04fadffc5cecff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8d3cc098eda75481a13d66f6e04fadffc5cecff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8d3cc098eda75481a13d66f6e04fadffc5cecff"}], "stats": {"total": 101, "additions": 69, "deletions": 32}, "files": [{"sha": "21813638bf308decd20427e49f9b89e239acdd7d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b4439561c4019cf3bc4c59cc6260d7464917f1e5", "patch": "@@ -1,3 +1,9 @@\n+2018-10-12  Tobias Burnus <burnus@net-b.de>\n+\n+\tPR fortran/58787\n+\t* decl.c (get_proc_name): Return with error before\n+\tcreating sym_tree.\n+\n 2018-10-11  Tobias Burnus <burnus@net-b.de>\n \n \tRevert:"}, {"sha": "87c736fb2dbc44b9c3c308bd5430daa06383697f", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 37, "deletions": 17, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=b4439561c4019cf3bc4c59cc6260d7464917f1e5", "patch": "@@ -1231,28 +1231,39 @@ get_proc_name (const char *name, gfc_symbol **result, bool module_fcn_entry)\n \t  && sym->attr.proc != 0\n \t  && (sym->attr.subroutine || sym->attr.function || sym->attr.entry)\n \t  && sym->attr.if_source != IFSRC_UNKNOWN)\n-\tgfc_error_now (\"Procedure %qs at %C is already defined at %L\",\n-\t\t       name, &sym->declared_at);\n-\n+\t{\n+\t  gfc_error_now (\"Procedure %qs at %C is already defined at %L\",\n+\t\t\t name, &sym->declared_at);\n+\t  return true;\n+\t}\n       if (sym->attr.flavor != 0\n \t  && sym->attr.entry && sym->attr.if_source != IFSRC_UNKNOWN)\n-\tgfc_error_now (\"Procedure %qs at %C is already defined at %L\",\n-\t\t       name, &sym->declared_at);\n+\t{\n+\t  gfc_error_now (\"Procedure %qs at %C is already defined at %L\",\n+\t\t\t name, &sym->declared_at);\n+\t  return true;\n+\t}\n \n       if (sym->attr.external && sym->attr.procedure\n \t  && gfc_current_state () == COMP_CONTAINS)\n-\tgfc_error_now (\"Contained procedure %qs at %C clashes with \"\n-\t\t\t\"procedure defined at %L\",\n-\t\t       name, &sym->declared_at);\n+\t{\n+\t  gfc_error_now (\"Contained procedure %qs at %C clashes with \"\n+\t\t\t \"procedure defined at %L\",\n+\t\t\t name, &sym->declared_at);\n+\t  return true;\n+\t}\n \n       /* Trap a procedure with a name the same as interface in the\n \t encompassing scope.  */\n       if (sym->attr.generic != 0\n \t  && (sym->attr.subroutine || sym->attr.function)\n \t  && !sym->attr.mod_proc)\n-\tgfc_error_now (\"Name %qs at %C is already defined\"\n-\t\t       \" as a generic interface at %L\",\n-\t\t       name, &sym->declared_at);\n+\t{\n+\t  gfc_error_now (\"Name %qs at %C is already defined\"\n+\t\t\t \" as a generic interface at %L\",\n+\t\t\t name, &sym->declared_at);\n+\t  return true;\n+\t}\n \n       /* Trap declarations of attributes in encompassing scope.  The\n \t signature for this is that ts.kind is set.  Legitimate\n@@ -1263,8 +1274,11 @@ get_proc_name (const char *name, gfc_symbol **result, bool module_fcn_entry)\n \t  && gfc_current_ns->parent != NULL\n \t  && sym->attr.access == 0\n \t  && !module_fcn_entry)\n-\tgfc_error_now (\"Procedure %qs at %C has an explicit interface \"\n+\t{\n+\t  gfc_error_now (\"Procedure %qs at %C has an explicit interface \"\n \t\t       \"from a previous declaration\",  name);\n+\t  return true;\n+\t}\n     }\n \n   /* C1246 (R1225) MODULE shall appear only in the function-stmt or\n@@ -1276,17 +1290,23 @@ get_proc_name (const char *name, gfc_symbol **result, bool module_fcn_entry)\n       && !current_attr.module_procedure\n       && sym->attr.proc == PROC_MODULE\n       && gfc_state_stack->state == COMP_CONTAINS)\n-    gfc_error_now (\"Procedure %qs defined in interface body at %L \"\n-\t\t   \"clashes with internal procedure defined at %C\",\n-\t\t    name, &sym->declared_at);\n+    {\n+      gfc_error_now (\"Procedure %qs defined in interface body at %L \"\n+\t\t     \"clashes with internal procedure defined at %C\",\n+\t\t     name, &sym->declared_at);\n+      return true;\n+    }\n \n   if (sym && !sym->gfc_new\n       && sym->attr.flavor != FL_UNKNOWN\n       && sym->attr.referenced == 0 && sym->attr.subroutine == 1\n       && gfc_state_stack->state == COMP_CONTAINS\n       && gfc_state_stack->previous->state == COMP_SUBROUTINE)\n-    gfc_error_now (\"Procedure %qs at %C is already defined at %L\",\n-\t\t    name, &sym->declared_at);\n+    {\n+      gfc_error_now (\"Procedure %qs at %C is already defined at %L\",\n+\t\t     name, &sym->declared_at);\n+      return true;\n+    }\n \n   if (gfc_current_ns->parent == NULL || *result == NULL)\n     return rc;"}, {"sha": "4991c2ef54fbaeba3fd1cffdd5a8cfc2e7410d34", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b4439561c4019cf3bc4c59cc6260d7464917f1e5", "patch": "@@ -1,3 +1,15 @@\n+2018-10-12  Tobias Burnus <burnus@net-b.de>\n+\n+\tPR fortran/58787\n+\t* gfortran.dg/goacc/pr77765.f90: Modify dg-error.\n+\t* gfortran.dg/interface_42.f90: Ditto.\n+\t* gfortran.dg/internal_references_1.f90: Ditto.\n+\t* gfortran.dg/invalid_procedure_name.f90: Ditto.\n+\t* gfortran.dg/pr65453.f90: Ditto.\n+\t* gfortran.dg/pr77414.f90: Ditto.\n+\t* gfortran.dg/pr78741.f90: Ditto.\n+\t* gfortran.dg/same_name_2.f90: Ditto.\n+\n 2018-10-12  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* gcc.target/aarch64/popcnt.c: Test zero-extended popcount."}, {"sha": "afa0a56a6324edb4ecc533c0d1ad0ff5b0034f4b", "filename": "gcc/testsuite/gfortran.dg/goacc/pr77765.f90", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr77765.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr77765.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr77765.f90?ref=b4439561c4019cf3bc4c59cc6260d7464917f1e5", "patch": "@@ -13,7 +13,6 @@ end function f\n end module m\n \n ! { dg-error \"Procedure 'f' at .1. is already defined\" \"\" { target *-*-* } 8 }\n-! { dg-error \"Duplicate RECURSIVE attribute specified\" \"\" { target *-*-* } 8 }\n ! { dg-error \".1.\" \"\" { target *-*-* } 10 }\n-! { dg-error \"Unexpected ..ACC ROUTINE\" \"\" { target *-*-* } 11 }\n+! { dg-error \"Syntax error in ..ACC ROUTINE . NAME . at .1., invalid function name f\" \"\" { target *-*-* } 11 }\n ! { dg-error \"Expecting END MODULE statement\" \"\" { target *-*-* } 12 }"}, {"sha": "d260755eb6a3612c7702607e44f28b81e860eb1c", "filename": "gcc/testsuite/gfortran.dg/interface_42.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_42.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_42.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_42.f90?ref=b4439561c4019cf3bc4c59cc6260d7464917f1e5", "patch": "@@ -13,12 +13,12 @@ end subroutine foo_da\n \n    contains\n \n-      subroutine foo_da(da, copy) ! { dg-error \"defined in interface body\" }\n+      subroutine foo_da(da, copy) ! { dg-error \"defined in interface body|PROCEDURE attribute conflicts with PROCEDURE attribute\" }\n          integer, intent(in) :: da(:)\n          integer, allocatable, intent(out) :: copy(:)\n          allocate( copy( size(da) ) )\n          copy = da\n       end subroutine foo_da\n \n end module copy\n-{ dg-prune-output \"compilation terminated\" }\n+! { dg-prune-output \"compilation terminated\" }"}, {"sha": "b53ab325aded6dca00c2c42b8957f557b1311dfa", "filename": "gcc/testsuite/gfortran.dg/internal_references_1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ftestsuite%2Fgfortran.dg%2Finternal_references_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ftestsuite%2Fgfortran.dg%2Finternal_references_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finternal_references_1.f90?ref=b4439561c4019cf3bc4c59cc6260d7464917f1e5", "patch": "@@ -16,8 +16,8 @@ subroutine p (i)   ! { dg-error \"(1)\" }\n   end subroutine\n \n   subroutine p (i)   ! { dg-error \"is already defined\" }\n-   integer :: i\n-  end subroutine\n+   integer :: i   ! { dg-error \"Unexpected data declaration statement in CONTAINS section\" }\n+  end subroutine  ! { dg-error \"Expecting END MODULE statement\" }\n end module\n !\n ! PR25124 - would happily ignore the declaration of foo in the main program.\n@@ -27,8 +27,8 @@ program test\n x = foo ()\n contains\n     function foo () ! { dg-error \"explicit interface from a previous\" }\n-      foo = 1.0\n-    end function foo\n+      foo = 1.0  ! { dg-error \"Unexpected assignment statement in CONTAINS section\" }\n+    end function foo ! { dg-error \"Expecting END PROGRAM statement\" }\n     function bar ()\n       bar = 1.0\n     end function bar"}, {"sha": "74eaa636ae0168593d4bbfbc6d279a105d8a6a5d", "filename": "gcc/testsuite/gfortran.dg/invalid_procedure_name.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ftestsuite%2Fgfortran.dg%2Finvalid_procedure_name.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ftestsuite%2Fgfortran.dg%2Finvalid_procedure_name.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finvalid_procedure_name.f90?ref=b4439561c4019cf3bc4c59cc6260d7464917f1e5", "patch": "@@ -9,6 +9,6 @@ END SUBROUTINE S2\n END INTERFACE I1\n CONTAINS\n  SUBROUTINE I1(I) ! { dg-error \"already defined as a generic\" }\n- END SUBROUTINE I1\n+ END SUBROUTINE I1 ! { dg-error \"Expecting END PROGRAM statement\" }\n END\n "}, {"sha": "9f40121b4432194daf8e9f523419bafcd0ae81ab", "filename": "gcc/testsuite/gfortran.dg/pr65453.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr65453.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr65453.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr65453.f90?ref=b4439561c4019cf3bc4c59cc6260d7464917f1e5", "patch": "@@ -5,4 +5,4 @@\n   contains\n     subroutine foo() ! { dg-error \"clashes with procedure\" }\n     end\n-end\n+end ! { dg-error \"Two main PROGRAMs\" }"}, {"sha": "00f14e35a8d93ddc851fa58befdb8b027f1754bc", "filename": "gcc/testsuite/gfortran.dg/pr77414.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77414.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77414.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77414.f90?ref=b4439561c4019cf3bc4c59cc6260d7464917f1e5", "patch": "@@ -4,6 +4,6 @@ subroutine a(x)               ! { dg-error \"(1)\" }\n    character(*) :: x\n    contains\n       subroutine a(x)         ! { dg-error \" is already defined at\" }\n-         character(*) :: x\n+         character(*) :: x    ! { dg-error \"Unexpected data declaration statement in CONTAINS section\" }\n       end subroutine a\n-end subroutine a\n+end subroutine a  ! { dg-error \"Expecting END PROGRAM statement\" }"}, {"sha": "707b2996307aaa21ea44cf81e6a66c4c8f657ab5", "filename": "gcc/testsuite/gfortran.dg/pr78741.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78741.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78741.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78741.f90?ref=b4439561c4019cf3bc4c59cc6260d7464917f1e5", "patch": "@@ -11,6 +11,6 @@ subroutine s(n, x)\n    x = 'b'\n contains\n    subroutine g         ! { dg-error \"(1)\" }\n-      z(1) = x(1:1)\n+      z(1) = x(1:1) ! { dg-error \"Unclassifiable statement\" }\n    end\n end"}, {"sha": "f37de55e651925329ab3f50dcd24138b2745211d", "filename": "gcc/testsuite/gfortran.dg/same_name_2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ftestsuite%2Fgfortran.dg%2Fsame_name_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4439561c4019cf3bc4c59cc6260d7464917f1e5/gcc%2Ftestsuite%2Fgfortran.dg%2Fsame_name_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsame_name_2.f90?ref=b4439561c4019cf3bc4c59cc6260d7464917f1e5", "patch": "@@ -10,6 +10,6 @@ subroutine aa ! { dg-error \"Procedure\" }\n    write(*,*) 'AA'\n end subroutine aa\n subroutine aa ! { dg-error \"is already defined\" }\n-   write(*,*) 'BB'\n-end subroutine aa\n+   write(*,*) 'BB' ! { dg-error \"Unexpected WRITE statement in CONTAINS section\" }\n+end subroutine aa ! { dg-error \"Expecting END MODULE statement\" }\n end module"}]}