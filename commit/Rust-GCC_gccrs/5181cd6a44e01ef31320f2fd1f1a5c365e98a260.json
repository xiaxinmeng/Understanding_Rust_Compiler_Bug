{"sha": "5181cd6a44e01ef31320f2fd1f1a5c365e98a260", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE4MWNkNmE0NGUwMWVmMzEzMjBmMmZkMWYxYTVjMzY1ZTk4YTI2MA==", "commit": {"author": {"name": "Ira Rosen", "email": "ira.rosen@linaro.org", "date": "2011-06-21T11:58:33Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2011-06-21T11:58:33Z"}, "message": "re PR tree-optimization/49478 (ice in expand_widen_pattern_expr with -O3)\n\n\n        PR tree-optimization/49478\n        * tree-vect-loop.c (vectorizable_reduction): Handle DOT_PROD_EXPR\n        with constant operand.\n\nFrom-SVN: r175255", "tree": {"sha": "b9d55e96eaf8895e0cdcf9b66c46d1ba0bccfc9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9d55e96eaf8895e0cdcf9b66c46d1ba0bccfc9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5181cd6a44e01ef31320f2fd1f1a5c365e98a260", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5181cd6a44e01ef31320f2fd1f1a5c365e98a260", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5181cd6a44e01ef31320f2fd1f1a5c365e98a260", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5181cd6a44e01ef31320f2fd1f1a5c365e98a260/comments", "author": null, "committer": null, "parents": [{"sha": "e4ee3d702b745dfc7890e80be4bf8ad02134e3bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4ee3d702b745dfc7890e80be4bf8ad02134e3bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4ee3d702b745dfc7890e80be4bf8ad02134e3bb"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "317d05767a62ba1c70a5150a18b1490b916891c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5181cd6a44e01ef31320f2fd1f1a5c365e98a260/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5181cd6a44e01ef31320f2fd1f1a5c365e98a260/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5181cd6a44e01ef31320f2fd1f1a5c365e98a260", "patch": "@@ -1,3 +1,9 @@\n+2011-06-21  Ira Rosen  <ira.rosen@linaro.org>\n+\n+\tPR tree-optimization/49478\n+\t* tree-vect-loop.c (vectorizable_reduction): Handle DOT_PROD_EXPR\n+\twith constant operand.\n+\n 2011-06-21  Richard Guenther  <rguenther@suse.de>\n \n \t* ipa-inline-transform.c (inline_transform): Fix typo."}, {"sha": "a615950bf00c218c167be3c6ac30882d45296c22", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5181cd6a44e01ef31320f2fd1f1a5c365e98a260/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5181cd6a44e01ef31320f2fd1f1a5c365e98a260/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5181cd6a44e01ef31320f2fd1f1a5c365e98a260", "patch": "@@ -1,3 +1,8 @@\n+2011-06-21  Ira Rosen  <ira.rosen@linaro.org>\n+\n+\tPR tree-optimization/49478\n+\t* gcc.dg/vect/pr49478.c\n+\n 2011-06-21  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/49483"}, {"sha": "064539923802d965cc9435e513d22697f5640641", "filename": "gcc/testsuite/gcc.dg/vect/pr49478.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5181cd6a44e01ef31320f2fd1f1a5c365e98a260/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr49478.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5181cd6a44e01ef31320f2fd1f1a5c365e98a260/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr49478.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr49478.c?ref=5181cd6a44e01ef31320f2fd1f1a5c365e98a260", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n+\n+#include <stdarg.h>\n+\n+#define N 64\n+\n+unsigned char X[N] __attribute__ ((__aligned__(__BIGGEST_ALIGNMENT__))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63};\n+\n+unsigned int\n+foo (int len) {\n+  int i;\n+  unsigned int result = 0;\n+  unsigned short prod;\n+\n+  for (i=0; i<len; i++) {\n+    prod = X[i] * 15;\n+    result += prod;\n+  }\n+  return result;\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */\n+"}, {"sha": "7691267388285316ba481e62a80526520656deff", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5181cd6a44e01ef31320f2fd1f1a5c365e98a260/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5181cd6a44e01ef31320f2fd1f1a5c365e98a260/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=5181cd6a44e01ef31320f2fd1f1a5c365e98a260", "patch": "@@ -4591,6 +4591,25 @@ vectorizable_reduction (gimple stmt, gimple_stmt_iterator *gsi,\n       return false;\n     }\n \n+  /* In case of widenning multiplication by a constant, we update the type\n+     of the constant to be the type of the other operand.  We check that the\n+     constant fits the type in the pattern recognition pass.  */\n+  if (code == DOT_PROD_EXPR\n+      && !types_compatible_p (TREE_TYPE (ops[0]), TREE_TYPE (ops[1])))\n+    {\n+      if (TREE_CODE (ops[0]) == INTEGER_CST)\n+        ops[0] = fold_convert (TREE_TYPE (ops[1]), ops[0]);\n+      else if (TREE_CODE (ops[1]) == INTEGER_CST)\n+        ops[1] = fold_convert (TREE_TYPE (ops[0]), ops[1]);\n+      else\n+        {\n+          if (vect_print_dump_info (REPORT_DETAILS))\n+            fprintf (vect_dump, \"invalid types in dot-prod\");\n+\n+          return false;\n+        }\n+    }\n+\n   if (!vec_stmt) /* transformation not required.  */\n     {\n       if (!vect_model_reduction_cost (stmt_info, epilog_reduc_code, ncopies))"}]}