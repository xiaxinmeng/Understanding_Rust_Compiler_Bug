{"sha": "4244aeda6c44bd94e44f1ae64e348750cd4826e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI0NGFlZGE2YzQ0YmQ5NGU0NGYxYWU2NGUzNDg3NTBjZDQ4MjZlNQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-08-18T10:06:24Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-08-18T10:06:24Z"}, "message": "xiberty stuff isn't needed anymore.\n\nFrom-SVN: r21822", "tree": {"sha": "9f874ac2ce3b11a51fde5aeebec53b1a54250318", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f874ac2ce3b11a51fde5aeebec53b1a54250318"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4244aeda6c44bd94e44f1ae64e348750cd4826e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4244aeda6c44bd94e44f1ae64e348750cd4826e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4244aeda6c44bd94e44f1ae64e348750cd4826e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4244aeda6c44bd94e44f1ae64e348750cd4826e5/comments", "author": null, "committer": null, "parents": [{"sha": "7b31b7d9bd976765848cdc282e0ea7e2617bb35b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b31b7d9bd976765848cdc282e0ea7e2617bb35b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b31b7d9bd976765848cdc282e0ea7e2617bb35b"}], "stats": {"total": 101, "additions": 0, "deletions": 101}, "files": [{"sha": "2729c096a4958267325ff57acfb5c2e5083e4a4f", "filename": "xiberty/configure.in", "status": "removed", "additions": 0, "deletions": 101, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b31b7d9bd976765848cdc282e0ea7e2617bb35b/xiberty%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b31b7d9bd976765848cdc282e0ea7e2617bb35b/xiberty%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/xiberty%2Fconfigure.in?ref=7b31b7d9bd976765848cdc282e0ea7e2617bb35b", "patch": "@@ -1,101 +0,0 @@\n-# This file is a shell script fragment that supplies the information\n-# necessary for a configure script to process the program in\n-# this directory.  For more information, look at ../configure.\n-\n-# We need multilib support.\n-. ${srcdir}/../cfg-ml-com.in\n-\n-configdirs=\n-srctrigger=../libiberty/getopt1.c\n-srcname=\"cross -liberty library\"\n-Makefile_in=../libiberty/Makefile.in\n-\n-case \"$srcdir\" in\n-    \".\") ;;\n-    *) srcdir=${srcdir}/../libiberty ;;\n-esac\n-\n-# per-host:\n-\n-# per-target:\n-\n-files=\"../libiberty/alloca-norm.h\"\n-links=\"alloca-conf.h\"\n-\n-xhost=${target}\n-xsrcdir=../libiberty/\n-. ${srcdir}/../libiberty/config.table\n-target_makefile_frag=${frag}\n-\n-case \"$srcdir\" in\n-    \".\")\n-\t# Make sure we also make links to all the source files\n-\tsource_files=`echo ../libiberty/*.[ch] ../libiberty/functions.def`\n-\tfiles=\"${files} ${source_files}\"\n-\tsource_links=`echo \"$source_files\" | sed -e 's|../libiberty/||g'`\n-\tlinks=\"${links} ${source_links}\"\n-\t;;\n-    *)\n-\t;;\n-esac\n-\n-# post-target:\n-\n-# if we are candian crossing the we need to pick up host copies of\n-# the tools, otherwise we can look in the current tree\n-# but we shouldn't build xiberty if we're not canadian crossing.\n-if [ \"${host}\" != \"${target}\" ] ; then\n-\techo \"CC = ${target_alias}-gcc\" > Makefile.tem\n-\techo \"AR = ${target_alias}-ar \" >> Makefile.tem\n-\techo \"RANLIB = ${target_alias}-ranlib \" >> Makefile.tem\n-else\n-\techo > Makefile.tem\n-fi\t\n-\n-echo \"INSTALL_DEST = tooldir\" >> Makefile.tem\n-\n-# If we are cross-compiling, check at compile time whether we are\n-# using newlib.  If we are, we already know the files we need, since\n-# the linker will fail when run on some of the newlib targets.\n-if [ \"${host}\" != \"${target}\" ] ; then\n-  cat > Makefile.tem2 <<'!EOF!'\n-CONFIG_H = xconfig.h\n-NEEDED_LIST = xneeded-list\n-\n-xconfig.h: Makefile\n-\tif [ -f ../newlib/Makefile ]; then \\\n-\t  echo \"#define NEED_sys_nerr 1\" >xconfig.h; \\\n-\t  echo \"#define NEED_sys_errlist 1\" >>xconfig.h; \\\n-\t  echo \"#define NEED_sys_siglist 1\" >>xconfig.h; \\\n-\t  echo \"#define NEED_psignal 1\" >>xconfig.h; \\\n-\telse \\\n-\t  $(MAKE) $(FLAGS_TO_PASS) lconfig.h; \\\n-\t  cp lconfig.h xconfig.h; \\\n-\tfi\n-\n-xneeded-list: Makefile\n-\tif [ -f ../newlib/Makefile ]; then \\\n-\t  echo insque.o random.o strdup.o alloca.o >xneeded-list; \\\n-\telse \\\n-\t  $(MAKE) $(FLAGS_TO_PASS) lneeded-list; \\\n-\t  cp lneeded-list xneeded-list; \\\n-\tfi\n-!EOF!\n-fi\n-sed -e \"/^####/  r Makefile.tem\" -e \"/^####/  r Makefile.tem2\" ${Makefile} > Makefile.tem3\n-mv Makefile.tem3 ${Makefile}\n-rm -f Makefile.tem Makefile.tem2\n-\n-if [ \"${srcdir}\" = \".\" ] ; then\n-  echo \"EXTRA_LINKS = ${source_links}\" >>Makefile\n-fi\n-mv Makefile Makefile.tmp\n-# Patch 'install' and 'Makefile' rules in Makefile\n-# (The latter is only needed when \"$srcdir\" = \".\".)\n-sed <Makefile.tmp -e '/INSTALL_DEST =/s/libdir/tooldir/' \\\n-  -e '/Makefile/s|(srcdir)/Makefile.in|(srcdir)/../libiberty/Makefile.in|' \\\n-  >Makefile\n-rm -f Makefile.tmp\n-\n-# We need multilib support.\n-. ${srcdir}/../cfg-ml-pos.in"}]}