{"sha": "825fba526ce816bd26887457e2f0f4ca05b1ccdd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI1ZmJhNTI2Y2U4MTZiZDI2ODg3NDU3ZTJmMGY0Y2EwNWIxY2NkZA==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2016-12-01T12:31:49Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2016-12-01T12:31:49Z"}, "message": "configure.ac: Don't use pkg-config to check for bdw-gc.\n\n<toplevel>\n\n        * configure.ac: Don't use pkg-config to check for bdw-gc.\n        * configure: Regenerate.\n\nconfig/\n\n        * pkg.m4: Remove.\n\nlibobjc/\n\n        * configure.ac: Don't use pkg-config to check for bdw-gc.\n        * configure: Regenerate.\n\ngcc/\n\n        * doc/install.texi: Don't use pkg-config to check for bdw-gc.\n\nFrom-SVN: r243108", "tree": {"sha": "4c583720979cd6e40f2597acf959a71ad777098d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c583720979cd6e40f2597acf959a71ad777098d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/825fba526ce816bd26887457e2f0f4ca05b1ccdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/825fba526ce816bd26887457e2f0f4ca05b1ccdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/825fba526ce816bd26887457e2f0f4ca05b1ccdd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/825fba526ce816bd26887457e2f0f4ca05b1ccdd/comments", "author": null, "committer": null, "parents": [{"sha": "a41e62e743af77da51413bd6f865f4c270f11674", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a41e62e743af77da51413bd6f865f4c270f11674", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a41e62e743af77da51413bd6f865f4c270f11674"}], "stats": {"total": 1161, "additions": 32, "deletions": 1129}, "files": [{"sha": "a3320f1c7f0ef2cfabd284a343682ee785c70c66", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825fba526ce816bd26887457e2f0f4ca05b1ccdd/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825fba526ce816bd26887457e2f0f4ca05b1ccdd/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=825fba526ce816bd26887457e2f0f4ca05b1ccdd", "patch": "@@ -1,3 +1,8 @@\n+2016-12-01  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* configure.ac: Don't use pkg-config to check for bdw-gc.\n+\t* configure: Regenerate.\n+\n 2016-11-30  Matthias Klose  <doko@ubuntu.com>\n \n \t* Makefile.def: Remove reference to boehm-gc target module."}, {"sha": "8dcb4831b17cfa877f4bdffc3f4d32880203926b", "filename": "config/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825fba526ce816bd26887457e2f0f4ca05b1ccdd/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825fba526ce816bd26887457e2f0f4ca05b1ccdd/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=825fba526ce816bd26887457e2f0f4ca05b1ccdd", "patch": "@@ -1,3 +1,7 @@\n+2016-12-01  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* pkg.m4: Remove.\n+\n 2016-11-30  Matthias Klose  <doko@ubuntu.com>\n \n \t* pkg.m4: New file."}, {"sha": "0301d2785ad2f8e208eed3270a1ca873dbdf50cb", "filename": "config/pkg.m4", "status": "removed", "additions": 0, "deletions": 825, "changes": 825, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a41e62e743af77da51413bd6f865f4c270f11674/config%2Fpkg.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a41e62e743af77da51413bd6f865f4c270f11674/config%2Fpkg.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fpkg.m4?ref=a41e62e743af77da51413bd6f865f4c270f11674", "patch": "@@ -1,825 +0,0 @@\n-dnl pkg.m4 - Macros to locate and utilise pkg-config.   -*- Autoconf -*-\n-dnl serial 11 (pkg-config-0.29)\n-dnl\n-dnl Copyright \u00a9 2004 Scott James Remnant <scott@netsplit.com>.\n-dnl Copyright \u00a9 2012-2015 Dan Nicholson <dbn.lists@gmail.com>\n-dnl\n-dnl This program is free software; you can redistribute it and/or modify\n-dnl it under the terms of the GNU General Public License as published by\n-dnl the Free Software Foundation; either version 2 of the License, or\n-dnl (at your option) any later version.\n-dnl\n-dnl This program is distributed in the hope that it will be useful, but\n-dnl WITHOUT ANY WARRANTY; without even the implied warranty of\n-dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n-dnl General Public License for more details.\n-dnl\n-dnl You should have received a copy of the GNU General Public License\n-dnl along with this program; if not, write to the Free Software\n-dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-dnl 02111-1307, USA.\n-dnl\n-dnl As a special exception to the GNU General Public License, if you\n-dnl distribute this file as part of a program that contains a\n-dnl configuration script generated by Autoconf, you may include it under\n-dnl the same distribution terms that you use for the rest of that\n-dnl program.\n-\n-dnl PKG_PREREQ(MIN-VERSION)\n-dnl -----------------------\n-dnl Since: 0.29\n-dnl\n-dnl Verify that the version of the pkg-config macros are at least\n-dnl MIN-VERSION. Unlike PKG_PROG_PKG_CONFIG, which checks the user's\n-dnl installed version of pkg-config, this checks the developer's version\n-dnl of pkg.m4 when generating configure.\n-dnl\n-dnl To ensure that this macro is defined, also add:\n-dnl m4_ifndef([PKG_PREREQ],\n-dnl     [m4_fatal([must install pkg-config 0.29 or later before running autoconf/autogen])])\n-dnl\n-dnl See the \"Since\" comment for each macro you use to see what version\n-dnl of the macros you require.\n-m4_defun([PKG_PREREQ],\n-[m4_define([PKG_MACROS_VERSION], [0.29])\n-m4_if(m4_version_compare(PKG_MACROS_VERSION, [$1]), -1,\n-    [m4_fatal([pkg.m4 version $1 or higher is required but ]PKG_MACROS_VERSION[ found])])\n-])dnl PKG_PREREQ\n-\n-dnl PKG_PROG_PKG_CONFIG([MIN-VERSION])\n-dnl ----------------------------------\n-dnl Since: 0.16\n-dnl\n-dnl Search for the pkg-config tool and set the PKG_CONFIG variable to\n-dnl first found in the path. Checks that the version of pkg-config found\n-dnl is at least MIN-VERSION. If MIN-VERSION is not specified, 0.9.0 is\n-dnl used since that's the first version where most current features of\n-dnl pkg-config existed.\n-AC_DEFUN([PKG_PROG_PKG_CONFIG],\n-[m4_pattern_forbid([^_?PKG_[A-Z_]+$])\n-m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])\n-m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])\n-AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])\n-AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])\n-AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])\n-\n-if test \"x$ac_cv_env_PKG_CONFIG_set\" != \"xset\"; then\n-\tAC_PATH_TOOL([PKG_CONFIG], [pkg-config])\n-fi\n-if test -n \"$PKG_CONFIG\"; then\n-\t_pkg_min_version=m4_default([$1], [0.9.0])\n-\tAC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])\n-\tif $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then\n-\t\tAC_MSG_RESULT([yes])\n-\telse\n-\t\tAC_MSG_RESULT([no])\n-\t\tPKG_CONFIG=\"\"\n-\tfi\n-fi[]dnl\n-])dnl PKG_PROG_PKG_CONFIG\n-\n-dnl PKG_CHECK_EXISTS(MODULES, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n-dnl -------------------------------------------------------------------\n-dnl Since: 0.18\n-dnl\n-dnl Check to see whether a particular set of modules exists. Similar to\n-dnl PKG_CHECK_MODULES(), but does not set variables or print errors.\n-dnl\n-dnl Please remember that m4 expands AC_REQUIRE([PKG_PROG_PKG_CONFIG])\n-dnl only at the first occurence in configure.ac, so if the first place\n-dnl it's called might be skipped (such as if it is within an \"if\", you\n-dnl have to call PKG_CHECK_EXISTS manually\n-AC_DEFUN([PKG_CHECK_EXISTS],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n-if test -n \"$PKG_CONFIG\" && \\\n-    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors \"$1\"]); then\n-  m4_default([$2], [:])\n-m4_ifvaln([$3], [else\n-  $3])dnl\n-fi])\n-\n-dnl _PKG_CONFIG([VARIABLE], [COMMAND], [MODULES])\n-dnl ---------------------------------------------\n-dnl Internal wrapper calling pkg-config via PKG_CONFIG and setting\n-dnl pkg_failed based on the result.\n-m4_define([_PKG_CONFIG],\n-[if test -n \"$$1\"; then\n-    pkg_cv_[]$1=\"$$1\"\n- elif test -n \"$PKG_CONFIG\"; then\n-    PKG_CHECK_EXISTS([$3],\n-                     [pkg_cv_[]$1=`$PKG_CONFIG --[]$2 \"$3\" 2>/dev/null`\n-\t\t      test \"x$?\" != \"x0\" && pkg_failed=yes ],\n-\t\t     [pkg_failed=yes])\n- else\n-    pkg_failed=untried\n-fi[]dnl\n-])dnl _PKG_CONFIG\n-\n-dnl _PKG_SHORT_ERRORS_SUPPORTED\n-dnl ---------------------------\n-dnl Internal check to see if pkg-config supports short errors.\n-AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])\n-if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then\n-        _pkg_short_errors_supported=yes\n-else\n-        _pkg_short_errors_supported=no\n-fi[]dnl\n-])dnl _PKG_SHORT_ERRORS_SUPPORTED\n-\n-\n-dnl PKG_CHECK_MODULES(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],\n-dnl   [ACTION-IF-NOT-FOUND])\n-dnl --------------------------------------------------------------\n-dnl Since: 0.4.0\n-dnl\n-dnl Note that if there is a possibility the first call to\n-dnl PKG_CHECK_MODULES might not happen, you should be sure to include an\n-dnl explicit call to PKG_PROG_PKG_CONFIG in your configure.ac\n-AC_DEFUN([PKG_CHECK_MODULES],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n-AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl\n-AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl\n-\n-pkg_failed=no\n-AC_MSG_CHECKING([for $1])\n-\n-_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])\n-_PKG_CONFIG([$1][_LIBS], [libs], [$2])\n-\n-m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS\n-and $1[]_LIBS to avoid the need to call pkg-config.\n-See the pkg-config man page for more details.])\n-\n-if test $pkg_failed = yes; then\n-   \tAC_MSG_RESULT([no])\n-        _PKG_SHORT_ERRORS_SUPPORTED\n-        if test $_pkg_short_errors_supported = yes; then\n-\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs \"$2\" 2>&1`\n-        else \n-\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs \"$2\" 2>&1`\n-        fi\n-\t# Put the nasty error message in config.log where it belongs\n-\techo \"$$1[]_PKG_ERRORS\" >&AS_MESSAGE_LOG_FD\n-\n-\tm4_default([$4], [AC_MSG_ERROR(\n-[Package requirements ($2) were not met:\n-\n-$$1_PKG_ERRORS\n-\n-Consider adjusting the PKG_CONFIG_PATH environment variable if you\n-installed software in a non-standard prefix.\n-\n-_PKG_TEXT])[]dnl\n-        ])\n-elif test $pkg_failed = untried; then\n-     \tAC_MSG_RESULT([no])\n-\tm4_default([$4], [AC_MSG_FAILURE(\n-[The pkg-config script could not be found or is too old.  Make sure it\n-is in your PATH or set the PKG_CONFIG environment variable to the full\n-path to pkg-config.\n-\n-_PKG_TEXT\n-\n-To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl\n-        ])\n-else\n-\t$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS\n-\t$1[]_LIBS=$pkg_cv_[]$1[]_LIBS\n-        AC_MSG_RESULT([yes])\n-\t$3\n-fi[]dnl\n-])dnl PKG_CHECK_MODULES\n-\n-\n-dnl PKG_CHECK_MODULES_STATIC(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],\n-dnl   [ACTION-IF-NOT-FOUND])\n-dnl ---------------------------------------------------------------------\n-dnl Since: 0.29\n-dnl\n-dnl Checks for existence of MODULES and gathers its build flags with\n-dnl static libraries enabled. Sets VARIABLE-PREFIX_CFLAGS from --cflags\n-dnl and VARIABLE-PREFIX_LIBS from --libs.\n-dnl\n-dnl Note that if there is a possibility the first call to\n-dnl PKG_CHECK_MODULES_STATIC might not happen, you should be sure to\n-dnl include an explicit call to PKG_PROG_PKG_CONFIG in your\n-dnl configure.ac.\n-AC_DEFUN([PKG_CHECK_MODULES_STATIC],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n-_save_PKG_CONFIG=$PKG_CONFIG\n-PKG_CONFIG=\"$PKG_CONFIG --static\"\n-PKG_CHECK_MODULES($@)\n-PKG_CONFIG=$_save_PKG_CONFIG[]dnl\n-])dnl PKG_CHECK_MODULES_STATIC\n-\n-\n-dnl PKG_INSTALLDIR([DIRECTORY])\n-dnl -------------------------\n-dnl Since: 0.27\n-dnl\n-dnl Substitutes the variable pkgconfigdir as the location where a module\n-dnl should install pkg-config .pc files. By default the directory is\n-dnl $libdir/pkgconfig, but the default can be changed by passing\n-dnl DIRECTORY. The user can override through the --with-pkgconfigdir\n-dnl parameter.\n-AC_DEFUN([PKG_INSTALLDIR],\n-[m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])\n-m4_pushdef([pkg_description],\n-    [pkg-config installation directory @<:@]pkg_default[@:>@])\n-AC_ARG_WITH([pkgconfigdir],\n-    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,\n-    [with_pkgconfigdir=]pkg_default)\n-AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])\n-m4_popdef([pkg_default])\n-m4_popdef([pkg_description])\n-])dnl PKG_INSTALLDIR\n-\n-\n-dnl PKG_NOARCH_INSTALLDIR([DIRECTORY])\n-dnl --------------------------------\n-dnl Since: 0.27\n-dnl\n-dnl Substitutes the variable noarch_pkgconfigdir as the location where a\n-dnl module should install arch-independent pkg-config .pc files. By\n-dnl default the directory is $datadir/pkgconfig, but the default can be\n-dnl changed by passing DIRECTORY. The user can override through the\n-dnl --with-noarch-pkgconfigdir parameter.\n-AC_DEFUN([PKG_NOARCH_INSTALLDIR],\n-[m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])\n-m4_pushdef([pkg_description],\n-    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])\n-AC_ARG_WITH([noarch-pkgconfigdir],\n-    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,\n-    [with_noarch_pkgconfigdir=]pkg_default)\n-AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])\n-m4_popdef([pkg_default])\n-m4_popdef([pkg_description])\n-])dnl PKG_NOARCH_INSTALLDIR\n-\n-\n-dnl PKG_CHECK_VAR(VARIABLE, MODULE, CONFIG-VARIABLE,\n-dnl [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n-dnl -------------------------------------------\n-dnl Since: 0.28\n-dnl\n-dnl Retrieves the value of the pkg-config variable for the given module.\n-AC_DEFUN([PKG_CHECK_VAR],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n-AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl\n-\n-_PKG_CONFIG([$1], [variable=\"][$3][\"], [$2])\n-AS_VAR_COPY([$1], [pkg_cv_][$1])\n-\n-AS_VAR_IF([$1], [\"\"], [$5], [$4])dnl\n-])dnl PKG_CHECK_VAR\n-dnl pkg.m4 - Macros to locate and utilise pkg-config.   -*- Autoconf -*-\n-dnl serial 11 (pkg-config-0.29)\n-dnl\n-dnl Copyright \u00a9 2004 Scott James Remnant <scott@netsplit.com>.\n-dnl Copyright \u00a9 2012-2015 Dan Nicholson <dbn.lists@gmail.com>\n-dnl\n-dnl This program is free software; you can redistribute it and/or modify\n-dnl it under the terms of the GNU General Public License as published by\n-dnl the Free Software Foundation; either version 2 of the License, or\n-dnl (at your option) any later version.\n-dnl\n-dnl This program is distributed in the hope that it will be useful, but\n-dnl WITHOUT ANY WARRANTY; without even the implied warranty of\n-dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n-dnl General Public License for more details.\n-dnl\n-dnl You should have received a copy of the GNU General Public License\n-dnl along with this program; if not, write to the Free Software\n-dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-dnl 02111-1307, USA.\n-dnl\n-dnl As a special exception to the GNU General Public License, if you\n-dnl distribute this file as part of a program that contains a\n-dnl configuration script generated by Autoconf, you may include it under\n-dnl the same distribution terms that you use for the rest of that\n-dnl program.\n-\n-dnl PKG_PREREQ(MIN-VERSION)\n-dnl -----------------------\n-dnl Since: 0.29\n-dnl\n-dnl Verify that the version of the pkg-config macros are at least\n-dnl MIN-VERSION. Unlike PKG_PROG_PKG_CONFIG, which checks the user's\n-dnl installed version of pkg-config, this checks the developer's version\n-dnl of pkg.m4 when generating configure.\n-dnl\n-dnl To ensure that this macro is defined, also add:\n-dnl m4_ifndef([PKG_PREREQ],\n-dnl     [m4_fatal([must install pkg-config 0.29 or later before running autoconf/autogen])])\n-dnl\n-dnl See the \"Since\" comment for each macro you use to see what version\n-dnl of the macros you require.\n-m4_defun([PKG_PREREQ],\n-[m4_define([PKG_MACROS_VERSION], [0.29])\n-m4_if(m4_version_compare(PKG_MACROS_VERSION, [$1]), -1,\n-    [m4_fatal([pkg.m4 version $1 or higher is required but ]PKG_MACROS_VERSION[ found])])\n-])dnl PKG_PREREQ\n-\n-dnl PKG_PROG_PKG_CONFIG([MIN-VERSION])\n-dnl ----------------------------------\n-dnl Since: 0.16\n-dnl\n-dnl Search for the pkg-config tool and set the PKG_CONFIG variable to\n-dnl first found in the path. Checks that the version of pkg-config found\n-dnl is at least MIN-VERSION. If MIN-VERSION is not specified, 0.9.0 is\n-dnl used since that's the first version where most current features of\n-dnl pkg-config existed.\n-AC_DEFUN([PKG_PROG_PKG_CONFIG],\n-[m4_pattern_forbid([^_?PKG_[A-Z_]+$])\n-m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])\n-m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])\n-AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])\n-AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])\n-AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])\n-\n-if test \"x$ac_cv_env_PKG_CONFIG_set\" != \"xset\"; then\n-\tAC_PATH_TOOL([PKG_CONFIG], [pkg-config])\n-fi\n-if test -n \"$PKG_CONFIG\"; then\n-\t_pkg_min_version=m4_default([$1], [0.9.0])\n-\tAC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])\n-\tif $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then\n-\t\tAC_MSG_RESULT([yes])\n-\telse\n-\t\tAC_MSG_RESULT([no])\n-\t\tPKG_CONFIG=\"\"\n-\tfi\n-fi[]dnl\n-])dnl PKG_PROG_PKG_CONFIG\n-\n-dnl PKG_CHECK_EXISTS(MODULES, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n-dnl -------------------------------------------------------------------\n-dnl Since: 0.18\n-dnl\n-dnl Check to see whether a particular set of modules exists. Similar to\n-dnl PKG_CHECK_MODULES(), but does not set variables or print errors.\n-dnl\n-dnl Please remember that m4 expands AC_REQUIRE([PKG_PROG_PKG_CONFIG])\n-dnl only at the first occurence in configure.ac, so if the first place\n-dnl it's called might be skipped (such as if it is within an \"if\", you\n-dnl have to call PKG_CHECK_EXISTS manually\n-AC_DEFUN([PKG_CHECK_EXISTS],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n-if test -n \"$PKG_CONFIG\" && \\\n-    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors \"$1\"]); then\n-  m4_default([$2], [:])\n-m4_ifvaln([$3], [else\n-  $3])dnl\n-fi])\n-\n-dnl _PKG_CONFIG([VARIABLE], [COMMAND], [MODULES])\n-dnl ---------------------------------------------\n-dnl Internal wrapper calling pkg-config via PKG_CONFIG and setting\n-dnl pkg_failed based on the result.\n-m4_define([_PKG_CONFIG],\n-[if test -n \"$$1\"; then\n-    pkg_cv_[]$1=\"$$1\"\n- elif test -n \"$PKG_CONFIG\"; then\n-    PKG_CHECK_EXISTS([$3],\n-                     [pkg_cv_[]$1=`$PKG_CONFIG --[]$2 \"$3\" 2>/dev/null`\n-\t\t      test \"x$?\" != \"x0\" && pkg_failed=yes ],\n-\t\t     [pkg_failed=yes])\n- else\n-    pkg_failed=untried\n-fi[]dnl\n-])dnl _PKG_CONFIG\n-\n-dnl _PKG_SHORT_ERRORS_SUPPORTED\n-dnl ---------------------------\n-dnl Internal check to see if pkg-config supports short errors.\n-AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])\n-if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then\n-        _pkg_short_errors_supported=yes\n-else\n-        _pkg_short_errors_supported=no\n-fi[]dnl\n-])dnl _PKG_SHORT_ERRORS_SUPPORTED\n-\n-\n-dnl PKG_CHECK_MODULES(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],\n-dnl   [ACTION-IF-NOT-FOUND])\n-dnl --------------------------------------------------------------\n-dnl Since: 0.4.0\n-dnl\n-dnl Note that if there is a possibility the first call to\n-dnl PKG_CHECK_MODULES might not happen, you should be sure to include an\n-dnl explicit call to PKG_PROG_PKG_CONFIG in your configure.ac\n-AC_DEFUN([PKG_CHECK_MODULES],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n-AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl\n-AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl\n-\n-pkg_failed=no\n-AC_MSG_CHECKING([for $1])\n-\n-_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])\n-_PKG_CONFIG([$1][_LIBS], [libs], [$2])\n-\n-m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS\n-and $1[]_LIBS to avoid the need to call pkg-config.\n-See the pkg-config man page for more details.])\n-\n-if test $pkg_failed = yes; then\n-   \tAC_MSG_RESULT([no])\n-        _PKG_SHORT_ERRORS_SUPPORTED\n-        if test $_pkg_short_errors_supported = yes; then\n-\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs \"$2\" 2>&1`\n-        else \n-\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs \"$2\" 2>&1`\n-        fi\n-\t# Put the nasty error message in config.log where it belongs\n-\techo \"$$1[]_PKG_ERRORS\" >&AS_MESSAGE_LOG_FD\n-\n-\tm4_default([$4], [AC_MSG_ERROR(\n-[Package requirements ($2) were not met:\n-\n-$$1_PKG_ERRORS\n-\n-Consider adjusting the PKG_CONFIG_PATH environment variable if you\n-installed software in a non-standard prefix.\n-\n-_PKG_TEXT])[]dnl\n-        ])\n-elif test $pkg_failed = untried; then\n-     \tAC_MSG_RESULT([no])\n-\tm4_default([$4], [AC_MSG_FAILURE(\n-[The pkg-config script could not be found or is too old.  Make sure it\n-is in your PATH or set the PKG_CONFIG environment variable to the full\n-path to pkg-config.\n-\n-_PKG_TEXT\n-\n-To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl\n-        ])\n-else\n-\t$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS\n-\t$1[]_LIBS=$pkg_cv_[]$1[]_LIBS\n-        AC_MSG_RESULT([yes])\n-\t$3\n-fi[]dnl\n-])dnl PKG_CHECK_MODULES\n-\n-\n-dnl PKG_CHECK_MODULES_STATIC(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],\n-dnl   [ACTION-IF-NOT-FOUND])\n-dnl ---------------------------------------------------------------------\n-dnl Since: 0.29\n-dnl\n-dnl Checks for existence of MODULES and gathers its build flags with\n-dnl static libraries enabled. Sets VARIABLE-PREFIX_CFLAGS from --cflags\n-dnl and VARIABLE-PREFIX_LIBS from --libs.\n-dnl\n-dnl Note that if there is a possibility the first call to\n-dnl PKG_CHECK_MODULES_STATIC might not happen, you should be sure to\n-dnl include an explicit call to PKG_PROG_PKG_CONFIG in your\n-dnl configure.ac.\n-AC_DEFUN([PKG_CHECK_MODULES_STATIC],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n-_save_PKG_CONFIG=$PKG_CONFIG\n-PKG_CONFIG=\"$PKG_CONFIG --static\"\n-PKG_CHECK_MODULES($@)\n-PKG_CONFIG=$_save_PKG_CONFIG[]dnl\n-])dnl PKG_CHECK_MODULES_STATIC\n-\n-\n-dnl PKG_INSTALLDIR([DIRECTORY])\n-dnl -------------------------\n-dnl Since: 0.27\n-dnl\n-dnl Substitutes the variable pkgconfigdir as the location where a module\n-dnl should install pkg-config .pc files. By default the directory is\n-dnl $libdir/pkgconfig, but the default can be changed by passing\n-dnl DIRECTORY. The user can override through the --with-pkgconfigdir\n-dnl parameter.\n-AC_DEFUN([PKG_INSTALLDIR],\n-[m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])\n-m4_pushdef([pkg_description],\n-    [pkg-config installation directory @<:@]pkg_default[@:>@])\n-AC_ARG_WITH([pkgconfigdir],\n-    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,\n-    [with_pkgconfigdir=]pkg_default)\n-AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])\n-m4_popdef([pkg_default])\n-m4_popdef([pkg_description])\n-])dnl PKG_INSTALLDIR\n-\n-\n-dnl PKG_NOARCH_INSTALLDIR([DIRECTORY])\n-dnl --------------------------------\n-dnl Since: 0.27\n-dnl\n-dnl Substitutes the variable noarch_pkgconfigdir as the location where a\n-dnl module should install arch-independent pkg-config .pc files. By\n-dnl default the directory is $datadir/pkgconfig, but the default can be\n-dnl changed by passing DIRECTORY. The user can override through the\n-dnl --with-noarch-pkgconfigdir parameter.\n-AC_DEFUN([PKG_NOARCH_INSTALLDIR],\n-[m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])\n-m4_pushdef([pkg_description],\n-    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])\n-AC_ARG_WITH([noarch-pkgconfigdir],\n-    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,\n-    [with_noarch_pkgconfigdir=]pkg_default)\n-AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])\n-m4_popdef([pkg_default])\n-m4_popdef([pkg_description])\n-])dnl PKG_NOARCH_INSTALLDIR\n-\n-\n-dnl PKG_CHECK_VAR(VARIABLE, MODULE, CONFIG-VARIABLE,\n-dnl [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n-dnl -------------------------------------------\n-dnl Since: 0.28\n-dnl\n-dnl Retrieves the value of the pkg-config variable for the given module.\n-AC_DEFUN([PKG_CHECK_VAR],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n-AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl\n-\n-_PKG_CONFIG([$1], [variable=\"][$3][\"], [$2])\n-AS_VAR_COPY([$1], [pkg_cv_][$1])\n-\n-AS_VAR_IF([$1], [\"\"], [$5], [$4])dnl\n-])dnl PKG_CHECK_VAR\n-dnl pkg.m4 - Macros to locate and utilise pkg-config.   -*- Autoconf -*-\n-dnl serial 11 (pkg-config-0.29)\n-dnl\n-dnl Copyright \u00a9 2004 Scott James Remnant <scott@netsplit.com>.\n-dnl Copyright \u00a9 2012-2015 Dan Nicholson <dbn.lists@gmail.com>\n-dnl\n-dnl This program is free software; you can redistribute it and/or modify\n-dnl it under the terms of the GNU General Public License as published by\n-dnl the Free Software Foundation; either version 2 of the License, or\n-dnl (at your option) any later version.\n-dnl\n-dnl This program is distributed in the hope that it will be useful, but\n-dnl WITHOUT ANY WARRANTY; without even the implied warranty of\n-dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n-dnl General Public License for more details.\n-dnl\n-dnl You should have received a copy of the GNU General Public License\n-dnl along with this program; if not, write to the Free Software\n-dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-dnl 02111-1307, USA.\n-dnl\n-dnl As a special exception to the GNU General Public License, if you\n-dnl distribute this file as part of a program that contains a\n-dnl configuration script generated by Autoconf, you may include it under\n-dnl the same distribution terms that you use for the rest of that\n-dnl program.\n-\n-dnl PKG_PREREQ(MIN-VERSION)\n-dnl -----------------------\n-dnl Since: 0.29\n-dnl\n-dnl Verify that the version of the pkg-config macros are at least\n-dnl MIN-VERSION. Unlike PKG_PROG_PKG_CONFIG, which checks the user's\n-dnl installed version of pkg-config, this checks the developer's version\n-dnl of pkg.m4 when generating configure.\n-dnl\n-dnl To ensure that this macro is defined, also add:\n-dnl m4_ifndef([PKG_PREREQ],\n-dnl     [m4_fatal([must install pkg-config 0.29 or later before running autoconf/autogen])])\n-dnl\n-dnl See the \"Since\" comment for each macro you use to see what version\n-dnl of the macros you require.\n-m4_defun([PKG_PREREQ],\n-[m4_define([PKG_MACROS_VERSION], [0.29])\n-m4_if(m4_version_compare(PKG_MACROS_VERSION, [$1]), -1,\n-    [m4_fatal([pkg.m4 version $1 or higher is required but ]PKG_MACROS_VERSION[ found])])\n-])dnl PKG_PREREQ\n-\n-dnl PKG_PROG_PKG_CONFIG([MIN-VERSION])\n-dnl ----------------------------------\n-dnl Since: 0.16\n-dnl\n-dnl Search for the pkg-config tool and set the PKG_CONFIG variable to\n-dnl first found in the path. Checks that the version of pkg-config found\n-dnl is at least MIN-VERSION. If MIN-VERSION is not specified, 0.9.0 is\n-dnl used since that's the first version where most current features of\n-dnl pkg-config existed.\n-AC_DEFUN([PKG_PROG_PKG_CONFIG],\n-[m4_pattern_forbid([^_?PKG_[A-Z_]+$])\n-m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])\n-m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])\n-AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])\n-AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])\n-AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])\n-\n-if test \"x$ac_cv_env_PKG_CONFIG_set\" != \"xset\"; then\n-\tAC_PATH_TOOL([PKG_CONFIG], [pkg-config])\n-fi\n-if test -n \"$PKG_CONFIG\"; then\n-\t_pkg_min_version=m4_default([$1], [0.9.0])\n-\tAC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])\n-\tif $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then\n-\t\tAC_MSG_RESULT([yes])\n-\telse\n-\t\tAC_MSG_RESULT([no])\n-\t\tPKG_CONFIG=\"\"\n-\tfi\n-fi[]dnl\n-])dnl PKG_PROG_PKG_CONFIG\n-\n-dnl PKG_CHECK_EXISTS(MODULES, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n-dnl -------------------------------------------------------------------\n-dnl Since: 0.18\n-dnl\n-dnl Check to see whether a particular set of modules exists. Similar to\n-dnl PKG_CHECK_MODULES(), but does not set variables or print errors.\n-dnl\n-dnl Please remember that m4 expands AC_REQUIRE([PKG_PROG_PKG_CONFIG])\n-dnl only at the first occurence in configure.ac, so if the first place\n-dnl it's called might be skipped (such as if it is within an \"if\", you\n-dnl have to call PKG_CHECK_EXISTS manually\n-AC_DEFUN([PKG_CHECK_EXISTS],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n-if test -n \"$PKG_CONFIG\" && \\\n-    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors \"$1\"]); then\n-  m4_default([$2], [:])\n-m4_ifvaln([$3], [else\n-  $3])dnl\n-fi])\n-\n-dnl _PKG_CONFIG([VARIABLE], [COMMAND], [MODULES])\n-dnl ---------------------------------------------\n-dnl Internal wrapper calling pkg-config via PKG_CONFIG and setting\n-dnl pkg_failed based on the result.\n-m4_define([_PKG_CONFIG],\n-[if test -n \"$$1\"; then\n-    pkg_cv_[]$1=\"$$1\"\n- elif test -n \"$PKG_CONFIG\"; then\n-    PKG_CHECK_EXISTS([$3],\n-                     [pkg_cv_[]$1=`$PKG_CONFIG --[]$2 \"$3\" 2>/dev/null`\n-\t\t      test \"x$?\" != \"x0\" && pkg_failed=yes ],\n-\t\t     [pkg_failed=yes])\n- else\n-    pkg_failed=untried\n-fi[]dnl\n-])dnl _PKG_CONFIG\n-\n-dnl _PKG_SHORT_ERRORS_SUPPORTED\n-dnl ---------------------------\n-dnl Internal check to see if pkg-config supports short errors.\n-AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])\n-if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then\n-        _pkg_short_errors_supported=yes\n-else\n-        _pkg_short_errors_supported=no\n-fi[]dnl\n-])dnl _PKG_SHORT_ERRORS_SUPPORTED\n-\n-\n-dnl PKG_CHECK_MODULES(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],\n-dnl   [ACTION-IF-NOT-FOUND])\n-dnl --------------------------------------------------------------\n-dnl Since: 0.4.0\n-dnl\n-dnl Note that if there is a possibility the first call to\n-dnl PKG_CHECK_MODULES might not happen, you should be sure to include an\n-dnl explicit call to PKG_PROG_PKG_CONFIG in your configure.ac\n-AC_DEFUN([PKG_CHECK_MODULES],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n-AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl\n-AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl\n-\n-pkg_failed=no\n-AC_MSG_CHECKING([for $1])\n-\n-_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])\n-_PKG_CONFIG([$1][_LIBS], [libs], [$2])\n-\n-m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS\n-and $1[]_LIBS to avoid the need to call pkg-config.\n-See the pkg-config man page for more details.])\n-\n-if test $pkg_failed = yes; then\n-   \tAC_MSG_RESULT([no])\n-        _PKG_SHORT_ERRORS_SUPPORTED\n-        if test $_pkg_short_errors_supported = yes; then\n-\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs \"$2\" 2>&1`\n-        else \n-\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs \"$2\" 2>&1`\n-        fi\n-\t# Put the nasty error message in config.log where it belongs\n-\techo \"$$1[]_PKG_ERRORS\" >&AS_MESSAGE_LOG_FD\n-\n-\tm4_default([$4], [AC_MSG_ERROR(\n-[Package requirements ($2) were not met:\n-\n-$$1_PKG_ERRORS\n-\n-Consider adjusting the PKG_CONFIG_PATH environment variable if you\n-installed software in a non-standard prefix.\n-\n-_PKG_TEXT])[]dnl\n-        ])\n-elif test $pkg_failed = untried; then\n-     \tAC_MSG_RESULT([no])\n-\tm4_default([$4], [AC_MSG_FAILURE(\n-[The pkg-config script could not be found or is too old.  Make sure it\n-is in your PATH or set the PKG_CONFIG environment variable to the full\n-path to pkg-config.\n-\n-_PKG_TEXT\n-\n-To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl\n-        ])\n-else\n-\t$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS\n-\t$1[]_LIBS=$pkg_cv_[]$1[]_LIBS\n-        AC_MSG_RESULT([yes])\n-\t$3\n-fi[]dnl\n-])dnl PKG_CHECK_MODULES\n-\n-\n-dnl PKG_CHECK_MODULES_STATIC(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],\n-dnl   [ACTION-IF-NOT-FOUND])\n-dnl ---------------------------------------------------------------------\n-dnl Since: 0.29\n-dnl\n-dnl Checks for existence of MODULES and gathers its build flags with\n-dnl static libraries enabled. Sets VARIABLE-PREFIX_CFLAGS from --cflags\n-dnl and VARIABLE-PREFIX_LIBS from --libs.\n-dnl\n-dnl Note that if there is a possibility the first call to\n-dnl PKG_CHECK_MODULES_STATIC might not happen, you should be sure to\n-dnl include an explicit call to PKG_PROG_PKG_CONFIG in your\n-dnl configure.ac.\n-AC_DEFUN([PKG_CHECK_MODULES_STATIC],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n-_save_PKG_CONFIG=$PKG_CONFIG\n-PKG_CONFIG=\"$PKG_CONFIG --static\"\n-PKG_CHECK_MODULES($@)\n-PKG_CONFIG=$_save_PKG_CONFIG[]dnl\n-])dnl PKG_CHECK_MODULES_STATIC\n-\n-\n-dnl PKG_INSTALLDIR([DIRECTORY])\n-dnl -------------------------\n-dnl Since: 0.27\n-dnl\n-dnl Substitutes the variable pkgconfigdir as the location where a module\n-dnl should install pkg-config .pc files. By default the directory is\n-dnl $libdir/pkgconfig, but the default can be changed by passing\n-dnl DIRECTORY. The user can override through the --with-pkgconfigdir\n-dnl parameter.\n-AC_DEFUN([PKG_INSTALLDIR],\n-[m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])\n-m4_pushdef([pkg_description],\n-    [pkg-config installation directory @<:@]pkg_default[@:>@])\n-AC_ARG_WITH([pkgconfigdir],\n-    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,\n-    [with_pkgconfigdir=]pkg_default)\n-AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])\n-m4_popdef([pkg_default])\n-m4_popdef([pkg_description])\n-])dnl PKG_INSTALLDIR\n-\n-\n-dnl PKG_NOARCH_INSTALLDIR([DIRECTORY])\n-dnl --------------------------------\n-dnl Since: 0.27\n-dnl\n-dnl Substitutes the variable noarch_pkgconfigdir as the location where a\n-dnl module should install arch-independent pkg-config .pc files. By\n-dnl default the directory is $datadir/pkgconfig, but the default can be\n-dnl changed by passing DIRECTORY. The user can override through the\n-dnl --with-noarch-pkgconfigdir parameter.\n-AC_DEFUN([PKG_NOARCH_INSTALLDIR],\n-[m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])\n-m4_pushdef([pkg_description],\n-    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])\n-AC_ARG_WITH([noarch-pkgconfigdir],\n-    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,\n-    [with_noarch_pkgconfigdir=]pkg_default)\n-AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])\n-m4_popdef([pkg_default])\n-m4_popdef([pkg_description])\n-])dnl PKG_NOARCH_INSTALLDIR\n-\n-\n-dnl PKG_CHECK_VAR(VARIABLE, MODULE, CONFIG-VARIABLE,\n-dnl [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n-dnl -------------------------------------------\n-dnl Since: 0.28\n-dnl\n-dnl Retrieves the value of the pkg-config variable for the given module.\n-AC_DEFUN([PKG_CHECK_VAR],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n-AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl\n-\n-_PKG_CONFIG([$1], [variable=\"][$3][\"], [$2])\n-AS_VAR_COPY([$1], [pkg_cv_][$1])\n-\n-AS_VAR_IF([$1], [\"\"], [$5], [$4])dnl\n-])dnl PKG_CHECK_VAR"}, {"sha": "fb79e7381cd9ba393c3d6283769a0efac489d674", "filename": "configure", "status": "modified", "additions": 2, "deletions": 142, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825fba526ce816bd26887457e2f0f4ca05b1ccdd/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825fba526ce816bd26887457e2f0f4ca05b1ccdd/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=825fba526ce816bd26887457e2f0f4ca05b1ccdd", "patch": "@@ -643,9 +643,6 @@ DEBUG_PREFIX_CFLAGS_FOR_TARGET\n SYSROOT_CFLAGS_FOR_TARGET\n extra_host_zlib_configure_flags\n extra_host_libiberty_configure_flags\n-PKG_CONFIG_LIBDIR\n-PKG_CONFIG_PATH\n-PKG_CONFIG\n stage1_languages\n extra_linker_plugin_flags\n extra_linker_plugin_configure_flags\n@@ -811,9 +808,6 @@ CPPFLAGS\n CXX\n CXXFLAGS\n CCC\n-PKG_CONFIG\n-PKG_CONFIG_PATH\n-PKG_CONFIG_LIBDIR\n build_configargs\n host_configargs\n target_configargs\n@@ -1587,11 +1581,6 @@ Some influential environment variables:\n               you have headers in a nonstandard directory <include dir>\n   CXX         C++ compiler command\n   CXXFLAGS    C++ compiler flags\n-  PKG_CONFIG  path to pkg-config utility\n-  PKG_CONFIG_PATH\n-              directories to add to pkg-config's search path\n-  PKG_CONFIG_LIBDIR\n-              path overriding pkg-config's built-in search path\n   build_configargs\n               additional configure arguments for build directories\n   host_configargs\n@@ -6441,137 +6430,8 @@ case ,${enable_languages},:${enable_objc_gc} in *,objc,*:yes|*,objc,*:auto)\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for bdw garbage collector\" >&5\n $as_echo_n \"checking for bdw garbage collector... \" >&6; }\n   if test \"x$with_target_bdw_gc$with_target_bdw_gc_include$with_target_bdw_gc_lib\" = x; then\n-\n-\n-\n-\n-\n-\n-\n-if test \"x$ac_cv_env_PKG_CONFIG_set\" != \"xset\"; then\n-\tif test -n \"$ac_tool_prefix\"; then\n-  # Extract the first word of \"${ac_tool_prefix}pkg-config\", so it can be a program name with args.\n-set dummy ${ac_tool_prefix}pkg-config; ac_word=$2\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n-$as_echo_n \"checking for $ac_word... \" >&6; }\n-if test \"${ac_cv_path_PKG_CONFIG+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  case $PKG_CONFIG in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_PKG_CONFIG=\"$PKG_CONFIG\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-    for ac_exec_ext in '' $ac_executable_extensions; do\n-  if { test -f \"$as_dir/$ac_word$ac_exec_ext\" && $as_test_x \"$as_dir/$ac_word$ac_exec_ext\"; }; then\n-    ac_cv_path_PKG_CONFIG=\"$as_dir/$ac_word$ac_exec_ext\"\n-    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-  done\n-IFS=$as_save_IFS\n-\n-  ;;\n-esac\n-fi\n-PKG_CONFIG=$ac_cv_path_PKG_CONFIG\n-if test -n \"$PKG_CONFIG\"; then\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $PKG_CONFIG\" >&5\n-$as_echo \"$PKG_CONFIG\" >&6; }\n-else\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-fi\n-\n-\n-fi\n-if test -z \"$ac_cv_path_PKG_CONFIG\"; then\n-  ac_pt_PKG_CONFIG=$PKG_CONFIG\n-  # Extract the first word of \"pkg-config\", so it can be a program name with args.\n-set dummy pkg-config; ac_word=$2\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n-$as_echo_n \"checking for $ac_word... \" >&6; }\n-if test \"${ac_cv_path_ac_pt_PKG_CONFIG+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  case $ac_pt_PKG_CONFIG in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_ac_pt_PKG_CONFIG=\"$ac_pt_PKG_CONFIG\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-    for ac_exec_ext in '' $ac_executable_extensions; do\n-  if { test -f \"$as_dir/$ac_word$ac_exec_ext\" && $as_test_x \"$as_dir/$ac_word$ac_exec_ext\"; }; then\n-    ac_cv_path_ac_pt_PKG_CONFIG=\"$as_dir/$ac_word$ac_exec_ext\"\n-    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-  done\n-IFS=$as_save_IFS\n-\n-  ;;\n-esac\n-fi\n-ac_pt_PKG_CONFIG=$ac_cv_path_ac_pt_PKG_CONFIG\n-if test -n \"$ac_pt_PKG_CONFIG\"; then\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_pt_PKG_CONFIG\" >&5\n-$as_echo \"$ac_pt_PKG_CONFIG\" >&6; }\n-else\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-fi\n-\n-  if test \"x$ac_pt_PKG_CONFIG\" = x; then\n-    PKG_CONFIG=\"\"\n-  else\n-    case $cross_compiling:$ac_tool_warned in\n-yes:)\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n-$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\n-ac_tool_warned=yes ;;\n-esac\n-    PKG_CONFIG=$ac_pt_PKG_CONFIG\n-  fi\n-else\n-  PKG_CONFIG=\"$ac_cv_path_PKG_CONFIG\"\n-fi\n-\n-fi\n-if test -n \"$PKG_CONFIG\"; then\n-\t_pkg_min_version=0.9.0\n-\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking pkg-config is at least version $_pkg_min_version\" >&5\n-$as_echo_n \"checking pkg-config is at least version $_pkg_min_version... \" >&6; }\n-\tif $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then\n-\t\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n-$as_echo \"yes\" >&6; }\n-\telse\n-\t\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-\t\tPKG_CONFIG=\"\"\n-\tfi\n-fi\n-if test -n \"$PKG_CONFIG\" && \\\n-    { { $as_echo \"$as_me:${as_lineno-$LINENO}: \\$PKG_CONFIG --exists --print-errors \\\"bdw-gc\\\"\"; } >&5\n-  ($PKG_CONFIG --exists --print-errors \"bdw-gc\") 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; }; then\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: using bdw-gc pkg-config module\" >&5\n-$as_echo \"using bdw-gc pkg-config module\" >&6; }\n-else\n-  as_fn_error \"no --with-target-bdw-gc options and no bdw-gc pkg-config module found\" \"$LINENO\" 5\n-fi\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: result: using bdw-gc in default locations\" >&5\n+$as_echo \"using bdw-gc in default locations\" >&6; }\n   else\n         if test \"x$with_target_bdw_gc_include\" = x && test \"x$with_target_bdw_gc_lib\" != x; then\n       as_fn_error \"found --with-target-bdw-gc-lib but --with-target-bdw-gc-include missing\" \"$LINENO\" 5"}, {"sha": "51ee70507cfcaee0b3a9ef5b06d70089b96cb87f", "filename": "configure.ac", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825fba526ce816bd26887457e2f0f4ca05b1ccdd/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825fba526ce816bd26887457e2f0f4ca05b1ccdd/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=825fba526ce816bd26887457e2f0f4ca05b1ccdd", "patch": "@@ -29,7 +29,6 @@ m4_include([ltsugar.m4])\n m4_include([ltversion.m4])\n m4_include([lt~obsolete.m4])\n m4_include([config/isl.m4])\n-m4_include([config/pkg.m4])\n \n AC_INIT(move-if-change)\n AC_PREREQ(2.64)\n@@ -2076,10 +2075,8 @@ AC_ARG_WITH([target-bdw-gc-lib],\n case ,${enable_languages},:${enable_objc_gc} in *,objc,*:yes|*,objc,*:auto)\n   AC_MSG_CHECKING([for bdw garbage collector])\n   if test \"x$with_target_bdw_gc$with_target_bdw_gc_include$with_target_bdw_gc_lib\" = x; then\n-    dnl no bdw-gw options, fall back to the bdw-gc pkg-config module\n-    PKG_CHECK_EXISTS(bdw-gc,\n-      AC_MSG_RESULT([using bdw-gc pkg-config module]),\n-      AC_MSG_ERROR([no --with-target-bdw-gc options and no bdw-gc pkg-config module found]))\n+    dnl no bdw-gw options, assume default locations\n+    AC_MSG_RESULT([using bdw-gc in default locations])\n   else\n     dnl bdw-gw options, first error checking, complete checking in libobjc\n     if test \"x$with_target_bdw_gc_include\" = x && test \"x$with_target_bdw_gc_lib\" != x; then"}, {"sha": "a164a01cadf5eafae6a62597033c42cac89679c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825fba526ce816bd26887457e2f0f4ca05b1ccdd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825fba526ce816bd26887457e2f0f4ca05b1ccdd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=825fba526ce816bd26887457e2f0f4ca05b1ccdd", "patch": "@@ -1,3 +1,7 @@\n+2016-12-01  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* doc/install.texi: Don't use pkg-config to check for bdw-gc.\n+\n 2016-12-01  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-alias.c (indirect_refs_may_alias_p): Do not\n@@ -34,6 +38,7 @@\n \tPR rtl-optimization/78607\n \t* combine.c (try_combine): Emit a barrier after a unconditional trap.\n \n+>>>>>>> .r243107\n 2016-11-30  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/78602"}, {"sha": "b911d76dd66296d2517a52f97ef885c128d0ab7b", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825fba526ce816bd26887457e2f0f4ca05b1ccdd/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825fba526ce816bd26887457e2f0f4ca05b1ccdd/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=825fba526ce816bd26887457e2f0f4ca05b1ccdd", "patch": "@@ -2204,8 +2204,7 @@ The options @option{--with-target-bdw-gc-include} and\n @option{--with-target-bdw-gc-lib} must always be specified together\n for each multilib variant and they take precedence over\n @option{--with-target-bdw-gc}.  If none of these options are\n-specified, the values are taken from the @command{pkg-config}\n-@samp{bdw-gc} module.\n+specified, the library is assumed in default locations.\n @end table\n \n @html"}, {"sha": "60dfc163b387fa043fd85c0b5feb47900b50d7f1", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825fba526ce816bd26887457e2f0f4ca05b1ccdd/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825fba526ce816bd26887457e2f0f4ca05b1ccdd/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=825fba526ce816bd26887457e2f0f4ca05b1ccdd", "patch": "@@ -1,3 +1,8 @@\n+2016-12-01  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* configure.ac: Don't use pkg-config to check for bdw-gc.\n+\t* configure: Regenerate.\n+\n 2016-11-30  Matthias Klose  <doko@ubuntu.com>\n \n \t* configure.ac: Set BDW_GC_CFLAGS and BDW_GC_LIBS after checking"}, {"sha": "62bdc2b408f8bddba3e296c431b83ccecf3ff163", "filename": "libobjc/configure", "status": "modified", "additions": 5, "deletions": 147, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825fba526ce816bd26887457e2f0f4ca05b1ccdd/libobjc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825fba526ce816bd26887457e2f0f4ca05b1ccdd/libobjc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure?ref=825fba526ce816bd26887457e2f0f4ca05b1ccdd", "patch": "@@ -604,9 +604,6 @@ OBJC_BOEHM_GC_LIBS\n OBJC_BOEHM_GC_INCLUDES\n OBJC_BOEHM_GC\n OBJC_GCFLAGS\n-PKG_CONFIG_LIBDIR\n-PKG_CONFIG_PATH\n-PKG_CONFIG\n SET_MAKE\n CPP\n OTOOL64\n@@ -733,10 +730,7 @@ with_target_bdw_gc_lib\n host_alias\n target_alias\n CPP\n-CPPFLAGS\n-PKG_CONFIG\n-PKG_CONFIG_PATH\n-PKG_CONFIG_LIBDIR'\n+CPPFLAGS'\n \n \n # Initialize some variables set by options.\n@@ -1395,11 +1389,6 @@ Some influential environment variables:\n   CPPFLAGS    C/C++/Objective C preprocessor flags, e.g. -I<include dir> if\n               you have headers in a nonstandard directory <include dir>\n   CPP         C preprocessor\n-  PKG_CONFIG  path to pkg-config utility\n-  PKG_CONFIG_PATH\n-              directories to add to pkg-config's search path\n-  PKG_CONFIG_LIBDIR\n-              path overriding pkg-config's built-in search path\n \n Use these variables to override the choices made by `configure' or to help\n it to find libraries and programs with nonstandard names/locations.\n@@ -10601,7 +10590,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10604 \"configure\"\n+#line 10593 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10707,7 +10696,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10710 \"configure\"\n+#line 10699 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11540,139 +11529,8 @@ no)\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for bdw garbage collector\" >&5\n $as_echo_n \"checking for bdw garbage collector... \" >&6; }\n   if test \"x$with_target_bdw_gc$with_target_bdw_gc_include$with_target_bdw_gc_lib\" = x; then\n-\n-\n-\n-\n-\n-\n-\n-if test \"x$ac_cv_env_PKG_CONFIG_set\" != \"xset\"; then\n-\tif test -n \"$ac_tool_prefix\"; then\n-  # Extract the first word of \"${ac_tool_prefix}pkg-config\", so it can be a program name with args.\n-set dummy ${ac_tool_prefix}pkg-config; ac_word=$2\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n-$as_echo_n \"checking for $ac_word... \" >&6; }\n-if test \"${ac_cv_path_PKG_CONFIG+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  case $PKG_CONFIG in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_PKG_CONFIG=\"$PKG_CONFIG\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-    for ac_exec_ext in '' $ac_executable_extensions; do\n-  if { test -f \"$as_dir/$ac_word$ac_exec_ext\" && $as_test_x \"$as_dir/$ac_word$ac_exec_ext\"; }; then\n-    ac_cv_path_PKG_CONFIG=\"$as_dir/$ac_word$ac_exec_ext\"\n-    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-  done\n-IFS=$as_save_IFS\n-\n-  ;;\n-esac\n-fi\n-PKG_CONFIG=$ac_cv_path_PKG_CONFIG\n-if test -n \"$PKG_CONFIG\"; then\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $PKG_CONFIG\" >&5\n-$as_echo \"$PKG_CONFIG\" >&6; }\n-else\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-fi\n-\n-\n-fi\n-if test -z \"$ac_cv_path_PKG_CONFIG\"; then\n-  ac_pt_PKG_CONFIG=$PKG_CONFIG\n-  # Extract the first word of \"pkg-config\", so it can be a program name with args.\n-set dummy pkg-config; ac_word=$2\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n-$as_echo_n \"checking for $ac_word... \" >&6; }\n-if test \"${ac_cv_path_ac_pt_PKG_CONFIG+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  case $ac_pt_PKG_CONFIG in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_ac_pt_PKG_CONFIG=\"$ac_pt_PKG_CONFIG\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-    for ac_exec_ext in '' $ac_executable_extensions; do\n-  if { test -f \"$as_dir/$ac_word$ac_exec_ext\" && $as_test_x \"$as_dir/$ac_word$ac_exec_ext\"; }; then\n-    ac_cv_path_ac_pt_PKG_CONFIG=\"$as_dir/$ac_word$ac_exec_ext\"\n-    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-  done\n-IFS=$as_save_IFS\n-\n-  ;;\n-esac\n-fi\n-ac_pt_PKG_CONFIG=$ac_cv_path_ac_pt_PKG_CONFIG\n-if test -n \"$ac_pt_PKG_CONFIG\"; then\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_pt_PKG_CONFIG\" >&5\n-$as_echo \"$ac_pt_PKG_CONFIG\" >&6; }\n-else\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-fi\n-\n-  if test \"x$ac_pt_PKG_CONFIG\" = x; then\n-    PKG_CONFIG=\"\"\n-  else\n-    case $cross_compiling:$ac_tool_warned in\n-yes:)\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n-$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\n-ac_tool_warned=yes ;;\n-esac\n-    PKG_CONFIG=$ac_pt_PKG_CONFIG\n-  fi\n-else\n-  PKG_CONFIG=\"$ac_cv_path_PKG_CONFIG\"\n-fi\n-\n-fi\n-if test -n \"$PKG_CONFIG\"; then\n-\t_pkg_min_version=0.9.0\n-\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking pkg-config is at least version $_pkg_min_version\" >&5\n-$as_echo_n \"checking pkg-config is at least version $_pkg_min_version... \" >&6; }\n-\tif $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then\n-\t\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n-$as_echo \"yes\" >&6; }\n-\telse\n-\t\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-\t\tPKG_CONFIG=\"\"\n-\tfi\n-fi\n-if test -n \"$PKG_CONFIG\" && \\\n-    { { $as_echo \"$as_me:${as_lineno-$LINENO}: \\$PKG_CONFIG --exists --print-errors \\\"bdw-gc\\\"\"; } >&5\n-  ($PKG_CONFIG --exists --print-errors \"bdw-gc\") 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; }; then\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: using bdw-gc pkg-config module\" >&5\n-$as_echo \"using bdw-gc pkg-config module\" >&6; }\n-       BDW_GC_CFLAGS=`$PKG_CONFIG --cflags bdw-gc`\n-       BDW_GC_LIBS=`$PKG_CONFIG --libs bdw-gc`\n-else\n-  as_fn_error \"no --with-target-bdw-gc options and no bdw-gc pkg-config module found\" \"$LINENO\" 5\n-fi\n+        BDW_GC_CFLAGS=\n+    BDW_GC_LIBS=\"-lgc\"\n   else\n         if test \"x$with_target_bdw_gc_include\" = x && test \"x$with_target_bdw_gc_lib\" != x; then\n       as_fn_error \"found --with-target-bdw-gc-lib but --with-target-bdw-gc-include missing\" \"$LINENO\" 5"}, {"sha": "3c13b337e17538b65c00f55551ab823e7b7ad0d2", "filename": "libobjc/configure.ac", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825fba526ce816bd26887457e2f0f4ca05b1ccdd/libobjc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825fba526ce816bd26887457e2f0f4ca05b1ccdd/libobjc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure.ac?ref=825fba526ce816bd26887457e2f0f4ca05b1ccdd", "patch": "@@ -18,8 +18,6 @@\n #along with GCC; see the file COPYING3.  If not see\n #<http://www.gnu.org/licenses/>.\n \n-m4_include([../config/pkg.m4])\n-\n AC_PREREQ(2.64)\n AC_INIT(package-unused, version-unused,, libobjc)\n AC_CONFIG_SRCDIR([objc/objc.h])\n@@ -223,12 +221,9 @@ no)\n *)\n   AC_MSG_CHECKING([for bdw garbage collector])\n   if test \"x$with_target_bdw_gc$with_target_bdw_gc_include$with_target_bdw_gc_lib\" = x; then\n-    dnl no bdw-gw options, fall back to the bdw-gc pkg-config module\n-    PKG_CHECK_EXISTS(bdw-gc,\n-      [AC_MSG_RESULT([using bdw-gc pkg-config module])\n-       BDW_GC_CFLAGS=`$PKG_CONFIG --cflags bdw-gc`\n-       BDW_GC_LIBS=`$PKG_CONFIG --libs bdw-gc`],\n-      AC_MSG_ERROR([no --with-target-bdw-gc options and no bdw-gc pkg-config module found]))\n+    dnl no bdw-gw options, assuming bdw-gc in default locations\n+    BDW_GC_CFLAGS=\n+    BDW_GC_LIBS=\"-lgc\"\n   else\n     dnl bdw-gw options passed by configure flags\n     if test \"x$with_target_bdw_gc_include\" = x && test \"x$with_target_bdw_gc_lib\" != x; then"}]}