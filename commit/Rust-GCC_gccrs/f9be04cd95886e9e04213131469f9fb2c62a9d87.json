{"sha": "f9be04cd95886e9e04213131469f9fb2c62a9d87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjliZTA0Y2Q5NTg4NmU5ZTA0MjEzMTMxNDY5ZjlmYjJjNjJhOWQ4Nw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-03-05T10:57:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-03-05T10:57:09Z"}, "message": "re PR tree-optimization/26420 (-ftree-vectorizer-verbose=1 prints unvectorized loops information)\n\n2007-03-05  Richard Guenther  <rguenther@suse.de>\n\tDorit Nuzman  <dorit@il.ibm.com>\n\n\tPR tree-optimization/26420\n\t* tree-vectorizer.c (vectorize_loops): Bail out early if there\n\tare no loops in the function.  Only print the number of\n\tvectorized loops if it is greater than zero or we are supposed\n\tto print information about unvectorized loops.\n\nCo-Authored-By: Dorit Nuzman <dorit@il.ibm.com>\n\nFrom-SVN: r122544", "tree": {"sha": "770dfc86ef282949c7880c0d291120a357cbca83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/770dfc86ef282949c7880c0d291120a357cbca83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9be04cd95886e9e04213131469f9fb2c62a9d87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9be04cd95886e9e04213131469f9fb2c62a9d87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9be04cd95886e9e04213131469f9fb2c62a9d87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9be04cd95886e9e04213131469f9fb2c62a9d87/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c1c5a431b52c85d485b65756d3ecce60875bee1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1c5a431b52c85d485b65756d3ecce60875bee1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1c5a431b52c85d485b65756d3ecce60875bee1e"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "0b6a01d898e3942ebe6922225841eced9ffd6340", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9be04cd95886e9e04213131469f9fb2c62a9d87/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9be04cd95886e9e04213131469f9fb2c62a9d87/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9be04cd95886e9e04213131469f9fb2c62a9d87", "patch": "@@ -1,3 +1,12 @@\n+2007-03-05  Richard Guenther  <rguenther@suse.de>\n+\tDorit Nuzman  <dorit@il.ibm.com>\n+\n+\tPR tree-optimization/26420\n+\t* tree-vectorizer.c (vectorize_loops): Bail out early if there\n+\tare no loops in the function.  Only print the number of\n+\tvectorized loops if it is greater than zero or we are supposed\n+\tto print information about unvectorized loops.\n+\n 2007-03-05  Revital Eres  <eres@il.ibm.com>\n \n       * gcc.dg/var-expand1.c: New test."}, {"sha": "b0aedf74b2c32e42ece5467127fb633f9568901a", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9be04cd95886e9e04213131469f9fb2c62a9d87/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9be04cd95886e9e04213131469f9fb2c62a9d87/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=f9be04cd95886e9e04213131469f9fb2c62a9d87", "patch": "@@ -2196,6 +2196,12 @@ vectorize_loops (void)\n   loop_iterator li;\n   struct loop *loop;\n \n+  vect_loops_num = number_of_loops ();\n+\n+  /* Bail out if there are no loops.  */\n+  if (vect_loops_num <= 1)\n+    return 0;\n+\n   /* Fix the verbosity level if not defined explicitly by the user.  */\n   vect_set_dump_settings ();\n \n@@ -2208,7 +2214,6 @@ vectorize_loops (void)\n   /* If some loop was duplicated, it gets bigger number \n      than all previously defined loops. This fact allows us to run \n      only over initial loops skipping newly generated ones.  */\n-  vect_loops_num = number_of_loops ();\n   FOR_EACH_LOOP (li, loop, 0)\n     {\n       loop_vec_info loop_vinfo;\n@@ -2225,7 +2230,9 @@ vectorize_loops (void)\n     }\n   vect_loop_location = UNKNOWN_LOC;\n \n-  if (vect_print_dump_info (REPORT_VECTORIZED_LOOPS))\n+  if (vect_print_dump_info (REPORT_UNVECTORIZED_LOOPS)\n+      || (vect_print_dump_info (REPORT_VECTORIZED_LOOPS)\n+\t  && num_vectorized_loops > 0))\n     fprintf (vect_dump, \"vectorized %u loops in function.\\n\",\n \t     num_vectorized_loops);\n "}]}