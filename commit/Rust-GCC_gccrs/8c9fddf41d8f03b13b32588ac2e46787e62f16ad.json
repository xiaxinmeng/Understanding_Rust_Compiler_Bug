{"sha": "8c9fddf41d8f03b13b32588ac2e46787e62f16ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM5ZmRkZjQxZDhmMDNiMTNiMzI1ODhhYzJlNDY3ODdlNjJmMTZhZA==", "commit": {"author": {"name": "Matt Burgess", "email": "matthew@linuxfromscratch.org", "date": "2013-06-01T00:20:49Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-06-01T00:20:49Z"}, "message": "re PR other/56780 (--disable-install-libiberty still installs libiberty.a)\n\n\tPR other/56780\n\t* libiberty/configure.ac: Move test for --enable-install-libiberty\n\toutside of the 'with_target_subdir' test so that it actually gets\n\trun.  Add output messages to show the test result.\n\t* libiberty/configure: Regenerate.\n\t* libiberty/Makefile.in (install_to_libdir): Place the\n\tinstallation of the libiberty library in the same guard as that\n\tused for the headers to prevent it being installed unless\n\trequested via --enable-install-libiberty.\n\nFrom-SVN: r199570", "tree": {"sha": "1622ce498cfb5d414d5405505d3105412c05507f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1622ce498cfb5d414d5405505d3105412c05507f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c9fddf41d8f03b13b32588ac2e46787e62f16ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c9fddf41d8f03b13b32588ac2e46787e62f16ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c9fddf41d8f03b13b32588ac2e46787e62f16ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c9fddf41d8f03b13b32588ac2e46787e62f16ad/comments", "author": null, "committer": null, "parents": [{"sha": "4bb1dd0fb84e0e112925bc2086f6c67497225380", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb1dd0fb84e0e112925bc2086f6c67497225380", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bb1dd0fb84e0e112925bc2086f6c67497225380"}], "stats": {"total": 138, "additions": 80, "deletions": 58}, "files": [{"sha": "96bc317b0a3ea88d3514c83819099aeaf665755a", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9fddf41d8f03b13b32588ac2e46787e62f16ad/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9fddf41d8f03b13b32588ac2e46787e62f16ad/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=8c9fddf41d8f03b13b32588ac2e46787e62f16ad", "patch": "@@ -1,3 +1,15 @@\n+2013-05-31  Matt Burgess <matthew@linuxfromscratch.org>\n+\n+\tPR other/56780\n+\t* libiberty/configure.ac: Move test for --enable-install-libiberty\n+\toutside of the 'with_target_subdir' test so that it actually gets\n+\trun.  Add output messages to show the test result.\n+\t* libiberty/configure: Regenerate.\n+\t* libiberty/Makefile.in (install_to_libdir): Place the\n+\tinstallation of the libiberty library in the same guard as that\n+\tused for the headers to prevent it being installed unless\n+\trequested via --enable-install-libiberty.\n+\n 2013-05-06  David Edelsohn  <dje.gcc@gmail.com>\n \t    Peter Bergner  <bergner@vnet.ibm.com>\n \t    Segher Boessenkool  <segher@kernel.crashing.org>"}, {"sha": "75ff82d984a930b4747feb6bfabf743731468656", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9fddf41d8f03b13b32588ac2e46787e62f16ad/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9fddf41d8f03b13b32588ac2e46787e62f16ad/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=8c9fddf41d8f03b13b32588ac2e46787e62f16ad", "patch": "@@ -355,19 +355,19 @@ install-strip: install\n # since it will be passed the multilib flags.\n MULTIOSDIR = `$(CC) $(CFLAGS) -print-multi-os-directory`\n install_to_libdir: all\n-\t${mkinstalldirs} $(DESTDIR)$(libdir)/$(MULTIOSDIR)\n-\t$(INSTALL_DATA) $(TARGETLIB) $(DESTDIR)$(libdir)/$(MULTIOSDIR)/$(TARGETLIB)n\n-\t( cd $(DESTDIR)$(libdir)/$(MULTIOSDIR) ; chmod 644 $(TARGETLIB)n ;$(RANLIB) $(TARGETLIB)n )\n-\tmv -f $(DESTDIR)$(libdir)/$(MULTIOSDIR)/$(TARGETLIB)n $(DESTDIR)$(libdir)/$(MULTIOSDIR)/$(TARGETLIB)\n \tif test -n \"${target_header_dir}\"; then \\\n-\t  case \"${target_header_dir}\" in \\\n-\t    /*)    thd=${target_header_dir};; \\\n-\t    *)     thd=${includedir}/${target_header_dir};; \\\n-\t  esac; \\\n-\t  ${mkinstalldirs} $(DESTDIR)$${thd}; \\\n-\t  for h in ${INSTALLED_HEADERS}; do \\\n-\t    ${INSTALL_DATA} $$h $(DESTDIR)$${thd}; \\\n-\t  done; \\\n+\t\t${mkinstalldirs} $(DESTDIR)$(libdir)/$(MULTIOSDIR); \\\n+\t\t$(INSTALL_DATA) $(TARGETLIB) $(DESTDIR)$(libdir)/$(MULTIOSDIR)/$(TARGETLIB)n; \\\n+\t\t( cd $(DESTDIR)$(libdir)/$(MULTIOSDIR) ; chmod 644 $(TARGETLIB)n ;$(RANLIB) $(TARGETLIB)n ); \\\n+\t\tmv -f $(DESTDIR)$(libdir)/$(MULTIOSDIR)/$(TARGETLIB)n $(DESTDIR)$(libdir)/$(MULTIOSDIR)/$(TARGETLIB); \\\n+\t\tcase \"${target_header_dir}\" in \\\n+\t\t  /*)    thd=${target_header_dir};; \\\n+\t\t  *)     thd=${includedir}/${target_header_dir};; \\\n+\t\tesac; \\\n+\t\t${mkinstalldirs} $(DESTDIR)$${thd}; \\\n+\t\tfor h in ${INSTALLED_HEADERS}; do \\\n+\t\t  ${INSTALL_DATA} $$h $(DESTDIR)$${thd}; \\\n+\t\tdone; \\\n \tfi\n \t@$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO=install\n "}, {"sha": "e601ccd99f48869a156d1835a8bf5ab3cab1417d", "filename": "libiberty/configure", "status": "modified", "additions": 31, "deletions": 25, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9fddf41d8f03b13b32588ac2e46787e62f16ad/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9fddf41d8f03b13b32588ac2e46787e62f16ad/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=8c9fddf41d8f03b13b32588ac2e46787e62f16ad", "patch": "@@ -675,8 +675,8 @@ with_cross_host\n with_newlib\n enable_maintainer_mode\n enable_multilib\n-enable_largefile\n enable_install_libiberty\n+enable_largefile\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1303,8 +1303,8 @@ Optional Features:\n                           enable make rules and dependencies not useful\n                           (and sometimes confusing) to the casual installer\n   --enable-multilib       build many library versions (default)\n+  --enable-install-libiberty       Install headers and library for end users\n   --disable-largefile     omit support for large files\n-  --enable-install-libiberty       Install headers for end users\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -2784,6 +2784,35 @@ if test $cross_compiling = no && test $multilib = yes \\\n    cross_compiling=maybe\n fi\n \n+# We may wish to install the target headers somewhere.\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether to install libiberty headers and static library\" >&5\n+$as_echo_n \"checking whether to install libiberty headers and static library... \" >&6; }\n+\n+# Check whether --enable-install-libiberty was given.\n+if test \"${enable_install_libiberty+set}\" = set; then :\n+  enableval=$enable_install_libiberty; enable_install_libiberty=$enableval\n+else\n+  enable_install_libiberty=no\n+fi\n+\n+# Option parsed, now set things appropriately.\n+case x\"$enable_install_libiberty\" in\n+  xyes|x)\n+    target_header_dir=libiberty\n+    ;;\n+  xno)\n+    target_header_dir=\n+    ;;\n+  *)\n+    # This could be sanity-checked in various ways...\n+    target_header_dir=\"${enable_install_libiberty}\"\n+    ;;\n+esac\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_install_libiberty\" >&5\n+$as_echo \"$enable_install_libiberty\" >&6; }\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: target_header_dir = $target_header_dir\" >&5\n+$as_echo \"$as_me: target_header_dir = $target_header_dir\" >&6;}\n+\n \n ac_ext=c\n ac_cpp='$CPP $CPPFLAGS'\n@@ -5761,29 +5790,6 @@ _ACEOF\n \n   esac\n \n-  # We may wish to install the target headers somewhere.\n-  # Check whether --enable-install-libiberty was given.\n-if test \"${enable_install_libiberty+set}\" = set; then :\n-  enableval=$enable_install_libiberty; enable_install_libiberty=$enableval\n-else\n-  enable_install_libiberty=no\n-fi\n-\n-  # Option parsed, now set things appropriately.\n-  case x\"$enable_install_libiberty\" in\n-    xyes|x)\n-      target_header_dir=libiberty\n-      ;;\n-    xno)\n-      target_header_dir=\n-      ;;\n-    *)\n-      # This could be sanity-checked in various ways...\n-      target_header_dir=\"${enable_install_libiberty}\"\n-      ;;\n-  esac\n-\n-\n else\n \n    # Not a target library, so we set things up to run the test suite."}, {"sha": "fcea46f6c7bbe7ec631421ecdbf663742a20e42d", "filename": "libiberty/configure.ac", "status": "modified", "additions": 25, "deletions": 21, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9fddf41d8f03b13b32588ac2e46787e62f16ad/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9fddf41d8f03b13b32588ac2e46787e62f16ad/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=8c9fddf41d8f03b13b32588ac2e46787e62f16ad", "patch": "@@ -128,6 +128,31 @@ if test $cross_compiling = no && test $multilib = yes \\\n    cross_compiling=maybe\n fi\n \n+# We may wish to install the target headers somewhere.\n+AC_MSG_CHECKING([whether to install libiberty headers and static library])\n+dnl install-libiberty is disabled by default\n+\n+AC_ARG_ENABLE(install-libiberty,\n+[  --enable-install-libiberty       Install headers and library for end users],\n+enable_install_libiberty=$enableval,\n+enable_install_libiberty=no)dnl\n+\n+# Option parsed, now set things appropriately.\n+case x\"$enable_install_libiberty\" in\n+  xyes|x)\n+    target_header_dir=libiberty\n+    ;;\n+  xno)   \n+    target_header_dir=\n+    ;;\n+  *) \n+    # This could be sanity-checked in various ways...\n+    target_header_dir=\"${enable_install_libiberty}\"\n+    ;;\n+esac\n+AC_MSG_RESULT($enable_install_libiberty)\n+AC_MSG_NOTICE([target_header_dir = $target_header_dir])\n+\n GCC_NO_EXECUTABLES\n AC_PROG_CC\n AC_SYS_LARGEFILE\n@@ -492,27 +517,6 @@ if test -n \"${with_target_subdir}\"; then\n \n   esac\n \n-  # We may wish to install the target headers somewhere.\n-  AC_ARG_ENABLE(install-libiberty,\n-  [  --enable-install-libiberty       Install headers for end users],\n-  enable_install_libiberty=$enableval,\n-  enable_install_libiberty=no)dnl\n-  \n-  # Option parsed, now set things appropriately.\n-  case x\"$enable_install_libiberty\" in\n-    xyes|x)\n-      target_header_dir=libiberty\n-      ;;\n-    xno)   \n-      target_header_dir=\n-      ;;\n-    *) \n-      # This could be sanity-checked in various ways...\n-      target_header_dir=\"${enable_install_libiberty}\"\n-      ;;\n-  esac\n-\n-\n else\n \n    # Not a target library, so we set things up to run the test suite."}]}