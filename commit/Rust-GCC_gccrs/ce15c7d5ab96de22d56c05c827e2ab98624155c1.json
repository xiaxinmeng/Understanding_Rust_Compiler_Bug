{"sha": "ce15c7d5ab96de22d56c05c827e2ab98624155c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UxNWM3ZDVhYjk2ZGUyMmQ1NmMwNWM4MjdlMmFiOTg2MjQxNTVjMQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janisjo@codesourcery.com", "date": "2012-06-25T22:01:34Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2012-06-25T22:01:34Z"}, "message": "profopt.exp: Make prof_option_list local to profopt-execute.\n\n\t* lib/profopt.exp: Make prof_option_list local to profopt-execute.\n\t* g++.dg/tree-prof/tree-prof.exp (PROFOPT_OPTIONS): Define after\n\tincluding profopt.opt; save and restore existing value.\n\t* g++.dg/bprob/bprob.exp: Likewise.\n\t* gcc.dg/matrix/matrix.exp: Likewise.\n\t* gcc.dg/tree-prof/tree-prof.exp: Likewise.\n\t* gcc.misc-tests/bprob.exp: Likewise; also replace formerly-ignored\n\tPROFOPT_OPTIONS.\n\nFrom-SVN: r188964", "tree": {"sha": "1a1736c634dcac65c5584ae5502f3e5b015d2569", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a1736c634dcac65c5584ae5502f3e5b015d2569"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce15c7d5ab96de22d56c05c827e2ab98624155c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce15c7d5ab96de22d56c05c827e2ab98624155c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce15c7d5ab96de22d56c05c827e2ab98624155c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce15c7d5ab96de22d56c05c827e2ab98624155c1/comments", "author": null, "committer": null, "parents": [{"sha": "ef25bad4976e7d489e35af430c0839761b6abcad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef25bad4976e7d489e35af430c0839761b6abcad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef25bad4976e7d489e35af430c0839761b6abcad"}], "stats": {"total": 74, "additions": 48, "deletions": 26}, "files": [{"sha": "a8416dce09925290d42b631db01665cf4a12b0b4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce15c7d5ab96de22d56c05c827e2ab98624155c1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce15c7d5ab96de22d56c05c827e2ab98624155c1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ce15c7d5ab96de22d56c05c827e2ab98624155c1", "patch": "@@ -1,3 +1,14 @@\n+2012-06-25  Janis Johnson  <janisjo@codesourcery.com>\n+\n+\t* lib/profopt.exp: Make prof_option_list local to profopt-execute.\n+\t* g++.dg/tree-prof/tree-prof.exp (PROFOPT_OPTIONS): Define after\n+\tincluding profopt.opt; save and restore existing value.\n+\t* g++.dg/bprob/bprob.exp: Likewise.\n+\t* gcc.dg/matrix/matrix.exp: Likewise.\n+\t* gcc.dg/tree-prof/tree-prof.exp: Likewise.\n+\t* gcc.misc-tests/bprob.exp: Likewise; also replace formerly-ignored\n+\tPROFOPT_OPTIONS.\n+\n 2012-06-25  Richard Henderson  <rth@redhat.com>\n \n \t* gcc.dg/pr53749.c: New."}, {"sha": "bb0d4643ac99e25bc24b497787bbe066c15ea0a6", "filename": "gcc/testsuite/g++.dg/bprob/bprob.exp", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce15c7d5ab96de22d56c05c827e2ab98624155c1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fbprob%2Fbprob.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce15c7d5ab96de22d56c05c827e2ab98624155c1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fbprob%2Fbprob.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fbprob%2Fbprob.exp?ref=ce15c7d5ab96de22d56c05c827e2ab98624155c1", "patch": "@@ -33,7 +33,11 @@ if $tracelevel then {\n     strace $tracelevel\n }\n \n-# Override the list defined in profopt.exp.\n+# Load support procs.\n+load_lib profopt.exp\n+\n+# Save and override the default list defined in profopt.exp.\n+set bprob_save_profopt_options $PROFOPT_OPTIONS\n set PROFOPT_OPTIONS [list \\\n \t{ -g } \\\n \t{ -O0 } \\\n@@ -47,9 +51,6 @@ if $tracelevel then {\n     strace $tracelevel\n }\n \n-# Load support procs.\n-load_lib profopt.exp\n-\n set profile_options \"-fprofile-arcs\"\n set feedback_options \"-fbranch-probabilities\"\n \n@@ -63,3 +64,5 @@ foreach profile_option $profile_options feedback_option $feedback_options {\n         profopt-execute $src\n     }\n }\n+\n+set PROFOPT_OPTIONS $bprob_save_profopt_options"}, {"sha": "b4aa22dc46580b22e660db06c5134bd00493ca09", "filename": "gcc/testsuite/g++.dg/tree-prof/tree-prof.exp", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce15c7d5ab96de22d56c05c827e2ab98624155c1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Ftree-prof.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce15c7d5ab96de22d56c05c827e2ab98624155c1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Ftree-prof.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Ftree-prof.exp?ref=ce15c7d5ab96de22d56c05c827e2ab98624155c1", "patch": "@@ -29,16 +29,17 @@ if { ![check_profiling_available \"-fprofile-generate\"] } {\n set tool g++\n set prof_ext \"gcda\"\n \n-# Override the list defined in profopt.exp.\n-set PROFOPT_OPTIONS [list {}]\n-\n if $tracelevel then {\n     strace $tracelevel\n }\n \n # Load support procs.\n load_lib profopt.exp\n \n+# Save and override the default list defined in profopt.exp.\n+set treeprof_save_profopt_options $PROFOPT_OPTIONS\n+set PROFOPT_OPTIONS [list {}]\n+\n # These are globals used by profopt-execute.  The first is options\n # needed to generate profile data, the second is options to use the\n # profile data.\n@@ -52,3 +53,5 @@ foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.C]] {\n     }\n     profopt-execute $src\n }\n+\n+set PROFOPT_OPTIONS $treeprof_save_profopt_options"}, {"sha": "d2e13449ba4fffb39634b6907592020d356fb881", "filename": "gcc/testsuite/gcc.dg/matrix/matrix.exp", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce15c7d5ab96de22d56c05c827e2ab98624155c1/gcc%2Ftestsuite%2Fgcc.dg%2Fmatrix%2Fmatrix.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce15c7d5ab96de22d56c05c827e2ab98624155c1/gcc%2Ftestsuite%2Fgcc.dg%2Fmatrix%2Fmatrix.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmatrix%2Fmatrix.exp?ref=ce15c7d5ab96de22d56c05c827e2ab98624155c1", "patch": "@@ -39,16 +39,17 @@ if { ![check_profiling_available \"-fprofile-generate\"] } {\n set tool gcc\n set prof_ext \"gcda\"\n \n-# Override the list defined in profopt.exp.\n-set PROFOPT_OPTIONS [list {}]\n-\n if $tracelevel then {\n     strace $tracelevel\n }\n \n # Load support procs.\n load_lib profopt.exp\n \n+# Save and override the default list defined in profopt.exp.\n+set matrix_save_profopt_options $PROFOPT_OPTIONS\n+set PROFOPT_OPTIONS [list {}]\n+\n # These are globals used by profopt-execute.  The first is options\n # needed to generate profile data, the second is options to use the\n # profile data.\n@@ -63,3 +64,4 @@ foreach src [lsort [glob -nocomplain $srcdir/$subdir/transpose-*.c]] {\n     profopt-execute $src\n }\n \n+set PROFOPT_OPTIONS $matrix_save_profopt_options"}, {"sha": "e3c5e3d048622585718fe5655fd31188095e78fb", "filename": "gcc/testsuite/gcc.dg/tree-prof/tree-prof.exp", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce15c7d5ab96de22d56c05c827e2ab98624155c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Ftree-prof.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce15c7d5ab96de22d56c05c827e2ab98624155c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Ftree-prof.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Ftree-prof.exp?ref=ce15c7d5ab96de22d56c05c827e2ab98624155c1", "patch": "@@ -29,16 +29,17 @@ if { ![check_profiling_available \"-fprofile-generate\"] } {\n set tool gcc\n set prof_ext \"gcda\"\n \n-# Override the list defined in profopt.exp.\n-set PROFOPT_OPTIONS [list {}]\n-\n if $tracelevel then {\n     strace $tracelevel\n }\n \n # Load support procs.\n load_lib profopt.exp\n \n+# Save and override the default list defined in profopt.exp.\n+set treeprof_save_profopt_options $PROFOPT_OPTIONS\n+set PROFOPT_OPTIONS [list {}]\n+\n # These are globals used by profopt-execute.  The first is options\n # needed to generate profile data, the second is options to use the\n # profile data.\n@@ -52,3 +53,5 @@ foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.c]] {\n     }\n     profopt-execute $src\n }\n+\n+set PROFOPT_OPTIONS $treeprof_save_profopt_options"}, {"sha": "6f520ec729c3f1fa16156d7efc29592035bc0577", "filename": "gcc/testsuite/gcc.misc-tests/bprob.exp", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce15c7d5ab96de22d56c05c827e2ab98624155c1/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce15c7d5ab96de22d56c05c827e2ab98624155c1/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob.exp?ref=ce15c7d5ab96de22d56c05c827e2ab98624155c1", "patch": "@@ -30,23 +30,17 @@ set tool gcc\n set prof_ext \"gcda\"\n set perf_ext tim\n \n-# Override the list defined in profopt.exp.\n-set PROFOPT_OPTIONS [list \\\n-\t{ -g } \\\n-\t{ -O0 } \\\n-\t{ -O1 } \\\n-\t{ -O2 -DPERFTIME } \\\n-\t{ -O3 -DPERFTIME } \\\n-\t{ -O3 -g -DPERFTIME } \\\n-\t{ -Os } ]\n-\n if $tracelevel then {\n     strace $tracelevel\n }\n \n # Load support procs.\n load_lib profopt.exp\n \n+# Save and override the default list defined in profopt.exp.\n+set bprob_save_profopt_options $PROFOPT_OPTIONS\n+set PROFOPT_OPTIONS [list { -O2 } { -O3  }]\n+\n set profile_options \"-fprofile-arcs\"\n set feedback_options \"-fbranch-probabilities\"\n \n@@ -59,3 +53,5 @@ foreach profile_option $profile_options feedback_option $feedback_options {\n         profopt-execute $src\n     }\n }\n+\n+set PROFOPT_OPTIONS $bprob_save_profopt_options"}, {"sha": "f0dbee720e589692639d0d6a4c860360b92e0129", "filename": "gcc/testsuite/lib/profopt.exp", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce15c7d5ab96de22d56c05c827e2ab98624155c1/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce15c7d5ab96de22d56c05c827e2ab98624155c1/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fprofopt.exp?ref=ce15c7d5ab96de22d56c05c827e2ab98624155c1", "patch": "@@ -64,8 +64,6 @@ if ![info exists PROFOPT_OPTIONS] {\n \t{ -Os } ]\n }\n \n-set prof_option_list $PROFOPT_OPTIONS\n-\n #\n # profopt-cleanup -- remove profiling or performance results files.\n #\n@@ -215,7 +213,7 @@ proc profopt-get-options { src } {\n #\n proc profopt-execute { src } {\n     global srcdir tmpdir\n-    global prof_option_list\n+    global PROFOPT_OPTIONS\n     global tool profile_option feedback_option prof_ext perf_ext perf_delta\n     global generate_final_code use_final_code\n     global verbose\n@@ -227,6 +225,12 @@ proc profopt-execute { src } {\n         error \"No feedback option specified for second compile.\"\n     }\n \n+    # Use the default option list or one defined for a set of tests.\n+    if ![info exists PROFOPT_OPTIONS] {\n+         error \"PROFOPT_OPTIONS is not defined\"\n+    }\n+    set prof_option_list $PROFOPT_OPTIONS\n+\n     regsub \"(?q)$srcdir/\" $src \"\" testcase\n     # If we couldn't rip $srcdir out of `src' then just do the best we can.\n     # The point is to reduce the unnecessary noise in the logs.  Don't strip"}]}