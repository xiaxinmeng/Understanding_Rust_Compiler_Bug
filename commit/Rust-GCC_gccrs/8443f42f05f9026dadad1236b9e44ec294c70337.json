{"sha": "8443f42f05f9026dadad1236b9e44ec294c70337", "node_id": "C_kwDOANBUbNoAKDg0NDNmNDJmMDVmOTAyNmRhZGFkMTIzNmI5ZTQ0ZWMyOTRjNzAzMzc", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2023-03-28T08:40:05Z"}, "committer": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2023-03-28T08:40:05Z"}, "message": "testsuite: Fix weak_undefined handling on Darwin\n\nThe patch that introduced the weak_undefined effective-target keyword\nand corresponding dg-add-options support\n\ncommit 378ec7b87a5265dbe2d489c245fac98ef37fa638\nAuthor: Alexandre Oliva <oliva@adacore.com>\nDate:   Thu Mar 23 00:45:05 2023 -0300\n\n    [testsuite] test for weak_undefined support and add options\n\nbadly broke the affected tests on macOS like so:\n\nERROR: gcc.dg/addr_equal-1.c: unknown dg option: 89 for \" dg-add-options 5 weak_undefined \"\nERROR: gcc.dg/addr_equal-1.c: unknown dg option: 89 for \" dg-add-options 5 weak_undefined \"\n\nadd_options_for_weak_undefined tries to call an non-existant proc \"89\".\nEven after fixing this by escaping the brackets, two tests still failed to\nlink since they lacked the corresponding calls do dg-add-options\nweak_undefined.\n\nTested on x86_64-apple-darwin20.6.0 and i386-pc-solaris2.11.\n\n2023-03-27  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\tgcc/testsuite:\n\t* lib/target-supports.exp (add_options_for_weak_undefined): Escape\n\tbrackets.\n\t* gcc.dg/visibility-22.c: Add weak_undefined options.\n\n\tlibgomp:\n\t* testsuite/libgomp.oacc-c-c++-common/routine-nohost-2.c: Add\n\tweak_undefined options.", "tree": {"sha": "8debde8f00e84eb7cd4aa912a32f54eb54cc3880", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8debde8f00e84eb7cd4aa912a32f54eb54cc3880"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8443f42f05f9026dadad1236b9e44ec294c70337", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8443f42f05f9026dadad1236b9e44ec294c70337", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8443f42f05f9026dadad1236b9e44ec294c70337", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8443f42f05f9026dadad1236b9e44ec294c70337/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "304c7d44a2212e6fd618587331cea2c266dc10bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/304c7d44a2212e6fd618587331cea2c266dc10bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/304c7d44a2212e6fd618587331cea2c266dc10bf"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "9123b350b2e4b00050e7b5a5f0233a3c84edbc45", "filename": "gcc/testsuite/gcc.dg/visibility-22.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8443f42f05f9026dadad1236b9e44ec294c70337/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8443f42f05f9026dadad1236b9e44ec294c70337/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-22.c?ref=8443f42f05f9026dadad1236b9e44ec294c70337", "patch": "@@ -3,6 +3,7 @@\n /* { dg-require-visibility \"\" } */\n /* { dg-require-effective-target weak_undefined } */\n /* { dg-options \"-O2 -fPIC\" { target fpic } } */\n+/* { dg-add-options weak_undefined } */\n \n extern void foo () __attribute__((weak,visibility(\"hidden\")));\n int"}, {"sha": "1d6cc6f8d88cb7f46d065d98fa7184fe52ebc44c", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8443f42f05f9026dadad1236b9e44ec294c70337/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8443f42f05f9026dadad1236b9e44ec294c70337/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=8443f42f05f9026dadad1236b9e44ec294c70337", "patch": "@@ -361,7 +361,7 @@ proc check_weak_available { } {\n proc add_options_for_weak_undefined { flags } {\n     if { [istarget *-*-darwin*] } {\n \tlappend flags \"-Wl,-undefined,dynamic_lookup\"\n-\tif { [istarget *-*-darwin[89]*] } {\n+\tif { [istarget *-*-darwin\\[89\\]*] } {\n \t    lappend flags \"-Wl,-flat_namespace\"\n \t}\n     }"}, {"sha": "525e3bff0f1e11f154113702ecf4e58aae6b1340", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/routine-nohost-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8443f42f05f9026dadad1236b9e44ec294c70337/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-nohost-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8443f42f05f9026dadad1236b9e44ec294c70337/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-nohost-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-nohost-2.c?ref=8443f42f05f9026dadad1236b9e44ec294c70337", "patch": "@@ -8,6 +8,7 @@\n /* { dg-additional-sources routine-nohost-2_2.c } */\n \n /* { dg-additional-options \"-fno-inline\" } for stable results regarding OpenACC 'routine'.  */\n+/* { dg-add-options weak_undefined } */\n \n #include <assert.h>\n #include <openacc.h>"}]}