{"sha": "ae95537a89e5f8d5c57ede74ca84a4a4cf3d96e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU5NTUzN2E4OWU1ZjhkNWM1N2VkZTc0Y2E4NGE0YTRjZjNkOTZlMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2005-02-24T18:58:04Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2005-02-24T18:58:04Z"}, "message": "tree-ssa-ccp.c (visit_assignment): Verify that result of VIEW_CONVERT_EXPR is_gimple_min_invariant.\n\n\t* tree-ssa-ccp.c (visit_assignment): Verify that result of\n\tVIEW_CONVERT_EXPR is_gimple_min_invariant.\n\nFrom-SVN: r95510", "tree": {"sha": "bd4fbe001e6ff71d9fe9fda180ebfa70ce959631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd4fbe001e6ff71d9fe9fda180ebfa70ce959631"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae95537a89e5f8d5c57ede74ca84a4a4cf3d96e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae95537a89e5f8d5c57ede74ca84a4a4cf3d96e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae95537a89e5f8d5c57ede74ca84a4a4cf3d96e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae95537a89e5f8d5c57ede74ca84a4a4cf3d96e3/comments", "author": null, "committer": null, "parents": [{"sha": "ab9b9d2cf3d913401a88be046afe7113e6448e66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab9b9d2cf3d913401a88be046afe7113e6448e66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab9b9d2cf3d913401a88be046afe7113e6448e66"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "7677cf84bc8a537d98c01fcf1c7c984841c341f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae95537a89e5f8d5c57ede74ca84a4a4cf3d96e3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae95537a89e5f8d5c57ede74ca84a4a4cf3d96e3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae95537a89e5f8d5c57ede74ca84a4a4cf3d96e3", "patch": "@@ -1,5 +1,8 @@\n 2005-02-24  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* tree-ssa-ccp.c (visit_assignment): Verify that result of\n+\tVIEW_CONVERT_EXPR is_gimple_min_invariant.\n+\n \t* print-tree.c (print_node_brief): Print LABEL_DECL_UID.\n \t(print_node): Likewise.\n \tPrint TYPE_SIZES_GIMPLIFIED."}, {"sha": "b255020917f73edcad366dc1d9850a6dcb319d3f", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae95537a89e5f8d5c57ede74ca84a4a4cf3d96e3/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae95537a89e5f8d5c57ede74ca84a4a4cf3d96e3/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=ae95537a89e5f8d5c57ede74ca84a4a4cf3d96e3", "patch": "@@ -1060,9 +1060,7 @@ visit_assignment (tree stmt, tree *output_p)\n       val = evaluate_stmt (stmt);\n \n   /* If the original LHS was a VIEW_CONVERT_EXPR, modify the constant\n-     value to be a VIEW_CONVERT_EXPR of the old constant value.  This is\n-     valid because a VIEW_CONVERT_EXPR is valid everywhere an operand of\n-     aggregate type is valid.\n+     value to be a VIEW_CONVERT_EXPR of the old constant value.\n \n      ??? Also, if this was a definition of a bitfield, we need to widen\n      the constant value into the type of the destination variable.  This\n@@ -1073,10 +1071,18 @@ visit_assignment (tree stmt, tree *output_p)\n     if (TREE_CODE (orig_lhs) == VIEW_CONVERT_EXPR\n \t&& val.lattice_val == CONSTANT)\n       {\n-\tval.const_val = build1 (VIEW_CONVERT_EXPR,\n-\t\t\t\tTREE_TYPE (TREE_OPERAND (orig_lhs, 0)),\n-\t\t\t\tval.const_val);\n+\ttree w = fold (build1 (VIEW_CONVERT_EXPR,\n+\t\t\t       TREE_TYPE (TREE_OPERAND (orig_lhs, 0)),\n+\t\t\t       val.const_val));\n+\n \torig_lhs = TREE_OPERAND (orig_lhs, 1);\n+\tif (w && is_gimple_min_invariant (w))\n+\t  val.const_val = w;\n+\telse\n+\t  {\n+\t    val.lattice_val = VARYING;\n+\t    val.const_val = NULL;\n+\t  }\n       }\n \n     if (val.lattice_val == CONSTANT"}]}