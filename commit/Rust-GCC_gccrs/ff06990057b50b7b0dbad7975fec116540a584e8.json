{"sha": "ff06990057b50b7b0dbad7975fec116540a584e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYwNjk5MDA1N2I1MGI3YjBkYmFkNzk3NWZlYzExNjU0MGE1ODRlOA==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2008-03-15T22:49:44Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2008-03-15T22:49:44Z"}, "message": "arm.c (arm_rtx_costs_1): Add costs for ARMv6 value extension instructions.\n\n2008-03-15  Paul Brook  <paul@codesourcery.com>\n\n\tgcc/\n\t* config/arm/arm.c (arm_rtx_costs_1): Add costs for ARMv6 value\n\textension instructions.\n\nFrom-SVN: r133260", "tree": {"sha": "ad56c65078d5b1dc642e03d2d03e849273c0c88c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad56c65078d5b1dc642e03d2d03e849273c0c88c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff06990057b50b7b0dbad7975fec116540a584e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff06990057b50b7b0dbad7975fec116540a584e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff06990057b50b7b0dbad7975fec116540a584e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff06990057b50b7b0dbad7975fec116540a584e8/comments", "author": null, "committer": null, "parents": [{"sha": "1b7538283219ffe978979e0a644acde5cf39a60a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b7538283219ffe978979e0a644acde5cf39a60a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b7538283219ffe978979e0a644acde5cf39a60a"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "fcb1623cc3089b3208aeecc2c6917a5f1a870829", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff06990057b50b7b0dbad7975fec116540a584e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff06990057b50b7b0dbad7975fec116540a584e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff06990057b50b7b0dbad7975fec116540a584e8", "patch": "@@ -1,3 +1,8 @@\n+2008-03-15  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/arm.c (arm_rtx_costs_1): Add costs for ARMv6 value\n+\textension instructions.\n+\n 2008-03-15  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-ccp.c (ccp_fold): Also read from constant values"}, {"sha": "4fb0a0d1f1ee50326c81b0d99eb2aab23dc4b515", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff06990057b50b7b0dbad7975fec116540a584e8/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff06990057b50b7b0dbad7975fec116540a584e8/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=ff06990057b50b7b0dbad7975fec116540a584e8", "patch": "@@ -4904,6 +4904,12 @@ arm_rtx_costs_1 (rtx x, enum rtx_code code, enum rtx_code outer)\n       /* Fall through */\n \n     case PLUS:\n+      if (arm_arch6 && mode == SImode\n+\t  && (GET_CODE (XEXP (x, 0)) == ZERO_EXTEND\n+\t      || GET_CODE (XEXP (x, 0)) == SIGN_EXTEND))\n+\treturn 1 + (GET_CODE (XEXP (XEXP (x, 0), 0)) == MEM ? 10 : 0)\n+\t\t + (GET_CODE (XEXP (x, 1)) == MEM ? 10 : 0);\n+\n       if (GET_CODE (XEXP (x, 0)) == MULT)\n \t{\n \t  extra_cost = rtx_cost (XEXP (x, 0), code);\n@@ -5002,12 +5008,17 @@ arm_rtx_costs_1 (rtx x, enum rtx_code code, enum rtx_code outer)\n       return 4 + (mode == DImode ? 4 : 0);\n \n     case SIGN_EXTEND:\n-      /* ??? value extensions are cheaper on armv6. */\n+      if (arm_arch_thumb2 && mode == SImode)\n+\treturn 1 + (GET_CODE (XEXP (x, 0)) == MEM ? 10 : 0);\n+\n       if (GET_MODE (XEXP (x, 0)) == QImode)\n \treturn (4 + (mode == DImode ? 4 : 0)\n \t\t+ (GET_CODE (XEXP (x, 0)) == MEM ? 10 : 0));\n       /* Fall through */\n     case ZERO_EXTEND:\n+      if (arm_arch6 && mode == SImode)\n+\treturn 1 + (GET_CODE (XEXP (x, 0)) == MEM ? 10 : 0);\n+\n       switch (GET_MODE (XEXP (x, 0)))\n \t{\n \tcase QImode:"}]}