{"sha": "70daecc03235aa7187b03681cebed6e04b32678e", "node_id": "C_kwDOANBUbNoAKDcwZGFlY2MwMzIzNWFhNzE4N2IwMzY4MWNlYmVkNmUwNGIzMjY3OGU", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-08-02T21:31:37Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-08-02T23:23:47Z"}, "message": "Do not register edges for statements not understood.\n\nPreviously, all gimple_cond types were undserstoof, with float values,\nthis is no longer true.  We should gracefully do nothing if the\ngcond type is not supported.\n\n\tPR tree-optimization/106510\n\tgcc/\n\t* gimple-range-fold.cc (fur_source::register_outgoing_edges):\n\t  Check for unsupported statements early.\n\n\tgcc/testsuite\n\t* gcc.dg/pr106510.c: New.", "tree": {"sha": "fb23690d47bf2152bf5f72296892bcd37b804349", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb23690d47bf2152bf5f72296892bcd37b804349"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70daecc03235aa7187b03681cebed6e04b32678e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70daecc03235aa7187b03681cebed6e04b32678e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70daecc03235aa7187b03681cebed6e04b32678e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70daecc03235aa7187b03681cebed6e04b32678e/comments", "author": null, "committer": null, "parents": [{"sha": "502605a277d36cee1b0570982a16d97a43eace67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/502605a277d36cee1b0570982a16d97a43eace67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/502605a277d36cee1b0570982a16d97a43eace67"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "689d8279627de2c39bf353e220d4066dfcda2ab2", "filename": "gcc/gimple-range-fold.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70daecc03235aa7187b03681cebed6e04b32678e/gcc%2Fgimple-range-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70daecc03235aa7187b03681cebed6e04b32678e/gcc%2Fgimple-range-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-fold.cc?ref=70daecc03235aa7187b03681cebed6e04b32678e", "patch": "@@ -1496,6 +1496,10 @@ fur_source::register_outgoing_edges (gcond *s, irange &lhs_range, edge e0, edge\n   tree name;\n   basic_block bb = gimple_bb (s);\n \n+  range_op_handler handler (s);\n+  if (!handler)\n+    return;\n+\n   if (e0)\n     {\n       // If this edge is never taken, ignore it.\n@@ -1524,8 +1528,6 @@ fur_source::register_outgoing_edges (gcond *s, irange &lhs_range, edge e0, edge\n   tree ssa2 = gimple_range_ssa_p (gimple_range_operand2 (s));\n   if (ssa1 && ssa2)\n     {\n-      range_op_handler handler (s);\n-      gcc_checking_assert (handler);\n       if (e0)\n \t{\n \t  relation_kind relation = handler.op1_op2_relation (e0_range);"}, {"sha": "24e91123f63f771e4fd2f2ff696c393c2c93228f", "filename": "gcc/testsuite/gcc.dg/pr106510.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70daecc03235aa7187b03681cebed6e04b32678e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106510.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70daecc03235aa7187b03681cebed6e04b32678e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106510.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106510.c?ref=70daecc03235aa7187b03681cebed6e04b32678e", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+void foo ();\n+void ine_ok() {\n+  float y, x;\n+  if (x < y || x > y || y)\n+    foo ();\n+}\n+"}]}