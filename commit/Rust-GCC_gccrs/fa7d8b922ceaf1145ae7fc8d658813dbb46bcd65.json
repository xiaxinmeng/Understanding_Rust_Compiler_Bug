{"sha": "fa7d8b922ceaf1145ae7fc8d658813dbb46bcd65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE3ZDhiOTIyY2VhZjExNDVhZTdmYzhkNjU4ODEzZGJiNDZiY2Q2NQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-05T00:18:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-05T00:18:55Z"}, "message": "(start_function): Use TYPE_MAIN_VARIANT when comparing return type\nwith previous prototype declaration.\n\n(init_decl_processing): Don't use hardwired sizes for the modes when\nmaking int{Q,H,S,D}I_type_mode and the unsigned versions of them; the\nactual size depends on BITS_PER_UNIT.\n\nFrom-SVN: r2836", "tree": {"sha": "b6ec264217cff40a21fa0660053520a7e09dc03e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6ec264217cff40a21fa0660053520a7e09dc03e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa7d8b922ceaf1145ae7fc8d658813dbb46bcd65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa7d8b922ceaf1145ae7fc8d658813dbb46bcd65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa7d8b922ceaf1145ae7fc8d658813dbb46bcd65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa7d8b922ceaf1145ae7fc8d658813dbb46bcd65/comments", "author": null, "committer": null, "parents": [{"sha": "7722328eefe4bbcb8cdd9fcd8545698100a56d04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7722328eefe4bbcb8cdd9fcd8545698100a56d04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7722328eefe4bbcb8cdd9fcd8545698100a56d04"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "e4cec2181e660223187b9a953d6d0e01a877aa96", "filename": "gcc/c-decl.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa7d8b922ceaf1145ae7fc8d658813dbb46bcd65/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa7d8b922ceaf1145ae7fc8d658813dbb46bcd65/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=fa7d8b922ceaf1145ae7fc8d658813dbb46bcd65", "patch": "@@ -2567,28 +2567,28 @@ init_decl_processing ()\n   pushdecl (build_decl (TYPE_DECL, get_identifier (\"unsigned char\"),\n \t\t\tunsigned_char_type_node));\n \n-  intQI_type_node = make_signed_type (8);\n+  intQI_type_node = make_signed_type (GET_MODE_BITSIZE (QImode));\n   pushdecl (build_decl (TYPE_DECL, NULL_TREE, intQI_type_node));\n \n-  intHI_type_node = make_signed_type (16);\n+  intHI_type_node = make_signed_type (GET_MODE_BITSIZE (HImode));\n   pushdecl (build_decl (TYPE_DECL, NULL_TREE, intHI_type_node));\n \n-  intSI_type_node = make_signed_type (32);\n+  intSI_type_node = make_signed_type (GET_MODE_BITSIZE (SImode));\n   pushdecl (build_decl (TYPE_DECL, NULL_TREE, intSI_type_node));\n \n-  intDI_type_node = make_signed_type (64);\n+  intDI_type_node = make_signed_type (GET_MODE_BITSIZE (DImode));\n   pushdecl (build_decl (TYPE_DECL, NULL_TREE, intDI_type_node));\n \n-  unsigned_intQI_type_node = make_unsigned_type (8);\n+  unsigned_intQI_type_node = make_unsigned_type (GET_MODE_BITSIZE (QImode));\n   pushdecl (build_decl (TYPE_DECL, NULL_TREE, unsigned_intQI_type_node));\n \n-  unsigned_intHI_type_node = make_unsigned_type (16);\n+  unsigned_intHI_type_node = make_unsigned_type (GET_MODE_BITSIZE (HImode));\n   pushdecl (build_decl (TYPE_DECL, NULL_TREE, unsigned_intHI_type_node));\n \n-  unsigned_intSI_type_node = make_unsigned_type (32);\n+  unsigned_intSI_type_node = make_unsigned_type (GET_MODE_BITSIZE (SImode));\n   pushdecl (build_decl (TYPE_DECL, NULL_TREE, unsigned_intSI_type_node));\n \n-  unsigned_intDI_type_node = make_unsigned_type (64);\n+  unsigned_intDI_type_node = make_unsigned_type (GET_MODE_BITSIZE (DImode));\n   pushdecl (build_decl (TYPE_DECL, NULL_TREE, unsigned_intDI_type_node));\n \n   float_type_node = make_node (REAL_TYPE);\n@@ -5404,7 +5404,8 @@ start_function (declspecs, declarator, nested)\n   old_decl = lookup_name_current_level (DECL_NAME (decl1));\n   if (old_decl != 0 && TREE_CODE (TREE_TYPE (old_decl)) == FUNCTION_TYPE\n       && !DECL_BUILT_IN (old_decl)\n-      && TREE_TYPE (TREE_TYPE (decl1)) == TREE_TYPE (TREE_TYPE (old_decl))\n+      && (TYPE_MAIN_VARIANT (TREE_TYPE (TREE_TYPE (decl1)))\n+\t  == TYPE_MAIN_VARIANT (TREE_TYPE (TREE_TYPE (old_decl))))\n       && TYPE_ARG_TYPES (TREE_TYPE (decl1)) == 0)\n     TREE_TYPE (decl1) = TREE_TYPE (old_decl);\n "}]}