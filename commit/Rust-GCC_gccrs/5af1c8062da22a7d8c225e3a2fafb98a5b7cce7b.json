{"sha": "5af1c8062da22a7d8c225e3a2fafb98a5b7cce7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFmMWM4MDYyZGEyMmE3ZDhjMjI1ZTNhMmZhZmI5OGE1YjdjY2U3Yg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2003-09-11T05:17:57Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2003-09-11T05:17:57Z"}, "message": "types.c (double, longdouble): Merge identical SH and ARM typedefs, and add POWERPC64.\n\n\t* src/types.c (double, longdouble): Merge identical SH and ARM\n\ttypedefs, and add POWERPC64.\n\t* src/powerpc/ffi.c (ffi_prep_args64): Correct next_arg calc for\n\tstruct split over gpr and rest.\n\t(ffi_prep_cif_machdep): Correct intarg_count for structures.\n\t* src/powerpc/linux64.S (ffi_call_LINUX64): Fix gpr offsets.\n\nFrom-SVN: r71295", "tree": {"sha": "7fe48b10869cf553f80c9159b587e3d1c6056b5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fe48b10869cf553f80c9159b587e3d1c6056b5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5af1c8062da22a7d8c225e3a2fafb98a5b7cce7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5af1c8062da22a7d8c225e3a2fafb98a5b7cce7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5af1c8062da22a7d8c225e3a2fafb98a5b7cce7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5af1c8062da22a7d8c225e3a2fafb98a5b7cce7b/comments", "author": null, "committer": null, "parents": [{"sha": "64871887a66662af46478ac19a262ce142959e6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64871887a66662af46478ac19a262ce142959e6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64871887a66662af46478ac19a262ce142959e6c"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "2efe64b2129b75748f7554abc4ec6297f7ccbd16", "filename": "libffi/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5af1c8062da22a7d8c225e3a2fafb98a5b7cce7b/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5af1c8062da22a7d8c225e3a2fafb98a5b7cce7b/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=5af1c8062da22a7d8c225e3a2fafb98a5b7cce7b", "patch": "@@ -1,3 +1,12 @@\n+2003-09-11  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* src/types.c (double, longdouble): Merge identical SH and ARM\n+\ttypedefs, and add POWERPC64.\n+\t* src/powerpc/ffi.c (ffi_prep_args64): Correct next_arg calc for\n+\tstruct split over gpr and rest.\n+\t(ffi_prep_cif_machdep): Correct intarg_count for structures.\n+\t* src/powerpc/linux64.S (ffi_call_LINUX64): Fix gpr offsets.\n+\n 2003-09-09  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* src/powerpc/ffi.c (ffi_closure_helper_SYSV) Handle struct"}, {"sha": "9ad85ea7b86a8dd33ed6af53052a480884fc6f9f", "filename": "libffi/src/powerpc/ffi.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5af1c8062da22a7d8c225e3a2fafb98a5b7cce7b/libffi%2Fsrc%2Fpowerpc%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5af1c8062da22a7d8c225e3a2fafb98a5b7cce7b/libffi%2Fsrc%2Fpowerpc%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fffi.c?ref=5af1c8062da22a7d8c225e3a2fafb98a5b7cce7b", "patch": "@@ -376,11 +376,11 @@ void hidden ffi_prep_args64(extended_cif *ecif, unsigned long *const stack)\n \t  words = ((*ptr)->size + 7) / 8;\n \t  if (next_arg >= gpr_base && next_arg + words > gpr_end)\n \t    {\n-\t      unsigned int first = (char *) gpr_end - (char *) next_arg;\n+\t      size_t first = (char *) gpr_end - (char *) next_arg;\n \t      memcpy((char *) next_arg, (char *) *p_argv, first);\n \t      memcpy((char *) rest, (char *) *p_argv + first,\n \t\t     (*ptr)->size - first);\n-\t      next_arg = rest + words * 8 - first;\n+\t      next_arg = (unsigned long *) ((char *) rest + words * 8 - first);\n \t    }\n \t  else\n \t    {\n@@ -591,7 +591,7 @@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n #if FFI_TYPE_LONGDOUBLE != FFI_TYPE_DOUBLE\n \t  case FFI_TYPE_LONGDOUBLE:\n #endif\n-\t    intarg_count += ((*ptr)->size + 7) & ~7;\n+\t    intarg_count += ((*ptr)->size + 7) / 8;\n \t    break;\n \n \t  default:"}, {"sha": "2207980772064cc1376230309de305bffecbb01e", "filename": "libffi/src/powerpc/linux64.S", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5af1c8062da22a7d8c225e3a2fafb98a5b7cce7b/libffi%2Fsrc%2Fpowerpc%2Flinux64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5af1c8062da22a7d8c225e3a2fafb98a5b7cce7b/libffi%2Fsrc%2Fpowerpc%2Flinux64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Flinux64.S?ref=5af1c8062da22a7d8c225e3a2fafb98a5b7cce7b", "patch": "@@ -73,10 +73,10 @@ ffi_call_LINUX64:\n \tld\t%r5, -32-(6*8)(%r28)\n \tld\t%r6, -32-(5*8)(%r28)\n \tbf-\t5, 1f\n-\tld\t%r7, -32-(4*4)(%r28)\n-\tld\t%r8, -32-(3*4)(%r28)\n-\tld\t%r9, -32-(2*4)(%r28)\n-\tld\t%r10, -32-(1*4)(%r28)\n+\tld\t%r7, -32-(4*8)(%r28)\n+\tld\t%r8, -32-(3*8)(%r28)\n+\tld\t%r9, -32-(2*8)(%r28)\n+\tld\t%r10, -32-(1*8)(%r28)\n 1:\n \n \t/* Load all the FP registers.  */"}, {"sha": "7d4d0a0d84adf0aefd4a3fe17aa376caaceb61a2", "filename": "libffi/src/types.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5af1c8062da22a7d8c225e3a2fafb98a5b7cce7b/libffi%2Fsrc%2Ftypes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5af1c8062da22a7d8c225e3a2fafb98a5b7cce7b/libffi%2Fsrc%2Ftypes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Ftypes.c?ref=5af1c8062da22a7d8c225e3a2fafb98a5b7cce7b", "patch": "@@ -76,12 +76,7 @@ FFI_INTEGRAL_TYPEDEF(sint64, 8, 8, FFI_TYPE_SINT64);\n FFI_INTEGRAL_TYPEDEF(double, 8, 4, FFI_TYPE_DOUBLE);\n FFI_INTEGRAL_TYPEDEF(longdouble, 12, 4, FFI_TYPE_LONGDOUBLE);\n \n-#elif defined ARM\n-\n-FFI_INTEGRAL_TYPEDEF(double, 8, 4, FFI_TYPE_DOUBLE);\n-FFI_INTEGRAL_TYPEDEF(longdouble, 8, 4, FFI_TYPE_LONGDOUBLE);\n-\n-#elif defined SH\n+#elif defined ARM || defined SH || defined POWERPC64\n \n FFI_INTEGRAL_TYPEDEF(double, 8, 4, FFI_TYPE_DOUBLE);\n FFI_INTEGRAL_TYPEDEF(longdouble, 8, 4, FFI_TYPE_LONGDOUBLE);"}]}