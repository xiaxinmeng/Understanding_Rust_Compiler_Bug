{"sha": "438d798f1231f01c92211c76df1cc3b4cf6904a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM4ZDc5OGYxMjMxZjAxYzkyMjExYzc2ZGYxY2MzYjRjZjY5MDRhNA==", "commit": {"author": {"name": "Simon Martin", "email": "simartin@users.sourceforge.net", "date": "2007-04-24T20:52:16Z"}, "committer": {"name": "Simon Martin", "email": "simartin@gcc.gnu.org", "date": "2007-04-24T20:52:16Z"}, "message": "re PR middle-end/25923 ([gfortran] garbled diagnostics with -O -Wuninitialized)\n\n2007-04-24  Simon Martin  <simartin@users.sourceforge.net>\n\n\tPR diagnostic/25923\n\t* tree-pass.h (TDF_DIAGNOSTIC): New dump control to specify that a\n\tdiagnostic message is being built.\n\t* tree-pretty-print.c (dump_generic_node): Only write the formatted text\n\tinto BUFFER's stream if we are not building a diagnostic message.\n\t* toplev.c (default_tree_printer): Pass TDF_DIAGNOSTIC to\n\tdump_generic_node.\n\t* Makefile.in (toplev.o): Depend on tree-pass.h.\n\nFrom-SVN: r124121", "tree": {"sha": "8114578ec066c8fc958ebd7608cf29fdaca0d26e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8114578ec066c8fc958ebd7608cf29fdaca0d26e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/438d798f1231f01c92211c76df1cc3b4cf6904a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/438d798f1231f01c92211c76df1cc3b4cf6904a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/438d798f1231f01c92211c76df1cc3b4cf6904a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/438d798f1231f01c92211c76df1cc3b4cf6904a4/comments", "author": {"login": "simartin", "id": 935202, "node_id": "MDQ6VXNlcjkzNTIwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/935202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simartin", "html_url": "https://github.com/simartin", "followers_url": "https://api.github.com/users/simartin/followers", "following_url": "https://api.github.com/users/simartin/following{/other_user}", "gists_url": "https://api.github.com/users/simartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/simartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simartin/subscriptions", "organizations_url": "https://api.github.com/users/simartin/orgs", "repos_url": "https://api.github.com/users/simartin/repos", "events_url": "https://api.github.com/users/simartin/events{/privacy}", "received_events_url": "https://api.github.com/users/simartin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4df28528f69a4400fed72d69792fc043d1ebd826", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4df28528f69a4400fed72d69792fc043d1ebd826", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4df28528f69a4400fed72d69792fc043d1ebd826"}], "stats": {"total": 58, "additions": 53, "deletions": 5}, "files": [{"sha": "e744b9fabc57f05386d3ad714969a4f6cbf33628", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438d798f1231f01c92211c76df1cc3b4cf6904a4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438d798f1231f01c92211c76df1cc3b4cf6904a4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=438d798f1231f01c92211c76df1cc3b4cf6904a4", "patch": "@@ -1,3 +1,14 @@\n+2007-04-24  Simon Martin  <simartin@users.sourceforge.net>\n+\n+\tPR diagnostic/25923\n+\t* tree-pass.h (TDF_DIAGNOSTIC): New dump control to specify that a\n+\tdiagnostic message is being built.\n+\t* tree-pretty-print.c (dump_generic_node): Only write the formatted text\n+\tinto BUFFER's stream if we are not building a diagnostic message.\n+\t* toplev.c (default_tree_printer): Pass TDF_DIAGNOSTIC to\n+\tdump_generic_node.\n+\t* Makefile.in (toplev.o): Depend on tree-pass.h.\n+\n 2007-04-24  Ian Lance Taylor  <iant@google.com>\n \n \tPR tree-optimization/31602"}, {"sha": "13d93b046dbfb7c316d685a5bd293461c10fd0ad", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438d798f1231f01c92211c76df1cc3b4cf6904a4/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438d798f1231f01c92211c76df1cc3b4cf6904a4/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=438d798f1231f01c92211c76df1cc3b4cf6904a4", "patch": "@@ -2227,7 +2227,7 @@ toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    value-prof.h $(PARAMS_H) $(TM_P_H) reload.h dwarf2asm.h $(TARGET_H) \\\n    langhooks.h insn-flags.h $(CFGLAYOUT_H) $(CFGLOOP_H) hosthooks.h \\\n    $(CGRAPH_H) $(COVERAGE_H) alloc-pool.h $(GGC_H) $(INTEGRATE_H) \\\n-   $(CPPLIB_H) opts.h params.def tree-mudflap.h $(REAL_H)\n+   $(CPPLIB_H) opts.h params.def tree-mudflap.h $(REAL_H) tree-pass.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n \t  -DTARGET_NAME=\\\"$(target_noncanonical)\\\" \\\n \t  -c $(srcdir)/toplev.c $(OUTPUT_OPTION)"}, {"sha": "e0cb3ddb5427a542591806463585ee65ff6e5cf8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438d798f1231f01c92211c76df1cc3b4cf6904a4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438d798f1231f01c92211c76df1cc3b4cf6904a4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=438d798f1231f01c92211c76df1cc3b4cf6904a4", "patch": "@@ -1,3 +1,8 @@\n+2007-04-24  Simon Martin  <simartin@users.sourceforge.net>\n+\n+\tPR diagnostic/25923\n+\t* gfortran.dg/pr25923.f90: New test.\n+\n 2007-04-24  Ian Lance Taylor  <iant@google.com>\n \n \tPR tree-optimization/31602"}, {"sha": "5a2ee29b4ac4a05738adfac3cf800500e1fd5127", "filename": "gcc/testsuite/gfortran.dg/pr25923.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438d798f1231f01c92211c76df1cc3b4cf6904a4/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr25923.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438d798f1231f01c92211c76df1cc3b4cf6904a4/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr25923.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr25923.f90?ref=438d798f1231f01c92211c76df1cc3b4cf6904a4", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do compile }\n+! { dg-options \"-O -Wuninitialized\" }\n+\n+module foo\n+implicit none\n+\n+  type bar\n+    integer :: yr\n+  end type\n+\n+contains\n+\n+  function baz(arg) result(res) ! { dg-warning \"res.yr' may be\" }\n+    type(bar), intent(in) :: arg\n+    type(bar) :: res\n+    logical, external:: some_func\n+    if (.not. some_func(arg)) then\n+      call fatal('arg not valid')\n+    else\n+      res = arg\n+    end if\n+  end function baz\n+\n+end module foo"}, {"sha": "1600596d113f02e9fc171b42b1ee77db24bda32c", "filename": "gcc/toplev.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438d798f1231f01c92211c76df1cc3b4cf6904a4/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438d798f1231f01c92211c76df1cc3b4cf6904a4/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=438d798f1231f01c92211c76df1cc3b4cf6904a4", "patch": "@@ -82,6 +82,7 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n #include \"value-prof.h\"\n #include \"alloc-pool.h\"\n #include \"tree-mudflap.h\"\n+#include \"tree-pass.h\"\n \n #if defined (DWARF2_UNWIND_INFO) || defined (DWARF2_DEBUGGING_INFO)\n #include \"dwarf2out.h\"\n@@ -1567,7 +1568,7 @@ default_tree_printer (pretty_printer * pp, text_info *text, const char *spec,\n       pp_string (pp, n);\n     }\n   else\n-    dump_generic_node (pp, t, 0, 0, 0);\n+    dump_generic_node (pp, t, 0, TDF_DIAGNOSTIC, 0);\n \n   return true;\n }"}, {"sha": "c22e15e8a9dd196b0fd6b963bf554b8bcaaf7762", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438d798f1231f01c92211c76df1cc3b4cf6904a4/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438d798f1231f01c92211c76df1cc3b4cf6904a4/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=438d798f1231f01c92211c76df1cc3b4cf6904a4", "patch": "@@ -71,6 +71,9 @@ enum tree_dump_index\n #define TDF_MEMSYMS\t(1 << 14)\t/* display memory symbols in expr.\n                                            Implies TDF_VOPS.  */\n \n+#define TDF_DIAGNOSTIC\t(1 << 15)\t/* A dump to be put in a diagnostic\n+\t\t\t\t\t   message.  */\n+\n extern char *get_dump_file_name (enum tree_dump_index);\n extern int dump_enabled_p (enum tree_dump_index);\n extern int dump_initialized_p (enum tree_dump_index);"}, {"sha": "32f8ac00d3783a48ba4e62ca83ea0a6699c28240", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438d798f1231f01c92211c76df1cc3b4cf6904a4/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438d798f1231f01c92211c76df1cc3b4cf6904a4/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=438d798f1231f01c92211c76df1cc3b4cf6904a4", "patch": "@@ -431,8 +431,8 @@ dump_symbols (pretty_printer *buffer, bitmap syms, int flags)\n \n \n /* Dump the node NODE on the pretty_printer BUFFER, SPC spaces of indent.\n-   FLAGS specifies details to show in the dump (see TDF_* in tree.h).  If\n-   IS_STMT is true, the object printed is considered to be a statement\n+   FLAGS specifies details to show in the dump (see TDF_* in tree-pass.h).\n+   If IS_STMT is true, the object printed is considered to be a statement\n    and it is terminated by ';' if appropriate.  */\n \n int\n@@ -2055,7 +2055,11 @@ dump_generic_node (pretty_printer *buffer, tree node, int spc, int flags,\n \n   if (is_stmt && is_expr)\n     pp_semicolon (buffer);\n-  pp_write_text_to_stream (buffer);\n+\n+  /* If we're building a diagnostic, the formatted text will be written\n+     into BUFFER's stream by the caller; otherwise, write it now.  */\n+  if (!(flags & TDF_DIAGNOSTIC))\n+    pp_write_text_to_stream (buffer);\n \n   return spc;\n }"}]}