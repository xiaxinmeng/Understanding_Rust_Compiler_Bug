{"sha": "b8089d8d6c77954a47135004d4a0e80f15d681f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgwODlkOGQ2Yzc3OTU0YTQ3MTM1MDA0ZDRhMGU4MGYxNWQ2ODFmMw==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2003-01-24T16:32:16Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2003-01-24T16:32:16Z"}, "message": "* stor-layout.c (excess_unit_span): Only define if used.\n\nFrom-SVN: r61707", "tree": {"sha": "de73ecdd5e6b769c93cbcc61bdde0d0535c80e78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de73ecdd5e6b769c93cbcc61bdde0d0535c80e78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8089d8d6c77954a47135004d4a0e80f15d681f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8089d8d6c77954a47135004d4a0e80f15d681f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8089d8d6c77954a47135004d4a0e80f15d681f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8089d8d6c77954a47135004d4a0e80f15d681f3/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c13bea50d1ad5ab3408633a9378e4e78af52192d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c13bea50d1ad5ab3408633a9378e4e78af52192d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c13bea50d1ad5ab3408633a9378e4e78af52192d"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "9215c85461b462c1325c42ddf838d0213157a2be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8089d8d6c77954a47135004d4a0e80f15d681f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8089d8d6c77954a47135004d4a0e80f15d681f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8089d8d6c77954a47135004d4a0e80f15d681f3", "patch": "@@ -1,3 +1,7 @@\n+2003-01-24  Andreas Schwab  <schwab@suse.de>\n+\n+\t* stor-layout.c (excess_unit_span): Only define if used.\n+\n 2003-01-24  Jerry Quinn  <jlquinn@optonline.net>\n \n \t* gcc/doc/invoke.texi (Optimization Options): List -O levels"}, {"sha": "5e3759394e9f4059eb015fa81389146caafcb85b", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8089d8d6c77954a47135004d4a0e80f15d681f3/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8089d8d6c77954a47135004d4a0e80f15d681f3/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=b8089d8d6c77954a47135004d4a0e80f15d681f3", "patch": "@@ -1,6 +1,6 @@\n /* C-compiler utilities for types and variables storage layout\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1996, 1998,\n-   1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -62,9 +62,11 @@ static int reference_types_internal = 0;\n static void finalize_record_size\tPARAMS ((record_layout_info));\n static void finalize_type_size\t\tPARAMS ((tree));\n static void place_union_field\t\tPARAMS ((record_layout_info, tree));\n+#if defined (PCC_BITFIELD_TYPE_MATTERS) || defined (BITFIELD_NBYTES_LIMITED)\n static int excess_unit_span\t\tPARAMS ((HOST_WIDE_INT, HOST_WIDE_INT,\n \t\t\t\t\t\tHOST_WIDE_INT, HOST_WIDE_INT,\n \t\t\t\t\t\ttree));\n+#endif\n static unsigned int update_alignment_for_field\n                                         PARAMS ((record_layout_info, tree, \n \t\t\t\t\t\t unsigned int));\n@@ -791,6 +793,7 @@ place_union_field (rli, field)\n \t\t\t       DECL_SIZE_UNIT (field), rli->offset));\n }\n \n+#if defined (PCC_BITFIELD_TYPE_MATTERS) || defined (BITFIELD_NBYTES_LIMITED)\n /* A bitfield of SIZE with a required access alignment of ALIGN is allocated\n    at BYTE_OFFSET / BIT_OFFSET.  Return nonzero if the field would span more\n    units of alignment than the underlying TYPE.  */\n@@ -808,6 +811,7 @@ excess_unit_span (byte_offset, bit_offset, size, align, type)\n \t  > ((unsigned HOST_WIDE_INT) tree_low_cst (TYPE_SIZE (type), 1)\n \t     / align));\n }\n+#endif\n \n /* RLI contains information about the layout of a RECORD_TYPE.  FIELD\n    is a FIELD_DECL to be added after those fields already present in"}]}