{"sha": "fae6e24644e6d5f24fb5503cb607ddf7b242633b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFlNmUyNDY0NGU2ZDVmMjRmYjU1MDNjYjYwN2RkZjdiMjQyNjMzYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-02-11T20:22:23Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-02-11T20:22:23Z"}, "message": "re PR c++/19634 (Infinite memory usage on Alpha)\n\n        PR c++/19632\n        * pt.c (get_mostly_instantiated_function_type): Save and restore\n        flag_access_control instead of push/pop_access_scope.\n\nFrom-SVN: r94889", "tree": {"sha": "3785d239e2bd4feff71a9cc172bd2eb01c9f3a6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3785d239e2bd4feff71a9cc172bd2eb01c9f3a6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fae6e24644e6d5f24fb5503cb607ddf7b242633b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fae6e24644e6d5f24fb5503cb607ddf7b242633b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fae6e24644e6d5f24fb5503cb607ddf7b242633b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fae6e24644e6d5f24fb5503cb607ddf7b242633b/comments", "author": null, "committer": null, "parents": [{"sha": "d04b77acc8b7660ee15f53de421fe0523465fd4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d04b77acc8b7660ee15f53de421fe0523465fd4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d04b77acc8b7660ee15f53de421fe0523465fd4b"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "9e67a94fc0d04768487c6d1ec754bf92b902c2ac", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fae6e24644e6d5f24fb5503cb607ddf7b242633b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fae6e24644e6d5f24fb5503cb607ddf7b242633b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fae6e24644e6d5f24fb5503cb607ddf7b242633b", "patch": "@@ -1,3 +1,9 @@\n+2005-02-11  Richard Henderson  <rth@redhat.com>\n+\n+\tPR c++/19632\n+        * pt.c (get_mostly_instantiated_function_type): Save and restore\n+        flag_access_control instead of push/pop_access_scope.\n+\n 2005-02-10  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/19755"}, {"sha": "d484c8b75c7deee712bc1e7182b6893b87269de9", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fae6e24644e6d5f24fb5503cb607ddf7b242633b/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fae6e24644e6d5f24fb5503cb607ddf7b242633b/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=fae6e24644e6d5f24fb5503cb607ddf7b242633b", "patch": "@@ -11693,7 +11693,7 @@ get_mostly_instantiated_function_type (tree decl)\n     ;\n   else\n     {\n-      int i;\n+      int i, save_access_control;\n       tree partial_args;\n \n       /* Replace the innermost level of the TARGS with NULL_TREEs to\n@@ -11706,12 +11706,10 @@ get_mostly_instantiated_function_type (tree decl)\n \t\t\t   TMPL_ARGS_DEPTH (targs),\n \t\t\t   make_tree_vec (DECL_NTPARMS (tmpl)));\n \n-      /* Make sure that we can see identifiers, and compute access\n-\t correctly.  We can just use the context of DECL for the\n-\t partial substitution here.  It depends only on outer template\n-\t parameters, regardless of whether the innermost level is\n-\t specialized or not.  */\n-      push_access_scope (decl);\n+      /* Disable access control as this function is used only during\n+\t name-mangling.  */\n+      save_access_control = flag_access_control;\n+      flag_access_control = 0;\n \n       ++processing_template_decl;\n       /* Now, do the (partial) substitution to figure out the\n@@ -11726,7 +11724,7 @@ get_mostly_instantiated_function_type (tree decl)\n       TREE_VEC_LENGTH (partial_args)--;\n       tparms = tsubst_template_parms (tparms, partial_args, tf_error);\n \n-      pop_access_scope (decl);\n+      flag_access_control = save_access_control;\n     }\n \n   return fn_type;"}]}