{"sha": "4c7c437cb1c851c54b991cb0d6da3c7c53900e3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM3YzQzN2NiMWM4NTFjNTRiOTkxY2IwZDZkYTNjN2M1MzkwMGUzYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-04-24T07:48:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-04-24T07:48:47Z"}, "message": "re PR tree-optimization/79725 (Sinking opportunity missed if blocked by dead stmt)\n\n2017-04-24  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/79725\n\t* tree-ssa-sink.c (statement_sink_location): Return whether\n\tfailure reason was zero uses.  Move that check later.\n\t(sink_code_in_bb): Deal with zero uses by removing the stmt\n\tif possible.\n\n\t* gcc.dg/tree-ssa/ssa-sink-15.c: New testcase.\n\nFrom-SVN: r247091", "tree": {"sha": "7d7d028c48ecd3806a7a45193681e3027ad08786", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d7d028c48ecd3806a7a45193681e3027ad08786"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c7c437cb1c851c54b991cb0d6da3c7c53900e3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c7c437cb1c851c54b991cb0d6da3c7c53900e3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c7c437cb1c851c54b991cb0d6da3c7c53900e3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c7c437cb1c851c54b991cb0d6da3c7c53900e3c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d21a8e3bc6325a94da178050181a4bcb7e017dfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d21a8e3bc6325a94da178050181a4bcb7e017dfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d21a8e3bc6325a94da178050181a4bcb7e017dfa"}], "stats": {"total": 58, "additions": 50, "deletions": 8}, "files": [{"sha": "1facf361a774e2befc50b18138a7fc057ca24e05", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c7c437cb1c851c54b991cb0d6da3c7c53900e3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c7c437cb1c851c54b991cb0d6da3c7c53900e3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c7c437cb1c851c54b991cb0d6da3c7c53900e3c", "patch": "@@ -1,3 +1,11 @@\n+2017-04-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/79725\n+\t* tree-ssa-sink.c (statement_sink_location): Return whether\n+\tfailure reason was zero uses.  Move that check later.\n+\t(sink_code_in_bb): Deal with zero uses by removing the stmt\n+\tif possible.\n+\n 2017-04-24  Richard Biener  <rguenther@suse.de>\n \n \tPR c++/2972"}, {"sha": "08ad07d3cd76d08cd27b58c4e016a3e8036ce481", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c7c437cb1c851c54b991cb0d6da3c7c53900e3c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c7c437cb1c851c54b991cb0d6da3c7c53900e3c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4c7c437cb1c851c54b991cb0d6da3c7c53900e3c", "patch": "@@ -1,3 +1,8 @@\n+2017-04-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/79725\n+\t* gcc.dg/tree-ssa/ssa-sink-15.c: New testcase.\n+\n 2017-04-24  Richard Biener  <rguenther@suse.de>\n \n \tPR c++/2972"}, {"sha": "66ddc4e664237356441efa7cac1844981a1a4e22", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-sink-15.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c7c437cb1c851c54b991cb0d6da3c7c53900e3c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c7c437cb1c851c54b991cb0d6da3c7c53900e3c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-15.c?ref=4c7c437cb1c851c54b991cb0d6da3c7c53900e3c", "patch": "@@ -0,0 +1,14 @@\n+/* PR79725 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+_Complex double f(_Complex double x[])\n+{\n+  _Complex float p = 1.0;\n+  for (int i = 0; i < 1000000; i++)\n+    p = x[i];\n+  return p;\n+}\n+\n+/* Verify we end up with a single BB and no loop.  */\n+/* { dg-final { scan-tree-dump-times \"goto\" 0 \"optimized\" } } */"}, {"sha": "bb8d2ca97327dae726badfcb84fba000751b85a1", "filename": "gcc/tree-ssa-sink.c", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c7c437cb1c851c54b991cb0d6da3c7c53900e3c/gcc%2Ftree-ssa-sink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c7c437cb1c851c54b991cb0d6da3c7c53900e3c/gcc%2Ftree-ssa-sink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sink.c?ref=4c7c437cb1c851c54b991cb0d6da3c7c53900e3c", "patch": "@@ -244,7 +244,7 @@ select_best_block (basic_block early_bb,\n \n static bool\n statement_sink_location (gimple *stmt, basic_block frombb,\n-\t\t\t gimple_stmt_iterator *togsi)\n+\t\t\t gimple_stmt_iterator *togsi, bool *zero_uses_p)\n {\n   gimple *use;\n   use_operand_p one_use = NULL_USE_OPERAND_P;\n@@ -254,6 +254,8 @@ statement_sink_location (gimple *stmt, basic_block frombb,\n   ssa_op_iter iter;\n   imm_use_iterator imm_iter;\n \n+  *zero_uses_p = false;\n+\n   /* We only can sink assignments.  */\n   if (!is_gimple_assign (stmt))\n     return false;\n@@ -263,10 +265,6 @@ statement_sink_location (gimple *stmt, basic_block frombb,\n   if (def_p == NULL_DEF_OPERAND_P)\n     return false;\n \n-  /* Return if there are no immediate uses of this stmt.  */\n-  if (has_zero_uses (DEF_FROM_PTR (def_p)))\n-    return false;\n-\n   /* There are a few classes of things we can't or don't move, some because we\n      don't have code to handle it, some because it's not profitable and some\n      because it's not legal.\n@@ -292,11 +290,17 @@ statement_sink_location (gimple *stmt, basic_block frombb,\n   */\n   if (stmt_ends_bb_p (stmt)\n       || gimple_has_side_effects (stmt)\n-      || gimple_has_volatile_ops (stmt)\n       || (cfun->has_local_explicit_reg_vars\n \t  && TYPE_MODE (TREE_TYPE (gimple_assign_lhs (stmt))) == BLKmode))\n     return false;\n \n+  /* Return if there are no immediate uses of this stmt.  */\n+  if (has_zero_uses (DEF_FROM_PTR (def_p)))\n+    {\n+      *zero_uses_p = true;\n+      return false;\n+    }\n+\n   if (SSA_NAME_OCCURS_IN_ABNORMAL_PHI (DEF_FROM_PTR (def_p)))\n     return false;\n \n@@ -483,12 +487,23 @@ sink_code_in_bb (basic_block bb)\n     {\n       gimple *stmt = gsi_stmt (gsi);\n       gimple_stmt_iterator togsi;\n+      bool zero_uses_p;\n \n-      if (!statement_sink_location (stmt, bb, &togsi))\n+      if (!statement_sink_location (stmt, bb, &togsi, &zero_uses_p))\n \t{\n+\t  gimple_stmt_iterator saved = gsi;\n \t  if (!gsi_end_p (gsi))\n \t    gsi_prev (&gsi);\n-\t  last = false;\n+\t  /* If we face a dead stmt remove it as it possibly blocks\n+\t     sinking of uses.  */\n+\t  if (zero_uses_p\n+\t      && ! gimple_vdef (stmt))\n+\t    {\n+\t      gsi_remove (&saved, true);\n+\t      release_defs (stmt);\n+\t    }\n+\t  else\n+\t    last = false;\n \t  continue;\n \t}\n       if (dump_file)"}]}