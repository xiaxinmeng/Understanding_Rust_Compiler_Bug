{"sha": "e9dce1612655614dbf106a176813998b5c778185", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTlkY2UxNjEyNjU1NjE0ZGJmMTA2YTE3NjgxMzk5OGI1Yzc3ODE4NQ==", "commit": {"author": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1993-04-12T15:41:52Z"}, "committer": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1993-04-12T15:41:52Z"}, "message": "(-read:, -write:): added\nStripped anything added by\nkane@cc.purdue.edu which is not considered \"minor changes\"\n\nFrom-SVN: r4090", "tree": {"sha": "4b0bcaacf27a66f4fefd4adac76b767f5d56a350", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b0bcaacf27a66f4fefd4adac76b767f5d56a350"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9dce1612655614dbf106a176813998b5c778185", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9dce1612655614dbf106a176813998b5c778185", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9dce1612655614dbf106a176813998b5c778185", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9dce1612655614dbf106a176813998b5c778185/comments", "author": null, "committer": null, "parents": [{"sha": "5375a2043de24e209f50dc6b8c931478361e497f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5375a2043de24e209f50dc6b8c931478361e497f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5375a2043de24e209f50dc6b8c931478361e497f"}], "stats": {"total": 111, "additions": 2, "deletions": 109}, "files": [{"sha": "84c66132f4a95934f311171a1277b76578b14060", "filename": "gcc/objc/Object.m", "status": "modified", "additions": 2, "deletions": 109, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9dce1612655614dbf106a176813998b5c778185/gcc%2Fobjc%2FObject.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9dce1612655614dbf106a176813998b5c778185/gcc%2Fobjc%2FObject.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FObject.m?ref=e9dce1612655614dbf106a176813998b5c778185", "patch": "@@ -38,148 +38,101 @@\n \n @implementation Object\n \n-// Initialize a class\n-// often overridden by subclasses\n + initialize\n {\n   return self;\n }\n \n-// Initialize an instance\n-// this method does not apply to class objects\n-// often overridden by subclasses (should call superclass version)\n - init\n {\n   return self;\n }\n \n-// Create and initialize an instance of a class\n-// not usually overridden by subclasses (should call superclass version)\n + new\n {\n   return [[self alloc] init];\n }\n \n-// Creates an instance of a class\n-// should NOT be overridden by subclasses\n + alloc\n {\n   return class_create_instance(self);\n }\n \n-// Free an instance\n-// this method does not apply to class objects\n-// often overridden by subclasses (should call superclass version)\n - free\n {\n   return object_dispose(self);\n }\n \n-// Create a copy of the receiving instance\n-// this method does not apply to class objects\n-// not usually overridden by subclasses\n - copy\n {\n   return [[self shallowCopy] deepen];\n }\n \n-// Creates a copy of only the receiving instance\n-// this method does not apply to class objects\n-// should NOT be overridden by subclasses\n - shallowCopy\n {\n   return object_copy(self);\n }\n \n-// Deepens a shallow copy of an instance\n-// this method does not apply to class objects\n-// often overridden by subclasses (should call superclass version)\n - deepen\n {\n   return self;\n }\n \n-// Creates a recursive copy of the receiving instance\n-// this method does not apply to class objects\n-// may be overridden by subclasses\n-// Not correct, but included for compatibility with Stepstone\n - deepCopy\n {\n   return [self copy];\n }\n \n-// Return the class object or the class of an instance\n-// not usually overridden by subclasses\n - (Class_t)class\n {\n   return object_get_class(self);\n }\n \n-// Return the superclass of a class or instance\n-// not usually overridden by subclasses\n - (Class_t)superClass\n {\n   return object_get_super_class(self);\n }\n \n-// Return the metaclass of a class or instance\n-// not usually overridden by subclasses\n - (MetaClass_t)metaClass\n {\n   return object_get_meta_class(self);\n }\n \n-// Return the character string name of a class or an instance's class\n-// not usually overridden by subclasses\n - (const char *)name\n {\n   return object_get_class_name(self);\n }\n \n-// Return the receiving class or instance object\n-// not usually overridden by subclasses\n - self\n {\n   return self;\n }\n \n-// Return a hash value for a class or instance object\n-// not usually overridden by subclasses\n - (unsigned int)hash\n {\n   return (unsigned int)self;\n }\n \n-// Indicates if anObject is the receiving class or instance object\n-// not usually overridden by subclasses\n - (BOOL)isEqual:anObject\n {\n   return self==anObject;\n }\n \n-// Indicates if the receiver is a metaclass object\n-// should NOT be overridden by subclasses\n - (BOOL)isMetaClass\n {\n   return NO;\n }\n \n-// Indicates if the receiver is a class object\n-// should NOT be overridden by subclasses\n - (BOOL)isClass\n {\n   return object_is_class(self);\n }\n \n-// Indicates if the receiver is an instance object\n-// should NOT be overridden by subclasses\n - (BOOL)isInstance\n {\n   return object_is_instance(self);\n }\n \n-// Indicates if the receiver is a type of aClassObject\n-// not usually overridden by subclasses\n - (BOOL)isKindOf:(Class_t)aClassObject\n {\n   Class_t class;\n@@ -190,15 +143,11 @@ - (BOOL)isKindOf:(Class_t)aClassObject\n   return NO;\n }\n \n-// Indicates if the receiver is a member of the aClassObject class\n-// not usually overridden by subclasses\n - (BOOL)isMemberOf:(Class_t)aClassObject\n {\n   return self->isa==aClassObject;\n }\n \n-// Indicates if the receiver is a type of the class named aClassName\n-// not usually overridden by subclasses\n - (BOOL)isKindOfClassNamed:(const char *)aClassName\n {\n   Class_t class;\n@@ -210,32 +159,24 @@ - (BOOL)isKindOfClassNamed:(const char *)aClassName\n   return NO;\n }\n \n-// Indicates if the receiver is a member of the class named aClassName\n-// not usually overridden by subclasses\n - (BOOL)isMemberOfClassNamed:(const char *)aClassName\n {\n   return ((aClassName!=NULL)\n           &&!strcmp(class_get_class_name(self->isa), aClassName));\n }\n \n-// Indicates if instances of a class respond to the message aSel\n-// not usually overridden by subclasses\n + (BOOL)instancesRespondTo:(SEL)aSel\n {\n   return class_get_instance_method(self, aSel)!=METHOD_NULL;\n }\n \n-// Indicates if the receiving class or instance responds to the message aSel\n-// not usually overridden by subclasses\n - (BOOL)respondsTo:(SEL)aSel\n {\n   return ((object_is_instance(self)\n            ?class_get_instance_method(self->isa, aSel)\n            :class_get_class_method(self->isa, aSel))!=METHOD_NULL);\n }\n \n-// Returns the address of a class's instance method\n-// not usually overridden by subclasses\n + (IMP)instanceMethodFor:(SEL)aSel\n {\n   return method_get_imp(class_get_instance_method(self, aSel));\n@@ -261,26 +202,19 @@ - (BOOL) conformsTo: (Protocol*)aProtocol\n   return NO;\n }\n \n-\n-// Returns the address of a class's class or an instance's instance method\n-// not usually overridden by subclasses\n - (IMP)methodFor:(SEL)aSel\n {\n   return (method_get_imp(object_is_instance(self)\n                          ?class_get_instance_method(self->isa, aSel)\n                          :class_get_class_method(self->isa, aSel)));\n }\n \n-// Returns a method description for a class's instance method aSel\n-// not usually overridden by subclasses\n + (struct objc_method_description *)descriptionForInstanceMethod:(SEL)aSel\n {\n   return ((struct objc_method_description *)\n            class_get_instance_method(self, aSel));\n }\n \n-// Returns a description for a class's class or an instance's instance method\n-// not usually overridden by subclasses\n - (struct objc_method_description *)descriptionForMethod:(SEL)aSel\n {\n   return ((struct objc_method_description *)\n@@ -289,8 +223,6 @@ - (struct objc_method_description *)descriptionForMethod:(SEL)aSel\n             :class_get_class_method(self->isa, aSel)));\n }\n \n-// Sends the message aSel, which takes no parameters, to the receiver\n-// not usually overridden by subclasses\n - perform:(SEL)aSel\n {\n   IMP msg = objc_msg_lookup(self, aSel);\n@@ -299,8 +231,6 @@ - (struct objc_method_description *)descriptionForMethod:(SEL)aSel\n   return (*msg)(self, aSel);\n }\n \n-// Sends the message aSel, which takes one id parameter, to the receiver\n-// not usually overridden by subclasses\n - perform:(SEL)aSel with:anObject\n {\n   IMP msg = objc_msg_lookup(self, aSel);\n@@ -309,8 +239,6 @@ - (struct objc_method_description *)descriptionForMethod:(SEL)aSel\n   return (*msg)(self, aSel, anObject);\n }\n \n-// Sends the message aSel, which takes two id parameters, to the receiver\n-// not usually overridden by subclasses\n - perform:(SEL)aSel with:anObject1 with:anObject2\n {\n   IMP msg = objc_msg_lookup(self, aSel);\n@@ -319,30 +247,21 @@ - (struct objc_method_description *)descriptionForMethod:(SEL)aSel\n   return (*msg)(self, aSel, anObject1, anObject2);\n }\n \n-// Forwards a message to which a class or instance object does not respond\n-// may be overridden by subclasses\n - forward:(SEL)aSel :(arglist_t)argFrame\n {\n   return [self doesNotRecognize: aSel];\n }\n \n-// Sends a message aSel, of arbitrary arguments, to the receiver\n-// should NOT be overridden by subclasses\n - performv:(SEL)aSel :(arglist_t)argFrame\n {\n   return objc_msg_sendv(self, aSel, method_get_argsize(0), argFrame);\n }\n \n-// Instructs the runtime system that the receiver is to pose for aClassObject\n-// not usually overridden by subclasses\n + poseAs:(Class_t)aClassObject\n {\n   return class_pose_as(self, aClassObject);\n }\n \n-// Changes the receiver's class to be aClassObject\n-// this method does not apply to class objects\n-// not usually overridden by subclasses\n - (Class_t)transmuteClassTo:(Class_t)aClassObject\n {\n   if (object_is_instance(self))\n@@ -357,31 +276,22 @@ - (Class_t)transmuteClassTo:(Class_t)aClassObject\n   return nil;\n }\n \n-// Indicates that a subclass did not override a class or instance message\n-//   it was supposed to have overridden\n-// not usually overridden by subclasses\n - subclassResponsibility:(SEL)aSel\n {\n   return [self error:\"subclass should override %s\", sel_get_name(aSel)];\n }\n \n-// Indicates that a class or instance method has not been implemented\n-// may be overridden by subclasses\n - notImplemented:(SEL)aSel\n {\n   return [self error:\"method %s not implemented\", sel_get_name(aSel)];\n }\n \n-// Reports that a class or instance does not recognize the message aSel\n-// not usually overridden by subclasses\n - doesNotRecognize:(SEL)aSel\n {\n   return [self error:\"%s does not recognize %s\",\n                      object_get_class_name(self), sel_get_name(aSel)];\n }\n \n-// Reports an error\n-// not usually overridden by subclasses\n - error:(const char *)aString, ...\n {\n #define FMT \"error: %s (%s)\\n%s\\n\"\n@@ -399,15 +309,11 @@ - (Class_t)transmuteClassTo:(Class_t)aClassObject\n #undef FMT\n }\n \n-// Returns the class's version number\n-// not usually overridden by subclasses\n + (int)version\n {\n   return class_get_version(self);\n }\n \n-// Sets the class's version number\n-// not usually overridden by subclasses\n + setVersion:(int)aVersion\n {\n   class_set_version(self, aVersion);\n@@ -432,23 +338,10 @@ + (int)version\n   return self;\n }\n \n-// These are used to read or write class information, such as static\n-// variables used in that class.  The version number of the class being \n-// read can be obtained from \n-//     objc_typed_stream_class_version(stream, class_name)  \n-\n-+ write: (TypedStream*)aStream\n+- awake: (TypedStream*)aStream\n {\n-  // [super write: aStream];\n+  // [super awake: aStream];\n   return self;\n }\n \n-+ read: (TypedStream*)aStream\n-{\n-  // [super read: aStream];\n-  return self;\n-}\n-\n-\n-\n @end"}]}