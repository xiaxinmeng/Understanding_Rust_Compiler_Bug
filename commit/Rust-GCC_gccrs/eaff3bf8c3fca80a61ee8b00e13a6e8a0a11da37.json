{"sha": "eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFmZjNiZjhjM2ZjYTgwYTYxZWU4YjAwZTEzYTZlOGEwYTExZGEzNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-09-17T09:30:47Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-09-17T09:30:47Z"}, "message": "trans.c (tree_transform): Use real_ldexp not REAL_VALUE_LDEXP.\n\n        * trans.c (tree_transform): Use real_ldexp not REAL_VALUE_LDEXP.\n        * config/dsp16xx/dsp16xx.md (fixuns_trunchfhi2): Use real_2expN.\n        * config/mips/mips.md (fixuns_truncdfsi2): Likewise.\n        (fixuns_truncdfdi2, fixuns_truncsfsi2, fixuns_truncsfdi2): Likewise.\n        * config/m68k/m68k.c (floating_exact_log2): Use real_exponent\n        and real_2expN instead of a loop.\n        * doc/tm.texi (REAL_VALUE_LDEXP): Remove.\n        (REAL_VALUE_RNDZINT, REAL_VALUE_UNSIGNED_RNDZINT): Remove.\n\nFrom-SVN: r57245", "tree": {"sha": "ac34a77939ea0c0f8fa6f3006381bc025c15b4f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac34a77939ea0c0f8fa6f3006381bc025c15b4f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37/comments", "author": null, "committer": null, "parents": [{"sha": "34bdc2473cd4064f5af53c29e557bd38c9fa17e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34bdc2473cd4064f5af53c29e557bd38c9fa17e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34bdc2473cd4064f5af53c29e557bd38c9fa17e4"}], "stats": {"total": 67, "additions": 30, "deletions": 37}, "files": [{"sha": "2ba9289659ddd7fdfc16197e72d12a4f56b9999a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37", "patch": "@@ -1,3 +1,14 @@\n+2002-09-17  Richard Henderson  <rth@redhat.com>\n+\n+\t* trans.c (tree_transform): Use real_ldexp not REAL_VALUE_LDEXP.\n+\t* config/dsp16xx/dsp16xx.md (fixuns_trunchfhi2): Use real_2expN.\n+\t* config/mips/mips.md (fixuns_truncdfsi2): Likewise.\n+\t(fixuns_truncdfdi2, fixuns_truncsfsi2, fixuns_truncsfdi2): Likewise.\n+\t* config/m68k/m68k.c (floating_exact_log2): Use real_exponent\n+\tand real_2expN instead of a loop.\n+\t* doc/tm.texi (REAL_VALUE_LDEXP): Remove.\n+\t(REAL_VALUE_RNDZINT, REAL_VALUE_UNSIGNED_RNDZINT): Remove.\n+\n 2002-08-25  Andre Leis <a.leis@gmx.net>\n  \t    David Billinghurst (David.Billinghurst@riotinto.com>\n "}, {"sha": "92b7ceb45f48da064446515689537ea1d917b6f5", "filename": "gcc/ada/trans.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37/gcc%2Fada%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37/gcc%2Fada%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftrans.c?ref=eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37", "patch": "@@ -576,11 +576,13 @@ tree_transform (gnat_node)\n \t\tgigi_abort (336);\n \n \t      else\n-\t\tgnu_result\n-\t\t  = build_real (gnu_result_type,\n-\t\t\t\tREAL_VALUE_LDEXP\n-\t\t\t\t(TREE_REAL_CST (gnu_result),\n-\t\t\t\t - UI_To_Int (Denominator (ur_realval))));\n+\t\t{\n+\t\t  REAL_VALUE_TYPE tmp;\n+\n+\t\t  real_ldexp (&tmp, &TREE_REAL_CST (gnu_result),\n+\t\t\t      - UI_To_Int (Denominator (ur_realval)));\n+\t\t  gnu_result = build_real (gnu_result_type, tmp);\n+\t\t}\n \t    }\n \n \t  /* Now see if we need to negate the result.  Do it this way to"}, {"sha": "89c09a193492c621c75509babd5a36287a41ff03", "filename": "gcc/config/dsp16xx/dsp16xx.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.md?ref=eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37", "patch": "@@ -1937,7 +1937,7 @@\n   rtx label2 = gen_label_rtx ();\n   REAL_VALUE_TYPE offset;\n \n-  offset = REAL_VALUE_LDEXP (dconst1, 31);\n+  real_2expN (&offset, 31);\n \n   if (reg1)\t\t\t/* turn off complaints about unreached code */\n     {"}, {"sha": "acc61bd8f37fa22196c52b67bafad2860c88f227", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37", "patch": "@@ -2719,22 +2719,18 @@ floating_exact_log2 (x)\n      rtx x;\n {\n   REAL_VALUE_TYPE r, r1;\n-  int i;\n+  int exp;\n \n   REAL_VALUE_FROM_CONST_DOUBLE (r, x);\n \n-  if (REAL_VALUES_LESS (r, dconst0))\n+  if (REAL_VALUES_LESS (r, dconst1))\n     return 0;\n \n-  r1 = dconst1;\n-  i = 0;\n-  while (REAL_VALUES_LESS (r1, r))\n-    {\n-      r1 = REAL_VALUE_LDEXP (dconst1, i);\n-      if (REAL_VALUES_EQUAL (r1, r))\n-        return i;\n-      i = i + 1;\n-    }\n+  exp = real_exponent (&r);\n+  real_2expN (&r1, exp);\n+  if (REAL_VALUES_EQUAL (r1, r))\n+    return exp;\n+\n   return 0;\n }\n \f"}, {"sha": "f68d454ee1856dca4d474164f00e34ef01f92614", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37", "patch": "@@ -4667,7 +4667,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   rtx label2 = gen_label_rtx ();\n   REAL_VALUE_TYPE offset;\n \n-  offset = REAL_VALUE_LDEXP (dconst1, 31);\n+  real_2expN (&offset, 31);\n \n   if (reg1)\t\t\t/* turn off complaints about unreached code */\n     {\n@@ -4713,7 +4713,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   rtx label2 = gen_label_rtx ();\n   REAL_VALUE_TYPE offset;\n \n-  offset = REAL_VALUE_LDEXP (dconst1, 63);\n+  real_2expN (&offset, 63);\n \n   if (reg1)\t\t\t/* turn off complaints about unreached code */\n     {\n@@ -4759,7 +4759,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   rtx label2 = gen_label_rtx ();\n   REAL_VALUE_TYPE offset;\n \n-  offset = REAL_VALUE_LDEXP (dconst1, 31);\n+  real_2expN (&offset, 31);\n \n   if (reg1)\t\t\t/* turn off complaints about unreached code */\n     {\n@@ -4805,7 +4805,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   rtx label2 = gen_label_rtx ();\n   REAL_VALUE_TYPE offset;\n \n-  offset = REAL_VALUE_LDEXP (dconst1, 63);\n+  real_2expN (&offset, 63);\n \n   if (reg1)\t\t\t/* turn off complaints about unreached code */\n     {"}, {"sha": "b4a808b10de2b7c28ac4f3f60142a4095d62184c", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=eaff3bf8c3fca80a61ee8b00e13a6e8a0a11da37", "patch": "@@ -8134,11 +8134,6 @@ floating point format supports negative zeroes and/or NaNs,\n Tests whether @var{x} is less than @var{y}.\n @end deftypefn\n \n-@findex ldexp\n-@deftypefn Macro REAL_VALUE_TYPE REAL_VALUE_LDEXP (REAL_VALUE_TYPE @var{x}, int @var{scale})\n-Multiplies @var{x} by 2 raised to the power @var{scale}.\n-@end deftypefn\n-\n @deftypefn Macro HOST_WIDE_INT REAL_VALUE_FIX (REAL_VALUE_TYPE @var{x})\n Truncates @var{x} to a signed integer, rounding toward zero.\n @end deftypefn\n@@ -8148,17 +8143,6 @@ Truncates @var{x} to an unsigned integer, rounding toward zero.  If\n @var{x} is negative, returns zero.\n @end deftypefn\n \n-@deftypefn Macro REAL_VALUE_TYPE REAL_VALUE_RNDZINT (REAL_VALUE_TYPE @var{x})\n-Rounds the target-machine floating point value @var{x} towards zero to an\n-integer value, but leaves it represented as a floating point number.\n-@end deftypefn\n-\n-@deftypefn Macro REAL_VALUE_TYPE REAL_VALUE_UNSIGNED_RNDZINT (REAL_VALUE_TYPE @var{x})\n-Rounds the target-machine floating point value @var{x} towards zero to an\n-unsigned integer value, but leaves it represented as a floating point\n-number.  If @var{x} is negative, returns (positive) zero.\n-@end deftypefn\n-\n @deftypefn Macro REAL_VALUE_TYPE REAL_VALUE_ATOF (const char *@var{string}, enum machine_mode @var{mode})\n Converts @var{string} into a floating point number in the target machine's\n representation for mode @var{mode}.  This routine can handle both"}]}