{"sha": "38afd588c5181ee770848ebefdfdb288d28f7513", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhhZmQ1ODhjNTE4MWVlNzcwODQ4ZWJlZmRmZGIyODhkMjhmNzUxMw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchell@usa.net", "date": "1998-03-25T16:14:49Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-03-25T16:14:49Z"}, "message": "cp-tree.h (enforce_access): Declare.\n\nWed Mar 25 16:10:50 1998  Mark Mitchell  <mmitchell@usa.net>\n\t* cp-tree.h (enforce_access): Declare.\n\t* call.c (enforce_access): Make it extern, not static.\n\t* class.c (alter_access): Use enforce_access; modify code for ISO\n\tcompliance, rather than ARM rules.\n\nFrom-SVN: r18832", "tree": {"sha": "e58cf50abaf2a215ebb006e333754dc7b6479657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e58cf50abaf2a215ebb006e333754dc7b6479657"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38afd588c5181ee770848ebefdfdb288d28f7513", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38afd588c5181ee770848ebefdfdb288d28f7513", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38afd588c5181ee770848ebefdfdb288d28f7513", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38afd588c5181ee770848ebefdfdb288d28f7513/comments", "author": null, "committer": null, "parents": [{"sha": "4d4c4d45832c47a303b322d11b25aea371c9f341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d4c4d45832c47a303b322d11b25aea371c9f341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d4c4d45832c47a303b322d11b25aea371c9f341"}], "stats": {"total": 90, "additions": 57, "deletions": 33}, "files": [{"sha": "ba6309b6a40b5a5c8d9af7f045b954711e12991f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38afd588c5181ee770848ebefdfdb288d28f7513/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38afd588c5181ee770848ebefdfdb288d28f7513/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=38afd588c5181ee770848ebefdfdb288d28f7513", "patch": "@@ -1,3 +1,10 @@\n+Wed Mar 25 16:10:50 1998  Mark Mitchell  <mmitchell@usa.net>\n+\n+\t* cp-tree.h (enforce_access): Declare.\n+\t* call.c (enforce_access): Make it extern, not static.\n+\t* class.c (alter_access): Use enforce_access; modify code for ISO\n+\tcompliance, rather than ARM rules.\n+\n Wed Mar 25 12:10:45 1998  Kriang Lerdsuwanakij  <lerdsuwa@scf.usc.edu>\n \n \t* cp-tree.h: Fix typo."}, {"sha": "8db795bf8c393750e044f630f231adeca370abcf", "filename": "gcc/cp/call.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38afd588c5181ee770848ebefdfdb288d28f7513/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38afd588c5181ee770848ebefdfdb288d28f7513/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=38afd588c5181ee770848ebefdfdb288d28f7513", "patch": "@@ -51,7 +51,6 @@ static int compare_qual PROTO((tree, tree));\n static int compare_ics PROTO((tree, tree));\n static tree build_over_call PROTO((tree, tree, tree, int));\n static tree convert_default_arg PROTO((tree, tree));\n-static void enforce_access PROTO((tree, tree));\n static tree convert_like PROTO((tree, tree));\n static void op_error PROTO((enum tree_code, enum tree_code, tree, tree,\n \t\t\t    tree, char *));\n@@ -2949,26 +2948,26 @@ build_op_delete_call (code, addr, size, flags)\n   return error_mark_node;\n }\n \n-/* If the current scope isn't allowed to access FUNCTION along\n+/* If the current scope isn't allowed to access DECL along\n    BASETYPE_PATH, give an error.  */\n \n-static void\n-enforce_access (basetype_path, function)\n-     tree basetype_path, function;\n+void\n+enforce_access (basetype_path, decl)\n+     tree basetype_path, decl;\n {\n-  tree access = compute_access (basetype_path, function);\n+  tree access = compute_access (basetype_path, decl);\n \n   if (access == access_private_node)\n     {\n-      cp_error_at (\"`%+#D' is %s\", function, \n-\t\t   TREE_PRIVATE (function) ? \"private\"\n+      cp_error_at (\"`%+#D' is %s\", decl, \n+\t\t   TREE_PRIVATE (decl) ? \"private\"\n \t\t   : \"from private base class\");\n       error (\"within this context\");\n     }\n   else if (access == access_protected_node)\n     {\n-      cp_error_at (\"`%+#D' %s\", function,\n-\t\t   TREE_PROTECTED (function) ? \"is protected\"\n+      cp_error_at (\"`%+#D' %s\", decl,\n+\t\t   TREE_PROTECTED (decl) ? \"is protected\"\n \t\t   : \"has protected accessibility\");\n       error (\"within this context\");\n     }"}, {"sha": "337c090535e1edea1ae31772dc83a2d66f50f050", "filename": "gcc/cp/class.c", "status": "modified", "additions": 13, "deletions": 22, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38afd588c5181ee770848ebefdfdb288d28f7513/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38afd588c5181ee770848ebefdfdb288d28f7513/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=38afd588c5181ee770848ebefdfdb288d28f7513", "patch": "@@ -1310,34 +1310,25 @@ alter_access (t, fdecl, access)\n      tree access;\n {\n   tree elem = purpose_member (t, DECL_ACCESS (fdecl));\n-  if (elem && TREE_VALUE (elem) != access)\n+  if (elem)\n     {\n-      if (TREE_CODE (TREE_TYPE (fdecl)) == FUNCTION_DECL)\n+      if (TREE_VALUE (elem) != access)\n \t{\n-\t  cp_error_at (\"conflicting access specifications for method `%D', ignored\", TREE_TYPE (fdecl));\n+\t  if (TREE_CODE (TREE_TYPE (fdecl)) == FUNCTION_DECL)\n+\t    cp_error_at (\"conflicting access specifications for method `%D', ignored\", TREE_TYPE (fdecl));\n+\t  else\n+\t    error (\"conflicting access specifications for field `%s', ignored\",\n+\t\t   IDENTIFIER_POINTER (DECL_NAME (fdecl)));\n \t}\n       else\n-\terror (\"conflicting access specifications for field `%s', ignored\",\n-\t       IDENTIFIER_POINTER (DECL_NAME (fdecl)));\n-    }\n-  else if (TREE_PRIVATE (fdecl))\n-    {\n-      if (access != access_private_node)\n-\tcp_error_at (\"cannot make private `%D' non-private\", fdecl);\n-      goto alter;\n+\t/* They're changing the access to the same thing they changed\n+\t   it to before.  That's OK.  */\n+\t;\n     }\n-  else if (TREE_PROTECTED (fdecl))\n-    {\n-      if (access != access_protected_node)\n-\tcp_error_at (\"cannot make protected `%D' non-protected\", fdecl);\n-      goto alter;\n-    }\n-  /* ARM 11.3: an access declaration may not be used to restrict access\n-     to a member that is accessible in the base class.  */\n-  else if (access != access_public_node)\n-    cp_error_at (\"cannot reduce access of public member `%D'\", fdecl);\n-  else if (elem == NULL_TREE)\n+  else\n     {\n+      enforce_access (TYPE_BINFO (t), fdecl);\n+\n     alter:\n       DECL_ACCESS (fdecl) = tree_cons (t, access, DECL_ACCESS (fdecl));\n       return 1;"}, {"sha": "9d76c9c5552001ebe29d17b0cc0a5b459967af74", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38afd588c5181ee770848ebefdfdb288d28f7513/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38afd588c5181ee770848ebefdfdb288d28f7513/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=38afd588c5181ee770848ebefdfdb288d28f7513", "patch": "@@ -2085,6 +2085,7 @@ extern tree build_op_new_call\t\t\tPROTO((enum tree_code, tree, tree, int));\n extern tree build_op_delete_call\t\tPROTO((enum tree_code, tree, tree, int));\n extern int can_convert\t\t\t\tPROTO((tree, tree));\n extern int can_convert_arg\t\t\tPROTO((tree, tree, tree));\n+extern void enforce_access                      PROTO((tree, tree));\n \n /* in class.c */\n extern tree build_vbase_path\t\t\tPROTO((enum tree_code, tree, tree, tree, int));"}, {"sha": "d20a9d939294cb6fe952bb0fedd0f6a360d420ec", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/ns1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38afd588c5181ee770848ebefdfdb288d28f7513/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fns1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38afd588c5181ee770848ebefdfdb288d28f7513/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fns1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fns1.C?ref=38afd588c5181ee770848ebefdfdb288d28f7513", "patch": "@@ -2,7 +2,7 @@\n // GROUPS passed old-abort\n struct B \n {\n-      void f(char); // ERROR - Cannot reduce access\n+      void f(char); \n       void g(char);\n };\n   "}, {"sha": "9e5615fa2c1d9bd3ce98f89c389e882956f6a47d", "filename": "gcc/testsuite/g++.old-deja/g++.other/using1.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38afd588c5181ee770848ebefdfdb288d28f7513/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38afd588c5181ee770848ebefdfdb288d28f7513/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing1.C?ref=38afd588c5181ee770848ebefdfdb288d28f7513", "patch": "@@ -0,0 +1,26 @@\n+class D2;\n+\n+class B {\n+private:\n+  int a;\n+protected:\n+  int b;\n+\n+  friend class D2;\n+};\n+\n+class D : public B {\n+public:\n+  using B::a;\n+  using B::b;\n+};\n+\n+class D2 : public B {\n+public:\n+  using B::a;\n+  using B::b;\n+\n+private:\n+  using B::b; \n+}; // ERROR - conflicting access specifications\n+ "}]}