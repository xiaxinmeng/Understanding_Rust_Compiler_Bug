{"sha": "43cb72263fb3b7b97a74fb38d71364a1d5cf0448", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNjYjcyMjYzZmIzYjdiOTdhNzRmYjM4ZDcxMzY0YTFkNWNmMDQ0OA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-10-26T19:04:58Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-10-28T19:22:05Z"}, "message": "c++: GCC accepts junk before fold-expression [PR86773]\n\nHere we accept a bogus expression before a left fold:\n\nRecall that a fold expression looks like:\n\n fold-expression:\n    ( cast-expression fold-operator ... )\n    ( ... fold-operator cast-expression )\n    ( cast-expression fold-operator ... fold-operator cast-expression )\n\nbut here we have\n\n    ( cast-expression ... fold-operator cast-expression )\n\nThe best fix seems to just return error_mark_node when we know this code\nis invalid, and let the subsequent code report that a ) was expected.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/86773\n\t* parser.c (cp_parser_fold_expression): Return error_mark_node\n\tif a left fold is preceded by an expression.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/86773\n\t* g++.dg/cpp1z/fold12.C: New test.", "tree": {"sha": "04c0f4d0fe1c02187a38ecb7de2d68369377075c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04c0f4d0fe1c02187a38ecb7de2d68369377075c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43cb72263fb3b7b97a74fb38d71364a1d5cf0448", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43cb72263fb3b7b97a74fb38d71364a1d5cf0448", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43cb72263fb3b7b97a74fb38d71364a1d5cf0448", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43cb72263fb3b7b97a74fb38d71364a1d5cf0448/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfbadb8ce9f4a7278121ab92bf77bde0c1d3b641", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfbadb8ce9f4a7278121ab92bf77bde0c1d3b641", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfbadb8ce9f4a7278121ab92bf77bde0c1d3b641"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "80d903cca2ff3387ae0ecedc7b8a29dbc65d2ee0", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43cb72263fb3b7b97a74fb38d71364a1d5cf0448/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43cb72263fb3b7b97a74fb38d71364a1d5cf0448/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=43cb72263fb3b7b97a74fb38d71364a1d5cf0448", "patch": "@@ -5138,6 +5138,8 @@ cp_parser_fold_expression (cp_parser *parser, tree expr1)\n   // Left fold.\n   if (cp_lexer_next_token_is (parser->lexer, CPP_ELLIPSIS))\n     {\n+      if (expr1)\n+\treturn error_mark_node;\n       cp_lexer_consume_token (parser->lexer);\n       int op = cp_parser_fold_operator (parser);\n       if (op == ERROR_MARK)"}, {"sha": "90d74cc59476b1c8a670ad78249be46212a73683", "filename": "gcc/testsuite/g++.dg/cpp1z/fold12.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43cb72263fb3b7b97a74fb38d71364a1d5cf0448/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43cb72263fb3b7b97a74fb38d71364a1d5cf0448/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold12.C?ref=43cb72263fb3b7b97a74fb38d71364a1d5cf0448", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/86773\n+// { dg-do compile { target c++17 } }\n+\n+template <typename ... Param>\n+auto work(Param && ...param)\n+{\n+  return (\"asda\" ... / param); // { dg-error \"expected\" }\n+}\n+\n+int main()\n+{\n+  work(1.0, 2.0, 5, 4.0);\n+}"}]}