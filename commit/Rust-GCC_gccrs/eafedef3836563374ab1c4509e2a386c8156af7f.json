{"sha": "eafedef3836563374ab1c4509e2a386c8156af7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFmZWRlZjM4MzY1NjMzNzRhYjFjNDUwOWUyYTM4NmM4MTU2YWY3Zg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-09-10T09:42:20Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-09-10T09:42:20Z"}, "message": "re PR tree-optimization/45605 (Missed devirtualization)\n\n\n\tPR tree-optimization/45605\n\t* cp/class.c (build_vtbl_initializer): Avoid wrong type conversion in ADDR_EXPR\n\nFrom-SVN: r164148", "tree": {"sha": "cc03f40c9dd200f078a8f820d2b736f5fd7ae542", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc03f40c9dd200f078a8f820d2b736f5fd7ae542"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eafedef3836563374ab1c4509e2a386c8156af7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eafedef3836563374ab1c4509e2a386c8156af7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eafedef3836563374ab1c4509e2a386c8156af7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eafedef3836563374ab1c4509e2a386c8156af7f/comments", "author": null, "committer": null, "parents": [{"sha": "292beb8fdadb4b8846c87ddd51e91e0427a583fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/292beb8fdadb4b8846c87ddd51e91e0427a583fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/292beb8fdadb4b8846c87ddd51e91e0427a583fa"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "54d0ef625ed3ab831f43cccf1b05b7689c5d9905", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eafedef3836563374ab1c4509e2a386c8156af7f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eafedef3836563374ab1c4509e2a386c8156af7f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=eafedef3836563374ab1c4509e2a386c8156af7f", "patch": "@@ -1,3 +1,8 @@\n+2010-09-10  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR tree-optimization/45605\n+\t* cp/class.c (build_vtbl_initializer): Avoid wrong type conversion in ADDR_EXPR\n+\n 2010-09-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/45588"}, {"sha": "4823fa23a9cf0e77c6ab2f853d2b15f8a209c79e", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eafedef3836563374ab1c4509e2a386c8156af7f/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eafedef3836563374ab1c4509e2a386c8156af7f/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=eafedef3836563374ab1c4509e2a386c8156af7f", "patch": "@@ -7797,7 +7797,7 @@ build_vtbl_initializer (tree binfo,\n \t    {\n \t      fn = abort_fndecl;\n \t      if (abort_fndecl_addr == NULL)\n-\t\tabort_fndecl_addr = build1 (ADDR_EXPR, vfunc_ptr_type_node, fn);\n+\t\tabort_fndecl_addr = fold_convert (vfunc_ptr_type_node, build_fold_addr_expr (fn));\n \t      init = abort_fndecl_addr;\n \t    }\n \t  else\n@@ -7810,7 +7810,7 @@ build_vtbl_initializer (tree binfo,\n \t\t}\n \t      /* Take the address of the function, considering it to be of an\n \t\t appropriate generic type.  */\n-\t      init = build1 (ADDR_EXPR, vfunc_ptr_type_node, fn);\n+\t      init = fold_convert (vfunc_ptr_type_node, build_fold_addr_expr (fn));\n \t    }\n \t}\n "}, {"sha": "f9292f1cec4f3f7ca0bb16715da676baccb99347", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eafedef3836563374ab1c4509e2a386c8156af7f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eafedef3836563374ab1c4509e2a386c8156af7f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eafedef3836563374ab1c4509e2a386c8156af7f", "patch": "@@ -1,3 +1,7 @@\n+2010-09-10  Jan Hubicka  <jh@suse.cz>\n+\n+\t* g++.dg/inherit/covariant7.C: Fix pattern matching.\n+\n 2010-09-10  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/44972"}, {"sha": "4f0c7f7dd49a8eadb0e3fe9300b913b48b51ad09", "filename": "gcc/testsuite/g++.dg/inherit/covariant7.C", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eafedef3836563374ab1c4509e2a386c8156af7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fcovariant7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eafedef3836563374ab1c4509e2a386c8156af7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fcovariant7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fcovariant7.C?ref=eafedef3836563374ab1c4509e2a386c8156af7f", "patch": "@@ -36,16 +36,16 @@ struct c6 : c0, c3, c4\n \n // f2 appears four times in the c6 vtables:\n // once in c1-in-c3-in-c6 - covariant, virtual base, uses c1 vcall offset and c0 vbase offset\n-// { dg-final { scan-tree-dump \"24    c6::_ZTcv0_n16_v0_n12_NV2c62f2Ev\" \"class\" { target ilp32 } } }\n-// { dg-final { scan-tree-dump \"48    c6::_ZTcv0_n32_v0_n24_NV2c62f2Ev\" \"class\" { target lp64 } } }\n+// { dg-final { scan-tree-dump \"24    .*c6::_ZTcv0_n16_v0_n12_NV2c62f2Ev\" \"class\" { target ilp32 } } }\n+// { dg-final { scan-tree-dump \"48    .*c6::_ZTcv0_n32_v0_n24_NV2c62f2Ev\" \"class\" { target lp64 } } }\n // once in c3-in-c6 - non-covariant, non-virtual base, calls f2 directly\n-// { dg-final { scan-tree-dump \"28    c6::f2\" \"class\" { target ilp32 } } }\n-// { dg-final { scan-tree-dump \"56    c6::f2\" \"class\" { target lp64 } } }\n+// { dg-final { scan-tree-dump \"28    .*c6::f2\" \"class\" { target ilp32 } } }\n+// { dg-final { scan-tree-dump \"56    .*c6::f2\" \"class\" { target lp64 } } }\n // once in c1-in-c3-in-c4-in-c6 - lost primary\n-// { dg-final { scan-tree-dump \"80    0u\" \"class\" { target ilp32 } } }\n-// { dg-final { scan-tree-dump \"160   0u\" \"class\" { target lp64 } } }\n+// { dg-final { scan-tree-dump \"80    .*0u\" \"class\" { target ilp32 } } }\n+// { dg-final { scan-tree-dump \"160   .*0u\" \"class\" { target lp64 } } }\n // once in c3-in-c4-in-c6 - c3 vcall offset\n-// { dg-final { scan-tree-dump \"84    c6::_ZTv0_n16_NV2c62f2Ev\" \"class\" { target ilp32 } } }\n-// { dg-final { scan-tree-dump \"168   c6::_ZTv0_n32_NV2c62f2Ev\" \"class\" { target lp64 } } }\n+// { dg-final { scan-tree-dump \"84    .*c6::_ZTv0_n16_NV2c62f2Ev\" \"class\" { target ilp32 } } }\n+// { dg-final { scan-tree-dump \"168   .*c6::_ZTv0_n32_NV2c62f2Ev\" \"class\" { target lp64 } } }\n \n // { dg-final { cleanup-tree-dump \"class\" } }"}]}