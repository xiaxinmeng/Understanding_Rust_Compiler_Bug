{"sha": "f12d26af47d21dff9112b8c241080b6331534c80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjEyZDI2YWY0N2QyMWRmZjkxMTJiOGMyNDEwODBiNjMzMTUzNGM4MA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-16T20:59:21Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-16T20:59:21Z"}, "message": "Override trampoline macros.\n\nFrom-SVN: r11827", "tree": {"sha": "cae2c3bcbd3c6bb5a1fb42cb1cc56b9417650b03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cae2c3bcbd3c6bb5a1fb42cb1cc56b9417650b03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f12d26af47d21dff9112b8c241080b6331534c80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f12d26af47d21dff9112b8c241080b6331534c80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f12d26af47d21dff9112b8c241080b6331534c80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f12d26af47d21dff9112b8c241080b6331534c80/comments", "author": null, "committer": null, "parents": [{"sha": "319c8738730bc88582758f5c47c3365cc7282fa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/319c8738730bc88582758f5c47c3365cc7282fa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/319c8738730bc88582758f5c47c3365cc7282fa9"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "ce872d933a6c9c9dce431769bc1a7c150b4bf7e7", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12d26af47d21dff9112b8c241080b6331534c80/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12d26af47d21dff9112b8c241080b6331534c80/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=f12d26af47d21dff9112b8c241080b6331534c80", "patch": "@@ -319,3 +319,18 @@ do {\t\t\t\t\t\t\t\t\t\\\n   ASM_OUTPUT_INT (FILE, const0_rtx);\t\t\t\t\t\\\n   ASM_OUTPUT_INT (FILE, const0_rtx);\t\t\t\t\t\\\n }\n+\n+/* Redefine since we are using a different trampoline */\n+#undef TRAMPOLINE_SIZE\n+#define TRAMPOLINE_SIZE 18\n+\n+/* Emit RTL insns to initialize the variable parts of a trampoline.\n+   FNADDR is an RTX for the address of the function's pure code.\n+   CXT is an RTX for the static chain value for the function.  */\n+\n+#undef INITIALIZE_TRAMPOLINE\n+#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)                       \\\n+{                                                                       \\\n+  emit_move_insn (gen_rtx (MEM, SImode, plus_constant (TRAMP, 10)), CXT); \\\n+  emit_move_insn (gen_rtx (MEM, SImode, plus_constant (TRAMP, 14)), FNADDR); \\\n+}"}, {"sha": "88bad79316a570dc09edef96e877850fa52cda9e", "filename": "gcc/config/m68k/m68kv4.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12d26af47d21dff9112b8c241080b6331534c80/gcc%2Fconfig%2Fm68k%2Fm68kv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12d26af47d21dff9112b8c241080b6331534c80/gcc%2Fconfig%2Fm68k%2Fm68kv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kv4.h?ref=f12d26af47d21dff9112b8c241080b6331534c80", "patch": "@@ -329,3 +329,18 @@ int switch_table_difference_label_flag;\n   ASM_OUTPUT_INT (FILE, const0_rtx);\t\t\t\t\t\\\n   ASM_OUTPUT_INT (FILE, const0_rtx);\t\t\t\t\t\\\n }\n+\n+/* Redefine since we are using a different trampoline */\n+#undef TRAMPOLINE_SIZE\n+#define TRAMPOLINE_SIZE 18\n+\n+/* Emit RTL insns to initialize the variable parts of a trampoline.\n+   FNADDR is an RTX for the address of the function's pure code.\n+   CXT is an RTX for the static chain value for the function.  */\n+\n+#undef INITIALIZE_TRAMPOLINE\n+#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)                       \\\n+{                                                                       \\\n+  emit_move_insn (gen_rtx (MEM, SImode, plus_constant (TRAMP, 10)), CXT); \\\n+  emit_move_insn (gen_rtx (MEM, SImode, plus_constant (TRAMP, 14)), FNADDR); \\\n+}"}]}