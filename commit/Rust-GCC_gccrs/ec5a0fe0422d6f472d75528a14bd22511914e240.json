{"sha": "ec5a0fe0422d6f472d75528a14bd22511914e240", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM1YTBmZTA0MjJkNmY0NzJkNzU1MjhhMTRiZDIyNTExOTE0ZTI0MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-11-20T09:03:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-11-20T09:03:45Z"}, "message": "re PR c++/67354 (internal compiler error: in add_to_same_comdat_group, at symtab.c:421)\n\n\tPR c++/67354\n\t* cp-tree.h (defer_mangling_aliases): Declare.\n\t(generate_mangling_aliases): New prototype.\n\t* decl2.c (defer_mangling_aliases): New variable.\n\t(note_mangling_alias): Use !defer_mangling_aliases\n\tinstead of at_eof.\n\t(generate_mangling_aliases): No longer static. Clear\n\tdefer_mangling_aliases.\n\t* optimize.c (maybe_thunk_body): Defer emitting mangling aliases\n\tif !defer_mangling_aliases until the fns are put into the same\n\tcomdat group.\n\n\t* g++.dg/abi/mangle67.C: New test.\n\nFrom-SVN: r230646", "tree": {"sha": "eae3caec19e186893cd194cc99911961fda5e602", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eae3caec19e186893cd194cc99911961fda5e602"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec5a0fe0422d6f472d75528a14bd22511914e240", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec5a0fe0422d6f472d75528a14bd22511914e240", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec5a0fe0422d6f472d75528a14bd22511914e240", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec5a0fe0422d6f472d75528a14bd22511914e240/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "511f5bb114913b7cdaa78cb60ed46d0d5a27f5e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/511f5bb114913b7cdaa78cb60ed46d0d5a27f5e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/511f5bb114913b7cdaa78cb60ed46d0d5a27f5e3"}], "stats": {"total": 65, "additions": 63, "deletions": 2}, "files": [{"sha": "0428c3c93ae95acee2d7cec2c4a30b954bb64008", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec5a0fe0422d6f472d75528a14bd22511914e240/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec5a0fe0422d6f472d75528a14bd22511914e240/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ec5a0fe0422d6f472d75528a14bd22511914e240", "patch": "@@ -1,3 +1,17 @@\n+2015-11-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/67354\n+\t* cp-tree.h (defer_mangling_aliases): Declare.\n+\t(generate_mangling_aliases): New prototype.\n+\t* decl2.c (defer_mangling_aliases): New variable.\n+\t(note_mangling_alias): Use !defer_mangling_aliases\n+\tinstead of at_eof.\n+\t(generate_mangling_aliases): No longer static. Clear\n+\tdefer_mangling_aliases.\n+\t* optimize.c (maybe_thunk_body): Defer emitting mangling aliases\n+\tif !defer_mangling_aliases until the fns are put into the same\n+\tcomdat group.\n+\n 2015-11-19  David Malcolm  <dmalcolm@redhat.com>\n \n \t* cp-tree.h (lookup_member_fuzzy): New decl."}, {"sha": "1672291f9b691d5f14c40d8cbf7ebe1277cd2794", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec5a0fe0422d6f472d75528a14bd22511914e240/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec5a0fe0422d6f472d75528a14bd22511914e240/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=ec5a0fe0422d6f472d75528a14bd22511914e240", "patch": "@@ -4846,6 +4846,11 @@ extern GTY(()) vec<tree, va_gc> *local_classes;\n \n extern int at_eof;\n \n+/* True if note_mangling_alias should enqueue mangling aliases for\n+   later generation, rather than emitting them right away.  */\n+\n+extern bool defer_mangling_aliases;\n+\n /* A list of namespace-scope objects which have constructors or\n    destructors which reside in the global scope.  The decl is stored\n    in the TREE_VALUE slot and the initializer is stored in the\n@@ -5772,6 +5777,7 @@ extern tree cxx_maybe_build_cleanup\t\t(tree, tsubst_flags_t);\n \n /* in decl2.c */\n extern void note_mangling_alias\t\t\t(tree, tree);\n+extern void generate_mangling_aliases\t\t(void);\n extern bool check_java_method\t\t\t(tree);\n extern tree build_memfn_type\t\t\t(tree, tree, cp_cv_quals, cp_ref_qualifier);\n extern tree build_pointer_ptrmemfn_type\t(tree);"}, {"sha": "2cc51d6d428eec6917e8b1df3eeb5ecf2adac51b", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec5a0fe0422d6f472d75528a14bd22511914e240/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec5a0fe0422d6f472d75528a14bd22511914e240/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=ec5a0fe0422d6f472d75528a14bd22511914e240", "patch": "@@ -102,6 +102,11 @@ static GTY(()) vec<tree, va_gc> *mangling_aliases;\n /* Nonzero if we're done parsing and into end-of-file activities.  */\n \n int at_eof;\n+\n+/* True if note_mangling_alias should enqueue mangling aliases for\n+   later generation, rather than emitting them right away.  */\n+\n+bool defer_mangling_aliases = true;\n \f\n \n /* Return a member function type (a METHOD_TYPE), given FNTYPE (a\n@@ -4389,7 +4394,7 @@ void\n note_mangling_alias (tree decl ATTRIBUTE_UNUSED, tree id2 ATTRIBUTE_UNUSED)\n {\n #ifdef ASM_OUTPUT_DEF\n-  if (at_eof)\n+  if (!defer_mangling_aliases)\n     generate_mangling_alias (decl, id2);\n   else\n     {\n@@ -4399,7 +4404,9 @@ note_mangling_alias (tree decl ATTRIBUTE_UNUSED, tree id2 ATTRIBUTE_UNUSED)\n #endif\n }\n \n-static void\n+/* Emit all mangling aliases that were deferred up to this point.  */\n+\n+void\n generate_mangling_aliases ()\n {\n   while (!vec_safe_is_empty (mangling_aliases))\n@@ -4408,6 +4415,7 @@ generate_mangling_aliases ()\n       tree decl = mangling_aliases->pop();\n       generate_mangling_alias (decl, id2);\n     }\n+  defer_mangling_aliases = false;\n }\n \n /* The entire file is now complete.  If requested, dump everything"}, {"sha": "a5f84a0a4b5a2c2cbdd8d719a1b9568f58b59386", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec5a0fe0422d6f472d75528a14bd22511914e240/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec5a0fe0422d6f472d75528a14bd22511914e240/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=ec5a0fe0422d6f472d75528a14bd22511914e240", "patch": "@@ -270,7 +270,11 @@ maybe_thunk_body (tree fn, bool force)\n     }\n   else if (HAVE_COMDAT_GROUP)\n     {\n+      /* At eof, defer creation of mangling aliases temporarily.  */\n+      bool save_defer_mangling_aliases = defer_mangling_aliases;\n+      defer_mangling_aliases = true;\n       tree comdat_group = cdtor_comdat_group (fns[1], fns[0]);\n+      defer_mangling_aliases = save_defer_mangling_aliases;\n       cgraph_node::get_create (fns[0])->set_comdat_group (comdat_group);\n       cgraph_node::get_create (fns[1])->add_to_same_comdat_group\n \t(cgraph_node::get_create (fns[0]));\n@@ -281,6 +285,9 @@ maybe_thunk_body (tree fn, bool force)\n \t   virtual, it goes into the same comdat group as well.  */\n \tcgraph_node::get_create (fns[2])->add_to_same_comdat_group\n \t  (symtab_node::get (fns[0]));\n+      /* Emit them now that the thunks are same comdat group aliases.  */\n+      if (!save_defer_mangling_aliases)\n+\tgenerate_mangling_aliases ();\n       TREE_PUBLIC (fn) = false;\n       DECL_EXTERNAL (fn) = false;\n       DECL_INTERFACE_KNOWN (fn) = true;"}, {"sha": "75ea160d76c44dcfdc5adbc2c092607993a354bd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec5a0fe0422d6f472d75528a14bd22511914e240/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec5a0fe0422d6f472d75528a14bd22511914e240/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ec5a0fe0422d6f472d75528a14bd22511914e240", "patch": "@@ -1,3 +1,8 @@\n+2015-11-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/67354\n+\t* g++.dg/abi/mangle67.C: New test.\n+\n 2015-11-20  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* gcc.target/s390/bswap-1.c: New test."}, {"sha": "69ca90b029d17ca997bade9e9f9f041f9cb09631", "filename": "gcc/testsuite/g++.dg/abi/mangle67.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec5a0fe0422d6f472d75528a14bd22511914e240/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle67.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec5a0fe0422d6f472d75528a14bd22511914e240/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle67.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle67.C?ref=ec5a0fe0422d6f472d75528a14bd22511914e240", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/67354\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fabi-version=5 -Os\" }\n+\n+class A\n+{\n+};\n+\n+template <typename T>\n+void\n+foo ()\n+{\n+  T ();\n+}\n+\n+struct B : virtual A\n+{\n+  template <typename...> B () {}\n+};\n+\n+auto f = foo<B>;"}]}