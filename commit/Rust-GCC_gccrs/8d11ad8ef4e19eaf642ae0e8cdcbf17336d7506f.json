{"sha": "8d11ad8ef4e19eaf642ae0e8cdcbf17336d7506f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQxMWFkOGVmNGUxOWVhZjY0MmFlMGU4Y2RjYmYxNzMzNmQ3NTA2Zg==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2005-12-01T03:39:45Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2005-12-01T03:39:45Z"}, "message": "mklibgcc.in: Parameterise the script to build soft float functions by iterating over each...\n\n        * mklibgcc.in: Parameterise the script to build soft float\n\tfunctions by iterating over each type, rather than cloning the\n\tcode for each type.\n\nFrom-SVN: r107800", "tree": {"sha": "34ac7483331c4aca7d9a1c1914805719cc239228", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34ac7483331c4aca7d9a1c1914805719cc239228"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d11ad8ef4e19eaf642ae0e8cdcbf17336d7506f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d11ad8ef4e19eaf642ae0e8cdcbf17336d7506f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d11ad8ef4e19eaf642ae0e8cdcbf17336d7506f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d11ad8ef4e19eaf642ae0e8cdcbf17336d7506f/comments", "author": null, "committer": null, "parents": [{"sha": "625a34391b5f4ade156cd99b88fd5184011d2a29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/625a34391b5f4ade156cd99b88fd5184011d2a29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/625a34391b5f4ade156cd99b88fd5184011d2a29"}], "stats": {"total": 128, "additions": 40, "deletions": 88}, "files": [{"sha": "c0b9477457ce7fba54f1f82ff4a8a0cea086746c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d11ad8ef4e19eaf642ae0e8cdcbf17336d7506f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d11ad8ef4e19eaf642ae0e8cdcbf17336d7506f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d11ad8ef4e19eaf642ae0e8cdcbf17336d7506f", "patch": "@@ -1,3 +1,9 @@\n+2005-12-01  Ben Elliston  <bje@au.ibm.com>\n+\n+        * mklibgcc.in: Parameterise the script to build soft float\n+\tfunctions by iterating over each type, rather than cloning the\n+\tcode for each type.\n+\n 2005-11-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \tPR middle-end/25158"}, {"sha": "ba853636ac7df364f7f01009f8c3a5a14b564f03", "filename": "gcc/mklibgcc.in", "status": "modified", "additions": 34, "deletions": 88, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d11ad8ef4e19eaf642ae0e8cdcbf17336d7506f/gcc%2Fmklibgcc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d11ad8ef4e19eaf642ae0e8cdcbf17336d7506f/gcc%2Fmklibgcc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmklibgcc.in?ref=8d11ad8ef4e19eaf642ae0e8cdcbf17336d7506f", "patch": "@@ -313,95 +313,41 @@ for ml in $MULTILIBS; do\n   # Build software floating point functions.\n   #\n \n-  if [ \"$FPBIT\" ]; then\n-    for name in $FPBIT_FUNCS; do\n-      if [ \"$libgcc_s_so\" ]; then\n-\tout=\"libgcc/${dir}/${name}${objext}\"\n-\toutS=\"libgcc/${dir}/${name}_s${objext}\"\n-\n-\techo $outS: $FPBIT $fpbit_c_dep\n-\techo \"\t$gcc_s_compile\" -DFINE_GRAINED_LIBRARIES $flags -DL$name \\\n-\t  -c $FPBIT -o $outS\n-\n-        echo $out: $FPBIT $fpbit_c_dep\n-        echo \"\t$gcc_compile\" -DFINE_GRAINED_LIBRARIES $flags -DL$name \\\n-\t  '$(vis_hide)' -c $FPBIT -o $out\n-\n-\techo $libgcc_a: $out\n-\techo $libgcc_s_so: $outS\n-\tif [ \"$SHLIB_MKMAP\" ]; then\n-\t  echo libgcc/${dir}/libgcc.map: $outS\n-\tfi\n-      else\n-\tout=\"libgcc/${dir}/${name}${objext}\"\n-\techo $out: $FPBIT $fpbit_c_dep\n-\techo \"\t$gcc_compile\" -DFINE_GRAINED_LIBRARIES $flags -DL$name \\\n-\t  -c $FPBIT -o $out\n-\n-\techo $libgcc_a: $out\n-      fi\n-    done\n-  fi\n-\n-  if [ \"$DPBIT\" ]; then\n-    for name in $DPBIT_FUNCS; do\n-      if [ \"$libgcc_s_so\" ]; then\n-\tout=\"libgcc/${dir}/${name}${objext}\"\n-\toutS=\"libgcc/${dir}/${name}_s${objext}\"\n-\n-\techo $outS: $DPBIT $fpbit_c_dep\n-\techo \"\t$gcc_s_compile\" -DFINE_GRAINED_LIBRARIES $flags -DL$name \\\n-\t  -c $DPBIT -o $outS\n-\n-        echo $out: $DPBIT $fpbit_c_dep\n-        echo \"\t$gcc_compile\" -DFINE_GRAINED_LIBRARIES $flags -DL$name \\\n-\t  '$(vis_hide)' -c $DPBIT -o $out\n-\n-\techo $libgcc_a: $out\n-\techo $libgcc_s_so: $outS\n-\tif [ \"$SHLIB_MKMAP\" ]; then\n-\t  echo libgcc/${dir}/libgcc.map: $outS\n-\tfi\n-      else\n-\tout=\"libgcc/${dir}/${name}${objext}\"\n-\techo $out: $DPBIT $fpbit_c_dep\n-\techo \"\t$gcc_compile\" -DFINE_GRAINED_LIBRARIES $flags -DL$name \\\n-\t  -c $DPBIT -o $out\n-\n-\techo $libgcc_a: $out\n+  for fpbit_var in FPBIT DPBIT TPBIT ; do\n+      fpfuncs_var=\"${fpbit_var}_FUNCS\"\n+      eval fpbit=\\$$fpbit_var\n+      eval fpfuncs=\\$$fpfuncs_var\n+\n+      if [ \"$fpbit\" ] ; then\n+\t  for name in $fpfuncs; do\n+\t      if [ \"$libgcc_s_so\" ]; then\n+\t\t  out=\"libgcc/${dir}/${name}${objext}\"\n+\t\t  outS=\"libgcc/${dir}/${name}_s${objext}\"\n+\n+\t\t  echo $outS: $fpbit $fpbit_c_dep\n+\t\t  echo \"\t$gcc_s_compile\" -DFINE_GRAINED_LIBRARIES $flags -DL$name \\\n+\t\t      -c $fpbit -o $outS\n+\n+\t\t  echo $out: $fpbit $fpbit_c_dep\n+\t\t  echo \"\t$gcc_compile\" -DFINE_GRAINED_LIBRARIES $flags -DL$name \\\n+\t\t      '$(vis_hide)' -c $fpbit -o $out\n+\t\t  \n+\t\t  echo $libgcc_a: $out\n+\t\t  echo $libgcc_s_so: $outS\n+\t\t  if [ \"$SHLIB_MKMAP\" ]; then\n+\t\t      echo libgcc/${dir}/libgcc.map: $outS\n+\t\t  fi\n+\t      else\n+\t\t  out=\"libgcc/${dir}/${name}${objext}\"\n+\t\t  echo $out: $fpbit $fpbit_c_dep\n+\t\t  echo \"\t$gcc_compile\" -DFINE_GRAINED_LIBRARIES $flags -DL$name \\\n+\t\t      -c $fpbit -o $out\n+\t\t  \n+\t\t  echo $libgcc_a: $out\n+\t      fi\n+\t  done\n       fi\n-    done\n-  fi\n-\n-  if [ \"$TPBIT\" ]; then\n-    for name in $TPBIT_FUNCS; do\n-      if [ \"$libgcc_s_so\" ]; then\n-\tout=\"libgcc/${dir}/${name}${objext}\"\n-\toutS=\"libgcc/${dir}/${name}_s${objext}\"\n-\n-\techo $outS: $TPBIT $fpbit_c_dep\n-\techo \"\t$gcc_s_compile\" -DFINE_GRAINED_LIBRARIES $flags -DL$name \\\n-\t  -c $TPBIT -o $outS\n-\n-        echo $out: $TPBIT $fpbit_c_dep\n-        echo \"\t$gcc_compile\" -DFINE_GRAINED_LIBRARIES $flags -DL$name \\\n-\t  '$(vis_hide)' -c $TPBIT -o $out\n-\n-\techo $libgcc_a: $out\n-\techo $libgcc_s_so: $outS\n-\tif [ \"$SHLIB_MKMAP\" ]; then\n-\t  echo libgcc/${dir}/libgcc.map: $outS\n-\tfi\n-      else\n-\tout=\"libgcc/${dir}/${name}${objext}\"\n-\techo $out: $TPBIT $fpbit_c_dep\n-\techo \"\t$gcc_compile\" -DFINE_GRAINED_LIBRARIES $flags -DL$name \\\n-\t  -c $TPBIT -o $out\n-\n-\techo $libgcc_a: $out\n-      fi\n-    done\n-  fi\n+  done\n \n   for file in $LIB2ADD; do\n     name=`echo $file | sed -e 's/[.][cS]$//' -e 's/[.]asm$//'`"}]}