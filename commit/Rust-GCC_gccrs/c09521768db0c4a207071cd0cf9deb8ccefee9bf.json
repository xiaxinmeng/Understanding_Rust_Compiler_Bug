{"sha": "c09521768db0c4a207071cd0cf9deb8ccefee9bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA5NTIxNzY4ZGIwYzRhMjA3MDcxY2QwY2Y5ZGViOGNjZWZlZTliZg==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2004-10-20T01:29:57Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2004-10-20T01:29:57Z"}, "message": "ifc-20040816-2.c: Use integer arithmetic instead of floating point arithmetic, which could trap.\n\n\t* gcc.dg/tree-ssa/ifc-20040816-2.c: Use integer arithmetic instead\n\tof floating point arithmetic, which could trap.\n\nCo-Authored-By: Devang Patel <dpatel@apple.com>\n\nFrom-SVN: r89313", "tree": {"sha": "5e455b02369d515fc8ddf83f69255517d707725b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e455b02369d515fc8ddf83f69255517d707725b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c09521768db0c4a207071cd0cf9deb8ccefee9bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c09521768db0c4a207071cd0cf9deb8ccefee9bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c09521768db0c4a207071cd0cf9deb8ccefee9bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c09521768db0c4a207071cd0cf9deb8ccefee9bf/comments", "author": null, "committer": null, "parents": [{"sha": "dd3651579649680db8ef4dbb06192526bdcbb319", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd3651579649680db8ef4dbb06192526bdcbb319", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd3651579649680db8ef4dbb06192526bdcbb319"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "1a7ccc05cbe344ff49e77de70bd8ad6355dc5e6d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09521768db0c4a207071cd0cf9deb8ccefee9bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09521768db0c4a207071cd0cf9deb8ccefee9bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c09521768db0c4a207071cd0cf9deb8ccefee9bf", "patch": "@@ -1,3 +1,9 @@\n+2004-10-20  Ben Elliston  <bje@au.ibm.com>\n+\t    Devang Patel  <dpatel@apple.com>\n+\n+\t* gcc.dg/tree-ssa/ifc-20040816-2.c: Use integer arithmetic instead\n+\tof floating point arithmetic, which could trap.\n+\n 2004-10-19  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/14035"}, {"sha": "85a79e7296963dfdbc545e3d51a9b7d72a40cc95", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ifc-20040816-2.c", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09521768db0c4a207071cd0cf9deb8ccefee9bf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-20040816-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09521768db0c4a207071cd0cf9deb8ccefee9bf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-20040816-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-20040816-2.c?ref=c09521768db0c4a207071cd0cf9deb8ccefee9bf", "patch": "@@ -1,30 +1,29 @@\n /* { dg-do compile } */\n /* { dg-options \"-c -O2 -ftree-vectorize -fdump-tree-ifcvt-stats\" { target *-*-* } } */\n \n-typedef float afloat __attribute__ ((__aligned__(16)));\n-void foo(const afloat * __restrict__ zr_in,\n-\t\tconst afloat * __restrict__ zi_in,\n-\t\tconst afloat * __restrict__ zk_in,\n-\t\tafloat * __restrict__ zr_out,\n-\t\tafloat * __restrict__ zi_out,\n-\t\tafloat * __restrict__ zk_out,\n-\t\tfloat cr, float ci)\n+void foo(const int * __restrict__ zr_in,\n+\t\tconst int * __restrict__ zi_in,\n+\t\tconst int * __restrict__ zk_in,\n+\t\tint * __restrict__ zr_out,\n+\t\tint * __restrict__ zi_out,\n+\t\tint * __restrict__ zk_out,\n+\t\tint cr, int ci)\n {\n   unsigned int pi;\n-  float tmp_r, tmp_i, tmp_k;\n+  int tmp_r, tmp_i, tmp_k;\n   for (pi = 0; pi < (512)*(512); pi++) {\n-    float zr = zr_in[pi];\n-    float zi = zi_in[pi];\n-    float zk = zk_in[pi];\n+    int zr = zr_in[pi];\n+    int zi = zi_in[pi];\n+    int zk = zk_in[pi];\n     \n-    if (zr*zr + zi*zi >= 4.0f) {\n+    if (zr*zr + zi*zi >= 4) {\n       tmp_r = zr;\n       tmp_i = zi;\n       tmp_k = zk;\n     } else {\n       tmp_r = (zr*zr - zi*zi + cr);\n       tmp_i = (2 * zr * zi + ci);\n-      tmp_k = zk + 1.0f;\n+      tmp_k = zk + 1;\n     }\n     zr_out[pi] = tmp_r;\n     zi_out[pi] = tmp_i;"}]}