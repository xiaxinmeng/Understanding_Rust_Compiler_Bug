{"sha": "52ad4d7b53f0798dcf610ae25199897ede9c9719", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJhZDRkN2I1M2YwNzk4ZGNmNjEwYWUyNTE5OTg5N2VkZTljOTcxOQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-01-27T17:42:59Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-01-27T17:42:59Z"}, "message": "* config/ia64/ia64.md (*nmaddsf4, *nmadddf4, *nmadddf4_alts)\n\t(*nmadddf4_trunc, *nmaddxf4, *nmaddxf4_truncsf, *nmaddxf4_truncdf)\n\t(*nmaddxf4_alts, *nmaddxf4_truncdf_alts):\n\tRewrite pattern as (minus (op 3) (mult (op 1) (op 2))).\n\tPossibly rename pattern for consistency.\n\tRemove ??? comments suggesting that this be done.\n\t(*nmaddsf4_alts, *nmadddf4_truncsf_alts, *nmaddxf4_truncsf_alts):\n\tNew patterns.\n\t(divsi3_internal, divdi3_internal_lat, divdi3_internal_thr)\n\t(divsf3_internal_lat, divsf3_internal_thr, sqrtsf2_internal_thr)\n\t(divdf3_internal_lat, divdf3_internal_thr, sqrtdf2_internal_thr)\n\t(divxf3_internal_lat, divxf3_internal_thr, sqrtxf2_internal_thr):\n\tUpdate to match.\n\nFrom-SVN: r76734", "tree": {"sha": "683007c6da8f0149a14c94cd8d00a113231df058", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/683007c6da8f0149a14c94cd8d00a113231df058"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52ad4d7b53f0798dcf610ae25199897ede9c9719", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52ad4d7b53f0798dcf610ae25199897ede9c9719", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52ad4d7b53f0798dcf610ae25199897ede9c9719", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52ad4d7b53f0798dcf610ae25199897ede9c9719/comments", "author": null, "committer": null, "parents": [{"sha": "dbc2d642409c6521f5ced28fe5e15530ac7e9af1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbc2d642409c6521f5ced28fe5e15530ac7e9af1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbc2d642409c6521f5ced28fe5e15530ac7e9af1"}], "stats": {"total": 293, "additions": 166, "deletions": 127}, "files": [{"sha": "5a6c57b6130c1ec84b5eb3f97882d5e7b879afb3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 36, "deletions": 19, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52ad4d7b53f0798dcf610ae25199897ede9c9719/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52ad4d7b53f0798dcf610ae25199897ede9c9719/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52ad4d7b53f0798dcf610ae25199897ede9c9719", "patch": "@@ -1,3 +1,20 @@\n+2004-01-27  Zack Weinberg  <zack@codesourcery.com>\n+\n+\tPR 7198\n+\t* config/ia64/ia64.md (*nmaddsf4, *nmadddf4, *nmadddf4_alts)\n+\t(*nmadddf4_trunc, *nmaddxf4, *nmaddxf4_truncsf, *nmaddxf4_truncdf)\n+\t(*nmaddxf4_alts, *nmaddxf4_truncdf_alts):\n+\tRewrite pattern as (minus (op 3) (mult (op 1) (op 2))).\n+\tPossibly rename pattern for consistency.\n+\tRemove ??? comments suggesting that this be done.\n+\t(*nmaddsf4_alts, *nmadddf4_truncsf_alts, *nmaddxf4_truncsf_alts):\n+\tNew patterns.\n+\t(divsi3_internal, divdi3_internal_lat, divdi3_internal_thr)\n+\t(divsf3_internal_lat, divsf3_internal_thr, sqrtsf2_internal_thr)\n+\t(divdf3_internal_lat, divdf3_internal_thr, sqrtdf2_internal_thr)\n+\t(divxf3_internal_lat, divxf3_internal_thr, sqrtxf2_internal_thr):\n+\tUpdate to match.\n+\n 2004-01-27  Ian Lance Taylor  <ian@wasabisystems.com>\n \n \t* config/arm/arm.c (output_return_instruction): Only restore IP\n@@ -39,7 +56,7 @@\n \t* common.opt: Add entry for -fbtr-bb-exclusive.\n \t* opts.c (common_handle_options): Same.\n \t* doc/invoke.texi: Document -fbtr-bb-exclusive.\n-   \n+\n \t* bt-load.c (btrs_live_at_end): New variable.\n \t(compute_defs_uses_and_gen): Compute its pointed-to array.\n \t(clear_btr_from_live_range, add_btr_to_live_range): Update it.\n@@ -50,7 +67,7 @@\n \t(move_btr_def): Set other_btr_uses_before_def, and move new set\n \tto the end of the basic block, if appropriate.\n \t(migrate_btr_defs): Allocate and free btrs_live_at_end.\n-   \n+\n \t* bt-load.c (basic_block_freq): Remove outdated comment.\n \n 2004-01-27  Alan Modra  <amodra@bigpond.net.au>\n@@ -126,20 +143,20 @@\n \n 2004-01-26  Fariborz Jahanian <fjahanian@apple.com>\n \n-         * config/rs6000/rs6000.c (rs6000_emit_move): split slow\n-         unaligned load/store into smaller loads and stores.\n+\t * config/rs6000/rs6000.c (rs6000_emit_move): split slow\n+\t unaligned load/store into smaller loads and stores.\n \n 2004-01-26  Fariborz Jahanian <fjahanian@apple.com>\n \n-        * function.c (assign_parms): Do not assign\n-        long long argument to memory in prologue if\n-        is it loaded into register.\n+\t* function.c (assign_parms): Do not assign\n+\tlong long argument to memory in prologue if\n+\tis it loaded into register.\n \n 2004-01-26  Fariborz Jahanian <fjahanian@apple.com>\n \n \t PR middle-end/13779\n-         * expr.c (emit_group_load): split constant\n-         correctly into register components of PARALLEL insn.\n+\t * expr.c (emit_group_load): split constant\n+\t correctly into register components of PARALLEL insn.\n \n 2004-01-26  Fariborz Jahanian <fjahanian@apple.com>\n \n@@ -241,7 +258,7 @@\n \n \t* config/c4x/c4x.h (BCT_CHECK_LOOP_ITERATIONS): Remove.\n \t(HAVE_GAS_HIDDEN): Undefine as interim measure.\n-\t\n+\n 2004-01-26  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x/c4x.c (c4x_legitimate_address_p):  Invalidate direct\n@@ -250,7 +267,7 @@\n 2004-01-26  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x/c4x.c (legitimize_operands): Truncate invalid shift counts.\n-\t\n+\n 2004-01-26  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x/c4x.c (c4x_valid_operands): More aggressively reject\n@@ -263,7 +280,7 @@\n \n \t* config/c4x/c4x-protos.h (c4x_check_legit_addr): Adjust.\n \t* config/c4x/c4x.h (c4x_check_legit_addr): Adjust.\n-\t\n+\n 2004-01-25  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/pa/pa-protos.h: Remove the prototype for\n@@ -293,9 +310,9 @@\n \t(PROMOTE_PROTOTYPES): Remove.\n \n 2004-01-26  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n-\t\n-        * config/c4x/c4x.h (LEGITIMIZE_RELOAD_ADDRESS):  Handle symref.\n- \n+\n+\t* config/c4x/c4x.h (LEGITIMIZE_RELOAD_ADDRESS):  Handle symref.\n+\n 2003-04-25  Chris Demetriou  <cgd@broadcom.com>\n \n \t* config/mips/mips.h (ISA_HAS_HILO_INTERLOCKS): MIPS32, MIPS32r2,\n@@ -580,10 +597,10 @@\n \n 2004-01-23  Richard Henderson  <rth@redhat.com>\n \n-        PR opt/12941\n-        * combine.c (SHIFT_COUNT_TRUNCATED): Provide default value.\n-        (simplify_comparison): Don't simplify (eq (zero_extract c 1 r) 0)\n-        if SHIFT_COUNT_TRUNCATED is set.\n+\tPR opt/12941\n+\t* combine.c (SHIFT_COUNT_TRUNCATED): Provide default value.\n+\t(simplify_comparison): Don't simplify (eq (zero_extract c 1 r) 0)\n+\tif SHIFT_COUNT_TRUNCATED is set.\n \n 2004-01-23  Bob Wilson  <bob.wilson@acm.org>\n "}, {"sha": "635100c428167d8b9a2779853fdd474402d1f409", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 130, "deletions": 108, "changes": 238, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52ad4d7b53f0798dcf610ae25199897ede9c9719/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52ad4d7b53f0798dcf610ae25199897ede9c9719/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=52ad4d7b53f0798dcf610ae25199897ede9c9719", "patch": "@@ -2009,8 +2009,8 @@\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 6) (const_int 0))\n      (parallel [(set (match_dup 5)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 2) (match_dup 0)))\n-\t\t\t      (match_dup 7)))\n+\t\t     (minus:XF (match_dup 7)\n+\t\t\t       (mult:XF (match_dup 2) (match_dup 0))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 6) (const_int 0))\n      (parallel [(set (match_dup 4)\n@@ -2409,8 +2409,8 @@\n \t      (use (const_int 1))])\n    (cond_exec (ne (match_dup 6) (const_int 0))\n      (parallel [(set (match_dup 3)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 2) (match_dup 0)))\n-\t\t\t      (match_dup 7)))\n+\t\t     (minus:XF (match_dup 7)\n+\t\t\t       (mult:XF (match_dup 2) (match_dup 0))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 6) (const_int 0))\n      (parallel [(set (match_dup 4) (mult:XF (match_dup 1) (match_dup 0)))\n@@ -2440,8 +2440,8 @@\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 6) (const_int 0))\n      (parallel [(set (match_dup 4)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 2) (match_dup 3)))\n-\t\t\t      (match_dup 1)))\n+\t\t     (minus:XF (match_dup 1)\n+\t\t\t       (mult:XF (match_dup 2) (match_dup 3))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 6) (const_int 0))\n      (parallel [(set (match_dup 0)\n@@ -2468,8 +2468,8 @@\n \t      (use (const_int 1))])\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 3)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 2) (match_dup 0)))\n-\t\t\t      (match_dup 6)))\n+\t\t     (minus:XF (match_dup 6)\n+\t\t\t       (mult:XF (match_dup 2) (match_dup 0))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 0)\n@@ -2489,8 +2489,8 @@\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 4)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 2) (match_dup 3)))\n-\t\t\t      (match_dup 1)))\n+\t\t     (minus:XF (match_dup 1)\n+\t\t\t       (mult:XF (match_dup 2) (match_dup 3))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 0)\n@@ -2594,18 +2594,25 @@\n   \"fnmpy.s %0 = %1, %2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n-;; ??? Is it possible to canonicalize this as (minus (reg) (mult))?\n-\n (define_insn \"*nmaddsf4\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n-\t(plus:SF (neg:SF (mult:SF\n-\t\t\t   (match_operand:SF 1 \"fr_register_operand\" \"f\")\n-\t\t\t   (match_operand:SF 2 \"fr_register_operand\" \"f\")))\n-\t\t (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n+\t(minus:SF (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\") \n+\t\t  (mult:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n+\t\t\t   (match_operand:SF 2 \"fr_register_operand\" \"f\"))))]\n   \"\"\n   \"fnma.s %0 = %1, %2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n+(define_insn \"*nmaddsf4_alts\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n+\t(minus:SF (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\") \n+\t\t  (mult:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n+\t\t\t   (match_operand:SF 2 \"fr_register_operand\" \"f\"))))\n+   (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n+  \"\"\n+  \"fnma.s.s%4 %0 = %1, %2, %F3\"\n+  [(set_attr \"itanium_class\" \"fmac\")])\n+\n (define_expand \"divsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"\")\n \t(div:SF (match_operand:SF 1 \"fr_register_operand\" \"\")\n@@ -2640,8 +2647,8 @@\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 4)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 8) (match_dup 6)))\n-\t\t\t      (match_dup 10)))\n+\t\t     (minus:XF (match_dup 10)\n+\t\t\t       (mult:XF (match_dup 8) (match_dup 6))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 3)\n@@ -2694,8 +2701,8 @@\n \t      (use (const_int 1))])\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 3)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 8) (match_dup 6)))\n-\t\t\t      (match_dup 10)))\n+\t\t     (minus:XF (match_dup 10)\n+\t\t\t       (mult:XF (match_dup 8) (match_dup 6))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 3)\n@@ -2714,8 +2721,8 @@\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 4)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 8) (match_dup 3)))\n-\t\t\t      (match_dup 7)))\n+\t\t     (minus:XF (match_dup 7)\n+\t\t\t       (mult:XF (match_dup 8) (match_dup 3))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (set (match_dup 0)\n@@ -2825,8 +2832,8 @@\n     ;; d = 1/2 - S0 * H0 in f10\n     (cond_exec (ne (match_dup 6) (const_int 0))\n       (parallel [(set (match_dup 5)\n-                      (plus:XF (neg:XF (mult:XF (match_dup 7) (match_dup 4)))\n-                               (match_dup 3)))\n+                      (minus:XF (match_dup 3)\n+\t\t\t\t(mult:XF (match_dup 7) (match_dup 4))))\n                  (use (const_int 1))]))\n     ;; Step 5\n     ;; d' = d + 1/2 * d in f8\n@@ -2861,8 +2868,8 @@\n     ;; d1 = a - S1 * S1 in f9\n     (cond_exec (ne (match_dup 6) (const_int 0))\n        (parallel [(set (match_dup 4)\n-                       (plus:XF (neg:XF (mult:XF (match_dup 7) (match_dup 7)))\n-                                (match_dup 8)))\n+                       (minus:XF (match_dup 8)\n+\t\t\t\t (mult:XF (match_dup 7) (match_dup 7))))\n                   (use (const_int 1))]))\n     ;; Step 10\n     ;; S = S1 + d1 * H1 in f7\n@@ -3030,40 +3037,46 @@\n   \"fnmpy.s %0 = %1, %2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n-;; ??? Is it possible to canonicalize this as (minus (reg) (mult))?\n-\n (define_insn \"*nmadddf4\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n-\t(plus:DF (neg:DF (mult:DF\n-\t\t\t   (match_operand:DF 1 \"fr_register_operand\" \"f\")\n-\t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\")))\n-\t\t (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n+\t(minus:DF (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t  (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n+\t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\"))))]\n   \"\"\n   \"fnma.d %0 = %1, %2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmadddf4_alts\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n-\t(plus:DF (neg:DF (mult:DF\n-\t\t\t   (match_operand:DF 1 \"fr_register_operand\" \"f\")\n-\t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\")))\n-\t\t (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")))\n+\t(minus:DF (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t  (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n+\t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\"))))\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n   \"fnma.d.s%4 %0 = %1, %2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n-(define_insn \"*nmadddf4_trunc\"\n+(define_insn \"*nmadddf4_truncsf\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:SF\n-\t  (plus:DF (neg:DF (mult:DF\n-\t\t\t     (match_operand:DF 1 \"fr_register_operand\" \"f\")\n-\t\t\t     (match_operand:DF 2 \"fr_register_operand\" \"f\")))\n-\t\t   (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n+\t(minus:DF (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t  (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n+\t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\")))))]\n   \"\"\n   \"fnma.s %0 = %1, %2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n+(define_insn \"*nmadddf4_truncsf_alts\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:SF\n+\t(minus:DF (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t  (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n+\t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\")))))\n+   (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n+  \"\"\n+  \"fnma.s.s%4 %0 = %1, %2, %F3\"\n+  [(set_attr \"itanium_class\" \"fmac\")])\n+\n (define_expand \"divdf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"\")\n \t(div:DF (match_operand:DF 1 \"fr_register_operand\" \"\")\n@@ -3099,8 +3112,8 @@\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 6) (const_int 0))\n      (parallel [(set (match_dup 4)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 9) (match_dup 7)))\n-\t\t\t      (match_dup 12)))\n+\t\t     (minus:XF (match_dup 12)\n+\t\t\t       (mult:XF (match_dup 9) (match_dup 7))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 6) (const_int 0))\n      (parallel [(set (match_dup 3)\n@@ -3142,8 +3155,8 @@\n    (cond_exec (ne (match_dup 6) (const_int 0))\n      (parallel [(set (match_dup 11)\n \t\t     (float_truncate:DF\n-\t\t       (plus:XF (neg:XF (mult:XF (match_dup 9) (match_dup 3)))\n-\t\t\t        (match_dup 8))))\n+\t\t       (minus:XF (match_dup 8)\n+\t\t\t\t (mult:XF (match_dup 9) (match_dup 3)))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 6) (const_int 0))\n      (set (match_dup 0)\n@@ -3176,8 +3189,8 @@\n \t      (use (const_int 1))])\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 3)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 8) (match_dup 6)))\n-\t\t\t      (match_dup 10)))\n+\t\t     (minus:XF (match_dup 10)\n+\t\t\t       (mult:XF (match_dup 8) (match_dup 6))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 6)\n@@ -3209,8 +3222,8 @@\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 4)\n-\t\t     (plus:DF (neg:DF (mult:DF (match_dup 2) (match_dup 9)))\n-\t\t\t      (match_dup 1)))\n+\t\t     (minus:DF (match_dup 1)\n+\t\t\t       (mult:DF (match_dup 2) (match_dup 9))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (set (match_dup 0)\n@@ -3299,8 +3312,8 @@\n     ;; r0 = 1/2 - G0 * H0 in f9\n     (cond_exec (ne (match_dup 6) (const_int 0))\n       (parallel [(set (match_dup 4)\n-                      (plus:XF (neg:XF (mult:XF (match_dup 7) (match_dup 3)))\n-                               (match_dup 5)))\n+                      (minus:XF (match_dup 5)\n+\t\t\t\t(mult:XF (match_dup 7) (match_dup 3))))\n                  (use (const_int 1))]))\n     ;; Step 5\n     ;; H1 = H0 + r0 * H0 in f8\n@@ -3320,8 +3333,8 @@\n     ;; r1 = 1/2 - G1 * H1 in f9\n     (cond_exec (ne (match_dup 6) (const_int 0))\n       (parallel [(set (match_dup 4)\n-                      (plus:XF (neg:XF (mult:XF (match_dup 7) (match_dup 3)))\n-                               (match_dup 5)))\n+                      (minus:XF (match_dup 5)\n+\t\t\t\t(mult:XF (match_dup 7) (match_dup 3))))\n                  (use (const_int 1))]))\n     ;; Step 8\n     ;; H2 = H1 + r1 * H1 in f8\n@@ -3341,8 +3354,8 @@\n     ;; d2 = a - G2 * G2 in f9\n     (cond_exec (ne (match_dup 6) (const_int 0))\n        (parallel [(set (match_dup 4)\n-                       (plus:XF (neg:XF (mult:XF (match_dup 7) (match_dup 7)))\n-                                (match_dup 8)))\n+                       (minus:XF (match_dup 8)\n+\t\t\t\t (mult:XF (match_dup 7) (match_dup 7))))\n                   (use (const_int 1))]))\n     ;; Step 11\n     ;; G3 = G2 + d2 * H2 in f7\n@@ -3355,8 +3368,8 @@\n     ;; d3 = a - G3 * G3 in f9\n     (cond_exec (ne (match_dup 6) (const_int 0))\n        (parallel [(set (match_dup 4)\n-                       (plus:XF (neg:XF (mult:XF (match_dup 7) (match_dup 7)))\n-                                (match_dup 8)))\n+                       (minus:XF (match_dup 8)\n+\t\t\t\t (mult:XF (match_dup 7) (match_dup 7))))\n                   (use (const_int 1))]))\n     ;; Step 13\n     ;; S = G3 + d3 * H2 in f7\n@@ -3643,59 +3656,68 @@\n   \"fnmpy.d %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n-;; ??? Is it possible to canonicalize this as (minus (reg) (mult))?\n-\n (define_insn \"*nmaddxf4\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=f\")\n-\t(plus:XF (neg:XF (mult:XF\n-\t\t\t  (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n-\t\t\t  (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\")))\n-\t\t (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\")))]\n+\t(minus:XF (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\")\n+\t\t  (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n+\t\t\t   (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\")\n+   )))]\n   \"\"\n   \"fnma %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmaddxf4_truncsf\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:SF\n-\t  (plus:XF (neg:XF (mult:XF\n-\t\t\t    (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n-\t\t\t    (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\")))\n-\t\t   (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\"))))]\n+\t  (minus:XF (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\") \n+\t\t    (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n+\t\t\t     (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\")\n+   ))))]\n   \"\"\n   \"fnma.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmaddxf4_truncdf\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:DF\n-\t  (plus:XF (neg:XF (mult:XF\n-\t\t\t    (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n-\t\t\t    (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\")))\n-\t\t   (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\"))))]\n+\t  (minus:XF (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\") \n+\t\t    (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n+\t\t\t     (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\")\n+   ))))]\n   \"\"\n   \"fnma.d %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmaddxf4_alts\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=f\")\n-\t(plus:XF (neg:XF (mult:XF\n-\t\t\t  (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n-\t\t\t  (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\")))\n-\t\t (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\")))\n+\t(minus:XF (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\")\n+\t\t  (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n+\t\t\t   (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\")\n+   )))\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n   \"fnma.s%4 %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n+(define_insn \"*nmaddxf4_truncsf_alts\"\n+  [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n+\t(float_truncate:SF\n+\t  (minus:XF (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\") \n+\t\t    (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n+\t\t\t     (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\")\n+   ))))\n+   (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n+  \"\"\n+  \"fnma.s.s%4 %0 = %F1, %F2, %F3\"\n+  [(set_attr \"itanium_class\" \"fmac\")])\n+\n (define_insn \"*nmaddxf4_truncdf_alts\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:DF\n-\t  (plus:XF (neg:XF\n-\t\t     (mult:XF\n-\t\t       (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n-\t\t       (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\")))\n-\t\t (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\"))))\n+\t  (minus:XF (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\") \n+\t\t    (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n+\t\t\t     (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\")\n+   ))))\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n   \"fnma.d.s%4 %0 = %F1, %F2, %F3\"\n@@ -3734,8 +3756,8 @@\n \t      (use (const_int 1))])\n    (cond_exec (ne (match_dup 7) (const_int 0))\n      (parallel [(set (match_dup 3)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 2) (match_dup 0)))\n-\t\t\t      (match_dup 8)))\n+\t\t     (minus:XF (match_dup 8)\n+\t\t\t       (mult:XF (match_dup 2) (match_dup 0))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 7) (const_int 0))\n      (parallel [(set (match_dup 4) (mult:XF (match_dup 1) (match_dup 0)))\n@@ -3765,8 +3787,8 @@\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 7) (const_int 0))\n      (parallel [(set (match_dup 4)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 2) (match_dup 4)))\n-\t\t\t      (match_dup 1)))\n+\t\t     (minus:XF (match_dup 1)\n+\t\t\t       (mult:XF (match_dup 2) (match_dup 4))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 7) (const_int 0))\n      (parallel [(set (match_dup 3)\n@@ -3775,8 +3797,8 @@\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 7) (const_int 0))\n      (parallel [(set (match_dup 5)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 2) (match_dup 0)))\n-\t\t\t      (match_dup 8)))\n+\t\t     (minus:XF (match_dup 8)\n+\t\t\t       (mult:XF (match_dup 2) (match_dup 0))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 7) (const_int 0))\n      (parallel [(set (match_dup 0)\n@@ -3785,8 +3807,8 @@\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 7) (const_int 0))\n      (parallel [(set (match_dup 4)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 2) (match_dup 3)))\n-\t\t\t      (match_dup 1)))\n+\t\t     (minus:XF (match_dup 1)\n+\t\t\t       (mult:XF (match_dup 2) (match_dup 3))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 7) (const_int 0))\n      (set (match_dup 0)\n@@ -3812,8 +3834,8 @@\n \t      (use (const_int 1))])\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 3)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 2) (match_dup 0)))\n-\t\t\t      (match_dup 6)))\n+\t\t     (minus:XF (match_dup 6)\n+\t\t\t       (mult:XF (match_dup 2) (match_dup 0))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 4)\n@@ -3833,8 +3855,8 @@\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 0)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 2) (match_dup 3)))\n-\t\t\t      (match_dup 6)))\n+\t\t     (minus:XF (match_dup 6)\n+\t\t\t       (mult:XF (match_dup 2) (match_dup 3))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 0)\n@@ -3843,8 +3865,8 @@\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 3)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 2) (match_dup 4)))\n-\t\t\t      (match_dup 1)))\n+\t\t     (minus:XF (match_dup 1)\n+\t\t\t       (mult:XF (match_dup 2) (match_dup 4))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 3)\n@@ -3853,8 +3875,8 @@\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 4)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 2) (match_dup 0)))\n-\t\t\t      (match_dup 6)))\n+\t\t     (minus:XF (match_dup 6)\n+\t\t\t       (mult:XF (match_dup 2) (match_dup 0))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 0)\n@@ -3863,8 +3885,8 @@\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (parallel [(set (match_dup 4)\n-\t\t     (plus:XF (neg:XF (mult:XF (match_dup 2) (match_dup 3)))\n-\t\t\t      (match_dup 1)))\n+\t\t     (minus:XF (match_dup 1)\n+\t\t\t       (mult:XF (match_dup 2) (match_dup 3))))\n \t\t(use (const_int 1))]))\n    (cond_exec (ne (match_dup 5) (const_int 0))\n      (set (match_dup 0)\n@@ -3949,8 +3971,8 @@\n     ;; d0 = 1/2 - S0 * H0 in f10\n     (cond_exec (ne (match_dup 7) (const_int 0))\n       (parallel [(set (match_dup 5)\n-                      (plus:XF (neg:XF (mult:XF (match_dup 8) (match_dup 4)))\n-                               (match_dup 3)))\n+                      (minus:XF (match_dup 3)\n+\t\t\t\t(mult:XF (match_dup 8) (match_dup 4))))\n                  (use (const_int 1))]))\n     ;; Step 5\n     ;; H1 = H0 + d0 * H0 in f9\n@@ -3970,8 +3992,8 @@\n     ;; d1 = 1/2 - S1 * H1 in f10\n     (cond_exec (ne (match_dup 7) (const_int 0))\n       (parallel [(set (match_dup 5)\n-                      (plus:XF (neg:XF (mult:XF (match_dup 8) (match_dup 4)))\n-                               (match_dup 3)))\n+                      (minus:XF (match_dup 3)\n+\t\t\t\t(mult:XF (match_dup 8) (match_dup 4))))\n                  (use (const_int 1))]))\n     ;; Step 8\n     ;; H2 = H1 + d1 * H1 in f9\n@@ -3991,15 +4013,15 @@\n     ;; d2 = 1/2 - S2 * H2 in f10\n     (cond_exec (ne (match_dup 7) (const_int 0))\n        (parallel [(set (match_dup 5)\n-                       (plus:XF (neg:XF (mult:XF (match_dup 8) (match_dup 4)))\n-                                (match_dup 3)))\n+                       (minus:XF (match_dup 3)\n+\t\t\t\t (mult:XF (match_dup 8) (match_dup 4))))\n                   (use (const_int 1))]))\n     ;; Step 11\n     ;; e2 = a - S2 * S2 in f8\n     (cond_exec (ne (match_dup 7) (const_int 0))\n        (parallel [(set (match_dup 3)\n-                       (plus:XF (neg:XF (mult:XF (match_dup 8) (match_dup 8)))\n-                                (match_dup 9)))\n+                       (minus:XF (match_dup 9)\n+\t\t\t\t (mult:XF (match_dup 8) (match_dup 8))))\n                   (use (const_int 1))]))\n     ;; Step 12\n     ;; S3 = S2 + e2 * H2 in f7\n@@ -4019,8 +4041,8 @@\n     ;; e3 = a - S3 * S3 in f8\n     (cond_exec (ne (match_dup 7) (const_int 0))\n        (parallel [(set (match_dup 3)\n-                       (plus:XF (neg:XF (mult:XF (match_dup 8) (match_dup 8)))\n-                                (match_dup 9)))\n+                       (minus:XF (match_dup 9)\n+\t\t\t\t (mult:XF (match_dup 8) (match_dup 8))))\n                   (use (const_int 1))]))\n     ;; Step 15\n     ;; S = S3 + e3 * H3 in f7"}]}