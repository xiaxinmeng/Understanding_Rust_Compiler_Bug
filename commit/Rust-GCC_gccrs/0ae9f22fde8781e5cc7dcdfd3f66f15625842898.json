{"sha": "0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFlOWYyMmZkZTg3ODFlNWNjN2RjZGZkM2Y2NmYxNTYyNTg0Mjg5OA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2006-02-15T09:28:43Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:28:43Z"}, "message": "s-gloloc-mingw.adb, [...]: Minor reformatting.\n\n2006-02-13  Robert Dewar  <dewar@adacore.com>\n\n\t* s-gloloc-mingw.adb, a-cgaaso.ads, a-stzmap.adb, a-stzmap.adb,\n\ta-stzmap.ads, a-ztcoio.adb, a-ztedit.adb, a-ztedit.ads, a-ztenau.adb,\n\ta-ztenau.ads, a-colien.adb, a-colien.ads, a-colire.adb, a-colire.ads,\n\ta-comlin.adb, a-decima.adb, a-decima.ads, a-direio.adb, a-direio.adb,\n\ta-direio.adb, a-direio.ads, a-ngcoty.adb, a-ngcoty.ads, a-nuflra.adb,\n\ta-nuflra.ads, a-sequio.adb, a-sequio.ads, a-sequio.ads, a-storio.ads,\n\ta-stream.ads, a-ststio.adb, a-ststio.adb, a-ststio.ads, a-ststio.ads,\n\ta-stwima.adb, a-stwima.adb, a-stwima.ads, a-stwise.adb, a-teioed.adb,\n\ta-teioed.ads, a-ticoau.adb, a-ticoau.ads, a-ticoio.adb, a-tasatt.ads,\n\ta-tideau.adb, a-tideau.ads, a-tideio.adb, a-tideio.ads, a-tienau.adb,\n\ta-tienau.ads, a-tienio.adb, a-tienio.ads, a-tifiio.ads, a-tiflau.adb,\n\ta-tiflau.ads, a-tiflio.adb, a-tiflio.adb, a-tiflio.ads, a-tigeau.ads,\n\ta-tiinau.adb, a-tiinau.ads, a-tiinio.adb, a-tiinio.ads, a-timoio.adb,\n\ta-timoio.ads, a-titest.adb, a-titest.ads, a-wtcoio.adb, a-wtdeau.adb,\n\ta-wtdeau.ads, a-wtdeio.adb, a-wtdeio.ads, a-wtedit.adb, a-wtedit.adb,\n\ta-wtedit.ads, a-wtenau.adb, a-wtenau.ads, a-wtenau.ads, a-wtenio.adb,\n\ta-wtenio.ads, a-wtfiio.adb, a-wtfiio.ads, a-wtflau.adb, a-wtflau.ads,\n\ta-wtflio.adb, a-wtflio.adb, a-wtflio.ads, a-wtgeau.ads, a-wtinau.adb,\n\ta-wtinau.ads, a-wtinio.adb, a-wtinio.ads, a-wtmoau.adb, a-wtmoau.ads,\n\ta-wtmoio.adb, a-wtmoio.ads, xref_lib.adb, xref_lib.ads, xr_tabls.adb,\n\tg-boubuf.adb, g-boubuf.ads, g-cgideb.adb, g-io.adb, gnatdll.adb,\n\tg-pehage.adb, i-c.ads, g-spitbo.adb, g-spitbo.ads, mdll.adb,\n\tmlib-fil.adb, mlib-utl.adb, mlib-utl.ads, prj-env.adb, prj-tree.adb,\n\tprj-tree.ads, prj-util.adb, s-arit64.adb, s-asthan.ads, s-auxdec.adb,\n\ts-auxdec.ads, s-chepoo.ads, s-direio.adb, s-direio.ads, s-errrep.adb,\n\ts-errrep.ads, s-fileio.adb, s-fileio.ads, s-finroo.adb, s-finroo.ads,\n\ts-gloloc.adb, s-gloloc.ads, s-io.adb, s-io.ads, s-rpc.adb,\n\ts-rpc.ads, s-shasto.ads, s-sequio.adb, s-stopoo.ads, s-stratt.adb,\n\ts-stratt.ads, s-taasde.adb, s-taasde.ads, s-tadert.adb, s-sequio.ads,\n\ts-taskin.adb, s-tasque.adb, s-tasque.ads, s-wchjis.ads, makegpr.adb,\n\ta-coinve.adb, a-cidlli.adb, eval_fat.adb, exp_dist.ads, exp_smem.adb,\n\tfmap.adb, g-dyntab.ads, g-expect.adb, lib-xref.ads, osint.adb,\n\tpar-load.adb, restrict.adb, sinput-c.ads, a-cdlili.adb,\n\tsystem-vms.ads, system-vms-zcx.ads, system-vms_64.ads: Minor\n\treformatting.\n\nFrom-SVN: r111023", "tree": {"sha": "34addcebd3391924517515b8f61a38087d82089e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34addcebd3391924517515b8f61a38087d82089e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/comments", "author": null, "committer": null, "parents": [{"sha": "85a40c43fb6f09054f535bae43e8622c971bcc48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85a40c43fb6f09054f535bae43e8622c971bcc48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85a40c43fb6f09054f535bae43e8622c971bcc48"}], "stats": {"total": 3043, "additions": 1492, "deletions": 1551}, "files": [{"sha": "af83a6db73b480555a608cb650133c101ba25be7", "filename": "gcc/ada/a-cdlili.adb", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-cdlili.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-cdlili.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cdlili.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -499,20 +499,15 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n       procedure Sort (Container : in out List) is\n \n-         procedure Partition\n-           (Pivot : in Node_Access;\n-            Back  : in Node_Access);\n+         procedure Partition (Pivot : Node_Access; Back : Node_Access);\n \n          procedure Sort (Front, Back : Node_Access);\n \n          ---------------\n          -- Partition --\n          ---------------\n \n-         procedure Partition\n-           (Pivot : Node_Access;\n-            Back  : Node_Access)\n-         is\n+         procedure Partition (Pivot : Node_Access; Back : Node_Access) is\n             Node : Node_Access := Pivot.Next;\n \n          begin\n@@ -948,7 +943,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n    procedure Query_Element\n      (Position : Cursor;\n-      Process  : not null access procedure (Element : in Element_Type))\n+      Process  : not null access procedure (Element : Element_Type))\n    is\n    begin\n       if Position.Node = null then"}, {"sha": "0870512d49e7ef496dc3406b27dd077f21dd5c96", "filename": "gcc/ada/a-cgaaso.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-cgaaso.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-cgaaso.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cgaaso.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -40,6 +40,6 @@ generic\n    with procedure Swap (Left, Right : Index_Type) is <>;\n \n procedure Ada.Containers.Generic_Anonymous_Array_Sort\n-  (First, Last : in Index_Type'Base);\n+  (First, Last : Index_Type'Base);\n \n pragma Pure (Ada.Containers.Generic_Anonymous_Array_Sort);"}, {"sha": "f34c9e529869655f9d0db2a5120851b509507837", "filename": "gcc/ada/a-cidlli.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-cidlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-cidlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cidlli.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -789,7 +789,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n    procedure Iterate\n      (Container : List;\n-      Process   : not null access procedure (Position : in Cursor))\n+      Process   : not null access procedure (Position : Cursor))\n    is\n       C : List renames Container'Unrestricted_Access.all;\n       B : Natural renames C.Busy;\n@@ -969,7 +969,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n    procedure Query_Element\n      (Position : Cursor;\n-      Process  : not null access procedure (Element : in Element_Type))\n+      Process  : not null access procedure (Element : Element_Type))\n    is\n    begin\n       if Position.Node = null then\n@@ -1233,7 +1233,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n    procedure Reverse_Iterate\n      (Container : List;\n-      Process   : not null access procedure (Position : in Cursor))\n+      Process   : not null access procedure (Position : Cursor))\n    is\n       C : List renames Container'Unrestricted_Access.all;\n       B : Natural renames C.Busy;"}, {"sha": "2252f78017aae5951b2b7f49187d971cd4cf9e35", "filename": "gcc/ada/a-coinve.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-coinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-coinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinve.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -1620,7 +1620,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n    procedure Iterate\n      (Container : Vector;\n-      Process   : not null access procedure (Position : in Cursor))\n+      Process   : not null access procedure (Position : Cursor))\n    is\n       V : Vector renames Container'Unrestricted_Access.all;\n       B : Natural renames V.Busy;\n@@ -1811,7 +1811,7 @@ package body Ada.Containers.Indefinite_Vectors is\n    procedure Query_Element\n      (Container : Vector;\n       Index     : Index_Type;\n-      Process   : not null access procedure (Element : in Element_Type))\n+      Process   : not null access procedure (Element : Element_Type))\n    is\n       V : Vector renames Container'Unrestricted_Access.all;\n       B : Natural renames V.Busy;\n@@ -1844,7 +1844,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n    procedure Query_Element\n      (Position : Cursor;\n-      Process  : not null access procedure (Element : in Element_Type))\n+      Process  : not null access procedure (Element : Element_Type))\n    is\n    begin\n       if Position.Container = null then\n@@ -2189,7 +2189,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n    procedure Reverse_Iterate\n      (Container : Vector;\n-      Process   : not null access procedure (Position : in Cursor))\n+      Process   : not null access procedure (Position : Cursor))\n    is\n       V : Vector renames Container'Unrestricted_Access.all;\n       B : Natural renames V.Busy;"}, {"sha": "7412a40f119dcc170482a91eaa3d66fcb0059a0c", "filename": "gcc/ada/a-colien.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-colien.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-colien.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-colien.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -51,7 +51,7 @@ package body Ada.Command_Line.Environment is\n    -- Environment_Value --\n    -----------------------\n \n-   function Environment_Value (Number : in Positive) return String is\n+   function Environment_Value (Number : Positive) return String is\n       procedure Fill_Env (E : System.Address; Env_Num : Integer);\n       pragma Import (C, Fill_Env, \"__gnat_fill_env\");\n "}, {"sha": "fb6b94791e02ace1ef424b3c03936847db2367d9", "filename": "gcc/ada/a-colien.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-colien.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-colien.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-colien.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,7 +45,7 @@ package Ada.Command_Line.Environment is\n    --  variables in the environment of the program invoking the function.\n    --  Otherwise it returns 0.  And that's a lot of environment.\n \n-   function Environment_Value (Number : in Positive) return String;\n+   function Environment_Value (Number : Positive) return String;\n    --  If the external execution environment supports passing the environment\n    --  to a program, then Environment_Value returns an implementation-defined\n    --  value corresponding to the value at relative position Number. If Number"}, {"sha": "0e283fcb82a0b5794b1d938ae38d61ecdc16b287", "filename": "gcc/ada/a-colire.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-colire.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-colire.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-colire.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1999-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -60,7 +60,7 @@ package body Ada.Command_Line.Remove is\n    -- Remove_Argument --\n    ---------------------\n \n-   procedure Remove_Argument (Number : in Positive) is\n+   procedure Remove_Argument (Number : Positive) is\n    begin\n       Initialize;\n "}, {"sha": "6a826bc406ad363da8963d8577f9b13282dfe741", "filename": "gcc/ada/a-colire.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-colire.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-colire.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-colire.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,7 +43,7 @@\n package Ada.Command_Line.Remove is\n    pragma Preelaborate;\n \n-   procedure Remove_Argument (Number : in Positive);\n+   procedure Remove_Argument (Number : Positive);\n    --  Removes the argument identified by Number, which must be in the\n    --  range 1 .. Argument_Count (i.e. an in range argument number which\n    --  reflects removals). If Number is out of range Constraint_Error"}, {"sha": "325c46df4f8f8e90dc071b985808592ffc2149dc", "filename": "gcc/ada/a-comlin.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-comlin.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -57,7 +57,7 @@ package body Ada.Command_Line is\n    -- Argument --\n    --------------\n \n-   function Argument (Number : in Positive) return String is\n+   function Argument (Number : Positive) return String is\n       Num : Positive;\n \n    begin"}, {"sha": "274db5ae17feeee02aa8ab7b8f15044d3ab8179c", "filename": "gcc/ada/a-decima.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-decima.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-decima.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-decima.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,8 +38,8 @@ package body Ada.Decimal is\n    ------------\n \n    procedure Divide\n-     (Dividend  : in Dividend_Type;\n-      Divisor   : in Divisor_Type;\n+     (Dividend  : Dividend_Type;\n+      Divisor   : Divisor_Type;\n       Quotient  : out Quotient_Type;\n       Remainder : out Remainder_Type)\n    is\n@@ -48,8 +48,8 @@ package body Ada.Decimal is\n       --  not have convention Intrinsic.\n \n       procedure Divide\n-        (Dividend  : in Dividend_Type;\n-         Divisor   : in Divisor_Type;\n+        (Dividend  : Dividend_Type;\n+         Divisor   : Divisor_Type;\n          Quotient  : out Quotient_Type;\n          Remainder : out Remainder_Type);\n "}, {"sha": "5ce1a4b0727d08f0863b92ec12f9b9128a0f70b3", "filename": "gcc/ada/a-decima.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-decima.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-decima.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-decima.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -58,8 +58,8 @@ package Ada.Decimal is\n       type Remainder_Type is delta <> digits <>;\n \n    procedure Divide\n-     (Dividend  : in Dividend_Type;\n-      Divisor   : in Divisor_Type;\n+     (Dividend  : Dividend_Type;\n+      Divisor   : Divisor_Type;\n       Quotient  : out Quotient_Type;\n       Remainder : out Remainder_Type);\n "}, {"sha": "5674339e156e9abd3bb469960c8c8cbc31726138", "filename": "gcc/ada/a-direio.adb", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-direio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-direio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -83,9 +83,9 @@ package body Ada.Direct_IO is\n \n    procedure Create\n      (File : in out File_Type;\n-      Mode : in File_Mode := Inout_File;\n-      Name : in String := \"\";\n-      Form : in String := \"\")\n+      Mode : File_Mode := Inout_File;\n+      Name : String := \"\";\n+      Form : String := \"\")\n    is\n    begin\n       DIO.Create (FP (File), To_FCB (Mode), Name, Form);\n@@ -105,7 +105,7 @@ package body Ada.Direct_IO is\n    -- End_Of_File --\n    -----------------\n \n-   function End_Of_File (File : in File_Type) return Boolean is\n+   function End_Of_File (File : File_Type) return Boolean is\n    begin\n       return DIO.End_Of_File (FP (File));\n    end End_Of_File;\n@@ -114,7 +114,7 @@ package body Ada.Direct_IO is\n    -- Form --\n    ----------\n \n-   function Form (File : in File_Type) return String is\n+   function Form (File : File_Type) return String is\n    begin\n       return FIO.Form (AP (File));\n    end Form;\n@@ -123,7 +123,7 @@ package body Ada.Direct_IO is\n    -- Index --\n    -----------\n \n-   function Index (File : in File_Type) return Positive_Count is\n+   function Index (File : File_Type) return Positive_Count is\n    begin\n       return Positive_Count (DIO.Index (FP (File)));\n    end Index;\n@@ -132,7 +132,7 @@ package body Ada.Direct_IO is\n    -- Is_Open --\n    -------------\n \n-   function Is_Open (File : in File_Type) return Boolean is\n+   function Is_Open (File : File_Type) return Boolean is\n    begin\n       return FIO.Is_Open (AP (File));\n    end Is_Open;\n@@ -141,7 +141,7 @@ package body Ada.Direct_IO is\n    -- Mode --\n    ----------\n \n-   function Mode (File : in File_Type) return File_Mode is\n+   function Mode (File : File_Type) return File_Mode is\n    begin\n       return To_DIO (FIO.Mode (AP (File)));\n    end Mode;\n@@ -150,7 +150,7 @@ package body Ada.Direct_IO is\n    -- Name --\n    ----------\n \n-   function Name (File : in File_Type) return String is\n+   function Name (File : File_Type) return String is\n    begin\n       return FIO.Name (AP (File));\n    end Name;\n@@ -161,9 +161,9 @@ package body Ada.Direct_IO is\n \n    procedure Open\n      (File : in out File_Type;\n-      Mode : in File_Mode;\n-      Name : in String;\n-      Form : in String := \"\")\n+      Mode : File_Mode;\n+      Name : String;\n+      Form : String := \"\")\n    is\n    begin\n       DIO.Open (FP (File), To_FCB (Mode), Name, Form);\n@@ -175,9 +175,9 @@ package body Ada.Direct_IO is\n    ----------\n \n    procedure Read\n-     (File : in File_Type;\n+     (File : File_Type;\n       Item : out Element_Type;\n-      From : in Positive_Count)\n+      From : Positive_Count)\n    is\n    begin\n       --  For a non-constrained variant record type, we read into an\n@@ -207,7 +207,7 @@ package body Ada.Direct_IO is\n       end if;\n    end Read;\n \n-   procedure Read (File : in File_Type; Item : out Element_Type) is\n+   procedure Read (File : File_Type; Item : out Element_Type) is\n    begin\n       --  Same processing for unconstrained case as above\n \n@@ -235,7 +235,7 @@ package body Ada.Direct_IO is\n    -- Reset --\n    -----------\n \n-   procedure Reset (File : in out File_Type; Mode : in File_Mode) is\n+   procedure Reset (File : in out File_Type; Mode : File_Mode) is\n    begin\n       DIO.Reset (FP (File), To_FCB (Mode));\n    end Reset;\n@@ -249,7 +249,7 @@ package body Ada.Direct_IO is\n    -- Set_Index --\n    ---------------\n \n-   procedure Set_Index (File : in File_Type; To : in Positive_Count) is\n+   procedure Set_Index (File : File_Type; To : Positive_Count) is\n    begin\n       DIO.Set_Index (FP (File), DPCount (To));\n    end Set_Index;\n@@ -258,7 +258,7 @@ package body Ada.Direct_IO is\n    -- Size --\n    ----------\n \n-   function Size (File : in File_Type) return Count is\n+   function Size (File : File_Type) return Count is\n    begin\n       return Count (DIO.Size (FP (File)));\n    end Size;\n@@ -268,16 +268,16 @@ package body Ada.Direct_IO is\n    -----------\n \n    procedure Write\n-     (File : in File_Type;\n-      Item : in Element_Type;\n-      To   : in Positive_Count)\n+     (File : File_Type;\n+      Item : Element_Type;\n+      To   : Positive_Count)\n    is\n    begin\n       DIO.Set_Index (FP (File), DPCount (To));\n       DIO.Write (FP (File), Item'Address, Item'Size / SU, Zeroes);\n    end Write;\n \n-   procedure Write (File : in File_Type; Item : in Element_Type) is\n+   procedure Write (File : File_Type; Item : Element_Type) is\n    begin\n       DIO.Write (FP (File), Item'Address, Item'Size / SU, Zeroes);\n    end Write;"}, {"sha": "29aef9cc0494a5567016dc22508c06c62e6fe3ae", "filename": "gcc/ada/a-direio.ads", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-direio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-direio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -71,55 +71,55 @@ package Ada.Direct_IO is\n \n    procedure Create\n      (File : in out File_Type;\n-      Mode : in File_Mode := Inout_File;\n-      Name : in String := \"\";\n-      Form : in String := \"\");\n+      Mode : File_Mode := Inout_File;\n+      Name : String := \"\";\n+      Form : String := \"\");\n \n    procedure Open\n      (File : in out File_Type;\n-      Mode : in File_Mode;\n-      Name : in String;\n-      Form : in String := \"\");\n+      Mode : File_Mode;\n+      Name : String;\n+      Form : String := \"\");\n \n    procedure Close  (File : in out File_Type);\n    procedure Delete (File : in out File_Type);\n-   procedure Reset  (File : in out File_Type; Mode : in File_Mode);\n+   procedure Reset  (File : in out File_Type; Mode : File_Mode);\n    procedure Reset  (File : in out File_Type);\n \n-   function Mode (File : in File_Type) return File_Mode;\n-   function Name (File : in File_Type) return String;\n-   function Form (File : in File_Type) return String;\n+   function Mode (File : File_Type) return File_Mode;\n+   function Name (File : File_Type) return String;\n+   function Form (File : File_Type) return String;\n \n-   function Is_Open (File : in File_Type) return Boolean;\n+   function Is_Open (File : File_Type) return Boolean;\n \n    ---------------------------------\n    -- Input and Output Operations --\n    ---------------------------------\n \n    procedure Read\n-     (File : in File_Type;\n+     (File : File_Type;\n       Item : out Element_Type;\n-      From : in Positive_Count);\n+      From : Positive_Count);\n \n    procedure Read\n-     (File : in File_Type;\n+     (File : File_Type;\n       Item : out Element_Type);\n \n    procedure Write\n-     (File : in File_Type;\n-      Item : in Element_Type;\n-      To   : in Positive_Count);\n+     (File : File_Type;\n+      Item : Element_Type;\n+      To   : Positive_Count);\n \n    procedure Write\n-     (File : in File_Type;\n-      Item : in Element_Type);\n+     (File : File_Type;\n+      Item : Element_Type);\n \n-   procedure Set_Index (File : in File_Type; To : in Positive_Count);\n+   procedure Set_Index (File : File_Type; To : Positive_Count);\n \n-   function Index (File : in File_Type) return Positive_Count;\n-   function Size  (File : in File_Type) return Count;\n+   function Index (File : File_Type) return Positive_Count;\n+   function Size  (File : File_Type) return Count;\n \n-   function End_Of_File (File : in File_Type) return Boolean;\n+   function End_Of_File (File : File_Type) return Boolean;\n \n    ----------------\n    -- Exceptions --"}, {"sha": "044f748fb6a81acf1f81660110852d037bd66f90", "filename": "gcc/ada/a-ngcoty.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ngcoty.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ngcoty.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngcoty.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -647,12 +647,12 @@ package body Ada.Numerics.Generic_Complex_Types is\n    -- Set_Im --\n    ------------\n \n-   procedure Set_Im (X : in out Complex; Im : in Real'Base) is\n+   procedure Set_Im (X : in out Complex; Im : Real'Base) is\n    begin\n       X.Im := Im;\n    end Set_Im;\n \n-   procedure Set_Im (X : out Imaginary; Im : in Real'Base) is\n+   procedure Set_Im (X : out Imaginary; Im : Real'Base) is\n    begin\n       X := Imaginary (Im);\n    end Set_Im;\n@@ -661,7 +661,7 @@ package body Ada.Numerics.Generic_Complex_Types is\n    -- Set_Re --\n    ------------\n \n-   procedure Set_Re (X : in out Complex; Re : in Real'Base) is\n+   procedure Set_Re (X : in out Complex; Re : Real'Base) is\n    begin\n       X.Re := Re;\n    end Set_Re;"}, {"sha": "33e818a68241595f24541f8890eb5b6d9381d5c4", "filename": "gcc/ada/a-ngcoty.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ngcoty.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ngcoty.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngcoty.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -56,9 +56,9 @@ package Ada.Numerics.Generic_Complex_Types is\n    function Im (X : Complex)   return Real'Base;\n    function Im (X : Imaginary) return Real'Base;\n \n-   procedure Set_Re (X  : in out Complex;   Re : in Real'Base);\n-   procedure Set_Im (X  : in out Complex;   Im : in Real'Base);\n-   procedure Set_Im (X  :    out Imaginary; Im : in Real'Base);\n+   procedure Set_Re (X : in out Complex; Re : Real'Base);\n+   procedure Set_Im (X : in out Complex; Im : Real'Base);\n+   procedure Set_Im (X : out Imaginary;  Im : Real'Base);\n \n    function Compose_From_Cartesian (Re, Im : Real'Base) return Complex;\n    function Compose_From_Cartesian (Re     : Real'Base) return Complex;"}, {"sha": "ae23f459381febdda12575b380c523b06982d350", "filename": "gcc/ada/a-nuflra.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-nuflra.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-nuflra.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nuflra.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -55,7 +55,7 @@ package body Ada.Numerics.Float_Random is\n    -- Local Subprograms --\n    -----------------------\n \n-   procedure Euclid (P, Q : in Int; X, Y : out Int; GCD : out Int);\n+   procedure Euclid (P, Q : Int; X, Y : out Int; GCD : out Int);\n \n    function  Euclid (P, Q : Int) return Int;\n \n@@ -65,24 +65,24 @@ package body Ada.Numerics.Float_Random is\n    -- Euclid --\n    ------------\n \n-   procedure Euclid (P, Q : in Int; X, Y : out Int; GCD : out Int) is\n+   procedure Euclid (P, Q : Int; X, Y : out Int; GCD : out Int) is\n \n       XT : Int := 1;\n       YT : Int := 0;\n \n       procedure Recur\n-        (P,  Q  : in Int;                 --  a (i-1), a (i)\n-         X,  Y  : in Int;                 --  x (i),   y (i)\n+        (P,  Q  : Int;                    --  a (i-1), a (i)\n+         X,  Y  : Int;                    --  x (i),   y (i)\n          XP, YP : in out Int;             --  x (i-1), y (i-1)\n          GCD    : out Int);\n \n       procedure Recur\n-        (P,  Q  : in Int;\n-         X,  Y  : in Int;\n+        (P,  Q  : Int;\n+         X,  Y  : Int;\n          XP, YP : in out Int;\n          GCD    : out Int)\n       is\n-         Quo : Int  := P / Q;             --  q <-- |_ a (i-1) / a (i) _|\n+         Quo : Int := P / Q;              --  q <-- |_ a (i-1) / a (i) _|\n          XT  : Int := X;                  --  x (i)\n          YT  : Int := Y;                  --  y (i)\n \n@@ -156,7 +156,7 @@ package body Ada.Numerics.Float_Random is\n \n    --  Version that works from given initiator value\n \n-   procedure Reset (Gen : in Generator; Initiator : in Integer) is\n+   procedure Reset (Gen : Generator; Initiator : Integer) is\n       Genp   : constant Pointer := Gen.Gen_State'Unrestricted_Access;\n       X1, X2 : Int;\n \n@@ -227,7 +227,7 @@ package body Ada.Numerics.Float_Random is\n    -- Save --\n    ----------\n \n-   procedure Save (Gen : in Generator; To_State : out State) is\n+   procedure Save (Gen : Generator; To_State : out State) is\n    begin\n       To_State := Gen.Gen_State;\n    end Save;"}, {"sha": "8d3f097aa2af53dc7f97549645146dba0d66f83c", "filename": "gcc/ada/a-nuflra.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-nuflra.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-nuflra.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nuflra.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -69,7 +69,7 @@ package Ada.Numerics.Float_Random is\n \n    Max_Image_Width : constant := 80;\n \n-   function Image (Of_State :    State)  return String;\n+   function Image (Of_State    : State)  return String;\n    function Value (Coded_State : String) return State;\n \n private"}, {"sha": "6fea01ef88ca64ce456183d1829b706e1aef608a", "filename": "gcc/ada/a-sequio.adb", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-sequio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-sequio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-sequio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -76,9 +76,9 @@ package body Ada.Sequential_IO is\n \n    procedure Create\n      (File : in out File_Type;\n-      Mode : in File_Mode := Out_File;\n-      Name : in String := \"\";\n-      Form : in String := \"\")\n+      Mode : File_Mode := Out_File;\n+      Name : String := \"\";\n+      Form : String := \"\")\n    is\n    begin\n       SIO.Create (FP (File), To_FCB (Mode), Name, Form);\n@@ -97,7 +97,7 @@ package body Ada.Sequential_IO is\n    -- End_Of_File --\n    -----------------\n \n-   function End_Of_File (File : in File_Type) return Boolean is\n+   function End_Of_File (File : File_Type) return Boolean is\n    begin\n       return FIO.End_Of_File (AP (File));\n    end End_Of_File;\n@@ -106,7 +106,7 @@ package body Ada.Sequential_IO is\n    -- Form --\n    ----------\n \n-   function Form (File : in File_Type) return String is\n+   function Form (File : File_Type) return String is\n    begin\n       return FIO.Form (AP (File));\n    end Form;\n@@ -115,7 +115,7 @@ package body Ada.Sequential_IO is\n    -- Is_Open --\n    -------------\n \n-   function Is_Open (File : in File_Type) return Boolean is\n+   function Is_Open (File : File_Type) return Boolean is\n    begin\n       return FIO.Is_Open (AP (File));\n    end Is_Open;\n@@ -124,7 +124,7 @@ package body Ada.Sequential_IO is\n    -- Mode --\n    ----------\n \n-   function Mode (File : in File_Type) return File_Mode is\n+   function Mode (File : File_Type) return File_Mode is\n    begin\n       return To_SIO (FIO.Mode (AP (File)));\n    end Mode;\n@@ -133,7 +133,7 @@ package body Ada.Sequential_IO is\n    -- Name --\n    ----------\n \n-   function Name (File : in File_Type) return String is\n+   function Name (File : File_Type) return String is\n    begin\n       return FIO.Name (AP (File));\n    end Name;\n@@ -144,9 +144,9 @@ package body Ada.Sequential_IO is\n \n    procedure Open\n      (File : in out File_Type;\n-      Mode : in File_Mode;\n-      Name : in String;\n-      Form : in String := \"\")\n+      Mode : File_Mode;\n+      Name : String;\n+      Form : String := \"\")\n    is\n    begin\n       SIO.Open (FP (File), To_FCB (Mode), Name, Form);\n@@ -156,7 +156,7 @@ package body Ada.Sequential_IO is\n    -- Read --\n    ----------\n \n-   procedure Read (File : in File_Type; Item : out Element_Type) is\n+   procedure Read (File : File_Type; Item : out Element_Type) is\n       Siz  : constant size_t := (Item'Size + SU - 1) / SU;\n       Rsiz : size_t;\n \n@@ -238,7 +238,7 @@ package body Ada.Sequential_IO is\n    -- Reset --\n    -----------\n \n-   procedure Reset (File : in out File_Type; Mode : in File_Mode) is\n+   procedure Reset (File : in out File_Type; Mode : File_Mode) is\n    begin\n       FIO.Reset (AP (File), To_FCB (Mode));\n    end Reset;\n@@ -252,7 +252,7 @@ package body Ada.Sequential_IO is\n    -- Write --\n    -----------\n \n-   procedure Write (File : in File_Type; Item : in Element_Type) is\n+   procedure Write (File : File_Type; Item : Element_Type) is\n       Siz : constant size_t := (Item'Size + SU - 1) / SU;\n \n    begin"}, {"sha": "a811d567b236390dc512dec225747525c27b38c1", "filename": "gcc/ada/a-sequio.ads", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-sequio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-sequio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-sequio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -67,35 +67,35 @@ package Ada.Sequential_IO is\n \n    procedure Create\n      (File : in out File_Type;\n-      Mode : in File_Mode := Out_File;\n-      Name : in String := \"\";\n-      Form : in String := \"\");\n+      Mode : File_Mode := Out_File;\n+      Name : String := \"\";\n+      Form : String := \"\");\n \n    procedure Open\n      (File : in out File_Type;\n-      Mode : in File_Mode;\n-      Name : in String;\n-      Form : in String := \"\");\n+      Mode : File_Mode;\n+      Name : String;\n+      Form : String := \"\");\n \n    procedure Close  (File : in out File_Type);\n    procedure Delete (File : in out File_Type);\n-   procedure Reset  (File : in out File_Type; Mode : in File_Mode);\n+   procedure Reset  (File : in out File_Type; Mode : File_Mode);\n    procedure Reset  (File : in out File_Type);\n \n-   function Mode    (File : in File_Type) return File_Mode;\n-   function Name    (File : in File_Type) return String;\n-   function Form    (File : in File_Type) return String;\n+   function Mode    (File : File_Type) return File_Mode;\n+   function Name    (File : File_Type) return String;\n+   function Form    (File : File_Type) return String;\n \n-   function Is_Open (File : in File_Type) return Boolean;\n+   function Is_Open (File : File_Type) return Boolean;\n \n    ---------------------------------\n    -- Input and output operations --\n    ---------------------------------\n \n-   procedure Read  (File : in File_Type; Item : out Element_Type);\n-   procedure Write (File : in File_Type; Item : in Element_Type);\n+   procedure Read  (File : File_Type; Item : out Element_Type);\n+   procedure Write (File : File_Type; Item : Element_Type);\n \n-   function End_Of_File (File : in File_Type) return Boolean;\n+   function End_Of_File (File : File_Type) return Boolean;\n \n    ----------------\n    -- Exceptions --"}, {"sha": "e5268c803999ba31ff3e4339707351bdaae80c5a", "filename": "gcc/ada/a-storio.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-storio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-storio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-storio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -34,9 +34,9 @@ package Ada.Storage_IO is\n    -- Input and Output Operations --\n    ---------------------------------\n \n-   procedure Read  (Buffer : in  Buffer_Type; Item : out Element_Type);\n+   procedure Read (Buffer : Buffer_Type; Item : out Element_Type);\n \n-   procedure Write (Buffer : out Buffer_Type; Item : in  Element_Type);\n+   procedure Write (Buffer : out Buffer_Type; Item : Element_Type);\n \n    ----------------\n    -- Exceptions --"}, {"sha": "ce3c335e71fc190e7c1b3e336d8cbd5163741b6d", "filename": "gcc/ada/a-stream.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-stream.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-stream.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stream.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -60,7 +60,7 @@ package Ada.Streams is\n \n    procedure Write\n      (Stream : in out Root_Stream_Type;\n-      Item   : in Stream_Element_Array)\n+      Item   : Stream_Element_Array)\n    is abstract;\n \n private"}, {"sha": "7091d5d9f7b3bad3f3f753e696e5e8a1e3b6cd4e", "filename": "gcc/ada/a-ststio.adb", "status": "modified", "additions": 35, "deletions": 32, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ststio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ststio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ststio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,11 +31,13 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Interfaces.C_Streams;      use Interfaces.C_Streams;\n-with System;                    use System;\n+with Interfaces.C_Streams; use Interfaces.C_Streams;\n+\n+with System;               use System;\n with System.File_IO;\n with System.Soft_Links;\n with System.CRTL;\n+\n with Unchecked_Conversion;\n with Unchecked_Deallocation;\n \n@@ -55,7 +57,7 @@ package body Ada.Streams.Stream_IO is\n    -- Local Subprograms --\n    -----------------------\n \n-   procedure Set_Position (File : in File_Type);\n+   procedure Set_Position (File : File_Type);\n    --  Sets file position pointer according to value of current index\n \n    -------------------\n@@ -64,7 +66,6 @@ package body Ada.Streams.Stream_IO is\n \n    function AFCB_Allocate (Control_Block : Stream_AFCB) return FCB.AFCB_Ptr is\n       pragma Warnings (Off, Control_Block);\n-\n    begin\n       return new Stream_AFCB;\n    end AFCB_Allocate;\n@@ -77,7 +78,6 @@ package body Ada.Streams.Stream_IO is\n \n    procedure AFCB_Close (File : access Stream_AFCB) is\n       pragma Warnings (Off, File);\n-\n    begin\n       null;\n    end AFCB_Close;\n@@ -111,9 +111,9 @@ package body Ada.Streams.Stream_IO is\n \n    procedure Create\n      (File : in out File_Type;\n-      Mode : in File_Mode := Out_File;\n-      Name : in String := \"\";\n-      Form : in String := \"\")\n+      Mode : File_Mode := Out_File;\n+      Name : String := \"\";\n+      Form : String := \"\")\n    is\n       Dummy_File_Control_Block : Stream_AFCB;\n       pragma Warnings (Off, Dummy_File_Control_Block);\n@@ -145,7 +145,7 @@ package body Ada.Streams.Stream_IO is\n    -- End_Of_File --\n    -----------------\n \n-   function End_Of_File (File : in File_Type) return Boolean is\n+   function End_Of_File (File : File_Type) return Boolean is\n    begin\n       FIO.Check_Read_Status (AP (File));\n       return Count (File.Index) > Size (File);\n@@ -164,7 +164,7 @@ package body Ada.Streams.Stream_IO is\n    -- Form --\n    ----------\n \n-   function Form (File : in File_Type) return String is\n+   function Form (File : File_Type) return String is\n    begin\n       return FIO.Form (AP (File));\n    end Form;\n@@ -173,7 +173,7 @@ package body Ada.Streams.Stream_IO is\n    -- Index --\n    -----------\n \n-   function Index (File : in File_Type) return Positive_Count is\n+   function Index (File : File_Type) return Positive_Count is\n    begin\n       FIO.Check_File_Open (AP (File));\n       return Count (File.Index);\n@@ -183,7 +183,7 @@ package body Ada.Streams.Stream_IO is\n    -- Is_Open --\n    -------------\n \n-   function Is_Open (File : in File_Type) return Boolean is\n+   function Is_Open (File : File_Type) return Boolean is\n    begin\n       return FIO.Is_Open (AP (File));\n    end Is_Open;\n@@ -192,7 +192,7 @@ package body Ada.Streams.Stream_IO is\n    -- Mode --\n    ----------\n \n-   function Mode (File : in File_Type) return File_Mode is\n+   function Mode (File : File_Type) return File_Mode is\n    begin\n       return To_SIO (FIO.Mode (AP (File)));\n    end Mode;\n@@ -201,7 +201,7 @@ package body Ada.Streams.Stream_IO is\n    -- Name --\n    ----------\n \n-   function Name (File : in File_Type) return String is\n+   function Name (File : File_Type) return String is\n    begin\n       return FIO.Name (AP (File));\n    end Name;\n@@ -212,9 +212,9 @@ package body Ada.Streams.Stream_IO is\n \n    procedure Open\n      (File : in out File_Type;\n-      Mode : in File_Mode;\n-      Name : in String;\n-      Form : in String := \"\")\n+      Mode : File_Mode;\n+      Name : String;\n+      Form : String := \"\")\n    is\n       Dummy_File_Control_Block : Stream_AFCB;\n       pragma Warnings (Off, Dummy_File_Control_Block);\n@@ -255,18 +255,18 @@ package body Ada.Streams.Stream_IO is\n    ----------\n \n    procedure Read\n-     (File : in File_Type;\n+     (File : File_Type;\n       Item : out Stream_Element_Array;\n       Last : out Stream_Element_Offset;\n-      From : in Positive_Count)\n+      From : Positive_Count)\n    is\n    begin\n       Set_Index (File, From);\n       Read (File, Item, Last);\n    end Read;\n \n    procedure Read\n-     (File : in File_Type;\n+     (File : File_Type;\n       Item : out Stream_Element_Array;\n       Last : out Stream_Element_Offset)\n    is\n@@ -319,7 +319,7 @@ package body Ada.Streams.Stream_IO is\n    -- Reset --\n    -----------\n \n-   procedure Reset (File : in out File_Type; Mode : in File_Mode) is\n+   procedure Reset (File : in out File_Type; Mode : File_Mode) is\n    begin\n       FIO.Check_File_Open (AP (File));\n \n@@ -339,7 +339,7 @@ package body Ada.Streams.Stream_IO is\n    -- Set_Index --\n    ---------------\n \n-   procedure Set_Index (File : in File_Type; To : in Positive_Count) is\n+   procedure Set_Index (File : File_Type; To : Positive_Count) is\n    begin\n       FIO.Check_File_Open (AP (File));\n       File.Index := Count (To);\n@@ -350,7 +350,7 @@ package body Ada.Streams.Stream_IO is\n    -- Set_Mode --\n    --------------\n \n-   procedure Set_Mode (File : in out File_Type; Mode : in File_Mode) is\n+   procedure Set_Mode (File : in out File_Type; Mode : File_Mode) is\n    begin\n       FIO.Check_File_Open (AP (File));\n \n@@ -382,7 +382,7 @@ package body Ada.Streams.Stream_IO is\n    -- Set_Position --\n    ------------------\n \n-   procedure Set_Position (File : in File_Type) is\n+   procedure Set_Position (File : File_Type) is\n       use type System.CRTL.long;\n    begin\n       if fseek (File.Stream,\n@@ -396,7 +396,7 @@ package body Ada.Streams.Stream_IO is\n    -- Size --\n    ----------\n \n-   function Size (File : in File_Type) return Count is\n+   function Size (File : File_Type) return Count is\n    begin\n       FIO.Check_File_Open (AP (File));\n \n@@ -417,7 +417,7 @@ package body Ada.Streams.Stream_IO is\n    -- Stream --\n    ------------\n \n-   function Stream (File : in File_Type) return Stream_Access is\n+   function Stream (File : File_Type) return Stream_Access is\n    begin\n       FIO.Check_File_Open (AP (File));\n       return Stream_Access (File);\n@@ -428,16 +428,19 @@ package body Ada.Streams.Stream_IO is\n    -----------\n \n    procedure Write\n-     (File : in File_Type;\n-      Item : in Stream_Element_Array;\n-      To   : in Positive_Count)\n+     (File : File_Type;\n+      Item : Stream_Element_Array;\n+      To   : Positive_Count)\n    is\n    begin\n       Set_Index (File, To);\n       Write (File, Item);\n    end Write;\n \n-   procedure Write (File : in File_Type; Item : in Stream_Element_Array) is\n+   procedure Write\n+     (File : File_Type;\n+      Item : Stream_Element_Array)\n+   is\n    begin\n       FIO.Check_Write_Status (AP (File));\n \n@@ -474,7 +477,7 @@ package body Ada.Streams.Stream_IO is\n \n    procedure Write\n      (File : in out Stream_AFCB;\n-      Item : in Ada.Streams.Stream_Element_Array)\n+      Item : Ada.Streams.Stream_Element_Array)\n    is\n    begin\n       Write (File'Unchecked_Access, Item);"}, {"sha": "232672985d57f410ffe38abea3062921be866858", "filename": "gcc/ada/a-ststio.ads", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ststio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ststio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ststio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -67,64 +67,64 @@ package Ada.Streams.Stream_IO is\n \n    procedure Create\n      (File : in out File_Type;\n-      Mode : in File_Mode := Out_File;\n-      Name : in String := \"\";\n-      Form : in String := \"\");\n+      Mode : File_Mode := Out_File;\n+      Name : String := \"\";\n+      Form : String := \"\");\n \n    procedure Open\n      (File : in out File_Type;\n-      Mode : in File_Mode;\n-      Name : in String;\n-      Form : in String := \"\");\n+      Mode : File_Mode;\n+      Name : String;\n+      Form : String := \"\");\n \n    procedure Close  (File : in out File_Type);\n    procedure Delete (File : in out File_Type);\n-   procedure Reset  (File : in out File_Type; Mode : in File_Mode);\n+   procedure Reset  (File : in out File_Type; Mode : File_Mode);\n    procedure Reset  (File : in out File_Type);\n \n-   function Mode (File : in File_Type) return File_Mode;\n-   function Name (File : in File_Type) return String;\n-   function Form (File : in File_Type) return String;\n+   function Mode (File : File_Type) return File_Mode;\n+   function Name (File : File_Type) return String;\n+   function Form (File : File_Type) return String;\n \n-   function Is_Open     (File : in File_Type) return Boolean;\n-   function End_Of_File (File : in File_Type) return Boolean;\n+   function Is_Open     (File : File_Type) return Boolean;\n+   function End_Of_File (File : File_Type) return Boolean;\n \n-   function Stream (File : in File_Type) return Stream_Access;\n+   function Stream (File : File_Type) return Stream_Access;\n \n    -----------------------------\n    -- Input-Output Operations --\n    -----------------------------\n \n    procedure Read\n-     (File : in  File_Type;\n+     (File : File_Type;\n       Item : out Stream_Element_Array;\n       Last : out Stream_Element_Offset;\n-      From : in  Positive_Count);\n+      From : Positive_Count);\n \n    procedure Read\n-     (File : in  File_Type;\n+     (File : File_Type;\n       Item : out Stream_Element_Array;\n       Last : out Stream_Element_Offset);\n \n    procedure Write\n-     (File : in File_Type;\n-      Item : in Stream_Element_Array;\n-      To   : in Positive_Count);\n+     (File : File_Type;\n+      Item : Stream_Element_Array;\n+      To   : Positive_Count);\n \n    procedure Write\n-     (File : in File_Type;\n-      Item : in Stream_Element_Array);\n+     (File : File_Type;\n+      Item : Stream_Element_Array);\n \n    ----------------------------------------\n    -- Operations on Position within File --\n    ----------------------------------------\n \n-   procedure Set_Index (File : in File_Type; To : in Positive_Count);\n+   procedure Set_Index (File : File_Type; To : Positive_Count);\n \n-   function Index (File : in File_Type) return Positive_Count;\n-   function Size  (File : in File_Type) return Count;\n+   function Index (File : File_Type) return Positive_Count;\n+   function Size  (File : File_Type) return Count;\n \n-   procedure Set_Mode (File : in out File_Type; Mode : in File_Mode);\n+   procedure Set_Mode (File : in out File_Type; Mode : File_Mode);\n \n    --  Note: The parameter file is IN OUT in the RM, but this is clearly\n    --  an oversight, and was intended to be IN, see AI95-00057.\n@@ -187,7 +187,7 @@ private\n \n    procedure Write\n      (File : in out Stream_AFCB;\n-      Item : in Ada.Streams.Stream_Element_Array);\n+      Item : Ada.Streams.Stream_Element_Array);\n    --  Write operation used when Stream_IO file is treated directly as Stream\n \n end Ada.Streams.Stream_IO;"}, {"sha": "d1f27e5b4b04d1213b5ee882ada2e237a4135ebd", "filename": "gcc/ada/a-stwima.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-stwima.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-stwima.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwima.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -148,7 +148,7 @@ package body Ada.Strings.Wide_Maps is\n \n    --  The sorted, discontiguous form is canonical, so equality can be used\n \n-   function \"=\" (Left, Right : in Wide_Character_Set) return Boolean is\n+   function \"=\" (Left, Right : Wide_Character_Set) return Boolean is\n    begin\n       return Left.Set.all = Right.Set.all;\n    end \"=\";\n@@ -556,7 +556,7 @@ package body Ada.Strings.Wide_Maps is\n    ---------------\n \n    function To_Ranges\n-     (Set :  in Wide_Character_Set) return Wide_Character_Ranges\n+     (Set : Wide_Character_Set) return Wide_Character_Ranges\n    is\n    begin\n       return Set.Set.all;\n@@ -643,7 +643,7 @@ package body Ada.Strings.Wide_Maps is\n          end if;\n       end loop;\n \n-      if Result (N).High < Result (N).Low then\n+      if N > 0 and then Result (N).High < Result (N).Low then\n          N := N - 1;\n       end if;\n "}, {"sha": "812de22b2bd7cc7d9da0b7f4cb1f2c907b4e91a9", "filename": "gcc/ada/a-stwima.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-stwima.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-stwima.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwima.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -69,13 +69,13 @@ package Ada.Strings.Wide_Maps is\n      (Span : Wide_Character_Range) return Wide_Character_Set;\n \n    function To_Ranges\n-     (Set :  in Wide_Character_Set) return Wide_Character_Ranges;\n+     (Set : Wide_Character_Set) return Wide_Character_Ranges;\n \n    ---------------------------------------\n    -- Operations on Wide Character Sets --\n    ---------------------------------------\n \n-   function \"=\" (Left, Right : in Wide_Character_Set) return Boolean;\n+   function \"=\" (Left, Right : Wide_Character_Set) return Boolean;\n \n    function \"not\"\n      (Right : Wide_Character_Set) return Wide_Character_Set;"}, {"sha": "b0c67abba1edc3348ff23535bbf979055356c3c3", "filename": "gcc/ada/a-stwise.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-stwise.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-stwise.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwise.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -130,8 +130,8 @@ package body Ada.Strings.Wide_Search is\n    end Count;\n \n    function Count\n-     (Source : in Wide_String;\n-      Set : Wide_Maps.Wide_Character_Set) return Natural\n+     (Source : Wide_String;\n+      Set    : Wide_Maps.Wide_Character_Set) return Natural\n    is\n       N : Natural := 0;\n "}, {"sha": "1573c6fdfb7de3901ecd1f42d0eddfd5ff4eabab", "filename": "gcc/ada/a-stzmap.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-stzmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-stzmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzmap.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -148,7 +148,7 @@ package body Ada.Strings.Wide_Wide_Maps is\n \n    --  The sorted, discontiguous form is canonical, so equality can be used\n \n-   function \"=\" (Left, Right : in Wide_Wide_Character_Set) return Boolean is\n+   function \"=\" (Left, Right : Wide_Wide_Character_Set) return Boolean is\n    begin\n       return Left.Set.all = Right.Set.all;\n    end \"=\";\n@@ -559,7 +559,7 @@ package body Ada.Strings.Wide_Wide_Maps is\n    ---------------\n \n    function To_Ranges\n-     (Set :  in Wide_Wide_Character_Set) return Wide_Wide_Character_Ranges\n+     (Set : Wide_Wide_Character_Set) return Wide_Wide_Character_Ranges\n    is\n    begin\n       return Set.Set.all;"}, {"sha": "d79b0f9844b3709d8431104f69b807171eadc279", "filename": "gcc/ada/a-stzmap.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-stzmap.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-stzmap.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzmap.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -75,7 +75,7 @@ package Ada.Strings.Wide_Wide_Maps is\n    -- Operations on Wide Character Sets --\n    ---------------------------------------\n \n-   function \"=\" (Left, Right : in Wide_Wide_Character_Set) return Boolean;\n+   function \"=\" (Left, Right : Wide_Wide_Character_Set) return Boolean;\n \n    function \"not\"\n      (Right : Wide_Wide_Character_Set) return Wide_Wide_Character_Set;"}, {"sha": "a07196c3888d0498aac242af9b1d7f52d0be08e5", "filename": "gcc/ada/a-tasatt.ads", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tasatt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tasatt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tasatt.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -39,21 +39,19 @@ with Ada.Task_Identification;\n \n generic\n    type Attribute is private;\n-   Initial_Value : in Attribute;\n+   Initial_Value : Attribute;\n \n package Ada.Task_Attributes is\n \n    type Attribute_Handle is access all Attribute;\n \n    function Value\n      (T    : Ada.Task_Identification.Task_Id :=\n-               Ada.Task_Identification.Current_Task)\n-      return Attribute;\n+               Ada.Task_Identification.Current_Task) return Attribute;\n \n    function Reference\n      (T    : Ada.Task_Identification.Task_Id :=\n-               Ada.Task_Identification.Current_Task)\n-      return Attribute_Handle;\n+               Ada.Task_Identification.Current_Task) return Attribute_Handle;\n \n    procedure Set_Value\n      (Val : Attribute;"}, {"sha": "5f84c7241ef6b71309a5076d398fa1dbb8d4b4f5", "filename": "gcc/ada/a-teioed.adb", "status": "modified", "additions": 42, "deletions": 48, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-teioed.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-teioed.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-teioed.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,7 +42,7 @@ package body Ada.Text_IO.Editing is\n    -- Blank_When_Zero --\n    ---------------------\n \n-   function Blank_When_Zero (Pic : in Picture) return Boolean is\n+   function Blank_When_Zero (Pic : Picture) return Boolean is\n    begin\n       return Pic.Contents.Original_BWZ;\n    end Blank_When_Zero;\n@@ -51,7 +51,7 @@ package body Ada.Text_IO.Editing is\n    -- Expand --\n    ------------\n \n-   function Expand (Picture : in String) return String is\n+   function Expand (Picture : String) return String is\n       Result        : String (1 .. MAX_PICSIZE);\n       Picture_Index : Integer := Picture'First;\n       Result_Index  : Integer := Result'First;\n@@ -124,8 +124,7 @@ package body Ada.Text_IO.Editing is\n       Currency_Symbol     : String;\n       Fill_Character      : Character;\n       Separator_Character : Character;\n-      Radix_Point         : Character)\n-      return                String\n+      Radix_Point         : Character) return String\n    is\n       Attrs    : Number_Attributes := Parse_Number_String (Number);\n       Position : Integer;\n@@ -929,7 +928,7 @@ package body Ada.Text_IO.Editing is\n    --  The following ensures that we return B and not b being careful not\n    --  to break things which expect lower case b for blank. See CXF3A02.\n \n-   function Pic_String (Pic : in Picture) return String is\n+   function Pic_String (Pic : Picture) return String is\n       Temp : String (1 .. Pic.Contents.Picture.Length) :=\n                               Pic.Contents.Picture.Expanded;\n    begin\n@@ -975,7 +974,7 @@ package body Ada.Text_IO.Editing is\n       procedure Debug_Start (Name : String);\n       pragma Inline (Debug_Start);\n \n-      procedure Debug_Integer  (Value : in Integer; S : String);\n+      procedure Debug_Integer  (Value : Integer; S : String);\n       pragma Inline (Debug_Integer);\n \n       procedure Trailing_Currency;\n@@ -1032,7 +1031,7 @@ package body Ada.Text_IO.Editing is\n       -- Debug_Integer --\n       -------------------\n \n-      procedure Debug_Integer  (Value : in Integer; S : String) is\n+      procedure Debug_Integer (Value : Integer; S : String) is\n          use Ada.Text_IO; --  needed for >\n \n       begin\n@@ -2717,9 +2716,8 @@ package body Ada.Text_IO.Editing is\n    ----------------\n \n    function To_Picture\n-     (Pic_String      : in String;\n-      Blank_When_Zero : in Boolean := False)\n-      return            Picture\n+     (Pic_String      : String;\n+      Blank_When_Zero : Boolean := False) return Picture\n    is\n       Result : Picture;\n \n@@ -2745,9 +2743,8 @@ package body Ada.Text_IO.Editing is\n    -----------\n \n    function Valid\n-     (Pic_String      : in String;\n-      Blank_When_Zero : in Boolean := False)\n-      return            Boolean\n+     (Pic_String      : String;\n+      Blank_When_Zero : Boolean := False) return Boolean\n    is\n    begin\n       declare\n@@ -2764,8 +2761,8 @@ package body Ada.Text_IO.Editing is\n \n          --  False only if Blank_When_Zero is True but the pic string has a '*'\n \n-         return not Blank_When_Zero or\n-           Strings_Fixed.Index (Expanded_Pic, \"*\") = 0;\n+         return not Blank_When_Zero\n+           or else Strings_Fixed.Index (Expanded_Pic, \"*\") = 0;\n       end;\n \n    exception\n@@ -2783,13 +2780,12 @@ package body Ada.Text_IO.Editing is\n       -----------\n \n       function Image\n-        (Item       : in Num;\n-         Pic        : in Picture;\n-         Currency   : in String    := Default_Currency;\n-         Fill       : in Character := Default_Fill;\n-         Separator  : in Character := Default_Separator;\n-         Radix_Mark : in Character := Default_Radix_Mark)\n-         return       String\n+        (Item       : Num;\n+         Pic        : Picture;\n+         Currency   : String    := Default_Currency;\n+         Fill       : Character := Default_Fill;\n+         Separator  : Character := Default_Separator;\n+         Radix_Mark : Character := Default_Radix_Mark) return String\n       is\n       begin\n          return Format_Number\n@@ -2802,9 +2798,8 @@ package body Ada.Text_IO.Editing is\n       ------------\n \n       function Length\n-        (Pic      : in Picture;\n-         Currency : in String := Default_Currency)\n-         return     Natural\n+        (Pic      : Picture;\n+         Currency : String := Default_Currency) return Natural\n       is\n          Picstr     : constant String := Pic_String (Pic);\n          V_Adjust   : Integer := 0;\n@@ -2836,26 +2831,26 @@ package body Ada.Text_IO.Editing is\n       ---------\n \n       procedure Put\n-        (File       : in Text_IO.File_Type;\n-         Item       : in Num;\n-         Pic        : in Picture;\n-         Currency   : in String    := Default_Currency;\n-         Fill       : in Character := Default_Fill;\n-         Separator  : in Character := Default_Separator;\n-         Radix_Mark : in Character := Default_Radix_Mark)\n+        (File       : Text_IO.File_Type;\n+         Item       : Num;\n+         Pic        : Picture;\n+         Currency   : String    := Default_Currency;\n+         Fill       : Character := Default_Fill;\n+         Separator  : Character := Default_Separator;\n+         Radix_Mark : Character := Default_Radix_Mark)\n       is\n       begin\n          Text_IO.Put (File, Image (Item, Pic,\n                                    Currency, Fill, Separator, Radix_Mark));\n       end Put;\n \n       procedure Put\n-        (Item       : in Num;\n-         Pic        : in Picture;\n-         Currency   : in String    := Default_Currency;\n-         Fill       : in Character := Default_Fill;\n-         Separator  : in Character := Default_Separator;\n-         Radix_Mark : in Character := Default_Radix_Mark)\n+        (Item       : Num;\n+         Pic        : Picture;\n+         Currency   : String    := Default_Currency;\n+         Fill       : Character := Default_Fill;\n+         Separator  : Character := Default_Separator;\n+         Radix_Mark : Character := Default_Radix_Mark)\n       is\n       begin\n          Text_IO.Put (Image (Item, Pic,\n@@ -2864,12 +2859,12 @@ package body Ada.Text_IO.Editing is\n \n       procedure Put\n         (To         : out String;\n-         Item       : in Num;\n-         Pic        : in Picture;\n-         Currency   : in String    := Default_Currency;\n-         Fill       : in Character := Default_Fill;\n-         Separator  : in Character := Default_Separator;\n-         Radix_Mark : in Character := Default_Radix_Mark)\n+         Item       : Num;\n+         Pic        : Picture;\n+         Currency   : String    := Default_Currency;\n+         Fill       : Character := Default_Fill;\n+         Separator  : Character := Default_Separator;\n+         Radix_Mark : Character := Default_Radix_Mark)\n       is\n          Result : constant String :=\n            Image (Item, Pic, Currency, Fill, Separator, Radix_Mark);\n@@ -2889,9 +2884,8 @@ package body Ada.Text_IO.Editing is\n \n       function Valid\n         (Item     : Num;\n-         Pic      : in Picture;\n-         Currency : in String := Default_Currency)\n-         return     Boolean\n+         Pic      : Picture;\n+         Currency : String := Default_Currency) return Boolean\n       is\n       begin\n          declare"}, {"sha": "b2c34121ada41b9fbedf057d94677b0a7416672a", "filename": "gcc/ada/a-teioed.ads", "status": "modified", "additions": 38, "deletions": 44, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-teioed.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-teioed.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-teioed.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -40,17 +40,15 @@ package Ada.Text_IO.Editing is\n    type Picture is private;\n \n    function Valid\n-     (Pic_String      : in String;\n-      Blank_When_Zero : in Boolean := False)\n-      return            Boolean;\n+     (Pic_String      : String;\n+      Blank_When_Zero : Boolean := False) return Boolean;\n \n    function To_Picture\n-     (Pic_String      : in String;\n-      Blank_When_Zero : in Boolean := False)\n-      return            Picture;\n+     (Pic_String      : String;\n+      Blank_When_Zero : Boolean := False) return Picture;\n \n-   function Pic_String      (Pic : in Picture) return String;\n-   function Blank_When_Zero (Pic : in Picture) return Boolean;\n+   function Pic_String      (Pic : Picture) return String;\n+   function Blank_When_Zero (Pic : Picture) return Boolean;\n \n    Max_Picture_Length : constant := 64;\n \n@@ -63,58 +61,55 @@ package Ada.Text_IO.Editing is\n \n    generic\n       type Num is delta <> digits <>;\n-      Default_Currency   : in String := Editing.Default_Currency;\n-      Default_Fill       : in Character := Editing.Default_Fill;\n-      Default_Separator  : in Character := Editing.Default_Separator;\n-      Default_Radix_Mark : in Character := Editing.Default_Radix_Mark;\n+      Default_Currency   : String := Editing.Default_Currency;\n+      Default_Fill       : Character := Editing.Default_Fill;\n+      Default_Separator  : Character := Editing.Default_Separator;\n+      Default_Radix_Mark : Character := Editing.Default_Radix_Mark;\n \n    package Decimal_Output is\n \n       function Length\n-        (Pic      : in Picture;\n-         Currency : in String := Default_Currency)\n-         return     Natural;\n+        (Pic      : Picture;\n+         Currency : String := Default_Currency) return Natural;\n \n       function Valid\n         (Item     : Num;\n-         Pic      : in Picture;\n-         Currency : in String := Default_Currency)\n-         return     Boolean;\n+         Pic      : Picture;\n+         Currency : String := Default_Currency) return Boolean;\n \n       function Image\n         (Item       : Num;\n-         Pic        : in Picture;\n-         Currency   : in String    := Default_Currency;\n-         Fill       : in Character := Default_Fill;\n-         Separator  : in Character := Default_Separator;\n-         Radix_Mark : in Character := Default_Radix_Mark)\n-         return       String;\n+         Pic        : Picture;\n+         Currency   : String    := Default_Currency;\n+         Fill       : Character := Default_Fill;\n+         Separator  : Character := Default_Separator;\n+         Radix_Mark : Character := Default_Radix_Mark) return String;\n \n       procedure Put\n-        (File       : in Ada.Text_IO.File_Type;\n+        (File       : Ada.Text_IO.File_Type;\n          Item       : Num;\n-         Pic        : in Picture;\n-         Currency   : in String    := Default_Currency;\n-         Fill       : in Character := Default_Fill;\n-         Separator  : in Character := Default_Separator;\n-         Radix_Mark : in Character := Default_Radix_Mark);\n+         Pic        : Picture;\n+         Currency   : String    := Default_Currency;\n+         Fill       : Character := Default_Fill;\n+         Separator  : Character := Default_Separator;\n+         Radix_Mark : Character := Default_Radix_Mark);\n \n       procedure Put\n         (Item       : Num;\n-         Pic        : in Picture;\n-         Currency   : in String    := Default_Currency;\n-         Fill       : in Character := Default_Fill;\n-         Separator  : in Character := Default_Separator;\n-         Radix_Mark : in Character := Default_Radix_Mark);\n+         Pic        : Picture;\n+         Currency   : String    := Default_Currency;\n+         Fill       : Character := Default_Fill;\n+         Separator  : Character := Default_Separator;\n+         Radix_Mark : Character := Default_Radix_Mark);\n \n       procedure Put\n         (To         : out String;\n          Item       : Num;\n-         Pic        : in Picture;\n-         Currency   : in String    := Default_Currency;\n-         Fill       : in Character := Default_Fill;\n-         Separator  : in Character := Default_Separator;\n-         Radix_Mark : in Character := Default_Radix_Mark);\n+         Pic        : Picture;\n+         Currency   : String    := Default_Currency;\n+         Fill       : Character := Default_Fill;\n+         Separator  : Character := Default_Separator;\n+         Radix_Mark : Character := Default_Radix_Mark);\n \n    end Decimal_Output;\n \n@@ -193,10 +188,9 @@ private\n       Currency_Symbol     : String;\n       Fill_Character      : Character;\n       Separator_Character : Character;\n-      Radix_Point         : Character)\n-      return                String;\n+      Radix_Point         : Character) return String;\n    --  Formats number according to Pic\n \n-   function Expand (Picture : in String) return String;\n+   function Expand (Picture : String) return String;\n \n end Ada.Text_IO.Editing;"}, {"sha": "546ba298962ab28b8c39d5b441953803c9ba8a75", "filename": "gcc/ada/a-ticoau.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ticoau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ticoau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ticoau.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,7 +45,7 @@ package body Ada.Text_IO.Complex_Aux is\n    ---------\n \n    procedure Get\n-     (File  : in  File_Type;\n+     (File  : File_Type;\n       ItemR : out Long_Long_Float;\n       ItemI : out Long_Long_Float;\n       Width : Field)\n@@ -96,7 +96,7 @@ package body Ada.Text_IO.Complex_Aux is\n    ----------\n \n    procedure Gets\n-     (From  : in  String;\n+     (From  : String;\n       ItemR : out Long_Long_Float;\n       ItemI : out Long_Long_Float;\n       Last  : out Positive)\n@@ -163,8 +163,8 @@ package body Ada.Text_IO.Complex_Aux is\n      (To    : out String;\n       ItemR : Long_Long_Float;\n       ItemI : Long_Long_Float;\n-      Aft   : in  Field;\n-      Exp   : in  Field)\n+      Aft   : Field;\n+      Exp   : Field)\n    is\n       I_String : String (1 .. 3 * Field'Last);\n       R_String : String (1 .. 3 * Field'Last);"}, {"sha": "acad607caceda611713328e87a94faaa5fa9b62b", "filename": "gcc/ada/a-ticoau.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ticoau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ticoau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ticoau.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,7 +42,7 @@\n package Ada.Text_IO.Complex_Aux is\n \n    procedure Get\n-     (File  : in  File_Type;\n+     (File  : File_Type;\n       ItemR : out Long_Long_Float;\n       ItemI : out Long_Long_Float;\n       Width : Field);"}, {"sha": "90ab4e37882dbbb4fef8a783f8c1abdd13f98dc4", "filename": "gcc/ada/a-ticoio.adb", "status": "modified", "additions": 21, "deletions": 19, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ticoio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ticoio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ticoio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,6 +37,8 @@ with Ada.Text_IO.Complex_Aux;\n \n package body Ada.Text_IO.Complex_IO is\n \n+   use Complex_Types;\n+\n    package Aux renames Ada.Text_IO.Complex_Aux;\n \n    subtype LLF is Long_Long_Float;\n@@ -47,12 +49,12 @@ package body Ada.Text_IO.Complex_IO is\n    ---------\n \n    procedure Get\n-     (File  : in  File_Type;\n+     (File  : File_Type;\n       Item  : out Complex_Types.Complex;\n-      Width : in  Field := 0)\n+      Width : Field := 0)\n    is\n-      Real_Item  : Real'Base;\n-      Imag_Item  : Real'Base;\n+      Real_Item : Real'Base;\n+      Imag_Item : Real'Base;\n \n    begin\n       Aux.Get (File, LLF (Real_Item), LLF (Imag_Item), Width);\n@@ -68,7 +70,7 @@ package body Ada.Text_IO.Complex_IO is\n \n    procedure Get\n      (Item  : out Complex_Types.Complex;\n-      Width : in  Field := 0)\n+      Width : Field := 0)\n    is\n    begin\n       Get (Current_In, Item, Width);\n@@ -79,7 +81,7 @@ package body Ada.Text_IO.Complex_IO is\n    ---------\n \n    procedure Get\n-     (From : in  String;\n+     (From : String;\n       Item : out Complex_Types.Complex;\n       Last : out Positive)\n    is\n@@ -99,11 +101,11 @@ package body Ada.Text_IO.Complex_IO is\n    ---------\n \n    procedure Put\n-     (File : in File_Type;\n-      Item : in Complex_Types.Complex;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+     (File : File_Type;\n+      Item : Complex_Types.Complex;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n    begin\n       Aux.Put (File, LLF (Re (Item)), LLF (Im (Item)), Fore, Aft, Exp);\n@@ -114,10 +116,10 @@ package body Ada.Text_IO.Complex_IO is\n    ---------\n \n    procedure Put\n-     (Item : in Complex_Types.Complex;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+     (Item : Complex_Types.Complex;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n    begin\n       Put (Current_Out, Item, Fore, Aft, Exp);\n@@ -129,9 +131,9 @@ package body Ada.Text_IO.Complex_IO is\n \n    procedure Put\n      (To   : out String;\n-      Item : in  Complex_Types.Complex;\n-      Aft  : in  Field := Default_Aft;\n-      Exp  : in  Field := Default_Exp)\n+      Item : Complex_Types.Complex;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n    begin\n       Aux.Puts (To, LLF (Re (Item)), LLF (Im (Item)), Aft, Exp);"}, {"sha": "5be5f66f074018eccab209bd9d680d83b1819465", "filename": "gcc/ada/a-tideau.adb", "status": "modified", "additions": 27, "deletions": 31, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tideau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tideau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tideau.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -46,10 +46,9 @@ package body Ada.Text_IO.Decimal_Aux is\n    -------------\n \n    function Get_Dec\n-     (File   : in File_Type;\n-      Width  : in Field;\n-      Scale  : Integer)\n-      return   Integer\n+     (File  : File_Type;\n+      Width : Field;\n+      Scale : Integer) return Integer\n    is\n       Buf  : String (1 .. Field'Last);\n       Ptr  : aliased Integer;\n@@ -75,10 +74,9 @@ package body Ada.Text_IO.Decimal_Aux is\n    -------------\n \n    function Get_LLD\n-     (File   : in File_Type;\n-      Width  : in Field;\n-      Scale  : Integer)\n-      return   Long_Long_Integer\n+     (File  : File_Type;\n+      Width : Field;\n+      Scale : Integer) return Long_Long_Integer\n    is\n       Buf  : String (1 .. Field'Last);\n       Ptr  : aliased Integer;\n@@ -104,10 +102,9 @@ package body Ada.Text_IO.Decimal_Aux is\n    --------------\n \n    function Gets_Dec\n-     (From  : in String;\n+     (From  : String;\n       Last  : access Positive;\n-      Scale : Integer)\n-      return  Integer\n+      Scale : Integer) return Integer\n    is\n       Pos  : aliased Integer;\n       Item : Integer;\n@@ -129,10 +126,9 @@ package body Ada.Text_IO.Decimal_Aux is\n    --------------\n \n    function Gets_LLD\n-     (From  : in String;\n+     (From  : String;\n       Last  : access Positive;\n-      Scale : Integer)\n-      return  Long_Long_Integer\n+      Scale : Integer) return Long_Long_Integer\n    is\n       Pos  : aliased Integer;\n       Item : Long_Long_Integer;\n@@ -154,11 +150,11 @@ package body Ada.Text_IO.Decimal_Aux is\n    -------------\n \n    procedure Put_Dec\n-     (File  : in File_Type;\n-      Item  : in Integer;\n-      Fore  : in Field;\n-      Aft   : in Field;\n-      Exp   : in Field;\n+     (File  : File_Type;\n+      Item  : Integer;\n+      Fore  : Field;\n+      Aft   : Field;\n+      Exp   : Field;\n       Scale : Integer)\n    is\n       Buf : String (1 .. Field'Last);\n@@ -174,11 +170,11 @@ package body Ada.Text_IO.Decimal_Aux is\n    -------------\n \n    procedure Put_LLD\n-     (File  : in File_Type;\n-      Item  : in Long_Long_Integer;\n-      Fore  : in Field;\n-      Aft   : in Field;\n-      Exp   : in Field;\n+     (File  : File_Type;\n+      Item  : Long_Long_Integer;\n+      Fore  : Field;\n+      Aft   : Field;\n+      Exp   : Field;\n       Scale : Integer)\n    is\n       Buf : String (1 .. Field'Last);\n@@ -195,9 +191,9 @@ package body Ada.Text_IO.Decimal_Aux is\n \n    procedure Puts_Dec\n      (To    : out String;\n-      Item  : in Integer;\n-      Aft   : in Field;\n-      Exp   : in Field;\n+      Item  : Integer;\n+      Aft   : Field;\n+      Exp   : Field;\n       Scale : Integer)\n    is\n       Buf  : String (1 .. Field'Last);\n@@ -230,9 +226,9 @@ package body Ada.Text_IO.Decimal_Aux is\n \n    procedure Puts_LLD\n      (To    : out String;\n-      Item  : in Long_Long_Integer;\n-      Aft   : in Field;\n-      Exp   : in Field;\n+      Item  : Long_Long_Integer;\n+      Aft   : Field;\n+      Exp   : Field;\n       Scale : Integer)\n    is\n       Buf  : String (1 .. Field'Last);"}, {"sha": "9855e5b423710ff0e9c565369efe3b9ea508df14", "filename": "gcc/ada/a-tideau.ads", "status": "modified", "additions": 25, "deletions": 29, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tideau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tideau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tideau.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,57 +42,53 @@\n private package Ada.Text_IO.Decimal_Aux is\n \n    function Get_Dec\n-     (File  : in File_Type;\n-      Width : in Field;\n-      Scale : Integer)\n-      return  Integer;\n+     (File  : File_Type;\n+      Width : Field;\n+      Scale : Integer) return Integer;\n \n    function Get_LLD\n-     (File  : in File_Type;\n-      Width : in Field;\n-      Scale : Integer)\n-      return  Long_Long_Integer;\n+     (File  : File_Type;\n+      Width : Field;\n+      Scale : Integer) return Long_Long_Integer;\n \n    procedure Put_Dec\n      (File  : File_Type;\n       Item  : Integer;\n-      Fore : in Field;\n-      Aft  : in Field;\n-      Exp  : in Field;\n+      Fore  : Field;\n+      Aft   : Field;\n+      Exp   : Field;\n       Scale : Integer);\n \n    procedure Put_LLD\n-     (File  : in File_Type;\n-      Item  : in Long_Long_Integer;\n-      Fore : in Field;\n-      Aft  : in Field;\n-      Exp  : in Field;\n+     (File  : File_Type;\n+      Item  : Long_Long_Integer;\n+      Fore  : Field;\n+      Aft   : Field;\n+      Exp   : Field;\n       Scale : Integer);\n \n    function Gets_Dec\n-     (From  : in String;\n+     (From  : String;\n       Last  : access Positive;\n-      Scale : Integer)\n-      return  Integer;\n+      Scale : Integer) return Integer;\n \n    function Gets_LLD\n-     (From  : in String;\n+     (From  : String;\n       Last  : access Positive;\n-      Scale : Integer)\n-      return  Long_Long_Integer;\n+      Scale : Integer) return Long_Long_Integer;\n \n    procedure Puts_Dec\n      (To    : out String;\n-      Item  : in Integer;\n-      Aft   : in Field;\n-      Exp   : in Field;\n+      Item  : Integer;\n+      Aft   : Field;\n+      Exp   : Field;\n       Scale : Integer);\n \n    procedure Puts_LLD\n      (To    : out String;\n-      Item  : in Long_Long_Integer;\n-      Aft   : in Field;\n-      Exp   : in Field;\n+      Item  : Long_Long_Integer;\n+      Aft   : Field;\n+      Exp   : Field;\n       Scale : Integer);\n \n end Ada.Text_IO.Decimal_Aux;"}, {"sha": "05d2c03000c9777833d95049d6f9570fc9e8e39e", "filename": "gcc/ada/a-tideio.adb", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tideio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tideio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tideio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,9 +44,9 @@ package body Ada.Text_IO.Decimal_IO is\n    ---------\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n       pragma Unsuppress (Range_Check);\n \n@@ -64,14 +64,14 @@ package body Ada.Text_IO.Decimal_IO is\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n    begin\n       Get (Current_In, Item, Width);\n    end Get;\n \n    procedure Get\n-     (From : in String;\n+     (From : String;\n       Item : out Num;\n       Last : out Positive)\n    is\n@@ -95,11 +95,11 @@ package body Ada.Text_IO.Decimal_IO is\n    ---------\n \n    procedure Put\n-     (File : in File_Type;\n-      Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+     (File : File_Type;\n+      Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n    begin\n       if Num'Size > Integer'Size then\n@@ -113,20 +113,20 @@ package body Ada.Text_IO.Decimal_IO is\n    end Put;\n \n    procedure Put\n-     (Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+     (Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n    begin\n       Put (Current_Out, Item, Fore, Aft, Exp);\n    end Put;\n \n    procedure Put\n      (To   : out String;\n-      Item : in Num;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+      Item : Num;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n    begin\n       if Num'Size > Integer'Size then"}, {"sha": "6e2714131616eb72e3f4f7ba21be265ebbd24c5f", "filename": "gcc/ada/a-tideio.ads", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tideio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tideio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tideio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -51,37 +51,37 @@ package Ada.Text_IO.Decimal_IO is\n    Default_Exp  : Field := 0;\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Put\n-     (File : in File_Type;\n-      Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp);\n+     (File : File_Type;\n+      Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp);\n \n    procedure Put\n-     (Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp);\n+     (Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp);\n \n    procedure Get\n-     (From : in String;\n+     (From : String;\n       Item : out Num;\n       Last : out Positive);\n \n    procedure Put\n      (To   : out String;\n-      Item : in Num;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp);\n+      Item : Num;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp);\n \n private\n    pragma Inline (Get);"}, {"sha": "aadb479ec7e16aed3cd443b1d2d32cbb77316ed8", "filename": "gcc/ada/a-tienau.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tienau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tienau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tienau.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -154,9 +154,9 @@ package body Ada.Text_IO.Enumeration_Aux is\n    ----------\n \n    procedure Puts\n-     (To    : out String;\n-      Item  : in String;\n-      Set   : Type_Set)\n+     (To   : out String;\n+      Item : String;\n+      Set  : Type_Set)\n    is\n       Ptr : Natural;\n "}, {"sha": "777a6f931756e87502a9dce4b56b87f15429d2e7", "filename": "gcc/ada/a-tienau.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tienau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tienau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tienau.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,9 +62,9 @@ private package Ada.Text_IO.Enumeration_Aux is\n    --  using the given Width and Set parameters (Item is always in upper case).\n \n    procedure Puts\n-     (To    : out String;\n-      Item  : in String;\n-      Set   : Type_Set);\n+     (To   : out String;\n+      Item : String;\n+      Set  : Type_Set);\n    --  Stores the enumeration literal image stored in Item to the string To,\n    --  padding with trailing spaces if necessary to fill To. Set is used to\n "}, {"sha": "6ff484dd3fd735d5e950d6a266543f8f1261d296", "filename": "gcc/ada/a-tienio.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tienio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tienio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tienio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,7 +41,7 @@ package body Ada.Text_IO.Enumeration_IO is\n    -- Get --\n    ---------\n \n-   procedure Get (File : in File_Type; Item : out Enum) is\n+   procedure Get (File : File_Type; Item : out Enum) is\n       Buf    : String (1 .. Enum'Width);\n       Buflen : Natural;\n \n@@ -67,7 +67,7 @@ package body Ada.Text_IO.Enumeration_IO is\n    end Get;\n \n    procedure Get\n-     (From : in String;\n+     (From : String;\n       Item : out Enum;\n       Last : out Positive)\n    is\n@@ -92,10 +92,10 @@ package body Ada.Text_IO.Enumeration_IO is\n    ---------\n \n    procedure Put\n-     (File  : in File_Type;\n-      Item  : in Enum;\n-      Width : in Field := Default_Width;\n-      Set   : in Type_Set := Default_Setting)\n+     (File  : File_Type;\n+      Item  : Enum;\n+      Width : Field := Default_Width;\n+      Set   : Type_Set := Default_Setting)\n    is\n       Image : constant String := Enum'Image (Item);\n \n@@ -104,18 +104,18 @@ package body Ada.Text_IO.Enumeration_IO is\n    end Put;\n \n    procedure Put\n-     (Item  : in Enum;\n-      Width : in Field := Default_Width;\n-      Set   : in Type_Set := Default_Setting)\n+     (Item  : Enum;\n+      Width : Field := Default_Width;\n+      Set   : Type_Set := Default_Setting)\n    is\n    begin\n       Put (Current_Out, Item, Width, Set);\n    end Put;\n \n    procedure Put\n      (To   : out String;\n-      Item : in Enum;\n-      Set  : in Type_Set := Default_Setting)\n+      Item : Enum;\n+      Set  : Type_Set := Default_Setting)\n    is\n       Image : constant String := Enum'Image (Item);\n "}, {"sha": "430a9f6647aaf3643940bd75d7fc64d119562e23", "filename": "gcc/ada/a-tienio.ads", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tienio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tienio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tienio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2000 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -50,28 +50,28 @@ package Ada.Text_IO.Enumeration_IO is\n    Default_Width : Field := 0;\n    Default_Setting : Type_Set := Upper_Case;\n \n-   procedure Get (File : in File_Type; Item : out Enum);\n+   procedure Get (File : File_Type; Item : out Enum);\n    procedure Get (Item : out Enum);\n \n    procedure Put\n-     (File  : in File_Type;\n-      Item  : in Enum;\n-      Width : in Field := Default_Width;\n-      Set   : in Type_Set := Default_Setting);\n+     (File  : File_Type;\n+      Item  : Enum;\n+      Width : Field := Default_Width;\n+      Set   : Type_Set := Default_Setting);\n \n    procedure Put\n-     (Item  : in Enum;\n-      Width : in Field := Default_Width;\n-      Set   : in Type_Set := Default_Setting);\n+     (Item  : Enum;\n+      Width : Field := Default_Width;\n+      Set   : Type_Set := Default_Setting);\n \n    procedure Get\n-     (From : in String;\n+     (From : String;\n       Item : out Enum;\n       Last : out Positive);\n \n    procedure Put\n      (To   : out String;\n-      Item : in Enum;\n-      Set  : in Type_Set := Default_Setting);\n+      Item : Enum;\n+      Set  : Type_Set := Default_Setting);\n \n end Ada.Text_IO.Enumeration_IO;"}, {"sha": "26fa95e357337bba546c10175a843fe8aab3c91d", "filename": "gcc/ada/a-tifiio.ads", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tifiio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tifiio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tifiio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -51,37 +51,37 @@ package Ada.Text_IO.Fixed_IO is\n    Default_Exp  : Field := 0;\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Put\n-     (File : in File_Type;\n-      Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp);\n+     (File : File_Type;\n+      Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp);\n \n    procedure Put\n-     (Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp);\n+     (Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp);\n \n    procedure Get\n-     (From : in String;\n+     (From : String;\n       Item : out Num;\n       Last : out Positive);\n \n    procedure Put\n      (To   : out String;\n-      Item : in Num;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp);\n+      Item : Num;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp);\n \n private\n    pragma Inline (Get);"}, {"sha": "d0fe1e153ee7e1a59ae70e109ce92372fc7faee3", "filename": "gcc/ada/a-tiflau.adb", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tiflau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tiflau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiflau.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,8 +33,8 @@\n \n with Ada.Text_IO.Generic_Aux; use Ada.Text_IO.Generic_Aux;\n \n-with System.Img_Real;  use System.Img_Real;\n-with System.Val_Real;  use System.Val_Real;\n+with System.Img_Real; use System.Img_Real;\n+with System.Val_Real; use System.Val_Real;\n \n package body Ada.Text_IO.Float_Aux is\n \n@@ -43,9 +43,9 @@ package body Ada.Text_IO.Float_Aux is\n    ---------\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Long_Long_Float;\n-      Width : in Field)\n+      Width : Field)\n    is\n       Buf  : String (1 .. Field'Last);\n       Stop : Integer := 0;\n@@ -69,7 +69,7 @@ package body Ada.Text_IO.Float_Aux is\n    ----------\n \n    procedure Gets\n-     (From : in String;\n+     (From : String;\n       Item : out Long_Long_Float;\n       Last : out Positive)\n    is\n@@ -90,7 +90,7 @@ package body Ada.Text_IO.Float_Aux is\n    ---------------\n \n    procedure Load_Real\n-     (File : in File_Type;\n+     (File : File_Type;\n       Buf  : out String;\n       Ptr  : in out Natural)\n    is\n@@ -181,11 +181,11 @@ package body Ada.Text_IO.Float_Aux is\n    ---------\n \n    procedure Put\n-     (File : in File_Type;\n-      Item : in Long_Long_Float;\n-      Fore : in Field;\n-      Aft  : in Field;\n-      Exp  : in Field)\n+     (File : File_Type;\n+      Item : Long_Long_Float;\n+      Fore : Field;\n+      Aft  : Field;\n+      Exp  : Field)\n    is\n       Buf : String (1 .. 3 * Field'Last + 2);\n       Ptr : Natural := 0;\n@@ -201,9 +201,9 @@ package body Ada.Text_IO.Float_Aux is\n \n    procedure Puts\n      (To   : out String;\n-      Item : in Long_Long_Float;\n-      Aft  : in Field;\n-      Exp  : in Field)\n+      Item : Long_Long_Float;\n+      Aft  : Field;\n+      Exp  : Field)\n    is\n       Buf : String (1 .. 3 * Field'Last + 2);\n       Ptr : Natural := 0;"}, {"sha": "41e6b673448960b469ce9a9ad308c904e675ead2", "filename": "gcc/ada/a-tiflau.ads", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tiflau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tiflau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiflau.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,33 +42,33 @@\n private package Ada.Text_IO.Float_Aux is\n \n    procedure Load_Real\n-     (File : in File_Type;\n+     (File : File_Type;\n       Buf  : out String;\n       Ptr  : in out Natural);\n    --  This is an auxiliary routine that is used to load a possibly signed\n    --  real literal value from the input file into Buf, starting at Ptr + 1.\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Long_Long_Float;\n-      Width : in Field);\n+      Width : Field);\n \n    procedure Put\n-     (File : in File_Type;\n-      Item : in Long_Long_Float;\n-      Fore : in Field;\n-      Aft  : in Field;\n-      Exp  : in Field);\n+     (File : File_Type;\n+      Item : Long_Long_Float;\n+      Fore : Field;\n+      Aft  : Field;\n+      Exp  : Field);\n \n    procedure Gets\n-     (From : in String;\n+     (From : String;\n       Item : out Long_Long_Float;\n       Last : out Positive);\n \n    procedure Puts\n      (To   : out String;\n-      Item : in Long_Long_Float;\n-      Aft  : in Field;\n-      Exp  : in Field);\n+      Item : Long_Long_Float;\n+      Aft  : Field;\n+      Exp  : Field);\n \n end Ada.Text_IO.Float_Aux;"}, {"sha": "5a776a44a7746f7d528f5bb1e87484c35810182b", "filename": "gcc/ada/a-tiflio.adb", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tiflio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tiflio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiflio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,9 +42,9 @@ package body Ada.Text_IO.Float_IO is\n    ---------\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n       pragma Unsuppress (Range_Check);\n \n@@ -66,7 +66,7 @@ package body Ada.Text_IO.Float_IO is\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n       pragma Unsuppress (Range_Check);\n \n@@ -87,7 +87,7 @@ package body Ada.Text_IO.Float_IO is\n    end Get;\n \n    procedure Get\n-     (From : in String;\n+     (From : String;\n       Item : out Num;\n       Last : out Positive)\n    is\n@@ -114,31 +114,31 @@ package body Ada.Text_IO.Float_IO is\n    ---------\n \n    procedure Put\n-     (File : in File_Type;\n-      Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+     (File : File_Type;\n+      Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n    begin\n       Aux.Put (File, Long_Long_Float (Item), Fore, Aft, Exp);\n    end Put;\n \n    procedure Put\n-     (Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+     (Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n    begin\n       Aux.Put (Current_Out, Long_Long_Float (Item), Fore, Aft, Exp);\n    end Put;\n \n    procedure Put\n      (To   : out String;\n-      Item : in Num;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+      Item : Num;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n    begin\n       Aux.Puts (To, Long_Long_Float (Item), Aft, Exp);"}, {"sha": "51145833fe517a93f951cdc3d97b5aa060d0af71", "filename": "gcc/ada/a-tiflio.ads", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tiflio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tiflio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiflio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -51,37 +51,37 @@ package Ada.Text_IO.Float_IO is\n    Default_Exp  : Field := 3;\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Put\n-     (File : in File_Type;\n-      Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp);\n+     (File : File_Type;\n+      Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp);\n \n    procedure Put\n-     (Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp);\n+     (Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp);\n \n    procedure Get\n-     (From : in String;\n+     (From : String;\n       Item : out Num;\n       Last : out Positive);\n \n    procedure Put\n      (To   : out String;\n-      Item : in Num;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp);\n+      Item : Num;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp);\n \n private\n    pragma Inline (Get);"}, {"sha": "786b7556d33ba4095d2f51b3cb53845abd1e29ac", "filename": "gcc/ada/a-tigeau.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tigeau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tigeau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tigeau.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -80,7 +80,7 @@ private package Ada.Text_IO.Generic_Aux is\n \n    procedure Load_Width\n      (File  : File_Type;\n-      Width : in Field;\n+      Width : Field;\n       Buf   : out String;\n       Ptr   : in out Integer);\n    --  Loads exactly Width characters, unless a line mark is encountered first"}, {"sha": "38be55fa655af501a07002dceb3df0b8a9c27076", "filename": "gcc/ada/a-tiinau.adb", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tiinau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tiinau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiinau.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -49,7 +49,7 @@ package body Ada.Text_IO.Integer_Aux is\n    -----------------------\n \n    procedure Load_Integer\n-     (File : in File_Type;\n+     (File : File_Type;\n       Buf  : out String;\n       Ptr  : in out Natural);\n    --  This is an auxiliary routine that is used to load a possibly signed\n@@ -61,9 +61,9 @@ package body Ada.Text_IO.Integer_Aux is\n    -------------\n \n    procedure Get_Int\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Integer;\n-      Width : in Field)\n+      Width : Field)\n    is\n       Buf  : String (1 .. Field'Last);\n       Ptr  : aliased Integer := 1;\n@@ -86,9 +86,9 @@ package body Ada.Text_IO.Integer_Aux is\n    -------------\n \n    procedure Get_LLI\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Long_Long_Integer;\n-      Width : in Field)\n+      Width : Field)\n    is\n       Buf  : String (1 .. Field'Last);\n       Ptr  : aliased Integer := 1;\n@@ -111,7 +111,7 @@ package body Ada.Text_IO.Integer_Aux is\n    --------------\n \n    procedure Gets_Int\n-     (From : in String;\n+     (From : String;\n       Item : out Integer;\n       Last : out Positive)\n    is\n@@ -132,7 +132,7 @@ package body Ada.Text_IO.Integer_Aux is\n    --------------\n \n    procedure Gets_LLI\n-     (From : in String;\n+     (From : String;\n       Item : out Long_Long_Integer;\n       Last : out Positive)\n    is\n@@ -153,7 +153,7 @@ package body Ada.Text_IO.Integer_Aux is\n    ------------------\n \n    procedure Load_Integer\n-     (File : in File_Type;\n+     (File : File_Type;\n       Buf  : out String;\n       Ptr  : in out Natural)\n    is\n@@ -198,10 +198,10 @@ package body Ada.Text_IO.Integer_Aux is\n    -------------\n \n    procedure Put_Int\n-     (File  : in File_Type;\n-      Item  : in Integer;\n-      Width : in Field;\n-      Base  : in Number_Base)\n+     (File  : File_Type;\n+      Item  : Integer;\n+      Width : Field;\n+      Base  : Number_Base)\n    is\n       Buf : String (1 .. Integer'Max (Field'Last, Width));\n       Ptr : Natural := 0;\n@@ -223,10 +223,10 @@ package body Ada.Text_IO.Integer_Aux is\n    -------------\n \n    procedure Put_LLI\n-     (File  : in File_Type;\n-      Item  : in Long_Long_Integer;\n-      Width : in Field;\n-      Base  : in Number_Base)\n+     (File  : File_Type;\n+      Item  : Long_Long_Integer;\n+      Width : Field;\n+      Base  : Number_Base)\n    is\n       Buf : String (1 .. Integer'Max (Field'Last, Width));\n       Ptr : Natural := 0;\n@@ -249,8 +249,8 @@ package body Ada.Text_IO.Integer_Aux is\n \n    procedure Puts_Int\n      (To   : out String;\n-      Item : in Integer;\n-      Base : in Number_Base)\n+      Item : Integer;\n+      Base : Number_Base)\n    is\n       Buf : String (1 .. Integer'Max (Field'Last, To'Length));\n       Ptr : Natural := 0;\n@@ -275,8 +275,8 @@ package body Ada.Text_IO.Integer_Aux is\n \n    procedure Puts_LLI\n      (To   : out String;\n-      Item : in Long_Long_Integer;\n-      Base : in Number_Base)\n+      Item : Long_Long_Integer;\n+      Base : Number_Base)\n    is\n       Buf : String (1 .. Integer'Max (Field'Last, To'Length));\n       Ptr : Natural := 0;"}, {"sha": "98bd55d8ad6748b4c0ae923c9217891acfcf4a5b", "filename": "gcc/ada/a-tiinau.ads", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tiinau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tiinau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiinau.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,45 +41,45 @@\n private package Ada.Text_IO.Integer_Aux is\n \n    procedure Get_Int\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Integer;\n-      Width : in Field);\n+      Width : Field);\n \n    procedure Get_LLI\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Long_Long_Integer;\n-      Width : in Field);\n+      Width : Field);\n \n    procedure Put_Int\n-     (File  : in File_Type;\n-      Item  : in Integer;\n-      Width : in Field;\n-      Base  : in Number_Base);\n+     (File  : File_Type;\n+      Item  : Integer;\n+      Width : Field;\n+      Base  : Number_Base);\n \n    procedure Put_LLI\n-     (File  : in File_Type;\n-      Item  : in Long_Long_Integer;\n-      Width : in Field;\n-      Base  : in Number_Base);\n+     (File  : File_Type;\n+      Item  : Long_Long_Integer;\n+      Width : Field;\n+      Base  : Number_Base);\n \n    procedure Gets_Int\n-     (From : in String;\n+     (From : String;\n       Item : out Integer;\n       Last : out Positive);\n \n    procedure Gets_LLI\n-     (From : in String;\n+     (From : String;\n       Item : out Long_Long_Integer;\n       Last : out Positive);\n \n    procedure Puts_Int\n      (To   : out String;\n-      Item : in Integer;\n-      Base : in Number_Base);\n+      Item : Integer;\n+      Base : Number_Base);\n \n    procedure Puts_LLI\n      (To   : out String;\n-      Item : in Long_Long_Integer;\n-      Base : in Number_Base);\n+      Item : Long_Long_Integer;\n+      Base : Number_Base);\n \n end Ada.Text_IO.Integer_Aux;"}, {"sha": "44c398f3bfb3c34c9c014a87e5066c2bf4bab80a", "filename": "gcc/ada/a-tiinio.adb", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tiinio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tiinio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiinio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -49,9 +49,9 @@ package body Ada.Text_IO.Integer_IO is\n    ---------\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n       --  We depend on a range check to get Data_Error\n \n@@ -71,7 +71,7 @@ package body Ada.Text_IO.Integer_IO is\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n       --  We depend on a range check to get Data_Error\n \n@@ -90,7 +90,7 @@ package body Ada.Text_IO.Integer_IO is\n    end Get;\n \n    procedure Get\n-     (From : in String;\n+     (From : String;\n       Item : out Num;\n       Last : out Positive)\n    is\n@@ -115,10 +115,10 @@ package body Ada.Text_IO.Integer_IO is\n    ---------\n \n    procedure Put\n-     (File  : in File_Type;\n-      Item  : in Num;\n-      Width : in Field := Default_Width;\n-      Base  : in Number_Base := Default_Base)\n+     (File  : File_Type;\n+      Item  : Num;\n+      Width : Field := Default_Width;\n+      Base  : Number_Base := Default_Base)\n    is\n    begin\n       if Need_LLI then\n@@ -129,9 +129,9 @@ package body Ada.Text_IO.Integer_IO is\n    end Put;\n \n    procedure Put\n-     (Item  : in Num;\n-      Width : in Field := Default_Width;\n-      Base  : in Number_Base := Default_Base)\n+     (Item  : Num;\n+      Width : Field := Default_Width;\n+      Base  : Number_Base := Default_Base)\n    is\n    begin\n       if Need_LLI then\n@@ -143,8 +143,8 @@ package body Ada.Text_IO.Integer_IO is\n \n    procedure Put\n      (To   : out String;\n-      Item : in Num;\n-      Base : in Number_Base := Default_Base)\n+      Item : Num;\n+      Base : Number_Base := Default_Base)\n    is\n    begin\n       if Need_LLI then"}, {"sha": "b0447657b3a44d0c83846b9206e37cb74e25af52", "filename": "gcc/ada/a-tiinio.ads", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tiinio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-tiinio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiinio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -50,34 +50,34 @@ package Ada.Text_IO.Integer_IO is\n    Default_Base  : Number_Base := 10;\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Put\n-     (File  : in File_Type;\n-      Item  : in Num;\n-      Width : in Field := Default_Width;\n-      Base  : in Number_Base := Default_Base);\n+     (File  : File_Type;\n+      Item  : Num;\n+      Width : Field := Default_Width;\n+      Base  : Number_Base := Default_Base);\n \n    procedure Put\n-     (Item  : in Num;\n-      Width : in Field := Default_Width;\n-      Base  : in Number_Base := Default_Base);\n+     (Item  : Num;\n+      Width : Field := Default_Width;\n+      Base  : Number_Base := Default_Base);\n \n    procedure Get\n-     (From : in String;\n+     (From : String;\n       Item : out Num;\n       Last : out Positive);\n \n    procedure Put\n      (To   : out String;\n-      Item : in Num;\n-      Base : in Number_Base := Default_Base);\n+      Item : Num;\n+      Base : Number_Base := Default_Base);\n \n private\n    pragma Inline (Get);"}, {"sha": "605e68dade5383211c959d6f96ebcf728ed610f4", "filename": "gcc/ada/a-timoio.adb", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-timoio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-timoio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-timoio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,9 +44,9 @@ package body Ada.Text_IO.Modular_IO is\n    ---------\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n       pragma Unsuppress (Range_Check);\n \n@@ -63,7 +63,7 @@ package body Ada.Text_IO.Modular_IO is\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n       pragma Unsuppress (Range_Check);\n \n@@ -79,7 +79,7 @@ package body Ada.Text_IO.Modular_IO is\n    end Get;\n \n    procedure Get\n-     (From : in String;\n+     (From : String;\n       Item : out Num;\n       Last : out Positive)\n    is\n@@ -101,10 +101,10 @@ package body Ada.Text_IO.Modular_IO is\n    ---------\n \n    procedure Put\n-     (File  : in File_Type;\n-      Item  : in Num;\n-      Width : in Field := Default_Width;\n-      Base  : in Number_Base := Default_Base)\n+     (File  : File_Type;\n+      Item  : Num;\n+      Width : Field := Default_Width;\n+      Base  : Number_Base := Default_Base)\n    is\n    begin\n       if Num'Size > Unsigned'Size then\n@@ -115,9 +115,9 @@ package body Ada.Text_IO.Modular_IO is\n    end Put;\n \n    procedure Put\n-     (Item  : in Num;\n-      Width : in Field := Default_Width;\n-      Base  : in Number_Base := Default_Base)\n+     (Item  : Num;\n+      Width : Field := Default_Width;\n+      Base  : Number_Base := Default_Base)\n    is\n    begin\n       if Num'Size > Unsigned'Size then\n@@ -129,8 +129,8 @@ package body Ada.Text_IO.Modular_IO is\n \n    procedure Put\n      (To   : out String;\n-      Item : in Num;\n-      Base : in Number_Base := Default_Base)\n+      Item : Num;\n+      Base : Number_Base := Default_Base)\n    is\n    begin\n       if Num'Size > Unsigned'Size then"}, {"sha": "d1a7a15bc53e0e3c1a41c6cb1fa939a772b5f2a2", "filename": "gcc/ada/a-timoio.ads", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-timoio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-timoio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-timoio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1993-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1993-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -50,34 +50,34 @@ package Ada.Text_IO.Modular_IO is\n    Default_Base  : Number_Base := 10;\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Put\n-     (File  : in File_Type;\n-      Item  : in Num;\n-      Width : in Field := Default_Width;\n-      Base  : in Number_Base := Default_Base);\n+     (File  : File_Type;\n+      Item  : Num;\n+      Width : Field := Default_Width;\n+      Base  : Number_Base := Default_Base);\n \n    procedure Put\n-     (Item  : in Num;\n-      Width : in Field := Default_Width;\n-      Base  : in Number_Base := Default_Base);\n+     (Item  : Num;\n+      Width : Field := Default_Width;\n+      Base  : Number_Base := Default_Base);\n \n    procedure Get\n-     (From : in String;\n+     (From : String;\n       Item : out Num;\n       Last : out Positive);\n \n    procedure Put\n      (To   : out String;\n-      Item : in Num;\n-      Base : in Number_Base := Default_Base);\n+      Item : Num;\n+      Base : Number_Base := Default_Base);\n \n private\n    pragma Inline (Get);"}, {"sha": "60dda6abbd72ea0e2f85f30079a07cfc06236193", "filename": "gcc/ada/a-titest.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-titest.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-titest.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-titest.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,7 +39,7 @@ package body Ada.Text_IO.Text_Streams is\n    -- Stream --\n    ------------\n \n-   function Stream (File : in File_Type) return Stream_Access is\n+   function Stream (File : File_Type) return Stream_Access is\n    begin\n       System.File_IO.Check_File_Open (FCB.AFCB_Ptr (File));\n       return Stream_Access (File);"}, {"sha": "d2fa2e7b3f6742594d21ca5bf985d7e903df72e5", "filename": "gcc/ada/a-titest.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-titest.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-titest.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-titest.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -18,6 +18,6 @@ package Ada.Text_IO.Text_Streams is\n \n    type Stream_Access is access all Streams.Root_Stream_Type'Class;\n \n-   function Stream (File : in File_Type) return Stream_Access;\n+   function Stream (File : File_Type) return Stream_Access;\n \n end Ada.Text_IO.Text_Streams;"}, {"sha": "14faf91843b55f6fa1802600a1a7ebd6cd302bd2", "filename": "gcc/ada/a-wtcoio.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtcoio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtcoio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtcoio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -56,9 +56,9 @@ package body Ada.Wide_Text_IO.Complex_IO is\n    ---------\n \n    procedure Get\n-     (File  :  File_Type;\n+     (File  : File_Type;\n       Item  : out Complex;\n-      Width :  Field := 0)\n+      Width : Field := 0)\n    is\n       Real_Item : Real'Base;\n       Imag_Item : Real'Base;"}, {"sha": "6b6286537f0f1b55a18358ab2cc632f1ba9d1d49", "filename": "gcc/ada/a-wtdeau.adb", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtdeau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtdeau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtdeau.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -46,10 +46,9 @@ package body Ada.Wide_Text_IO.Decimal_Aux is\n    -------------\n \n    function Get_Dec\n-     (File   : File_Type;\n-      Width  : Field;\n-      Scale  : Integer)\n-      return   Integer\n+     (File  : File_Type;\n+      Width : Field;\n+      Scale : Integer) return Integer\n    is\n       Buf  : String (1 .. Field'Last);\n       Ptr  : aliased Integer;\n@@ -75,10 +74,9 @@ package body Ada.Wide_Text_IO.Decimal_Aux is\n    -------------\n \n    function Get_LLD\n-     (File   : File_Type;\n-      Width  : Field;\n-      Scale  : Integer)\n-      return   Long_Long_Integer\n+     (File  : File_Type;\n+      Width : Field;\n+      Scale : Integer) return Long_Long_Integer\n    is\n       Buf  : String (1 .. Field'Last);\n       Ptr  : aliased Integer;\n@@ -106,8 +104,7 @@ package body Ada.Wide_Text_IO.Decimal_Aux is\n    function Gets_Dec\n      (From  : String;\n       Last  : access Positive;\n-      Scale : Integer)\n-      return  Integer\n+      Scale : Integer) return Integer\n    is\n       Pos  : aliased Integer;\n       Item : Integer;\n@@ -132,8 +129,7 @@ package body Ada.Wide_Text_IO.Decimal_Aux is\n    function Gets_LLD\n      (From  : String;\n       Last  : access Positive;\n-      Scale : Integer)\n-      return  Long_Long_Integer\n+      Scale : Integer) return Long_Long_Integer\n    is\n       Pos  : aliased Integer;\n       Item : Long_Long_Integer;"}, {"sha": "f8983ebd83d2128d619dc2cb02a7fd50d1e300e7", "filename": "gcc/ada/a-wtdeau.ads", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtdeau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtdeau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtdeau.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,26 +45,22 @@ private package Ada.Wide_Text_IO.Decimal_Aux is\n    function Get_Dec\n      (File  : File_Type;\n       Width : Field;\n-      Scale : Integer)\n-      return  Integer;\n+      Scale : Integer) return Integer;\n \n    function Get_LLD\n      (File  : File_Type;\n       Width : Field;\n-      Scale : Integer)\n-      return  Long_Long_Integer;\n+      Scale : Integer) return Long_Long_Integer;\n \n    function Gets_Dec\n      (From  : String;\n       Last  : access Positive;\n-      Scale : Integer)\n-      return  Integer;\n+      Scale : Integer) return Integer;\n \n    function Gets_LLD\n      (From  : String;\n       Last  : access Positive;\n-      Scale : Integer)\n-      return  Long_Long_Integer;\n+      Scale : Integer) return Long_Long_Integer;\n \n    procedure Put_Dec\n      (File  : File_Type;"}, {"sha": "910165060fc2d4af7844de4bc7a166bd2903c6c2", "filename": "gcc/ada/a-wtdeio.adb", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtdeio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtdeio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtdeio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,6 +32,7 @@\n ------------------------------------------------------------------------------\n \n with Ada.Wide_Text_IO.Decimal_Aux;\n+\n with System.WCh_Con; use System.WCh_Con;\n with System.WCh_WtS; use System.WCh_WtS;\n \n@@ -49,9 +50,9 @@ package body Ada.Wide_Text_IO.Decimal_IO is\n    ---------\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n    begin\n       if Num'Size > Integer'Size then\n@@ -71,14 +72,14 @@ package body Ada.Wide_Text_IO.Decimal_IO is\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n    begin\n       Get (Current_Input, Item, Width);\n    end Get;\n \n    procedure Get\n-     (From : in Wide_String;\n+     (From : Wide_String;\n       Item : out Num;\n       Last : out Positive)\n    is\n@@ -110,11 +111,11 @@ package body Ada.Wide_Text_IO.Decimal_IO is\n    ---------\n \n    procedure Put\n-     (File : in File_Type;\n-      Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+     (File : File_Type;\n+      Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n    begin\n       if Num'Size > Integer'Size then\n@@ -133,10 +134,10 @@ package body Ada.Wide_Text_IO.Decimal_IO is\n    end Put;\n \n    procedure Put\n-     (Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+     (Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n       pragma Unreferenced (Fore);\n       --  ??? how come this is unreferenced, sounds wrong ???\n@@ -146,9 +147,9 @@ package body Ada.Wide_Text_IO.Decimal_IO is\n \n    procedure Put\n      (To   : out Wide_String;\n-      Item : in Num;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+      Item : Num;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n       S : String (To'First .. To'Last);\n "}, {"sha": "9f664cdbbe63ae495423e8b99c87c4dc5d805b65", "filename": "gcc/ada/a-wtdeio.ads", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtdeio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtdeio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtdeio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -51,36 +51,36 @@ package Ada.Wide_Text_IO.Decimal_IO is\n    Default_Exp  : Field := 3;\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Put\n-     (File : in File_Type;\n-      Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp);\n+     (File : File_Type;\n+      Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp);\n \n    procedure Put\n-     (Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp);\n+     (Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp);\n \n    procedure Get\n-     (From : in Wide_String;\n+     (From : Wide_String;\n       Item : out Num;\n       Last : out Positive);\n \n    procedure Put\n      (To   : out Wide_String;\n-      Item : in Num;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp);\n+      Item : Num;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp);\n \n end Ada.Wide_Text_IO.Decimal_IO;"}, {"sha": "ce2380a56fccd6fbea37de3f75cf60dab54285a1", "filename": "gcc/ada/a-wtedit.adb", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtedit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtedit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtedit.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -53,7 +53,7 @@ package body Ada.Wide_Text_IO.Editing is\n    -- Blank_When_Zero --\n    ---------------------\n \n-   function Blank_When_Zero (Pic : in Picture) return Boolean is\n+   function Blank_When_Zero (Pic : Picture) return Boolean is\n    begin\n       return Pic.Contents.Original_BWZ;\n    end Blank_When_Zero;\n@@ -194,7 +194,7 @@ package body Ada.Wide_Text_IO.Editing is\n    -- Expand --\n    ------------\n \n-   function Expand (Picture : in String) return String is\n+   function Expand (Picture : String) return String is\n       Result        : String (1 .. MAX_PICSIZE);\n       Picture_Index : Integer := Picture'First;\n       Result_Index  : Integer := Result'First;\n@@ -308,9 +308,9 @@ package body Ada.Wide_Text_IO.Editing is\n \n       Sign_Position : Integer := Pic.Sign_Position; --  may float.\n \n-      Answer        : Wide_String (1 .. Pic.Picture.Length);\n-      Last          : Integer;\n-      Currency_Pos  : Integer := Pic.Start_Currency;\n+      Answer       : Wide_String (1 .. Pic.Picture.Length);\n+      Last         : Integer;\n+      Currency_Pos : Integer := Pic.Start_Currency;\n \n       Dollar : Boolean := False;\n       --  Overridden immediately if necessary\n@@ -1095,7 +1095,7 @@ package body Ada.Wide_Text_IO.Editing is\n    --  The following ensures that we return B and not b being careful not\n    --  to break things which expect lower case b for blank. See CXF3A02.\n \n-   function Pic_String (Pic : in Picture) return String is\n+   function Pic_String (Pic : Picture) return String is\n       Temp : String (1 .. Pic.Contents.Picture.Length) :=\n                               Pic.Contents.Picture.Expanded;\n    begin\n@@ -2757,11 +2757,10 @@ package body Ada.Wide_Text_IO.Editing is\n          Format_Rec.Original_BWZ := Blank_When_Zero;\n          Precalculate (Format_Rec);\n \n-         --  False only if Blank_When_0 is True but the pic string\n-         --  has a '*'\n+         --  False only if Blank_When_0 is True but the pic string has a '*'\n \n-         return not Blank_When_Zero or\n-           Strings_Fixed.Index (Expanded_Pic, \"*\") = 0;\n+         return not Blank_When_Zero\n+           or else Strings_Fixed.Index (Expanded_Pic, \"*\") = 0;\n       end;\n \n    exception"}, {"sha": "e0917f516780f7c3613cebe98c514dfaedb9250d", "filename": "gcc/ada/a-wtedit.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtedit.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtedit.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtedit.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -47,8 +47,8 @@ package Ada.Wide_Text_IO.Editing is\n      (Pic_String      : String;\n       Blank_When_Zero : Boolean := False) return Picture;\n \n-   function Pic_String      (Pic : in Picture) return String;\n-   function Blank_When_Zero (Pic : in Picture) return Boolean;\n+   function Pic_String      (Pic : Picture) return String;\n+   function Blank_When_Zero (Pic : Picture) return Boolean;\n \n    Max_Picture_Length : constant := 64;\n \n@@ -194,6 +194,6 @@ private\n       Radix_Point         : Wide_Character) return Wide_String;\n    --  Formats number according to Pic\n \n-   function Expand (Picture : in String) return String;\n+   function Expand (Picture : String) return String;\n \n end Ada.Wide_Text_IO.Editing;"}, {"sha": "0bba4ec1de276f49dde06e0c43fa0d8ad6a1a919", "filename": "gcc/ada/a-wtenau.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtenau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtenau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtenau.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -190,9 +190,9 @@ package body Ada.Wide_Text_IO.Enumeration_Aux is\n    ----------\n \n    procedure Puts\n-     (To    : out Wide_String;\n-      Item  : in Wide_String;\n-      Set   : Type_Set)\n+     (To   : out Wide_String;\n+      Item : Wide_String;\n+      Set  : Type_Set)\n    is\n       Ptr : Natural;\n "}, {"sha": "d526626ec1741406727158b65132ac1e5e144276", "filename": "gcc/ada/a-wtenau.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtenau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtenau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtenau.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,9 +62,9 @@ private package Ada.Wide_Text_IO.Enumeration_Aux is\n    --  using the given Width and Set parameters (Item is always in upper case).\n \n    procedure Puts\n-     (To    : out Wide_String;\n-      Item  : in Wide_String;\n-      Set   : Type_Set);\n+     (To   : out Wide_String;\n+      Item : Wide_String;\n+      Set  : Type_Set);\n    --  Stores the enumeration literal image stored in Item to the string To,\n    --  padding with trailing spaces if necessary to fill To. Set is used to\n "}, {"sha": "33e5970307da626f5fb68535ec87af481a96456e", "filename": "gcc/ada/a-wtenio.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtenio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtenio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtenio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,7 +41,7 @@ package body Ada.Wide_Text_IO.Enumeration_IO is\n    -- Get --\n    ---------\n \n-   procedure Get (File : in File_Type; Item : out Enum) is\n+   procedure Get (File : File_Type; Item : out Enum) is\n       Buf    : Wide_String (1 .. Enum'Width);\n       Buflen : Natural;\n \n@@ -59,7 +59,7 @@ package body Ada.Wide_Text_IO.Enumeration_IO is\n    end Get;\n \n    procedure Get\n-     (From : in Wide_String;\n+     (From : Wide_String;\n       Item : out Enum;\n       Last : out Positive)\n    is\n@@ -78,10 +78,10 @@ package body Ada.Wide_Text_IO.Enumeration_IO is\n    ---------\n \n    procedure Put\n-     (File  : in File_Type;\n-      Item  : in Enum;\n-      Width : in Field := Default_Width;\n-      Set   : in Type_Set := Default_Setting)\n+     (File  : File_Type;\n+      Item  : Enum;\n+      Width : Field := Default_Width;\n+      Set   : Type_Set := Default_Setting)\n    is\n       Image : constant Wide_String := Enum'Wide_Image (Item);\n \n@@ -90,18 +90,18 @@ package body Ada.Wide_Text_IO.Enumeration_IO is\n    end Put;\n \n    procedure Put\n-     (Item  : in Enum;\n-      Width : in Field := Default_Width;\n-      Set   : in Type_Set := Default_Setting)\n+     (Item  : Enum;\n+      Width : Field := Default_Width;\n+      Set   : Type_Set := Default_Setting)\n    is\n    begin\n       Put (Current_Output, Item, Width, Set);\n    end Put;\n \n    procedure Put\n      (To   : out Wide_String;\n-      Item : in Enum;\n-      Set  : in Type_Set := Default_Setting)\n+      Item : Enum;\n+      Set  : Type_Set := Default_Setting)\n    is\n       Image : constant Wide_String := Enum'Wide_Image (Item);\n "}, {"sha": "700783d601cf0de9f5ca22402985f078aa1afa03", "filename": "gcc/ada/a-wtenio.ads", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtenio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtenio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtenio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2000 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -49,28 +49,28 @@ package Ada.Wide_Text_IO.Enumeration_IO is\n    Default_Width : Field := 0;\n    Default_Setting : Type_Set := Upper_Case;\n \n-   procedure Get (File : in File_Type; Item : out Enum);\n+   procedure Get (File : File_Type; Item : out Enum);\n    procedure Get (Item : out Enum);\n \n    procedure Put\n-     (File  : in File_Type;\n-      Item  : in Enum;\n-      Width : in Field := Default_Width;\n-      Set   : in Type_Set := Default_Setting);\n+     (File  : File_Type;\n+      Item  : Enum;\n+      Width : Field := Default_Width;\n+      Set   : Type_Set := Default_Setting);\n \n    procedure Put\n-     (Item  : in Enum;\n-      Width : in Field := Default_Width;\n-      Set   : in Type_Set := Default_Setting);\n+     (Item  : Enum;\n+      Width : Field := Default_Width;\n+      Set   : Type_Set := Default_Setting);\n \n    procedure Get\n-     (From : in Wide_String;\n+     (From : Wide_String;\n       Item : out Enum;\n       Last : out Positive);\n \n    procedure Put\n      (To   : out Wide_String;\n-      Item : in Enum;\n-      Set  : in Type_Set := Default_Setting);\n+      Item : Enum;\n+      Set  : Type_Set := Default_Setting);\n \n end Ada.Wide_Text_IO.Enumeration_IO;"}, {"sha": "50a24a9512d0817a068d0e19144b1674ab556984", "filename": "gcc/ada/a-wtfiio.adb", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtfiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtfiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtfiio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,9 +47,9 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n    ---------\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n    begin\n       Aux.Get (TFT (File), Long_Long_Float (Item), Width);\n@@ -60,14 +60,14 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n    begin\n       Get (Current_Input, Item, Width);\n    end Get;\n \n    procedure Get\n-     (From : in Wide_String;\n+     (From : Wide_String;\n       Item : out Num;\n       Last : out Positive)\n    is\n@@ -89,31 +89,31 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n    ---------\n \n    procedure Put\n-     (File : in File_Type;\n-      Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+     (File : File_Type;\n+      Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n    begin\n       Aux.Put (TFT (File), Long_Long_Float (Item), Fore, Aft, Exp);\n    end Put;\n \n    procedure Put\n-     (Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+     (Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n    begin\n       Put (Current_Output, Item, Fore, Aft, Exp);\n    end Put;\n \n    procedure Put\n      (To   : out Wide_String;\n-      Item : in Num;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+      Item : Num;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n       S : String (To'First .. To'Last);\n "}, {"sha": "83571f31c4739f1f74cd56ff52a7584680f8ea00", "filename": "gcc/ada/a-wtfiio.ads", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtfiio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtfiio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtfiio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -51,36 +51,36 @@ package Ada.Wide_Text_IO.Fixed_IO is\n    Default_Exp  : Field := 0;\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Put\n-     (File : in File_Type;\n-      Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp);\n+     (File : File_Type;\n+      Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp);\n \n    procedure Put\n-     (Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp);\n+     (Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp);\n \n    procedure Get\n-     (From : in Wide_String;\n+     (From : Wide_String;\n       Item : out Num;\n       Last : out Positive);\n \n    procedure Put\n      (To   : out Wide_String;\n-      Item : in Num;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp);\n+      Item : Num;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp);\n \n end Ada.Wide_Text_IO.Fixed_IO;"}, {"sha": "a7e03b6bd3f4bdb893bcfbc9d5065f2f3dbf746d", "filename": "gcc/ada/a-wtflau.adb", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtflau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtflau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtflau.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,9 +43,9 @@ package body Ada.Wide_Text_IO.Float_Aux is\n    ---------\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Long_Long_Float;\n-      Width : in Field)\n+      Width : Field)\n    is\n       Buf  : String (1 .. Field'Last);\n       Stop : Integer := 0;\n@@ -69,7 +69,7 @@ package body Ada.Wide_Text_IO.Float_Aux is\n    ----------\n \n    procedure Gets\n-     (From : in String;\n+     (From : String;\n       Item : out Long_Long_Float;\n       Last : out Positive)\n    is\n@@ -90,7 +90,7 @@ package body Ada.Wide_Text_IO.Float_Aux is\n    ---------------\n \n    procedure Load_Real\n-     (File : in File_Type;\n+     (File : File_Type;\n       Buf  : out String;\n       Ptr  : in out Natural)\n    is\n@@ -181,11 +181,11 @@ package body Ada.Wide_Text_IO.Float_Aux is\n    ---------\n \n    procedure Put\n-     (File : in File_Type;\n-      Item : in Long_Long_Float;\n-      Fore : in Field;\n-      Aft  : in Field;\n-      Exp  : in Field)\n+     (File : File_Type;\n+      Item : Long_Long_Float;\n+      Fore : Field;\n+      Aft  : Field;\n+      Exp  : Field)\n    is\n       Buf : String (1 .. Field'Last);\n       Ptr : Natural := 0;\n@@ -201,12 +201,12 @@ package body Ada.Wide_Text_IO.Float_Aux is\n \n    procedure Puts\n      (To   : out String;\n-      Item : in Long_Long_Float;\n-      Aft  : in Field;\n-      Exp  : in Field)\n+      Item : Long_Long_Float;\n+      Aft  : Field;\n+      Exp  : Field)\n    is\n-      Buf    : String (1 .. Field'Last);\n-      Ptr    : Natural := 0;\n+      Buf : String (1 .. Field'Last);\n+      Ptr : Natural := 0;\n \n    begin\n       Set_Image_Real (Item, Buf, Ptr, Fore => 1, Aft => Aft, Exp => Exp);"}, {"sha": "6370e79120a52857e865b03adc0f55470925d0d5", "filename": "gcc/ada/a-wtflau.ads", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtflau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtflau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtflau.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,33 +42,33 @@\n private package Ada.Wide_Text_IO.Float_Aux is\n \n    procedure Load_Real\n-     (File : in File_Type;\n+     (File : File_Type;\n       Buf  : out String;\n       Ptr  : in out Natural);\n    --  This is an auxiliary routine that is used to load a possibly signed\n    --  real literal value from the input file into Buf, starting at Ptr + 1.\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Long_Long_Float;\n-      Width : in Field);\n+      Width : Field);\n \n    procedure Gets\n-     (From : in String;\n+     (From : String;\n       Item : out Long_Long_Float;\n       Last : out Positive);\n \n    procedure Put\n-     (File : in File_Type;\n-      Item : in Long_Long_Float;\n-      Fore : in Field;\n-      Aft  : in Field;\n-      Exp  : in Field);\n+     (File : File_Type;\n+      Item : Long_Long_Float;\n+      Fore : Field;\n+      Aft  : Field;\n+      Exp  : Field);\n \n    procedure Puts\n      (To   : out String;\n-      Item : in Long_Long_Float;\n-      Aft  : in Field;\n-      Exp  : in Field);\n+      Item : Long_Long_Float;\n+      Aft  : Field;\n+      Exp  : Field);\n \n end Ada.Wide_Text_IO.Float_Aux;"}, {"sha": "715e0b074d0719866b3e9eaef547b0962b534ace", "filename": "gcc/ada/a-wtflio.adb", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtflio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtflio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtflio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,6 +32,7 @@\n ------------------------------------------------------------------------------\n \n with Ada.Wide_Text_IO.Float_Aux;\n+\n with System.WCh_Con; use System.WCh_Con;\n with System.WCh_WtS; use System.WCh_WtS;\n \n@@ -47,9 +48,9 @@ package body Ada.Wide_Text_IO.Float_IO is\n    ---------\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n    begin\n       Aux.Get (TFT (File), Long_Long_Float (Item), Width);\n@@ -60,14 +61,14 @@ package body Ada.Wide_Text_IO.Float_IO is\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n    begin\n       Get (Current_Input, Item, Width);\n    end Get;\n \n    procedure Get\n-     (From : in Wide_String;\n+     (From : Wide_String;\n       Item : out Num;\n       Last : out Positive)\n    is\n@@ -89,31 +90,31 @@ package body Ada.Wide_Text_IO.Float_IO is\n    ---------\n \n    procedure Put\n-     (File : in File_Type;\n-      Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+     (File : File_Type;\n+      Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n    begin\n       Aux.Put (TFT (File), Long_Long_Float (Item), Fore, Aft, Exp);\n    end Put;\n \n    procedure Put\n-     (Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+     (Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n    begin\n       Put (Current_Output, Item, Fore, Aft, Exp);\n    end Put;\n \n    procedure Put\n      (To   : out Wide_String;\n-      Item : in Num;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp)\n+      Item : Num;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp)\n    is\n       S : String (To'First .. To'Last);\n "}, {"sha": "26114791733bee44f6f37b917ff79a26fc1a4841", "filename": "gcc/ada/a-wtflio.ads", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtflio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtflio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtflio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -51,36 +51,36 @@ package Ada.Wide_Text_IO.Float_IO is\n    Default_Exp  : Field := 3;\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Put\n-     (File : in File_Type;\n-      Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp);\n+     (File : File_Type;\n+      Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp);\n \n    procedure Put\n-     (Item : in Num;\n-      Fore : in Field := Default_Fore;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp);\n+     (Item : Num;\n+      Fore : Field := Default_Fore;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp);\n \n    procedure Get\n-     (From : in Wide_String;\n+     (From : Wide_String;\n       Item : out Num;\n       Last : out Positive);\n \n    procedure Put\n      (To   : out Wide_String;\n-      Item : in Num;\n-      Aft  : in Field := Default_Aft;\n-      Exp  : in Field := Default_Exp);\n+      Item : Num;\n+      Aft  : Field := Default_Aft;\n+      Exp  : Field := Default_Exp);\n \n end Ada.Wide_Text_IO.Float_IO;"}, {"sha": "6ee73e22fd9d819b3e1efda4c4d0851f881dc845", "filename": "gcc/ada/a-wtgeau.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtgeau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtgeau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtgeau.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -79,7 +79,7 @@ package Ada.Wide_Text_IO.Generic_Aux is\n \n    procedure Load_Width\n      (File  : File_Type;\n-      Width : in Field;\n+      Width : Field;\n       Buf   : out String;\n       Ptr   : in out Integer);\n    --  Loads exactly Width characters, unless a line mark is encountered first"}, {"sha": "4889a8a5afc41e32545c6b7f269c25b247560d69", "filename": "gcc/ada/a-wtinau.adb", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtinau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtinau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtinau.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,14 +33,14 @@\n \n with Ada.Wide_Text_IO.Generic_Aux; use Ada.Wide_Text_IO.Generic_Aux;\n \n-with System.Img_BIU;   use System.Img_BIU;\n-with System.Img_Int;   use System.Img_Int;\n-with System.Img_LLB;   use System.Img_LLB;\n-with System.Img_LLI;   use System.Img_LLI;\n-with System.Img_LLW;   use System.Img_LLW;\n-with System.Img_WIU;   use System.Img_WIU;\n-with System.Val_Int;   use System.Val_Int;\n-with System.Val_LLI;   use System.Val_LLI;\n+with System.Img_BIU; use System.Img_BIU;\n+with System.Img_Int; use System.Img_Int;\n+with System.Img_LLB; use System.Img_LLB;\n+with System.Img_LLI; use System.Img_LLI;\n+with System.Img_LLW; use System.Img_LLW;\n+with System.Img_WIU; use System.Img_WIU;\n+with System.Val_Int; use System.Val_Int;\n+with System.Val_LLI; use System.Val_LLI;\n \n package body Ada.Wide_Text_IO.Integer_Aux is\n \n@@ -49,7 +49,7 @@ package body Ada.Wide_Text_IO.Integer_Aux is\n    -----------------------\n \n    procedure Load_Integer\n-     (File : in File_Type;\n+     (File : File_Type;\n       Buf  : out String;\n       Ptr  : in out Natural);\n    --  This is an auxiliary routine that is used to load an possibly signed\n@@ -61,9 +61,9 @@ package body Ada.Wide_Text_IO.Integer_Aux is\n    -------------\n \n    procedure Get_Int\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Integer;\n-      Width : in Field)\n+      Width : Field)\n    is\n       Buf  : String (1 .. Field'Last);\n       Ptr  : aliased Integer := 1;\n@@ -86,9 +86,9 @@ package body Ada.Wide_Text_IO.Integer_Aux is\n    -------------\n \n    procedure Get_LLI\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Long_Long_Integer;\n-      Width : in Field)\n+      Width : Field)\n    is\n       Buf  : String (1 .. Field'Last);\n       Ptr  : aliased Integer := 1;\n@@ -111,7 +111,7 @@ package body Ada.Wide_Text_IO.Integer_Aux is\n    --------------\n \n    procedure Gets_Int\n-     (From : in String;\n+     (From : String;\n       Item : out Integer;\n       Last : out Positive)\n    is\n@@ -132,7 +132,7 @@ package body Ada.Wide_Text_IO.Integer_Aux is\n    --------------\n \n    procedure Gets_LLI\n-     (From : in String;\n+     (From : String;\n       Item : out Long_Long_Integer;\n       Last : out Positive)\n    is\n@@ -153,7 +153,7 @@ package body Ada.Wide_Text_IO.Integer_Aux is\n    ------------------\n \n    procedure Load_Integer\n-     (File : in File_Type;\n+     (File : File_Type;\n       Buf  : out String;\n       Ptr  : in out Natural)\n    is\n@@ -193,10 +193,10 @@ package body Ada.Wide_Text_IO.Integer_Aux is\n    -------------\n \n    procedure Put_Int\n-     (File  : in File_Type;\n-      Item  : in Integer;\n-      Width : in Field;\n-      Base  : in Number_Base)\n+     (File  : File_Type;\n+      Item  : Integer;\n+      Width : Field;\n+      Base  : Number_Base)\n    is\n       Buf : String (1 .. Field'Last);\n       Ptr : Natural := 0;\n@@ -218,10 +218,10 @@ package body Ada.Wide_Text_IO.Integer_Aux is\n    -------------\n \n    procedure Put_LLI\n-     (File  : in File_Type;\n-      Item  : in Long_Long_Integer;\n-      Width : in Field;\n-      Base  : in Number_Base)\n+     (File  : File_Type;\n+      Item  : Long_Long_Integer;\n+      Width : Field;\n+      Base  : Number_Base)\n    is\n       Buf : String (1 .. Field'Last);\n       Ptr : Natural := 0;\n@@ -244,8 +244,8 @@ package body Ada.Wide_Text_IO.Integer_Aux is\n \n    procedure Puts_Int\n      (To   : out String;\n-      Item : in Integer;\n-      Base : in Number_Base)\n+      Item : Integer;\n+      Base : Number_Base)\n    is\n       Buf : String (1 .. Field'Last);\n       Ptr : Natural := 0;\n@@ -270,8 +270,8 @@ package body Ada.Wide_Text_IO.Integer_Aux is\n \n    procedure Puts_LLI\n      (To   : out String;\n-      Item : in Long_Long_Integer;\n-      Base : in Number_Base)\n+      Item : Long_Long_Integer;\n+      Base : Number_Base)\n    is\n       Buf : String (1 .. Field'Last);\n       Ptr : Natural := 0;"}, {"sha": "73fe171b478918107bfaf5aa3c66fa16e9b159d4", "filename": "gcc/ada/a-wtinau.ads", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtinau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtinau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtinau.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,45 +41,45 @@\n private package Ada.Wide_Text_IO.Integer_Aux is\n \n    procedure Get_Int\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Integer;\n-      Width : in Field);\n+      Width : Field);\n \n    procedure Get_LLI\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Long_Long_Integer;\n-      Width : in Field);\n+      Width : Field);\n \n    procedure Gets_Int\n-     (From : in String;\n+     (From : String;\n       Item : out Integer;\n       Last : out Positive);\n \n    procedure Gets_LLI\n-     (From : in String;\n+     (From : String;\n       Item : out Long_Long_Integer;\n       Last : out Positive);\n \n    procedure Put_Int\n-     (File  : in File_Type;\n-      Item  : in Integer;\n-      Width : in Field;\n-      Base  : in Number_Base);\n+     (File  : File_Type;\n+      Item  : Integer;\n+      Width : Field;\n+      Base  : Number_Base);\n \n    procedure Put_LLI\n-     (File  : in File_Type;\n-      Item  : in Long_Long_Integer;\n-      Width : in Field;\n-      Base  : in Number_Base);\n+     (File  : File_Type;\n+      Item  : Long_Long_Integer;\n+      Width : Field;\n+      Base  : Number_Base);\n \n    procedure Puts_Int\n      (To   : out String;\n-      Item : in Integer;\n-      Base : in Number_Base);\n+      Item : Integer;\n+      Base : Number_Base);\n \n    procedure Puts_LLI\n      (To   : out String;\n-      Item : in Long_Long_Integer;\n-      Base : in Number_Base);\n+      Item : Long_Long_Integer;\n+      Base : Number_Base);\n \n end Ada.Wide_Text_IO.Integer_Aux;"}, {"sha": "7686325bdf7702ae7c818a602721996b4b3de948", "filename": "gcc/ada/a-wtinio.adb", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtinio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtinio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtinio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -54,9 +54,9 @@ package body Ada.Wide_Text_IO.Integer_IO is\n    ---------\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n    begin\n       if Need_LLI then\n@@ -71,14 +71,14 @@ package body Ada.Wide_Text_IO.Integer_IO is\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n    begin\n       Get (Current_Input, Item, Width);\n    end Get;\n \n    procedure Get\n-     (From : in Wide_String;\n+     (From : Wide_String;\n       Item : out Num;\n       Last : out Positive)\n    is\n@@ -104,10 +104,10 @@ package body Ada.Wide_Text_IO.Integer_IO is\n    ---------\n \n    procedure Put\n-     (File  : in File_Type;\n-      Item  : in Num;\n-      Width : in Field := Default_Width;\n-      Base  : in Number_Base := Default_Base)\n+     (File  : File_Type;\n+      Item  : Num;\n+      Width : Field := Default_Width;\n+      Base  : Number_Base := Default_Base)\n    is\n    begin\n       if Need_LLI then\n@@ -118,18 +118,18 @@ package body Ada.Wide_Text_IO.Integer_IO is\n    end Put;\n \n    procedure Put\n-     (Item  : in Num;\n-      Width : in Field := Default_Width;\n-      Base  : in Number_Base := Default_Base)\n+     (Item  : Num;\n+      Width : Field := Default_Width;\n+      Base  : Number_Base := Default_Base)\n    is\n    begin\n       Put (Current_Output, Item, Width, Base);\n    end Put;\n \n    procedure Put\n      (To   : out Wide_String;\n-      Item : in Num;\n-      Base : in Number_Base := Default_Base)\n+      Item : Num;\n+      Base : Number_Base := Default_Base)\n    is\n       S : String (To'First .. To'Last);\n "}, {"sha": "257ba23ac96c4fd37c3dce90f272cc7bc0f5477b", "filename": "gcc/ada/a-wtinio.ads", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtinio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtinio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtinio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -28,33 +28,33 @@ package Ada.Wide_Text_IO.Integer_IO is\n    Default_Base  : Number_Base := 10;\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Put\n-     (File  : in File_Type;\n-      Item  : in Num;\n-      Width : in Field := Default_Width;\n-      Base  : in Number_Base := Default_Base);\n+     (File  : File_Type;\n+      Item  : Num;\n+      Width : Field := Default_Width;\n+      Base  : Number_Base := Default_Base);\n \n    procedure Put\n-     (Item  : in Num;\n-      Width : in Field := Default_Width;\n-      Base  : in Number_Base := Default_Base);\n+     (Item  : Num;\n+      Width : Field := Default_Width;\n+      Base  : Number_Base := Default_Base);\n \n    procedure Get\n-     (From : in Wide_String;\n+     (From : Wide_String;\n       Item : out Num;\n       Last : out Positive);\n \n    procedure Put\n      (To   : out Wide_String;\n-      Item : in Num;\n-      Base : in Number_Base := Default_Base);\n+      Item : Num;\n+      Base : Number_Base := Default_Base);\n \n end Ada.Wide_Text_IO.Integer_IO;"}, {"sha": "6a34d81c54d455f5a7c71712f4f2d39937111c2a", "filename": "gcc/ada/a-wtmoau.adb", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtmoau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtmoau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtmoau.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,14 +33,14 @@\n \n with Ada.Wide_Text_IO.Generic_Aux; use Ada.Wide_Text_IO.Generic_Aux;\n \n-with System.Img_BIU;   use System.Img_BIU;\n-with System.Img_Uns;   use System.Img_Uns;\n-with System.Img_LLB;   use System.Img_LLB;\n-with System.Img_LLU;   use System.Img_LLU;\n-with System.Img_LLW;   use System.Img_LLW;\n-with System.Img_WIU;   use System.Img_WIU;\n-with System.Val_Uns;   use System.Val_Uns;\n-with System.Val_LLU;   use System.Val_LLU;\n+with System.Img_BIU; use System.Img_BIU;\n+with System.Img_Uns; use System.Img_Uns;\n+with System.Img_LLB; use System.Img_LLB;\n+with System.Img_LLU; use System.Img_LLU;\n+with System.Img_LLW; use System.Img_LLW;\n+with System.Img_WIU; use System.Img_WIU;\n+with System.Val_Uns; use System.Val_Uns;\n+with System.Val_LLU; use System.Val_LLU;\n \n package body Ada.Wide_Text_IO.Modular_Aux is\n \n@@ -51,7 +51,7 @@ package body Ada.Wide_Text_IO.Modular_Aux is\n    -----------------------\n \n    procedure Load_Modular\n-     (File : in File_Type;\n+     (File : File_Type;\n       Buf  : out String;\n       Ptr  : in out Natural);\n    --  This is an auxiliary routine that is used to load an possibly signed\n@@ -63,9 +63,9 @@ package body Ada.Wide_Text_IO.Modular_Aux is\n    -------------\n \n    procedure Get_LLU\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Long_Long_Unsigned;\n-      Width : in Field)\n+      Width : Field)\n    is\n       Buf  : String (1 .. Field'Last);\n       Stop : Integer := 0;\n@@ -88,9 +88,9 @@ package body Ada.Wide_Text_IO.Modular_Aux is\n    -------------\n \n    procedure Get_Uns\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Unsigned;\n-      Width : in Field)\n+      Width : Field)\n    is\n       Buf  : String (1 .. Field'Last);\n       Stop : Integer := 0;\n@@ -113,7 +113,7 @@ package body Ada.Wide_Text_IO.Modular_Aux is\n    --------------\n \n    procedure Gets_LLU\n-     (From : in String;\n+     (From : String;\n       Item : out Long_Long_Unsigned;\n       Last : out Positive)\n    is\n@@ -134,7 +134,7 @@ package body Ada.Wide_Text_IO.Modular_Aux is\n    --------------\n \n    procedure Gets_Uns\n-     (From : in String;\n+     (From : String;\n       Item : out Unsigned;\n       Last : out Positive)\n    is\n@@ -155,7 +155,7 @@ package body Ada.Wide_Text_IO.Modular_Aux is\n    ------------------\n \n    procedure Load_Modular\n-     (File : in File_Type;\n+     (File : File_Type;\n       Buf  : out String;\n       Ptr  : in out Natural)\n    is\n@@ -203,10 +203,10 @@ package body Ada.Wide_Text_IO.Modular_Aux is\n    -------------\n \n    procedure Put_LLU\n-     (File  : in File_Type;\n-      Item  : in Long_Long_Unsigned;\n-      Width : in Field;\n-      Base  : in Number_Base)\n+     (File  : File_Type;\n+      Item  : Long_Long_Unsigned;\n+      Width : Field;\n+      Base  : Number_Base)\n    is\n       Buf : String (1 .. Field'Last);\n       Ptr : Natural := 0;\n@@ -228,10 +228,10 @@ package body Ada.Wide_Text_IO.Modular_Aux is\n    -------------\n \n    procedure Put_Uns\n-     (File  : in File_Type;\n-      Item  : in Unsigned;\n-      Width : in Field;\n-      Base  : in Number_Base)\n+     (File  : File_Type;\n+      Item  : Unsigned;\n+      Width : Field;\n+      Base  : Number_Base)\n    is\n       Buf : String (1 .. Field'Last);\n       Ptr : Natural := 0;\n@@ -254,8 +254,8 @@ package body Ada.Wide_Text_IO.Modular_Aux is\n \n    procedure Puts_LLU\n      (To   : out String;\n-      Item : in Long_Long_Unsigned;\n-      Base : in Number_Base)\n+      Item : Long_Long_Unsigned;\n+      Base : Number_Base)\n    is\n       Buf : String (1 .. Field'Last);\n       Ptr : Natural := 0;\n@@ -280,8 +280,8 @@ package body Ada.Wide_Text_IO.Modular_Aux is\n \n    procedure Puts_Uns\n      (To   : out String;\n-      Item : in Unsigned;\n-      Base : in Number_Base)\n+      Item : Unsigned;\n+      Base : Number_Base)\n    is\n       Buf : String (1 .. Field'Last);\n       Ptr : Natural := 0;"}, {"sha": "57e2e9a4963bb2409fa76103e49ff71f9ae2a2fe", "filename": "gcc/ada/a-wtmoau.ads", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtmoau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtmoau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtmoau.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,45 +45,45 @@ private package Ada.Wide_Text_IO.Modular_Aux is\n    package U renames System.Unsigned_Types;\n \n    procedure Get_Uns\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out U.Unsigned;\n-      Width : in Field);\n+      Width : Field);\n \n    procedure Get_LLU\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out U.Long_Long_Unsigned;\n-      Width : in Field);\n+      Width : Field);\n \n    procedure Gets_Uns\n-     (From : in String;\n+     (From : String;\n       Item : out U.Unsigned;\n       Last : out Positive);\n \n    procedure Gets_LLU\n-     (From : in String;\n+     (From : String;\n       Item : out U.Long_Long_Unsigned;\n       Last : out Positive);\n \n    procedure Put_Uns\n-     (File  : in File_Type;\n-      Item  : in U.Unsigned;\n-      Width : in Field;\n-      Base  : in Number_Base);\n+     (File  : File_Type;\n+      Item  : U.Unsigned;\n+      Width : Field;\n+      Base  : Number_Base);\n \n    procedure Put_LLU\n-     (File  : in File_Type;\n-      Item  : in U.Long_Long_Unsigned;\n-      Width : in Field;\n-      Base  : in Number_Base);\n+     (File  : File_Type;\n+      Item  : U.Long_Long_Unsigned;\n+      Width : Field;\n+      Base  : Number_Base);\n \n    procedure Puts_Uns\n      (To   : out String;\n-      Item : in U.Unsigned;\n-      Base : in Number_Base);\n+      Item : U.Unsigned;\n+      Base : Number_Base);\n \n    procedure Puts_LLU\n      (To   : out String;\n-      Item : in U.Long_Long_Unsigned;\n-      Base : in Number_Base);\n+      Item : U.Long_Long_Unsigned;\n+      Base : Number_Base);\n \n end Ada.Wide_Text_IO.Modular_Aux;"}, {"sha": "2852fddfa0650a4eb17cbb3fe64f58e4c926a7f6", "filename": "gcc/ada/a-wtmoio.adb", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtmoio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtmoio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtmoio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 1992-2005, Free Software Foundation, Inc.        --\n+--           Copyright (C) 1992-2006, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -49,9 +49,9 @@ package body Ada.Wide_Text_IO.Modular_IO is\n    ---------\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n    begin\n       if Num'Size > Unsigned'Size then\n@@ -66,14 +66,14 @@ package body Ada.Wide_Text_IO.Modular_IO is\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0)\n+      Width : Field := 0)\n    is\n    begin\n       Get (Current_Input, Item, Width);\n    end Get;\n \n    procedure Get\n-     (From : in Wide_String;\n+     (From : Wide_String;\n       Item : out Num;\n       Last : out Positive)\n    is\n@@ -99,10 +99,10 @@ package body Ada.Wide_Text_IO.Modular_IO is\n    ---------\n \n    procedure Put\n-     (File  : in File_Type;\n-      Item  : in Num;\n-      Width : in Field := Default_Width;\n-      Base  : in Number_Base := Default_Base)\n+     (File  : File_Type;\n+      Item  : Num;\n+      Width : Field := Default_Width;\n+      Base  : Number_Base := Default_Base)\n    is\n    begin\n       if Num'Size > Unsigned'Size then\n@@ -113,18 +113,18 @@ package body Ada.Wide_Text_IO.Modular_IO is\n    end Put;\n \n    procedure Put\n-     (Item  : in Num;\n-      Width : in Field := Default_Width;\n-      Base  : in Number_Base := Default_Base)\n+     (Item  : Num;\n+      Width : Field := Default_Width;\n+      Base  : Number_Base := Default_Base)\n    is\n    begin\n       Put (Current_Output, Item, Width, Base);\n    end Put;\n \n    procedure Put\n      (To   : out Wide_String;\n-      Item : in Num;\n-      Base : in Number_Base := Default_Base)\n+      Item : Num;\n+      Base : Number_Base := Default_Base)\n    is\n       S : String (To'First .. To'Last);\n "}, {"sha": "542e430ee1c3ce00b066fce27b93127eea640955", "filename": "gcc/ada/a-wtmoio.ads", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtmoio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-wtmoio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtmoio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -50,33 +50,33 @@ package Ada.Wide_Text_IO.Modular_IO is\n    Default_Base  : Number_Base := 10;\n \n    procedure Get\n-     (File  : in File_Type;\n+     (File  : File_Type;\n       Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Get\n      (Item  : out Num;\n-      Width : in Field := 0);\n+      Width : Field := 0);\n \n    procedure Put\n-     (File  : in File_Type;\n-      Item  : in Num;\n-      Width : in Field := Default_Width;\n-      Base  : in Number_Base := Default_Base);\n+     (File  : File_Type;\n+      Item  : Num;\n+      Width : Field := Default_Width;\n+      Base  : Number_Base := Default_Base);\n \n    procedure Put\n-     (Item  : in Num;\n-      Width : in Field := Default_Width;\n-      Base  : in Number_Base := Default_Base);\n+     (Item  : Num;\n+      Width : Field := Default_Width;\n+      Base  : Number_Base := Default_Base);\n \n    procedure Get\n-     (From : in Wide_String;\n+     (From : Wide_String;\n       Item : out Num;\n       Last : out Positive);\n \n    procedure Put\n      (To   : out Wide_String;\n-      Item : in Num;\n-      Base : in Number_Base := Default_Base);\n+      Item : Num;\n+      Base : Number_Base := Default_Base);\n \n end Ada.Wide_Text_IO.Modular_IO;"}, {"sha": "69c4ed694cdf9d8a202bac454502bbda6bf002b3", "filename": "gcc/ada/a-ztcoio.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ztcoio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ztcoio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztcoio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -56,9 +56,9 @@ package body Ada.Wide_Wide_Text_IO.Complex_IO is\n    ---------\n \n    procedure Get\n-     (File  :  File_Type;\n+     (File  : File_Type;\n       Item  : out Complex;\n-      Width :  Field := 0)\n+      Width : Field := 0)\n    is\n       Real_Item : Real'Base;\n       Imag_Item : Real'Base;"}, {"sha": "472075057dabfc130bfb3d18728f16e61d315cef", "filename": "gcc/ada/a-ztedit.adb", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ztedit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ztedit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztedit.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -53,7 +53,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n    -- Blank_When_Zero --\n    ---------------------\n \n-   function Blank_When_Zero (Pic : in Picture) return Boolean is\n+   function Blank_When_Zero (Pic : Picture) return Boolean is\n    begin\n       return Pic.Contents.Original_BWZ;\n    end Blank_When_Zero;\n@@ -195,7 +195,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n    -- Expand --\n    ------------\n \n-   function Expand (Picture : in String) return String is\n+   function Expand (Picture : String) return String is\n       Result        : String (1 .. MAX_PICSIZE);\n       Picture_Index : Integer := Picture'First;\n       Result_Index  : Integer := Result'First;\n@@ -309,9 +309,9 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n \n       Sign_Position : Integer := Pic.Sign_Position; --  may float.\n \n-      Answer        : Wide_Wide_String (1 .. Pic.Picture.Length);\n-      Last          : Integer;\n-      Currency_Pos  : Integer := Pic.Start_Currency;\n+      Answer       : Wide_Wide_String (1 .. Pic.Picture.Length);\n+      Last         : Integer;\n+      Currency_Pos : Integer := Pic.Start_Currency;\n \n       Dollar : Boolean := False;\n       --  Overridden immediately if necessary\n@@ -1097,7 +1097,7 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n    --  The following ensures that we return B and not b being careful not\n    --  to break things which expect lower case b for blank. See CXF3A02.\n \n-   function Pic_String (Pic : in Picture) return String is\n+   function Pic_String (Pic : Picture) return String is\n       Temp : String (1 .. Pic.Contents.Picture.Length) :=\n                               Pic.Contents.Picture.Expanded;\n    begin\n@@ -2757,11 +2757,10 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n          Format_Rec.Original_BWZ := Blank_When_Zero;\n          Precalculate (Format_Rec);\n \n-         --  False only if Blank_When_0 is True but the pic string\n-         --  has a '*'\n+         --  False only if Blank_When_0 is True but the pic string has a '*'\n \n-         return not Blank_When_Zero or\n-           Strings_Fixed.Index (Expanded_Pic, \"*\") = 0;\n+         return not Blank_When_Zero\n+           or else Strings_Fixed.Index (Expanded_Pic, \"*\") = 0;\n       end;\n \n    exception"}, {"sha": "e72bba781a179e339d9c118e724374e25526f6eb", "filename": "gcc/ada/a-ztedit.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ztedit.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ztedit.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztedit.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -47,8 +47,8 @@ package Ada.Wide_Wide_Text_IO.Editing is\n      (Pic_String      : String;\n       Blank_When_Zero : Boolean := False) return Picture;\n \n-   function Pic_String      (Pic : in Picture) return String;\n-   function Blank_When_Zero (Pic : in Picture) return Boolean;\n+   function Pic_String      (Pic : Picture) return String;\n+   function Blank_When_Zero (Pic : Picture) return Boolean;\n \n    Max_Picture_Length : constant := 64;\n \n@@ -195,6 +195,6 @@ private\n       Radix_Point         : Wide_Wide_Character) return Wide_Wide_String;\n    --  Formats number according to Pic\n \n-   function Expand (Picture : in String) return String;\n+   function Expand (Picture : String) return String;\n \n end Ada.Wide_Wide_Text_IO.Editing;"}, {"sha": "01d996c418eb2844a71c48c405aceae8d6b9aa37", "filename": "gcc/ada/a-ztenau.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ztenau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ztenau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztenau.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -192,9 +192,9 @@ package body Ada.Wide_Wide_Text_IO.Enumeration_Aux is\n    ----------\n \n    procedure Puts\n-     (To    : out Wide_Wide_String;\n-      Item  : Wide_Wide_String;\n-      Set   : Type_Set)\n+     (To   : out Wide_Wide_String;\n+      Item : Wide_Wide_String;\n+      Set  : Type_Set)\n    is\n       Ptr : Natural;\n "}, {"sha": "b24184d01f81e12e48a1b1783c1b4a390abc1c54", "filename": "gcc/ada/a-ztenau.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ztenau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fa-ztenau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztenau.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,9 +62,9 @@ private package Ada.Wide_Wide_Text_IO.Enumeration_Aux is\n    --  using the given Width and Set parameters (Item is always in upper case).\n \n    procedure Puts\n-     (To    : out Wide_Wide_String;\n-      Item  : Wide_Wide_String;\n-      Set   : Type_Set);\n+     (To   : out Wide_Wide_String;\n+      Item : Wide_Wide_String;\n+      Set  : Type_Set);\n    --  Stores the enumeration literal image stored in Item to the string To,\n    --  padding with trailing spaces if necessary to fill To. Set is used to\n "}, {"sha": "1801217cc1e9288c0c473dbfcab5232d24008dcc", "filename": "gcc/ada/eval_fat.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Feval_fat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Feval_fat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feval_fat.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -52,7 +52,7 @@ package body Eval_Fat is\n \n    procedure Decompose\n      (RT       : R;\n-      X        : in T;\n+      X        : T;\n       Fraction : out T;\n       Exponent : out UI;\n       Mode     : Rounding_Mode := Round);\n@@ -63,7 +63,7 @@ package body Eval_Fat is\n \n    procedure Decompose_Int\n      (RT       : R;\n-      X        : in T;\n+      X        : T;\n       Fraction : out UI;\n       Exponent : out UI;\n       Mode     : Rounding_Mode);\n@@ -148,7 +148,7 @@ package body Eval_Fat is\n \n    procedure Decompose\n      (RT       : R;\n-      X        : in T;\n+      X        : T;\n       Fraction : out T;\n       Exponent : out UI;\n       Mode     : Rounding_Mode := Round)\n@@ -182,7 +182,7 @@ package body Eval_Fat is\n \n    procedure Decompose_Int\n      (RT       : R;\n-      X        : in T;\n+      X        : T;\n       Fraction : out UI;\n       Exponent : out UI;\n       Mode     : Rounding_Mode)"}, {"sha": "43e3a24c9912c5ce4c3bd1040bf00e0023ec702c", "filename": "gcc/ada/exp_dist.ads", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fexp_dist.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fexp_dist.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,44 +31,44 @@ with Types; use Types;\n \n package Exp_Dist is\n \n-   procedure Add_RAST_Features (Vis_Decl : in Node_Id);\n+   procedure Add_RAST_Features (Vis_Decl : Node_Id);\n    --  Build and add bodies for dereference and 'Access subprograms for a\n    --  remote access to subprogram type. Vis_Decl is the declaration node for\n    --  the RAS type.\n \n-   procedure Add_RACW_Features (RACW_Type : in Entity_Id);\n+   procedure Add_RACW_Features (RACW_Type : Entity_Id);\n    --  Add RACW features. If the RACW and the designated type are not in the\n    --  same scope, then Add_RACW_Primitive_Declarations_And_Bodies is called\n    --  automatically since we do know the primitive list already.\n \n    procedure Add_RACW_Primitive_Declarations_And_Bodies\n-     (Designated_Type : in Entity_Id;\n-      Insertion_Node  : in Node_Id;\n-      Decls           : in List_Id);\n+     (Designated_Type : Entity_Id;\n+      Insertion_Node  : Node_Id;\n+      Decls           : List_Id);\n    --  Add primitive for the stub type, and the RPC receiver. The declarations\n    --  are inserted after insertion_Node, while the bodies are appened at the\n    --  end of Decls.\n \n    procedure Remote_Types_Tagged_Full_View_Encountered\n-     (Full_View : in Entity_Id);\n+     (Full_View : Entity_Id);\n    --  When a full view with a private view is encountered in a Remote_Types\n    --  package and corresponds to a tagged type, then this procedure is called\n    --  to generate the needed RACW features if it is needed.\n \n-   procedure RACW_Type_Is_Asynchronous (RACW_Type : in Entity_Id);\n+   procedure RACW_Type_Is_Asynchronous (RACW_Type : Entity_Id);\n    --  This subprogram must be called when it is detected that the RACW type\n    --  is asynchronous.\n \n-   procedure Expand_Calling_Stubs_Bodies (Unit_Node : in Node_Id);\n+   procedure Expand_Calling_Stubs_Bodies (Unit_Node : Node_Id);\n    --  Call the expansion phase for the calling stubs. The code will be added\n    --  at the end of the compilation unit, which is a package spec.\n \n-   procedure Expand_Receiving_Stubs_Bodies (Unit_Node : in Node_Id);\n+   procedure Expand_Receiving_Stubs_Bodies (Unit_Node : Node_Id);\n    --  Call the expansion phase for the calling stubs. The code will be added\n    --  at the end of the compilation unit, which may be either a package spec\n    --  or a package body.\n \n-   procedure Expand_All_Calls_Remote_Subprogram_Call (N : in Node_Id);\n+   procedure Expand_All_Calls_Remote_Subprogram_Call (N : Node_Id);\n    --  Rewrite a call to a subprogram located in a Remote_Call_Interface\n    --  package on which the pragma All_Calls_Remote applies so that it\n    --  goes through the PCS. N is either an N_Procedure_Call_Statement"}, {"sha": "6cbea2b1edaba9953ffd75b0df441b5351a33169", "filename": "gcc/ada/exp_smem.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fexp_smem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fexp_smem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_smem.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -57,9 +57,7 @@ package body Exp_Smem is\n    --  to the assignment statement) or Is_Out_Actual (where it points to\n    --  the procedure call statement).\n \n-   procedure Build_Full_Name\n-     (E : in  Entity_Id;\n-      N : out String_Id);\n+   procedure Build_Full_Name (E : Entity_Id; N : out String_Id);\n    --  Build the fully qualified string name of a shared variable\n \n    function On_Lhs_Of_Assignment (N : Node_Id) return Boolean;\n@@ -181,15 +179,15 @@ package body Exp_Smem is\n    -- Build_Full_Name --\n    ---------------------\n \n-   procedure Build_Full_Name\n-     (E : in  Entity_Id;\n-      N : out String_Id)\n-   is\n+   procedure Build_Full_Name (E : Entity_Id; N : out String_Id) is\n \n       procedure Build_Name (E : Entity_Id);\n-      --  This is a recursive routine used to construct the fully\n-      --  qualified string name of the package corresponding to the\n-      --  shared variable.\n+      --  This is a recursive routine used to construct the fully qualified\n+      --  string name of the package corresponding to the shared variable.\n+\n+      ----------------\n+      -- Build_Name --\n+      ----------------\n \n       procedure Build_Name (E : Entity_Id) is\n       begin\n@@ -202,6 +200,8 @@ package body Exp_Smem is\n          Store_String_Chars (Name_Buffer (1 .. Name_Len));\n       end Build_Name;\n \n+   --  Start of processing for Build_Full_Name\n+\n    begin\n       Start_String;\n       Build_Name (E);"}, {"sha": "cb2e3524ef8781f6e2ed2a8d5f400dfaa079d428", "filename": "gcc/ada/fmap.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Ffmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Ffmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -214,8 +214,8 @@ package body Fmap is\n \n          while First < SP'Last\n            and then (SP (First) = CR\n-                     or else SP (First) = LF\n-                     or else SP (First) = EOF)\n+                      or else SP (First) = LF\n+                      or else SP (First) = EOF)\n          loop\n             First := First + 1;\n          end loop;"}, {"sha": "a8ac5f1a92137ef22d60fb38bf7413f4c0e7f479", "filename": "gcc/ada/g-boubuf.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fg-boubuf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fg-boubuf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-boubuf.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2003-2005, AdaCore                     --\n+--                     Copyright (C) 2003-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,7 +42,7 @@ package body GNAT.Bounded_Buffers is\n       -- Insert --\n       ------------\n \n-      entry Insert (Item : in Element) when Count /= Capacity is\n+      entry Insert (Item : Element) when Count /= Capacity is\n       begin\n          Values (Next_In) := Item;\n          Next_In := (Next_In mod Capacity) + 1;"}, {"sha": "19d477f35988a99b1be83c9c5cf8f52c1de90f82", "filename": "gcc/ada/g-boubuf.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fg-boubuf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fg-boubuf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-boubuf.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2003-2005, AdaCore                     --\n+--                     Copyright (C) 2003-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -66,7 +66,7 @@ package GNAT.Bounded_Buffers is\n    is\n       pragma Priority (Ceiling);\n \n-      entry Insert (Item : in Element);\n+      entry Insert (Item : Element);\n       --  Insert Item into the buffer, blocks caller until space is available\n \n       entry Remove (Item : out Element);"}, {"sha": "6b8020fb4cad0482c536c3ea6b3a06fdd704b89e", "filename": "gcc/ada/g-cgideb.adb", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fg-cgideb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fg-cgideb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-cgideb.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2005, AdaCore                     --\n+--                     Copyright (C) 2000-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,7 +47,7 @@ package body GNAT.CGI.Debug is\n \n       type Format is abstract tagged null record;\n \n-      function Output (Mode : in Format'Class) return String;\n+      function Output (Mode : Format'Class) return String;\n \n       function Variable\n         (Mode  : Format;\n@@ -86,11 +86,11 @@ package body GNAT.CGI.Debug is\n          Name  : String;\n          Value : String) return String;\n \n-      function New_Line (IO : in Format) return String;\n+      function New_Line (IO : Format) return String;\n \n-      function Title (IO : in Format; Str : in String) return String;\n+      function Title (IO : Format; Str : String) return String;\n \n-      function Header (IO : in Format; Str : in String) return String;\n+      function Header (IO : Format; Str : String) return String;\n \n    end HTML_IO;\n \n@@ -109,11 +109,11 @@ package body GNAT.CGI.Debug is\n          Name  : String;\n          Value : String) return String;\n \n-      function New_Line (IO : in Format) return String;\n+      function New_Line (IO : Format) return String;\n \n-      function Title (IO : in Format; Str : in String) return String;\n+      function Title (IO : Format; Str : String) return String;\n \n-      function Header (IO : in Format; Str : in String) return String;\n+      function Header (IO : Format; Str : String) return String;\n \n    end Text_IO;\n \n@@ -127,7 +127,7 @@ package body GNAT.CGI.Debug is\n       -- Output --\n       ------------\n \n-      function Output (Mode : in Format'Class) return String is\n+      function Output (Mode : Format'Class) return String is\n          Result : Unbounded_String;\n \n       begin\n@@ -172,17 +172,17 @@ package body GNAT.CGI.Debug is\n \n       NL : constant String := (1 => ASCII.LF);\n \n-      function Bold (S : in String) return String;\n+      function Bold (S : String) return String;\n       --  Returns S as an HTML bold string\n \n-      function Italic (S : in String) return String;\n+      function Italic (S : String) return String;\n       --  Returns S as an HTML italic string\n \n       ----------\n       -- Bold --\n       ----------\n \n-      function Bold (S : in String) return String is\n+      function Bold (S : String) return String is\n       begin\n          return \"<b>\" & S & \"</b>\";\n       end Bold;\n@@ -191,7 +191,7 @@ package body GNAT.CGI.Debug is\n       -- Header --\n       ------------\n \n-      function Header (IO : in Format; Str : in String) return String is\n+      function Header (IO : Format; Str : String) return String is\n          pragma Unreferenced (IO);\n       begin\n          return \"<h2>\" & Str & \"</h2>\" & NL;\n@@ -201,7 +201,7 @@ package body GNAT.CGI.Debug is\n       -- Italic --\n       ------------\n \n-      function Italic (S : in String) return String is\n+      function Italic (S : String) return String is\n       begin\n          return \"<i>\" & S & \"</i>\";\n       end Italic;\n@@ -210,7 +210,7 @@ package body GNAT.CGI.Debug is\n       -- New_Line --\n       --------------\n \n-      function New_Line (IO : in Format) return String is\n+      function New_Line (IO : Format) return String is\n          pragma Unreferenced (IO);\n       begin\n          return \"<br>\" & NL;\n@@ -220,7 +220,7 @@ package body GNAT.CGI.Debug is\n       -- Title --\n       -----------\n \n-      function Title (IO : in Format; Str : in String) return String is\n+      function Title (IO : Format; Str : String) return String is\n          pragma Unreferenced (IO);\n       begin\n          return \"<p align=center><font size=+2>\" & Str & \"</font></p>\" & NL;\n@@ -252,7 +252,7 @@ package body GNAT.CGI.Debug is\n       -- Header --\n       ------------\n \n-      function Header (IO : in Format; Str : in String) return String is\n+      function Header (IO : Format; Str : String) return String is\n       begin\n          return \"*** \" & Str & New_Line (IO);\n       end Header;\n@@ -261,7 +261,7 @@ package body GNAT.CGI.Debug is\n       -- New_Line --\n       --------------\n \n-      function New_Line (IO : in Format) return String is\n+      function New_Line (IO : Format) return String is\n          pragma Unreferenced (IO);\n       begin\n          return String'(1 => ASCII.LF);\n@@ -271,7 +271,7 @@ package body GNAT.CGI.Debug is\n       -- Title --\n       -----------\n \n-      function Title (IO : in Format; Str : in String) return String is\n+      function Title (IO : Format; Str : String) return String is\n          Spaces : constant Natural := (80 - Str'Length) / 2;\n          Indent : constant String (1 .. Spaces) := (others => ' ');\n       begin"}, {"sha": "8c1e112669a6082f72fe738ca23c284c4b1a8b95", "filename": "gcc/ada/g-dyntab.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fg-dyntab.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fg-dyntab.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dyntab.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2005, AdaCore                     --\n+--                     Copyright (C) 2000-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -122,7 +122,7 @@ package GNAT.Dynamic_Tables is\n    --  previously allocated larger table). Init must be called before using\n    --  the table. Init is convenient in reestablishing a table for new use.\n \n-   function Last (T : in Instance) return Table_Index_Type;\n+   function Last (T : Instance) return Table_Index_Type;\n    pragma Inline (Last);\n    --  Returns the current value of the last used entry in the table,\n    --  which can then be used as a subscript for Table. Note that the"}, {"sha": "c4902b51d0e9dca9a1b02d01904b085177e30e03", "filename": "gcc/ada/g-expect.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fg-expect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fg-expect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -972,9 +972,9 @@ package body GNAT.Expect is\n \n          for J in Args'Range loop\n             Arg                     := new String (1 .. Args (J)'Length + 1);\n-            Arg (1 .. Args (J)'Length)  := Args (J).all;\n-            Arg (Arg'Last)              := ASCII.NUL;\n-            Arg_List (J + 2 - Args'First)   := Arg.all'Access;\n+            Arg (1 .. Args (J)'Length)    := Args (J).all;\n+            Arg (Arg'Last)                := ASCII.NUL;\n+            Arg_List (J + 2 - Args'First) := Arg.all'Access;\n          end loop;\n \n          Arg_List (Arg_List'Last) := null;\n@@ -1163,8 +1163,8 @@ package body GNAT.Expect is\n       Pipe1 : in out Pipe_Type;\n       Pipe2 : in out Pipe_Type;\n       Pipe3 : in out Pipe_Type;\n-      Cmd   : in String;\n-      Args  : in System.Address)\n+      Cmd   : String;\n+      Args  : System.Address)\n    is\n       pragma Warnings (Off, Pid);\n "}, {"sha": "d7b5b1fc0f4b00227831292a3f464597b40545eb", "filename": "gcc/ada/g-io.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fg-io.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fg-io.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-io.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005, AdaCore                     --\n+--                     Copyright (C) 1995-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -122,7 +122,7 @@ package body GNAT.IO is\n       Put (Current_Out, C);\n    end Put;\n \n-   procedure Put (File : in File_Type; C : Character) is\n+   procedure Put (File : File_Type; C : Character) is\n       procedure Put_Char (C : Character);\n       pragma Import (C, Put_Char, \"put_char\");\n \n@@ -167,7 +167,7 @@ package body GNAT.IO is\n    -- Set_Output --\n    ----------------\n \n-   procedure Set_Output (File : in File_Type) is\n+   procedure Set_Output (File : File_Type) is\n    begin\n       Current_Out := File;\n    end Set_Output;"}, {"sha": "cf8b62a90f16e5ab412ea027df72b70e62cc1af9", "filename": "gcc/ada/g-pehage.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fg-pehage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fg-pehage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-pehage.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2002-2005, AdaCore                     --\n+--                     Copyright (C) 2002-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1965,7 +1965,7 @@ package body GNAT.Perfect_Hash_Generators is\n       procedure Build_Identical_Keys_Sets\n         (Table : in out Vertex_Table_Type;\n          Last  : in out Natural;\n-         Pos   : in Natural);\n+         Pos   : Natural);\n       --  Build a list of keys subsets that are identical with the current\n       --  position selection plus Pos. Once this routine is called, reduced\n       --  words are sorted by subsets and each item (First, Last) in Sets\n@@ -1989,7 +1989,7 @@ package body GNAT.Perfect_Hash_Generators is\n       procedure Build_Identical_Keys_Sets\n         (Table : in out Vertex_Table_Type;\n          Last  : in out Natural;\n-         Pos   : in Natural)\n+         Pos   : Natural)\n       is\n          S : constant Vertex_Table_Type := Table (1 .. Last);\n          C : constant Natural           := Pos;"}, {"sha": "7d2ce5bc14c7d59f250c29522f4343c70129ad13", "filename": "gcc/ada/g-spitbo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fg-spitbo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fg-spitbo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-spitbo.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2005, AdaCore                     --\n+--                     Copyright (C) 1998-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -428,7 +428,7 @@ package body GNAT.Spitbol is\n       -- Copy --\n       ----------\n \n-      procedure Copy (From : in Table; To : in out Table) is\n+      procedure Copy (From : Table; To : in out Table) is\n          Elmt : Hash_Element_Ptr;\n \n       begin"}, {"sha": "c87a20ea8b853179a39955079c400dec7c3e4944", "filename": "gcc/ada/g-spitbo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fg-spitbo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fg-spitbo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-spitbo.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1997-2005, AdaCore                     --\n+--                     Copyright (C) 1997-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -310,7 +310,7 @@ package GNAT.Spitbol is\n       --  Clears all the elements of the given table, freeing associated\n       --  storage. On return T is an empty table with no elements.\n \n-      procedure Copy (From : in Table; To : in out Table);\n+      procedure Copy (From : Table; To : in out Table);\n       --  First all the elements of table To are cleared (as described for\n       --  the Clear procedure above), then all the elements of table From\n       --  are copied into To. In the case where the tables From and To have"}, {"sha": "fdcf6b4c8c032351da6c7230db3d815f2dc7785f", "filename": "gcc/ada/gnatdll.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fgnatdll.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fgnatdll.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatdll.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1997-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1997-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -152,7 +152,7 @@ procedure Gnatdll is\n    -- Check --\n    -----------\n \n-   procedure Check (Filename : in String) is\n+   procedure Check (Filename : String) is\n    begin\n       if not Is_Regular_File (Filename) then\n          Raise_Exception\n@@ -166,10 +166,10 @@ procedure Gnatdll is\n \n    procedure Parse_Command_Line is\n \n-      procedure Add_File (Filename : in String);\n+      procedure Add_File (Filename : String);\n       --  Add one file to the list of file to handle\n \n-      procedure Add_Files_From_List (List_Filename : in String);\n+      procedure Add_Files_From_List (List_Filename : String);\n       --  Add the files listed in List_Filename (one by line) to the list\n       --  of file to handle\n \n@@ -207,7 +207,7 @@ procedure Gnatdll is\n       -- Add_File --\n       --------------\n \n-      procedure Add_File (Filename : in String) is\n+      procedure Add_File (Filename : String) is\n       begin\n          if Is_Ali (Filename) then\n             Check (Filename);\n@@ -239,7 +239,7 @@ procedure Gnatdll is\n       -- Add_Files_From_List --\n       -------------------------\n \n-      procedure Add_Files_From_List (List_Filename : in String) is\n+      procedure Add_Files_From_List (List_Filename : String) is\n          File   : File_Type;\n          Buffer : String (1 .. 500);\n          Last   : Natural;"}, {"sha": "54dbd457b92c27eb1d079b7f0edc01ebe04786b0", "filename": "gcc/ada/i-c.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fi-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fi-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-c.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -79,7 +79,7 @@ package Interfaces.C is\n    type char_array is array (size_t range <>) of aliased char;\n    for char_array'Component_Size use CHAR_BIT;\n \n-   function Is_Nul_Terminated (Item : in char_array) return Boolean;\n+   function Is_Nul_Terminated (Item : char_array) return Boolean;\n \n    function To_C\n      (Item       : String;"}, {"sha": "d8edec7daf4930167530186798c9437f894e49e8", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 91, "deletions": 91, "changes": 182, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -379,105 +379,105 @@ package Lib.Xref is\n    --  indicating procedures and functions. If the operation is abstract,\n    --  these letters are replaced in the xref by 'x' and 'y' respectively.\n \n-   Xref_Entity_Letters : array (Entity_Kind) of Character := (\n-      E_Void                             => ' ',\n-      E_Variable                         => '*',\n-      E_Component                        => '*',\n-      E_Constant                         => '*',\n-      E_Discriminant                     => '*',\n-\n-      E_Loop_Parameter                   => '*',\n-      E_In_Parameter                     => '*',\n-      E_Out_Parameter                    => '*',\n-      E_In_Out_Parameter                 => '*',\n-      E_Generic_In_Out_Parameter         => '*',\n-\n-      E_Generic_In_Parameter             => '*',\n-      E_Named_Integer                    => 'N',\n-      E_Named_Real                       => 'N',\n-      E_Enumeration_Type                 => 'E',  -- B for boolean\n-      E_Enumeration_Subtype              => 'E',  -- B for boolean\n-\n-      E_Signed_Integer_Type              => 'I',\n-      E_Signed_Integer_Subtype           => 'I',\n-      E_Modular_Integer_Type             => 'M',\n-      E_Modular_Integer_Subtype          => 'M',\n-      E_Ordinary_Fixed_Point_Type        => 'O',\n-\n-      E_Ordinary_Fixed_Point_Subtype     => 'O',\n-      E_Decimal_Fixed_Point_Type         => 'D',\n-      E_Decimal_Fixed_Point_Subtype      => 'D',\n-      E_Floating_Point_Type              => 'F',\n-      E_Floating_Point_Subtype           => 'F',\n-\n-      E_Access_Type                      => 'P',\n-      E_Access_Subtype                   => 'P',\n-      E_Access_Attribute_Type            => 'P',\n-      E_Allocator_Type                   => ' ',\n-      E_General_Access_Type              => 'P',\n-\n-      E_Access_Subprogram_Type           => 'P',\n-      E_Access_Protected_Subprogram_Type => 'P',\n-      E_Anonymous_Access_Subprogram_Type => ' ',\n+   Xref_Entity_Letters : array (Entity_Kind) of Character :=\n+     (E_Void                                       => ' ',\n+      E_Variable                                   => '*',\n+      E_Component                                  => '*',\n+      E_Constant                                   => '*',\n+      E_Discriminant                               => '*',\n+\n+      E_Loop_Parameter                             => '*',\n+      E_In_Parameter                               => '*',\n+      E_Out_Parameter                              => '*',\n+      E_In_Out_Parameter                           => '*',\n+      E_Generic_In_Out_Parameter                   => '*',\n+\n+      E_Generic_In_Parameter                       => '*',\n+      E_Named_Integer                              => 'N',\n+      E_Named_Real                                 => 'N',\n+      E_Enumeration_Type                           => 'E',  -- B for boolean\n+      E_Enumeration_Subtype                        => 'E',  -- B for boolean\n+\n+      E_Signed_Integer_Type                        => 'I',\n+      E_Signed_Integer_Subtype                     => 'I',\n+      E_Modular_Integer_Type                       => 'M',\n+      E_Modular_Integer_Subtype                    => 'M',\n+      E_Ordinary_Fixed_Point_Type                  => 'O',\n+\n+      E_Ordinary_Fixed_Point_Subtype               => 'O',\n+      E_Decimal_Fixed_Point_Type                   => 'D',\n+      E_Decimal_Fixed_Point_Subtype                => 'D',\n+      E_Floating_Point_Type                        => 'F',\n+      E_Floating_Point_Subtype                     => 'F',\n+\n+      E_Access_Type                                => 'P',\n+      E_Access_Subtype                             => 'P',\n+      E_Access_Attribute_Type                      => 'P',\n+      E_Allocator_Type                             => ' ',\n+      E_General_Access_Type                        => 'P',\n+\n+      E_Access_Subprogram_Type                     => 'P',\n+      E_Access_Protected_Subprogram_Type           => 'P',\n+      E_Anonymous_Access_Subprogram_Type           => ' ',\n       E_Anonymous_Access_Protected_Subprogram_Type => ' ',\n-      E_Anonymous_Access_Type            => ' ',\n-      E_Array_Type                       => 'A',\n-      E_Array_Subtype                    => 'A',\n-\n-      E_String_Type                      => 'S',\n-      E_String_Subtype                   => 'S',\n-      E_String_Literal_Subtype           => ' ',\n-      E_Class_Wide_Type                  => 'C',\n-\n-      E_Class_Wide_Subtype               => 'C',\n-      E_Record_Type                      => 'R',\n-      E_Record_Subtype                   => 'R',\n-      E_Record_Type_With_Private         => 'R',\n-      E_Record_Subtype_With_Private      => 'R',\n-\n-      E_Private_Type                     => '+',\n-      E_Private_Subtype                  => '+',\n-      E_Limited_Private_Type             => '+',\n-      E_Limited_Private_Subtype          => '+',\n-      E_Incomplete_Type                  => '+',\n-\n-      E_Task_Type                        => 'T',\n-      E_Task_Subtype                     => 'T',\n-      E_Protected_Type                   => 'W',\n-      E_Protected_Subtype                => 'W',\n-      E_Exception_Type                   => ' ',\n-\n-      E_Subprogram_Type                  => ' ',\n-      E_Enumeration_Literal              => 'n',\n-      E_Function                         => 'V',\n-      E_Operator                         => 'V',\n-      E_Procedure                        => 'U',\n-\n-      E_Entry                            => 'Y',\n-      E_Entry_Family                     => 'Y',\n-      E_Block                            => 'q',\n-      E_Entry_Index_Parameter            => '*',\n-      E_Exception                        => 'X',\n-\n-      E_Generic_Function                 => 'v',\n-      E_Generic_Package                  => 'k',\n-      E_Generic_Procedure                => 'u',\n-      E_Label                            => 'L',\n-      E_Loop                             => 'l',\n-\n-      E_Package                          => 'K',\n+      E_Anonymous_Access_Type                      => ' ',\n+\n+      E_Array_Type                                 => 'A',\n+      E_Array_Subtype                              => 'A',\n+      E_String_Type                                => 'S',\n+      E_String_Subtype                             => 'S',\n+      E_String_Literal_Subtype                     => ' ',\n+\n+      E_Class_Wide_Type                            => 'C',\n+      E_Class_Wide_Subtype                         => 'C',\n+      E_Record_Type                                => 'R',\n+      E_Record_Subtype                             => 'R',\n+      E_Record_Type_With_Private                   => 'R',\n+\n+      E_Record_Subtype_With_Private                => 'R',\n+      E_Private_Type                               => '+',\n+      E_Private_Subtype                            => '+',\n+      E_Limited_Private_Type                       => '+',\n+      E_Limited_Private_Subtype                    => '+',\n+\n+      E_Incomplete_Type                            => '+',\n+      E_Task_Type                                  => 'T',\n+      E_Task_Subtype                               => 'T',\n+      E_Protected_Type                             => 'W',\n+      E_Protected_Subtype                          => 'W',\n+\n+      E_Exception_Type                             => ' ',\n+      E_Subprogram_Type                            => ' ',\n+      E_Enumeration_Literal                        => 'n',\n+      E_Function                                   => 'V',\n+      E_Operator                                   => 'V',\n+\n+      E_Procedure                                  => 'U',\n+      E_Entry                                      => 'Y',\n+      E_Entry_Family                               => 'Y',\n+      E_Block                                      => 'q',\n+      E_Entry_Index_Parameter                      => '*',\n+\n+      E_Exception                                  => 'X',\n+      E_Generic_Function                           => 'v',\n+      E_Generic_Package                            => 'k',\n+      E_Generic_Procedure                          => 'u',\n+      E_Label                                      => 'L',\n+\n+      E_Loop                                       => 'l',\n+      E_Package                                    => 'K',\n \n       --  The following entities are not ones to which we gather\n       --  cross-references, since it does not make sense to do so\n       --  (e.g. references to a package are to the spec, not the body)\n       --  Indeed the occurrence of the body entity is considered to\n       --  be a reference to the spec entity.\n \n-      E_Package_Body                     => ' ',\n-      E_Protected_Object                 => ' ',\n-      E_Protected_Body                   => ' ',\n-      E_Task_Body                        => ' ',\n-      E_Subprogram_Body                  => ' ');\n+      E_Package_Body                               => ' ',\n+      E_Protected_Object                           => ' ',\n+      E_Protected_Body                             => ' ',\n+      E_Task_Body                                  => ' ',\n+      E_Subprogram_Body                            => ' ');\n \n    --  The following table is for information purposes. It shows the\n    --  use of each character appearing as an entity type."}, {"sha": "66ee95b92b315de2503c0a0a20cc5f83d0914357", "filename": "gcc/ada/makegpr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fmakegpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fmakegpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakegpr.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2086,7 +2086,7 @@ package body Makegpr is\n \n    procedure Compile\n      (Source_Id    : Other_Source_Id;\n-      Data         : in Project_Data;\n+      Data         : Project_Data;\n       Local_Errors : in out Boolean)\n    is\n       Source  : Other_Source :="}, {"sha": "2e7ae46ee9ecac03e0766809f1851cd9456481cf", "filename": "gcc/ada/mdll.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fmdll.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fmdll.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmdll.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -483,7 +483,7 @@ package body MDLL is\n    -- Get_Dll_Name --\n    ------------------\n \n-   function Get_Dll_Name (Lib_Filename : in String) return String is\n+   function Get_Dll_Name (Lib_Filename : String) return String is\n    begin\n       if MDLL.Fil.Get_Ext (Lib_Filename) = \"\" then\n          return Lib_Filename & \".dll\";"}, {"sha": "cad17478766be88b8c706ae476d8e10464249ac1", "filename": "gcc/ada/mlib-fil.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fmlib-fil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fmlib-fil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-fil.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2005, AdaCore                     --\n+--                     Copyright (C) 2001-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,6 +45,7 @@ package body MLib.Fil is\n       return     String\n    is\n       use Strings.Fixed;\n+\n       J : constant Natural :=\n             Index (Source  =>  Filename,\n                    Pattern => \".\",\n@@ -71,7 +72,7 @@ package body MLib.Fil is\n    -- Get_Ext --\n    -------------\n \n-   function Get_Ext (Filename : in String) return String is\n+   function Get_Ext (Filename : String) return String is\n       use Strings.Fixed;\n \n       J : constant Natural :=\n@@ -93,7 +94,6 @@ package body MLib.Fil is\n \n    function Is_Archive (Filename : String) return Boolean is\n       Ext : constant String := Get_Ext (Filename);\n-\n    begin\n       return Target.Is_Archive_Ext (Ext);\n    end Is_Archive;\n@@ -102,9 +102,8 @@ package body MLib.Fil is\n    -- Is_C --\n    ----------\n \n-   function Is_C (Filename : in String) return Boolean is\n+   function Is_C (Filename : String) return Boolean is\n       Ext : constant String := Get_Ext (Filename);\n-\n    begin\n       return Target.Is_C_Ext (Ext);\n    end Is_C;\n@@ -113,9 +112,8 @@ package body MLib.Fil is\n    -- Is_Obj --\n    ------------\n \n-   function Is_Obj (Filename : in String) return Boolean is\n+   function Is_Obj (Filename : String) return Boolean is\n       Ext : constant String := Get_Ext (Filename);\n-\n    begin\n       return Target.Is_Object_Ext (Ext);\n    end Is_Obj;"}, {"sha": "ab0689b94596aeb79c78924de4f22c658b2849a5", "filename": "gcc/ada/mlib-utl.adb", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fmlib-utl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fmlib-utl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-utl.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2002-2005, AdaCore                     --\n+--                     Copyright (C) 2002-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -60,10 +60,8 @@ package body MLib.Utl is\n       Full_Output_File : constant String :=\n                              Ext_To (Output_File, Archive_Ext);\n \n-      Arguments : OS_Lib.Argument_List_Access;\n-\n-      Success   : Boolean;\n-\n+      Arguments   : OS_Lib.Argument_List_Access;\n+      Success     : Boolean;\n       Line_Length : Natural := 0;\n \n    begin\n@@ -128,8 +126,8 @@ package body MLib.Utl is\n    -- Delete_File --\n    -----------------\n \n-   procedure Delete_File (Filename : in String) is\n-      File   : constant String := Filename & ASCII.Nul;\n+   procedure Delete_File (Filename : String) is\n+      File    : constant String := Filename & ASCII.Nul;\n       Success : Boolean;\n \n    begin\n@@ -174,7 +172,8 @@ package body MLib.Utl is\n       Lib_Opt : constant OS_Lib.String_Access :=\n                   new String'(Dynamic_Option);\n \n-      Driver  : String_Access;\n+      Driver    : String_Access;\n+\n    begin\n       Utl.Initialize;\n "}, {"sha": "0050110bf99158b9183a784884c30c9c75fbb090", "filename": "gcc/ada/mlib-utl.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fmlib-utl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fmlib-utl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-utl.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2005, AdaCore                     --\n+--                     Copyright (C) 2001-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,7 +29,7 @@\n \n package MLib.Utl is\n \n-   procedure Delete_File (Filename : in String);\n+   procedure Delete_File (Filename : String);\n    --  Delete the file Filename\n    --  Why is this different from the standard OS_Lib routine???\n "}, {"sha": "fd511d7068939e1441050b89dd3cbe4951060e86", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1414,7 +1414,7 @@ package body Osint is\n    -- Is_Readonly_Library --\n    -------------------------\n \n-   function Is_Readonly_Library (File : in File_Name_Type) return Boolean is\n+   function Is_Readonly_Library (File : File_Name_Type) return Boolean is\n    begin\n       Get_Name_String (File);\n "}, {"sha": "31a975554b29f2a4ba7832be7ab8aec67cbf147a", "filename": "gcc/ada/par-load.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fpar-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fpar-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-load.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -299,7 +299,7 @@ begin\n    --  If current unit is a child unit spec, load its parent. If the child unit\n    --  is loaded through a limited with, the parent must be as well.\n \n-   elsif     Nkind (Unit (Curunit)) = N_Package_Declaration\n+   elsif     Nkind (Unit (Curunit)) =  N_Package_Declaration\n      or else Nkind (Unit (Curunit)) =  N_Subprogram_Declaration\n      or else Nkind (Unit (Curunit)) in N_Generic_Declaration\n      or else Nkind (Unit (Curunit)) in N_Generic_Instantiation"}, {"sha": "c6668a5599f3fae2986cacaca540950007b50849", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -120,7 +120,8 @@ package body Prj.Env is\n    --  Call Setenv, after calling To_Host_File_Spec\n \n    function Ultimate_Extension_Of\n-     (Project : in Project_Id; In_Tree : Project_Tree_Ref) return Project_Id;\n+     (Project : Project_Id;\n+      In_Tree : Project_Tree_Ref) return Project_Id;\n    --  Return a project that is either Project or an extended ancestor of\n    --  Project that itself is not extended.\n \n@@ -2405,7 +2406,8 @@ package body Prj.Env is\n    ---------------------------\n \n    function Ultimate_Extension_Of\n-     (Project : Project_Id; In_Tree : Project_Tree_Ref) return Project_Id\n+     (Project : Project_Id;\n+      In_Tree : Project_Tree_Ref) return Project_Id\n    is\n       Result : Project_Id := Project;\n "}, {"sha": "3bd65344022ece85eb8cbd7419acd4292f7c8782", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1429,7 +1429,7 @@ package body Prj.Tree is\n    -- Restore --\n    -------------\n \n-   procedure Restore (S : in Comment_State) is\n+   procedure Restore (S : Comment_State) is\n    begin\n       End_Of_Line_Node   := S.End_Of_Line_Node;\n       Previous_Line_Node := S.Previous_Line_Node;"}, {"sha": "c3bdfd0665c4ccaa2c5e7c4ace8738b0ed59b78d", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -122,7 +122,7 @@ package Prj.Tree is\n    --  Save in variable S the comment state. Called before scanning a new\n    --  project file.\n \n-   procedure Restore (S : in Comment_State);\n+   procedure Restore (S : Comment_State);\n    --  Restore the comment state to a previously saved value. Called after\n    --  scanning a project file.\n "}, {"sha": "efc0a68749c46136857ddc929ae74697664438f0", "filename": "gcc/ada/prj-util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fprj-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fprj-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -357,7 +357,7 @@ package body Prj.Util is\n    -- Open --\n    ----------\n \n-   procedure Open (File : out Text_File; Name : in String) is\n+   procedure Open (File : out Text_File; Name : String) is\n       FD        : File_Descriptor;\n       File_Name : String (1 .. Name'Length + 1);\n "}, {"sha": "f12c1eb1c832df1e9d91a15d10c5529483514cfc", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "d91e08d462f755ea7ea1db104ef407669c7a329f", "filename": "gcc/ada/s-arit64.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-arit64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-arit64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-arit64.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -83,7 +83,7 @@ package body System.Arith_64 is\n    pragma Inline (Hi);\n    --  High order half of 64-bit value\n \n-   procedure Sub3 (X1, X2, X3 : in out Uns32; Y1, Y2, Y3 : in Uns32);\n+   procedure Sub3 (X1, X2, X3 : in out Uns32; Y1, Y2, Y3 : Uns32);\n    --  Computes X1&X2&X3 := X1&X2&X3 - Y1&Y1&Y3 with mod 2**96 wrap\n \n    function To_Neg_Int (A : Uns64) return Int64;\n@@ -542,7 +542,7 @@ package body System.Arith_64 is\n          D (3) := Lo (T2) or Hi (T3);\n          D (4) := Lo (T3);\n \n-         --  Loop to compute quotient digits, runs twice for Qd(1) and Qd(2).\n+         --  Loop to compute quotient digits, runs twice for Qd(1) and Qd(2)\n \n          for J in 0 .. 1 loop\n \n@@ -630,7 +630,7 @@ package body System.Arith_64 is\n    -- Sub3 --\n    ----------\n \n-   procedure Sub3 (X1, X2, X3 : in out Uns32; Y1, Y2, Y3 : in Uns32) is\n+   procedure Sub3 (X1, X2, X3 : in out Uns32; Y1, Y2, Y3 : Uns32) is\n    begin\n       if Y3 > X3 then\n          if X2 = 0 then"}, {"sha": "8b928479b47686bc4fbee471c755882d1abb0dcb", "filename": "gcc/ada/s-asthan.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-asthan.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-asthan.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-asthan.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,15 +41,14 @@ package System.AST_Handling is\n \n    function Create_AST_Handler\n      (Taskid  : Ada.Task_Identification.Task_Id;\n-      Entryno : Natural)\n-      return    System.Aux_DEC.AST_Handler;\n+      Entryno : Natural) return System.Aux_DEC.AST_Handler;\n    --  This function implements the appropriate semantics for a use of the\n    --  AST_Entry pragma. See body for details of implementation approach.\n    --  The parameters are the Task_Id for the task containing the entry\n    --  and the entry Index for the specified entry.\n \n    procedure Expand_AST_Packet_Pool\n-     (Requested_Packets : in Natural;\n+     (Requested_Packets : Natural;\n       Actual_Number     : out Natural;\n       Total_Number      : out Natural);\n    --  This function takes a request for zero or more extra AST packets and"}, {"sha": "843d7d49ae73c3c3a7c67f6b35bc3f297a4e0735", "filename": "gcc/ada/s-auxdec.adb", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-auxdec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-auxdec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-auxdec.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/Or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -318,7 +318,7 @@ package body System.Aux_DEC is\n    procedure Clear_Interlocked\n      (Bit          : in out Boolean;\n       Old_Value    : out Boolean;\n-      Retry_Count  : in Natural;\n+      Retry_Count  : Natural;\n       Success_Flag : out Boolean)\n    is\n       pragma Warnings (Off, Retry_Count);\n@@ -349,7 +349,7 @@ package body System.Aux_DEC is\n    procedure Set_Interlocked\n      (Bit          : in out Boolean;\n       Old_Value    : out Boolean;\n-      Retry_Count  : in Natural;\n+      Retry_Count  : Natural;\n       Success_Flag : out Boolean)\n    is\n       pragma Warnings (Off, Retry_Count);\n@@ -367,9 +367,9 @@ package body System.Aux_DEC is\n    ---------------------\n \n    procedure Add_Interlocked\n-     (Addend       : in Short_Integer;\n-      Augend       : in out Aligned_Word;\n-      Sign         : out Integer)\n+     (Addend : Short_Integer;\n+      Augend : in out Aligned_Word;\n+      Sign   : out Integer)\n    is\n    begin\n       SSL.Lock_Task.all;\n@@ -391,8 +391,8 @@ package body System.Aux_DEC is\n    ----------------\n \n    procedure Add_Atomic\n-     (To           : in out Aligned_Integer;\n-      Amount       : in Integer)\n+     (To     : in out Aligned_Integer;\n+      Amount : Integer)\n    is\n    begin\n       SSL.Lock_Task.all;\n@@ -402,8 +402,8 @@ package body System.Aux_DEC is\n \n    procedure Add_Atomic\n      (To           : in out Aligned_Integer;\n-      Amount       : in Integer;\n-      Retry_Count  : in Natural;\n+      Amount       : Integer;\n+      Retry_Count  : Natural;\n       Old_Value    : out Integer;\n       Success_Flag : out Boolean)\n    is\n@@ -418,8 +418,8 @@ package body System.Aux_DEC is\n    end Add_Atomic;\n \n    procedure Add_Atomic\n-     (To           : in out Aligned_Long_Integer;\n-      Amount       : in Long_Integer)\n+     (To     : in out Aligned_Long_Integer;\n+      Amount : Long_Integer)\n    is\n    begin\n       SSL.Lock_Task.all;\n@@ -429,8 +429,8 @@ package body System.Aux_DEC is\n \n    procedure Add_Atomic\n      (To           : in out Aligned_Long_Integer;\n-      Amount       : in Long_Integer;\n-      Retry_Count  : in Natural;\n+      Amount       : Long_Integer;\n+      Retry_Count  : Natural;\n       Old_Value    : out Long_Integer;\n       Success_Flag : out Boolean)\n    is\n@@ -458,8 +458,8 @@ package body System.Aux_DEC is\n    function From_LU is new Unchecked_Conversion (LU, Long_Integer);\n \n    procedure And_Atomic\n-     (To           : in out Aligned_Integer;\n-      From         : in Integer)\n+     (To   : in out Aligned_Integer;\n+      From : Integer)\n    is\n    begin\n       SSL.Lock_Task.all;\n@@ -469,8 +469,8 @@ package body System.Aux_DEC is\n \n    procedure And_Atomic\n      (To           : in out Aligned_Integer;\n-      From         : in Integer;\n-      Retry_Count  : in Natural;\n+      From         : Integer;\n+      Retry_Count  : Natural;\n       Old_Value    : out Integer;\n       Success_Flag : out Boolean)\n    is\n@@ -485,8 +485,8 @@ package body System.Aux_DEC is\n    end And_Atomic;\n \n    procedure And_Atomic\n-     (To           : in out Aligned_Long_Integer;\n-      From         : in Long_Integer)\n+     (To   : in out Aligned_Long_Integer;\n+      From : Long_Integer)\n    is\n    begin\n       SSL.Lock_Task.all;\n@@ -496,8 +496,8 @@ package body System.Aux_DEC is\n \n    procedure And_Atomic\n      (To           : in out Aligned_Long_Integer;\n-      From         : in Long_Integer;\n-      Retry_Count  : in Natural;\n+      From         : Long_Integer;\n+      Retry_Count  : Natural;\n       Old_Value    : out Long_Integer;\n       Success_Flag : out Boolean)\n    is\n@@ -516,8 +516,8 @@ package body System.Aux_DEC is\n    ---------------\n \n    procedure Or_Atomic\n-     (To           : in out Aligned_Integer;\n-      From         : in Integer)\n+     (To   : in out Aligned_Integer;\n+      From : Integer)\n    is\n    begin\n       SSL.Lock_Task.all;\n@@ -527,8 +527,8 @@ package body System.Aux_DEC is\n \n    procedure Or_Atomic\n      (To           : in out Aligned_Integer;\n-      From         : in Integer;\n-      Retry_Count  : in Natural;\n+      From         : Integer;\n+      Retry_Count  : Natural;\n       Old_Value    : out Integer;\n       Success_Flag : out Boolean)\n    is\n@@ -543,8 +543,8 @@ package body System.Aux_DEC is\n    end Or_Atomic;\n \n    procedure Or_Atomic\n-     (To           : in out Aligned_Long_Integer;\n-      From         : in Long_Integer)\n+     (To   : in out Aligned_Long_Integer;\n+      From : Long_Integer)\n    is\n    begin\n       SSL.Lock_Task.all;\n@@ -554,8 +554,8 @@ package body System.Aux_DEC is\n \n    procedure Or_Atomic\n      (To           : in out Aligned_Long_Integer;\n-      From         : in Long_Integer;\n-      Retry_Count  : in Natural;\n+      From         : Long_Integer;\n+      Retry_Count  : Natural;\n       Old_Value    : out Long_Integer;\n       Success_Flag : out Boolean)\n    is\n@@ -590,8 +590,8 @@ package body System.Aux_DEC is\n    ------------\n \n    procedure Insqhi\n-     (Item   : in  Address;\n-      Header : in  Address;\n+     (Item   : Address;\n+      Header : Address;\n       Status : out Insq_Status)\n    is\n       Hedr : constant QR_Ptr := To_QR_Ptr (Header);\n@@ -621,7 +621,7 @@ package body System.Aux_DEC is\n    ------------\n \n    procedure Remqhi\n-     (Header : in  Address;\n+     (Header : Address;\n       Item   : out Address;\n       Status : out Remq_Status)\n    is\n@@ -656,8 +656,8 @@ package body System.Aux_DEC is\n    ------------\n \n    procedure Insqti\n-     (Item   : in  Address;\n-      Header : in  Address;\n+     (Item   : Address;\n+      Header : Address;\n       Status : out Insq_Status)\n    is\n       Hedr : constant QR_Ptr := To_QR_Ptr (Header);\n@@ -687,7 +687,7 @@ package body System.Aux_DEC is\n    ------------\n \n    procedure Remqti\n-     (Header : in  Address;\n+     (Header : Address;\n       Item   : out Address;\n       Status : out Remq_Status)\n    is"}, {"sha": "72e09aaad45c208b81ce4f198a2305693bc48e64", "filename": "gcc/ada/s-auxdec.ads", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-auxdec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-auxdec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-auxdec.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -209,13 +209,13 @@ package System.Aux_DEC is\n    type Unsigned_Quadword_Array is\n       array (Integer range <>) of Unsigned_Quadword;\n \n-   function To_Address      (X : Integer)           return Address;\n+   function To_Address (X : Integer) return Address;\n    pragma Pure_Function (To_Address);\n \n    function To_Address_Long (X : Unsigned_Longword) return Address;\n    pragma Pure_Function (To_Address_Long);\n \n-   function To_Integer      (X : Address)           return Integer;\n+   function To_Integer (X : Address) return Integer;\n \n    function To_Unsigned_Longword (X : Address)     return Unsigned_Longword;\n    function To_Unsigned_Longword (X : AST_Handler) return Unsigned_Longword;\n@@ -288,17 +288,17 @@ package System.Aux_DEC is\n    procedure Clear_Interlocked\n      (Bit          : in out Boolean;\n       Old_Value    : out Boolean;\n-      Retry_Count  : in Natural;\n+      Retry_Count  : Natural;\n       Success_Flag : out Boolean);\n \n    procedure Set_Interlocked\n      (Bit          : in out Boolean;\n       Old_Value    : out Boolean;\n-      Retry_Count  : in Natural;\n+      Retry_Count  : Natural;\n       Success_Flag : out Boolean);\n \n    procedure Add_Interlocked\n-     (Addend       : in Short_Integer;\n+     (Addend       : Short_Integer;\n       Augend       : in out Aligned_Word;\n       Sign         : out Integer);\n \n@@ -322,67 +322,67 @@ package System.Aux_DEC is\n \n    procedure Add_Atomic\n      (To           : in out Aligned_Integer;\n-      Amount       : in Integer);\n+      Amount       : Integer);\n \n    procedure Add_Atomic\n      (To           : in out Aligned_Integer;\n-      Amount       : in Integer;\n-      Retry_Count  : in Natural;\n+      Amount       : Integer;\n+      Retry_Count  : Natural;\n       Old_Value    : out Integer;\n       Success_Flag : out Boolean);\n \n    procedure Add_Atomic\n      (To           : in out Aligned_Long_Integer;\n-      Amount       : in Long_Integer);\n+      Amount       : Long_Integer);\n \n    procedure Add_Atomic\n      (To           : in out Aligned_Long_Integer;\n-      Amount       : in Long_Integer;\n-      Retry_Count  : in Natural;\n+      Amount       : Long_Integer;\n+      Retry_Count  : Natural;\n       Old_Value    : out Long_Integer;\n       Success_Flag : out Boolean);\n \n    procedure And_Atomic\n      (To           : in out Aligned_Integer;\n-      From         : in Integer);\n+      From         : Integer);\n \n    procedure And_Atomic\n      (To           : in out Aligned_Integer;\n-      From         : in Integer;\n-      Retry_Count  : in Natural;\n+      From         : Integer;\n+      Retry_Count  : Natural;\n       Old_Value    : out Integer;\n       Success_Flag : out Boolean);\n \n    procedure And_Atomic\n      (To           : in out Aligned_Long_Integer;\n-      From         : in Long_Integer);\n+      From         : Long_Integer);\n \n    procedure And_Atomic\n      (To           : in out Aligned_Long_Integer;\n-      From         : in Long_Integer;\n-      Retry_Count  : in Natural;\n+      From         : Long_Integer;\n+      Retry_Count  : Natural;\n       Old_Value    : out Long_Integer;\n       Success_Flag : out Boolean);\n \n    procedure Or_Atomic\n      (To           : in out Aligned_Integer;\n-      From         : in Integer);\n+      From         : Integer);\n \n    procedure Or_Atomic\n      (To           : in out Aligned_Integer;\n-      From         : in Integer;\n-      Retry_Count  : in Natural;\n+      From         : Integer;\n+      Retry_Count  : Natural;\n       Old_Value    : out Integer;\n       Success_Flag : out Boolean);\n \n    procedure Or_Atomic\n      (To           : in out Aligned_Long_Integer;\n-      From         : in Long_Integer);\n+      From         : Long_Integer);\n \n    procedure Or_Atomic\n      (To           : in out Aligned_Long_Integer;\n-      From         : in Long_Integer;\n-      Retry_Count  : in Natural;\n+      From         : Long_Integer;\n+      Retry_Count  : Natural;\n       Old_Value    : out Long_Integer;\n       Success_Flag : out Boolean);\n \n@@ -407,22 +407,22 @@ package System.Aux_DEC is\n       OK_Empty       => +2);\n \n    procedure Insqhi\n-     (Item   : in  Address;\n-      Header : in  Address;\n+     (Item   : Address;\n+      Header : Address;\n       Status : out Insq_Status);\n \n    procedure Remqhi\n-     (Header : in  Address;\n+     (Header : Address;\n       Item   : out Address;\n       Status : out Remq_Status);\n \n    procedure Insqti\n-     (Item   : in  Address;\n-      Header : in  Address;\n+     (Item   : Address;\n+      Header : Address;\n       Status : out Insq_Status);\n \n    procedure Remqti\n-     (Header : in  Address;\n+     (Header : Address;\n       Item   : out Address;\n       Status : out Remq_Status);\n "}, {"sha": "0ebe68ec2b5582dc2c3a5990139f9cc368c397bb", "filename": "gcc/ada/s-chepoo.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-chepoo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-chepoo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-chepoo.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---       Copyright (C) 1992-1996, 2005      Free Software Foundation, Inc.  --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,9 +43,9 @@ package System.Checked_Pools is\n \n    procedure Dereference\n      (Pool                     : in out Checked_Pool;\n-      Storage_Address          : in Address;\n-      Size_In_Storage_Elements : in System.Storage_Elements.Storage_Count;\n-      Alignment                : in System.Storage_Elements.Storage_Count)\n+      Storage_Address          : Address;\n+      Size_In_Storage_Elements : System.Storage_Elements.Storage_Count;\n+      Alignment                : System.Storage_Elements.Storage_Count)\n    is abstract;\n    --  Called implicitly each time a pointer to a checked pool is dereferenced\n    --  All parameters in the profile are compatible with the profile of"}, {"sha": "7bb3e52142a5e33466ca2e2172b1f6ad3860de51", "filename": "gcc/ada/s-direio.adb", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-direio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-direio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-direio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,9 +31,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.IO_Exceptions;         use Ada.IO_Exceptions;\n-with Interfaces.C_Streams;      use Interfaces.C_Streams;\n-with System;                    use System;\n+with Ada.IO_Exceptions;      use Ada.IO_Exceptions;\n+with Interfaces.C_Streams;   use Interfaces.C_Streams;\n+with System;                 use System;\n with System.CRTL;\n with System.File_IO;\n with System.Soft_Links;\n@@ -54,7 +54,7 @@ package body System.Direct_IO is\n    -- Local Subprograms --\n    -----------------------\n \n-   procedure Set_Position (File : in File_Type);\n+   procedure Set_Position (File : File_Type);\n    --  Sets file position pointer according to value of current index\n \n    -------------------\n@@ -104,9 +104,9 @@ package body System.Direct_IO is\n \n    procedure Create\n      (File : in out File_Type;\n-      Mode : in FCB.File_Mode := FCB.Inout_File;\n-      Name : in String := \"\";\n-      Form : in String := \"\")\n+      Mode : FCB.File_Mode := FCB.Inout_File;\n+      Name : String := \"\";\n+      Form : String := \"\")\n    is\n       Dummy_File_Control_Block : Direct_AFCB;\n       pragma Warnings (Off, Dummy_File_Control_Block);\n@@ -128,7 +128,7 @@ package body System.Direct_IO is\n    -- End_Of_File --\n    -----------------\n \n-   function End_Of_File (File : in File_Type) return Boolean is\n+   function End_Of_File (File : File_Type) return Boolean is\n    begin\n       FIO.Check_Read_Status (AP (File));\n       return Count (File.Index) > Size (File);\n@@ -138,7 +138,7 @@ package body System.Direct_IO is\n    -- Index --\n    -----------\n \n-   function Index (File : in File_Type) return Positive_Count is\n+   function Index (File : File_Type) return Positive_Count is\n    begin\n       FIO.Check_File_Open (AP (File));\n       return Count (File.Index);\n@@ -150,9 +150,9 @@ package body System.Direct_IO is\n \n    procedure Open\n      (File : in out File_Type;\n-      Mode : in FCB.File_Mode;\n-      Name : in String;\n-      Form : in String := \"\")\n+      Mode : FCB.File_Mode;\n+      Name : String;\n+      Form : String := \"\")\n    is\n       Dummy_File_Control_Block : Direct_AFCB;\n       pragma Warnings (Off, Dummy_File_Control_Block);\n@@ -175,20 +175,20 @@ package body System.Direct_IO is\n    ----------\n \n    procedure Read\n-     (File : in File_Type;\n+     (File : File_Type;\n       Item : Address;\n-      Size : in Interfaces.C_Streams.size_t;\n-      From : in Positive_Count)\n+      Size : Interfaces.C_Streams.size_t;\n+      From : Positive_Count)\n    is\n    begin\n       Set_Index (File, From);\n       Read (File, Item, Size);\n    end Read;\n \n    procedure Read\n-     (File : in File_Type;\n+     (File : File_Type;\n       Item : Address;\n-      Size : in Interfaces.C_Streams.size_t)\n+      Size : Interfaces.C_Streams.size_t)\n    is\n    begin\n       FIO.Check_Read_Status (AP (File));\n@@ -250,7 +250,7 @@ package body System.Direct_IO is\n    -- Reset --\n    -----------\n \n-   procedure Reset (File : in out File_Type; Mode : in FCB.File_Mode) is\n+   procedure Reset (File : in out File_Type; Mode : FCB.File_Mode) is\n    begin\n       FIO.Reset (AP (File), Mode);\n       File.Index := 1;\n@@ -268,7 +268,7 @@ package body System.Direct_IO is\n    -- Set_Index --\n    ---------------\n \n-   procedure Set_Index (File : in File_Type; To : in Positive_Count) is\n+   procedure Set_Index (File : File_Type; To : Positive_Count) is\n    begin\n       FIO.Check_File_Open (AP (File));\n       File.Index := Count (To);\n@@ -279,7 +279,7 @@ package body System.Direct_IO is\n    -- Set_Position --\n    ------------------\n \n-   procedure Set_Position (File : in File_Type) is\n+   procedure Set_Position (File : File_Type) is\n    begin\n       if fseek\n            (File.Stream, long (File.Bytes) *\n@@ -293,7 +293,7 @@ package body System.Direct_IO is\n    -- Size --\n    ----------\n \n-   function Size (File : in File_Type) return Count is\n+   function Size (File : File_Type) return Count is\n    begin\n       FIO.Check_File_Open (AP (File));\n       File.Last_Op := Op_Other;\n@@ -312,7 +312,7 @@ package body System.Direct_IO is\n    procedure Write\n      (File   : File_Type;\n       Item   : Address;\n-      Size   : in Interfaces.C_Streams.size_t;\n+      Size   : Interfaces.C_Streams.size_t;\n       Zeroes : System.Storage_Elements.Storage_Array)\n \n    is\n@@ -380,7 +380,7 @@ package body System.Direct_IO is\n \n    procedure Write\n      (File : in out Direct_AFCB;\n-      Item : in Ada.Streams.Stream_Element_Array)\n+      Item : Ada.Streams.Stream_Element_Array)\n    is\n    begin\n       raise Program_Error;"}, {"sha": "756bcb25281c3ff6c2d6ab16e1db267442b1cdc1", "filename": "gcc/ada/s-direio.ads", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-direio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-direio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-direio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -77,51 +77,51 @@ package System.Direct_IO is\n \n    procedure Write\n      (File : in out Direct_AFCB;\n-      Item : in Ada.Streams.Stream_Element_Array);\n+      Item : Ada.Streams.Stream_Element_Array);\n    --  Required overriding of Write, not actually used for Direct_IO\n \n    type File_Type is access all Direct_AFCB;\n    --  File_Type in individual instantiations is derived from this type\n \n    procedure Create\n      (File : in out File_Type;\n-      Mode : in FCB.File_Mode := FCB.Inout_File;\n-      Name : in String := \"\";\n-      Form : in String := \"\");\n+      Mode : FCB.File_Mode := FCB.Inout_File;\n+      Name : String := \"\";\n+      Form : String := \"\");\n \n-   function End_Of_File (File : in File_Type) return Boolean;\n+   function End_Of_File (File : File_Type) return Boolean;\n \n-   function Index (File : in File_Type) return Positive_Count;\n+   function Index (File : File_Type) return Positive_Count;\n \n    procedure Open\n      (File : in out File_Type;\n-      Mode : in FCB.File_Mode;\n-      Name : in String;\n-      Form : in String := \"\");\n+      Mode : FCB.File_Mode;\n+      Name : String;\n+      Form : String := \"\");\n \n    procedure Read\n-     (File : in File_Type;\n+     (File : File_Type;\n       Item : System.Address;\n-      Size : in Interfaces.C_Streams.size_t;\n-      From : in Positive_Count);\n+      Size : Interfaces.C_Streams.size_t;\n+      From : Positive_Count);\n \n    procedure Read\n-     (File : in File_Type;\n+     (File : File_Type;\n       Item : System.Address;\n-      Size : in Interfaces.C_Streams.size_t);\n+      Size : Interfaces.C_Streams.size_t);\n \n-   procedure Reset (File : in out File_Type; Mode : in FCB.File_Mode);\n+   procedure Reset (File : in out File_Type; Mode : FCB.File_Mode);\n \n    procedure Reset (File : in out File_Type);\n \n-   procedure Set_Index (File : in File_Type; To : in Positive_Count);\n+   procedure Set_Index (File : File_Type; To : Positive_Count);\n \n-   function Size (File : in File_Type) return Count;\n+   function Size (File : File_Type) return Count;\n \n    procedure Write\n-     (File   : in File_Type;\n+     (File   : File_Type;\n       Item   : System.Address;\n-      Size   : in Interfaces.C_Streams.size_t;\n+      Size   : Interfaces.C_Streams.size_t;\n       Zeroes : System.Storage_Elements.Storage_Array);\n    --  Note: Zeroes is the buffer of zeroes used to fill out partial records\n "}, {"sha": "783f845d1e43dbdb7ee3d764e0dade70506948a4", "filename": "gcc/ada/s-errrep.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-errrep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-errrep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-errrep.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,8 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 1991-1994, Florida State University            --\n---                     Copyright (C) 1995-2005, AdaCore                     --\n+--                     Copyright (C) 1995-2006, AdaCore                     --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -51,7 +50,7 @@ package body System.Error_Reporting is\n    -- Shutdown --\n    --------------\n \n-   function Shutdown (M : in String) return Boolean is\n+   function Shutdown (M : String) return Boolean is\n    begin\n       Write (2, Shutdown_Message'Address, Shutdown_Message'Length);\n       Write (2, M'Address, M'Length);"}, {"sha": "930e020641953b08ebbe90f0f20ca5c52f4d6925", "filename": "gcc/ada/s-errrep.ads", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-errrep.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-errrep.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-errrep.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,8 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---             Copyright (C) 1991-1994, Florida State University            --\n---                     Copyright (C) 1995-2005, AdaCore                     --\n+--                     Copyright (C) 1995-2006, AdaCore                     --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,9 +37,9 @@\n package System.Error_Reporting is\n    pragma Preelaborate;\n \n-   function Shutdown (M : in String) return Boolean;\n-   --  Perform emergency shutdown of the entire program.\n-   --  Msg is an error message to be printed to the console.\n-   --  This is to be used only for nonrecoverable errors.\n+   function Shutdown (M : String) return Boolean;\n+   --  Perform emergency shutdown of the entire program. Msg is an error\n+   --  message to be printed to the console. This is to be used only for\n+   --  nonrecoverable errors.\n \n end System.Error_Reporting;"}, {"sha": "4317cb3114286831457d52c2604e2832f6eefc08", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -77,7 +77,7 @@ package body System.File_IO is\n    --  a controlled type introduced for this purpose.\n \n    procedure Finalize (V : in out File_IO_Clean_Up_Type);\n-   --  This is the finalize operation that is used to do the cleanup.\n+   --  This is the finalize operation that is used to do the cleanup\n \n    File_IO_Clean_Up_Object : File_IO_Clean_Up_Type;\n    pragma Warnings (Off, File_IO_Clean_Up_Object);\n@@ -88,7 +88,7 @@ package body System.File_IO is\n    text_translation_required : Boolean;\n    pragma Import\n      (C, text_translation_required, \"__gnat_text_translation_required\");\n-   --  If true, add appropriate suffix to control string for Open.\n+   --  If true, add appropriate suffix to control string for Open\n \n    -----------------------\n    -- Local Subprograms --\n@@ -491,7 +491,7 @@ package body System.File_IO is\n    -- Form --\n    ----------\n \n-   function Form (File : in AFCB_Ptr) return String is\n+   function Form (File : AFCB_Ptr) return String is\n    begin\n       if File = null then\n          raise Status_Error;\n@@ -607,7 +607,7 @@ package body System.File_IO is\n    -- Is_Open --\n    -------------\n \n-   function Is_Open (File : in AFCB_Ptr) return Boolean is\n+   function Is_Open (File : AFCB_Ptr) return Boolean is\n    begin\n       return (File /= null);\n    end Is_Open;\n@@ -658,7 +658,7 @@ package body System.File_IO is\n    -- Mode --\n    ----------\n \n-   function Mode (File : in AFCB_Ptr) return File_Mode is\n+   function Mode (File : AFCB_Ptr) return File_Mode is\n    begin\n       if File = null then\n          raise Status_Error;\n@@ -671,7 +671,7 @@ package body System.File_IO is\n    -- Name --\n    ----------\n \n-   function Name (File : in AFCB_Ptr) return String is\n+   function Name (File : AFCB_Ptr) return String is\n    begin\n       if File = null then\n          raise Status_Error;\n@@ -686,7 +686,7 @@ package body System.File_IO is\n \n    procedure Open\n      (File_Ptr  : in out AFCB_Ptr;\n-      Dummy_FCB : in AFCB'Class;\n+      Dummy_FCB : AFCB'Class;\n       Mode      : File_Mode;\n       Name      : String;\n       Form      : String;\n@@ -701,7 +701,7 @@ package body System.File_IO is\n \n       procedure Tmp_Name (Buffer : Address);\n       pragma Import (C, Tmp_Name, \"__gnat_tmp_name\");\n-      --  set buffer (a String address) with a temporary filename.\n+      --  set buffer (a String address) with a temporary filename\n \n       Stream : FILEs := C_Stream;\n       --  Stream which we open in response to this request\n@@ -823,7 +823,7 @@ package body System.File_IO is\n             Namestr (Name'Length + 1)  := ASCII.NUL;\n          end if;\n \n-         --  Get full name in accordance with the advice of RM A.8.2(22).\n+         --  Get full name in accordance with the advice of RM A.8.2(22)\n \n          full_name (Namestr'Address, Fullname'Address);\n \n@@ -991,7 +991,7 @@ package body System.File_IO is\n    procedure Read_Buf\n      (File  : AFCB_Ptr;\n       Buf   : Address;\n-      Siz   : in Interfaces.C_Streams.size_t;\n+      Siz   : Interfaces.C_Streams.size_t;\n       Count : out Interfaces.C_Streams.size_t)\n    is\n    begin\n@@ -1006,7 +1006,7 @@ package body System.File_IO is\n    -- Reset --\n    -----------\n \n-   --  The reset which does not change the mode simply does a rewind.\n+   --  The reset which does not change the mode simply does a rewind\n \n    procedure Reset (File : in out AFCB_Ptr) is\n    begin\n@@ -1018,7 +1018,7 @@ package body System.File_IO is\n    --  not permitted except for regular files (since otherwise there\n    --  is no name for the freopen, and in any case it seems meaningless)\n \n-   procedure Reset (File : in out AFCB_Ptr; Mode : in File_Mode) is\n+   procedure Reset (File : in out AFCB_Ptr; Mode : File_Mode) is\n       Fopstr : aliased Fopen_String;\n \n    begin"}, {"sha": "6cd787104d10b2283858b2b1160cd1cc6d8e0287", "filename": "gcc/ada/s-fileio.ads", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-fileio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-fileio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -49,7 +49,7 @@ package System.File_IO is\n \n    procedure Open\n      (File_Ptr  : in out FCB.AFCB_Ptr;\n-      Dummy_FCB : in FCB.AFCB'Class;\n+      Dummy_FCB : FCB.AFCB'Class;\n       Mode      : FCB.File_Mode;\n       Name      : String;\n       Form      : String;\n@@ -110,24 +110,24 @@ package System.File_IO is\n    procedure Delete (File : in out FCB.AFCB_Ptr);\n    --  The indicated file is unlinked\n \n-   procedure Reset (File : in out FCB.AFCB_Ptr; Mode : in FCB.File_Mode);\n-   --  The file is reset, and the mode changed as indicated.\n+   procedure Reset (File : in out FCB.AFCB_Ptr; Mode : FCB.File_Mode);\n+   --  The file is reset, and the mode changed as indicated\n \n    procedure Reset (File : in out FCB.AFCB_Ptr);\n    --  The files is reset, and the mode is unchanged\n \n-   function Mode (File : in FCB.AFCB_Ptr) return FCB.File_Mode;\n+   function Mode (File : FCB.AFCB_Ptr) return FCB.File_Mode;\n    --  Returns the mode as supplied by create, open or reset\n \n-   function Name (File : in FCB.AFCB_Ptr) return String;\n+   function Name (File : FCB.AFCB_Ptr) return String;\n    --  Returns the file name as supplied by Open or Create. Raises Use_Error\n    --  if used with temporary files or standard files.\n \n-   function Form (File : in FCB.AFCB_Ptr) return String;\n+   function Form (File : FCB.AFCB_Ptr) return String;\n    --  Returns the form as supplied by create, open or reset\n    --  The string is normalized to all lower case letters.\n \n-   function Is_Open (File : in FCB.AFCB_Ptr) return Boolean;\n+   function Is_Open (File : FCB.AFCB_Ptr) return Boolean;\n    --  Determines if file is open or not\n \n    ----------------------\n@@ -218,7 +218,7 @@ package System.File_IO is\n    procedure Read_Buf\n      (File  : FCB.AFCB_Ptr;\n       Buf   : Address;\n-      Siz   : in Interfaces.C_Streams.size_t;\n+      Siz   : Interfaces.C_Streams.size_t;\n       Count : out Interfaces.C_Streams.size_t);\n    --  Reads Siz bytes from File.Stream into Buf. The caller has checked\n    --  that the file is open in read mode. Device Error is raised if an error"}, {"sha": "507a7575bdeba885e2c740302033fde6ed00fca6", "filename": "gcc/ada/s-finroo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-finroo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-finroo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finroo.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 1992-2005 Free Software Foundation, Inc.         --\n+--           Copyright (C) 1992-2006, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -90,7 +90,7 @@ package body System.Finalization_Root is\n \n    procedure Write\n      (Stream : not null access Ada.Streams.Root_Stream_Type'Class;\n-      Item   : in Root_Controlled)\n+      Item   : Root_Controlled)\n    is\n    begin\n       null;"}, {"sha": "3ea9a18b01a409b5d3efbb8e94bb53a3392da2a8", "filename": "gcc/ada/s-finroo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-finroo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-finroo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finroo.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 1992-2005 Free Software Foundation, Inc.        --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -63,7 +63,7 @@ package System.Finalization_Root is\n \n    procedure Write\n      (Stream : not null access Ada.Streams.Root_Stream_Type'Class;\n-      Item   : in Root_Controlled);\n+      Item   : Root_Controlled);\n \n    procedure Read\n      (Stream : not null access Ada.Streams.Root_Stream_Type'Class;"}, {"sha": "183b8f9e43e0de107d17ad9a0a7b576c1c6cd7da", "filename": "gcc/ada/s-gloloc-mingw.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-gloloc-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-gloloc-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-gloloc-mingw.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2005, AdaCore                     --\n+--                     Copyright (C) 1999-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -55,7 +55,7 @@ package body System.Global_Locks is\n \n    procedure Create_Lock\n      (Lock : out Lock_Type;\n-      Name : in String)\n+      Name : String)\n    is\n       L : Lock_Type;\n "}, {"sha": "197b4a9abfc9fcd0c5999d39e8351626e8663167", "filename": "gcc/ada/s-gloloc.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-gloloc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-gloloc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-gloloc.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1999-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1999-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -75,7 +75,7 @@ package body System.Global_Locks is\n    -- Create_Lock --\n    -----------------\n \n-   procedure Create_Lock (Lock : out Lock_Type; Name : in String) is\n+   procedure Create_Lock (Lock : out Lock_Type; Name : String) is\n       L : Lock_Type;\n \n    begin"}, {"sha": "03bfc0c3acf2b61f6333f470b35fb5f929691d68", "filename": "gcc/ada/s-gloloc.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-gloloc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-gloloc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-gloloc.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1999-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,7 +37,7 @@\n package System.Global_Locks is\n \n    Lock_Error : exception;\n-   --  Exception raised if a request cannot be executed on a lock.\n+   --  Exception raised if a request cannot be executed on a lock\n \n    type Lock_Type is private;\n    --  Such a lock is a global lock between partitions. This lock is\n@@ -46,7 +46,7 @@ package System.Global_Locks is\n    Null_Lock : constant Lock_Type;\n    --  This needs comments ???\n \n-   procedure Create_Lock (Lock : out Lock_Type; Name : in String);\n+   procedure Create_Lock (Lock : out Lock_Type; Name : String);\n    --  Create or retrieve a global lock for the current partition using\n    --  its Name.\n "}, {"sha": "4a6a0af9b1281230b42c09434a4bd90f60cdafc7", "filename": "gcc/ada/s-io.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-io.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-io.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-io.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -123,7 +123,7 @@ package body System.IO is\n    -- Set_Output --\n    ----------------\n \n-   procedure Set_Output (File : in File_Type) is\n+   procedure Set_Output (File : File_Type) is\n    begin\n       Current_Out := File;\n    end Set_Output;"}, {"sha": "c2797c2fbb5de867f9cdb6e3d8ae0cdf348e55d4", "filename": "gcc/ada/s-io.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-io.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-io.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-io.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -53,7 +53,7 @@ package System.IO is\n    function Standard_Error return File_Type;\n    function Standard_Output return File_Type;\n \n-   procedure Set_Output (File : in File_Type);\n+   procedure Set_Output (File : File_Type);\n \n private\n "}, {"sha": "a812423142d04de572450e89211fa8db040a5b09", "filename": "gcc/ada/s-rpc.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-rpc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-rpc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rpc.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,7 +37,7 @@\n --  the presence of a master partition to run a test which is otherwise not\n --  distributed.\n \n---  The GLADE distribution package includes a replacement for this file.\n+--  The GLADE distribution package includes a replacement for this file\n \n with Ada.Exceptions; use Ada.Exceptions;\n \n@@ -71,7 +71,7 @@ package body System.RPC is\n \n    procedure Write\n      (Stream : in out Params_Stream_Type;\n-      Item   : in Ada.Streams.Stream_Element_Array)\n+      Item   : Ada.Streams.Stream_Element_Array)\n    is\n    begin\n       Raise_Exception (Program_Error'Identity, Msg);\n@@ -82,7 +82,7 @@ package body System.RPC is\n    ------------\n \n    procedure Do_RPC\n-     (Partition : in Partition_ID;\n+     (Partition : Partition_ID;\n       Params    : access Params_Stream_Type;\n       Result    : access Params_Stream_Type)\n    is\n@@ -95,7 +95,7 @@ package body System.RPC is\n    ------------\n \n    procedure Do_APC\n-     (Partition : in Partition_ID;\n+     (Partition : Partition_ID;\n       Params    : access Params_Stream_Type)\n    is\n    begin\n@@ -107,8 +107,8 @@ package body System.RPC is\n    ----------------------------\n \n    procedure Establish_RPC_Receiver\n-     (Partition : in Partition_ID;\n-      Receiver  : in RPC_Receiver)\n+     (Partition : Partition_ID;\n+      Receiver  : RPC_Receiver)\n    is\n    begin\n       null;"}, {"sha": "56e90e99806d06843784caa7f263c8d6f77c6e45", "filename": "gcc/ada/s-rpc.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-rpc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-rpc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rpc.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1998 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -61,31 +61,31 @@ package System.RPC is\n \n    procedure Write\n      (Stream : in out Params_Stream_Type;\n-      Item   : in Ada.Streams.Stream_Element_Array);\n+      Item   : Ada.Streams.Stream_Element_Array);\n \n    --  Synchronous call\n \n    procedure Do_RPC\n-     (Partition  : in Partition_ID;\n+     (Partition  : Partition_ID;\n       Params     : access Params_Stream_Type;\n       Result     : access Params_Stream_Type);\n \n    --  Asynchronous call\n \n    procedure Do_APC\n-     (Partition  : in Partition_ID;\n+     (Partition  : Partition_ID;\n       Params     : access Params_Stream_Type);\n \n-   --  The handler for incoming RPCs.\n+   --  The handler for incoming RPCs\n \n    type RPC_Receiver is\n      access procedure\n        (Params     : access Params_Stream_Type;\n         Result     : access Params_Stream_Type);\n \n    procedure Establish_RPC_Receiver (\n-      Partition : in Partition_ID;\n-      Receiver  : in RPC_Receiver);\n+      Partition : Partition_ID;\n+      Receiver  : RPC_Receiver);\n \n private\n "}, {"sha": "50e568211bacc7b8b052feb9c4e3d25839d5a0ac", "filename": "gcc/ada/s-sequio.adb", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-sequio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-sequio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-sequio.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,8 +45,7 @@ package body System.Sequential_IO is\n    -------------------\n \n    function AFCB_Allocate\n-     (Control_Block : Sequential_AFCB)\n-      return          FCB.AFCB_Ptr\n+     (Control_Block : Sequential_AFCB) return FCB.AFCB_Ptr\n    is\n       pragma Warnings (Off, Control_Block);\n \n@@ -90,9 +89,9 @@ package body System.Sequential_IO is\n \n    procedure Create\n      (File : in out File_Type;\n-      Mode : in FCB.File_Mode := FCB.Out_File;\n-      Name : in String := \"\";\n-      Form : in String := \"\")\n+      Mode : FCB.File_Mode := FCB.Out_File;\n+      Name : String := \"\";\n+      Form : String := \"\")\n    is\n       Dummy_File_Control_Block : Sequential_AFCB;\n       pragma Warnings (Off, Dummy_File_Control_Block);\n@@ -116,9 +115,9 @@ package body System.Sequential_IO is\n \n    procedure Open\n      (File : in out File_Type;\n-      Mode : in FCB.File_Mode;\n-      Name : in String;\n-      Form : in String := \"\")\n+      Mode : FCB.File_Mode;\n+      Name : String;\n+      Form : String := \"\")\n    is\n       Dummy_File_Control_Block : Sequential_AFCB;\n       pragma Warnings (Off, Dummy_File_Control_Block);\n@@ -159,7 +158,7 @@ package body System.Sequential_IO is\n \n    procedure Write\n      (File : in out Sequential_AFCB;\n-      Item : in Ada.Streams.Stream_Element_Array)\n+      Item : Ada.Streams.Stream_Element_Array)\n    is\n    begin\n       raise Program_Error;"}, {"sha": "09c41aeb2c29e0affe5ffdca6a7c0881cf97c5a9", "filename": "gcc/ada/s-sequio.ads", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-sequio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-sequio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-sequio.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 1992-2005, Free Software Foundation, Inc.        --\n+--           Copyright (C) 1992-2006, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -46,8 +46,7 @@ package System.Sequential_IO is\n    --  No additional fields required for Sequential_IO\n \n    function AFCB_Allocate\n-     (Control_Block : Sequential_AFCB)\n-      return          FCB.AFCB_Ptr;\n+     (Control_Block : Sequential_AFCB) return FCB.AFCB_Ptr;\n \n    procedure AFCB_Close (File : access Sequential_AFCB);\n    procedure AFCB_Free  (File : access Sequential_AFCB);\n@@ -60,22 +59,22 @@ package System.Sequential_IO is\n \n    procedure Write\n      (File : in out Sequential_AFCB;\n-      Item : in Ada.Streams.Stream_Element_Array);\n+      Item : Ada.Streams.Stream_Element_Array);\n    --  Required overriding of Write, not actually used for Sequential_IO\n \n    type File_Type is access all Sequential_AFCB;\n    --  File_Type in individual instantiations is derived from this type\n \n    procedure Create\n      (File : in out File_Type;\n-      Mode : in FCB.File_Mode := FCB.Out_File;\n-      Name : in String := \"\";\n-      Form : in String := \"\");\n+      Mode : FCB.File_Mode := FCB.Out_File;\n+      Name : String := \"\";\n+      Form : String := \"\");\n \n    procedure Open\n      (File : in out File_Type;\n-      Mode : in FCB.File_Mode;\n-      Name : in String;\n-      Form : in String := \"\");\n+      Mode : FCB.File_Mode;\n+      Name : String;\n+      Form : String := \"\");\n \n end System.Sequential_IO;"}, {"sha": "77cfa7b64210f7a37e292445eff765cb7bb226bc", "filename": "gcc/ada/s-shasto.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-shasto.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-shasto.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-shasto.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1998-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1998-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -198,7 +198,7 @@ package System.Shared_Storage is\n    --  value. The storage is created by this call if it does not\n    --  already exist.\n \n-   procedure Shared_Var_Close (Var : in SIO.Stream_Access);\n+   procedure Shared_Var_Close (Var : SIO.Stream_Access);\n    --  This routine signals the end of a read/assign operation. It can\n    --  be useful to embrace a read/write operation between a call to\n    --  open and a call to close which protect the whole operation."}, {"sha": "16a8103f26d819e37ec592743743e0768317fda3", "filename": "gcc/ada/s-stopoo.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-stopoo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-stopoo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stopoo.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -47,15 +47,15 @@ package System.Storage_Pools is\n    procedure Allocate\n      (Pool                     : in out Root_Storage_Pool;\n       Storage_Address          : out Address;\n-      Size_In_Storage_Elements : in System.Storage_Elements.Storage_Count;\n-      Alignment                : in System.Storage_Elements.Storage_Count)\n+      Size_In_Storage_Elements : System.Storage_Elements.Storage_Count;\n+      Alignment                : System.Storage_Elements.Storage_Count)\n    is abstract;\n \n    procedure Deallocate\n      (Pool                     : in out Root_Storage_Pool;\n-      Storage_Address          : in Address;\n-      Size_In_Storage_Elements : in System.Storage_Elements.Storage_Count;\n-      Alignment                : in System.Storage_Elements.Storage_Count)\n+      Storage_Address          : Address;\n+      Size_In_Storage_Elements : System.Storage_Elements.Storage_Count;\n+      Alignment                : System.Storage_Elements.Storage_Count)\n    is abstract;\n \n    function Storage_Size"}, {"sha": "9601979ef9c0191d6c0715d853604a869e099e06", "filename": "gcc/ada/s-stratt.adb", "status": "modified", "additions": 20, "deletions": 39, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-stratt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-stratt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stratt.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -465,9 +465,8 @@ package body System.Stream_Attributes is\n    -- W_AD --\n    ----------\n \n-   procedure W_AD (Stream : not null access RST; Item : in Fat_Pointer) is\n+   procedure W_AD (Stream : not null access RST; Item : Fat_Pointer) is\n       T : constant S_AD := From_AD (Item);\n-\n    begin\n       Ada.Streams.Write (Stream.all, T);\n    end W_AD;\n@@ -476,9 +475,8 @@ package body System.Stream_Attributes is\n    -- W_AS --\n    ----------\n \n-   procedure W_AS (Stream : not null access RST; Item : in Thin_Pointer) is\n+   procedure W_AS (Stream : not null access RST; Item : Thin_Pointer) is\n       T : constant S_AS := From_AS (Item);\n-\n    begin\n       Ada.Streams.Write (Stream.all, T);\n    end W_AS;\n@@ -487,9 +485,8 @@ package body System.Stream_Attributes is\n    -- W_B --\n    ---------\n \n-   procedure W_B (Stream : not null access RST; Item : in Boolean) is\n+   procedure W_B (Stream : not null access RST; Item : Boolean) is\n       T : S_B;\n-\n    begin\n       T (1) := Boolean'Pos (Item);\n       Ada.Streams.Write (Stream.all, T);\n@@ -499,9 +496,8 @@ package body System.Stream_Attributes is\n    -- W_C --\n    ---------\n \n-   procedure W_C (Stream : not null access RST; Item : in Character) is\n+   procedure W_C (Stream : not null access RST; Item : Character) is\n       T : S_C;\n-\n    begin\n       T (1) := Character'Pos (Item);\n       Ada.Streams.Write (Stream.all, T);\n@@ -511,9 +507,8 @@ package body System.Stream_Attributes is\n    -- W_F --\n    ---------\n \n-   procedure W_F (Stream : not null access RST; Item : in Float) is\n+   procedure W_F (Stream : not null access RST; Item : Float) is\n       T : constant S_F := From_F (Item);\n-\n    begin\n       Ada.Streams.Write (Stream.all, T);\n    end W_F;\n@@ -522,9 +517,8 @@ package body System.Stream_Attributes is\n    -- W_I --\n    ---------\n \n-   procedure W_I (Stream : not null access RST; Item : in Integer) is\n+   procedure W_I (Stream : not null access RST; Item : Integer) is\n       T : constant S_I := From_I (Item);\n-\n    begin\n       Ada.Streams.Write (Stream.all, T);\n    end W_I;\n@@ -533,9 +527,8 @@ package body System.Stream_Attributes is\n    -- W_LF --\n    ----------\n \n-   procedure W_LF (Stream : not null access RST; Item : in Long_Float) is\n+   procedure W_LF (Stream : not null access RST; Item : Long_Float) is\n       T : constant S_LF := From_LF (Item);\n-\n    begin\n       Ada.Streams.Write (Stream.all, T);\n    end W_LF;\n@@ -544,9 +537,8 @@ package body System.Stream_Attributes is\n    -- W_LI --\n    ----------\n \n-   procedure W_LI (Stream : not null access RST; Item : in Long_Integer) is\n+   procedure W_LI (Stream : not null access RST; Item : Long_Integer) is\n       T : constant S_LI := From_LI (Item);\n-\n    begin\n       Ada.Streams.Write (Stream.all, T);\n    end W_LI;\n@@ -555,9 +547,8 @@ package body System.Stream_Attributes is\n    -- W_LLF --\n    -----------\n \n-   procedure W_LLF (Stream : not null access RST; Item : in Long_Long_Float) is\n+   procedure W_LLF (Stream : not null access RST; Item : Long_Long_Float) is\n       T : constant S_LLF := From_LLF (Item);\n-\n    begin\n       Ada.Streams.Write (Stream.all, T);\n    end W_LLF;\n@@ -567,10 +558,9 @@ package body System.Stream_Attributes is\n    -----------\n \n    procedure W_LLI\n-     (Stream : not null access RST; Item : in Long_Long_Integer)\n+     (Stream : not null access RST; Item : Long_Long_Integer)\n    is\n       T : constant S_LLI := From_LLI (Item);\n-\n    begin\n       Ada.Streams.Write (Stream.all, T);\n    end W_LLI;\n@@ -580,10 +570,9 @@ package body System.Stream_Attributes is\n    -----------\n \n    procedure W_LLU\n-     (Stream : not null access RST; Item : in UST.Long_Long_Unsigned)\n+     (Stream : not null access RST; Item : UST.Long_Long_Unsigned)\n    is\n       T : constant S_LLU := From_LLU (Item);\n-\n    begin\n       Ada.Streams.Write (Stream.all, T);\n    end W_LLU;\n@@ -593,10 +582,9 @@ package body System.Stream_Attributes is\n    ----------\n \n    procedure W_LU\n-     (Stream : not null access RST; Item : in UST.Long_Unsigned)\n+     (Stream : not null access RST; Item : UST.Long_Unsigned)\n    is\n       T : constant S_LU := From_LU (Item);\n-\n    begin\n       Ada.Streams.Write (Stream.all, T);\n    end W_LU;\n@@ -605,9 +593,8 @@ package body System.Stream_Attributes is\n    -- W_SF --\n    ----------\n \n-   procedure W_SF (Stream : not null access RST; Item : in Short_Float) is\n+   procedure W_SF (Stream : not null access RST; Item : Short_Float) is\n       T : constant S_SF := From_SF (Item);\n-\n    begin\n       Ada.Streams.Write (Stream.all, T);\n    end W_SF;\n@@ -616,9 +603,8 @@ package body System.Stream_Attributes is\n    -- W_SI --\n    ----------\n \n-   procedure W_SI (Stream : not null access RST; Item : in Short_Integer) is\n+   procedure W_SI (Stream : not null access RST; Item : Short_Integer) is\n       T : constant S_SI := From_SI (Item);\n-\n    begin\n       Ada.Streams.Write (Stream.all, T);\n    end W_SI;\n@@ -628,10 +614,9 @@ package body System.Stream_Attributes is\n    -----------\n \n    procedure W_SSI\n-     (Stream : not null access RST; Item : in Short_Short_Integer)\n+     (Stream : not null access RST; Item : Short_Short_Integer)\n    is\n       T : constant S_SSI := From_SSI (Item);\n-\n    begin\n       Ada.Streams.Write (Stream.all, T);\n    end W_SSI;\n@@ -641,10 +626,9 @@ package body System.Stream_Attributes is\n    -----------\n \n    procedure W_SSU\n-     (Stream : not null access RST; Item : in UST.Short_Short_Unsigned)\n+     (Stream : not null access RST; Item : UST.Short_Short_Unsigned)\n    is\n       T : constant S_SSU := From_SSU (Item);\n-\n    begin\n       Ada.Streams.Write (Stream.all, T);\n    end W_SSU;\n@@ -654,10 +638,9 @@ package body System.Stream_Attributes is\n    ----------\n \n    procedure W_SU\n-     (Stream : not null access RST; Item : in UST.Short_Unsigned)\n+     (Stream : not null access RST; Item : UST.Short_Unsigned)\n    is\n       T : constant S_SU := From_SU (Item);\n-\n    begin\n       Ada.Streams.Write (Stream.all, T);\n    end W_SU;\n@@ -666,9 +649,8 @@ package body System.Stream_Attributes is\n    -- W_U --\n    ---------\n \n-   procedure W_U (Stream : not null access RST; Item : in UST.Unsigned) is\n+   procedure W_U (Stream : not null access RST; Item : UST.Unsigned) is\n       T : constant S_U := From_U (Item);\n-\n    begin\n       Ada.Streams.Write (Stream.all, T);\n    end W_U;\n@@ -677,9 +659,8 @@ package body System.Stream_Attributes is\n    -- W_WC --\n    ----------\n \n-   procedure W_WC (Stream : not null access RST; Item : in Wide_Character) is\n+   procedure W_WC (Stream : not null access RST; Item : Wide_Character) is\n       T : constant S_WC := From_WC (Item);\n-\n    begin\n       Ada.Streams.Write (Stream.all, T);\n    end W_WC;"}, {"sha": "e0e9b0f5c6df1bb4160d7157c16447fd6c82da11", "filename": "gcc/ada/s-stratt.ads", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-stratt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-stratt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stratt.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -131,29 +131,29 @@ package System.Stream_Attributes is\n    --  between 'Write and 'Output because there are no discriminants\n    --  or bounds to be written.\n \n-   procedure W_AD  (Stream : not null access RST; Item : in Fat_Pointer);\n-   procedure W_AS  (Stream : not null access RST; Item : in Thin_Pointer);\n-   procedure W_B   (Stream : not null access RST; Item : in Boolean);\n-   procedure W_C   (Stream : not null access RST; Item : in Character);\n-   procedure W_F   (Stream : not null access RST; Item : in Float);\n-   procedure W_I   (Stream : not null access RST; Item : in Integer);\n-   procedure W_LF  (Stream : not null access RST; Item : in Long_Float);\n-   procedure W_LI  (Stream : not null access RST; Item : in Long_Integer);\n-   procedure W_LLF (Stream : not null access RST; Item : in Long_Long_Float);\n-   procedure W_LLI (Stream : not null access RST; Item : in Long_Long_Integer);\n+   procedure W_AD  (Stream : not null access RST; Item : Fat_Pointer);\n+   procedure W_AS  (Stream : not null access RST; Item : Thin_Pointer);\n+   procedure W_B   (Stream : not null access RST; Item : Boolean);\n+   procedure W_C   (Stream : not null access RST; Item : Character);\n+   procedure W_F   (Stream : not null access RST; Item : Float);\n+   procedure W_I   (Stream : not null access RST; Item : Integer);\n+   procedure W_LF  (Stream : not null access RST; Item : Long_Float);\n+   procedure W_LI  (Stream : not null access RST; Item : Long_Integer);\n+   procedure W_LLF (Stream : not null access RST; Item : Long_Long_Float);\n+   procedure W_LLI (Stream : not null access RST; Item : Long_Long_Integer);\n    procedure W_LLU (Stream : not null access RST;\n-                    Item   : in UST.Long_Long_Unsigned);\n-   procedure W_LU  (Stream : not null access RST; Item : in UST.Long_Unsigned);\n-   procedure W_SF  (Stream : not null access RST; Item : in Short_Float);\n-   procedure W_SI  (Stream : not null access RST; Item : in Short_Integer);\n+                    Item   : UST.Long_Long_Unsigned);\n+   procedure W_LU  (Stream : not null access RST; Item : UST.Long_Unsigned);\n+   procedure W_SF  (Stream : not null access RST; Item : Short_Float);\n+   procedure W_SI  (Stream : not null access RST; Item : Short_Integer);\n    procedure W_SSI (Stream : not null access RST;\n-                    Item   : in Short_Short_Integer);\n+                    Item   : Short_Short_Integer);\n    procedure W_SSU (Stream : not null access RST;\n-                    Item   : in UST.Short_Short_Unsigned);\n+                    Item   : UST.Short_Short_Unsigned);\n    procedure W_SU  (Stream : not null access RST;\n-                    Item   : in UST.Short_Unsigned);\n-   procedure W_U   (Stream : not null access RST; Item : in UST.Unsigned);\n-   procedure W_WC  (Stream : not null access RST; Item : in Wide_Character);\n+                    Item   : UST.Short_Unsigned);\n+   procedure W_U   (Stream : not null access RST; Item : UST.Unsigned);\n+   procedure W_WC  (Stream : not null access RST; Item : Wide_Character);\n \n    ----------------------------\n    -- Composite Input/Output --"}, {"sha": "8d5bac29d8ce52d276009e4f433c1dffdc8ca742", "filename": "gcc/ada/s-taasde.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-taasde.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-taasde.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taasde.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1998-2005, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1998-2006, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -174,9 +174,8 @@ package body System.Tasking.Async_Delays is\n    ---------------------------\n \n    function Enqueue_Duration\n-     (T    : in Duration;\n-      D    : Delay_Block_Access)\n-      return Boolean\n+     (T : Duration;\n+      D : Delay_Block_Access) return Boolean\n    is\n    begin\n       if T <= 0.0 then\n@@ -380,7 +379,7 @@ package body System.Tasking.Async_Delays is\n \n          while Timer_Queue.Succ.Resume_Time <= Now loop\n \n-            --  Dequeue the waiting task from the front of the queue.\n+            --  Dequeue the waiting task from the front of the queue\n \n             pragma Debug (System.Tasking.Debug.Trace\n               (Timer_Server_ID, \"Timer service: waking up waiting task\", 'E'));"}, {"sha": "4eecabff54f085154fc114accdc69c2e95281f0a", "filename": "gcc/ada/s-taasde.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-taasde.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-taasde.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taasde.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1998-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1998-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -97,7 +97,7 @@ package System.Tasking.Async_Delays is\n    type Delay_Block_Access is access all Delay_Block;\n \n    function Enqueue_Duration\n-     (T : in Duration;\n+     (T : Duration;\n       D : Delay_Block_Access) return Boolean;\n    --  Enqueue the specified relative delay. Returns True if the delay has\n    --  been enqueued, False if it has already expired. If the delay has been"}, {"sha": "2bd3fc78c2f064a737fa1fb0f13132417c08b1a0", "filename": "gcc/ada/s-tadert.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-tadert.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-tadert.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tadert.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                B o d y                                   --\n --                                                                          --\n---          Copyright (C) 1998-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1998-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,7 +38,7 @@ with System.Task_Primitives.Operations;\n with System.Tasking.Initialization;\n \n function System.Tasking.Async_Delays.Enqueue_RT\n-  (T : in Ada.Real_Time.Time;\n+  (T : Ada.Real_Time.Time;\n    D : Delay_Block_Access) return Boolean\n is\n    use type Ada.Real_Time.Time;  -- for \"=\" operator"}, {"sha": "066dbf0ead5d65ca72ba9c566a8059cbcd287697", "filename": "gcc/ada/s-taskin.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-taskin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-taskin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taskin.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,9 +41,6 @@ with System.Task_Primitives.Operations;\n with System.Storage_Elements;\n --  Needed for initializing Stack_Info.Size\n \n-with System.Parameters;\n---  Used for Adjust_Storage_Size\n-\n package body System.Tasking is\n \n    package STPO renames System.Task_Primitives.Operations;\n@@ -128,7 +125,7 @@ package body System.Tasking is\n              (Parameters.Adjust_Storage_Size (Stack_Size));\n       end if;\n \n-      --  Link the task into the list of all tasks.\n+      --  Link the task into the list of all tasks\n \n       T.Common.All_Tasks_Link := All_Tasks_List;\n       All_Tasks_List := T;"}, {"sha": "55b41c7fae92e2ccfa7e7d495a13505494982f51", "filename": "gcc/ada/s-tasque.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-tasque.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-tasque.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasque.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2005, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2006, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -52,7 +52,7 @@ package body System.Tasking.Queuing is\n    use Protected_Objects;\n    use Protected_Objects.Entries;\n \n-   --  Entry Queues implemented as doubly linked list.\n+   --  Entry Queues implemented as doubly linked list\n \n    Queuing_Policy : Character;\n    pragma Import (C, Queuing_Policy, \"__gl_queuing_policy\");\n@@ -164,7 +164,7 @@ package body System.Tasking.Queuing is\n \n    --  Return number of calls on the waiting queue of E\n \n-   function Count_Waiting (E : in Entry_Queue) return Natural is\n+   function Count_Waiting (E : Entry_Queue) return Natural is\n       Count   : Natural;\n       Temp    : Entry_Call_Link;\n \n@@ -418,7 +418,7 @@ package body System.Tasking.Queuing is\n \n    --  Return the head of entry_queue E\n \n-   function Head (E : in Entry_Queue) return Entry_Call_Link is\n+   function Head (E : Entry_Queue) return Entry_Call_Link is\n    begin\n       pragma Assert (Check_Queue (E));\n       return E.Head;\n@@ -528,7 +528,7 @@ package body System.Tasking.Queuing is\n             Broadcast_Program_Error (Self_ID, Object, null);\n       end;\n \n-      --  If a call was selected, dequeue it and return it for service.\n+      --  If a call was selected, dequeue it and return it for service\n \n       if Entry_Call /= null then\n          Temp_Call := Entry_Call;"}, {"sha": "d8a23a04aad3671f238c2a5f235cda5c0e425271", "filename": "gcc/ada/s-tasque.ads", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-tasque.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-tasque.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasque.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---         Copyright (C) 1992-2005, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2006, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -54,20 +54,20 @@ package System.Tasking.Queuing is\n    procedure Dequeue (E : in out Entry_Queue; Call : Entry_Call_Link);\n    --  Dequeue Call from entry_queue E\n \n-   function Head (E : in Entry_Queue) return Entry_Call_Link;\n-   --  Return the head of entry_queue E\n+   function Head (E : Entry_Queue) return Entry_Call_Link;\n    pragma Inline (Head);\n+   --  Return the head of entry_queue E\n \n    procedure Dequeue_Head\n      (E    : in out Entry_Queue;\n       Call : out Entry_Call_Link);\n    --  Remove and return the head of entry_queue E\n \n    function Onqueue (Call : Entry_Call_Link) return Boolean;\n-   --  Return True if Call is on any entry_queue at all\n    pragma Inline (Onqueue);\n+   --  Return True if Call is on any entry_queue at all\n \n-   function Count_Waiting (E : in Entry_Queue) return Natural;\n+   function Count_Waiting (E : Entry_Queue) return Natural;\n    --  Return number of calls on the waiting queue of E\n \n    procedure Select_Task_Entry_Call\n@@ -82,9 +82,9 @@ package System.Tasking.Queuing is\n    --    Open_Alternative will be True if there were any open alternatives\n \n    procedure Select_Protected_Entry_Call\n-     (Self_ID   : Task_Id;\n-      Object    : POE.Protection_Entries_Access;\n-      Call      : out Entry_Call_Link);\n+     (Self_ID : Task_Id;\n+      Object  : POE.Protection_Entries_Access;\n+      Call    : out Entry_Call_Link);\n    --  Select an entry of a protected object\n \n    procedure Enqueue_Call (Entry_Call : Entry_Call_Link);"}, {"sha": "45354aeb77181f3c5a241eab9629fec8f6b8efb0", "filename": "gcc/ada/s-wchjis.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-wchjis.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fs-wchjis.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchjis.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,7 +43,7 @@ package System.WCh_JIS is\n    --  if the two characters are not a valid EUC encoding.\n \n    procedure JIS_To_EUC\n-     (J    : in Wide_Character;\n+     (J    : Wide_Character;\n       EUC1 : out Character;\n       EUC2 : out Character);\n \n@@ -56,7 +56,7 @@ package System.WCh_JIS is\n    --  the input code is assumed to be in an appropriate range.\n \n    procedure JIS_To_Shift_JIS\n-     (J   : in Wide_Character;\n+     (J   : Wide_Character;\n       SJ1 : out Character;\n       SJ2 : out Character);\n    --  Given a wide character code in JIS form, produce the corresponding"}, {"sha": "4151f0d999bb174d5e34c9e7e22b68c5f86b6e29", "filename": "gcc/ada/sinput-c.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fsinput-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fsinput-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-c.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,14 +24,14 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This child package contains a procedure to load files.\n+--  This child package contains a procedure to load files\n \n --  It is used by Sinput.P to load project files, and by GPrep to load\n --  preprocessor definition files and input files.\n \n package Sinput.C is\n \n    function Load_File (Path : String) return Source_File_Index;\n-   --  Load a file into memory and Initialize the Scans state.\n+   --  Load a file into memory and Initialize the Scans state\n \n end Sinput.C;"}, {"sha": "ce1b636f4b510a08d04cc1cb630966687e8542a8", "filename": "gcc/ada/system-vms-zcx.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fsystem-vms-zcx.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fsystem-vms-zcx.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms-zcx.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                   (OpenVMS GCC_ZCX DEC Threads Version)                  --\n --                                                                          --\n---          Copyright (C) 2002-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -229,7 +229,7 @@ private\n    -- Special VMS Interfaces --\n    ----------------------------\n \n-   procedure Lib_Stop (I : in Integer);\n+   procedure Lib_Stop (I : Integer);\n    pragma Interface (C, Lib_Stop);\n    pragma Import_Procedure (Lib_Stop, \"LIB$STOP\", Mechanism => (Value));\n    --  Interface to VMS condition handling. Used by RTSfind and pragma"}, {"sha": "41e0696b65d537e21cae6e1b830930fbd3dce28c", "filename": "gcc/ada/system-vms.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fsystem-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fsystem-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                       (OpenVMS DEC Threads Version)                      --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -229,7 +229,7 @@ private\n    -- Special VMS Interfaces --\n    ----------------------------\n \n-   procedure Lib_Stop (I : in Integer);\n+   procedure Lib_Stop (I : Integer);\n    pragma Interface (C, Lib_Stop);\n    pragma Import_Procedure (Lib_Stop, \"LIB$STOP\", Mechanism => (Value));\n    --  Interface to VMS condition handling. Used by RTSfind and pragma"}, {"sha": "971c5f37b88b2125b3348b0835c7a32723c8ad2c", "filename": "gcc/ada/system-vms_64.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fsystem-vms_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fsystem-vms_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms_64.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                (OpenVMS 64bit GCC_ZCX DEC Threads Version)               --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -248,7 +248,7 @@ private\n    -- Special VMS Interfaces --\n    ----------------------------\n \n-   procedure Lib_Stop (I : in Integer);\n+   procedure Lib_Stop (I : Integer);\n    pragma Interface (C, Lib_Stop);\n    pragma Import_Procedure (Lib_Stop, \"LIB$STOP\", Mechanism => (Value));\n    --  Interface to VMS condition handling. Used by RTSfind and pragma"}, {"sha": "0b11a5697cdfd69ca79e2e4c4697518e58932e6c", "filename": "gcc/ada/xr_tabls.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fxr_tabls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fxr_tabls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -761,7 +761,7 @@ package body Xr_Tabls is\n \n    function Get_File\n      (File     : File_Reference;\n-      With_Dir : in Boolean := False;\n+      With_Dir : Boolean := False;\n       Strip    : Natural    := 0) return String\n    is\n       Tmp : GNAT.OS_Lib.String_Access;"}, {"sha": "b04b5a66f38b96319c0673a6f27f0ceb917404ac", "filename": "gcc/ada/xref_lib.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fxref_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fxref_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxref_lib.adb?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -75,9 +75,9 @@ package body Xref_Lib is\n    --  the .ali files.\n \n    procedure Open\n-     (Name         : in  String;\n+     (Name         : String;\n       File         : out ALI_File;\n-      Dependencies : in  Boolean := False);\n+      Dependencies : Boolean := False);\n    --  Open a new ALI file. If Dependencies is True, the insert every library\n    --  file 'with'ed in the files database (used for gnatxref)\n \n@@ -1367,7 +1367,7 @@ package body Xref_Lib is\n    -- Print_Unused --\n    ------------------\n \n-   procedure Print_Unused (Full_Path_Name : in Boolean) is\n+   procedure Print_Unused (Full_Path_Name : Boolean) is\n       Decls : constant Declaration_Array_Access := Get_Declarations;\n       Decl  : Declaration_Reference;\n       Arr   : Reference_Array_Access;\n@@ -1417,7 +1417,7 @@ package body Xref_Lib is\n    -- Print_Vi --\n    --------------\n \n-   procedure Print_Vi (Full_Path_Name : in Boolean) is\n+   procedure Print_Vi (Full_Path_Name : Boolean) is\n       Tab   : constant Character := ASCII.HT;\n       Decls : constant Declaration_Array_Access :=\n                 Get_Declarations (Sorted => False);\n@@ -1465,7 +1465,7 @@ package body Xref_Lib is\n    -- Print_Xref --\n    ----------------\n \n-   procedure Print_Xref (Full_Path_Name : in Boolean) is\n+   procedure Print_Xref (Full_Path_Name : Boolean) is\n       Decls : constant Declaration_Array_Access := Get_Declarations;\n       Decl : Declaration_Reference;\n \n@@ -1475,7 +1475,7 @@ package body Xref_Lib is\n       procedure New_Line80;\n       --  Go to start of new line\n \n-      procedure Print80 (S : in String);\n+      procedure Print80 (S : String);\n       --  Print the text, respecting the 80 columns rule\n \n       procedure Print_Ref (Line, Column : String);\n@@ -1504,7 +1504,7 @@ package body Xref_Lib is\n       -- Print80 --\n       -------------\n \n-      procedure Print80 (S : in String) is\n+      procedure Print80 (S : String) is\n          Align : Natural := Margin - (Integer (Column) mod Margin);\n \n       begin"}, {"sha": "8494a9b3d723e3a707d643ad57156876bbf0a61c", "filename": "gcc/ada/xref_lib.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fxref_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae9f22fde8781e5cc7dcdfd3f66f15625842898/gcc%2Fada%2Fxref_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxref_lib.ads?ref=0ae9f22fde8781e5cc7dcdfd3f66f15625842898", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1998-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -80,11 +80,11 @@ package Xref_Lib is\n    -----------------------\n \n    procedure Print_Gnatfind\n-     (References     : in Boolean;\n-      Full_Path_Name : in Boolean);\n-   procedure Print_Unused (Full_Path_Name : in Boolean);\n-   procedure Print_Vi (Full_Path_Name : in Boolean);\n-   procedure Print_Xref (Full_Path_Name : in Boolean);\n+     (References     : Boolean;\n+      Full_Path_Name : Boolean);\n+   procedure Print_Unused (Full_Path_Name : Boolean);\n+   procedure Print_Vi     (Full_Path_Name : Boolean);\n+   procedure Print_Xref   (Full_Path_Name : Boolean);\n    --  The actual print procedures. These functions step through the symbol\n    --  table and print all the symbols if they match the files given on the\n    --  command line (they already match the entities if they are in the\n@@ -94,7 +94,7 @@ package Xref_Lib is\n    -- General Algorithms --\n    ------------------------\n \n-   function Default_Project_File (Dir_Name : in String) return String;\n+   function Default_Project_File (Dir_Name : String) return String;\n    --  Returns the default Project file name for the directory Dir_Name\n \n    procedure Search"}]}