{"sha": "9133c85e1a42213e7e09ba917fae7e57e06a236c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTEzM2M4NWUxYTQyMjEzZTdlMDliYTkxN2ZhZTdlNTdlMDZhMjM2Yw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-06-13T10:20:57Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-06-13T10:20:57Z"}, "message": "re PR middle-end/36520 (ICE in get_memory_rtx)\n\n\tPR middle-end/36520\n\t* builtins.c (get_memory_rtx): Test for the presence of DECL_SIZE_UNIT\n\tbefore evaluating it.\n\nFrom-SVN: r136747", "tree": {"sha": "ffb72b25b3366639abc607ceaa8c9633577cdf14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffb72b25b3366639abc607ceaa8c9633577cdf14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9133c85e1a42213e7e09ba917fae7e57e06a236c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9133c85e1a42213e7e09ba917fae7e57e06a236c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9133c85e1a42213e7e09ba917fae7e57e06a236c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9133c85e1a42213e7e09ba917fae7e57e06a236c/comments", "author": null, "committer": null, "parents": [{"sha": "6cf598659e764d8955a1a90c32d2519ab689cea0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cf598659e764d8955a1a90c32d2519ab689cea0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cf598659e764d8955a1a90c32d2519ab689cea0"}], "stats": {"total": 58, "additions": 55, "deletions": 3}, "files": [{"sha": "6d20774cb1f99f5805c4b8ae5c68b8144a720b86", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9133c85e1a42213e7e09ba917fae7e57e06a236c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9133c85e1a42213e7e09ba917fae7e57e06a236c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9133c85e1a42213e7e09ba917fae7e57e06a236c", "patch": "@@ -1,3 +1,9 @@\n+2008-06-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR middle-end/36520\n+\t* builtins.c (get_memory_rtx): Test for the presence of DECL_SIZE_UNIT\n+\tbefore evaluating it.\n+\n 2008-06-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/36507"}, {"sha": "b3fc3041377aab5a77a4bebf33d3c60612b73369", "filename": "gcc/builtins.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9133c85e1a42213e7e09ba917fae7e57e06a236c/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9133c85e1a42213e7e09ba917fae7e57e06a236c/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=9133c85e1a42213e7e09ba917fae7e57e06a236c", "patch": "@@ -1125,14 +1125,16 @@ get_memory_rtx (tree exp, tree len)\n \t\t\t      && (TREE_INT_CST_LOW (DECL_SIZE (field))\n \t\t\t\t  % BITS_PER_UNIT) == 0));\n \n+\t      /* If we can prove that the memory starting at XEXP (mem, 0) and\n+\t\t ending at XEXP (mem, 0) + LENGTH will fit into this field, we\n+\t\t can keep the COMPONENT_REF in MEM_EXPR.  But be careful with\n+\t\t fields without DECL_SIZE_UNIT like flexible array members.  */\n \t      if (length >= 0\n+\t\t  && DECL_SIZE_UNIT (field)\n \t\t  && host_integerp (DECL_SIZE_UNIT (field), 0))\n \t\t{\n \t\t  HOST_WIDE_INT size\n \t\t    = TREE_INT_CST_LOW (DECL_SIZE_UNIT (field));\n-\t\t  /* If we can prove the memory starting at XEXP (mem, 0)\n-\t\t     and ending at XEXP (mem, 0) + LENGTH will fit into\n-\t\t     this field, we can keep that COMPONENT_REF in MEM_EXPR.  */\n \t\t  if (offset <= size\n \t\t      && length <= size\n \t\t      && offset + length <= size)"}, {"sha": "ae25ac0723e7ff03a945011ae0e91cebd1239f2d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9133c85e1a42213e7e09ba917fae7e57e06a236c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9133c85e1a42213e7e09ba917fae7e57e06a236c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9133c85e1a42213e7e09ba917fae7e57e06a236c", "patch": "@@ -1,3 +1,7 @@\n+2008-06-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.c-torture/compile/20080613-1.c: New test.\n+\n 2008-06-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/36507"}, {"sha": "f64964e7740b3aae4abc7cc365df6da44201d063", "filename": "gcc/testsuite/gcc.c-torture/compile/20080613-1.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9133c85e1a42213e7e09ba917fae7e57e06a236c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080613-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9133c85e1a42213e7e09ba917fae7e57e06a236c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080613-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080613-1.c?ref=9133c85e1a42213e7e09ba917fae7e57e06a236c", "patch": "@@ -0,0 +1,40 @@\n+/* PR middle-end/36520 */\n+/* Testcase by Richard Guenther <rguenth@gcc.gnu.org> */\n+\n+typedef long unsigned int size_t;\n+typedef unsigned short int sa_family_t;\n+struct cmsghdr   {\n+    size_t cmsg_len;\n+    __extension__ unsigned char __cmsg_data [];\n+};\n+typedef unsigned int uint32_t;\n+struct in6_addr   {\n+    union       {\n+        uint32_t u6_addr32[4];\n+    } in6_u;\n+};\n+struct sockaddr_in   {\n+    sa_family_t sin_family;\n+};\n+struct in6_pktinfo   {\n+    struct in6_addr ipi6_addr;\n+};\n+typedef union {\n+    struct sockaddr_in sin;\n+} sockaddr_any;\n+static sockaddr_any src_addr;\n+\n+inline struct cmsghdr * cmsg_put(struct cmsghdr *cm, int type, void *data, size_t len)\n+{\n+    memcpy(((cm)->__cmsg_data), data, len);\n+}\n+\n+int hop_sendmsg(int fd) {\n+    struct cmsghdr *cm;\n+    if (src_addr.sin.sin_family) {\n+        if (src_addr.sin.sin_family == 2) {\n+            struct in6_pktinfo info;\n+            cm = cmsg_put(cm, 50, &info, sizeof(info));\n+        }\n+    }\n+}"}]}