{"sha": "656280b0b4d9ecd546e93ab9061aa76513b40b5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU2MjgwYjBiNGQ5ZWNkNTQ2ZTkzYWI5MDYxYWE3NjUxM2I0MGI1Yg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-01-14T21:54:25Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-01-14T21:54:25Z"}, "message": "PR c++/81327 - cast to void* does not suppress -Wclass-memaccess\n\ngcc/ChangeLog:\n\tPR c++/81327\n\t* doc/invoke.texi (-Wlass-memaccess): Document suppression by casting.\n\nFrom-SVN: r256677", "tree": {"sha": "543386027ab500aa0d494cb5dade74467da5b15f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/543386027ab500aa0d494cb5dade74467da5b15f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/656280b0b4d9ecd546e93ab9061aa76513b40b5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/656280b0b4d9ecd546e93ab9061aa76513b40b5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/656280b0b4d9ecd546e93ab9061aa76513b40b5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/656280b0b4d9ecd546e93ab9061aa76513b40b5b/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba791a6c72d06778670686afba661ecba43fd77b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba791a6c72d06778670686afba661ecba43fd77b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba791a6c72d06778670686afba661ecba43fd77b"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "5934cc0349a0a28382131034f822b24cea1aef09", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/656280b0b4d9ecd546e93ab9061aa76513b40b5b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/656280b0b4d9ecd546e93ab9061aa76513b40b5b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=656280b0b4d9ecd546e93ab9061aa76513b40b5b", "patch": "@@ -1,3 +1,8 @@\n+2018-01-14  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/81327\n+\t* doc/invoke.texi (-Wlass-memaccess): Document suppression by casting.\n+\n 2018-01-14  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config.gcc (i[34567]86-*-*): Remove one duplicate gfniintrin.h"}, {"sha": "f57c05844631079df1594eb92069b40242085d85", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/656280b0b4d9ecd546e93ab9061aa76513b40b5b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/656280b0b4d9ecd546e93ab9061aa76513b40b5b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=656280b0b4d9ecd546e93ab9061aa76513b40b5b", "patch": "@@ -2956,20 +2956,23 @@ C++17 it calls @code{f<void(*)()noexcept>}.\n @item -Wclass-memaccess @r{(C++ and Objective-C++ only)}\n @opindex Wclass-memaccess\n Warn when the destination of a call to a raw memory function such as\n-@code{memset} or @code{memcpy} is an object of class type writing into which\n-might bypass the class non-trivial or deleted constructor or copy assignment,\n-violate const-correctness or encapsulation, or corrupt the virtual table.\n-Modifying the representation of such objects may violate invariants maintained\n-by member functions of the class.  For example, the call to @code{memset}\n-below is undefined because it modifies a non-trivial class object and is,\n-therefore, diagnosed.  The safe way to either initialize or clear the storage\n-of objects of such types is by using the appropriate constructor or assignment\n-operator, if one is available.\n+@code{memset} or @code{memcpy} is an object of class type, and when writing\n+into such an object might bypass the class non-trivial or deleted constructor\n+or copy assignment, violate const-correctness or encapsulation, or corrupt\n+the virtual table.  Modifying the representation of such objects may violate\n+invariants maintained by member functions of the class.  For example, the call\n+to @code{memset} below is undefined because it modifies a non-trivial class\n+object and is, therefore, diagnosed.  The safe way to either initialize or\n+clear the storage of objects of such types is by using the appropriate\n+constructor or assignment operator, if one is available.\n @smallexample\n std::string str = \"abc\";\n-memset (&str, 0, 3);\n+memset (&str, 0, sizeof str);\n @end smallexample\n The @option{-Wclass-memaccess} option is enabled by @option{-Wall}.\n+Explicitly casting the pointer to the class object to @code{void *} or\n+to a type that can be safely accessed by the raw memory function suppresses\n+the warning.\n \n @item -Wnon-virtual-dtor @r{(C++ and Objective-C++ only)}\n @opindex Wnon-virtual-dtor"}]}