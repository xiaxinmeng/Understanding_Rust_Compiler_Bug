{"sha": "e59e60a78f6e12dabf8b71a44465e9b91422ce3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU5ZTYwYTc4ZjZlMTJkYWJmOGI3MWE0NDQ2NWU5YjkxNDIyY2UzYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-11T20:22:02Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-11T20:22:02Z"}, "message": "(emit_call_1): Put new function usage data at end of any data already\nthere.\n\nFrom-SVN: r7273", "tree": {"sha": "16f1fe7077f8a9223a2799cfa20ffb371b1d8b11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16f1fe7077f8a9223a2799cfa20ffb371b1d8b11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e59e60a78f6e12dabf8b71a44465e9b91422ce3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e59e60a78f6e12dabf8b71a44465e9b91422ce3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e59e60a78f6e12dabf8b71a44465e9b91422ce3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e59e60a78f6e12dabf8b71a44465e9b91422ce3b/comments", "author": null, "committer": null, "parents": [{"sha": "1af0b2da29b668b1b763e54c9f37fc0f5425af8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1af0b2da29b668b1b763e54c9f37fc0f5425af8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1af0b2da29b668b1b763e54c9f37fc0f5425af8e"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "99c8a602bbb6a3972c33bf37721b8cf615bbcfa5", "filename": "gcc/calls.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e59e60a78f6e12dabf8b71a44465e9b91422ce3b/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e59e60a78f6e12dabf8b71a44465e9b91422ce3b/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=e59e60a78f6e12dabf8b71a44465e9b91422ce3b", "patch": "@@ -408,8 +408,20 @@ emit_call_1 (funexp, funtype, stack_size, struct_value_size, next_arg_reg,\n   if (! call_insn)\n     abort ();\n \n-  /* Put the register usage information on the CALL.  */\n-  CALL_INSN_FUNCTION_USAGE (call_insn) = call_fusage;\n+  /* Put the register usage information on the CALL.  If there is already\n+     some usage information, put ours at the end.  */\n+  if (CALL_INSN_FUNCTION_USAGE (call_insn))\n+    {\n+      rtx link;\n+\n+      for (link = CALL_INSN_FUNCTION_USAGE (call_insn); XEXP (link, 1) != 0;\n+\t   link = XEXP (link, 1))\n+\t;\n+\n+      XEXP (link, 1) = call_fusage;\n+    }\n+  else\n+    CALL_INSN_FUNCTION_USAGE (call_insn) = call_fusage;\n \n   /* If this is a const call, then set the insn's unchanging bit.  */\n   if (is_const)"}]}