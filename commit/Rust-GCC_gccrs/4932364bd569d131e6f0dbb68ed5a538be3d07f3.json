{"sha": "4932364bd569d131e6f0dbb68ed5a538be3d07f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkzMjM2NGJkNTY5ZDEzMWU2ZjBkYmI2OGVkNWE1MzhiZTNkMDdmMw==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-03-10T10:42:23Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-03-10T10:42:23Z"}, "message": "re PR fortran/66089 (elemental dependency mishandling when class array are involved)\n\n2019-03-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n    PR fortran/66089\n    * trans-array.c (gfc_scalar_elemental_arg_saved_as_reference):\n    Return false if a scalar tempoary is needed.\n    (gfc_walk_variable_expr): Fix up class refs.\n\n2019-03-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n    PR fortran/66089\n    * gfortran.dg/dependency_53.f90: New test.\n\nFrom-SVN: r269549", "tree": {"sha": "9ba42260481ecfc8c22628b12bdd09b6d36b193f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ba42260481ecfc8c22628b12bdd09b6d36b193f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4932364bd569d131e6f0dbb68ed5a538be3d07f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4932364bd569d131e6f0dbb68ed5a538be3d07f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4932364bd569d131e6f0dbb68ed5a538be3d07f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4932364bd569d131e6f0dbb68ed5a538be3d07f3/comments", "author": null, "committer": null, "parents": [{"sha": "2263c69edc270c1e762c88e771d12dd5d09b052d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2263c69edc270c1e762c88e771d12dd5d09b052d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2263c69edc270c1e762c88e771d12dd5d09b052d"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "8ad4361409163277ba868ee1f9d55d3c58170161", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4932364bd569d131e6f0dbb68ed5a538be3d07f3/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4932364bd569d131e6f0dbb68ed5a538be3d07f3/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4932364bd569d131e6f0dbb68ed5a538be3d07f3", "patch": "@@ -1,3 +1,10 @@\n+2019-03-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/66089\n+\t* trans-array.c (gfc_scalar_elemental_arg_saved_as_reference):\n+\tReturn false if a scalar tempoary is needed.\n+\t(gfc_walk_variable_expr): Fix up class refs.\n+\n 2019-03-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/87734"}, {"sha": "1379426d8e1b8349bb743b6ddf4322c44dacdd69", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4932364bd569d131e6f0dbb68ed5a538be3d07f3/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4932364bd569d131e6f0dbb68ed5a538be3d07f3/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=4932364bd569d131e6f0dbb68ed5a538be3d07f3", "patch": "@@ -2699,6 +2699,9 @@ gfc_scalar_elemental_arg_saved_as_reference (gfc_ss_info * ss_info)\n   if (ss_info->type != GFC_SS_REFERENCE)\n     return false;\n \n+  if (ss_info->data.scalar.needs_temporary)\n+    return false;\n+\n   /* If the actual argument can be absent (in other words, it can\n      be a NULL reference), don't try to evaluate it; pass instead\n      the reference directly.  */\n@@ -10515,6 +10518,8 @@ gfc_walk_variable_expr (gfc_ss * ss, gfc_expr * expr)\n {\n   gfc_ref *ref;\n \n+  gfc_fix_class_refs (expr);\n+\n   for (ref = expr->ref; ref; ref = ref->next)\n     if (ref->type == REF_ARRAY && ref->u.ar.type != AR_ELEMENT)\n       break;"}, {"sha": "cb07129671f0b8bb8ad9d1d0e6d404a793ad316c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4932364bd569d131e6f0dbb68ed5a538be3d07f3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4932364bd569d131e6f0dbb68ed5a538be3d07f3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4932364bd569d131e6f0dbb68ed5a538be3d07f3", "patch": "@@ -1,3 +1,8 @@\n+2019-03-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/66089\n+\t* gfortran.dg/dependency_53.f90: New test.\n+\n 2019-03-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/87734"}, {"sha": "a45302fb0a34e4a056cba35f95c2903fe48fc853", "filename": "gcc/testsuite/gfortran.dg/dependency_53.f90", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4932364bd569d131e6f0dbb68ed5a538be3d07f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependency_53.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4932364bd569d131e6f0dbb68ed5a538be3d07f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependency_53.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependency_53.f90?ref=4932364bd569d131e6f0dbb68ed5a538be3d07f3", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do run }\n+! PR fortran/66089 - used to ICE and, after that ICE was fixed,\n+! gave wrong results.\n+  type :: t\n+    integer :: c\n+  end type t\n+\n+  class(t), dimension(:), allocatable :: b,c\n+\n+  allocate (b(5), source=t(7))\n+  allocate(c(5), source=t(13))\n+  c = plus(c(1), b)\n+  if (any(c%c /= 20)) stop 1\n+  c = t(13)\n+  c = plus(b, c(1))\n+  if (any(c%c /= 20)) stop 2\n+contains\n+\n+  elemental function plus(lhs, rhs)\n+    class(t), intent(in) :: lhs, rhs\n+    type(t)             :: plus\n+    plus%c = lhs%c + rhs%c\n+  end function plus\n+\n+end"}]}