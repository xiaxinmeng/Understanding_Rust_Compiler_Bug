{"sha": "6f117ca583179cf2e02360d94bb0129066049a35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmYxMTdjYTU4MzE3OWNmMmUwMjM2MGQ5NGJiMDEyOTA2NjA0OWEzNQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-02-09T17:32:53Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-02-09T17:32:53Z"}, "message": "[multiple changes]\n\n2010-02-09  Paul Thomas  <pault@gcc.gnu.org>\n\n        PR fortran/41869\n        * module.c (fix_mio_expr): Fix for private generic procedures.\n\n2010-02-09  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/41869\n        * gfortran.dg/module_write_1.f90: New test.\n\nFrom-SVN: r156631", "tree": {"sha": "61f1f8b7c7f419da28d07bc6a304ff976514b273", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61f1f8b7c7f419da28d07bc6a304ff976514b273"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f117ca583179cf2e02360d94bb0129066049a35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f117ca583179cf2e02360d94bb0129066049a35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f117ca583179cf2e02360d94bb0129066049a35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f117ca583179cf2e02360d94bb0129066049a35/comments", "author": null, "committer": null, "parents": [{"sha": "e76e92315f3d212bbadf61accdf2548f86393871", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e76e92315f3d212bbadf61accdf2548f86393871", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e76e92315f3d212bbadf61accdf2548f86393871"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "f922b4ec25932713b1de80f2cb59f2e988d766f7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f117ca583179cf2e02360d94bb0129066049a35/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f117ca583179cf2e02360d94bb0129066049a35/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6f117ca583179cf2e02360d94bb0129066049a35", "patch": "@@ -1,3 +1,8 @@\n+2010-02-09  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/41869\n+\t* module.c (fix_mio_expr): Fix for private generic procedures.\n+\n 2010-02-09  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/39171"}, {"sha": "36db86358da2aadc6f9639ec6c8b88bb97ffc16f", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f117ca583179cf2e02360d94bb0129066049a35/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f117ca583179cf2e02360d94bb0129066049a35/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=6f117ca583179cf2e02360d94bb0129066049a35", "patch": "@@ -2934,6 +2934,19 @@ fix_mio_expr (gfc_expr *e)\n       fname = e->value.function.esym ? e->value.function.esym->name\n \t\t\t\t     : e->value.function.isym->name;\n       e->symtree = gfc_find_symtree (gfc_current_ns->sym_root, fname);\n+\n+      if (e->symtree)\n+\treturn;\n+\n+      /* This is probably a reference to a private procedure from another\n+\t module.  To prevent a segfault, make a generic with no specific\n+\t instances.  If this module is used, without the required\n+\t specific coming from somewhere, the appropriate error message\n+\t is issued.  */\n+      gfc_get_symbol (fname, gfc_current_ns, &sym);\n+      sym->attr.flavor = FL_PROCEDURE;\n+      sym->attr.generic = 1;\n+      e->symtree = gfc_find_symtree (gfc_current_ns->sym_root, fname);\n     }\n }\n "}, {"sha": "4dd6762a758352558767754e33505f1f58f35340", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f117ca583179cf2e02360d94bb0129066049a35/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f117ca583179cf2e02360d94bb0129066049a35/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6f117ca583179cf2e02360d94bb0129066049a35", "patch": "@@ -1,3 +1,8 @@\n+2010-02-09  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/41869\n+\t* gfortran.dg/module_write_1.f90: New test.\n+\n 2010-02-09  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* gcc.dg/pr19340.c: Adjust."}, {"sha": "3b488ce55d9a5643b2568a387b50789d6489be2d", "filename": "gcc/testsuite/gfortran.dg/module_write_1.f90", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f117ca583179cf2e02360d94bb0129066049a35/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_write_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f117ca583179cf2e02360d94bb0129066049a35/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_write_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_write_1.f90?ref=6f117ca583179cf2e02360d94bb0129066049a35", "patch": "@@ -0,0 +1,59 @@\n+! { dg-do compile }\n+!\n+! PR fortran/41869\n+!\n+! Was ICEing while module write of symbol 'vs_str' in m_dom_dom\n+! because of \"len\" being private in fox_m_fsys_format.\n+!\n+module fox_m_fsys_array_str\n+contains\n+  pure function str_vs(vs) result(s)\n+    character, dimension(:), intent(in) :: vs\n+    character(len=size(vs)) :: s\n+    s = transfer(vs, s)\n+  end function str_vs\n+  pure function vs_str(s) result(vs)\n+    character(len=*), intent(in) :: s\n+    character, dimension(len(s)) :: vs\n+    vs = transfer(s, vs)\n+  end function vs_str\n+end module fox_m_fsys_array_str\n+\n+module fox_m_fsys_format\n+  private\n+  interface str\n+    module procedure  str_logical_array\n+  end interface str\n+  interface len\n+    module procedure str_logical_array_len\n+  end interface\n+  public :: str\n+contains\n+  pure function str_logical_array_len(la) result(n)\n+    logical, dimension(:), intent(in)   :: la\n+  end function str_logical_array_len\n+  pure function str_logical_array(la) result(s)\n+    logical, dimension(:), intent(in)   :: la\n+    character(len=len(la)) :: s\n+  end function str_logical_array\n+  pure function checkFmt(fmt) result(good)\n+    character(len=*), intent(in) :: fmt\n+    logical :: good\n+    good = len(fmt) > 0\n+  end function checkFmt\n+end module fox_m_fsys_format\n+\n+module m_dom_dom\n+  use fox_m_fsys_array_str, only: str_vs, vs_str\n+end module m_dom_dom\n+\n+module FoX_dom\n+  use fox_m_fsys_format\n+  use m_dom_dom\n+end module FoX_dom\n+\n+use FoX_dom\n+implicit none\n+print *, vs_str(\"ABC\")\n+end\n+! { dg-final { cleanup-modules \"fox_m_fsys_array_str fox_m_fsys_format m_dom_dom fox_dom\" } }"}]}