{"sha": "d04fd40f86bb40d9267ef40419f021d6bcdeda23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA0ZmQ0MGY4NmJiNDBkOTI2N2VmNDA0MTlmMDIxZDZiY2RlZGEyMw==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gnu.org", "date": "2002-01-22T22:08:49Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2002-01-22T22:08:49Z"}, "message": "ecos.exp: Append .exe instead of a.out as the link output.\n\n2002-01-22  H.J. Lu <hjl@gnu.org>\n\n\t* g++.dg/special/ecos.exp: Append .exe instead of a.out as the\n\tlink output.\n\t* gcc.dg/special/ecos.exp: Likewise.\n\t* lib/g++-dg.exp: Likewise.\n\t* lib/g77-dg.exp: Likewise.\n\t* lib/gcc-dg.exp : Likewise.\n\t* lib/mike-g++.exp: Likewise.\n\t* lib/mike-g77.exp: Likewise.\n\t* lib/mike-gcc.exp: Likewise.\n\t* lib/objc-dg.exp: Likewise.\n\nFrom-SVN: r49100", "tree": {"sha": "96e307a717146f2912851ca06bdfb527875ac83f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96e307a717146f2912851ca06bdfb527875ac83f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d04fd40f86bb40d9267ef40419f021d6bcdeda23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d04fd40f86bb40d9267ef40419f021d6bcdeda23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d04fd40f86bb40d9267ef40419f021d6bcdeda23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d04fd40f86bb40d9267ef40419f021d6bcdeda23/comments", "author": null, "committer": null, "parents": [{"sha": "bda145054363dfa5eef640d526542bc6130a56d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bda145054363dfa5eef640d526542bc6130a56d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bda145054363dfa5eef640d526542bc6130a56d0"}], "stats": {"total": 55, "additions": 34, "deletions": 21}, "files": [{"sha": "836457ff0ecbbd12ae0bc03dd1af75475c69dd92", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d04fd40f86bb40d9267ef40419f021d6bcdeda23", "patch": "@@ -1,3 +1,16 @@\n+2002-01-22  H.J. Lu <hjl@gnu.org>\n+\n+\t* g++.dg/special/ecos.exp: Append .exe instead of a.out as the\n+\tlink output.\n+\t* gcc.dg/special/ecos.exp: Likewise.\n+\t* lib/g++-dg.exp: Likewise.\n+\t* lib/g77-dg.exp: Likewise.\n+\t* lib/gcc-dg.exp : Likewise.\n+\t* lib/mike-g++.exp: Likewise.\n+\t* lib/mike-g77.exp: Likewise.\n+\t* lib/mike-gcc.exp: Likewise.\n+\t* lib/objc-dg.exp: Likewise.\n+\n 2002-01-22  Janis Johnson  <janis187@us.ibm.com>\n \n \tPR target/5379"}, {"sha": "5b560581e75e204631078087c2359da6271c5bc8", "filename": "gcc/testsuite/g++.dg/special/ecos.exp", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fecos.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fecos.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fecos.exp?ref=d04fd40f86bb40d9267ef40419f021d6bcdeda23", "patch": "@@ -29,15 +29,15 @@ load_lib g++-dg.exp\n ###########\n \n dg-init\n-set lines [g++_target_compile \"$srcdir/$subdir/conpr-1.C\" \"$objdir/a.out\" executable \"\"]\n+set lines [g++_target_compile \"$srcdir/$subdir/conpr-1.C\" \"$objdir/conpr-1.exe\" executable \"\"]\n if [string match \"*init_priority*\" $lines] then {\n     xfail \"conpr-1.C\"\n-    file delete $objdir/a.out\n+    file delete $objdir/conpr-1.exe\n } elseif ![string match \"\" $lines] then {\n     fail \"conpr-1.C\"\n } else {\n     dg-runtest \"$srcdir/$subdir/conpr-1.C\" \"\" \"\" \n-    file delete $objdir/a.out\n+    file delete $objdir/conpr-1.exe\n }\n dg-finish\n \n@@ -89,15 +89,15 @@ dg-finish\n ###########\n \n dg-init\n-set lines [g++_target_compile \"$srcdir/$subdir/initp1.C\" \"$objdir/a.out\" executable \"\"]\n+set lines [g++_target_compile \"$srcdir/$subdir/initp1.C\" \"$objdir/initp1.exe\" executable \"\"]\n if [string match \"*init_priority*\" $lines] then {\n     xfail \"initp1.C\"\n-    file delete $objdir/a.out\n+    file delete $objdir/initp1.exe\n } elseif ![string match \"\" $lines] then {\n     fail \"initp1.C\"\n } else {\n     dg-runtest \"$srcdir/$subdir/initp1.C\" \"\" \"\"\n-    file delete $objdir/a.out\n+    file delete $objdir/initp1.exe\n }\n dg-finish\n "}, {"sha": "cc632fc334c8818668db57828e8e751ad3ed29c9", "filename": "gcc/testsuite/gcc.dg/special/ecos.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fecos.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fecos.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fecos.exp?ref=d04fd40f86bb40d9267ef40419f021d6bcdeda23", "patch": "@@ -124,7 +124,7 @@ if { [ check_weak_available ] == 1 } {\n         set lines [gcc_target_compile \"$srcdir/$subdir/wkali-2b.c\" \"wkali-2b.o\" object \"\"]\n         if [string match \"*only weak aliases*\" $lines] then {\n \t    xfail \"wkali-2b.o\"\n-\t    file delete $srcdir/$subdir/a.out\n+\t    file delete $srcdir/$subdir/wkali-2.exe\n         } elseif ![string match \"\" $lines] then {\n             fail \"wkali-2b.o\"\n         } else {"}, {"sha": "8be839e4dcffbe4854d74b56612b25ce03335dde", "filename": "gcc/testsuite/lib/g++-dg.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2Flib%2Fg%2B%2B-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2Flib%2Fg%2B%2B-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B-dg.exp?ref=d04fd40f86bb40d9267ef40419f021d6bcdeda23", "patch": "@@ -39,7 +39,7 @@ proc g++-dg-test { prog do_what extra_tool_flags } {\n \t}\n \t\"link\" {\n \t    set compile_type \"executable\"\n-\t    set output_file \"a.out\"\n+\t    set output_file \"[file rootname [file tail $prog]].exe\"\n \t    # The following line is needed for targets like the i960 where\n \t    # the default output file is b.out.  Sigh.\n \t}\n@@ -48,7 +48,7 @@ proc g++-dg-test { prog do_what extra_tool_flags } {\n \t    # FIXME: \"./\" is to cope with \".\" not being in $PATH.\n \t    # Should this be handled elsewhere?\n \t    # YES.\n-\t    set output_file \"./a.out\"\n+\t    set output_file \"./[file rootname [file tail $prog]].exe\"\n \t    # This is the only place where we care if an executable was\n \t    # created or not.  If it was, dg.exp will try to run it.\n \t    remote_file build delete $output_file;"}, {"sha": "396604cd9382f92d212890eddf7d97002ea25bb5", "filename": "gcc/testsuite/lib/g77-dg.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2Flib%2Fg77-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2Flib%2Fg77-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg77-dg.exp?ref=d04fd40f86bb40d9267ef40419f021d6bcdeda23", "patch": "@@ -71,7 +71,7 @@ proc g77-dg-test { prog do_what extra_tool_flags } {\n \t}\n \t\"link\" {\n \t    set compile_type \"executable\"\n-\t    set output_file \"a.out\"\n+\t    set output_file \"[file rootname [file tail $prog]].exe\"\n \t    # The following line is needed for targets like the i960 where\n \t    # the default output file is b.out.  Sigh.\n \t}\n@@ -80,7 +80,7 @@ proc g77-dg-test { prog do_what extra_tool_flags } {\n \t    # FIXME: \"./\" is to cope with \".\" not being in $PATH.\n \t    # Should this be handled elsewhere?\n \t    # YES.\n-\t    set output_file \"./a.out\"\n+\t    set output_file \"./[file rootname [file tail $prog]].exe\"\n \t    # This is the only place where we care if an executable was\n \t    # created or not.  If it was, dg.exp will try to run it.\n \t    remote_file build delete $output_file;"}, {"sha": "403fefc2f11fb42795f1dc392c9b6fb7ce594e93", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=d04fd40f86bb40d9267ef40419f021d6bcdeda23", "patch": "@@ -71,7 +71,7 @@ proc gcc-dg-test { prog do_what extra_tool_flags } {\n \t}\n \t\"link\" {\n \t    set compile_type \"executable\"\n-\t    set output_file \"a.out\"\n+\t    set output_file \"[file rootname [file tail $prog]].exe\"\n \t    # The following line is needed for targets like the i960 where\n \t    # the default output file is b.out.  Sigh.\n \t}\n@@ -80,7 +80,7 @@ proc gcc-dg-test { prog do_what extra_tool_flags } {\n \t    # FIXME: \"./\" is to cope with \".\" not being in $PATH.\n \t    # Should this be handled elsewhere?\n \t    # YES.\n-\t    set output_file \"./a.out\"\n+\t    set output_file \"./[file rootname [file tail $prog]].exe\"\n \t    # This is the only place where we care if an executable was\n \t    # created or not.  If it was, dg.exp will try to run it.\n \t    remote_file build delete $output_file;"}, {"sha": "0844d45a421c1af7ebf7d52495b6bc390d6e1806", "filename": "gcc/testsuite/lib/mike-g++.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2Flib%2Fmike-g%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2Flib%2Fmike-g%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fmike-g%2B%2B.exp?ref=d04fd40f86bb40d9267ef40419f021d6bcdeda23", "patch": "@@ -113,12 +113,12 @@ proc postbase  { src_code run groups args } {\n \tlink\n \t{\n \t    set compile_type \"executable\";\n-\t    set output_file \"$tmpdir/a.out\";\n+\t    append output_file \".exe\";\n \t}\n \trun\n \t{\n \t    set compile_type \"executable\";\n-\t    set output_file \"$tmpdir/a.out\";\n+\t    append output_file \".exe\";\n \t    set run yes;\n \t}\n \tdefault"}, {"sha": "ccc9041e3ec395241faeabc6bfd295cf02571b89", "filename": "gcc/testsuite/lib/mike-g77.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2Flib%2Fmike-g77.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2Flib%2Fmike-g77.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fmike-g77.exp?ref=d04fd40f86bb40d9267ef40419f021d6bcdeda23", "patch": "@@ -120,12 +120,12 @@ proc postbase  { src_code run groups args } {\n \tlink\n \t{\n \t    set compile_type \"executable\";\n-\t    set output_file \"$tmpdir/a.out\";\n+\t    append output_file \".exe\";\n \t}\n \trun\n \t{\n \t    set compile_type \"executable\";\n-\t    set output_file \"$tmpdir/a.out\";\n+\t    append output_file \".exe\";\n \t    set run yes;\n \t}\n \tdefault"}, {"sha": "34cf039cf5128f7c32bb3c97df83e129d5312329", "filename": "gcc/testsuite/lib/mike-gcc.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2Flib%2Fmike-gcc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2Flib%2Fmike-gcc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fmike-gcc.exp?ref=d04fd40f86bb40d9267ef40419f021d6bcdeda23", "patch": "@@ -117,12 +117,12 @@ proc postbase  { src_code run groups args } {\n \tlink\n \t{\n \t    set compile_type \"executable\";\n-\t    set output_file \"$tmpdir/a.out\";\n+\t    append output_file \".exe\";\n \t}\n \trun\n \t{\n \t    set compile_type \"executable\";\n-\t    set output_file \"$tmpdir/a.out\";\n+\t    append output_file \".exe\";\n \t    set run yes;\n \t}\n \tdefault"}, {"sha": "397bb2b9c809deef817dc7ce476792e0cc7f5373", "filename": "gcc/testsuite/lib/objc-dg.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2Flib%2Fobjc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d04fd40f86bb40d9267ef40419f021d6bcdeda23/gcc%2Ftestsuite%2Flib%2Fobjc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fobjc-dg.exp?ref=d04fd40f86bb40d9267ef40419f021d6bcdeda23", "patch": "@@ -73,7 +73,7 @@ proc objc-dg-test { prog do_what extra_tool_flags } {\n \t}\n \t\"link\" {\n \t    set compile_type \"executable\"\n-\t    set output_file \"a.out\"\n+\t    set output_file \"[file rootname [file tail $prog]].exe\"\n \t    # The following line is needed for targets like the i960 where\n \t    # the default output file is b.out.  Sigh.\n \t}\n@@ -82,7 +82,7 @@ proc objc-dg-test { prog do_what extra_tool_flags } {\n \t    # FIXME: \"./\" is to cope with \".\" not being in $PATH.\n \t    # Should this be handled elsewhere?\n \t    # YES.\n-\t    set output_file \"./a.out\"\n+\t    set output_file \"./[file rootname [file tail $prog]].exe\"\n \t    # This is the only place where we care if an executable was\n \t    # created or not.  If it was, dg.exp will try to run it.\n \t    remote_file build delete $output_file;"}]}