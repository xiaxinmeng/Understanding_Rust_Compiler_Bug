{"sha": "7fd6021841474041dcb492e1f3131777dbb5142c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZkNjAyMTg0MTQ3NDA0MWRjYjQ5MmUxZjMxMzE3NzdkYmI1MTQyYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2005-11-10T10:46:27Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-11-10T10:46:27Z"}, "message": "boost_shared_ptr.h (_Sp_counted_base::release): Optimize by manually inlining weak_release.\n\n2005-11-10  Paolo Carlini  <pcarlini@suse.de>\n\t    Peter Dimov  <pdimov@mmltd.net>\n\n\t* include/tr1/boost_shared_ptr.h (_Sp_counted_base::release):\n\tOptimize by manually inlining weak_release.\n\n\t* include/tr1/boost_shared_ptr.h (_Sp_counted_base::release,\n\tweak_release): Use explicit memory barriers.\n\n\t\n\nCo-Authored-By: Peter Dimov <pdimov@mmltd.net>\n\nFrom-SVN: r106729", "tree": {"sha": "0cab4ff3cce12dc732ebb1c739aa20c04981bf1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cab4ff3cce12dc732ebb1c739aa20c04981bf1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fd6021841474041dcb492e1f3131777dbb5142c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fd6021841474041dcb492e1f3131777dbb5142c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fd6021841474041dcb492e1f3131777dbb5142c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fd6021841474041dcb492e1f3131777dbb5142c/comments", "author": null, "committer": null, "parents": [{"sha": "720e2f72c3d2a5b538f519da0a5d18173989d8e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/720e2f72c3d2a5b538f519da0a5d18173989d8e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/720e2f72c3d2a5b538f519da0a5d18173989d8e1"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "19d2d49b041a3559ad82a8b75a15cd980e1ca010", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd6021841474041dcb492e1f3131777dbb5142c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd6021841474041dcb492e1f3131777dbb5142c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7fd6021841474041dcb492e1f3131777dbb5142c", "patch": "@@ -1,3 +1,12 @@\n+2005-11-10  Paolo Carlini  <pcarlini@suse.de>\n+\t    Peter Dimov  <pdimov@mmltd.net>\n+\n+\t* include/tr1/boost_shared_ptr.h (_Sp_counted_base::release):\n+\tOptimize by manually inlining weak_release.\n+\n+\t* include/tr1/boost_shared_ptr.h (_Sp_counted_base::release,\n+\tweak_release): Use explicit memory barriers.\n+\n 2005-11-09  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Paolo Carlini  <pcarlini@suse.de>\n             Gabriel Dos Reis  <gdr@integrable-solutions.net>"}, {"sha": "3eb94fd980b439ae5c0a4a62856015592ac0fc9d", "filename": "libstdc++-v3/include/tr1/boost_shared_ptr.h", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd6021841474041dcb492e1f3131777dbb5142c/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fboost_shared_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd6021841474041dcb492e1f3131777dbb5142c/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fboost_shared_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fboost_shared_ptr.h?ref=7fd6021841474041dcb492e1f3131777dbb5142c", "patch": "@@ -151,9 +151,12 @@ class _Sp_counted_base\n     if (__gnu_cxx::__exchange_and_add(&_M_use_count, -1) == 1)\n       {\n \tdispose();\n-\t__glibcxx_mutex_lock(_M_mutex);\n-\t__glibcxx_mutex_unlock(_M_mutex);\n-\tweak_release();\n+\t\n+\t_GLIBCXX_READ_MEM_BARRIER;\n+\t_GLIBCXX_WRITE_MEM_BARRIER;\n+\t\n+\tif (__gnu_cxx::__exchange_and_add(&_M_weak_count, -1) == 1)\n+\t  destroy();\n       }\n   }\n \n@@ -168,8 +171,8 @@ class _Sp_counted_base\n   {\n     if (__gnu_cxx::__exchange_and_add(&_M_weak_count, -1) == 1)\n       {\n-\t__glibcxx_mutex_lock(_M_mutex);\n-\t__glibcxx_mutex_unlock(_M_mutex);\n+\t_GLIBCXX_READ_MEM_BARRIER;\n+\t_GLIBCXX_WRITE_MEM_BARRIER;\n \tdestroy();\n       }\n   }\n@@ -328,7 +331,7 @@ class weak_count\n {\n private:\n \n-  _Sp_counted_base * _M_pi;\n+  _Sp_counted_base* _M_pi;\n \n   friend class shared_count;\n \n@@ -677,8 +680,8 @@ template<typename _Tp>\n       _M_less(const shared_ptr<_Tp1>& __rhs) const\n       { return _M_refcount < __rhs._M_refcount; }\n \n-    template <typename _Tp1> friend class shared_ptr;\n-    template <typename _Tp1> friend class weak_ptr;\n+    template<typename _Tp1> friend class shared_ptr;\n+    template<typename _Tp1> friend class weak_ptr;\n \n     // friends injected into enclosing namespace and found by ADL:\n     template<typename _Tp1>"}]}