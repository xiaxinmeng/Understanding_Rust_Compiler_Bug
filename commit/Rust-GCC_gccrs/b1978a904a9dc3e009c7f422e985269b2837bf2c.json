{"sha": "b1978a904a9dc3e009c7f422e985269b2837bf2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE5NzhhOTA0YTlkYzNlMDA5YzdmNDIyZTk4NTI2OWIyODM3YmYyYw==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2009-10-15T23:22:44Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2009-10-15T23:22:44Z"}, "message": "re PR target/41702 (FAIL: abi/demangle/abi_text/09.cc execution test)\n\n\tPR target/41702\n\t* pa.md (casesi): Use sign extended index in call to\n\tgen_casesi64p.\n\t(casesi64p): Update pattern to reflect above.\n\nFrom-SVN: r152882", "tree": {"sha": "f427094e8f542ef5f60febd45e95514b961e68c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f427094e8f542ef5f60febd45e95514b961e68c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1978a904a9dc3e009c7f422e985269b2837bf2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1978a904a9dc3e009c7f422e985269b2837bf2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1978a904a9dc3e009c7f422e985269b2837bf2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1978a904a9dc3e009c7f422e985269b2837bf2c/comments", "author": null, "committer": null, "parents": [{"sha": "f67c7a8f96b1086998c458d21854d1e677091570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f67c7a8f96b1086998c458d21854d1e677091570", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f67c7a8f96b1086998c458d21854d1e677091570"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "d0e8faab622c92a7dd85ac1967b523feaba46fcc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1978a904a9dc3e009c7f422e985269b2837bf2c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1978a904a9dc3e009c7f422e985269b2837bf2c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1978a904a9dc3e009c7f422e985269b2837bf2c", "patch": "@@ -1,3 +1,10 @@\n+2009-10-15  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR target/41702\n+\t* pa.md (casesi): Use sign extended index in call to\n+\tgen_casesi64p.\n+\t(casesi64p): Update pattern to reflect above.\n+\n 2009-10-15  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR rtl-optimization/41697"}, {"sha": "d10a40d55e16e7f56e95f59d566624b96081dd37", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1978a904a9dc3e009c7f422e985269b2837bf2c/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1978a904a9dc3e009c7f422e985269b2837bf2c/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=b1978a904a9dc3e009c7f422e985269b2837bf2c", "patch": "@@ -7120,17 +7120,6 @@\n       operands[0] = index;\n     }\n \n-  /* In 64bit mode we must make sure to wipe the upper bits of the register\n-     just in case the addition overflowed or we had random bits in the\n-     high part of the register.  */\n-  if (TARGET_64BIT)\n-    {\n-      rtx index = gen_reg_rtx (DImode);\n-\n-      emit_insn (gen_extendsidi2 (index, operands[0]));\n-      operands[0] = gen_rtx_SUBREG (SImode, index, 4);\n-    }\n-\n   if (!INT_5_BITS (operands[2]))\n     operands[2] = force_reg (SImode, operands[2]);\n \n@@ -7149,6 +7138,17 @@\n     emit_jump_insn (gen_cbranchsi4 (test, operands[0], operands[2], operands[4]));\n   }\n \n+  /* In 64bit mode we must make sure to wipe the upper bits of the register\n+     just in case the addition overflowed or we had random bits in the\n+     high part of the register.  */\n+  if (TARGET_64BIT)\n+    {\n+      rtx index = gen_reg_rtx (DImode);\n+\n+      emit_insn (gen_extendsidi2 (index, operands[0]));\n+      operands[0] = index;\n+    }\n+\n   if (TARGET_BIG_SWITCH)\n     {\n       if (TARGET_64BIT)\n@@ -7209,8 +7209,7 @@\n ;;; 64-bit code, 32-bit relative branch table.\n (define_insn \"casesi64p\"\n   [(set (pc) (mem:DI (plus:DI\n-\t\t       (mult:DI (sign_extend:DI\n-\t\t\t\t  (match_operand:SI 0 \"register_operand\" \"r\"))\n+\t\t       (mult:DI (match_operand:DI 0 \"register_operand\" \"r\")\n \t\t\t\t(const_int 8))\n \t\t       (label_ref (match_operand 1 \"\" \"\")))))\n    (clobber (match_scratch:DI 2 \"=&r\"))"}]}