{"sha": "83bbd9b6c01f1a7a9c954783e58f760b1c2dca95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNiYmQ5YjZjMDFmMWE3YTljOTU0NzgzZTU4Zjc2MGIxYzJkY2E5NQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-11-26T00:51:17Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-11-26T00:51:17Z"}, "message": "alias.c (find_base_value): Use new_reg_base_value if it's live.\n\n        * alias.c (find_base_value): Use new_reg_base_value if it's live.\n        (copying_arguments): Make boolean.\n\nFrom-SVN: r59483", "tree": {"sha": "5273c65ecf336e7685b5c2a99498d88d7013166b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5273c65ecf336e7685b5c2a99498d88d7013166b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83bbd9b6c01f1a7a9c954783e58f760b1c2dca95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83bbd9b6c01f1a7a9c954783e58f760b1c2dca95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83bbd9b6c01f1a7a9c954783e58f760b1c2dca95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83bbd9b6c01f1a7a9c954783e58f760b1c2dca95/comments", "author": null, "committer": null, "parents": [{"sha": "cc5baa8634e8ba28b64ff1a6619e461453e4a72d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc5baa8634e8ba28b64ff1a6619e461453e4a72d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc5baa8634e8ba28b64ff1a6619e461453e4a72d"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "bcb5208532f631b31ff00eab58fd76eeaca7af5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83bbd9b6c01f1a7a9c954783e58f760b1c2dca95/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83bbd9b6c01f1a7a9c954783e58f760b1c2dca95/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=83bbd9b6c01f1a7a9c954783e58f760b1c2dca95", "patch": "@@ -1,3 +1,8 @@\n+2002-11-25  Richard Henderson  <rth@redhat.com>\n+\n+\t* alias.c (find_base_value): Use new_reg_base_value if it's live.\n+\t(copying_arguments): Make boolean.\n+\n 2002-11-25  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* gcc.c (static_spec_functions): Add if-exists-else spec"}, {"sha": "45e868ca9638226ec5f4e8205ad9eadee0835886", "filename": "gcc/alias.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83bbd9b6c01f1a7a9c954783e58f760b1c2dca95/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83bbd9b6c01f1a7a9c954783e58f760b1c2dca95/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=83bbd9b6c01f1a7a9c954783e58f760b1c2dca95", "patch": "@@ -199,7 +199,7 @@ char *reg_known_equiv_p;\n \n /* True when scanning insns from the start of the rtl to the\n    NOTE_INSN_FUNCTION_BEG note.  */\n-static int copying_arguments;\n+static bool copying_arguments;\n \n /* The splay-tree used to store the various alias set entries.  */\n static splay_tree alias_sets;\n@@ -781,9 +781,16 @@ find_base_value (src)\n \t The test above is not sufficient because the scheduler may move\n \t a copy out of an arg reg past the NOTE_INSN_FUNCTION_BEGIN.  */\n       if ((regno >= FIRST_PSEUDO_REGISTER || fixed_regs[regno])\n-\t  && regno < reg_base_value_size\n-\t  && reg_base_value[regno])\n-\treturn reg_base_value[regno];\n+\t  && regno < reg_base_value_size)\n+\t{\n+\t  /* If we're inside init_alias_analysis, use new_reg_base_value\n+\t     to reduce the number of relaxation iterations.  */\n+\t  if (new_reg_base_value && new_reg_base_value[regno])\n+\t    return new_reg_base_value[regno];\n+\n+\t  if (reg_base_value[regno])\n+\t    return reg_base_value[regno];\n+\t}\n \n       return src;\n \n@@ -2744,7 +2751,7 @@ init_alias_analysis ()\n \n       /* We're at the start of the function each iteration through the\n \t loop, so we're copying arguments.  */\n-      copying_arguments = 1;\n+      copying_arguments = true;\n \n       /* Wipe the potential alias information clean for this pass.  */\n       memset ((char *) new_reg_base_value, 0, reg_base_value_size * sizeof (rtx));\n@@ -2834,7 +2841,7 @@ init_alias_analysis ()\n \t    }\n \t  else if (GET_CODE (insn) == NOTE\n \t\t   && NOTE_LINE_NUMBER (insn) == NOTE_INSN_FUNCTION_BEG)\n-\t    copying_arguments = 0;\n+\t    copying_arguments = false;\n \t}\n \n       /* Now propagate values from new_reg_base_value to reg_base_value.  */"}]}