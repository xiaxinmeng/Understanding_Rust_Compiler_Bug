{"sha": "801f03e3d21a96f63249aa22c8716490e14b7c26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAxZjAzZTNkMjFhOTZmNjMyNDlhYTIyYzg3MTY0OTBlMTRiN2MyNg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2008-10-27T16:19:25Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2008-10-27T16:19:25Z"}, "message": "re PR middle-end/37884 (Bootstrap failure due to miscompilation of tree-vrp.c)\n\n2008-10-27  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR middle-end/37884\n\t* ira-build.c (copy_live_ranges_to_removed_store_destinations):\n\tRename to copy_info_to_removed_store_destinations.  Propagate\n\tconflict hard regs and register stack attribute.\n\nFrom-SVN: r141383", "tree": {"sha": "60b53ab90a403aef59459df0c4e45de7a73e5cc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60b53ab90a403aef59459df0c4e45de7a73e5cc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/801f03e3d21a96f63249aa22c8716490e14b7c26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/801f03e3d21a96f63249aa22c8716490e14b7c26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/801f03e3d21a96f63249aa22c8716490e14b7c26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/801f03e3d21a96f63249aa22c8716490e14b7c26/comments", "author": null, "committer": null, "parents": [{"sha": "83b83ae97a8d5d291a6209bad3610c686a7138e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83b83ae97a8d5d291a6209bad3610c686a7138e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83b83ae97a8d5d291a6209bad3610c686a7138e3"}], "stats": {"total": 82, "additions": 48, "deletions": 34}, "files": [{"sha": "6d67af1831f8f5e1a5d80e4a8bfdd173d63f37d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 36, "deletions": 29, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/801f03e3d21a96f63249aa22c8716490e14b7c26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/801f03e3d21a96f63249aa22c8716490e14b7c26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=801f03e3d21a96f63249aa22c8716490e14b7c26", "patch": "@@ -1,3 +1,10 @@\n+2008-10-27  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR middle-end/37884\n+\t* ira-build.c (copy_live_ranges_to_removed_store_destinations):\n+\tRename to copy_info_to_removed_store_destinations.  Propagate\n+\tconflict hard regs and register stack attribute.\n+\n 2008-10-26  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR middle-end/37316\n@@ -47,7 +54,7 @@\n \t* tree-ssa-loop-ivopts.c (add_old_iv_candidates): For pointer bases\n \tadd sizetype IV with initial value zero instead of pointer type.\n \n-2008-10-24  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2008-10-24  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR c/7543\n \t* value-prof.c (gimple_stringop_fixed_value): Use parentheses\n@@ -140,7 +147,7 @@\n \t* tree-ssa-structalias.c (could_have_pointers): Complex types\n \tcannot have pointers.\n \n-2008-10-22  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2008-10-22  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR c/30949\n \t* c-typeck.c (convert_for_assignment): Do not give declaration's\n@@ -228,19 +235,19 @@\n \t* tree-ssa-pre.c (insert_into_preds_of_block): Don't rewrite constant\n \tpart of expression.\n \n-2008-10-20  Tobias Schl\u00c3\u00bcter  <tobi@gcc.gnu.org>\n+2008-10-20  Tobias Schl\u00c3\u0083\u00c2\u00bcter  <tobi@gcc.gnu.org>\n \n \t* doc/install.texi: Fix typos in previous patch.\n \n-2008-10-19  Tobias Schl\u00c3\u00bcter  <tobi@gcc.gnu.org>\n+2008-10-19  Tobias Schl\u00c3\u0083\u00c2\u00bcter  <tobi@gcc.gnu.org>\n \n \t* doc/install.texi: Document in-tree building of gcc and mpfr.\n \n 2008-10-19  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-alias.c (may_alias_p): Remove bogus shortcut.\n \n-2008-10-19  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n+2008-10-19  Manuel L\u00c3\u0083\u00c2\u00b3pez-Ib\u00c3\u0083\u00c2\u00a1\u00c3\u0083\u00c2\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR c/30260\n \t* c-decl.c (finish_enum): Convert non-integer enumerators to enum\n@@ -7216,7 +7223,7 @@\n \t* passes.c (init_optimization_passes): Exchange store-ccp\n \twith a ccp pass.\n \n-2008-08-19  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-08-19  Rafael Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* varasm.c (weak_decls): Move earlier in the file.\n \t(assemble_external): Add weak decls to the weak_decls list.\n@@ -9015,7 +9022,7 @@\n \tPR ada/36554\n \t* dwarf2out.c (is_subrange_type): Deal with BOOLEAN_TYPE.\n \n-2008-07-30  Rafael \u00c3\u0081vila de Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-07-30  Rafael \u00c3\u0083\u00c2\u0081vila de Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \tPR 36974\n \t* final.c (call_from_call_insn): Handle COND_EXEC.\n@@ -9227,7 +9234,7 @@\n \t* config/rs6000/rs6000.h (SLOW_UNALIGNED_ACCESS): Add clause for\n \tvector modes.\n \n-2008-07-30  Rafael \u00c3\u0081vila de Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-07-30  Rafael \u00c3\u0083\u00c2\u0081vila de Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* final.c (call_from_call_insn): New.\n \t(final_scan_insn): Call assemble_external on FUNCTION_DECLs.\n@@ -10345,7 +10352,7 @@\n \t(TARGET_OPTION_PRINT): Ditto.\n \t(TARGET_CAN_INLINE_P): Ditto.\n \n-2008-07-22  Rafael \u00c3\u0081vila de Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-07-22  Rafael \u00c3\u0083\u00c2\u0081vila de Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* c-typeck.c (build_external_ref): Don't call assemble_external.\n \t* final.c (output_operand): Call assemble_external.\n@@ -10366,7 +10373,7 @@\n \thighest magnitude if this is still less or equal to the true\n \tquotient in magnitude.\n \n-2008-07-21  Rafael \u00c3\u0081vila de Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-07-21  Rafael \u00c3\u0083\u00c2\u0081vila de Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* Makefile.in: Replace toplev.h with TOPLEV_H.\n \t* c-decl.c (merge_decls): Don't set DECL_IN_SYSTEM_HEADER.\n@@ -10669,7 +10676,7 @@\n \t(m32c_legitimate_address_p): Handle \"++rii\" addresses created by\n \tm32c_legitimize_reload_address.\n \n-2007-07-16  Rafael \u00c3\u0081vila de Esp\u00c3\u00adndola  <espindola@google.com>\n+2007-07-16  Rafael \u00c3\u0083\u00c2\u0081vila de Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* c-decl.c (merge_decls): Keep DECL_SOURCE_LOCATION and\n \tDECL_IN_SYSTEM_HEADER in sync.\n@@ -10759,7 +10766,7 @@\n \n \t* emit-rtl.c (set_mem_attributes_minus_bitpos): Improve comment.\n \n-2007-07-14  Rafael \u00c3\u0081vila de Esp\u00c3\u00adndola  <espindola@google.com>\n+2007-07-14  Rafael \u00c3\u0083\u00c2\u0081vila de Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* c-decl.c (diagnose_mismatched_decls): Don't warn if TREE_NO_WARNING\n \tis set.\n@@ -15051,7 +15058,7 @@\n \tClear __gcov_indreict_call_callee variable to avoid misattribution\n \tof the profile.\n \n-2008-05-28  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-05-28  Rafael Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* see.c (see_def_extension_not_merged): Use copy_rtx_if_shared to avoid\n \tinvalid sharing.\n@@ -15469,7 +15476,7 @@\n \tfor A24 to PSImode.\n \t(m32c_address_cost): Detail costs for indirect offsets.\n \n-2008-05-23  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-05-23  Rafael Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* see.c (see_get_extension_data): Don't use SUBREG_REG to test\n \tif a node is a SUBREG.\n@@ -15570,7 +15577,7 @@\n \t* config/avr/avr.c (get_sequence_length): Add new function.\n \t(expand_prologue, expand_epilogue): Remove duplicate code.\n \n-2008-05-22  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-05-22  Rafael Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* see.c (see_pre_insert_extensions): Use copy_rtx to avoid invalid rtx\n \tsharing.\n@@ -16862,7 +16869,7 @@\n \tto one line.\n \t* doc/invoke.texi (Wframe-larger-than=): Add more description.\n \n-2008-05-08  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-05-08  Rafael Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* tree-complex.c (expand_complex_div_wide): Don't create CONDs that\n \ttrap.\n@@ -17889,7 +17896,7 @@\n \t(evaluate_stmt): Print the likely value.\n \t(ccp_visit_stmt): Avoid excessive vertical spacing.\n \n-2008-04-30  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-04-30  Rafael Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* builtins.c (fold_call_expr): Return realret.\n \t* tree-ssa-threadedge.c\n@@ -18672,7 +18679,7 @@\n \t* tree-vect-analyze.c (vect_analyze_group_access): SLP is\n \tincapable of dealing with loads with gaps.\n \n-2008-04-24  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-04-24  Rafael Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* tree-flow.h (vrp_evaluate_conditional): Change signature.\n \t* tree-ssa-propagate.c (fold_predicate_in): Update call to\n@@ -18996,7 +19003,7 @@\n \n \t* Makefile.in (s-gtyp-input): Remove tmp-gi.list before writing it.\n \n-2008-04-18  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-04-18  Rafael Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* tree-vrp.c (find_case_label_index): Fix the binary search.\n \t(find_case_label_range): New.\n@@ -19302,7 +19309,7 @@\n \t* c-decl.c (finish_decl): If extern or static var has variable\n \tsize, set TREE_TYPE (decl) to error_mark_node.\n \n-2008-04-15  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-04-15  Rafael Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* fold-const.c (tree_call_nonnegative_warnv_p): Remove local\n \tvariable arg1.\n@@ -19442,7 +19449,7 @@\n \n \t* config/spu/spu.c (spu_init_builtins): Mark builtins as nothrow.\n \n-2008-04-10  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-04-10  Rafael Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* tree-vrp.c (extract_range_from_binary_expr): Don't handle\n \tTRUTH_ANDIF_EXPR or TRUTH_ORIF_EXPR.\n@@ -19537,7 +19544,7 @@\n \t* config/rs6000/rs6000.c (rs6000_output_function_epilogue): Update\n \tGNU Fortran language string.\n \n-2008-04-08  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-04-08  Rafael Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* fold-canst.c (tree_call_nonnegative_warnv_p): New.\n \t(tree_invalid_nonnegative_warnv_p): Use tree_call_nonnegative_warnv_p.\n@@ -20185,7 +20192,7 @@\n \tmake sure to fill gaps with a fallback label if default_label\n \tis not present.\n \n-2008-04-03  Dominique d'Humi\u00c3\u00a8res <dominiq@lps.ens.fr>\n+2008-04-03  Dominique d'Humi\u00c3\u0083\u00c2\u00a8res <dominiq@lps.ens.fr>\n \n \tPR target/35801\n \t* config/rs6000/rs6000.c (rs6000_output_mi_thunk): Free cfun.\n@@ -20348,7 +20355,7 @@\n \t(varying_mem_p): Move above propagate_rtx.\n \t(all_uses_available_at): Do not check MEMs.\n \n-2008-04-02  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-04-02  Rafael Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* tree-vrp.c (extract_code_and_val_from_cond): Remove.\n \t(register_edge_assert_for_2): Split the cond argument.\n@@ -20523,7 +20530,7 @@\n \t(*sse4_1_smin<mode>3): Likewise.\n \t(*sse4_1_umin<mode>3): Likewise.\n \n-2008-04-01  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-04-01  Rafael Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* tree-cfg.c (verify_expr): remove in_phi.\n \t(verify_stmt): Don't call walk_tree with verify_expr. Use\n@@ -20544,7 +20551,7 @@\n \tPR pch/13675\n \t* c-pch.c (c_common_read_pch): On error close (fd) resp. fclose (f).\n \n-2008-04-01  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-04-01  Rafael Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* tree-vrp.c (extract_code_and_val_from_cond_with_ops): New.\n \t(extract_code_and_val_from_cond): Use\n@@ -20735,7 +20742,7 @@\n \tvectorization support.\n \t* doc/invoke.texi (-mveclibabi) [svml]: Document new target option.\n \n-2008-03-28  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-03-28  Rafael Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* fold-const.c (tree_unary_nonnegative_warnv_p): Make it public.\n \t(tree_binary_nonnegative_warnv_p): Make it public.\n@@ -22528,7 +22535,7 @@\n \ton hpux10.\n \t* configure: Rebuilt.\n \n-2008-03-04  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-03-04  Rafael Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* fold-const.c (tree_simple_nonnegative_warnv_p): New.\n \t(tree_unary_nonnegative_warnv_p): New.\n@@ -22549,7 +22556,7 @@\n \t* config/i386/smmintrin.h (SIDD_XXX): Renamed to ...\n \t(_SIDD_XXX): This.\n \n-2008-03-04  Rafael Esp\u00c3\u00adndola  <espindola@google.com>\n+2008-03-04  Rafael Esp\u00c3\u0083\u00c2\u00adndola  <espindola@google.com>\n \n \t* fold-const.c (tree_unary_nonzero_warnv_p): New.\n \t(tree_binary_nonzero_warnv_p): New."}, {"sha": "68b54dfad25b8abd05328a7bf6a06764cae17392", "filename": "gcc/ira-build.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/801f03e3d21a96f63249aa22c8716490e14b7c26/gcc%2Fira-build.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/801f03e3d21a96f63249aa22c8716490e14b7c26/gcc%2Fira-build.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-build.c?ref=801f03e3d21a96f63249aa22c8716490e14b7c26", "patch": "@@ -2042,11 +2042,12 @@ create_caps (void)\n static ira_allocno_t *regno_top_level_allocno_map;\n \n /* Process all allocnos originated from pseudo REGNO and copy live\n-   ranges from low level allocnos to final allocnos which are\n-   destinations of removed stores at a loop exit.  Return true if we\n-   copied live ranges.  */\n+   ranges, hard reg conflicts, and allocno stack reg attributes from\n+   low level allocnos to final allocnos which are destinations of\n+   removed stores at a loop exit.  Return true if we copied live\n+   ranges.  */\n static bool\n-copy_live_ranges_to_removed_store_destinations (int regno)\n+copy_info_to_removed_store_destinations (int regno)\n {\n   ira_allocno_t a, parent_a;\n   ira_loop_tree_node_t parent;\n@@ -2087,6 +2088,12 @@ copy_live_ranges_to_removed_store_destinations (int regno)\n       change_allocno_in_range_list (r, parent_a);\n       ALLOCNO_LIVE_RANGES (parent_a)\n \t= merge_ranges (r, ALLOCNO_LIVE_RANGES (parent_a));\n+      IOR_HARD_REG_SET (ALLOCNO_TOTAL_CONFLICT_HARD_REGS (parent_a),\n+\t\t\tALLOCNO_TOTAL_CONFLICT_HARD_REGS (a));\n+#ifdef STACK_REGS\n+      if (ALLOCNO_TOTAL_NO_STACK_REG_P (a))\n+\tALLOCNO_TOTAL_NO_STACK_REG_P (parent_a) = true;\n+#endif\n       merged_p = true;\n     }\n   return merged_p;\n@@ -2235,7 +2242,7 @@ ira_flattening (int max_regno_before_emit, int ira_max_point_before_emit)\n \t  ALLOCNO_COPIES (a) = NULL;\n \t  regno_top_level_allocno_map[REGNO (ALLOCNO_REG (a))] = a;\n \t}\n-      if (mem_dest_p && copy_live_ranges_to_removed_store_destinations (i))\n+      if (mem_dest_p && copy_info_to_removed_store_destinations (i))\n \tmerged_p = true;\n     }\n   ira_assert (new_pseudos_p || ira_max_point_before_emit == ira_max_point);"}]}