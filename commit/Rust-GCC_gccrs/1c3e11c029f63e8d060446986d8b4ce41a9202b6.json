{"sha": "1c3e11c029f63e8d060446986d8b4ce41a9202b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMzZTExYzAyOWY2M2U4ZDA2MDQ0Njk4NmQ4YjRjZTQxYTkyMDJiNg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-01-08T19:48:58Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-05T08:18:59Z"}, "message": "[Ada] Remove redundant explicit calls to UI_From_Int in comparisons\n\ngcc/ada/\n\n\t* exp_ch4.adb, sem_ch13.adb, sem_eval.adb, sem_res.adb: Remove\n\tredundant calls to UI_From_Int.", "tree": {"sha": "4f9fd4f9dc0ebcdc9322e5c3e4ef973857d249de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f9fd4f9dc0ebcdc9322e5c3e4ef973857d249de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c3e11c029f63e8d060446986d8b4ce41a9202b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c3e11c029f63e8d060446986d8b4ce41a9202b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c3e11c029f63e8d060446986d8b4ce41a9202b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c3e11c029f63e8d060446986d8b4ce41a9202b6/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e4ea94b01d2ffc34bc49d886ca8cb21d011c9cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e4ea94b01d2ffc34bc49d886ca8cb21d011c9cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e4ea94b01d2ffc34bc49d886ca8cb21d011c9cf"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "0ef744b48f36b80ffaf7eac52e8d94c23b05da87", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3e11c029f63e8d060446986d8b4ce41a9202b6/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3e11c029f63e8d060446986d8b4ce41a9202b6/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=1c3e11c029f63e8d060446986d8b4ce41a9202b6", "patch": "@@ -4262,7 +4262,7 @@ package body Exp_Ch4 is\n             --  larger type for the operands, to prevent spurious constraint\n             --  errors on large legal literals of the type.\n \n-            if Modulus (Etype (N)) > UI_From_Int (Int (Integer'Last)) then\n+            if Modulus (Etype (N)) > Int (Integer'Last) then\n                Target_Type := Standard_Long_Long_Integer;\n             else\n                Target_Type := Standard_Integer;"}, {"sha": "989ab6e8b024971fc66e1a91490096d072ab9af8", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3e11c029f63e8d060446986d8b4ce41a9202b6/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3e11c029f63e8d060446986d8b4ce41a9202b6/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=1c3e11c029f63e8d060446986d8b4ce41a9202b6", "patch": "@@ -12304,7 +12304,7 @@ package body Sem_Ch13 is\n       --  Reject patently improper size values\n \n       if Is_Elementary_Type (T)\n-        and then Siz > UI_From_Int (Int'Last)\n+        and then Siz > Int'Last\n       then\n          Error_Msg_N (\"Size value too large for elementary type\", N);\n "}, {"sha": "a1e32f9c1724ff1491b2e481ee784499cfdefaf1", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3e11c029f63e8d060446986d8b4ce41a9202b6/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3e11c029f63e8d060446986d8b4ce41a9202b6/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=1c3e11c029f63e8d060446986d8b4ce41a9202b6", "patch": "@@ -4137,7 +4137,7 @@ package body Sem_Eval is\n \n          Len := String_Length (Strval (N));\n \n-         if UI_From_Int (Len) > String_Type_Len (Bas) then\n+         if Len > String_Type_Len (Bas) then\n \n             --  Issue message. Note that this message is a warning if the\n             --  string literal is not marked as static (happens in some cases"}, {"sha": "77af6ce4799d482125e2aa798981df4814fe7eb1", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3e11c029f63e8d060446986d8b4ce41a9202b6/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3e11c029f63e8d060446986d8b4ce41a9202b6/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=1c3e11c029f63e8d060446986d8b4ce41a9202b6", "patch": "@@ -11555,14 +11555,14 @@ package body Sem_Res is\n                Comp_Typ_Hi : constant Node_Id :=\n                                Type_High_Bound (Component_Type (Typ));\n \n-               Char_Val : Uint;\n+               Char_Val : Int;\n \n             begin\n                if Compile_Time_Known_Value (Comp_Typ_Lo)\n                  and then Compile_Time_Known_Value (Comp_Typ_Hi)\n                then\n                   for J in 1 .. Strlen loop\n-                     Char_Val := UI_From_Int (Int (Get_String_Char (Str, J)));\n+                     Char_Val := Int (Get_String_Char (Str, J));\n \n                      if Char_Val < Expr_Value (Comp_Typ_Lo)\n                        or else Char_Val > Expr_Value (Comp_Typ_Hi)\n@@ -11587,7 +11587,7 @@ package body Sem_Res is\n       --  heavy artillery for this situation, but it is hard work to avoid.\n \n       declare\n-         Lits : constant List_Id    := New_List;\n+         Lits : constant List_Id := New_List;\n          P    : Source_Ptr := Loc + 1;\n          C    : Char_Code;\n "}]}