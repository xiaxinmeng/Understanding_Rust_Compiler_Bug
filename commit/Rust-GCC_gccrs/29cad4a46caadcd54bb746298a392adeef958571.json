{"sha": "29cad4a46caadcd54bb746298a392adeef958571", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjljYWQ0YTQ2Y2FhZGNkNTRiYjc0NjI5OGEzOTJhZGVlZjk1ODU3MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-15T19:13:36Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-15T19:13:36Z"}, "message": "(HOST_PTR_PRINTF): Handle char * wider than long.\n\n(HOST_WIDE_INT_PRINT_{DEC,UNSIGNED,HEX,DOUBLE_HEX}): New macros.\n\nFrom-SVN: r13173", "tree": {"sha": "5c897371a6772598c31ce6b328785b2eb9d812c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c897371a6772598c31ce6b328785b2eb9d812c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29cad4a46caadcd54bb746298a392adeef958571", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29cad4a46caadcd54bb746298a392adeef958571", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29cad4a46caadcd54bb746298a392adeef958571", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29cad4a46caadcd54bb746298a392adeef958571/comments", "author": null, "committer": null, "parents": [{"sha": "395d53bb1eac6db23ec2e182ba53f1314fe9dfcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/395d53bb1eac6db23ec2e182ba53f1314fe9dfcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/395d53bb1eac6db23ec2e182ba53f1314fe9dfcf"}], "stats": {"total": 67, "additions": 66, "deletions": 1}, "files": [{"sha": "f1f146f2ecf73b733461afdf5506bfcffecbf165", "filename": "gcc/machmode.h", "status": "modified", "additions": 66, "deletions": 1, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29cad4a46caadcd54bb746298a392adeef958571/gcc%2Fmachmode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29cad4a46caadcd54bb746298a392adeef958571/gcc%2Fmachmode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmachmode.h?ref=29cad4a46caadcd54bb746298a392adeef958571", "patch": "@@ -53,7 +53,72 @@ Boston, MA 02111-1307, USA.  */\n /* Provide a default way to print an address in hex via printf.  */\n \n #ifndef HOST_PTR_PRINTF\n-#define HOST_PTR_PRINTF sizeof (int) == sizeof (char *) ? \"%x\" : \"%lx\"\n+#define HOST_PTR_PRINTF \\\n+  (sizeof (int) == sizeof (char *) ? \"%x\" \\\n+   : sizeof (long) == sizeof (char *) ? \"%lx\" : \"%llx\")\n+#endif\n+\n+/* Provide defaults for the way to print a HOST_WIDE_INT\n+   in various manners.  */\n+\n+#ifndef HOST_WIDE_INT_PRINT_DEC\n+#if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n+#define HOST_WIDE_INT_PRINT_DEC \"%d\"\n+#else\n+#if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n+#define HOST_WIDE_INT_PRINT_DEC \"%ld\"\n+#else\n+#define HOST_WIDE_INT_PRINT_DEC \"%lld\"\n+#endif\n+#endif\n+#endif\n+\n+#ifndef HOST_WIDE_INT_PRINT_UNSIGNED\n+#if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n+#define HOST_WIDE_INT_PRINT_UNSIGNED \"%u\"\n+#else\n+#if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n+#define HOST_WIDE_INT_PRINT_UNSIGNED \"%lu\"\n+#else\n+#define HOST_WIDE_INT_PRINT_UNSIGNED \"%llu\"\n+#endif\n+#endif\n+#endif\n+\n+#ifndef HOST_WIDE_INT_PRINT_HEX\n+#if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n+#define HOST_WIDE_INT_PRINT_HEX \"0x%x\"\n+#else\n+#if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n+#define HOST_WIDE_INT_PRINT_HEX \"0x%lx\"\n+#else\n+#define HOST_WIDE_INT_PRINT_HEX \"0x%llx\"\n+#endif\n+#endif\n+#endif\n+\n+#ifndef HOST_WIDE_INT_PRINT_DOUBLE_HEX\n+#if HOST_BITS_PER_WIDE_INT == 64\n+#if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n+#define HOST_WIDE_INT_PRINT_DOUBLE_HEX \"0x%x%016x\"\n+#else\n+#if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n+#define HOST_WIDE_INT_PRINT_DOUBLE_HEX \"0x%lx%016lx\"\n+#else\n+#define HOST_WIDE_INT_PRINT_DOUBLE_HEX \"0x%llx%016llx\"\n+#endif\n+#endif\n+#else\n+#if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n+#define HOST_WIDE_INT_PRINT_DOUBLE_HEX \"0x%x%08x\"\n+#else\n+#if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n+#define HOST_WIDE_INT_PRINT_DOUBLE_HEX \"0x%lx%08lx\"\n+#else\n+#define HOST_WIDE_INT_PRINT_DOUBLE_HEX \"0x%llx%08llx\"\n+#endif\n+#endif\n+#endif\n #endif\n \n /* Make an enum class that gives all the machine modes.  */"}]}