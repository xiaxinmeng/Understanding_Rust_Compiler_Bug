{"sha": "795693c185eddff2b83be4b194da5e016f0717b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk1NjkzYzE4NWVkZGZmMmI4M2JlNGIxOTRkYTVlMDE2ZjA3MTdiMA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2014-10-22T12:02:39Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-10-22T12:02:39Z"}, "message": "recog.h (recog_data_d): Remove enabled_alternatives.\n\ngcc/\n\t* recog.h (recog_data_d): Remove enabled_alternatives.\n\t* recog.c (extract_insn): Don't set it.\n\t* reload.c (find_reloads): Call get_enabled_alternatives.\n\nFrom-SVN: r216556", "tree": {"sha": "b7cd2ba7a91faabe34b29f9c0625cefcfece59a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7cd2ba7a91faabe34b29f9c0625cefcfece59a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/795693c185eddff2b83be4b194da5e016f0717b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/795693c185eddff2b83be4b194da5e016f0717b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/795693c185eddff2b83be4b194da5e016f0717b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/795693c185eddff2b83be4b194da5e016f0717b0/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "daca1a96afae35e1a2f39b91f014c2f414f70c5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daca1a96afae35e1a2f39b91f014c2f414f70c5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daca1a96afae35e1a2f39b91f014c2f414f70c5f"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "6b23954b5e7608b66bd39080053b6f2839c585b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795693c185eddff2b83be4b194da5e016f0717b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795693c185eddff2b83be4b194da5e016f0717b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=795693c185eddff2b83be4b194da5e016f0717b0", "patch": "@@ -1,3 +1,9 @@\n+2014-10-22  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* recog.h (recog_data_d): Remove enabled_alternatives.\n+\t* recog.c (extract_insn): Don't set it.\n+\t* reload.c (find_reloads): Call get_enabled_alternatives.\n+\n 2014-10-22  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* recog.h (constrain_operands): Add an alternative_mask parameter."}, {"sha": "1a17510b1d03c422ce278206f468fdf2f7b25d9c", "filename": "gcc/recog.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795693c185eddff2b83be4b194da5e016f0717b0/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795693c185eddff2b83be4b194da5e016f0717b0/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=795693c185eddff2b83be4b194da5e016f0717b0", "patch": "@@ -2344,8 +2344,6 @@ extract_insn (rtx_insn *insn)\n \n   gcc_assert (recog_data.n_alternatives <= MAX_RECOG_ALTERNATIVES);\n \n-  recog_data.enabled_alternatives = get_enabled_alternatives (insn);\n-\n   recog_data.insn = NULL;\n   which_alternative = -1;\n }"}, {"sha": "0802640689aab29ab3c439b7232541ed63b695cc", "filename": "gcc/recog.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795693c185eddff2b83be4b194da5e016f0717b0/gcc%2Frecog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795693c185eddff2b83be4b194da5e016f0717b0/gcc%2Frecog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.h?ref=795693c185eddff2b83be4b194da5e016f0717b0", "patch": "@@ -250,12 +250,6 @@ struct recog_data_d\n   /* True if insn is ASM_OPERANDS.  */\n   bool is_asm;\n \n-  /* Specifies whether an insn alternative is enabled using the `enabled'\n-     attribute in the insn pattern definition.  For back ends not using\n-     the `enabled' attribute the bits are always set to 1 in expand_insn.\n-     Bits beyond the last alternative are also set to 1.  */\n-  alternative_mask enabled_alternatives;\n-\n   /* In case we are caching, hold insn data was generated for.  */\n   rtx insn;\n };"}, {"sha": "5f560a941d3af21562840741087f00f27117316b", "filename": "gcc/reload.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795693c185eddff2b83be4b194da5e016f0717b0/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795693c185eddff2b83be4b194da5e016f0717b0/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=795693c185eddff2b83be4b194da5e016f0717b0", "patch": "@@ -3002,13 +3002,14 @@ find_reloads (rtx_insn *insn, int replace, int ind_levels, int live_known,\n \n      First loop over alternatives.  */\n \n+  alternative_mask enabled = get_enabled_alternatives (insn);\n   for (this_alternative_number = 0;\n        this_alternative_number < n_alternatives;\n        this_alternative_number++)\n     {\n       int swapped;\n \n-      if (!TEST_BIT (recog_data.enabled_alternatives, this_alternative_number))\n+      if (!TEST_BIT (enabled, this_alternative_number))\n \t{\n \t  int i;\n "}]}