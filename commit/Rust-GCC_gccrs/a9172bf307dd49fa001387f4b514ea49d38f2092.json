{"sha": "a9172bf307dd49fa001387f4b514ea49d38f2092", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTkxNzJiZjMwN2RkNDlmYTAwMTM4N2Y0YjUxNGVhNDlkMzhmMjA5Mg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-10-07T12:44:54Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-10-07T12:44:54Z"}, "message": "gimplify.c (should_warn_for_implicit_fallthrough): Check for FALLTHROUGH_LABEL_P here...\n\n\t* gimplify.c (should_warn_for_implicit_fallthrough): Check for\n\tFALLTHROUGH_LABEL_P here...\n\t(warn_implicit_fallthrough_r): ...not here.\n\n\t* c-c++-common/Wimplicit-fallthrough-22.c: New test.\n\nFrom-SVN: r240864", "tree": {"sha": "9a20274567104fda6593fcc35ed4b64bb5d20406", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a20274567104fda6593fcc35ed4b64bb5d20406"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9172bf307dd49fa001387f4b514ea49d38f2092", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9172bf307dd49fa001387f4b514ea49d38f2092", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9172bf307dd49fa001387f4b514ea49d38f2092", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9172bf307dd49fa001387f4b514ea49d38f2092/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a14afd0657b21e1de31fd1b2146056b09dbab5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a14afd0657b21e1de31fd1b2146056b09dbab5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a14afd0657b21e1de31fd1b2146056b09dbab5b"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "efc6ae51cccb71ac3e33be64f84346402afb7202", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9172bf307dd49fa001387f4b514ea49d38f2092/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9172bf307dd49fa001387f4b514ea49d38f2092/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a9172bf307dd49fa001387f4b514ea49d38f2092", "patch": "@@ -1,3 +1,9 @@\n+2016-10-07  Marek Polacek  <polacek@redhat.com>\n+\n+\t* gimplify.c (should_warn_for_implicit_fallthrough): Check for\n+\tFALLTHROUGH_LABEL_P here...\n+\t(warn_implicit_fallthrough_r): ...not here.\n+\n 2016-10-07  Bernd Schmidt  <bschmidt@redhat.com>\n \n \tPR tree-optimization/77880"}, {"sha": "2266333442aaac60f0d75a5fe45cc5f93a6da2e8", "filename": "gcc/gimplify.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9172bf307dd49fa001387f4b514ea49d38f2092/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9172bf307dd49fa001387f4b514ea49d38f2092/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=a9172bf307dd49fa001387f4b514ea49d38f2092", "patch": "@@ -1819,6 +1819,10 @@ should_warn_for_implicit_fallthrough (gimple_stmt_iterator *gsi_p, tree label)\n {\n   gimple_stmt_iterator gsi = *gsi_p;\n \n+  /* Don't warn if the label is marked with a \"falls through\" comment.  */\n+  if (FALLTHROUGH_LABEL_P (label))\n+    return false;\n+\n   /* Don't warn for a non-case label followed by a statement:\n        case 0:\n \t foo ();\n@@ -1905,7 +1909,6 @@ warn_implicit_fallthrough_r (gimple_stmt_iterator *gsi_p, bool *handled_ops_p,\n \tif (gimple_code (next) == GIMPLE_LABEL\n \t    && gimple_has_location (next)\n \t    && (label = gimple_label_label (as_a <glabel *> (next)))\n-\t    && !FALLTHROUGH_LABEL_P (label)\n \t    && prev != NULL)\n \t  {\n \t    struct label_entry *l;"}, {"sha": "89e9df8d05ce9d023cc0cedc62b604d58f473f90", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9172bf307dd49fa001387f4b514ea49d38f2092/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9172bf307dd49fa001387f4b514ea49d38f2092/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a9172bf307dd49fa001387f4b514ea49d38f2092", "patch": "@@ -1,3 +1,7 @@\n+2016-10-07  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-c++-common/Wimplicit-fallthrough-22.c: New test.\n+\n 2016-10-07  Bernd Schmidt  <bschmidt@redhat.com>\n \n \tPR c++/69733"}, {"sha": "f7d86fa3755db36503db5bf16a685163a6acd620", "filename": "gcc/testsuite/c-c++-common/Wimplicit-fallthrough-22.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9172bf307dd49fa001387f4b514ea49d38f2092/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWimplicit-fallthrough-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9172bf307dd49fa001387f4b514ea49d38f2092/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWimplicit-fallthrough-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWimplicit-fallthrough-22.c?ref=a9172bf307dd49fa001387f4b514ea49d38f2092", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wimplicit-fallthrough\" } */\n+\n+void bar (int);\n+\n+void\n+foo (int i)\n+{\n+  switch (i)\n+    {\n+    case 1:\n+      bar (1);\n+      /* FALLTHROUGH */\n+    case 2:\n+      bar (2); /* { dg-warning \"statement may fall through\" } */\n+    case 3:\n+      bar (3); /* { dg-warning \"statement may fall through\" } */\n+    case 4:\n+      bar (4);\n+    default:\n+      break;\n+    }\n+}"}]}