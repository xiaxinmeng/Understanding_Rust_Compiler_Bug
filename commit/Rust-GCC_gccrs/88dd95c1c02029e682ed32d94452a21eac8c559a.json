{"sha": "88dd95c1c02029e682ed32d94452a21eac8c559a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhkZDk1YzFjMDIwMjllNjgyZWQzMmQ5NDQ1MmEyMWVhYzhjNTU5YQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-01T18:07:21Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-01T18:07:21Z"}, "message": "(yylex): When traditional, convert 0x80000000 to -0x80000000.\n\nFrom-SVN: r1738", "tree": {"sha": "a3ed2268a5d811533b08c365a683b8404d950a49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3ed2268a5d811533b08c365a683b8404d950a49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88dd95c1c02029e682ed32d94452a21eac8c559a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88dd95c1c02029e682ed32d94452a21eac8c559a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88dd95c1c02029e682ed32d94452a21eac8c559a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88dd95c1c02029e682ed32d94452a21eac8c559a/comments", "author": null, "committer": null, "parents": [{"sha": "aaf5be8b9371abd0e1a1190424967f92417bb62b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaf5be8b9371abd0e1a1190424967f92417bb62b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaf5be8b9371abd0e1a1190424967f92417bb62b"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "fdd20146f4f14bce27cc57dd1cdbeff39f2feddf", "filename": "gcc/c-lex.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88dd95c1c02029e682ed32d94452a21eac8c559a/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88dd95c1c02029e682ed32d94452a21eac8c559a/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=88dd95c1c02029e682ed32d94452a21eac8c559a", "patch": "@@ -1577,7 +1577,17 @@ yylex ()\n \t\t&& !warn)\n \t      pedwarn (\"integer constant out of range\");\n \n-\t    TREE_TYPE (yylval.ttype) = type;\n+\t    if (flag_traditional && !int_fits_type_p (yylval.ttype, type))\n+\t      /* The traditional constant 0x80000000 is signed\n+\t\t but doesn't fit in the range of int.\n+\t\t This will change it to -0x80000000, which does fit.  */\n+\t      {\n+\t\tTREE_TYPE (yylval.ttype) = unsigned_type (type);\n+\t\tyylval.ttype = convert (type, yylval.ttype);\n+\t      }\n+\t    else\n+\t      TREE_TYPE (yylval.ttype) = type;\n+\n \t    *p = 0;\n \t  }\n "}]}