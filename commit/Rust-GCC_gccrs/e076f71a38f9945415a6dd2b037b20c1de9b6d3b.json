{"sha": "e076f71a38f9945415a6dd2b037b20c1de9b6d3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA3NmY3MWEzOGY5OTQ1NDE1YTZkZDJiMDM3YjIwYzFkZTliNmQzYg==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2003-06-10T16:43:39Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2003-06-10T16:43:39Z"}, "message": "langhooks-def.h (LANG_HOOKS_DECL_OK_FOR_SIBCALL): New.\n\n2003-05-21  Andrew Haley  <aph@redhat.com>\n\n\t* langhooks-def.h (LANG_HOOKS_DECL_OK_FOR_SIBCALL): New.\n\t(LANG_HOOKS_DECLS): Add LANG_HOOKS_DECL_OK_FOR_SIBCALL.\n\t(lhd_decl_ok_for_sibcall): New.\n\t* langhooks.c (lhd_decl_ok_for_sibcall): New.\n\t* langhooks.h (lang_hooks_for_decls.ok_for_sibcall): New field.\n\t* calls.c (expand_call): Check lang_hook before generating a\n\tsibcall.\n\n2003-05-21  Andrew Haley  <aph@redhat.com>\n\n\t* lang.c (LANG_HOOKS_DECL_OK_FOR_SIBCALL): New.\n\t(java_decl_ok_for_sibcall): New.\n\nFrom-SVN: r67713", "tree": {"sha": "7ccc0967b6f9a3aa999e7661ed16ff9f1bebe3cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ccc0967b6f9a3aa999e7661ed16ff9f1bebe3cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e076f71a38f9945415a6dd2b037b20c1de9b6d3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e076f71a38f9945415a6dd2b037b20c1de9b6d3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e076f71a38f9945415a6dd2b037b20c1de9b6d3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e076f71a38f9945415a6dd2b037b20c1de9b6d3b/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e7e09ad8f27d4a239b2109f719e69753e4f3abc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7e09ad8f27d4a239b2109f719e69753e4f3abc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7e09ad8f27d4a239b2109f719e69753e4f3abc7"}], "stats": {"total": 58, "additions": 53, "deletions": 5}, "files": [{"sha": "5c68a993de49efd5035483fa693b5635d42702b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e076f71a38f9945415a6dd2b037b20c1de9b6d3b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e076f71a38f9945415a6dd2b037b20c1de9b6d3b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e076f71a38f9945415a6dd2b037b20c1de9b6d3b", "patch": "@@ -1,3 +1,13 @@\n+2003-06-10  Andrew Haley  <aph@redhat.com>\n+\n+\t* langhooks-def.h (LANG_HOOKS_DECL_OK_FOR_SIBCALL): New.\n+\t(LANG_HOOKS_DECLS): Add LANG_HOOKS_DECL_OK_FOR_SIBCALL.\n+\t(lhd_decl_ok_for_sibcall): New.\n+\t* langhooks.c (lhd_decl_ok_for_sibcall): New.\n+\t* langhooks.h (lang_hooks_for_decls.ok_for_sibcall): New field.\n+\t* calls.c (expand_call): Check lang_hook before generating a\n+\tsibcall.\n+\n 2003-06-10  DJ Delorie  <dj@redhat.com>\n \n \t* config/stormy16/stormy16.c (xstormy16_extra_constraint_p): Add Z,"}, {"sha": "a72bba6e33f6d93a0408d81f5a413c8a3c1cde5a", "filename": "gcc/calls.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e076f71a38f9945415a6dd2b037b20c1de9b6d3b/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e076f71a38f9945415a6dd2b037b20c1de9b6d3b/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=e076f71a38f9945415a6dd2b037b20c1de9b6d3b", "patch": "@@ -2508,10 +2508,11 @@ expand_call (exp, target, ignore)\n       || args_size.constant > current_function_args_size\n       /* If the callee pops its own arguments, then it must pop exactly\n \t the same number of arguments as the current function.  */\n-      || RETURN_POPS_ARGS (fndecl, funtype, args_size.constant)\n-\t != RETURN_POPS_ARGS (current_function_decl,\n-\t\t\t      TREE_TYPE (current_function_decl),\n-\t\t\t      current_function_args_size))\n+      || (RETURN_POPS_ARGS (fndecl, funtype, args_size.constant)\n+\t  != RETURN_POPS_ARGS (current_function_decl,\n+\t\t\t       TREE_TYPE (current_function_decl),\n+\t\t\t       current_function_args_size))\n+      || !(*lang_hooks.decls.ok_for_sibcall) (fndecl))\n     try_tail_call = 0;\n \n   if (try_tail_call || try_tail_recursion)"}, {"sha": "c9d623eaf9182011800663f2f1563026ae7e4586", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e076f71a38f9945415a6dd2b037b20c1de9b6d3b/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e076f71a38f9945415a6dd2b037b20c1de9b6d3b/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=e076f71a38f9945415a6dd2b037b20c1de9b6d3b", "patch": "@@ -1,3 +1,8 @@\n+2003-06-10  Andrew Haley  <aph@redhat.com>\n+\n+\t* lang.c (LANG_HOOKS_DECL_OK_FOR_SIBCALL): New.\n+\t(java_decl_ok_for_sibcall): New.\n+\n 2003-06-09  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* Make-lang.in (JAVA_OBJS, java/lang.o): Update."}, {"sha": "64283d4c10235f27859b2b92c74036c40e2c7daa", "filename": "gcc/java/lang.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e076f71a38f9945415a6dd2b037b20c1de9b6d3b/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e076f71a38f9945415a6dd2b037b20c1de9b6d3b/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=e076f71a38f9945415a6dd2b037b20c1de9b6d3b", "patch": "@@ -65,6 +65,7 @@ static int inline_init_test_initialization (void * *, void *);\n static bool java_can_use_bit_fields_p (void);\n static bool java_dump_tree (void *, tree);\n static void dump_compound_expr (dump_info_p, tree);\n+static bool java_decl_ok_for_sibcall (tree);\n \n #ifndef TARGET_OBJECT_SUFFIX\n # define TARGET_OBJECT_SUFFIX \".o\"\n@@ -251,6 +252,9 @@ struct language_function GTY(())\n #undef LANG_HOOKS_TREE_DUMP_DUMP_TREE_FN\n #define LANG_HOOKS_TREE_DUMP_DUMP_TREE_FN java_dump_tree\n \n+#undef LANG_HOOKS_DECL_OK_FOR_SIBCALL\n+#define LANG_HOOKS_DECL_OK_FOR_SIBCALL java_decl_ok_for_sibcall\n+\n /* Each front end provides its own.  */\n const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n \n@@ -1077,4 +1081,16 @@ java_dump_tree (void *dump_info, tree t)\n     }\n   return false;\n }\n+\n+/* Java calls can't, in general, be sibcalls because we need an\n+   accurate stack trace in order to guarantee correct operation of\n+   methods such as Class.forName(String) and\n+   SecurityManager.getClassContext().  */\n+\n+static bool\n+java_decl_ok_for_sibcall (tree decl)\n+{\n+  return decl != NULL && DECL_CONTEXT (decl) == current_class;\n+}\n+\n #include \"gt-java-lang.h\""}, {"sha": "8e6f8424c8afd19904c58629522d0b6a811e919d", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e076f71a38f9945415a6dd2b037b20c1de9b6d3b/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e076f71a38f9945415a6dd2b037b20c1de9b6d3b/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=e076f71a38f9945415a6dd2b037b20c1de9b6d3b", "patch": "@@ -64,6 +64,7 @@ extern bool lhd_can_use_bit_fields_p PARAMS ((void));\n extern bool lhd_warn_unused_global_decl PARAMS ((tree));\n extern void lhd_incomplete_type_error PARAMS ((tree, tree));\n extern tree lhd_type_promotes_to PARAMS ((tree));\n+extern bool lhd_decl_ok_for_sibcall PARAMS ((tree));\n extern tree lhd_expr_size PARAMS ((tree));\n extern size_t lhd_tree_size PARAMS ((enum tree_code));\n \n@@ -224,6 +225,7 @@ int lhd_tree_dump_type_quals\t\t\tPARAMS ((tree));\n #define LANG_HOOKS_GETDECLS\tgetdecls\n #define LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL lhd_warn_unused_global_decl\n #define LANG_HOOKS_WRITE_GLOBALS write_global_declarations\n+#define LANG_HOOKS_DECL_OK_FOR_SIBCALL\tlhd_decl_ok_for_sibcall\n \n #define LANG_HOOKS_DECLS { \\\n   LANG_HOOKS_PUSHLEVEL, \\\n@@ -234,7 +236,8 @@ int lhd_tree_dump_type_quals\t\t\tPARAMS ((tree));\n   LANG_HOOKS_PUSHDECL, \\\n   LANG_HOOKS_GETDECLS, \\\n   LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL, \\\n-  LANG_HOOKS_WRITE_GLOBALS \\\n+  LANG_HOOKS_WRITE_GLOBALS, \\\n+  LANG_HOOKS_DECL_OK_FOR_SIBCALL, \\\n }\n \n /* The whole thing.  The structure is defined in langhooks.h.  */"}, {"sha": "2bc91481eee5fa764769b628959947014abda780", "filename": "gcc/langhooks.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e076f71a38f9945415a6dd2b037b20c1de9b6d3b/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e076f71a38f9945415a6dd2b037b20c1de9b6d3b/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=e076f71a38f9945415a6dd2b037b20c1de9b6d3b", "patch": "@@ -469,6 +469,16 @@ lhd_tree_size (c)\n   return 0;\n }\n \n+/* Return true if decl, which is a function decl, may be called by a\n+   sibcall.  */\n+\n+bool\n+lhd_decl_ok_for_sibcall (decl)\n+     tree decl ATTRIBUTE_UNUSED;\n+{\n+  return true;\n+}\n+\n /* lang_hooks.decls.final_write_globals: perform final processing on\n    global variables.  */\n void"}, {"sha": "fb648bf51ae79d767c1d38fe93c2200df36f790a", "filename": "gcc/langhooks.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e076f71a38f9945415a6dd2b037b20c1de9b6d3b/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e076f71a38f9945415a6dd2b037b20c1de9b6d3b/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=e076f71a38f9945415a6dd2b037b20c1de9b6d3b", "patch": "@@ -180,6 +180,9 @@ struct lang_hooks_for_decls\n   /* Obtain a list of globals and do final output on them at end\n      of compilation */\n   void (*final_write_globals) PARAMS ((void));\n+\n+  /* True if this decl may be called via a sibcall.  */\n+  bool (*ok_for_sibcall) PARAMS ((tree));\n };\n \n /* Language-specific hooks.  See langhooks-def.h for defaults.  */"}]}