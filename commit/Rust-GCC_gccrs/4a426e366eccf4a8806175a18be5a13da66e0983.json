{"sha": "4a426e366eccf4a8806175a18be5a13da66e0983", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE0MjZlMzY2ZWNjZjRhODgwNjE3NWExOGJlNWExM2RhNjZlMDk4Mw==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2018-09-13T21:40:38Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-09-13T21:40:38Z"}, "message": "* c-typeck.c (digest_init): Shorten overlength strings.\n\nFrom-SVN: r264291", "tree": {"sha": "484d1567f4a69ec82a71b1ca6a6a14b40cfb24b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/484d1567f4a69ec82a71b1ca6a6a14b40cfb24b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a426e366eccf4a8806175a18be5a13da66e0983", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a426e366eccf4a8806175a18be5a13da66e0983", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a426e366eccf4a8806175a18be5a13da66e0983", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a426e366eccf4a8806175a18be5a13da66e0983/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "84cdf51de42f823b4ed0d65ef20ab0142607917b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84cdf51de42f823b4ed0d65ef20ab0142607917b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84cdf51de42f823b4ed0d65ef20ab0142607917b"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "c28fb1c0ebc7232345d2413baf36ca0f61ddff4b", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a426e366eccf4a8806175a18be5a13da66e0983/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a426e366eccf4a8806175a18be5a13da66e0983/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=4a426e366eccf4a8806175a18be5a13da66e0983", "patch": "@@ -1,3 +1,7 @@\n+2018-09-13  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* c-typeck.c (digest_init): Shorten overlength strings.\n+\n 2018-09-06  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* c-decl.c (finish_decl): Call complete_flexible_array_elts."}, {"sha": "a7e2538e1ac9cb68f6dfa4f418e3dbbe0d9736fd", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a426e366eccf4a8806175a18be5a13da66e0983/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a426e366eccf4a8806175a18be5a13da66e0983/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=4a426e366eccf4a8806175a18be5a13da66e0983", "patch": "@@ -7485,19 +7485,17 @@ digest_init (location_t init_loc, tree type, tree init, tree origtype,\n \t\t}\n \t    }\n \n-\t  TREE_TYPE (inside_init) = type;\n \t  if (TYPE_DOMAIN (type) != NULL_TREE\n \t      && TYPE_SIZE (type) != NULL_TREE\n \t      && TREE_CODE (TYPE_SIZE (type)) == INTEGER_CST)\n \t    {\n \t      unsigned HOST_WIDE_INT len = TREE_STRING_LENGTH (inside_init);\n+\t      unsigned unit = TYPE_PRECISION (typ1) / BITS_PER_UNIT;\n \n \t      /* Subtract the size of a single (possibly wide) character\n \t\t because it's ok to ignore the terminating null char\n \t\t that is counted in the length of the constant.  */\n-\t      if (compare_tree_int (TYPE_SIZE_UNIT (type),\n-\t\t\t\t    (len - (TYPE_PRECISION (typ1)\n-\t\t\t\t\t    / BITS_PER_UNIT))) < 0)\n+\t      if (compare_tree_int (TYPE_SIZE_UNIT (type), len - unit) < 0)\n \t\tpedwarn_init (init_loc, 0,\n \t\t\t      (\"initializer-string for array of chars \"\n \t\t\t       \"is too long\"));\n@@ -7506,8 +7504,17 @@ digest_init (location_t init_loc, tree type, tree init, tree origtype,\n \t\twarning_at (init_loc, OPT_Wc___compat,\n \t\t\t    (\"initializer-string for array chars \"\n \t\t\t     \"is too long for C++\"));\n+\t      if (compare_tree_int (TYPE_SIZE_UNIT (type), len) < 0)\n+\t\t{\n+\t\t  unsigned HOST_WIDE_INT size\n+\t\t    = tree_to_uhwi (TYPE_SIZE_UNIT (type));\n+\t\t  const char *p = TREE_STRING_POINTER (inside_init);\n+\n+\t\t  inside_init = build_string (size, p);\n+\t\t}\n \t    }\n \n+\t  TREE_TYPE (inside_init) = type;\n \t  return inside_init;\n \t}\n       else if (INTEGRAL_TYPE_P (typ1))"}]}