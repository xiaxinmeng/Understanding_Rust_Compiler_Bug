{"sha": "d1ca2cfe44542bf78b9386903cd6d86fe5cf5f4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFjYTJjZmU0NDU0MmJmNzhiOTM4NjkwM2NkNmQ4NmZlNWNmNWY0YQ==", "commit": {"author": {"name": "Thomas Fitzsimmons", "email": "fitzsim@redhat.com", "date": "2005-05-04T18:25:37Z"}, "committer": {"name": "Thomas Fitzsimmons", "email": "fitzsim@gcc.gnu.org", "date": "2005-05-04T18:25:37Z"}, "message": "ImageCapabilities.java: Document.\n\n2005-05-04  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* java/awt/ImageCapabilities.java: Document.\n\n\t* java/awt/image/VolatileImage.java: Unindent copyright header.\n\nFrom-SVN: r99224", "tree": {"sha": "3a78fd006f3157c361e604e210d53b790a16a899", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a78fd006f3157c361e604e210d53b790a16a899"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1ca2cfe44542bf78b9386903cd6d86fe5cf5f4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ca2cfe44542bf78b9386903cd6d86fe5cf5f4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1ca2cfe44542bf78b9386903cd6d86fe5cf5f4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ca2cfe44542bf78b9386903cd6d86fe5cf5f4a/comments", "author": null, "committer": null, "parents": [{"sha": "1351ec824318822e14c89459a01806a56e796a46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1351ec824318822e14c89459a01806a56e796a46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1351ec824318822e14c89459a01806a56e796a46"}], "stats": {"total": 123, "additions": 83, "deletions": 40}, "files": [{"sha": "8d9b5a81e01cc8b0bd9edde450150b54f72594d3", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ca2cfe44542bf78b9386903cd6d86fe5cf5f4a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ca2cfe44542bf78b9386903cd6d86fe5cf5f4a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d1ca2cfe44542bf78b9386903cd6d86fe5cf5f4a", "patch": "@@ -1,3 +1,9 @@\n+2005-05-04  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* java/awt/ImageCapabilities.java: Document.\n+\n+\t* java/awt/image/VolatileImage.java: Unindent copyright header.\n+\n 2005-05-03  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \t* java/awt/image/VolatileImage.java: Document."}, {"sha": "df802c62b317d929bd40b005b1b238eb72e191b3", "filename": "libjava/java/awt/ImageCapabilities.java", "status": "modified", "additions": 42, "deletions": 5, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ca2cfe44542bf78b9386903cd6d86fe5cf5f4a/libjava%2Fjava%2Fawt%2FImageCapabilities.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ca2cfe44542bf78b9386903cd6d86fe5cf5f4a/libjava%2Fjava%2Fawt%2FImageCapabilities.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FImageCapabilities.java?ref=d1ca2cfe44542bf78b9386903cd6d86fe5cf5f4a", "patch": "@@ -1,5 +1,5 @@\n-/* ImageCapabilities.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+/* ImageCapabilities.java -- the capabilities of an image buffer\n+   Copyright (C) 2002, 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,23 +39,60 @@\n package java.awt;\n \n /**\n- * STUBS ONLY\n+ * This class represents the capabilities of an image buffer.  An\n+ * image buffer may be backed by accelerated graphics resources.\n+ * Those resources may or may not be volatile.  This class is used to\n+ * describe these image buffer characteristics.\n  */\n public class ImageCapabilities implements Cloneable\n {\n+  /**\n+   * Whether or not this the image buffer uses accelerated graphics\n+   * resources.\n+   */\n   private final boolean accelerated;\n+\n+  /**\n+   * Create a new image capability descriptor.\n+   *\n+   * @param accelerated true if the image buffer uses accelerated\n+   * graphics resources\n+   */\n   public ImageCapabilities(boolean accelerated)\n   {\n     this.accelerated = accelerated;\n   }\n+\n+  /**\n+   * Returns whether or not the image buffer uses accelerated graphics\n+   * resources.\n+   *\n+   * @return true if the image buffer uses accelerated graphics\n+   * resources; false otherwise\n+   */\n   public boolean isAccelerated()\n   {\n     return accelerated;\n   }\n+\n+  /**\n+   * Returns whether or not the image buffer's resources are volatile,\n+   * meaning that they can be reclaimed by the graphics system at any\n+   * time.\n+   *\n+   * @return true if the image buffer's resources are volatile; false\n+   * otherwise\n+   */\n   public boolean isTrueVolatile()\n   {\n     return true;\n   }\n+\n+  /**\n+   * Clone this image capability descriptor.\n+   *\n+   * @return a clone of this image capability descriptor\n+   */\n   public Object clone()\n   {\n     try\n@@ -64,7 +101,7 @@ public Object clone()\n       }\n     catch (CloneNotSupportedException e)\n       {\n-        throw (Error) new InternalError().initCause(e); // Impossible\n+        throw (Error) new InternalError().initCause(e);\n       }\n   }\n-} // class ImageCapabilities\n+}"}, {"sha": "952f9f6526ade114931527992216e82fd7bbe34c", "filename": "libjava/java/awt/image/VolatileImage.java", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ca2cfe44542bf78b9386903cd6d86fe5cf5f4a/libjava%2Fjava%2Fawt%2Fimage%2FVolatileImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ca2cfe44542bf78b9386903cd6d86fe5cf5f4a/libjava%2Fjava%2Fawt%2Fimage%2FVolatileImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FVolatileImage.java?ref=d1ca2cfe44542bf78b9386903cd6d86fe5cf5f4a", "patch": "@@ -1,39 +1,39 @@\n /* VolatileImage.java -- a hardware-accelerated image buffer\n    Copyright (C) 2002, 2005 Free Software Foundation, Inc.\n \n-   This file is part of GNU Classpath.\n-\n-   GNU Classpath is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 2, or (at your option)\n-   any later version.\n-\n-   GNU Classpath is distributed in the hope that it will be useful, but\n-   WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-   General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GNU Classpath; see the file COPYING.  If not, write to the\n-   Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-   02111-1307 USA.\n-\n-   Linking this library statically or dynamically with other modules is\n-   making a combined work based on this library.  Thus, the terms and\n-   conditions of the GNU General Public License cover the whole\n-   combination.\n-\n-   As a special exception, the copyright holders of this library give you\n-   permission to link this library with independent modules to produce an\n-   executable, regardless of the license terms of these independent\n-   modules, and to copy and distribute the resulting executable under\n-   terms of your choice, provided that you also meet, for each linked\n-   independent module, the terms and conditions of the license of that\n-   module.  An independent module is a module which is not derived from\n-   or based on this library.  If you modify this library, you may extend\n-   this exception to your version of the library, but you are not\n-   obligated to do so.  If you do not wish to do so, delete this\n-   exception statement from your version. */\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n \n \n package java.awt.image;\n@@ -152,7 +152,7 @@ public VolatileImage()\n    * VolatileImages are typically optimized for writing.\n    *\n    * @return an ImageProducer for a static BufferedImage snapshot of\n-   * this image buffer.\n+   * this image buffer\n    */\n   public ImageProducer getSource()\n   {\n@@ -245,7 +245,7 @@ public Graphics getGraphics()\n    * Returns the transparency type of this image.\n    *\n    * @return Transparency.OPAQUE, Transparency.BITMASK or\n-   * Transparency.TRANSLUCENT.\n+   * Transparency.TRANSLUCENT\n    */\n   public int getTransparency()\n   {"}]}