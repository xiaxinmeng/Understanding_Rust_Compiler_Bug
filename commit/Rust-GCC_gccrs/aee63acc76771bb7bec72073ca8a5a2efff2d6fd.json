{"sha": "aee63acc76771bb7bec72073ca8a5a2efff2d6fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVlNjNhY2M3Njc3MWJiN2JlYzcyMDczY2E4YTVhMmVmZmYyZDZmZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-05-02T11:27:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-05-02T11:27:15Z"}, "message": "re PR tree-optimization/80591 (AArch64 kernel miscompilation starting with r246809)\n\n2017-05-02  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/80591\n\tRevert\n\t2017-04-10  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-structalias.c (find_func_aliases): Properly handle\n\tasm inputs.\n\n\t* gcc.dg/torture/pr80591.c: New testcase.\n\nFrom-SVN: r247488", "tree": {"sha": "48333d3a390362fcf3979f55d304a21029e3845c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48333d3a390362fcf3979f55d304a21029e3845c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aee63acc76771bb7bec72073ca8a5a2efff2d6fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aee63acc76771bb7bec72073ca8a5a2efff2d6fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aee63acc76771bb7bec72073ca8a5a2efff2d6fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aee63acc76771bb7bec72073ca8a5a2efff2d6fd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e7d70c6c3bccb2a1abed2683d436423cc5484704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7d70c6c3bccb2a1abed2683d436423cc5484704", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7d70c6c3bccb2a1abed2683d436423cc5484704"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "e411cc310be738a28ac7591aa329e761e5cf3043", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee63acc76771bb7bec72073ca8a5a2efff2d6fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee63acc76771bb7bec72073ca8a5a2efff2d6fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aee63acc76771bb7bec72073ca8a5a2efff2d6fd", "patch": "@@ -1,3 +1,12 @@\n+2017-05-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/80591\n+\tRevert\n+\t2017-04-10  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-structalias.c (find_func_aliases): Properly handle\n+\tasm inputs.\n+\n 2017-05-02  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/80549"}, {"sha": "84f2c309f4cc11dcf383a68acbdbdc1b27732d81", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee63acc76771bb7bec72073ca8a5a2efff2d6fd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee63acc76771bb7bec72073ca8a5a2efff2d6fd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aee63acc76771bb7bec72073ca8a5a2efff2d6fd", "patch": "@@ -1,3 +1,8 @@\n+2017-05-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/80591\n+\t* gcc.dg/torture/pr80591.c: New testcase.\n+\n 2017-05-02  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/80549"}, {"sha": "5958474bdf25856726e2a3c0b3d32fe61c5dc407", "filename": "gcc/testsuite/gcc.dg/torture/pr80591.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee63acc76771bb7bec72073ca8a5a2efff2d6fd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr80591.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee63acc76771bb7bec72073ca8a5a2efff2d6fd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr80591.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr80591.c?ref=aee63acc76771bb7bec72073ca8a5a2efff2d6fd", "patch": "@@ -0,0 +1,20 @@\n+/* PR tree-optimization/80591 */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } \"-flto\" } */\n+/* { dg-additional-options \"-fdump-tree-optimized\" } */\n+\n+static inline __attribute__((always_inline)) int *\n+foo (void)\n+{\n+  __UINTPTR_TYPE__ sp;\n+  asm (\"\" : \"=r\" (sp));\n+  return (int *) sp;\n+}\n+\n+void\n+bar (void)\n+{\n+  foo ()[0] += 26;\n+}\n+\n+/* { dg-final { scan-tree-dump \"\\\\+ 26;\" \"optimized\" } } */"}, {"sha": "2394edf38268d0fa2de95074dfba3eb40b5000f9", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee63acc76771bb7bec72073ca8a5a2efff2d6fd/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee63acc76771bb7bec72073ca8a5a2efff2d6fd/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=aee63acc76771bb7bec72073ca8a5a2efff2d6fd", "patch": "@@ -4978,14 +4978,14 @@ find_func_aliases (struct function *fn, gimple *origt)\n \t    make_escape_constraint (build_fold_addr_expr (op));\n \n \t  /* The asm may read global memory, so outputs may point to\n-\t     any global or escaped memory.  */\n+\t     any global memory.  */\n \t  if (op)\n \t    {\n \t      auto_vec<ce_s, 2> lhsc;\n \t      struct constraint_expr rhsc, *lhsp;\n \t      unsigned j;\n \t      get_constraint_for (op, &lhsc);\n-\t      rhsc.var = escaped_id;\n+\t      rhsc.var = nonlocal_id;\n \t      rhsc.offset = 0;\n \t      rhsc.type = SCALAR;\n \t      FOR_EACH_VEC_ELT (lhsc, j, lhsp)"}]}