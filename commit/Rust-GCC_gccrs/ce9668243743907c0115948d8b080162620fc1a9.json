{"sha": "ce9668243743907c0115948d8b080162620fc1a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U5NjY4MjQzNzQzOTA3YzAxMTU5NDhkOGIwODAxNjI2MjBmYzFhOQ==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2013-04-29T10:51:46Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2013-04-29T10:51:46Z"}, "message": "[AArch64] Map fcvt intrinsics to builtin name directly.\n\ngcc/\n\t* config/aarch64/aarch64-builtins.c\n\t(aarch64_builtin_vectorized_function): Use new names for\n\tfcvt builtins.\n\t* config/aarch64/aarch64-simd-builtins.def (fcvtzs): Split as...\n\t(lbtruncv2sf, lbtruncv4sf, lbtruncv2df): ...This.\n\t(fcvtzu): Split as...\n\t(lbtruncuv2sf, lbtruncuv4sf, lbtruncuv2df): ...This.\n\t(fcvtas): Split as...\n\t(lroundv2sf, lroundv4sf, lroundv2df, lroundsf, lrounddf): ...This.\n\t(fcvtau): Split as...\n\t(lrounduv2sf, lrounduv4sf, lrounduv2df, lroundusf, lroundudf): ...This.\n\t(fcvtps): Split as...\n\t(lceilv2sf, lceilv4sf, lceilv2df): ...This.\n\t(fcvtpu): Split as...\n\t(lceiluv2sf, lceiluv4sf, lceiluv2df, lceilusf, lceiludf): ...This.\n\t(fcvtms): Split as...\n\t(lfloorv2sf, lfloorv4sf, lfloorv2df): ...This.\n\t(fcvtmu): Split as...\n\t(lflooruv2sf, lflooruv4sf, lflooruv2df, lfloorusf, lfloorudf): ...This.\n\t(lfrintnv2sf, lfrintnv4sf, lfrintnv2df, lfrintnsf, lfrintndf): New.\n\t(lfrintnuv2sf, lfrintnuv4sf, lfrintnuv2df): Likewise.\n\t(lfrintnusf, lfrintnudf): Likewise.\n\t* config/aarch64/aarch64-simd.md\n\t(l<fcvt_pattern><su_optab><fcvt_target><VDQF:mode>2): Convert to\n\tdefine_insn.\n\t(aarch64_fcvt<frint_suffix><su><mode>): Remove.\n\t* config/aarch64/iterators.md (FCVT): Include UNSPEC_FRINTN.\n\t(fcvt_pattern): Likewise.\n\nFrom-SVN: r198398", "tree": {"sha": "74a80df816bbb8772b95160f65f1897606216fb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74a80df816bbb8772b95160f65f1897606216fb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce9668243743907c0115948d8b080162620fc1a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce9668243743907c0115948d8b080162620fc1a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce9668243743907c0115948d8b080162620fc1a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce9668243743907c0115948d8b080162620fc1a9/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b9de24febe601ae0ad27642a1d8dae84bf58065c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9de24febe601ae0ad27642a1d8dae84bf58065c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9de24febe601ae0ad27642a1d8dae84bf58065c"}], "stats": {"total": 140, "additions": 116, "deletions": 24}, "files": [{"sha": "d095797699ac9e76c37bf359d52d00d0a734841c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9668243743907c0115948d8b080162620fc1a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9668243743907c0115948d8b080162620fc1a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce9668243743907c0115948d8b080162620fc1a9", "patch": "@@ -1,3 +1,34 @@\n+2013-04-29  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/aarch64/aarch64-builtins.c\n+\t(aarch64_builtin_vectorized_function): Use new names for\n+\tfcvt builtins.\n+\t* config/aarch64/aarch64-simd-builtins.def (fcvtzs): Split as...\n+\t(lbtruncv2sf, lbtruncv4sf, lbtruncv2df): ...This.\n+\t(fcvtzu): Split as...\n+\t(lbtruncuv2sf, lbtruncuv4sf, lbtruncuv2df): ...This.\n+\t(fcvtas): Split as...\n+\t(lroundv2sf, lroundv4sf, lroundv2df, lroundsf, lrounddf): ...This.\n+\t(fcvtau): Split as...\n+\t(lrounduv2sf, lrounduv4sf, lrounduv2df, lroundusf, lroundudf): ...This.\n+\t(fcvtps): Split as...\n+\t(lceilv2sf, lceilv4sf, lceilv2df): ...This.\n+\t(fcvtpu): Split as...\n+\t(lceiluv2sf, lceiluv4sf, lceiluv2df, lceilusf, lceiludf): ...This.\n+\t(fcvtms): Split as...\n+\t(lfloorv2sf, lfloorv4sf, lfloorv2df): ...This.\n+\t(fcvtmu): Split as...\n+\t(lflooruv2sf, lflooruv4sf, lflooruv2df, lfloorusf, lfloorudf): ...This.\n+\t(lfrintnv2sf, lfrintnv4sf, lfrintnv2df, lfrintnsf, lfrintndf): New.\n+\t(lfrintnuv2sf, lfrintnuv4sf, lfrintnuv2df): Likewise.\n+\t(lfrintnusf, lfrintnudf): Likewise.\n+\t* config/aarch64/aarch64-simd.md\n+\t(l<fcvt_pattern><su_optab><fcvt_target><VDQF:mode>2): Convert to\n+\tdefine_insn.\n+\t(aarch64_fcvt<frint_suffix><su><mode>): Remove.\n+\t* config/aarch64/iterators.md (FCVT): Include UNSPEC_FRINTN.\n+\t(fcvt_pattern): Likewise.\n+\n 2013-04-29  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64-simd.md"}, {"sha": "f540568b4230877f9a260dbafa67b00f2e90a84d", "filename": "gcc/config/aarch64/aarch64-builtins.c", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9668243743907c0115948d8b080162620fc1a9/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9668243743907c0115948d8b080162620fc1a9/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c?ref=ce9668243743907c0115948d8b080162620fc1a9", "patch": "@@ -1245,9 +1245,33 @@ aarch64_builtin_vectorized_function (tree fndecl, tree type_out, tree type_in)\n   (out_mode == N##Imode && out_n == C \\\n    && in_mode == N##Fmode && in_n == C)\n \tcase BUILT_IN_LFLOOR:\n-\t  return AARCH64_FIND_FRINT_VARIANT (fcvtms);\n+\t  {\n+\t    tree new_tree = NULL_TREE;\n+\t    if (AARCH64_CHECK_BUILTIN_MODE (2, D))\n+\t      new_tree =\n+\t\taarch64_builtin_decls[AARCH64_SIMD_BUILTIN_lfloorv2dfv2di];\n+\t    else if (AARCH64_CHECK_BUILTIN_MODE (4, S))\n+\t      new_tree =\n+\t\taarch64_builtin_decls[AARCH64_SIMD_BUILTIN_lfloorv4sfv4si];\n+\t    else if (AARCH64_CHECK_BUILTIN_MODE (2, S))\n+\t      new_tree =\n+\t\taarch64_builtin_decls[AARCH64_SIMD_BUILTIN_lfloorv2sfv2si];\n+\t    return new_tree;\n+\t  }\n \tcase BUILT_IN_LCEIL:\n-\t  return AARCH64_FIND_FRINT_VARIANT (fcvtps);\n+\t  {\n+\t    tree new_tree = NULL_TREE;\n+\t    if (AARCH64_CHECK_BUILTIN_MODE (2, D))\n+\t      new_tree =\n+\t\taarch64_builtin_decls[AARCH64_SIMD_BUILTIN_lceilv2dfv2di];\n+\t    else if (AARCH64_CHECK_BUILTIN_MODE (4, S))\n+\t      new_tree =\n+\t\taarch64_builtin_decls[AARCH64_SIMD_BUILTIN_lceilv4sfv4si];\n+\t    else if (AARCH64_CHECK_BUILTIN_MODE (2, S))\n+\t      new_tree =\n+\t\taarch64_builtin_decls[AARCH64_SIMD_BUILTIN_lceilv2sfv2si];\n+\t    return new_tree;\n+\t  }\n \tdefault:\n \t  return NULL_TREE;\n       }"}, {"sha": "745b36a5284810ec9bb5644ba448db531485cce9", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 53, "deletions": 9, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9668243743907c0115948d8b080162620fc1a9/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9668243743907c0115948d8b080162620fc1a9/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=ce9668243743907c0115948d8b080162620fc1a9", "patch": "@@ -256,15 +256,59 @@\n   BUILTIN_VDQF (UNOP, round, 2)\n   BUILTIN_VDQF (UNOP, frintn, 2)\n \n-  /* Implemented by aarch64_fcvt<frint_suffix><su><mode>.  */\n-  BUILTIN_VDQF (UNOP, fcvtzs, 0)\n-  BUILTIN_VDQF (UNOP, fcvtzu, 0)\n-  BUILTIN_VDQF (UNOP, fcvtas, 0)\n-  BUILTIN_VDQF (UNOP, fcvtau, 0)\n-  BUILTIN_VDQF (UNOP, fcvtps, 0)\n-  BUILTIN_VDQF (UNOP, fcvtpu, 0)\n-  BUILTIN_VDQF (UNOP, fcvtms, 0)\n-  BUILTIN_VDQF (UNOP, fcvtmu, 0)\n+  /* Implemented by l<fcvt_pattern><su_optab><VQDF:mode><vcvt_target>2.  */\n+  VAR1 (UNOP, lbtruncv2sf, 2, v2si)\n+  VAR1 (UNOP, lbtruncv4sf, 2, v4si)\n+  VAR1 (UNOP, lbtruncv2df, 2, v2di)\n+\n+  VAR1 (UNOP, lbtruncuv2sf, 2, v2si)\n+  VAR1 (UNOP, lbtruncuv4sf, 2, v4si)\n+  VAR1 (UNOP, lbtruncuv2df, 2, v2di)\n+\n+  VAR1 (UNOP, lroundv2sf, 2, v2si)\n+  VAR1 (UNOP, lroundv4sf, 2, v4si)\n+  VAR1 (UNOP, lroundv2df, 2, v2di)\n+  /* Implemented by l<fcvt_pattern><su_optab><GPF:mode><GPI:mode>2.  */\n+  VAR1 (UNOP, lroundsf, 2, si)\n+  VAR1 (UNOP, lrounddf, 2, di)\n+\n+  VAR1 (UNOP, lrounduv2sf, 2, v2si)\n+  VAR1 (UNOP, lrounduv4sf, 2, v4si)\n+  VAR1 (UNOP, lrounduv2df, 2, v2di)\n+  VAR1 (UNOP, lroundusf, 2, si)\n+  VAR1 (UNOP, lroundudf, 2, di)\n+\n+  VAR1 (UNOP, lceilv2sf, 2, v2si)\n+  VAR1 (UNOP, lceilv4sf, 2, v4si)\n+  VAR1 (UNOP, lceilv2df, 2, v2di)\n+\n+  VAR1 (UNOP, lceiluv2sf, 2, v2si)\n+  VAR1 (UNOP, lceiluv4sf, 2, v4si)\n+  VAR1 (UNOP, lceiluv2df, 2, v2di)\n+  VAR1 (UNOP, lceilusf, 2, si)\n+  VAR1 (UNOP, lceiludf, 2, di)\n+\n+  VAR1 (UNOP, lfloorv2sf, 2, v2si)\n+  VAR1 (UNOP, lfloorv4sf, 2, v4si)\n+  VAR1 (UNOP, lfloorv2df, 2, v2di)\n+\n+  VAR1 (UNOP, lflooruv2sf, 2, v2si)\n+  VAR1 (UNOP, lflooruv4sf, 2, v4si)\n+  VAR1 (UNOP, lflooruv2df, 2, v2di)\n+  VAR1 (UNOP, lfloorusf, 2, si)\n+  VAR1 (UNOP, lfloorudf, 2, di)\n+\n+  VAR1 (UNOP, lfrintnv2sf, 2, v2si)\n+  VAR1 (UNOP, lfrintnv4sf, 2, v4si)\n+  VAR1 (UNOP, lfrintnv2df, 2, v2di)\n+  VAR1 (UNOP, lfrintnsf, 2, si)\n+  VAR1 (UNOP, lfrintndf, 2, di)\n+\n+  VAR1 (UNOP, lfrintnuv2sf, 2, v2si)\n+  VAR1 (UNOP, lfrintnuv4sf, 2, v4si)\n+  VAR1 (UNOP, lfrintnuv2df, 2, v2di)\n+  VAR1 (UNOP, lfrintnusf, 2, si)\n+  VAR1 (UNOP, lfrintnudf, 2, di)\n \n   /* Implemented by\n      aarch64_<PERMUTE:perm_insn><PERMUTE:perm_hilo><mode>.  */"}, {"sha": "4c678ba1172798200506987e5fe9eff6e779c7fb", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9668243743907c0115948d8b080162620fc1a9/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9668243743907c0115948d8b080162620fc1a9/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=ce9668243743907c0115948d8b080162620fc1a9", "patch": "@@ -1244,7 +1244,9 @@\n    (set_attr \"simd_mode\" \"<MODE>\")]\n )\n \n-(define_insn \"aarch64_fcvt<frint_suffix><su><mode>\"\n+;; Vector versions of the fcvt standard patterns.\n+;; Expands to lbtrunc, lround, lceil, lfloor\n+(define_insn \"l<fcvt_pattern><su_optab><VDQF:mode><fcvt_target>2\"\n   [(set (match_operand:<FCVT_TARGET> 0 \"register_operand\" \"=w\")\n \t(FIXUORS:<FCVT_TARGET> (unspec:<FCVT_TARGET>\n \t\t\t       [(match_operand:VDQF 1 \"register_operand\" \"w\")]\n@@ -1255,16 +1257,6 @@\n    (set_attr \"simd_mode\" \"<MODE>\")]\n )\n \n-;; Vector versions of the fcvt standard patterns.\n-;; Expands to lbtrunc, lround, lceil, lfloor\n-(define_expand \"l<fcvt_pattern><su_optab><VDQF:mode><fcvt_target>2\"\n-  [(set (match_operand:<FCVT_TARGET> 0 \"register_operand\")\n-\t(FIXUORS:<FCVT_TARGET> (unspec:<FCVT_TARGET>\n-\t\t\t       [(match_operand:VDQF 1 \"register_operand\")]\n-\t\t\t       FCVT)))]\n-  \"TARGET_SIMD\"\n-  {})\n-\n (define_insn \"aarch64_vmls<mode>\"\n   [(set (match_operand:VDQF 0 \"register_operand\" \"=w\")\n        (minus:VDQF (match_operand:VDQF 1 \"register_operand\" \"0\")"}, {"sha": "5c769f8417c9e8939216abe4b3e45f10c4b8cade", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9668243743907c0115948d8b080162620fc1a9/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9668243743907c0115948d8b080162620fc1a9/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=ce9668243743907c0115948d8b080162620fc1a9", "patch": "@@ -696,7 +696,7 @@\n \t\t\t     UNSPEC_FRINTA])\n \n (define_int_iterator FCVT [UNSPEC_FRINTZ UNSPEC_FRINTP UNSPEC_FRINTM\n-\t\t\t    UNSPEC_FRINTA])\n+\t\t\t    UNSPEC_FRINTA UNSPEC_FRINTN])\n \n (define_int_iterator FRECP [UNSPEC_FRECPE UNSPEC_FRECPX])\n \n@@ -798,7 +798,8 @@\n \t\t\t       (UNSPEC_FRINTN \"n\")])\n \n (define_int_attr fcvt_pattern [(UNSPEC_FRINTZ \"btrunc\") (UNSPEC_FRINTA \"round\")\n-\t\t\t       (UNSPEC_FRINTP \"ceil\") (UNSPEC_FRINTM \"floor\")])\n+\t\t\t       (UNSPEC_FRINTP \"ceil\") (UNSPEC_FRINTM \"floor\")\n+\t\t\t       (UNSPEC_FRINTN \"frintn\")])\n \n (define_int_attr perm_insn [(UNSPEC_ZIP1 \"zip\") (UNSPEC_ZIP2 \"zip\")\n \t\t\t    (UNSPEC_TRN1 \"trn\") (UNSPEC_TRN2 \"trn\")"}]}