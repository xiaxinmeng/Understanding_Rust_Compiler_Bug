{"sha": "8f1e28e0ff4a93f1416f62c6f82ed62174a02e7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGYxZTI4ZTBmZjRhOTNmMTQxNmY2MmM2ZjgyZWQ2MjE3NGEwMmU3ZA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-09-07T09:19:13Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-09-07T09:19:13Z"}, "message": "re PR inline-asm/67448 (compiler crash#inline assembly#rvalue operand with constraint \"m\")\n\n\tPR inline-asm/67448\n\t* gimplify.c (gimplify_asm_expr): Don't allow MODIFY_EXPR as\n\ta memory input.\n\n\t* gcc.dg/asm-10.c: New test.\n\nFrom-SVN: r227517", "tree": {"sha": "a0d4d055dc71292901ea556ac5ab23acc66e16e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0d4d055dc71292901ea556ac5ab23acc66e16e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f1e28e0ff4a93f1416f62c6f82ed62174a02e7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f1e28e0ff4a93f1416f62c6f82ed62174a02e7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f1e28e0ff4a93f1416f62c6f82ed62174a02e7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f1e28e0ff4a93f1416f62c6f82ed62174a02e7d/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "85bc8baac9a16ba74116be18b577b840fcaa499d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85bc8baac9a16ba74116be18b577b840fcaa499d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85bc8baac9a16ba74116be18b577b840fcaa499d"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "d5f9f785393f3c6f29cda10008d15f12942273e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f1e28e0ff4a93f1416f62c6f82ed62174a02e7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f1e28e0ff4a93f1416f62c6f82ed62174a02e7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f1e28e0ff4a93f1416f62c6f82ed62174a02e7d", "patch": "@@ -1,3 +1,9 @@\n+2015-09-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR inline-asm/67448\n+\t* gimplify.c (gimplify_asm_expr): Don't allow MODIFY_EXPR as\n+\ta memory input.\n+\n 2015-09-07  Marek Polacek  <polacek@redhat.com>\n \n \t* system.h (INTTYPE_MINIMUM): Rewrite to avoid shift warning."}, {"sha": "b7a918baa5665f8ba4f8c07c0ed430428f254046", "filename": "gcc/gimplify.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f1e28e0ff4a93f1416f62c6f82ed62174a02e7d/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f1e28e0ff4a93f1416f62c6f82ed62174a02e7d/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=8f1e28e0ff4a93f1416f62c6f82ed62174a02e7d", "patch": "@@ -5210,7 +5210,8 @@ gimplify_asm_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p)\n \t  if (TREE_CODE (inputv) == PREDECREMENT_EXPR\n \t      || TREE_CODE (inputv) == PREINCREMENT_EXPR\n \t      || TREE_CODE (inputv) == POSTDECREMENT_EXPR\n-\t      || TREE_CODE (inputv) == POSTINCREMENT_EXPR)\n+\t      || TREE_CODE (inputv) == POSTINCREMENT_EXPR\n+\t      || TREE_CODE (inputv) == MODIFY_EXPR)\n \t    TREE_VALUE (link) = error_mark_node;\n \t  tret = gimplify_expr (&TREE_VALUE (link), pre_p, post_p,\n \t\t\t\tis_gimple_lvalue, fb_lvalue | fb_mayfail);"}, {"sha": "5fece2fc090c43a1de55c030352189e5a5960949", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f1e28e0ff4a93f1416f62c6f82ed62174a02e7d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f1e28e0ff4a93f1416f62c6f82ed62174a02e7d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8f1e28e0ff4a93f1416f62c6f82ed62174a02e7d", "patch": "@@ -1,3 +1,8 @@\n+2015-09-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR inline-asm/67448\n+\t* gcc.dg/asm-10.c: New test.\n+\n 2015-09-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/67452"}, {"sha": "e6c03c62cabf275999c78f82cc8882752191c22b", "filename": "gcc/testsuite/gcc.dg/asm-10.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f1e28e0ff4a93f1416f62c6f82ed62174a02e7d/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f1e28e0ff4a93f1416f62c6f82ed62174a02e7d/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-10.c?ref=8f1e28e0ff4a93f1416f62c6f82ed62174a02e7d", "patch": "@@ -0,0 +1,12 @@\n+/* PR inline-asm/67448 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+void\n+f (int i)\n+{\n+  asm (\"\" : : \"m\"(i += 1)); /* { dg-error \"not directly addressable\" } */\n+  asm (\"\" : : \"m\"(i++)); /* { dg-error \"not directly addressable\" } */\n+  asm (\"\" : : \"m\"(++i)); /* { dg-error \"not directly addressable\" } */\n+  asm (\"\" : : \"m\"(i = 0)); /* { dg-error \"not directly addressable\" } */\n+}"}]}