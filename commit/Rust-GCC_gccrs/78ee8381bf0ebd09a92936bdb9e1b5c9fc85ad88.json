{"sha": "78ee8381bf0ebd09a92936bdb9e1b5c9fc85ad88", "node_id": "C_kwDOANBUbNoAKDc4ZWU4MzgxYmYwZWJkMDlhOTI5MzZiZGI5ZTFiNWM5ZmM4NWFkODg", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-12-28T16:39:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-12-28T16:39:23Z"}, "message": "optabs: Fix up checking for CALLs in newly added code by double-word divmod [PR103838]\n\nThese two spots are meant to punt if the newly added code contains\nany CALL_INSNs, because in that case having a large sequence of insns\nthat also calls something is undesirable, better have one call that\nis optimized in itself well.\nThe functions do last = get_last_insn (); before emitting any insns\n(and expand_binop as the ultimate caller uses delete_insns_since if\nthe expansion fails), but the checks were incorrect for 2 reasons:\n1) it checked not just what follows after that last insn, but also\n   the last insn itself; so, if the division or modulo is immediately\n   preceded by a CALL_INSN, then we punt; this also causes -fcompare-debug\n   failures if the CALL_INSN is with -g followed by one or more DEBUG_INSNs\n2) if get_last_insn () is NULL (i.e. emitting into a new sequence), then\n   we didn't check anything\n\n2021-12-28  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR debug/103838\n\t* optabs.c (expand_doubleword_mod, expand_doubleword_divmod): Only\n\tcheck newly added insns for CALL_P, not the last insn of previous\n\tcode.\n\n\t* gcc.dg/pr103838.c: New test.", "tree": {"sha": "032675bfeb3a109a91ad922bbb271b09a5344097", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/032675bfeb3a109a91ad922bbb271b09a5344097"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78ee8381bf0ebd09a92936bdb9e1b5c9fc85ad88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78ee8381bf0ebd09a92936bdb9e1b5c9fc85ad88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78ee8381bf0ebd09a92936bdb9e1b5c9fc85ad88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78ee8381bf0ebd09a92936bdb9e1b5c9fc85ad88/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cff8fa9a44062b3b05bbfc8b077214dd6c50710a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cff8fa9a44062b3b05bbfc8b077214dd6c50710a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cff8fa9a44062b3b05bbfc8b077214dd6c50710a"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "ca00bbda10767a1216ac8eccaa959999d4177c94", "filename": "gcc/optabs.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78ee8381bf0ebd09a92936bdb9e1b5c9fc85ad88/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78ee8381bf0ebd09a92936bdb9e1b5c9fc85ad88/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=78ee8381bf0ebd09a92936bdb9e1b5c9fc85ad88", "patch": "@@ -1135,6 +1135,10 @@ expand_doubleword_mod (machine_mode mode, rtx op0, rtx op1, bool unsignedp)\n \n       remainder = convert_modes (mode, word_mode, remainder, unsignedp);\n       /* Punt if we need any library calls.  */\n+      if (last)\n+\tlast = NEXT_INSN (last);\n+      else\n+\tlast = get_insns ();\n       for (; last; last = NEXT_INSN (last))\n \tif (CALL_P (last))\n \t  return NULL_RTX;\n@@ -1228,6 +1232,10 @@ expand_doubleword_divmod (machine_mode mode, rtx op0, rtx op1, rtx *rem,\n     }\n \n   /* Punt if we need any library calls.  */\n+  if (last)\n+    last = NEXT_INSN (last);\n+  else\n+    last = get_insns ();\n   for (; last; last = NEXT_INSN (last))\n     if (CALL_P (last))\n       return NULL_RTX;"}, {"sha": "cde44e6e4e3791fcbbac33889e06021a8f43b004", "filename": "gcc/testsuite/gcc.dg/pr103838.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78ee8381bf0ebd09a92936bdb9e1b5c9fc85ad88/gcc%2Ftestsuite%2Fgcc.dg%2Fpr103838.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78ee8381bf0ebd09a92936bdb9e1b5c9fc85ad88/gcc%2Ftestsuite%2Fgcc.dg%2Fpr103838.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr103838.c?ref=78ee8381bf0ebd09a92936bdb9e1b5c9fc85ad88", "patch": "@@ -0,0 +1,28 @@\n+/* PR debug/103838 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fcompare-debug\" } */\n+\n+#ifdef __SIZEOF_INT128__\n+__int128 m;\n+#else\n+long long m;\n+#endif\n+int n;\n+\n+__attribute__((noinline)) void\n+bar (void)\n+{\n+  n += !!m;\n+}\n+\n+void\n+foo (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 2; ++i)\n+    {\n+      bar ();\n+      m /= 3;\n+    }\n+}"}]}