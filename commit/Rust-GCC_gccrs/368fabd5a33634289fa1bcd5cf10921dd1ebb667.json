{"sha": "368fabd5a33634289fa1bcd5cf10921dd1ebb667", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY4ZmFiZDVhMzM2MzQyODlmYTFiY2Q1Y2YxMDkyMWRkMWViYjY2Nw==", "commit": {"author": {"name": "Jack Howarth", "email": "howarth@bromo.med.uc.edu", "date": "2010-03-30T13:08:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-03-30T13:08:52Z"}, "message": "re PR c/43553 (libgcc built with -DHAVE_CC_TLS against xgcc when emutls in use)\n\n2010-03-30  Jack Howarth <howarth@bromo.med.uc.edu>\n\n\tPR c/43553\n\t* Makefile.in (INTERNAL_CFLAGS): Add @set_use_emutls@.\n\t* configure.ac: Use GCC_CHECK_EMUTLS to see if emulated TLS\n\tis used and substitute set_use_emutls.\n\t* configure: Regenerated.\n\nFrom-SVN: r157821", "tree": {"sha": "289b5c46ab914bf871f7cb4ed1773b3ade816a05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/289b5c46ab914bf871f7cb4ed1773b3ade816a05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/368fabd5a33634289fa1bcd5cf10921dd1ebb667", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/368fabd5a33634289fa1bcd5cf10921dd1ebb667", "html_url": "https://github.com/Rust-GCC/gccrs/commit/368fabd5a33634289fa1bcd5cf10921dd1ebb667", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/368fabd5a33634289fa1bcd5cf10921dd1ebb667/comments", "author": null, "committer": null, "parents": [{"sha": "2bcba94ba40f6ed885bbf03d54fb8eab24213e1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bcba94ba40f6ed885bbf03d54fb8eab24213e1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bcba94ba40f6ed885bbf03d54fb8eab24213e1a"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "677753efc07458d0d0ad733c215ea31c89ffd52c", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/368fabd5a33634289fa1bcd5cf10921dd1ebb667/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/368fabd5a33634289fa1bcd5cf10921dd1ebb667/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=368fabd5a33634289fa1bcd5cf10921dd1ebb667", "patch": "@@ -1,3 +1,11 @@\n+2010-03-30  Jack Howarth <howarth@bromo.med.uc.edu>\n+\n+\tPR c/43553\n+\t* Makefile.in (INTERNAL_CFLAGS): Add @set_use_emutls@.\n+\t* configure.ac: Use GCC_CHECK_EMUTLS to see if emulated TLS\n+\tis used and substitute set_use_emutls.\n+\t* configure: Regenerated.\n+\n 2010-03-30  Tarik Graba  <tarik.graba@telecom-paristech.fr>\n \n \t* config/lm32/t-lm32: Remove misplaced MULTILIB_OPTIONS."}, {"sha": "080aae2870787e388d11dd50521d54a2fef4132c", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/368fabd5a33634289fa1bcd5cf10921dd1ebb667/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/368fabd5a33634289fa1bcd5cf10921dd1ebb667/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=368fabd5a33634289fa1bcd5cf10921dd1ebb667", "patch": "@@ -226,7 +226,7 @@ override CFLAGS := $(filter-out -fprofile-generate -fprofile-use,$(CFLAGS))\n # will usually contain -g, so for the moment CFLAGS goes first.  We must\n # include CFLAGS - that's where multilib options live.\n INTERNAL_CFLAGS = $(CFLAGS) $(LIBGCC2_CFLAGS) $(HOST_LIBGCC2_CFLAGS) \\\n-\t\t  $(INCLUDES) @set_have_cc_tls@\n+\t\t  $(INCLUDES) @set_have_cc_tls@ @set_use_emutls@\n \n MULTIDIR := $(shell $(CC) $(CFLAGS) -print-multi-directory)\n MULTIOSDIR := $(shell $(CC) $(CFLAGS) -print-multi-os-directory)"}, {"sha": "f522427669300f43d960a29b2f4583eff5e278f7", "filename": "libgcc/configure", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/368fabd5a33634289fa1bcd5cf10921dd1ebb667/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/368fabd5a33634289fa1bcd5cf10921dd1ebb667/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=368fabd5a33634289fa1bcd5cf10921dd1ebb667", "patch": "@@ -556,6 +556,7 @@ LIBOBJS\n asm_hidden_op\n extra_parts\n tmake_file\n+set_use_emutls\n set_have_cc_tls\n vis_hide\n fixed_point\n@@ -3811,6 +3812,42 @@ if test \"$enable_tls $gcc_cv_have_cc_tls\" = \"yes yes\"; then\n fi\n \n \n+# See if we have emulated thread-local storage.\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the thread-local storage support is from emutls\" >&5\n+$as_echo_n \"checking whether the thread-local storage support is from emutls... \" >&6; }\n+if test \"${gcc_cv_use_emutls+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+    gcc_cv_use_emutls=no\n+    echo '__thread int a; int b; int main() { return a = b; }' > conftest.c\n+    if { ac_try='${CC-cc} -Werror -S -o conftest.s conftest.c 1>&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }; then\n+      if grep __emutls_get_address conftest.s > /dev/null; then\n+\tgcc_cv_use_emutls=yes\n+      fi\n+    fi\n+    rm -f conftest.*\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_use_emutls\" >&5\n+$as_echo \"$gcc_cv_use_emutls\" >&6; }\n+  if test \"$gcc_cv_use_emutls\" = \"yes\" ; then\n+\n+$as_echo \"#define USE_EMUTLS 1\" >>confdefs.h\n+\n+  fi\n+set_use_emutls=\n+if test \"$enable_tls $gcc_cv_use_emutls\" = \"yes yes\"; then\n+  set_use_emutls=\"-DUSE_EMUTLS\"\n+fi\n+\n+\n # Conditionalize the makefile for this target machine.\n tmake_file_=\n for f in ${tmake_file}"}, {"sha": "ce467dda598555151a56fbf1907401accf9f96d6", "filename": "libgcc/configure.ac", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/368fabd5a33634289fa1bcd5cf10921dd1ebb667/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/368fabd5a33634289fa1bcd5cf10921dd1ebb667/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=368fabd5a33634289fa1bcd5cf10921dd1ebb667", "patch": "@@ -238,6 +238,14 @@ if test \"$enable_tls $gcc_cv_have_cc_tls\" = \"yes yes\"; then\n fi\n AC_SUBST(set_have_cc_tls)\n \n+# See if we have emulated thread-local storage.\n+GCC_CHECK_EMUTLS\n+set_use_emutls=\n+if test \"$enable_tls $gcc_cv_use_emutls\" = \"yes yes\"; then\n+  set_use_emutls=\"-DUSE_EMUTLS\"\n+fi\n+AC_SUBST(set_use_emutls)\n+\n # Conditionalize the makefile for this target machine.\n tmake_file_=\n for f in ${tmake_file}"}]}