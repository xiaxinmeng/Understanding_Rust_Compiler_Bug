{"sha": "b6fda43f4ef60e4997e5bba89bbfa462670635ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZmZGE0M2Y0ZWY2MGU0OTk3ZTViYmE4OWJiZmE0NjI2NzA2MzVlYQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2007-04-19T21:00:44Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2007-04-19T21:00:44Z"}, "message": "spe.md (*frob_tf_ti, [...]): Add length attributes.\n\n\tgcc/\n\t* config/rs6000/spe.md (*frob_tf_ti, *frob_ti_tf, *frob_ti_tf_2,\n\t*mov_si<mode>_e500_subreg0, *mov_si<mode>_e500_subreg0_2,\n\t*mov_sitf_e500_subreg8, *mov_sitf_e500_subreg8_2, spe_extenddftf2,\n\tspe_fix_trunctfsi2_internal, spe_negtf2_internal, cmptfeq_gpr,\n\ttsttfeq_gpr, cmptfgt_gpr, tsttfgt_gpr, cmptflt_gpr, tsttflt_gpr):\n\tAdd length attributes.\n\nFrom-SVN: r123979", "tree": {"sha": "6a1f353c2a6abab8e9bec8f8a2dd7e071d89e28f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a1f353c2a6abab8e9bec8f8a2dd7e071d89e28f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6fda43f4ef60e4997e5bba89bbfa462670635ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6fda43f4ef60e4997e5bba89bbfa462670635ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6fda43f4ef60e4997e5bba89bbfa462670635ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6fda43f4ef60e4997e5bba89bbfa462670635ea/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "765e6a0cd466943fc5b92481106e6b065e51709a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/765e6a0cd466943fc5b92481106e6b065e51709a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/765e6a0cd466943fc5b92481106e6b065e51709a"}], "stats": {"total": 58, "additions": 42, "deletions": 16}, "files": [{"sha": "7cb5829570dd6ded0249bcb4a55a75f7244eeaec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6fda43f4ef60e4997e5bba89bbfa462670635ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6fda43f4ef60e4997e5bba89bbfa462670635ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6fda43f4ef60e4997e5bba89bbfa462670635ea", "patch": "@@ -1,3 +1,13 @@\n+2007-04-19  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tgcc/\n+\t* config/rs6000/spe.md (*frob_tf_ti, *frob_ti_tf, *frob_ti_tf_2,\n+\t*mov_si<mode>_e500_subreg0, *mov_si<mode>_e500_subreg0_2,\n+\t*mov_sitf_e500_subreg8, *mov_sitf_e500_subreg8_2, spe_extenddftf2,\n+\tspe_fix_trunctfsi2_internal, spe_negtf2_internal, cmptfeq_gpr,\n+\ttsttfeq_gpr, cmptfgt_gpr, tsttfgt_gpr, cmptflt_gpr, tsttflt_gpr):\n+\tAdd length attributes.\n+\n 2007-04-19  Janis Johnson  <janis187@us.ibm.com>\n \n \t* ginclude/float.h: Check that __STDC_WANT_DEC_FP__ is defined,"}, {"sha": "94e8528ab08a08bae1254454f102863c466c00fc", "filename": "gcc/config/rs6000/spe.md", "status": "modified", "additions": 32, "deletions": 16, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6fda43f4ef60e4997e5bba89bbfa462670635ea/gcc%2Fconfig%2Frs6000%2Fspe.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6fda43f4ef60e4997e5bba89bbfa462670635ea/gcc%2Fconfig%2Frs6000%2Fspe.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fspe.md?ref=b6fda43f4ef60e4997e5bba89bbfa462670635ea", "patch": "@@ -2224,7 +2224,8 @@\n   [(set (match_operand:TF 0 \"gpc_reg_operand\" \"=r\")\n         (subreg:TF (match_operand:TI 1 \"gpc_reg_operand\" \"r\") 0))]\n   \"TARGET_E500_DOUBLE\"\n-  \"evmergelo %0,%1,%L1\\;evmergelo %L0,%Y1,%Z1\")\n+  \"evmergelo %0,%1,%L1\\;evmergelo %L0,%Y1,%Z1\"\n+  [(set_attr \"length\" \"8\")])\n \n (define_insn \"*frob_<mode>_di_2\"\n   [(set (subreg:DI (match_operand:SPE64TF 0 \"nonimmediate_operand\" \"+&r,r\") 0)\n@@ -2255,7 +2256,8 @@\n   [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=&r\")\n         (subreg:TI (match_operand:TF 1 \"input_operand\" \"r\") 0))]\n   \"TARGET_E500_DOUBLE\"\n-  \"evmergehi %0,%1,%1\\;mr %L0,%1\\;evmergehi %Y0,%L1,%L1\\;mr %Z0,%L1\")\n+  \"evmergehi %0,%1,%1\\;mr %L0,%1\\;evmergehi %Y0,%L1,%L1\\;mr %Z0,%L1\"\n+  [(set_attr \"length\" \"16\")])\n \n (define_insn \"*frob_<DITI:mode>_<SPE64:mode>_2\"\n   [(set (subreg:SPE64 (match_operand:DITI 0 \"register_operand\" \"+&r,r\") 0)\n@@ -2319,7 +2321,8 @@\n   [(set (subreg:TF (match_operand:TI 0 \"gpc_reg_operand\" \"=&r\") 0)\n \t(match_operand:TF 1 \"gpc_reg_operand\" \"r\"))]\n   \"TARGET_E500_DOUBLE\"\n-  \"evmergehi %0,%1,%1\\;mr %L0,%1\\;evmergehi %Y0,%L1,%L1\\;mr %Z0,%L1\")\n+  \"evmergehi %0,%1,%1\\;mr %L0,%1\\;evmergehi %Y0,%L1,%L1\\;mr %Z0,%L1\"\n+  [(set_attr \"length\" \"16\")])\n \n (define_insn \"*mov_si<mode>_e500_subreg0\"\n   [(set (subreg:SI (match_operand:SPE64TF 0 \"register_operand\" \"+r,&r\") 0)\n@@ -2328,7 +2331,8 @@\n    || (TARGET_SPE && <MODE>mode != DFmode && <MODE>mode != TFmode)\"\n   \"@\n    evmergelo %0,%1,%0\n-   evmergelohi %0,%0,%0\\;{l%U1%X1|lwz%U1%X1} %0,%1\\;evmergelohi %0,%0,%0\")\n+   evmergelohi %0,%0,%0\\;{l%U1%X1|lwz%U1%X1} %0,%1\\;evmergelohi %0,%0,%0\"\n+  [(set_attr \"length\" \"4,12\")])\n \n ;; ??? Could use evstwwe for memory stores in some cases, depending on\n ;; the offset.\n@@ -2339,7 +2343,8 @@\n    || (TARGET_SPE && <MODE>mode != DFmode && <MODE>mode != TFmode)\"\n   \"@\n    evmergehi %0,%0,%1\n-   evmergelohi %1,%1,%1\\;{st%U0%X0|stw%U0%X0} %1,%0\")\n+   evmergelohi %1,%1,%1\\;{st%U0%X0|stw%U0%X0} %1,%0\"\n+  [(set_attr \"length\" \"4,8\")])\n \n (define_insn \"*mov_si<mode>_e500_subreg4\"\n   [(set (subreg:SI (match_operand:SPE64TF 0 \"register_operand\" \"+r,r\") 4)\n@@ -2365,15 +2370,17 @@\n   \"TARGET_E500_DOUBLE\"\n   \"@\n    evmergelo %L0,%1,%L0\n-   evmergelohi %L0,%L0,%L0\\;{l%U1%X1|lwz%U1%X1} %L0,%1\\;evmergelohi %L0,%L0,%L0\")\n+   evmergelohi %L0,%L0,%L0\\;{l%U1%X1|lwz%U1%X1} %L0,%1\\;evmergelohi %L0,%L0,%L0\"\n+  [(set_attr \"length\" \"4,12\")])\n \n (define_insn \"*mov_sitf_e500_subreg8_2\"\n   [(set (match_operand:SI 0 \"rs6000_nonimmediate_operand\" \"+r,m\")\n \t(subreg:SI (match_operand:TF 1 \"register_operand\" \"+r,&r\") 8))]\n   \"TARGET_E500_DOUBLE\"\n   \"@\n    evmergehi %0,%0,%L1\n-   evmergelohi %L1,%L1,%L1\\;{st%U0%X0|stw%U0%X0} %L1,%0\")\n+   evmergelohi %L1,%L1,%L1\\;{st%U0%X0|stw%U0%X0} %L1,%0\"\n+  [(set_attr \"length\" \"4,8\")])\n \n (define_insn \"*mov_sitf_e500_subreg12\"\n   [(set (subreg:SI (match_operand:TF 0 \"register_operand\" \"+r,r\") 12)\n@@ -2508,7 +2515,8 @@\n    evxor %L0,%L0,%L0\n    evor %0,%1,%1\\;evxor %L0,%L0,%L0\n    evldd%X1 %0,%y1\\;evxor %L0,%L0,%L0\n-   evstdd%X0 %1,%y0\\;evxor %2,%2,%2\\;evstdd %2,%Y0\")\n+   evstdd%X0 %1,%y0\\;evxor %2,%2,%2\\;evstdd %2,%Y0\"\n+  [(set_attr \"length\" \"4,8,8,12\")])\n \n (define_expand \"spe_fix_trunctfsi2\"\n   [(parallel [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n@@ -2533,7 +2541,8 @@\n    (clobber (match_operand:SI 4 \"gpc_reg_operand\" \"=&r\"))]\n   \"!TARGET_IEEEQUAD\n    && TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && TARGET_LONG_DOUBLE_128\"\n-  \"mfspefscr %3\\;rlwinm %4,%3,0,0,29\\;ori %4,%4,1\\;efdadd %2,%1,%L1\\;mtspefscr %3\\;efdctsiz %0, %2\")\n+  \"mfspefscr %3\\;rlwinm %4,%3,0,0,29\\;ori %4,%4,1\\;efdadd %2,%1,%L1\\;mtspefscr %3\\;efdctsiz %0, %2\"\n+  [(set_attr \"length\" \"24\")])\n \n (define_insn \"spe_negtf2_internal\"\n   [(set (match_operand:TF 0 \"gpc_reg_operand\" \"=r\")\n@@ -2546,7 +2555,8 @@\n     return \\\"efdneg %L0,%L1\\;efdneg %0,%1\\\";\n   else\n     return \\\"efdneg %0,%1\\;efdneg %L0,%L1\\\";\n-}\")\n+}\"\n+  [(set_attr \"length\" \"8\")])\n \n (define_expand \"spe_abstf2_cmp\"\n   [(set (match_operand:TF 0 \"gpc_reg_operand\" \"=f\")\n@@ -3055,7 +3065,8 @@\n    && TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && TARGET_LONG_DOUBLE_128\n    && !flag_unsafe_math_optimizations\"\n   \"efdcmpeq %0,%1,%2\\;bng %0,$+8\\;efdcmpeq %0,%L1,%L2\"\n-  [(set_attr \"type\" \"veccmp\")])\n+  [(set_attr \"type\" \"veccmp\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"tsttfeq_gpr\"\n   [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n@@ -3067,7 +3078,8 @@\n    && TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && TARGET_LONG_DOUBLE_128\n    && flag_unsafe_math_optimizations\"\n   \"efdtsteq %0,%1,%2\\;bng %0,$+8\\;efdtsteq %0,%L1,%L2\"\n-  [(set_attr \"type\" \"veccmpsimple\")])\n+  [(set_attr \"type\" \"veccmpsimple\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"cmptfgt_gpr\"\n   [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n@@ -3079,7 +3091,8 @@\n    && TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && TARGET_LONG_DOUBLE_128\n    && !flag_unsafe_math_optimizations\"\n   \"efdcmpgt %0,%1,%2\\;bgt %0,$+16\\;efdcmpeq %0,%1,%2\\;bng %0,$+8\\;efdcmpgt %0,%L1,%L2\"\n-  [(set_attr \"type\" \"veccmp\")])\n+  [(set_attr \"type\" \"veccmp\")\n+   (set_attr \"length\" \"20\")])\n \n (define_insn \"tsttfgt_gpr\"\n   [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n@@ -3091,7 +3104,8 @@\n    && TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && TARGET_LONG_DOUBLE_128\n    && flag_unsafe_math_optimizations\"\n   \"efdtstgt %0,%1,%2\\;bgt %0,$+16\\;efdtsteq %0,%1,%2\\;bng %0,$+8\\;efdtstgt %0,%L1,%L2\"\n-  [(set_attr \"type\" \"veccmpsimple\")])\n+  [(set_attr \"type\" \"veccmpsimple\")\n+   (set_attr \"length\" \"20\")])\n \n (define_insn \"cmptflt_gpr\"\n   [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n@@ -3103,7 +3117,8 @@\n    && TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && TARGET_LONG_DOUBLE_128\n    && !flag_unsafe_math_optimizations\"\n   \"efdcmplt %0,%1,%2\\;bgt %0,$+16\\;efdcmpeq %0,%1,%2\\;bng %0,$+8\\;efdcmplt %0,%L1,%L2\"\n-  [(set_attr \"type\" \"veccmp\")])\n+  [(set_attr \"type\" \"veccmp\")\n+   (set_attr \"length\" \"20\")])\n \n (define_insn \"tsttflt_gpr\"\n   [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n@@ -3115,7 +3130,8 @@\n    && TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && TARGET_LONG_DOUBLE_128\n    && flag_unsafe_math_optimizations\"\n   \"efdtstlt %0,%1,%2\\;bgt %0,$+16\\;efdtsteq %0,%1,%2\\;bng %0,$+8\\;efdtstlt %0,%L1,%L2\"\n-  [(set_attr \"type\" \"veccmpsimple\")])\n+  [(set_attr \"type\" \"veccmpsimple\")\n+   (set_attr \"length\" \"20\")])\n \n ;; Like cceq_ior_compare, but compare the GT bits.\n (define_insn \"e500_cr_ior_compare\""}]}