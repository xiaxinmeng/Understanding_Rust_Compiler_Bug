{"sha": "24b93bd603c942aa8c9af256a6387b9094404dda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRiOTNiZDYwM2M5NDJhYThjOWFmMjU2YTYzODdiOTA5NDQwNGRkYQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-07-03T22:44:32Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-07-03T22:44:32Z"}, "message": "Add a testcase for PR 44806.\n\n2010-07-03  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR c/44806\n\t* gcc.dg/torture/pr44806.c: New.\n\nFrom-SVN: r161787", "tree": {"sha": "0d0b07899e98b798e7d8f869091d3f216cb4e06e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d0b07899e98b798e7d8f869091d3f216cb4e06e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24b93bd603c942aa8c9af256a6387b9094404dda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24b93bd603c942aa8c9af256a6387b9094404dda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24b93bd603c942aa8c9af256a6387b9094404dda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24b93bd603c942aa8c9af256a6387b9094404dda/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d3ca3d6bd706bd629168a7e467ae1efdd923fed8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ca3d6bd706bd629168a7e467ae1efdd923fed8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3ca3d6bd706bd629168a7e467ae1efdd923fed8"}], "stats": {"total": 95, "additions": 95, "deletions": 0}, "files": [{"sha": "a815dd13da5f555d50b3317f5a716cad166d75dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24b93bd603c942aa8c9af256a6387b9094404dda/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24b93bd603c942aa8c9af256a6387b9094404dda/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=24b93bd603c942aa8c9af256a6387b9094404dda", "patch": "@@ -1,3 +1,8 @@\n+2010-07-03  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR c/44806\n+\t* gcc.dg/torture/pr44806.c: New.\n+\n 2010-07-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/cond_expr1.adb: New test."}, {"sha": "d0002d308d02e3bdb54534ef8754f3b4fb55cac9", "filename": "gcc/testsuite/gcc.dg/torture/pr44806.c", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24b93bd603c942aa8c9af256a6387b9094404dda/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr44806.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24b93bd603c942aa8c9af256a6387b9094404dda/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr44806.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr44806.c?ref=24b93bd603c942aa8c9af256a6387b9094404dda", "patch": "@@ -0,0 +1,90 @@\n+/* { dg-do run } */\n+\n+#include <stdint.h>\n+\n+extern void abort (void);\n+\n+#define N_DEV_BITS_4 5\n+#define N_INO_BITS_4 (32 - N_DEV_BITS_4 - 2 - 1)\n+\n+#define N_DEV_BITS_8 8\n+#define N_INO_BITS_8 (64 - N_DEV_BITS_8 - 2 - 1)\n+\n+struct dev_ino_4\n+{\n+  uint32_t mode:2;\n+  uint32_t short_ino:N_INO_BITS_4;\n+  uint32_t mapped_dev:N_DEV_BITS_4;\n+  uint32_t always_set:1;\n+};\n+\n+struct dev_ino_8\n+{\n+  uint32_t mode:2;\n+  uint64_t short_ino:N_INO_BITS_8;\n+  uint32_t mapped_dev:N_DEV_BITS_8;\n+  uint32_t always_set:1;\n+};\n+\n+struct dev_ino_full\n+{\n+  uint32_t mode:2;\n+  uint32_t dev;\n+  uint32_t ino;\n+};\n+\n+enum di_mode\n+{\n+  DI_MODE_4 = 1,\n+  DI_MODE_8 = 2,\n+  DI_MODE_FULL = 3\n+};\n+\n+struct di_ent\n+{\n+  union\n+  {\n+    struct dev_ino_4 di4;\n+    struct dev_ino_8 di8;\n+    struct dev_ino_full full;\n+    uint32_t u32;\n+    uint64_t u64;\n+    void *ptr;\n+  } u;\n+};\n+\n+static struct di_ent\n+decode_ptr (struct di_ent const *v)\n+{\n+  struct di_ent di;\n+  di.u.ptr = (void *) v;\n+  return di;\n+}\n+\n+static int\n+di_ent_equal (void const *x, void const *y)\n+{\n+  struct di_ent a = decode_ptr (x);\n+  struct di_ent b = decode_ptr (y);\n+  if (a.u.di4.mode != b.u.di4.mode)\n+    return 0;\n+\n+  if (a.u.di4.mode == DI_MODE_4)\n+    return (a.u.di4.short_ino == b.u.di4.short_ino\n+            && a.u.di4.mapped_dev == b.u.di4.mapped_dev);\n+\n+  if (a.u.di8.mode == DI_MODE_8)\n+    return (a.u.di8.short_ino == b.u.di8.short_ino\n+            && a.u.di8.mapped_dev == b.u.di8.mapped_dev);\n+\n+  return (a.u.full.ino == b.u.full.ino\n+          && a.u.full.dev == b.u.full.dev);\n+}\n+\n+int\n+main ()\n+{\n+  if (di_ent_equal ((void *) 0x80143c4d, (void *) 0x80173851) != 0)\n+    abort ();\n+  return 0;\n+}"}]}