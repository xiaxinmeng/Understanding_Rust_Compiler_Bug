{"sha": "7054d980c12f92448a4e19047303eea3a0c95c3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA1NGQ5ODBjMTJmOTI0NDhhNGUxOTA0NzMwM2VlYTNhMGM5NWMzZQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2012-10-31T03:45:34Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2012-10-31T03:45:34Z"}, "message": "linux64_closure.S: Add new ABI support.\n\n\t* src/powerpc/linux64_closure.S: Add new ABI support.\n\t* src/powerpc/linux64.S: Likewise.\n\nFrom-SVN: r193015", "tree": {"sha": "f5f83c4fb40c1b7d7003307eb173e00a4cde3a86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5f83c4fb40c1b7d7003307eb173e00a4cde3a86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7054d980c12f92448a4e19047303eea3a0c95c3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7054d980c12f92448a4e19047303eea3a0c95c3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7054d980c12f92448a4e19047303eea3a0c95c3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7054d980c12f92448a4e19047303eea3a0c95c3e/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6c10ab65137f16cf3bc81f099fc7d18c3b6f8fc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c10ab65137f16cf3bc81f099fc7d18c3b6f8fc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c10ab65137f16cf3bc81f099fc7d18c3b6f8fc8"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "56d772542996e15d513b8e75d41986f63338249f", "filename": "libffi/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7054d980c12f92448a4e19047303eea3a0c95c3e/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7054d980c12f92448a4e19047303eea3a0c95c3e/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=7054d980c12f92448a4e19047303eea3a0c95c3e", "patch": "@@ -1,3 +1,8 @@\n+2012-10-31  Alan Modra  <amodra@gmail.com>\n+\n+\t* src/powerpc/linux64_closure.S: Add new ABI support.\n+\t* src/powerpc/linux64.S: Likewise.\n+\n 2012-09-14  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* configure: Regenerated."}, {"sha": "f28da8120b7841ed3545fa0b09e1d4a849e3c691", "filename": "libffi/src/powerpc/linux64.S", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7054d980c12f92448a4e19047303eea3a0c95c3e/libffi%2Fsrc%2Fpowerpc%2Flinux64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7054d980c12f92448a4e19047303eea3a0c95c3e/libffi%2Fsrc%2Fpowerpc%2Flinux64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Flinux64.S?ref=7054d980c12f92448a4e19047303eea3a0c95c3e", "patch": "@@ -30,16 +30,25 @@\n #include <ffi.h>\n \n #ifdef __powerpc64__\n-\t.hidden\tffi_call_LINUX64, .ffi_call_LINUX64\n-\t.globl\tffi_call_LINUX64, .ffi_call_LINUX64\n+\t.hidden\tffi_call_LINUX64\n+\t.globl\tffi_call_LINUX64\n \t.section\t\".opd\",\"aw\"\n \t.align\t3\n ffi_call_LINUX64:\n+#ifdef _CALL_LINUX\n+\t.quad\t.L.ffi_call_LINUX64,.TOC.@tocbase,0\n+\t.type\tffi_call_LINUX64,@function\n+\t.text\n+.L.ffi_call_LINUX64:\n+#else\n+\t.hidden\t.ffi_call_LINUX64\n+\t.globl\t.ffi_call_LINUX64\n \t.quad\t.ffi_call_LINUX64,.TOC.@tocbase,0\n \t.size\tffi_call_LINUX64,24\n \t.type\t.ffi_call_LINUX64,@function\n \t.text\n .ffi_call_LINUX64:\n+#endif\n .LFB1:\n \tmflr\t%r0\n \tstd\t%r28, -32(%r1)\n@@ -58,7 +67,11 @@ ffi_call_LINUX64:\n \n \t/* Call ffi_prep_args64.  */\n \tmr\t%r4, %r1\n+#ifdef _CALL_LINUX\n+\tbl\tffi_prep_args64\n+#else\n \tbl\t.ffi_prep_args64\n+#endif\n \n \tld\t%r0, 0(%r29)\n \tld\t%r2, 8(%r29)\n@@ -137,7 +150,11 @@ ffi_call_LINUX64:\n .LFE1:\n \t.long\t0\n \t.byte\t0,12,0,1,128,4,0,0\n+#ifdef _CALL_LINUX\n+\t.size\tffi_call_LINUX64,.-.L.ffi_call_LINUX64\n+#else\n \t.size\t.ffi_call_LINUX64,.-.ffi_call_LINUX64\n+#endif\n \n \t.section\t.eh_frame,EH_FRAME_FLAGS,@progbits\n .Lframe1:"}, {"sha": "b1e12197a2b2c5fe439f020dc63cfb57d72fc82b", "filename": "libffi/src/powerpc/linux64_closure.S", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7054d980c12f92448a4e19047303eea3a0c95c3e/libffi%2Fsrc%2Fpowerpc%2Flinux64_closure.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7054d980c12f92448a4e19047303eea3a0c95c3e/libffi%2Fsrc%2Fpowerpc%2Flinux64_closure.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Flinux64_closure.S?ref=7054d980c12f92448a4e19047303eea3a0c95c3e", "patch": "@@ -32,16 +32,24 @@\n \n #ifdef __powerpc64__\n \tFFI_HIDDEN (ffi_closure_LINUX64)\n-\tFFI_HIDDEN (.ffi_closure_LINUX64)\n-\t.globl  ffi_closure_LINUX64, .ffi_closure_LINUX64\n+\t.globl  ffi_closure_LINUX64\n \t.section        \".opd\",\"aw\"\n \t.align  3\n ffi_closure_LINUX64:\n+#ifdef _CALL_LINUX\n+\t.quad   .L.ffi_closure_LINUX64,.TOC.@tocbase,0\n+\t.type   ffi_closure_LINUX64,@function\n+\t.text\n+.L.ffi_closure_LINUX64:\n+#else\n+\tFFI_HIDDEN (.ffi_closure_LINUX64)\n+\t.globl  .ffi_closure_LINUX64\n \t.quad   .ffi_closure_LINUX64,.TOC.@tocbase,0\n \t.size   ffi_closure_LINUX64,24\n \t.type   .ffi_closure_LINUX64,@function\n \t.text\n .ffi_closure_LINUX64:\n+#endif\n .LFB1:\n \t# save general regs into parm save area\n \tstd\t%r3, 48(%r1)\n@@ -91,7 +99,11 @@ ffi_closure_LINUX64:\n \taddi %r6, %r1, 128\n \n \t# make the call\n+#ifdef _CALL_LINUX\n+\tbl ffi_closure_helper_LINUX64\n+#else\n \tbl .ffi_closure_helper_LINUX64\n+#endif\n .Lret:\n \n \t# now r3 contains the return type\n@@ -194,7 +206,11 @@ ffi_closure_LINUX64:\n .LFE1:\n \t.long\t0\n \t.byte\t0,12,0,1,128,0,0,0\n+#ifdef _CALL_LINUX\n+\t.size\tffi_closure_LINUX64,.-.L.ffi_closure_LINUX64\n+#else\n \t.size\t.ffi_closure_LINUX64,.-.ffi_closure_LINUX64\n+#endif\n \n \t.section\t.eh_frame,EH_FRAME_FLAGS,@progbits\n .Lframe1:"}]}