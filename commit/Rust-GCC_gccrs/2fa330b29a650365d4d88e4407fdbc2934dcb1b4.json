{"sha": "2fa330b29a650365d4d88e4407fdbc2934dcb1b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZhMzMwYjI5YTY1MDM2NWQ0ZDg4ZTQ0MDdmZGJjMjkzNGRjYjFiNA==", "commit": {"author": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2005-03-29T03:00:27Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2005-03-29T03:00:27Z"}, "message": "arm-protos.h (arm_dbx_register_number): Add prototype.\n\n2005-03-29  Paul Brook  <paul@codesourcery.com>\n\n\t* config/arm/arm-protos.h (arm_dbx_register_number): Add prototype.\n\t* config/arm/arm.c (arm_dbx_register_number): New function.\n\t* config/arm/arm.h (IS_FPA_REGNUM, DBX_REGISTER_NUMBER): Define.\n\nFrom-SVN: r97150", "tree": {"sha": "5f9a2e31b4b52a15723c51d274cdc0bfd45a8612", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f9a2e31b4b52a15723c51d274cdc0bfd45a8612"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fa330b29a650365d4d88e4407fdbc2934dcb1b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fa330b29a650365d4d88e4407fdbc2934dcb1b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fa330b29a650365d4d88e4407fdbc2934dcb1b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fa330b29a650365d4d88e4407fdbc2934dcb1b4/comments", "author": null, "committer": null, "parents": [{"sha": "a584cf65fa83edcdbcf903b479414b04ddcd07ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a584cf65fa83edcdbcf903b479414b04ddcd07ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a584cf65fa83edcdbcf903b479414b04ddcd07ee"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "f609b3907dc9d3e40e94ebd878b7896aa661bce7", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fa330b29a650365d4d88e4407fdbc2934dcb1b4/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fa330b29a650365d4d88e4407fdbc2934dcb1b4/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=2fa330b29a650365d4d88e4407fdbc2934dcb1b4", "patch": "@@ -38,6 +38,7 @@ extern HOST_WIDE_INT arm_compute_initial_elimination_offset (unsigned int,\n \t\t\t\t\t\t\t     unsigned int);\n extern HOST_WIDE_INT thumb_compute_initial_elimination_offset (unsigned int,\n \t\t\t\t\t\t\t       unsigned int);\n+extern unsigned int arm_dbx_register_number (unsigned int);\n \n #ifdef TREE_CODE\n extern int arm_return_in_memory (tree);"}, {"sha": "dc7d410f7610cd3f0fdf3e990bb4a349051bc057", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fa330b29a650365d4d88e4407fdbc2934dcb1b4/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fa330b29a650365d4d88e4407fdbc2934dcb1b4/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=2fa330b29a650365d4d88e4407fdbc2934dcb1b4", "patch": "@@ -14641,3 +14641,30 @@ arm_shift_truncation_mask (enum machine_mode mode)\n {\n   return mode == SImode ? 255 : 0;\n }\n+\n+\n+/* Map internal gcc register numbers to DWARF2 register numbers.  */\n+\n+unsigned int\n+arm_dbx_register_number (unsigned int regno)\n+{\n+  if (regno < 16)\n+    return regno;\n+\n+  /* TODO: Legacy targets output FPA regs as registers 16-23 for backwards\n+     compatibility.  The EABI defines them as registers 96-103.  */\n+  if (IS_FPA_REGNUM (regno))\n+    return (TARGET_AAPCS_BASED ? 96 : 16) + regno - FIRST_FPA_REGNUM;\n+\n+  if (IS_VFP_REGNUM (regno))\n+    return 64 + regno - FIRST_VFP_REGNUM;\n+\n+  if (IS_IWMMXT_GR_REGNUM (regno))\n+    return 104 + regno - FIRST_IWMMXT_GR_REGNUM;\n+\n+  if (IS_IWMMXT_REGNUM (regno))\n+    return 112 + regno - FIRST_IWMMXT_REGNUM;\n+\n+  abort ();\n+}\n+"}, {"sha": "9f4cc3c07ad32dcb822bb79054a62e650ea4359c", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fa330b29a650365d4d88e4407fdbc2934dcb1b4/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fa330b29a650365d4d88e4407fdbc2934dcb1b4/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=2fa330b29a650365d4d88e4407fdbc2934dcb1b4", "patch": "@@ -1032,6 +1032,8 @@ extern const char * structure_size_string;\n /* ARM floating pointer registers.  */\n #define FIRST_FPA_REGNUM \t16\n #define LAST_FPA_REGNUM  \t23\n+#define IS_FPA_REGNUM(REGNUM) \\\n+  (((REGNUM) >= FIRST_FPA_REGNUM) && ((REGNUM) <= LAST_FPA_REGNUM))\n \n #define FIRST_IWMMXT_GR_REGNUM\t43\n #define LAST_IWMMXT_GR_REGNUM\t46\n@@ -1064,6 +1066,8 @@ extern const char * structure_size_string;\n /* VFP adds 32 + 1 more.  */\n #define FIRST_PSEUDO_REGISTER   96\n \n+#define DBX_REGISTER_NUMBER(REGNO) arm_dbx_register_number (REGNO)\n+\n /* Value should be nonzero if functions must have frame pointers.\n    Zero means the frame pointer need not be set up (and parms may be accessed\n    via the stack pointer) in functions that seem suitable."}]}