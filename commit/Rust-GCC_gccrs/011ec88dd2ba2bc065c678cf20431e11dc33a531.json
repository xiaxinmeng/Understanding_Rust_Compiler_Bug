{"sha": "011ec88dd2ba2bc065c678cf20431e11dc33a531", "node_id": "C_kwDOANBUbNoAKDAxMWVjODhkZDJiYTJiYzA2NWM2NzhjZjIwNDMxZTExZGMzM2E1MzE", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-07T06:33:28Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T05:58:42Z"}, "message": "RISC-V: Add vwcvt C API test\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/vwcvt_x-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvt_x-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvt_x-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvt_x_m-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvt_x_m-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvt_x_m-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvt_x_mu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvt_x_mu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvt_x_mu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvt_x_tu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvt_x_tu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvt_x_tu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvt_x_tum-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvt_x_tum-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvt_x_tum-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvt_x_tumu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvt_x_tumu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvt_x_tumu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvtu_x-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvtu_x-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvtu_x-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvtu_x_m-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvtu_x_m-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvtu_x_m-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvtu_x_mu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvtu_x_mu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvtu_x_mu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvtu_x_tu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvtu_x_tu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvtu_x_tu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvtu_x_tum-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvtu_x_tum-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvtu_x_tum-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvtu_x_tumu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvtu_x_tumu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vwcvtu_x_tumu-3.c: New test.", "tree": {"sha": "b5e417047c4327e23447b86ae9f3caa2ae402995", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5e417047c4327e23447b86ae9f3caa2ae402995"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/011ec88dd2ba2bc065c678cf20431e11dc33a531", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/011ec88dd2ba2bc065c678cf20431e11dc33a531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/011ec88dd2ba2bc065c678cf20431e11dc33a531", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/011ec88dd2ba2bc065c678cf20431e11dc33a531/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee4f91db8ee78cec4e7a70b425475ac89b9f2f86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee4f91db8ee78cec4e7a70b425475ac89b9f2f86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee4f91db8ee78cec4e7a70b425475ac89b9f2f86"}], "stats": {"total": 3996, "additions": 3996, "deletions": 0}, "files": [{"sha": "43b38ac1563bd02ff0d130c03dbd421f4d9ef8e6", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvt_x-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x-1.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_x_v_i16mf4(vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf4(src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_x_v_i16mf2(vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf2(src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_x_v_i16m1(vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m1(src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_x_v_i16m2(vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m2(src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_x_v_i16m4(vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m4(src,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_x_v_i16m8(vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m8(src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_x_v_i32mf2(vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32mf2(src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_x_v_i32m1(vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m1(src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_x_v_i32m2(vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m2(src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_x_v_i32m4(vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m4(src,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_x_v_i32m8(vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m8(src,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_x_v_i64m1(vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m1(src,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_x_v_i64m2(vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m2(src,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_x_v_i64m4(vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m4(src,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_x_v_i64m8(vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m8(src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "6b03c04bc1e61d42bb2aceba56ccce36bd2f5ecf", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvt_x-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x-2.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_x_v_i16mf4(vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf4(src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_x_v_i16mf2(vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf2(src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_x_v_i16m1(vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m1(src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_x_v_i16m2(vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m2(src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_x_v_i16m4(vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m4(src,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_x_v_i16m8(vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m8(src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_x_v_i32mf2(vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32mf2(src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_x_v_i32m1(vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m1(src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_x_v_i32m2(vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m2(src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_x_v_i32m4(vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m4(src,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_x_v_i32m8(vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m8(src,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_x_v_i64m1(vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m1(src,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_x_v_i64m2(vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m2(src,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_x_v_i64m4(vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m4(src,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_x_v_i64m8(vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m8(src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "15eae6769d675081dc66013a731dbb5d90bb00bb", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvt_x-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x-3.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_x_v_i16mf4(vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf4(src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_x_v_i16mf2(vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf2(src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_x_v_i16m1(vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m1(src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_x_v_i16m2(vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m2(src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_x_v_i16m4(vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m4(src,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_x_v_i16m8(vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m8(src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_x_v_i32mf2(vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32mf2(src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_x_v_i32m1(vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m1(src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_x_v_i32m2(vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m2(src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_x_v_i32m4(vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m4(src,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_x_v_i32m8(vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m8(src,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_x_v_i64m1(vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m1(src,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_x_v_i64m2(vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m2(src,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_x_v_i64m4(vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m4(src,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_x_v_i64m8(vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m8(src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "4809bd72265a0335ed6095ba05499c07ff245927", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvt_x_m-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_m-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_m-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_m-1.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_x_v_i16mf4_m(vbool64_t mask,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf4_m(mask,src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_x_v_i16mf2_m(vbool32_t mask,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf2_m(mask,src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_x_v_i16m1_m(vbool16_t mask,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m1_m(mask,src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_x_v_i16m2_m(vbool8_t mask,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m2_m(mask,src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_x_v_i16m4_m(vbool4_t mask,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m4_m(mask,src,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_x_v_i16m8_m(vbool2_t mask,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m8_m(mask,src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_x_v_i32mf2_m(vbool64_t mask,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32mf2_m(mask,src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_x_v_i32m1_m(vbool32_t mask,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m1_m(mask,src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_x_v_i32m2_m(vbool16_t mask,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m2_m(mask,src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_x_v_i32m4_m(vbool8_t mask,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m4_m(mask,src,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_x_v_i32m8_m(vbool4_t mask,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m8_m(mask,src,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_x_v_i64m1_m(vbool64_t mask,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m1_m(mask,src,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_x_v_i64m2_m(vbool32_t mask,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m2_m(mask,src,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_x_v_i64m4_m(vbool16_t mask,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m4_m(mask,src,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_x_v_i64m8_m(vbool8_t mask,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m8_m(mask,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "ac6f904a02e8e203a1ebbbf726086da2e2f70dc3", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvt_x_m-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_m-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_m-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_m-2.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_x_v_i16mf4_m(vbool64_t mask,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf4_m(mask,src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_x_v_i16mf2_m(vbool32_t mask,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf2_m(mask,src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_x_v_i16m1_m(vbool16_t mask,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m1_m(mask,src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_x_v_i16m2_m(vbool8_t mask,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m2_m(mask,src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_x_v_i16m4_m(vbool4_t mask,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m4_m(mask,src,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_x_v_i16m8_m(vbool2_t mask,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m8_m(mask,src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_x_v_i32mf2_m(vbool64_t mask,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32mf2_m(mask,src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_x_v_i32m1_m(vbool32_t mask,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m1_m(mask,src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_x_v_i32m2_m(vbool16_t mask,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m2_m(mask,src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_x_v_i32m4_m(vbool8_t mask,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m4_m(mask,src,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_x_v_i32m8_m(vbool4_t mask,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m8_m(mask,src,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_x_v_i64m1_m(vbool64_t mask,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m1_m(mask,src,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_x_v_i64m2_m(vbool32_t mask,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m2_m(mask,src,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_x_v_i64m4_m(vbool16_t mask,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m4_m(mask,src,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_x_v_i64m8_m(vbool8_t mask,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m8_m(mask,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "cbbbb258283ee9bd3a509205ec5944817bb7717f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvt_x_m-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_m-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_m-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_m-3.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_x_v_i16mf4_m(vbool64_t mask,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf4_m(mask,src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_x_v_i16mf2_m(vbool32_t mask,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf2_m(mask,src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_x_v_i16m1_m(vbool16_t mask,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m1_m(mask,src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_x_v_i16m2_m(vbool8_t mask,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m2_m(mask,src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_x_v_i16m4_m(vbool4_t mask,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m4_m(mask,src,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_x_v_i16m8_m(vbool2_t mask,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m8_m(mask,src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_x_v_i32mf2_m(vbool64_t mask,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32mf2_m(mask,src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_x_v_i32m1_m(vbool32_t mask,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m1_m(mask,src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_x_v_i32m2_m(vbool16_t mask,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m2_m(mask,src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_x_v_i32m4_m(vbool8_t mask,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m4_m(mask,src,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_x_v_i32m8_m(vbool4_t mask,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m8_m(mask,src,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_x_v_i64m1_m(vbool64_t mask,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m1_m(mask,src,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_x_v_i64m2_m(vbool32_t mask,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m2_m(mask,src,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_x_v_i64m4_m(vbool16_t mask,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m4_m(mask,src,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_x_v_i64m8_m(vbool8_t mask,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m8_m(mask,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "2f635736b28a4b89180b9d8efb2b534d590d6f3c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvt_x_mu-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_mu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_mu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_mu-1.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_x_v_i16mf4_mu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf4_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_x_v_i16mf2_mu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf2_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_x_v_i16m1_mu(vbool16_t mask,vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m1_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_x_v_i16m2_mu(vbool8_t mask,vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m2_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_x_v_i16m4_mu(vbool4_t mask,vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m4_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_x_v_i16m8_mu(vbool2_t mask,vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m8_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_x_v_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32mf2_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_x_v_i32m1_mu(vbool32_t mask,vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m1_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_x_v_i32m2_mu(vbool16_t mask,vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m2_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_x_v_i32m4_mu(vbool8_t mask,vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m4_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_x_v_i32m8_mu(vbool4_t mask,vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m8_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_x_v_i64m1_mu(vbool64_t mask,vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m1_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_x_v_i64m2_mu(vbool32_t mask,vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m2_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_x_v_i64m4_mu(vbool16_t mask,vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m4_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_x_v_i64m8_mu(vbool8_t mask,vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m8_mu(mask,merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "27a834cde4b9c01d7bd11c47f074d47066c6b326", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvt_x_mu-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_mu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_mu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_mu-2.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_x_v_i16mf4_mu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf4_mu(mask,merge,src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_x_v_i16mf2_mu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf2_mu(mask,merge,src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_x_v_i16m1_mu(vbool16_t mask,vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m1_mu(mask,merge,src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_x_v_i16m2_mu(vbool8_t mask,vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m2_mu(mask,merge,src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_x_v_i16m4_mu(vbool4_t mask,vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m4_mu(mask,merge,src,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_x_v_i16m8_mu(vbool2_t mask,vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m8_mu(mask,merge,src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_x_v_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32mf2_mu(mask,merge,src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_x_v_i32m1_mu(vbool32_t mask,vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m1_mu(mask,merge,src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_x_v_i32m2_mu(vbool16_t mask,vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m2_mu(mask,merge,src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_x_v_i32m4_mu(vbool8_t mask,vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m4_mu(mask,merge,src,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_x_v_i32m8_mu(vbool4_t mask,vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m8_mu(mask,merge,src,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_x_v_i64m1_mu(vbool64_t mask,vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m1_mu(mask,merge,src,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_x_v_i64m2_mu(vbool32_t mask,vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m2_mu(mask,merge,src,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_x_v_i64m4_mu(vbool16_t mask,vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m4_mu(mask,merge,src,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_x_v_i64m8_mu(vbool8_t mask,vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m8_mu(mask,merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "a323f50af96d5dad4b6ddbb14aa58efb9437fbff", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvt_x_mu-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_mu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_mu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_mu-3.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_x_v_i16mf4_mu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf4_mu(mask,merge,src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_x_v_i16mf2_mu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf2_mu(mask,merge,src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_x_v_i16m1_mu(vbool16_t mask,vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m1_mu(mask,merge,src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_x_v_i16m2_mu(vbool8_t mask,vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m2_mu(mask,merge,src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_x_v_i16m4_mu(vbool4_t mask,vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m4_mu(mask,merge,src,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_x_v_i16m8_mu(vbool2_t mask,vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m8_mu(mask,merge,src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_x_v_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32mf2_mu(mask,merge,src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_x_v_i32m1_mu(vbool32_t mask,vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m1_mu(mask,merge,src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_x_v_i32m2_mu(vbool16_t mask,vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m2_mu(mask,merge,src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_x_v_i32m4_mu(vbool8_t mask,vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m4_mu(mask,merge,src,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_x_v_i32m8_mu(vbool4_t mask,vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m8_mu(mask,merge,src,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_x_v_i64m1_mu(vbool64_t mask,vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m1_mu(mask,merge,src,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_x_v_i64m2_mu(vbool32_t mask,vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m2_mu(mask,merge,src,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_x_v_i64m4_mu(vbool16_t mask,vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m4_mu(mask,merge,src,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_x_v_i64m8_mu(vbool8_t mask,vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m8_mu(mask,merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "9547f9206d442f9db83175f4fc8d3b343ccb2f5b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvt_x_tu-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tu-1.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_x_v_i16mf4_tu(vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf4_tu(merge,src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_x_v_i16mf2_tu(vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf2_tu(merge,src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_x_v_i16m1_tu(vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m1_tu(merge,src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_x_v_i16m2_tu(vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m2_tu(merge,src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_x_v_i16m4_tu(vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m4_tu(merge,src,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_x_v_i16m8_tu(vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m8_tu(merge,src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_x_v_i32mf2_tu(vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32mf2_tu(merge,src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_x_v_i32m1_tu(vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m1_tu(merge,src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_x_v_i32m2_tu(vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m2_tu(merge,src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_x_v_i32m4_tu(vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m4_tu(merge,src,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_x_v_i32m8_tu(vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m8_tu(merge,src,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_x_v_i64m1_tu(vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m1_tu(merge,src,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_x_v_i64m2_tu(vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m2_tu(merge,src,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_x_v_i64m4_tu(vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m4_tu(merge,src,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_x_v_i64m8_tu(vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m8_tu(merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "f0fcdfab0c81cb7e3f5c1415e0f6b0f9ca0d659d", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvt_x_tu-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tu-2.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_x_v_i16mf4_tu(vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf4_tu(merge,src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_x_v_i16mf2_tu(vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf2_tu(merge,src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_x_v_i16m1_tu(vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m1_tu(merge,src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_x_v_i16m2_tu(vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m2_tu(merge,src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_x_v_i16m4_tu(vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m4_tu(merge,src,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_x_v_i16m8_tu(vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m8_tu(merge,src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_x_v_i32mf2_tu(vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32mf2_tu(merge,src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_x_v_i32m1_tu(vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m1_tu(merge,src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_x_v_i32m2_tu(vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m2_tu(merge,src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_x_v_i32m4_tu(vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m4_tu(merge,src,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_x_v_i32m8_tu(vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m8_tu(merge,src,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_x_v_i64m1_tu(vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m1_tu(merge,src,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_x_v_i64m2_tu(vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m2_tu(merge,src,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_x_v_i64m4_tu(vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m4_tu(merge,src,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_x_v_i64m8_tu(vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m8_tu(merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "f279382b3d2e8facaacd2950428011df81d81a69", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvt_x_tu-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tu-3.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_x_v_i16mf4_tu(vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf4_tu(merge,src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_x_v_i16mf2_tu(vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf2_tu(merge,src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_x_v_i16m1_tu(vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m1_tu(merge,src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_x_v_i16m2_tu(vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m2_tu(merge,src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_x_v_i16m4_tu(vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m4_tu(merge,src,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_x_v_i16m8_tu(vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m8_tu(merge,src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_x_v_i32mf2_tu(vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32mf2_tu(merge,src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_x_v_i32m1_tu(vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m1_tu(merge,src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_x_v_i32m2_tu(vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m2_tu(merge,src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_x_v_i32m4_tu(vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m4_tu(merge,src,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_x_v_i32m8_tu(vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m8_tu(merge,src,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_x_v_i64m1_tu(vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m1_tu(merge,src,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_x_v_i64m2_tu(vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m2_tu(merge,src,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_x_v_i64m4_tu(vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m4_tu(merge,src,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_x_v_i64m8_tu(vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m8_tu(merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "573a1f1c416fe4b7345bcee9b32eb0d6fd224a7c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvt_x_tum-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tum-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tum-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tum-1.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_x_v_i16mf4_tum(vbool64_t mask,vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf4_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_x_v_i16mf2_tum(vbool32_t mask,vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf2_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_x_v_i16m1_tum(vbool16_t mask,vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m1_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_x_v_i16m2_tum(vbool8_t mask,vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m2_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_x_v_i16m4_tum(vbool4_t mask,vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m4_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_x_v_i16m8_tum(vbool2_t mask,vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m8_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_x_v_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32mf2_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_x_v_i32m1_tum(vbool32_t mask,vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m1_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_x_v_i32m2_tum(vbool16_t mask,vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m2_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_x_v_i32m4_tum(vbool8_t mask,vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m4_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_x_v_i32m8_tum(vbool4_t mask,vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m8_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_x_v_i64m1_tum(vbool64_t mask,vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m1_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_x_v_i64m2_tum(vbool32_t mask,vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m2_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_x_v_i64m4_tum(vbool16_t mask,vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m4_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_x_v_i64m8_tum(vbool8_t mask,vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m8_tum(mask,merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "c18da782ff3c592f3e1769729d38209a6c9cbadf", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvt_x_tum-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tum-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tum-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tum-2.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_x_v_i16mf4_tum(vbool64_t mask,vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf4_tum(mask,merge,src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_x_v_i16mf2_tum(vbool32_t mask,vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf2_tum(mask,merge,src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_x_v_i16m1_tum(vbool16_t mask,vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m1_tum(mask,merge,src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_x_v_i16m2_tum(vbool8_t mask,vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m2_tum(mask,merge,src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_x_v_i16m4_tum(vbool4_t mask,vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m4_tum(mask,merge,src,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_x_v_i16m8_tum(vbool2_t mask,vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m8_tum(mask,merge,src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_x_v_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32mf2_tum(mask,merge,src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_x_v_i32m1_tum(vbool32_t mask,vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m1_tum(mask,merge,src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_x_v_i32m2_tum(vbool16_t mask,vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m2_tum(mask,merge,src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_x_v_i32m4_tum(vbool8_t mask,vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m4_tum(mask,merge,src,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_x_v_i32m8_tum(vbool4_t mask,vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m8_tum(mask,merge,src,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_x_v_i64m1_tum(vbool64_t mask,vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m1_tum(mask,merge,src,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_x_v_i64m2_tum(vbool32_t mask,vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m2_tum(mask,merge,src,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_x_v_i64m4_tum(vbool16_t mask,vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m4_tum(mask,merge,src,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_x_v_i64m8_tum(vbool8_t mask,vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m8_tum(mask,merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "5ac16b4c2131016180b6964877193d18caaf6fe8", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvt_x_tum-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tum-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tum-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tum-3.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_x_v_i16mf4_tum(vbool64_t mask,vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf4_tum(mask,merge,src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_x_v_i16mf2_tum(vbool32_t mask,vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf2_tum(mask,merge,src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_x_v_i16m1_tum(vbool16_t mask,vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m1_tum(mask,merge,src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_x_v_i16m2_tum(vbool8_t mask,vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m2_tum(mask,merge,src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_x_v_i16m4_tum(vbool4_t mask,vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m4_tum(mask,merge,src,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_x_v_i16m8_tum(vbool2_t mask,vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m8_tum(mask,merge,src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_x_v_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32mf2_tum(mask,merge,src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_x_v_i32m1_tum(vbool32_t mask,vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m1_tum(mask,merge,src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_x_v_i32m2_tum(vbool16_t mask,vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m2_tum(mask,merge,src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_x_v_i32m4_tum(vbool8_t mask,vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m4_tum(mask,merge,src,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_x_v_i32m8_tum(vbool4_t mask,vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m8_tum(mask,merge,src,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_x_v_i64m1_tum(vbool64_t mask,vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m1_tum(mask,merge,src,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_x_v_i64m2_tum(vbool32_t mask,vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m2_tum(mask,merge,src,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_x_v_i64m4_tum(vbool16_t mask,vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m4_tum(mask,merge,src,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_x_v_i64m8_tum(vbool8_t mask,vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m8_tum(mask,merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "4fe5a55f5d199b582165c7cdb6fe48351847e6a2", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvt_x_tumu-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tumu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tumu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tumu-1.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_x_v_i16mf4_tumu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf4_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_x_v_i16mf2_tumu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf2_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_x_v_i16m1_tumu(vbool16_t mask,vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m1_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_x_v_i16m2_tumu(vbool8_t mask,vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m2_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_x_v_i16m4_tumu(vbool4_t mask,vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m4_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_x_v_i16m8_tumu(vbool2_t mask,vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m8_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_x_v_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32mf2_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_x_v_i32m1_tumu(vbool32_t mask,vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m1_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_x_v_i32m2_tumu(vbool16_t mask,vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m2_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_x_v_i32m4_tumu(vbool8_t mask,vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m4_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_x_v_i32m8_tumu(vbool4_t mask,vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m8_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_x_v_i64m1_tumu(vbool64_t mask,vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m1_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_x_v_i64m2_tumu(vbool32_t mask,vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m2_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_x_v_i64m4_tumu(vbool16_t mask,vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m4_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_x_v_i64m8_tumu(vbool8_t mask,vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m8_tumu(mask,merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "ae292da32dfe886523a040550c7f1533be5dff3f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvt_x_tumu-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tumu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tumu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tumu-2.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_x_v_i16mf4_tumu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf4_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_x_v_i16mf2_tumu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf2_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_x_v_i16m1_tumu(vbool16_t mask,vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m1_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_x_v_i16m2_tumu(vbool8_t mask,vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m2_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_x_v_i16m4_tumu(vbool4_t mask,vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m4_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_x_v_i16m8_tumu(vbool2_t mask,vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m8_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_x_v_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32mf2_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_x_v_i32m1_tumu(vbool32_t mask,vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m1_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_x_v_i32m2_tumu(vbool16_t mask,vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m2_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_x_v_i32m4_tumu(vbool8_t mask,vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m4_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_x_v_i32m8_tumu(vbool4_t mask,vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m8_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_x_v_i64m1_tumu(vbool64_t mask,vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m1_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_x_v_i64m2_tumu(vbool32_t mask,vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m2_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_x_v_i64m4_tumu(vbool16_t mask,vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m4_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_x_v_i64m8_tumu(vbool8_t mask,vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m8_tumu(mask,merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "4e26fa30f533651cd12ac015af9b636875aadeb8", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvt_x_tumu-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tumu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tumu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tumu-3.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_x_v_i16mf4_tumu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf4_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_x_v_i16mf2_tumu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16mf2_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_x_v_i16m1_tumu(vbool16_t mask,vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m1_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_x_v_i16m2_tumu(vbool8_t mask,vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m2_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_x_v_i16m4_tumu(vbool4_t mask,vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m4_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_x_v_i16m8_tumu(vbool2_t mask,vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i16m8_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_x_v_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32mf2_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_x_v_i32m1_tumu(vbool32_t mask,vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m1_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_x_v_i32m2_tumu(vbool16_t mask,vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m2_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_x_v_i32m4_tumu(vbool8_t mask,vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m4_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_x_v_i32m8_tumu(vbool4_t mask,vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i32m8_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_x_v_i64m1_tumu(vbool64_t mask,vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m1_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_x_v_i64m2_tumu(vbool32_t mask,vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m2_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_x_v_i64m4_tumu(vbool16_t mask,vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m4_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_x_v_i64m8_tumu(vbool8_t mask,vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_x_v_i64m8_tumu(mask,merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "614b2f6cc81b63a667733328e671b9472c2fb059", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvtu_x-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x-1.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_x_v_u16mf4(vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf4(src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_x_v_u16mf2(vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf2(src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_x_v_u16m1(vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m1(src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_x_v_u16m2(vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m2(src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_x_v_u16m4(vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m4(src,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_x_v_u16m8(vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m8(src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_x_v_u32mf2(vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32mf2(src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_x_v_u32m1(vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m1(src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_x_v_u32m2(vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m2(src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_x_v_u32m4(vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m4(src,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_x_v_u32m8(vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m8(src,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_x_v_u64m1(vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m1(src,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_x_v_u64m2(vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m2(src,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_x_v_u64m4(vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m4(src,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_x_v_u64m8(vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m8(src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "0f331b1ed989927161e4b99f1083cdc7f6132822", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvtu_x-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x-2.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_x_v_u16mf4(vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf4(src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_x_v_u16mf2(vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf2(src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_x_v_u16m1(vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m1(src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_x_v_u16m2(vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m2(src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_x_v_u16m4(vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m4(src,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_x_v_u16m8(vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m8(src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_x_v_u32mf2(vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32mf2(src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_x_v_u32m1(vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m1(src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_x_v_u32m2(vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m2(src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_x_v_u32m4(vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m4(src,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_x_v_u32m8(vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m8(src,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_x_v_u64m1(vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m1(src,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_x_v_u64m2(vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m2(src,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_x_v_u64m4(vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m4(src,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_x_v_u64m8(vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m8(src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "00d6f3cd2dfc1e7963aff1dd5d5aab698ba2f9fa", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvtu_x-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x-3.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_x_v_u16mf4(vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf4(src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_x_v_u16mf2(vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf2(src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_x_v_u16m1(vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m1(src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_x_v_u16m2(vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m2(src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_x_v_u16m4(vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m4(src,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_x_v_u16m8(vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m8(src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_x_v_u32mf2(vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32mf2(src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_x_v_u32m1(vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m1(src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_x_v_u32m2(vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m2(src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_x_v_u32m4(vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m4(src,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_x_v_u32m8(vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m8(src,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_x_v_u64m1(vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m1(src,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_x_v_u64m2(vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m2(src,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_x_v_u64m4(vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m4(src,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_x_v_u64m8(vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m8(src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "a328f719658f5b96ad83b28844c05114bdebc362", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvtu_x_m-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_m-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_m-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_m-1.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_x_v_u16mf4_m(vbool64_t mask,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf4_m(mask,src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_x_v_u16mf2_m(vbool32_t mask,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf2_m(mask,src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_x_v_u16m1_m(vbool16_t mask,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m1_m(mask,src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_x_v_u16m2_m(vbool8_t mask,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m2_m(mask,src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_x_v_u16m4_m(vbool4_t mask,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m4_m(mask,src,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_x_v_u16m8_m(vbool2_t mask,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m8_m(mask,src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_x_v_u32mf2_m(vbool64_t mask,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32mf2_m(mask,src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_x_v_u32m1_m(vbool32_t mask,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m1_m(mask,src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_x_v_u32m2_m(vbool16_t mask,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m2_m(mask,src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_x_v_u32m4_m(vbool8_t mask,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m4_m(mask,src,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_x_v_u32m8_m(vbool4_t mask,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m8_m(mask,src,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_x_v_u64m1_m(vbool64_t mask,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m1_m(mask,src,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_x_v_u64m2_m(vbool32_t mask,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m2_m(mask,src,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_x_v_u64m4_m(vbool16_t mask,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m4_m(mask,src,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_x_v_u64m8_m(vbool8_t mask,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m8_m(mask,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "87e262148098d591458329fa8c8664f5def29a8d", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvtu_x_m-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_m-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_m-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_m-2.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_x_v_u16mf4_m(vbool64_t mask,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf4_m(mask,src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_x_v_u16mf2_m(vbool32_t mask,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf2_m(mask,src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_x_v_u16m1_m(vbool16_t mask,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m1_m(mask,src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_x_v_u16m2_m(vbool8_t mask,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m2_m(mask,src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_x_v_u16m4_m(vbool4_t mask,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m4_m(mask,src,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_x_v_u16m8_m(vbool2_t mask,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m8_m(mask,src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_x_v_u32mf2_m(vbool64_t mask,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32mf2_m(mask,src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_x_v_u32m1_m(vbool32_t mask,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m1_m(mask,src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_x_v_u32m2_m(vbool16_t mask,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m2_m(mask,src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_x_v_u32m4_m(vbool8_t mask,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m4_m(mask,src,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_x_v_u32m8_m(vbool4_t mask,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m8_m(mask,src,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_x_v_u64m1_m(vbool64_t mask,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m1_m(mask,src,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_x_v_u64m2_m(vbool32_t mask,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m2_m(mask,src,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_x_v_u64m4_m(vbool16_t mask,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m4_m(mask,src,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_x_v_u64m8_m(vbool8_t mask,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m8_m(mask,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "49d5713fe1f3b1342b34a802355f58938a6db6dc", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvtu_x_m-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_m-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_m-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_m-3.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_x_v_u16mf4_m(vbool64_t mask,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf4_m(mask,src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_x_v_u16mf2_m(vbool32_t mask,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf2_m(mask,src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_x_v_u16m1_m(vbool16_t mask,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m1_m(mask,src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_x_v_u16m2_m(vbool8_t mask,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m2_m(mask,src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_x_v_u16m4_m(vbool4_t mask,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m4_m(mask,src,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_x_v_u16m8_m(vbool2_t mask,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m8_m(mask,src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_x_v_u32mf2_m(vbool64_t mask,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32mf2_m(mask,src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_x_v_u32m1_m(vbool32_t mask,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m1_m(mask,src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_x_v_u32m2_m(vbool16_t mask,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m2_m(mask,src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_x_v_u32m4_m(vbool8_t mask,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m4_m(mask,src,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_x_v_u32m8_m(vbool4_t mask,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m8_m(mask,src,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_x_v_u64m1_m(vbool64_t mask,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m1_m(mask,src,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_x_v_u64m2_m(vbool32_t mask,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m2_m(mask,src,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_x_v_u64m4_m(vbool16_t mask,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m4_m(mask,src,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_x_v_u64m8_m(vbool8_t mask,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m8_m(mask,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "96c14911e7c4f186f94db2835bd7d0b50c9bef57", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvtu_x_mu-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_mu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_mu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_mu-1.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_x_v_u16mf4_mu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf4_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_x_v_u16mf2_mu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf2_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_x_v_u16m1_mu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m1_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_x_v_u16m2_mu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m2_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_x_v_u16m4_mu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m4_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_x_v_u16m8_mu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m8_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_x_v_u32mf2_mu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32mf2_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_x_v_u32m1_mu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m1_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_x_v_u32m2_mu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m2_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_x_v_u32m4_mu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m4_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_x_v_u32m8_mu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m8_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_x_v_u64m1_mu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m1_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_x_v_u64m2_mu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m2_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_x_v_u64m4_mu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m4_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_x_v_u64m8_mu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m8_mu(mask,merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "7ce833acebeb73b89b8824b1cdd17c1397119f55", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvtu_x_mu-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_mu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_mu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_mu-2.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_x_v_u16mf4_mu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf4_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_x_v_u16mf2_mu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf2_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_x_v_u16m1_mu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m1_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_x_v_u16m2_mu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m2_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_x_v_u16m4_mu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m4_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_x_v_u16m8_mu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m8_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_x_v_u32mf2_mu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32mf2_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_x_v_u32m1_mu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m1_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_x_v_u32m2_mu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m2_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_x_v_u32m4_mu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m4_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_x_v_u32m8_mu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m8_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_x_v_u64m1_mu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m1_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_x_v_u64m2_mu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m2_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_x_v_u64m4_mu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m4_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_x_v_u64m8_mu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m8_mu(mask,merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "6bc2904cae9c10ec22bb9c9918089cb42f73f2d0", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvtu_x_mu-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_mu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_mu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_mu-3.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_x_v_u16mf4_mu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf4_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_x_v_u16mf2_mu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf2_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_x_v_u16m1_mu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m1_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_x_v_u16m2_mu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m2_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_x_v_u16m4_mu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m4_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_x_v_u16m8_mu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m8_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_x_v_u32mf2_mu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32mf2_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_x_v_u32m1_mu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m1_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_x_v_u32m2_mu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m2_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_x_v_u32m4_mu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m4_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_x_v_u32m8_mu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m8_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_x_v_u64m1_mu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m1_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_x_v_u64m2_mu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m2_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_x_v_u64m4_mu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m4_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_x_v_u64m8_mu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m8_mu(mask,merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "481384ea6cc36231d0d4d5b58289186e69ea39da", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvtu_x_tu-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tu-1.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_x_v_u16mf4_tu(vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf4_tu(merge,src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_x_v_u16mf2_tu(vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf2_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_x_v_u16m1_tu(vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m1_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_x_v_u16m2_tu(vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m2_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_x_v_u16m4_tu(vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m4_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_x_v_u16m8_tu(vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m8_tu(merge,src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_x_v_u32mf2_tu(vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32mf2_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_x_v_u32m1_tu(vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m1_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_x_v_u32m2_tu(vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m2_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_x_v_u32m4_tu(vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m4_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_x_v_u32m8_tu(vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m8_tu(merge,src,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_x_v_u64m1_tu(vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m1_tu(merge,src,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_x_v_u64m2_tu(vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m2_tu(merge,src,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_x_v_u64m4_tu(vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m4_tu(merge,src,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_x_v_u64m8_tu(vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m8_tu(merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "decca0134b96832817b541791f51949487d192ab", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvtu_x_tu-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tu-2.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_x_v_u16mf4_tu(vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf4_tu(merge,src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_x_v_u16mf2_tu(vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf2_tu(merge,src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_x_v_u16m1_tu(vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m1_tu(merge,src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_x_v_u16m2_tu(vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m2_tu(merge,src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_x_v_u16m4_tu(vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m4_tu(merge,src,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_x_v_u16m8_tu(vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m8_tu(merge,src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_x_v_u32mf2_tu(vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32mf2_tu(merge,src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_x_v_u32m1_tu(vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m1_tu(merge,src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_x_v_u32m2_tu(vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m2_tu(merge,src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_x_v_u32m4_tu(vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m4_tu(merge,src,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_x_v_u32m8_tu(vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m8_tu(merge,src,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_x_v_u64m1_tu(vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m1_tu(merge,src,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_x_v_u64m2_tu(vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m2_tu(merge,src,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_x_v_u64m4_tu(vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m4_tu(merge,src,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_x_v_u64m8_tu(vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m8_tu(merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "12956462bc068b9394688be6bd4a8be7d53a92d1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvtu_x_tu-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tu-3.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_x_v_u16mf4_tu(vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf4_tu(merge,src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_x_v_u16mf2_tu(vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf2_tu(merge,src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_x_v_u16m1_tu(vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m1_tu(merge,src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_x_v_u16m2_tu(vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m2_tu(merge,src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_x_v_u16m4_tu(vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m4_tu(merge,src,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_x_v_u16m8_tu(vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m8_tu(merge,src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_x_v_u32mf2_tu(vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32mf2_tu(merge,src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_x_v_u32m1_tu(vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m1_tu(merge,src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_x_v_u32m2_tu(vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m2_tu(merge,src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_x_v_u32m4_tu(vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m4_tu(merge,src,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_x_v_u32m8_tu(vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m8_tu(merge,src,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_x_v_u64m1_tu(vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m1_tu(merge,src,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_x_v_u64m2_tu(vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m2_tu(merge,src,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_x_v_u64m4_tu(vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m4_tu(merge,src,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_x_v_u64m8_tu(vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m8_tu(merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "0c0f513976135a26c9942861044ff32bc1069488", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvtu_x_tum-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tum-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tum-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tum-1.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_x_v_u16mf4_tum(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf4_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_x_v_u16mf2_tum(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf2_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_x_v_u16m1_tum(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m1_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_x_v_u16m2_tum(vbool8_t mask,vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m2_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_x_v_u16m4_tum(vbool4_t mask,vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m4_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_x_v_u16m8_tum(vbool2_t mask,vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m8_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_x_v_u32mf2_tum(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32mf2_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_x_v_u32m1_tum(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m1_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_x_v_u32m2_tum(vbool16_t mask,vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m2_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_x_v_u32m4_tum(vbool8_t mask,vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m4_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_x_v_u32m8_tum(vbool4_t mask,vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m8_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_x_v_u64m1_tum(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m1_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_x_v_u64m2_tum(vbool32_t mask,vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m2_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_x_v_u64m4_tum(vbool16_t mask,vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m4_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_x_v_u64m8_tum(vbool8_t mask,vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m8_tum(mask,merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "37981fedc85c194550c0c83bb91818224bddc3b3", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvtu_x_tum-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tum-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tum-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tum-2.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_x_v_u16mf4_tum(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf4_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_x_v_u16mf2_tum(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf2_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_x_v_u16m1_tum(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m1_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_x_v_u16m2_tum(vbool8_t mask,vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m2_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_x_v_u16m4_tum(vbool4_t mask,vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m4_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_x_v_u16m8_tum(vbool2_t mask,vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m8_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_x_v_u32mf2_tum(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32mf2_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_x_v_u32m1_tum(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m1_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_x_v_u32m2_tum(vbool16_t mask,vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m2_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_x_v_u32m4_tum(vbool8_t mask,vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m4_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_x_v_u32m8_tum(vbool4_t mask,vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m8_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_x_v_u64m1_tum(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m1_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_x_v_u64m2_tum(vbool32_t mask,vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m2_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_x_v_u64m4_tum(vbool16_t mask,vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m4_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_x_v_u64m8_tum(vbool8_t mask,vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m8_tum(mask,merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "9320c6f1c773082bc08d8a07684dc7d29d5fa47f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvtu_x_tum-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tum-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tum-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tum-3.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_x_v_u16mf4_tum(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf4_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_x_v_u16mf2_tum(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf2_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_x_v_u16m1_tum(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m1_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_x_v_u16m2_tum(vbool8_t mask,vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m2_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_x_v_u16m4_tum(vbool4_t mask,vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m4_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_x_v_u16m8_tum(vbool2_t mask,vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m8_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_x_v_u32mf2_tum(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32mf2_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_x_v_u32m1_tum(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m1_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_x_v_u32m2_tum(vbool16_t mask,vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m2_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_x_v_u32m4_tum(vbool8_t mask,vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m4_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_x_v_u32m8_tum(vbool4_t mask,vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m8_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_x_v_u64m1_tum(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m1_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_x_v_u64m2_tum(vbool32_t mask,vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m2_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_x_v_u64m4_tum(vbool16_t mask,vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m4_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_x_v_u64m8_tum(vbool8_t mask,vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m8_tum(mask,merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "aaf285c333c745df80d6ad836df5a4df6fe74e94", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvtu_x_tumu-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tumu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tumu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tumu-1.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_x_v_u16mf4_tumu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf4_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_x_v_u16mf2_tumu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf2_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_x_v_u16m1_tumu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m1_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_x_v_u16m2_tumu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m2_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_x_v_u16m4_tumu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m4_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_x_v_u16m8_tumu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m8_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_x_v_u32mf2_tumu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32mf2_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_x_v_u32m1_tumu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m1_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_x_v_u32m2_tumu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m2_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_x_v_u32m4_tumu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m4_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_x_v_u32m8_tumu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m8_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_x_v_u64m1_tumu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m1_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_x_v_u64m2_tumu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m2_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_x_v_u64m4_tumu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m4_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_x_v_u64m8_tumu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m8_tumu(mask,merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "4acf2a0c1597fcbdf8e7b4230ee6ac463e354bd4", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvtu_x_tumu-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tumu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tumu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tumu-2.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_x_v_u16mf4_tumu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf4_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_x_v_u16mf2_tumu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf2_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_x_v_u16m1_tumu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m1_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_x_v_u16m2_tumu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m2_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_x_v_u16m4_tumu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m4_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_x_v_u16m8_tumu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m8_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_x_v_u32mf2_tumu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32mf2_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_x_v_u32m1_tumu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m1_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_x_v_u32m2_tumu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m2_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_x_v_u32m4_tumu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m4_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_x_v_u32m8_tumu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m8_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_x_v_u64m1_tumu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m1_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_x_v_u64m2_tumu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m2_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_x_v_u64m4_tumu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m4_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_x_v_u64m8_tumu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m8_tumu(mask,merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "05dbe8434054dd4504a51edf112187d2561ee76d", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwcvtu_x_tumu-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tumu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ec88dd2ba2bc065c678cf20431e11dc33a531/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tumu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tumu-3.c?ref=011ec88dd2ba2bc065c678cf20431e11dc33a531", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_x_v_u16mf4_tumu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf4_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_x_v_u16mf2_tumu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16mf2_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_x_v_u16m1_tumu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m1_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_x_v_u16m2_tumu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m2_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_x_v_u16m4_tumu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m4_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_x_v_u16m8_tumu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u16m8_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_x_v_u32mf2_tumu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32mf2_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_x_v_u32m1_tumu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m1_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_x_v_u32m2_tumu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m2_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_x_v_u32m4_tumu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m4_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_x_v_u32m8_tumu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u32m8_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_x_v_u64m1_tumu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m1_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_x_v_u64m2_tumu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m2_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_x_v_u64m4_tumu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m4_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_x_v_u64m8_tumu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_x_v_u64m8_tumu(mask,merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}]}