{"sha": "cdb1c276560b26a9c3bc837340669962ef1b430a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RiMWMyNzY1NjBiMjZhOWMzYmM4MzczNDA2Njk5NjJlZjFiNDMwYQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2020-12-16T20:16:06Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2020-12-16T20:22:04Z"}, "message": "testsuite: Adjust expected instruction count for PPC fold testcases.\n\ncommit r11-5958 changed the code generation for the vector logical fold\ntests.  This patch updates the expected instruction counts for different\ninstructions.\n\ngcc/testsuite/ChangeLog:\n\n2020-12-16  David Edelsohn  <dje.gcc@gmail.com>\n\n\tPR target/98280\n\t* gcc.target/powerpc/fold-vec-logical-ors-char.c: Adjust count.\n\t* gcc.target/powerpc/fold-vec-logical-ors-int.c: Adjust count.\n\t* gcc.target/powerpc/fold-vec-logical-ors-longlong.c: Adjust count.\n\t* gcc.target/powerpc/fold-vec-logical-ors-short.c: Adjust count.\n\t* gcc.target/powerpc/fold-vec-logical-other-char.c: Adjust count.\n\t* gcc.target/powerpc/fold-vec-logical-other-int.c: Adjust count.\n\t* gcc.target/powerpc/fold-vec-logical-other-longlong.c: Adjust count.\n\t* gcc.target/powerpc/fold-vec-logical-other-short.c: Adjust count.", "tree": {"sha": "9fc9b71478c0e32e493de2ce7f4dc062d102e175", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fc9b71478c0e32e493de2ce7f4dc062d102e175"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cdb1c276560b26a9c3bc837340669962ef1b430a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdb1c276560b26a9c3bc837340669962ef1b430a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdb1c276560b26a9c3bc837340669962ef1b430a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdb1c276560b26a9c3bc837340669962ef1b430a/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7b6879f0b5c2a40779df50651d20bd39d89bcc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7b6879f0b5c2a40779df50651d20bd39d89bcc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7b6879f0b5c2a40779df50651d20bd39d89bcc5"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "713fed7824a004e96e1a04c6b977ffd704f1c33e", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-logical-ors-char.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb1c276560b26a9c3bc837340669962ef1b430a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb1c276560b26a9c3bc837340669962ef1b430a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-char.c?ref=cdb1c276560b26a9c3bc837340669962ef1b430a", "patch": "@@ -120,6 +120,6 @@ test6_nor (vector unsigned char x, vector unsigned char y)\n   return *foo;\n }\n \n-/* { dg-final { scan-assembler-times {\\mxxlor\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mxxlor\\M} 7 } } */\n /* { dg-final { scan-assembler-times {\\mxxlxor\\M} 6 } } */\n-/* { dg-final { scan-assembler-times {\\mxxlnor\\M} 2 } } */\n+/* { dg-final { scan-assembler-times {\\mxxlnor\\M} 1 } } */"}, {"sha": "4d1c78f40ecac0cd17d4aeee36200c68abb912c5", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-logical-ors-int.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb1c276560b26a9c3bc837340669962ef1b430a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb1c276560b26a9c3bc837340669962ef1b430a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-int.c?ref=cdb1c276560b26a9c3bc837340669962ef1b430a", "patch": "@@ -119,6 +119,6 @@ test6_nor (vector unsigned int x, vector unsigned int y)\n   return *foo;\n }\n \n-/* { dg-final { scan-assembler-times {\\mxxlor\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mxxlor\\M} 7 } } */\n /* { dg-final { scan-assembler-times {\\mxxlxor\\M} 6 } } */\n-/* { dg-final { scan-assembler-times {\\mxxlnor\\M} 2 } } */\n+/* { dg-final { scan-assembler-times {\\mxxlnor\\M} 1 } } */"}, {"sha": "27ef09ada801bd45f4eed92db0ac02ae4ea53dde", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-logical-ors-longlong.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb1c276560b26a9c3bc837340669962ef1b430a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-longlong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb1c276560b26a9c3bc837340669962ef1b430a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-longlong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-longlong.c?ref=cdb1c276560b26a9c3bc837340669962ef1b430a", "patch": "@@ -156,6 +156,6 @@ test6_nor (vector unsigned long long x, vector unsigned long long y)\n // For simplicity, this test now only targets \"powerpc_p8vector_ok\" environments\n // where the answer is expected to be 6.\n \n-/* { dg-final { scan-assembler-times {\\mxxlor\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mxxlor\\M} 9 } } */\n /* { dg-final { scan-assembler-times {\\mxxlxor\\M} 6 } } */\n-/* { dg-final { scan-assembler-times {\\mxxlnor\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mxxlnor\\M} 3 } } */"}, {"sha": "f796c5b33a9cb39bd38b409db4270dfda84389e8", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-logical-ors-short.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb1c276560b26a9c3bc837340669962ef1b430a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb1c276560b26a9c3bc837340669962ef1b430a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-ors-short.c?ref=cdb1c276560b26a9c3bc837340669962ef1b430a", "patch": "@@ -119,6 +119,6 @@ test6_nor (vector unsigned short x, vector unsigned short y)\n   return *foo;\n }\n \n-/* { dg-final { scan-assembler-times {\\mxxlor\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mxxlor\\M} 7 } } */\n /* { dg-final { scan-assembler-times {\\mxxlxor\\M} 6 } } */\n-/* { dg-final { scan-assembler-times {\\mxxlnor\\M} 2 } } */\n+/* { dg-final { scan-assembler-times {\\mxxlnor\\M} 1 } } */"}, {"sha": "e74308ccda29ca56931320cd1f5859eeb4ccbc89", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-logical-other-char.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb1c276560b26a9c3bc837340669962ef1b430a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-other-char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb1c276560b26a9c3bc837340669962ef1b430a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-other-char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-other-char.c?ref=cdb1c276560b26a9c3bc837340669962ef1b430a", "patch": "@@ -104,5 +104,5 @@ test6_nand (vector unsigned char x, vector unsigned char y)\n   return *foo;\n }\n \n-/* { dg-final { scan-assembler-times {\\mxxlnand\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mxxlnand\\M} 3 } } */\n /* { dg-final { scan-assembler-times {\\mxxlorc\\M} 6 } } */"}, {"sha": "57edaad52a8a949f9992c0f69f7b1499b2424d30", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-logical-other-int.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb1c276560b26a9c3bc837340669962ef1b430a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-other-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb1c276560b26a9c3bc837340669962ef1b430a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-other-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-other-int.c?ref=cdb1c276560b26a9c3bc837340669962ef1b430a", "patch": "@@ -104,5 +104,5 @@ test6_nand (vector unsigned int x, vector unsigned int y)\n   return *foo;\n }\n \n-/* { dg-final { scan-assembler-times {\\mxxlnand\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mxxlnand\\M} 3 } } */\n /* { dg-final { scan-assembler-times {\\mxxlorc\\M} 6 } } */"}, {"sha": "d4b85796406bcc7a3e2ba8e977fa31552a2f4d34", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-logical-other-longlong.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb1c276560b26a9c3bc837340669962ef1b430a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-other-longlong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb1c276560b26a9c3bc837340669962ef1b430a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-other-longlong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-other-longlong.c?ref=cdb1c276560b26a9c3bc837340669962ef1b430a", "patch": "@@ -102,5 +102,5 @@ test6_nand (vector unsigned long long x, vector unsigned long long y)\n   return *foo;\n }\n \n+/* { dg-final { scan-assembler-times {\\mxxlnand\\M} 3 } } */\n /* { dg-final { scan-assembler-times {\\mxxlorc\\M} 6 } } */\n-/* { dg-final { scan-assembler-times {\\mxxlnand\\M} 6 } } */"}, {"sha": "bf98652750c833484bf3a8884188f76a470c26e4", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-logical-other-short.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdb1c276560b26a9c3bc837340669962ef1b430a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-other-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdb1c276560b26a9c3bc837340669962ef1b430a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-other-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-logical-other-short.c?ref=cdb1c276560b26a9c3bc837340669962ef1b430a", "patch": "@@ -104,5 +104,5 @@ test6_nand (vector unsigned short x, vector unsigned short y)\n   return *foo;\n }\n \n-/* { dg-final { scan-assembler-times {\\mxxlnand\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mxxlnand\\M} 3 } } */\n /* { dg-final { scan-assembler-times {\\mxxlorc\\M} 6 } } */"}]}