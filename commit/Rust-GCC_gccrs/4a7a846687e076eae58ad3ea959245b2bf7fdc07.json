{"sha": "4a7a846687e076eae58ad3ea959245b2bf7fdc07", "node_id": "C_kwDOANBUbNoAKDRhN2E4NDY2ODdlMDc2ZWFlNThhZDNlYTk1OTI0NWIyYmY3ZmRjMDc", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-11-15T07:14:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-11-15T07:14:45Z"}, "message": "libatomic: Handle AVX+CX16 AMD like Intel for 16b atomics [PR104688]\n\nWe got a response from AMD in\nhttps://gcc.gnu.org/bugzilla/show_bug.cgi?id=104688#c10\nso the following patch starts treating AMD with AVX and CMPXCHG16B\nISAs like Intel by using vmovdqa for atomic load/store in libatomic.\nWe still don't have confirmation from Zhaoxin and VIA (anything else\nwith CPUs featuring AVX and CX16?).\n\n2022-11-15  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/104688\n\t* config/x86/init.c (__libat_feat1_init): Don't clear\n\tbit_AVX on AMD CPUs.", "tree": {"sha": "4fd2d998cea2d0f56ef21f6297d55e1af8f42066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fd2d998cea2d0f56ef21f6297d55e1af8f42066"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a7a846687e076eae58ad3ea959245b2bf7fdc07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a7a846687e076eae58ad3ea959245b2bf7fdc07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a7a846687e076eae58ad3ea959245b2bf7fdc07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a7a846687e076eae58ad3ea959245b2bf7fdc07/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cf165de63c5d2726bba9f0809a233bd63b84842", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cf165de63c5d2726bba9f0809a233bd63b84842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cf165de63c5d2726bba9f0809a233bd63b84842"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "10e1c5f5dbb18854ab595bc1c9e90e943600c990", "filename": "libatomic/config/x86/init.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a7a846687e076eae58ad3ea959245b2bf7fdc07/libatomic%2Fconfig%2Fx86%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a7a846687e076eae58ad3ea959245b2bf7fdc07/libatomic%2Fconfig%2Fx86%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfig%2Fx86%2Finit.c?ref=4a7a846687e076eae58ad3ea959245b2bf7fdc07", "patch": "@@ -39,10 +39,12 @@ __libat_feat1_init (void)\n       == (bit_AVX | bit_CMPXCHG16B))\n     {\n       /* Intel SDM guarantees that 16-byte VMOVDQA on 16-byte aligned address\n-\t is atomic, but so far we don't have this guarantee from AMD.  */\n+\t is atomic, and AMD is going to do something similar soon.\n+\t We don't have a guarantee from vendors of other CPUs with AVX,\n+\t like Zhaoxin and VIA.  */\n       unsigned int ecx2 = 0;\n       __get_cpuid (0, &eax, &ebx, &ecx2, &edx);\n-      if (ecx2 != signature_INTEL_ecx)\n+      if (ecx2 != signature_INTEL_ecx && ecx2 != signature_AMD_ecx)\n \tFEAT1_REGISTER &= ~bit_AVX;\n     }\n #endif"}]}