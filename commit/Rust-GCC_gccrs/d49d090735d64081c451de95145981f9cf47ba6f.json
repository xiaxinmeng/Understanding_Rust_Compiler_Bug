{"sha": "d49d090735d64081c451de95145981f9cf47ba6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ5ZDA5MDczNWQ2NDA4MWM0NTFkZTk1MTQ1OTgxZjljZjQ3YmE2Zg==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2004-12-10T21:25:00Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2004-12-10T21:25:00Z"}, "message": "fibheap.h (struct fibnode): Only use unsigned long bitfields when __GNUC__ is defined and ints are less...\n\n[include]\n\t* fibheap.h (struct fibnode): Only use unsigned long bitfields\n\twhen __GNUC__ is defined and ints are less than 32-bits wide.\n[libiberty]\n\t* configure.ac: Invoke AC_CHECK_SIZEOF for sizeof (int).\n\t* configure: Regenerate.\n\t* config.in: Likewise.\n\nFrom-SVN: r92009", "tree": {"sha": "2fdc9b1c9e88cdb423dd4e3adb701600864fb2bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fdc9b1c9e88cdb423dd4e3adb701600864fb2bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d49d090735d64081c451de95145981f9cf47ba6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d49d090735d64081c451de95145981f9cf47ba6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d49d090735d64081c451de95145981f9cf47ba6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d49d090735d64081c451de95145981f9cf47ba6f/comments", "author": null, "committer": null, "parents": [{"sha": "da0e2953e4712ceff5b9e51119c9389ea13d66c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da0e2953e4712ceff5b9e51119c9389ea13d66c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da0e2953e4712ceff5b9e51119c9389ea13d66c2"}], "stats": {"total": 427, "additions": 426, "deletions": 1}, "files": [{"sha": "0a8c6016cea3659399d0168778c77b02514997b4", "filename": "include/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d49d090735d64081c451de95145981f9cf47ba6f/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d49d090735d64081c451de95145981f9cf47ba6f/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=d49d090735d64081c451de95145981f9cf47ba6f", "patch": "@@ -1,3 +1,8 @@\n+2004-12-11  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* fibheap.h (struct fibnode): Only use unsigned long bitfields\n+\twhen __GNUC__ is defined and ints are less than 32-bits wide.\n+\n 2004-10-07  Bob Wilson  <bob.wilson@acm.org>\n \n \t* xtensa-config.h (XSHAL_USE_ABSOLUTE_LITERALS,"}, {"sha": "e1e843ddbb18b711a09846497b0524f11530f9f9", "filename": "include/fibheap.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d49d090735d64081c451de95145981f9cf47ba6f/include%2Ffibheap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d49d090735d64081c451de95145981f9cf47ba6f/include%2Ffibheap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Ffibheap.h?ref=d49d090735d64081c451de95145981f9cf47ba6f", "patch": "@@ -59,7 +59,7 @@ typedef struct fibnode\n   struct fibnode *right;\n   fibheapkey_t key;\n   void *data;\n-#ifdef __GNUC__\n+#if defined (__GNUC__) && (!defined (SIZEOF_INT) || SIZEOF_INT < 4)\n   __extension__ unsigned long int degree : 31;\n   __extension__ unsigned long int mark : 1;\n #else"}, {"sha": "f1b86762272b5545cff8abcd81ec37e16e0f5627", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d49d090735d64081c451de95145981f9cf47ba6f/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d49d090735d64081c451de95145981f9cf47ba6f/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=d49d090735d64081c451de95145981f9cf47ba6f", "patch": "@@ -1,3 +1,9 @@\n+2004-12-11  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* configure.ac: Invoke AC_CHECK_SIZEOF for sizeof (int).\n+\t* configure: Regenerate.\n+\t* config.in: Likewise.\n+\n 2004-12-07  DJ Delorie  <dj@redhat.com>\n \n \t* splay-tree.c (splay_tree_delete_helper): Redesign the logic so"}, {"sha": "2b57d29f39e7f9644d4b9fe0ae45cb15e0c96f84", "filename": "libiberty/config.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d49d090735d64081c451de95145981f9cf47ba6f/libiberty%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d49d090735d64081c451de95145981f9cf47ba6f/libiberty%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfig.in?ref=d49d090735d64081c451de95145981f9cf47ba6f", "patch": "@@ -341,6 +341,9 @@\n /* Define to the version of this package. */\n #undef PACKAGE_VERSION\n \n+/* The size of a `int', as computed by sizeof. */\n+#undef SIZEOF_INT\n+\n /* Define if you know the direction of stack growth for your system; otherwise\n    it will be automatically deduced at run-time. STACK_DIRECTION > 0 => grows\n    toward higher addresses STACK_DIRECTION < 0 => grows toward lower addresses"}, {"sha": "fc461eb3d5e7b304546f1ea858f8c42ef8dc3f51", "filename": "libiberty/configure", "status": "modified", "additions": 408, "deletions": 0, "changes": 408, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d49d090735d64081c451de95145981f9cf47ba6f/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d49d090735d64081c451de95145981f9cf47ba6f/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=d49d090735d64081c451de95145981f9cf47ba6f", "patch": "@@ -3779,6 +3779,7 @@ _ACEOF\n fi\n \n \n+# Determine the size of an int for struct fibnode.\n echo \"$as_me:$LINENO: checking for egrep\" >&5\n echo $ECHO_N \"checking for egrep... $ECHO_C\" >&6\n if test \"${ac_cv_prog_egrep+set}\" = set; then\n@@ -4024,6 +4025,413 @@ fi\n done\n \n \n+echo \"$as_me:$LINENO: checking for int\" >&5\n+echo $ECHO_N \"checking for int... $ECHO_C\" >&6\n+if test \"${ac_cv_type_int+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+$ac_includes_default\n+int\n+main ()\n+{\n+if ((int *) 0)\n+  return 0;\n+if (sizeof (int))\n+  return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_type_int=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_type_int=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_type_int\" >&5\n+echo \"${ECHO_T}$ac_cv_type_int\" >&6\n+\n+echo \"$as_me:$LINENO: checking size of int\" >&5\n+echo $ECHO_N \"checking size of int... $ECHO_C\" >&6\n+if test \"${ac_cv_sizeof_int+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test \"$ac_cv_type_int\" = yes; then\n+  # The cast to unsigned long works around a bug in the HP C Compiler\n+  # version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n+  # declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n+  # This bug is HP SR number 8606223364.\n+  if test \"$cross_compiling\" = yes; then\n+  # Depending upon the size, compute the lo and hi bounds.\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+$ac_includes_default\n+int\n+main ()\n+{\n+static int test_array [1 - 2 * !(((long) (sizeof (int))) >= 0)];\n+test_array [0] = 0\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_lo=0 ac_mid=0\n+  while :; do\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+$ac_includes_default\n+int\n+main ()\n+{\n+static int test_array [1 - 2 * !(((long) (sizeof (int))) <= $ac_mid)];\n+test_array [0] = 0\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_hi=$ac_mid; break\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_lo=`expr $ac_mid + 1`\n+\t\t    if test $ac_lo -le $ac_mid; then\n+\t\t      ac_lo= ac_hi=\n+\t\t      break\n+\t\t    fi\n+\t\t    ac_mid=`expr 2 '*' $ac_mid + 1`\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+  done\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+$ac_includes_default\n+int\n+main ()\n+{\n+static int test_array [1 - 2 * !(((long) (sizeof (int))) < 0)];\n+test_array [0] = 0\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_hi=-1 ac_mid=-1\n+  while :; do\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+$ac_includes_default\n+int\n+main ()\n+{\n+static int test_array [1 - 2 * !(((long) (sizeof (int))) >= $ac_mid)];\n+test_array [0] = 0\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_lo=$ac_mid; break\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_hi=`expr '(' $ac_mid ')' - 1`\n+\t\t       if test $ac_mid -le $ac_hi; then\n+\t\t\t ac_lo= ac_hi=\n+\t\t\t break\n+\t\t       fi\n+\t\t       ac_mid=`expr 2 '*' $ac_mid`\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+  done\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_lo= ac_hi=\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+# Binary search between lo and hi bounds.\n+while test \"x$ac_lo\" != \"x$ac_hi\"; do\n+  ac_mid=`expr '(' $ac_hi - $ac_lo ')' / 2 + $ac_lo`\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+$ac_includes_default\n+int\n+main ()\n+{\n+static int test_array [1 - 2 * !(((long) (sizeof (int))) <= $ac_mid)];\n+test_array [0] = 0\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_hi=$ac_mid\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_lo=`expr '(' $ac_mid ')' + 1`\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+done\n+case $ac_lo in\n+?*) ac_cv_sizeof_int=$ac_lo;;\n+'') { { echo \"$as_me:$LINENO: error: cannot compute sizeof (int), 77\n+See \\`config.log' for more details.\" >&5\n+echo \"$as_me: error: cannot compute sizeof (int), 77\n+See \\`config.log' for more details.\" >&2;}\n+   { (exit 1); exit 1; }; } ;;\n+esac\n+else\n+  if test \"$cross_compiling\" = yes; then\n+  { { echo \"$as_me:$LINENO: error: internal error: not reached in cross-compile\" >&5\n+echo \"$as_me: error: internal error: not reached in cross-compile\" >&2;}\n+   { (exit 1); exit 1; }; }\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+$ac_includes_default\n+long longval () { return (long) (sizeof (int)); }\n+unsigned long ulongval () { return (long) (sizeof (int)); }\n+#include <stdio.h>\n+#include <stdlib.h>\n+int\n+main ()\n+{\n+\n+  FILE *f = fopen (\"conftest.val\", \"w\");\n+  if (! f)\n+    exit (1);\n+  if (((long) (sizeof (int))) < 0)\n+    {\n+      long i = longval ();\n+      if (i != ((long) (sizeof (int))))\n+\texit (1);\n+      fprintf (f, \"%ld\\n\", i);\n+    }\n+  else\n+    {\n+      unsigned long i = ulongval ();\n+      if (i != ((long) (sizeof (int))))\n+\texit (1);\n+      fprintf (f, \"%lu\\n\", i);\n+    }\n+  exit (ferror (f) || fclose (f) != 0);\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_sizeof_int=`cat conftest.val`\n+else\n+  echo \"$as_me: program exited with status $ac_status\" >&5\n+echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+( exit $ac_status )\n+{ { echo \"$as_me:$LINENO: error: cannot compute sizeof (int), 77\n+See \\`config.log' for more details.\" >&5\n+echo \"$as_me: error: cannot compute sizeof (int), 77\n+See \\`config.log' for more details.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n+fi\n+fi\n+rm -f conftest.val\n+else\n+  ac_cv_sizeof_int=0\n+fi\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_sizeof_int\" >&5\n+echo \"${ECHO_T}$ac_cv_sizeof_int\" >&6\n+cat >>confdefs.h <<_ACEOF\n+#define SIZEOF_INT $ac_cv_sizeof_int\n+_ACEOF\n+\n+\n+\n echo \"$as_me:$LINENO: checking for uintptr_t\" >&5\n echo $ECHO_N \"checking for uintptr_t... $ECHO_C\" >&6\n if test \"${ac_cv_type_uintptr_t+set}\" = set; then"}, {"sha": "650faee115a9136b0d99f981cf99d52510077af5", "filename": "libiberty/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d49d090735d64081c451de95145981f9cf47ba6f/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d49d090735d64081c451de95145981f9cf47ba6f/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=d49d090735d64081c451de95145981f9cf47ba6f", "patch": "@@ -165,6 +165,9 @@ AC_HEADER_TIME\n \n libiberty_AC_DECLARE_ERRNO\n \n+# Determine the size of an int for struct fibnode.\n+AC_CHECK_SIZEOF([int])\n+\n AC_CHECK_TYPE(uintptr_t, unsigned long)\n \n # Look for a 64-bit type."}]}