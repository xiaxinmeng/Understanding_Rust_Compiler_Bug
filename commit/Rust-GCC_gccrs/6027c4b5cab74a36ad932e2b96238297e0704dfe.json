{"sha": "6027c4b5cab74a36ad932e2b96238297e0704dfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAyN2M0YjVjYWI3NGEzNmFkOTMyZTJiOTYyMzgyOTdlMDcwNGRmZQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2017-01-11T16:13:14Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2017-01-11T16:13:14Z"}, "message": "[ARM] PR target/78253 Call weak function instead of strong when called through pointer.\n\n2017-01-11  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tPR target/78253\n\t* config/arm/arm.c (legitimize_pic_address): Handle reference to\n\tweak symbol.\n\t(arm_assemble_integer): Likewise.\n\nFrom-SVN: r244320", "tree": {"sha": "cc956dfc3dd7565f4f37165f67865b0acbf5edc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc956dfc3dd7565f4f37165f67865b0acbf5edc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6027c4b5cab74a36ad932e2b96238297e0704dfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6027c4b5cab74a36ad932e2b96238297e0704dfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6027c4b5cab74a36ad932e2b96238297e0704dfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6027c4b5cab74a36ad932e2b96238297e0704dfe/comments", "author": null, "committer": null, "parents": [{"sha": "b744bf4e18d4c1422cdffbfeed30490252b3f64e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b744bf4e18d4c1422cdffbfeed30490252b3f64e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b744bf4e18d4c1422cdffbfeed30490252b3f64e"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "1f7edd6c23a56e4f746e5ea3d71f15115dc6592b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6027c4b5cab74a36ad932e2b96238297e0704dfe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6027c4b5cab74a36ad932e2b96238297e0704dfe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6027c4b5cab74a36ad932e2b96238297e0704dfe", "patch": "@@ -1,3 +1,10 @@\n+2017-01-11  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\tPR target/78253\n+\t* config/arm/arm.c (legitimize_pic_address): Handle reference to\n+\tweak symbol.\n+\t(arm_assemble_integer): Likewise.\n+\n 2017-01-11  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* config.gcc: Use new awk script to check CPU, FPU and architecture"}, {"sha": "96777f00137ea1047011719202c7eb4bb28cda2d", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6027c4b5cab74a36ad932e2b96238297e0704dfe/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6027c4b5cab74a36ad932e2b96238297e0704dfe/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=6027c4b5cab74a36ad932e2b96238297e0704dfe", "patch": "@@ -7269,10 +7269,14 @@ legitimize_pic_address (rtx orig, machine_mode mode, rtx reg)\n \t same segment as the GOT.  Unfortunately, the flexibility of linker\n \t scripts means that we can't be sure of that in general, so assume\n \t that GOTOFF is never valid on VxWorks.  */\n+      /* References to weak symbols cannot be resolved locally: they\n+\t may be overridden by a non-weak definition at link time.  */\n       rtx_insn *insn;\n       if ((GET_CODE (orig) == LABEL_REF\n-\t   || (GET_CODE (orig) == SYMBOL_REF &&\n-\t       SYMBOL_REF_LOCAL_P (orig)))\n+\t   || (GET_CODE (orig) == SYMBOL_REF\n+\t       && SYMBOL_REF_LOCAL_P (orig)\n+\t       && (SYMBOL_REF_DECL (orig)\n+\t\t   ? !DECL_WEAK (SYMBOL_REF_DECL (orig)) : 1)))\n \t  && NEED_GOT_RELOC\n \t  && arm_pic_data_is_text_relative)\n \tinsn = arm_pic_static_addr (orig, reg);\n@@ -22475,8 +22479,14 @@ arm_assemble_integer (rtx x, unsigned int size, int aligned_p)\n \t{\n \t  /* See legitimize_pic_address for an explanation of the\n \t     TARGET_VXWORKS_RTP check.  */\n+\t  /* References to weak symbols cannot be resolved locally:\n+\t     they may be overridden by a non-weak definition at link\n+\t     time.  */\n \t  if (!arm_pic_data_is_text_relative\n-\t      || (GET_CODE (x) == SYMBOL_REF && !SYMBOL_REF_LOCAL_P (x)))\n+\t      || (GET_CODE (x) == SYMBOL_REF\n+\t\t  && (!SYMBOL_REF_LOCAL_P (x)\n+\t\t      || (SYMBOL_REF_DECL (x)\n+\t\t\t  ? DECL_WEAK (SYMBOL_REF_DECL (x)) : 0))))\n \t    fputs (\"(GOT)\", asm_out_file);\n \t  else\n \t    fputs (\"(GOTOFF)\", asm_out_file);"}]}