{"sha": "ecbffdd88f3f073ded32f1cd632dfb1bfc5d7c38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNiZmZkZDg4ZjNmMDczZGVkMzJmMWNkNjMyZGZiMWJmYzVkN2MzOA==", "commit": {"author": {"name": "Trevor Saunders", "email": "tsaunders@mozilla.com", "date": "2013-11-05T13:51:32Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2013-11-05T13:51:32Z"}, "message": "don't try and free what must be a null vector when reserving 0 elements\nin va_heap::reserve\n\n2013-11-05  Trevor Saunders  <tsaunders@mozilla.com>\n\n\t* vec.c (vec_prefix::calculate_allocation): Don't try to handle the\n\tcase of no prefix and reserving zero slots, because when that's the\n\tcase we'll never get here.\n\t* vec.h (va_heap::reserve): Don't try and handle\n\tvec_prefix::calculate_allocation returning zero because that should\n\tnever happen.\n\nFrom-SVN: r204392", "tree": {"sha": "57b2f9ccac9f133f2af4e7f3a1e02c3ad7587f55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57b2f9ccac9f133f2af4e7f3a1e02c3ad7587f55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecbffdd88f3f073ded32f1cd632dfb1bfc5d7c38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecbffdd88f3f073ded32f1cd632dfb1bfc5d7c38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecbffdd88f3f073ded32f1cd632dfb1bfc5d7c38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecbffdd88f3f073ded32f1cd632dfb1bfc5d7c38/comments", "author": null, "committer": null, "parents": [{"sha": "4f94d87c6171d472fb8f6d2cf0d572d0bd8ebeee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f94d87c6171d472fb8f6d2cf0d572d0bd8ebeee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f94d87c6171d472fb8f6d2cf0d572d0bd8ebeee"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "e388ec9660d961637aab181bd2435afd1006d8e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecbffdd88f3f073ded32f1cd632dfb1bfc5d7c38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecbffdd88f3f073ded32f1cd632dfb1bfc5d7c38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ecbffdd88f3f073ded32f1cd632dfb1bfc5d7c38", "patch": "@@ -1,3 +1,12 @@\n+2013-11-05  Trevor Saunders  <tsaunders@mozilla.com>\n+\n+\t* vec.c (vec_prefix::calculate_allocation): Don't try to handle the\n+\tcase of no prefix and reserving zero slots, because when that's the\n+\tcase we'll never get here.\n+\t* vec.h (va_heap::reserve): Don't try and handle\n+\tvec_prefix::calculate_allocation returning zero because that should\n+\tnever happen.\n+\n 2013-11-05  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/58941"}, {"sha": "78252e0d0887df079b3461fb6947ee518d628231", "filename": "gcc/vec.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecbffdd88f3f073ded32f1cd632dfb1bfc5d7c38/gcc%2Fvec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecbffdd88f3f073ded32f1cd632dfb1bfc5d7c38/gcc%2Fvec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.c?ref=ecbffdd88f3f073ded32f1cd632dfb1bfc5d7c38", "patch": "@@ -187,9 +187,7 @@ vec_prefix::calculate_allocation (vec_prefix *pfx, unsigned reserve,\n       num = pfx->m_num;\n     }\n   else if (!reserve)\n-    /* If there's no vector, and we've not requested anything, then we\n-       will create a NULL vector.  */\n-    return 0;\n+    gcc_unreachable ();\n \n   /* We must have run out of room.  */\n   gcc_assert (alloc - num < reserve);"}, {"sha": "b1ebda44f5e17049d9f27da7f4523191a3b86f5c", "filename": "gcc/vec.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecbffdd88f3f073ded32f1cd632dfb1bfc5d7c38/gcc%2Fvec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecbffdd88f3f073ded32f1cd632dfb1bfc5d7c38/gcc%2Fvec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.h?ref=ecbffdd88f3f073ded32f1cd632dfb1bfc5d7c38", "patch": "@@ -283,11 +283,7 @@ va_heap::reserve (vec<T, va_heap, vl_embed> *&v, unsigned reserve, bool exact\n {\n   unsigned alloc\n     = vec_prefix::calculate_allocation (v ? &v->m_vecpfx : 0, reserve, exact);\n-  if (!alloc)\n-    {\n-      release (v);\n-      return;\n-    }\n+  gcc_assert (alloc);\n \n   if (GATHER_STATISTICS && v)\n     v->m_vecpfx.release_overhead ();"}]}