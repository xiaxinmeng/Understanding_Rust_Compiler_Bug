{"sha": "f6d1b84aa4526d360d77c795167cfb217da89e65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZkMWI4NGFhNDUyNmQzNjBkNzdjNzk1MTY3Y2ZiMjE3ZGE4OWU2NQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-09-13T14:18:47Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-09-13T14:18:47Z"}, "message": "cgraphunit.c (cgraph_assemble_pending_functions): Export.\n\n        * cgraphunit.c (cgraph_assemble_pending_functions): Export.\n        (cgraph_finalize_function): Revert TREE_ASM_WRITTEN check.\n        * cgraph.h: Update.\n\n        * decl2.c (finish_file): Check cgraph_assemble_pending_functions\n        during relaxation loop.\n\nFrom-SVN: r71360", "tree": {"sha": "b69aa15ca9ee08567dcb3105ff151e820b8dc09a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b69aa15ca9ee08567dcb3105ff151e820b8dc09a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6d1b84aa4526d360d77c795167cfb217da89e65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6d1b84aa4526d360d77c795167cfb217da89e65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6d1b84aa4526d360d77c795167cfb217da89e65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6d1b84aa4526d360d77c795167cfb217da89e65/comments", "author": null, "committer": null, "parents": [{"sha": "8daf2e652621464650af1fce25f1a9f86b2f39a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8daf2e652621464650af1fce25f1a9f86b2f39a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8daf2e652621464650af1fce25f1a9f86b2f39a7"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "aec351d0ab24d3a26032e2aa32ac0b96ca8b1970", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d1b84aa4526d360d77c795167cfb217da89e65/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d1b84aa4526d360d77c795167cfb217da89e65/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6d1b84aa4526d360d77c795167cfb217da89e65", "patch": "@@ -1,4 +1,11 @@\n+2003-09-13  Richard Henderson  <rth@redhat.com>\n+\n+\t* cgraphunit.c (cgraph_assemble_pending_functions): Export.\n+\t(cgraph_finalize_function): Revert TREE_ASM_WRITTEN check.\n+\t* cgraph.h: Update.\n+\n 2003-09-12  Dale Johannesen  <dalej@apple.com>\n+\n \t* config/rs6000/rs6000.c: Fix typos in previous.\n \n 2003-09-12  Ziemowit Laski  <zlaski@apple.com>"}, {"sha": "eb747d57d374d4d372f92f1a4e8639494c9ee848", "filename": "gcc/cgraph.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d1b84aa4526d360d77c795167cfb217da89e65/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d1b84aa4526d360d77c795167cfb217da89e65/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=f6d1b84aa4526d360d77c795167cfb217da89e65", "patch": "@@ -168,6 +168,7 @@ void cgraph_varpool_finalize_decl (tree);\n bool cgraph_varpool_assemble_pending_decls (void);\n \n /* In cgraphunit.c  */\n+bool cgraph_assemble_pending_functions (void);\n void cgraph_finalize_function (tree, bool);\n void cgraph_finalize_compilation_unit (void);\n void cgraph_create_edges (tree, tree);"}, {"sha": "f615d1bafa4312622463d3c901b88bc4f4c320c8", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d1b84aa4526d360d77c795167cfb217da89e65/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d1b84aa4526d360d77c795167cfb217da89e65/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=f6d1b84aa4526d360d77c795167cfb217da89e65", "patch": "@@ -122,7 +122,8 @@ decide_is_function_needed (struct cgraph_node *node, tree decl)\n \n /* When not doing unit-at-a-time, output all functions enqueued.\n    Return true when such a functions were found.  */\n-static bool\n+\n+bool\n cgraph_assemble_pending_functions (void)\n {\n   bool output = false;\n@@ -136,9 +137,12 @@ cgraph_assemble_pending_functions (void)\n \n       cgraph_nodes_queue = cgraph_nodes_queue->next_needed;\n       if (!n->origin && !DECL_EXTERNAL (n->decl))\n-\tcgraph_expand_function (n);\n-      output = true;\n+\t{\n+\t  cgraph_expand_function (n);\n+\t  output = true;\n+\t}\n     }\n+\n   return output;\n }\n \n@@ -164,7 +168,13 @@ cgraph_finalize_function (tree decl, bool nested)\n \t ??? It may make more sense to use one body for inlining and other\n \t body for expanding the function but this is dificult to do.  */\n \n-      if (TREE_ASM_WRITTEN (decl))\n+      /* If node->output is set, then this is a unit-at-a-time compilation\n+\t and we have already begun whole-unit analysis.  This is *not*\n+\t testing for whether we've already emitted the function.  That\n+\t case can be sort-of legitimately seen with real function \n+\t redefinition errors.  I would argue that the front end should\n+\t never present us with such a case, but don't enforce that for now.  */\n+      if (node->output)\n \tabort ();\n \n       /* Reset our datastructures so we can analyze the function again.  */"}, {"sha": "832b6d4256beadeacffdc035c2792e9c4d1e8f5f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d1b84aa4526d360d77c795167cfb217da89e65/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d1b84aa4526d360d77c795167cfb217da89e65/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f6d1b84aa4526d360d77c795167cfb217da89e65", "patch": "@@ -1,3 +1,8 @@\n+2003-09-13  Richard Henderson  <rth@redhat.com>\n+\n+\t* decl2.c (finish_file): Check cgraph_assemble_pending_functions\n+\tduring relaxation loop.\n+\n 2003-09-11  David Edelsohn  <edelsohn@gnu.org>\n \n \t* decl2.c (var_finalized_p): Swap arms of conditional."}, {"sha": "16991f3ca7d00f307fd12b82d577a8f357fcfccb", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d1b84aa4526d360d77c795167cfb217da89e65/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d1b84aa4526d360d77c795167cfb217da89e65/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=f6d1b84aa4526d360d77c795167cfb217da89e65", "patch": "@@ -2863,6 +2863,9 @@ finish_file ()\n \t  && wrapup_global_declarations (&VARRAY_TREE (pending_statics, 0),\n \t\t\t\t\t pending_statics_used))\n \treconsider = true;\n+\n+      if (cgraph_assemble_pending_functions ())\n+\treconsider = true;\n     } \n   while (reconsider);\n "}]}