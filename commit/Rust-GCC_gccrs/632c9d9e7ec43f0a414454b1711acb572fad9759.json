{"sha": "632c9d9e7ec43f0a414454b1711acb572fad9759", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjMyYzlkOWU3ZWM0M2YwYTQxNDQ1NGIxNzExYWNiNTcyZmFkOTc1OQ==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-08-21T23:03:07Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-08-21T23:03:07Z"}, "message": "flow.c (life_analysis): Preserve registers used by the epilogue.\n\n\t* flow.c (life_analysis): Preserve registers used by the epilogue.\n\t(mark_used_regs): Likewise.\n\t* reorg.c (fill_simple_delay_slots): Likewise.\n\t(dbr_schedule): Likewise.\nFixes eh49.C for sparc.\n\nFrom-SVN: r12666", "tree": {"sha": "d9a73667aa9869c0d5682d9af691bab0e5603958", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9a73667aa9869c0d5682d9af691bab0e5603958"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/632c9d9e7ec43f0a414454b1711acb572fad9759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/632c9d9e7ec43f0a414454b1711acb572fad9759", "html_url": "https://github.com/Rust-GCC/gccrs/commit/632c9d9e7ec43f0a414454b1711acb572fad9759", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/632c9d9e7ec43f0a414454b1711acb572fad9759/comments", "author": null, "committer": null, "parents": [{"sha": "cc5aa58ba9935e009caf9e0918fbdc68db72c2ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc5aa58ba9935e009caf9e0918fbdc68db72c2ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc5aa58ba9935e009caf9e0918fbdc68db72c2ba"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "86d72286331a72db86c864ec2ec94ef623657464", "filename": "gcc/flow.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/632c9d9e7ec43f0a414454b1711acb572fad9759/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/632c9d9e7ec43f0a414454b1711acb572fad9759/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=632c9d9e7ec43f0a414454b1711acb572fad9759", "patch": "@@ -1087,12 +1087,17 @@ life_analysis (f, nregs)\n #endif      \n       }\n \n-  /* Mark all global registers as being live at the end of the function\n-     since they may be referenced by our caller.  */\n+  /* Mark all global registers and all registers used by the epilogue\n+     as being live at the end of the function since they may be\n+     referenced by our caller.  */\n \n   if (n_basic_blocks > 0)\n     for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n-      if (global_regs[i])\n+      if (global_regs[i]\n+#ifdef EPILOGUE_USES\n+\t  || EPILOGUE_USES (i)\n+#endif\n+\t  )\n \t{\n \t  basic_block_live_at_end[n_basic_blocks - 1]\n \t    [i / REGSET_ELT_BITS]\n@@ -2665,7 +2670,7 @@ mark_used_regs (needed, live, x, final, insn)\n     case RETURN:\n       /* If exiting needs the right stack value, consider this insn as\n \t using the stack pointer.  In any event, consider it as using\n-\t all global registers.  */\n+\t all global registers and all registers used by return.  */\n \n #ifdef EXIT_IGNORE_STACK\n       if (! EXIT_IGNORE_STACK\n@@ -2675,7 +2680,11 @@ mark_used_regs (needed, live, x, final, insn)\n \t  |= (REGSET_ELT_TYPE) 1 << (STACK_POINTER_REGNUM % REGSET_ELT_BITS);\n \n       for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n-\tif (global_regs[i])\n+\tif (global_regs[i]\n+#ifdef EPILOGUE_USES\n+\t    || EPILOGUE_USES (i)\n+#endif\n+\t    )\n \t  live[i / REGSET_ELT_BITS]\n \t    |= (REGSET_ELT_TYPE) 1 << (i % REGSET_ELT_BITS);\n       break;"}, {"sha": "beec1681cb437044891aaf4bbee05e15a64c96f9", "filename": "gcc/reorg.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/632c9d9e7ec43f0a414454b1711acb572fad9759/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/632c9d9e7ec43f0a414454b1711acb572fad9759/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=632c9d9e7ec43f0a414454b1711acb572fad9759", "patch": "@@ -3344,6 +3344,14 @@ fill_simple_delay_slots (first, non_jumps_p)\n   else\n     SET_HARD_REG_BIT (needed.regs, STACK_POINTER_REGNUM);\n \n+#ifdef EPILOGUE_USES\n+  for (i = 0; i <FIRST_PSEUDO_REGISTER; i++)\n+    {\n+      if (EPILOGUE_USES (i))\n+\tSET_HARD_REG_BIT (needed.regs, i);\n+    }\n+#endif\n+\n   for (trial = get_last_insn (); ! stop_search_p (trial, 1);\n        trial = PREV_INSN (trial))\n     {\n@@ -4450,7 +4458,11 @@ dbr_schedule (first, file)\n \t\t\t       &end_of_function_needs, 1);\n \n   for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n-    if (global_regs[i])\n+    if (global_regs[i]\n+#ifdef EPILOGUE_USES\n+\t|| EPILOGUE_USES (i)\n+#endif\n+\t)\n       SET_HARD_REG_BIT (end_of_function_needs.regs, i);\n \n   /* The registers required to be live at the end of the function are"}]}