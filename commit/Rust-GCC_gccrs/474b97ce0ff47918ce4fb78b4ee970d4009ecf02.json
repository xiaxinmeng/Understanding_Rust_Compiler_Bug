{"sha": "474b97ce0ff47918ce4fb78b4ee970d4009ecf02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc0Yjk3Y2UwZmY0NzkxOGNlNGZiNzhiNGVlOTcwZDQwMDllY2YwMg==", "commit": {"author": {"name": "Dave Korn", "email": "dave.korn.cygwin@gmail.com", "date": "2010-03-21T19:41:37Z"}, "committer": {"name": "Dave Korn", "email": "davek@gcc.gnu.org", "date": "2010-03-21T19:41:37Z"}, "message": "re PR target/42811 (java.lang.ExceptionInInitializerError in ecj1)\n\n\tPR target/42811\n\t* libjava/configure.ac (DLLTOOL): Call AC_CHECK_TOOL.\n\t(libgcj_sublib_core_extra_deps): New host-dependent configure var.\n\t(LIBGCJ_SUBLIB_CORE_EXTRA_DEPS): AC_SUBST it.\n\t* libjava/configure.host (libgcj_sublib_core_extra_deps): Define\n\tappropriately on Cygwin and MinGW.\n\t(libgcj_sublib_core_extra_deps): Add libgcj-noncore-dummy import\n\tstub library on Cygwin and MinGW.\n\t* libjava/Makefile.am (LIBJAVA_CORE_EXTRA): Import AC_SUBST'd\n\tLIBGCJ_SUBLIB_CORE_EXTRA_DEPS if building sublibs, else define empty.\n\t(libgcj_la_DEPENDENCIES): Use it.\n\t(DLL_VERSION): New makefile macro.\n\t(libgcj-noncore-dummy.dll.a): New build rule for dummy import stub\n\tlibrary.\n\t(libgcj_noncore_la_LIBADD): Trim superfluous convenience libs.\n\t(AM_MAKEFLAGS): Add DLLTOOL recursive propagation.\n\t* libjava/libgcj-noncore-dummy.def: New file.\n\t* libjava/Makefile.in: Regenerate.\n\t* libjava/include/Makefile.in: Likewise.\n\t* libjava/testsuite/Makefile.in: Likewise.\n\t* libjava/configure: Likewise.\n\t* libjava/gcj/Makefile.in: Likewise.\n\nFrom-SVN: r157606", "tree": {"sha": "3802590e4709444b1219175a10f94cc33e72acb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3802590e4709444b1219175a10f94cc33e72acb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/474b97ce0ff47918ce4fb78b4ee970d4009ecf02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/474b97ce0ff47918ce4fb78b4ee970d4009ecf02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/474b97ce0ff47918ce4fb78b4ee970d4009ecf02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/comments", "author": {"login": "davek-cygwin", "id": 530057, "node_id": "MDQ6VXNlcjUzMDA1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/530057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davek-cygwin", "html_url": "https://github.com/davek-cygwin", "followers_url": "https://api.github.com/users/davek-cygwin/followers", "following_url": "https://api.github.com/users/davek-cygwin/following{/other_user}", "gists_url": "https://api.github.com/users/davek-cygwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/davek-cygwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davek-cygwin/subscriptions", "organizations_url": "https://api.github.com/users/davek-cygwin/orgs", "repos_url": "https://api.github.com/users/davek-cygwin/repos", "events_url": "https://api.github.com/users/davek-cygwin/events{/privacy}", "received_events_url": "https://api.github.com/users/davek-cygwin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "713812e2445496115c6cc9d789b2662cdd2225dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713812e2445496115c6cc9d789b2662cdd2225dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713812e2445496115c6cc9d789b2662cdd2225dc"}], "stats": {"total": 212, "additions": 190, "deletions": 22}, "files": [{"sha": "365968a3ebe2dd804c962811ab322db67711696e", "filename": "libjava/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=474b97ce0ff47918ce4fb78b4ee970d4009ecf02", "patch": "@@ -1,3 +1,28 @@\n+2010-03-21  Dave Korn  <dave.korn.cygwin@gmail.com>\n+\n+\tPR target/42811\n+\t* libjava/configure.ac (DLLTOOL): Call AC_CHECK_TOOL.\n+\t(libgcj_sublib_core_extra_deps): New host-dependent configure var.\n+\t(LIBGCJ_SUBLIB_CORE_EXTRA_DEPS): AC_SUBST it.\n+\t* libjava/configure.host (libgcj_sublib_core_extra_deps): Define\n+\tappropriately on Cygwin and MinGW.\n+\t(libgcj_sublib_core_extra_deps): Add libgcj-noncore-dummy import\n+\tstub library on Cygwin and MinGW.\n+\t* libjava/Makefile.am (LIBJAVA_CORE_EXTRA): Import AC_SUBST'd\n+\tLIBGCJ_SUBLIB_CORE_EXTRA_DEPS if building sublibs, else define empty.\n+\t(libgcj_la_DEPENDENCIES): Use it.\n+\t(DLL_VERSION): New makefile macro.\n+\t(libgcj-noncore-dummy.dll.a): New build rule for dummy import stub\n+\tlibrary.\n+\t(libgcj_noncore_la_LIBADD): Trim superfluous convenience libs.\n+\t(AM_MAKEFLAGS): Add DLLTOOL recursive propagation.\n+\t* libjava/libgcj-noncore-dummy.def: New file.\n+\t* libjava/Makefile.in: Regenerate.\n+\t* libjava/include/Makefile.in: Likewise.\n+\t* libjava/testsuite/Makefile.in: Likewise.\n+\t* libjava/configure: Likewise.\n+\t* libjava/gcj/Makefile.in: Likewise.\n+\n 2010-03-21  Dave Korn  <dave.korn.cygwin@gmail.com>\n \n \tPR target/42811 (prerequisite)"}, {"sha": "190c686e65eee8d782a7d88bc9ee15598541e2eb", "filename": "libjava/Makefile.am", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=474b97ce0ff47918ce4fb78b4ee970d4009ecf02", "patch": "@@ -202,11 +202,13 @@ toolexeclib_LTLIBRARIES += libgcj-noncore.la\n libgcj_noncore_la_LIBADD_SUBOBJECTS = $(NONCORE_PACKAGE_SOURCE_FILES_LO)\n libgcj_la_LIBADD_SUBOBJECTS = $(CORE_PACKAGE_SOURCE_FILES_LO)\n LIBJAVA_LDFLAGS_NOUNDEF = $(LIBGCJ_SUBLIB_LTFLAGS)\n+LIBJAVA_CORE_EXTRA = @LIBGCJ_SUBLIB_CORE_EXTRA_DEPS@\n else\n # If not building sublibraries, everything goes in libgcj,\n # and it cannot be usefully built shared on PE platforms.\n libgcj_la_LIBADD_SUBOBJECTS = $(ALL_PACKAGE_SOURCE_FILES_LO)\n LIBJAVA_LDFLAGS_NOUNDEF = \n+LIBJAVA_CORE_EXTRA = \n endif\n \n if USE_LIBGCJ_BC\n@@ -460,7 +462,8 @@ libgcj_la_DEPENDENCIES = libgcj-$(gcc_version).jar \\\n \tjava/lang/Class.lo \\\n \tjava/process-$(PLATFORM).lo \\\n \t$(ALL_PACKAGE_SOURCE_FILES_LO) \\\n-\t$(LIBLTDL) $(libgcj_la_LIBADD)\n+\t$(LIBLTDL) $(libgcj_la_LIBADD) \\\n+\t$(LIBJAVA_CORE_EXTRA)\n if ANONVERSCRIPT\n libgcj_la_DEPENDENCIES += $(srcdir)/libgcj.ver\n endif\n@@ -472,17 +475,28 @@ libgcj_la_LINK = $(LIBLINK) $(libgcj_la_LDFLAGS)\n EXTRA_libgcj_la_SOURCES = java/lang/Object.java\n \n if BUILD_SUBLIBS\n+## This extra target is invoked on windows hosts only by adding it\n+## to LIBGCJ_SUBLIB_CORE_EXTRA_SRCS in configure.host, which causes\n+## it to be linked in to the core DLL and generate a circular import\n+## dependency loop between the two DLLs.  This is required to fix\n+## PR42811 by ensuring that any application that links against\n+## either always loads both at runtime.\n+DLL_VERSION=`expr \\`grep -v '^\\#' $(srcdir)/libtool-version | sed -e 's/\\(.*\\):\\(.*\\):.*/\\1 + \\2/'\\``\n+libgcj-noncore-dummy.dll.a : $(srcdir)/libgcj-noncore-dummy.def\n+\t$(DLLTOOL) -d $^ -l $@ --dllname cyggcj-noncore-$(DLL_VERSION).dll \n+\n+## These are the libtool definitions for the noncore library.\n libgcj_noncore_la_SOURCES =\n libgcj_noncore_la_LDFLAGS = $(libgcj_la_LDFLAGS)\n-libgcj_noncore_la_LIBADD = $(libgcj_noncore_la_LIBADD_SUBOBJECTS) \\\n-\t\t$(LIBFFI) $(ZLIBS) $(GCLIBS) libgcj.la\n+libgcj_noncore_la_LIBADD = $(libgcj_noncore_la_LIBADD_SUBOBJECTS) libgcj.la\n libgcj_noncore_la_DEPENDENCIES = libgcj-$(gcc_version).jar $(LIBLTDL) \\\n \t\t$(libgcj_noncore_la_LIBADD) libgcj.la\n if ANONVERSCRIPT\n libgcj_noncore_la_DEPENDENCIES += $(srcdir)/libgcj.ver\n endif\n libgcj_noncore_la_LINK = $(libgcj_la_LINK)\n-endif\n+\n+endif\t# BUILD_SUBLIBS\n \n # We compile libgcj_tools with -findirect-dispatch so that they can\n # depend on external classes: in particular, gjdoc uses antlr.  In\n@@ -1513,6 +1527,7 @@ AM_MAKEFLAGS = \\\n \t\"gxx_include_dir=$(gxx_include_dir)\" \\\n \t\"AR=$(AR)\" \\\n \t\"AS=$(AS)\" \\\n+\t\"DLLTOOL=$(DLLTOOL)\" \\\n \t\"LD=$(LD)\" \\\n \t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n \t\"NM=$(NM)\" \\"}, {"sha": "34ddeae7b6b8f99a973e8ef3949439f178e6d357", "filename": "libjava/Makefile.in", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=474b97ce0ff47918ce4fb78b4ee970d4009ecf02", "patch": "@@ -184,14 +184,13 @@ am__objects_1 = gnu/gcj/xlib/lib_gnu_awt_xlib_la-natClip.lo \\\n am_lib_gnu_awt_xlib_la_OBJECTS = $(am__objects_1)\n lib_gnu_awt_xlib_la_OBJECTS = $(am_lib_gnu_awt_xlib_la_OBJECTS)\n @XLIB_AWT_TRUE@am_lib_gnu_awt_xlib_la_rpath = -rpath $(toolexeclibdir)\n-am__DEPENDENCIES_1 =\n am_libgcj_noncore_la_OBJECTS =\n libgcj_noncore_la_OBJECTS = $(am_libgcj_noncore_la_OBJECTS)\n @BUILD_SUBLIBS_TRUE@am_libgcj_noncore_la_rpath = -rpath \\\n @BUILD_SUBLIBS_TRUE@\t$(toolexeclibdir)\n am_libgcj_tools_la_OBJECTS = classpath/tools/libgcj_tools_la-tools.lo\n libgcj_tools_la_OBJECTS = $(am_libgcj_tools_la_OBJECTS)\n-@INTERPRETER_TRUE@am__DEPENDENCIES_2 = gnu/classpath/jdwp.lo \\\n+@INTERPRETER_TRUE@am__DEPENDENCIES_1 = gnu/classpath/jdwp.lo \\\n @INTERPRETER_TRUE@\tgnu/classpath/jdwp/event.lo \\\n @INTERPRETER_TRUE@\tgnu/classpath/jdwp/event/filters.lo \\\n @INTERPRETER_TRUE@\tgnu/classpath/jdwp/exception.lo \\\n@@ -200,7 +199,7 @@ libgcj_tools_la_OBJECTS = $(am_libgcj_tools_la_OBJECTS)\n @INTERPRETER_TRUE@\tgnu/classpath/jdwp/transport.lo \\\n @INTERPRETER_TRUE@\tgnu/classpath/jdwp/util.lo \\\n @INTERPRETER_TRUE@\tgnu/classpath/jdwp/value.lo gnu/gcj/jvmti.lo\n-am__DEPENDENCIES_3 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n+am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tgnu/classpath/debug.lo gnu/classpath/toolkit.lo gnu/gcj.lo \\\n \tgnu/gcj/convert.lo gnu/gcj/io.lo gnu/gcj/runtime.lo \\\n \tgnu/gcj/util.lo gnu/java/awt.lo gnu/java/awt/color.lo \\\n@@ -317,12 +316,13 @@ am__DEPENDENCIES_3 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tjavax/swing/undo.lo javax/tools.lo javax/transaction.lo \\\n \tjavax/transaction/xa.lo org/ietf/jgss.lo sun/awt.lo \\\n \tsun/misc.lo sun/reflect.lo sun/reflect/annotation.lo \\\n-\tsun/reflect/misc.lo $(am__DEPENDENCIES_2)\n-am__DEPENDENCIES_4 = $(am__DEPENDENCIES_3) $(propertyo_files) \\\n+\tsun/reflect/misc.lo $(am__DEPENDENCIES_1)\n+am__DEPENDENCIES_3 = $(am__DEPENDENCIES_2) $(propertyo_files) \\\n \t$(bc_objects)\n-@BUILD_SUBLIBS_FALSE@am__DEPENDENCIES_5 = $(am__DEPENDENCIES_4)\n-@BUILD_SUBLIBS_TRUE@am__DEPENDENCIES_5 =  \\\n+@BUILD_SUBLIBS_FALSE@am__DEPENDENCIES_4 = $(am__DEPENDENCIES_3)\n+@BUILD_SUBLIBS_TRUE@am__DEPENDENCIES_4 =  \\\n @BUILD_SUBLIBS_TRUE@\t$(CORE_PACKAGE_SOURCE_FILES_LO)\n+am__DEPENDENCIES_5 =\n am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tstacktrace.cc link.cc defineclass.cc verify.cc jvmti.cc \\\n \tinterpret.cc gnu/classpath/jdwp/natVMFrame.cc \\\n@@ -660,6 +660,7 @@ DEFS = @DEFS@\n DEPDIR = @DEPDIR@\n DIRLTDL = @DIRLTDL@\n DIVIDESPEC = @DIVIDESPEC@\n+DLLTOOL = @DLLTOOL@\n DSYMUTIL = @DSYMUTIL@\n DUMPBIN = @DUMPBIN@\n ECHO_C = @ECHO_C@\n@@ -727,6 +728,7 @@ LIBGCJ_JAVAFLAGS = @LIBGCJ_JAVAFLAGS@\n LIBGCJ_LD_SYMBOLIC = @LIBGCJ_LD_SYMBOLIC@\n LIBGCJ_LD_SYMBOLIC_FUNCTIONS = @LIBGCJ_LD_SYMBOLIC_FUNCTIONS@\n LIBGCJ_SPEC = @LIBGCJ_SPEC@\n+LIBGCJ_SUBLIB_CORE_EXTRA_DEPS = @LIBGCJ_SUBLIB_CORE_EXTRA_DEPS@\n LIBGCJ_SUBLIB_LTFLAGS = @LIBGCJ_SUBLIB_LTFLAGS@\n LIBICONV = @LIBICONV@\n LIBLTDL = @LIBLTDL@\n@@ -1047,6 +1049,8 @@ CORE_PACKAGE_SOURCE_FILES_LO = $(filter-out $(LOWER_PACKAGE_FILES_LO),$(ALL_PACK\n @BUILD_SUBLIBS_TRUE@libgcj_la_LIBADD_SUBOBJECTS = $(CORE_PACKAGE_SOURCE_FILES_LO)\n @BUILD_SUBLIBS_FALSE@LIBJAVA_LDFLAGS_NOUNDEF = \n @BUILD_SUBLIBS_TRUE@LIBJAVA_LDFLAGS_NOUNDEF = $(LIBGCJ_SUBLIB_LTFLAGS)\n+@BUILD_SUBLIBS_FALSE@LIBJAVA_CORE_EXTRA = \n+@BUILD_SUBLIBS_TRUE@LIBJAVA_CORE_EXTRA = @LIBGCJ_SUBLIB_CORE_EXTRA_DEPS@\n dbexec_LTLIBRARIES = libjvm.la\n pkgconfigdir = $(libdir)/pkgconfig\n jardir = $(datadir)/java\n@@ -1158,14 +1162,13 @@ libgcj_la_LIBADD = \\\n libgcj_la_DEPENDENCIES = libgcj-$(gcc_version).jar java/lang/Object.lo \\\n \tjava/lang/Class.lo java/process-$(PLATFORM).lo \\\n \t$(ALL_PACKAGE_SOURCE_FILES_LO) $(LIBLTDL) $(libgcj_la_LIBADD) \\\n-\t$(am__append_20)\n+\t$(LIBJAVA_CORE_EXTRA) $(am__append_20)\n libgcj_la_LINK = $(LIBLINK) $(libgcj_la_LDFLAGS)\n EXTRA_libgcj_la_SOURCES = java/lang/Object.java\n+@BUILD_SUBLIBS_TRUE@DLL_VERSION = `expr \\`grep -v '^\\#' $(srcdir)/libtool-version | sed -e 's/\\(.*\\):\\(.*\\):.*/\\1 + \\2/'\\``\n @BUILD_SUBLIBS_TRUE@libgcj_noncore_la_SOURCES = \n @BUILD_SUBLIBS_TRUE@libgcj_noncore_la_LDFLAGS = $(libgcj_la_LDFLAGS)\n-@BUILD_SUBLIBS_TRUE@libgcj_noncore_la_LIBADD = $(libgcj_noncore_la_LIBADD_SUBOBJECTS) \\\n-@BUILD_SUBLIBS_TRUE@\t\t$(LIBFFI) $(ZLIBS) $(GCLIBS) libgcj.la\n-\n+@BUILD_SUBLIBS_TRUE@libgcj_noncore_la_LIBADD = $(libgcj_noncore_la_LIBADD_SUBOBJECTS) libgcj.la\n @BUILD_SUBLIBS_TRUE@libgcj_noncore_la_DEPENDENCIES =  \\\n @BUILD_SUBLIBS_TRUE@\tlibgcj-$(gcc_version).jar $(LIBLTDL) \\\n @BUILD_SUBLIBS_TRUE@\t$(libgcj_noncore_la_LIBADD) libgcj.la \\\n@@ -8770,6 +8773,7 @@ AM_MAKEFLAGS = \\\n \t\"gxx_include_dir=$(gxx_include_dir)\" \\\n \t\"AR=$(AR)\" \\\n \t\"AS=$(AS)\" \\\n+\t\"DLLTOOL=$(DLLTOOL)\" \\\n \t\"LD=$(LD)\" \\\n \t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n \t\"NM=$(NM)\" \\\n@@ -10787,6 +10791,8 @@ uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \\\n \n \n interpret.lo:  AM_CXXFLAGS += -fwrapv\n+@BUILD_SUBLIBS_TRUE@libgcj-noncore-dummy.dll.a : $(srcdir)/libgcj-noncore-dummy.def\n+@BUILD_SUBLIBS_TRUE@\t$(DLLTOOL) -d $^ -l $@ --dllname cyggcj-noncore-$(DLL_VERSION).dll \n \n $(db_name): gcj-dbtool$(EXEEXT)\n \t@rm -f $(db_name)"}, {"sha": "0d2fb703eced6b07bb19fbdec082689b54a25550", "filename": "libjava/configure", "status": "modified", "additions": 103, "deletions": 4, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=474b97ce0ff47918ce4fb78b4ee970d4009ecf02", "patch": "@@ -778,6 +778,7 @@ BUILD_SUBLIBS_FALSE\n BUILD_SUBLIBS_TRUE\n LIBGCJ_LD_SYMBOLIC_FUNCTIONS\n LIBGCJ_LD_SYMBOLIC\n+LIBGCJ_SUBLIB_CORE_EXTRA_DEPS\n LIBGCJ_SUBLIB_LTFLAGS\n LIBGCJ_JAVAFLAGS\n LIBGCJ_CXXFLAGS\n@@ -788,6 +789,7 @@ MAINTAINER_MODE_TRUE\n UNZIP\n ZIP\n JAR\n+DLLTOOL\n RANLIB\n AR\n LD\n@@ -5567,6 +5569,98 @@ else\n   RANLIB=\"$ac_cv_prog_RANLIB\"\n fi\n \n+if test -n \"$ac_tool_prefix\"; then\n+  # Extract the first word of \"${ac_tool_prefix}dlltool\", so it can be a program name with args.\n+set dummy ${ac_tool_prefix}dlltool; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if test \"${ac_cv_prog_DLLTOOL+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$DLLTOOL\"; then\n+  ac_cv_prog_DLLTOOL=\"$DLLTOOL\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if { test -f \"$as_dir/$ac_word$ac_exec_ext\" && $as_test_x \"$as_dir/$ac_word$ac_exec_ext\"; }; then\n+    ac_cv_prog_DLLTOOL=\"${ac_tool_prefix}dlltool\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+DLLTOOL=$ac_cv_prog_DLLTOOL\n+if test -n \"$DLLTOOL\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $DLLTOOL\" >&5\n+$as_echo \"$DLLTOOL\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+fi\n+if test -z \"$ac_cv_prog_DLLTOOL\"; then\n+  ac_ct_DLLTOOL=$DLLTOOL\n+  # Extract the first word of \"dlltool\", so it can be a program name with args.\n+set dummy dlltool; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if test \"${ac_cv_prog_ac_ct_DLLTOOL+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$ac_ct_DLLTOOL\"; then\n+  ac_cv_prog_ac_ct_DLLTOOL=\"$ac_ct_DLLTOOL\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if { test -f \"$as_dir/$ac_word$ac_exec_ext\" && $as_test_x \"$as_dir/$ac_word$ac_exec_ext\"; }; then\n+    ac_cv_prog_ac_ct_DLLTOOL=\"dlltool\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+ac_ct_DLLTOOL=$ac_cv_prog_ac_ct_DLLTOOL\n+if test -n \"$ac_ct_DLLTOOL\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_DLLTOOL\" >&5\n+$as_echo \"$ac_ct_DLLTOOL\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+  if test \"x$ac_ct_DLLTOOL\" = x; then\n+    DLLTOOL=\":\"\n+  else\n+    case $cross_compiling:$ac_tool_warned in\n+yes:)\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n+$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\n+ac_tool_warned=yes ;;\n+esac\n+    DLLTOOL=$ac_ct_DLLTOOL\n+  fi\n+else\n+  DLLTOOL=\"$ac_cv_prog_DLLTOOL\"\n+fi\n+\n for ac_prog in gawk mawk nawk awk\n do\n   # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n@@ -5789,13 +5883,16 @@ fi\n #\tlibgcj_cxxflags  - host specific C++ compiler flags\n #\tlibgcj_javaflags - host specific Java compiler flags\n #\tlibgcj_sublib_ltflags - host specific Libtool flags\n-#                          (only used when building sublibs)\n+#\tlibgcj_sublib_core_extra_deps - host specific extra\n+#\t\t\t   dependencies for core sublib\n+#\t(these last two only used when building sublibs)\n # and a number of others; see the list at the start of the file.\n \n libgcj_cflags=\n libgcj_cxxflags=\n libgcj_javaflags=\n libgcj_sublib_ltflags=\n+libgcj_sublib_core_extra_deps=\n \n . ${srcdir}/configure.host\n \n@@ -5846,6 +5943,7 @@ LIBGCJ_CFLAGS=\"${libgcj_cflags}\"\n LIBGCJ_CXXFLAGS=\"${libgcj_cxxflags}\"\n LIBGCJ_JAVAFLAGS=\"${libgcj_javaflags}\"\n LIBGCJ_SUBLIB_LTFLAGS=\"${libgcj_sublib_ltflags}\"\n+LIBGCJ_SUBLIB_CORE_EXTRA_DEPS=\"${libgcj_sublib_core_extra_deps}\"\n LIBGCJ_LD_SYMBOLIC=\"${libgcj_ld_symbolic}\"\n LIBGCJ_LD_SYMBOLIC_FUNCTIONS=\"${libgcj_ld_symbolic_functions}\"\n \n@@ -5855,6 +5953,7 @@ LIBGCJ_LD_SYMBOLIC_FUNCTIONS=\"${libgcj_ld_symbolic_functions}\"\n \n \n \n+\n # Only use libltdl for non-newlib builds.\n if test \"x${with_newlib}\" = \"x\" || test \"x${with_newlib}\" = \"xno\"; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking dynamic linker characteristics\" >&5\n@@ -13238,7 +13337,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13241 \"configure\"\n+#line 13340 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13344,7 +13443,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13347 \"configure\"\n+#line 13446 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19209,7 +19308,7 @@ if test \"${enable_sjlj_exceptions+set}\" = set; then :\n   enableval=$enable_sjlj_exceptions; :\n else\n   cat > conftest.$ac_ext << EOF\n-#line 19212 \"configure\"\n+#line 19311 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()"}, {"sha": "255fb64595e8add23054e87e3f8b7d298cf376ef", "filename": "libjava/configure.ac", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=474b97ce0ff47918ce4fb78b4ee970d4009ecf02", "patch": "@@ -157,6 +157,7 @@ AC_CHECK_TOOL(AS, as)\n AC_CHECK_TOOL(LD, ld)\n AC_CHECK_TOOL(AR, ar)\n AC_CHECK_TOOL(RANLIB, ranlib, :)\n+AC_CHECK_TOOL(DLLTOOL, dlltool, :)\n AC_PROG_AWK\n AC_CHECK_PROGS([JAR], [jar fastjar gjar], no)\n AC_PATH_PROG([ZIP], [zip], no)\n@@ -194,13 +195,16 @@ AC_EXEEXT\n #\tlibgcj_cxxflags  - host specific C++ compiler flags\n #\tlibgcj_javaflags - host specific Java compiler flags\n #\tlibgcj_sublib_ltflags - host specific Libtool flags \n-#                          (only used when building sublibs)\n+#\tlibgcj_sublib_core_extra_deps - host specific extra \n+#\t\t\t   dependencies for core sublib\n+#\t(these last two only used when building sublibs)\n # and a number of others; see the list at the start of the file.\n \n libgcj_cflags=\n libgcj_cxxflags=\n libgcj_javaflags=\n libgcj_sublib_ltflags=\n+libgcj_sublib_core_extra_deps=\n \n . ${srcdir}/configure.host\n \n@@ -214,12 +218,14 @@ LIBGCJ_CFLAGS=\"${libgcj_cflags}\"\n LIBGCJ_CXXFLAGS=\"${libgcj_cxxflags}\"\n LIBGCJ_JAVAFLAGS=\"${libgcj_javaflags}\"\n LIBGCJ_SUBLIB_LTFLAGS=\"${libgcj_sublib_ltflags}\"\n+LIBGCJ_SUBLIB_CORE_EXTRA_DEPS=\"${libgcj_sublib_core_extra_deps}\"\n LIBGCJ_LD_SYMBOLIC=\"${libgcj_ld_symbolic}\"\n LIBGCJ_LD_SYMBOLIC_FUNCTIONS=\"${libgcj_ld_symbolic_functions}\"\n AC_SUBST(LIBGCJ_CFLAGS)\n AC_SUBST(LIBGCJ_CXXFLAGS)\n AC_SUBST(LIBGCJ_JAVAFLAGS)\n AC_SUBST(LIBGCJ_SUBLIB_LTFLAGS)\n+AC_SUBST(LIBGCJ_SUBLIB_CORE_EXTRA_DEPS)\n AC_SUBST(LIBGCJ_LD_SYMBOLIC)\n AC_SUBST(LIBGCJ_LD_SYMBOLIC_FUNCTIONS)\n "}, {"sha": "460ef2fab07f122e7e5220df888d91de0ca30ec1", "filename": "libjava/configure.host", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.host?ref=474b97ce0ff47918ce4fb78b4ee970d4009ecf02", "patch": "@@ -18,7 +18,8 @@\n #   libgcj_cflags\tSpecial CFLAGS to use when building\n #   libgcj_cxxflags\tSpecial CXXFLAGS to use when building\n #   libgcj_javaflags\tSpecial JAVAFLAGS to use when building\n-#   libgcj_sublib_ltflags  Special Libtool flags to use when building.\n+#   libgcj_sublib_ltflags  Special Libtool flags to use when building sublibs\n+#   libgcj_sublib_core_extra_deps  Extra dependencies to add to core sublib\n #   libgcj_interpreter  If the bytecode interpreter supports this platform.\n #   enable_java_net_default  If java.net native code should be enabled by\n #                            default.\n@@ -43,6 +44,7 @@ libgcj_cflags=\n libgcj_cxxflags=\n libgcj_javaflags=\n libgcj_sublib_ltflags=\n+libgcj_sublib_core_extra_deps=\n libgcj_interpreter=\n enable_java_net_default=yes\n enable_hash_synchronization_default=no\n@@ -351,7 +353,9 @@ case \"${host}\" in\n   \tBACKTRACESPEC=\n \t# Win32 DLLs are limited to 64k exported symbols each.\n \tenable_libgcj_sublibs_default=yes\n-\tlibgcj_sublib_ltflags='-no-undefined -bindir $(bindir)'\n+\tlibgcj_sublib_ltflags='-no-undefined -bindir $(bindir) \\\n+\t    -Wl,-u,__ZN3org4ietf4jgss10GSSManagerC1Ev,-L..,-lgcj-noncore-dummy'\n+\tlibgcj_sublib_core_extra_deps=libgcj-noncore-dummy.dll.a\n   ;;\n esac\n "}, {"sha": "e73ef0e7140cb9717b4b99b7a0e581083c0feb57", "filename": "libjava/gcj/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2Fgcj%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2Fgcj%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2FMakefile.in?ref=474b97ce0ff47918ce4fb78b4ee970d4009ecf02", "patch": "@@ -124,6 +124,7 @@ DEFS = @DEFS@\n DEPDIR = @DEPDIR@\n DIRLTDL = @DIRLTDL@\n DIVIDESPEC = @DIVIDESPEC@\n+DLLTOOL = @DLLTOOL@\n DSYMUTIL = @DSYMUTIL@\n DUMPBIN = @DUMPBIN@\n ECHO_C = @ECHO_C@\n@@ -191,6 +192,7 @@ LIBGCJ_JAVAFLAGS = @LIBGCJ_JAVAFLAGS@\n LIBGCJ_LD_SYMBOLIC = @LIBGCJ_LD_SYMBOLIC@\n LIBGCJ_LD_SYMBOLIC_FUNCTIONS = @LIBGCJ_LD_SYMBOLIC_FUNCTIONS@\n LIBGCJ_SPEC = @LIBGCJ_SPEC@\n+LIBGCJ_SUBLIB_CORE_EXTRA_DEPS = @LIBGCJ_SUBLIB_CORE_EXTRA_DEPS@\n LIBGCJ_SUBLIB_LTFLAGS = @LIBGCJ_SUBLIB_LTFLAGS@\n LIBICONV = @LIBICONV@\n LIBLTDL = @LIBLTDL@"}, {"sha": "5e5a4b3d5bfc87b7f16b40c5e4b7ed0ac018a667", "filename": "libjava/include/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2FMakefile.in?ref=474b97ce0ff47918ce4fb78b4ee970d4009ecf02", "patch": "@@ -124,6 +124,7 @@ DEFS = @DEFS@\n DEPDIR = @DEPDIR@\n DIRLTDL = @DIRLTDL@\n DIVIDESPEC = @DIVIDESPEC@\n+DLLTOOL = @DLLTOOL@\n DSYMUTIL = @DSYMUTIL@\n DUMPBIN = @DUMPBIN@\n ECHO_C = @ECHO_C@\n@@ -191,6 +192,7 @@ LIBGCJ_JAVAFLAGS = @LIBGCJ_JAVAFLAGS@\n LIBGCJ_LD_SYMBOLIC = @LIBGCJ_LD_SYMBOLIC@\n LIBGCJ_LD_SYMBOLIC_FUNCTIONS = @LIBGCJ_LD_SYMBOLIC_FUNCTIONS@\n LIBGCJ_SPEC = @LIBGCJ_SPEC@\n+LIBGCJ_SUBLIB_CORE_EXTRA_DEPS = @LIBGCJ_SUBLIB_CORE_EXTRA_DEPS@\n LIBGCJ_SUBLIB_LTFLAGS = @LIBGCJ_SUBLIB_LTFLAGS@\n LIBICONV = @LIBICONV@\n LIBLTDL = @LIBLTDL@"}, {"sha": "e56f9f6eb29e9b20358c5b34679f6045b5afc8e5", "filename": "libjava/libgcj-noncore-dummy.def", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2Flibgcj-noncore-dummy.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2Flibgcj-noncore-dummy.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Flibgcj-noncore-dummy.def?ref=474b97ce0ff47918ce4fb78b4ee970d4009ecf02", "patch": "@@ -0,0 +1,7 @@\n+\n+LIBRARY cyggcj-noncore-11.dll\n+\n+EXPORTS\n+\n+  _ZN3org4ietf4jgss10GSSManagerC1Ev\n+"}, {"sha": "86862ce86904d68309060bca6ceca7c15af62372", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/474b97ce0ff47918ce4fb78b4ee970d4009ecf02/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=474b97ce0ff47918ce4fb78b4ee970d4009ecf02", "patch": "@@ -99,6 +99,7 @@ DEFS = @DEFS@\n DEPDIR = @DEPDIR@\n DIRLTDL = @DIRLTDL@\n DIVIDESPEC = @DIVIDESPEC@\n+DLLTOOL = @DLLTOOL@\n DSYMUTIL = @DSYMUTIL@\n DUMPBIN = @DUMPBIN@\n ECHO_C = @ECHO_C@\n@@ -166,6 +167,7 @@ LIBGCJ_JAVAFLAGS = @LIBGCJ_JAVAFLAGS@\n LIBGCJ_LD_SYMBOLIC = @LIBGCJ_LD_SYMBOLIC@\n LIBGCJ_LD_SYMBOLIC_FUNCTIONS = @LIBGCJ_LD_SYMBOLIC_FUNCTIONS@\n LIBGCJ_SPEC = @LIBGCJ_SPEC@\n+LIBGCJ_SUBLIB_CORE_EXTRA_DEPS = @LIBGCJ_SUBLIB_CORE_EXTRA_DEPS@\n LIBGCJ_SUBLIB_LTFLAGS = @LIBGCJ_SUBLIB_LTFLAGS@\n LIBICONV = @LIBICONV@\n LIBLTDL = @LIBLTDL@"}]}