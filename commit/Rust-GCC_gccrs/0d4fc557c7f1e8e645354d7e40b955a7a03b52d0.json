{"sha": "0d4fc557c7f1e8e645354d7e40b955a7a03b52d0", "node_id": "C_kwDOANBUbNoAKDBkNGZjNTU3YzdmMWU4ZTY0NTM1NGQ3ZTQwYjk1NWE3YTAzYjUyZDA", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-04-21T17:57:24Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-04-21T17:57:24Z"}, "message": "Fix generic param redefined bug\n\nWhen we name-resolve generic parameters their declaration gets inserted in\nto the upper-most rib on the stack. Then when this is referenced we lookup\nthe relevant binding starting from the uppermost rib this lead to the 2nd\nextern item adding the same binding into the same rib which caused this\nclash. To fix this we need to have a seperate rib for each declaration\nso as reusing the same names don't clash with each other.\n\nFixes #1131", "tree": {"sha": "1da88098c403662906918dc27570f6e5040e71ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1da88098c403662906918dc27570f6e5040e71ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d4fc557c7f1e8e645354d7e40b955a7a03b52d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d4fc557c7f1e8e645354d7e40b955a7a03b52d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d4fc557c7f1e8e645354d7e40b955a7a03b52d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d4fc557c7f1e8e645354d7e40b955a7a03b52d0/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc22f12c9c707b258f35a1bab0e8154441b972b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc22f12c9c707b258f35a1bab0e8154441b972b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc22f12c9c707b258f35a1bab0e8154441b972b8"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "f662d5df507dfb8f8c7f226c8f3154a566c4ad2b", "filename": "gcc/rust/resolve/rust-ast-resolve-item.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d4fc557c7f1e8e645354d7e40b955a7a03b52d0/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d4fc557c7f1e8e645354d7e40b955a7a03b52d0/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.h?ref=0d4fc557c7f1e8e645354d7e40b955a7a03b52d0", "patch": "@@ -955,6 +955,15 @@ class ResolveExternItem : public ResolverBase\n \n   void visit (AST::ExternalFunctionItem &function) override\n   {\n+    NodeId scope_node_id = function.get_node_id ();\n+    resolver->get_name_scope ().push (scope_node_id);\n+    resolver->get_type_scope ().push (scope_node_id);\n+    resolver->get_label_scope ().push (scope_node_id);\n+    resolver->push_new_name_rib (resolver->get_name_scope ().peek ());\n+    resolver->push_new_type_rib (resolver->get_type_scope ().peek ());\n+    resolver->push_new_label_rib (resolver->get_type_scope ().peek ());\n+\n+    // resolve the generics\n     if (function.has_generics ())\n       {\n \tfor (auto &generic : function.get_generic_params ())\n@@ -971,6 +980,11 @@ class ResolveExternItem : public ResolverBase\n       {\n \tResolveType::go (param.get_type ().get (), param.get_node_id ());\n       }\n+\n+    // done\n+    resolver->get_name_scope ().pop ();\n+    resolver->get_type_scope ().pop ();\n+    resolver->get_label_scope ().pop ();\n   }\n \n   void visit (AST::ExternalStaticItem &item) override"}, {"sha": "fd158abc700f3026dddbf54becd81aa5a67f43cf", "filename": "gcc/testsuite/rust/compile/issue-1131.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d4fc557c7f1e8e645354d7e40b955a7a03b52d0/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1131.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d4fc557c7f1e8e645354d7e40b955a7a03b52d0/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1131.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1131.rs?ref=0d4fc557c7f1e8e645354d7e40b955a7a03b52d0", "patch": "@@ -0,0 +1,4 @@\n+extern \"rust-intrinsic\" {\n+    fn size_of<T>() -> usize;\n+    fn offset<T>(dst: *const T, offset: isize) -> *const T;\n+}"}]}