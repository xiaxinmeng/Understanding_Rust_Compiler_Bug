{"sha": "426b6fa3ab953ff01fe116eb3a29e8bb04ba0e93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI2YjZmYTNhYjk1M2ZmMDFmZTExNmViM2EyOWU4YmIwNGJhMGU5Mw==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1996-06-07T07:29:20Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1996-06-07T07:29:20Z"}, "message": "cppalloc.c (memory_full): Don't use fatal; use fprintf+exit.\n\n* cppalloc.c (memory_full):  Don't use fatal;  use fprintf+exit.\n* cppalloc.c (xcalloc):  Move from here to cpplib.c.\n\nFrom-SVN: r12206", "tree": {"sha": "620a4f3abe564e35da35b5b72240936928f1121e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/620a4f3abe564e35da35b5b72240936928f1121e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/426b6fa3ab953ff01fe116eb3a29e8bb04ba0e93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/426b6fa3ab953ff01fe116eb3a29e8bb04ba0e93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/426b6fa3ab953ff01fe116eb3a29e8bb04ba0e93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/426b6fa3ab953ff01fe116eb3a29e8bb04ba0e93/comments", "author": null, "committer": null, "parents": [{"sha": "fabe72bb8921275bb23c67d5c7b66f3fcc6d9721", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fabe72bb8921275bb23c67d5c7b66f3fcc6d9721", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fabe72bb8921275bb23c67d5c7b66f3fcc6d9721"}], "stats": {"total": 23, "additions": 7, "deletions": 16}, "files": [{"sha": "79d4c9b3f65730b1be1e4a7324eae3e245543292", "filename": "gcc/cppalloc.c", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/426b6fa3ab953ff01fe116eb3a29e8bb04ba0e93/gcc%2Fcppalloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/426b6fa3ab953ff01fe116eb3a29e8bb04ba0e93/gcc%2Fcppalloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppalloc.c?ref=426b6fa3ab953ff01fe116eb3a29e8bb04ba0e93", "patch": "@@ -23,22 +23,24 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n  what you give them.   Help stamp out software-hoarding!  */\n \n #include \"config.h\"\n+#include <stdio.h>\n+#include \"cpplib.h\"\n \n static void\n memory_full ()\n {\n-  fatal (\"Memory exhausted.\");\n+  fprintf (stderr, \"%s: Memory exhausted.\\n\", progname);\n+  exit (FATAL_EXIT_CODE);\n }\n \n char *\n xmalloc (size)\n      unsigned size;\n {\n   register char *ptr = (char *) malloc (size);\n-  if (ptr != 0) return (ptr);\n-  memory_full ();\n-  /*NOTREACHED*/\n-  return 0;\n+  if (ptr == 0)\n+    memory_full ();\n+  return ptr;\n }\n \n char *\n@@ -51,14 +53,3 @@ xrealloc (old, size)\n     memory_full ();\n   return ptr;\n }\n-\n-char *\n-xcalloc (number, size)\n-     unsigned number, size;\n-{\n-  register unsigned total = number * size;\n-  register char *ptr = (char *) calloc (number, size);\n-  if (ptr == 0)\n-    memory_full ();\n-  return ptr;\n-}"}]}