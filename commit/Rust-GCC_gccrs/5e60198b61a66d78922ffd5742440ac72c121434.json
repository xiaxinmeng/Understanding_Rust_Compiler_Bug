{"sha": "5e60198b61a66d78922ffd5742440ac72c121434", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU2MDE5OGI2MWE2NmQ3ODkyMmZmZDU3NDI0NDBhYzcyYzEyMTQzNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-04-14T17:55:30Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-04-14T17:55:30Z"}, "message": "sse.md (sse4_1): New mode attribute.\n\n\t* config/i386/sse.md (sse4_1): New mode attribute.\n\t(<sse4_1>_blend<ssemodesuffix><avxmodesuffix>): Macroize from\n\tavx_blend<ssemodesuffix><avxmodesuffix> and\n\tsse4_1_blend<ssemodesuffix> using VF mode iterator.\n\t(<sse4_1>_blendv<ssemodesuffix><avxmodesuffix>): Macroize from\n\tavx_blendv<ssemodesuffix><avxmodesuffix> and\n\tsse4_1_blendv<ssemodesuffix> using VF mode iterator.\n\t(<sse4_1>_dp<ssemodesuffix><avxmodesuffix>): Macroize from\n\tavx_dp<ssemodesuffix><avxmodesuffix> and\n\tsse4_1_dp<ssemodesuffix> using VF mode iterator.\n\t(sse4_1_mpsadbw): Merge with *avx_mpsadbw.\n\t(sse4_1_packusdw): Merge with *avx_packusdw.\n\t(sse4_1_pblendvb): Merge with *avx_pblendvb.\n\t(sse4_1_pblendw): Merge with *avx_pblendw.\n\t(avx_vtest<ssemodesuffix><avxmodesuffix>): Use VF mode iterator.\n\t(<sse4_1>_round<ssemodesuffix><avxmodesuffix>): Macroize from\n\tavx_round<ssemodesuffix>256 and sse4_1_round<ssemodesuffix> using\n\tVF mode iterator.\n\t(sse4_1_round<ssescalarmodesuffix>): Merge with\n\t*avx_round<ssescalarmodesuffix>.\n\t(aesenc): Merge with *avx_aesenc.\n\t(aesenclast): Merge with *avx_aesenclast.\n\t(aesdec): Merge with *avx_aesdec.\n\t(aesdeclast): Merge with *avx_aesdeclast.\n\t(pclmulqdq): Merge with *pclmulqdq.\n\t* config/i386/predicates.md (reg_not_xmm0_operand_maybe_avx):\n\tNew predicate.\n\t(nonimm_not_xmm0_operand_maybe_avx): Ditto.\n\nFrom-SVN: r172439", "tree": {"sha": "d94eff8d6ffb7f2d3067b4929921df83c8531db8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d94eff8d6ffb7f2d3067b4929921df83c8531db8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e60198b61a66d78922ffd5742440ac72c121434", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e60198b61a66d78922ffd5742440ac72c121434", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e60198b61a66d78922ffd5742440ac72c121434", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e60198b61a66d78922ffd5742440ac72c121434/comments", "author": null, "committer": null, "parents": [{"sha": "6f19785029f4aa8cf9f78fbd9bd446ba990f4a78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f19785029f4aa8cf9f78fbd9bd446ba990f4a78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f19785029f4aa8cf9f78fbd9bd446ba990f4a78"}], "stats": {"total": 515, "additions": 215, "deletions": 300}, "files": [{"sha": "010f7813ddd7c374bf91ab78e9987610a5d33af2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 43, "deletions": 11, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e60198b61a66d78922ffd5742440ac72c121434/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e60198b61a66d78922ffd5742440ac72c121434/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e60198b61a66d78922ffd5742440ac72c121434", "patch": "@@ -1,3 +1,34 @@\n+2011-04-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sse.md (sse4_1): New mode attribute.\n+\t(<sse4_1>_blend<ssemodesuffix><avxmodesuffix>): Macroize from\n+\tavx_blend<ssemodesuffix><avxmodesuffix> and\n+\tsse4_1_blend<ssemodesuffix> using VF mode iterator.\n+\t(<sse4_1>_blendv<ssemodesuffix><avxmodesuffix>): Macroize from\n+\tavx_blendv<ssemodesuffix><avxmodesuffix> and\n+\tsse4_1_blendv<ssemodesuffix> using VF mode iterator.\n+\t(<sse4_1>_dp<ssemodesuffix><avxmodesuffix>): Macroize from\n+\tavx_dp<ssemodesuffix><avxmodesuffix> and\n+\tsse4_1_dp<ssemodesuffix> using VF mode iterator.\n+\t(sse4_1_mpsadbw): Merge with *avx_mpsadbw.\n+\t(sse4_1_packusdw): Merge with *avx_packusdw.\n+\t(sse4_1_pblendvb): Merge with *avx_pblendvb.\n+\t(sse4_1_pblendw): Merge with *avx_pblendw.\n+\t(avx_vtest<ssemodesuffix><avxmodesuffix>): Use VF mode iterator.\n+\t(<sse4_1>_round<ssemodesuffix><avxmodesuffix>): Macroize from\n+\tavx_round<ssemodesuffix>256 and sse4_1_round<ssemodesuffix> using\n+\tVF mode iterator.\n+\t(sse4_1_round<ssescalarmodesuffix>): Merge with\n+\t*avx_round<ssescalarmodesuffix>.\n+\t(aesenc): Merge with *avx_aesenc.\n+\t(aesenclast): Merge with *avx_aesenclast.\n+\t(aesdec): Merge with *avx_aesdec.\n+\t(aesdeclast): Merge with *avx_aesdeclast.\n+\t(pclmulqdq): Merge with *pclmulqdq.\n+\t* config/i386/predicates.md (reg_not_xmm0_operand_maybe_avx):\n+\tNew predicate.\n+\t(nonimm_not_xmm0_operand_maybe_avx): Ditto.\n+\n 2011-04-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR middle-end/48608\n@@ -48,9 +79,10 @@\n \t(inline_summary_vec): Define.\n \t(inline_summary_alloc, dump_inline_summary, debug_inline_summary,\n \tdump_inline_summaries): New functions.\n-\t(estimate_function_body_sizes): Properly compute size/time of outgoing calls.\n-\t(compute_inline_parameters): Alloc inline_summary; do not compute size/time\n-\tof incomming calls.\n+\t(estimate_function_body_sizes): Properly compute size/time of outgoing\n+\tcalls.\n+\t(compute_inline_parameters): Alloc inline_summary; do not compute\n+\tsize/time of incomming calls.\n \t(estimate_edge_time): Avoid missing time summary hack.\n \t(inline_read_summary): Read inline summary info.\n \t(inline_write_summary): Write inline summary info.\n@@ -133,9 +165,9 @@\n \t* function.c (block_chainon): Define.\n \n 2011-04-14  Anatoly Sokolov  <aesok@post.ru>\n-            Eric Weddington  <eric.weddington@atmel.com>\n-            Georg-Johann Lay <avr@gjlay.de> \n-\t\n+\t    Eric Weddington  <eric.weddington@atmel.com>\n+\t    Georg-Johann Lay <avr@gjlay.de>\n+\n \t* config/avr/avr.c: (\"insn-codes.h\", \"optabs.h\", \"langhooks.h\"):\n \tNew Includes\n \t(avr_init_builtins, avr_expand_builtin,\n@@ -145,9 +177,9 @@\n \t(struct avr_builtin_description): New struct\n \t(bdesc_1arg, bdesc_2arg): New arrays describing some RTL builtins.\n \t(TARGET_INIT_BUILTINS, TARGET_EXPAND_BUILTIN): Define.\n-\t\n+\n \t* config/avr/avr.md (UNSPEC_FMUL, UNSPEC_FMULS, UNSPEC_FMULSU,\n-\tUNSPECV_ENABLE_IRQS, UNSPECV_NOP, UNSPECV_SLEEP, UNSPECV_WDR, \n+\tUNSPECV_ENABLE_IRQS, UNSPECV_NOP, UNSPECV_SLEEP, UNSPECV_WDR,\n \tUNSPECV_DELAY_CYCLES): new enumeration values\n \t(UNSPEC_SEI, UNSPEC_CLI): Remove enumeration values\n \t(\"enable_interrupt\"): Use UNSPECV_ENABLE_IRQS\n@@ -156,14 +188,14 @@\n \t(\"delay_cycles_1\", \"delay_cycles_2\", \"delay_cycles_3\",\n \t\"delay_cycles_4\", \"nopv\", \"sleep\", \"wdr\", \"fmul\", \"fmuls\",\n \t\"fmulsu\"): New insns\n-\t\n+\n \t* config/avr/avr-c.c: fix line endings\n \t(avr_cpu_cpp_builtins): New builtin defines: __BUILTIN_AVR_NOP,\n \t__BUILTIN_AVR_SEI, __BUILTIN_AVR_CLI, __BUILTIN_AVR_WDR,\n \t__BUILTIN_AVR_SLEEP, __BUILTIN_AVR_SWAP,\n \t__BUILTIN_AVR_DELAY_CYCLES, __BUILTIN_AVR_FMUL,\n \t__BUILTIN_AVR_FMULS, __BUILTIN_AVR_FMULSU.\n-\t\n+\n \t* doc/extend.texi (AVR Built-in Functions): New node\n \t(Target Builtins): Add documentation of AVR\n \tbuilt-in functions.\n@@ -181,7 +213,7 @@\n \t* tree.c (initialize_tree_contains_struct): Mark TS_CONSTRUCTOR as\n \tTS_TYPED instead of TS_COMMON.\n \n-2011-04-12  Uros Bizjak  <ubizjak@gmail.com>\n+2011-04-13  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sse.md (*sse2_uavgv16qi3): Merge with *avx_uavgv16qi3.\n \t(*sse2_uavgv8hi3): Merge with *avx_uavgv8hi3."}, {"sha": "32d8efdd837c070f667cabb51e7ea61d535bf53c", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e60198b61a66d78922ffd5742440ac72c121434/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e60198b61a66d78922ffd5742440ac72c121434/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=5e60198b61a66d78922ffd5742440ac72c121434", "patch": "@@ -106,11 +106,23 @@\n   return !REG_P (op) || REGNO (op) != FIRST_SSE_REG;\n })\n \n-;; As above, but allow nonimmediate operands.\n+;; As above, but also allow memory operands.\n (define_predicate \"nonimm_not_xmm0_operand\"\n   (ior (match_operand 0 \"memory_operand\")\n        (match_operand 0 \"reg_not_xmm0_operand\")))\n \n+;; Return true if op is not xmm0 register, but only for non-AVX targets.\n+(define_predicate \"reg_not_xmm0_operand_maybe_avx\"\n+  (if_then_else (match_test \"TARGET_AVX\")\n+    (match_operand 0 \"register_operand\")\n+    (match_operand 0 \"reg_not_xmm0_operand\")))\n+\n+;; As above, but also allow memory operands.\n+(define_predicate \"nonimm_not_xmm0_operand_maybe_avx\"\n+  (if_then_else (match_test \"TARGET_AVX\")\n+    (match_operand 0 \"nonimmediate_operand\")\n+    (match_operand 0 \"nonimm_not_xmm0_operand\")))\n+\n ;; Return true if VALUE can be stored in a sign extended immediate field.\n (define_predicate \"x86_64_immediate_operand\"\n   (match_code \"const_int,symbol_ref,label_ref,const\")"}, {"sha": "c98d4647b5d5d095a0c74efaf951677ce5cc4da8", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 159, "deletions": 288, "changes": 447, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e60198b61a66d78922ffd5742440ac72c121434/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e60198b61a66d78922ffd5742440ac72c121434/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=5e60198b61a66d78922ffd5742440ac72c121434", "patch": "@@ -124,6 +124,10 @@\n    (V4SF \"sse\") (V2DF \"sse2\")\n    (V8SF \"avx\") (V4DF \"avx\")])\n \n+(define_mode_attr sse4_1\n+  [(V4SF \"sse4_1\") (V2DF \"sse4_1\")\n+   (V8SF \"avx\") (V4DF \"avx\")])\n+\n ;; Mapping from integer vector mode to mnemonic suffix\n (define_mode_attr ssevecsize [(V16QI \"b\") (V8HI \"w\") (V4SI \"d\") (V2DI \"q\")])\n \n@@ -8124,91 +8128,60 @@\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n-(define_insn \"avx_blend<ssemodesuffix><avxmodesuffix>\"\n-  [(set (match_operand:AVXMODEF2P 0 \"register_operand\" \"=x\")\n-\t(vec_merge:AVXMODEF2P\n-\t  (match_operand:AVXMODEF2P 2 \"nonimmediate_operand\" \"xm\")\n-\t  (match_operand:AVXMODEF2P 1 \"register_operand\" \"x\")\n-\t  (match_operand:SI 3 \"const_0_to_<blendbits>_operand\" \"n\")))]\n-  \"TARGET_AVX\"\n-  \"vblend<ssemodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"<avxvecmode>\")])\n-\n-(define_insn \"avx_blendv<ssemodesuffix><avxmodesuffix>\"\n-  [(set (match_operand:AVXMODEF2P 0 \"register_operand\" \"=x\")\n-\t(unspec:AVXMODEF2P\n-\t  [(match_operand:AVXMODEF2P 1 \"register_operand\" \"x\")\n-\t   (match_operand:AVXMODEF2P 2 \"nonimmediate_operand\" \"xm\")\n-\t   (match_operand:AVXMODEF2P 3 \"register_operand\" \"x\")]\n-\t  UNSPEC_BLENDV))]\n-  \"TARGET_AVX\"\n-  \"vblendv<ssemodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"<avxvecmode>\")])\n-\n-(define_insn \"sse4_1_blend<ssemodesuffix>\"\n-  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n-\t(vec_merge:SSEMODEF2P\n-\t  (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"xm\")\n-\t  (match_operand:SSEMODEF2P 1 \"register_operand\" \"0\")\n-\t  (match_operand:SI 3 \"const_0_to_<blendbits>_operand\" \"n\")))]\n+(define_insn \"<sse4_1>_blend<ssemodesuffix><avxmodesuffix>\"\n+  [(set (match_operand:VF 0 \"register_operand\" \"=x,x\")\n+\t(vec_merge:VF\n+\t  (match_operand:VF 2 \"nonimmediate_operand\" \"xm,xm\")\n+\t  (match_operand:VF 1 \"register_operand\" \"0,x\")\n+\t  (match_operand:SI 3 \"const_0_to_<blendbits>_operand\" \"n,n\")))]\n   \"TARGET_SSE4_1\"\n-  \"blend<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_data16\" \"1\")\n-   (set_attr \"prefix_extra\" \"1\")\n+  \"@\n+   blend<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n+   vblend<ssemodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"ssemov\")\n    (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"sse4_1_blendv<ssemodesuffix>\"\n-  [(set (match_operand:SSEMODEF2P 0 \"reg_not_xmm0_operand\" \"=x\")\n-\t(unspec:SSEMODEF2P\n-\t  [(match_operand:SSEMODEF2P 1 \"reg_not_xmm0_operand\" \"0\")\n-\t   (match_operand:SSEMODEF2P 2 \"nonimm_not_xmm0_operand\" \"xm\")\n-\t   (match_operand:SSEMODEF2P 3 \"register_operand\" \"Yz\")]\n+(define_insn \"<sse4_1>_blendv<ssemodesuffix><avxmodesuffix>\"\n+  [(set (match_operand:VF 0 \"reg_not_xmm0_operand_maybe_avx\" \"=x,x\")\n+\t(unspec:VF\n+\t  [(match_operand:VF 1 \"reg_not_xmm0_operand_maybe_avx\" \"0,x\")\n+\t   (match_operand:VF 2 \"nonimm_not_xmm0_operand_maybe_avx\" \"xm,xm\")\n+\t   (match_operand:VF 3 \"register_operand\" \"Yz,x\")]\n \t  UNSPEC_BLENDV))]\n   \"TARGET_SSE4_1\"\n-  \"blendv<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_data16\" \"1\")\n+  \"@\n+   blendv<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n+   vblendv<ssemodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"ssemov\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n    (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"avx_dp<ssemodesuffix><avxmodesuffix>\"\n-  [(set (match_operand:AVXMODEF2P 0 \"register_operand\" \"=x\")\n-\t(unspec:AVXMODEF2P\n-\t  [(match_operand:AVXMODEF2P 1 \"nonimmediate_operand\" \"%x\")\n-\t   (match_operand:AVXMODEF2P 2 \"nonimmediate_operand\" \"xm\")\n-\t   (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")]\n-\t  UNSPEC_DP))]\n-  \"TARGET_AVX\"\n-  \"vdp<ssemodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n-  [(set_attr \"type\" \"ssemul\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"mode\" \"<avxvecmode>\")])\n-\n-(define_insn \"sse4_1_dp<ssemodesuffix>\"\n-  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n-\t(unspec:SSEMODEF2P\n-\t  [(match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%0\")\n-\t   (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"xm\")\n-\t   (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")]\n+(define_insn \"<sse4_1>_dp<ssemodesuffix><avxmodesuffix>\"\n+  [(set (match_operand:VF 0 \"register_operand\" \"=x,x\")\n+\t(unspec:VF\n+\t  [(match_operand:VF 1 \"nonimmediate_operand\" \"%0,x\")\n+\t   (match_operand:VF 2 \"nonimmediate_operand\" \"xm,xm\")\n+\t   (match_operand:SI 3 \"const_0_to_255_operand\" \"n,n\")]\n \t  UNSPEC_DP))]\n   \"TARGET_SSE4_1\"\n-  \"dp<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\"\n-  [(set_attr \"type\" \"ssemul\")\n-   (set_attr \"prefix_data16\" \"1\")\n-   (set_attr \"prefix_extra\" \"1\")\n+  \"@\n+   dp<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n+   vdp<ssemodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"ssemul\")\n    (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"sse4_1_movntdqa\"\n@@ -8222,111 +8195,73 @@\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"*avx_mpsadbw\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=x\")\n-\t(unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"x\")\n-\t\t       (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t       (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")]\n-\t\t      UNSPEC_MPSADBW))]\n-  \"TARGET_AVX\"\n-  \"vmpsadbw\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n-  [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"sse4_1_mpsadbw\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=x\")\n-\t(unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"0\")\n-\t\t       (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t       (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")]\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"=x,x\")\n+\t(unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"0,x\")\n+\t\t       (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm,xm\")\n+\t\t       (match_operand:SI 3 \"const_0_to_255_operand\" \"n,n\")]\n \t\t      UNSPEC_MPSADBW))]\n   \"TARGET_SSE4_1\"\n-  \"mpsadbw\\t{%3, %2, %0|%0, %2, %3}\"\n-  [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix_extra\" \"1\")\n+  \"@\n+   mpsadbw\\t{%3, %2, %0|%0, %2, %3}\n+   vmpsadbw\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sselog1\")\n    (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*avx_packusdw\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n-\t(vec_concat:V8HI\n-\t  (us_truncate:V4HI\n-\t    (match_operand:V4SI 1 \"register_operand\" \"x\"))\n-\t  (us_truncate:V4HI\n-\t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\"))))]\n-  \"TARGET_AVX\"\n-  \"vpackusdw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"sse4_1_packusdw\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x\")\n \t(vec_concat:V8HI\n \t  (us_truncate:V4HI\n-\t    (match_operand:V4SI 1 \"register_operand\" \"0\"))\n+\t    (match_operand:V4SI 1 \"register_operand\" \"0,x\"))\n \t  (us_truncate:V4HI\n-\t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\"))))]\n+\t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm,xm\"))))]\n   \"TARGET_SSE4_1\"\n-  \"packusdw\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*avx_pblendvb\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=x\")\n-\t(unspec:V16QI [(match_operand:V16QI 1 \"register_operand\"  \"x\")\n-\t\t       (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t       (match_operand:V16QI 3 \"register_operand\" \"x\")]\n-\t\t      UNSPEC_BLENDV))]\n-  \"TARGET_AVX\"\n-  \"vpblendvb\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n-  [(set_attr \"type\" \"ssemov\")\n+  \"@\n+   packusdw\\t{%2, %0|%0, %2}\n+   vpackusdw\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sselog\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"sse4_1_pblendvb\"\n-  [(set (match_operand:V16QI 0 \"reg_not_xmm0_operand\" \"=x\")\n-\t(unspec:V16QI [(match_operand:V16QI 1 \"reg_not_xmm0_operand\"  \"0\")\n-\t\t       (match_operand:V16QI 2 \"nonimm_not_xmm0_operand\" \"xm\")\n-\t\t       (match_operand:V16QI 3 \"register_operand\" \"Yz\")]\n-\t\t      UNSPEC_BLENDV))]\n+  [(set (match_operand:V16QI 0 \"reg_not_xmm0_operand\" \"=x,x\")\n+\t(unspec:V16QI\n+\t  [(match_operand:V16QI 1 \"reg_not_xmm0_operand_maybe_avx\"  \"0,x\")\n+\t   (match_operand:V16QI 2 \"nonimm_not_xmm0_operand_maybe_avx\" \"xm,xm\")\n+\t   (match_operand:V16QI 3 \"register_operand\" \"Yz,x\")]\n+\t  UNSPEC_BLENDV))]\n   \"TARGET_SSE4_1\"\n-  \"pblendvb\\t{%3, %2, %0|%0, %2, %3}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*avx_pblendw\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n-\t(vec_merge:V8HI\n-\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")\n-\t  (match_operand:V8HI 1 \"register_operand\" \"x\")\n-\t  (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")))]\n-  \"TARGET_AVX\"\n-  \"vpblendw\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix\" \"vex\")\n+  \"@\n+   pblendvb\\t{%3, %2, %0|%0, %2, %3}\n+   vpblendvb\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"length_immediate\" \"*,1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"sse4_1_pblendw\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x\")\n \t(vec_merge:V8HI\n-\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")\n-\t  (match_operand:V8HI 1 \"register_operand\" \"0\")\n-\t  (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")))]\n+\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm,xm\")\n+\t  (match_operand:V8HI 1 \"register_operand\" \"0,x\")\n+\t  (match_operand:SI 3 \"const_0_to_255_operand\" \"n,n\")))]\n   \"TARGET_SSE4_1\"\n-  \"pblendw\\t{%3, %2, %0|%0, %2, %3}\"\n-  [(set_attr \"type\" \"ssemov\")\n+  \"@\n+   pblendw\\t{%3, %2, %0|%0, %2, %3}\n+   vpblendw\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"sse4_1_phminposuw\"\n@@ -8438,8 +8373,8 @@\n ;; setting FLAGS_REG. But it is not a really compare instruction.\n (define_insn \"avx_vtest<ssemodesuffix><avxmodesuffix>\"\n   [(set (reg:CC FLAGS_REG)\n-\t(unspec:CC [(match_operand:AVXMODEF2P 0 \"register_operand\" \"x\")\n-\t\t    (match_operand:AVXMODEF2P 1 \"nonimmediate_operand\" \"xm\")]\n+\t(unspec:CC [(match_operand:VF 0 \"register_operand\" \"x\")\n+\t\t    (match_operand:VF 1 \"nonimmediate_operand\" \"xm\")]\n \t\t   UNSPEC_VTESTP))]\n   \"TARGET_AVX\"\n   \"vtest<ssemodesuffix>\\t{%1, %0|%0, %1}\"\n@@ -8474,67 +8409,44 @@\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"avx_round<ssemodesuffix>256\"\n-  [(set (match_operand:AVX256MODEF2P 0 \"register_operand\" \"=x\")\n-\t(unspec:AVX256MODEF2P\n-\t  [(match_operand:AVX256MODEF2P 1 \"nonimmediate_operand\" \"xm\")\n-\t   (match_operand:SI 2 \"const_0_to_15_operand\" \"n\")]\n-\t  UNSPEC_ROUND))]\n-  \"TARGET_AVX\"\n-  \"vround<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"ssecvt\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"sse4_1_round<ssemodesuffix>\"\n-  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n-\t(unspec:SSEMODEF2P\n-\t  [(match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"xm\")\n+(define_insn \"<sse4_1>_round<ssemodesuffix><avxmodesuffix>\"\n+  [(set (match_operand:VF 0 \"register_operand\" \"=x\")\n+\t(unspec:VF\n+\t  [(match_operand:VF 1 \"nonimmediate_operand\" \"xm\")\n \t   (match_operand:SI 2 \"const_0_to_15_operand\" \"n\")]\n \t  UNSPEC_ROUND))]\n   \"TARGET_ROUND\"\n   \"%vround<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"ssecvt\")\n-   (set_attr \"prefix_data16\" \"1\")\n+   (set (attr \"prefix_data16\")\n+     (if_then_else\n+       (ne (symbol_ref \"TARGET_AVX\") (const_int 0))\n+     (const_string \"*\")\n+     (const_string \"1\")))\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"*avx_round<ssescalarmodesuffix>\"\n-  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n-\t(vec_merge:SSEMODEF2P\n-\t  (unspec:SSEMODEF2P\n-\t    [(match_operand:SSEMODEF2P 2 \"register_operand\" \"x\")\n-\t     (match_operand:SI 3 \"const_0_to_15_operand\" \"n\")]\n-\t    UNSPEC_ROUND)\n-\t  (match_operand:SSEMODEF2P 1 \"register_operand\" \"x\")\n-\t  (const_int 1)))]\n-  \"TARGET_AVX\"\n-  \"vround<ssescalarmodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n-  [(set_attr \"type\" \"ssecvt\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n (define_insn \"sse4_1_round<ssescalarmodesuffix>\"\n-  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n-\t(vec_merge:SSEMODEF2P\n-\t  (unspec:SSEMODEF2P\n-\t    [(match_operand:SSEMODEF2P 2 \"register_operand\" \"x\")\n-\t     (match_operand:SI 3 \"const_0_to_15_operand\" \"n\")]\n+  [(set (match_operand:VF_128 0 \"register_operand\" \"=x,x\")\n+\t(vec_merge:VF_128\n+\t  (unspec:VF_128\n+\t    [(match_operand:VF_128 2 \"register_operand\" \"x,x\")\n+\t     (match_operand:SI 3 \"const_0_to_15_operand\" \"n,n\")]\n \t    UNSPEC_ROUND)\n-\t  (match_operand:SSEMODEF2P 1 \"register_operand\" \"0\")\n+\t  (match_operand:VF_128 1 \"register_operand\" \"0,x\")\n \t  (const_int 1)))]\n   \"TARGET_ROUND\"\n-  \"round<ssescalarmodesuffix>\\t{%3, %2, %0|%0, %2, %3}\"\n-  [(set_attr \"type\" \"ssecvt\")\n-   (set_attr \"prefix_data16\" \"1\")\n-   (set_attr \"prefix_extra\" \"1\")\n+  \"@\n+   round<ssescalarmodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n+   vround<ssescalarmodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"ssecvt\")\n    (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n@@ -10084,96 +9996,65 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n-(define_insn \"*avx_aesenc\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"x\")\n-\t\t       (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\")]\n-\t\t      UNSPEC_AESENC))]\n-  \"TARGET_AES && TARGET_AVX\"\n-  \"vaesenc\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"TI\")])\n \n (define_insn \"aesenc\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"0\")\n-\t\t       (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\")]\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x\")\n+\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"0,x\")\n+\t\t       (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm,xm\")]\n \t\t      UNSPEC_AESENC))]\n   \"TARGET_AES\"\n-  \"aesenc\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*avx_aesenclast\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"x\")\n-\t\t       (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\")]\n-\t\t      UNSPEC_AESENCLAST))]\n-  \"TARGET_AES && TARGET_AVX\"\n-  \"vaesenclast\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sselog1\")\n+  \"@\n+   aesenc\\t{%2, %0|%0, %2}\n+   vaesenc\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sselog1\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"aesenclast\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"0\")\n-\t\t       (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\")]\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x\")\n+\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"0,x\")\n+\t\t       (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm,xm\")]\n \t\t      UNSPEC_AESENCLAST))]\n   \"TARGET_AES\"\n-  \"aesenclast\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*avx_aesdec\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"x\")\n-\t\t       (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\")]\n-\t\t      UNSPEC_AESDEC))]\n-  \"TARGET_AES && TARGET_AVX\"\n-  \"vaesdec\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sselog1\")\n+  \"@\n+   aesenclast\\t{%2, %0|%0, %2}\n+   vaesenclast\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sselog1\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"aesdec\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"0\")\n-\t\t       (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\")]\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x\")\n+\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"0,x\")\n+\t\t       (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm,xm\")]\n \t\t      UNSPEC_AESDEC))]\n   \"TARGET_AES\"\n-  \"aesdec\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*avx_aesdeclast\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"x\")\n-\t\t       (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\")]\n-\t\t      UNSPEC_AESDECLAST))]\n-  \"TARGET_AES && TARGET_AVX\"\n-  \"vaesdeclast\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sselog1\")\n+  \"@\n+   aesdec\\t{%2, %0|%0, %2}\n+   vaesdec\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sselog1\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"aesdeclast\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"0\")\n-\t\t       (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\")]\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x\")\n+\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"0,x\")\n+\t\t       (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm,xm\")]\n \t\t      UNSPEC_AESDECLAST))]\n   \"TARGET_AES\"\n-  \"aesdeclast\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog1\")\n+  \"@\n+   aesdeclast\\t{%2, %0|%0, %2}\n+   vaesdeclast\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sselog1\")\n    (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"aesimc\"\n@@ -10200,31 +10081,21 @@\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"*vpclmulqdq\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"x\")\n-\t\t      (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t      (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")]\n-\t\t     UNSPEC_PCLMUL))]\n-  \"TARGET_PCLMUL && TARGET_AVX\"\n-  \"vpclmulqdq\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n-  [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"pclmulqdq\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"0\")\n-\t\t      (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t      (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")]\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x\")\n+\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"0,x\")\n+\t\t      (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm,xm\")\n+\t\t      (match_operand:SI 3 \"const_0_to_255_operand\" \"n,n\")]\n \t\t     UNSPEC_PCLMUL))]\n   \"TARGET_PCLMUL\"\n-  \"pclmulqdq\\t{%3, %2, %0|%0, %2, %3}\"\n-  [(set_attr \"type\" \"sselog1\")\n+  \"@\n+   pclmulqdq\\t{%3, %2, %0|%0, %2, %3}\n+   vpclmulqdq\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sselog1\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_expand \"avx_vzeroall\""}]}