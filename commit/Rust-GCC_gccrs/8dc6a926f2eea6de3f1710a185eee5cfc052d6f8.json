{"sha": "8dc6a926f2eea6de3f1710a185eee5cfc052d6f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRjNmE5MjZmMmVlYTZkZTNmMTcxMGExODVlZWU1Y2ZjMDUyZDZmOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-05-05T16:02:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-05-05T16:02:44Z"}, "message": "re PR tree-optimization/80632 (error: invalid PHI argument with -O2)\n\n\tPR tree-optimization/80632\n\t* tree-switch-conversion.c (struct switch_conv_info): Add target_vop\n\tfield.\n\t(build_arrays): Initialize it for virtual phis.\n\t(fix_phi_nodes): Use it for virtual phis.\n\n\t* gcc.dg/pr80632.c: New test.\n\nFrom-SVN: r247642", "tree": {"sha": "80fe8750598ef749b39239ef296b2a5101858c36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80fe8750598ef749b39239ef296b2a5101858c36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8dc6a926f2eea6de3f1710a185eee5cfc052d6f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dc6a926f2eea6de3f1710a185eee5cfc052d6f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dc6a926f2eea6de3f1710a185eee5cfc052d6f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dc6a926f2eea6de3f1710a185eee5cfc052d6f8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac699a047f74de2bb8f1d538b07c89075cd25c84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac699a047f74de2bb8f1d538b07c89075cd25c84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac699a047f74de2bb8f1d538b07c89075cd25c84"}], "stats": {"total": 67, "additions": 66, "deletions": 1}, "files": [{"sha": "a038415f918240cebd2682267da6a378209b7998", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc6a926f2eea6de3f1710a185eee5cfc052d6f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc6a926f2eea6de3f1710a185eee5cfc052d6f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8dc6a926f2eea6de3f1710a185eee5cfc052d6f8", "patch": "@@ -1,5 +1,11 @@\n 2017-05-05  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/80632\n+\t* tree-switch-conversion.c (struct switch_conv_info): Add target_vop\n+\tfield.\n+\t(build_arrays): Initialize it for virtual phis.\n+\t(fix_phi_nodes): Use it for virtual phis.\n+\n \tPR tree-optimization/80558\n \t* tree-vrp.c (extract_range_from_binary_expr_1): Optimize\n \t[x, y] op z into [x op, y op z] for op & or | if conditions"}, {"sha": "99c237bafb9276cfd41e51dfa893823beb8e9d02", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc6a926f2eea6de3f1710a185eee5cfc052d6f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc6a926f2eea6de3f1710a185eee5cfc052d6f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8dc6a926f2eea6de3f1710a185eee5cfc052d6f8", "patch": "@@ -1,5 +1,8 @@\n 2017-05-05  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/80632\n+\t* gcc.dg/pr80632.c: New test.\n+\n \tPR tree-optimization/80558\n \t* gcc.dg/tree-ssa/vrp115.c: New test.\n "}, {"sha": "0d3c7b3c025ad9108509e8d7e1c312ceed253a76", "filename": "gcc/testsuite/gcc.dg/pr80632.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc6a926f2eea6de3f1710a185eee5cfc052d6f8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80632.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc6a926f2eea6de3f1710a185eee5cfc052d6f8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80632.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80632.c?ref=8dc6a926f2eea6de3f1710a185eee5cfc052d6f8", "patch": "@@ -0,0 +1,35 @@\n+/* PR tree-optimization/80632 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+extern int bar (void);\n+extern void baz (void);\n+int a;\n+\n+int\n+foo (void)\n+{\n+  int c = 8;\n+  if (bar ())\n+    {\n+      baz ();\n+      switch (a)\n+\t{\n+\tcase 0:\n+\t  c = 1;\n+\t  break;\n+\tcase 1:\n+\t  c = 0;\n+\t  break;\n+\tcase 2:\n+\t  c = 0;\n+\t  break;\n+\tcase 3:\n+\t  c = 0;\n+\t  break;\n+\tdefault:\n+\t  c = 1;\n+\t}\n+    }\n+  return c;\n+}"}, {"sha": "0a2a84068a0a07cfd9f79c1eb17595ef208c4db0", "filename": "gcc/tree-switch-conversion.c", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc6a926f2eea6de3f1710a185eee5cfc052d6f8/gcc%2Ftree-switch-conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc6a926f2eea6de3f1710a185eee5cfc052d6f8/gcc%2Ftree-switch-conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.c?ref=8dc6a926f2eea6de3f1710a185eee5cfc052d6f8", "patch": "@@ -581,6 +581,9 @@ struct switch_conv_info\n      switch expression is out of range.  */\n   tree *target_outbound_names;\n \n+  /* VOP SSA_NAME.  */\n+  tree target_vop;\n+\n   /* The first load statement that loads a temporary from a new static array.\n    */\n   gimple *arr_ref_first;\n@@ -1216,6 +1219,24 @@ build_arrays (gswitch *swtch, struct switch_conv_info *info)\n       gphi *phi = gpi.phi ();\n       if (!virtual_operand_p (gimple_phi_result (phi)))\n \tbuild_one_array (swtch, i++, arr_index_type, phi, tidx, info);\n+      else\n+\t{\n+\t  edge e;\n+\t  edge_iterator ei;\n+\t  FOR_EACH_EDGE (e, ei, info->switch_bb->succs)\n+\t    {\n+\t      if (e->dest == info->final_bb)\n+\t\tbreak;\n+\t      if (!info->default_case_nonstandard\n+\t\t  || e->dest != info->default_bb)\n+\t\t{\n+\t\t  e = single_succ_edge (e->dest);\n+\t\t  break;\n+\t\t}\n+\t    }\n+\t  gcc_assert (e && e->dest == info->final_bb);\n+\t  info->target_vop = PHI_ARG_DEF_FROM_EDGE (phi, e);\n+\t}\n     }\n }\n \n@@ -1279,7 +1300,7 @@ fix_phi_nodes (edge e1f, edge e2f, basic_block bbf,\n       gphi *phi = gsi.phi ();\n       tree inbound, outbound;\n       if (virtual_operand_p (gimple_phi_result (phi)))\n-\tinbound = outbound = gimple_vop (cfun);\n+\tinbound = outbound = info->target_vop;\n       else\n \t{\n \t  inbound = info->target_inbound_names[i];"}]}