{"sha": "7c67ff4a1b44996cea0a72d0d9ee585c59fe2934", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M2N2ZmNGExYjQ0OTk2Y2VhMGE3MmQwZDllZTU4NWM1OWZlMjkzNA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-12-19T16:22:47Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-12-19T16:22:47Z"}, "message": "c++, asm: Do not handle any asm-qualifiers in top-level asm\n\nPreviously, \"volatile\" was allowed.  Changing this simplifies the code,\nmakes things more regular, and makes the C and C++ frontends handle\nthis the same way.\n\n\ncp/\n\t* parser.c (cp_parser_asm_definition): Do not allow any asm qualifiers\n\ton top-level asm.\n\ntestsuite/\n\t* g++.dg/asm-qual-3.C: New testcase.\n\t* gcc.dg/asm-qual-3.c: New testcase.\n\nFrom-SVN: r267280", "tree": {"sha": "579c243ba3642e4eb997b3da7d02917862080b77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/579c243ba3642e4eb997b3da7d02917862080b77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c67ff4a1b44996cea0a72d0d9ee585c59fe2934", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c67ff4a1b44996cea0a72d0d9ee585c59fe2934", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c67ff4a1b44996cea0a72d0d9ee585c59fe2934", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c67ff4a1b44996cea0a72d0d9ee585c59fe2934/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1edf88662b51da93460b6139344edb5f9b943b0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1edf88662b51da93460b6139344edb5f9b943b0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1edf88662b51da93460b6139344edb5f9b943b0e"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "01d2f576c227cd9a2001d5651fcfbaa7047ab6d0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c67ff4a1b44996cea0a72d0d9ee585c59fe2934/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c67ff4a1b44996cea0a72d0d9ee585c59fe2934/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7c67ff4a1b44996cea0a72d0d9ee585c59fe2934", "patch": "@@ -1,3 +1,8 @@\n+2018-12-19  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* parser.c (cp_parser_asm_definition): Do not allow any asm qualifiers\n+\ton top-level asm.\n+\n 2018-12-19  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* parser.c (cp_parser_asm_definition) <RID_CONST, RID_RESTRICT>: Give"}, {"sha": "d6bac826581200537853d0f4b801cd32f1a176c2", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c67ff4a1b44996cea0a72d0d9ee585c59fe2934/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c67ff4a1b44996cea0a72d0d9ee585c59fe2934/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=7c67ff4a1b44996cea0a72d0d9ee585c59fe2934", "patch": "@@ -19699,7 +19699,8 @@ cp_parser_asm_definition (cp_parser* parser)\n   location_t volatile_loc = UNKNOWN_LOCATION;\n   location_t inline_loc = UNKNOWN_LOCATION;\n   location_t goto_loc = UNKNOWN_LOCATION;\n-  if (cp_parser_allow_gnu_extensions_p (parser))\n+\n+  if (cp_parser_allow_gnu_extensions_p (parser) && parser->in_function_body)\n     for (;;)\n       {\n \tcp_token *token = cp_lexer_peek_token (parser->lexer);\n@@ -19718,8 +19719,6 @@ cp_parser_asm_definition (cp_parser* parser)\n \t    continue;\n \n \t  case RID_INLINE:\n-\t    if (!parser->in_function_body)\n-\t      break;\n \t    if (inline_loc)\n \t      {\n \t\terror_at (loc, \"duplicate asm qualifier %qT\", token->u.value);\n@@ -19731,8 +19730,6 @@ cp_parser_asm_definition (cp_parser* parser)\n \t    continue;\n \n \t  case RID_GOTO:\n-\t    if (!parser->in_function_body)\n-\t      break;\n \t    if (goto_loc)\n \t      {\n \t\terror_at (loc, \"duplicate asm qualifier %qT\", token->u.value);"}, {"sha": "d1ebfc7c3469577d51597762c30ab21a97029b5f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c67ff4a1b44996cea0a72d0d9ee585c59fe2934/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c67ff4a1b44996cea0a72d0d9ee585c59fe2934/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c67ff4a1b44996cea0a72d0d9ee585c59fe2934", "patch": "@@ -1,3 +1,8 @@\n+2018-12-19  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* g++.dg/asm-qual-3.C: New testcase.\n+\t* gcc.dg/asm-qual-3.c: New testcase.\n+\n 2018-12-19  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* g++.dg/asm-qual-1.C: New testcase."}, {"sha": "95c9b570a5f813e34528f51f59c227b83f1f6445", "filename": "gcc/testsuite/g++.dg/asm-qual-3.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c67ff4a1b44996cea0a72d0d9ee585c59fe2934/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasm-qual-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c67ff4a1b44996cea0a72d0d9ee585c59fe2934/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasm-qual-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasm-qual-3.C?ref=7c67ff4a1b44996cea0a72d0d9ee585c59fe2934", "patch": "@@ -0,0 +1,12 @@\n+// Test that asm-qualifiers are not allowed on toplevel asm.\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++98\" }\n+\n+asm const (\"\");    // { dg-error {expected '\\(' before 'const'} }\n+asm volatile (\"\"); // { dg-error {expected '\\(' before 'volatile'} }\n+asm restrict (\"\"); // { dg-error {expected '\\(' before 'restrict'} }\n+asm inline (\"\");   // { dg-error {expected '\\(' before 'inline'} }\n+asm goto (\"\");     // { dg-error {expected '\\(' before 'goto'} }\n+\n+// There are many other things wrong with this code, so:\n+// { dg-excess-errors \"\" }"}, {"sha": "f85d8bff8981ba7bfea1aeb4e9e49fcc5f603e97", "filename": "gcc/testsuite/gcc.dg/asm-qual-3.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c67ff4a1b44996cea0a72d0d9ee585c59fe2934/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-qual-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c67ff4a1b44996cea0a72d0d9ee585c59fe2934/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-qual-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-qual-3.c?ref=7c67ff4a1b44996cea0a72d0d9ee585c59fe2934", "patch": "@@ -0,0 +1,9 @@\n+/* Test that asm-qualifiers are not allowed on toplevel asm.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99\" } */\n+\n+asm const (\"\");    /* { dg-error {expected '\\(' before 'const'} } */\n+asm volatile (\"\"); /* { dg-error {expected '\\(' before 'volatile'} } */\n+asm restrict (\"\"); /* { dg-error {expected '\\(' before 'restrict'} } */\n+asm inline (\"\");   /* { dg-error {expected '\\(' before 'inline'} } */\n+asm goto (\"\");     /* { dg-error {expected '\\(' before 'goto'} } */"}]}