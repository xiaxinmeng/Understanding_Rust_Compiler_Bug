{"sha": "ea4210ef82eac78a2a512b48c888b88c9912c6eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE0MjEwZWY4MmVhYzc4YTJhNTEyYjQ4Yzg4OGI4OGM5OTEyYzZlYg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2002-11-18T14:01:23Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2002-11-18T14:01:23Z"}, "message": "sh-protos.h (sh_mark_label): Declare.\n\n\t* config/sh/sh-protos.h (sh_mark_label): Declare.\n\t* config/sh/sh.c (sh_mark_label): New function, taken from\n\tmovdi_const, but fixing the case when the address has an addend.\n\t* config/sh/sh.md (movdi_const, movdi_const_32bit): Use it.\n\nFrom-SVN: r59217", "tree": {"sha": "d563874386d683a14642a7464764df24ddb0d0f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d563874386d683a14642a7464764df24ddb0d0f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea4210ef82eac78a2a512b48c888b88c9912c6eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea4210ef82eac78a2a512b48c888b88c9912c6eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea4210ef82eac78a2a512b48c888b88c9912c6eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea4210ef82eac78a2a512b48c888b88c9912c6eb/comments", "author": null, "committer": null, "parents": [{"sha": "48f5b6723a0f7dd8e8889c2eb4deea9185863386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f5b6723a0f7dd8e8889c2eb4deea9185863386", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48f5b6723a0f7dd8e8889c2eb4deea9185863386"}], "stats": {"total": 48, "additions": 32, "deletions": 16}, "files": [{"sha": "715b380e9383571923b6e1525c88d55d459b55d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea4210ef82eac78a2a512b48c888b88c9912c6eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea4210ef82eac78a2a512b48c888b88c9912c6eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea4210ef82eac78a2a512b48c888b88c9912c6eb", "patch": "@@ -1,3 +1,10 @@\n+2002-11-18  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/sh/sh-protos.h (sh_mark_label): Declare.\n+\t* config/sh/sh.c (sh_mark_label): New function, taken from\n+\tmovdi_const, but fixing the case when the address has an addend.\n+\t* config/sh/sh.md (movdi_const, movdi_const_32bit): Use it.\n+\n 2002-11-18  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/sh/sh.c (pool_node): New field: part_of_sequence_p."}, {"sha": "c87000bceebf235a59efe76cc8d3f851e535d778", "filename": "gcc/config/sh/sh-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea4210ef82eac78a2a512b48c888b88c9912c6eb/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea4210ef82eac78a2a512b48c888b88c9912c6eb/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-protos.h?ref=ea4210ef82eac78a2a512b48c888b88c9912c6eb", "patch": "@@ -128,6 +128,7 @@ extern int sh_cfun_interrupt_handler_p PARAMS ((void));\n extern void sh_initialize_trampoline PARAMS ((rtx, rtx, rtx));\n extern enum reg_class sh_cannot_change_mode_class\n \t      PARAMS ((enum machine_mode, enum machine_mode));\n+extern void sh_mark_label PARAMS ((rtx, int));\n \n #ifdef HARD_CONST\n extern void fpscr_set_from_mem PARAMS ((int, HARD_REG_SET));"}, {"sha": "7ea35dc5261966f1ecea3dcabc0e350dff83f6dc", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea4210ef82eac78a2a512b48c888b88c9912c6eb/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea4210ef82eac78a2a512b48c888b88c9912c6eb/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=ea4210ef82eac78a2a512b48c888b88c9912c6eb", "patch": "@@ -7764,4 +7764,26 @@ sh_cannot_change_mode_class (from, to)\n   return NO_REGS;\n }\n \n+\n+/* If ADDRESS refers to a CODE_LABEL, add NUSES to the number of times\n+   that label is used.  */\n+\n+void\n+sh_mark_label (address, nuses)\n+     rtx address;\n+     int nuses;\n+{\n+  if (GOTOFF_P (address))\n+    {\n+      /* Extract the label or symbol.  */\n+      address = XEXP (address, 0);\n+      if (GET_CODE (address) == PLUS)\n+\taddress = XEXP (address, 0);\n+      address = XVECEXP (address, 0, 0);\n+    }\n+  if (GET_CODE (address) == LABEL_REF\n+      && GET_CODE (XEXP (address, 0)) == CODE_LABEL)\n+    LABEL_NUSES (XEXP (address, 0)) += nuses;\n+}\n+\n #include \"gt-sh.h\""}, {"sha": "d57583bf6ac25dff2955030fcc9bbcce8f707870", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea4210ef82eac78a2a512b48c888b88c9912c6eb/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea4210ef82eac78a2a512b48c888b88c9912c6eb/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=ea4210ef82eac78a2a512b48c888b88c9912c6eb", "patch": "@@ -3867,14 +3867,7 @@\n    && MOVI_SHORI_BASE_OPERAND_P (operands[1])\"\n   \"\n {\n-  if (GET_CODE (operands[1]) == LABEL_REF\n-      && GET_CODE (XEXP (operands[1], 0)) == CODE_LABEL)\n-    LABEL_NUSES (XEXP (operands[1], 0)) += 4;\n-  else if (GOTOFF_P (operands[1])\n-\t   && GET_CODE (XVECEXP (XEXP (operands[1], 0), 0, 0)) == LABEL_REF\n-\t   && (GET_CODE (XEXP (XVECEXP (XEXP (operands[1], 0), 0, 0), 0))\n-\t       == CODE_LABEL))\n-    LABEL_NUSES (XEXP (XVECEXP (XEXP (operands[1], 0), 0, 0), 0)) += 4;\n+  sh_mark_label (operands[1], 4);\n }\")\n \n (define_expand \"movdi_const_32bit\"\n@@ -3896,14 +3889,7 @@\n    && MOVI_SHORI_BASE_OPERAND_P (operands[1])\"\n   \"\n {\n-  if (GET_CODE (operands[1]) == LABEL_REF\n-      && GET_CODE (XEXP (operands[1], 0)) == CODE_LABEL)\n-    LABEL_NUSES (XEXP (operands[1], 0)) += 2;\n-  else if (GOTOFF_P (operands[1])\n-\t   && GET_CODE (XVECEXP (XEXP (operands[1], 0), 0, 0)) == LABEL_REF\n-\t   && (GET_CODE (XEXP (XVECEXP (XEXP (operands[1], 0), 0, 0), 0))\n-\t       == CODE_LABEL))\n-    LABEL_NUSES (XEXP (XVECEXP (XEXP (operands[1], 0), 0, 0), 0)) += 2;\n+  sh_mark_label (operands[1], 2);\n }\")\n \n (define_expand \"movdi_const_16bit\""}]}