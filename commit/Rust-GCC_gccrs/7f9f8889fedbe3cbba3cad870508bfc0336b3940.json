{"sha": "7f9f8889fedbe3cbba3cad870508bfc0336b3940", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y5Zjg4ODlmZWRiZTNjYmJhM2NhZDg3MDUwOGJmYzAzMzZiMzk0MA==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-01-06T11:47:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-04T09:17:33Z"}, "message": "[Ada] Fix handling of access-to-variable objects in Global and Depends\n\ngcc/ada/\n\n\t* sem_prag.ads (Collect_Subprogram_Inputs_Outputs): Update\n\tcomment; this routine is no longer used by GNATprove.\n\t* sem_prag.adb (Find_Role): The IN parameter is on output only\n\twhen it belongs to non-function; also, the otherwise constant\n\tobject can only be written by a non-function.\n\t(Collect_Global_Item): The IN parameter can only be written when\n\tit belongs to non-function; also, unnest this check to make it\n\teasier to read.", "tree": {"sha": "c77194f8fdab01bdb733208e6c9cc4e5e9d6a86b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c77194f8fdab01bdb733208e6c9cc4e5e9d6a86b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f9f8889fedbe3cbba3cad870508bfc0336b3940", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f9f8889fedbe3cbba3cad870508bfc0336b3940", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f9f8889fedbe3cbba3cad870508bfc0336b3940", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f9f8889fedbe3cbba3cad870508bfc0336b3940/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7367cd5949ec066811979dbb60b51cbcc6c123b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7367cd5949ec066811979dbb60b51cbcc6c123b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7367cd5949ec066811979dbb60b51cbcc6c123b3"}], "stats": {"total": 40, "additions": 23, "deletions": 17}, "files": [{"sha": "0eb6ff653606c4f58e6e91602fc7e68ac24afb33", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f9f8889fedbe3cbba3cad870508bfc0336b3940/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f9f8889fedbe3cbba3cad870508bfc0336b3940/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=7f9f8889fedbe3cbba3cad870508bfc0336b3940", "patch": "@@ -1281,17 +1281,22 @@ package body Sem_Prag is\n            (Item_Is_Input  : out Boolean;\n             Item_Is_Output : out Boolean)\n          is\n-            --  A constant or IN parameter of access-to-variable type should be\n+            --  A constant or an IN parameter of a procedure or a protected\n+            --  entry, if it is of an access-to-variable type, should be\n             --  handled like a variable, as the underlying memory pointed-to\n             --  can be modified. Use Adjusted_Kind to do this adjustment.\n \n             Adjusted_Kind : Entity_Kind := Ekind (Item_Id);\n \n          begin\n-            if Ekind (Item_Id) in E_Constant\n-                                | E_Generic_In_Parameter\n-                                | E_In_Parameter\n+            if (Ekind (Item_Id) in E_Constant | E_Generic_In_Parameter\n+                  or else\n+                  (Ekind (Item_Id) = E_In_Parameter\n+                     and then Ekind (Scope (Item_Id))\n+                                not in E_Function | E_Generic_Function))\n               and then Is_Access_Variable (Etype (Item_Id))\n+              and then Ekind (Spec_Id) not in E_Function\n+                                            | E_Generic_Function\n             then\n                Adjusted_Kind := E_Variable;\n             end if;\n@@ -30244,16 +30249,6 @@ package body Sem_Prag is\n          Formal := First_Entity (Spec_Id);\n          while Present (Formal) loop\n             if Ekind (Formal) in E_In_Out_Parameter | E_In_Parameter then\n-\n-               --  IN parameters can act as output when the related type is\n-               --  access-to-variable.\n-\n-               if Ekind (Formal) = E_In_Parameter\n-                 and then Is_Access_Variable (Etype (Formal))\n-               then\n-                  Append_New_Elmt (Formal, Subp_Outputs);\n-               end if;\n-\n                Append_New_Elmt (Formal, Subp_Inputs);\n             end if;\n \n@@ -30271,6 +30266,17 @@ package body Sem_Prag is\n                end if;\n             end if;\n \n+            --  IN parameters of procedures and protected entries can act as\n+            --  outputs when the related type is access-to-variable.\n+\n+            if Ekind (Formal) = E_In_Parameter\n+              and then Ekind (Spec_Id) not in E_Function\n+                                            | E_Generic_Function\n+              and then Is_Access_Variable (Etype (Formal))\n+            then\n+               Append_New_Elmt (Formal, Subp_Outputs);\n+            end if;\n+\n             Next_Entity (Formal);\n          end loop;\n "}, {"sha": "75856c8f17afe3bcda5dd64ef985e7b1b578386a", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f9f8889fedbe3cbba3cad870508bfc0336b3940/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f9f8889fedbe3cbba3cad870508bfc0336b3940/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=7f9f8889fedbe3cbba3cad870508bfc0336b3940", "patch": "@@ -360,9 +360,9 @@ package Sem_Prag is\n       Subp_Outputs : in out Elist_Id;\n       Global_Seen  : out Boolean);\n    --  Subsidiary to the analysis of pragmas Depends, Global, Refined_Depends\n-   --  and Refined_Global. The routine is also used by GNATprove. Collect all\n-   --  inputs and outputs of subprogram Subp_Id in lists Subp_Inputs (inputs)\n-   --  and Subp_Outputs (outputs). The inputs and outputs are gathered from:\n+   --  and Refined_Global. Collect all inputs and outputs of subprogram Subp_Id\n+   --  in lists Subp_Inputs (inputs) and Subp_Outputs (outputs). The inputs and\n+   --  outputs are gathered from:\n    --    1) The formal parameters of the subprogram\n    --    2) The generic formal parameters of the generic subprogram\n    --    3) The current instance of a concurrent type"}]}