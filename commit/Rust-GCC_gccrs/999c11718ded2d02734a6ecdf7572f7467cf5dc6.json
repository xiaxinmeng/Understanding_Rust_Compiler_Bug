{"sha": "999c11718ded2d02734a6ecdf7572f7467cf5dc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk5YzExNzE4ZGVkMmQwMjczNGE2ZWNkZjc1NzJmNzQ2N2NmNWRjNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-04-23T08:08:25Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-04-23T08:08:25Z"}, "message": "re PR middle-end/57026 (ice: SSA corruption)\n\n2013-04-23  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/57026\n\t* tree-vrp.c (simplify_conversion_using_ranges): Do not propagate\n\tfrom SSA names occuring in abnormal PHI nodes.\n\n\t* gcc.dg/torture/pr57026.c: New testcase.\n\nFrom-SVN: r198175", "tree": {"sha": "4e051be64f45b53b36d4a4759715e8b57f71b730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e051be64f45b53b36d4a4759715e8b57f71b730"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/999c11718ded2d02734a6ecdf7572f7467cf5dc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/999c11718ded2d02734a6ecdf7572f7467cf5dc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/999c11718ded2d02734a6ecdf7572f7467cf5dc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/999c11718ded2d02734a6ecdf7572f7467cf5dc6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5366925908d82b07aaf6948cdf4c20eb41207896", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5366925908d82b07aaf6948cdf4c20eb41207896", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5366925908d82b07aaf6948cdf4c20eb41207896"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "fea5059e8e2b9727a01b6f94ccef7ae1b46b46b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/999c11718ded2d02734a6ecdf7572f7467cf5dc6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/999c11718ded2d02734a6ecdf7572f7467cf5dc6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=999c11718ded2d02734a6ecdf7572f7467cf5dc6", "patch": "@@ -1,3 +1,9 @@\n+2013-04-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/57026\n+\t* tree-vrp.c (simplify_conversion_using_ranges): Do not propagate\n+\tfrom SSA names occuring in abnormal PHI nodes.\n+\n 2013-04-22  Andi Kleen  <ak@linux.intel.com>\n \n \t* lto/lto.c (print_lto_report_1): Fix LTO report names."}, {"sha": "538ed997b2daa12258b5a7d1700c572e0da917cd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/999c11718ded2d02734a6ecdf7572f7467cf5dc6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/999c11718ded2d02734a6ecdf7572f7467cf5dc6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=999c11718ded2d02734a6ecdf7572f7467cf5dc6", "patch": "@@ -1,3 +1,8 @@\n+2013-04-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/57026\n+\t* gcc.dg/torture/pr57026.c: New testcase.\n+\n 2013-04-22  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/53685"}, {"sha": "e37895486d605a4c2d508af72150513a78b11652", "filename": "gcc/testsuite/gcc.dg/torture/pr57026.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/999c11718ded2d02734a6ecdf7572f7467cf5dc6/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57026.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/999c11718ded2d02734a6ecdf7572f7467cf5dc6/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57026.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57026.c?ref=999c11718ded2d02734a6ecdf7572f7467cf5dc6", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+\n+typedef struct __jmp_buf_tag { char buf[1024]; } jmp_buf[1];\n+extern int setjmp (jmp_buf);\n+extern int bar (unsigned int *);\n+extern jmp_buf *baz (void);\n+struct C { int c1; unsigned int c2, c3, c4; };\n+\n+void\n+foo (struct C *x, const int *y, unsigned int *z, unsigned int e, unsigned int g)\n+{\n+  unsigned int d = 0;\n+  unsigned long f;\n+  setjmp (*baz ());\n+  f = d;\n+  if ((x->c1 || x->c2) && g && (!e || d >= 8))\n+    d = 16;\n+  else\n+    d = 8;\n+  if ((!x->c3 && !x->c4 || *y == 0) && !e && bar (z))\n+    *z = f;\n+}"}, {"sha": "cb4a09aa75c2505fcff2f38a94563dc1e1bf9224", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/999c11718ded2d02734a6ecdf7572f7467cf5dc6/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/999c11718ded2d02734a6ecdf7572f7467cf5dc6/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=999c11718ded2d02734a6ecdf7572f7467cf5dc6", "patch": "@@ -8752,7 +8752,8 @@ simplify_conversion_using_ranges (gimple stmt)\n       || !CONVERT_EXPR_CODE_P (gimple_assign_rhs_code (def_stmt)))\n     return false;\n   innerop = gimple_assign_rhs1 (def_stmt);\n-  if (TREE_CODE (innerop) != SSA_NAME)\n+  if (TREE_CODE (innerop) != SSA_NAME\n+      || SSA_NAME_OCCURS_IN_ABNORMAL_PHI (innerop))\n     return false;\n \n   /* Get the value-range of the inner operand.  */"}]}