{"sha": "716bb02b40ecef5564abb5ba45a594323123a104", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE2YmIwMmI0MGVjZWY1NTY0YWJiNWJhNDVhNTk0MzIzMTIzYTEwNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-04-23T16:45:14Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-04-23T16:46:00Z"}, "message": "i386: Reject -m96bit-long-double for 64bit targets [PR100041]\n\n64bit targets default to 128bit long double, so -m96bit-long-double should\nnot be used.  Together with -m128bit-long-double, this option was intended\nto be an optimization for 32bit targets only.\n\nError out when -m96bit-long-double is used with 64bit targets.\n\n2021-04-23  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/\n\tPR target/100041\n\t* config/i386/i386-options.c (ix86_option_override_internal):\n\tError out when -m96bit-long-double is used with 64bit targets.\n\t* config/i386/i386.md (*pushxf_rounded): Remove pattern.\n\ngcc/testsuite/\n\n\tPR target/100041\n\t* gcc.target/i386/pr79514.c (dg-error):\n\tExpect error for 64bit targets.", "tree": {"sha": "ed436d0a8dad6056b0df742281b9e422848b0586", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed436d0a8dad6056b0df742281b9e422848b0586"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/716bb02b40ecef5564abb5ba45a594323123a104", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/716bb02b40ecef5564abb5ba45a594323123a104", "html_url": "https://github.com/Rust-GCC/gccrs/commit/716bb02b40ecef5564abb5ba45a594323123a104", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/716bb02b40ecef5564abb5ba45a594323123a104/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d54693f806a53666eae7411581fc3bd6709807c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d54693f806a53666eae7411581fc3bd6709807c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d54693f806a53666eae7411581fc3bd6709807c6"}], "stats": {"total": 34, "additions": 4, "deletions": 30}, "files": [{"sha": "cc7b61726e6257f33e75c1b2700eef86af692dd6", "filename": "gcc/config/i386/i386-options.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/716bb02b40ecef5564abb5ba45a594323123a104/gcc%2Fconfig%2Fi386%2Fi386-options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/716bb02b40ecef5564abb5ba45a594323123a104/gcc%2Fconfig%2Fi386%2Fi386-options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-options.c?ref=716bb02b40ecef5564abb5ba45a594323123a104", "patch": "@@ -2312,6 +2312,9 @@ ix86_option_override_internal (bool main_args_p,\n \topts->x_ix86_isa_flags\n \t  |= TARGET_SUBTARGET64_ISA_DEFAULT & ~opts->x_ix86_isa_flags_explicit;\n \n+      if (!TARGET_128BIT_LONG_DOUBLE_P (opts->x_target_flags))\n+\terror (\"%<-m96bit-long-double%> is not compatible with this target\");\n+\n       if (TARGET_RTD_P (opts->x_target_flags))\n \twarning (0,\n \t\t main_args_p"}, {"sha": "27f100c9767212d76ca90d553b6efb6c451f5ab4", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/716bb02b40ecef5564abb5ba45a594323123a104/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/716bb02b40ecef5564abb5ba45a594323123a104/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=716bb02b40ecef5564abb5ba45a594323123a104", "patch": "@@ -3044,36 +3044,6 @@\n   operands[0] = replace_equiv_address (operands[0], stack_pointer_rtx);\n })\n \n-(define_insn_and_split \"*pushxf_rounded\"\n-  [(set (mem:XF\n-\t  (pre_modify:P\n-\t    (reg:P SP_REG)\n-\t    (plus:P (reg:P SP_REG) (const_int -16))))\n-\t(match_operand:XF 0 \"nonmemory_no_elim_operand\" \"f,r,*r,C\"))]\n-  \"TARGET_64BIT\"\n-  \"#\"\n-  \"&& 1\"\n-  [(set (reg:P SP_REG) (plus:P (reg:P SP_REG) (const_int -16)))\n-   (set (match_dup 1) (match_dup 0))]\n-{\n-  rtx pat = PATTERN (curr_insn);\n-  operands[1] = SET_DEST (pat);\n-\n-  /* Preserve memory attributes. */\n-  operands[1] = replace_equiv_address (operands[1], stack_pointer_rtx);\n-}\n-  [(set_attr \"type\" \"multi\")\n-   (set_attr \"unit\" \"i387,*,*,*\")\n-   (set (attr \"mode\")\n-\t(cond [(eq_attr \"alternative\" \"1,2,3\")\n-\t\t (const_string \"DI\")\n-\t      ]\n-\t      (const_string \"XF\")))\n-   (set (attr \"preferred_for_size\")\n-     (cond [(eq_attr \"alternative\" \"1\")\n-              (symbol_ref \"false\")]\n-           (symbol_ref \"true\")))])\n-\n (define_insn \"*pushxf\"\n   [(set (match_operand:XF 0 \"push_operand\" \"=<,<,<,<,<\")\n \t(match_operand:XF 1 \"general_no_elim_operand\" \"f,r,*r,oF,oC\"))]"}, {"sha": "8235da6e14c31d2149320d595a79166f5be7351b", "filename": "gcc/testsuite/gcc.target/i386/pr79514.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/716bb02b40ecef5564abb5ba45a594323123a104/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79514.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/716bb02b40ecef5564abb5ba45a594323123a104/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79514.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79514.c?ref=716bb02b40ecef5564abb5ba45a594323123a104", "patch": "@@ -1,6 +1,7 @@\n /* PR target/79514 */\n /* { dg-do compile } */\n /* { dg-options \"-m96bit-long-double\" } */\n+/* { dg-error \"'-m96bit-long-double' is not compatible\" \"\" { target { ! ia32 } } 0 } */\n \n extern void bar (long double);\n "}]}