{"sha": "aea0101d9553c16556c3eb2ce66761e9dc95b40f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVhMDEwMWQ5NTUzYzE2NTU2YzNlYjJjZTY2NzYxZTlkYzk1YjQwZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-05-24T12:44:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-05-24T12:44:58Z"}, "message": "re PR middle-end/57287 (Bogus uninitialized warning with abnormal control flow)\n\n2013-05-24  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/57287\n\t* tree-ssa-uninit.c (compute_uninit_opnds_pos): Disregard\n\tall SSA names that occur in abnormal PHIs.\n\n\t* gcc.dg/pr57287.c: New testcase.\n\nFrom-SVN: r199289", "tree": {"sha": "360e0745d4435c019b457ee1faff9ba27ed5d218", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/360e0745d4435c019b457ee1faff9ba27ed5d218"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aea0101d9553c16556c3eb2ce66761e9dc95b40f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aea0101d9553c16556c3eb2ce66761e9dc95b40f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aea0101d9553c16556c3eb2ce66761e9dc95b40f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aea0101d9553c16556c3eb2ce66761e9dc95b40f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "99b8202a118ba0ab7eaaa21f83581998d7bcdc6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99b8202a118ba0ab7eaaa21f83581998d7bcdc6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99b8202a118ba0ab7eaaa21f83581998d7bcdc6f"}], "stats": {"total": 48, "additions": 39, "deletions": 9}, "files": [{"sha": "dd36f0b33df08792c8e9f7d22fb3d767bcbed732", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aea0101d9553c16556c3eb2ce66761e9dc95b40f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aea0101d9553c16556c3eb2ce66761e9dc95b40f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aea0101d9553c16556c3eb2ce66761e9dc95b40f", "patch": "@@ -1,3 +1,9 @@\n+2013-05-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/57287\n+\t* tree-ssa-uninit.c (compute_uninit_opnds_pos): Disregard\n+\tall SSA names that occur in abnormal PHIs.\n+\n 2013-05-24  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \n \tPR tree-ssa/57385"}, {"sha": "cd0842df50c8106c74d0d8721376602cc8029ff8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aea0101d9553c16556c3eb2ce66761e9dc95b40f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aea0101d9553c16556c3eb2ce66761e9dc95b40f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aea0101d9553c16556c3eb2ce66761e9dc95b40f", "patch": "@@ -1,3 +1,8 @@\n+2013-05-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/57287\n+\t* gcc.dg/pr57287.c: New testcase.\n+\n 2013-05-24  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/26572"}, {"sha": "72225b1193144dfbffe4f12e33e18d4f25ac8127", "filename": "gcc/testsuite/gcc.dg/pr57287.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aea0101d9553c16556c3eb2ce66761e9dc95b40f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57287.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aea0101d9553c16556c3eb2ce66761e9dc95b40f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57287.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57287.c?ref=aea0101d9553c16556c3eb2ce66761e9dc95b40f", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wall\" } */\n+\n+#include <setjmp.h>\n+\n+jmp_buf buf;\n+\n+void foo (int);\n+void bar (int) __attribute__((leaf));\n+\n+void enumerate_locals (int indent)\n+{\n+  foo (0);\n+  while (indent--)\n+    {\n+      int local_indent = 8 + (8 * indent);\n+      if (local_indent != 8)\n+\t{\n+\t  setjmp (buf);\n+\t  bar (local_indent);  /* { dg-bogus \"may be used uninitialized\" \"\" } */\n+\t}\n+    }\n+  foo (1);\n+}"}, {"sha": "9a726f115a94d298dca43659c0c0a332f3cf8ce9", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aea0101d9553c16556c3eb2ce66761e9dc95b40f/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aea0101d9553c16556c3eb2ce66761e9dc95b40f/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=aea0101d9553c16556c3eb2ce66761e9dc95b40f", "patch": "@@ -165,17 +165,12 @@ compute_uninit_opnds_pos (gimple phi)\n           && uninit_undefined_value_p (op)\n           && !can_skip_redundant_opnd (op, phi))\n \t{\n-\t  /* Ignore SSA_NAMEs on abnormal edges to setjmp\n-\t     or nonlocal goto receiver.  */\n           if (cfun->has_nonlocal_label || cfun->calls_setjmp)\n \t    {\n-\t      edge e = gimple_phi_arg_edge (phi, i);\n-\t      if (e->flags & EDGE_ABNORMAL)\n-\t\t{\n-\t\t  gimple last = last_stmt (e->src);\n-\t\t  if (last && stmt_can_make_abnormal_goto (last))\n-\t\t    continue;\n-\t\t}\n+\t      /* Ignore SSA_NAMEs that appear on abnormal edges\n+\t\t somewhere.  */\n+\t      if (SSA_NAME_OCCURS_IN_ABNORMAL_PHI (op))\n+\t\tcontinue;\n \t    }\n \t  MASK_SET_BIT (uninit_opnds, i);\n \t}"}]}