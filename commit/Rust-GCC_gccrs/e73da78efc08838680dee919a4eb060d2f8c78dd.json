{"sha": "e73da78efc08838680dee919a4eb060d2f8c78dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTczZGE3OGVmYzA4ODM4NjgwZGVlOTE5YTRlYjA2MGQyZjhjNzhkZA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2008-11-03T19:03:28Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2008-11-03T19:03:28Z"}, "message": "re PR other/37463 (All Solaris/x86 eh tests fail)\n\n\tPR other/37463\n\t* configure.ac (gcc_cv_ld_ro_rw_mix): Move before\n\tgcc_cv_as_cfi_directive.\n\t(gcc_cv_as_cfi_directive) [*-*-solaris*]: Check if linker supports\n\tmerging read-only and read-write sections or assembler emits\n\tread-write .eh_frame sections.\n\t* configure: Regenerate.\n\nFrom-SVN: r141555", "tree": {"sha": "e1c7db8e560673c1ec98021fc00dd8b80706e68c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1c7db8e560673c1ec98021fc00dd8b80706e68c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e73da78efc08838680dee919a4eb060d2f8c78dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e73da78efc08838680dee919a4eb060d2f8c78dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e73da78efc08838680dee919a4eb060d2f8c78dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e73da78efc08838680dee919a4eb060d2f8c78dd/comments", "author": null, "committer": null, "parents": [{"sha": "e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343"}], "stats": {"total": 223, "additions": 141, "deletions": 82}, "files": [{"sha": "0cd01eeb05a024334a217eb63b4b31464c5d2a18", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73da78efc08838680dee919a4eb060d2f8c78dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73da78efc08838680dee919a4eb060d2f8c78dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e73da78efc08838680dee919a4eb060d2f8c78dd", "patch": "@@ -1,3 +1,13 @@\n+2008-11-03  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\tPR other/37463\n+\t* configure.ac (gcc_cv_ld_ro_rw_mix): Move before\n+\tgcc_cv_as_cfi_directive.\n+\t(gcc_cv_as_cfi_directive) [*-*-solaris*]: Check if linker supports\n+\tmerging read-only and read-write sections or assembler emits\n+\tread-write .eh_frame sections.\n+\t* configure: Regenerate.\n+\t\n 2008-11-03  Nathan Froyd  <froydnj@codesourcery.com>\n \n \tRevert:"}, {"sha": "649039d4e038ea7fb3bde4c15ad0cdb104351918", "filename": "gcc/configure", "status": "modified", "additions": 66, "deletions": 42, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73da78efc08838680dee919a4eb060d2f8c78dd/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73da78efc08838680dee919a4eb060d2f8c78dd/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=e73da78efc08838680dee919a4eb060d2f8c78dd", "patch": "@@ -21471,6 +21471,47 @@ _ACEOF\n \n fi\n \n+echo \"$as_me:$LINENO: checking linker read-only and read-write section mixing\" >&5\n+echo $ECHO_N \"checking linker read-only and read-write section mixing... $ECHO_C\" >&6\n+gcc_cv_ld_ro_rw_mix=unknown\n+if test $in_tree_ld = yes ; then\n+  if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 10 -o \"$gcc_cv_gld_major_version\" -gt 2 \\\n+     && test $in_tree_ld_is_elf = yes; then\n+    gcc_cv_ld_ro_rw_mix=read-write\n+  fi\n+elif test x$gcc_cv_as != x -a x$gcc_cv_ld != x -a x$gcc_cv_objdump != x ; then\n+  echo '.section myfoosect, \"a\"' > conftest1.s\n+  echo '.section myfoosect, \"aw\"' > conftest2.s\n+  echo '.byte 1' >> conftest2.s\n+  echo '.section myfoosect, \"a\"' > conftest3.s\n+  echo '.byte 0' >> conftest3.s\n+  if $gcc_cv_as -o conftest1.o conftest1.s > /dev/null 2>&1 \\\n+     && $gcc_cv_as -o conftest2.o conftest2.s > /dev/null 2>&1 \\\n+     && $gcc_cv_as -o conftest3.o conftest3.s > /dev/null 2>&1 \\\n+     && $gcc_cv_ld -shared -o conftest1.so conftest1.o \\\n+\tconftest2.o conftest3.o > /dev/null 2>&1; then\n+    gcc_cv_ld_ro_rw_mix=`$gcc_cv_objdump -h conftest1.so \\\n+\t\t\t | sed -e '/myfoosect/!d' -e N`\n+    if echo \"$gcc_cv_ld_ro_rw_mix\" | grep CONTENTS > /dev/null; then\n+      if echo \"$gcc_cv_ld_ro_rw_mix\" | grep READONLY > /dev/null; then\n+\tgcc_cv_ld_ro_rw_mix=read-only\n+      else\n+\tgcc_cv_ld_ro_rw_mix=read-write\n+      fi\n+    fi\n+  fi\n+  rm -f conftest.* conftest[123].*\n+fi\n+if test x$gcc_cv_ld_ro_rw_mix = xread-write; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_LD_RO_RW_SECTION_MIXING 1\n+_ACEOF\n+\n+fi\n+echo \"$as_me:$LINENO: result: $gcc_cv_ld_ro_rw_mix\" >&5\n+echo \"${ECHO_T}$gcc_cv_ld_ro_rw_mix\" >&6\n+\n # Check if we have .[us]leb128, and support symbol arithmetic with it.\n echo \"$as_me:$LINENO: checking assembler for .sleb128 and .uleb128\" >&5\n echo $ECHO_N \"checking assembler for .sleb128 and .uleb128... $ECHO_C\" >&6\n@@ -21552,7 +21593,31 @@ else\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); }; }\n     then\n-\tgcc_cv_as_cfi_directive=yes\n+\tcase \"$target\" in\n+  *-*-solaris*)\n+    # If the linker used on Solaris (like Sun ld) isn't capable of merging\n+    # read-only and read-write sections, we need to make sure that the\n+    # assembler used emits read-write .eh_frame sections.\n+    if test \"x$gcc_cv_ld_ro_rw_mix\" != xread-write; then\n+      if test \"x$gcc_cv_objdump\" != x; then\n+\tif $gcc_cv_objdump -h conftest.o 2>/dev/null | \\\n+\t\tsed -e /.eh_frame/!d -e N | grep READONLY > /dev/null; then\n+\t  gcc_cv_as_cfi_directive=no\n+\telse\n+\t  gcc_cv_as_cfi_directive=yes\n+\tfi\n+      else\n+        # no objdump, err on the side of caution\n+\tgcc_cv_as_cfi_directive=no\n+      fi\n+    else\n+      gcc_cv_as_cfi_directive=yes\n+    fi\n+    ;;\n+  *-*-*)\n+    gcc_cv_as_cfi_directive=yes\n+    ;;\n+esac\n     else\n       echo \"configure: failed program was\" >&5\n       cat conftest.s >&5\n@@ -23876,47 +23941,6 @@ _ACEOF\n \n fi\n \n-echo \"$as_me:$LINENO: checking linker read-only and read-write section mixing\" >&5\n-echo $ECHO_N \"checking linker read-only and read-write section mixing... $ECHO_C\" >&6\n-gcc_cv_ld_ro_rw_mix=unknown\n-if test $in_tree_ld = yes ; then\n-  if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 10 -o \"$gcc_cv_gld_major_version\" -gt 2 \\\n-     && test $in_tree_ld_is_elf = yes; then\n-    gcc_cv_ld_ro_rw_mix=read-write\n-  fi\n-elif test x$gcc_cv_as != x -a x$gcc_cv_ld != x -a x$gcc_cv_objdump != x ; then\n-  echo '.section myfoosect, \"a\"' > conftest1.s\n-  echo '.section myfoosect, \"aw\"' > conftest2.s\n-  echo '.byte 1' >> conftest2.s\n-  echo '.section myfoosect, \"a\"' > conftest3.s\n-  echo '.byte 0' >> conftest3.s\n-  if $gcc_cv_as -o conftest1.o conftest1.s > /dev/null 2>&1 \\\n-     && $gcc_cv_as -o conftest2.o conftest2.s > /dev/null 2>&1 \\\n-     && $gcc_cv_as -o conftest3.o conftest3.s > /dev/null 2>&1 \\\n-     && $gcc_cv_ld -shared -o conftest1.so conftest1.o \\\n-\tconftest2.o conftest3.o > /dev/null 2>&1; then\n-    gcc_cv_ld_ro_rw_mix=`$gcc_cv_objdump -h conftest1.so \\\n-\t\t\t | sed -e '/myfoosect/!d' -e N`\n-    if echo \"$gcc_cv_ld_ro_rw_mix\" | grep CONTENTS > /dev/null; then\n-      if echo \"$gcc_cv_ld_ro_rw_mix\" | grep READONLY > /dev/null; then\n-\tgcc_cv_ld_ro_rw_mix=read-only\n-      else\n-\tgcc_cv_ld_ro_rw_mix=read-write\n-      fi\n-    fi\n-  fi\n-  rm -f conftest.* conftest[123].*\n-fi\n-if test x$gcc_cv_ld_ro_rw_mix = xread-write; then\n-\n-cat >>confdefs.h <<\\_ACEOF\n-#define HAVE_LD_RO_RW_SECTION_MIXING 1\n-_ACEOF\n-\n-fi\n-echo \"$as_me:$LINENO: result: $gcc_cv_ld_ro_rw_mix\" >&5\n-echo \"${ECHO_T}$gcc_cv_ld_ro_rw_mix\" >&6\n-\n echo \"$as_me:$LINENO: checking linker PT_GNU_EH_FRAME support\" >&5\n echo $ECHO_N \"checking linker PT_GNU_EH_FRAME support... $ECHO_C\" >&6\n gcc_cv_ld_eh_frame_hdr=no"}, {"sha": "295b9f95f9023dc2aae1a6be9d1fa8ee00c1c054", "filename": "gcc/configure.ac", "status": "modified", "additions": 65, "deletions": 40, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73da78efc08838680dee919a4eb060d2f8c78dd/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73da78efc08838680dee919a4eb060d2f8c78dd/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=e73da78efc08838680dee919a4eb060d2f8c78dd", "patch": "@@ -2150,6 +2150,45 @@ if test $gcc_cv_as_hidden = yes && test $gcc_cv_ld_hidden = yes; then\n   [Define if your assembler and linker support .hidden.])\n fi\n \n+AC_MSG_CHECKING(linker read-only and read-write section mixing)\n+gcc_cv_ld_ro_rw_mix=unknown\n+if test $in_tree_ld = yes ; then\n+  if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 10 -o \"$gcc_cv_gld_major_version\" -gt 2 \\\n+     && test $in_tree_ld_is_elf = yes; then\n+    gcc_cv_ld_ro_rw_mix=read-write\n+  fi\n+elif test x$gcc_cv_as != x -a x$gcc_cv_ld != x -a x$gcc_cv_objdump != x ; then\n+  echo '.section myfoosect, \"a\"' > conftest1.s\n+  echo '.section myfoosect, \"aw\"' > conftest2.s\n+  echo '.byte 1' >> conftest2.s\n+  echo '.section myfoosect, \"a\"' > conftest3.s\n+  echo '.byte 0' >> conftest3.s\n+  if $gcc_cv_as -o conftest1.o conftest1.s > /dev/null 2>&1 \\\n+     && $gcc_cv_as -o conftest2.o conftest2.s > /dev/null 2>&1 \\\n+     && $gcc_cv_as -o conftest3.o conftest3.s > /dev/null 2>&1 \\\n+     && $gcc_cv_ld -shared -o conftest1.so conftest1.o \\\n+\tconftest2.o conftest3.o > /dev/null 2>&1; then\n+    gcc_cv_ld_ro_rw_mix=`$gcc_cv_objdump -h conftest1.so \\\n+\t\t\t | sed -e '/myfoosect/!d' -e N`\n+    if echo \"$gcc_cv_ld_ro_rw_mix\" | grep CONTENTS > /dev/null; then\n+      if echo \"$gcc_cv_ld_ro_rw_mix\" | grep READONLY > /dev/null; then\n+\tgcc_cv_ld_ro_rw_mix=read-only\n+      else\n+\tgcc_cv_ld_ro_rw_mix=read-write\n+      fi\n+    fi\n+  fi\n+changequote(,)dnl\n+  rm -f conftest.* conftest[123].*\n+changequote([,])dnl\n+fi\n+if test x$gcc_cv_ld_ro_rw_mix = xread-write; then\n+\tAC_DEFINE(HAVE_LD_RO_RW_SECTION_MIXING, 1,\n+  [Define if your linker links a mix of read-only\n+   and read-write sections into a read-write section.])\n+fi\n+AC_MSG_RESULT($gcc_cv_ld_ro_rw_mix)\n+\n # Check if we have .[us]leb128, and support symbol arithmetic with it.\n gcc_GAS_CHECK_FEATURE([.sleb128 and .uleb128], gcc_cv_as_leb128,\n   [elf,2,11,0],,\n@@ -2189,7 +2228,32 @@ gcc_GAS_CHECK_FEATURE([cfi directives], gcc_cv_as_cfi_directive,\n \t.cfi_same_value 1\n \t.cfi_def_cfa 1, 2\n \t.cfi_escape 1, 2, 3, 4, 5\n-\t.cfi_endproc])\n+\t.cfi_endproc],\n+[case \"$target\" in\n+  *-*-solaris*)\n+    # If the linker used on Solaris (like Sun ld) isn't capable of merging\n+    # read-only and read-write sections, we need to make sure that the\n+    # assembler used emits read-write .eh_frame sections.\n+    if test \"x$gcc_cv_ld_ro_rw_mix\" != xread-write; then\n+      if test \"x$gcc_cv_objdump\" != x; then\n+\tif $gcc_cv_objdump -h conftest.o 2>/dev/null | \\\n+\t\tsed -e /.eh_frame/!d -e N | grep READONLY > /dev/null; then\n+\t  gcc_cv_as_cfi_directive=no\n+\telse\n+\t  gcc_cv_as_cfi_directive=yes\n+\tfi\n+      else\n+        # no objdump, err on the side of caution\n+\tgcc_cv_as_cfi_directive=no\n+      fi\n+    else\n+      gcc_cv_as_cfi_directive=yes\n+    fi\n+    ;;\n+  *-*-*)\n+    gcc_cv_as_cfi_directive=yes\n+    ;;\n+esac])\n AC_DEFINE_UNQUOTED(HAVE_GAS_CFI_DIRECTIVE,\n   [`if test $gcc_cv_as_cfi_directive = yes; then echo 1; else echo 0; fi`],\n   [Define 0/1 if your assembler supports CFI directives.])\n@@ -3218,45 +3282,6 @@ if test \"x$gcc_cv_as_line_zero\" = xyes; then\n [Define if the assembler won't complain about a line such as # 0 \"\" 2.])\n fi\n \n-AC_MSG_CHECKING(linker read-only and read-write section mixing)\n-gcc_cv_ld_ro_rw_mix=unknown\n-if test $in_tree_ld = yes ; then\n-  if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 10 -o \"$gcc_cv_gld_major_version\" -gt 2 \\\n-     && test $in_tree_ld_is_elf = yes; then\n-    gcc_cv_ld_ro_rw_mix=read-write\n-  fi\n-elif test x$gcc_cv_as != x -a x$gcc_cv_ld != x -a x$gcc_cv_objdump != x ; then\n-  echo '.section myfoosect, \"a\"' > conftest1.s\n-  echo '.section myfoosect, \"aw\"' > conftest2.s\n-  echo '.byte 1' >> conftest2.s\n-  echo '.section myfoosect, \"a\"' > conftest3.s\n-  echo '.byte 0' >> conftest3.s\n-  if $gcc_cv_as -o conftest1.o conftest1.s > /dev/null 2>&1 \\\n-     && $gcc_cv_as -o conftest2.o conftest2.s > /dev/null 2>&1 \\\n-     && $gcc_cv_as -o conftest3.o conftest3.s > /dev/null 2>&1 \\\n-     && $gcc_cv_ld -shared -o conftest1.so conftest1.o \\\n-\tconftest2.o conftest3.o > /dev/null 2>&1; then\n-    gcc_cv_ld_ro_rw_mix=`$gcc_cv_objdump -h conftest1.so \\\n-\t\t\t | sed -e '/myfoosect/!d' -e N`\n-    if echo \"$gcc_cv_ld_ro_rw_mix\" | grep CONTENTS > /dev/null; then\n-      if echo \"$gcc_cv_ld_ro_rw_mix\" | grep READONLY > /dev/null; then\n-\tgcc_cv_ld_ro_rw_mix=read-only\n-      else\n-\tgcc_cv_ld_ro_rw_mix=read-write\n-      fi\n-    fi\n-  fi\n-changequote(,)dnl\n-  rm -f conftest.* conftest[123].*\n-changequote([,])dnl\n-fi\n-if test x$gcc_cv_ld_ro_rw_mix = xread-write; then\n-\tAC_DEFINE(HAVE_LD_RO_RW_SECTION_MIXING, 1,\n-  [Define if your linker links a mix of read-only\n-   and read-write sections into a read-write section.])\n-fi\n-AC_MSG_RESULT($gcc_cv_ld_ro_rw_mix)\n-\n AC_MSG_CHECKING(linker PT_GNU_EH_FRAME support)\n gcc_cv_ld_eh_frame_hdr=no\n if test $in_tree_ld = yes ; then"}]}