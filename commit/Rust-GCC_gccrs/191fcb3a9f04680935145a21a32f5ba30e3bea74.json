{"sha": "191fcb3a9f04680935145a21a32f5ba30e3bea74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkxZmNiM2E5ZjA0NjgwOTM1MTQ1YTIxYTMyZjViYTMwZTNiZWE3NA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2010-06-17T10:07:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-17T10:07:53Z"}, "message": "checks.adb, [...]: Minor code reorganization.\n\n2010-06-17  Robert Dewar  <dewar@adacore.com>\n\n\t* checks.adb, exp_aggr.adb, exp_atag.adb, exp_attr.adb, exp_ch11.adb,\n\texp_ch3.adb, exp_ch4.adb: Minor code reorganization.\n\tUse Make_Temporary.\n\t* tbuild.ads, tbuild.adb (Make_Temporary): Clean up, use Entity_Id\n\tinstead of Node_Id.\n\t(Make_Temporary): Add more extensive documentation\n\nFrom-SVN: r160893", "tree": {"sha": "78b8c08b9aee1c03704dc2114f549be155153994", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78b8c08b9aee1c03704dc2114f549be155153994"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/191fcb3a9f04680935145a21a32f5ba30e3bea74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/191fcb3a9f04680935145a21a32f5ba30e3bea74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/191fcb3a9f04680935145a21a32f5ba30e3bea74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/191fcb3a9f04680935145a21a32f5ba30e3bea74/comments", "author": null, "committer": null, "parents": [{"sha": "8a95f4e86791d06494bd5fc8b0da29b9651530fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a95f4e86791d06494bd5fc8b0da29b9651530fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a95f4e86791d06494bd5fc8b0da29b9651530fb"}], "stats": {"total": 320, "additions": 122, "deletions": 198}, "files": [{"sha": "66ef2895f224b97d0feb06937a9ccc55dc31c2a9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=191fcb3a9f04680935145a21a32f5ba30e3bea74", "patch": "@@ -1,3 +1,12 @@\n+2010-06-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* checks.adb, exp_aggr.adb, exp_atag.adb, exp_attr.adb, exp_ch11.adb,\n+\texp_ch3.adb, exp_ch4.adb: Minor code reorganization.\n+\tUse Make_Temporary.\n+\t* tbuild.ads, tbuild.adb (Make_Temporary): Clean up, use Entity_Id\n+\tinstead of Node_Id.\n+\t(Make_Temporary): Add more extensive documentation\n+\n 2010-06-17  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_intr.adb, sem_prag.adb, sem_res.adb, sem_type.adb, sem_util.adb,"}, {"sha": "199d37241b5a17f23334b8f024d060a1040dd464", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=191fcb3a9f04680935145a21a32f5ba30e3bea74", "patch": "@@ -1584,9 +1584,7 @@ package body Checks is\n \n             pragma Assert (Target_Base /= Target_Typ);\n \n-            Temp : constant Entity_Id :=\n-                    Make_Defining_Identifier (Loc,\n-                      Chars => New_Internal_Name ('T'));\n+            Temp : constant Entity_Id := Make_Temporary (Loc, 'T', Par);\n \n          begin\n             Apply_Float_Conversion_Check (Ck_Node, Target_Base);\n@@ -4707,9 +4705,7 @@ package body Checks is\n          --  Then the conversion itself is replaced by an occurrence of Tnn\n \n          declare\n-            Tnn : constant Entity_Id :=\n-                    Make_Defining_Identifier (Loc,\n-                      Chars => New_Internal_Name ('T'));\n+            Tnn : constant Entity_Id := Make_Temporary (Loc, 'T', N);\n \n          begin\n             Insert_Actions (N, New_List (\n@@ -4860,9 +4856,7 @@ package body Checks is\n             --  the value is non-negative\n \n             declare\n-               Tnn : constant Entity_Id :=\n-                       Make_Defining_Identifier (Loc,\n-                         Chars => New_Internal_Name ('T'));\n+               Tnn : constant Entity_Id := Make_Temporary (Loc, 'T', N);\n \n             begin\n                Insert_Actions (N, New_List ("}, {"sha": "a2c54911bb668dbe79c179bb86a772c26bfa2829", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 10, "deletions": 22, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=191fcb3a9f04680935145a21a32f5ba30e3bea74", "patch": "@@ -1347,7 +1347,7 @@ package body Exp_Aggr is\n \n          --  Otherwise construct the loop, starting with the loop index L_J\n \n-         L_J := Make_Defining_Identifier (Loc, New_Internal_Name ('J'));\n+         L_J := Make_Temporary (Loc, 'J', L);\n \n          --  Construct \"L .. H\" in Index_Base. We use a qualified expression\n          --  for the bound to convert to the index base, but we don't need\n@@ -1455,7 +1455,7 @@ package body Exp_Aggr is\n \n          --  Build the decl of W_J\n \n-         W_J    := Make_Defining_Identifier (Loc, New_Internal_Name ('J'));\n+         W_J    := Make_Temporary (Loc, 'J', L);\n          W_Decl :=\n            Make_Object_Declaration\n              (Loc,\n@@ -3008,9 +3008,7 @@ package body Exp_Aggr is\n                   --  the corresponding aggregate.\n \n                   declare\n-                     SubE : constant Entity_Id :=\n-                              Make_Defining_Identifier (Loc,\n-                                Chars => New_Internal_Name ('T'));\n+                     SubE : constant Entity_Id := Make_Temporary (Loc, 'T');\n \n                      SubD : constant Node_Id :=\n                               Make_Subtype_Declaration (Loc,\n@@ -4139,7 +4137,7 @@ package body Exp_Aggr is\n \n       procedure Build_Constrained_Type (Positional : Boolean) is\n          Loc      : constant Source_Ptr := Sloc (N);\n-         Agg_Type : Entity_Id;\n+         Agg_Type : constant Entity_Id  := Make_Temporary (Loc, 'A');\n          Comp     : Node_Id;\n          Decl     : Node_Id;\n          Typ      : constant Entity_Id := Etype (N);\n@@ -4148,10 +4146,6 @@ package body Exp_Aggr is\n          Sub_Agg  : Node_Id;\n \n       begin\n-         Agg_Type :=\n-           Make_Defining_Identifier (\n-             Loc, New_Internal_Name ('A'));\n-\n          --  If the aggregate is purely positional, all its subaggregates\n          --  have the same size. We collect the dimensions from the first\n          --  subaggregate at each level.\n@@ -4169,19 +4163,16 @@ package body Exp_Aggr is\n                   Next (Comp);\n                end loop;\n \n-               Append (\n+               Append_To (Indices,\n                  Make_Range (Loc,\n-                   Low_Bound => Make_Integer_Literal (Loc, 1),\n-                   High_Bound =>\n-                          Make_Integer_Literal (Loc, Num)),\n-                 Indices);\n+                   Low_Bound =>  Make_Integer_Literal (Loc, 1),\n+                   High_Bound => Make_Integer_Literal (Loc, Num)));\n             end loop;\n \n          else\n             --  We know the aggregate type is unconstrained and the aggregate\n             --  is not processable by the back end, therefore not necessarily\n             --  positional. Retrieve each dimension bounds (computed earlier).\n-            --  earlier.\n \n             for D in 1 .. Number_Dimensions (Typ) loop\n                Append (\n@@ -5693,9 +5684,7 @@ package body Exp_Aggr is\n \n                   Decl :=\n                     Make_Subtype_Declaration (Loc,\n-                      Defining_Identifier =>\n-                         Make_Defining_Identifier (Loc,\n-                            New_Internal_Name ('T')),\n+                      Defining_Identifier => Make_Temporary (Loc, 'T'),\n                       Subtype_Indication =>\n                         Make_Subtype_Indication (Loc,\n                           Subtype_Mark =>\n@@ -6384,9 +6373,8 @@ package body Exp_Aggr is\n         and then Nkind (First (Choices (First (Component_Associations (N)))))\n                    = N_Others_Choice\n       then\n-         Expr :=\n-           Expression (First (Component_Associations (N)));\n-         L_J := Make_Defining_Identifier (Loc, New_Internal_Name ('J'));\n+         Expr := Expression (First (Component_Associations (N)));\n+         L_J := Make_Temporary (Loc, 'J');\n \n          L_Iter :=\n            Make_Iteration_Scheme (Loc,"}, {"sha": "23a9202c3728da5d5d242af8af65e9b4eb40bc07", "filename": "gcc/ada/exp_atag.adb", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2Fexp_atag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2Fexp_atag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_atag.adb?ref=191fcb3a9f04680935145a21a32f5ba30e3bea74", "patch": "@@ -150,14 +150,10 @@ package body Exp_Atag is\n       Related_Nod  : Node_Id;\n       New_Node     : out Node_Id)\n    is\n-      Tag_Addr : constant Entity_Id := Make_Defining_Identifier (Loc,\n-                                         New_Internal_Name ('D'));\n-      Obj_TSD  : constant Entity_Id := Make_Defining_Identifier (Loc,\n-                                         New_Internal_Name ('D'));\n-      Typ_TSD  : constant Entity_Id := Make_Defining_Identifier (Loc,\n-                                         New_Internal_Name ('D'));\n-      Index    : constant Entity_Id := Make_Defining_Identifier (Loc,\n-                                         New_Internal_Name ('D'));\n+      Tag_Addr : constant Entity_Id := Make_Temporary (Loc, 'D', Obj_Tag_Node);\n+      Obj_TSD  : constant Entity_Id := Make_Temporary (Loc, 'D');\n+      Typ_TSD  : constant Entity_Id := Make_Temporary (Loc, 'D');\n+      Index    : constant Entity_Id := Make_Temporary (Loc, 'D');\n \n    begin\n       --  Generate:"}, {"sha": "673ecfd4800d46895f2a6306067efc66469bfb11", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 28, "deletions": 36, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=191fcb3a9f04680935145a21a32f5ba30e3bea74", "patch": "@@ -530,9 +530,7 @@ package body Exp_Attr is\n            and then Is_Written\n          then\n             declare\n-               Temp : constant Entity_Id :=\n-                        Make_Defining_Identifier\n-                          (Loc, New_Internal_Name ('V'));\n+               Temp : constant Entity_Id := Make_Temporary (Loc, 'V');\n                Decl : Node_Id;\n                Assn : Node_Id;\n \n@@ -1263,8 +1261,7 @@ package body Exp_Attr is\n       --  returned is a copy of the library string in gnatvsn.ads.\n \n       when Attribute_Body_Version | Attribute_Version => Version : declare\n-         E    : constant Entity_Id :=\n-                  Make_Defining_Identifier (Loc, New_Internal_Name ('V'));\n+         E    : constant Entity_Id := Make_Temporary (Loc, 'V');\n          Pent : Entity_Id;\n          S    : String_Id;\n \n@@ -1777,9 +1774,7 @@ package body Exp_Attr is\n            Attribute_Elab_Spec =>\n \n          Elab_Body : declare\n-            Ent  : constant Entity_Id :=\n-                     Make_Defining_Identifier (Loc,\n-                       New_Internal_Name ('E'));\n+            Ent  : constant Entity_Id := Make_Temporary (Loc, 'E');\n             Str  : String_Id;\n             Lang : Node_Id;\n \n@@ -2389,13 +2384,14 @@ package body Exp_Attr is\n                   Rtyp : constant Entity_Id := Root_Type (P_Type);\n                   Dnn  : Entity_Id;\n                   Decl : Node_Id;\n+                  Expr : Node_Id;\n \n                begin\n                   --  Read the internal tag (RM 13.13.2(34)) and use it to\n                   --  initialize a dummy tag object:\n \n-                  --    Dnn : Ada.Tags.Tag\n-                  --           := Descendant_Tag (String'Input (Strm), P_Type);\n+                  --    Dnn : Ada.Tags.Tag :=\n+                  --            Descendant_Tag (String'Input (Strm), P_Type);\n \n                   --  This dummy object is used only to provide a controlling\n                   --  argument for the eventual _Input call. Descendant_Tag is\n@@ -2406,30 +2402,28 @@ package body Exp_Attr is\n                   --  required for Ada 2005 because tagged types can be\n                   --  extended in nested scopes (AI-344).\n \n-                  Dnn :=\n-                    Make_Defining_Identifier (Loc,\n-                      Chars => New_Internal_Name ('D'));\n+                  Expr :=\n+                    Make_Function_Call (Loc,\n+                      Name =>\n+                        New_Occurrence_Of (RTE (RE_Descendant_Tag), Loc),\n+                      Parameter_Associations => New_List (\n+                        Make_Attribute_Reference (Loc,\n+                          Prefix => New_Occurrence_Of (Standard_String, Loc),\n+                          Attribute_Name => Name_Input,\n+                          Expressions => New_List (\n+                            Relocate_Node (Duplicate_Subexpr (Strm)))),\n+                        Make_Attribute_Reference (Loc,\n+                          Prefix => New_Reference_To (P_Type, Loc),\n+                          Attribute_Name => Name_Tag)));\n+\n+                  Dnn := Make_Temporary (Loc, 'D', Expr);\n \n                   Decl :=\n                     Make_Object_Declaration (Loc,\n                       Defining_Identifier => Dnn,\n-                      Object_Definition =>\n+                      Object_Definition   =>\n                         New_Occurrence_Of (RTE (RE_Tag), Loc),\n-                      Expression =>\n-                        Make_Function_Call (Loc,\n-                          Name =>\n-                            New_Occurrence_Of (RTE (RE_Descendant_Tag), Loc),\n-                          Parameter_Associations => New_List (\n-                            Make_Attribute_Reference (Loc,\n-                              Prefix =>\n-                                New_Occurrence_Of (Standard_String, Loc),\n-                              Attribute_Name => Name_Input,\n-                              Expressions => New_List (\n-                                Relocate_Node\n-                                  (Duplicate_Subexpr (Strm)))),\n-                            Make_Attribute_Reference (Loc,\n-                              Prefix => New_Reference_To (P_Type, Loc),\n-                              Attribute_Name => Name_Tag))));\n+                      Expression          => Expr);\n \n                   Insert_Action (N, Decl);\n \n@@ -2440,8 +2434,9 @@ package body Exp_Attr is\n                   --  tagged object).\n \n                   Fname := Find_Prim_Op (Rtyp, TSS_Stream_Input);\n-                  Cntrl := Unchecked_Convert_To (P_Type,\n-                             New_Occurrence_Of (Dnn, Loc));\n+                  Cntrl :=\n+                    Unchecked_Convert_To (P_Type,\n+                      New_Occurrence_Of (Dnn, Loc));\n                   Set_Etype (Cntrl, P_Type);\n                   Set_Parent (Cntrl, N);\n                end;\n@@ -2987,9 +2982,7 @@ package body Exp_Attr is\n       ---------\n \n       when Attribute_Old => Old : declare\n-         Tnn     : constant Entity_Id :=\n-                     Make_Defining_Identifier (Loc,\n-                       Chars => New_Internal_Name ('T'));\n+         Tnn     : constant Entity_Id := Make_Temporary (Loc, 'T', Pref);\n          Subp    : Node_Id;\n          Asn_Stm : Node_Id;\n \n@@ -4552,8 +4545,7 @@ package body Exp_Attr is\n       -----------------\n \n       when Attribute_UET_Address => UET_Address : declare\n-         Ent : constant Entity_Id :=\n-                 Make_Defining_Identifier (Loc, New_Internal_Name ('T'));\n+         Ent : constant Entity_Id := Make_Temporary (Loc, 'T');\n \n       begin\n          Insert_Action (N,"}, {"sha": "0c54478c99dc8dcfbfa9c0f6921d77dddf26397e", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=191fcb3a9f04680935145a21a32f5ba30e3bea74", "patch": "@@ -469,9 +469,7 @@ package body Exp_Ch11 is\n                Local_Expansion_Required := True;\n \n                declare\n-                  L : constant Entity_Id :=\n-                        Make_Defining_Identifier (Sloc (H),\n-                          Chars => New_Internal_Name ('L'));\n+                  L : constant Entity_Id := Make_Temporary (Sloc (H), 'L');\n                begin\n                   Set_Exception_Label (H, L);\n                   Add_Label_Declaration (L);\n@@ -646,9 +644,7 @@ package body Exp_Ch11 is\n          declare\n             --  L3 is the label to exit the HSS\n \n-            L3_Dent : constant Entity_Id :=\n-                        Make_Defining_Identifier (Loc,\n-                          Chars => New_Internal_Name ('L'));\n+            L3_Dent : constant Entity_Id := Make_Temporary (Loc, 'L');\n \n             Labl_L3 : constant Node_Id :=\n                         Make_Label (Loc,\n@@ -1560,6 +1556,8 @@ package body Exp_Ch11 is\n       --  mechanism. However we need to keep the expansion for \"raise;\"\n       --  statements. See 4jexcept.ads for details.\n \n+      --  What is .NET status, either code or comment is wrong here ???\n+\n       if Present (Name (N)) and then VM_Target /= No_VM then\n          return;\n       end if;\n@@ -1686,7 +1684,7 @@ package body Exp_Ch11 is\n          --  be referencing this entity by normal visibility methods.\n \n          if No (Choice_Parameter (Ehand)) then\n-            E := Make_Defining_Identifier (Loc, New_Internal_Name ('E'));\n+            E := Make_Temporary (Loc, 'E');\n             Set_Choice_Parameter (Ehand, E);\n             Set_Ekind (E, E_Variable);\n             Set_Etype (E, RTE (RE_Exception_Occurrence));"}, {"sha": "5272f06d338d64a48bdd1fa5d67f261a21ecb889", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 24, "deletions": 53, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=191fcb3a9f04680935145a21a32f5ba30e3bea74", "patch": "@@ -504,7 +504,7 @@ package body Exp_Ch3 is\n             --  And insert this declaration into the tree. The type of the\n             --  discriminant is then reset to this more restricted subtype.\n \n-            Tnn := Make_Defining_Identifier (Loc, New_Internal_Name ('T'));\n+            Tnn := Make_Temporary (Loc, 'T');\n \n             Insert_Action (Declaration_Node (Rtype),\n               Make_Subtype_Declaration (Loc,\n@@ -2115,10 +2115,7 @@ package body Exp_Ch3 is\n             Spec_Node : Node_Id;\n \n          begin\n-            Func_Id :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('F'));\n-\n+            Func_Id := Make_Temporary (Loc, 'F');\n             Set_DT_Offset_To_Top_Func (Iface_Comp, Func_Id);\n \n             --  Generate\n@@ -2246,9 +2243,7 @@ package body Exp_Ch3 is\n          if Is_Tagged_Type (Rec_Type)\n            and then not Is_CPP_Class (Rec_Type)\n          then\n-            Set_Tag :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('P'));\n+            Set_Tag := Make_Temporary (Loc, 'P');\n \n             Append_To (Parameters,\n               Make_Parameter_Specification (Loc,\n@@ -3404,37 +3399,21 @@ package body Exp_Ch3 is\n       Loc   : constant Source_Ptr := Sloc (Typ);\n       Index : constant Entity_Id  := Base_Type (Etype (First_Index (Typ)));\n \n-      --  Build formal parameters of procedure\n-\n-      Larray   : constant Entity_Id :=\n-                   Make_Defining_Identifier\n-                     (Loc, Chars => New_Internal_Name ('A'));\n-      Rarray   : constant Entity_Id :=\n-                   Make_Defining_Identifier\n-                     (Loc, Chars => New_Internal_Name ('R'));\n-      Left_Lo  : constant Entity_Id :=\n-                   Make_Defining_Identifier\n-                     (Loc, Chars => New_Internal_Name ('L'));\n-      Left_Hi  : constant Entity_Id :=\n-                   Make_Defining_Identifier\n-                     (Loc, Chars => New_Internal_Name ('L'));\n-      Right_Lo : constant Entity_Id :=\n-                   Make_Defining_Identifier\n-                     (Loc, Chars => New_Internal_Name ('R'));\n-      Right_Hi : constant Entity_Id :=\n-                   Make_Defining_Identifier\n-                     (Loc, Chars => New_Internal_Name ('R'));\n-      Rev      : constant Entity_Id :=\n-                   Make_Defining_Identifier\n-                     (Loc, Chars => New_Internal_Name ('D'));\n+      Larray    : constant Entity_Id := Make_Temporary (Loc, 'A');\n+      Rarray    : constant Entity_Id := Make_Temporary (Loc, 'R');\n+      Left_Lo   : constant Entity_Id := Make_Temporary (Loc, 'L');\n+      Left_Hi   : constant Entity_Id := Make_Temporary (Loc, 'L');\n+      Right_Lo  : constant Entity_Id := Make_Temporary (Loc, 'R');\n+      Right_Hi  : constant Entity_Id := Make_Temporary (Loc, 'R');\n+      Rev       : constant Entity_Id := Make_Temporary (Loc, 'D');\n+      --  Formal parameters of procedure\n+\n       Proc_Name : constant Entity_Id :=\n                     Make_Defining_Identifier (Loc,\n                       Chars => Make_TSS_Name (Typ, TSS_Slice_Assign));\n \n-      Lnn : constant Entity_Id :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('L'));\n-      Rnn : constant Entity_Id :=\n-              Make_Defining_Identifier (Loc, New_Internal_Name ('R'));\n+      Lnn : constant Entity_Id := Make_Temporary (Loc, 'L');\n+      Rnn : constant Entity_Id := Make_Temporary (Loc, 'R');\n       --  Subscripts for left and right sides\n \n       Decls : List_Id;\n@@ -4620,8 +4599,7 @@ package body Exp_Ch3 is\n                      Decl_1 :=\n                        Make_Object_Declaration (Loc,\n                          Defining_Identifier =>\n-                           Make_Defining_Identifier (Loc,\n-                             New_Internal_Name ('D')),\n+                           Make_Temporary (Loc, 'D', Expr_N),\n                          Object_Definition =>\n                            New_Occurrence_Of (Expr_Typ, Loc),\n                          Expression =>\n@@ -4633,12 +4611,9 @@ package body Exp_Ch3 is\n \n                      Decl_2 :=\n                        Make_Object_Renaming_Declaration (Loc,\n-                         Defining_Identifier =>\n-                           Make_Defining_Identifier (Loc,\n-                             New_Internal_Name ('D')),\n-                         Subtype_Mark =>\n-                           New_Occurrence_Of (Typ, Loc),\n-                         Name =>\n+                         Defining_Identifier => Make_Temporary (Loc, 'D'),\n+                         Subtype_Mark        => New_Occurrence_Of (Typ, Loc),\n+                         Name                =>\n                            Unchecked_Convert_To (Typ,\n                              Make_Selected_Component (Loc,\n                                Prefix =>\n@@ -4682,23 +4657,19 @@ package body Exp_Ch3 is\n                      Decl_1 :=\n                        Make_Object_Declaration (Loc,\n                          Defining_Identifier =>\n-                           Make_Defining_Identifier (Loc,\n-                             New_Internal_Name ('D')),\n-                         Object_Definition =>\n+                           Make_Temporary (Loc, 'D', New_Expr),\n+                         Object_Definition   =>\n                            New_Occurrence_Of\n                             (Etype (Object_Definition (N)), Loc),\n-                         Expression =>\n+                         Expression          =>\n                            Unchecked_Convert_To\n                              (Etype (Object_Definition (N)), New_Expr));\n \n                      Decl_2 :=\n                        Make_Object_Renaming_Declaration (Loc,\n-                         Defining_Identifier =>\n-                           Make_Defining_Identifier (Loc,\n-                             New_Internal_Name ('D')),\n-                         Subtype_Mark =>\n-                           New_Occurrence_Of (Typ, Loc),\n-                         Name =>\n+                         Defining_Identifier => Make_Temporary (Loc, 'D'),\n+                         Subtype_Mark        => New_Occurrence_Of (Typ, Loc),\n+                         Name                =>\n                            Unchecked_Convert_To (Typ,\n                              Make_Explicit_Dereference (Loc,\n                                Unchecked_Convert_To (RTE (RE_Tag_Ptr),"}, {"sha": "99e8fc064e552b01c79e2ba8580238ff32b2e55d", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 27, "deletions": 56, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=191fcb3a9f04680935145a21a32f5ba30e3bea74", "patch": "@@ -595,7 +595,7 @@ package body Exp_Ch4 is\n \n             Set_Analyzed (Node);\n \n-            Temp := Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n+            Temp := Make_Temporary (Loc, 'P', Node);\n \n             Insert_Action (N,\n               Make_Object_Declaration (Loc,\n@@ -664,8 +664,7 @@ package body Exp_Ch4 is\n             Remove_Side_Effects (Exp);\n          end if;\n \n-         Temp :=\n-           Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n+         Temp := Make_Temporary (Loc, 'P');\n \n          --  For a class wide allocation generate the following code:\n \n@@ -755,9 +754,7 @@ package body Exp_Ch4 is\n \n          else\n             declare\n-               Def_Id   : constant Entity_Id :=\n-                            Make_Defining_Identifier (Loc,\n-                              New_Internal_Name ('T'));\n+               Def_Id   : constant Entity_Id := Make_Temporary (Loc, 'T');\n                New_Decl : Node_Id;\n \n             begin\n@@ -834,8 +831,7 @@ package body Exp_Ch4 is\n \n                New_Decl :=\n                  Make_Object_Declaration (Loc,\n-                   Defining_Identifier => Make_Defining_Identifier (Loc,\n-                                             New_Internal_Name ('P')),\n+                   Defining_Identifier => Make_Temporary (Loc, 'P'),\n                    Object_Definition   => New_Reference_To (PtrT, Loc),\n                    Expression          => Unchecked_Convert_To (PtrT,\n                                             New_Reference_To (Temp, Loc)));\n@@ -916,16 +912,13 @@ package body Exp_Ch4 is\n \n                if Is_RTE (Apool, RE_SS_Pool) then\n                   declare\n-                     F : constant Entity_Id :=\n-                           Make_Defining_Identifier (Loc,\n-                             New_Internal_Name ('F'));\n+                     F : constant Entity_Id := Make_Temporary (Loc, 'F');\n                   begin\n                      Insert_Action (N,\n                        Make_Object_Declaration (Loc,\n                          Defining_Identifier => F,\n-                         Object_Definition   => New_Reference_To (RTE\n-                          (RE_Finalizable_Ptr), Loc)));\n-\n+                         Object_Definition   =>\n+                           New_Reference_To (RTE (RE_Finalizable_Ptr), Loc)));\n                      Flist := New_Reference_To (F, Loc);\n                      Attach :=  Make_Integer_Literal (Loc, 1);\n                   end;\n@@ -991,8 +984,7 @@ package body Exp_Ch4 is\n          end if;\n \n       elsif Aggr_In_Place then\n-         Temp :=\n-           Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n+         Temp := Make_Temporary (Loc, 'P');\n          Tmp_Node :=\n            Make_Object_Declaration (Loc,\n              Defining_Identifier => Temp,\n@@ -1076,9 +1068,7 @@ package body Exp_Ch4 is\n            and then Is_Packed (T)\n          then\n             declare\n-               ConstrT      : constant Entity_Id :=\n-                                Make_Defining_Identifier (Loc,\n-                                  Chars => New_Internal_Name ('A'));\n+               ConstrT      : constant Entity_Id := Make_Temporary (Loc, 'A');\n                Internal_Exp : constant Node_Id   := Relocate_Node (Exp);\n             begin\n                Insert_Action (Exp,\n@@ -1598,8 +1588,7 @@ package body Exp_Ch4 is\n          --  constrained types, then we can use the same index for both\n          --  of the arrays.\n \n-         An : constant Entity_Id := Make_Defining_Identifier (Loc,\n-                                      Chars => New_Internal_Name ('A'));\n+         An : constant Entity_Id := Make_Temporary (Loc, 'A');\n \n          Bn       : Entity_Id;\n          Index_T  : Entity_Id;\n@@ -1616,9 +1605,7 @@ package body Exp_Ch4 is\n          Index_T := Base_Type (Etype (Index));\n \n          if Need_Separate_Indexes then\n-            Bn :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('B'));\n+            Bn := Make_Temporary (Loc, 'B');\n          else\n             Bn := An;\n          end if;\n@@ -1805,7 +1792,7 @@ package body Exp_Ch4 is\n           Defining_Identifier => B,\n           Parameter_Type      => New_Reference_To (Rtyp, Loc)));\n \n-      Func_Name := Make_Defining_Identifier (Loc,  New_Internal_Name ('E'));\n+      Func_Name := Make_Temporary (Loc, 'E');\n \n       --  Build statement sequence for function\n \n@@ -2625,9 +2612,7 @@ package body Exp_Ch4 is\n                Operands (NN) := Opnd;\n                Is_Fixed_Length (NN) := False;\n \n-               Var_Length (NN) :=\n-                 Make_Defining_Identifier (Loc,\n-                   Chars => New_Internal_Name ('L'));\n+               Var_Length (NN) := Make_Temporary (Loc, 'L');\n \n                Append_To (Actions,\n                  Make_Object_Declaration (Loc,\n@@ -2674,9 +2659,7 @@ package body Exp_Ch4 is\n          --  create an entity initialized to this length.\n \n          else\n-            Ent :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_Internal_Name ('L'));\n+            Ent := Make_Temporary (Loc, 'L');\n \n             if Is_Fixed_Length (NN) then\n                Clen := Make_Integer_Literal (Loc, Fixed_Length (NN));\n@@ -2794,8 +2777,7 @@ package body Exp_Ch4 is\n             end Get_Known_Bound;\n \n          begin\n-            Ent :=\n-              Make_Defining_Identifier (Loc, Chars => New_Internal_Name ('L'));\n+            Ent := Make_Temporary (Loc, 'L');\n \n             Append_To (Actions,\n               Make_Object_Declaration (Loc,\n@@ -2851,9 +2833,7 @@ package body Exp_Ch4 is\n \n       --  Now we construct an array object with appropriate bounds\n \n-      Ent :=\n-        Make_Defining_Identifier (Loc,\n-          Chars => New_Internal_Name ('S'));\n+      Ent := Make_Temporary (Loc, 'S');\n \n       --  If the bound is statically known to be out of range, we do not want\n       --  to abort, we want a warning and a runtime constraint error. Note that\n@@ -3277,9 +3257,7 @@ package body Exp_Ch4 is\n       -------------------------\n \n       procedure Rewrite_Coextension (N : Node_Id) is\n-         Temp : constant Node_Id :=\n-                  Make_Defining_Identifier (Loc,\n-                    New_Internal_Name ('C'));\n+         Temp : constant Node_Id := Make_Temporary (Loc, 'C');\n \n          --  Generate:\n          --    Cnn : aliased Etyp;\n@@ -3432,9 +3410,7 @@ package body Exp_Ch4 is\n          --  and replace the allocator by Tnn'Unrestricted_Access. Tnn is\n          --  marked as requiring static allocation.\n \n-         Temp :=\n-           Make_Defining_Identifier (Loc, New_Internal_Name ('T'));\n-\n+         Temp := Make_Temporary (Loc, 'T', Expression (Expression (N)));\n          Desig := Subtype_Mark (Expression (N));\n \n          --  If context is constrained, use constrained subtype directly,\n@@ -3597,7 +3573,7 @@ package body Exp_Ch4 is\n             if not Restriction_Active (No_Default_Initialization) then\n                Init := Base_Init_Proc (T);\n                Nod  := N;\n-               Temp := Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n+               Temp := Make_Temporary (Loc, 'P');\n \n                --  Construct argument list for the initialization routine call\n \n@@ -3965,8 +3941,7 @@ package body Exp_Ch4 is\n \n          P_Decl :=\n            Make_Full_Type_Declaration (Loc,\n-             Defining_Identifier =>\n-               Make_Defining_Identifier (Loc, New_Internal_Name ('A')),\n+             Defining_Identifier => Make_Temporary (Loc, 'A'),\n              Type_Definition =>\n                Make_Access_To_Object_Definition (Loc,\n                  All_Present => True,\n@@ -5882,8 +5857,7 @@ package body Exp_Ch4 is\n             --    En * En\n \n             else -- Expv = 4\n-               Temp :=\n-                 Make_Defining_Identifier (Loc, New_Internal_Name ('E'));\n+               Temp := Make_Temporary (Loc, 'E', Base);\n \n                Insert_Actions (N, New_List (\n                  Make_Object_Declaration (Loc,\n@@ -6811,7 +6785,7 @@ package body Exp_Ch4 is\n               Name       => B_J,\n               Expression => Make_Op_Not (Loc, A_J))));\n \n-      Func_Name := Make_Defining_Identifier (Loc, New_Internal_Name ('N'));\n+      Func_Name := Make_Temporary (Loc, 'N');\n       Set_Is_Inlined (Func_Name);\n \n       Insert_Action (N,\n@@ -7646,7 +7620,7 @@ package body Exp_Ch4 is\n                        Constraints => Cons));\n             end if;\n \n-            Temp := Make_Defining_Identifier (Loc, New_Internal_Name ('C'));\n+            Temp := Make_Temporary (Loc, 'C');\n             Decl :=\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => Temp,\n@@ -7808,9 +7782,7 @@ package body Exp_Ch4 is\n             Enable_Overflow_Check (Conv);\n          end if;\n \n-         Tnn :=\n-           Make_Defining_Identifier (Loc,\n-             Chars => New_Internal_Name ('T'));\n+         Tnn := Make_Temporary (Loc, 'T', Conv);\n \n          Insert_Actions (N, New_List (\n            Make_Object_Declaration (Loc,\n@@ -8978,7 +8950,7 @@ package body Exp_Ch4 is\n              PtrT /=\n                Etype (Defining_Unit_Name (Associated_Node_For_Itype (PtrT)))\n          then\n-            Owner := Make_Defining_Identifier (Loc, New_Internal_Name ('J'));\n+            Owner := Make_Temporary (Loc, 'J');\n             Insert_Action (N,\n               Make_Full_Type_Declaration (Loc,\n                 Defining_Identifier => Owner,\n@@ -9469,7 +9441,7 @@ package body Exp_Ch4 is\n       --    if ... end if;\n       --  end Gnnn;\n \n-      Func_Name := Make_Defining_Identifier (Loc, New_Internal_Name ('G'));\n+      Func_Name := Make_Temporary (Loc, 'G');\n \n       Func_Body :=\n         Make_Subprogram_Body (Loc,\n@@ -9597,8 +9569,7 @@ package body Exp_Ch4 is\n           Defining_Identifier => B,\n           Parameter_Type      => New_Reference_To (Typ, Loc)));\n \n-      Func_Name :=\n-        Make_Defining_Identifier (Loc, New_Internal_Name ('A'));\n+      Func_Name := Make_Temporary (Loc, 'A');\n       Set_Is_Inlined (Func_Name);\n \n       Func_Body :="}, {"sha": "133613d9870f66c4dd44d832dc37aeedb59449bf", "filename": "gcc/ada/tbuild.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2Ftbuild.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2Ftbuild.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.adb?ref=191fcb3a9f04680935145a21a32f5ba30e3bea74", "patch": "@@ -442,9 +442,9 @@ package body Tbuild is\n    function Make_Temporary\n      (Loc          : Source_Ptr;\n       Id           : Character;\n-      Related_Node : Node_Id := Empty) return Node_Id\n+      Related_Node : Node_Id := Empty) return Entity_Id\n    is\n-      Temp : constant Node_Id :=\n+      Temp : constant Entity_Id :=\n                Make_Defining_Identifier (Loc,\n                  Chars => New_Internal_Name (Id));\n    begin"}, {"sha": "d968640c7d6b29c666310ab60038a7945d4c9447", "filename": "gcc/ada/tbuild.ads", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2Ftbuild.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/191fcb3a9f04680935145a21a32f5ba30e3bea74/gcc%2Fada%2Ftbuild.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.ads?ref=191fcb3a9f04680935145a21a32f5ba30e3bea74", "patch": "@@ -179,11 +179,16 @@ package Tbuild is\n    function Make_Temporary\n      (Loc          : Source_Ptr;\n       Id           : Character;\n-      Related_Node : Node_Id := Empty) return Node_Id;\n-   --  Create a defining identifier to capture the value of an expression\n-   --  or aggregate, and link it to the expression that it replaces, in\n-   --  order to provide better CodePeer reports. The defining identifier\n-   --  name is obtained by New_Internal_Name (Id).\n+      Related_Node : Node_Id := Empty) return Entity_Id;\n+   --  This function should be used for all cases where a temporary is\n+   --  built with a name to be obtained by New_Internal_Name (here Id is\n+   --  the character passed as the argument to New_Internal_Name). Loc\n+   --  is the location for the Sloc value of the resulting Entity.\n+   --\n+   --  Related_Node is used when the identifier is capturing the value of\n+   --  an expression (e.g. an aggregate). It should be set whenever possible\n+   --  to point to the expression that is being captured. This is provided\n+   --  to get better error messages, especially from CodePeer reports.\n \n    function Make_Unsuppress_Block\n      (Loc   : Source_Ptr;"}]}