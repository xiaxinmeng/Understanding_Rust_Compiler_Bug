{"sha": "695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk1YThlNjIxMGYzNmVmZDcxMWEyM2FiNGIyYmQ0ZjFjYmY4YTg1Nw==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2009-09-17T21:41:38Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2009-09-17T21:41:38Z"}, "message": "dfp-dbg.h: Define EXTERN.\n\n\t* gcc/testsuite/gcc.dg/dfp/dfp-dbg.h: Define EXTERN.\n\t* gcc/testsuite/gcc.dg/dfp/signbit-2.c: Use it.\n\t* gcc/testsuite/gcc.dg/dfp/func-vararg-alternate.h: Change two\n\targuments to unsigned int.\n\t* gcc/testsuite/gcc.dg/dfp/convert-bfp-10.c: Don't include float.h.\n\t* gcc/testsuite/gcc.dg/dfp/convert-bfp-fold.c: Include dfp-dbg.h.\n\t* gcc/testsuite/gcc.dg/dfp/convert-dfp-fold.c: Ditto\n\t* gcc/testsuite/gcc.dg/dfp/convert-int-max-fold.c: Ditto.\n\t* gcc/testsuite/gcc.dg/dfp/operator-arith-fold.c: Ditto.\n\t* gcc/testsuite/gcc.dg/dfp/pr39986.c: Ditto.\n\t* gcc/testsuite/gcc.dg/dfp/usual-arith-conv-const.c: Ditto.\n\t* gcc/testsuite/gcc.dg/dfp/pr31385.c: Use mode in typedef, not C type.\n\t* gcc/testsuite/gcc.dg/dfp/pr35620.c: Define typedef for C++.\n\t* gcc/testsuite/gcc.dg/dfp/convert-int.c: Define BOOL for C++.\n\t* gcc/testsuite/gcc.dg/dfp/convert-int-fold.c: Ditto.\n\nFrom-SVN: r151821", "tree": {"sha": "7bf3cb33d1c3c452c517924fe419f535d8110857", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bf3cb33d1c3c452c517924fe419f535d8110857"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "html_url": "https://github.com/Rust-GCC/gccrs/commit/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/comments", "author": null, "committer": null, "parents": [{"sha": "987ce5575c1265d77ea60d38cd9309d9c1f9715f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/987ce5575c1265d77ea60d38cd9309d9c1f9715f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/987ce5575c1265d77ea60d38cd9309d9c1f9715f"}], "stats": {"total": 63, "additions": 52, "deletions": 11}, "files": [{"sha": "67cf3a969d8a5852dc01c1b7f33b3ed946db831c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "patch": "@@ -1,3 +1,21 @@\n+2009-09-17  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* gcc/testsuite/gcc.dg/dfp/dfp-dbg.h: Define EXTERN.\n+\t* gcc/testsuite/gcc.dg/dfp/signbit-2.c: Use it.\n+\t* gcc/testsuite/gcc.dg/dfp/func-vararg-alternate.h: Change two\n+\targuments to unsigned int.\n+\t* gcc/testsuite/gcc.dg/dfp/convert-bfp-10.c: Don't include float.h.\n+\t* gcc/testsuite/gcc.dg/dfp/convert-bfp-fold.c: Include dfp-dbg.h.\n+\t* gcc/testsuite/gcc.dg/dfp/convert-dfp-fold.c: Ditto\n+\t* gcc/testsuite/gcc.dg/dfp/convert-int-max-fold.c: Ditto.\n+\t* gcc/testsuite/gcc.dg/dfp/operator-arith-fold.c: Ditto.\n+\t* gcc/testsuite/gcc.dg/dfp/pr39986.c: Ditto.\n+\t* gcc/testsuite/gcc.dg/dfp/usual-arith-conv-const.c: Ditto.\n+\t* gcc/testsuite/gcc.dg/dfp/pr31385.c: Use mode in typedef, not C type.\n+\t* gcc/testsuite/gcc.dg/dfp/pr35620.c: Define typedef for C++.\n+\t* gcc/testsuite/gcc.dg/dfp/convert-int.c: Define BOOL for C++.\n+\t* gcc/testsuite/gcc.dg/dfp/convert-int-fold.c: Ditto.\n+\n 2009-09-17  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/debug/dwarf2/struct-loc1.c: New test."}, {"sha": "3fef98a3384192a0d4eccb596d0047a681853428", "filename": "gcc/testsuite/gcc.dg/dfp/convert-bfp-10.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-bfp-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-bfp-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-bfp-10.c?ref=695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "patch": "@@ -1,8 +1,5 @@\n /* This test assumes IEEE float and double.  */\n \n-#define __STDC_WANT_DEC_FP__\n-#include <float.h>\n-\n #include \"convert.h\"\n \n volatile _Decimal32 sd;"}, {"sha": "d62a7e4b21c437d58fcb09dc1d655da43db1d28c", "filename": "gcc/testsuite/gcc.dg/dfp/convert-bfp-fold.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-bfp-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-bfp-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-bfp-fold.c?ref=695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "patch": "@@ -4,6 +4,8 @@\n    decimal floating types and generic floating types.\n    C99 6.3.1.5(4) Conversions, arithmetic operands, real floating types.  */\n \n+#include \"dfp-dbg.h\"\n+\n _Decimal32 d32;\n _Decimal64 d64;\n _Decimal128 d128;"}, {"sha": "67c9d71c224ae78af797245d14cd76e174d5d0fb", "filename": "gcc/testsuite/gcc.dg/dfp/convert-dfp-fold.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp-fold.c?ref=695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "patch": "@@ -4,6 +4,8 @@\n    decimal floating types and generic floating types.\n    C99 6.3.1.5(3) New.  */\n \n+#include \"dfp-dbg.h\"\n+\n extern void link_error ();\n \n int"}, {"sha": "038559d41e45b8fbaddf5562824eb0b218d0c114", "filename": "gcc/testsuite/gcc.dg/dfp/convert-int-fold.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-int-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-int-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-int-fold.c?ref=695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "patch": "@@ -6,7 +6,11 @@\n \n #include \"dfp-dbg.h\"\n \n+#ifdef __cplusplus\n+#define BOOL bool\n+#else\n #define BOOL _Bool\n+#endif\n \n extern void link_error (void);\n "}, {"sha": "3f6faae34cc42ff57834ed1fcf0eef4f292e030d", "filename": "gcc/testsuite/gcc.dg/dfp/convert-int-max-fold.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-int-max-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-int-max-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-int-max-fold.c?ref=695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "patch": "@@ -7,6 +7,8 @@\n    64-bit long long (there's a check for that below).  This version tests\n    conversions during compilation.  */\n \n+#include \"dfp-dbg.h\"\n+\n extern void link_error (void);\n \n void"}, {"sha": "1525d5760a44d10bf181eb4da838ffccc045a2c0", "filename": "gcc/testsuite/gcc.dg/dfp/convert-int.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-int.c?ref=695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "patch": "@@ -5,7 +5,11 @@\n \n #include \"dfp-dbg.h\"\n \n+#ifdef __cplusplus\n+#define BOOL bool\n+#else\n #define BOOL _Bool\n+#endif\n \n _Decimal32 d32;\n _Decimal64 d64;"}, {"sha": "253a9d05f57f7a238b34a92dded90a39f2661c9a", "filename": "gcc/testsuite/gcc.dg/dfp/dfp-dbg.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fdfp-dbg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fdfp-dbg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fdfp-dbg.h?ref=695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "patch": "@@ -1,3 +1,5 @@\n+#define EXTERN extern\n+\n int failures;\n \n #ifdef DBG"}, {"sha": "5ba0ab0dc1f70bf172d2bf81daeb2a6c45709bfd", "filename": "gcc/testsuite/gcc.dg/dfp/func-vararg-alternate.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-vararg-alternate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-vararg-alternate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-vararg-alternate.h?ref=695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "patch": "@@ -13,7 +13,7 @@ union U {\n };\n \n void\n-compare (double r, double s, int *p, int *q, int n, int line)\n+compare (double r, double s, unsigned int *p, unsigned int *q, int n, int line)\n {\n   int i;\n "}, {"sha": "c4aa4cbb27edede313151f49591473e12108aac7", "filename": "gcc/testsuite/gcc.dg/dfp/operator-arith-fold.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-arith-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-arith-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-arith-fold.c?ref=695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "patch": "@@ -3,6 +3,8 @@\n /* C99 6.5.5: Multiplicative operators.\n    C99 6.5.6: Additive operators.  */\n \n+#include \"dfp-dbg.h\"\n+\n extern void link_error (void);\n \n int"}, {"sha": "fc024a3e6b829eb319ed287b85c3d79a978cc722", "filename": "gcc/testsuite/gcc.dg/dfp/pr31385.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr31385.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr31385.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr31385.c?ref=695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n-typedef _Decimal32 fp_t;\n+typedef float fp_t __attribute__((mode(SD)));\n \n extern fp_t g(fp_t);\n "}, {"sha": "37a9c4044ed54e33d7d05dac5d098466a0a4a551", "filename": "gcc/testsuite/gcc.dg/dfp/pr35620.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr35620.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr35620.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr35620.c?ref=695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "patch": "@@ -1,6 +1,10 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n+#ifdef __cplusplus\n+typedef float _Decimal32 __attribute__((mode(SD)));\n+#endif\n+\n extern void foo (_Decimal32);\n _Decimal32 *p;\n "}, {"sha": "e7c9ce98283e368522c4e0552d436cbd0673652b", "filename": "gcc/testsuite/gcc.dg/dfp/pr39986.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr39986.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr39986.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr39986.c?ref=695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "patch": "@@ -1,5 +1,7 @@\n /* { dg-do compile } */\n \n+#include \"dfp-dbg.h\"\n+\n /* Check that the compiler generates the correct decimal float constants.  */\n \n _Decimal32 a = 100.223df;"}, {"sha": "e51bf918bf474c833a708848a38294336f7e2ff7", "filename": "gcc/testsuite/gcc.dg/dfp/signbit-2.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fsignbit-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fsignbit-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fsignbit-2.c?ref=695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "patch": "@@ -12,12 +12,12 @@ volatile float f = 1.2f;\n volatile double d = -7.8;\n volatile long double ld = 3.4L;\n \n-extern int signbitf (float);\n-extern int signbit (double);\n-extern int signbitl (long double);\n-extern int signbitd32 (_Decimal32);\n-extern int signbitd64 (_Decimal64);\n-extern int signbitd128 (_Decimal128);\n+EXTERN int signbitf (float);\n+EXTERN int signbit (double);\n+EXTERN int signbitl (long double);\n+EXTERN int signbitd32 (_Decimal32);\n+EXTERN int signbitd64 (_Decimal64);\n+EXTERN int signbitd128 (_Decimal128);\n \n int\n main ()"}, {"sha": "2d72bba423581976422b897f850473f4104a8b1e", "filename": "gcc/testsuite/gcc.dg/dfp/usual-arith-conv-const.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fusual-arith-conv-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fusual-arith-conv-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fusual-arith-conv-const.c?ref=695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "patch": "@@ -2,6 +2,8 @@\n \n /* Test various conversions involving decimal floating types. */\n \n+#include \"dfp-dbg.h\"\n+\n /* Assertion that constant C is of type T.  */\n #define ASSERT_CONST_TYPE(C, T)                 \\\n         do {                                    \\"}]}