{"sha": "b415f25eef56f3f037a1cbdcfe5ceec98138f8a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQxNWYyNWVlZjU2ZjNmMDM3YTFjYmRjZmU1Y2VlYzk4MTM4ZjhhNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-15T23:26:36Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-15T23:26:36Z"}, "message": "(rescan, do_ident): Pass more accurate size request to check_expand.\n\nFrom-SVN: r7933", "tree": {"sha": "ccd919470488ce3eb5a915d5ea2949985ba9bcc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccd919470488ce3eb5a915d5ea2949985ba9bcc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b415f25eef56f3f037a1cbdcfe5ceec98138f8a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b415f25eef56f3f037a1cbdcfe5ceec98138f8a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b415f25eef56f3f037a1cbdcfe5ceec98138f8a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b415f25eef56f3f037a1cbdcfe5ceec98138f8a6/comments", "author": null, "committer": null, "parents": [{"sha": "115ee3598d94d841e86efb9e1ffbbf2e15f18e2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/115ee3598d94d841e86efb9e1ffbbf2e15f18e2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/115ee3598d94d841e86efb9e1ffbbf2e15f18e2c"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "3ba2bfb6e06ca2c0a5fc72549ed34b4c687da3fd", "filename": "gcc/cccp.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b415f25eef56f3f037a1cbdcfe5ceec98138f8a6/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b415f25eef56f3f037a1cbdcfe5ceec98138f8a6/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=b415f25eef56f3f037a1cbdcfe5ceec98138f8a6", "patch": "@@ -2811,7 +2811,7 @@ do { ip = &instack[indepth];\t\t\\\n \n \tif (lintcmd != NULL) {\n \t  op->bufp = obp;\n-\t  check_expand (op, 13 + cmdlen);\n+\t  check_expand (op, cmdlen + arglen + 14);\n \t  obp = op->bufp;\n \t  /* I believe it is always safe to emit this newline: */\n \t  obp[-1] = '\\n';\n@@ -2831,7 +2831,7 @@ do { ip = &instack[indepth];\t\t\\\n \t     messes up the line count.  */\n \t  op->bufp = obp;\n \t  output_line_command (ip, op, 0, same_file);\n-\t  check_expand (op, ip->length - (ip->bufp - ip->buf));\n+\t  check_expand (op, limit - ibp + 2);\n \t  obp = op->bufp;\n \t  *(obp++) = '/';\n \t}\n@@ -3013,7 +3013,7 @@ do { ip = &instack[indepth];\t\t\\\n       if (ip->lineno != op->lineno) {\n \top->bufp = obp;\n \toutput_line_command (ip, op, 1, same_file);\n-\tcheck_expand (op, ip->length - (ip->bufp - ip->buf));\n+\tcheck_expand (op, limit - ibp);\n \tobp = op->bufp;\n       }\n       break;\n@@ -6585,7 +6585,7 @@ do_ident (buf, limit)\n   free (trybuf.buf);\n \n   /* Output directive name.  */\n-  check_expand (op, 8);\n+  check_expand (op, 7);\n   bcopy (\"#ident \", (char *) op->bufp, 7);\n   op->bufp += 7;\n "}]}