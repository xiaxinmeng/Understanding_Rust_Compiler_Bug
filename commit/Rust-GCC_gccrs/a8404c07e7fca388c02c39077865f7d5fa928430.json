{"sha": "a8404c07e7fca388c02c39077865f7d5fa928430", "node_id": "C_kwDOANBUbNoAKGE4NDA0YzA3ZTdmY2EzODhjMDJjMzkwNzc4NjVmN2Q1ZmE5Mjg0MzA", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-11-25T09:49:20Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-11-25T09:51:38Z"}, "message": "Fix thinko in operator_bitwise_xor::op1_range\n\nThere is a thinko in the op1_range method of ranger's operator_bitwise_xor\nclass in a boolean context: if the result is known to be true, it may infer\nthat a specific operand is false without any basis.\n\ngcc/\n\t* range-op.cc (operator_bitwise_xor::op1_range): Fix thinko.\n\ngcc/testsuite/\n\t* gnat.dg/opt100.adb: New test.\n\t* gnat.dg/opt100_pkg.adb, gnat.dg/opt100_pkg.ads: New helper.", "tree": {"sha": "e64fa3cfbb5b3d5a3bd1138361d55bbf4115cd90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e64fa3cfbb5b3d5a3bd1138361d55bbf4115cd90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8404c07e7fca388c02c39077865f7d5fa928430", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8404c07e7fca388c02c39077865f7d5fa928430", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8404c07e7fca388c02c39077865f7d5fa928430", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8404c07e7fca388c02c39077865f7d5fa928430/comments", "author": null, "committer": null, "parents": [{"sha": "2b3a3d7fe3420b6b49810b2a7f5d120c53310335", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b3a3d7fe3420b6b49810b2a7f5d120c53310335", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b3a3d7fe3420b6b49810b2a7f5d120c53310335"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "e53f3a70ea0ae8d367b91672f5526c5341d4fc52", "filename": "gcc/range-op.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8404c07e7fca388c02c39077865f7d5fa928430/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8404c07e7fca388c02c39077865f7d5fa928430/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=a8404c07e7fca388c02c39077865f7d5fa928430", "patch": "@@ -3529,6 +3529,9 @@ operator_bitwise_xor::op1_range (irange &r, tree type,\n \t    r.set_varying (type);\n \t  else if (op2.zero_p ())\n \t    r = range_true (type);\n+\t  // See get_bool_state for the rationale\n+\t  else if (op2.contains_p (build_zero_cst (op2.type ())))\n+\t    r = range_true_and_false (type);\n \t  else\n \t    r = range_false (type);\n \t  break;"}, {"sha": "83270b64339e7fb4646f3c8f01331bb56e935d0d", "filename": "gcc/testsuite/gnat.dg/opt100.adb", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8404c07e7fca388c02c39077865f7d5fa928430/gcc%2Ftestsuite%2Fgnat.dg%2Fopt100.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8404c07e7fca388c02c39077865f7d5fa928430/gcc%2Ftestsuite%2Fgnat.dg%2Fopt100.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt100.adb?ref=a8404c07e7fca388c02c39077865f7d5fa928430", "patch": "@@ -0,0 +1,13 @@\n+-- { dg-do run }\n+-- { dg-options \"-O2 -gnatp\" }\n+\n+with Opt100_Pkg; use Opt100_Pkg;\n+\n+procedure Opt100 is\n+  R : constant Rec := (K => B, N => 1);\n+\n+begin\n+  if Func (R) /= 1 then\n+     raise Program_Error;\n+  end if;\n+end;"}, {"sha": "42bf8830d535e0f896b73b03a99653abfc1d9033", "filename": "gcc/testsuite/gnat.dg/opt100_pkg.adb", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8404c07e7fca388c02c39077865f7d5fa928430/gcc%2Ftestsuite%2Fgnat.dg%2Fopt100_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8404c07e7fca388c02c39077865f7d5fa928430/gcc%2Ftestsuite%2Fgnat.dg%2Fopt100_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt100_pkg.adb?ref=a8404c07e7fca388c02c39077865f7d5fa928430", "patch": "@@ -0,0 +1,17 @@\n+package body Opt100_Pkg is\n+\n+   function Func (R : Rec) return Integer is\n+   begin\n+      if R in Small_Rec then\n+         case R.K is\n+            when A => return 0;\n+            when B => return 1;\n+            when C => return 2;\n+            when others => raise Program_Error;\n+         end case;\n+      else\n+         return -1;\n+      end if;\n+   end;\n+\n+end Opt100_Pkg;"}, {"sha": "a45f887d6651bc41f6eb2b883093fc19c24e44ee", "filename": "gcc/testsuite/gnat.dg/opt100_pkg.ads", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8404c07e7fca388c02c39077865f7d5fa928430/gcc%2Ftestsuite%2Fgnat.dg%2Fopt100_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8404c07e7fca388c02c39077865f7d5fa928430/gcc%2Ftestsuite%2Fgnat.dg%2Fopt100_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt100_pkg.ads?ref=a8404c07e7fca388c02c39077865f7d5fa928430", "patch": "@@ -0,0 +1,23 @@\n+with Interfaces; use Interfaces;\n+\n+package Opt100_Pkg is\n+\n+  A : constant Unsigned_8 := 0;\n+  B : constant Unsigned_8 := 1;\n+  C : constant Unsigned_8 := 2;\n+\n+  subtype Small_Unsigned_8 is Unsigned_8 range A .. C;\n+\n+  type Rec is record\n+    K : Unsigned_8;\n+    N : Natural;\n+  end record;\n+\n+  subtype Small_Rec is Rec\n+    with Dynamic_Predicate =>\n+      Small_Rec.K in Small_Unsigned_8 and\n+        ((Small_Rec.N in Positive) = (Small_Rec.K in B | C));\n+\n+   function Func (R : Rec) return Integer;\n+\n+end Opt100_Pkg;"}]}