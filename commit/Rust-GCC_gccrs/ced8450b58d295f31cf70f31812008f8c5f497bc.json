{"sha": "ced8450b58d295f31cf70f31812008f8c5f497bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2VkODQ1MGI1OGQyOTVmMzFjZjcwZjMxODEyMDA4ZjhjNWY0OTdiYw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2013-04-24T13:10:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-24T13:10:01Z"}, "message": "exp_ch8.adb (Expand_N_Subprogram_Renaming_Declaration): If this is a renaming of predefined equality for an untagged record...\n\n2013-04-24  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch8.adb (Expand_N_Subprogram_Renaming_Declaration): If this\n\tis a renaming of predefined equality for an untagged record,\n\tadd generated body to the freeze actions for the subprogram, to\n\tprevent freezing issues when the record has incomplete components.\n\t* exp_ch4.adb (Expand_Composite_Equality): If the type is a type\n\twithout completion, return a predefined comparison instead of\n\tjust False.  This may happen when building the expression for\n\trecord equality, when some component has a type whose completion\n\thas not been seen yet. The operation will be analyzed an expanded\n\tafter the type has been frozen, at which point all component\n\ttypes will have been completed, or an error reported.\n\n2013-04-24  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): Do not delay\n\tanalysis of a Convention aspect.\n\nFrom-SVN: r198225", "tree": {"sha": "b10ddf1a257c099dc0375312a80da34c256edd9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b10ddf1a257c099dc0375312a80da34c256edd9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ced8450b58d295f31cf70f31812008f8c5f497bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ced8450b58d295f31cf70f31812008f8c5f497bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ced8450b58d295f31cf70f31812008f8c5f497bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ced8450b58d295f31cf70f31812008f8c5f497bc/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b546e2a732f0572fb3119facb48ead0b44c75afc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b546e2a732f0572fb3119facb48ead0b44c75afc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b546e2a732f0572fb3119facb48ead0b44c75afc"}], "stats": {"total": 41, "additions": 34, "deletions": 7}, "files": [{"sha": "5f29776f34488a43c179910786bb03e556d1e723", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ced8450b58d295f31cf70f31812008f8c5f497bc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ced8450b58d295f31cf70f31812008f8c5f497bc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ced8450b58d295f31cf70f31812008f8c5f497bc", "patch": "@@ -1,3 +1,22 @@\n+2013-04-24  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch8.adb (Expand_N_Subprogram_Renaming_Declaration): If this\n+\tis a renaming of predefined equality for an untagged record,\n+\tadd generated body to the freeze actions for the subprogram, to\n+\tprevent freezing issues when the record has incomplete components.\n+\t* exp_ch4.adb (Expand_Composite_Equality): If the type is a type\n+\twithout completion, return a predefined comparison instead of\n+\tjust False.  This may happen when building the expression for\n+\trecord equality, when some component has a type whose completion\n+\thas not been seen yet. The operation will be analyzed an expanded\n+\tafter the type has been frozen, at which point all component\n+\ttypes will have been completed, or an error reported.\n+\n+2013-04-24  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): Do not delay\n+\tanalysis of a Convention aspect.\n+\n 2013-04-24  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* fe.h (Machine_Overflows_On_Target): New macro and declaration."}, {"sha": "e463f3868c8b04d08d3152f04a015962a40b9675", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ced8450b58d295f31cf70f31812008f8c5f497bc/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ced8450b58d295f31cf70f31812008f8c5f497bc/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=ced8450b58d295f31cf70f31812008f8c5f497bc", "patch": "@@ -2568,11 +2568,14 @@ package body Exp_Ch4 is\n          Full_Type := Typ;\n       end if;\n \n-      --  Defense against malformed private types with no completion the error\n-      --  will be diagnosed later by check_completion\n+      --  If the private type has no completion the context may be the\n+      --  expansion of a composite equality for a composite type with some\n+      --  still incomplete components. The expression will not be analyzed\n+      --  until the enclosing type is completed, at which point this will be\n+      --  properly expanded, unless there is a bona fide completion error.\n \n       if No (Full_Type) then\n-         return New_Reference_To (Standard_False, Loc);\n+         return Make_Op_Eq (Loc, Left_Opnd => Lhs, Right_Opnd => Rhs);\n       end if;\n \n       Full_Type := Base_Type (Full_Type);"}, {"sha": "97bfac465391928cc9cfa493e70c6a1682ea8e76", "filename": "gcc/ada/exp_ch8.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ced8450b58d295f31cf70f31812008f8c5f497bc/gcc%2Fada%2Fexp_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ced8450b58d295f31cf70f31812008f8c5f497bc/gcc%2Fada%2Fexp_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch8.adb?ref=ced8450b58d295f31cf70f31812008f8c5f497bc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -328,8 +328,8 @@ package body Exp_Ch8 is\n                --  meaning. It may be redefined later, but the renaming is\n                --  elaborated where it occurs. This is technically known as\n                --  Squirreling semantics. Renaming is rewritten as a subprogram\n-               --  declaration, and the body is inserted at the end of the\n-               --  current declaration list to prevent premature freezing.\n+               --  declaration, and the generated  body is inserted into the\n+               --  freeze actions for the subprogram.\n \n                Decl := Build_Body_For_Renaming;\n \n@@ -345,7 +345,7 @@ package body Exp_Ch8 is\n                             Rhs    => Make_Identifier (Loc, Chars (Right)),\n                             Bodies => Declarations (Decl))))));\n \n-               Append (Decl, List_Containing (N));\n+               Append_Freeze_Action (Id, Decl);\n             end if;\n          end;\n       end if;"}, {"sha": "31f5ab826027207ea4bfd08b74c153a23e4ede1c", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ced8450b58d295f31cf70f31812008f8c5f497bc/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ced8450b58d295f31cf70f31812008f8c5f497bc/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=ced8450b58d295f31cf70f31812008f8c5f497bc", "patch": "@@ -1487,6 +1487,11 @@ package body Sem_Ch13 is\n                      Make_Aitem_Pragma\n                        (Pragma_Argument_Associations => Arg_List,\n                         Pragma_Name                  => P_Name);\n+\n+                     --  Convention is a static name, and must be associated\n+                     --  with the entity at once.\n+\n+                     Delay_Required := False;\n                   end;\n \n                --  CPU, Interrupt_Priority, Priority"}]}