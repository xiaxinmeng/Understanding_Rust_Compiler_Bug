{"sha": "00188daa1faa069e07c3a2d71d4298cce68bf4d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAxODhkYWExZmFhMDY5ZTA3YzNhMmQ3MWQ0Mjk4Y2NlNjhiZjRkOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-09-09T09:04:59Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-09-09T09:04:59Z"}, "message": "i386.md (X87MODEF12, SSEMODEF): Remove mode iterators.\n\n2007-09-09  Uros Bizjak  <ubizjak@gmail.com>\n\n        * config/i386/i386.md (X87MODEF12, SSEMODEF): Remove mode iterators.\n        Substitute all uses with ...\n        (MODEF): New mode iterator.\n\n        (*cmpfp_<mode>_cc): Remove operand constraints from pre-regalloc\n        define_insn_and_split splitter pattern.\n        (fix_trunc<mode>_fisttp_i387_1): Ditto.\n        (*fix_trunc<mode>_i387_1): Ditto.\n        (*fistdi2_1): Ditto.\n        (*fist<mode>2_1): Ditto.\n        (frndintxf2_floor): Ditto.\n        (*fist<mode>2_floor_1): Ditto.\n        (frndintxf2_ceil): Ditto.\n        (*fist<mode>2_ceil_1): Ditto.\n        (frndintxf2_trunc): Ditto.\n        (frndintxf2_mask_pm): Ditto.\n\n        (prologue): Use (const_int 0) as never generated filler insn.\n        (epilogue): Ditto.\n        (sibcall_epilogue): Ditto.\n        (eh_return_si): Ditto.\n        (eh_return_di): Ditto.\n\n        (add<mode>3): Rename from adddf3 and addsf3.  Macroize expander\n        using MODEF mode iterator.\n        (sub<mode>3): Rename from subdf3 and subsf3.  Macroize expander\n        using MODEF mode iterator.\n        (mul<mode>3): Rename from muldf3 and mulsf3.  Macroize expander\n        using MODEF mode iterator.\n        (nearbyint<mode>2): Rename from nearbyintdf2 and nearbyintsf2.\n        Macroize expander using MODEF mode iterator.\n\n        (zero_extendsidi2): Remove operand constraints from expander.\n        (smuldi3_highpart): Ditto.\n        (indirect_jump): Ditto.\n        (tablejump): Ditto.\n        (rsqrtsf2): Ditto.\n        * config/i386/sse.md (storentv4sf): Ditto.\n        (storentv2df): Ditto.\n        (storentv2di): Ditto.\n        (storentsi): Ditto.\n        (sse2_cvtpd2ps): Ditto.\n        (vec_interleave_highv16qi): Ditto.\n        (vec_interleave_lowv16qi): Ditto.\n        (vec_interleave_highv8hi): Ditto.\n        (vec_interleave_lowv8hi): Ditto.\n        (vec_interleave_highv4si): Ditto.\n        (vec_interleave_lowv4si): Ditto.\n        (vec_interleave_highv2di): Ditto.\n        (vec_interleave_lowv2di): Ditto.\n        (sse2_maskmovdqu): Ditto.\n        * config/i386/mmx.md (mmx_maskmovq): Ditto.\n\nFrom-SVN: r128290", "tree": {"sha": "aa6be9bf08bea973c8d5d1acc25673920ea4772e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa6be9bf08bea973c8d5d1acc25673920ea4772e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00188daa1faa069e07c3a2d71d4298cce68bf4d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00188daa1faa069e07c3a2d71d4298cce68bf4d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00188daa1faa069e07c3a2d71d4298cce68bf4d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00188daa1faa069e07c3a2d71d4298cce68bf4d9/comments", "author": null, "committer": null, "parents": [{"sha": "805e2059392217cfabc6b719df5a7ee7d0323c7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/805e2059392217cfabc6b719df5a7ee7d0323c7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/805e2059392217cfabc6b719df5a7ee7d0323c7b"}], "stats": {"total": 577, "additions": 296, "deletions": 281}, "files": [{"sha": "c934e2f9749183181d83c0f1264225d779d1f590", "filename": "gcc/ChangeLog", "status": "modified", "additions": 59, "deletions": 4, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00188daa1faa069e07c3a2d71d4298cce68bf4d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00188daa1faa069e07c3a2d71d4298cce68bf4d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=00188daa1faa069e07c3a2d71d4298cce68bf4d9", "patch": "@@ -1,3 +1,58 @@\n+2007-09-09  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (X87MODEF12, SSEMODEF): Remove mode iterators.\n+\tSubstitute all uses with ...\n+\t(MODEF): New mode iterator.\n+\n+\t(*cmpfp_<mode>_cc): Remove operand constraints from pre-regalloc\n+\tdefine_insn_and_split splitter pattern.\n+\t(fix_trunc<mode>_fisttp_i387_1): Ditto.\n+\t(*fix_trunc<mode>_i387_1): Ditto.\n+\t(*fistdi2_1): Ditto.\n+\t(*fist<mode>2_1): Ditto.\n+\t(frndintxf2_floor): Ditto.\n+\t(*fist<mode>2_floor_1): Ditto.\n+\t(frndintxf2_ceil): Ditto.\n+\t(*fist<mode>2_ceil_1): Ditto.\n+\t(frndintxf2_trunc): Ditto.\n+\t(frndintxf2_mask_pm): Ditto.\n+\n+\t(prologue): Use (const_int 0) as never generated filler insn.\n+\t(epilogue): Ditto.\n+\t(sibcall_epilogue): Ditto.\n+\t(eh_return_si): Ditto.\n+\t(eh_return_di): Ditto.\n+\n+\t(add<mode>3): Rename from adddf3 and addsf3.  Macroize expander\n+\tusing MODEF mode iterator.\n+\t(sub<mode>3): Rename from subdf3 and subsf3.  Macroize expander\n+\tusing MODEF mode iterator.\n+\t(mul<mode>3): Rename from muldf3 and mulsf3.  Macroize expander\n+\tusing MODEF mode iterator.\n+\t(nearbyint<mode>2): Rename from nearbyintdf2 and nearbyintsf2.\n+\tMacroize expander using MODEF mode iterator.\n+\n+\t(zero_extendsidi2): Remove operand constraints from expander.\n+\t(smuldi3_highpart): Ditto.\n+\t(indirect_jump): Ditto.\n+\t(tablejump): Ditto.\n+\t(rsqrtsf2): Ditto.\n+\t* config/i386/sse.md (storentv4sf): Ditto.\n+\t(storentv2df): Ditto.\n+\t(storentv2di): Ditto.\n+\t(storentsi): Ditto.\n+\t(sse2_cvtpd2ps): Ditto.\n+\t(vec_interleave_highv16qi): Ditto.\n+\t(vec_interleave_lowv16qi): Ditto.\n+\t(vec_interleave_highv8hi): Ditto.\n+\t(vec_interleave_lowv8hi): Ditto.\n+\t(vec_interleave_highv4si): Ditto.\n+\t(vec_interleave_lowv4si): Ditto.\n+\t(vec_interleave_highv2di): Ditto.\n+\t(vec_interleave_lowv2di): Ditto.\n+\t(sse2_maskmovdqu): Ditto.\n+\t* config/i386/mmx.md (mmx_maskmovq): Ditto.\n+\n 2007-09-09  Ira Rosen  <irar@il.ibm.com>\n \n \t* tree-vectorizer.h (enum vect_def_type): Start enumeration from 1.\n@@ -197,12 +252,12 @@\n 2007-09-08  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/33329\n-\tPR target/26449\n+\tPR rtl-optimization/26449\n \t* config/i386/sse.md (mulv4si3): Do not expand sse2 sequence.\n \t(*sse2_mulv4si3): New define_insn_and_split pattern. Split insn in\n \tsplit1 pass.\n \t(mulv16qi3): Implement as define_insn_and_split pattern instead of\n-\tdefine_expand, to split insn in split1 pass.\n+\tdefine_expand.  Split insn in split1 pass.\n \t(mulv2di3): Ditto.\n \n 2007-09-08  Dorit Nuzman  <dorit@il.ibm.com>\n@@ -320,8 +375,8 @@\n 2007-09-07  Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR tree-optimization/33299\n-\t* tree-vect-transform.c (vect_create_epilog_for_reduction): Update uses \n-\tfor all relevant loop-exit phis, not just the first.\n+\t* tree-vect-transform.c (vect_create_epilog_for_reduction): Update\n+\tuses for all relevant loop-exit phis, not just the first.\n \n 2007-09-07  Richard Guenther  <rguenther@suse.de>\n "}, {"sha": "42b3babeac7fd32a5403d56c894d9a0d34691b64", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 200, "deletions": 240, "changes": 440, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00188daa1faa069e07c3a2d71d4298cce68bf4d9/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00188daa1faa069e07c3a2d71d4298cce68bf4d9/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=00188daa1faa069e07c3a2d71d4298cce68bf4d9", "patch": "@@ -515,21 +515,18 @@\n \t (SI \"general_operand\")\n \t (DI \"x86_64_general_operand\")])\n \n+;; SSE and x87 SFmode and DFmode floating point modes\n+(define_mode_iterator MODEF [SF DF])\n+\n ;; All x87 floating point modes\n (define_mode_iterator X87MODEF [SF DF XF])\n \n-;; x87 SFmode and DFMode floating point modes\n-(define_mode_iterator X87MODEF12 [SF DF])\n-\n ;; All integer modes handled by x87 fisttp operator.\n (define_mode_iterator X87MODEI [HI SI DI])\n \n ;; All integer modes handled by integer x87 operators.\n (define_mode_iterator X87MODEI12 [HI SI])\n \n-;; All SSE floating point modes\n-(define_mode_iterator SSEMODEF [SF DF])\n-\n ;; All integer modes handled by SSE cvtts?2si* operators.\n (define_mode_iterator SSEMODEI24 [SI DI])\n \n@@ -689,8 +686,8 @@\n \n (define_expand \"cmpsi_1\"\n   [(set (reg:CC FLAGS_REG)\n-\t(compare:CC (match_operand:SI 0 \"nonimmediate_operand\" \"rm,r\")\n-\t\t    (match_operand:SI 1 \"general_operand\" \"ri,mr\")))]\n+\t(compare:CC (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n+\t\t    (match_operand:SI 1 \"general_operand\" \"\")))]\n   \"\"\n   \"\")\n \n@@ -887,8 +884,8 @@\n \n (define_expand \"cmp<mode>\"\n   [(set (reg:CC FLAGS_REG)\n-\t(compare:CC (match_operand:SSEMODEF 0 \"cmp_fp_expander_operand\" \"\")\n-\t\t    (match_operand:SSEMODEF 1 \"cmp_fp_expander_operand\" \"\")))]\n+\t(compare:CC (match_operand:MODEF 0 \"cmp_fp_expander_operand\" \"\")\n+\t\t    (match_operand:MODEF 1 \"cmp_fp_expander_operand\" \"\")))]\n   \"TARGET_80387 || (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\"\n {\n   ix86_compare_op0 = operands[0];\n@@ -991,8 +988,8 @@\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n \t(unspec:HI\n \t  [(compare:CCFP\n-\t     (match_operand:X87MODEF12 1 \"register_operand\" \"f\")\n-\t     (match_operand:X87MODEF12 2 \"nonimmediate_operand\" \"fm\"))]\n+\t     (match_operand:MODEF 1 \"register_operand\" \"f\")\n+\t     (match_operand:MODEF 2 \"nonimmediate_operand\" \"fm\"))]\n \t  UNSPEC_FNSTSW))]\n   \"TARGET_80387\"\n   \"* return output_fp_compare (insn, operands, 0, 0);\"\n@@ -1003,8 +1000,8 @@\n (define_insn_and_split \"*cmpfp_<mode>_cc\"\n   [(set (reg:CCFP FLAGS_REG)\n \t(compare:CCFP\n-\t  (match_operand:X87MODEF12 1 \"register_operand\" \"f\")\n-\t  (match_operand:X87MODEF12 2 \"nonimmediate_operand\" \"fm\")))\n+\t  (match_operand:MODEF 1 \"register_operand\" \"f\")\n+\t  (match_operand:MODEF 2 \"nonimmediate_operand\" \"fm\")))\n    (clobber (match_operand:HI 0 \"register_operand\" \"=a\"))]\n   \"TARGET_80387\n    && TARGET_SAHF && !TARGET_CMOVE\"\n@@ -1185,7 +1182,7 @@\n \t\t      (match_operand 1 \"register_operand\" \"f\")))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[0]))\n    && TARGET_CMOVE\n-   && (!TARGET_SSE_MATH || !SSE_FLOAT_MODE_P (GET_MODE (operands[0])))\n+   && !(SSE_FLOAT_MODE_P (GET_MODE (operands[0])) && TARGET_SSE_MATH)\n    && GET_MODE (operands[0]) == GET_MODE (operands[1])\"\n   \"* return output_fp_compare (insn, operands, 1, 0);\"\n   [(set_attr \"type\" \"fcmp\")\n@@ -1237,7 +1234,7 @@\n \t\t       (match_operand 1 \"register_operand\" \"f\")))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[0]))\n    && TARGET_CMOVE\n-   && (!TARGET_SSE_MATH || !SSE_FLOAT_MODE_P (GET_MODE (operands[0])))\n+   && !(SSE_FLOAT_MODE_P (GET_MODE (operands[0])) && TARGET_SSE_MATH)\n    && GET_MODE (operands[0]) == GET_MODE (operands[1])\"\n   \"* return output_fp_compare (insn, operands, 1, 1);\"\n   [(set_attr \"type\" \"fcmp\")\n@@ -3527,8 +3524,8 @@\n \n ;; %%% Kill me once multi-word ops are sane.\n (define_expand \"zero_extendsidi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-     (zero_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"rm\")))]\n+  [(set (match_operand:DI 0 \"register_operand\" \"\")\n+     (zero_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"\")))]\n   \"\"\n {\n   if (!TARGET_64BIT)\n@@ -3959,7 +3956,7 @@\n \n (define_expand \"extend<mode>xf2\"\n   [(set (match_operand:XF 0 \"nonimmediate_operand\" \"\")\n-        (float_extend:XF (match_operand:X87MODEF12 1 \"general_operand\" \"\")))]\n+        (float_extend:XF (match_operand:MODEF 1 \"general_operand\" \"\")))]\n   \"TARGET_80387\"\n {\n   /* ??? Needed for compress_float_constant since all fp constants\n@@ -3980,7 +3977,7 @@\n (define_insn \"*extend<mode>xf2_i387\"\n   [(set (match_operand:XF 0 \"nonimmediate_operand\" \"=f,m\")\n         (float_extend:XF\n-\t  (match_operand:X87MODEF12 1 \"nonimmediate_operand\" \"fm,f\")))]\n+\t  (match_operand:MODEF 1 \"nonimmediate_operand\" \"fm,f\")))]\n   \"TARGET_80387\"\n   \"* return output_387_reg_move (insn, operands);\"\n   [(set_attr \"type\" \"fmov\")\n@@ -4130,8 +4127,8 @@\n ;; Conversion from XFmode to {SF,DF}mode\n \n (define_expand \"truncxf<mode>2\"\n-  [(parallel [(set (match_operand:X87MODEF12 0 \"nonimmediate_operand\" \"\")\n-\t\t   (float_truncate:X87MODEF12\n+  [(parallel [(set (match_operand:MODEF 0 \"nonimmediate_operand\" \"\")\n+\t\t   (float_truncate:MODEF\n \t\t     (match_operand:XF 1 \"register_operand\" \"\")))\n \t      (clobber (match_dup 2))])]\n   \"TARGET_80387\"\n@@ -4177,40 +4174,40 @@\n    (set_attr \"mode\" \"DF\")])\n \n (define_insn \"truncxf<mode>2_i387_noop\"\n-  [(set (match_operand:X87MODEF12 0 \"register_operand\" \"=f\")\n-\t(float_truncate:X87MODEF12\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"=f\")\n+\t(float_truncate:MODEF\n \t  (match_operand:XF 1 \"register_operand\" \"f\")))]\n   \"TARGET_80387 && flag_unsafe_math_optimizations\"\n   \"* return output_387_reg_move (insn, operands);\"\n   [(set_attr \"type\" \"fmov\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"*truncxf<mode>2_i387\"\n-  [(set (match_operand:X87MODEF12 0 \"memory_operand\" \"=m\")\n-\t(float_truncate:X87MODEF12\n+  [(set (match_operand:MODEF 0 \"memory_operand\" \"=m\")\n+\t(float_truncate:MODEF\n \t  (match_operand:XF 1 \"register_operand\" \"f\")))]\n   \"TARGET_80387\"\n   \"* return output_387_reg_move (insn, operands);\"\n   [(set_attr \"type\" \"fmov\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_split\n-  [(set (match_operand:X87MODEF12 0 \"register_operand\" \"\")\n-\t(float_truncate:X87MODEF12\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"\")\n+\t(float_truncate:MODEF\n \t  (match_operand:XF 1 \"register_operand\" \"\")))\n-   (clobber (match_operand:X87MODEF12 2 \"memory_operand\" \"\"))]\n+   (clobber (match_operand:MODEF 2 \"memory_operand\" \"\"))]\n   \"TARGET_80387 && reload_completed\"\n-  [(set (match_dup 2) (float_truncate:X87MODEF12 (match_dup 1)))\n+  [(set (match_dup 2) (float_truncate:MODEF (match_dup 1)))\n    (set (match_dup 0) (match_dup 2))]\n   \"\")\n \n (define_split\n-  [(set (match_operand:X87MODEF12 0 \"memory_operand\" \"\")\n-\t(float_truncate:X87MODEF12\n+  [(set (match_operand:MODEF 0 \"memory_operand\" \"\")\n+\t(float_truncate:MODEF\n \t  (match_operand:XF 1 \"register_operand\" \"\")))\n-   (clobber (match_operand:X87MODEF12 2 \"memory_operand\" \"\"))]\n+   (clobber (match_operand:MODEF 2 \"memory_operand\" \"\"))]\n   \"TARGET_80387\"\n-  [(set (match_dup 0) (float_truncate:X87MODEF12 (match_dup 1)))]\n+  [(set (match_dup 0) (float_truncate:MODEF (match_dup 1)))]\n   \"\")\n \f\n ;; Signed conversion to DImode.\n@@ -4230,7 +4227,7 @@\n \n (define_expand \"fix_trunc<mode>di2\"\n   [(parallel [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n-                   (fix:DI (match_operand:SSEMODEF 1 \"register_operand\" \"\")))\n+                   (fix:DI (match_operand:MODEF 1 \"register_operand\" \"\")))\n               (clobber (reg:CC FLAGS_REG))])]\n   \"TARGET_80387 || (TARGET_64BIT && SSE_FLOAT_MODE_P (<MODE>mode))\"\n {\n@@ -4267,7 +4264,7 @@\n \n (define_expand \"fix_trunc<mode>si2\"\n   [(parallel [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n-\t           (fix:SI (match_operand:SSEMODEF 1 \"register_operand\" \"\")))\n+\t           (fix:SI (match_operand:MODEF 1 \"register_operand\" \"\")))\n \t      (clobber (reg:CC FLAGS_REG))])]\n   \"TARGET_80387 || SSE_FLOAT_MODE_P (<MODE>mode)\"\n {\n@@ -4309,7 +4306,7 @@\n   [(parallel\n     [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t  (unsigned_fix:SI\n-\t    (match_operand:SSEMODEF 1 \"nonimmediate_operand\" \"\")))\n+\t    (match_operand:MODEF 1 \"nonimmediate_operand\" \"\")))\n      (use (match_dup 2))\n      (clobber (match_scratch:<ssevecmode> 3 \"\"))\n      (clobber (match_scratch:<ssevecmode> 4 \"\"))])]\n@@ -4329,7 +4326,7 @@\n (define_insn_and_split \"*fixuns_trunc<mode>_1\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&x,&x\")\n \t(unsigned_fix:SI\n-\t  (match_operand:SSEMODEF 3 \"nonimmediate_operand\" \"xm,xm\")))\n+\t  (match_operand:MODEF 3 \"nonimmediate_operand\" \"xm,xm\")))\n    (use (match_operand:<ssevecmode> 4  \"nonimmediate_operand\" \"m,x\"))\n    (clobber (match_scratch:<ssevecmode> 1 \"=x,&x\"))\n    (clobber (match_scratch:<ssevecmode> 2 \"=x,x\"))]\n@@ -4348,7 +4345,7 @@\n \n (define_expand \"fixuns_trunc<mode>hi2\"\n   [(set (match_dup 2)\n-\t(fix:SI (match_operand:SSEMODEF 1 \"nonimmediate_operand\" \"\")))\n+\t(fix:SI (match_operand:MODEF 1 \"nonimmediate_operand\" \"\")))\n    (set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n \t(subreg:HI (match_dup 2) 0))]\n   \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\"\n@@ -4357,7 +4354,7 @@\n ;; When SSE is available, it is always faster to use it!\n (define_insn \"fix_trunc<mode>di_sse\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n-\t(fix:DI (match_operand:SSEMODEF 1 \"nonimmediate_operand\" \"x,m\")))]\n+\t(fix:DI (match_operand:MODEF 1 \"nonimmediate_operand\" \"x,m\")))]\n   \"TARGET_64BIT && SSE_FLOAT_MODE_P (<MODE>mode)\n    && (!TARGET_FISTTP || TARGET_SSE_MATH)\"\n   \"cvtts<ssemodefsuffix>2si{q}\\t{%1, %0|%0, %1}\"\n@@ -4368,7 +4365,7 @@\n \n (define_insn \"fix_trunc<mode>si_sse\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n-\t(fix:SI (match_operand:SSEMODEF 1 \"nonimmediate_operand\" \"x,m\")))]\n+\t(fix:SI (match_operand:MODEF 1 \"nonimmediate_operand\" \"x,m\")))]\n   \"SSE_FLOAT_MODE_P (<MODE>mode)\n    && (!TARGET_FISTTP || TARGET_SSE_MATH)\"\n   \"cvtts<ssemodefsuffix>2si\\t{%1, %0|%0, %1}\"\n@@ -4379,8 +4376,8 @@\n \n ;; Shorten x87->SSE reload sequences of fix_trunc?f?i_sse patterns.\n (define_peephole2\n-  [(set (match_operand:SSEMODEF 0 \"register_operand\" \"\")\n-\t(match_operand:SSEMODEF 1 \"memory_operand\" \"\"))\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"\")\n+\t(match_operand:MODEF 1 \"memory_operand\" \"\"))\n    (set (match_operand:SSEMODEI24 2 \"register_operand\" \"\")\n \t(fix:SSEMODEI24 (match_dup 0)))]\n   \"TARGET_SHORTEN_X87_SSE\n@@ -4408,8 +4405,8 @@\n   \"\")\n \n (define_insn_and_split \"fix_trunc<mode>_fisttp_i387_1\"\n-  [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(fix:X87MODEI (match_operand 1 \"register_operand\" \"f,f\")))]\n+  [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"\")\n+\t(fix:X87MODEI (match_operand 1 \"register_operand\" \"\")))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n    && TARGET_FISTTP\n    && !((SSE_FLOAT_MODE_P (GET_MODE (operands[1]))\n@@ -4488,8 +4485,8 @@\n ;; clobbering insns can be used. Look at emit_i387_cw_initialization ()\n ;; function in i386.c.\n (define_insn_and_split \"*fix_trunc<mode>_i387_1\"\n-  [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(fix:X87MODEI (match_operand 1 \"register_operand\" \"f,f\")))\n+  [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"\")\n+\t(fix:X87MODEI (match_operand 1 \"register_operand\" \"\")))\n    (clobber (reg:CC FLAGS_REG))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n    && !TARGET_FISTTP\n@@ -4656,8 +4653,8 @@\n ;; wants to be able to do this between registers.\n \n (define_expand \"floathi<mode>2\"\n-  [(set (match_operand:SSEMODEF 0 \"register_operand\" \"\")\n-\t(float:SSEMODEF (match_operand:HI 1 \"nonimmediate_operand\" \"\")))]\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"\")\n+\t(float:MODEF (match_operand:HI 1 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_80387 || (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\"\n {\n   if (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n@@ -4670,8 +4667,8 @@\n })\n \n (define_insn \"*floathi<mode>2_i387\"\n-  [(set (match_operand:X87MODEF12 0 \"register_operand\" \"=f,f\")\n-\t(float:X87MODEF12\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"=f,f\")\n+\t(float:MODEF\n \t  (match_operand:HI 1 \"nonimmediate_operand\" \"m,?r\")))]\n   \"TARGET_80387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n@@ -4685,8 +4682,8 @@\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_expand \"floatsi<mode>2\"\n-  [(set (match_operand:SSEMODEF 0 \"register_operand\" \"\")\n-\t(float:SSEMODEF (match_operand:SI 1 \"nonimmediate_operand\" \"\")))]\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"\")\n+\t(float:MODEF (match_operand:SI 1 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_80387 || (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\"\n   \"\")\n \n@@ -4745,8 +4742,8 @@\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_insn \"*floatsi<mode>2_i387\"\n-  [(set (match_operand:X87MODEF12 0 \"register_operand\" \"=f,f\")\n-\t(float:X87MODEF12\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"=f,f\")\n+\t(float:MODEF\n \t  (match_operand:SI 1 \"nonimmediate_operand\" \"m,?r\")))]\n   \"TARGET_80387\"\n   \"@\n@@ -4830,8 +4827,8 @@\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_insn \"*floatdi<mode>2_i387\"\n-  [(set (match_operand:X87MODEF12 0 \"register_operand\" \"=f,f\")\n-\t(float:X87MODEF12\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"=f,f\")\n+\t(float:MODEF\n \t  (match_operand:DI 1 \"nonimmediate_operand\" \"m,?r\")))]\n   \"TARGET_80387\"\n   \"@\n@@ -6676,18 +6673,11 @@\n   \"TARGET_80387\"\n   \"\")\n \n-(define_expand \"adddf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(plus:DF (match_operand:DF 1 \"register_operand\" \"\")\n-\t\t (match_operand:DF 2 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_80387 || (TARGET_SSE2 && TARGET_SSE_MATH)\"\n-  \"\")\n-\n-(define_expand \"addsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(plus:SF (match_operand:SF 1 \"register_operand\" \"\")\n-\t\t (match_operand:SF 2 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_80387 || TARGET_SSE_MATH\"\n+(define_expand \"add<mode>3\"\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"\")\n+\t(plus:MODEF (match_operand:MODEF 1 \"register_operand\" \"\")\n+\t\t    (match_operand:MODEF 2 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_80387 || (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\"\n   \"\")\n \f\n ;; Subtract instructions\n@@ -7052,18 +7042,11 @@\n   \"TARGET_80387\"\n   \"\")\n \n-(define_expand \"subdf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(minus:DF (match_operand:DF 1 \"register_operand\" \"\")\n-\t\t  (match_operand:DF 2 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_80387 || (TARGET_SSE2 && TARGET_SSE_MATH)\"\n-  \"\")\n-\n-(define_expand \"subsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(minus:SF (match_operand:SF 1 \"register_operand\" \"\")\n-\t\t  (match_operand:SF 2 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_80387 || TARGET_SSE_MATH\"\n+(define_expand \"sub<mode>3\"\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"\")\n+\t(minus:MODEF (match_operand:MODEF 1 \"register_operand\" \"\")\n+\t\t     (match_operand:MODEF 2 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_80387 || (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\"\n   \"\")\n \f\n ;; Multiply instructions\n@@ -7513,7 +7496,7 @@\n    (set_attr \"mode\" \"SI\")])\n \n (define_expand \"smuldi3_highpart\"\n-  [(parallel [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n+  [(parallel [(set (match_operand:DI 0 \"register_operand\" \"\")\n \t\t   (truncate:DI\n \t\t     (lshiftrt:TI\n \t\t       (mult:TI (sign_extend:TI\n@@ -7614,18 +7597,11 @@\n   \"TARGET_80387\"\n   \"\")\n \n-(define_expand \"muldf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(mult:DF (match_operand:DF 1 \"register_operand\" \"\")\n-\t\t (match_operand:DF 2 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_80387 || (TARGET_SSE2 && TARGET_SSE_MATH)\"\n-  \"\")\n-\n-(define_expand \"mulsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(mult:SF (match_operand:SF 1 \"register_operand\" \"\")\n-\t\t (match_operand:SF 2 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_80387 || TARGET_SSE_MATH\"\n+(define_expand \"mul<mode>3\"\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"\")\n+\t(mult:MODEF (match_operand:MODEF 1 \"register_operand\" \"\")\n+\t\t    (match_operand:MODEF 2 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_80387 || (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\"\n   \"\")\n \f\n ;; Divide instructions\n@@ -14234,7 +14210,7 @@\n    (set_attr \"modrm\" \"0\")])\n \n (define_expand \"indirect_jump\"\n-  [(set (pc) (match_operand 0 \"nonimmediate_operand\" \"rm\"))]\n+  [(set (pc) (match_operand 0 \"nonimmediate_operand\" \"\"))]\n   \"\"\n   \"\")\n \n@@ -14253,7 +14229,7 @@\n    (set_attr \"length_immediate\" \"0\")])\n \n (define_expand \"tablejump\"\n-  [(parallel [(set (pc) (match_operand 0 \"nonimmediate_operand\" \"rm\"))\n+  [(parallel [(set (pc) (match_operand 0 \"nonimmediate_operand\" \"\"))\n \t      (use (label_ref (match_operand 1 \"\" \"\")))])]\n   \"\"\n {\n@@ -14670,7 +14646,7 @@\n   [(set_attr \"length\" \"16\")])\n \n (define_expand \"prologue\"\n-  [(const_int 1)]\n+  [(const_int 0)]\n   \"\"\n   \"ix86_expand_prologue (); DONE;\")\n \n@@ -14718,12 +14694,12 @@\n    (set_attr \"length\" \"11\")])\n \n (define_expand \"epilogue\"\n-  [(const_int 1)]\n+  [(const_int 0)]\n   \"\"\n   \"ix86_expand_epilogue (1); DONE;\")\n \n (define_expand \"sibcall_epilogue\"\n-  [(const_int 1)]\n+  [(const_int 0)]\n   \"\"\n   \"ix86_expand_epilogue (0); DONE;\")\n \n@@ -14756,7 +14732,7 @@\n   \"!TARGET_64BIT\"\n   \"#\"\n   \"reload_completed\"\n-  [(const_int 1)]\n+  [(const_int 0)]\n   \"ix86_expand_epilogue (2); DONE;\")\n \n (define_insn_and_split \"eh_return_di\"\n@@ -14766,7 +14742,7 @@\n   \"TARGET_64BIT\"\n   \"#\"\n   \"reload_completed\"\n-  [(const_int 1)]\n+  [(const_int 0)]\n   \"ix86_expand_epilogue (2); DONE;\")\n \n (define_insn \"leave\"\n@@ -16071,7 +16047,7 @@\n   [(set (match_operand:XF 0 \"register_operand\" \"=f,f\")\n \t(match_operator:XF 3 \"binary_fp_operator\"\n \t   [(float_extend:XF\n-\t      (match_operand:X87MODEF12 1 \"nonimmediate_operand\" \"fm,0\"))\n+\t      (match_operand:MODEF 1 \"nonimmediate_operand\" \"fm,0\"))\n \t    (match_operand:XF 2 \"register_operand\" \"0,f\")]))]\n   \"TARGET_80387\"\n   \"* return output_387_binary_op (insn, operands);\"\n@@ -16089,7 +16065,7 @@\n \t(match_operator:XF 3 \"binary_fp_operator\"\n \t  [(match_operand:XF 1 \"register_operand\" \"0,f\")\n \t   (float_extend:XF\n-\t     (match_operand:X87MODEF12 2 \"nonimmediate_operand\" \"fm,0\"))]))]\n+\t     (match_operand:MODEF 2 \"nonimmediate_operand\" \"fm,0\"))]))]\n   \"TARGET_80387\"\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\")\n@@ -16105,9 +16081,9 @@\n   [(set (match_operand:XF 0 \"register_operand\" \"=f,f\")\n \t(match_operator:XF 3 \"binary_fp_operator\"\n \t  [(float_extend:XF\n-\t     (match_operand:X87MODEF12 1 \"register_operand\" \"0,f\"))\n+\t     (match_operand:MODEF 1 \"register_operand\" \"0,f\"))\n \t   (float_extend:XF\n-\t     (match_operand:X87MODEF12 2 \"nonimmediate_operand\" \"fm,0\"))]))]\n+\t     (match_operand:MODEF 2 \"nonimmediate_operand\" \"fm,0\"))]))]\n   \"TARGET_80387\"\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\")\n@@ -16165,8 +16141,8 @@\n ;; all fancy i386 XFmode math functions.\n \n (define_insn \"truncxf<mode>2_i387_noop_unspec\"\n-  [(set (match_operand:X87MODEF12 0 \"register_operand\" \"=f\")\n-\t(unspec:X87MODEF12 [(match_operand:XF 1 \"register_operand\" \"f\")]\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"=f\")\n+\t(unspec:MODEF [(match_operand:XF 1 \"register_operand\" \"f\")]\n \tUNSPEC_TRUNC_NOOP))]\n   \"TARGET_USE_FANCY_MATH_387\"\n   \"* return output_387_reg_move (insn, operands);\"\n@@ -16187,7 +16163,7 @@\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(sqrt:XF\n \t  (float_extend:XF\n-\t    (match_operand:X87MODEF12 1 \"register_operand\" \"0\"))))]\n+\t    (match_operand:MODEF 1 \"register_operand\" \"0\"))))]\n   \"TARGET_USE_FANCY_MATH_387\"\n   \"fsqrt\"\n   [(set_attr \"type\" \"fpspc\")\n@@ -16205,8 +16181,8 @@\n    (set_attr \"mode\" \"SF\")])\n \n (define_expand \"rsqrtsf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=x\")\n-\t(unspec:SF [(match_operand:SF 1 \"nonimmediate_operand\" \"xm\")]\n+  [(set (match_operand:SF 0 \"register_operand\" \"\")\n+\t(unspec:SF [(match_operand:SF 1 \"nonimmediate_operand\" \"\")]\n \t\t   UNSPEC_RSQRT))]\n   \"TARGET_SSE_MATH && TARGET_RECIP && !optimize_size\n    && flag_finite_math_only && !flag_trapping_math\n@@ -16217,9 +16193,9 @@\n })\n \n (define_insn \"*sqrt<mode>2_sse\"\n-  [(set (match_operand:SSEMODEF 0 \"register_operand\" \"=x\")\n-\t(sqrt:SSEMODEF\n-\t  (match_operand:SSEMODEF 1 \"nonimmediate_operand\" \"xm\")))]\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"=x\")\n+\t(sqrt:MODEF\n+\t  (match_operand:MODEF 1 \"nonimmediate_operand\" \"xm\")))]\n   \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\"\n   \"sqrts<ssemodefsuffix>\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sse\")\n@@ -16228,9 +16204,9 @@\n    (set_attr \"amdfam10_decode\" \"*\")])\n \n (define_expand \"sqrt<mode>2\"\n-  [(set (match_operand:X87MODEF12 0 \"register_operand\" \"\")\n-\t(sqrt:X87MODEF12\n-\t  (match_operand:X87MODEF12 1 \"nonimmediate_operand\" \"\")))]\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"\")\n+\t(sqrt:MODEF\n+\t  (match_operand:MODEF 1 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_USE_FANCY_MATH_387\n    || (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\"\n {\n@@ -16290,9 +16266,9 @@\n })\n \n (define_expand \"fmod<mode>3\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 2 \"general_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"general_operand\" \"\"))\n+   (use (match_operand:MODEF 2 \"general_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\"\n {\n   rtx label = gen_label_rtx ();\n@@ -16354,9 +16330,9 @@\n })\n \n (define_expand \"remainder<mode>3\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 2 \"general_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"general_operand\" \"\"))\n+   (use (match_operand:MODEF 2 \"general_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\"\n {\n   rtx label = gen_label_rtx ();\n@@ -16395,7 +16371,7 @@\n (define_insn \"*sin_extend<mode>xf2_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(unspec:XF [(float_extend:XF\n-\t\t      (match_operand:X87MODEF12 1 \"register_operand\" \"0\"))]\n+\t\t      (match_operand:MODEF 1 \"register_operand\" \"0\"))]\n \t\t   UNSPEC_SIN))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n@@ -16417,7 +16393,7 @@\n (define_insn \"*cos_extend<mode>xf2_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(unspec:XF [(float_extend:XF\n-\t\t      (match_operand:X87MODEF12 1 \"register_operand\" \"0\"))]\n+\t\t      (match_operand:MODEF 1 \"register_operand\" \"0\"))]\n \t\t   UNSPEC_COS))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n@@ -16452,7 +16428,7 @@\n    (set (match_operand:XF 1 \"register_operand\" \"\")\n \t(unspec:XF [(match_dup 2)] UNSPEC_SINCOS_SIN))]\n   \"find_regno_note (insn, REG_UNUSED, REGNO (operands[0]))\n-   && !reload_completed && !reload_in_progress\"\n+   && !(reload_completed || reload_in_progress)\"\n   [(set (match_dup 1) (unspec:XF [(match_dup 2)] UNSPEC_SIN))]\n   \"\")\n \n@@ -16463,14 +16439,14 @@\n    (set (match_operand:XF 1 \"register_operand\" \"\")\n \t(unspec:XF [(match_dup 2)] UNSPEC_SINCOS_SIN))]\n   \"find_regno_note (insn, REG_UNUSED, REGNO (operands[1]))\n-   && !reload_completed && !reload_in_progress\"\n+   && !(reload_completed || reload_in_progress)\"\n   [(set (match_dup 0) (unspec:XF [(match_dup 2)] UNSPEC_COS))]\n   \"\")\n \n (define_insn \"sincos_extend<mode>xf3_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(unspec:XF [(float_extend:XF\n-\t\t      (match_operand:X87MODEF12 2 \"register_operand\" \"0\"))]\n+\t\t      (match_operand:MODEF 2 \"register_operand\" \"0\"))]\n \t\t   UNSPEC_SINCOS_COS))\n    (set (match_operand:XF 1 \"register_operand\" \"=u\")\n         (unspec:XF [(float_extend:XF (match_dup 2))] UNSPEC_SINCOS_SIN))]\n@@ -16485,31 +16461,31 @@\n (define_split\n   [(set (match_operand:XF 0 \"register_operand\" \"\")\n \t(unspec:XF [(float_extend:XF\n-\t\t      (match_operand:X87MODEF12 2 \"register_operand\" \"\"))]\n+\t\t      (match_operand:MODEF 2 \"register_operand\" \"\"))]\n \t\t   UNSPEC_SINCOS_COS))\n    (set (match_operand:XF 1 \"register_operand\" \"\")\n \t(unspec:XF [(float_extend:XF (match_dup 2))] UNSPEC_SINCOS_SIN))]\n   \"find_regno_note (insn, REG_UNUSED, REGNO (operands[0]))\n-   && !reload_completed && !reload_in_progress\"\n+   && !(reload_completed || reload_in_progress)\"\n   [(set (match_dup 1) (unspec:XF [(float_extend:XF (match_dup 2))] UNSPEC_SIN))]\n   \"\")\n \n (define_split\n   [(set (match_operand:XF 0 \"register_operand\" \"\")\n \t(unspec:XF [(float_extend:XF\n-\t\t      (match_operand:X87MODEF12 2 \"register_operand\" \"\"))]\n+\t\t      (match_operand:MODEF 2 \"register_operand\" \"\"))]\n \t\t   UNSPEC_SINCOS_COS))\n    (set (match_operand:XF 1 \"register_operand\" \"\")\n \t(unspec:XF [(float_extend:XF (match_dup 2))] UNSPEC_SINCOS_SIN))]\n   \"find_regno_note (insn, REG_UNUSED, REGNO (operands[1]))\n-   && !reload_completed && !reload_in_progress\"\n+   && !(reload_completed || reload_in_progress)\"\n   [(set (match_dup 0) (unspec:XF [(float_extend:XF (match_dup 2))] UNSPEC_COS))]\n   \"\")\n \n (define_expand \"sincos<mode>3\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 2 \"register_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 2 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -16538,11 +16514,11 @@\n    (set_attr \"mode\" \"XF\")])\n \n (define_insn \"fptan_extend<mode>xf4_i387\"\n-  [(set (match_operand:X87MODEF12 0 \"register_operand\" \"=f\")\n-\t(match_operand:X87MODEF12 3 \"const_double_operand\" \"F\"))\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"=f\")\n+\t(match_operand:MODEF 3 \"const_double_operand\" \"F\"))\n    (set (match_operand:XF 1 \"register_operand\" \"=u\")\n         (unspec:XF [(float_extend:XF\n-\t\t      (match_operand:X87MODEF12 2 \"register_operand\" \"0\"))]\n+\t\t      (match_operand:MODEF 2 \"register_operand\" \"0\"))]\n \t\t   UNSPEC_TAN))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n@@ -16567,8 +16543,8 @@\n })\n \n (define_expand \"tan<mode>2\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"register_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -16600,9 +16576,9 @@\n (define_insn \"fpatan_extend<mode>xf3_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n         (unspec:XF [(float_extend:XF\n-\t\t      (match_operand:X87MODEF12 1 \"register_operand\" \"0\"))\n+\t\t      (match_operand:MODEF 1 \"register_operand\" \"0\"))\n \t\t    (float_extend:XF\n-\t\t      (match_operand:X87MODEF12 2 \"register_operand\" \"u\"))]\n+\t\t      (match_operand:MODEF 2 \"register_operand\" \"u\"))]\n \t           UNSPEC_FPATAN))\n    (clobber (match_scratch:XF 3 \"=2\"))]\n   \"TARGET_USE_FANCY_MATH_387\n@@ -16624,9 +16600,9 @@\n   \"\")\n \n (define_expand \"atan2<mode>3\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 2 \"register_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 2 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -16653,8 +16629,8 @@\n })\n \n (define_expand \"atan<mode>2\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"register_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -16692,8 +16668,8 @@\n })\n \n (define_expand \"asin<mode>2\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"general_operand\" \"\"))]\n  \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -16730,8 +16706,8 @@\n })\n \n (define_expand \"acos<mode>2\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"general_operand\" \"\"))]\n  \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -16761,7 +16737,7 @@\n (define_insn \"fyl2x_extend<mode>xf3_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n         (unspec:XF [(float_extend:XF\n-\t\t      (match_operand:X87MODEF12 1 \"register_operand\" \"0\"))\n+\t\t      (match_operand:MODEF 1 \"register_operand\" \"0\"))\n \t\t    (match_operand:XF 2 \"register_operand\" \"u\")]\n \t           UNSPEC_FYL2X))\n    (clobber (match_scratch:XF 3 \"=2\"))]\n@@ -16786,8 +16762,8 @@\n })\n \n (define_expand \"log<mode>2\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"register_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -16816,8 +16792,8 @@\n })\n \n (define_expand \"log10<mode>2\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"register_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -16846,8 +16822,8 @@\n })\n \n (define_expand \"log2<mode>2\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"register_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -16878,7 +16854,7 @@\n (define_insn \"fyl2xp1_extend<mode>xf3_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n         (unspec:XF [(float_extend:XF\n-\t\t      (match_operand:X87MODEF12 1 \"register_operand\" \"0\"))\n+\t\t      (match_operand:MODEF 1 \"register_operand\" \"0\"))\n \t\t    (match_operand:XF 2 \"register_operand\" \"u\")]\n \t           UNSPEC_FYL2XP1))\n    (clobber (match_scratch:XF 3 \"=2\"))]\n@@ -16901,8 +16877,8 @@\n })\n \n (define_expand \"log1p<mode>2\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"register_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -16932,7 +16908,7 @@\n (define_insn \"fxtract_extend<mode>xf3_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(unspec:XF [(float_extend:XF\n-\t\t      (match_operand:X87MODEF12 2 \"register_operand\" \"0\"))]\n+\t\t      (match_operand:MODEF 2 \"register_operand\" \"0\"))]\n \t\t   UNSPEC_XTRACT_FRACT))\n    (set (match_operand:XF 1 \"register_operand\" \"=u\")\n         (unspec:XF [(float_extend:XF (match_dup 2))] UNSPEC_XTRACT_EXP))]\n@@ -16957,8 +16933,8 @@\n })\n \n (define_expand \"logb<mode>2\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"register_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -16988,7 +16964,7 @@\n \n (define_expand \"ilogb<mode>2\"\n   [(use (match_operand:SI 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"register_operand\" \"\"))]\n+   (use (match_operand:MODEF 1 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -17064,8 +17040,8 @@\n })\n \n (define_expand \"exp<mode>2\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"general_operand\" \"\"))]\n  \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -17094,8 +17070,8 @@\n })\n \n (define_expand \"exp10<mode>2\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"general_operand\" \"\"))]\n  \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -17124,8 +17100,8 @@\n })\n \n (define_expand \"exp2<mode>2\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"general_operand\" \"\"))]\n  \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -17178,8 +17154,8 @@\n })\n \n (define_expand \"expm1<mode>2\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"general_operand\" \"\"))]\n  \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -17212,8 +17188,8 @@\n })\n \n (define_expand \"ldexp<mode>3\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"general_operand\" \"\"))\n    (use (match_operand:SI 2 \"register_operand\" \"\"))]\n  \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n@@ -17244,9 +17220,9 @@\n })\n \n (define_expand \"scalb<mode>3\"\n-  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))\n-   (use (match_operand:X87MODEF12 2 \"register_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"general_operand\" \"\"))\n+   (use (match_operand:MODEF 2 \"register_operand\" \"\"))]\n  \"TARGET_USE_FANCY_MATH_387\n    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n        || TARGET_MIX_SSE_I387)\n@@ -17265,10 +17241,10 @@\n \f\n \n (define_insn \"sse4_1_round<mode>2\"\n-  [(set (match_operand:SSEMODEF 0 \"register_operand\" \"=x\")\n-\t(unspec:SSEMODEF [(match_operand:SSEMODEF 1 \"register_operand\" \"x\")\n-\t\t\t  (match_operand:SI 2 \"const_0_to_15_operand\" \"n\")]\n-\t\t         UNSPEC_ROUND))]\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"=x\")\n+\t(unspec:MODEF [(match_operand:MODEF 1 \"register_operand\" \"x\")\n+\t\t       (match_operand:SI 2 \"const_0_to_15_operand\" \"n\")]\n+\t\t      UNSPEC_ROUND))]\n   \"TARGET_SSE4_1\"\n   \"rounds<ssemodefsuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"ssecvt\")\n@@ -17286,8 +17262,8 @@\n    (set_attr \"mode\" \"XF\")])\n \n (define_expand \"rint<mode>2\"\n-  [(use (match_operand:SSEMODEF 0 \"register_operand\" \"\"))\n-   (use (match_operand:SSEMODEF 1 \"register_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"register_operand\" \"\"))]\n   \"(TARGET_USE_FANCY_MATH_387\n     && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n \t|| TARGET_MIX_SSE_I387)\n@@ -17320,8 +17296,8 @@\n })\n \n (define_expand \"round<mode>2\"\n-  [(match_operand:SSEMODEF 0 \"register_operand\" \"\")\n-   (match_operand:SSEMODEF 1 \"nonimmediate_operand\" \"\")]\n+  [(match_operand:MODEF 0 \"register_operand\" \"\")\n+   (match_operand:MODEF 1 \"nonimmediate_operand\" \"\")]\n   \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n    && !flag_trapping_math && !flag_rounding_math\n    && !optimize_size\"\n@@ -17334,8 +17310,8 @@\n })\n \n (define_insn_and_split \"*fistdi2_1\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n+\t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"\")]\n \t\t   UNSPEC_FIST))]\n   \"TARGET_USE_FANCY_MATH_387\n    && !(reload_completed || reload_in_progress)\"\n@@ -17401,8 +17377,8 @@\n   \"\")\n \n (define_insn_and_split \"*fist<mode>2_1\"\n-  [(set (match_operand:X87MODEI12 0 \"register_operand\" \"=r\")\n-\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"f\")]\n+  [(set (match_operand:X87MODEI12 0 \"register_operand\" \"\")\n+\t(unspec:X87MODEI12 [(match_operand:XF 1 \"register_operand\" \"\")]\n \t\t\t   UNSPEC_FIST))]\n   \"TARGET_USE_FANCY_MATH_387\n    && !(reload_completed || reload_in_progress)\"\n@@ -17463,18 +17439,18 @@\n   \"TARGET_USE_FANCY_MATH_387\"\n   \"\")\n \n-(define_expand \"lrint<SSEMODEF:mode><SSEMODEI24:mode>2\"\n+(define_expand \"lrint<MODEF:mode><SSEMODEI24:mode>2\"\n   [(set (match_operand:SSEMODEI24 0 \"nonimmediate_operand\" \"\")\n-     (unspec:SSEMODEI24 [(match_operand:SSEMODEF 1 \"register_operand\" \"\")]\n+     (unspec:SSEMODEI24 [(match_operand:MODEF 1 \"register_operand\" \"\")]\n \t\t\tUNSPEC_FIX_NOTRUNC))]\n-  \"SSE_FLOAT_MODE_P (<SSEMODEF:MODE>mode) && TARGET_SSE_MATH\n+  \"SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\n    && ((<SSEMODEI24:MODE>mode != DImode) || TARGET_64BIT)\"\n   \"\")\n \n-(define_expand \"lround<SSEMODEF:mode><SSEMODEI24:mode>2\"\n+(define_expand \"lround<MODEF:mode><SSEMODEI24:mode>2\"\n   [(match_operand:SSEMODEI24 0 \"nonimmediate_operand\" \"\")\n-   (match_operand:SSEMODEF 1 \"register_operand\" \"\")]\n-  \"SSE_FLOAT_MODE_P (<SSEMODEF:MODE>mode) && TARGET_SSE_MATH\n+   (match_operand:MODEF 1 \"register_operand\" \"\")]\n+  \"SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\n    && ((<SSEMODEI24:MODE>mode != DImode) || TARGET_64BIT)\n    && !flag_trapping_math && !flag_rounding_math\n    && !optimize_size\"\n@@ -17485,8 +17461,8 @@\n \n ;; Rounding mode control word calculation could clobber FLAGS_REG.\n (define_insn_and_split \"frndintxf2_floor\"\n-  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n-\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")]\n+  [(set (match_operand:XF 0 \"register_operand\" \"\")\n+\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"\")]\n \t UNSPEC_FRNDINT_FLOOR))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_USE_FANCY_MATH_387\n@@ -17533,8 +17509,8 @@\n })\n \n (define_expand \"floor<mode>2\"\n-  [(use (match_operand:SSEMODEF 0 \"register_operand\" \"\"))\n-   (use (match_operand:SSEMODEF 1 \"register_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"register_operand\" \"\"))]\n   \"(TARGET_USE_FANCY_MATH_387\n     && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n \t|| TARGET_MIX_SSE_I387)\n@@ -17569,8 +17545,8 @@\n })\n \n (define_insn_and_split \"*fist<mode>2_floor_1\"\n-  [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(unspec:X87MODEI [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n+  [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"\")\n+\t(unspec:X87MODEI [(match_operand:XF 1 \"register_operand\" \"\")]\n \t UNSPEC_FIST_FLOOR))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_USE_FANCY_MATH_387\n@@ -17728,7 +17704,7 @@\n \n (define_expand \"lfloor<mode>di2\"\n   [(match_operand:DI 0 \"nonimmediate_operand\" \"\")\n-   (match_operand:SSEMODEF 1 \"register_operand\" \"\")]\n+   (match_operand:MODEF 1 \"register_operand\" \"\")]\n   \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH && TARGET_64BIT\n    && !flag_trapping_math\n    && !optimize_size\"\n@@ -17739,7 +17715,7 @@\n \n (define_expand \"lfloor<mode>si2\"\n   [(match_operand:SI 0 \"nonimmediate_operand\" \"\")\n-   (match_operand:SSEMODEF 1 \"register_operand\" \"\")]\n+   (match_operand:MODEF 1 \"register_operand\" \"\")]\n   \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n    && !flag_trapping_math\n    && (!optimize_size || !TARGET_64BIT)\"\n@@ -17750,8 +17726,8 @@\n \n ;; Rounding mode control word calculation could clobber FLAGS_REG.\n (define_insn_and_split \"frndintxf2_ceil\"\n-  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n-\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")]\n+  [(set (match_operand:XF 0 \"register_operand\" \"\")\n+\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"\")]\n \t UNSPEC_FRNDINT_CEIL))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_USE_FANCY_MATH_387\n@@ -17798,8 +17774,8 @@\n })\n \n (define_expand \"ceil<mode>2\"\n-  [(use (match_operand:SSEMODEF 0 \"register_operand\" \"\"))\n-   (use (match_operand:SSEMODEF 1 \"register_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"register_operand\" \"\"))]\n   \"(TARGET_USE_FANCY_MATH_387\n     && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n \t|| TARGET_MIX_SSE_I387)\n@@ -17834,8 +17810,8 @@\n })\n \n (define_insn_and_split \"*fist<mode>2_ceil_1\"\n-  [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(unspec:X87MODEI [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n+  [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"\")\n+\t(unspec:X87MODEI [(match_operand:XF 1 \"register_operand\" \"\")]\n \t UNSPEC_FIST_CEIL))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_USE_FANCY_MATH_387\n@@ -17993,7 +17969,7 @@\n \n (define_expand \"lceil<mode>di2\"\n   [(match_operand:DI 0 \"nonimmediate_operand\" \"\")\n-   (match_operand:SSEMODEF 1 \"register_operand\" \"\")]\n+   (match_operand:MODEF 1 \"register_operand\" \"\")]\n   \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH && TARGET_64BIT\n    && !flag_trapping_math\"\n {\n@@ -18003,7 +17979,7 @@\n \n (define_expand \"lceil<mode>si2\"\n   [(match_operand:SI 0 \"nonimmediate_operand\" \"\")\n-   (match_operand:SSEMODEF 1 \"register_operand\" \"\")]\n+   (match_operand:MODEF 1 \"register_operand\" \"\")]\n   \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n    && !flag_trapping_math\"\n {\n@@ -18013,8 +17989,8 @@\n \n ;; Rounding mode control word calculation could clobber FLAGS_REG.\n (define_insn_and_split \"frndintxf2_trunc\"\n-  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n-\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")]\n+  [(set (match_operand:XF 0 \"register_operand\" \"\")\n+\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"\")]\n \t UNSPEC_FRNDINT_TRUNC))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_USE_FANCY_MATH_387\n@@ -18061,8 +18037,8 @@\n })\n \n (define_expand \"btrunc<mode>2\"\n-  [(use (match_operand:SSEMODEF 0 \"register_operand\" \"\"))\n-   (use (match_operand:SSEMODEF 1 \"register_operand\" \"\"))]\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"register_operand\" \"\"))]\n   \"(TARGET_USE_FANCY_MATH_387\n     && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n \t|| TARGET_MIX_SSE_I387)\n@@ -18098,8 +18074,8 @@\n \n ;; Rounding mode control word calculation could clobber FLAGS_REG.\n (define_insn_and_split \"frndintxf2_mask_pm\"\n-  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n-\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")]\n+  [(set (match_operand:XF 0 \"register_operand\" \"\")\n+\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"\")]\n \t UNSPEC_FRNDINT_MASK_PM))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_USE_FANCY_MATH_387\n@@ -18146,37 +18122,21 @@\n   DONE;\n })\n \n-(define_expand \"nearbyintdf2\"\n-  [(use (match_operand:DF 0 \"register_operand\" \"\"))\n-   (use (match_operand:DF 1 \"register_operand\" \"\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations\"\n-{\n-  rtx op0 = gen_reg_rtx (XFmode);\n-  rtx op1 = gen_reg_rtx (XFmode);\n-\n-  emit_insn (gen_extenddfxf2 (op1, operands[1]));\n-  emit_insn (gen_frndintxf2_mask_pm (op0, op1));\n-\n-  emit_insn (gen_truncxfdf2_i387_noop (operands[0], op0));\n-  DONE;\n-})\n-\n-(define_expand \"nearbyintsf2\"\n-  [(use (match_operand:SF 0 \"register_operand\" \"\"))\n-   (use (match_operand:SF 1 \"register_operand\" \"\"))]\n+(define_expand \"nearbyint<mode>2\"\n+  [(use (match_operand:MODEF 0 \"register_operand\" \"\"))\n+   (use (match_operand:MODEF 1 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n-   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n {\n   rtx op0 = gen_reg_rtx (XFmode);\n   rtx op1 = gen_reg_rtx (XFmode);\n \n-  emit_insn (gen_extendsfxf2 (op1, operands[1]));\n+  emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n   emit_insn (gen_frndintxf2_mask_pm (op0, op1));\n \n-  emit_insn (gen_truncxfsf2_i387_noop (operands[0], op0));\n+  emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n   DONE;\n })\n "}, {"sha": "4123bc33b224b2e83781b4f9610703a63723ca30", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00188daa1faa069e07c3a2d71d4298cce68bf4d9/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00188daa1faa069e07c3a2d71d4298cce68bf4d9/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=00188daa1faa069e07c3a2d71d4298cce68bf4d9", "patch": "@@ -1354,8 +1354,8 @@\n \n (define_expand \"mmx_maskmovq\"\n   [(set (match_operand:V8QI 0 \"memory_operand\" \"\")\n-\t(unspec:V8QI [(match_operand:V8QI 1 \"register_operand\" \"y\")\n-\t\t      (match_operand:V8QI 2 \"register_operand\" \"y\")\n+\t(unspec:V8QI [(match_operand:V8QI 1 \"register_operand\" \"\")\n+\t\t      (match_operand:V8QI 2 \"register_operand\" \"\")\n \t\t      (match_dup 0)]\n \t\t     UNSPEC_MASKMOV))]\n   \"TARGET_SSE || TARGET_3DNOW_A\""}, {"sha": "cb63ab9b8c8a25894cbdeb4aa6862fe768987c53", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00188daa1faa069e07c3a2d71d4298cce68bf4d9/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00188daa1faa069e07c3a2d71d4298cce68bf4d9/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=00188daa1faa069e07c3a2d71d4298cce68bf4d9", "patch": "@@ -315,29 +315,29 @@\n ; define patterns for other modes that would expand to several insns.\n \n (define_expand \"storentv4sf\"\n-  [(set (match_operand:V4SF 0 \"memory_operand\" \"=m\")\n-\t(unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"x\")]\n+  [(set (match_operand:V4SF 0 \"memory_operand\" \"\")\n+\t(unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"\")]\n \t\t     UNSPEC_MOVNT))]\n   \"TARGET_SSE\"\n   \"\")\n \n (define_expand \"storentv2df\"\n-  [(set (match_operand:V2DF 0 \"memory_operand\" \"=m\")\n-\t(unspec:V2DF [(match_operand:V2DF 1 \"register_operand\" \"x\")]\n+  [(set (match_operand:V2DF 0 \"memory_operand\" \"\")\n+\t(unspec:V2DF [(match_operand:V2DF 1 \"register_operand\" \"\")]\n \t\t     UNSPEC_MOVNT))]\n   \"TARGET_SSE2\"\n   \"\")\n \n (define_expand \"storentv2di\"\n-  [(set (match_operand:V2DI 0 \"memory_operand\" \"=m\")\n-\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"x\")]\n+  [(set (match_operand:V2DI 0 \"memory_operand\" \"\")\n+\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"\")]\n \t\t     UNSPEC_MOVNT))]\n   \"TARGET_SSE2\"\n   \"\")\n \n (define_expand \"storentsi\"\n-  [(set (match_operand:SI 0 \"memory_operand\" \"=m\")\n-\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")]\n+  [(set (match_operand:SI 0 \"memory_operand\" \"\")\n+\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"\")]\n \t\t   UNSPEC_MOVNT))]\n   \"TARGET_SSE2\"\n   \"\")\n@@ -2282,7 +2282,7 @@\n   [(set (match_operand:V4SF 0 \"register_operand\" \"\")\n \t(vec_concat:V4SF\n \t  (float_truncate:V2SF\n-\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \"\"))\n \t  (match_dup 2)))]\n   \"TARGET_SSE2\"\n   \"operands[2] = CONST0_RTX (V2SFmode);\")\n@@ -4075,11 +4075,11 @@\n })\n \n (define_expand \"vec_interleave_highv16qi\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"\")\n         (vec_select:V16QI\n           (vec_concat:V32QI\n-            (match_operand:V16QI 1 \"register_operand\" \"0\")\n-            (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm\"))\n+            (match_operand:V16QI 1 \"register_operand\" \"\")\n+            (match_operand:V16QI 2 \"nonimmediate_operand\" \"\"))\n           (parallel [(const_int 8)  (const_int 24)\n                      (const_int 9)  (const_int 25)\n                      (const_int 10) (const_int 26)\n@@ -4095,11 +4095,11 @@\n })\n \n (define_expand \"vec_interleave_lowv16qi\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"\")\n         (vec_select:V16QI\n           (vec_concat:V32QI\n-            (match_operand:V16QI 1 \"register_operand\" \"0\")\n-            (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm\"))\n+            (match_operand:V16QI 1 \"register_operand\" \"\")\n+            (match_operand:V16QI 2 \"nonimmediate_operand\" \"\"))\n           (parallel [(const_int 0) (const_int 16)\n                      (const_int 1) (const_int 17)\n                      (const_int 2) (const_int 18)\n@@ -4115,11 +4115,11 @@\n })\n \n (define_expand \"vec_interleave_highv8hi\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=\")\n         (vec_select:V8HI\n           (vec_concat:V16HI\n-            (match_operand:V8HI 1 \"register_operand\" \"0\")\n-            (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\"))\n+            (match_operand:V8HI 1 \"register_operand\" \"\")\n+            (match_operand:V8HI 2 \"nonimmediate_operand\" \"\"))\n           (parallel [(const_int 4) (const_int 12)\n                      (const_int 5) (const_int 13)\n                      (const_int 6) (const_int 14)\n@@ -4131,11 +4131,11 @@\n })\n \n (define_expand \"vec_interleave_lowv8hi\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"\")\n         (vec_select:V8HI\n           (vec_concat:V16HI\n-            (match_operand:V8HI 1 \"register_operand\" \"0\")\n-            (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\"))\n+            (match_operand:V8HI 1 \"register_operand\" \"\")\n+            (match_operand:V8HI 2 \"nonimmediate_operand\" \"\"))\n           (parallel [(const_int 0) (const_int 8)\n                      (const_int 1) (const_int 9)\n                      (const_int 2) (const_int 10)\n@@ -4147,11 +4147,11 @@\n })\n \n (define_expand \"vec_interleave_highv4si\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"\")\n         (vec_select:V4SI\n           (vec_concat:V8SI\n-            (match_operand:V4SI 1 \"register_operand\" \"0\")\n-            (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\"))\n+            (match_operand:V4SI 1 \"register_operand\" \"\")\n+            (match_operand:V4SI 2 \"nonimmediate_operand\" \"\"))\n           (parallel [(const_int 2) (const_int 6)\n                      (const_int 3) (const_int 7)])))]\n   \"TARGET_SSE2\"\n@@ -4161,11 +4161,11 @@\n })\n \n (define_expand \"vec_interleave_lowv4si\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"\")\n         (vec_select:V4SI\n           (vec_concat:V8SI\n-            (match_operand:V4SI 1 \"register_operand\" \"0\")\n-            (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\"))\n+            (match_operand:V4SI 1 \"register_operand\" \"\")\n+            (match_operand:V4SI 2 \"nonimmediate_operand\" \"\"))\n           (parallel [(const_int 0) (const_int 4)\n                      (const_int 1) (const_int 5)])))]\n   \"TARGET_SSE2\"\n@@ -4175,11 +4175,11 @@\n })\n \n (define_expand \"vec_interleave_highv2di\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"\")\n         (vec_select:V2DI\n           (vec_concat:V4DI\n-            (match_operand:V2DI 1 \"register_operand\" \"0\")\n-            (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\"))\n+            (match_operand:V2DI 1 \"register_operand\" \"\")\n+            (match_operand:V2DI 2 \"nonimmediate_operand\" \"\"))\n           (parallel [(const_int 1)\n                      (const_int 3)])))]\n   \"TARGET_SSE2\"\n@@ -4189,11 +4189,11 @@\n })\n \n (define_expand \"vec_interleave_lowv2di\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"\")\n         (vec_select:V2DI\n           (vec_concat:V4DI\n-            (match_operand:V2DI 1 \"register_operand\" \"0\")\n-            (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\"))\n+            (match_operand:V2DI 1 \"register_operand\" \"\")\n+            (match_operand:V2DI 2 \"nonimmediate_operand\" \"\"))\n           (parallel [(const_int 0)\n                      (const_int 2)])))]\n   \"TARGET_SSE2\"\n@@ -5234,8 +5234,8 @@\n \n (define_expand \"sse2_maskmovdqu\"\n   [(set (match_operand:V16QI 0 \"memory_operand\" \"\")\n-\t(unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"x\")\n-\t\t       (match_operand:V16QI 2 \"register_operand\" \"x\")\n+\t(unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"\")\n+\t\t       (match_operand:V16QI 2 \"register_operand\" \"\")\n \t\t       (match_dup 0)]\n \t\t      UNSPEC_MASKMOV))]\n   \"TARGET_SSE2\""}]}