{"sha": "bcfaead06e1abd3796619d853aee8ae762976e15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNmYWVhZDA2ZTFhYmQzNzk2NjE5ZDg1M2FlZThhZTc2Mjk3NmUxNQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-03-28T09:49:44Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-03-28T09:49:44Z"}, "message": "2003-03-28  Michael Koch  <konqueror@gmx.de>\n\n\t* java/io/FileDescriptor.java\n\t(finalize): Throws Throwable, not IOException.\n\t* java/io/ObjectOutputStream.java\n\t(PutField.put): Doesnt throws anything.\n\nFrom-SVN: r64970", "tree": {"sha": "18f1993101d369dd242e1c0d353b47e6f6c94d1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18f1993101d369dd242e1c0d353b47e6f6c94d1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcfaead06e1abd3796619d853aee8ae762976e15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcfaead06e1abd3796619d853aee8ae762976e15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcfaead06e1abd3796619d853aee8ae762976e15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcfaead06e1abd3796619d853aee8ae762976e15/comments", "author": null, "committer": null, "parents": [{"sha": "0c85dbfd1251f34624e17cae810de6ddd4257cc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c85dbfd1251f34624e17cae810de6ddd4257cc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c85dbfd1251f34624e17cae810de6ddd4257cc4"}], "stats": {"total": 49, "additions": 21, "deletions": 28}, "files": [{"sha": "23c1423b09f9250108729db08d99aa360430dbbe", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcfaead06e1abd3796619d853aee8ae762976e15/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcfaead06e1abd3796619d853aee8ae762976e15/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=bcfaead06e1abd3796619d853aee8ae762976e15", "patch": "@@ -1,3 +1,10 @@\n+2003-03-28  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/io/FileDescriptor.java\n+\t(finalize): Throws Throwable, not IOException.\n+\t* java/io/ObjectOutputStream.java\n+\t(PutField.put): Doesnt throws anything.\n+\n 2003\ufffd03-28  Michael Koch  <konqueror@gmx.de>\n \n \t* java/io/FileOutputStream.java:"}, {"sha": "296c37f8b8ae210810fff5398b7bce07aea186d3", "filename": "libjava/java/io/FileDescriptor.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcfaead06e1abd3796619d853aee8ae762976e15/libjava%2Fjava%2Fio%2FFileDescriptor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcfaead06e1abd3796619d853aee8ae762976e15/libjava%2Fjava%2Fio%2FFileDescriptor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFileDescriptor.java?ref=bcfaead06e1abd3796619d853aee8ae762976e15", "patch": "@@ -79,7 +79,7 @@ native void write (byte[] b, int offset, int len)\n \n \n   // When collected, close.\n-  protected void finalize () throws IOException\n+  protected void finalize () throws Throwable\n   {\n     if (valid ())\n       close ();"}, {"sha": "cb461231b33183cb452ef68cb2d7c5fe7ad7ed08", "filename": "libjava/java/io/ObjectOutputStream.java", "status": "modified", "additions": 13, "deletions": 27, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcfaead06e1abd3796619d853aee8ae762976e15/libjava%2Fjava%2Fio%2FObjectOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcfaead06e1abd3796619d853aee8ae762976e15/libjava%2Fjava%2Fio%2FObjectOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FObjectOutputStream.java?ref=bcfaead06e1abd3796619d853aee8ae762976e15", "patch": "@@ -841,24 +841,19 @@ public void writeUTF (String data) throws IOException\n    */\n   public static abstract class PutField\n   {\n-    public abstract void put (String name, boolean value)\n-      throws IOException, IllegalArgumentException;\n-    public abstract void put (String name, byte value)\n-      throws IOException, IllegalArgumentException;\n-    public abstract void put (String name, char value)\n-      throws IOException, IllegalArgumentException;\n-    public abstract void put (String name, double value)\n-      throws IOException, IllegalArgumentException;\n-    public abstract void put (String name, float value)\n-      throws IOException, IllegalArgumentException;\n-    public abstract void put (String name, int value)\n-      throws IOException, IllegalArgumentException;\n-    public abstract void put (String name, long value)\n-      throws IOException, IllegalArgumentException;\n-    public abstract void put (String name, short value)\n-      throws IOException, IllegalArgumentException;\n-    public abstract void put (String name, Object value)\n-      throws IOException, IllegalArgumentException;\n+    public abstract void put (String name, boolean value);\n+    public abstract void put (String name, byte value);\n+    public abstract void put (String name, char value);\n+    public abstract void put (String name, double value);\n+    public abstract void put (String name, float value);\n+    public abstract void put (String name, int value);\n+    public abstract void put (String name, long value);\n+    public abstract void put (String name, short value);\n+    public abstract void put (String name, Object value);\n+\n+    /**\n+     * @deprecated\n+     */\n     public abstract void write (ObjectOutput out) throws IOException;\n   }\n \n@@ -874,7 +869,6 @@ public PutField putFields () throws IOException\n \t= new Object[currentObjectStreamClass.objectFieldCount];\n \n \tpublic void put (String name, boolean value)\n-\t  throws IOException, IllegalArgumentException\n \t{\n \t  ObjectStreamField field\n \t    = currentObjectStreamClass.getField (name);\n@@ -883,7 +877,6 @@ public void put (String name, boolean value)\n \t}\n \n \tpublic void put (String name, byte value)\n-\t  throws IOException, IllegalArgumentException\n \t{\n \t  ObjectStreamField field\n \t    = currentObjectStreamClass.getField (name);\n@@ -892,7 +885,6 @@ public void put (String name, byte value)\n \t}\n \n \tpublic void put (String name, char value)\n-\t  throws IOException, IllegalArgumentException\n \t{\n \t  ObjectStreamField field\n \t    = currentObjectStreamClass.getField (name);\n@@ -903,7 +895,6 @@ public void put (String name, char value)\n \t}\n \n \tpublic void put (String name, double value)\n-\t  throws IOException, IllegalArgumentException\n \t{\n \t  ObjectStreamField field\n \t    = currentObjectStreamClass.getField (name);\n@@ -921,7 +912,6 @@ public void put (String name, double value)\n \t}\n \n \tpublic void put (String name, float value)\n-\t  throws IOException, IllegalArgumentException\n \t{\n \t  ObjectStreamField field\n \t    = currentObjectStreamClass.getField (name);\n@@ -935,7 +925,6 @@ public void put (String name, float value)\n \t}\n \n \tpublic void put (String name, int value)\n-\t  throws IOException, IllegalArgumentException\n \t{\n \t  ObjectStreamField field\n \t    = currentObjectStreamClass.getField (name);\n@@ -948,7 +937,6 @@ public void put (String name, int value)\n \t}\n \n \tpublic void put (String name, long value)\n-\t  throws IOException, IllegalArgumentException\n \t{\n \t  ObjectStreamField field\n \t    = currentObjectStreamClass.getField (name);\n@@ -965,7 +953,6 @@ public void put (String name, long value)\n \t}\n \n \tpublic void put (String name, short value)\n-\t  throws IOException, IllegalArgumentException\n \t{\n \t  ObjectStreamField field\n \t    = currentObjectStreamClass.getField (name);\n@@ -976,7 +963,6 @@ public void put (String name, short value)\n \t}\n \n \tpublic void put (String name, Object value)\n-\t  throws IOException, IllegalArgumentException\n \t{\n \t  ObjectStreamField field\n \t    = currentObjectStreamClass.getField (name);"}]}