{"sha": "99827b5ca0ce4582940da66a23f737b70d0d8c41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk4MjdiNWNhMGNlNDU4Mjk0MGRhNjZhMjNmNzM3YjcwZDBkOGM0MQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2017-04-10T20:28:23Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2017-04-10T20:28:23Z"}, "message": "re PR fortran/80046 ([F03] Explicit interface required: pointer argument)\n\n2017-04-10  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/80046\n\t* expr.c (gfc_check_pointer_assign): Check if procedure pointer\n\tcomponents in a pointer assignment need an explicit interface.\n\n2017-04-10  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/80046\n\t* gfortran.dg/proc_ptr_comp_48.f90: New test case.\n\nFrom-SVN: r246823", "tree": {"sha": "270682d2c8dbde4b0726232fdb17efeb4db4899c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/270682d2c8dbde4b0726232fdb17efeb4db4899c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99827b5ca0ce4582940da66a23f737b70d0d8c41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99827b5ca0ce4582940da66a23f737b70d0d8c41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99827b5ca0ce4582940da66a23f737b70d0d8c41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99827b5ca0ce4582940da66a23f737b70d0d8c41/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7db31bc20ca5d2ff60f1dd65387f600a8a3130cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7db31bc20ca5d2ff60f1dd65387f600a8a3130cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7db31bc20ca5d2ff60f1dd65387f600a8a3130cf"}], "stats": {"total": 100, "additions": 87, "deletions": 13}, "files": [{"sha": "7825295745b602545206cd8c3154cef68255163a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99827b5ca0ce4582940da66a23f737b70d0d8c41/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99827b5ca0ce4582940da66a23f737b70d0d8c41/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=99827b5ca0ce4582940da66a23f737b70d0d8c41", "patch": "@@ -1,3 +1,9 @@\n+2017-04-10  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/80046\n+\t* expr.c (gfc_check_pointer_assign): Check if procedure pointer\n+\tcomponents in a pointer assignment need an explicit interface.\n+\n 2017-03-18  Nicolas Koenig  <koenigni@student.ethz.ch> \n \n \tPR fortran/69498"}, {"sha": "c8be9513af59c6bd3a0bd40280732230f9273829", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 29, "deletions": 13, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99827b5ca0ce4582940da66a23f737b70d0d8c41/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99827b5ca0ce4582940da66a23f737b70d0d8c41/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=99827b5ca0ce4582940da66a23f737b70d0d8c41", "patch": "@@ -3595,25 +3595,41 @@ gfc_check_pointer_assign (gfc_expr *lvalue, gfc_expr *rvalue)\n \t  return false;\n \t}\n \n-      if (s1 == s2 || !s1 || !s2)\n-\treturn true;\n-\n       /* F08:7.2.2.4 (4)  */\n-      if (s1->attr.if_source == IFSRC_UNKNOWN\n-\t  && gfc_explicit_interface_required (s2, err, sizeof(err)))\n+      if (s2 && gfc_explicit_interface_required (s2, err, sizeof(err)))\n \t{\n-\t  gfc_error (\"Explicit interface required for %qs at %L: %s\",\n-\t\t     s1->name, &lvalue->where, err);\n-\t  return false;\n+\t  if (comp1 && !s1)\n+\t    {\n+\t      gfc_error (\"Explicit interface required for component %qs at %L: %s\",\n+\t\t\t comp1->name, &lvalue->where, err);\n+\t      return false;\n+\t    }\n+\t  else if (s1->attr.if_source == IFSRC_UNKNOWN)\n+\t    {\n+\t      gfc_error (\"Explicit interface required for %qs at %L: %s\",\n+\t\t\t s1->name, &lvalue->where, err);\n+\t      return false;\n+\t    }\n \t}\n-      if (s2->attr.if_source == IFSRC_UNKNOWN\n-\t  && gfc_explicit_interface_required (s1, err, sizeof(err)))\n+      if (s1 && gfc_explicit_interface_required (s1, err, sizeof(err)))\n \t{\n-\t  gfc_error (\"Explicit interface required for %qs at %L: %s\",\n-\t\t     s2->name, &rvalue->where, err);\n-\t  return false;\n+\t  if (comp2 && !s2)\n+\t    {\n+\t      gfc_error (\"Explicit interface required for component %qs at %L: %s\",\n+\t\t\t comp2->name, &rvalue->where, err);\n+\t      return false;\n+\t    }\n+\t  else if (s2->attr.if_source == IFSRC_UNKNOWN)\n+\t    {\n+\t      gfc_error (\"Explicit interface required for %qs at %L: %s\",\n+\t\t\t s2->name, &rvalue->where, err);\n+\t      return false;\n+\t    }\n \t}\n \n+      if (s1 == s2 || !s1 || !s2)\n+\treturn true;\n+\n       if (!gfc_compare_interfaces (s1, s2, name, 0, 1,\n \t\t\t\t   err, sizeof(err), NULL, NULL))\n \t{"}, {"sha": "51fd41e0abbeae517b26c2cf610d265c71cf798b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99827b5ca0ce4582940da66a23f737b70d0d8c41/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99827b5ca0ce4582940da66a23f737b70d0d8c41/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=99827b5ca0ce4582940da66a23f737b70d0d8c41", "patch": "@@ -1,3 +1,8 @@\n+2017-04-10  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/80046\n+\t* gfortran.dg/proc_ptr_comp_48.f90: New test case.\n+\n 2017-04-10  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* g++.dg/torture/pr79905.C: Add -maltivec option."}, {"sha": "de73b197ad8275044ebcb89fd9985b2253d83a57", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_comp_48.f90", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99827b5ca0ce4582940da66a23f737b70d0d8c41/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_48.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99827b5ca0ce4582940da66a23f737b70d0d8c41/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_48.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_48.f90?ref=99827b5ca0ce4582940da66a23f737b70d0d8c41", "patch": "@@ -0,0 +1,47 @@\n+! { dg-do compile }\n+!\n+! PR 80046: [F03] Explicit interface required: pointer argument\n+!\n+! Contributed by Joachim Herb <joachim.herb@gmx.de>\n+\n+program p\n+  implicit none\n+\n+  type :: Node_t\n+    procedure(NodeCloner), nopass, pointer :: cloneProc => NULL()\n+    procedure(), nopass, pointer :: noIfc => NULL()\n+  end type\n+\n+  interface\n+    subroutine NodeCloner( tgt, src )\n+      import Node_t\n+      type(Node_t), pointer, intent(out) :: tgt\n+      type(Node_t),           intent(in) :: src\n+    end subroutine\n+  end interface\n+\n+  type(Node_t) :: node\n+  procedure(NodeCloner), pointer :: cloneNode\n+  procedure(), pointer :: noIfc\n+\n+  cloneNode => node%noIfc       ! { dg-error \"Explicit interface required\" }\n+  node%noIfc => cloneNode       ! { dg-error \"Explicit interface required\" }\n+\n+  noIfc => node%cloneProc       ! { dg-error \"Explicit interface required\" }\n+  node%cloneProc => noIfc       ! { dg-error \"Explicit interface required\" }\n+\n+  node%cloneProc => node%noIfc  ! { dg-error \"Explicit interface required\" }\n+  node%noIfc => node%cloneProc  ! { dg-error \"Explicit interface required\" }\n+\n+  ! the following cases are legal\n+\n+  node%noIfc => node%noIfc\n+  node%cloneProc => node%cloneProc\n+\n+  cloneNode => node%cloneProc\n+  node%cloneProc => cloneNode\n+\n+  noIfc => node%noIfc\n+  node%noIfc => noIfc\n+\n+end"}]}