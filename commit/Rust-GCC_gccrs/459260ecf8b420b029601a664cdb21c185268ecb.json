{"sha": "459260ecf8b420b029601a664cdb21c185268ecb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU5MjYwZWNmOGI0MjBiMDI5NjAxYTY2NGNkYjIxYzE4NTI2OGVjYg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2013-10-15T20:33:55Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2013-10-15T20:33:55Z"}, "message": "Add --enable-host-shared configuration option\n\n/\n\t* configure.ac: Add --enable-host-shared\n\t* configure: Regenerate.\n\ngcc/\n\t* Makefile.in (PICFLAG): New.\n\t(enable_host_shared): New.\n\t(INTERNAL_CFLAGS): Use PICFLAG.\n\t(LIBIBERTY): Use pic build of libiberty.a if configured with\n\t--enable-host-shared.\n\t* configure.ac: Add --enable-host-shared, setting up new\n\tPICFLAG variable.\n\t* configure: Regenerate.\n\t* doc/install.texi (--enable-shared): Add note contrasting it\n\twith...\n\t(--enable-host-shared): New option.\n\nlibbacktrace/\n\t* configure.ac: Add --enable-host-shared, setting up\n\tpre-existing PIC_FLAG variable within Makefile.am et al.\n\t* configure: Regenerate.\n\nlibcpp/\n\t* Makefile.in (PICFLAG): New.\n\t(ALL_CFLAGS): Add PICFLAG.\n\t(ALL_CXXFLAGS): Likewise.\n\t* configure.ac: Add --enable-host-shared, setting up new\n\tPICFLAG variable.\n\t* configure: Regenerate.\n\nlibdecnumber/\n\t* Makefile.in (PICFLAG): New.\n\t(ALL_CFLAGS): Add PICFLAG.\n\t* configure.ac: Add --enable-host-shared, setting up new\n\tPICFLAG variable.\n\t* configure: Regenerate.\n\nlibiberty/\n\t* configure.ac: If --enable-host-shared, use -fPIC.\n\t* configure: Regenerate.\n\nzlib/\n\t* configure.ac: Add --enable-host-shared, setting up new\n\tPICFLAG variable.\n\t* Makefile.am: Add PICFLAG to libz_a_CFLAGS.\n\t* Makefile.in: Regenerate.\n\t* configure: Regenerate.\n\nFrom-SVN: r203632", "tree": {"sha": "b101be713129409fe69e45a4e5436995f481906a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b101be713129409fe69e45a4e5436995f481906a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/459260ecf8b420b029601a664cdb21c185268ecb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/459260ecf8b420b029601a664cdb21c185268ecb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/459260ecf8b420b029601a664cdb21c185268ecb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/459260ecf8b420b029601a664cdb21c185268ecb/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "37ea0d87a36e36b706fb32491118e0da2a530099", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37ea0d87a36e36b706fb32491118e0da2a530099", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37ea0d87a36e36b706fb32491118e0da2a530099"}], "stats": {"total": 235, "additions": 223, "deletions": 12}, "files": [{"sha": "6e23e3d464d5c35fc23d74bdeaaf83d59f1ef045", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -1,3 +1,8 @@\n+2013-10-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* configure.ac: Add --enable-host-shared\n+\t* configure: Regenerate.\n+\n 2013-01-10  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \tImport from savannah.gnu.org:"}, {"sha": "d62285c9067ae9ef7232a2b7993a606549645d60", "filename": "configure", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -556,6 +556,7 @@ enable_option_checking=no\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n compare_exclusions\n+host_shared\n stage2_werror_flag\n stage1_checking\n stage1_cflags\n@@ -787,6 +788,7 @@ with_build_time_tools\n enable_maintainer_mode\n enable_stage1_checking\n enable_werror\n+enable_host_shared\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1490,6 +1492,7 @@ Optional Features:\n                           choose additional checking for stage1 of the\n                           compiler\n   --enable-werror         enable -Werror in bootstrap stage2 and later\n+  --enable-host-shared    build host code as shared libraries\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -14570,6 +14573,16 @@ case ${enable_werror} in\n esac\n \n \n+# Enable --enable-host-shared.\n+# Check whether --enable-host-shared was given.\n+if test \"${enable_host_shared+set}\" = set; then :\n+  enableval=$enable_host_shared; host_shared=$enableval\n+else\n+  host_shared=no\n+fi\n+\n+\n+\n # Specify what files to not compare during bootstrap.\n \n compare_exclusions=\"gcc/cc*-checksum\\$(objext) | gcc/ada/*tools/*\""}, {"sha": "4c236525014ad3c4815494f8a1311c918494a75b", "filename": "configure.ac", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -3301,6 +3301,13 @@ case ${enable_werror} in\n esac\n AC_SUBST(stage2_werror_flag)\n \n+# Enable --enable-host-shared.\n+AC_ARG_ENABLE(host-shared,\n+[AS_HELP_STRING([--enable-host-shared],\n+\t\t[build host code as shared libraries])],\n+[host_shared=$enableval], [host_shared=no])\n+AC_SUBST(host_shared)\n+\n # Specify what files to not compare during bootstrap.\n \n compare_exclusions=\"gcc/cc*-checksum\\$(objext) | gcc/ada/*tools/*\""}, {"sha": "60e76c15c16faa4e0176e20cd72b7c8eb2a4fd1f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -1,3 +1,17 @@\n+2013-10-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* Makefile.in (PICFLAG): New.\n+\t(enable_host_shared): New.\n+\t(INTERNAL_CFLAGS): Use PICFLAG.\n+\t(LIBIBERTY): Use pic build of libiberty.a if configured with\n+\t--enable-host-shared.\n+\t* configure.ac: Add --enable-host-shared, setting up new\n+\tPICFLAG variable.\n+\t* configure: Regenerate.\n+\t* doc/install.texi (--enable-shared): Add note contrasting it\n+\twith...\n+\t(--enable-host-shared): New option.\n+\n 2013-10-15  Richard Biener  <rguenther@suse.de>\n \n \t* tree-tailcall.c (find_tail_calls): Don't use tail-call recursion"}, {"sha": "ba39ac934ad3d1ba2c54e57b5439838701d28d49", "filename": "gcc/Makefile.in", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -135,6 +135,9 @@ CFLAGS = @CFLAGS@\n CXXFLAGS = @CXXFLAGS@\n LDFLAGS = @LDFLAGS@\n \n+# Should we build position-independent host code?\n+PICFLAG = @PICFLAG@\n+\n # Flags to determine code coverage. When coverage is disabled, this will\n # contain the optimization flags, as you normally want code coverage\n # without optimization.\n@@ -346,6 +349,8 @@ PLUGINLIBS = @pluginlibs@\n \n enable_plugin = @enable_plugin@\n \n+enable_host_shared = @enable_host_shared@\n+\n CPPLIB = ../libcpp/libcpp.a\n CPPINC = -I$(srcdir)/../libcpp/include\n \n@@ -955,7 +960,7 @@ CONTEXT_H = context.h\n # programs built during a bootstrap.\n # autoconf inserts -DCROSS_DIRECTORY_STRUCTURE if we are building a\n # cross compiler which does not use the native headers and libraries.\n-INTERNAL_CFLAGS = -DIN_GCC @CROSS@\n+INTERNAL_CFLAGS = -DIN_GCC $(PICFLAG) @CROSS@\n \n # This is the variable actually used when we compile. If you change this,\n # you probably want to update BUILD_CFLAGS in configure.ac\n@@ -978,8 +983,15 @@ ALL_COMPILERFLAGS = $(ALL_CXXFLAGS)\n ALL_LINKERFLAGS = $(ALL_CXXFLAGS)\n \n # Build and host support libraries.\n+\n+# Use the \"pic\" build of libiberty if --enable-host-shared.\n+ifeq ($(enable_host_shared),yes)\n+LIBIBERTY = ../libiberty/pic/libiberty.a\n+BUILD_LIBIBERTY = $(build_libobjdir)/libiberty/pic/libiberty.a\n+else\n LIBIBERTY = ../libiberty/libiberty.a\n BUILD_LIBIBERTY = $(build_libobjdir)/libiberty/libiberty.a\n+endif\n \n # Dependencies on the intl and portability libraries.\n LIBDEPS= libcommon.a $(CPPLIB) $(LIBIBERTY) $(LIBINTL_DEP) $(LIBICONV_DEP) \\"}, {"sha": "bedf3b14817d9ddf57e62c2a205f9078b07002b1", "filename": "gcc/configure", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -600,6 +600,8 @@ ac_includes_default=\"\\\n \n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n+PICFLAG\n+enable_host_shared\n enable_plugin\n pluginlibs\n CLOOGINC\n@@ -921,6 +923,7 @@ enable_maintainer_mode\n enable_link_mutex\n enable_version_specific_runtime_libs\n enable_plugin\n+enable_host_shared\n enable_libquadmath_support\n with_linker_hash_style\n '\n@@ -1636,6 +1639,7 @@ Optional Features:\n                           specify that runtime libraries should be installed\n                           in a compiler-specific directory\n   --enable-plugin         enable plugin support\n+  --enable-host-shared    build host code as shared libraries\n   --disable-libquadmath-support\n                           disable libquadmath support for Fortran\n \n@@ -17893,7 +17897,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17896 \"configure\"\n+#line 17900 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17999,7 +18003,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18002 \"configure\"\n+#line 18006 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -27700,6 +27704,18 @@ $as_echo \"#define ENABLE_PLUGIN 1\" >>confdefs.h\n fi\n \n \n+# Enable --enable-host-shared\n+# Check whether --enable-host-shared was given.\n+if test \"${enable_host_shared+set}\" = set; then :\n+  enableval=$enable_host_shared; PICFLAG=-fPIC\n+else\n+  PICFLAG=\n+fi\n+\n+\n+\n+\n+\n # Check whether --enable-libquadmath-support was given.\n if test \"${enable_libquadmath_support+set}\" = set; then :\n   enableval=$enable_libquadmath_support; ENABLE_LIBQUADMATH_SUPPORT=$enableval"}, {"sha": "5111109af48dfa9d046b596d5567f640c4b9a3b6", "filename": "gcc/configure.ac", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -5399,6 +5399,15 @@ if test x\"$enable_plugin\" = x\"yes\"; then\n fi\n \n \n+# Enable --enable-host-shared\n+AC_ARG_ENABLE(host-shared,\n+[AS_HELP_STRING([--enable-host-shared],\n+\t\t[build host code as shared libraries])],\n+[PICFLAG=-fPIC], [PICFLAG=])\n+AC_SUBST(enable_host_shared)\n+AC_SUBST(PICFLAG)\n+\n+\n AC_ARG_ENABLE(libquadmath-support,\n [AS_HELP_STRING([--disable-libquadmath-support],\n   [disable libquadmath support for Fortran])],"}, {"sha": "5cb4d3c3076476b0914b07639c02dddd6115b1c4", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -925,6 +925,19 @@ Use @option{--disable-shared} to build only static libraries.  Note that\n @option{--disable-shared} does not accept a list of package names as\n argument, only @option{--enable-shared} does.\n \n+Contrast with @option{--enable-host-shared}, which affects @emph{host}\n+code.\n+\n+@item --enable-host-shared\n+Specify that the @emph{host} code should be built into position-independent\n+machine code (with -fPIC), allowing it to be used within shared libraries,\n+but yielding a slightly slower compiler.\n+\n+Currently this option is only of use to people developing GCC itself.\n+\n+Contrast with @option{--enable-shared}, which affects @emph{target}\n+libraries.\n+\n @item @anchor{with-gnu-as}--with-gnu-as\n Specify that the compiler should assume that the\n assembler it finds is the GNU assembler.  However, this does not modify"}, {"sha": "9c6a8839f5e549391054d975f2fd2db5bb64aff3", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -1,3 +1,9 @@\n+2013-10-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* configure.ac: Add --enable-host-shared, setting up\n+\tpre-existing PIC_FLAG variable within Makefile.am et al.\n+\t* configure: Regenerate.\n+\n 2013-09-20  Alan Modra  <amodra@gmail.com>\n \n \t* configure: Regenerate."}, {"sha": "e6b13c0b70638a9e4c37a0554aba4d8b487b0c9e", "filename": "libbacktrace/configure", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -731,6 +731,7 @@ with_gnu_ld\n enable_libtool_lock\n enable_multilib\n with_system_libunwind\n+enable_host_shared\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1369,6 +1370,7 @@ Optional Features:\n                           optimize for fast installation [default=yes]\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n   --enable-multilib       build many library versions (default)\n+  --enable-host-shared    build host code as shared libraries\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11087,7 +11089,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11090 \"configure\"\n+#line 11092 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11193,7 +11195,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11196 \"configure\"\n+#line 11198 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11696,6 +11698,12 @@ PIC_FLAG=\n if test -n \"${with_target_subdir}\"; then\n   PIC_FLAG=-fPIC\n fi\n+# Similarly, use -fPIC with --enable-host-shared:\n+# Check whether --enable-host-shared was given.\n+if test \"${enable_host_shared+set}\" = set; then :\n+  enableval=$enable_host_shared; PIC_FLAG=-fPIC\n+fi\n+\n \n \n # Test for __sync support."}, {"sha": "48c86203837652e796a01e3bbaab6fc15a38ed81", "filename": "libbacktrace/configure.ac", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/libbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/libbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure.ac?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -165,6 +165,11 @@ PIC_FLAG=\n if test -n \"${with_target_subdir}\"; then\n   PIC_FLAG=-fPIC\n fi\n+# Similarly, use -fPIC with --enable-host-shared:\n+AC_ARG_ENABLE(host-shared,\n+[AS_HELP_STRING([--enable-host-shared],\n+\t\t[build host code as shared libraries])],\n+[PIC_FLAG=-fPIC], [])\n AC_SUBST(PIC_FLAG)\n \n # Test for __sync support."}, {"sha": "b4de4f5eba52786722618d1b2d99e9f5ab471a62", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -1,3 +1,12 @@\n+2013-10-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* Makefile.in (PICFLAG): New.\n+\t(ALL_CFLAGS): Add PICFLAG.\n+\t(ALL_CXXFLAGS): Likewise.\n+\t* configure.ac: Add --enable-host-shared, setting up new\n+\tPICFLAG variable.\n+\t* configure: Regenerate.\n+\n 2013-08-07  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* configure.ac: Set need_64bit_hwint for all arm targets."}, {"sha": "30bf8963cd8cd8ccec3b461e1fb330c14bc95b39", "filename": "libcpp/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/libcpp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/libcpp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FMakefile.in?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -57,6 +57,7 @@ CCDEPMODE = @CCDEPMODE@\n CXXDEPMODE = @CXXDEPMODE@\n DEPDIR = @DEPDIR@\n NOEXCEPTION_FLAGS = @noexception_flags@\n+PICFLAG = @PICFLAG@\n \n datarootdir = @datarootdir@\n datadir = @datadir@\n@@ -72,9 +73,9 @@ depcomp = $(SHELL) $(srcdir)/../depcomp\n INCLUDES = -I$(srcdir) -I. -I$(srcdir)/../include @INCINTL@ \\\n \t-I$(srcdir)/include\n \n-ALL_CFLAGS = $(CFLAGS) $(WARN_CFLAGS) $(INCLUDES) $(CPPFLAGS)\n+ALL_CFLAGS = $(CFLAGS) $(WARN_CFLAGS) $(INCLUDES) $(CPPFLAGS) $(PICFLAG)\n ALL_CXXFLAGS = $(CXXFLAGS) $(WARN_CXXFLAGS) $(NOEXCEPTION_FLAGS) $(INCLUDES) \\\n-\t$(CPPFLAGS)\n+\t$(CPPFLAGS) $(PICFLAG)\n \n # The name of the compiler to use.\n COMPILER = $(CXX)"}, {"sha": "782a7105ac393ba42c514bfec0aa23676d6cdb98", "filename": "libcpp/configure", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -592,6 +592,7 @@ ac_includes_default=\"\\\n #endif\"\n \n ac_subst_vars='LTLIBOBJS\n+PICFLAG\n MAINT\n USED_CATALOGS\n PACKAGE\n@@ -701,6 +702,7 @@ with_libiconv_prefix\n enable_maintainer_mode\n enable_checking\n enable_canonical_system_headers\n+enable_host_shared\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1340,6 +1342,7 @@ Optional Features:\n                           other strings\n   --enable-canonical-system-headers\n                           enable or disable system headers canonicalization\n+  --enable-host-shared    build host code as shared libraries\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -7204,6 +7207,16 @@ fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n esac\n \n+# Enable --enable-host-shared.\n+# Check whether --enable-host-shared was given.\n+if test \"${enable_host_shared+set}\" = set; then :\n+  enableval=$enable_host_shared; PICFLAG=-fPIC\n+else\n+  PICFLAG=\n+fi\n+\n+\n+\n # Output.\n \n ac_config_headers=\"$ac_config_headers config.h:config.in\""}, {"sha": "a70603c95a67b385f2f89c861c5e7f79e6b60a40", "filename": "libcpp/configure.ac", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/libcpp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/libcpp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure.ac?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -220,6 +220,13 @@ case $target in\n \t\t [Define to 1 if you can assemble SSE4 insns.])])\n esac\n \n+# Enable --enable-host-shared.\n+AC_ARG_ENABLE(host-shared,\n+[AS_HELP_STRING([--enable-host-shared],\n+\t\t[build host code as shared libraries])],\n+[PICFLAG=-fPIC], [PICFLAG=])\n+AC_SUBST(PICFLAG)\n+\n # Output.\n \n AC_CONFIG_HEADERS(config.h:config.in, [echo timestamp > stamp-h1])"}, {"sha": "52b517854a2ea0eb224886a304bf64d5daded311", "filename": "libdecnumber/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/libdecnumber%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/libdecnumber%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FChangeLog?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -1,3 +1,11 @@\n+2013-10-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* Makefile.in (PICFLAG): New.\n+\t(ALL_CFLAGS): Add PICFLAG.\n+\t* configure.ac: Add --enable-host-shared, setting up new\n+\tPICFLAG variable.\n+\t* configure: Regenerate.\n+\n 2013-07-09  Simon Baldwin  <simonb@google.com>\n \n \t* configure.ac: Add AC_CONFIG_AUX_DIR."}, {"sha": "b6f3842b0d28c04df64ee49c1f0d9fda7fcfc763", "filename": "libdecnumber/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/libdecnumber%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/libdecnumber%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FMakefile.in?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -40,6 +40,7 @@ INSTALL_PROGRAM = @INSTALL_PROGRAM@\n LDFLAGS = @LDFLAGS@\n LIBICONV = @LIBICONV@\n PACKAGE = @PACKAGE@\n+PICFLAG = @PICFLAG@\n RANLIB = @RANLIB@\n SHELL = @SHELL@\n objext = @OBJEXT@\n@@ -57,7 +58,7 @@ enable_decimal_float= @enable_decimal_float@\n \n INCLUDES = -I$(srcdir) -I.\n \n-ALL_CFLAGS = $(CFLAGS) $(WARN_CFLAGS) $(INCLUDES) $(CPPFLAGS)\n+ALL_CFLAGS = $(CFLAGS) $(WARN_CFLAGS) $(INCLUDES) $(CPPFLAGS) $(PICFLAG)\n \n bid_OBJS = bid2dpd_dpd2bid.$(objext) host-ieee32.$(objext) \\\n \thost-ieee64.$(objext) host-ieee128.$(objext)"}, {"sha": "2720f46ff7f2aaeb27d9349e5af434c72ea86466", "filename": "libdecnumber/configure", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/libdecnumber%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/libdecnumber%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fconfigure?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -593,6 +593,7 @@ ac_includes_default=\"\\\n \n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n+PICFLAG\n ADDITIONAL_OBJS\n enable_decimal_float\n target_os\n@@ -670,6 +671,7 @@ enable_option_checking\n enable_werror_always\n enable_maintainer_mode\n enable_decimal_float\n+enable_host_shared\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1301,6 +1303,7 @@ Optional Features:\n \t\t\tenable decimal float extension to C.  Selecting 'bid'\n \t\t\tor 'dpd' choses which decimal floating point format\n \t\t\tto use\n+  --enable-host-shared    build host code as shared libraries\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -4889,6 +4892,16 @@ $as_echo \"#define AC_APPLE_UNIVERSAL_BUILD 1\" >>confdefs.h\n  esac\n \n \n+# Enable --enable-host-shared.\n+# Check whether --enable-host-shared was given.\n+if test \"${enable_host_shared+set}\" = set; then :\n+  enableval=$enable_host_shared; PICFLAG=-fPIC\n+else\n+  PICFLAG=\n+fi\n+\n+\n+\n # Output.\n \n ac_config_headers=\"$ac_config_headers config.h:config.in\""}, {"sha": "dd0499c43f66f592e9de88dbe5b78e26afec766e", "filename": "libdecnumber/configure.ac", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/libdecnumber%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/libdecnumber%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fconfigure.ac?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -95,6 +95,13 @@ AC_SUBST(ADDITIONAL_OBJS)\n \n AC_C_BIGENDIAN\n \n+# Enable --enable-host-shared.\n+AC_ARG_ENABLE(host-shared,\n+[AS_HELP_STRING([--enable-host-shared],\n+\t\t[build host code as shared libraries])],\n+[PICFLAG=-fPIC], [PICFLAG=])\n+AC_SUBST(PICFLAG)\n+\n # Output.\n \n AC_CONFIG_HEADERS(config.h:config.in, [echo timestamp > stamp-h1])"}, {"sha": "7250dc1f4900f8ec34d878e994a5c61e2e3d30b1", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -1,3 +1,8 @@\n+2013-10-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* configure.ac: If --enable-host-shared, use -fPIC.\n+\t* configure: Regenerate.\n+\n 2013-10-11  Paul Pluzhnikov  <ppluzhnikov@google.com>\n \n \t* cp-demangle.c (d_name): Demangle local-source-names."}, {"sha": "b71141a98b05bd388dfd08301391dda06b9da38e", "filename": "libiberty/configure", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -4963,6 +4963,12 @@ case \"${enable_shared}\" in\n   \"\") shared=no ;;\n   *) shared=yes ;;\n esac\n+\n+# ...unless --enable-host-shared was passed from top-level config:\n+if [ \"${enable_host_shared}\" = \"yes\" ]; then\n+  shared=yes\n+fi\n+\n if [ \"${shared}\" != \"yes\" ]; then\n   PICFLAG=\n fi"}, {"sha": "4ad88a984d7c28ddce3842f0da934b591e19a2f1", "filename": "libiberty/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -225,6 +225,12 @@ case \"${enable_shared}\" in\n   \"\") shared=no ;;\n   *) shared=yes ;;\n esac\n+\n+# ...unless --enable-host-shared was passed from top-level config:\n+if [[ \"${enable_host_shared}\" = \"yes\" ]]; then\n+  shared=yes\n+fi\n+\n if [[ \"${shared}\" != \"yes\" ]]; then\n   PICFLAG=\n fi"}, {"sha": "f32e30284966c6a6ea1c5318e8e94a1477d8005c", "filename": "zlib/ChangeLog.gcj", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/zlib%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/zlib%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FChangeLog.gcj?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -1,3 +1,11 @@\n+2013-10-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* configure.ac: Add --enable-host-shared, setting up new\n+\tPICFLAG variable.\n+\t* Makefile.am: Add PICFLAG to libz_a_CFLAGS.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\n 2013-09-20  Alan Modra  <amodra@gmail.com>\n \n \t* configure: Regenerate."}, {"sha": "82f709d9ec79bc929872da7c59ae49b52a79446a", "filename": "zlib/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/zlib%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/zlib%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FMakefile.am?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -16,7 +16,7 @@ libzgcj_convenience_la_SOURCES = $(ZLIB_SOURCES)\n else\n toolexeclib_LIBRARIES = libz.a\n libz_a_SOURCES = $(ZLIB_SOURCES)\n-libz_a_CFLAGS = $(AM_CFLAGS)\n+libz_a_CFLAGS = $(AM_CFLAGS) $(PICFLAG)\n endif\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS"}, {"sha": "3c8fd5978c89e6f2105577b80d2b169610f6f658", "filename": "zlib/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/zlib%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/zlib%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FMakefile.in?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -177,6 +177,7 @@ PACKAGE_TARNAME = @PACKAGE_TARNAME@\n PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n+PICFLAG = @PICFLAG@\n RANLIB = @RANLIB@\n SED = @SED@\n SET_MAKE = @SET_MAKE@\n@@ -255,7 +256,7 @@ zconf.h.in zlib.h zutil.c zutil.h\n @TARGET_LIBRARY_TRUE@libzgcj_convenience_la_SOURCES = $(ZLIB_SOURCES)\n @TARGET_LIBRARY_FALSE@toolexeclib_LIBRARIES = libz.a\n @TARGET_LIBRARY_FALSE@libz_a_SOURCES = $(ZLIB_SOURCES)\n-@TARGET_LIBRARY_FALSE@libz_a_CFLAGS = $(AM_CFLAGS)\n+@TARGET_LIBRARY_FALSE@libz_a_CFLAGS = $(AM_CFLAGS) $(PICFLAG)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and"}, {"sha": "32e33e7a6fac8d868626987477a52c0ec8807e0b", "filename": "zlib/configure", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/zlib%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/zlib%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fconfigure?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -602,6 +602,7 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+PICFLAG\n TARGET_LIBRARY_FALSE\n TARGET_LIBRARY_TRUE\n toolexeclibdir\n@@ -736,6 +737,7 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n+enable_host_shared\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1370,6 +1372,7 @@ Optional Features:\n   --enable-fast-install[=PKGS]\n                           optimize for fast installation [default=yes]\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n+  --enable-host-shared    build host code as shared libraries\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -10400,7 +10403,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10403 \"configure\"\n+#line 10406 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10506,7 +10509,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10509 \"configure\"\n+#line 10512 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11202,6 +11205,15 @@ else\n   multilib_arg=\n fi\n \n+# Check whether --enable-host-shared was given.\n+if test \"${enable_host_shared+set}\" = set; then :\n+  enableval=$enable_host_shared; PICFLAG=-fPIC\n+else\n+  PICFLAG=\n+fi\n+\n+\n+\n ac_config_files=\"$ac_config_files Makefile\"\n \n cat >confcache <<\\_ACEOF"}, {"sha": "fb8d943905e278f92a8552db634979b03016e741", "filename": "zlib/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459260ecf8b420b029601a664cdb21c185268ecb/zlib%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459260ecf8b420b029601a664cdb21c185268ecb/zlib%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fconfigure.ac?ref=459260ecf8b420b029601a664cdb21c185268ecb", "patch": "@@ -119,5 +119,11 @@ else\n   multilib_arg=\n fi\n \n+AC_ARG_ENABLE(host-shared,\n+[AS_HELP_STRING([--enable-host-shared],\n+\t\t[build host code as shared libraries])],\n+[PICFLAG=-fPIC], [PICFLAG=])\n+AC_SUBST(PICFLAG)\n+\n AC_CONFIG_FILES([Makefile])\n AC_OUTPUT"}]}