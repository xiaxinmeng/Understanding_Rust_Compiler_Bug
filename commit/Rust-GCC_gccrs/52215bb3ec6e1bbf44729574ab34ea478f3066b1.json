{"sha": "52215bb3ec6e1bbf44729574ab34ea478f3066b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIyMTViYjNlYzZlMWJiZjQ0NzI5NTc0YWIzNGVhNDc4ZjMwNjZiMQ==", "commit": {"author": {"name": "Asher Gordon", "email": "AsDaGo@posteo.net", "date": "2020-10-29T21:01:07Z"}, "committer": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2020-10-29T21:01:07Z"}, "message": "Replace free with XDELETE.\n\ngcc/c/ChangeLog:\n\n\t* c-typeck.c (free_all_tagged_tu_seen_up_to): Replace free\n\twith XDELETE.\n\t(finish_init): Likewise.\n\t(pop_init_level): Likewise.", "tree": {"sha": "189ef7446babf5e7e3b203df9b0d5edffa57cf0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/189ef7446babf5e7e3b203df9b0d5edffa57cf0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52215bb3ec6e1bbf44729574ab34ea478f3066b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52215bb3ec6e1bbf44729574ab34ea478f3066b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52215bb3ec6e1bbf44729574ab34ea478f3066b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52215bb3ec6e1bbf44729574ab34ea478f3066b1/comments", "author": null, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fb7e3c29188ab7cde0b963957caf6182536c77d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fb7e3c29188ab7cde0b963957caf6182536c77d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fb7e3c29188ab7cde0b963957caf6182536c77d"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "981cbe891a703155d0d328193a60a2dc0440949b", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52215bb3ec6e1bbf44729574ab34ea478f3066b1/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52215bb3ec6e1bbf44729574ab34ea478f3066b1/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=52215bb3ec6e1bbf44729574ab34ea478f3066b1", "patch": "@@ -1407,7 +1407,7 @@ free_all_tagged_tu_seen_up_to (const struct tagged_tu_seen_cache *tu_til)\n       const struct tagged_tu_seen_cache *const tu1\n \t= (const struct tagged_tu_seen_cache *) tu;\n       tu = tu1->next;\n-      free (CONST_CAST (struct tagged_tu_seen_cache *, tu1));\n+      XDELETE (CONST_CAST (struct tagged_tu_seen_cache *, tu1));\n     }\n   tagged_tu_seen_base = tu_til;\n }\n@@ -8314,13 +8314,13 @@ finish_init (void)\n     {\n       struct constructor_stack *q = constructor_stack;\n       constructor_stack = q->next;\n-      free (q);\n+      XDELETE (q);\n     }\n \n   gcc_assert (!constructor_range_stack);\n \n   /* Pop back to the data of the outer initializer (if any).  */\n-  free (spelling_base);\n+  XDELETE (spelling_base);\n \n   constructor_decl = p->decl;\n   require_constant_value = p->require_constant_value;\n@@ -8333,7 +8333,7 @@ finish_init (void)\n   spelling_size = p->spelling_size;\n   constructor_top_level = p->top_level;\n   initializer_stack = p->next;\n-  free (p);\n+  XDELETE (p);\n }\n \f\n /* Call here when we see the initializer is surrounded by braces.\n@@ -8864,7 +8864,7 @@ pop_init_level (location_t loc, int implicit,\n   RESTORE_SPELLING_DEPTH (constructor_depth);\n \n   constructor_stack = p->next;\n-  free (p);\n+  XDELETE (p);\n \n   if (ret.value == NULL_TREE && constructor_stack == 0)\n     ret.value = error_mark_node;"}]}