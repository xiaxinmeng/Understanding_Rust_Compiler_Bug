{"sha": "8924e9dd7183b97ab101e09816c88c8c1aac2bf0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkyNGU5ZGQ3MTgzYjk3YWIxMDFlMDk4MTZjODhjOGMxYWFjMmJmMA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2019-06-21T20:47:40Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2019-06-21T20:47:40Z"}, "message": "re PR c++/90909 (call devirtualized to pure virtual)\n\n/cp\n2019-06-21  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/90909\n\tRevert:\n\t2019-05-21  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/67184\n\tPR c++/69445\n\t* call.c (build_over_call): Devirtualize when the final overrider\n\tcomes from the base.\n\n/testsuite\n2019-06-21  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/90909\n\tRevert:\n\t2019-05-21  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/67184\n\tPR c++/69445\n\t* g++.dg/other/final3.C: New.\n\t* g++.dg/other/final4.C: Likewise.\n\t* g++.dg/other/final5.C: Likewise.\n\n\t* g++.dg/other/final6.C: New.\n\nFrom-SVN: r272574", "tree": {"sha": "469ef61e585dcfb27357a90ae55e03d10ed49688", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/469ef61e585dcfb27357a90ae55e03d10ed49688"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8924e9dd7183b97ab101e09816c88c8c1aac2bf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8924e9dd7183b97ab101e09816c88c8c1aac2bf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8924e9dd7183b97ab101e09816c88c8c1aac2bf0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8924e9dd7183b97ab101e09816c88c8c1aac2bf0/comments", "author": null, "committer": null, "parents": [{"sha": "f70d81ba7ec55aac1df0242e51d87578db968a32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f70d81ba7ec55aac1df0242e51d87578db968a32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f70d81ba7ec55aac1df0242e51d87578db968a32"}], "stats": {"total": 63, "additions": 0, "deletions": 63}, "files": [{"sha": "a49dc22a0d2d4c3cc27bda404e3f1e38b754b22d", "filename": "gcc/testsuite/g++.dg/other/final3.C", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f70d81ba7ec55aac1df0242e51d87578db968a32/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffinal3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f70d81ba7ec55aac1df0242e51d87578db968a32/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffinal3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffinal3.C?ref=f70d81ba7ec55aac1df0242e51d87578db968a32", "patch": "@@ -1,28 +0,0 @@\n-// PR c++/67184\n-// { dg-do compile { target c++11 } }\n-// { dg-options \"-fdump-tree-original\"  }\n-\n-struct V {\n- virtual void foo(); \n-};\n-\n-struct wV final : V {\n-};\n-\n-struct oV final : V {\n-  void foo();\n-};\n-\n-void call(wV& x)\n-{\n-  x.foo();\n-  x.V::foo();\n-}\n-\n-void call(oV& x)\n-{\n-  x.foo();\n-  x.V::foo();\n-}\n-\n-// { dg-final { scan-tree-dump-times \"OBJ_TYPE_REF\" 0 \"original\" } }"}, {"sha": "867ef3830e717a0cbbea59d6f2d40dca36913002", "filename": "gcc/testsuite/g++.dg/other/final4.C", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f70d81ba7ec55aac1df0242e51d87578db968a32/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffinal4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f70d81ba7ec55aac1df0242e51d87578db968a32/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffinal4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffinal4.C?ref=f70d81ba7ec55aac1df0242e51d87578db968a32", "patch": "@@ -1,16 +0,0 @@\n-// PR c++/67184\n-// { dg-do compile { target c++11 } }\n-// { dg-options \"-fdump-tree-original\"  }\n-\n-struct B\n-{\n-  virtual void operator()();\n-  virtual operator int();\n-  virtual int operator++();\n-};\n-\n-struct D final : B { };\n-\n-void foo(D& d) { d(); int t = d; ++d; }\n-\n-// { dg-final { scan-tree-dump-times \"OBJ_TYPE_REF\" 0 \"original\" } }"}, {"sha": "8a3e608a1858b6786c31fe8d009ecb071e04c88b", "filename": "gcc/testsuite/g++.dg/other/final5.C", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f70d81ba7ec55aac1df0242e51d87578db968a32/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffinal5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f70d81ba7ec55aac1df0242e51d87578db968a32/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffinal5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffinal5.C?ref=f70d81ba7ec55aac1df0242e51d87578db968a32", "patch": "@@ -1,19 +0,0 @@\n-// PR c++/69445\n-// { dg-do compile { target c++11 } }\n-// { dg-options \"-fdump-tree-original\"  }\n-\n-struct Base {\n-  virtual void foo() const = 0;\n-  virtual void bar() const {}\n-};\n-\n-struct C final : Base {\n-  void foo() const { }\n-};\n-\n-void func(const C & c) {\n-  c.bar();\n-  c.foo();\n-}\n-\n-// { dg-final { scan-tree-dump-times \"OBJ_TYPE_REF\" 0 \"original\" } }"}]}