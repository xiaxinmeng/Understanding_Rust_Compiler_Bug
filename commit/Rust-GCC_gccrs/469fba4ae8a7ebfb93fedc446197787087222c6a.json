{"sha": "469fba4ae8a7ebfb93fedc446197787087222c6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY5ZmJhNGFlOGE3ZWJmYjkzZmVkYzQ0NjE5Nzc4NzA4NzIyMmM2YQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-17T08:29:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-17T08:29:23Z"}, "message": "[multiple changes]\n\n2014-10-17  Robert Dewar  <dewar@adacore.com>\n\n\t* lib-writ.ads, s-valdec.ads: Minor reformatting.\n\n2014-10-17  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb: Additional work on function wrappers.\n\n2014-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* exp_util.adb (Possible_Bit_Aligned_Component): Also recurse\n\ton the renamed object of renamings.\n\n2014-10-17  Vincent Celier  <celier@adacore.com>\n\n\t* prj-conf.adb (Parse_Project_And_Apply_Config): In CodePeer\n\tmode, always use the native target.\n\nFrom-SVN: r216368", "tree": {"sha": "1f1b7e15e9b6c161ebe1ad9f609e735f27f3b4cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f1b7e15e9b6c161ebe1ad9f609e735f27f3b4cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/469fba4ae8a7ebfb93fedc446197787087222c6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/469fba4ae8a7ebfb93fedc446197787087222c6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/469fba4ae8a7ebfb93fedc446197787087222c6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/469fba4ae8a7ebfb93fedc446197787087222c6a/comments", "author": null, "committer": null, "parents": [{"sha": "c36eadbea19be5113fa64b69b1c1e6185848f3fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c36eadbea19be5113fa64b69b1c1e6185848f3fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c36eadbea19be5113fa64b69b1c1e6185848f3fb"}], "stats": {"total": 86, "additions": 69, "deletions": 17}, "files": [{"sha": "60705ed9115725efbdede5f80937c4b62b322427", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/469fba4ae8a7ebfb93fedc446197787087222c6a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/469fba4ae8a7ebfb93fedc446197787087222c6a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=469fba4ae8a7ebfb93fedc446197787087222c6a", "patch": "@@ -1,3 +1,21 @@\n+2014-10-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* lib-writ.ads, s-valdec.ads: Minor reformatting.\n+\n+2014-10-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb: Additional work on function wrappers.\n+\n+2014-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_util.adb (Possible_Bit_Aligned_Component): Also recurse\n+\ton the renamed object of renamings.\n+\n+2014-10-17  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-conf.adb (Parse_Project_And_Apply_Config): In CodePeer\n+\tmode, always use the native target.\n+\n 2014-10-16  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* gcc-interface/misc.c: Adjust include files."}, {"sha": "562a54de95c27ed10538d0b5d8baeffbc8b51f20", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/469fba4ae8a7ebfb93fedc446197787087222c6a/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/469fba4ae8a7ebfb93fedc446197787087222c6a/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=469fba4ae8a7ebfb93fedc446197787087222c6a", "patch": "@@ -6884,10 +6884,18 @@ package body Exp_Util is\n \n          --  If we have none of the above, it means that we have fallen off the\n          --  top testing prefixes recursively, and we now have a stand alone\n-         --  object, where we don't have a problem.\n+         --  object, where we don't have a problem, unless this is a renaming,\n+         --  in which case we need to look into the renamed object.\n \n          when others =>\n-            return False;\n+            if Is_Entity_Name (N)\n+              and then Present (Renamed_Object (Entity (N)))\n+            then\n+               return\n+                 Possible_Bit_Aligned_Component (Renamed_Object (Entity (N)));\n+            else\n+               return False;\n+            end if;\n \n       end case;\n    end Possible_Bit_Aligned_Component;"}, {"sha": "f67e33778c681929a814e049cdf1034fd79b1fc7", "filename": "gcc/ada/lib-writ.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/469fba4ae8a7ebfb93fedc446197787087222c6a/gcc%2Fada%2Flib-writ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/469fba4ae8a7ebfb93fedc446197787087222c6a/gcc%2Fada%2Flib-writ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.ads?ref=469fba4ae8a7ebfb93fedc446197787087222c6a", "patch": "@@ -375,10 +375,10 @@ package Lib.Writ is\n \n    --  RN\n \n-   --  In named notation, the restrictions are given as a series of lines, one\n-   --  per retrictions that is specified or violated (no information is present\n-   --  for restrictions that are not specified or violated). In the following\n-   --  name is the name of the restriction in all upper case.\n+   --  In named notation, the restrictions are given as a series of lines,\n+   --  one per restrictions that is specified or violated (no information is\n+   --  present for restrictions that are not specified or violated). In the\n+   --  following name is the name of the restriction in all upper case.\n \n    --  For boolean restrictions, we have only two possibilities. A restrictions\n    --  pragma is present, or a violation is detected:"}, {"sha": "dff06426ef5cee2224ab81ea8c7e939c0d5a00a6", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/469fba4ae8a7ebfb93fedc446197787087222c6a/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/469fba4ae8a7ebfb93fedc446197787087222c6a/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=469fba4ae8a7ebfb93fedc446197787087222c6a", "patch": "@@ -1592,6 +1592,16 @@ package body Prj.Conf is\n       Main_Project := No_Project;\n       Automatically_Generated := False;\n \n+      --  Need a comment here saying why CodePeer mode is different ???\n+\n+      if CodePeer_Mode or else Target_Name = \"\" then\n+         Opt.Target_Value  := new String'(Normalized_Hostname);\n+         Opt.Target_Origin := Default;\n+      else\n+         Opt.Target_Value  := new String'(Target_Name);\n+         Opt.Target_Origin := Specified;\n+      end if;\n+\n       Prj.Part.Parse\n         (In_Tree           => Project_Node_Tree,\n          Project           => User_Project_Node,"}, {"sha": "71c98129cdd77a4e44ca12c733b82a5aa85d6d2b", "filename": "gcc/ada/s-valdec.ads", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/469fba4ae8a7ebfb93fedc446197787087222c6a/gcc%2Fada%2Fs-valdec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/469fba4ae8a7ebfb93fedc446197787087222c6a/gcc%2Fada%2Fs-valdec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valdec.ads?ref=469fba4ae8a7ebfb93fedc446197787087222c6a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 1992-2009, Free Software Foundation, Inc.       --\n+--            Copyright (C) 1992-2014, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -69,11 +69,12 @@ package System.Val_Dec is\n    --  is greater than Max as required in this case.\n \n    function Value_Decimal (Str : String; Scale : Integer) return Integer;\n-   --  Used in computing X'Value (Str) where X is a decimal types whose size\n-   --  does not exceed Standard.Integer'Size. Str is the string argument of\n-   --  the attribute. Constraint_Error is raised if the string is malformed\n-   --  or if the value is out of range, otherwise the value returned is the\n-   --  value Integer'Integer_Value (decimal-literal-value), using the given\n-   --  Scale to determine this value.\n+   --  Used in computing X'Value (Str) where X is a decimal fixed-point type\n+   --  whose size does not exceed Standard.Integer'Size. Str is the string\n+   --  argument of the attribute. Constraint_Error is raised if the string\n+   --  is malformed or if the value is out of range of Integer (not the\n+   --  range of the fixed-point type, that check must be done by the caller.\n+   --  Otherwise the value returned is the value Integer'Integer_Value\n+   --  (decimal-literal-value), using Scale to determine this value.\n \n end System.Val_Dec;"}, {"sha": "9f516fe8036dee9dbc36809f8b099d4b1f2f22bc", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/469fba4ae8a7ebfb93fedc446197787087222c6a/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/469fba4ae8a7ebfb93fedc446197787087222c6a/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=469fba4ae8a7ebfb93fedc446197787087222c6a", "patch": "@@ -1033,7 +1033,8 @@ package body Sem_Ch12 is\n          Func_Name : Node_Id;\n          Func      : Entity_Id;\n          N_Parms   : Natural;\n-         Profile   : List_Id;\n+         Parm_Type : Node_Id;\n+         Profile   : List_Id := New_List;\n          Spec      : Node_Id;\n          F         : Entity_Id;\n          New_F     : Entity_Id;\n@@ -1055,7 +1056,7 @@ package body Sem_Ch12 is\n          Actuals := New_List;\n          Profile := New_List;\n \n-         F := First_Formal (Formal);\n+         F := First_Formal (Entity (Actual));\n          N_Parms := 0;\n          while Present (F) loop\n \n@@ -1064,11 +1065,25 @@ package body Sem_Ch12 is\n \n             New_F := Make_Temporary\n                        (Loc, Character'Val (Character'Pos ('A') + N_Parms));\n+\n+            --  If a formal has a class-wide type, rewrite as the corresponding\n+            --  attribute, because the class-wide type is not retrievable by\n+            --  visbility.\n+\n+            if Is_Class_Wide_Type (Etype (F)) then\n+               Parm_Type :=\n+                 Make_Attribute_Reference (Loc,\n+                   Attribute_Name => Name_Class,\n+                   Prefix         =>\n+                     Make_Identifier (Loc, Chars (Etype (Etype (F)))));\n+            else\n+               Parm_Type := Make_Identifier (Loc, Chars (Etype (F)));\n+            end if;\n+\n             Append_To (Profile,\n               Make_Parameter_Specification (Loc,\n               Defining_Identifier => New_F,\n-              Parameter_Type      =>\n-                Make_Identifier (Loc, Chars => Chars (Etype (F)))));\n+              Parameter_Type      => Parm_Type));\n \n             Append_To (Actuals, New_Occurrence_Of (New_F, Loc));\n             Next_Formal (F);"}]}