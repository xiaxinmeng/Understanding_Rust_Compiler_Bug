{"sha": "e3091406955ec3f0642271143a5007f46ec8c876", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMwOTE0MDY5NTVlYzNmMDY0MjI3MTE0M2E1MDA3ZjQ2ZWM4Yzg3Ng==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2015-10-28T14:27:30Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-10-28T14:27:30Z"}, "message": "loop-g-1.c: New.\n\n\t* testsuite/libgomp.oacc-c-c++-common/loop-g-1.c: New.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-g-2.c: New.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-gwv-1.c: New.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-v-1.c: New.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-w-1.c: New.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-wv-1.c: New.\n\nFrom-SVN: r229487", "tree": {"sha": "7ae3d9d1fd88228c42c482e5431af8ec5f4193b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ae3d9d1fd88228c42c482e5431af8ec5f4193b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3091406955ec3f0642271143a5007f46ec8c876", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3091406955ec3f0642271143a5007f46ec8c876", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3091406955ec3f0642271143a5007f46ec8c876", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3091406955ec3f0642271143a5007f46ec8c876/comments", "author": null, "committer": null, "parents": [{"sha": "d88cd9c42448f3e166a17356a7f8539541b68a25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d88cd9c42448f3e166a17356a7f8539541b68a25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d88cd9c42448f3e166a17356a7f8539541b68a25"}], "stats": {"total": 353, "additions": 353, "deletions": 0}, "files": [{"sha": "8f44af02606b968b2f8039f730787869ce7a7d94", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3091406955ec3f0642271143a5007f46ec8c876/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3091406955ec3f0642271143a5007f46ec8c876/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=e3091406955ec3f0642271143a5007f46ec8c876", "patch": "@@ -1,3 +1,12 @@\n+2015-10-28  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-g-1.c: New.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-g-2.c: New.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-gwv-1.c: New.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-v-1.c: New.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-w-1.c: New.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-wv-1.c: New.\n+\n 2015-10-27  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* plugin/plugin-nvptx.c (nvptx_exec): Remove check on compute"}, {"sha": "58545d04b26557b24d260ae9880ef7b24834b5c1", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-g-1.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3091406955ec3f0642271143a5007f46ec8c876/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-g-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3091406955ec3f0642271143a5007f46ec8c876/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-g-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-g-1.c?ref=e3091406955ec3f0642271143a5007f46ec8c876", "patch": "@@ -0,0 +1,57 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-O2\" */\n+\n+#include <stdio.h>\n+\n+#define N (32*32*32+17)\n+int main ()\n+{\n+  int ary[N];\n+  int ix;\n+  int exit = 0;\n+  int ondev = 0;\n+\n+  for (ix = 0; ix < N;ix++)\n+    ary[ix] = -1;\n+  \n+#pragma acc parallel num_gangs(32) vector_length(32) copy(ary) copy(ondev)\n+  {\n+#pragma acc loop gang\n+    for (unsigned ix = 0; ix < N; ix++)\n+      {\n+\tif (__builtin_acc_on_device (5))\n+\t  {\n+\t    int g = 0, w = 0, v = 0;\n+\n+\t    __asm__ volatile (\"mov.u32 %0,%%ctaid.x;\" : \"=r\" (g));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.y;\" : \"=r\" (w));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.x;\" : \"=r\" (v));\n+\t    ary[ix] = (g << 16) | (w << 8) | v;\n+\t    ondev = 1;\n+\t  }\n+\telse\n+\t  ary[ix] = ix;\n+      }\n+  }\n+\n+  for (ix = 0; ix < N; ix++)\n+    {\n+      int expected = ix;\n+      if(ondev)\n+\t{\n+\t  int g = ix / ((N + 31) / 32);\n+\t  int w = 0;\n+\t  int v = 0;\n+\n+\t  expected = (g << 16) | (w << 8) | v;\n+\t}\n+      \n+      if (ary[ix] != expected)\n+\t{\n+\t  exit = 1;\n+\t  printf (\"ary[%d]=%x expected %x\\n\", ix, ary[ix], expected);\n+\t}\n+    }\n+  \n+  return exit;\n+}"}, {"sha": "c01c6fa66a6615833e509695563fa377fece72a3", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-g-2.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3091406955ec3f0642271143a5007f46ec8c876/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-g-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3091406955ec3f0642271143a5007f46ec8c876/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-g-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-g-2.c?ref=e3091406955ec3f0642271143a5007f46ec8c876", "patch": "@@ -0,0 +1,57 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-O2\" */\n+\n+#include <stdio.h>\n+\n+#define N (32*32*32+17)\n+int main ()\n+{\n+  int ary[N];\n+  int ix;\n+  int exit = 0;\n+  int ondev = 0;\n+\n+  for (ix = 0; ix < N;ix++)\n+    ary[ix] = -1;\n+  \n+#pragma acc parallel num_gangs(32) vector_length(32) copy(ary) copy(ondev)\n+  {\n+#pragma acc loop gang (static:1)\n+    for (unsigned ix = 0; ix < N; ix++)\n+      {\n+\tif (__builtin_acc_on_device (5))\n+\t  {\n+\t    int g = 0, w = 0, v = 0;\n+\n+\t    __asm__ volatile (\"mov.u32 %0,%%ctaid.x;\" : \"=r\" (g));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.y;\" : \"=r\" (w));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.x;\" : \"=r\" (v));\n+\t    ary[ix] = (g << 16) | (w << 8) | v;\n+\t    ondev = 1;\n+\t  }\n+\telse\n+\t  ary[ix] = ix;\n+      }\n+  }\n+\n+  for (ix = 0; ix < N; ix++)\n+    {\n+      int expected = ix;\n+      if(ondev)\n+\t{\n+\t  int g = ix % 32;\n+\t  int w = 0;\n+\t  int v = 0;\n+\n+\t  expected = (g << 16) | (w << 8) | v;\n+\t}\n+      \n+      if (ary[ix] != expected)\n+\t{\n+\t  exit = 1;\n+\t  printf (\"ary[%d]=%x expected %x\\n\", ix, ary[ix], expected);\n+\t}\n+    }\n+  \n+  return exit;\n+}"}, {"sha": "f23e2f379d2ed908466ad61a658e5a6d21fc9420", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-gwv-1.c", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3091406955ec3f0642271143a5007f46ec8c876/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-gwv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3091406955ec3f0642271143a5007f46ec8c876/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-gwv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-gwv-1.c?ref=e3091406955ec3f0642271143a5007f46ec8c876", "patch": "@@ -0,0 +1,59 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-O2\" */\n+\n+#include <stdio.h>\n+\n+#define N (32*32*32+17)\n+int main ()\n+{\n+  int ary[N];\n+  int ix;\n+  int exit = 0;\n+  int ondev = 0;\n+\n+  for (ix = 0; ix < N;ix++)\n+    ary[ix] = -1;\n+  \n+#pragma acc parallel num_gangs(32) num_workers(32) vector_length(32) copy(ary) copy(ondev)\n+  {\n+#pragma acc loop gang worker vector\n+    for (unsigned ix = 0; ix < N; ix++)\n+      {\n+\tif (__builtin_acc_on_device (5))\n+\t  {\n+\t    int g = 0, w = 0, v = 0;\n+\n+\t    __asm__ volatile (\"mov.u32 %0,%%ctaid.x;\" : \"=r\" (g));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.y;\" : \"=r\" (w));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.x;\" : \"=r\" (v));\n+\t    ary[ix] = (g << 16) | (w << 8) | v;\n+\t    ondev = 1;\n+\t  }\n+\telse\n+\t  ary[ix] = ix;\n+      }\n+  }\n+\n+  for (ix = 0; ix < N; ix++)\n+    {\n+      int expected = ix;\n+      if(ondev)\n+\t{\n+\t  int chunk_size = (N + 32*32*32 - 1) / (32*32*32);\n+\t  \n+\t  int g = ix / (chunk_size * 32 * 32);\n+\t  int w = ix / 32 % 32;\n+\t  int v = ix % 32;\n+\n+\t  expected = (g << 16) | (w << 8) | v;\n+\t}\n+      \n+      if (ary[ix] != expected)\n+\t{\n+\t  exit = 1;\n+\t  printf (\"ary[%d]=%x expected %x\\n\", ix, ary[ix], expected);\n+\t}\n+    }\n+  \n+  return exit;\n+}"}, {"sha": "70c62922ec0d39ae07d2019489953dcc6cc97a2f", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-v-1.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3091406955ec3f0642271143a5007f46ec8c876/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-v-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3091406955ec3f0642271143a5007f46ec8c876/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-v-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-v-1.c?ref=e3091406955ec3f0642271143a5007f46ec8c876", "patch": "@@ -0,0 +1,57 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-O2\" */\n+\n+#include <stdio.h>\n+\n+#define N (32*32*32+17)\n+int main ()\n+{\n+  int ary[N];\n+  int ix;\n+  int exit = 0;\n+  int ondev = 0;\n+\n+  for (ix = 0; ix < N;ix++)\n+    ary[ix] = -1;\n+  \n+#pragma acc parallel vector_length(32) copy(ary) copy(ondev)\n+  {\n+#pragma acc loop vector\n+    for (unsigned ix = 0; ix < N; ix++)\n+      {\n+\tif (__builtin_acc_on_device (5))\n+\t  {\n+\t    int g = 0, w = 0, v = 0;\n+\n+\t    __asm__ volatile (\"mov.u32 %0,%%ctaid.x;\" : \"=r\" (g));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.y;\" : \"=r\" (w));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.x;\" : \"=r\" (v));\n+\t    ary[ix] = (g << 16) | (w << 8) | v;\n+\t    ondev = 1;\n+\t  }\n+\telse\n+\t  ary[ix] = ix;\n+      }\n+  }\n+\n+  for (ix = 0; ix < N; ix++)\n+    {\n+      int expected = ix;\n+      if(ondev)\n+\t{\n+\t  int g = 0;\n+\t  int w = 0;\n+\t  int v = ix % 32;\n+\n+\t  expected = (g << 16) | (w << 8) | v;\n+\t}\n+      \n+      if (ary[ix] != expected)\n+\t{\n+\t  exit = 1;\n+\t  printf (\"ary[%d]=%x expected %x\\n\", ix, ary[ix], expected);\n+\t}\n+    }\n+  \n+  return exit;\n+}"}, {"sha": "5473c2d609d6b551721f808e438781f9067eb65b", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-w-1.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3091406955ec3f0642271143a5007f46ec8c876/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-w-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3091406955ec3f0642271143a5007f46ec8c876/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-w-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-w-1.c?ref=e3091406955ec3f0642271143a5007f46ec8c876", "patch": "@@ -0,0 +1,57 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-O2\" */\n+\n+#include <stdio.h>\n+\n+#define N (32*32*32+17)\n+int main ()\n+{\n+  int ary[N];\n+  int ix;\n+  int exit = 0;\n+  int ondev = 0;\n+\n+  for (ix = 0; ix < N;ix++)\n+    ary[ix] = -1;\n+  \n+#pragma acc parallel num_workers(32) vector_length(32) copy(ary) copy(ondev)\n+  {\n+#pragma acc loop worker\n+    for (unsigned ix = 0; ix < N; ix++)\n+      {\n+\tif (__builtin_acc_on_device (5))\n+\t  {\n+\t    int g = 0, w = 0, v = 0;\n+\n+\t    __asm__ volatile (\"mov.u32 %0,%%ctaid.x;\" : \"=r\" (g));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.y;\" : \"=r\" (w));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.x;\" : \"=r\" (v));\n+\t    ary[ix] = (g << 16) | (w << 8) | v;\n+\t    ondev = 1;\n+\t  }\n+\telse\n+\t  ary[ix] = ix;\n+      }\n+  }\n+\n+  for (ix = 0; ix < N; ix++)\n+    {\n+      int expected = ix;\n+      if(ondev)\n+\t{\n+\t  int g = 0;\n+\t  int w = ix % 32;\n+\t  int v = 0;\n+\n+\t  expected = (g << 16) | (w << 8) | v;\n+\t}\n+      \n+      if (ary[ix] != expected)\n+\t{\n+\t  exit = 1;\n+\t  printf (\"ary[%d]=%x expected %x\\n\", ix, ary[ix], expected);\n+\t}\n+    }\n+  \n+  return exit;\n+}"}, {"sha": "85e447652ad129f8bc9aaf3d2732d79ae83afd98", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-wv-1.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3091406955ec3f0642271143a5007f46ec8c876/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-wv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3091406955ec3f0642271143a5007f46ec8c876/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-wv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-wv-1.c?ref=e3091406955ec3f0642271143a5007f46ec8c876", "patch": "@@ -0,0 +1,57 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-O2\" */\n+\n+#include <stdio.h>\n+\n+#define N (32*32*32+17)\n+int main ()\n+{\n+  int ary[N];\n+  int ix;\n+  int exit = 0;\n+  int ondev = 0;\n+\n+  for (ix = 0; ix < N;ix++)\n+    ary[ix] = -1;\n+  \n+#pragma acc parallel num_workers(32) vector_length(32) copy(ary) copy(ondev)\n+  {\n+#pragma acc loop worker vector\n+    for (unsigned ix = 0; ix < N; ix++)\n+      {\n+\tif (__builtin_acc_on_device (5))\n+\t  {\n+\t    int g = 0, w = 0, v = 0;\n+\n+\t    __asm__ volatile (\"mov.u32 %0,%%ctaid.x;\" : \"=r\" (g));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.y;\" : \"=r\" (w));\n+\t    __asm__ volatile (\"mov.u32 %0,%%tid.x;\" : \"=r\" (v));\n+\t    ary[ix] = (g << 16) | (w << 8) | v;\n+\t    ondev = 1;\n+\t  }\n+\telse\n+\t  ary[ix] = ix;\n+      }\n+  }\n+\n+  for (ix = 0; ix < N; ix++)\n+    {\n+      int expected = ix;\n+      if(ondev)\n+\t{\n+\t  int g = 0;\n+\t  int w = (ix / 32) % 32;\n+\t  int v = ix % 32;\n+\n+\t  expected = (g << 16) | (w << 8) | v;\n+\t}\n+      \n+      if (ary[ix] != expected)\n+\t{\n+\t  exit = 1;\n+\t  printf (\"ary[%d]=%x expected %x\\n\", ix, ary[ix], expected);\n+\t}\n+    }\n+  \n+  return exit;\n+}"}]}