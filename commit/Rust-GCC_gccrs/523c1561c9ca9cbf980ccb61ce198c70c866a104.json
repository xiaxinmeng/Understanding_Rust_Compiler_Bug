{"sha": "523c1561c9ca9cbf980ccb61ce198c70c866a104", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIzYzE1NjFjOWNhOWNiZjk4MGNjYjYxY2UxOThjNzBjODY2YTEwNA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2013-11-24T14:23:54Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2013-11-24T14:23:54Z"}, "message": "rs6000.c (rs6000_expand_vec_perm_const_1): Correct for little endian.\n\n2013-11-24  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* config/rs6000/rs6000.c (rs6000_expand_vec_perm_const_1): Correct\n\tfor little endian.\n\nFrom-SVN: r205333", "tree": {"sha": "188e7f0a54cdfec747cac21b63a82f0716d43a54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/188e7f0a54cdfec747cac21b63a82f0716d43a54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/523c1561c9ca9cbf980ccb61ce198c70c866a104", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/523c1561c9ca9cbf980ccb61ce198c70c866a104", "html_url": "https://github.com/Rust-GCC/gccrs/commit/523c1561c9ca9cbf980ccb61ce198c70c866a104", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/523c1561c9ca9cbf980ccb61ce198c70c866a104/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c7d8960a4dc32fa3eb9d0756da2d1fd6f1a423e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c7d8960a4dc32fa3eb9d0756da2d1fd6f1a423e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c7d8960a4dc32fa3eb9d0756da2d1fd6f1a423e"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "126109e7a88a469fbb31b42fc1074b7da1683929", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/523c1561c9ca9cbf980ccb61ce198c70c866a104/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/523c1561c9ca9cbf980ccb61ce198c70c866a104/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=523c1561c9ca9cbf980ccb61ce198c70c866a104", "patch": "@@ -1,3 +1,8 @@\n+2013-11-24  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_expand_vec_perm_const_1): Correct\n+\tfor little endian.\n+\n 2013-11-24  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* graphite-sese-to-poly.c: Don't include extra \"expr.h\"."}, {"sha": "599cf49570f382966f05835500e913e914bf69dc", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/523c1561c9ca9cbf980ccb61ce198c70c866a104/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/523c1561c9ca9cbf980ccb61ce198c70c866a104/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=523c1561c9ca9cbf980ccb61ce198c70c866a104", "patch": "@@ -30046,6 +30046,21 @@ rs6000_expand_vec_perm_const_1 (rtx target, rtx op0, rtx op1,\n       gcc_assert (GET_MODE_NUNITS (vmode) == 2);\n       dmode = mode_for_vector (GET_MODE_INNER (vmode), 4);\n \n+      /* For little endian, swap operands and invert/swap selectors\n+\t to get the correct xxpermdi.  The operand swap sets up the\n+\t inputs as a little endian array.  The selectors are swapped\n+\t because they are defined to use big endian ordering.  The\n+\t selectors are inverted to get the correct doublewords for\n+\t little endian ordering.  */\n+      if (!BYTES_BIG_ENDIAN)\n+\t{\n+\t  int n;\n+\t  perm0 = 3 - perm0;\n+\t  perm1 = 3 - perm1;\n+\t  n = perm0, perm0 = perm1, perm1 = n;\n+\t  x = op0, op0 = op1, op1 = x;\n+\t}\n+\n       x = gen_rtx_VEC_CONCAT (dmode, op0, op1);\n       v = gen_rtvec (2, GEN_INT (perm0), GEN_INT (perm1));\n       x = gen_rtx_VEC_SELECT (vmode, x, gen_rtx_PARALLEL (VOIDmode, v));"}]}