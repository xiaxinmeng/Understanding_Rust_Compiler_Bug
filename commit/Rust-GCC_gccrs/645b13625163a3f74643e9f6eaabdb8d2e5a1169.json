{"sha": "645b13625163a3f74643e9f6eaabdb8d2e5a1169", "node_id": "C_kwDOANBUbNoAKDY0NWIxMzYyNTE2M2EzZjc0NjQzZTlmNmVhYWJkYjhkMmU1YTExNjk", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-04-05T00:16:53Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-04-05T00:16:53Z"}, "message": "Daily bump.", "tree": {"sha": "a11a0cc928b66a8dbd34c4d9be516ba2bb3270d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a11a0cc928b66a8dbd34c4d9be516ba2bb3270d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/645b13625163a3f74643e9f6eaabdb8d2e5a1169", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/645b13625163a3f74643e9f6eaabdb8d2e5a1169", "html_url": "https://github.com/Rust-GCC/gccrs/commit/645b13625163a3f74643e9f6eaabdb8d2e5a1169", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/645b13625163a3f74643e9f6eaabdb8d2e5a1169/comments", "author": null, "committer": null, "parents": [{"sha": "099515c7b7908a383b737648584b5b6627a13488", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/099515c7b7908a383b737648584b5b6627a13488", "html_url": "https://github.com/Rust-GCC/gccrs/commit/099515c7b7908a383b737648584b5b6627a13488"}], "stats": {"total": 154, "additions": 153, "deletions": 1}, "files": [{"sha": "a3438d3a6d10d0b537b37530acb653dc0db52cbf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/645b13625163a3f74643e9f6eaabdb8d2e5a1169/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/645b13625163a3f74643e9f6eaabdb8d2e5a1169/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=645b13625163a3f74643e9f6eaabdb8d2e5a1169", "patch": "@@ -1,3 +1,79 @@\n+2023-04-04  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* doc/md.texi (Including Patterns): Fix page break.\n+\n+2023-04-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/109386\n+\t* range-op-float.cc (foperator_lt::op1_range, foperator_lt::op2_range,\n+\tfoperator_le::op1_range, foperator_le::op2_range,\n+\tfoperator_gt::op1_range, foperator_gt::op2_range,\n+\tfoperator_ge::op1_range, foperator_ge::op2_range): Make r varying for\n+\tBRS_FALSE case even if the other op is maybe_isnan, not just\n+\tknown_isnan.\n+\t(foperator_unordered_lt::op1_range, foperator_unordered_lt::op2_range,\n+\tfoperator_unordered_le::op1_range, foperator_unordered_le::op2_range,\n+\tfoperator_unordered_gt::op1_range, foperator_unordered_gt::op2_range,\n+\tfoperator_unordered_ge::op1_range, foperator_unordered_ge::op2_range):\n+\tMake r varying for BRS_TRUE case even if the other op is maybe_isnan,\n+\tnot just known_isnan.\n+\n+2023-04-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/109107\n+\t* fold-const.cc (fold_binary_loc): Use TYPE_OVERFLOW_SANITIZED\n+\twhen associating.\n+\t* match.pd: Use TYPE_OVERFLOW_SANITIZED.\n+\n+2023-04-04  Stam Markianos-Wright  <stam.markianos-wright@arm.com>\n+\n+\t* config/arm/mve.md (mve_vcvtq_n_to_f_<supf><mode>): Swap operands.\n+\t(mve_vcreateq_f<mode>): Swap operands.\n+\n+2023-04-04  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/gcn/gcn-valu.md (one_cmpl<mode>2<exec>): New.\n+\n+2023-04-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/109384\n+\t* common/config/riscv/riscv-common.cc (riscv_subset_list::parse):\n+\tReword diagnostics about zfinx conflict with f, formatting fixes.\n+\n+2023-04-04  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/sol2.h (LIB_SPEC): Don't link with -lpthread.\n+\n+2023-04-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109304\n+\t* tree-profile.cc (tree_profiling): Use symtab node\n+\tavailability to decide whether to skip adjusting calls.\n+\tDo not adjust calls to internal functions.\n+\n+2023-04-04  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/108807\n+\t* config/rs6000/rs6000.cc (rs6000_expand_vector_set_var_p9): Fix gen\n+\tfunction for permutation control vector by considering big endianness.\n+\n+2023-04-04  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/108699\n+\t* config/rs6000/altivec.md (*p9v_parity<mode>2): Rename to ...\n+\t(rs6000_vprtyb<mode>2): ... this.\n+\t* config/rs6000/rs6000-builtins.def (VPRTYBD): Replace parityv2di2 with\n+\trs6000_vprtybv2di2.\n+\t(VPRTYBW): Replace parityv4si2 with rs6000_vprtybv4si2.\n+\t(VPRTYBQ): Replace parityv1ti2 with rs6000_vprtybv1ti2.\n+\t* config/rs6000/vector.md (parity<mode>2 with VEC_IP): Expand with\n+\tpopcountv16qi2 and the corresponding rs6000_vprtyb<mode>2.\n+\n+2023-04-04  Hans-Peter Nilsson  <hp@axis.com>\n+\t    Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* doc/md.texi (Insn Splitting): Tweak wording for readability.\n+\n 2023-04-03  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/109303"}, {"sha": "643efe31568dc35535ad472195e4268db30f0078", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/645b13625163a3f74643e9f6eaabdb8d2e5a1169/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/645b13625163a3f74643e9f6eaabdb8d2e5a1169/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=645b13625163a3f74643e9f6eaabdb8d2e5a1169", "patch": "@@ -1 +1 @@\n-20230404\n+20230405"}, {"sha": "908c66cc83953aecbe012de630c57f18316f1348", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/645b13625163a3f74643e9f6eaabdb8d2e5a1169/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/645b13625163a3f74643e9f6eaabdb8d2e5a1169/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=645b13625163a3f74643e9f6eaabdb8d2e5a1169", "patch": "@@ -1,3 +1,8 @@\n+2023-04-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/107484\n+\t* decl2.cc (find_last_decl): Return early if DECL_USE_TEMPLATE.\n+\n 2023-04-03  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/109300"}, {"sha": "78991576f067bbc04afec9ed6c2b30098c46c562", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/645b13625163a3f74643e9f6eaabdb8d2e5a1169/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/645b13625163a3f74643e9f6eaabdb8d2e5a1169/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=645b13625163a3f74643e9f6eaabdb8d2e5a1169", "patch": "@@ -1,3 +1,9 @@\n+2023-04-04  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/104349\n+\t* expr.cc (check_restricted): Adjust check for valid variables in\n+\trestricted expressions: make no exception for module variables.\n+\n 2023-04-01  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \t* dump-parse-tree.cc (get_c_type_name): Fix \"long_long\""}, {"sha": "f08e145fdf21ea02d9f34a7d1658e3d8c865f9f2", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/645b13625163a3f74643e9f6eaabdb8d2e5a1169/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/645b13625163a3f74643e9f6eaabdb8d2e5a1169/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=645b13625163a3f74643e9f6eaabdb8d2e5a1169", "patch": "@@ -1,3 +1,7 @@\n+2023-04-04  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.pot: Regenerate.\n+\n 2023-04-03  Joseph Myers  <joseph@codesourcery.com>\n \n \t* sv.po: Update."}, {"sha": "b7cbffd5e5c6c8a122718be09e7ffaf1e08ab137", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/645b13625163a3f74643e9f6eaabdb8d2e5a1169/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/645b13625163a3f74643e9f6eaabdb8d2e5a1169/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=645b13625163a3f74643e9f6eaabdb8d2e5a1169", "patch": "@@ -1,3 +1,58 @@\n+2023-04-04  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/104349\n+\t* gfortran.dg/der_charlen_1.f90: Adjust dg-patterns.\n+\t* gfortran.dg/pr104349.f90: New test.\n+\n+2023-04-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/109386\n+\t* gcc.c-torture/execute/ieee/pr109386.c: New test.\n+\n+2023-04-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/109107\n+\t* c-c++-common/ubsan/pr109107-1.c: New test.\n+\t* c-c++-common/ubsan/pr109107-2.c: New test.\n+\t* c-c++-common/ubsan/pr109107-3.c: New test.\n+\t* c-c++-common/ubsan/pr109107-4.c: New test.\n+\n+2023-04-04  Stam Markianos-Wright  <stam.markianos-wright@arm.com>\n+\n+\t* gcc.target/arm/mve/intrinsics/vcreateq_f16.c: Tighten test.\n+\t* gcc.target/arm/mve/intrinsics/vcreateq_f32.c: Tighten test.\n+\t* gcc.target/arm/mve/intrinsics/vcreateq_s16.c: Tighten test.\n+\t* gcc.target/arm/mve/intrinsics/vcreateq_s32.c: Tighten test.\n+\t* gcc.target/arm/mve/intrinsics/vcreateq_s64.c: Tighten test.\n+\t* gcc.target/arm/mve/intrinsics/vcreateq_s8.c: Tighten test.\n+\t* gcc.target/arm/mve/intrinsics/vcreateq_u16.c: Tighten test.\n+\t* gcc.target/arm/mve/intrinsics/vcreateq_u32.c: Tighten test.\n+\t* gcc.target/arm/mve/intrinsics/vcreateq_u64.c: Tighten test.\n+\t* gcc.target/arm/mve/intrinsics/vcreateq_u8.c: Tighten test.\n+\n+2023-04-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/109384\n+\t* gcc.target/riscv/arch-19.c: Expect a different message about zfinx\n+\tvs. f conflict.\n+\n+2023-04-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109304\n+\t* gcc.dg/pr109304.c: New testcase.\n+\n+2023-04-04  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/108699\n+\t* gcc.target/powerpc/p9-vparity.c: Add scan-assembler-not for vpopcntb\n+\tto distinguish parity byte from parity.\n+\t* gcc.target/powerpc/pr108699.c: New test.\n+\n+2023-04-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/107484\n+\t* g++.dg/lookup/friend25.C: New test.\n+\n 2023-04-03  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/109300"}, {"sha": "c3632c33da95665bddab9051ce425722101c6d73", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/645b13625163a3f74643e9f6eaabdb8d2e5a1169/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/645b13625163a3f74643e9f6eaabdb8d2e5a1169/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=645b13625163a3f74643e9f6eaabdb8d2e5a1169", "patch": "@@ -1,3 +1,9 @@\n+2023-04-04  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/extensions.xml: Remove std::bad_exception from\n+\texample program.\n+\t* doc/html/manual/ext_demangling.html: Regenerate.\n+\n 2023-03-31  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR tree-optimization/107087"}]}