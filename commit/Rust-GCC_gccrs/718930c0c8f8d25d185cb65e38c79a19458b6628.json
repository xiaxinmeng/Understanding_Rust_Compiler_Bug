{"sha": "718930c0c8f8d25d185cb65e38c79a19458b6628", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE4OTMwYzBjOGY4ZDI1ZDE4NWNiNjVlMzhjNzlhMTk0NThiNjYyOA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2019-12-20T18:29:56Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-01-15T01:47:21Z"}, "message": "analyzer: ensure .dot output is valid for an empty BB\n\nThis patch fixes an issue with the output of -fdump-analyzer-supergraph\non BBs with no statements, where the resulting files were unreadable by\ndot e.g.:\n\nError: syntax error in line 1\n... <TABLE BORDER=\"0\"></TABLE> ...\nin label of node node_10\n\ngcc/analyzer/ChangeLog:\n\t* supergraph.cc (supernode::dump_dot): Ensure that the TABLE\n\telement has at least one TR.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/analyzer/dot-output.c: Add test coverage for a BB with\n\tno statements.", "tree": {"sha": "eb53b7615cfb8192762d2106feab3304ac17992d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb53b7615cfb8192762d2106feab3304ac17992d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/718930c0c8f8d25d185cb65e38c79a19458b6628", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/718930c0c8f8d25d185cb65e38c79a19458b6628", "html_url": "https://github.com/Rust-GCC/gccrs/commit/718930c0c8f8d25d185cb65e38c79a19458b6628", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/718930c0c8f8d25d185cb65e38c79a19458b6628/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8397af8ed0db685312e44117fd52316b57c2c129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8397af8ed0db685312e44117fd52316b57c2c129", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8397af8ed0db685312e44117fd52316b57c2c129"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "08c16b70128dd41e75e369b137066ff094147dec", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/718930c0c8f8d25d185cb65e38c79a19458b6628/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/718930c0c8f8d25d185cb65e38c79a19458b6628/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=718930c0c8f8d25d185cb65e38c79a19458b6628", "patch": "@@ -1,3 +1,8 @@\n+2020-01-14  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* supergraph.cc (supernode::dump_dot): Ensure that the TABLE\n+\telement has at least one TR.\n+\n 2020-01-14  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/58237"}, {"sha": "1dcc2742568c6ee3f3c8e03f5e8b254ee7325bd2", "filename": "gcc/analyzer/supergraph.cc", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/718930c0c8f8d25d185cb65e38c79a19458b6628/gcc%2Fanalyzer%2Fsupergraph.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/718930c0c8f8d25d185cb65e38c79a19458b6628/gcc%2Fanalyzer%2Fsupergraph.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsupergraph.cc?ref=718930c0c8f8d25d185cb65e38c79a19458b6628", "patch": "@@ -450,6 +450,8 @@ supernode::dump_dot (graphviz_out *gv, const dump_args_t &args) const\n   pp_string (pp, \"<TABLE BORDER=\\\"0\\\">\");\n   pp_write_text_to_stream (pp);\n \n+  bool had_row = false;\n+\n   if (m_returning_call)\n     {\n       gv->begin_tr ();\n@@ -464,18 +466,22 @@ supernode::dump_dot (graphviz_out *gv, const dump_args_t &args) const\n       if (args.m_node_annotator)\n \targs.m_node_annotator->add_stmt_annotations (gv, m_returning_call);\n       pp_newline (pp);\n+\n+      had_row = true;\n     }\n \n   if (entry_p ())\n     {\n       pp_string (pp, \"<TR><TD>ENTRY</TD></TR>\");\n       pp_newline (pp);\n+      had_row = true;\n     }\n \n   if (return_p ())\n     {\n       pp_string (pp, \"<TR><TD>EXIT</TD></TR>\");\n       pp_newline (pp);\n+      had_row = true;\n     }\n \n   /* Phi nodes.  */\n@@ -492,6 +498,7 @@ supernode::dump_dot (graphviz_out *gv, const dump_args_t &args) const\n \targs.m_node_annotator->add_stmt_annotations (gv, stmt);\n \n       pp_newline (pp);\n+      had_row = true;\n     }\n \n   /* Statements.  */\n@@ -508,6 +515,15 @@ supernode::dump_dot (graphviz_out *gv, const dump_args_t &args) const\n \targs.m_node_annotator->add_stmt_annotations (gv, stmt);\n \n       pp_newline (pp);\n+      had_row = true;\n+    }\n+\n+  /* Graphviz requires a TABLE element to have at least one TR\n+     (and each TR to have at least one TD).  */\n+  if (!had_row)\n+    {\n+      pp_string (pp, \"<TR><TD>(empty)</TD></TR>\");\n+      pp_newline (pp);\n     }\n \n   pp_string (pp, \"</TABLE>>];\\n\\n\");"}, {"sha": "135dae08078fbd4c97f168c53e054ae19aa96e51", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/718930c0c8f8d25d185cb65e38c79a19458b6628/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/718930c0c8f8d25d185cb65e38c79a19458b6628/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=718930c0c8f8d25d185cb65e38c79a19458b6628", "patch": "@@ -1,3 +1,8 @@\n+2020-01-14  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc.dg/analyzer/dot-output.c: Add test coverage for a BB with\n+\tno statements.\n+\n 2020-01-14  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/58237"}, {"sha": "25cb31f2d8946949bc354e2cef9b2db31730e81d", "filename": "gcc/testsuite/gcc.dg/analyzer/dot-output.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/718930c0c8f8d25d185cb65e38c79a19458b6628/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fdot-output.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/718930c0c8f8d25d185cb65e38c79a19458b6628/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fdot-output.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fdot-output.c?ref=718930c0c8f8d25d185cb65e38c79a19458b6628", "patch": "@@ -27,6 +27,22 @@ int *test (int *buf, int n, int *out)\n   return result;\n }\n \n+/* Test that we can generate valid .dot files given a BB with no\n+   statements.  */\n+extern int func ();\n+int test_2 (void)\n+{\n+  int c1;\n+  do\n+    {\n+      c1 = func ();\n+      if (c1 == '\\0')\n+\tbreak;\n+    }\n+  while (c1);\n+  return c1;\n+}\n+\n /* { dg-final { dg-check-dot \"dot-output.c.callgraph.dot\" } } */\n /* { dg-final { dg-check-dot \"dot-output.c.eg.dot\" } } */\n /* { dg-final { dg-check-dot \"dot-output.c.state-purge.dot\" } } */"}]}