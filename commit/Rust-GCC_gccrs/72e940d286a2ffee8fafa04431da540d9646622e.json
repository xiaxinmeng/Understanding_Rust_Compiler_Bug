{"sha": "72e940d286a2ffee8fafa04431da540d9646622e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJlOTQwZDI4NmEyZmZlZThmYWZhMDQ0MzFkYTU0MGQ5NjQ2NjIyZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-04-29T20:25:11Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-04-29T20:25:11Z"}, "message": "re PR middle-end/10336 (ICE with -Wunreachable-code)\n\n        PR middle-end/10336\n        * jump.c (never_reached_warning): Really stop looking if we reach\n        the beginning of the function.\n\nFrom-SVN: r66249", "tree": {"sha": "72cefeccbafcc29fe61400e39d0ce726e6b585bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72cefeccbafcc29fe61400e39d0ce726e6b585bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72e940d286a2ffee8fafa04431da540d9646622e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72e940d286a2ffee8fafa04431da540d9646622e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72e940d286a2ffee8fafa04431da540d9646622e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72e940d286a2ffee8fafa04431da540d9646622e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "60cde93696c3a8c25f85606b31645fb9c17af56b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60cde93696c3a8c25f85606b31645fb9c17af56b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60cde93696c3a8c25f85606b31645fb9c17af56b"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "b7bb449594ec87b79786c93be9ae3b927b2800f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72e940d286a2ffee8fafa04431da540d9646622e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72e940d286a2ffee8fafa04431da540d9646622e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=72e940d286a2ffee8fafa04431da540d9646622e", "patch": "@@ -1,3 +1,9 @@\n+2003-04-29  Jason Merrill  <jason@redhat.com>\n+\n+\tPR middle-end/10336\n+\t* jump.c (never_reached_warning): Really stop looking if we reach \n+\tthe beginning of the function.\n+\n 2003-04-29  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/elf.h (SIZE_TYPE, PTRDIFF_TYPE, USER_LABEL_PREFIX):"}, {"sha": "5bed408fb5ca1de76e56513bf81b7198111ed004", "filename": "gcc/jump.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72e940d286a2ffee8fafa04431da540d9646622e/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72e940d286a2ffee8fafa04431da540d9646622e/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=72e940d286a2ffee8fafa04431da540d9646622e", "patch": "@@ -1912,13 +1912,15 @@ never_reached_warning (avoided_insn, finish)\n   /* Back up to the first of any NOTEs preceding avoided_insn; flow passes\n      us the head of a block, a NOTE_INSN_BASIC_BLOCK, which often follows\n      the line note.  */\n-  for (insn = PREV_INSN (avoided_insn); ; insn = PREV_INSN (insn))\n-    if (GET_CODE (insn) != NOTE\n-\t|| NOTE_LINE_NUMBER (insn) == NOTE_INSN_FUNCTION_BEG)\n-      {\n-\tinsn = NEXT_INSN (insn);\n+  insn = avoided_insn;\n+  while (1)\n+    {\n+      rtx prev = PREV_INSN (insn);\n+      if (prev == NULL_RTX\n+\t  || GET_CODE (prev) != NOTE)\n \tbreak;\n-      }\n+      insn = prev;\n+    }\n \n   /* Scan forwards, looking at LINE_NUMBER notes, until we hit a LABEL\n      in case FINISH is NULL, otherwise until we run out of insns.  */"}]}