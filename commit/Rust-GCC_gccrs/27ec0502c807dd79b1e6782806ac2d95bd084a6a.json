{"sha": "27ec0502c807dd79b1e6782806ac2d95bd084a6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdlYzA1MDJjODA3ZGQ3OWIxZTY3ODI4MDZhYzJkOTViZDA4NGE2YQ==", "commit": {"author": {"name": "Andrew Jenner", "email": "andrew@codesourcery.com", "date": "2012-07-26T20:51:24Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2012-07-26T20:51:24Z"}, "message": "cse.c (find_comparison_args): Check for cycles of any length.\n\n2012-07-26  Andrew Jenner  <andrew@codesourcery.com>\n\t    Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* cse.c (find_comparison_args): Check for cycles of any length.\n\n\tgcc/testsuite/\n\t* gcc.c-torture/compile/pr50380.c: Add code to cause cycle of length 2.\n\nCo-Authored-By: Sandra Loosemore <sandra@codesourcery.com>\n\nFrom-SVN: r189896", "tree": {"sha": "23ce5234684b58ad1898974a03acd1eb8d8d4723", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23ce5234684b58ad1898974a03acd1eb8d8d4723"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27ec0502c807dd79b1e6782806ac2d95bd084a6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27ec0502c807dd79b1e6782806ac2d95bd084a6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27ec0502c807dd79b1e6782806ac2d95bd084a6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27ec0502c807dd79b1e6782806ac2d95bd084a6a/comments", "author": {"login": "andrewjenner", "id": 35463391, "node_id": "MDQ6VXNlcjM1NDYzMzkx", "avatar_url": "https://avatars.githubusercontent.com/u/35463391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewjenner", "html_url": "https://github.com/andrewjenner", "followers_url": "https://api.github.com/users/andrewjenner/followers", "following_url": "https://api.github.com/users/andrewjenner/following{/other_user}", "gists_url": "https://api.github.com/users/andrewjenner/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewjenner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewjenner/subscriptions", "organizations_url": "https://api.github.com/users/andrewjenner/orgs", "repos_url": "https://api.github.com/users/andrewjenner/repos", "events_url": "https://api.github.com/users/andrewjenner/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewjenner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "18a8e9ef96b23d33036c8f78baa3e4ad19a64825", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18a8e9ef96b23d33036c8f78baa3e4ad19a64825", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18a8e9ef96b23d33036c8f78baa3e4ad19a64825"}], "stats": {"total": 49, "additions": 40, "deletions": 9}, "files": [{"sha": "0cd287a206a19167fa4c230dc9749867afe80cc4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27ec0502c807dd79b1e6782806ac2d95bd084a6a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27ec0502c807dd79b1e6782806ac2d95bd084a6a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27ec0502c807dd79b1e6782806ac2d95bd084a6a", "patch": "@@ -1,3 +1,8 @@\n+2012-07-26  Andrew Jenner  <andrew@codesourcery.com>\n+\t    Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* cse.c (find_comparison_args): Check for cycles of any length.\n+\n 2012-07-26  Nick Clifton  <nickc@redhat.com>\n \n \t* config/mn10300/mn10300.c (REG_SAVE_BYTES): Delete."}, {"sha": "a8726f3fc3230003bab8b5995ef4d2ad17f868e6", "filename": "gcc/cse.c", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27ec0502c807dd79b1e6782806ac2d95bd084a6a/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27ec0502c807dd79b1e6782806ac2d95bd084a6a/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=27ec0502c807dd79b1e6782806ac2d95bd084a6a", "patch": "@@ -43,6 +43,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"df.h\"\n #include \"dbgcnt.h\"\n+#include \"pointer-set.h\"\n \n /* The basic idea of common subexpression elimination is to go\n    through the code, keeping a record of expressions that would\n@@ -2897,18 +2898,28 @@ find_comparison_args (enum rtx_code code, rtx *parg1, rtx *parg2,\n \t\t      enum machine_mode *pmode1, enum machine_mode *pmode2)\n {\n   rtx arg1, arg2;\n+  struct pointer_set_t *visited = NULL;\n+  /* Set nonzero when we find something of interest.  */\n+  rtx x = NULL;\n \n   arg1 = *parg1, arg2 = *parg2;\n \n   /* If ARG2 is const0_rtx, see what ARG1 is equivalent to.  */\n \n   while (arg2 == CONST0_RTX (GET_MODE (arg1)))\n     {\n-      /* Set nonzero when we find something of interest.  */\n-      rtx x = 0;\n       int reverse_code = 0;\n       struct table_elt *p = 0;\n \n+      /* Remember state from previous iteration.  */\n+      if (x)\n+\t{\n+\t  if (!visited)\n+\t    visited = pointer_set_create ();\n+\t  pointer_set_insert (visited, x);\n+\t  x = 0;\n+\t}\n+\n       /* If arg1 is a COMPARE, extract the comparison arguments from it.\n \t On machines with CC0, this is the only case that can occur, since\n \t fold_rtx will return the COMPARE or item being compared with zero\n@@ -2985,10 +2996,8 @@ find_comparison_args (enum rtx_code code, rtx *parg1, rtx *parg2,\n \t  if (! exp_equiv_p (p->exp, p->exp, 1, false))\n \t    continue;\n \n-\t  /* If it's the same comparison we're already looking at, skip it.  */\n-\t  if (COMPARISON_P (p->exp)\n-\t      && XEXP (p->exp, 0) == arg1\n-\t      && XEXP (p->exp, 1) == arg2)\n+\t  /* If it's a comparison we've used before, skip it.  */\n+\t  if (visited && pointer_set_contains (visited, p->exp))\n \t    continue;\n \n \t  if (GET_CODE (p->exp) == COMPARE\n@@ -3069,6 +3078,8 @@ find_comparison_args (enum rtx_code code, rtx *parg1, rtx *parg2,\n   *pmode1 = GET_MODE (arg1), *pmode2 = GET_MODE (arg2);\n   *parg1 = fold_rtx (arg1, 0), *parg2 = fold_rtx (arg2, 0);\n \n+  if (visited)\n+    pointer_set_destroy (visited);\n   return code;\n }\n \f"}, {"sha": "0773f040fa4813f914ddb511b8461fe25b70d2cb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27ec0502c807dd79b1e6782806ac2d95bd084a6a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27ec0502c807dd79b1e6782806ac2d95bd084a6a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=27ec0502c807dd79b1e6782806ac2d95bd084a6a", "patch": "@@ -1,3 +1,8 @@\n+2012-07-26  Andrew Jenner  <andrew@codesourcery.com>\n+\t    Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* gcc.c-torture/compile/pr50380.c: Add code to cause cycle of length 2.\n+\n 2012-07-26  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/contiguous_1.f90: Update dg-error."}, {"sha": "3f03cbbc31f6e09aa5c3f50a55cb8c0c68a53e38", "filename": "gcc/testsuite/gcc.c-torture/compile/pr50380.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27ec0502c807dd79b1e6782806ac2d95bd084a6a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr50380.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27ec0502c807dd79b1e6782806ac2d95bd084a6a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr50380.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr50380.c?ref=27ec0502c807dd79b1e6782806ac2d95bd084a6a", "patch": "@@ -1,12 +1,22 @@\n-/* This test used to get stuck in an infinite loop in find_comparison_args\n-   when compiling for MIPS at -O2.  */\n-\n __attribute__ ((__noreturn__)) extern void fail (void);\n \n char x;\n \n+/* This used to get stuck in an infinite loop in find_comparison_args\n+   when compiling this function for MIPS at -O2.  */\n+\n void foo (const unsigned char y)\n {\n    ((void) (__builtin_expect((!! y == y), 1) ? 0 : (fail (), 0)));\n    x = ! y;\n }\n+\n+/* This used to similarly get stuck when compiling for PowerPC at -O2.  */\n+\n+int foo2 (int arg)\n+{\n+  if (arg != !arg)\n+    fail ();\n+  if (arg)\n+    fail ();\n+}"}]}