{"sha": "b1668acb81d27e9e4e33ad4920bfba1449413c64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE2NjhhY2I4MWQyN2U5ZTRlMzNhZDQ5MjBiZmJhMTQ0OTQxM2M2NA==", "commit": {"author": {"name": "Ilya Enkovich", "email": "enkovich.gnu@gmail.com", "date": "2015-06-19T09:07:25Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-06-19T09:07:25Z"}, "message": "tree-chkp.c (chkp_compute_bounds_for_assignment): Don't reuse bounds created for abnormal ssa names.\n\ngcc/\n\n\t* tree-chkp.c (chkp_compute_bounds_for_assignment): Don't\n\treuse bounds created for abnormal ssa names.\n\ngcc/testsuite/\n\n\t* gcc.target/i386/mpx/pr66581.c: New test.\n\nFrom-SVN: r224643", "tree": {"sha": "71a92cd18103e052073a050ef7c9b6225dacd27a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71a92cd18103e052073a050ef7c9b6225dacd27a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1668acb81d27e9e4e33ad4920bfba1449413c64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1668acb81d27e9e4e33ad4920bfba1449413c64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1668acb81d27e9e4e33ad4920bfba1449413c64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1668acb81d27e9e4e33ad4920bfba1449413c64/comments", "author": null, "committer": null, "parents": [{"sha": "9faf9a56c9da010635712da0d2574b6e399034e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9faf9a56c9da010635712da0d2574b6e399034e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9faf9a56c9da010635712da0d2574b6e399034e0"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "e567ed0db715eed89b8a84f778f5a8854d344977", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1668acb81d27e9e4e33ad4920bfba1449413c64/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1668acb81d27e9e4e33ad4920bfba1449413c64/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1668acb81d27e9e4e33ad4920bfba1449413c64", "patch": "@@ -1,3 +1,8 @@\n+2015-06-19  Ilya Enkovich  <enkovich.gnu@gmail.com>\n+\n+\t* tree-chkp.c (chkp_compute_bounds_for_assignment): Don't\n+\treuse bounds created for abnormal ssa names.\n+\n 2015-06-19  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/nvptx/nvptx.md (allocate_stack): Rename to..."}, {"sha": "1ca4b686ddccc348f5804bbad1f18ddf9fef92c6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1668acb81d27e9e4e33ad4920bfba1449413c64/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1668acb81d27e9e4e33ad4920bfba1449413c64/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b1668acb81d27e9e4e33ad4920bfba1449413c64", "patch": "@@ -1,3 +1,7 @@\n+2015-06-19  Ilya Enkovich  <enkovich.gnu@gmail.com>\n+\n+\t* gcc.target/i386/mpx/pr66581.c: New test.\n+\n 2015-06-18  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/cmov9.c: New test."}, {"sha": "4c3317af3e0e71866c96158b6a3b7bb10db17c0d", "filename": "gcc/tree-chkp.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1668acb81d27e9e4e33ad4920bfba1449413c64/gcc%2Ftree-chkp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1668acb81d27e9e4e33ad4920bfba1449413c64/gcc%2Ftree-chkp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chkp.c?ref=b1668acb81d27e9e4e33ad4920bfba1449413c64", "patch": "@@ -2526,6 +2526,7 @@ chkp_compute_bounds_for_assignment (tree node, gimple assign)\n   tree rhs1 = gimple_assign_rhs1 (assign);\n   tree bounds = NULL_TREE;\n   gimple_stmt_iterator iter = gsi_for_stmt (assign);\n+  tree base = NULL;\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n@@ -2552,6 +2553,7 @@ chkp_compute_bounds_for_assignment (tree node, gimple assign)\n     case INTEGER_CST:\n       /* Bounds are just propagated from RHS.  */\n       bounds = chkp_find_bounds (rhs1, &iter);\n+      base = rhs1;\n       break;\n \n     case VIEW_CONVERT_EXPR:\n@@ -2622,6 +2624,8 @@ chkp_compute_bounds_for_assignment (tree node, gimple assign)\n \t     (e.g. pointer minus pointer).  In such case\n \t     use default invalid op bounds.  */\n \t  bounds = chkp_get_invalid_op_bounds ();\n+\n+\tbase = (bounds == bnd1) ? rhs1 : (bounds == bnd2) ? rhs2 : NULL;\n       }\n       break;\n \n@@ -2717,6 +2721,19 @@ chkp_compute_bounds_for_assignment (tree node, gimple assign)\n \n   gcc_assert (bounds);\n \n+  /* We may reuse bounds of other pointer we copy/modify.  But it is not\n+     allowed for abnormal ssa names.  If we produced a pointer using\n+     abnormal ssa name, we better make a bounds copy to avoid coalescing\n+     issues.  */\n+  if (base\n+      && TREE_CODE (base) == SSA_NAME\n+      && SSA_NAME_OCCURS_IN_ABNORMAL_PHI (base))\n+    {\n+      gimple stmt = gimple_build_assign (chkp_get_tmp_reg (NULL), bounds);\n+      gsi_insert_after (&iter, stmt, GSI_SAME_STMT);\n+      bounds = gimple_assign_lhs (stmt);\n+    }\n+\n   if (node)\n     bounds = chkp_maybe_copy_and_register_bounds (node, bounds);\n "}]}