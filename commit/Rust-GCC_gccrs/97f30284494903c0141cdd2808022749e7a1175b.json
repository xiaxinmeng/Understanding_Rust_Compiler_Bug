{"sha": "97f30284494903c0141cdd2808022749e7a1175b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdmMzAyODQ0OTQ5MDNjMDE0MWNkZDI4MDgwMjI3NDllN2ExMTc1Yg==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1999-11-29T20:43:24Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1999-11-29T20:43:24Z"}, "message": "parse.y (catch_clause_parameter:): Still set `$$' to NULL_TREE in case of error.\n\nTue Nov 23 10:55:18 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n\t* parse.y (catch_clause_parameter:): Still set `$$' to NULL_TREE\n \tin case of error. Error message tuned.\n\nThis fixes a catch clause error handling reported on the java-discuss\nmailing list:\n\n  http://sourceware.cygnus.com/ml/java-discuss/1999-q4/msg00358.html\n\nFrom-SVN: r30710", "tree": {"sha": "fdd405faa327f42de6ca8118cfc0b99fa022394a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdd405faa327f42de6ca8118cfc0b99fa022394a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97f30284494903c0141cdd2808022749e7a1175b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97f30284494903c0141cdd2808022749e7a1175b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97f30284494903c0141cdd2808022749e7a1175b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97f30284494903c0141cdd2808022749e7a1175b/comments", "author": null, "committer": null, "parents": [{"sha": "9b811d11de8f2ccac62759a2c78fae00b6a3f4c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b811d11de8f2ccac62759a2c78fae00b6a3f4c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b811d11de8f2ccac62759a2c78fae00b6a3f4c4"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "b77fcd5c201da696ef15811114402a175b56e99a", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97f30284494903c0141cdd2808022749e7a1175b/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97f30284494903c0141cdd2808022749e7a1175b/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=97f30284494903c0141cdd2808022749e7a1175b", "patch": "@@ -1,12 +1,12 @@\n-Thu Nov  4 16:27:01 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n-\n-\t* parse.y (resolve_qualified_expression_name): Handle PLUS_EXPR.\n-\t(qualify_ambiguous_name): Likewise.\n-\t\n 1999-11-24  Mark Mitchell  <mark@codesourcery.com>\n \n \t* except.c (emit_handlers): Zero catch_clauses after emitting them.\n \n+Tue Nov 23 10:55:18 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (catch_clause_parameter:): Still set `$$' to NULL_TREE\n+ \tin case of error. Error message tuned.\n+\n 1999-11-21  Anthony Green  <green@cygnus.com>\n \n \t* constants.c (find_methodref_index): Unwrap method names before\n@@ -49,6 +49,11 @@ Tue Nov  9 12:12:38 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t* class.c (finish_class): Emit inlined methods if any native\n \tmethods exist in the class.  Fixes PR gcj/85.\n \n+Thu Nov  4 16:27:01 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (resolve_qualified_expression_name): Handle PLUS_EXPR.\n+\t(qualify_ambiguous_name): Likewise.\n+\t\n Wed Nov  3 15:20:02 MST 1999  Godmar Back <gback@cs.utah.edu>\n \n \t* typeck.c: (lookup_java_method):  search all inherited"}, {"sha": "cf5c8631ac6c4182ed1ef3369551e64d1938a0f6", "filename": "gcc/java/parse.y", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97f30284494903c0141cdd2808022749e7a1175b/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97f30284494903c0141cdd2808022749e7a1175b/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=97f30284494903c0141cdd2808022749e7a1175b", "patch": "@@ -1732,11 +1732,14 @@ catch_clause_parameter:\n \t\t  EXPR_WFL_LINECOL ($$) = $1.location;\n \t\t}\n |\tCATCH_TK error\n-\t\t{yyerror (\"'(' expected\"); RECOVER;}\n+\t\t{yyerror (\"'(' expected\"); RECOVER; $$ = NULL_TREE;}\n |\tCATCH_TK OP_TK error \n-\t\t{yyerror (\"Missing term or ')' expected\"); DRECOVER (2);}\n+\t\t{\n+\t\t  yyerror (\"Missing term or ')' expected\"); \n+\t\t  RECOVER; $$ = NULL_TREE;\n+\t\t}\n |\tCATCH_TK OP_TK error CP_TK /* That's for () */\n-\t\t{yyerror (\"')' expected\"); DRECOVER (1);}\n+\t\t{yyerror (\"Missing term\"); RECOVER; $$ = NULL_TREE;}\n ;\n \n finally:"}]}