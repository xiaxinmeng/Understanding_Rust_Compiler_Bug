{"sha": "3cbfaf984602e3b1eabba8ec279a1aceb0379224", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NiZmFmOTg0NjAyZTNiMWVhYmJhOGVjMjc5YTFhY2ViMDM3OTIyNA==", "commit": {"author": {"name": "Dave Korn", "email": "dave.korn.cygwin@gmail.com", "date": "2009-01-31T18:52:00Z"}, "committer": {"name": "Dave Korn", "email": "davek@gcc.gnu.org", "date": "2009-01-31T18:52:00Z"}, "message": "re PR target/38904 (Shared libgcc DLL violates Cygwin platform conventions.)\n\n\tPR target/38904\n\t* mkmap-flat.awk (END):  Use pe_dll command-line arg to pass\n\tLIBRARY name in, instead of hard-coding it.\n\t* config.gcc (i[34567]86-*-pe | i[34567]86-*-cygwin*):  Add an\n\textra target make frag to tmake_files according to EH model.\n\t(i[34567]86-*-mingw* | x86_64-*-mingw*):  Likewise.\n\t* config/i386/t-dw2-eh, config/i386/t-sjlj-eh:  Add new target\n\tfrags that define makefile variable EH_MODEL appropriately.\n\t* config/i386/cygming.h (DWARF2_UNWIND_INFO):  Add comment.\n\t* config/i386/cygwin.h (LIBGCC_EH_EXTN):  Define to nothing or\n\tto \"-sjlj\" according to type of EH configured.\n\t(LIBGCC_SONAME):  Concatenate it to shared library base name.\n\t* config/i386/mingw32.h (LIBGCC_EH_EXTN):  Define to \"_dw2\" or\n\tto \"_sjlj\" according to type of EH configured.\n\t(LIBGCC_SONAME):  Concatenate it to shared library base name.\n\t* config/i386/t-cygming (SHLIB_SONAME):  Use EH_MODEL.\n\t(SHLIB_LINK):  Add missing semicolon to if-else construct.\n\t(SHLIB_MKMAP_OPTS):  Pass library name to mkmap-flat.awk as\n\tstring value of \"pe_dll\" command-line option.\n\t* config/i386/t-cygwin (SHLIB_EH_EXTENSION):  New helper.\n\t(SHLIB_SONAME):  Use it when overriding t-cygming default.\n\t(SHLIB_IMPLIB):  Override t-cygming default.\n\t(SHLIB_MKMAP_OPTS):  Pass library name to mkmap-flat.awk as\n\tstring value of \"pe_dll\" command-line option.\n\nFrom-SVN: r143829", "tree": {"sha": "3b59fc8984e5b0cc68ebb79362688651ec1eeadc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b59fc8984e5b0cc68ebb79362688651ec1eeadc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cbfaf984602e3b1eabba8ec279a1aceb0379224", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cbfaf984602e3b1eabba8ec279a1aceb0379224", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cbfaf984602e3b1eabba8ec279a1aceb0379224", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cbfaf984602e3b1eabba8ec279a1aceb0379224/comments", "author": {"login": "davek-cygwin", "id": 530057, "node_id": "MDQ6VXNlcjUzMDA1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/530057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davek-cygwin", "html_url": "https://github.com/davek-cygwin", "followers_url": "https://api.github.com/users/davek-cygwin/followers", "following_url": "https://api.github.com/users/davek-cygwin/following{/other_user}", "gists_url": "https://api.github.com/users/davek-cygwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/davek-cygwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davek-cygwin/subscriptions", "organizations_url": "https://api.github.com/users/davek-cygwin/orgs", "repos_url": "https://api.github.com/users/davek-cygwin/repos", "events_url": "https://api.github.com/users/davek-cygwin/events{/privacy}", "received_events_url": "https://api.github.com/users/davek-cygwin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8d0b6068b550226ed80e62af3bb5b3da171d7802", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d0b6068b550226ed80e62af3bb5b3da171d7802", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d0b6068b550226ed80e62af3bb5b3da171d7802"}], "stats": {"total": 94, "additions": 84, "deletions": 10}, "files": [{"sha": "148b99309492db7e43997cc3e6d500fdef277d91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3cbfaf984602e3b1eabba8ec279a1aceb0379224", "patch": "@@ -1,3 +1,30 @@\n+2009-01-31  Dave Korn  <dave.korn.cygwin@gmail.com>\n+\n+\tPR target/38904\n+\t* mkmap-flat.awk (END):  Use pe_dll command-line arg to pass\n+\tLIBRARY name in, instead of hard-coding it.\n+\t* config.gcc (i[34567]86-*-pe | i[34567]86-*-cygwin*):  Add an\n+\textra target make frag to tmake_files according to EH model.\n+\t(i[34567]86-*-mingw* | x86_64-*-mingw*):  Likewise.\n+\t* config/i386/t-dw2-eh, config/i386/t-sjlj-eh:  Add new target\n+\tfrags that define makefile variable EH_MODEL appropriately.\n+\t* config/i386/cygming.h (DWARF2_UNWIND_INFO):  Add comment.\n+\t* config/i386/cygwin.h (LIBGCC_EH_EXTN):  Define to nothing or\n+\tto \"-sjlj\" according to type of EH configured.\n+\t(LIBGCC_SONAME):  Concatenate it to shared library base name.\n+\t* config/i386/mingw32.h (LIBGCC_EH_EXTN):  Define to \"_dw2\" or\n+\tto \"_sjlj\" according to type of EH configured.\n+\t(LIBGCC_SONAME):  Concatenate it to shared library base name.\n+\t* config/i386/t-cygming (SHLIB_SONAME):  Use EH_MODEL.\n+\t(SHLIB_LINK):  Add missing semicolon to if-else construct.\n+\t(SHLIB_MKMAP_OPTS):  Pass library name to mkmap-flat.awk as\n+\tstring value of \"pe_dll\" command-line option.\n+\t* config/i386/t-cygwin (SHLIB_EH_EXTENSION):  New helper.\n+\t(SHLIB_SONAME):  Use it when overriding t-cygming default.\n+\t(SHLIB_IMPLIB):  Override t-cygming default.\n+\t(SHLIB_MKMAP_OPTS):  Pass library name to mkmap-flat.awk as\n+\tstring value of \"pe_dll\" command-line option.\n+\n 2009-01-31  Dave Korn  <dave.korn.cygwin@gmail.com>\n \n \tPR target/38952"}, {"sha": "c0a528221318005a69551d66de08efb974a6400d", "filename": "gcc/config.gcc", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=3cbfaf984602e3b1eabba8ec279a1aceb0379224", "patch": "@@ -1241,7 +1241,13 @@ i[4567]86-wrs-vxworks|i[4567]86-wrs-vxworksae)\n i[34567]86-*-pe | i[34567]86-*-cygwin*)\n \ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h dbxcoff.h i386/cygming.h i386/cygwin.h\"\n \txm_file=i386/xm-cygwin.h\n-\ttmake_file=\"${tmake_file} i386/t-cygwin i386/t-cygming\"\n+\t# This has to match the logic for DWARF2_UNWIND_INFO in gcc/config/i386/cygming.h\n+\tif test x$sjlj = x0; then\n+\t\ttmake_eh_file=\"i386/t-dw2-eh\"\n+\telse\n+\t\ttmake_eh_file=\"i386/t-sjlj-eh\"\n+\tfi\n+\ttmake_file=\"${tmake_file} ${tmake_eh_file} i386/t-cygming i386/t-cygwin\"\n \ttarget_gtfiles=\"\\$(srcdir)/config/i386/winnt.c\"\n \textra_options=\"${extra_options} i386/cygming.opt\"\n \textra_objs=\"winnt.o winnt-stubs.o\"\n@@ -1255,7 +1261,13 @@ i[34567]86-*-pe | i[34567]86-*-cygwin*)\n i[34567]86-*-mingw* | x86_64-*-mingw*)\n \ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h dbxcoff.h i386/cygming.h i386/mingw32.h\"\n \txm_file=i386/xm-mingw32.h\n-\ttmake_file=\"${tmake_file} i386/t-cygming i386/t-mingw32\"\n+\t# This has to match the logic for DWARF2_UNWIND_INFO in gcc/config/i386/cygming.h\n+\tif test x$sjlj = x0; then\n+\t\ttmake_eh_file=\"i386/t-dw2-eh\"\n+\telse\n+\t\ttmake_eh_file=\"i386/t-sjlj-eh\"\n+\tfi\n+\ttmake_file=\"${tmake_file} ${tmake_eh_file} i386/t-cygming i386/t-mingw32\"\n \ttarget_gtfiles=\"\\$(srcdir)/config/i386/winnt.c\"\n \textra_options=\"${extra_options} i386/cygming.opt i386/mingw.opt\"\n \textra_objs=\"winnt.o winnt-stubs.o\""}, {"sha": "e9250bb49a4debd2f423cb754d8a2aacab4c5963", "filename": "gcc/config/i386/cygming.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2Fconfig%2Fi386%2Fcygming.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2Fconfig%2Fi386%2Fcygming.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygming.h?ref=3cbfaf984602e3b1eabba8ec279a1aceb0379224", "patch": "@@ -283,6 +283,8 @@ do {\t\t\t\t\t\t\\\n /* If configured with --disable-sjlj-exceptions, use DWARF2, else\n    default to SJLJ.  */\n #if  (defined (CONFIG_SJLJ_EXCEPTIONS) && !CONFIG_SJLJ_EXCEPTIONS)\n+/* The logic of this #if must be kept synchronised with the logic\n+   for selecting the tmake_eh_file fragment in config.gcc.  */\n #define DWARF2_UNWIND_INFO 1\n #else\n #define DWARF2_UNWIND_INFO 0"}, {"sha": "0f73f000707cb9ed6e53a8218fab5255613c293e", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=3cbfaf984602e3b1eabba8ec279a1aceb0379224", "patch": "@@ -259,3 +259,11 @@ while (0)\n    and the -pthread flag is not recognized.  */\n #undef GOMP_SELF_SPECS\n #define GOMP_SELF_SPECS \"\"\n+\n+/* This matches SHLIB_SONAME and SHLIB_SOVERSION in t-cygwin. */\n+#if DWARF2_UNWIND_INFO\n+#define LIBGCC_EH_EXTN \"\"\n+#else\n+#define LIBGCC_EH_EXTN \"-sjlj\"\n+#endif\n+#define LIBGCC_SONAME \"cyggcc_s\" LIBGCC_EH_EXTN \"-1.dll\""}, {"sha": "43f5a056a28c525b60f5a5ced60d2a2475ef8eaa", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=3cbfaf984602e3b1eabba8ec279a1aceb0379224", "patch": "@@ -212,4 +212,10 @@ __enable_execute_stack (void *addr)\t\t\t\t\t\\\n #endif\n \n /* This matches SHLIB_SONAME and SHLIB_SOVERSION in t-cygming. */\n-#define LIBGCC_SONAME \"libgcc_s_1.dll\"\n+/* This matches SHLIB_SONAME and SHLIB_SOVERSION in t-cygwin. */\n+#if DWARF2_UNWIND_INFO\n+#define LIBGCC_EH_EXTN \"_dw2\"\n+#else\n+#define LIBGCC_EH_EXTN \"_sjlj\"\n+#endif\n+#define LIBGCC_SONAME \"libgcc_s\" LIBGCC_EH_EXTN \"-1.dll\""}, {"sha": "e26462fb623e8f328ad8cb15b2b2b2d768711855", "filename": "gcc/config/i386/t-cygming", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2Fconfig%2Fi386%2Ft-cygming", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2Fconfig%2Fi386%2Ft-cygming", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-cygming?ref=3cbfaf984602e3b1eabba8ec279a1aceb0379224", "patch": "@@ -43,21 +43,21 @@ STMP_FIXINC=stmp-fixinc\n # mkmap-flat.awk is used with the pe_dll option to produce a DEF instead\n # of an ELF map file.\n #\n-# Warning: If SHLIB_SOVERSION or SHLIB_SONAME is updated, LIBGCC_SONAME\n-# in mingw32.h must be updated also.\n+# Warning: If SHLIB_SOVERSION or SHLIB_SONAME are updated, LIBGCC_SONAME\n+# in mingw32.h and SHLIB_MKMAP_OPTS below must be updated also.\n \n SHLIB_EXT = .dll\n SHLIB_IMPLIB = @shlib_base_name@.a\n SHLIB_SOVERSION = 1\n-SHLIB_SONAME = @shlib_base_name@_$(SHLIB_SOVERSION)$(SHLIB_EXT)\n+SHLIB_SONAME = @shlib_base_name@_$(EH_MODEL)-$(SHLIB_SOVERSION)$(SHLIB_EXT)\n SHLIB_MAP = @shlib_map_file@\n SHLIB_OBJS = @shlib_objs@\n SHLIB_DIR = @multilib_dir@/shlib\n SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n \n SHLIB_LINK = $(LN_S) -f $(SHLIB_MAP) $(SHLIB_MAP).def && \\\n \tif [ ! -d $(SHLIB_DIR) ]; then \\\n-\t\tmkdir $(SHLIB_DIR) \\\n+\t\tmkdir $(SHLIB_DIR); \\\n \telse true; fi && \\\n \t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n \t$(SHLIB_MAP).def \\\n@@ -79,5 +79,7 @@ SHLIB_INSTALL = \\\n \t$(INSTALL_DATA) $(SHLIB_DIR)/$(SHLIB_IMPLIB) \\\n \t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_IMPLIB)\n SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk\n-SHLIB_MKMAP_OPTS = -v pe_dll=1\n+# We'd like to use SHLIB_SONAME here too, but shlib_base_name\n+# does not get substituted before mkmap-flat.awk is run.\n+SHLIB_MKMAP_OPTS = -v pe_dll=libgcc_s_$(EH_MODEL)-$(SHLIB_SOVERSION)$(SHLIB_EXT)\n SHLIB_MAPFILES = $(srcdir)/libgcc-std.ver"}, {"sha": "d58d84fcd6fa8f8796b6c8f008d292cd9a2a7c7c", "filename": "gcc/config/i386/t-cygwin", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2Fconfig%2Fi386%2Ft-cygwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2Fconfig%2Fi386%2Ft-cygwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-cygwin?ref=3cbfaf984602e3b1eabba8ec279a1aceb0379224", "patch": "@@ -16,3 +16,15 @@ cygwin2.o: $(srcdir)/config/i386/cygwin2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \n # Cygwin-specific parts of LIB_SPEC\n SHLIB_LC = -lcygwin -luser32 -lkernel32 -ladvapi32 -lshell32\n+\n+# We have already included one of the t-{dw2,sjlj}-eh fragments for EH_MODEL\n+SHLIB_EH_EXTENSION = $(subst -dw2,,-$(EH_MODEL))\n+\n+# Cygwin uses different conventions than MinGW; override generic SHLIB_ def'ns here.\n+SHLIB_IMPLIB = @shlib_base_name@$(SHLIB_EXT).a\n+SHLIB_SONAME = cyggcc_s$(SHLIB_EH_EXTENSION)-$(SHLIB_SOVERSION)$(SHLIB_EXT)\n+# This must match the definitions of SHLIB_SONAME/SHLIB_SOVERSION and LIBGCC_SONAME.\n+# We'd like to use SHLIB_SONAME here too, and we can, since\n+# we don't rely on shlib_base_name substitution for it.\n+SHLIB_MKMAP_OPTS = -v pe_dll=$(SHLIB_SONAME)\n+"}, {"sha": "ffcc39aea339759d2e77fb077ca1a497a0a711ad", "filename": "gcc/config/i386/t-dw2-eh", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2Fconfig%2Fi386%2Ft-dw2-eh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2Fconfig%2Fi386%2Ft-dw2-eh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-dw2-eh?ref=3cbfaf984602e3b1eabba8ec279a1aceb0379224", "patch": "@@ -0,0 +1,3 @@\n+\n+# We are using Dwarf-2 EH.\n+EH_MODEL = dw2"}, {"sha": "c9085f43216764e1c481e173a8d58d080ae00b2e", "filename": "gcc/config/i386/t-sjlj-eh", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2Fconfig%2Fi386%2Ft-sjlj-eh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2Fconfig%2Fi386%2Ft-sjlj-eh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-sjlj-eh?ref=3cbfaf984602e3b1eabba8ec279a1aceb0379224", "patch": "@@ -0,0 +1,3 @@\n+\n+# We are using SjLj EH.\n+EH_MODEL = sjlj"}, {"sha": "f99fd502fdfbebc3735c92326015e16934dfe0fc", "filename": "gcc/mkmap-flat.awk", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2Fmkmap-flat.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cbfaf984602e3b1eabba8ec279a1aceb0379224/gcc%2Fmkmap-flat.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmkmap-flat.awk?ref=3cbfaf984602e3b1eabba8ec279a1aceb0379224", "patch": "@@ -93,8 +93,7 @@ $1 == \"}\" {\n END {\n \n   if (pe_dll) {\n-    # This matches SHLIB_SONAME in config/i386/t-cygming.\n-    print \"LIBRARY libgcc_s_1.dll\";\n+    print \"LIBRARY \" pe_dll;\n     print \"EXPORTS\";\n   }\n "}]}