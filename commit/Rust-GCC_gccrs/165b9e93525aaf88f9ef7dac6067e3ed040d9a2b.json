{"sha": "165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY1YjllOTM1MjVhYWY4OGY5ZWY3ZGFjNjA2N2UzZWQwNDBkOWEyYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-12-02T22:39:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-12-02T22:39:12Z"}, "message": "re PR lto/59326 (FAIL: gcc.dg/vect/vect-simd-clone-*.c)\n\n\tPR lto/59326\n\t* gcc.target/i386/i386.exp (check_effective_target_avx2): Move to...\n\t* lib/target-supports.exp (check_effective_target_avx2): ... here.\n\t(check_effective_target_vect_simd_clones): New.\n\t* gcc.dg/vect/vect-simd-clone-1.c: Add dg-require-effective-target\n\tvect_simd_clones.\n\t* gcc.dg/vect/vect-simd-clone-2.c: Likewise.\n\t* gcc.dg/vect/vect-simd-clone-3.c: Likewise.\n\t* gcc.dg/vect/vect-simd-clone-4.c: Likewise.\n\t* gcc.dg/vect/vect-simd-clone-5.c: Likewise.\n\t* gcc.dg/vect/vect-simd-clone-6.c: Likewise.\n\t* gcc.dg/vect/vect-simd-clone-7.c: Likewise.\n\t* gcc.dg/vect/vect-simd-clone-8.c: Likewise.\n\t* gcc.dg/vect/vect-simd-clone-9.c: Likewise.\n\t* gcc.dg/vect/vect-simd-clone-10.c: Likewise.\n\t* gcc.dg/vect/vect-simd-clone-11.c: Likewise.\n\t* gcc.dg/vect/vect-simd-clone-12.c: Likewise.\n\nFrom-SVN: r205606", "tree": {"sha": "9d89a243c9dcdd630a29bc2d902cefc808da885e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d89a243c9dcdd630a29bc2d902cefc808da885e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "858c19053beed37c2715ba2d49426d2154beaa1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/858c19053beed37c2715ba2d49426d2154beaa1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/858c19053beed37c2715ba2d49426d2154beaa1e"}], "stats": {"total": 82, "additions": 70, "deletions": 12}, "files": [{"sha": "b9c2b6e719837ab24d3ab499e9563c2a97fc1c8f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "patch": "@@ -1,3 +1,23 @@\n+2013-12-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR lto/59326\n+\t* gcc.target/i386/i386.exp (check_effective_target_avx2): Move to...\n+\t* lib/target-supports.exp (check_effective_target_avx2): ... here.\n+\t(check_effective_target_vect_simd_clones): New.\n+\t* gcc.dg/vect/vect-simd-clone-1.c: Add dg-require-effective-target\n+\tvect_simd_clones.\n+\t* gcc.dg/vect/vect-simd-clone-2.c: Likewise.\n+\t* gcc.dg/vect/vect-simd-clone-3.c: Likewise.\n+\t* gcc.dg/vect/vect-simd-clone-4.c: Likewise.\n+\t* gcc.dg/vect/vect-simd-clone-5.c: Likewise.\n+\t* gcc.dg/vect/vect-simd-clone-6.c: Likewise.\n+\t* gcc.dg/vect/vect-simd-clone-7.c: Likewise.\n+\t* gcc.dg/vect/vect-simd-clone-8.c: Likewise.\n+\t* gcc.dg/vect/vect-simd-clone-9.c: Likewise.\n+\t* gcc.dg/vect/vect-simd-clone-10.c: Likewise.\n+\t* gcc.dg/vect/vect-simd-clone-11.c: Likewise.\n+\t* gcc.dg/vect/vect-simd-clone-12.c: Likewise.\n+\n 2013-12-02  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* gcc.dg/pr56997-4.c: New testcase."}, {"sha": "9fdd056388997ee08fb372cb9cf929c093dc848c", "filename": "gcc/testsuite/gcc.dg/vect/vect-simd-clone-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-1.c?ref=165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target vect_simd_clones } */\n /* { dg-additional-options \"-fopenmp-simd\" } */\n /* { dg-additional-options \"-mavx\" { target avx_runtime } } */\n "}, {"sha": "923a9453c25f92397047a2e7512abc6e389d2774", "filename": "gcc/testsuite/gcc.dg/vect/vect-simd-clone-10.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-10.c?ref=165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target vect_simd_clones } */\n /* { dg-additional-options \"-fopenmp-simd\" } */\n /* { dg-additional-options \"-mavx\" { target avx_runtime } } */\n /* { dg-additional-sources vect-simd-clone-10a.c } */"}, {"sha": "a04530e251eb836b91c8b4b3fcd5ac4f1d3c022c", "filename": "gcc/testsuite/gcc.dg/vect/vect-simd-clone-11.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-11.c?ref=165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target vect_simd_clones } */\n /* { dg-additional-options \"-fopenmp-simd\" } */\n /* { dg-additional-options \"-mavx\" { target avx_runtime } } */\n "}, {"sha": "279abd7c6824e29d3160733aef29ce3e998524ef", "filename": "gcc/testsuite/gcc.dg/vect/vect-simd-clone-12.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-12.c?ref=165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target vect_simd_clones } */\n /* { dg-additional-options \"-fopenmp-simd\" } */\n /* { dg-additional-options \"-mavx\" { target avx_runtime } } */\n /* { dg-additional-sources vect-simd-clone-12a.c } */"}, {"sha": "0eae49db97aea388b87ed014d573431ef26ae613", "filename": "gcc/testsuite/gcc.dg/vect/vect-simd-clone-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-2.c?ref=165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target vect_simd_clones } */\n /* { dg-additional-options \"-fopenmp-simd\" } */\n /* { dg-additional-options \"-mavx\" { target avx_runtime } } */\n "}, {"sha": "857c6f783e3cdf4968eb364904ce83f7fad88541", "filename": "gcc/testsuite/gcc.dg/vect/vect-simd-clone-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-3.c?ref=165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target vect_simd_clones } */\n /* { dg-additional-options \"-fopenmp-simd\" } */\n /* { dg-additional-options \"-mavx\" { target avx_runtime } } */\n "}, {"sha": "c64f1b0bfe5563f64f8cc20f39beef666ad82320", "filename": "gcc/testsuite/gcc.dg/vect/vect-simd-clone-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-4.c?ref=165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target vect_simd_clones } */\n /* { dg-additional-options \"-fopenmp-simd\" } */\n /* { dg-additional-options \"-mavx\" { target avx_runtime } } */\n "}, {"sha": "1d2b067a7d5281c756ea7ae3ab401cdde66fca58", "filename": "gcc/testsuite/gcc.dg/vect/vect-simd-clone-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-5.c?ref=165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target vect_simd_clones } */\n /* { dg-additional-options \"-fopenmp-simd\" } */\n /* { dg-additional-options \"-mavx\" { target avx_runtime } } */\n "}, {"sha": "26995da86e3ece87bfe437809d8196dfe842a593", "filename": "gcc/testsuite/gcc.dg/vect/vect-simd-clone-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-6.c?ref=165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target vect_simd_clones } */\n /* { dg-additional-options \"-fopenmp-simd\" } */\n /* { dg-additional-options \"-mavx\" { target avx_runtime } } */\n "}, {"sha": "2745c5e41d198ad1dd90e7b8fc97fc09865f34ca", "filename": "gcc/testsuite/gcc.dg/vect/vect-simd-clone-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-7.c?ref=165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target vect_simd_clones } */\n /* { dg-additional-options \"-fopenmp-simd\" } */\n /* { dg-additional-options \"-mavx\" { target avx_runtime } } */\n "}, {"sha": "e0b09b645d44f373dd7d78cd8e15cb3f10eda1f4", "filename": "gcc/testsuite/gcc.dg/vect/vect-simd-clone-8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-8.c?ref=165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target vect_simd_clones } */\n /* { dg-additional-options \"-fopenmp-simd\" } */\n /* { dg-additional-options \"-mavx\" { target avx_runtime } } */\n "}, {"sha": "0c5ff4fa4382d908de762fe13f3dec48dd559226", "filename": "gcc/testsuite/gcc.dg/vect/vect-simd-clone-9.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-9.c?ref=165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target vect_simd_clones } */\n /* { dg-additional-options \"-fopenmp-simd\" } */\n /* { dg-additional-options \"-mavx\" { target avx_runtime } } */\n "}, {"sha": "c7c26766bc214a586a9fc5a65cb455ac085e2aa8", "filename": "gcc/testsuite/gcc.target/i386/i386.exp", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp?ref=165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "patch": "@@ -209,18 +209,6 @@ proc check_effective_target_lzcnt { } {\n     } \"-mlzcnt\" ]\n }\n \n-# Return 1 if avx2 instructions can be compiled.\n-proc check_effective_target_avx2 { } {\n-    return [check_no_compiler_messages avx2 object {\n-\ttypedef long long __v4di __attribute__ ((__vector_size__ (32)));\n-\t__v4di\n-\tmm256_is32_andnotsi256  (__v4di __X, __v4di __Y)\n-        {\n-\t   return __builtin_ia32_andnotsi256 (__X, __Y);\n-\t}\n-    } \"-O0 -mavx2\" ]\n-}\n-\n # Return 1 if bmi instructions can be compiled.\n proc check_effective_target_bmi { } {\n     return [check_no_compiler_messages bmi object {"}, {"sha": "e0f097d624185bca1c6462f0e704e73e5fa686b2", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165b9e93525aaf88f9ef7dac6067e3ed040d9a2b/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=165b9e93525aaf88f9ef7dac6067e3ed040d9a2b", "patch": "@@ -2146,6 +2146,32 @@ proc check_effective_target_vect_floatuint_cvt { } {\n     return $et_vect_floatuint_cvt_saved\n }\n \n+# Return 1 if the target supports #pragma omp declare simd, 0 otherwise.\n+#\n+# This won't change for different subtargets so cache the result.\n+\n+proc check_effective_target_vect_simd_clones { } {\n+    global et_vect_simd_clones_saved\n+\n+    if [info exists et_vect_simd_clones_saved] {\n+\tverbose \"check_effective_target_vect_simd_clones: using cached result\" 2\n+    } else {\n+\tset et_vect_simd_clones_saved 0\n+\tif { [istarget i?86-*-*] || [istarget x86_64-*-*] } {\n+\t    # On i?86/x86_64 #pragma omp declare simd builds a sse2, avx and\n+\t    # avx2 clone.  Only the right clone for the specified arch will be\n+\t    # chosen, but still we need to at least be able to assemble\n+\t    # avx2.\n+\t    if { [check_effective_target_avx2] } {\n+\t\tset et_vect_simd_clones_saved 1\n+\t    }\n+\t}\n+    }\n+\n+    verbose \"check_effective_target_vect_simd_clones: returning $et_vect_simd_clones_saved\" 2\n+    return $et_vect_simd_clones_saved\n+}\n+\n # Return 1 if this is a AArch64 target supporting big endian\n proc check_effective_target_aarch64_big_endian { } {\n     return [check_no_compiler_messages aarch64_big_endian assembly {\n@@ -5106,6 +5132,18 @@ proc check_effective_target_avx { } {\n     } \"-O2 -mavx\" ]\n }\n \n+# Return 1 if avx2 instructions can be compiled.\n+proc check_effective_target_avx2 { } {\n+    return [check_no_compiler_messages avx2 object {\n+\ttypedef long long __v4di __attribute__ ((__vector_size__ (32)));\n+\t__v4di\n+\tmm256_is32_andnotsi256  (__v4di __X, __v4di __Y)\n+        {\n+\t   return __builtin_ia32_andnotsi256 (__X, __Y);\n+\t}\n+    } \"-O0 -mavx2\" ]\n+}\n+\n # Return 1 if sse instructions can be compiled.\n proc check_effective_target_sse { } {\n     return [check_no_compiler_messages sse object {"}]}