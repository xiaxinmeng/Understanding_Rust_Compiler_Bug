{"sha": "aa54df09011ad2e4a9f735c04d4f018cad0fe2b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE1NGRmMDkwMTFhZDJlNGE5ZjczNWMwNGQ0ZjAxOGNhZDBmZTJiMg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-08-10T12:32:40Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-08-10T12:32:40Z"}, "message": "init.c (build_aggr_init): Reject bogus array initializers early.\n\n\t* init.c (build_aggr_init): Reject bogus array initializers\n\tearly.\n\nFrom-SVN: r35605", "tree": {"sha": "bc2037fcbc2f3005040ea333b55d9ae3aa6e6ccd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc2037fcbc2f3005040ea333b55d9ae3aa6e6ccd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa54df09011ad2e4a9f735c04d4f018cad0fe2b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa54df09011ad2e4a9f735c04d4f018cad0fe2b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa54df09011ad2e4a9f735c04d4f018cad0fe2b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa54df09011ad2e4a9f735c04d4f018cad0fe2b2/comments", "author": null, "committer": null, "parents": [{"sha": "af6573958166cb5d27a00fa31de4e54972161469", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af6573958166cb5d27a00fa31de4e54972161469", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af6573958166cb5d27a00fa31de4e54972161469"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "dc4e4c94cfd87286a00dc9b5da6352e73c989864", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa54df09011ad2e4a9f735c04d4f018cad0fe2b2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa54df09011ad2e4a9f735c04d4f018cad0fe2b2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=aa54df09011ad2e4a9f735c04d4f018cad0fe2b2", "patch": "@@ -1,3 +1,8 @@\n+2000-08-10  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* init.c (build_aggr_init): Reject bogus array initializers\n+\tearly.\n+\n 2000-08-09  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* rtti.c (build_dynamic_cast_1): Set \"C\" linkage for new abi"}, {"sha": "c35babb1a3db00531eb662c73ec0cb8f7dcb2c2f", "filename": "gcc/cp/init.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa54df09011ad2e4a9f735c04d4f018cad0fe2b2/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa54df09011ad2e4a9f735c04d4f018cad0fe2b2/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=aa54df09011ad2e4a9f735c04d4f018cad0fe2b2", "patch": "@@ -1186,13 +1186,8 @@ build_aggr_init (exp, init, flags)\n       /* Must arrange to initialize each element of EXP\n \t from elements of INIT.  */\n       tree itype = init ? TREE_TYPE (init) : NULL_TREE;\n-      if (CP_TYPE_QUALS (type) != TYPE_UNQUALIFIED)\n-\t{\n-\t  TREE_TYPE (exp) = TYPE_MAIN_VARIANT (type);\n-\t  if (init)\n-\t    TREE_TYPE (init) = TYPE_MAIN_VARIANT (itype);\n-\t}\n-      if (init && TREE_TYPE (init) == NULL_TREE)\n+      \n+      if (init && !itype)\n \t{\n \t  /* Handle bad initializers like:\n \t     class COMPLEX {\n@@ -1206,9 +1201,15 @@ build_aggr_init (exp, init, flags)\n \t       COMPLEX zees(1.0, 0.0)[10];\n \t     }\n \t  */\n-\t  error (\"bad array initializer\");\n+\t  cp_error (\"bad array initializer\");\n \t  return error_mark_node;\n \t}\n+      if (CP_TYPE_QUALS (type) != TYPE_UNQUALIFIED)\n+\t{\n+\t  TREE_TYPE (exp) = TYPE_MAIN_VARIANT (type);\n+\t  if (init)\n+\t    TREE_TYPE (init) = TYPE_MAIN_VARIANT (itype);\n+\t}\n       stmt_expr = build_vec_init (exp, exp, array_type_nelts (type), init,\n \t\t\t\t  init && same_type_p (TREE_TYPE (init),\n \t\t\t\t\t\t       TREE_TYPE (exp)));"}]}