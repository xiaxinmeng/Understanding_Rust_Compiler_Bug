{"sha": "302f83f948e4bf516488f6d4a293251824b84fda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAyZjgzZjk0OGU0YmY1MTY0ODhmNmQ0YTI5MzI1MTgyNGI4NGZkYQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-05-07T14:44:26Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-05-07T14:44:26Z"}, "message": "re PR testsuite/66046 (UBSan output pattern tests fail on target ARM board.)\n\n\tPR testsuite/66046\n\t* c-c++-common/ubsan/align-6.c: Don't match trailing newlines in the\n\tlast dg-output.\n\t* c-c++-common/ubsan/align-7.c: Likewise.\n\t* c-c++-common/ubsan/bounds-8.c: Likewise.\n\t* c-c++-common/ubsan/float-cast-overflow-9.c: Likewise.\n\t* c-c++-common/ubsan/load-bool-enum.c: Likewise.\n\t* c-c++-common/ubsan/null-1.c: Likewise.\n\t* c-c++-common/ubsan/null-10.c: Likewise.\n\t* c-c++-common/ubsan/null-11.c: Likewise.\n\t* c-c++-common/ubsan/null-2.c: Likewise.\n\t* c-c++-common/ubsan/null-3.c: Likewise.\n\t* c-c++-common/ubsan/null-4.c: Likewise.\n\t* c-c++-common/ubsan/null-5.c: Likewise.\n\t* c-c++-common/ubsan/null-6.c: Likewise.\n\t* c-c++-common/ubsan/null-7.c: Likewise.\n\t* c-c++-common/ubsan/null-8.c: Likewise.\n\t* c-c++-common/ubsan/null-9.c: Likewise.\n\t* c-c++-common/ubsan/object-size-1.c: Likewise.\n\t* c-c++-common/ubsan/object-size-10.c: Likewise.\n\t* c-c++-common/ubsan/object-size-4.c: Likewise.\n\t* c-c++-common/ubsan/object-size-5.c: Likewise.\n\t* c-c++-common/ubsan/object-size-7.c: Likewise.\n\t* c-c++-common/ubsan/object-size-8.c: Likewise.\n\t* c-c++-common/ubsan/object-size-9.c: Likewise.\n\t* c-c++-common/ubsan/overflow-add-2.c: Likewise.\n\t* c-c++-common/ubsan/overflow-int128.c: Likewise.\n\t* c-c++-common/ubsan/overflow-mul-2.c: Likewise.\n\t* c-c++-common/ubsan/overflow-mul-4.c: Likewise.\n\t* c-c++-common/ubsan/overflow-negate-1.c: Likewise.\n\t* c-c++-common/ubsan/overflow-negate-3.c: Likewise.\n\t* c-c++-common/ubsan/overflow-sub-2.c: Likewise.\n\t* c-c++-common/ubsan/overflow-sub-4.c: Likewise.\n\t* c-c++-common/ubsan/pr59333.c: Likewise.\n\t* c-c++-common/ubsan/pr59667.c: Likewise.\n\t* c-c++-common/ubsan/pr60613-2.c: Likewise.\n\t* c-c++-common/ubsan/pr60636.c: Likewise.\n\t* c-c++-common/ubsan/pr63802.c: Likewise.\n\t* c-c++-common/ubsan/recovery-1.c: Likewise.\n\t* c-c++-common/ubsan/recovery-3.c: Likewise.\n\t* c-c++-common/ubsan/shift-1.c: Likewise.\n\t* c-c++-common/ubsan/shift-2.c: Likewise.\n\t* c-c++-common/ubsan/shift-4.c: Likewise.\n\t* c-c++-common/ubsan/shift-7.c: Likewise.\n\t* c-c++-common/ubsan/undefined-2.c: Likewise.\n\t* c-c++-common/ubsan/vla-1.c: Likewise.\n\t* g++.dg/ubsan/null-1.C: Likewise.\n\t* g++.dg/ubsan/null-3.C: Likewise.\n\t* g++.dg/ubsan/null-4.C: Likewise.\n\t* g++.dg/ubsan/vptr-8.C: Likewise.\n\t* g++.dg/ubsan/vptr-9.C: Likewise.\n\t* gcc.dg/ubsan/bounds-2.c: Likewise.\n\t* gcc.dg/ubsan/object-size-9.c: Likewise.\n\nFrom-SVN: r222878", "tree": {"sha": "34e12fb3701249e0f58c00af0585ca196f3cc478", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34e12fb3701249e0f58c00af0585ca196f3cc478"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/302f83f948e4bf516488f6d4a293251824b84fda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/302f83f948e4bf516488f6d4a293251824b84fda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/302f83f948e4bf516488f6d4a293251824b84fda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/302f83f948e4bf516488f6d4a293251824b84fda/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "48451e8f3c819d5f706596e32cf6d9b3cb600b5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48451e8f3c819d5f706596e32cf6d9b3cb600b5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48451e8f3c819d5f706596e32cf6d9b3cb600b5b"}], "stats": {"total": 158, "additions": 107, "deletions": 51}, "files": [{"sha": "5d2b0a9267ac428f9daada536c5c6cf8c9c7a1eb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -1,3 +1,59 @@\n+2015-05-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR testsuite/66046\n+\t* c-c++-common/ubsan/align-6.c: Don't match trailing newlines in the\n+\tlast dg-output.\n+\t* c-c++-common/ubsan/align-7.c: Likewise.\n+\t* c-c++-common/ubsan/bounds-8.c: Likewise.\n+\t* c-c++-common/ubsan/float-cast-overflow-9.c: Likewise.\n+\t* c-c++-common/ubsan/load-bool-enum.c: Likewise.\n+\t* c-c++-common/ubsan/null-1.c: Likewise.\n+\t* c-c++-common/ubsan/null-10.c: Likewise.\n+\t* c-c++-common/ubsan/null-11.c: Likewise.\n+\t* c-c++-common/ubsan/null-2.c: Likewise.\n+\t* c-c++-common/ubsan/null-3.c: Likewise.\n+\t* c-c++-common/ubsan/null-4.c: Likewise.\n+\t* c-c++-common/ubsan/null-5.c: Likewise.\n+\t* c-c++-common/ubsan/null-6.c: Likewise.\n+\t* c-c++-common/ubsan/null-7.c: Likewise.\n+\t* c-c++-common/ubsan/null-8.c: Likewise.\n+\t* c-c++-common/ubsan/null-9.c: Likewise.\n+\t* c-c++-common/ubsan/object-size-1.c: Likewise.\n+\t* c-c++-common/ubsan/object-size-10.c: Likewise.\n+\t* c-c++-common/ubsan/object-size-4.c: Likewise.\n+\t* c-c++-common/ubsan/object-size-5.c: Likewise.\n+\t* c-c++-common/ubsan/object-size-7.c: Likewise.\n+\t* c-c++-common/ubsan/object-size-8.c: Likewise.\n+\t* c-c++-common/ubsan/object-size-9.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-add-2.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-int128.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-mul-2.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-mul-4.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-negate-1.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-negate-3.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-sub-2.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-sub-4.c: Likewise.\n+\t* c-c++-common/ubsan/pr59333.c: Likewise.\n+\t* c-c++-common/ubsan/pr59667.c: Likewise.\n+\t* c-c++-common/ubsan/pr60613-2.c: Likewise.\n+\t* c-c++-common/ubsan/pr60636.c: Likewise.\n+\t* c-c++-common/ubsan/pr63802.c: Likewise.\n+\t* c-c++-common/ubsan/recovery-1.c: Likewise.\n+\t* c-c++-common/ubsan/recovery-3.c: Likewise.\n+\t* c-c++-common/ubsan/shift-1.c: Likewise.\n+\t* c-c++-common/ubsan/shift-2.c: Likewise.\n+\t* c-c++-common/ubsan/shift-4.c: Likewise.\n+\t* c-c++-common/ubsan/shift-7.c: Likewise.\n+\t* c-c++-common/ubsan/undefined-2.c: Likewise.\n+\t* c-c++-common/ubsan/vla-1.c: Likewise.\n+\t* g++.dg/ubsan/null-1.C: Likewise.\n+\t* g++.dg/ubsan/null-3.C: Likewise.\n+\t* g++.dg/ubsan/null-4.C: Likewise.\n+\t* g++.dg/ubsan/vptr-8.C: Likewise.\n+\t* g++.dg/ubsan/vptr-9.C: Likewise.\n+\t* gcc.dg/ubsan/bounds-2.c: Likewise.\n+\t* gcc.dg/ubsan/object-size-9.c: Likewise.\n+\n 2015-05-07  Jeff Law  <law@redhat.com>\n \n \t* gcc.dg/tree-ssa/shorten-1.c: New test."}, {"sha": "3364746fb277d46033d1c5829e48960770fb87e3", "filename": "gcc/testsuite/c-c++-common/ubsan/align-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Falign-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Falign-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Falign-6.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -30,4 +30,4 @@ main ()\n /* { dg-output \"\\.c:15:\\[0-9]*: \\[^\\n\\r]*member access within misaligned address 0x\\[0-9a-fA-F]* for type 'struct S', which requires \\[48] byte alignment.*\" } */\n /* { dg-output \"\\.c:16:\\[0-9]*: \\[^\\n\\r]*member access within misaligned address 0x\\[0-9a-fA-F]* for type 'struct S', which requires \\[48] byte alignment.*\" } */\n /* { dg-output \"\\.c:17:\\[0-9]*: \\[^\\n\\r]*member access within misaligned address 0x\\[0-9a-fA-F]* for type 'struct S', which requires \\[48] byte alignment.*\" } */\n-/* { dg-output \"\\.c:18:\\[0-9]*: \\[^\\n\\r]*member access within misaligned address 0x\\[0-9a-fA-F]* for type 'struct S', which requires \\[48] byte alignment.*\" } */\n+/* { dg-output \"\\.c:18:\\[0-9]*: \\[^\\n\\r]*member access within misaligned address 0x\\[0-9a-fA-F]* for type 'struct S', which requires \\[48] byte alignment\" } */"}, {"sha": "b441ef627dba7536ed510bccc4fbdd2d1c9f8f74", "filename": "gcc/testsuite/c-c++-common/ubsan/align-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Falign-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Falign-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Falign-7.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -28,6 +28,6 @@ main ()\n   return 0;\n }\n \n-/* { dg-output \"\\.c:16:\\[0-9]*: \\[^\\n\\r]*member access within misaligned address 0x\\[0-9a-fA-F]* for type 'struct S', which requires \\[48] byte alignment.*\" } */\n+/* { dg-output \"\\.c:16:\\[0-9]*: \\[^\\n\\r]*member access within misaligned address 0x\\[0-9a-fA-F]* for type 'struct S', which requires \\[48] byte alignment\" } */\n /* { dg-final { scan-tree-dump-times \"Optimizing\" 4 \"sanopt\"} } */\n /* { dg-final { cleanup-tree-dump \"sanopt\" } } */"}, {"sha": "20f938269f4ba458bea328a66b6fcbff47928665", "filename": "gcc/testsuite/c-c++-common/ubsan/bounds-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-8.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -10,4 +10,4 @@ main (void)\n   (*a)[2] = 1;\n }\n \n-/* { dg-output \"index 2 out of bounds for type 'int \\\\\\[1\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"index 2 out of bounds for type 'int \\\\\\[1\\\\\\]'\" } */"}, {"sha": "202ce7d8c5585cd8545dd4e629bbb7dce19a0529", "filename": "gcc/testsuite/c-c++-common/ubsan/float-cast-overflow-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-9.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -58,4 +58,4 @@\n /* { dg-output \"\\[^\\n\\r]*value <unknown> is outside the range of representable values of type '__int128'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" { target int128 } } */\n /* { dg-output \"\\[^\\n\\r]*value <unknown> is outside the range of representable values of type '__int128'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" { target int128 } } */\n /* { dg-output \"\\[^\\n\\r]*value <unknown> is outside the range of representable values of type '__int128 unsigned'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" { target int128 } } */\n-/* { dg-output \"\\[^\\n\\r]*value <unknown> is outside the range of representable values of type '__int128 unsigned'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" { target int128 } } */\n+/* { dg-output \"\\[^\\n\\r]*value <unknown> is outside the range of representable values of type '__int128 unsigned'\" { target int128 } } */"}, {"sha": "c7f0683c50565c299dca68652fbc2714ad1af99c", "filename": "gcc/testsuite/c-c++-common/ubsan/load-bool-enum.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fload-bool-enum.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fload-bool-enum.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fload-bool-enum.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -11,7 +11,7 @@ __attribute__((noinline, noclone)) enum A\n foo (bool *p)\n {\n   *p = b;   /* { dg-output \"load-bool-enum.c:13:\\[^\\n\\r]*runtime error: \\[^\\n\\r]*load of value 4, which is not a valid value for type '(_B|b)ool'\\[^\\n\\r]*(\\n|\\r\\n|\\r)*\" } */\n-  return a; /* { dg-output \"\\[^\\n\\r]*load-bool-enum.c:14:\\[^\\n\\r]*runtime error: \\[^\\n\\r]*load of value 9, which is not a valid value for type 'A'\\[^\\n\\r]*(\\n|\\r\\n|\\r)*\" { target c++ } } */\n+  return a; /* { dg-output \"\\[^\\n\\r]*load-bool-enum.c:14:\\[^\\n\\r]*runtime error: \\[^\\n\\r]*load of value 9, which is not a valid value for type 'A'\" { target c++ } } */\n }\n \n int"}, {"sha": "26dc22c6dd9e5c64f97ae138e9b076803dea9670", "filename": "gcc/testsuite/c-c++-common/ubsan/null-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-1.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -9,4 +9,4 @@ main (void)\n   return *p;\n }\n \n-/* { dg-output \"load of null pointer of type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"load of null pointer of type 'int'\" } */"}, {"sha": "2ff948565d52b40fa9455ee3eaefde8bc57f85a1", "filename": "gcc/testsuite/c-c++-common/ubsan/null-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-10.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -10,4 +10,4 @@ main (void)\n   return  0;\n }\n \n-/* { dg-output \"load of null pointer of type 'short int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"load of null pointer of type 'short int'\" } */"}, {"sha": "659a5f2a07ec7fe70861b87e72df476e585492fb", "filename": "gcc/testsuite/c-c++-common/ubsan/null-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-11.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -13,4 +13,4 @@ main (void)\n   return (*s)->i;\n }\n \n-/* { dg-output \"load of null pointer of type 'struct S \\\\*'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"load of null pointer of type 'struct S \\\\*'\" } */"}, {"sha": "de9d519086946e6cffaf24cd9c4fd3b87186db9f", "filename": "gcc/testsuite/c-c++-common/ubsan/null-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-2.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -9,4 +9,4 @@ main (void)\n   return ***ppp;\n }\n \n-/* { dg-output \"load of null pointer of type 'int \\\\*\\\\*'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"load of null pointer of type 'int \\\\*\\\\*'\" } */"}, {"sha": "e9e8b7bd2133736863b1f63cc2b70c14c4b9f409", "filename": "gcc/testsuite/c-c++-common/ubsan/null-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-3.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -15,4 +15,4 @@ main (void)\n   return foo (*p);\n }\n \n-/* { dg-output \"load of null pointer of type 'int \\\\*'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"load of null pointer of type 'int \\\\*'\" } */"}, {"sha": "09018164fc5b24696da6bd5d53b4ac692cb3a8ab", "filename": "gcc/testsuite/c-c++-common/ubsan/null-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-4.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -11,4 +11,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"load of null pointer of type 'complex double'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"load of null pointer of type 'complex double'\" } */"}, {"sha": "fb2d49381cdaa1df6ff17dfb47b9634ff946f15c", "filename": "gcc/testsuite/c-c++-common/ubsan/null-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-5.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -13,4 +13,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"load of null pointer of type 'volatile const complex float'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"load of null pointer of type 'volatile const complex float'\" } */"}, {"sha": "12397936354b2f94efb7e96e97a57ddeebabb4b8", "filename": "gcc/testsuite/c-c++-common/ubsan/null-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-6.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -10,4 +10,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"store to null pointer of type 'long unsigned int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"store to null pointer of type 'long unsigned int'\" } */"}, {"sha": "19c21da45626660ad587c1e1fbbfbd1d62b9f909", "filename": "gcc/testsuite/c-c++-common/ubsan/null-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-7.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -14,4 +14,4 @@ main (void)\n   return *gao ();\n }\n \n-/* { dg-output \"load of null pointer of type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"load of null pointer of type 'int'\" } */"}, {"sha": "73bef75c377af2abd8120b4c6756b6fad72449e0", "filename": "gcc/testsuite/c-c++-common/ubsan/null-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-8.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -13,4 +13,4 @@ main (void)\n   return s->i;\n }\n \n-/* { dg-output \"member access within null pointer of type 'struct S'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"member access within null pointer of type 'struct S'\" } */"}, {"sha": "0b993cfaa76795964072bd9d5d67baaa51c71ef7", "filename": "gcc/testsuite/c-c++-common/ubsan/null-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-9.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -13,4 +13,4 @@ main (void)\n   return u->i;\n }\n \n-/* { dg-output \"member access within null pointer of type 'union U'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"member access within null pointer of type 'union U'\" } */"}, {"sha": "f4ea8bb46e7bf7e99af28e141fa55da2fbadf782", "filename": "gcc/testsuite/c-c++-common/ubsan/object-size-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-1.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -102,7 +102,7 @@ f4 (void)\n /* { dg-output \"\\[^\\n\\r]*store to address \\[^\\n\\r]* with insufficient space for an object of type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*note: pointer points here\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*\\\\^\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*\\\\^\" } */\n \n __attribute__((noinline, noclone)) void\n f5 (int *p)"}, {"sha": "cafab51913077ce4ad99353ba13f9b01da018282", "filename": "gcc/testsuite/c-c++-common/ubsan/object-size-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-10.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -56,7 +56,7 @@ fn5 (int i, int j)\n /* { dg-output \"\\[^\\n\\r]*load of address \\[^\\n\\r]* with insufficient space for an object of type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*note: pointer points here\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*\\\\^\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*\\\\^\" } */\n \n __attribute__ ((noinline, noclone)) int\n fn6 (int i)"}, {"sha": "7e55a0fe35d5c9755ff39bf98c101766fcf50574", "filename": "gcc/testsuite/c-c++-common/ubsan/object-size-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-4.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -28,4 +28,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*load of address \\[^\\n\\r]* with insufficient space for an object of type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*note: pointer points here\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*\\\\^\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*\\\\^\" } */"}, {"sha": "6d10fdf73b0fe9ce95435d7193615330124a6661", "filename": "gcc/testsuite/c-c++-common/ubsan/object-size-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-5.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -27,7 +27,7 @@ f1 (int i)\n /* { dg-output \"\\[^\\n\\r]*load of address \\[^\\n\\r]* with insufficient space for an object of type 'char'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*note: pointer points here\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*\\\\^\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*\\\\^\" } */\n \n int\n main ()"}, {"sha": "268de64df6ebe64f13de7b06e6c785d561a95a60", "filename": "gcc/testsuite/c-c++-common/ubsan/object-size-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-7.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -26,4 +26,4 @@ main ()\n /* { dg-output \"load of address \\[^\\n\\r]* with insufficient space for an object of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*note: pointer points here\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*\\\\^\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*\\\\^\" } */"}, {"sha": "f09a445f378f55e8c9ff8f66da80a449e18970fb", "filename": "gcc/testsuite/c-c++-common/ubsan/object-size-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-8.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -29,4 +29,4 @@ main (void)\n /* { dg-output \"load of address \\[^\\n\\r]* with insufficient space for an object of type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*note: pointer points here\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*\\\\^\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*\\\\^\" } */"}, {"sha": "379744d621204df84479876f03e5f5af5dd24eec", "filename": "gcc/testsuite/c-c++-common/ubsan/object-size-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fobject-size-9.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -81,7 +81,7 @@ f5 (int i)\n /* { dg-output \"\\[^\\n\\r]*load of address \\[^\\n\\r]* with insufficient space for an object of type 'unsigned int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*note: pointer points here\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*\\\\^\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*\\\\^\" } */\n \n int\n main (void)"}, {"sha": "b104d6158fed8c062f141d219437e90542db481d", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-add-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-add-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-add-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-add-2.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -57,4 +57,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: \\[^\\n\\r]* \\\\+ 1024 cannot be represented in type 'long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1 cannot be represented in type 'long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: -1 \\\\+ -\\[^\\n\\r]* cannot be represented in type 'long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1024 cannot be represented in type 'long int'\\[^\\n\\r]*\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1024 cannot be represented in type 'long int'\" } */"}, {"sha": "400f25b01e10532f91c8ea385042dd695158691d", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-int128.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-int128.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-int128.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-int128.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -44,4 +44,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: 0x80000000000000000000000000000000 - 1 cannot be represented in type '__int128'(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: 0x80000000000000000000000000000064 \\\\+ -1024 cannot be represented in type '__int128'(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: 0x7fffffffffffffffffffffffffffffff \\\\* 2 cannot be represented in type '__int128'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*negation of 0x80000000000000000000000000000000 cannot be represented in type '__int128'; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*negation of 0x80000000000000000000000000000000 cannot be represented in type '__int128'; cast to an unsigned type to negate this value to itself\" } */"}, {"sha": "1ccc3f736b62ae4618e33b9c3d49365b7d12e4e7", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-mul-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-2.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -23,4 +23,4 @@ main (void)\n /* { dg-output \"signed integer overflow: 2147483647 \\\\* 2 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2 \\\\* 2147483647 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: \\[^\\n\\r]* \\\\* 2 cannot be represented in type 'long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2 \\\\* \\[^\\n\\r]* cannot be represented in type 'long int'\\[^\\n\\r]*\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2 \\\\* \\[^\\n\\r]* cannot be represented in type 'long int'\" } */"}, {"sha": "1878451192e8a12c4429f197b47a2833f04676d9", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-mul-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-4.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -83,4 +83,4 @@ main ()\n /* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:48:\\[^\\n\\r]*signed integer overflow: 4257126176 \\\\* 2166572391 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:49:\\[^\\n\\r]*signed integer overflow: -4257126176 \\\\* -2166572391 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:50:\\[^\\n\\r]*signed integer overflow: -4257126176 \\\\* 2166572391 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:51:\\[^\\n\\r]*signed integer overflow: 4257126176 \\\\* -2166572391 cannot be represented in type 'long long int'\\[^\\n\\r]*\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:51:\\[^\\n\\r]*signed integer overflow: 4257126176 \\\\* -2166572391 cannot be represented in type 'long long int'\" } */"}, {"sha": "87b47974deee05d3f1d35e74e34815837c4f88a0", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-negate-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-negate-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-negate-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-negate-1.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -35,4 +35,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*negation of -\\[^\\n\\r]* cannot be represented in type 'long int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*negation of -9223372036854775808 cannot be represented in type 'long long int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*negation of -9223372036854775808 cannot be represented in type 'long long int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*negation of -9223372036854775808 cannot be represented in type 'long long int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*\" } */\n+/* { dg-output \"\\[^\\n\\r]*negation of -9223372036854775808 cannot be represented in type 'long long int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\" } */"}, {"sha": "85acce8e729b30e21882268f4c187073b4e8ef1b", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-negate-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-negate-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-negate-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-negate-3.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -18,4 +18,4 @@ main ()\n /* { dg-output \"negation of -2147483648 cannot be represented in type 'int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*negation of -2147483648 cannot be represented in type 'int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*negation of -2147483648 cannot be represented in type 'int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*negation of -2147483648 cannot be represented in type 'int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*negation of -2147483648 cannot be represented in type 'int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\" } */"}, {"sha": "cc94061634ecf824526922762b901d9a72c9f86b", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-sub-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-sub-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-sub-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-sub-2.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -51,4 +51,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* - 1 cannot be represented in type 'long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* - 1024 cannot be represented in type 'long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* - 1 cannot be represented in type 'long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* - 1048576 cannot be represented in type 'long int'\\[^\\n\\r]*\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* - 1048576 cannot be represented in type 'long int'\" } */"}, {"sha": "d3fb9baeec9f4b6111188779b8e0bca3e05a3c92", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-sub-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-sub-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-sub-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-sub-4.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -16,4 +16,4 @@ main ()\n }\n \n /* { dg-output \"negation of -2147483648 cannot be represented in type 'int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 0 - -2147483648 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 0 - -2147483648 cannot be represented in type 'int'\" } */"}, {"sha": "b68775702be1341419e879a04385f3e88f3cdb84", "filename": "gcc/testsuite/c-c++-common/ubsan/pr59333.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr59333.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr59333.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr59333.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -15,4 +15,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"signed integer overflow: 2 \\\\+ 9223372036854775807 cannot be represented in type 'long long int'\\[^\\n\\r]*\" } */\n+/* { dg-output \"signed integer overflow: 2 \\\\+ 9223372036854775807 cannot be represented in type 'long long int'\" } */"}, {"sha": "d5346611026734cabdeece86647e16041829c3bd", "filename": "gcc/testsuite/c-c++-common/ubsan/pr59667.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr59667.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr59667.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr59667.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -11,4 +11,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"store to null pointer of type 'float'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"store to null pointer of type 'float'\" } */"}, {"sha": "ed33e9341f3ead8766c8c8dc7c1629324b0fbf35", "filename": "gcc/testsuite/c-c++-common/ubsan/pr60613-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr60613-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr60613-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr60613-2.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -33,4 +33,4 @@ main ()\n }\n \n /* { dg-output \"signed integer overflow: 8 \\\\- -9223372036854775801 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 8 \\\\- -9223372036854775802 cannot be represented in type 'long long int'\\[^\\n\\r]*\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 8 \\\\- -9223372036854775802 cannot be represented in type 'long long int'\" } */"}, {"sha": "41643413755299adaf73fdac08d7e206cd6e7fd9", "filename": "gcc/testsuite/c-c++-common/ubsan/pr60636.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr60636.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr60636.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr60636.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -12,4 +12,4 @@ main ()\n   return 0;\n }\n \n-/* { dg-output \"negation of -9223372036854775808 cannot be represented in type 'long long int'\\[^\\n\\r]*\" } */\n+/* { dg-output \"negation of -9223372036854775808 cannot be represented in type 'long long int'\" } */"}, {"sha": "0ca7461ce957b99a5b278c719b3d4b7029f3fd83", "filename": "gcc/testsuite/c-c++-common/ubsan/pr63802.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr63802.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr63802.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr63802.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -20,4 +20,4 @@ int main ()\n   return 0;\n }\n \n-/* { dg-output \"\\.c:18:\\[0-9]*: \\[^\\n\\r]*member access within misaligned address 0x\\[0-9a-fA-F]* for type 'struct test_struct', which requires 64 byte alignment.*\" } */\n+/* { dg-output \"\\.c:18:\\[0-9]*: \\[^\\n\\r]*member access within misaligned address 0x\\[0-9a-fA-F]* for type 'struct test_struct', which requires 64 byte alignment\" } */"}, {"sha": "62dd6f769f0d8ac7a6cd52f095d20ac4d159cef7", "filename": "gcc/testsuite/c-c++-common/ubsan/recovery-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Frecovery-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Frecovery-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Frecovery-1.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -6,4 +6,4 @@\n /* { dg-output \"shift exponent 152 is too large for \\[^\\n\\r]*-bit type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*shift exponent 153 is too large for \\[^\\n\\r]*-bit type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2147483647 \\\\+ 1 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2147483647 \\\\+ 2 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2147483647 \\\\+ 2 cannot be represented in type 'int'\" } */"}, {"sha": "d1dcd3e8296e9e09bcf7817a2584d4152f8fdd9a", "filename": "gcc/testsuite/c-c++-common/ubsan/recovery-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Frecovery-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Frecovery-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Frecovery-3.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -6,4 +6,4 @@\n /* { dg-output \"shift exponent 152 is too large for \\[^\\n\\r]*-bit type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*shift exponent 153 is too large for \\[^\\n\\r]*-bit type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2147483647 \\\\+ 1 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2147483647 \\\\+ 2 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2147483647 \\\\+ 2 cannot be represented in type 'int'\" } */"}, {"sha": "d770e833df757d53a195645d6a5bbce934a670b1", "filename": "gcc/testsuite/c-c++-common/ubsan/shift-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-1.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -28,4 +28,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*shift exponent 154 is too large for \\[^\\n\\r]*-bit type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*shift exponent 524 is too large for \\[^\\n\\r]*-bit type 'long long unsigned int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*shift exponent 370 is too large for \\[^\\n\\r]*-bit type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*shift exponent 402 is too large for \\[^\\n\\r]*-bit type 'long int'\\[^\\n\\r]*\" } */\n+/* { dg-output \"\\[^\\n\\r]*shift exponent 402 is too large for \\[^\\n\\r]*-bit type 'long int'\" } */"}, {"sha": "23067d8f3d43c2f775d42d9f0a6619e41d2a7824", "filename": "gcc/testsuite/c-c++-common/ubsan/shift-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-2.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -20,4 +20,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*shift exponent -4 is negative\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*shift exponent -5 is negative\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*shift exponent -6 is negative\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*shift exponent -11 is negative\\[^\\n\\r]*\" } */\n+/* { dg-output \"\\[^\\n\\r]*shift exponent -11 is negative\" } */"}, {"sha": "5b539ac22301d5628cfb7755cb38566095dfa6c0", "filename": "gcc/testsuite/c-c++-common/ubsan/shift-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-4.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -11,4 +11,4 @@ main ()\n   return 0;\n }\n \n-/* { dg-output \"shift exponent 120 is too large\\[^\\n\\r]*\" } */\n+/* { dg-output \"shift exponent 120 is too large\" } */"}, {"sha": "5ecd368f98d5c0f77d63ef02fa96fa11742878e8", "filename": "gcc/testsuite/c-c++-common/ubsan/shift-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-7.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -24,4 +24,4 @@ main ()\n }\n \n /* { dg-output \"shift exponent 4294967296 is too large for \\[^\\n\\r]*-bit type 'long long unsigned int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*shift exponent 4294967296 is too large for \\[^\\n\\r]*-bit type 'long long unsigned int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*shift exponent 4294967296 is too large for \\[^\\n\\r]*-bit type 'long long unsigned int'\" } */"}, {"sha": "9f764f80091fc8ad19a9141f16d79ca7ea5da12f", "filename": "gcc/testsuite/c-c++-common/ubsan/undefined-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fundefined-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fundefined-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fundefined-2.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -19,4 +19,4 @@ main ()\n   return 0;\n }\n \n-/* { dg-output \"shift exponent -\\[^\\n\\r]* is negative\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"shift exponent -\\[^\\n\\r]* is negative\" } */"}, {"sha": "52ade3aab7566dce3ca7ef931ac65895005d5e13", "filename": "gcc/testsuite/c-c++-common/ubsan/vla-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fvla-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fvla-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fvla-1.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -116,4 +116,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -6\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -4\\[^\\n\\r]*\" } */\n+/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -4\" } */"}, {"sha": "04e8490fc0856967e9fb43c0eae00dbe5ddc4b93", "filename": "gcc/testsuite/g++.dg/ubsan/null-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fnull-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fnull-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fnull-1.C?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -27,4 +27,4 @@ main (void)\n // { dg-output \"reference binding to null pointer of type 'int'(\\n|\\r\\n|\\r)\" }\n // { dg-output \"\\[^\\n\\r]*reference binding to null pointer of type 'int'(\\n|\\r\\n|\\r)\" }\n // { dg-output \"\\[^\\n\\r]*reference binding to null pointer of type 'const L'(\\n|\\r\\n|\\r)\" }\n-// { dg-output \"\\[^\\n\\r]*reference binding to null pointer of type 'int'(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"\\[^\\n\\r]*reference binding to null pointer of type 'int'\" }"}, {"sha": "0dfb879990b1853471208eace88bf551b02db2fe", "filename": "gcc/testsuite/g++.dg/ubsan/null-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fnull-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fnull-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fnull-3.C?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -17,4 +17,4 @@ main (void)\n // { dg-output \"\\[^\\n\\r]*reference binding to null pointer of type 'int'(\\n|\\r\\n|\\r)\" }\n // { dg-output \"\\[^\\n\\r]*reference binding to null pointer of type 'int'(\\n|\\r\\n|\\r)\" }\n // { dg-output \"\\[^\\n\\r]*reference binding to null pointer of type 'int'(\\n|\\r\\n|\\r)\" }\n-// { dg-output \"\\[^\\n\\r]*reference binding to null pointer of type 'int'(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"\\[^\\n\\r]*reference binding to null pointer of type 'int'\" }"}, {"sha": "397f0b41851620ad0b1037e516f4083078bcc305", "filename": "gcc/testsuite/g++.dg/ubsan/null-4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fnull-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fnull-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fnull-4.C?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -15,6 +15,6 @@ main (void)\n   int &r5 = *p;\n }\n \n-// { dg-output \"reference binding to null pointer of type 'int'(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"reference binding to null pointer of type 'int'\" }\n // { dg-final { scan-tree-dump-times \"Optimizing\" 4 \"sanopt\"} }\n // { dg-final { cleanup-tree-dump \"sanopt\" } }"}, {"sha": "cb6c6ea775b7d0f0da03dd5539997bf9ba52c84e", "filename": "gcc/testsuite/g++.dg/ubsan/vptr-8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-8.C?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -29,4 +29,4 @@ T::~T ()\n // { dg-output \"0x\\[0-9a-fA-F]*: note: object is of type 'T'(\\n|\\r\\n|\\r)\" }\n // { dg-output \"  ?.. .. .. ..  ?.. .. .. ..  ?.. .. .. .. \\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"              ?\\\\^~~~~~~~~~~\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n-// { dg-output \"              ?vptr for 'T'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"              ?vptr for 'T'\" }"}, {"sha": "9fce5841b5e9e78a8acd94f4feda05c7b9773bcd", "filename": "gcc/testsuite/g++.dg/ubsan/vptr-9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-9.C?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -19,4 +19,4 @@ main ()\n // { dg-output \"0x\\[0-9a-fA-F]*: note: object is of type 'U'(\\n|\\r\\n|\\r)\" }\n // { dg-output \"  ?.. .. .. ..  ?.. .. .. ..  ?.. .. .. .. \\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"              ?\\\\^~~~~~~~~~~\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n-// { dg-output \"              ?vptr for 'U'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"              ?vptr for 'U'\" }"}, {"sha": "fb16eb423a872948ac3ec6c66ee19f48a1b99bda", "filename": "gcc/testsuite/gcc.dg/ubsan/bounds-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fbounds-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fbounds-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fbounds-2.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -15,4 +15,4 @@ main ()\n   foo (3, (int (*)[3]) &a);\n }\n \n-/* { dg-output \"index 3 out of bounds for type 'int \\\\\\[\\\\\\*\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"index 3 out of bounds for type 'int \\\\\\[\\\\\\*\\\\\\]'\" } */"}, {"sha": "e0a2980b4269ef186d7f2d18ec06388af561e17c", "filename": "gcc/testsuite/gcc.dg/ubsan/object-size-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fobject-size-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302f83f948e4bf516488f6d4a293251824b84fda/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fobject-size-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fobject-size-9.c?ref=302f83f948e4bf516488f6d4a293251824b84fda", "patch": "@@ -21,4 +21,4 @@ main (void)\n /* { dg-output \"load of address \\[^\\n\\r]* with insufficient space for an object of type 'char'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*note: pointer points here\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*\\\\^\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*\\\\^\" } */"}]}