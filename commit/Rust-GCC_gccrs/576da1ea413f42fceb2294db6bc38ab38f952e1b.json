{"sha": "576da1ea413f42fceb2294db6bc38ab38f952e1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc2ZGExZWE0MTNmNDJmY2ViMjI5NGRiNmJjMzhhYjM4Zjk1MmUxYg==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2015-10-23T12:19:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-23T12:19:35Z"}, "message": "sem_prag.adb (Analyze_Pragma): Pragma Volatile_Function should not apply to a function instantiation.\n\n2015-10-23  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma): Pragma Volatile_Function should\n\tnot apply to a function instantiation.\n\t* sem_util.adb (Has_Effectively_Volatile_Profile): New routine.\n\t(Is_Volatile_Function): An instance of Ada.Unchecked_Conversion\n\tis a volatile function when its profile contains an effectively\n\tvolatile type.\n\t* sem_util.ads (Has_Effectively_Volatile_Profile): New routine.\n\nFrom-SVN: r229238", "tree": {"sha": "e0a7e50503fba5672f4b7d39a36b225374738a8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0a7e50503fba5672f4b7d39a36b225374738a8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/576da1ea413f42fceb2294db6bc38ab38f952e1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/576da1ea413f42fceb2294db6bc38ab38f952e1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/576da1ea413f42fceb2294db6bc38ab38f952e1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/576da1ea413f42fceb2294db6bc38ab38f952e1b/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e5bb7eeceab11d8c3167ee03c179660c48a83dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e5bb7eeceab11d8c3167ee03c179660c48a83dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e5bb7eeceab11d8c3167ee03c179660c48a83dc"}], "stats": {"total": 70, "additions": 60, "deletions": 10}, "files": [{"sha": "17fa34a2e4b9e479b28fb14693340c30787347a8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576da1ea413f42fceb2294db6bc38ab38f952e1b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576da1ea413f42fceb2294db6bc38ab38f952e1b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=576da1ea413f42fceb2294db6bc38ab38f952e1b", "patch": "@@ -1,3 +1,13 @@\n+2015-10-23  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma): Pragma Volatile_Function should\n+\tnot apply to a function instantiation.\n+\t* sem_util.adb (Has_Effectively_Volatile_Profile): New routine.\n+\t(Is_Volatile_Function): An instance of Ada.Unchecked_Conversion\n+\tis a volatile function when its profile contains an effectively\n+\tvolatile type.\n+\t* sem_util.ads (Has_Effectively_Volatile_Profile): New routine.\n+\n 2015-10-23  Arnaud Charlet  <charlet@adacore.com>\n \n \t* exp_unst.adb (Unnest_Subprogram): Complete previous"}, {"sha": "b9526747a863bd75ae605fc348ed71ecc01fe43c", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576da1ea413f42fceb2294db6bc38ab38f952e1b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576da1ea413f42fceb2294db6bc38ab38f952e1b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=576da1ea413f42fceb2294db6bc38ab38f952e1b", "patch": "@@ -21543,14 +21543,9 @@ package body Sem_Prag is\n             Subp_Decl :=\n               Find_Related_Subprogram_Or_Body (N, Do_Checks => True);\n \n-            --  Function instantiation\n-\n-            if Nkind (Subp_Decl) = N_Function_Instantiation then\n-               null;\n-\n             --  Generic subprogram\n \n-            elsif Nkind (Subp_Decl) = N_Generic_Subprogram_Declaration then\n+            if Nkind (Subp_Decl) = N_Generic_Subprogram_Declaration then\n                null;\n \n             --  Body acts as spec\n@@ -21578,7 +21573,6 @@ package body Sem_Prag is\n             end if;\n \n             Spec_Id := Corresponding_Spec_Of (Subp_Decl);\n-            Over_Id := Overridden_Operation (Spec_Id);\n \n             if not Ekind_In (Spec_Id, E_Function, E_Generic_Function) then\n                Pragma_Misplaced;\n@@ -21595,6 +21589,8 @@ package body Sem_Prag is\n             --  in New_Overloaded_Entity, however at that point the pragma has\n             --  not been processed yet.\n \n+            Over_Id := Overridden_Operation (Spec_Id);\n+\n             if Present (Over_Id)\n               and then not Is_Volatile_Function (Over_Id)\n             then"}, {"sha": "90cd1ca3621c12484b63f88bd1236591af86089f", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 42, "deletions": 3, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576da1ea413f42fceb2294db6bc38ab38f952e1b/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576da1ea413f42fceb2294db6bc38ab38f952e1b/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=576da1ea413f42fceb2294db6bc38ab38f952e1b", "patch": "@@ -2108,9 +2108,7 @@ package body Sem_Util is\n             T := Full_View (T);\n          end if;\n \n-         if Is_Descendent_Of_Address (T)\n-           or else Is_Limited_Type (T)\n-         then\n+         if Is_Descendent_Of_Address (T) or else Is_Limited_Type (T) then\n             Set_Is_Pure (Subp_Id, False);\n             exit;\n          end if;\n@@ -8552,6 +8550,39 @@ package body Sem_Util is\n       return False;\n    end Has_Discriminant_Dependent_Constraint;\n \n+   --------------------------------------\n+   -- Has_Effectively_Volatile_Profile --\n+   --------------------------------------\n+\n+   function Has_Effectively_Volatile_Profile\n+     (Subp_Id : Entity_Id) return Boolean\n+   is\n+      Formal : Entity_Id;\n+\n+   begin\n+      --  Inspect the formal parameters looking for an effectively volatile\n+      --  type.\n+\n+      Formal := First_Formal (Subp_Id);\n+      while Present (Formal) loop\n+         if Is_Effectively_Volatile (Etype (Formal)) then\n+            return True;\n+         end if;\n+\n+         Next_Formal (Formal);\n+      end loop;\n+\n+      --  Inspect the return type of functions\n+\n+      if Ekind_In (Subp_Id, E_Function, E_Generic_Function)\n+        and then Is_Effectively_Volatile (Etype (Subp_Id))\n+      then\n+         return True;\n+      end if;\n+\n+      return False;\n+   end Has_Effectively_Volatile_Profile;\n+\n    --------------------------\n    -- Has_Enabled_Property --\n    --------------------------\n@@ -13721,6 +13752,14 @@ package body Sem_Util is\n       then\n          return True;\n \n+      --  An instance of Ada.Unchecked_Conversion is a volatile function if\n+      --  either the source or the target are effectively volatile.\n+\n+      elsif Is_Unchecked_Conversion_Instance (Func_Id)\n+        and then Has_Effectively_Volatile_Profile (Func_Id)\n+      then\n+         return True;\n+\n       --  Otherwise the function is treated as volatile if it is subject to\n       --  enabled pragma Volatile_Function.\n "}, {"sha": "6fba6227ac5c68e82907d106ea02515636b216a6", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576da1ea413f42fceb2294db6bc38ab38f952e1b/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576da1ea413f42fceb2294db6bc38ab38f952e1b/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=576da1ea413f42fceb2294db6bc38ab38f952e1b", "patch": "@@ -1006,6 +1006,11 @@ package Sem_Util is\n    --  Returns True if and only if Comp has a constrained subtype that depends\n    --  on a discriminant.\n \n+   function Has_Effectively_Volatile_Profile\n+     (Subp_Id : Entity_Id) return Boolean;\n+   --  Determine whether subprogram Subp_Id has an effectively volatile formal\n+   --  parameter or returns an effectively volatile value.\n+\n    function Has_Infinities (E : Entity_Id) return Boolean;\n    --  Determines if the range of the floating-point type E includes\n    --  infinities. Returns False if E is not a floating-point type."}]}