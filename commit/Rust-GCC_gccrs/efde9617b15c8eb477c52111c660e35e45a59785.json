{"sha": "efde9617b15c8eb477c52111c660e35e45a59785", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZkZTk2MTdiMTVjOGViNDc3YzUyMTExYzY2MGUzNWU0NWE1OTc4NQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-04-08T06:57:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T06:57:39Z"}, "message": "impunit.adb: Add Interfaces.Java.JNI...\n\n2008-04-08  Robert Dewar  <dewar@adacore.com>\n\t    Bob Duff  <duff@adacore.com>\n\n\t* impunit.adb: Add Interfaces.Java.JNI, System.Strings.Stream_Ops,\n\tAda.Calendar.Conversions, Ada.Dispatching.EDF, GNAT.Time_Stamp\n\n\t* s-intman-mingw.adb: Minor comment fix -- spell 'explicitly' correctly\n\n\t* g-trasym.adb: Minor comment fix -- spell 'explicitly' correctly\n\n\t* g-trasym.ads: Minor comment improvements\n\n\t* s-stalib.adb: Minor comment fix -- spell 'explicitly' correctly\n\n\t* a-sequio.ads, a-direio.ads: improve message for tagged type\n\n\t* a-strunb.ads: Minor reformatting\n\n\t* a-tifiio.adb: Minor reformatting\n\n\t* atree.adb (Fix_Parents): Use clearer names for formals\n\tCleanup and simplify code\n\tUse named notation in calls\n\n\t* exp_fixd.adb (Do_Multiply_Fixed_Universal): Use named notation in\n\tconfusing calls\n\n\t* uintp.adb: Used named notation for some confusing calls\n\n\t* bindusg.adb: Minor change in one line of output\n\n\t* cstand.adb: Minor reformatting of src representation of Standard\n\n\t* a-assert.ads: Add comment.\n\n\t* g-decstr.adb: Fix bad indentation\n\n\t* expander.ads, expander.adb: Code clean up.\n\n\t* sem_dist.ads, sem_type.adb, g-dirope.ads, g-exctra.ads, s-valwch.adb,\n\ts-wchstw.adb, targparm.ads, widechar.adb: Minor reformatting\n\n\t* i-cstrin.adb: Fix casing error in formal parameter name in call\n\nFrom-SVN: r134063", "tree": {"sha": "6cffd6610375b23eb865fd9a5ef43bdbfbf75654", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cffd6610375b23eb865fd9a5ef43bdbfbf75654"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efde9617b15c8eb477c52111c660e35e45a59785", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efde9617b15c8eb477c52111c660e35e45a59785", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efde9617b15c8eb477c52111c660e35e45a59785", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efde9617b15c8eb477c52111c660e35e45a59785/comments", "author": null, "committer": null, "parents": [{"sha": "2fe53bf5a4927ae72baa9160627bdecb6d2fcdfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fe53bf5a4927ae72baa9160627bdecb6d2fcdfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fe53bf5a4927ae72baa9160627bdecb6d2fcdfb"}], "stats": {"total": 194, "additions": 111, "deletions": 83}, "files": [{"sha": "bfc2229beda277f5dd4ce9e1d18c544575375774", "filename": "gcc/ada/a-assert.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fa-assert.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fa-assert.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-assert.ads?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -25,6 +25,9 @@ package Ada.Assertions is\n    pragma Pure (Assertions);\n \n    Assertion_Error : exception renames System.Assertions.Assert_Failure;\n+   --  This is the renaming that is allowed by 11.4.2(24). Note that the\n+   --  Exception_Name will refer to the one in System.Assertions (see\n+   --  AARM-11.4.1(12.b)).\n \n    procedure Assert (Check : Boolean);\n "}, {"sha": "6ac1a8a95b61a48906819d2781701ee746318831", "filename": "gcc/ada/a-direio.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fa-direio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fa-direio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direio.ads?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -48,6 +48,10 @@ package Ada.Direct_IO is\n      (Element_Type'Has_Access_Values,\n       \"Element_Type for Direct_IO instance has access values\");\n \n+   pragma Compile_Time_Warning\n+     (Element_Type'Has_Tagged_Values,\n+      \"Element_Type for Direct_IO instance has tagged values\");\n+\n    type File_Type is limited private;\n \n    type File_Mode is (In_File, Inout_File, Out_File);"}, {"sha": "ece3ee13ea626c5a7daf08c55e5f689dde0de812", "filename": "gcc/ada/a-sequio.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fa-sequio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fa-sequio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-sequio.ads?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -48,6 +48,10 @@ package Ada.Sequential_IO is\n      (Element_Type'Has_Access_Values,\n       \"Element_Type for Sequential_IO instance has access values\");\n \n+   pragma Compile_Time_Warning\n+     (Element_Type'Has_Tagged_Values,\n+      \"Element_Type for Sequential_IO instance has tagged values\");\n+\n    type File_Type is limited private;\n \n    type File_Mode is (In_File, Out_File, Append_File);"}, {"sha": "1601f3fef7462fd57f29878e58e16a25c6cad081", "filename": "gcc/ada/a-strunb.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fa-strunb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fa-strunb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strunb.ads?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -395,7 +395,6 @@ private\n       Reference : String_Access := Null_String'Access;\n       Last      : Natural       := 0;\n    end record;\n-\n    --  The Unbounded_String is using a buffered implementation to increase\n    --  speed of the Append/Delete/Insert procedures. The Reference string\n    --  pointer above contains the current string value and extra room at the\n@@ -404,6 +403,7 @@ private\n    --  Reference (1 .. Last).\n \n    pragma Stream_Convert (Unbounded_String, To_Unbounded, To_String);\n+   --  Provide stream routines without dragging in Ada.Streams\n \n    pragma Finalize_Storage_Only (Unbounded_String);\n    --  Finalization is required only for freeing storage"}, {"sha": "44100ee5624a34eb1b8c0c12c3f34e56fcc30cf5", "filename": "gcc/ada/a-tifiio.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fa-tifiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fa-tifiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tifiio.adb?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -638,11 +638,13 @@ package body Ada.Text_IO.Fixed_IO is\n          --  been generated, compute the Aft next digits (without rounding).\n          --  Once a non-zero digit is generated, determine the exact number\n          --  of digits remaining and compute them with rounding.\n+\n          --  Since a large number of iterations might be necessary in case\n          --  of Aft = 1, the following optimization would be desirable.\n+\n          --  Count the number Z of leading zero bits in the integer\n-         --  representation of X, and start with producing\n-         --  Aft + Z * 1000 / 3322 digits in the first scaled division.\n+         --  representation of X, and start with producing Aft + Z * 1000 /\n+         --  3322 digits in the first scaled division.\n \n          --  However, the floating-point routines are still used now ???\n "}, {"sha": "67d8597997bca54c3516062d4cd03c142f697587", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -562,9 +562,9 @@ package body Atree is\n    -- Local Subprograms --\n    -----------------------\n \n-   procedure Fix_Parents (Old_Node, New_Node : Node_Id);\n-   --  Fixup parent pointers for the syntactic children of New_Node after\n-   --  a copy, setting them to New_Node when they pointed to Old_Node.\n+   procedure Fix_Parents (Ref_Node, Fix_Node : Node_Id);\n+   --  Fixup parent pointers for the syntactic children of Fix_Node after\n+   --  a copy, setting them to Fix_Node when they pointed to Ref_Node.\n \n    function Allocate_Initialize_Node\n      (Src            : Node_Id;\n@@ -988,18 +988,18 @@ package body Atree is\n    -- Fix_Parents --\n    -----------------\n \n-   procedure Fix_Parents (Old_Node, New_Node : Node_Id) is\n+   procedure Fix_Parents (Ref_Node, Fix_Node : Node_Id) is\n \n-      procedure Fix_Parent (Field : Union_Id; Old_Node, New_Node : Node_Id);\n-      --  Fixup one parent pointer. Field is checked to see if it\n-      --  points to a node, list, or element list that has a parent that\n-      --  points to Old_Node. If so, the parent is reset to point to New_Node.\n+      procedure Fix_Parent (Field : Union_Id);\n+      --  Fixup one parent pointer. Field is checked to see if it points to\n+      --  a node, list, or element list that has a parent that points to\n+      --  Ref_Node. If so, the parent is reset to point to Fix_Node.\n \n       ----------------\n       -- Fix_Parent --\n       ----------------\n \n-      procedure Fix_Parent (Field : Union_Id; Old_Node, New_Node : Node_Id) is\n+      procedure Fix_Parent (Field : Union_Id) is\n       begin\n          --  Fix parent of node that is referenced by Field. Note that we must\n          --  exclude the case where the node is a member of a list, because in\n@@ -1008,28 +1008,28 @@ package body Atree is\n          if Field in Node_Range\n            and then Present (Node_Id (Field))\n            and then not Nodes.Table (Node_Id (Field)).In_List\n-           and then Parent (Node_Id (Field)) = Old_Node\n+           and then Parent (Node_Id (Field)) = Ref_Node\n          then\n-            Set_Parent (Node_Id (Field), New_Node);\n+            Set_Parent (Node_Id (Field), Fix_Node);\n \n          --  Fix parent of list that is referenced by Field\n \n          elsif Field in List_Range\n            and then Present (List_Id (Field))\n-           and then Parent (List_Id (Field)) = Old_Node\n+           and then Parent (List_Id (Field)) = Ref_Node\n          then\n-            Set_Parent (List_Id (Field), New_Node);\n+            Set_Parent (List_Id (Field), Fix_Node);\n          end if;\n       end Fix_Parent;\n \n    --  Start of processing for Fix_Parents\n \n    begin\n-      Fix_Parent (Field1 (New_Node), Old_Node, New_Node);\n-      Fix_Parent (Field2 (New_Node), Old_Node, New_Node);\n-      Fix_Parent (Field3 (New_Node), Old_Node, New_Node);\n-      Fix_Parent (Field4 (New_Node), Old_Node, New_Node);\n-      Fix_Parent (Field5 (New_Node), Old_Node, New_Node);\n+      Fix_Parent (Field1 (Fix_Node));\n+      Fix_Parent (Field2 (Fix_Node));\n+      Fix_Parent (Field3 (Fix_Node));\n+      Fix_Parent (Field4 (Fix_Node));\n+      Fix_Parent (Field5 (Fix_Node));\n    end Fix_Parents;\n \n    -----------------------------------\n@@ -2404,7 +2404,7 @@ package body Atree is\n       end if;\n \n       New_Node := New_Copy (Source);\n-      Fix_Parents (Source, New_Node);\n+      Fix_Parents (Ref_Node => Source, Fix_Node => New_Node);\n \n       --  We now set the parent of the new node to be the same as the\n       --  parent of the source. Almost always this parent will be\n@@ -2448,7 +2448,7 @@ package body Atree is\n \n       --  Fix parents of substituted node, since it has changed identity\n \n-      Fix_Parents (New_Node, Old_Node);\n+      Fix_Parents (Ref_Node => New_Node, Fix_Node => Old_Node);\n \n       --  Since we are doing a replace, we assume that the original node\n       --  is intended to become the new replaced node. The call would be\n@@ -2511,7 +2511,7 @@ package body Atree is\n          Set_Must_Not_Freeze (Old_Node, Old_Must_Not_Freeze);\n       end if;\n \n-      Fix_Parents (New_Node, Old_Node);\n+      Fix_Parents (Ref_Node => New_Node, Fix_Node => Old_Node);\n    end Rewrite;\n \n    ------------------\n@@ -7337,7 +7337,7 @@ package body Atree is\n          pragma Assert (N <= Nodes.Last);\n \n          if Val > Error then\n-            Set_Parent (Val, N);\n+            Set_Parent (N => Val, Val => N);\n          end if;\n \n          Set_Node1 (N, Val);\n@@ -7348,7 +7348,7 @@ package body Atree is\n          pragma Assert (N <= Nodes.Last);\n \n          if Val > Error then\n-            Set_Parent (Val, N);\n+            Set_Parent (N => Val, Val => N);\n          end if;\n \n          Set_Node2 (N, Val);\n@@ -7359,7 +7359,7 @@ package body Atree is\n          pragma Assert (N <= Nodes.Last);\n \n          if Val > Error then\n-            Set_Parent (Val, N);\n+            Set_Parent (N => Val, Val => N);\n          end if;\n \n          Set_Node3 (N, Val);\n@@ -7370,7 +7370,7 @@ package body Atree is\n          pragma Assert (N <= Nodes.Last);\n \n          if Val > Error then\n-            Set_Parent (Val, N);\n+            Set_Parent (N => Val, Val => N);\n          end if;\n \n          Set_Node4 (N, Val);\n@@ -7381,7 +7381,7 @@ package body Atree is\n          pragma Assert (N <= Nodes.Last);\n \n          if Val > Error then\n-            Set_Parent (Val, N);\n+            Set_Parent (N => Val, Val => N);\n          end if;\n \n          Set_Node5 (N, Val);"}, {"sha": "a70aaa9ee9687910b8b738f8bfe038dd44c6eea8", "filename": "gcc/ada/bindusg.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fbindusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fbindusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindusg.adb?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                B o d y                                   --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -271,7 +271,7 @@ package body Bindusg is\n \n       --  Line for --RTS\n \n-      Write_Line (\"  --RTS=dir specify the default source and \" &\n+      Write_Line (\"  --RTS=dir Specify the default source and \" &\n                   \"object search path\");\n \n       --  Line for sfile"}, {"sha": "1404d35ac4152d322fa142b8e0ffa582f127428e", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1727,7 +1727,7 @@ package body CStand is\n       Write_Eol;\n \n       P (\"package Standard is\");\n-      P (\"pragma Pure(Standard);\");\n+      P (\"pragma Pure (Standard);\");\n       Write_Eol;\n \n       P (\"   type Boolean is (False, True);\");"}, {"sha": "162e5d2ee4095827a429f456ccd85a40cccb7940", "filename": "gcc/ada/exp_fixd.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fexp_fixd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fexp_fixd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_fixd.adb?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2123,7 +2123,7 @@ package body Exp_Fixd is\n \n       if Etype (Left) = Universal_Real then\n          if Nkind (Left) = N_Real_Literal then\n-            Do_Multiply_Fixed_Universal (N, Right, Left);\n+            Do_Multiply_Fixed_Universal (N, Left => Right, Right => Left);\n \n          elsif Nkind (Left) = N_Type_Conversion then\n             Rewrite_Non_Static_Universal (Left);\n@@ -2214,7 +2214,7 @@ package body Exp_Fixd is\n       Right : constant Node_Id := Right_Opnd (N);\n    begin\n       if Etype (Left) = Universal_Real then\n-         Do_Multiply_Fixed_Universal (N, Right, Left);\n+         Do_Multiply_Fixed_Universal (N, Left => Right, Right => Left);\n       elsif Etype (Right) = Universal_Real then\n          Do_Multiply_Fixed_Universal (N, Left, Right);\n       else"}, {"sha": "674137df1dac6cc55b57e4fc08ed393481bef361", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -73,12 +73,13 @@ package body Expander is\n \n    procedure Expand (N : Node_Id) is\n    begin\n-      --  If we were analyzing a default expression the Full_Analysis flag must\n-      --  be off. If we are in expansion mode then we must be performing a full\n-      --  analysis. If we are analyzing a generic then Expansion must be off.\n+      --  If we were analyzing a default expression (or other spec expression)\n+      --  the Full_Analysis flag must be off. If we are in expansion mode then\n+      --  we must be performing a full analysis. If we are analyzing a generic\n+      --  then Expansion must be off.\n \n       pragma Assert\n-        (not (Full_Analysis and then In_Default_Expression)\n+        (not (Full_Analysis and then In_Spec_Expression)\n           and then (Full_Analysis or else not Expander_Active)\n           and then not (Inside_A_Generic and then Expander_Active));\n "}, {"sha": "df59442186a48f324e2518fa91d7d2af023b5c52", "filename": "gcc/ada/expander.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fexpander.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fexpander.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.ads?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -138,7 +138,7 @@ package Expander is\n    --    (b) when starting/completing the pre-analysis of an expression\n    --        (see the spec of package Sem for more info on pre-analysis.)\n    --\n-   --  Note that when processing a default expression (In_Default_Expression\n+   --  Note that when processing a spec expression (In_Spec_Expression\n    --  is True) or performing semantic analysis of a generic spec or body\n    --  (Inside_A_Generic) or when performing pre-analysis (Full_Analysis is\n    --  False) the Expander_Active flag is False."}, {"sha": "e7c8a2612f4048d03cd3c65f226f050f9b6f2d5b", "filename": "gcc/ada/g-decstr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fg-decstr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fg-decstr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-decstr.adb?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                       Copyright (C) 2007, AdaCore                        --\n+--                     Copyright (C) 2007-2008, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -923,7 +923,7 @@ package body GNAT.Decode_String is\n             end loop;\n \n          exception\n-             when Constraint_Error =>\n+            when Constraint_Error =>\n                Bad;\n          end Non_UTF8_Brackets;\n       end if;"}, {"sha": "7ef84726dc3649cafb69b6cee1c4a29bf7162c93", "filename": "gcc/ada/g-dirope.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fg-dirope.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fg-dirope.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.ads?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2007, AdaCore                     --\n+--                     Copyright (C) 1998-2008, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -132,7 +132,7 @@ package GNAT.Directory_Operations is\n    --  is equivalent to the UNIX basename command. The following rule is\n    --  always true:\n    --\n-   --    'Path' and 'Dir_Name (Path) & Directory_Separator & Base_Name (Path)'\n+   --    'Path' and 'Dir_Name (Path) & Dir_Separator & Base_Name (Path)'\n    --    represent the same file.\n    --\n    --  The comparison of Suffix is case-insensitive on systems such as Windows"}, {"sha": "00b474538d9ae30f969b05e8a83fb699c4070dbd", "filename": "gcc/ada/g-exctra.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fg-exctra.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fg-exctra.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-exctra.ads?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2005, AdaCore                     --\n+--                     Copyright (C) 2000-2008, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -48,6 +48,7 @@\n \n --  The backtrace output can also be customized by way of a \"decorator\" which\n --  may return any string output in association with a provided call chain.\n+--  The decorator replaces the default backtrace mentioned above.\n \n with GNAT.Traceback; use GNAT.Traceback;\n \n@@ -89,5 +90,9 @@ package GNAT.Exception_Traces is\n    --  Set the decorator to be used for future automatic outputs. Restore\n    --  the default behavior (output of raw addresses) if the provided\n    --  access value is null.\n+   --\n+   --  Note: GNAT.Traceback.Symbolic.Symbolic_Traceback may be used as the\n+   --  Decorator, to get a symbolic traceback. This will cause a significant\n+   --  cpu and memory overhead.\n \n end GNAT.Exception_Traces;"}, {"sha": "1d1fd3d909549f4352217390821a7889b1e7f064", "filename": "gcc/ada/g-trasym.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fg-trasym.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fg-trasym.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-trasym.adb?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2006, AdaCore                     --\n+--                     Copyright (C) 1999-2008, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "fbcf9ca4a65cc95f8cd2547acd504af5c5bf542b", "filename": "gcc/ada/g-trasym.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fg-trasym.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fg-trasym.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-trasym.ads?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2007, AdaCore                     --\n+--                     Copyright (C) 1999-2008, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -86,6 +86,9 @@ package GNAT.Traceback.Symbolic is\n \n    function Symbolic_Traceback (Traceback : Tracebacks_Array) return String;\n    --  Build a string containing a symbolic traceback of the given call chain\n+   --\n+   --  Note: This procedure may be installed by Set_Trace_Decorator, to get a\n+   --  symbolic traceback on all exceptions raised (see GNAT.Exception_Traces).\n \n    function Symbolic_Traceback (E : Exception_Occurrence) return String;\n    --  Build string containing symbolic traceback of given exception occurrence"}, {"sha": "dbd4cb4c2073d0e8d94e61e4041e90d766cf0511", "filename": "gcc/ada/i-cstrin.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fi-cstrin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fi-cstrin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrin.adb?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -130,7 +130,7 @@ package body Interfaces.C.Strings is\n                  Offset => 0,\n                  Chars  => Chars,\n                  Check  => False);\n-         Poke (nul, into => Pointer + size_t'(Chars'Length));\n+         Poke (nul, Into => Pointer + size_t'(Chars'Length));\n       end if;\n \n       return Pointer;"}, {"sha": "0b8cdd5b9c0667ea6f97578b27fd30589fbd6d94", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2000-2007, Free Software Foundation, Inc.        --\n+--           Copyright (C) 2000-2008, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -147,6 +147,7 @@ package body Impunit is\n    -- GNAT Defined Additions to Ada --\n    -----------------------------------\n \n+     \"a-calcon\",    -- Ada.Calendar.Conversions\n      \"a-chlat9\",    -- Ada.Characters.Latin_9\n      \"a-clrefi\",    -- Ada.Command_Line.Response_File\n      \"a-colien\",    -- Ada.Command_Line.Environment\n@@ -276,6 +277,7 @@ package body Impunit is\n      \"g-table \",    -- GNAT.Table\n      \"g-tasloc\",    -- GNAT.Task_Lock\n      \"g-thread\",    -- GNAT.Threads\n+     \"g-timsta\",    -- GNAT.Time_Stamp\n      \"g-traceb\",    -- GNAT.Traceback\n      \"g-trasym\",    -- GNAT.Traceback.Symbolic\n      \"g-utf_32\",    -- GNAT.UTF_32\n@@ -301,6 +303,7 @@ package body Impunit is\n      \"i-cpp   \",    -- Interfaces.CPP\n      \"i-cstrea\",    -- Interfaces.C.Streams\n      \"i-java  \",    -- Interfaces.Java\n+     \"i-javjni\",    -- Interfaces.Java.JNI\n      \"i-pacdec\",    -- Interfaces.Packed_Decimal\n      \"i-vxwoio\",    -- Interfaces.VxWorks.IO\n      \"i-vxwork\",    -- Interfaces.VxWorks\n@@ -328,6 +331,7 @@ package body Impunit is\n      \"s-pooloc\",    -- System.Pool_Local\n      \"s-restri\",    -- System.Restrictions\n      \"s-rident\",    -- System.Rident\n+     \"s-ststop\",    -- System.Strings.Stream_Ops\n      \"s-tasinf\",    -- System.Task_Info\n      \"s-wchcnv\",    -- System.Wch_Cnv\n      \"s-wchcon\");   -- System.Wch_Con\n@@ -367,6 +371,7 @@ package body Impunit is\n      \"a-coteio\",    -- Ada.Complex_Text_IO\n      \"a-direct\",    -- Ada.Directories\n      \"a-diroro\",    -- Ada.Dispatching.Round_Robin\n+     \"a-disedf\",    -- Ada.Dispatching.EDF\n      \"a-dispat\",    -- Ada.Dispatching\n      \"a-envvar\",    -- Ada.Environment_Variables\n      \"a-exetim\",    -- Ada.Execution_Time"}, {"sha": "a71208ce00e4176083171efb9ce3b48cc677248f", "filename": "gcc/ada/s-intman-mingw.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fs-intman-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fs-intman-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-mingw.adb?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1991-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1991-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,7 +43,7 @@ package body System.Interrupt_Management is\n \n    procedure Initialize is\n    begin\n-      --  \"Reserve\" all the interrupts, except those that are explicitely\n+      --  \"Reserve\" all the interrupts, except those that are explicitly\n       --  defined.\n \n       for J in Interrupt_ID'Range loop"}, {"sha": "e9df807d3898a2a6aab02f84017c4878373f07c1", "filename": "gcc/ada/s-stalib.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fs-stalib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fs-stalib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stalib.adb?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1995-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -51,7 +51,7 @@ with System.Soft_Links;\n --  Referenced directly from generated code using external symbols so it\n --  must always be present in a build, even if no unit has a direct with\n --  of this unit. Also referenced from exception handling routines.\n---  This is needed for programs that don't use exceptions explicitely but\n+--  This is needed for programs that don't use exceptions explicitly but\n --  direct calls to Ada.Exceptions are generated by gigi (for example,\n --  by calling __gnat_raise_constraint_error directly).\n "}, {"sha": "c23ef36e97f0f4396ee93a6d37fcce7ea1736d9e", "filename": "gcc/ada/s-stalib.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fs-stalib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fs-stalib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stalib.ads?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -63,6 +63,7 @@ package System.Standard_Library is\n    pragma Warnings (On);\n \n    type Big_String_Ptr is access all String (Positive);\n+   for Big_String_Ptr'Storage_Size use 0;\n    --  A non-fat pointer type for null terminated strings\n \n    function To_Ptr is"}, {"sha": "e65c4df057503487122682ae7dd2cad362b50a90", "filename": "gcc/ada/s-valwch.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fs-valwch.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fs-valwch.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valwch.adb?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -50,8 +50,8 @@ package body System.Val_WChar is\n       WV : constant Unsigned_32         := Wide_Wide_Character'Pos (WC);\n    begin\n       if WV > 16#FFFF# then\n-         raise Constraint_Error\n-           with \"out of range character for Value attribute\";\n+         raise Constraint_Error with\n+           \"out of range character for Value attribute\";\n       else\n          return Wide_Character'Val (WV);\n       end if;"}, {"sha": "842087f61ce3ab22fdba7138359c264452a22515", "filename": "gcc/ada/s-wchstw.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fs-wchstw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fs-wchstw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchstw.adb?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -74,8 +74,7 @@ package body System.WCh_StW is\n       function In_Char return Character is\n       begin\n          if P > S'Last then\n-            raise Constraint_Error\n-              with \"badly formed wide character code\";\n+            raise Constraint_Error with \"badly formed wide character code\";\n          else\n             P := P + 1;\n             return S (P - 1);\n@@ -139,8 +138,8 @@ package body System.WCh_StW is\n          Get_Next_Code (S, SP, V, EM);\n \n          if V > 16#FFFF# then\n-            raise Constraint_Error\n-              with \"out of range value for wide character\";\n+            raise Constraint_Error with\n+              \"out of range value for wide character\";\n          end if;\n \n          L := L + 1;"}, {"sha": "9f9b95d3e69568b0218ecb4b84ee6b592a22b55c", "filename": "gcc/ada/sem_dist.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fsem_dist.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fsem_dist.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.ads?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,8 +31,8 @@ with Types;  use Types;\n package Sem_Dist is\n \n    function Get_PCS_Name return PCS_Names;\n-   --  Return the name of a literal of type System.Partition_Interface.\n-   --  DSA_Implementation_Type indicating what PCS is currently in use.\n+   --  Return the name of a literal of type DSA_Implementation_Name in package\n+   --  System.Partition_Interface indicating what PCS is currently in use.\n \n    function Get_PCS_Version return Int;\n    --  Return the version number of the PCS API implemented by the PCS."}, {"sha": "1c401589facf129e63afdab8fe84c763537bffc5", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1515,8 +1515,8 @@ package body Sem_Type is\n       end if;\n \n       --  Check for overloaded CIL convention stuff because the CIL libraries\n-      --  do sick things like Console.Write_Line where it matches\n-      --  two different overloads, so just pick the first ???\n+      --  do sick things like Console.Write_Line where it matches two different\n+      --  overloads, so just pick the first ???\n \n       if Convention (Nam1) = Convention_CIL\n         and then Convention (Nam2) = Convention_CIL"}, {"sha": "1197d6393c23e7285b5ed699cdb80ee97fa52dc9", "filename": "gcc/ada/targparm.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Ftargparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Ftargparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.ads?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -219,6 +219,7 @@ package Targparm is\n    type Virtual_Machine_Kind is (No_VM, JVM_Target, CLI_Target);\n    VM_Target : Virtual_Machine_Kind := No_VM;\n    --  Kind of virtual machine targetted\n+   --  Needs comments, don't depend on names ???\n \n    -------------------------------\n    -- Backend Arithmetic Checks --"}, {"sha": "86a3187fd74eb0aee1d9f905365a381a8e888cc1", "filename": "gcc/ada/uintp.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fuintp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fuintp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.adb?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1944,7 +1944,7 @@ package body Uintp is\n \n    function UI_Gt (Left : Uint; Right : Uint) return Boolean is\n    begin\n-      return UI_Lt (Right, Left);\n+      return UI_Lt (Left => Right, Right => Left);\n    end UI_Gt;\n \n    ---------------\n@@ -1990,7 +1990,7 @@ package body Uintp is\n \n    function UI_Le (Left : Uint; Right : Uint) return Boolean is\n    begin\n-      return not UI_Lt (Right, Left);\n+      return not UI_Lt (Left => Right, Right => Left);\n    end UI_Le;\n \n    ------------"}, {"sha": "e51681dd4e3dc3ffcf11e090a4a59ad1d014757f", "filename": "gcc/ada/widechar.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fwidechar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efde9617b15c8eb477c52111c660e35e45a59785/gcc%2Fada%2Fwidechar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwidechar.adb?ref=efde9617b15c8eb477c52111c660e35e45a59785", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -121,7 +121,7 @@ package body Widechar is\n \n       function WC_In is new Char_Sequence_To_UTF_32 (In_Char);\n \n-   --  Start of processingf for Scan_Wide\n+   --  Start of processing for Scan_Wide\n \n    begin\n       Chr := In_Char;"}]}