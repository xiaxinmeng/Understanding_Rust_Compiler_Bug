{"sha": "137e889e24e0dd048d56c47f6ee22026d2720e10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM3ZTg4OWUyNGUwZGQwNDhkNTZjNDdmNmVlMjIwMjZkMjcyMGUxMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-11-11T02:34:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-11-11T02:34:55Z"}, "message": "(subst_prev_insn): New variable.\n\n(try_combine): Set it.\n(get_last_value): Use subst_prev_insn if set instead of looking for the first\ninsn before SUBST_LOW_CUID.\n\nFrom-SVN: r6063", "tree": {"sha": "568c474d5335d07be58a54153d4fc176680e9b43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/568c474d5335d07be58a54153d4fc176680e9b43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/137e889e24e0dd048d56c47f6ee22026d2720e10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/137e889e24e0dd048d56c47f6ee22026d2720e10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/137e889e24e0dd048d56c47f6ee22026d2720e10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/137e889e24e0dd048d56c47f6ee22026d2720e10/comments", "author": null, "committer": null, "parents": [{"sha": "e39bf2d9fcc8ef97898e317e62bb831b0b2e412f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e39bf2d9fcc8ef97898e317e62bb831b0b2e412f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e39bf2d9fcc8ef97898e317e62bb831b0b2e412f"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "aed46278c1c5a5cfd315f533037a94ef52539761", "filename": "gcc/combine.c", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/137e889e24e0dd048d56c47f6ee22026d2720e10/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/137e889e24e0dd048d56c47f6ee22026d2720e10/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=137e889e24e0dd048d56c47f6ee22026d2720e10", "patch": "@@ -159,6 +159,11 @@ static int last_call_cuid;\n \n static rtx subst_insn;\n \n+/* If nonzero, this is the insn that should be presumed to be\n+   immediately in front of `subst_insn'.  */\n+\n+static rtx subst_prev_insn;\n+\n /* This is the lowest CUID that `subst' is currently dealing with.\n    get_last_value will not return a value if the register was set at or\n    after this CUID.  If not for this mechanism, we could get confused if\n@@ -1195,6 +1200,8 @@ try_combine (i3, i2, i1)\n   if (i1 && INSN_CUID (i1) > INSN_CUID (i2))\n     temp = i1, i1 = i2, i2 = temp;\n \n+  subst_prev_insn = 0;\n+\n   /* First check for one important special-case that the code below will\n      not handle.  Namely, the case where I1 is zero, I2 has multiple sets,\n      and I3 is a SET whose SET_SRC is a SET_DEST in I2.  In that case,\n@@ -1307,8 +1314,9 @@ try_combine (i3, i2, i1)\n \t     never appear in the insn stream so giving it the same INSN_UID\n \t     as I2 will not cause a problem.  */\n \n-\t  i1 = gen_rtx (INSN, VOIDmode, INSN_UID (i2), 0, i2,\n-\t\t\tXVECEXP (PATTERN (i2), 0, 1), -1, 0, 0);\n+\t  subst_prev_insn = i1\n+\t    = gen_rtx (INSN, VOIDmode, INSN_UID (i2), 0, i2,\n+\t\t       XVECEXP (PATTERN (i2), 0, 1), -1, 0, 0);\n \n \t  SUBST (PATTERN (i2), XVECEXP (PATTERN (i2), 0, 0));\n \t  SUBST (XEXP (SET_SRC (PATTERN (i2)), 0),\n@@ -9494,10 +9502,15 @@ get_last_value (x)\n     {\n       rtx insn, set;\n \n-      for (insn = prev_nonnote_insn (subst_insn);\n-\t   insn && INSN_CUID (insn) >= subst_low_cuid;\n-\t   insn = prev_nonnote_insn (insn))\n-\t;\n+      /* If there is an insn that is supposed to be immediately\n+\t in front of subst_insn, use it.  */\n+      if (subst_prev_insn != 0)\n+\tinsn = subst_prev_insn;\n+      else\n+\tfor (insn = prev_nonnote_insn (subst_insn);\n+\t     insn && INSN_CUID (insn) >= subst_low_cuid;\n+\t     insn = prev_nonnote_insn (insn))\n+\t  ;\n \n       if (insn\n \t  && (set = single_set (insn)) != 0"}]}