{"sha": "8f085166f8aa480bd623ae49d17ec06915b74495", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGYwODUxNjZmOGFhNDgwYmQ2MjNhZTQ5ZDE3ZWMwNjkxNWI3NDQ5NQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2016-03-24T17:52:11Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-03-24T17:52:11Z"}, "message": "re PR middle-end/69845 (Expression getting incorrectly optimized after being rewritten by compiler)\n\n2016-03-24  Richard Henderson  <rth@redhat.com>\n\n\tPR middle-end/69845\n\t* fold-const.c (extract_muldiv_1): Correct test for multiplication\n\toverflow.\n\n\tPR middle-end/69845\n\t* gcc.dg/tree-ssa/pr69845-1.c: New test.\n\t* gcc.dg/tree-ssa/pr69845-2.c: New test.\n\nFrom-SVN: r234462", "tree": {"sha": "330ca937fe5680cb7ffa15a318722e714a334e6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/330ca937fe5680cb7ffa15a318722e714a334e6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f085166f8aa480bd623ae49d17ec06915b74495", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f085166f8aa480bd623ae49d17ec06915b74495", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f085166f8aa480bd623ae49d17ec06915b74495", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f085166f8aa480bd623ae49d17ec06915b74495/comments", "author": null, "committer": null, "parents": [{"sha": "011e5ec31c3a6124bd039a0e3f9c3e43d576f383", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/011e5ec31c3a6124bd039a0e3f9c3e43d576f383", "html_url": "https://github.com/Rust-GCC/gccrs/commit/011e5ec31c3a6124bd039a0e3f9c3e43d576f383"}], "stats": {"total": 59, "additions": 54, "deletions": 5}, "files": [{"sha": "4a87cda4acc499f6ea5199066426eff4056beff9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f085166f8aa480bd623ae49d17ec06915b74495/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f085166f8aa480bd623ae49d17ec06915b74495/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f085166f8aa480bd623ae49d17ec06915b74495", "patch": "@@ -1,3 +1,9 @@\n+2016-03-24  Richard Henderson  <rth@redhat.com>\n+\n+        PR middle-end/69845\n+\t* fold-const.c (extract_muldiv_1): Correct test for multiplication\n+\toverflow.\n+\n 2016-03-24  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (*anddi3_doubleword): Generate AND insn"}, {"sha": "44fe2a27d4f58ff0c6c0eae6897fea512c1eddfa", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f085166f8aa480bd623ae49d17ec06915b74495/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f085166f8aa480bd623ae49d17ec06915b74495/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=8f085166f8aa480bd623ae49d17ec06915b74495", "patch": "@@ -6116,11 +6116,9 @@ extract_muldiv_1 (tree t, tree c, enum tree_code code, tree wide_type,\n \t{\n \t  tree tem = const_binop (code, fold_convert (ctype, t),\n \t\t\t\t  fold_convert (ctype, c));\n-\t  /* If the multiplication overflowed to INT_MIN then we lost sign\n-\t     information on it and a subsequent multiplication might\n-\t     spuriously overflow.  See PR68142.  */\n-\t  if (TREE_OVERFLOW (tem)\n-\t      && wi::eq_p (tem, wi::min_value (TYPE_PRECISION (ctype), SIGNED)))\n+\t  /* If the multiplication overflowed, we lost information on it.\n+\t     See PR68142 and PR69845.  */\n+\t  if (TREE_OVERFLOW (tem))\n \t    return NULL_TREE;\n \t  return tem;\n \t}"}, {"sha": "8891090cbf5b61a50cd89c9c08138f333c55530c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f085166f8aa480bd623ae49d17ec06915b74495/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f085166f8aa480bd623ae49d17ec06915b74495/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8f085166f8aa480bd623ae49d17ec06915b74495", "patch": "@@ -1,3 +1,9 @@\n+2016-03-24  Richard Henderson  <rth@redhat.com>\n+\n+\tPR middle-end/69845\n+\t* gcc.dg/tree-ssa/pr69845-1.c: New test.\n+\t* gcc.dg/tree-ssa/pr69845-2.c: New test.\n+\n 2016-03-24  Tom de Vries  <tom@codesourcery.com>\n \n \t* gfortran.dg/goacc/host_data-tree.f95: Add missing initialization."}, {"sha": "92927ba491385af95fa1812c4fa3c189e17d26eb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr69845-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f085166f8aa480bd623ae49d17ec06915b74495/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr69845-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f085166f8aa480bd623ae49d17ec06915b74495/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr69845-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr69845-1.c?ref=8f085166f8aa480bd623ae49d17ec06915b74495", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target int32 } */\n+/* { dg-options \"-O -fdump-tree-gimple -fdump-tree-optimized\" } */\n+\n+int\n+main ()\n+{\n+  struct S { char s; } v;\n+  v.s = 47;\n+  int a = (int) v.s;\n+  int b = (27005061 + (a + 680455));\n+  int c = ((1207142401 * (((8 * b) + 9483541) - 230968044)) + 469069442);\n+  if (c != 1676211843)\n+    __builtin_abort ();\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"b \\\\\\* 8\" 1 \"gimple\" } } */\n+/* { dg-final { scan-tree-dump-not \"abort\" \"optimized\" } } */"}, {"sha": "e0b38e9966c20c09d064dc6fae5533c75eabf2d3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr69845-2.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f085166f8aa480bd623ae49d17ec06915b74495/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr69845-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f085166f8aa480bd623ae49d17ec06915b74495/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr69845-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr69845-2.c?ref=8f085166f8aa480bd623ae49d17ec06915b74495", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target int32 } */\n+/* { dg-options \"-O -fdump-tree-gimple -fdump-tree-optimized\" } */\n+\n+int\n+main ()\n+{\n+  struct S { char s; } v;\n+  v.s = 47;\n+  unsigned int a = (unsigned int) v.s;\n+  unsigned int b = (27005061 + (a + 680455));\n+  unsigned int c\n+    = ((1207142401u * (((8u * b) + 9483541u) - 230968044u)) + 469069442u);\n+  if (c != 1676211843u)\n+    __builtin_abort ();\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"b \\\\\\* 1067204616\" 1 \"gimple\" } } */\n+/* { dg-final { scan-tree-dump-not \"abort\" \"optimized\" } } */"}]}