{"sha": "6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE0OTc2MDdhZjBiN2UzNGFhZDZkNmYzY2MwNGQyYzhmNWRkZmUyNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-18T09:53:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-18T09:53:00Z"}, "message": "[multiple changes]\n\n2010-06-18  Thomas Quinot  <quinot@adacore.com>\n\n\t* types.ads: Clean up obsolete comments\n\t* tbuild.adb: Minor reformatting.\n\t* exp_ch5.adb, sem_intr.adb, sem_ch10.adb, rtsfind.adb, s-shasto.adb,\n\texp_strm.adb, aa_drive.adb: Minor reformatting.\n\t* sem_res.adb (Is_Predefined_Operator): An operator that is an imported\n\tintrinsic with an Interface_Name denotes an imported back-end builtin,\n\tand must be rewritten into a call, not left in the tree as an operator,\n\tso return False in that case.\n\n2010-06-18  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* exp_util.adb (Remove_Side_Effects): Make a copy for an allocator.\n\t\n2010-06-18  Robert Dewar  <dewar@adacore.com>\n\n\t* scos.ads: Add proposed output for case expression\n\n2010-06-18  Jose Ruiz  <ruiz@adacore.com>\n\n\t* gnat_ugn.texi: Document that, when using the RTX compiler to generate\n\tRTSS modules, we need to use the Microsoft linker.\n\nFrom-SVN: r160974", "tree": {"sha": "364d9ffedf372b96525952d1fdac74e0d4096065", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/364d9ffedf372b96525952d1fdac74e0d4096065"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/comments", "author": null, "committer": null, "parents": [{"sha": "19d846a008c51b4425b88771aa2768bd882499cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19d846a008c51b4425b88771aa2768bd882499cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19d846a008c51b4425b88771aa2768bd882499cc"}], "stats": {"total": 231, "additions": 149, "deletions": 82}, "files": [{"sha": "e48bac3e0c2f405c82f1ff9df67029ef4b8d15b1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25", "patch": "@@ -1,3 +1,27 @@\n+2010-06-18  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* types.ads: Clean up obsolete comments\n+\t* tbuild.adb: Minor reformatting.\n+\t* exp_ch5.adb, sem_intr.adb, sem_ch10.adb, rtsfind.adb, s-shasto.adb,\n+\texp_strm.adb, aa_drive.adb: Minor reformatting.\n+\t* sem_res.adb (Is_Predefined_Operator): An operator that is an imported\n+\tintrinsic with an Interface_Name denotes an imported back-end builtin,\n+\tand must be rewritten into a call, not left in the tree as an operator,\n+\tso return False in that case.\n+\n+2010-06-18  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_util.adb (Remove_Side_Effects): Make a copy for an allocator.\n+\t\n+2010-06-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* scos.ads: Add proposed output for case expression\n+\n+2010-06-18  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* gnat_ugn.texi: Document that, when using the RTX compiler to generate\n+\tRTSS modules, we need to use the Microsoft linker.\n+\n 2010-06-18  Robert Dewar  <dewar@adacore.com>\n \n \t* checks.adb (Safe_To_Capture_In_Parameter_Value): Deal with case"}, {"sha": "71b58ae358e17aef1c9dfc1e9788ff2d64f71da1", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -4192,9 +4192,9 @@ package body Exp_Ch5 is\n          end;\n       end if;\n \n-      --  If we are returning an object that may not be bit-aligned, then\n-      --  copy the value into a temporary first. This copy may need to expand\n-      --  to a loop of component operations..\n+      --  If we are returning an object that may not be bit-aligned, then copy\n+      --  the value into a temporary first. This copy may need to expand to a\n+      --  loop of component operations.\n \n       if Is_Possibly_Unaligned_Slice (Exp)\n         or else Is_Possibly_Unaligned_Object (Exp)"}, {"sha": "ddb1064c475aed880637a758f9f292f572c1f46a", "filename": "gcc/ada/exp_strm.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Fexp_strm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Fexp_strm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.adb?ref=6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1396,7 +1396,7 @@ package body Exp_Strm is\n             --  If the enclosing record is an unchecked_union, we use the\n             --  default expressions for the discriminant (it must exist)\n             --  because we cannot generate a reference to it, given that\n-            --  it is not stored..\n+            --  it is not stored.\n \n             if Is_Unchecked_Union (Scope (Entity (Name (VP)))) then\n                D_Ref :="}, {"sha": "95036b9e726d63337dad730791d0bc7d7e15c8cb", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25", "patch": "@@ -4684,14 +4684,15 @@ package body Exp_Util is\n       Scope_Suppress := (others => True);\n \n       --  If it is a scalar type and we need to capture the value, just make\n-      --  a copy. Likewise for a function call, an attribute reference or an\n-      --  operator. And if we have a volatile reference and Name_Req is not\n-      --  set (see comments above for Side_Effect_Free).\n+      --  a copy. Likewise for a function call, an attribute reference, an\n+      --  allocator or an operator. And if we have a volatile reference and\n+      --  Name_Req is not set (see comments above for Side_Effect_Free).\n \n       if Is_Elementary_Type (Exp_Type)\n         and then (Variable_Ref\n                    or else Nkind (Exp) = N_Function_Call\n                    or else Nkind (Exp) = N_Attribute_Reference\n+                   or else Nkind (Exp) = N_Allocator\n                    or else Nkind (Exp) in N_Op\n                    or else (not Name_Req and then Is_Volatile_Reference (Exp)))\n       then"}, {"sha": "0681deaab2d0f395aeb39e50558408b8f7e8a191", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25", "patch": "@@ -25555,7 +25555,8 @@ Windows executables that run in Ring 3 to utilize memory protection\n @item\n Real-time subsystem (RTSS) executables that run in Ring 0, where\n performance can be optimized with RTSS applications taking precedent\n-over all Windows applications (@emph{rts-rtx-rtss}).\n+over all Windows applications (@emph{rts-rtx-rtss}). This mode requires\n+the Microsoft linker to handle RTSS libraries.\n \n @end itemize\n "}, {"sha": "9742cb20b959394f4ef87abe56bfce3d9078b9be", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1333,8 +1333,8 @@ package body Rtsfind is\n                --  The RT_Unit_Table entry that may need updating\n \n             begin\n-               --  If entry is not set, set it now, and indicate that it\n-               --  was loaded through an explicit context clause..\n+               --  If entry is not set, set it now, and indicate that it was\n+               --  loaded through an explicit context clause.\n \n                if No (U.Entity) then\n                   U := (Entity               => E,"}, {"sha": "783fdc4a95da01e9bc9c2b0ab2b8a7ced2f252c6", "filename": "gcc/ada/s-shasto.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Fs-shasto.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Fs-shasto.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-shasto.adb?ref=6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25", "patch": "@@ -6,8 +6,8 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n---                                                                         --\n+--          Copyright (C) 1998-2010, Free Software Foundation, Inc.         --\n+--                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n@@ -88,8 +88,8 @@ package body System.Shared_Storage is\n       Item   : AS.Stream_Element_Array);\n \n    subtype Hash_Header is Natural range 0 .. 30;\n-   --  Number of hash headers, related (for efficiency purposes only)\n-   --  to the maximum number of lock files..\n+   --  Number of hash headers, related (for efficiency purposes only) to the\n+   --  maximum number of lock files.\n \n    type Shared_Var_File_Entry;\n    type Shared_Var_File_Entry_Ptr is access Shared_Var_File_Entry;"}, {"sha": "ce865d77587552a14bbeab18a2e90a8e82f7f063", "filename": "gcc/ada/scos.ads", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Fscos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Fscos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscos.ads?ref=6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2009, Free Software Foundation, Inc.           --\n+--          Copyright (C) 2009-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -161,9 +161,9 @@ package SCOs is\n \n    --    and is omitted for all other cases.\n \n-   --  Note: up to 6 entries can appear on a single CS line. If more than 6\n-   --  entries appear in one logical statement sequence, continuation lines are\n-   --  marked by Cs and appear immediately after the CS line they continue.\n+   --    Note: up to 6 entries can appear on a single CS line. If more than 6\n+   --    entries appear in one logical statement sequence, continuation lines\n+   --    are marked by Cs and appear immediately after the CS line.\n \n    --  Decisions\n \n@@ -272,6 +272,23 @@ package SCOs is\n    --    enclosing statement. The SCO line for a nested decision always occurs\n    --    after the line for the enclosing decision.\n \n+   --  Case Expressions\n+\n+   --    For case statements, we rely on statement coverage to make sure that\n+   --    all branches of a case statement are covered, but that does not work\n+   --    for case expressions, since the entire expression is contained in a\n+   --    single statement. However, for complete coverage we really should be\n+   --    able to check that every branch of the case statement is covered, so\n+   --    we generate a SCO of the form:\n+\n+   --      CC sloc-range sloc-range ...\n+\n+   --    where sloc-range covers the range of the case expression.\n+\n+   --    Note: up to 6 entries can appear on a single CC line. If more than 6\n+   --    entries appear in one logical statement sequence, continuation lines\n+   --    are marked by Cc and appear immediately after the CC line.\n+\n    ---------------------------------------------------------------------\n    -- Internal table used to store Source Coverage Obligations (SCOs) --\n    ---------------------------------------------------------------------"}, {"sha": "e5a42d669f28a715216fe415e076837fdbacaaae", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -552,7 +552,8 @@ package body Sem_Ch10 is\n                                      or else\n                                        Used_In_Spec)\n                      then\n-                        Error_Msg_N (\"?redundant with clause in body\", Clause);\n+                        Error_Msg_N -- CODEFIX\n+                          (\"?redundant with clause in body\", Clause);\n                      end if;\n \n                      Used_In_Body := False;\n@@ -580,7 +581,8 @@ package body Sem_Ch10 is\n                        Exit_On_Self => True);\n \n                      if Withed then\n-                        Error_Msg_N (\"?redundant with clause\", Clause);\n+                        Error_Msg_N -- CODEFIX\n+                          (\"?redundant with clause\", Clause);\n                      end if;\n                   end;\n                end if;\n@@ -690,9 +692,9 @@ package body Sem_Ch10 is\n             end if;\n \n             if Circularity then\n-               Error_Msg_N\n+               Error_Msg_N -- CODEFIX???\n                  (\"circular dependency caused by with_clauses\", N);\n-               Error_Msg_N\n+               Error_Msg_N -- CODEFIX???\n                  (\"\\possibly missing limited_with clause\"\n                   & \" in one of the following\", N);\n \n@@ -1470,11 +1472,11 @@ package body Sem_Ch10 is\n                                                       Unit_Name)\n                               then\n                                  Error_Msg_Sloc := Sloc (It);\n-                                 Error_Msg_N\n+                                 Error_Msg_N -- CODEFIX???\n                                    (\"simultaneous visibility of limited \"\n                                     & \"and unlimited views not allowed\",\n                                     Item);\n-                                 Error_Msg_NE\n+                                 Error_Msg_NE -- CODEFIX???\n                                    (\"\\unlimited view visible through \"\n                                     & \"context clause #\",\n                                     Item, It);\n@@ -1853,7 +1855,8 @@ package body Sem_Ch10 is\n       if No (Nam)\n         or else not Is_Protected_Type (Etype (Nam))\n       then\n-         Error_Msg_N (\"missing specification for Protected body\", N);\n+         Error_Msg_N -- CODEFIX???\n+           (\"missing specification for Protected body\", N);\n       else\n          Set_Scope (Defining_Entity (N), Current_Scope);\n          Set_Has_Completion (Etype (Nam));\n@@ -2252,7 +2255,8 @@ package body Sem_Ch10 is\n       end if;\n \n       if No (Nam) or else not Is_Task_Type (Etype (Nam)) then\n-         Error_Msg_N (\"missing specification for task body\", N);\n+         Error_Msg_N -- CODEFIX???\n+           (\"missing specification for task body\", N);\n       else\n          Set_Scope (Defining_Entity (N), Current_Scope);\n          Generate_Reference (Nam, Defining_Identifier (N), 'b');\n@@ -2393,13 +2397,15 @@ package body Sem_Ch10 is\n \n             begin\n                if U_Kind = Implementation_Unit then\n-                  Error_Msg_F (\"& is an internal 'G'N'A'T unit?\", Name (N));\n+                  Error_Msg_F -- CODEFIX???\n+                    (\"& is an internal 'G'N'A'T unit?\", Name (N));\n \n                   --  Add alternative name if available, otherwise issue a\n                   --  general warning message.\n \n                   if Error_Msg_Strlen /= 0 then\n-                     Error_Msg_F (\"\\use \"\"~\"\" instead\", Name (N));\n+                     Error_Msg_F -- CODEFIX???\n+                       (\"\\use \"\"~\"\" instead\", Name (N));\n                   else\n                      Error_Msg_F\n                        (\"\\use of this unit is non-portable \" &\n@@ -3449,7 +3455,7 @@ package body Sem_Ch10 is\n                      end loop;\n \n                      if E2 = WEnt then\n-                        Error_Msg_N\n+                        Error_Msg_N -- CODEFIX???\n                           (\"unlimited view visible through use clause \", W);\n                         return;\n                      end if;\n@@ -3799,7 +3805,7 @@ package body Sem_Ch10 is\n                                          N_Generic_Package_Declaration)\n         and then Nkind (Lib_Unit) not in N_Generic_Renaming_Declaration\n       then\n-         Error_Msg_N\n+         Error_Msg_N -- CODEFIX???\n            (\"child of a generic package must be a generic unit\", Lib_Unit);\n \n       elsif not Is_Package_Or_Generic_Package (P_Name) then\n@@ -4491,11 +4497,11 @@ package body Sem_Ch10 is\n                         --  installed.\n \n                         if Kind = N_Package_Declaration then\n-                           Error_Msg_N\n+                           Error_Msg_N -- CODEFIX???\n                              (\"simultaneous visibility of the limited and \" &\n                               \"unlimited views not allowed\", N);\n                            Error_Msg_Sloc := Sloc (Item);\n-                           Error_Msg_NE\n+                           Error_Msg_NE -- CODEFIX???\n                              (\"\\\\  unlimited view of & visible through the \" &\n                               \"context clause #\", N, P);\n                            Error_Msg_Sloc := Sloc (Decl);\n@@ -5948,9 +5954,9 @@ package body Sem_Ch10 is\n          if Nkind (Item) = N_With_Clause\n            and then Private_Present (Item)\n          then\n-            --  If private_with_clause is redundant, remove it from\n-            --  context, as a small optimization to subsequent handling\n-            --  of private_with clauses in other nested packages..\n+            --  If private_with_clause is redundant, remove it from context,\n+            --  as a small optimization to subsequent handling of private_with\n+            --  clauses in other nested packages.\n \n             if In_Regular_With_Clause (Entity (Name (Item))) then\n                declare"}, {"sha": "20a1614fb06e6cd6e4be486d54d08b42ae65f2d1", "filename": "gcc/ada/sem_intr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Fsem_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Fsem_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_intr.adb?ref=6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25", "patch": "@@ -53,8 +53,8 @@ package body Sem_Intr is\n    --  returns type String.\n \n    procedure Check_Intrinsic_Operator (E : Entity_Id; N : Node_Id);\n-   --  Check that operator is one of the binary arithmetic operators, and\n-   --  that the types involved both have underlying integer types.\n+   --  Check that operator is one of the binary arithmetic operators, and that\n+   --  the types involved both have underlying integer types.\n \n    procedure Check_Shift (E : Entity_Id; N : Node_Id);\n    --  Check intrinsic shift subprogram, the two arguments are the same"}, {"sha": "287a940e646c3c9db0772b15c3493060945e2809", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 25, "deletions": 8, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25", "patch": "@@ -130,10 +130,14 @@ package body Sem_Res is\n    --  declaration, and not an (anonymous) allocator type.\n \n    function Is_Predefined_Op (Nam : Entity_Id) return Boolean;\n-   --  Utility to check whether the name in the call is a predefined\n-   --  operator, in which case the call is made into an operator node.\n-   --  An instance of an intrinsic conversion operation may be given\n-   --  an operator name, but is not treated like an operator.\n+   --  Utility to check whether the entity for an operator is a predefined\n+   --  operator, in which case the expression is left as an operator in the\n+   --  tree (else it is rewritten into a call). An instance of an intrinsic\n+   --  conversion operation may be given an operator name, but is not treated\n+   --  like an operator. Note that an operator that is an imported back-end\n+   --  builtin has convention Intrinsic, but is expected to be rewritten into\n+   --  a call, so such an operator is not treated as predefined by this\n+   --  predicate.\n \n    procedure Replace_Actual_Discriminants (N : Node_Id; Default : Node_Id);\n    --  If a default expression in entry call N depends on the discriminants\n@@ -213,6 +217,9 @@ package body Sem_Res is\n    procedure Resolve_Intrinsic_Operator (N : Node_Id; Typ : Entity_Id);\n    --  A call to a user-defined intrinsic operator is rewritten as a call\n    --  to the corresponding predefined operator, with suitable conversions.\n+   --  Note that this applies only for intrinsic operators that denote\n+   --  predefined operators, not opeartors that are intrinsic imports of\n+   --  back-end builtins.\n \n    procedure Resolve_Intrinsic_Unary_Operator (N : Node_Id; Typ : Entity_Id);\n    --  Ditto, for unary operators (arithmetic ones and \"not\" on signed\n@@ -1108,11 +1115,21 @@ package body Sem_Res is\n \n    function Is_Predefined_Op (Nam : Entity_Id) return Boolean is\n    begin\n-      return Is_Intrinsic_Subprogram (Nam)\n-        and then not Is_Generic_Instance (Nam)\n+      --  Predefined operators are intrinsic subprograms\n+\n+      if not Is_Intrinsic_Subprogram (Nam) then\n+         return False;\n+      end if;\n+\n+      --  A call to a back-end builtin is never a predefined operator\n+\n+      if Is_Imported (Nam) and then Present (Interface_Name (Nam)) then\n+         return False;\n+      end if;\n+\n+      return not Is_Generic_Instance (Nam)\n         and then Chars (Nam) in Any_Operator_Name\n-        and then (No (Alias (Nam))\n-                   or else Is_Predefined_Op (Alias (Nam)));\n+        and then (No (Alias (Nam)) or else Is_Predefined_Op (Alias (Nam)));\n    end Is_Predefined_Op;\n \n    -----------------------------"}, {"sha": "ed9a7138c43eacf40b7fa96b72056ad24ddf9748", "filename": "gcc/ada/tbuild.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Ftbuild.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Ftbuild.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.adb?ref=6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -659,7 +659,7 @@ package body Tbuild is\n \n          --  We don't really need these shift operators, since they never\n          --  appear as operators in the source, but the path of least\n-         --  resistance is to put them in (the aggregate must be complete)\n+         --  resistance is to put them in (the aggregate must be complete).\n \n          N_Op_Rotate_Left            => Name_Rotate_Left,\n          N_Op_Rotate_Right           => Name_Rotate_Right,"}, {"sha": "42004ae2654173a7a2cab5c6c375383312ac326a", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 32, "deletions": 31, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=6a497607af0b7e34aad6d6f3cc04d2c8f5ddfe25", "patch": "@@ -348,16 +348,16 @@ package Types is\n    --  lie in. Such tests appear only in the lowest level packages.\n \n    subtype List_Range      is Union_Id\n-     range List_Low_Bound   .. List_High_Bound;\n+     range List_Low_Bound    .. List_High_Bound;\n \n    subtype Node_Range      is Union_Id\n-     range Node_Low_Bound   .. Node_High_Bound;\n+     range Node_Low_Bound    .. Node_High_Bound;\n \n    subtype Elist_Range     is Union_Id\n-     range Elist_Low_Bound  .. Elist_High_Bound;\n+     range Elist_Low_Bound   .. Elist_High_Bound;\n \n    subtype Elmt_Range      is Union_Id\n-     range Elmt_Low_Bound   .. Elmt_High_Bound;\n+     range Elmt_Low_Bound    .. Elmt_High_Bound;\n \n    subtype Names_Range     is Union_Id\n      range Names_Low_Bound   .. Names_High_Bound;\n@@ -369,23 +369,23 @@ package Types is\n      range Uint_Low_Bound    .. Uint_High_Bound;\n \n    subtype Ureal_Range     is Union_Id\n-     range Ureal_Low_Bound    .. Ureal_High_Bound;\n+     range Ureal_Low_Bound   .. Ureal_High_Bound;\n \n-   ----------------------------\n+   -----------------------------\n    -- Types for Atree Package --\n-   ----------------------------\n+   -----------------------------\n \n    --  Node_Id values are used to identify nodes in the tree. They are\n-   --  subscripts into the Node table declared in package Tree. Note that\n-   --  the special values Empty and Error are subscripts into this table,\n+   --  subscripts into the Nodes table declared in package Atree. Note that\n+   --  the special values Empty and Error are subscripts into this table.\n    --  See package Atree for further details.\n \n    type Node_Id is range Node_Low_Bound .. Node_High_Bound;\n    --  Type used to identify nodes in the tree\n \n    subtype Entity_Id is Node_Id;\n-   --  A synonym for node types, used in the entity package to refer to nodes\n-   --  that are entities (i.e. nodes with an Nkind of N_Defining_xxx) All such\n+   --  A synonym for node types, used in the Einfo package to refer to nodes\n+   --  that are entities (i.e. nodes with an Nkind of N_Defining_xxx). All such\n    --  nodes are extended nodes and these are the only extended nodes, so that\n    --  in practice entity and extended nodes are synonymous.\n \n@@ -402,12 +402,12 @@ package Types is\n \n    Empty_List_Or_Node : constant := 0;\n    --  This constant is used in situations (e.g. initializing empty fields)\n-   --  where the value set will be used to represent either an empty node\n-   --  or a non-existent list, depending on the context.\n+   --  where the value set will be used to represent either an empty node or\n+   --  a non-existent list, depending on the context.\n \n    Error : constant Node_Id := Node_Low_Bound + 1;\n-   --  Used to indicate that there was an error in the source program. A node\n-   --  is actually allocated at this address, so that Nkind (Error) = N_Error.\n+   --  Used to indicate an error in the source program. A node is actually\n+   --  allocated with this Id value, so that Nkind (Error) = N_Error.\n \n    Empty_Or_Error : constant Node_Id := Error;\n    --  Since Empty and Error are the first two Node_Id values, the test for\n@@ -422,11 +422,12 @@ package Types is\n    -- Types for Nlists Package --\n    ------------------------------\n \n-   --  List_Id values are used to identify node lists in the tree. They are\n-   --  subscripts into the Lists table declared in package Tree. Note that the\n-   --  special value Error_List is a subscript in this table, but the value\n-   --  No_List is *not* a valid subscript, and any attempt to apply list\n-   --  operations to No_List will cause a (detected) error.\n+   --  List_Id values are used to identify node lists stored in the tree, so\n+   --  that each node can be on at most one such list (see package Nlists for\n+   --  further details). Note that the special value Error_List is a subscript\n+   --  in this table, but the value No_List is *not* a valid subscript, and any\n+   --  attempt to apply list operations to No_List will cause a (detected)\n+   --  error.\n \n    type List_Id is range List_Low_Bound .. List_High_Bound;\n    --  Type used to identify a node list\n@@ -449,24 +450,23 @@ package Types is\n    -- Types for Elists Package --\n    ------------------------------\n \n-   --  Element list Id values are used to identify element lists stored in the\n-   --  tree (see package Atree for further details). They are formed by adding\n-   --  a bias (Element_List_Bias) to subscript values in the same array that is\n-   --  used for node list headers.\n+   --  Element list Id values are used to identify element lists stored outside\n+   --  of the tree, allowing nodes to be members of more than one such list\n+   --  (see package Elists for further details).\n \n    type Elist_Id is range Elist_Low_Bound .. Elist_High_Bound;\n    --  Type used to identify an element list (Elist header table subscript)\n \n    No_Elist : constant Elist_Id := Elist_Low_Bound;\n-   --  Used to indicate absence of an element list. Note that this is not\n-   --  an actual Elist header, so element list operations on this value\n-   --  are not valid.\n+   --  Used to indicate absence of an element list. Note that this is not an\n+   --  actual Elist header, so element list operations on this value are not\n+   --  valid.\n \n    First_Elist_Id : constant Elist_Id := No_Elist + 1;\n    --  Subscript of first allocated Elist header\n \n-   --  Element Id values are used to identify individual elements of an\n-   --  element list (see package Elists for further details).\n+   --  Element Id values are used to identify individual elements of an element\n+   --  list (see package Elists for further details).\n \n    type Elmt_Id is range Elmt_Low_Bound .. Elmt_High_Bound;\n    --  Type used to identify an element list\n@@ -482,11 +482,12 @@ package Types is\n    -------------------------------\n \n    --  String_Id values are used to identify entries in the strings table. They\n-   --  are subscripts into the strings table defined in package Strings.\n+   --  are subscripts into the Strings table defined in package Stringt.\n \n    --  Note that with only a few exceptions, which are clearly documented, the\n    --  type String_Id should be regarded as a private type. In particular it is\n    --  never appropriate to perform arithmetic operations using this type.\n+   --  Doesn't this also apply to all other *_Id types???\n \n    type String_Id is range Strings_Low_Bound .. Strings_High_Bound;\n    --  Type used to identify entries in the strings table\n@@ -554,7 +555,7 @@ package Types is\n    type Unit_Number_Type is new Int;\n    --  Unit number. The main source is unit 0, and subsidiary sources have\n    --  non-zero numbers starting with 1. Unit numbers are used to index the\n-   --  file table in Lib.\n+   --  Units table in package Lib.\n \n    Main_Unit : constant Unit_Number_Type := 0;\n    --  Unit number value for main unit"}]}