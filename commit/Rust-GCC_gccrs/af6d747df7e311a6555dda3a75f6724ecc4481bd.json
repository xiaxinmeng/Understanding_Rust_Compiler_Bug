{"sha": "af6d747df7e311a6555dda3a75f6724ecc4481bd", "node_id": "C_kwDOANBUbNoAKGFmNmQ3NDdkZjdlMzExYTY1NTVkZGEzYTc1ZjY3MjRlY2M0NDgxYmQ", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-10-31T17:40:10Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-11-01T01:23:17Z"}, "message": "c++: pass std attributes to make_call_declarator\n\nIt seems preferable to pass these to the function rather than set them\nseparately after the call.\n\ngcc/cp/ChangeLog:\n\n\t* parser.cc (make_call_declarator): Add std_attrs parm.\n\t(cp_parser_lambda_declarator_opt): Pass it.\n\t(cp_parser_direct_declarator): Pass it.", "tree": {"sha": "a250180b381cbfa674e977cac83501de64bedf8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a250180b381cbfa674e977cac83501de64bedf8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af6d747df7e311a6555dda3a75f6724ecc4481bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af6d747df7e311a6555dda3a75f6724ecc4481bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af6d747df7e311a6555dda3a75f6724ecc4481bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af6d747df7e311a6555dda3a75f6724ecc4481bd/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43c40f114a68edc9a9cc9963dc940c11806ff863", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c40f114a68edc9a9cc9963dc940c11806ff863", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43c40f114a68edc9a9cc9963dc940c11806ff863"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "6da32801bab42ac356137e4961b82f8cd702dc42", "filename": "gcc/cp/parser.cc", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6d747df7e311a6555dda3a75f6724ecc4481bd/gcc%2Fcp%2Fparser.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6d747df7e311a6555dda3a75f6724ecc4481bd/gcc%2Fcp%2Fparser.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.cc?ref=af6d747df7e311a6555dda3a75f6724ecc4481bd", "patch": "@@ -1607,7 +1607,7 @@ clear_decl_specs (cp_decl_specifier_seq *decl_specs)\n \n static cp_declarator *make_call_declarator\n   (cp_declarator *, tree, cp_cv_quals, cp_virt_specifiers, cp_ref_qualifier,\n-   tree, tree, tree, tree, location_t);\n+   tree, tree, tree, tree, tree, location_t);\n static cp_declarator *make_array_declarator\n   (cp_declarator *, tree);\n static cp_declarator *make_pointer_declarator\n@@ -1780,7 +1780,8 @@ make_ptrmem_declarator (cp_cv_quals cv_qualifiers, tree class_type,\n /* Make a declarator for the function given by TARGET, with the\n    indicated PARMS.  The CV_QUALIFIERS apply to the function, as in\n    \"const\"-qualified member function.  The EXCEPTION_SPECIFICATION\n-   indicates what exceptions can be thrown.  */\n+   indicates what exceptions can be thrown.  STD_ATTRS contains\n+   attributes that appertain to the function type. */\n \n cp_declarator *\n make_call_declarator (cp_declarator *target,\n@@ -1792,6 +1793,7 @@ make_call_declarator (cp_declarator *target,\n \t\t      tree exception_specification,\n \t\t      tree late_return_type,\n \t\t      tree requires_clause,\n+\t\t      tree std_attrs,\n \t\t      location_t parens_loc)\n {\n   cp_declarator *declarator;\n@@ -1816,6 +1818,8 @@ make_call_declarator (cp_declarator *target,\n   else\n     declarator->parameter_pack_p = false;\n \n+  declarator->std_attributes = std_attrs;\n+\n   return declarator;\n }\n \n@@ -11684,8 +11688,8 @@ cp_parser_lambda_declarator_opt (cp_parser* parser, tree lambda_expr)\n \t\t\t\t       exception_spec,\n \t\t\t\t       return_type,\n \t\t\t\t       trailing_requires_clause,\n+\t\t\t\t       std_attrs,\n \t\t\t\t       UNKNOWN_LOCATION);\n-    declarator->std_attributes = std_attrs;\n \n     fco = grokmethod (&return_type_specs,\n \t\t      declarator,\n@@ -23264,8 +23268,8 @@ cp_parser_direct_declarator (cp_parser* parser,\n \t\t\t\t\t\t     exception_specification,\n \t\t\t\t\t\t     late_return,\n \t\t\t\t\t\t     requires_clause,\n+\t\t\t\t\t\t     attrs,\n \t\t\t\t\t\t     parens_loc);\n-\t\t  declarator->std_attributes = attrs;\n \t\t  declarator->attributes = gnu_attrs;\n \t\t  /* Any subsequent parameter lists are to do with\n \t\t     return type, so are not those of the declared"}]}