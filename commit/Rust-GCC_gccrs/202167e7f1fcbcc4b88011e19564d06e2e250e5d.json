{"sha": "202167e7f1fcbcc4b88011e19564d06e2e250e5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAyMTY3ZTdmMWZjYmNjNGI4ODAxMWUxOTU2NGQwNmUyZTI1MGU1ZA==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2004-02-28T00:34:26Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2004-02-28T00:34:26Z"}, "message": "parse.y (build_assertion): Re-do 02-25 change following Jeff Sturm suggestion: Use build_incomplete_class_ref.\n\n\n\t* parse.y (build_assertion):  Re-do 02-25 change following Jeff Sturm\n\tsuggestion:  Use build_incomplete_class_ref.\n\nFrom-SVN: r78597", "tree": {"sha": "e8e1f2e5ac4212f887d957c75ea72cfbaf462dd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8e1f2e5ac4212f887d957c75ea72cfbaf462dd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/202167e7f1fcbcc4b88011e19564d06e2e250e5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/202167e7f1fcbcc4b88011e19564d06e2e250e5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/202167e7f1fcbcc4b88011e19564d06e2e250e5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/202167e7f1fcbcc4b88011e19564d06e2e250e5d/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0717c5b0655fada57f4e0726265ad6354fa0bb22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0717c5b0655fada57f4e0726265ad6354fa0bb22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0717c5b0655fada57f4e0726265ad6354fa0bb22"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "4bc03b53bf2a66596476af33cdc52496d7358c02", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/202167e7f1fcbcc4b88011e19564d06e2e250e5d/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/202167e7f1fcbcc4b88011e19564d06e2e250e5d/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=202167e7f1fcbcc4b88011e19564d06e2e250e5d", "patch": "@@ -1,3 +1,8 @@\n+2004-02-27  Per Bothner  <per@bothner.com>\n+\n+\t* parse.y (build_assertion):  Re-do 02-25 change following Jeff Sturm\n+\tsuggestion:  Use build_incomplete_class_ref.\n+\n 2004-02-27  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* java/parse.h: Update copyright."}, {"sha": "14bec8d01f522d6720b0beda55ea999021c2efbc", "filename": "gcc/java/parse.y", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/202167e7f1fcbcc4b88011e19564d06e2e250e5d/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/202167e7f1fcbcc4b88011e19564d06e2e250e5d/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=202167e7f1fcbcc4b88011e19564d06e2e250e5d", "patch": "@@ -15302,10 +15302,6 @@ build_assertion (int location, tree condition, tree value)\n     {\n       tree field, classdollar, id, call;\n       tree class_type = TREE_TYPE (klass);\n-      tree outer_class = klass;\n-      while (INNER_CLASS_DECL_P (outer_class))\n-\touter_class = DECL_CONTEXT (outer_class);\n-      outer_class = TREE_TYPE (outer_class);\n \n       field = add_field (class_type,\n \t\t\t get_identifier (\"$assertionsDisabled\"),\n@@ -15314,10 +15310,7 @@ build_assertion (int location, tree condition, tree value)\n       MAYBE_CREATE_VAR_LANG_DECL_SPECIFIC (field);\n       FIELD_SYNTHETIC (field) = 1;\n \n-      if (!TYPE_DOT_CLASS (outer_class))\n-\tbuild_dot_class_method (outer_class);\n-      classdollar\n-\t= build_dot_class_method_invocation (outer_class, class_type);\n+      classdollar = build_incomplete_class_ref (location, class_type);\n \n       /* Call CLASS.desiredAssertionStatus().  */\n       id = build_wfl_node (get_identifier (\"desiredAssertionStatus\"));"}]}