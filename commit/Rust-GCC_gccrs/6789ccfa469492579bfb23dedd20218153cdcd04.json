{"sha": "6789ccfa469492579bfb23dedd20218153cdcd04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc4OWNjZmE0Njk0OTI1NzliZmIyM2RlZGQyMDIxODE1M2NkY2QwNA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-12-10T01:37:37Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-12-10T01:37:37Z"}, "message": "Implement LWG DR 2329 and DR 2332.\n\n\t* include/bits/regex.h (regex_match, regex_search): LWG DR 2329,\n\tadd deleted overloads for rvalue strings.\n\t(regex_iterator, regex_token_iterator): LWG DR 2332, add deleted\n\tconstructors for rvalue regexes.\n\t* testsuite/28_regex/algorithms/regex_match/dr2329_neg.cc: New.\n\t* testsuite/28_regex/algorithms/regex_search/dr2329_neg.cc: New.\n\t* testsuite/28_regex/iterators/regex_iterator/ctors/char/dr2332_neg.cc:\n\tNew.\n\t* testsuite/28_regex/iterators/regex_token_iterator/ctors/char/\n\tdr2332_neg.cc: New.\n\nFrom-SVN: r218555", "tree": {"sha": "816f7705563c226e9adf366508afe2675d346bdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/816f7705563c226e9adf366508afe2675d346bdd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6789ccfa469492579bfb23dedd20218153cdcd04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6789ccfa469492579bfb23dedd20218153cdcd04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6789ccfa469492579bfb23dedd20218153cdcd04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6789ccfa469492579bfb23dedd20218153cdcd04/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a664a279af73c048fcfdad32eb8b6c29f27dcda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a664a279af73c048fcfdad32eb8b6c29f27dcda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a664a279af73c048fcfdad32eb8b6c29f27dcda"}], "stats": {"total": 186, "additions": 186, "deletions": 0}, "files": [{"sha": "ea6e3322a17afd3fcb7604da3fa8b5a20157a5d2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6789ccfa469492579bfb23dedd20218153cdcd04/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6789ccfa469492579bfb23dedd20218153cdcd04/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6789ccfa469492579bfb23dedd20218153cdcd04", "patch": "@@ -11,6 +11,17 @@\n \t* include/std/future (__future_base::_Setter::operator(),\n \t__future_base::_Task_setter::operator()): Make call operators const.\n \n+\t* include/bits/regex.h (regex_match, regex_search): LWG DR 2329,\n+\tadd deleted overloads for rvalue strings.\n+\t(regex_iterator, regex_token_iterator): LWG DR 2332, add deleted\n+\tconstructors for rvalue regexes.\n+\t* testsuite/28_regex/algorithms/regex_match/dr2329_neg.cc: New.\n+\t* testsuite/28_regex/algorithms/regex_search/dr2329_neg.cc: New.\n+\t* testsuite/28_regex/iterators/regex_iterator/ctors/char/dr2332_neg.cc:\n+\tNew.\n+\t* testsuite/28_regex/iterators/regex_token_iterator/ctors/char/\n+\tdr2332_neg.cc: New.\n+\n 2014-12-09  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/64203"}, {"sha": "cb6bc93251a86a8734ffd0c4ac4422d529129bed", "filename": "libstdc++-v3/include/bits/regex.h", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6789ccfa469492579bfb23dedd20218153cdcd04/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6789ccfa469492579bfb23dedd20218153cdcd04/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h?ref=6789ccfa469492579bfb23dedd20218153cdcd04", "patch": "@@ -2063,6 +2063,19 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t= regex_constants::match_default)\n     { return regex_match(__s.begin(), __s.end(), __m, __re, __flags); }\n \n+  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+  // 2329. regex_match() with match_results should forbid temporary strings\n+  /// Prevent unsafe attempts to get match_results from a temporary string.\n+  template<typename _Ch_traits, typename _Ch_alloc,\n+\t   typename _Alloc, typename _Ch_type, typename _Rx_traits>\n+    bool\n+    regex_match(const basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&&,\n+\t\tmatch_results<typename basic_string<_Ch_type,\n+\t\t_Ch_traits, _Ch_alloc>::const_iterator, _Alloc>&,\n+\t\tconst basic_regex<_Ch_type, _Rx_traits>&,\n+\t\tregex_constants::match_flag_type\n+\t\t= regex_constants::match_default) = delete;\n+\n   /**\n    * @brief Indicates if there is a match between the regular expression @p e\n    * and a C-style null-terminated string.\n@@ -2239,6 +2252,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t = regex_constants::match_default)\n     { return regex_search(__s.begin(), __s.end(), __m, __e, __f); }\n \n+  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+  // 2329. regex_search() with match_results should forbid temporary strings\n+  /// Prevent unsafe attempts to get match_results from a temporary string.\n+  template<typename _Ch_traits, typename _Ch_alloc,\n+\t   typename _Alloc, typename _Ch_type,\n+\t   typename _Rx_traits>\n+    bool\n+    regex_search(const basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&&,\n+\t\t match_results<typename basic_string<_Ch_type,\n+\t\t _Ch_traits, _Ch_alloc>::const_iterator, _Alloc>&,\n+\t\t const basic_regex<_Ch_type, _Rx_traits>&,\n+\t\t regex_constants::match_flag_type\n+\t\t = regex_constants::match_default) = delete;\n+\n   // std [28.11.4] Function template regex_replace\n   /**\n    * @brief Search for a regular expression within a range for multiple times,\n@@ -2437,6 +2464,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  *this = regex_iterator();\n       }\n \n+      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+      // 2332. regex_iterator should forbid temporary regexes\n+      regex_iterator(_Bi_iter, _Bi_iter, const regex_type&&,\n+\t\t     regex_constants::match_flag_type\n+\t\t     = regex_constants::match_default) = delete;\n       /**\n        * Copy constructs a %regex_iterator.\n        */\n@@ -2618,6 +2650,25 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _M_subs(__submatches, *(&__submatches+1)), _M_n(0)\n       { _M_init(__a, __b); }\n \n+      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+      // 2332. regex_token_iterator should forbid temporary regexes\n+      regex_token_iterator(_Bi_iter, _Bi_iter, const regex_type&&, int = 0,\n+\t\t\t   regex_constants::match_flag_type =\n+\t\t\t   regex_constants::match_default) = delete;\n+      regex_token_iterator(_Bi_iter, _Bi_iter, const regex_type&&,\n+\t\t\t   const std::vector<int>&,\n+\t\t\t   regex_constants::match_flag_type =\n+\t\t\t   regex_constants::match_default) = delete;\n+      regex_token_iterator(_Bi_iter, _Bi_iter, const regex_type&&,\n+\t\t\t   initializer_list<int>,\n+\t\t\t   regex_constants::match_flag_type =\n+\t\t\t   regex_constants::match_default) = delete;\n+      template <std::size_t N>\n+\tregex_token_iterator(_Bi_iter, _Bi_iter, const regex_type&&,\n+\t\t\t     const int (&)[N],\n+\t\t\t     regex_constants::match_flag_type =\n+\t\t\t     regex_constants::match_default) = delete;\n+\n       /**\n        * @brief Copy constructs a %regex_token_iterator.\n        * @param __rhs [IN] A %regex_token_iterator to copy."}, {"sha": "3070f93090180d2f0cd60875b0026bfd5ca92002", "filename": "libstdc++-v3/testsuite/28_regex/algorithms/regex_match/dr2329_neg.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6789ccfa469492579bfb23dedd20218153cdcd04/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fdr2329_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6789ccfa469492579bfb23dedd20218153cdcd04/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fdr2329_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fdr2329_neg.cc?ref=6789ccfa469492579bfb23dedd20218153cdcd04", "patch": "@@ -0,0 +1,28 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+#include <regex>\n+\n+void\n+test01()\n+{\n+  std::smatch m;\n+  regex_match(std::string{}, m, std::regex{\".\"}); // { dg-error \"deleted\" }\n+}"}, {"sha": "2381ddb2d6ed5a362f032a5696a5fe34ed5d31ab", "filename": "libstdc++-v3/testsuite/28_regex/algorithms/regex_search/dr2332_neg.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6789ccfa469492579bfb23dedd20218153cdcd04/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_search%2Fdr2332_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6789ccfa469492579bfb23dedd20218153cdcd04/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_search%2Fdr2332_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_search%2Fdr2332_neg.cc?ref=6789ccfa469492579bfb23dedd20218153cdcd04", "patch": "@@ -0,0 +1,28 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+#include <regex>\n+\n+void\n+test01()\n+{\n+  std::smatch m;\n+  regex_search(std::string{}, m, std::regex{\".\"}); // { dg-error \"deleted\" }\n+}"}, {"sha": "2a72b4f503e43f4241be05e70983538d8e8693bc", "filename": "libstdc++-v3/testsuite/28_regex/iterators/regex_iterator/ctors/char/dr2332_neg.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6789ccfa469492579bfb23dedd20218153cdcd04/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fiterators%2Fregex_iterator%2Fctors%2Fchar%2Fdr2332_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6789ccfa469492579bfb23dedd20218153cdcd04/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fiterators%2Fregex_iterator%2Fctors%2Fchar%2Fdr2332_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fiterators%2Fregex_iterator%2Fctors%2Fchar%2Fdr2332_neg.cc?ref=6789ccfa469492579bfb23dedd20218153cdcd04", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+#include <regex>\n+\n+void\n+test01()\n+{\n+  using iter_type = std::regex_iterator<const char*>;\n+  const char* s = \"\";\n+  iter_type(s, s, std::regex{}); // { dg-error \"deleted\" }\n+}"}, {"sha": "6ff5870a7dbf4293aefc0ba294a51406042949d5", "filename": "libstdc++-v3/testsuite/28_regex/iterators/regex_token_iterator/ctors/char/dr2332_neg.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6789ccfa469492579bfb23dedd20218153cdcd04/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fiterators%2Fregex_token_iterator%2Fctors%2Fchar%2Fdr2332_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6789ccfa469492579bfb23dedd20218153cdcd04/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fiterators%2Fregex_token_iterator%2Fctors%2Fchar%2Fdr2332_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fiterators%2Fregex_token_iterator%2Fctors%2Fchar%2Fdr2332_neg.cc?ref=6789ccfa469492579bfb23dedd20218153cdcd04", "patch": "@@ -0,0 +1,39 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+#include <regex>\n+\n+void\n+test01()\n+{\n+  using iter_type = std::regex_token_iterator<const char*>;\n+  const char* s = \"\";\n+\n+  iter_type(s, s, std::regex{});\t// { dg-error \"deleted\" }\n+\n+  std::vector<int> v;\n+  iter_type(s, s, std::regex{}, v);\t// { dg-error \"deleted\" }\n+\n+  std::initializer_list<int> il = {1};\n+  iter_type(s, s, std::regex{}, il);\t// { dg-error \"deleted\" }\n+\n+  const int i[2] = { };\n+  iter_type(s, s, std::regex{}, i);\t// { dg-error \"deleted\" }\n+}"}]}