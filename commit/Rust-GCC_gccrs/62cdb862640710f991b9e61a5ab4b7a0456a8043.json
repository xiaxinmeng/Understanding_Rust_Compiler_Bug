{"sha": "62cdb862640710f991b9e61a5ab4b7a0456a8043", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJjZGI4NjI2NDA3MTBmOTkxYjllNjFhNWFiNGI3YTA0NTZhODA0Mw==", "commit": {"author": {"name": "Matthew Fortune", "email": "matthew.fortune@imgtec.com", "date": "2017-02-20T12:07:06Z"}, "committer": {"name": "Matthew Fortune", "email": "mpf@gcc.gnu.org", "date": "2017-02-20T12:07:06Z"}, "message": "Tighten condition for converting SUBREG reloads from OP_OUT to OP_INOUT\n\ngcc/\n\tPR target/78660\n\t* lra-constraints.c (curr_insn_transform): Tighten condition\n\tfor converting SUBREG reloads from OP_OUT to OP_INOUT.\n\nFrom-SVN: r245599", "tree": {"sha": "767707bc6584dcc011f782b953752902371887ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/767707bc6584dcc011f782b953752902371887ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62cdb862640710f991b9e61a5ab4b7a0456a8043", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62cdb862640710f991b9e61a5ab4b7a0456a8043", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62cdb862640710f991b9e61a5ab4b7a0456a8043", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62cdb862640710f991b9e61a5ab4b7a0456a8043/comments", "author": {"login": "mfortune", "id": 10220247, "node_id": "MDQ6VXNlcjEwMjIwMjQ3", "avatar_url": "https://avatars.githubusercontent.com/u/10220247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfortune", "html_url": "https://github.com/mfortune", "followers_url": "https://api.github.com/users/mfortune/followers", "following_url": "https://api.github.com/users/mfortune/following{/other_user}", "gists_url": "https://api.github.com/users/mfortune/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfortune/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfortune/subscriptions", "organizations_url": "https://api.github.com/users/mfortune/orgs", "repos_url": "https://api.github.com/users/mfortune/repos", "events_url": "https://api.github.com/users/mfortune/events{/privacy}", "received_events_url": "https://api.github.com/users/mfortune/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "222aafd7b63a3d79a80c55efefae7b52953be5b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/222aafd7b63a3d79a80c55efefae7b52953be5b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/222aafd7b63a3d79a80c55efefae7b52953be5b4"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "1823049df778374707fb3fee2e580a096b7e21e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62cdb862640710f991b9e61a5ab4b7a0456a8043/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62cdb862640710f991b9e61a5ab4b7a0456a8043/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62cdb862640710f991b9e61a5ab4b7a0456a8043", "patch": "@@ -1,3 +1,9 @@\n+2017-02-20  Matthew Fortune  <matthew.fortune@imgtec.com>\n+\n+\tPR target/78660\n+\t* lra-constraints.c (curr_insn_transform): Tighten condition\n+\tfor converting SUBREG reloads from OP_OUT to OP_INOUT.\n+\n 2017-02-20  Matthew Fortune  <matthew.fortune@imgtec.com>\n \n \tPR target/78660"}, {"sha": "18b309658bde2ea13ee7f437b65409832be40d97", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62cdb862640710f991b9e61a5ab4b7a0456a8043/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62cdb862640710f991b9e61a5ab4b7a0456a8043/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=62cdb862640710f991b9e61a5ab4b7a0456a8043", "patch": "@@ -4140,7 +4140,17 @@ curr_insn_transform (bool check_only_p)\n \t\t\t  < GET_MODE_PRECISION (GET_MODE (reg))\n \t\t\t  && WORD_REGISTER_OPERATIONS)))\n \t\t{\n-\t\t  if (type == OP_OUT)\n+\t\t  /* An OP_INOUT is required when reloading a subreg of a\n+\t\t     mode wider than a word to ensure that data beyond the\n+\t\t     word being reloaded is preserved.  Also automatically\n+\t\t     ensure that strict_low_part reloads are made into\n+\t\t     OP_INOUT which should already be true from the backend\n+\t\t     constraints.  */\n+\t\t  if (type == OP_OUT\n+\t\t      && (curr_static_id->operand[i].strict_low\n+\t\t\t  || (GET_MODE_SIZE (GET_MODE (reg)) > UNITS_PER_WORD\n+\t\t\t      && (GET_MODE_SIZE (mode)\n+\t\t\t\t  < GET_MODE_SIZE (GET_MODE (reg))))))\n \t\t    type = OP_INOUT;\n \t\t  loc = &SUBREG_REG (*loc);\n \t\t  mode = GET_MODE (*loc);"}]}