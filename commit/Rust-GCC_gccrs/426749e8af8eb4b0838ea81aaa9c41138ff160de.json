{"sha": "426749e8af8eb4b0838ea81aaa9c41138ff160de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI2NzQ5ZThhZjhlYjRiMDgzOGVhODFhYWE5YzQxMTM4ZmYxNjBkZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-12T22:59:14Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-12T22:59:14Z"}, "message": "(expand_function_start): Add redundant copy to static_chain_incoming_rtx if...\n\n(expand_function_start): Add redundant copy to\nstatic_chain_incoming_rtx if SMALL_REGISTER_CLASS so inlining works\nproperly.\n\nFrom-SVN: r7909", "tree": {"sha": "09267a907a7c02a245b25c1d427be0c7dce2118f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09267a907a7c02a245b25c1d427be0c7dce2118f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/426749e8af8eb4b0838ea81aaa9c41138ff160de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/426749e8af8eb4b0838ea81aaa9c41138ff160de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/426749e8af8eb4b0838ea81aaa9c41138ff160de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/426749e8af8eb4b0838ea81aaa9c41138ff160de/comments", "author": null, "committer": null, "parents": [{"sha": "a349007c7b27bdedaeffb33f32598d633565d33f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a349007c7b27bdedaeffb33f32598d633565d33f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a349007c7b27bdedaeffb33f32598d633565d33f"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "947972f5f9e2e52c9b4355fc2e90a5d9f5cc39d2", "filename": "gcc/function.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/426749e8af8eb4b0838ea81aaa9c41138ff160de/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/426749e8af8eb4b0838ea81aaa9c41138ff160de/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=426749e8af8eb4b0838ea81aaa9c41138ff160de", "patch": "@@ -4972,11 +4972,14 @@ expand_function_start (subr, parms_have_cleanups)\n   if (tem && ! obey_regdecls)\n     {\n #ifdef SMALL_REGISTER_CLASSES\n+      /* If the static chain originally came in a register, put it back\n+\t there, then move it out in the next insn.  The reason for\n+\t this peculiar code is to satisfy function integration.  */\n       if (GET_CODE (static_chain_incoming_rtx) == REG)\n-\tlast_ptr = copy_to_reg (last_ptr);\n-      else\n+\temit_move_insn (static_chain_incoming_rtx, last_ptr);\n #endif\n-\tlast_ptr = copy_to_reg (static_chain_incoming_rtx);\n+\n+      last_ptr = copy_to_reg (static_chain_incoming_rtx);\n     }\n \n   context_display = 0;"}]}