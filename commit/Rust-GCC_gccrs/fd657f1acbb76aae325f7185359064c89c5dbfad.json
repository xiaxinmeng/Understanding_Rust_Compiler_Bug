{"sha": "fd657f1acbb76aae325f7185359064c89c5dbfad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ2NTdmMWFjYmI3NmFhZTMyNWY3MTg1MzU5MDY0Yzg5YzVkYmZhZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2018-05-24T18:16:29Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-05-24T18:16:29Z"}, "message": "re PR target/85903 (FAIL: gcc.target/i386/avx512dq-vcvtuqq2pd-2.c)\n\n\tPR target/85903\n\t* config/i386/sse.md (movdi_to_sse): Do not generate pseudo\n\twhen memory input operand is handled.\n\nFrom-SVN: r260681", "tree": {"sha": "4d39ac482d6728c9dfb064512b1051b3fb8aae91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d39ac482d6728c9dfb064512b1051b3fb8aae91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd657f1acbb76aae325f7185359064c89c5dbfad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd657f1acbb76aae325f7185359064c89c5dbfad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd657f1acbb76aae325f7185359064c89c5dbfad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd657f1acbb76aae325f7185359064c89c5dbfad/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95c921d18c5238c0bf76f7b70b83b65e5933c028", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95c921d18c5238c0bf76f7b70b83b65e5933c028", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95c921d18c5238c0bf76f7b70b83b65e5933c028"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "4021500e8eb25be1e30ea2021947319c934bcfaa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd657f1acbb76aae325f7185359064c89c5dbfad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd657f1acbb76aae325f7185359064c89c5dbfad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd657f1acbb76aae325f7185359064c89c5dbfad", "patch": "@@ -1,3 +1,9 @@\n+2018-05-24  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/85903\n+\t* config/i386/sse.md (movdi_to_sse): Do not generate pseudo\n+\twhen memory input operand is handled.\n+\n 2018-05-24  Luis Machado  <luis.machado@linaro.org>\n \n \t* config/aarch64/aarch64.c (qdf24xx_addrcost_table): New static"}, {"sha": "9750708a80f7f0a46b387457da7a10860c83b2ae", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd657f1acbb76aae325f7185359064c89c5dbfad/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd657f1acbb76aae325f7185359064c89c5dbfad/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=fd657f1acbb76aae325f7185359064c89c5dbfad", "patch": "@@ -1248,11 +1248,8 @@\n \t\t\t\t\t     operands[2]));\n    }\n  else if (memory_operand (operands[1], DImode))\n-   {\n-     rtx tmp = gen_reg_rtx (V2DImode);\n-     emit_insn (gen_vec_concatv2di (tmp, operands[1], const0_rtx));\n-     emit_move_insn (operands[0], gen_lowpart (V4SImode, tmp));\n-   }\n+   emit_insn (gen_vec_concatv2di (gen_lowpart (V2DImode, operands[0]),\n+\t\t\t\t  operands[1], const0_rtx));\n  else\n    gcc_unreachable ();\n  DONE;"}]}