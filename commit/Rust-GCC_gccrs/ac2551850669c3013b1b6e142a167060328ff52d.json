{"sha": "ac2551850669c3013b1b6e142a167060328ff52d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMyNTUxODUwNjY5YzMwMTNiMWI2ZTE0MmExNjcwNjAzMjhmZjUyZA==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2017-03-27T10:56:14Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2017-03-27T10:56:14Z"}, "message": "[ARC] Fix detection of long immediate for load/store operands.\n\nARC can use scaled offsets when loading (i.e. ld.as rA,[base,\noffset]).  Where base and offset can be a register or an immediate\noperand.  The scaling only applies on the offset part of the\ninstruction.  The compiler can accept an address like this:\n\n(plus:SI (mult:SI (reg:SI 2 r2 [orig:596 _2129 ] [596])\n\t          (const_int 4 [0x4]))\n\t (const_int 60 [0x3c]))\n\nHence, to emit this instruction we place the (const_int 60) into base\nand the register into offset to take advantage of the scaled offset\nfacility of the load instruction.  As a result the length of the load\ninstruction is 8 bytes.  However, the long_immediate_loadstore_operand\npredicate used for calculating the length attribute doesn't recognize\nthis address and returns a wrong decision leading to a wrong length\ncomputation for a load instruction using the above address.\n\ngcc/\n2017-03-27  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/predicates.md (long_immediate_loadstore_operand):\n\tConsider scaled addresses cases.\n\nFrom-SVN: r246496", "tree": {"sha": "932a01f52bdd5ce1ba609e7395383d4da83390bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/932a01f52bdd5ce1ba609e7395383d4da83390bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac2551850669c3013b1b6e142a167060328ff52d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac2551850669c3013b1b6e142a167060328ff52d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac2551850669c3013b1b6e142a167060328ff52d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac2551850669c3013b1b6e142a167060328ff52d/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "84804c5b47636c7fa8bbbd1481ed426f2efc2654", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84804c5b47636c7fa8bbbd1481ed426f2efc2654", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84804c5b47636c7fa8bbbd1481ed426f2efc2654"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "598f03d42cce1fd4914236216fe215ca9d5d6d88", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac2551850669c3013b1b6e142a167060328ff52d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac2551850669c3013b1b6e142a167060328ff52d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac2551850669c3013b1b6e142a167060328ff52d", "patch": "@@ -1,3 +1,8 @@\n+2017-03-27  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/predicates.md (long_immediate_loadstore_operand):\n+\tConsider scaled addresses cases.\n+\n 2017-03-27  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/arc.c (arc_epilogue_uses): BLINK should be also"}, {"sha": "8dd8d558b9e1d77f1fa82eb3838be01e197d7bc3", "filename": "gcc/config/arc/predicates.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac2551850669c3013b1b6e142a167060328ff52d/gcc%2Fconfig%2Farc%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac2551850669c3013b1b6e142a167060328ff52d/gcc%2Fconfig%2Farc%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Fpredicates.md?ref=ac2551850669c3013b1b6e142a167060328ff52d", "patch": "@@ -148,6 +148,11 @@\n       {\n \trtx x = XEXP (op, 1);\n \n+\tif ((GET_CODE (XEXP (op, 0)) == MULT)\n+\t    && REG_P (XEXP (XEXP (op, 0), 0))\n+\t    && CONSTANT_P (x))\n+\t  return 1;\n+\n \tif (GET_CODE (x) == CONST)\n \t  {\n \t    x = XEXP (x, 0);"}]}