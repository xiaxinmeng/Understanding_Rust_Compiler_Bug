{"sha": "313e2dc377d07d5fae5a3fd666ad7000d7e8771d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEzZTJkYzM3N2QwN2Q1ZmFlNWEzZmQ2NjZhZDcwMDBkN2U4NzcxZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-02-10T16:45:38Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-02-10T16:45:38Z"}, "message": "libstdc++: Use correct error category for Windows error codes\n\nWhen the result of GetLastError() is stored in a std::error_code it\nshould use std::system_category(), not std::generic_category() that is\nused for POSIX errno values.\n\nlibstdc++-v3/ChangeLog:\n\n\t* src/c++17/fs_ops.cc (fs::create_hard_link, fs::equivalent)\n\t(fs::remove): Use std::system_category() for error codes from\n\tGetLastError().\n\t* src/filesystem/ops.cc (fs::create_hard_link, fs::remove):\n\tLikewise.", "tree": {"sha": "4ebee38d57a7e804ad73dc972482fa88afa1d545", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ebee38d57a7e804ad73dc972482fa88afa1d545"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/313e2dc377d07d5fae5a3fd666ad7000d7e8771d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/313e2dc377d07d5fae5a3fd666ad7000d7e8771d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/313e2dc377d07d5fae5a3fd666ad7000d7e8771d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/313e2dc377d07d5fae5a3fd666ad7000d7e8771d/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a6f74be9d6891cb0c17c493b1f9bca20673e6a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a6f74be9d6891cb0c17c493b1f9bca20673e6a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a6f74be9d6891cb0c17c493b1f9bca20673e6a0"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "7deb4c33447d12bc81dc40ca5f3730ed04f05ee5", "filename": "libstdc++-v3/src/c++17/fs_ops.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313e2dc377d07d5fae5a3fd666ad7000d7e8771d/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313e2dc377d07d5fae5a3fd666ad7000d7e8771d/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc?ref=313e2dc377d07d5fae5a3fd666ad7000d7e8771d", "patch": "@@ -690,7 +690,7 @@ fs::create_hard_link(const path& to, const path& new_hard_link,\n   if (CreateHardLinkW(new_hard_link.c_str(), to.c_str(), NULL))\n     ec.clear();\n   else\n-    ec.assign((int)GetLastError(), generic_category());\n+    ec.assign((int)GetLastError(), system_category());\n #else\n   ec = std::make_error_code(std::errc::not_supported);\n #endif\n@@ -882,12 +882,12 @@ fs::equivalent(const path& p1, const path& p2, error_code& ec) noexcept\n       if (!h1 || !h2)\n \t{\n \t  if (!h1 && !h2)\n-\t    ec.assign((int)GetLastError(), generic_category());\n+\t    ec.assign((int)GetLastError(), system_category());\n \t  return false;\n \t}\n       if (!h1.get_info() || !h2.get_info())\n \t{\n-\t  ec.assign((int)GetLastError(), generic_category());\n+\t  ec.assign((int)GetLastError(), system_category());\n \t  return false;\n \t}\n       return h1.info.dwVolumeSerialNumber == h2.info.dwVolumeSerialNumber\n@@ -1263,7 +1263,7 @@ fs::remove(const path& p, error_code& ec) noexcept\n \t  return true;\n \t}\n       else if (!ec)\n-\tec.assign((int)GetLastError(), generic_category());\n+\tec.assign((int)GetLastError(), system_category());\n     }\n   else if (status_known(st))\n     ec.clear();"}, {"sha": "c400376d22464bdea532db7b1acd120766a87a74", "filename": "libstdc++-v3/src/filesystem/ops.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313e2dc377d07d5fae5a3fd666ad7000d7e8771d/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313e2dc377d07d5fae5a3fd666ad7000d7e8771d/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc?ref=313e2dc377d07d5fae5a3fd666ad7000d7e8771d", "patch": "@@ -590,7 +590,7 @@ fs::create_hard_link(const path& to, const path& new_hard_link,\n   if (CreateHardLinkW(new_hard_link.c_str(), to.c_str(), NULL))\n     ec.clear();\n   else\n-    ec.assign((int)GetLastError(), generic_category());\n+    ec.assign((int)GetLastError(), system_category());\n #else\n   ec = std::make_error_code(std::errc::not_supported);\n #endif\n@@ -1062,7 +1062,7 @@ fs::remove(const path& p, error_code& ec) noexcept\n \t  return true;\n \t}\n       else if (!ec)\n-\tec.assign((int)GetLastError(), generic_category());\n+\tec.assign((int)GetLastError(), system_category());\n     }\n   else if (status_known(st))\n     ec.clear();"}]}