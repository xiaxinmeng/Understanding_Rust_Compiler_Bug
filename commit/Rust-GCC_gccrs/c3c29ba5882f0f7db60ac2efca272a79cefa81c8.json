{"sha": "c3c29ba5882f0f7db60ac2efca272a79cefa81c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNjMjliYTU4ODJmMGY3ZGI2MGFjMmVmY2EyNzJhNzljZWZhODFjOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-01-15T20:46:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-01-15T20:46:03Z"}, "message": "re PR c++/63283 (constexpr function called by templated function is not treated as constexpr)\n\n\tPR c++/63283\n\t* constexpr.c (potential_constant_expression_1): Handle reference\n\targs in templates.\n\nFrom-SVN: r219686", "tree": {"sha": "694493af91762df4a383a92ec28321c741e4e30b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/694493af91762df4a383a92ec28321c741e4e30b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3c29ba5882f0f7db60ac2efca272a79cefa81c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c29ba5882f0f7db60ac2efca272a79cefa81c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3c29ba5882f0f7db60ac2efca272a79cefa81c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c29ba5882f0f7db60ac2efca272a79cefa81c8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4c16468417da5c3db8e6ca93704142b9cafa10c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c16468417da5c3db8e6ca93704142b9cafa10c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c16468417da5c3db8e6ca93704142b9cafa10c0"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "7ad7737d582792ec933939db05ca901547391a7b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c29ba5882f0f7db60ac2efca272a79cefa81c8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c29ba5882f0f7db60ac2efca272a79cefa81c8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c3c29ba5882f0f7db60ac2efca272a79cefa81c8", "patch": "@@ -1,3 +1,9 @@\n+2015-01-15  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/63283\n+\t* constexpr.c (potential_constant_expression_1): Handle reference\n+\targs in templates.\n+\n 2015-01-15  Thomas Schwinge  <thomas@codesourcery.com>\n \t    James Norris  <jnorris@codesourcery.com>\n \t    Cesar Philippidis  <cesar@codesourcery.com>"}, {"sha": "e27a892a51d320ba36558bd06ab591ed06b52683", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c29ba5882f0f7db60ac2efca272a79cefa81c8/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c29ba5882f0f7db60ac2efca272a79cefa81c8/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=c3c29ba5882f0f7db60ac2efca272a79cefa81c8", "patch": "@@ -3881,7 +3881,11 @@ potential_constant_expression_1 (tree t, bool want_rval, bool strict,\n         for (; i < nargs; ++i)\n           {\n             tree x = get_nth_callarg (t, i);\n-\t    if (!RECUR (x, rval))\n+\t    /* In a template, reference arguments haven't been converted to\n+\t       REFERENCE_TYPE and we might not even know if the parameter\n+\t       is a reference, so accept lvalue constants too.  */\n+\t    bool rv = processing_template_decl ? any : rval;\n+\t    if (!RECUR (x, rv))\n \t      return false;\n           }\n         return true;"}, {"sha": "7b2b9c7555bd4f79c5e5ddb73e7e8e33655ddfd1", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-template8.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c29ba5882f0f7db60ac2efca272a79cefa81c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-template8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c29ba5882f0f7db60ac2efca272a79cefa81c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-template8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-template8.C?ref=c3c29ba5882f0f7db60ac2efca272a79cefa81c8", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/63283\n+// { dg-do compile { target c++11 } }\n+\n+constexpr int array_length(int (&array)[3]) { return 3; }\n+int a[] = { 1, 2, 3 };\n+template <typename T> int f() {\n+  struct { int e[array_length(a)]; } t;\n+  return sizeof(t);\n+}\n+int main() { f<void>(); }"}, {"sha": "e7f728e3f4fa21a399ea4b4a1aaed44f47b838db", "filename": "gcc/testsuite/g++.dg/cpp0x/static_assert10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c29ba5882f0f7db60ac2efca272a79cefa81c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fstatic_assert10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c29ba5882f0f7db60ac2efca272a79cefa81c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fstatic_assert10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fstatic_assert10.C?ref=c3c29ba5882f0f7db60ac2efca272a79cefa81c8", "patch": "@@ -4,5 +4,5 @@\n template<typename T> bool foo(T)\n {\n   int i;\n-  static_assert(foo(i), \"Error\"); // { dg-error \"non-constant condition|not usable\" }\n+  static_assert(foo(i), \"Error\"); // { dg-error \"non-constant condition|not usable|non-constexpr\" }\n }"}]}