{"sha": "ee0f32f4ac63a937f0819e8d1caaf128e01cdf1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUwZjMyZjRhYzYzYTkzN2YwODE5ZThkMWNhYWYxMjhlMDFjZGYxZQ==", "commit": {"author": {"name": "P.J. Darcy", "email": "darcypj@us.ibm.com", "date": "2004-10-02T00:48:44Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-10-02T00:48:44Z"}, "message": "gthr-tpf.h (__gthread_recursive_mutex_t): New type.\n\n2004-10-02  P.J. Darcy  <darcypj@us.ibm.com>\n\n\t* gthr-tpf.h (__gthread_recursive_mutex_t): New type.\n\t(__GTHREAD_RECURSIVE_MUTEX_INIT): Define.\n\t(__gthread_recursive_mutex_lock, __gthread_recursive_mutex_trylock,\n\t__gthread_recursive_mutex_unlock): New functions.\n\nFrom-SVN: r88418", "tree": {"sha": "428de06338a00f655bfcc168c0d2cdac049bf82a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/428de06338a00f655bfcc168c0d2cdac049bf82a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee0f32f4ac63a937f0819e8d1caaf128e01cdf1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee0f32f4ac63a937f0819e8d1caaf128e01cdf1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee0f32f4ac63a937f0819e8d1caaf128e01cdf1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee0f32f4ac63a937f0819e8d1caaf128e01cdf1e/comments", "author": null, "committer": null, "parents": [{"sha": "3ff688aa8531a38139dc51f9fe87fa6468c8d622", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ff688aa8531a38139dc51f9fe87fa6468c8d622", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ff688aa8531a38139dc51f9fe87fa6468c8d622"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "24a1034c76e4455176e9d10e775709fddcf9fbe1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee0f32f4ac63a937f0819e8d1caaf128e01cdf1e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee0f32f4ac63a937f0819e8d1caaf128e01cdf1e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee0f32f4ac63a937f0819e8d1caaf128e01cdf1e", "patch": "@@ -1,3 +1,10 @@\n+2004-10-02  P.J. Darcy  <darcypj@us.ibm.com>\n+\n+\t* gthr-tpf.h (__gthread_recursive_mutex_t): New type.\n+\t(__GTHREAD_RECURSIVE_MUTEX_INIT): Define.\n+\t(__gthread_recursive_mutex_lock, __gthread_recursive_mutex_trylock,\n+\t__gthread_recursive_mutex_unlock): New functions.\n+\n 2004-10-02  P.J. Darcy  <darcypj@us.ibm.com>\n \n \t* config/s390/t-tpf (LIB2ADDEH): Remove tpf-eh.c."}, {"sha": "6eac833dda7caf56e8bed4ebedafdda1974a6271", "filename": "gcc/gthr-tpf.h", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee0f32f4ac63a937f0819e8d1caaf128e01cdf1e/gcc%2Fgthr-tpf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee0f32f4ac63a937f0819e8d1caaf128e01cdf1e/gcc%2Fgthr-tpf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-tpf.h?ref=ee0f32f4ac63a937f0819e8d1caaf128e01cdf1e", "patch": "@@ -51,6 +51,13 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n typedef pthread_key_t __gthread_key_t;\n typedef pthread_once_t __gthread_once_t;\n typedef pthread_mutex_t __gthread_mutex_t;\n+typedef pthread_mutex_t __gthread_recursive_mutex_t;\n+\n+#if defined(PTHREAD_RECURSIVE_MUTEX_INITIALIZER)\n+#define __GTHREAD_RECURSIVE_MUTEX_INIT PTHREAD_RECURSIVE_MUTEX_INITIALIZER\n+#elif defined(PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP)\n+#define __GTHREAD_RECURSIVE_MUTEX_INIT PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP\n+#endif\n \n #define __GTHREAD_MUTEX_INIT PTHREAD_MUTEX_INITIALIZER\n #define __GTHREAD_ONCE_INIT PTHREAD_ONCE_INIT\n@@ -154,4 +161,31 @@ __gthread_mutex_unlock (__gthread_mutex_t *mutex)\n     return 0;\n }\n \n+static inline int\n+__gthread_recursive_mutex_lock (__gthread_recursive_mutex_t *mutex)\n+{\n+  if (__tpf_pthread_active ())\n+    return __gthread_mutex_lock (mutex);\n+  else\n+    return 0;\n+}\n+\n+static inline int\n+__gthread_recursive_mutex_trylock (__gthread_recursive_mutex_t *mutex)\n+{\n+  if (__tpf_pthread_active ())\n+    return __gthread_mutex_trylock (mutex);\n+  else\n+    return 0;\n+}\n+\n+static inline int\n+__gthread_recursive_mutex_unlock (__gthread_recursive_mutex_t *mutex)\n+{\n+  if (__tpf_pthread_active ())\n+    return __gthread_mutex_unlock (mutex);\n+  else\n+    return 0;\n+}\n+\n #endif /* ! GCC_GTHR_TPF_H */"}]}