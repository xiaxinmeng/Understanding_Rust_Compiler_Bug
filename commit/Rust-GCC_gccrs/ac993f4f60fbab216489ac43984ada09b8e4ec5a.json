{"sha": "ac993f4f60fbab216489ac43984ada09b8e4ec5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM5OTNmNGY2MGZiYWIyMTY0ODlhYzQzOTg0YWRhMDliOGU0ZWM1YQ==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1992-08-19T01:33:35Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1992-08-19T01:33:35Z"}, "message": "expr.c (expand_expr): When expanding TARGET_EXPRs...\n\n        * expr.c (expand_expr): When expanding TARGET_EXPRs, make sure\n        that they are only expanded once, after the first expansion,\n        the rtl can be used without further expansions.\n\nFrom-SVN: r1890", "tree": {"sha": "88cf76120497a84f1e8b98ab48a999efcbc690fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88cf76120497a84f1e8b98ab48a999efcbc690fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac993f4f60fbab216489ac43984ada09b8e4ec5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac993f4f60fbab216489ac43984ada09b8e4ec5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac993f4f60fbab216489ac43984ada09b8e4ec5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac993f4f60fbab216489ac43984ada09b8e4ec5a/comments", "author": null, "committer": null, "parents": [{"sha": "7e70e7c5a6f10e856effe52c1b6e1e67d2759340", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e70e7c5a6f10e856effe52c1b6e1e67d2759340", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e70e7c5a6f10e856effe52c1b6e1e67d2759340"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "d251b3b677333f067d22e9419c75e8a111434a35", "filename": "gcc/expr.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac993f4f60fbab216489ac43984ada09b8e4ec5a/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac993f4f60fbab216489ac43984ada09b8e4ec5a/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=ac993f4f60fbab216489ac43984ada09b8e4ec5a", "patch": "@@ -4641,7 +4641,12 @@ expand_expr (exp, target, tmode, modifier)\n \tif (target == 0)\n \t  {\n \t    if (DECL_RTL (slot) != 0)\n-\t      target = DECL_RTL (slot);\n+\t      {\n+\t\ttarget = DECL_RTL (slot);\n+\t\t/* We have already expanded the slot, so don't do\n+\t\t   it again.  (mrs)  */\n+\t\treturn target;\n+\t      }\n \t    else\n \t      {\n \t\ttarget = assign_stack_temp (mode, int_size_in_bytes (type), 0);\n@@ -4651,6 +4656,15 @@ expand_expr (exp, target, tmode, modifier)\n \t      }\n \n #if 0\n+\t    /* I bet this needs to be done, and I bet that it needs to\n+\t       be above, inside the else clause.  The reason is\n+\t       simple, how else is it going to get cleaned up? (mrs)\n+\n+\t       The reason is probably did not work before, and was\n+\t       commented out is because this was re-expanding already\n+\t       expanded target_exprs (target == 0 and DECL_RTL (slot)\n+\t       != 0) also cleaning them up many times as well.  :-( */\n+\n \t    /* Since SLOT is not known to the called function\n \t       to belong to its stack frame, we must build an explicit\n \t       cleanup.  This case occurs when we must build up a reference"}]}