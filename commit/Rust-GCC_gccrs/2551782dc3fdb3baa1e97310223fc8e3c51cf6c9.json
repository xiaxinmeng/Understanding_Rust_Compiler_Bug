{"sha": "2551782dc3fdb3baa1e97310223fc8e3c51cf6c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU1MTc4MmRjM2ZkYjNiYWExZTk3MzEwMjIzZmM4ZTNjNTFjZjZjOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-12T10:49:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-12T10:49:00Z"}, "message": "[multiple changes]\n\n2010-10-12  Pascal Obry  <obry@adacore.com>\n\n\t* adaint.c (__gnat_number_of_cpus): Add implementation for Windows.\n\n2010-10-12  Arnaud Charlet  <charlet@adacore.com>\n\n\t* make.adb (Globalize): New procedure.\n\t(Compile): Set Do_Codepeer_Globalize_Step when -gnatC is used.\n\t(Gnatmake): Call Globalize when needed.\n\t(Process_Restrictions_Or_Restriction_Warnings): Ignore Restrictions\n\tpragmas in CodePeer mode.\n\t(Adjust_Global_Switches): Set No_Initialize_Scalars in CodePeer mode,\n\tto generate simpler and consistent code.\n\n2010-10-12  Bob Duff  <duff@adacore.com>\n\n\t* exp_util.adb (Remove_Side_Effects): Disable previous change,\n\tcan cause side effects to be duplicated.\n\nFrom-SVN: r165359", "tree": {"sha": "0ce03a545bad41a76a87037012bd107c2a9823dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ce03a545bad41a76a87037012bd107c2a9823dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2551782dc3fdb3baa1e97310223fc8e3c51cf6c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2551782dc3fdb3baa1e97310223fc8e3c51cf6c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2551782dc3fdb3baa1e97310223fc8e3c51cf6c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2551782dc3fdb3baa1e97310223fc8e3c51cf6c9/comments", "author": null, "committer": null, "parents": [{"sha": "f0709ca650996f4df1d8d9a7015b8dc127ea3ed3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0709ca650996f4df1d8d9a7015b8dc127ea3ed3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0709ca650996f4df1d8d9a7015b8dc127ea3ed3"}], "stats": {"total": 133, "additions": 127, "deletions": 6}, "files": [{"sha": "670c1553089cf057ac394ec702dfd36525eafe09", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2551782dc3fdb3baa1e97310223fc8e3c51cf6c9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2551782dc3fdb3baa1e97310223fc8e3c51cf6c9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2551782dc3fdb3baa1e97310223fc8e3c51cf6c9", "patch": "@@ -1,3 +1,22 @@\n+2010-10-12  Pascal Obry  <obry@adacore.com>\n+\n+\t* adaint.c (__gnat_number_of_cpus): Add implementation for Windows.\n+\n+2010-10-12  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* make.adb (Globalize): New procedure.\n+\t(Compile): Set Do_Codepeer_Globalize_Step when -gnatC is used.\n+\t(Gnatmake): Call Globalize when needed.\n+\t(Process_Restrictions_Or_Restriction_Warnings): Ignore Restrictions\n+\tpragmas in CodePeer mode.\n+\t(Adjust_Global_Switches): Set No_Initialize_Scalars in CodePeer mode,\n+\tto generate simpler and consistent code.\n+\n+2010-10-12  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_util.adb (Remove_Side_Effects): Disable previous change,\n+\tcan cause side effects to be duplicated.\n+\n 2010-10-12  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch6.adb (Process_PPCs): Handle inherited postconditions."}, {"sha": "982ae115a91bd997fa48cc57ffda2b0870f922a6", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2551782dc3fdb3baa1e97310223fc8e3c51cf6c9/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2551782dc3fdb3baa1e97310223fc8e3c51cf6c9/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=2551782dc3fdb3baa1e97310223fc8e3c51cf6c9", "patch": "@@ -2384,6 +2384,10 @@ __gnat_number_of_cpus (void)\n   if (pstat_getdynamic (&psd, sizeof (psd), 1, 0) != -1)\n     cores = (int) psd.psd_proc_cnt;\n \n+#elif defined (_WIN32)\n+  SYSTEM_INFO sysinfo;\n+  GetSystemInfo (&sysinfo);\n+  cores = (int) sysinfo.dwNumberOfProcessors;\n #endif\n \n   return cores;"}, {"sha": "a3e09a6fd0fcfcfd6c913a9a1278efebff3cc543", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2551782dc3fdb3baa1e97310223fc8e3c51cf6c9/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2551782dc3fdb3baa1e97310223fc8e3c51cf6c9/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=2551782dc3fdb3baa1e97310223fc8e3c51cf6c9", "patch": "@@ -4844,8 +4844,12 @@ package body Exp_Util is\n       --  expression (and hence we would generate a never-ending loop in the\n       --  front end).\n \n-      if Is_Class_Wide_Type (Exp_Type)\n-         and then Nkind (Parent (Exp)) = N_Object_Renaming_Declaration\n+      --  For now, disable this test. class-wide renamings can have side\n+      --  effects, and this test causes such side effects to be duplicated.\n+      --  To be sorted out later ???\n+\n+      if False and then Is_Class_Wide_Type (Exp_Type)\n+        and then Nkind (Parent (Exp)) = N_Object_Renaming_Declaration\n       then\n          return;\n       end if;"}, {"sha": "813765b771098831e52f2c15f84f4d205ee28185", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2551782dc3fdb3baa1e97310223fc8e3c51cf6c9/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2551782dc3fdb3baa1e97310223fc8e3c51cf6c9/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=2551782dc3fdb3baa1e97310223fc8e3c51cf6c9", "patch": "@@ -176,8 +176,11 @@ procedure Gnat1drv is\n \n          --  Enable some restrictions systematically to simplify the generated\n          --  code (and ease analysis). Note that restriction checks are also\n-         --  disabled in CodePeer mode, see Restrict.Check_Restriction\n+         --  disabled in CodePeer mode, see Restrict.Check_Restriction, and\n+         --  user specified Restrictions pragmas are ignored, see\n+         --  Sem_Prag.Process_Restrictions_Or_Restriction_Warnings.\n \n+         Restrict.Restrictions.Set   (No_Initialize_Scalars)           := True;\n          Restrict.Restrictions.Set   (No_Task_Hierarchy)               := True;\n          Restrict.Restrictions.Set   (No_Abort_Statements)             := True;\n          Restrict.Restrictions.Set   (Max_Asynchronous_Select_Nesting) := True;"}, {"sha": "4f09513fe4a2ced329a479cd4187745f89bed191", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 88, "deletions": 3, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2551782dc3fdb3baa1e97310223fc8e3c51cf6c9/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2551782dc3fdb3baa1e97310223fc8e3c51cf6c9/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=2551782dc3fdb3baa1e97310223fc8e3c51cf6c9", "patch": "@@ -432,6 +432,9 @@ package body Make is\n    --  with the switches -c, -b and -l. These flags are reset to True for\n    --  each invocation of procedure Gnatmake.\n \n+   Do_Codepeer_Globalize_Step : Boolean := False;\n+   --  Flag to indicate whether the CodePeer globalizer should be called\n+\n    Shared_String           : aliased String := \"-shared\";\n    Force_Elab_Flags_String : aliased String := \"-F\";\n \n@@ -654,20 +657,27 @@ package body Make is\n    Gnatlink : String_Access := Program_Name (\"gnatlink\", \"gnatmake\");\n    --  Default compiler, binder, linker programs\n \n+   Globalizer : constant String := \"codepeer_globalizer\";\n+   --  CodePeer globalizer executable name\n+\n    Saved_Gcc      : String_Access := null;\n    Saved_Gnatbind : String_Access := null;\n    Saved_Gnatlink : String_Access := null;\n    --  Given by the command line. Will be used, if non null\n \n    Gcc_Path      : String_Access :=\n-                       GNAT.OS_Lib.Locate_Exec_On_Path (Gcc.all);\n+                     GNAT.OS_Lib.Locate_Exec_On_Path (Gcc.all);\n    Gnatbind_Path : String_Access :=\n-                       GNAT.OS_Lib.Locate_Exec_On_Path (Gnatbind.all);\n+                     GNAT.OS_Lib.Locate_Exec_On_Path (Gnatbind.all);\n    Gnatlink_Path : String_Access :=\n-                       GNAT.OS_Lib.Locate_Exec_On_Path (Gnatlink.all);\n+                     GNAT.OS_Lib.Locate_Exec_On_Path (Gnatlink.all);\n    --  Path for compiler, binder, linker programs, defaulted now for gnatdist.\n    --  Changed later if overridden on command line.\n \n+   Globalizer_Path : constant String_Access :=\n+                       GNAT.OS_Lib.Locate_Exec_On_Path (Globalizer);\n+   --  Path for CodePeer globalizer\n+\n    Comp_Flag         : constant String_Access := new String'(\"-c\");\n    Output_Flag       : constant String_Access := new String'(\"-o\");\n    Ada_Flag_1        : constant String_Access := new String'(\"-x\");\n@@ -1007,6 +1017,10 @@ package body Make is\n    --  during a compilation are also transitively included in the W section\n    --  of the originally compiled file.\n \n+   procedure Globalize (Success : out Boolean);\n+   --  Call the CodePeer globalizer on all the project's object directories,\n+   --  or on the current directory if no projects.\n+\n    procedure Initialize (Project_Node_Tree : out Project_Node_Tree_Ref);\n    --  Performs default and package initialization. Therefore,\n    --  Compile_Sources can be called by an external unit.\n@@ -2885,6 +2899,13 @@ package body Make is\n                Do_Bind_Step := False;\n                Do_Link_Step := False;\n                Syntax_Only  := False;\n+\n+            elsif Args (J).all = \"-gnatC\"\n+              or else Args (J).all = \"-gnatcC\"\n+            then\n+               --  If we compile with -gnatC, enable CodePeer globalize step\n+\n+               Do_Codepeer_Globalize_Step := True;\n             end if;\n          end loop;\n \n@@ -4111,6 +4132,53 @@ package body Make is\n       Obsoleted.Set (F2, True);\n    end Enter_Into_Obsoleted;\n \n+   ---------------\n+   -- Globalize --\n+   ---------------\n+\n+   procedure Globalize (Success : out Boolean) is\n+      Quiet_Str       : aliased String := \"-quiet\";\n+      Globalizer_Args : constant Argument_List :=\n+                          (1 => Quiet_Str'Unchecked_Access);\n+      Previous_Dir    : String_Access;\n+\n+      procedure Globalize_Dir (Dir : String);\n+      --  Call CodePeer globalizer on Dir\n+\n+      -------------------\n+      -- Globalize_Dir --\n+      -------------------\n+\n+      procedure Globalize_Dir (Dir : String) is\n+         Result : Boolean;\n+      begin\n+         if Previous_Dir = null or else Dir /= Previous_Dir.all then\n+            Free (Previous_Dir);\n+            Previous_Dir := new String'(Dir);\n+            Change_Dir (Dir);\n+            GNAT.OS_Lib.Spawn (Globalizer_Path.all, Globalizer_Args, Result);\n+            Success := Success and Result;\n+         end if;\n+      end Globalize_Dir;\n+\n+      procedure Globalize_Dirs is new\n+        Prj.Env.For_All_Object_Dirs (Globalize_Dir);\n+\n+   begin\n+      Success := True;\n+      Display (Globalizer, Globalizer_Args);\n+\n+      if Globalizer_Path = null then\n+         Make_Failed (\"error, unable to locate \" & Globalizer);\n+      end if;\n+\n+      if Main_Project = No_Project then\n+         GNAT.OS_Lib.Spawn (Globalizer_Path.all, Globalizer_Args, Success);\n+      else\n+         Globalize_Dirs (Main_Project);\n+      end if;\n+   end Globalize;\n+\n    --------------\n    -- Gnatmake --\n    --------------\n@@ -6387,6 +6455,23 @@ package body Make is\n          Delete_All_Marks;\n       end loop Multiple_Main_Loop;\n \n+      if Do_Codepeer_Globalize_Step then\n+         declare\n+            Success : Boolean := False;\n+         begin\n+            Globalize (Success);\n+\n+            if not Success then\n+               Set_Standard_Error;\n+               Write_Str (\"*** globalize failed.\");\n+\n+               if Commands_To_Stdout then\n+                  Set_Standard_Output;\n+               end if;\n+            end if;\n+         end;\n+      end if;\n+\n       if Failed_Links.Last > 0 then\n          for Index in 1 .. Successful_Links.Last loop\n             Write_Str (\"Linking of \"\"\");"}, {"sha": "82f797e82eac48907a848b39036de041e451b393", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2551782dc3fdb3baa1e97310223fc8e3c51cf6c9/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2551782dc3fdb3baa1e97310223fc8e3c51cf6c9/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=2551782dc3fdb3baa1e97310223fc8e3c51cf6c9", "patch": "@@ -4594,6 +4594,12 @@ package body Sem_Prag is\n       --  Start of processing for Process_Restrictions_Or_Restriction_Warnings\n \n       begin\n+         --  Ignore all Restrictions pragma in CodePeer mode\n+\n+         if CodePeer_Mode then\n+            return;\n+         end if;\n+\n          Check_Ada_83_Warning;\n          Check_At_Least_N_Arguments (1);\n          Check_Valid_Configuration_Pragma;"}]}