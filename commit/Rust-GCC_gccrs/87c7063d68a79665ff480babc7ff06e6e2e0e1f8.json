{"sha": "87c7063d68a79665ff480babc7ff06e6e2e0e1f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdjNzA2M2Q2OGE3OTY2NWZmNDgwYmFiYzdmZjA2ZTZlMmUwZTFmOA==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2017-05-10T20:40:28Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2017-05-10T20:40:28Z"}, "message": "Bump version namespace.\n\n2017-05-10  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\tBump version namespace.\n\t* config/abi/pre/gnu-versioned-namespace.ver: Bump version namespace\n\tfrom __7 to __8. Bump GLIBCXX_7.0 to GLIBCXX_8.0.\n\t* acinclude.m4 (libtool_VERSION): Bump to 8:0:0.\n\t* include/bits/c++config: Adapt.\n\t* include/bits/regex.h: Adapt.\n\t* include/experimental/bits/fs_fwd.h: Adapt.\n\t* include/experimental/bits/lfts_config.h: Adapt.\n\t* include/std/variant: Adapt.\n\t* python/libstdcxx/v6/printers.py: Adapt.\n\t* testsuite/libstdc++-prettyprinters/48362.cc: Adapt.\n\t* include/bits/stl_tree.h (_Rb_tree_impl<>): Remove _Is_pod_comparator\n\ttemplate parameter when version namespace is active.\n\nFrom-SVN: r247858", "tree": {"sha": "bbe10c8f9c548671208b21f244bf7010aa5f542e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbe10c8f9c548671208b21f244bf7010aa5f542e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87c7063d68a79665ff480babc7ff06e6e2e0e1f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87c7063d68a79665ff480babc7ff06e6e2e0e1f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87c7063d68a79665ff480babc7ff06e6e2e0e1f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/comments", "author": null, "committer": null, "parents": [{"sha": "dd54ca5649175043793ec22ee6fd568b004bb83f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd54ca5649175043793ec22ee6fd568b004bb83f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd54ca5649175043793ec22ee6fd568b004bb83f"}], "stats": {"total": 148, "additions": 81, "deletions": 67}, "files": [{"sha": "e39cfecb84d8eb68abc724c68ad5af0d33e8c58c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=87c7063d68a79665ff480babc7ff06e6e2e0e1f8", "patch": "@@ -1,5 +1,19 @@\n 2017-05-10  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n+\tBump version namespace.\n+\t* config/abi/pre/gnu-versioned-namespace.ver: Bump version namespace\n+\tfrom __7 to __8. Bump GLIBCXX_7.0 to GLIBCXX_8.0.\n+\t* acinclude.m4 (libtool_VERSION): Bump to 8:0:0.\n+\t* include/bits/c++config: Adapt.\n+\t* include/bits/regex.h: Adapt.\n+\t* include/experimental/bits/fs_fwd.h: Adapt.\n+\t* include/experimental/bits/lfts_config.h: Adapt.\n+\t* include/std/variant: Adapt.\n+\t* python/libstdcxx/v6/printers.py: Adapt.\n+\t* testsuite/libstdc++-prettyprinters/48362.cc: Adapt.\n+\t* include/bits/stl_tree.h (_Rb_tree_impl<>): Remove _Is_pod_comparator\n+\ttemplate parameter when version namespace is active.\n+\n \t* include/bits/stl_algobase.h (std::__iter_swap<false>): Remove\n \t_GLIBCXX_MOVE usage.\n "}, {"sha": "61c8cb29084a5b2bbcfbc99a142fd0c2aa9727e8", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=87c7063d68a79665ff480babc7ff06e6e2e0e1f8", "patch": "@@ -3763,7 +3763,7 @@ case $enable_symvers in\n \t      [Define to use GNU versioning in the shared library.])\n     ;;\n   gnu-versioned-namespace)\n-    libtool_VERSION=7:0:0\n+    libtool_VERSION=8:0:0\n     SYMVER_FILE=config/abi/pre/gnu-versioned-namespace.ver\n     AC_DEFINE(_GLIBCXX_SYMVER_GNU_NAMESPACE, 1,\n \t      [Define to use GNU namespace versioning in the shared library.])"}, {"sha": "172181092c6f90889e0923e07ebb326f5525d348", "filename": "libstdc++-v3/config/abi/pre/gnu-versioned-namespace.ver", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu-versioned-namespace.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu-versioned-namespace.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu-versioned-namespace.ver?ref=87c7063d68a79665ff480babc7ff06e6e2e0e1f8", "patch": "@@ -19,15 +19,15 @@\n ## with this library; see the file COPYING3.  If not see\n ## <http://www.gnu.org/licenses/>.\n \n-GLIBCXX_7.0 {\n+GLIBCXX_8.0 {\n \n   global:\n \n     # Names inside the 'extern' block are demangled names.\n     extern \"C++\"\n     {\n       std::*;\n-      std::__7::*;\n+      std::__8::*;\n       std::random_device::*\n     };\n \n@@ -60,7 +60,7 @@ GLIBCXX_7.0 {\n     # vtable\n     _ZTVSt*;\n     _ZTVNSt*;\n-    _ZTVN9__gnu_cxx3__718stdio_sync_filebufI[cw]NSt3__711char_traitsI[cw]EEEE;\n+    _ZTVN9__gnu_cxx3__818stdio_sync_filebufI[cw]NSt3__811char_traitsI[cw]EEEE;\n \n     # thunk\n     _ZTv0_n12_NS*;\n@@ -75,51 +75,51 @@ GLIBCXX_7.0 {\n     _ZTSNSt*;\n \n     # locale\n-    _ZNSt3__79has_facetINS_*;\n+    _ZNSt3__89has_facetINS_*;\n \n     # hash\n-    _ZNSt8__detail3__712__prime_listE;\n-    _ZNSt3tr18__detail3__712__prime_listE;\n+    _ZNSt8__detail3__812__prime_listE;\n+    _ZNSt3tr18__detail3__812__prime_listE;\n \n     # thread/mutex/condition_variable/future\n     __once_proxy;\n \n     # std::__detail::_List_node_base\n-    _ZNSt8__detail3__715_List_node_base7_M_hook*;\n-    _ZNSt8__detail3__715_List_node_base9_M_unhookEv;\n-    _ZNSt8__detail3__715_List_node_base10_M_reverseEv;\n-    _ZNSt8__detail3__715_List_node_base11_M_transfer*;\n-    _ZNSt8__detail3__715_List_node_base4swapER*;\n+    _ZNSt8__detail3__815_List_node_base7_M_hook*;\n+    _ZNSt8__detail3__815_List_node_base9_M_unhookEv;\n+    _ZNSt8__detail3__815_List_node_base10_M_reverseEv;\n+    _ZNSt8__detail3__815_List_node_base11_M_transfer*;\n+    _ZNSt8__detail3__815_List_node_base4swapER*;\n \n     # std::__convert_to_v\n-    _ZNSt3__714__convert_to_v*;\n+    _ZNSt3__814__convert_to_v*;\n \n     # std::__copy_streambufs\n-    _ZNSt3__717__copy_streambufsI*;\n-    _ZNSt3__721__copy_streambufs_eofI*;\n+    _ZNSt3__817__copy_streambufsI*;\n+    _ZNSt3__821__copy_streambufs_eofI*;\n \n     # __gnu_cxx::__atomic_add\n     # __gnu_cxx::__exchange_and_add\n-    _ZN9__gnu_cxx3__712__atomic_addEPV[il][il];\n-    _ZN9__gnu_cxx3__718__exchange_and_addEPV[li][il];\n+    _ZN9__gnu_cxx3__812__atomic_addEPV[il][il];\n+    _ZN9__gnu_cxx3__818__exchange_and_addEPV[li][il];\n \n     # __gnu_cxx::__pool\n-    _ZN9__gnu_cxx3__76__poolILb[01]EE13_M_initializeEv;\n-    _ZN9__gnu_cxx3__76__poolILb[01]EE16_M_reserve_blockE[jmy][jmy];\n-    _ZN9__gnu_cxx3__76__poolILb[01]EE16_M_reclaim_blockEPc[jmy];\n-    _ZN9__gnu_cxx3__76__poolILb[01]EE10_M_destroyEv;\n-    _ZN9__gnu_cxx3__76__poolILb1EE16_M_get_thread_idEv;\n+    _ZN9__gnu_cxx3__86__poolILb[01]EE13_M_initializeEv;\n+    _ZN9__gnu_cxx3__86__poolILb[01]EE16_M_reserve_blockE[jmy][jmy];\n+    _ZN9__gnu_cxx3__86__poolILb[01]EE16_M_reclaim_blockEPc[jmy];\n+    _ZN9__gnu_cxx3__86__poolILb[01]EE10_M_destroyEv;\n+    _ZN9__gnu_cxx3__86__poolILb1EE16_M_get_thread_idEv;\n \n-    _ZN9__gnu_cxx3__717__pool_alloc_base9_M_refillE[jmy];\n-    _ZN9__gnu_cxx3__717__pool_alloc_base16_M_get_free_listE[jmy];\n-    _ZN9__gnu_cxx3__717__pool_alloc_base12_M_get_mutexEv;\n+    _ZN9__gnu_cxx3__817__pool_alloc_base9_M_refillE[jmy];\n+    _ZN9__gnu_cxx3__817__pool_alloc_base16_M_get_free_listE[jmy];\n+    _ZN9__gnu_cxx3__817__pool_alloc_base12_M_get_mutexEv;\n \n-    _ZN9__gnu_cxx3__79free_list6_M_getE[jmy];\n-    _ZN9__gnu_cxx3__79free_list8_M_clearEv;\n+    _ZN9__gnu_cxx3__89free_list6_M_getE[jmy];\n+    _ZN9__gnu_cxx3__89free_list8_M_clearEv;\n \n     # __gnu_cxx::stdio_sync_filebuf\n-    _ZTVN9__gnu_cxx3__718stdio_sync_filebufI[cw]St3__711char_traitsI[cw]EEE;\n-    _ZN9__gnu_cxx3__718stdio_sync_filebufI[cw]NSt3__711char_traitsI[cw]EEE[5-9]*;\n+    _ZTVN9__gnu_cxx3__818stdio_sync_filebufI[cw]St3__811char_traitsI[cw]EEE;\n+    _ZN9__gnu_cxx3__818stdio_sync_filebufI[cw]NSt3__811char_traitsI[cw]EEE[5-9]*;\n \n     # debug mode\n     _ZN11__gnu_debug19_Safe_sequence_base12_M_get_mutexEv;\n@@ -249,7 +249,7 @@ CXXABI_2.0 {\n     _ZSt15_Fnv_hash_bytesPKv*;\n \n     # __gnu_cxx::_verbose_terminate_handler()\n-    _ZN9__gnu_cxx3__727__verbose_terminate_handlerEv;\n+    _ZN9__gnu_cxx3__827__verbose_terminate_handlerEv;\n \n     # *_type_info classes, ctor and dtor\n     _ZN10__cxxabiv117__array_type_info*;"}, {"sha": "3e3905010f74a0c402fa2ce0f3337c50831d7d3c", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=87c7063d68a79665ff480babc7ff06e6e2e0e1f8", "patch": "@@ -276,55 +276,55 @@ namespace __gnu_cxx\n \n namespace std\n {\n-  inline namespace __7 { }\n+  inline namespace __8 { }\n \n-  namespace rel_ops { inline namespace __7 { } }\n+  namespace rel_ops { inline namespace __8 { } }\n \n   namespace tr1\n   {\n-    inline namespace __7 { }\n-    namespace placeholders { inline namespace __7 { } }\n-    namespace regex_constants { inline namespace __7 { } }\n-    namespace __detail { inline namespace __7 { } }\n+    inline namespace __8 { }\n+    namespace placeholders { inline namespace __8 { } }\n+    namespace regex_constants { inline namespace __8 { } }\n+    namespace __detail { inline namespace __8 { } }\n   }\n \n   namespace tr2\n-  { inline namespace __7 { } }\n+  { inline namespace __8 { } }\n \n-  namespace decimal { inline namespace __7 { } }\n+  namespace decimal { inline namespace __8 { } }\n \n #if __cplusplus >= 201103L\n-  namespace chrono { inline namespace __7 { } }\n-  namespace placeholders { inline namespace __7 { } }\n-  namespace regex_constants { inline namespace __7 { } }\n-  namespace this_thread { inline namespace __7 { } }\n+  namespace chrono { inline namespace __8 { } }\n+  namespace placeholders { inline namespace __8 { } }\n+  namespace regex_constants { inline namespace __8 { } }\n+  namespace this_thread { inline namespace __8 { } }\n \n #if __cplusplus >= 201402L\n   inline namespace literals {\n-    inline namespace chrono_literals { inline namespace __7 { } }\n-    inline namespace complex_literals { inline namespace __7 { } }\n-    inline namespace string_literals { inline namespace __7 { } }\n+    inline namespace chrono_literals { inline namespace __8 { } }\n+    inline namespace complex_literals { inline namespace __8 { } }\n+    inline namespace string_literals { inline namespace __8 { } }\n #if __cplusplus > 201402L\n-    inline namespace string_view_literals { inline namespace __7 { } }\n+    inline namespace string_view_literals { inline namespace __8 { } }\n #endif // C++17\n   }\n #endif // C++14\n #endif // C++11\n \n   namespace __detail {\n-    inline namespace __7 { }\n+    inline namespace __8 { }\n #if __cplusplus > 201402L\n-    namespace __variant { inline namespace __7 { } }\n+    namespace __variant { inline namespace __8 { } }\n #endif\n   }\n }\n \n namespace __gnu_cxx\n {\n-  inline namespace __7 { }\n-  namespace __detail { inline namespace __7 { } }\n+  inline namespace __8 { }\n+  namespace __detail { inline namespace __8 { } }\n }\n-# define _GLIBCXX_BEGIN_NAMESPACE_VERSION namespace __7 {\n+# define _GLIBCXX_BEGIN_NAMESPACE_VERSION namespace __8 {\n # define _GLIBCXX_END_NAMESPACE_VERSION }\n #else\n # define _GLIBCXX_BEGIN_NAMESPACE_VERSION\n@@ -341,7 +341,7 @@ namespace std\n   namespace __cxx1998\n   {\n # if _GLIBCXX_INLINE_VERSION\n-  inline namespace __7 { }\n+  inline namespace __8 { }\n # endif\n \n # if _GLIBCXX_USE_CXX11_ABI"}, {"sha": "15f0d08c8da195f1fa5d88ed21035611232522a3", "filename": "libstdc++-v3/include/bits/regex.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h?ref=87c7063d68a79665ff480babc7ff06e6e2e0e1f8", "patch": "@@ -773,7 +773,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \t__detail::_RegexExecutorPolicy, bool>\n \tfriend bool __detail::\n #if _GLIBCXX_INLINE_VERSION\n-        __7:: // Required due to PR c++/59256\n+        __8:: // Required due to PR c++/59256\n #endif\n \t__regex_algo_impl(_Bp, _Bp, match_results<_Bp, _Ap>&,\n                           const basic_regex<_Cp, _Rp>&,\n@@ -1867,7 +1867,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \t__detail::_RegexExecutorPolicy, bool>\n \tfriend bool __detail::\n #if _GLIBCXX_INLINE_VERSION\n-        __7:: // Required due to PR c++/59256\n+        __8:: // Required due to PR c++/59256\n #endif\n \t__regex_algo_impl(_Bp, _Bp, match_results<_Bp, _Ap>&,\n                           const basic_regex<_Cp, _Rp>&,"}, {"sha": "c5aeefe41a7a223d4107af87c612338be3531650", "filename": "libstdc++-v3/include/experimental/bits/fs_fwd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_fwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_fwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_fwd.h?ref=87c7063d68a79665ff480babc7ff06e6e2e0e1f8", "patch": "@@ -47,7 +47,7 @@ namespace filesystem\n inline namespace v1\n {\n #if _GLIBCXX_INLINE_VERSION\n-inline namespace __7 { }\n+inline namespace __8 { }\n #endif\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n "}, {"sha": "ecc40c4327faa99e11fab9f56db60ab012637ccf", "filename": "libstdc++-v3/include/experimental/bits/lfts_config.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Flfts_config.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Flfts_config.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Flfts_config.h?ref=87c7063d68a79665ff480babc7ff06e6e2e0e1f8", "patch": "@@ -39,24 +39,24 @@ namespace chrono\n {\n namespace experimental\n {\n-inline namespace fundamentals_v1 { inline namespace __7 { } }\n-inline namespace fundamentals_v2 { inline namespace __7 { } }\n+inline namespace fundamentals_v1 { inline namespace __8 { } }\n+inline namespace fundamentals_v2 { inline namespace __8 { } }\n } // namespace experimental\n } // namespace chrono\n \n namespace experimental\n {\n inline namespace fundamentals_v1 {\n-  inline namespace __7 { }\n-  namespace __detail { inline namespace __7 { } }\n+  inline namespace __8 { }\n+  namespace __detail { inline namespace __8 { } }\n }\n inline namespace fundamentals_v2 {\n-  inline namespace __7 { }\n-  namespace pmr { inline namespace __7 { } }\n-  namespace __detail { inline namespace __7 { } }\n+  inline namespace __8 { }\n+  namespace pmr { inline namespace __8 { } }\n+  namespace __detail { inline namespace __8 { } }\n } // namespace fundamentals_v2\n inline namespace literals { inline namespace string_view_literals {\n-  inline namespace __7 { }\n+  inline namespace __8 { }\n } } // namespace literals::string_view_literals\n } // namespace experimental\n } // namespace std"}, {"sha": "0e04a820d697bb0ddffd31c97a3ab95b472b0bcb", "filename": "libstdc++-v3/include/std/variant", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant?ref=87c7063d68a79665ff480babc7ff06e6e2e0e1f8", "patch": "@@ -1154,14 +1154,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<size_t _Np, typename _Vp>\n \tfriend constexpr decltype(auto) __detail::__variant::\n #if _GLIBCXX_INLINE_VERSION\n-        __7:: // Required due to PR c++/59256\n+        __8:: // Required due to PR c++/59256\n #endif\n \t__get(_Vp&& __v);\n \n       template<typename _Vp>\n \tfriend void* __detail::__variant::\n #if _GLIBCXX_INLINE_VERSION\n-        __7:: // Required due to PR c++/59256\n+        __8:: // Required due to PR c++/59256\n #endif\n         __get_storage(_Vp&& __v);\n "}, {"sha": "8122cf8183484d103a259c1da270edbd284bd58f", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=87c7063d68a79665ff480babc7ff06e6e2e0e1f8", "patch": "@@ -99,7 +99,7 @@ def find_type(orig, name):\n             raise ValueError(\"Cannot find type %s::%s\" % (str(orig), name))\n         typ = field.type\n \n-_versioned_namespace = '__7::'\n+_versioned_namespace = '__8::'\n \n # Test if a type is a given template instantiation.\n def is_specialization_of(type, template_name):"}, {"sha": "ab00e8a1505fe37dec647b53059adfc0c45b978e", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/48362.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2F48362.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87c7063d68a79665ff480babc7ff06e6e2e0e1f8/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2F48362.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2F48362.cc?ref=87c7063d68a79665ff480babc7ff06e6e2e0e1f8", "patch": "@@ -29,7 +29,7 @@ main()\n // { dg-final { note-test t1 {empty std::tuple} } }\n \n   std::tuple<std::string, int, std::tuple<>> t2{ \"Johnny\", 5, {} };\n-// { dg-final { regexp-test t2 {std::tuple containing = {\\[1\\] = \"Johnny\", \\[2\\] = 5, \\[3\\] = {<std::(__7::)?tuple<>> = empty std::tuple, <No data fields>}}} } }\n+// { dg-final { regexp-test t2 {std::tuple containing = {\\[1\\] = \"Johnny\", \\[2\\] = 5, \\[3\\] = {<std::(__8::)?tuple<>> = empty std::tuple, <No data fields>}}} } }\n \n   std::cout << \"\\n\";\n   return 0; // Mark SPOT"}]}