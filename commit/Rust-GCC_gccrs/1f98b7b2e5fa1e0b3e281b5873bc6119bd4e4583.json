{"sha": "1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY5OGI3YjJlNWZhMWUwYjNlMjgxYjU4NzNiYzYxMTliZDRlNDU4Mw==", "commit": {"author": {"name": "Janis Johnson", "email": "janisjo@codesourcery.com", "date": "2013-01-17T15:50:51Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2013-01-17T15:50:51Z"}, "message": "ftest-support.h: Replace for compile-only tests.\n\n\t* gcc.target/arm/ftest-support.h: Replace for compile-only tests.\n\t* gcc.target/arm/ftest-support-arm.h: Delete.\n\t* gcc.target/arm/ftest-support-thumb.h: Delete.\n\t* gcc.target/arm/ftest-armv4-arm.c: Replace with compile-only test.\n\t* gcc.target/arm/ftest-armv4t-arm.c: Likewise.\n\t* gcc.target/arm/ftest-armv4t-thumb.c: Likewise.\n\t* gcc.target/arm/ftest-armv5t-arm.c: Likewise.\n\t* gcc.target/arm/ftest-armv5t-thumb.c: Likewise.\n\t* gcc.target/arm/ftest-armv5te-arm.c: Likewise.\n\t* gcc.target/arm/ftest-armv5te-thumb.c: Likewise.\n\t* gcc.target/arm/ftest-armv6-arm.c: Likewise.\n\t* gcc.target/arm/ftest-armv6-thumb.c: Likewise.\n\t* gcc.target/arm/ftest-armv6k-arm.c: Likewise.\n\t* gcc.target/arm/ftest-armv6k-thumb.c: Likewise.\n\t* gcc.target/arm/ftest-armv6m-thumb.c: Likewise.\n\t* gcc.target/arm/ftest-armv6t2-arm.c: Likewise.\n\t* gcc.target/arm/ftest-armv6t2-thumb.c: Likewise.\n\t* gcc.target/arm/ftest-armv6z-arm.c: Likewise.\n\t* gcc.target/arm/ftest-armv6z-thumb.c: Likewise.\n\t* gcc.target/arm/ftest-armv7a-arm.c: Likewise.\n\t* gcc.target/arm/ftest-armv7a-thumb.c: Likewise.\n\t* gcc.target/arm/ftest-armv7em-thumb.c: Likewise.\n\t* gcc.target/arm/ftest-armv7m-thumb.c: Likewise.\n\t* gcc.target/arm/ftest-armv7r-arm.c: Likewise.\n\t* gcc.target/arm/ftest-armv7r-thumb.c: Likewise.\n\t* gcc.target/arm/ftest-armv8a-arm.c: Likewise.\n\t* gcc.target/arm/ftest-armv8a-thumb.c: Likewise.\n\nFrom-SVN: r195270", "tree": {"sha": "05be4ab24e59098b35f7b4dac95a35b1018ce72d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05be4ab24e59098b35f7b4dac95a35b1018ce72d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/comments", "author": null, "committer": null, "parents": [{"sha": "922c57d1ba5cb53ba29bc303ab66e869065d540b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/922c57d1ba5cb53ba29bc303ab66e869065d540b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/922c57d1ba5cb53ba29bc303ab66e869065d540b"}], "stats": {"total": 1086, "additions": 739, "deletions": 347}, "files": [{"sha": "1c1bd7bacf55de1bd22814a78742d2b37e789a47", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,3 +1,33 @@\n+2013-01-17  Janis Johnson  <janisjo@codesourcery.com>\n+\n+\t* gcc.target/arm/ftest-support.h: Replace for compile-only tests.\n+\t* gcc.target/arm/ftest-support-arm.h: Delete.\n+\t* gcc.target/arm/ftest-support-thumb.h: Delete.\n+\t* gcc.target/arm/ftest-armv4-arm.c: Replace with compile-only test.\n+\t* gcc.target/arm/ftest-armv4t-arm.c: Likewise.\n+\t* gcc.target/arm/ftest-armv4t-thumb.c: Likewise.\n+\t* gcc.target/arm/ftest-armv5t-arm.c: Likewise.\n+\t* gcc.target/arm/ftest-armv5t-thumb.c: Likewise.\n+\t* gcc.target/arm/ftest-armv5te-arm.c: Likewise.\n+\t* gcc.target/arm/ftest-armv5te-thumb.c: Likewise.\n+\t* gcc.target/arm/ftest-armv6-arm.c: Likewise.\n+\t* gcc.target/arm/ftest-armv6-thumb.c: Likewise.\n+\t* gcc.target/arm/ftest-armv6k-arm.c: Likewise.\n+\t* gcc.target/arm/ftest-armv6k-thumb.c: Likewise.\n+\t* gcc.target/arm/ftest-armv6m-thumb.c: Likewise.\n+\t* gcc.target/arm/ftest-armv6t2-arm.c: Likewise.\n+\t* gcc.target/arm/ftest-armv6t2-thumb.c: Likewise.\n+\t* gcc.target/arm/ftest-armv6z-arm.c: Likewise.\n+\t* gcc.target/arm/ftest-armv6z-thumb.c: Likewise.\n+\t* gcc.target/arm/ftest-armv7a-arm.c: Likewise.\n+\t* gcc.target/arm/ftest-armv7a-thumb.c: Likewise.\n+\t* gcc.target/arm/ftest-armv7em-thumb.c: Likewise.\n+\t* gcc.target/arm/ftest-armv7m-thumb.c: Likewise.\n+\t* gcc.target/arm/ftest-armv7r-arm.c: Likewise.\n+\t* gcc.target/arm/ftest-armv7r-thumb.c: Likewise.\n+\t* gcc.target/arm/ftest-armv8a-arm.c: Likewise.\n+\t* gcc.target/arm/ftest-armv8a-thumb.c: Likewise.\n+\n 2013-01-17  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimizations/55264"}, {"sha": "4b48ef803d4f53a67c4f36369cb4f537f584e7c7", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv4-arm.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv4-arm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv4-arm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv4-arm.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,15 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_nothumb } */\n-/* { dg-require-effective-target arm_arch_v4_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv4\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-mthumb\" } { \"\" } } */\n /* { dg-options \"-marm\" } */\n /* { dg-add-options arm_arch_v4 } */\n \n-#include \"ftest-support-arm.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 4\n+\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n+\n+#include \"ftest-support.h\"\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V4);\n-}\n "}, {"sha": "016506f46e8f1fb12f3cd9fbce4b0e38f193b6fb", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv4t-arm.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv4t-arm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv4t-arm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv4t-arm.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,16 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_nothumb } */\n-/* { dg-require-effective-target arm_arch_v4t_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv4t\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-mthumb\" } { \"\" } } */\n /* { dg-options \"-marm\" } */\n /* { dg-add-options arm_arch_v4t } */\n \n-#include \"ftest-support-arm.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 4\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V4T);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 1\n+\n+#include \"ftest-support.h\""}, {"sha": "9ef944e5fbeaaef39e4eb04c1340ba3b660cedf5", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv4t-thumb.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv4t-thumb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv4t-thumb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv4t-thumb.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,16 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_eabi } */\n-/* { dg-require-effective-target arm_arch_v4t_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv4t\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-marm\" } { \"\" } } */\n /* { dg-options \"-mthumb\" } */\n /* { dg-add-options arm_arch_v4t } */\n \n-#include \"ftest-support-thumb.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 4\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V4T);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 1\n+\n+#include \"ftest-support.h\""}, {"sha": "a9403e97c1cbd010b279df03aa846b36d210d2f4", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv5t-arm.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv5t-arm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv5t-arm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv5t-arm.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,19 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_nothumb } */\n-/* { dg-require-effective-target arm_arch_v5t_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv5t\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-mthumb\" } { \"\" } } */\n /* { dg-options \"-marm\" } */\n /* { dg-add-options arm_arch_v5t } */\n \n-#include \"ftest-support-arm.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 5\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V5T);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 1\n+\n+#define NEED_ARM_FEATURE_CLZ\n+#define VALUE_ARM_FEATURE_CLZ 1\n+\n+#include \"ftest-support.h\""}, {"sha": "f3ad07ec04b1e24c3b109a45cd7dcdb50d86522b", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv5t-thumb.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv5t-thumb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv5t-thumb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv5t-thumb.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,16 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_eabi } */\n-/* { dg-require-effective-target arm_arch_v5t_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv5t\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-marm\" } { \"\" } } */\n /* { dg-options \"-mthumb\" } */\n /* { dg-add-options arm_arch_v5t } */\n \n-#include \"ftest-support-thumb.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 5\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V5T);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 1\n+\n+#include \"ftest-support.h\""}, {"sha": "f98c01a0e7cd6f690fd84c70efa1ff0674acba43", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv5te-arm.c", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv5te-arm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv5te-arm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv5te-arm.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,25 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_nothumb } */\n-/* { dg-require-effective-target arm_arch_v5te_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv5te\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-mthumb\" } { \"\" } } */\n /* { dg-options \"-marm\" } */\n /* { dg-add-options arm_arch_v5te } */\n \n-#include \"ftest-support-arm.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 5\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V5TE);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 1\n+\n+#define NEED_ARM_FEATURE_CLZ\n+#define VALUE_ARM_FEATURE_CLZ 1\n+\n+#define NEED_ARM_FEATURE_DSP\n+#define VALUE_ARM_FEATURE_DSP 1\n+\n+#define NEED_ARM_FEATURE_QBIT\n+#define VALUE_ARM_FEATURE_QBIT 1\n+\n+#include \"ftest-support.h\""}, {"sha": "5d71787e8c41bd8fe126233e9fc903c700ffc292", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv5te-thumb.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv5te-thumb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv5te-thumb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv5te-thumb.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,16 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_eabi } */\n-/* { dg-require-effective-target arm_arch_v5te_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv5te\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-marm\" } { \"\" } } */\n /* { dg-options \"-mthumb\" } */\n /* { dg-add-options arm_arch_v5te } */\n \n-#include \"ftest-support-thumb.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 5\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V5TE);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 1\n+\n+#include \"ftest-support.h\""}, {"sha": "88a508954853dfccd2c5878e5ebd987655ab0fb1", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv6-arm.c", "status": "modified", "additions": 32, "deletions": 9, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6-arm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6-arm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6-arm.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,37 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_nothumb } */\n-/* { dg-require-effective-target arm_arch_v6_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv6\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-mthumb\" } { \"\" } } */\n /* { dg-options \"-marm\" } */\n /* { dg-add-options arm_arch_v6 } */\n \n-#include \"ftest-support-arm.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 6\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V6);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 1\n+\n+#define NEED_ARM_FEATURE_UNALIGNED\n+#define VALUE_ARM_FEATURE_UNALIGNED 1\n+\n+#define NEED_ARM_FEATURE_LDREX\n+#define VALUE_ARM_FEATURE_LDREX 4\n+\n+#define NEED_ARM_FEATURE_CLZ\n+#define VALUE_ARM_FEATURE_CLZ 1\n+\n+#define NEED_ARM_FEATURE_DSP\n+#define VALUE_ARM_FEATURE_DSP 1\n+\n+#define NEED_ARM_FEATURE_SIMD32\n+#define VALUE_ARM_FEATURE_SIMD32 1\n+\n+#define NEED_ARM_FEATURE_QBIT\n+#define VALUE_ARM_FEATURE_QBIT 1\n+\n+#define NEED_ARM_FEATURE_SAT\n+#define VALUE_ARM_FEATURE_SAT 1\n+\n+#include \"ftest-support.h\""}, {"sha": "0f42a0ca8dca820e6665114bec10e671bd658a66", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv6-thumb.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6-thumb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6-thumb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6-thumb.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,19 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_eabi } */\n-/* { dg-require-effective-target arm_arch_v6_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv6\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-marm\" } { \"\" } } */\n /* { dg-options \"-mthumb\" } */\n /* { dg-add-options arm_arch_v6 } */\n \n-#include \"ftest-support-thumb.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 6\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V6);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 1\n+\n+#define NEED_ARM_FEATURE_UNALIGNED\n+#define VALUE_ARM_FEATURE_UNALIGNED 1\n+\n+#include \"ftest-support.h\""}, {"sha": "8de021a0f69066e8ba68c4b9b310f1073a889470", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv6k-arm.c", "status": "modified", "additions": 32, "deletions": 9, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6k-arm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6k-arm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6k-arm.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,37 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_nothumb } */\n-/* { dg-require-effective-target arm_arch_v6k_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv6k\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-mthumb\" } { \"\" } } */\n /* { dg-options \"-marm\" } */\n /* { dg-add-options arm_arch_v6k } */\n \n-#include \"ftest-support-arm.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 6\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V6K);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 1\n+\n+#define NEED_ARM_FEATURE_UNALIGNED\n+#define VALUE_ARM_FEATURE_UNALIGNED 1\n+\n+#define NEED_ARM_FEATURE_LDREX\n+#define VALUE_ARM_FEATURE_LDREX 15\n+\n+#define NEED_ARM_FEATURE_CLZ\n+#define VALUE_ARM_FEATURE_CLZ 1\n+\n+#define NEED_ARM_FEATURE_DSP\n+#define VALUE_ARM_FEATURE_DSP 1\n+\n+#define NEED_ARM_FEATURE_SIMD32\n+#define VALUE_ARM_FEATURE_SIMD32 1\n+\n+#define NEED_ARM_FEATURE_QBIT\n+#define VALUE_ARM_FEATURE_QBIT 1\n+\n+#define NEED_ARM_FEATURE_SAT\n+#define VALUE_ARM_FEATURE_SAT 1\n+\n+#include \"ftest-support.h\""}, {"sha": "8e4a18804282a5005e8808353cbdfb1ba5cee865", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv6k-thumb.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6k-thumb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6k-thumb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6k-thumb.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,19 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_eabi } */\n-/* { dg-require-effective-target arm_arch_v6k_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv6k\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-marm\" } { \"\" } } */\n /* { dg-options \"-mthumb\" } */\n /* { dg-add-options arm_arch_v6k } */\n \n-#include \"ftest-support-thumb.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 6\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V6K);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 1\n+\n+#define NEED_ARM_FEATURE_UNALIGNED\n+#define VALUE_ARM_FEATURE_UNALIGNED 1\n+\n+#include \"ftest-support.h\""}, {"sha": "ee075e290b21bdab86816e85e0245a192a8a37c5", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv6m-thumb.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6m-thumb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6m-thumb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6m-thumb.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,16 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_eabi } */\n-/* { dg-require-effective-target arm_arch_v6m_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv6-m\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-marm\" } { \"\" } } */\n /* { dg-options \"-mthumb\" } */\n /* { dg-add-options arm_arch_v6m } */\n \n-#include \"ftest-support-thumb.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 6\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V6M);\n-}\n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 1\n \n+#define NEED_ARM_ARCH_PROFILE\n+#define VALUE_ARM_ARCH_PROFILE 'M'\n+\n+#include \"ftest-support.h\""}, {"sha": "83b4bc4c95303c8259025e3c6282728ad2b0d734", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv6t2-arm.c", "status": "modified", "additions": 32, "deletions": 9, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6t2-arm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6t2-arm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6t2-arm.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,37 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_nothumb } */\n-/* { dg-require-effective-target arm_arch_v6t2_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv6t2\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-mthumb\" } { \"\" } } */\n /* { dg-options \"-marm\" } */\n /* { dg-add-options arm_arch_v6t2 } */\n \n-#include \"ftest-support-arm.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 6\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V6T2);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 2\n+\n+#define NEED_ARM_FEATURE_UNALIGNED\n+#define VALUE_ARM_FEATURE_UNALIGNED 1\n+\n+#define NEED_ARM_FEATURE_LDREX\n+#define VALUE_ARM_FEATURE_LDREX 4\n+\n+#define NEED_ARM_FEATURE_CLZ\n+#define VALUE_ARM_FEATURE_CLZ 1\n+\n+#define NEED_ARM_FEATURE_DSP\n+#define VALUE_ARM_FEATURE_DSP 1\n+\n+#define NEED_ARM_FEATURE_SIMD32\n+#define VALUE_ARM_FEATURE_SIMD32 1\n+\n+#define NEED_ARM_FEATURE_QBIT\n+#define VALUE_ARM_FEATURE_QBIT 1\n+\n+#define NEED_ARM_FEATURE_SAT\n+#define VALUE_ARM_FEATURE_SAT 1\n+\n+#include \"ftest-support.h\""}, {"sha": "1a1cbc5abcc18ef3019c3e8ce8155b577986660a", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv6t2-thumb.c", "status": "modified", "additions": 29, "deletions": 9, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6t2-thumb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6t2-thumb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6t2-thumb.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,34 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_eabi } */\n-/* { dg-require-effective-target arm_arch_v6t2_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv6t2\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-marm\" } { \"\" } } */\n /* { dg-options \"-mthumb\" } */\n /* { dg-add-options arm_arch_v6t2 } */\n \n-#include \"ftest-support-thumb.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 6\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V6T2);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 2\n+\n+#define NEED_ARM_FEATURE_UNALIGNED\n+#define VALUE_ARM_FEATURE_UNALIGNED 1\n+\n+#define NEED_ARM_FEATURE_CLZ\n+#define VALUE_ARM_FEATURE_CLZ 1\n+\n+#define NEED_ARM_FEATURE_DSP\n+#define VALUE_ARM_FEATURE_DSP 1\n+\n+#define NEED_ARM_FEATURE_SIMD32\n+#define VALUE_ARM_FEATURE_SIMD32 1\n+\n+#define NEED_ARM_FEATURE_QBIT\n+#define VALUE_ARM_FEATURE_QBIT 1\n+\n+#define NEED_ARM_FEATURE_SAT\n+#define VALUE_ARM_FEATURE_SAT 1\n+\n+#include \"ftest-support.h\""}, {"sha": "e2df0d482bf9404d5064b814035c8598e214038d", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv6z-arm.c", "status": "modified", "additions": 32, "deletions": 9, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6z-arm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6z-arm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6z-arm.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,37 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_nothumb } */\n-/* { dg-require-effective-target arm_arch_v6z_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv6z\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-mthumb\" } { \"\" } } */\n /* { dg-options \"-marm\" } */\n /* { dg-add-options arm_arch_v6z } */\n \n-#include \"ftest-support-arm.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 6\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V6Z);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 1\n+\n+#define NEED_ARM_FEATURE_UNALIGNED\n+#define VALUE_ARM_FEATURE_UNALIGNED 1\n+\n+#define NEED_ARM_FEATURE_LDREX\n+#define VALUE_ARM_FEATURE_LDREX 4\n+\n+#define NEED_ARM_FEATURE_CLZ\n+#define VALUE_ARM_FEATURE_CLZ 1\n+\n+#define NEED_ARM_FEATURE_DSP\n+#define VALUE_ARM_FEATURE_DSP 1\n+\n+#define NEED_ARM_FEATURE_SIMD32\n+#define VALUE_ARM_FEATURE_SIMD32 1\n+\n+#define NEED_ARM_FEATURE_QBIT\n+#define VALUE_ARM_FEATURE_QBIT 1\n+\n+#define NEED_ARM_FEATURE_SAT\n+#define VALUE_ARM_FEATURE_SAT 1\n+\n+#include \"ftest-support.h\""}, {"sha": "9761f0a96f6e935925c8f391d9ded7920f8ab2fe", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv6z-thumb.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6z-thumb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6z-thumb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv6z-thumb.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,19 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_eabi } */\n-/* { dg-require-effective-target arm_arch_v6z_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv6z\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-marm\" } { \"\" } } */\n /* { dg-options \"-mthumb\" } */\n /* { dg-add-options arm_arch_v6z } */\n \n-#include \"ftest-support-thumb.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 6\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V6Z);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 1\n+\n+#define NEED_ARM_FEATURE_UNALIGNED\n+#define VALUE_ARM_FEATURE_UNALIGNED 1\n+\n+#include \"ftest-support.h\""}, {"sha": "c71a7cdb75c2ac94c65a0f4e7aad21e2e800a386", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv7a-arm.c", "status": "modified", "additions": 35, "deletions": 9, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv7a-arm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv7a-arm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv7a-arm.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,40 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_nothumb } */\n-/* { dg-require-effective-target arm_arch_v7a_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv7-a\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-mthumb\" } { \"\" } } */\n /* { dg-options \"-marm\" } */\n /* { dg-add-options arm_arch_v7a } */\n \n-#include \"ftest-support-arm.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 7\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V7A);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 2\n+\n+#define NEED_ARM_ARCH_PROFILE\n+#define VALUE_ARM_ARCH_PROFILE 'A'\n+\n+#define NEED_ARM_FEATURE_UNALIGNED\n+#define VALUE_ARM_FEATURE_UNALIGNED 1\n+\n+#define NEED_ARM_FEATURE_LDREX\n+#define VALUE_ARM_FEATURE_LDREX 15\n+\n+#define NEED_ARM_FEATURE_CLZ\n+#define VALUE_ARM_FEATURE_CLZ 1\n+\n+#define NEED_ARM_FEATURE_DSP\n+#define VALUE_ARM_FEATURE_DSP 1\n+\n+#define NEED_ARM_FEATURE_SIMD32\n+#define VALUE_ARM_FEATURE_SIMD32 1\n+\n+#define NEED_ARM_FEATURE_QBIT\n+#define VALUE_ARM_FEATURE_QBIT 1\n+\n+#define NEED_ARM_FEATURE_SAT\n+#define VALUE_ARM_FEATURE_SAT 1\n+\n+#include \"ftest-support.h\""}, {"sha": "ac05ffa0c0b857acd367a941bdd7a5c12cee2f8a", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv7a-thumb.c", "status": "modified", "additions": 35, "deletions": 9, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv7a-thumb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv7a-thumb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv7a-thumb.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,40 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_eabi } */\n-/* { dg-require-effective-target arm_arch_v7a_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=aramv7-a\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-marm\" } { \"\" } } */\n /* { dg-options \"-mthumb\" } */\n /* { dg-add-options arm_arch_v7a } */\n \n-#include \"ftest-support-thumb.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 7\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V7A);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 2\n+\n+#define NEED_ARM_ARCH_PROFILE\n+#define VALUE_ARM_ARCH_PROFILE 'A'\n+\n+#define NEED_ARM_FEATURE_UNALIGNED\n+#define VALUE_ARM_FEATURE_UNALIGNED 1\n+\n+#define NEED_ARM_FEATURE_LDREX\n+#define VALUE_ARM_FEATURE_LDREX 15\n+\n+#define NEED_ARM_FEATURE_CLZ\n+#define VALUE_ARM_FEATURE_CLZ 1\n+\n+#define NEED_ARM_FEATURE_DSP\n+#define VALUE_ARM_FEATURE_DSP 1\n+\n+#define NEED_ARM_FEATURE_SIMD32\n+#define VALUE_ARM_FEATURE_SIMD32 1\n+\n+#define NEED_ARM_FEATURE_QBIT\n+#define VALUE_ARM_FEATURE_QBIT 1\n+\n+#define NEED_ARM_FEATURE_SAT\n+#define VALUE_ARM_FEATURE_SAT 1\n+\n+#include \"ftest-support.h\""}, {"sha": "688d766e71d2a732fe1ac8a68cb8c0732959bece", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv7em-thumb.c", "status": "modified", "additions": 32, "deletions": 9, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv7em-thumb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv7em-thumb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv7em-thumb.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,37 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_eabi } */\n-/* { dg-require-effective-target arm_arch_v7em_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv7e-m\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-marm\" } { \"\" } } */\n /* { dg-options \"-mthumb\" } */\n /* { dg-add-options arm_arch_v7em } */\n \n-#include \"ftest-support-thumb.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 7\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V7EM);\n-}\n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 2\n \n+#define NEED_ARM_ARCH_PROFILE\n+#define VALUE_ARM_ARCH_PROFILE 'M'\n+\n+#define NEED_ARM_FEATURE_UNALIGNED\n+#define VALUE_ARM_FEATURE_UNALIGNED 1\n+\n+#define NEED_ARM_FEATURE_LDREX\n+#define VALUE_ARM_FEATURE_LDREX 7\n+\n+#define NEED_ARM_FEATURE_CLZ\n+#define VALUE_ARM_FEATURE_CLZ 1\n+\n+#define NEED_ARM_FEATURE_DSP\n+#define VALUE_ARM_FEATURE_DSP 1\n+\n+#define NEED_ARM_FEATURE_SIMD32\n+#define VALUE_ARM_FEATURE_SIMD32 1\n+\n+#define NEED_ARM_FEATURE_QBIT\n+#define VALUE_ARM_FEATURE_QBIT 1\n+\n+#define NEED_ARM_FEATURE_SAT\n+#define VALUE_ARM_FEATURE_SAT 1\n+\n+#include \"ftest-support.h\""}, {"sha": "363b48b7516cca82cb510751141c823411126b72", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv7m-thumb.c", "status": "modified", "additions": 26, "deletions": 9, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv7m-thumb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv7m-thumb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv7m-thumb.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,31 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_eabi } */\n-/* { dg-require-effective-target arm_arch_v7m_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=arm7-m\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-marm\" } { \"\" } } */\n /* { dg-options \"-mthumb\" } */\n /* { dg-add-options arm_arch_v7m } */\n \n-#include \"ftest-support-thumb.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 7\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V7M);\n-}\n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 2\n \n+#define NEED_ARM_ARCH_PROFILE\n+#define VALUE_ARM_ARCH_PROFILE 'M'\n+\n+#define NEED_ARM_FEATURE_UNALIGNED\n+#define VALUE_ARM_FEATURE_UNALIGNED 1\n+\n+#define NEED_ARM_FEATURE_LDREX\n+#define VALUE_ARM_FEATURE_LDREX 7\n+\n+#define NEED_ARM_FEATURE_CLZ\n+#define VALUE_ARM_FEATURE_CLZ 1\n+\n+#define NEED_ARM_FEATURE_QBIT\n+#define VALUE_ARM_FEATURE_QBIT 1\n+\n+#define NEED_ARM_FEATURE_SAT\n+#define VALUE_ARM_FEATURE_SAT 1\n+\n+#include \"ftest-support.h\""}, {"sha": "08c017fc2ba60f5ec25d145a8106f59aaa0fbb4f", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv7r-arm.c", "status": "modified", "additions": 35, "deletions": 9, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv7r-arm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv7r-arm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv7r-arm.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,40 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_nothumb } */\n-/* { dg-require-effective-target arm_arch_v7r_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv7-r\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-mthumb\" } { \"\" } } */\n /* { dg-options \"-marm\" } */\n /* { dg-add-options arm_arch_v7r } */\n \n-#include \"ftest-support-arm.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 7\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V7R);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 2\n+\n+#define NEED_ARM_ARCH_PROFILE\n+#define VALUE_ARM_ARCH_PROFILE 'R'\n+\n+#define NEED_ARM_FEATURE_UNALIGNED\n+#define VALUE_ARM_FEATURE_UNALIGNED 1\n+\n+#define NEED_ARM_FEATURE_LDREX\n+#define VALUE_ARM_FEATURE_LDREX 15\n+\n+#define NEED_ARM_FEATURE_CLZ\n+#define VALUE_ARM_FEATURE_CLZ 1\n+\n+#define NEED_ARM_FEATURE_DSP\n+#define VALUE_ARM_FEATURE_DSP 1\n+\n+#define NEED_ARM_FEATURE_SIMD32\n+#define VALUE_ARM_FEATURE_SIMD32 1\n+\n+#define NEED_ARM_FEATURE_QBIT\n+#define VALUE_ARM_FEATURE_QBIT 1\n+\n+#define NEED_ARM_FEATURE_SAT\n+#define VALUE_ARM_FEATURE_SAT 1\n+\n+#include \"ftest-support.h\""}, {"sha": "1b69dc0f01a62fc9f91a085da9de02dbf762afeb", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv7r-thumb.c", "status": "modified", "additions": 35, "deletions": 9, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv7r-thumb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv7r-thumb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv7r-thumb.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,40 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_eabi } */\n-/* { dg-require-effective-target arm_arch_v7r_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv7-r\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-marm\" } { \"\" } } */\n /* { dg-options \"-mthumb\" } */\n /* { dg-add-options arm_arch_v7r } */\n \n-#include \"ftest-support-thumb.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 7\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V7R);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 2\n+\n+#define NEED_ARM_ARCH_PROFILE\n+#define VALUE_ARM_ARCH_PROFILE 'R'\n+\n+#define NEED_ARM_FEATURE_UNALIGNED\n+#define VALUE_ARM_FEATURE_UNALIGNED 1\n+\n+#define NEED_ARM_FEATURE_LDREX\n+#define VALUE_ARM_FEATURE_LDREX 15\n+\n+#define NEED_ARM_FEATURE_CLZ\n+#define VALUE_ARM_FEATURE_CLZ 1\n+\n+#define NEED_ARM_FEATURE_DSP\n+#define VALUE_ARM_FEATURE_DSP 1\n+\n+#define NEED_ARM_FEATURE_SIMD32\n+#define VALUE_ARM_FEATURE_SIMD32 1\n+\n+#define NEED_ARM_FEATURE_QBIT\n+#define VALUE_ARM_FEATURE_QBIT 1\n+\n+#define NEED_ARM_FEATURE_SAT\n+#define VALUE_ARM_FEATURE_SAT 1\n+\n+#include \"ftest-support.h\""}, {"sha": "7812c5cd50ba664c0457a8532ac45676ebd0c225", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv8a-arm.c", "status": "modified", "additions": 35, "deletions": 9, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv8a-arm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv8a-arm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv8a-arm.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,40 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_nothumb } */\n-/* { dg-require-effective-target arm_arch_v8a_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv8-a\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-mthumb\" } { \"\" } } */\n /* { dg-options \"-marm\" } */\n /* { dg-add-options arm_arch_v8a } */\n \n-#include \"ftest-support-arm.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 8\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V8A);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 2\n+\n+#define NEED_ARM_ARCH_PROFILE\n+#define VALUE_ARM_ARCH_PROFILE 'A'\n+\n+#define NEED_ARM_FEATURE_UNALIGNED\n+#define VALUE_ARM_FEATURE_UNALIGNED 1\n+\n+#define NEED_ARM_FEATURE_LDREX\n+#define VALUE_ARM_FEATURE_LDREX 15\n+\n+#define NEED_ARM_FEATURE_CLZ\n+#define VALUE_ARM_FEATURE_CLZ 1\n+\n+#define NEED_ARM_FEATURE_DSP\n+#define VALUE_ARM_FEATURE_DSP 1\n+\n+#define NEED_ARM_FEATURE_SIMD32\n+#define VALUE_ARM_FEATURE_SIMD32 1\n+\n+#define NEED_ARM_FEATURE_QBIT\n+#define VALUE_ARM_FEATURE_QBIT 1\n+\n+#define NEED_ARM_FEATURE_SAT\n+#define VALUE_ARM_FEATURE_SAT 1\n+\n+#include \"ftest-support.h\""}, {"sha": "605b1735e9a6409fa94f3eee3598ab05f31e01af", "filename": "gcc/testsuite/gcc.target/arm/ftest-armv8a-thumb.c", "status": "modified", "additions": 35, "deletions": 9, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv8a-thumb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv8a-thumb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-armv8a-thumb.c?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,14 +1,40 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target arm_eabi } */\n-/* { dg-require-effective-target arm_arch_v8a_multilib } */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv8-a\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-marm\" } { \"\" } } */\n /* { dg-options \"-mthumb\" } */\n /* { dg-add-options arm_arch_v8a } */\n \n-#include \"ftest-support-thumb.h\"\n+#define NEED_ARM_ARCH\n+#define VALUE_ARM_ARCH 8\n \n-int\n-main (void)\n-{\n-  return ftest (ARCH_V8A);\n-}\n+#define NEED_ARM_ARCH_ISA_ARM\n+#define VALUE_ARM_ARCH_ISA_ARM 1\n \n+#define NEED_ARM_ARCH_ISA_THUMB\n+#define VALUE_ARM_ARCH_ISA_THUMB 2\n+\n+#define NEED_ARM_ARCH_PROFILE\n+#define VALUE_ARM_ARCH_PROFILE 'A'\n+\n+#define NEED_ARM_FEATURE_UNALIGNED\n+#define VALUE_ARM_FEATURE_UNALIGNED 1\n+\n+#define NEED_ARM_FEATURE_LDREX\n+#define VALUE_ARM_FEATURE_LDREX 15\n+\n+#define NEED_ARM_FEATURE_CLZ\n+#define VALUE_ARM_FEATURE_CLZ 1\n+\n+#define NEED_ARM_FEATURE_DSP\n+#define VALUE_ARM_FEATURE_DSP 1\n+\n+#define NEED_ARM_FEATURE_SIMD32\n+#define VALUE_ARM_FEATURE_SIMD32 1\n+\n+#define NEED_ARM_FEATURE_QBIT\n+#define VALUE_ARM_FEATURE_QBIT 1\n+\n+#define NEED_ARM_FEATURE_SAT\n+#define VALUE_ARM_FEATURE_SAT 1\n+\n+#include \"ftest-support.h\""}, {"sha": "2592074328226db54e763f336d6f599bb7b935cd", "filename": "gcc/testsuite/gcc.target/arm/ftest-support-arm.h", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/922c57d1ba5cb53ba29bc303ab66e869065d540b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-support-arm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/922c57d1ba5cb53ba29bc303ab66e869065d540b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-support-arm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-support-arm.h?ref=922c57d1ba5cb53ba29bc303ab66e869065d540b", "patch": "@@ -1,30 +0,0 @@\n-#include \"ftest-support.h\"\n-\n-  /*Feature matrix layout:\n-    __ARM_ARCH\n-    __ARM_ARCH_ISA_ARM\n-    __ARM_ARCH_ISA_THUMB\n-    __ARM_ARCH_PROFILE\n-    __ARM_FEATURE_UNALIGNED\n-    __ARM_FEATURE_LDREX\n-    __ARM_FEATURE_CLZ\n-    __ARM_FEATURE_DSP\n-    __ARM_FEATURE_SIMD32\n-    __ARM_FEATURE_QBIT\n-    __ARM_FEATURE_SAT\n-  */\n-int feature_matrix[ARCH_COUNT][NUM_FEATURES] =\n-  {{4, 1, 0, 0,   0, 0,  0, 0, 0, 0, 0},  /* ARCH_V4.  */\n-   {4, 1, 1, 0,   0, 0,  0, 0, 0, 0, 0},  /* ARCH_V4T.  */\n-   {5, 1, 1, 0,   0, 0,  1, 0, 0, 0, 0},  /* ARCH_V5T.  */\n-   {5, 1, 1, 0,   0, 0,  1, 1, 0, 1, 0},  /* ARCH_V5TE.  */\n-   {6, 1, 1, 0,   1, 4,  1, 1, 1, 1, 1},  /* ARCH_V6.  */\n-   {6, 1, 1, 0,   1, 15, 1, 1, 1, 1, 1},  /* ARCH_V6K.  */\n-   {6, 1, 2, 0,   1, 4,  1, 1, 1, 1, 1},  /* ARCH_V6T2.  */\n-   {6, 1, 1, 0,   1, 4,  1, 1, 1, 1, 1},  /* ARCH_V6Z.  */\n-   {6, 0, 1, 'M', 0, 0,  1, 0, 0, 0, 0},  /* ARCH_V6M.  */\n-   {7, 1, 2, 'A', 1, 15, 1, 1, 1, 1, 1},  /* ARCH_V7A.  */\n-   {7, 1, 2, 'R', 1, 15, 1, 1, 1, 1, 1},  /* ARCH_V7R.  */\n-   {7, 0, 2, 'M', 1, 7,  1, 0, 0, 1, 1},  /* ARCH_V7M.  */\n-   {7, 0, 2, 'M', 1, 7,  1, 1, 0, 1, 1},  /* ARCH_V7EM.  */\n-   {8, 1, 2, 'A', 1, 15, 1, 1, 1, 1, 1}}; /* ARCH_V8A.  */"}, {"sha": "a587999687a352c6180b53b8372985e422791bb9", "filename": "gcc/testsuite/gcc.target/arm/ftest-support-thumb.h", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/922c57d1ba5cb53ba29bc303ab66e869065d540b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-support-thumb.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/922c57d1ba5cb53ba29bc303ab66e869065d540b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-support-thumb.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-support-thumb.h?ref=922c57d1ba5cb53ba29bc303ab66e869065d540b", "patch": "@@ -1,30 +0,0 @@\n-#include \"ftest-support.h\"\n-\n-  /*Feature matrix layout:\n-    __ARM_ARCH\n-    __ARM_ARCH_ISA_ARM\n-    __ARM_ARCH_ISA_THUMB\n-    __ARM_ARCH_PROFILE\n-    __ARM_FEATURE_UNALIGNED\n-    __ARM_FEATURE_LDREX\n-    __ARM_FEATURE_CLZ\n-    __ARM_FEATURE_DSP\n-    __ARM_FEATURE_SIMD32\n-    __ARM_FEATURE_QBIT\n-    __ARM_FEATURE_SAT\n-  */\n-int feature_matrix[ARCH_COUNT][NUM_FEATURES] =\n-  {{4, 1, 0, 0,   0, 0,  0, 0, 0, 0, 0},  /* ARCH_V4.  */\n-   {4, 1, 1, 0,   0, 0,  0, 0, 0, 0, 0},  /* ARCH_V4T.  */\n-   {5, 1, 1, 0,   0, 0,  0, 0, 0, 0, 0},  /* ARCH_V5T.  */\n-   {5, 1, 1, 0,   0, 0,  0, 0, 0, 0, 0},  /* ARCH_V5TE.  */\n-   {6, 1, 1, 0,   1, 0,  0, 0, 0, 0, 0},  /* ARCH_V6.  */\n-   {6, 1, 1, 0,   1, 0,  0, 0, 0, 0, 0},  /* ARCH_V6K.  */\n-   {6, 1, 2, 0,   1, 0,  1, 1, 1, 1, 1},  /* ARCH_V6T2.  */\n-   {6, 1, 1, 0,   1, 0,  0, 0, 0, 0, 0},  /* ARCH_V6Z.  */\n-   {6, 0, 1, 'M', 0, 0,  0, 0, 0, 0, 0},  /* ARCH_V6M.  */\n-   {7, 1, 2, 'A', 1, 15, 1, 1, 1, 1, 1},  /* ARCH_V7A.  */\n-   {7, 1, 2, 'R', 1, 15, 1, 1, 1, 1, 1},  /* ARCH_V7R.  */\n-   {7, 0, 2, 'M', 1, 7,  1, 0, 0, 1, 1},  /* ARCH_V7M.  */\n-   {7, 0, 2, 'M', 1, 7,  1, 1, 1, 1, 1},  /* ARCH_V7EM.  */\n-   {8, 1, 2, 'A', 1, 15, 1, 1, 1, 1, 1}}; /* ARCH_V8A.  */"}, {"sha": "c56d2d58860081625422daf6eb88392017e31861", "filename": "gcc/testsuite/gcc.target/arm/ftest-support.h", "status": "modified", "additions": 143, "deletions": 71, "changes": 214, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-support.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-support.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fftest-support.h?ref=1f98b7b2e5fa1e0b3e281b5873bc6119bd4e4583", "patch": "@@ -1,84 +1,156 @@\n-#if 0\n-#define INTERNAL_DEBUG 1\n-#endif\n+/* For each of several ARM architecture features, check that relevant\n+   macros are defined or not, and that they have the expected values.  */\n \n-#ifdef INTERNAL_DEBUG\n-#include <stdio.h>\n+#ifdef NEED_ARM_ARCH\n+# ifdef __ARM_ARCH\n+#  if __ARM_ARCH != VALUE_ARM_ARCH\n+#   error __ARM_ARCH has unexpected value\n+#  endif\n+# else\n+#  error __ARM_ARCH is not defined but should be\n+# endif\n+#else\n+# ifdef __ARM_ARCH\n+#  error __ARM_ARCH is defined but should not be\n+# endif\n #endif\n \n-extern void abort (void);\n-\n-enum architecture {\n-  ARCH_V4 = 0,\n-  ARCH_V4T,\n-  ARCH_V5T,\n-  ARCH_V5TE,\n-  ARCH_V6,\n-  ARCH_V6K,\n-  ARCH_V6T2,\n-  ARCH_V6Z,\n-  ARCH_V6M,\n-  ARCH_V7A,\n-  ARCH_V7R,\n-  ARCH_V7M,\n-  ARCH_V7EM,\n-  ARCH_V8A,\n-  ARCH_COUNT\n-};\n-\n-#define NUM_FEATURES 11\n-int feature_matrix[ARCH_COUNT][NUM_FEATURES];\n-\n-int\n-ftest (int arch)\n-{\n-  int features[NUM_FEATURES] = {0};\n-  int y;\n-\n-  for (y = 0; y < NUM_FEATURES; ++y)\n-    features[y] = 0;\n-\n-#ifdef __ARM_ARCH\n-  features[0] = __ARM_ARCH;\n-#endif\n-#ifdef __ARM_ARCH_ISA_ARM\n-  features[1] = __ARM_ARCH_ISA_ARM;\n-#endif\n-#ifdef __ARM_ARCH_ISA_THUMB\n-  features[2] = __ARM_ARCH_ISA_THUMB;\n-#endif\n-#ifdef __ARM_ARCH_PROFILE\n-  features[3] = __ARM_ARCH_PROFILE;\n+#ifdef NEED_ARM_ARCH_ISA_ARM\n+# ifdef __ARM_ARCH_ISA_ARM\n+#  if __ARM_ARCH_ISA_ARM != VALUE_ARM_ARCH_ISA_ARM\n+#   error __ARM_ARCH_ISA_ARM has unexpected value\n+#  endif\n+# else\n+#  error __ARM_ARCH_ISA_ARM is not defined but should be\n+# endif\n+#else\n+# ifdef __ARM_ARCH_ISA_ARM\n+#  error __ARM_ARCH_ISA_ARM is defined but should not be\n+# endif\n #endif\n-#ifdef __ARM_FEATURE_UNALIGNED\n-  features[4] = __ARM_FEATURE_UNALIGNED;\n+\n+#ifdef NEED_ARM_ARCH_ISA_THUMB\n+# ifdef __ARM_ARCH_ISA_THUMB\n+#  if __ARM_ARCH_ISA_THUMB != VALUE_ARM_ARCH_ISA_THUMB\n+#   error __ARM_ARCH_ISA_THUMB has unexpected value\n+#  endif\n+# else\n+#  error __ARM_ARCH_ISA_THUMB is not defined but should be\n+# endif\n+#else\n+# ifdef __ARM_ARCH_ISA_THUMB\n+#  error __ARM_ARCH_ISA_THUMB is defined but should not be\n+# endif\n #endif\n-#ifdef __ARM_FEATURE_LDREX\n-  features[5] = __ARM_FEATURE_LDREX;\n+\n+#ifdef NEED_ARM_ARCH_PROFILE\n+# ifdef __ARM_ARCH_PROFILE\n+#  if __ARM_ARCH_PROFILE != VALUE_ARM_ARCH_PROFILE\n+#   error __ARM_ARCH_PROFILE has unexpected value\n+#  endif\n+# else\n+#  error __ARM_ARCH_PROFILE is not defined but should be\n+# endif\n+#else\n+# ifdef __ARM_ARCH_PROFILE\n+#  error __ARM_ARCH_PROFILE is defined but should not be\n+# endif\n #endif\n-#ifdef __ARM_FEATURE_CLZ\n-  features[6] = __ARM_FEATURE_CLZ;\n+\n+#ifdef NEED_ARM_FEATURE_UNALIGNED\n+# ifdef __ARM_FEATURE_UNALIGNED\n+#  if __ARM_FEATURE_UNALIGNED != VALUE_ARM_FEATURE_UNALIGNED\n+#   error __ARM_FEATURE_UNALIGNED has unexpected value\n+#  endif\n+# else\n+#  error __ARM_FEATURE_UNALIGNED is not defined but should be\n+# endif\n+#else\n+# ifdef __ARM_FEATURE_UNALIGNED\n+#  error __ARM_FEATURE_UNALIGNED is defined but should not be\n+# endif\n #endif\n-#ifdef __ARM_FEATURE_DSP\n-  features[7] = __ARM_FEATURE_DSP;\n+\n+#ifdef NEED_ARM_FEATURE_LDREX\n+# ifdef __ARM_FEATURE_LDREX\n+#  if __ARM_FEATURE_LDREX != VALUE_ARM_FEATURE_LDREX\n+#   error __ARM_FEATURE_LDREX has unexpected value\n+#  endif\n+# else\n+#  error __ARM_FEATURE_LDREX is not defined but should be\n+# endif\n+#else\n+# ifdef __ARM_FEATURE_LDREX\n+#  error __ARM_FEATURE_LDREX is defined but should not be\n+# endif\n #endif\n-#ifdef __ARM_FEATURE_SIMD32\n-  features[8] = __ARM_FEATURE_SIMD32;\n+\n+#ifdef NEED_ARM_FEATURE_CLZ\n+# ifdef __ARM_FEATURE_CLZ\n+#  if __ARM_FEATURE_CLZ != VALUE_ARM_FEATURE_CLZ\n+#   error __ARM_FEATURE_CLZ has unexpected value\n+#  endif\n+# else\n+#  error __ARM_FEATURE_CLZ is not defined but should be\n+# endif\n+#else\n+# ifdef __ARM_FEATURE_CLZ\n+#  error __ARM_FEATURE_CLZ is defined but should not be\n+# endif\n #endif\n-#ifdef __ARM_FEATURE_QBIT\n-  features[9] = __ARM_FEATURE_QBIT;\n+\n+#ifdef NEED_ARM_FEATURE_DSP\n+# ifdef __ARM_FEATURE_DSP\n+#  if __ARM_FEATURE_DSP != VALUE_ARM_FEATURE_DSP\n+#   error __ARM_FEATURE_DSP has unexpected value\n+#  endif\n+# else\n+#  error __ARM_FEATURE_DSP is not defined but should be\n+# endif\n+#else\n+# ifdef __ARM_FEATURE_DSP\n+#  error __ARM_FEATURE_DSP is defined but should not be\n+# endif\n #endif\n-#ifdef __ARM_FEATURE_SAT\n-  features[10] = __ARM_FEATURE_SAT;\n+\n+#ifdef NEED_ARM_FEATURE_SIMD32\n+# ifdef __ARM_FEATURE_SIMD32\n+#  if __ARM_FEATURE_SIMD32 != VALUE_ARM_FEATURE_SIMD32\n+#   error __ARM_FEATURE_SIMD32 has unexpected value\n+#  endif\n+# else\n+#  error __ARM_FEATURE_SIMD32 is not defined but should be\n+# endif\n+#else\n+# ifdef __ARM_FEATURE_SIMD32\n+#  error __ARM_FEATURE_SIMD32 is defined but should not be\n+# endif\n #endif\n-  for (y = 0; y < NUM_FEATURES; ++y)\n-    if (feature_matrix[arch][y] != features[y])\n-      {\n-#ifdef INTERNAL_DEBUG\n-\tprintf (\"%d, %d, %d, %d\\n\", arch, y, feature_matrix[arch][y], features[y]);\n+\n+#ifdef NEED_ARM_FEATURE_QBIT\n+# ifdef __ARM_FEATURE_QBIT\n+#  if __ARM_FEATURE_QBIT != VALUE_ARM_FEATURE_QBIT\n+#   error __ARM_FEATURE_QBIT has unexpected value\n+#  endif\n+# else\n+#  error __ARM_FEATURE_QBIT is not defined but should be\n+# endif\n+#else\n+# ifdef __ARM_FEATURE_QBIT\n+#  error __ARM_FEATURE_QBIT is defined but should not be\n+# endif\n #endif\n-        abort ();\n-      }\n-  return 0;\n-}\n \n+#ifdef NEED_ARM_FEATURE_SAT\n+# ifdef __ARM_FEATURE_SAT\n+#  if __ARM_FEATURE_SAT != VALUE_ARM_FEATURE_SAT\n+#   error __ARM_FEATURE_SAT has unexpected value\n+#  endif\n+# else\n+#  error __ARM_FEATURE_SAT is not defined but should be\n+# endif\n+#else\n+# ifdef __ARM_FEATURE_SAT\n+#  error __ARM_FEATURE_SAT is defined but should not be\n+# endif\n+#endif"}]}