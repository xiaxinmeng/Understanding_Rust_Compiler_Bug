{"sha": "472a7639ea594cc35f62d82b12b3fa7370a3c6a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDcyYTc2MzllYTU5NGNjMzVmNjJkODJiMTJiM2ZhNzM3MGEzYzZhNA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-12-04T23:08:22Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-12-04T23:08:22Z"}, "message": "Fix warnings in <bits/regex_compiler.tcc>\n\n\t* include/bits/regex_compiler.tcc: Use C-style comment to work around\n\tPR preprocessor/61638.\n\t(__INSERT_REGEX_MATCHER): Replace GNU extension with __VA_ARGS__.\n\nFrom-SVN: r255392", "tree": {"sha": "f184262caa3ce0de69ce48a988c049498cd6ae38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f184262caa3ce0de69ce48a988c049498cd6ae38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/472a7639ea594cc35f62d82b12b3fa7370a3c6a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/472a7639ea594cc35f62d82b12b3fa7370a3c6a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/472a7639ea594cc35f62d82b12b3fa7370a3c6a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/472a7639ea594cc35f62d82b12b3fa7370a3c6a4/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ed83a33c0a826cb190f60552d930c38a80ad46c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ed83a33c0a826cb190f60552d930c38a80ad46c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ed83a33c0a826cb190f60552d930c38a80ad46c"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "63a2dc71b438770c017b08cc003029e58271cf13", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/472a7639ea594cc35f62d82b12b3fa7370a3c6a4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/472a7639ea594cc35f62d82b12b3fa7370a3c6a4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=472a7639ea594cc35f62d82b12b3fa7370a3c6a4", "patch": "@@ -1,5 +1,9 @@\n 2017-12-04  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/regex_compiler.tcc: Use C-style comment to work around\n+\tPR preprocessor/61638.\n+\t(__INSERT_REGEX_MATCHER): Replace GNU extension with __VA_ARGS__.\n+\n \t* config/io/basic_file_stdio.h (__basic_file): Remove name of unused\n \tparameter.\n \t* include/bits/boost_concept_check.h: Add pragmas to disable"}, {"sha": "0c89800ea9426a6895afb2f740f7a8b9de815f6f", "filename": "libstdc++-v3/include/bits/regex_compiler.tcc", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/472a7639ea594cc35f62d82b12b3fa7370a3c6a4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/472a7639ea594cc35f62d82b12b3fa7370a3c6a4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.tcc?ref=472a7639ea594cc35f62d82b12b3fa7370a3c6a4", "patch": "@@ -30,8 +30,9 @@\n \n // FIXME make comments doxygen format.\n \n+/*\n // This compiler refers to \"Regular Expression Matching Can Be Simple And Fast\"\n-// (http://swtch.com/~rsc/regexp/regexp1.html\"),\n+// (http://swtch.com/~rsc/regexp/regexp1.html),\n // but doesn't strictly follow it.\n //\n // When compiling, states are *chained* instead of tree- or graph-constructed.\n@@ -51,7 +52,8 @@\n // article.\n //\n // That's why we introduced dummy node here ------ \"end_tag\" is a dummy node.\n-// All dummy node will be eliminated at the end of compiling process.\n+// All dummy nodes will be eliminated at the end of compilation.\n+*/\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n@@ -292,18 +294,18 @@ namespace __detail\n       return true;\n     }\n \n-#define __INSERT_REGEX_MATCHER(__func, args...)\\\n+#define __INSERT_REGEX_MATCHER(__func, ...)\\\n \tdo\\\n \t  if (!(_M_flags & regex_constants::icase))\\\n \t    if (!(_M_flags & regex_constants::collate))\\\n-\t      __func<false, false>(args);\\\n+\t      __func<false, false>(__VA_ARGS__);\\\n \t    else\\\n-\t      __func<false, true>(args);\\\n+\t      __func<false, true>(__VA_ARGS__);\\\n \t  else\\\n \t    if (!(_M_flags & regex_constants::collate))\\\n-\t      __func<true, false>(args);\\\n+\t      __func<true, false>(__VA_ARGS__);\\\n \t    else\\\n-\t      __func<true, true>(args);\\\n+\t      __func<true, true>(__VA_ARGS__);\\\n \twhile (false)\n \n   template<typename _TraitsT>"}]}