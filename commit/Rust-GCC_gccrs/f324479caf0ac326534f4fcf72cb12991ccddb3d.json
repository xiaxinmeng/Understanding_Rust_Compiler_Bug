{"sha": "f324479caf0ac326534f4fcf72cb12991ccddb3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMyNDQ3OWNhZjBhYzMyNjUzNGY0ZmNmNzJjYjEyOTkxY2NkZGIzZA==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-11-27T10:17:50Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-11-27T10:18:35Z"}, "message": "OpenACC: Fix integer-type issue with collapse/tile [PR97880]\n\ngcc/ChangeLog:\n\n\tPR c/97880\n\t* omp-expand.c (expand_oacc_collapse_init, expand_oacc_collapse_vars):\n\tUse now passed diff_type.\n\t(expand_oacc_for): Take largest type for diff_type, taking tiling\n\tand collapsing into account.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c/97880\n\t* gcc.dg/goacc/tile-1.c: New test.", "tree": {"sha": "76391476305d942b4f1567fc104fc233db0a3bb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76391476305d942b4f1567fc104fc233db0a3bb7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f324479caf0ac326534f4fcf72cb12991ccddb3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f324479caf0ac326534f4fcf72cb12991ccddb3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f324479caf0ac326534f4fcf72cb12991ccddb3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f324479caf0ac326534f4fcf72cb12991ccddb3d/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f29f3d5dd94c3f8eef10492a657a0719d4b3318", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f29f3d5dd94c3f8eef10492a657a0719d4b3318", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f29f3d5dd94c3f8eef10492a657a0719d4b3318"}], "stats": {"total": 38, "additions": 25, "deletions": 13}, "files": [{"sha": "4a6c44de4380b6d816fa075dce758d2dcd7d5135", "filename": "gcc/omp-expand.c", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f324479caf0ac326534f4fcf72cb12991ccddb3d/gcc%2Fomp-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f324479caf0ac326534f4fcf72cb12991ccddb3d/gcc%2Fomp-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-expand.c?ref=f324479caf0ac326534f4fcf72cb12991ccddb3d", "patch": "@@ -1510,8 +1510,8 @@ struct oacc_collapse\n static tree\n expand_oacc_collapse_init (const struct omp_for_data *fd,\n \t\t\t   gimple_stmt_iterator *gsi,\n-\t\t\t   oacc_collapse *counts, tree bound_type,\n-\t\t\t   location_t loc)\n+\t\t\t   oacc_collapse *counts, tree diff_type,\n+\t\t\t   tree bound_type, location_t loc)\n {\n   tree tiling = fd->tiling;\n   tree total = build_int_cst (bound_type, 1);\n@@ -1528,17 +1528,12 @@ expand_oacc_collapse_init (const struct omp_for_data *fd,\n       const omp_for_data_loop *loop = &fd->loops[ix];\n \n       tree iter_type = TREE_TYPE (loop->v);\n-      tree diff_type = iter_type;\n       tree plus_type = iter_type;\n \n       gcc_assert (loop->cond_code == fd->loop.cond_code);\n \n       if (POINTER_TYPE_P (iter_type))\n \tplus_type = sizetype;\n-      if (POINTER_TYPE_P (diff_type) || TYPE_UNSIGNED (diff_type))\n-\tdiff_type = signed_type_for (diff_type);\n-      if (TYPE_PRECISION (diff_type) < TYPE_PRECISION (integer_type_node))\n-\tdiff_type = integer_type_node;\n \n       if (tiling)\n \t{\n@@ -1626,7 +1621,8 @@ expand_oacc_collapse_init (const struct omp_for_data *fd,\n static void\n expand_oacc_collapse_vars (const struct omp_for_data *fd, bool inner,\n \t\t\t   gimple_stmt_iterator *gsi,\n-\t\t\t   const oacc_collapse *counts, tree ivar)\n+\t\t\t   const oacc_collapse *counts, tree ivar,\n+\t\t\t   tree diff_type)\n {\n   tree ivar_type = TREE_TYPE (ivar);\n \n@@ -1638,7 +1634,6 @@ expand_oacc_collapse_vars (const struct omp_for_data *fd, bool inner,\n       const oacc_collapse *collapse = &counts[ix];\n       tree v = inner ? loop->v : collapse->outer;\n       tree iter_type = TREE_TYPE (v);\n-      tree diff_type = TREE_TYPE (collapse->step);\n       tree plus_type = iter_type;\n       enum tree_code plus_code = PLUS_EXPR;\n       tree expr;\n@@ -1660,7 +1655,7 @@ expand_oacc_collapse_vars (const struct omp_for_data *fd, bool inner,\n \t}\n \n       expr = fold_build2 (MULT_EXPR, diff_type, fold_convert (diff_type, expr),\n-\t\t\t  collapse->step);\n+\t\t\t  fold_convert (diff_type, collapse->step));\n       expr = fold_build2 (plus_code, iter_type,\n \t\t\t  inner ? collapse->outer : collapse->base,\n \t\t\t  fold_convert (plus_type, expr));\n@@ -7449,6 +7444,12 @@ expand_oacc_for (struct omp_region *region, struct omp_for_data *fd)\n       plus_code = POINTER_PLUS_EXPR;\n       plus_type = sizetype;\n     }\n+  for (int ix = fd->collapse; ix--;)\n+    {\n+      tree diff_type2 = TREE_TYPE (fd->loops[ix].step);\n+      if (TYPE_PRECISION (diff_type) < TYPE_PRECISION (diff_type2))\n+\tdiff_type = diff_type2;\n+    }\n   if (POINTER_TYPE_P (diff_type) || TYPE_UNSIGNED (diff_type))\n     diff_type = signed_type_for (diff_type);\n   if (TYPE_PRECISION (diff_type) < TYPE_PRECISION (integer_type_node))\n@@ -7532,7 +7533,7 @@ expand_oacc_for (struct omp_region *region, struct omp_for_data *fd)\n     {\n       gcc_assert (!gimple_in_ssa_p (cfun) && up);\n       counts = XALLOCAVEC (struct oacc_collapse, fd->collapse);\n-      tree total = expand_oacc_collapse_init (fd, &gsi, counts,\n+      tree total = expand_oacc_collapse_init (fd, &gsi, counts, diff_type,\n \t\t\t\t\t      TREE_TYPE (fd->loop.n2), loc);\n \n       if (SSA_VAR_P (fd->loop.n2))\n@@ -7694,7 +7695,7 @@ expand_oacc_for (struct omp_region *region, struct omp_for_data *fd)\n       gsi_insert_before (&gsi, ass, GSI_SAME_STMT);\n \n       if (fd->collapse > 1 || fd->tiling)\n-\texpand_oacc_collapse_vars (fd, false, &gsi, counts, v);\n+\texpand_oacc_collapse_vars (fd, false, &gsi, counts, v, diff_type);\n \n       if (fd->tiling)\n \t{\n@@ -7764,7 +7765,8 @@ expand_oacc_for (struct omp_region *region, struct omp_for_data *fd)\n \n \t  /* Initialize the user's loop vars.  */\n \t  gsi = gsi_start_bb (elem_body_bb);\n-\t  expand_oacc_collapse_vars (fd, true, &gsi, counts, e_offset);\n+\t  expand_oacc_collapse_vars (fd, true, &gsi, counts, e_offset,\n+\t\t\t\t     diff_type);\n \t}\n     }\n "}, {"sha": "6898397ad5eed10201c3ffd73299181789c61351", "filename": "gcc/testsuite/gcc.dg/goacc/tile-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f324479caf0ac326534f4fcf72cb12991ccddb3d/gcc%2Ftestsuite%2Fgcc.dg%2Fgoacc%2Ftile-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f324479caf0ac326534f4fcf72cb12991ccddb3d/gcc%2Ftestsuite%2Fgcc.dg%2Fgoacc%2Ftile-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgoacc%2Ftile-1.c?ref=f324479caf0ac326534f4fcf72cb12991ccddb3d", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+\n+/* PR c/97880 */\n+\n+void f ()\n+{\n+  #pragma acc parallel loop tile(2, 3)\n+  for (int i = 0; i < 8; i++)\n+    for (long j = 0; j < 8; j++);\n+}"}]}