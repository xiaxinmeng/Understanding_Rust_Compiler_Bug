{"sha": "3d876aba229fdb4807f272e10fb0e91505c2fc36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q4NzZhYmEyMjlmZGI0ODA3ZjI3MmUxMGZiMGU5MTUwNWMyZmMzNg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-01-09T09:11:53Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-01-09T09:11:53Z"}, "message": "[multiple changes]\n\n2010-01-09  Tobias Burnus  <burnus@net-b.de>                                      \n\n        PR fortran/41298\n        * trans-expr.c (gfc_trans_structure_assign): Handle\n        c_null_(fun)ptr.\n        * symbol.c (gen_special_c_interop_ptr): Add NULL_EXPR\n        to the constructor for c_null_(fun)ptr.\n        * resolve.c (resolve_structure_cons): Add special case\n        for c_null_(fun)ptr.\n\n2010-01-09  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/41298\n        * gfortran.dg/c_ptr_tests_14.f90: New test.\n\nFrom-SVN: r155755", "tree": {"sha": "223d57c9d520148b8c3c0991db8b128b0bbbd1a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/223d57c9d520148b8c3c0991db8b128b0bbbd1a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d876aba229fdb4807f272e10fb0e91505c2fc36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d876aba229fdb4807f272e10fb0e91505c2fc36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d876aba229fdb4807f272e10fb0e91505c2fc36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d876aba229fdb4807f272e10fb0e91505c2fc36/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b592ab357dd794ea04f33e9431ad7d7e69c1d11"}], "stats": {"total": 102, "additions": 94, "deletions": 8}, "files": [{"sha": "321a407fa3401198a3ade8dab867c9e25bc5f2d1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d876aba229fdb4807f272e10fb0e91505c2fc36/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d876aba229fdb4807f272e10fb0e91505c2fc36/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3d876aba229fdb4807f272e10fb0e91505c2fc36", "patch": "@@ -1,3 +1,13 @@\n+2010-01-09  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/41298\n+\t* trans-expr.c (gfc_trans_structure_assign): Handle\n+\tc_null_(fun)ptr.\n+\t* symbol.c (gen_special_c_interop_ptr): Add NULL_EXPR\n+\tto the constructor for c_null_(fun)ptr.\n+\t* resolve.c (resolve_structure_cons): Add special case\n+\tfor c_null_(fun)ptr.\n+\n 2010-01-09  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gfortranspec.c (lang_specific_driver): Update copyright notice"}, {"sha": "8e8de8d5923ca418386e8b56438b6370c88749cd", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d876aba229fdb4807f272e10fb0e91505c2fc36/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d876aba229fdb4807f272e10fb0e91505c2fc36/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=3d876aba229fdb4807f272e10fb0e91505c2fc36", "patch": "@@ -1,5 +1,5 @@\n /* Perform type resolution on the various structures.\n-   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n \n@@ -842,13 +842,20 @@ resolve_structure_cons (gfc_expr *expr)\n   /* See if the user is trying to invoke a structure constructor for one of\n      the iso_c_binding derived types.  */\n   if (expr->ts.type == BT_DERIVED && expr->ts.u.derived\n-      && expr->ts.u.derived->ts.is_iso_c && cons && cons->expr != NULL)\n+      && expr->ts.u.derived->ts.is_iso_c && cons\n+      && (cons->expr == NULL || cons->expr->expr_type != EXPR_NULL))\n     {\n       gfc_error (\"Components of structure constructor '%s' at %L are PRIVATE\",\n \t\t expr->ts.u.derived->name, &(expr->where));\n       return FAILURE;\n     }\n \n+  /* Return if structure constructor is c_null_(fun)prt.  */\n+  if (expr->ts.type == BT_DERIVED && expr->ts.u.derived\n+      && expr->ts.u.derived->ts.is_iso_c && cons\n+      && cons->expr && cons->expr->expr_type == EXPR_NULL)\n+    return SUCCESS;\n+\n   for (; comp; comp = comp->next, cons = cons->next)\n     {\n       int rank;"}, {"sha": "a5787de04abe095b5acf143feefde706b2150f14", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d876aba229fdb4807f272e10fb0e91505c2fc36/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d876aba229fdb4807f272e10fb0e91505c2fc36/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=3d876aba229fdb4807f272e10fb0e91505c2fc36", "patch": "@@ -1,6 +1,6 @@\n /* Maintain binary trees of symbols.\n-   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n-   Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,\n+   2009, 2010 Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n \n This file is part of GCC.\n@@ -3690,10 +3690,10 @@ gen_special_c_interop_ptr (int ptr_id, const char *ptr_name,\n   tmp_sym->value->expr_type = EXPR_STRUCTURE;\n   tmp_sym->value->ts.type = BT_DERIVED;\n   tmp_sym->value->ts.u.derived = tmp_sym->ts.u.derived;\n-  /* Create a constructor with no expr, that way we can recognize if the user\n-     tries to call the structure constructor for one of the iso_c_binding\n-     derived types during resolution (resolve_structure_cons).  */\n   tmp_sym->value->value.constructor = gfc_get_constructor ();\n+  tmp_sym->value->value.constructor->expr = gfc_get_expr ();\n+  tmp_sym->value->value.constructor->expr->expr_type = EXPR_NULL;\n+  tmp_sym->value->value.constructor->expr->ts.is_iso_c = 1;\n   /* Must declare c_null_ptr and c_null_funptr as having the\n      PARAMETER attribute so they can be used in init expressions.  */\n   tmp_sym->attr.flavor = FL_PARAMETER;"}, {"sha": "5ce5dcec4c59bff74f68ce77906b1ab4ab76dd79", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d876aba229fdb4807f272e10fb0e91505c2fc36/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d876aba229fdb4807f272e10fb0e91505c2fc36/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=3d876aba229fdb4807f272e10fb0e91505c2fc36", "patch": "@@ -1,5 +1,5 @@\n /* Expression translation\n-   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Paul Brook <paul@nowt.org>\n    and Steven Bosscher <s.bosscher@student.tudelft.nl>\n@@ -4214,6 +4214,19 @@ gfc_trans_structure_assign (tree dest, gfc_expr * expr)\n       if (!c->expr)\n \tcontinue;\n \n+      /* Handle c_null_(fun)ptr.  */\n+      if (c && c->expr && c->expr->ts.is_iso_c)\n+\t{\n+\t  field = cm->backend_decl;\n+\t  tmp = fold_build3 (COMPONENT_REF, TREE_TYPE (field),\n+\t\t\t     dest, field, NULL_TREE);\n+\t  tmp = fold_build2 (MODIFY_EXPR, TREE_TYPE (tmp), tmp,\n+\t\t\t     fold_convert (TREE_TYPE (tmp),\n+\t\t\t\t\t   null_pointer_node));\n+\t  gfc_add_expr_to_block (&block, tmp);\n+\t  continue;\n+\t}\n+\n       field = cm->backend_decl;\n       tmp = fold_build3 (COMPONENT_REF, TREE_TYPE (field),\n \t\t\t dest, field, NULL_TREE);"}, {"sha": "fc9ee831db69099c4286537219e7f721009118bc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d876aba229fdb4807f272e10fb0e91505c2fc36/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d876aba229fdb4807f272e10fb0e91505c2fc36/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3d876aba229fdb4807f272e10fb0e91505c2fc36", "patch": "@@ -1,3 +1,8 @@\n+2010-01-09  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/41298\n+\t* gfortran.dg/c_ptr_tests_14.f90: New test.\n+\n 2010-01-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR ada/41929"}, {"sha": "c4101fb030e69c8bfb7484893b922bbf85de8e62", "filename": "gcc/testsuite/gfortran.dg/c_ptr_tests_14.f90", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d876aba229fdb4807f272e10fb0e91505c2fc36/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_ptr_tests_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d876aba229fdb4807f272e10fb0e91505c2fc36/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_ptr_tests_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_ptr_tests_14.f90?ref=3d876aba229fdb4807f272e10fb0e91505c2fc36", "patch": "@@ -0,0 +1,51 @@\n+! { dg-do run }\n+! { dg-options \"-fdump-tree-original\" }\n+!\n+! PR fortran/41298\n+!\n+! Check that c_null_ptr default initializer is really applied\n+\n+module m\n+  use iso_c_binding\n+  type, public :: fgsl_file\n+     type(c_ptr)    :: gsl_file = c_null_ptr\n+     type(c_funptr) :: gsl_func = c_null_funptr\n+     type(c_ptr)    :: NIptr\n+     type(c_funptr) :: NIfunptr\n+  end type fgsl_file\n+contains\n+  subroutine sub(aaa,bbb)\n+    type(fgsl_file), intent(out)   :: aaa\n+    type(fgsl_file), intent(inout) :: bbb\n+  end subroutine\n+  subroutine proc() bind(C)\n+  end subroutine proc\n+end module m\n+\n+program test\n+  use m\n+  implicit none\n+  type(fgsl_file) :: file, noreinit\n+  integer, target :: tgt\n+\n+  call sub(file, noreinit)\n+  if(c_associated(file%gsl_file)) call abort()\n+  if(c_associated(file%gsl_func)) call abort()\n+\n+  file%gsl_file = c_loc(tgt)\n+  file%gsl_func = c_funloc(proc)\n+  call sub(file, noreinit)\n+  if(c_associated(file%gsl_file)) call abort()\n+  if(c_associated(file%gsl_func)) call abort()\n+end program test\n+\n+! { dg-final { scan-tree-dump-times \"gsl_file = 0B\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"gsl_func = 0B\" 1 \"original\" } }\n+\n+! { dg-final { scan-tree-dump-times \"NIptr = 0B\"    0 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"NIfunptr = 0B\" 0 \"original\" } }\n+\n+! { dg-final { scan-tree-dump-times \"bbb =\" 0 \"original\" } }\n+\n+! { dg-final { cleanup-tree-dump \"original\" } }\n+! { dg-final { cleanup-modules \"m\" } }"}]}