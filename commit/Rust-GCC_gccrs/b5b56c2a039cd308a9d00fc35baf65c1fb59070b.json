{"sha": "b5b56c2a039cd308a9d00fc35baf65c1fb59070b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjViNTZjMmEwMzljZDMwOGE5ZDAwZmMzNWJhZjY1YzFmYjU5MDcwYg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2018-07-31T14:26:18Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-07-31T14:26:18Z"}, "message": "[41/46] Add vec_info::remove_stmt\n\nThis patch adds a new helper function for permanently removing a\nstatement and its associated stmt_vec_info.\n\n2018-07-31  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* tree-vectorizer.h (vec_info::remove_stmt): Declare.\n\t* tree-vectorizer.c (vec_info::remove_stmt): New function.\n\t* tree-vect-loop-manip.c (vect_set_loop_condition): Use it.\n\t* tree-vect-loop.c (vect_transform_loop): Likewise.\n\t* tree-vect-slp.c (vect_schedule_slp): Likewise.\n\t* tree-vect-stmts.c (vect_remove_stores): Likewise.\n\nFrom-SVN: r263156", "tree": {"sha": "c5d6d08e6e4b53af6d0690bfd84301ec152bd335", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5d6d08e6e4b53af6d0690bfd84301ec152bd335"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5b56c2a039cd308a9d00fc35baf65c1fb59070b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5b56c2a039cd308a9d00fc35baf65c1fb59070b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5b56c2a039cd308a9d00fc35baf65c1fb59070b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5b56c2a039cd308a9d00fc35baf65c1fb59070b/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f5ae28565e7b0788c6b7a4945c2b67c54f46c45a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5ae28565e7b0788c6b7a4945c2b67c54f46c45a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5ae28565e7b0788c6b7a4945c2b67c54f46c45a"}], "stats": {"total": 71, "additions": 40, "deletions": 31}, "files": [{"sha": "396898e1ffb34aab4481c2d96f5d6182786ef77b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b56c2a039cd308a9d00fc35baf65c1fb59070b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b56c2a039cd308a9d00fc35baf65c1fb59070b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5b56c2a039cd308a9d00fc35baf65c1fb59070b", "patch": "@@ -1,3 +1,12 @@\n+2018-07-31  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vectorizer.h (vec_info::remove_stmt): Declare.\n+\t* tree-vectorizer.c (vec_info::remove_stmt): New function.\n+\t* tree-vect-loop-manip.c (vect_set_loop_condition): Use it.\n+\t* tree-vect-loop.c (vect_transform_loop): Likewise.\n+\t* tree-vect-slp.c (vect_schedule_slp): Likewise.\n+\t* tree-vect-stmts.c (vect_remove_stores): Likewise.\n+\n 2018-07-31  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-vectorizer.h (vec_info::lookup_dr): New member function."}, {"sha": "dd7463a9c242d3d0bd0ef6ebb722f5ea6715143e", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b56c2a039cd308a9d00fc35baf65c1fb59070b/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b56c2a039cd308a9d00fc35baf65c1fb59070b/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=b5b56c2a039cd308a9d00fc35baf65c1fb59070b", "patch": "@@ -935,8 +935,12 @@ vect_set_loop_condition (struct loop *loop, loop_vec_info loop_vinfo,\n \t\t\t\t\t\t  loop_cond_gsi);\n \n   /* Remove old loop exit test.  */\n-  gsi_remove (&loop_cond_gsi, true);\n-  free_stmt_vec_info (orig_cond);\n+  stmt_vec_info orig_cond_info;\n+  if (loop_vinfo\n+      && (orig_cond_info = loop_vinfo->lookup_stmt (orig_cond)))\n+    loop_vinfo->remove_stmt (orig_cond_info);\n+  else\n+    gsi_remove (&loop_cond_gsi, true);\n \n   if (dump_enabled_p ())\n     {"}, {"sha": "6a00695d7ee40c3397dcb0f793c35276d388af14", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 7, "deletions": 17, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b56c2a039cd308a9d00fc35baf65c1fb59070b/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b56c2a039cd308a9d00fc35baf65c1fb59070b/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=b5b56c2a039cd308a9d00fc35baf65c1fb59070b", "patch": "@@ -8487,28 +8487,18 @@ vect_transform_loop (loop_vec_info loop_vinfo)\n \t\t  vect_transform_loop_stmt (loop_vinfo, stmt_info, &si,\n \t\t\t\t\t    &seen_store, &slp_scheduled);\n \t\t}\n+\t      gsi_next (&si);\n \t      if (seen_store)\n \t\t{\n \t\t  if (STMT_VINFO_GROUPED_ACCESS (seen_store))\n-\t\t    {\n-\t\t      /* Interleaving.  If IS_STORE is TRUE, the\n-\t\t\t vectorization of the interleaving chain was\n-\t\t\t completed - free all the stores in the chain.  */\n-\t\t      gsi_next (&si);\n-\t\t      vect_remove_stores (DR_GROUP_FIRST_ELEMENT (seen_store));\n-\t\t    }\n+\t\t    /* Interleaving.  If IS_STORE is TRUE, the\n+\t\t       vectorization of the interleaving chain was\n+\t\t       completed - free all the stores in the chain.  */\n+\t\t    vect_remove_stores (DR_GROUP_FIRST_ELEMENT (seen_store));\n \t\t  else\n-\t\t    {\n-\t\t      /* Free the attached stmt_vec_info and remove the\n-\t\t\t stmt.  */\n-\t\t      free_stmt_vec_info (stmt);\n-\t\t      unlink_stmt_vdef (stmt);\n-\t\t      gsi_remove (&si, true);\n-\t\t      release_defs (stmt);\n-\t\t    }\n+\t\t    /* Free the attached stmt_vec_info and remove the stmt.  */\n+\t\t    loop_vinfo->remove_stmt (stmt_info);\n \t\t}\n-\t      else\n-\t\tgsi_next (&si);\n \t    }\n \t}\n "}, {"sha": "fe123bf7b8341397998461680a720ef84595398d", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b56c2a039cd308a9d00fc35baf65c1fb59070b/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b56c2a039cd308a9d00fc35baf65c1fb59070b/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=b5b56c2a039cd308a9d00fc35baf65c1fb59070b", "patch": "@@ -4088,7 +4088,6 @@ vect_schedule_slp (vec_info *vinfo)\n       slp_tree root = SLP_INSTANCE_TREE (instance);\n       stmt_vec_info store_info;\n       unsigned int j;\n-      gimple_stmt_iterator gsi;\n \n       /* Remove scalar call stmts.  Do not do this for basic-block\n \t vectorization as not all uses may be vectorized.\n@@ -4109,11 +4108,7 @@ vect_schedule_slp (vec_info *vinfo)\n \t  if (is_pattern_stmt_p (store_info))\n \t    store_info = STMT_VINFO_RELATED_STMT (store_info);\n \t  /* Free the attached stmt_vec_info and remove the stmt.  */\n-\t  gsi = gsi_for_stmt (store_info);\n-\t  unlink_stmt_vdef (store_info);\n-\t  gsi_remove (&gsi, true);\n-\t  release_defs (store_info);\n-\t  free_stmt_vec_info (store_info);\n+\t  vinfo->remove_stmt (store_info);\n         }\n     }\n "}, {"sha": "1bf9dd8116f63b15e06495fcd42eb885b104bc00", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b56c2a039cd308a9d00fc35baf65c1fb59070b/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b56c2a039cd308a9d00fc35baf65c1fb59070b/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=b5b56c2a039cd308a9d00fc35baf65c1fb59070b", "patch": "@@ -9845,20 +9845,16 @@ vect_transform_stmt (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n void\n vect_remove_stores (stmt_vec_info first_stmt_info)\n {\n+  vec_info *vinfo = first_stmt_info->vinfo;\n   stmt_vec_info next_stmt_info = first_stmt_info;\n-  gimple_stmt_iterator next_si;\n \n   while (next_stmt_info)\n     {\n       stmt_vec_info tmp = DR_GROUP_NEXT_ELEMENT (next_stmt_info);\n       if (is_pattern_stmt_p (next_stmt_info))\n \tnext_stmt_info = STMT_VINFO_RELATED_STMT (next_stmt_info);\n       /* Free the attached stmt_vec_info and remove the stmt.  */\n-      next_si = gsi_for_stmt (next_stmt_info->stmt);\n-      unlink_stmt_vdef (next_stmt_info->stmt);\n-      gsi_remove (&next_si, true);\n-      release_defs (next_stmt_info->stmt);\n-      free_stmt_vec_info (next_stmt_info);\n+      vinfo->remove_stmt (next_stmt_info);\n       next_stmt_info = tmp;\n     }\n }"}, {"sha": "abdc6cd9a763668fe8981b60a58214f58fe5ddef", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b56c2a039cd308a9d00fc35baf65c1fb59070b/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b56c2a039cd308a9d00fc35baf65c1fb59070b/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=b5b56c2a039cd308a9d00fc35baf65c1fb59070b", "patch": "@@ -588,6 +588,20 @@ vec_info::move_dr (stmt_vec_info new_stmt_info, stmt_vec_info old_stmt_info)\n     = STMT_VINFO_GATHER_SCATTER_P (old_stmt_info);\n }\n \n+/* Permanently remove the statement described by STMT_INFO from the\n+   function.  */\n+\n+void\n+vec_info::remove_stmt (stmt_vec_info stmt_info)\n+{\n+  gcc_assert (!stmt_info->pattern_stmt_p);\n+  gimple_stmt_iterator si = gsi_for_stmt (stmt_info->stmt);\n+  unlink_stmt_vdef (stmt_info->stmt);\n+  gsi_remove (&si, true);\n+  release_defs (stmt_info->stmt);\n+  free_stmt_vec_info (stmt_info);\n+}\n+\n /* A helper function to free scev and LOOP niter information, as well as\n    clear loop constraint LOOP_C_FINITE.  */\n "}, {"sha": "8aa485eb9175247fb6c2641b059b9bef5b5993d7", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b56c2a039cd308a9d00fc35baf65c1fb59070b/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b56c2a039cd308a9d00fc35baf65c1fb59070b/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=b5b56c2a039cd308a9d00fc35baf65c1fb59070b", "patch": "@@ -242,6 +242,7 @@ struct vec_info {\n   stmt_vec_info lookup_single_use (tree);\n   struct dr_vec_info *lookup_dr (data_reference *);\n   void move_dr (stmt_vec_info, stmt_vec_info);\n+  void remove_stmt (stmt_vec_info);\n \n   /* The type of vectorization.  */\n   vec_kind kind;"}]}