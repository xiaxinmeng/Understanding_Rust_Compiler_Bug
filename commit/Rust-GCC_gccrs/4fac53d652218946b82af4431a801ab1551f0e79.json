{"sha": "4fac53d652218946b82af4431a801ab1551f0e79", "node_id": "C_kwDOANBUbNoAKDRmYWM1M2Q2NTIyMTg5NDZiODJhZjQ0MzFhODAxYWIxNTUxZjBlNzk", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-09-20T20:08:14Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-09-20T20:08:14Z"}, "message": "c++: modules and non-dependent auto deduction\n\nThe modules streaming code seems to rely on the invariant that a\nTEMPLATE_DECL and its DECL_TEMPLATE_RESULT have the same TREE_TYPE.\nBut for a non-dependent VAR_DECL with deduced type, the two TREE_TYPEs\nend up diverging: cp_finish_decl deduces the type of the initializer\nahead of time and updates the TREE_TYPE of the VAR_DECL, but neglects to\nupdate the corresponding TEMPLATE_DECL as well, which leads to a\n\"conflicting global module declaration\" error for each of the\n__phase_alignment decls in the below testcase (and for the xtreme-header\ntests if we try including <barrier>).\n\nThis patch makes cp_finish_decl update the TREE_TYPE of the corresponding\nTEMPLATE_DECL so that the invariant is maintained.\n\ngcc/cp/ChangeLog:\n\n\t* decl.cc (cp_finish_decl): After updating the deduced type of a\n\tVAR_DECL, also update the corresponding TEMPLATE_DECL if there\n\tis one.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/modules/auto-3.h: New test.\n\t* g++.dg/modules/auto-3_a.H: New test.\n\t* g++.dg/modules/auto-3_b.C: New test.", "tree": {"sha": "e1a50a80839153e7b0c8c62ee9112c698f5a64f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1a50a80839153e7b0c8c62ee9112c698f5a64f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fac53d652218946b82af4431a801ab1551f0e79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fac53d652218946b82af4431a801ab1551f0e79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fac53d652218946b82af4431a801ab1551f0e79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fac53d652218946b82af4431a801ab1551f0e79/comments", "author": null, "committer": null, "parents": [{"sha": "be60aa5b608b5f09fadfeff852a46589ac311a42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be60aa5b608b5f09fadfeff852a46589ac311a42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be60aa5b608b5f09fadfeff852a46589ac311a42"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "80467c192546feed0c44672b8448f14921f9b195", "filename": "gcc/cp/decl.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fac53d652218946b82af4431a801ab1551f0e79/gcc%2Fcp%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fac53d652218946b82af4431a801ab1551f0e79/gcc%2Fcp%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.cc?ref=4fac53d652218946b82af4431a801ab1551f0e79", "patch": "@@ -8180,6 +8180,12 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n \t  return;\n \t}\n       cp_apply_type_quals_to_decl (cp_type_quals (type), decl);\n+\n+      /* Update the type of the corresponding TEMPLATE_DECL to match.  */\n+      if (DECL_LANG_SPECIFIC (decl)\n+\t  && DECL_TEMPLATE_INFO (decl)\n+\t  && DECL_TEMPLATE_RESULT (DECL_TI_TEMPLATE (decl)) == decl)\n+\tTREE_TYPE (DECL_TI_TEMPLATE (decl)) = type;\n     }\n \n   if (ensure_literal_type_for_constexpr_object (decl) == error_mark_node)"}, {"sha": "f129433cbcb59aed99a3aa025fffc5520497b92d", "filename": "gcc/testsuite/g++.dg/modules/auto-3.h", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fac53d652218946b82af4431a801ab1551f0e79/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fac53d652218946b82af4431a801ab1551f0e79/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-3.h?ref=4fac53d652218946b82af4431a801ab1551f0e79", "patch": "@@ -0,0 +1,10 @@\n+template<class>\n+struct __tree_barrier {\n+  static const auto __phase_alignment_1 = 0;\n+\n+  template<class>\n+  static const auto __phase_alignment_2 = 0;\n+};\n+\n+template<class>\n+inline auto __phase_alignment_3 = 0;"}, {"sha": "25a7a73e73e1e2a04113e0d33273f8c0fac2dfba", "filename": "gcc/testsuite/g++.dg/modules/auto-3_a.H", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fac53d652218946b82af4431a801ab1551f0e79/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-3_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fac53d652218946b82af4431a801ab1551f0e79/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-3_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-3_a.H?ref=4fac53d652218946b82af4431a801ab1551f0e79", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-fmodule-header\" }\n+// { dg-module-cmi {} }\n+\n+#include \"auto-3.h\""}, {"sha": "03b6d46f47611787bd2d7f8273e4536a86341bb6", "filename": "gcc/testsuite/g++.dg/modules/auto-3_b.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fac53d652218946b82af4431a801ab1551f0e79/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-3_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fac53d652218946b82af4431a801ab1551f0e79/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-3_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-3_b.C?ref=4fac53d652218946b82af4431a801ab1551f0e79", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-fmodules-ts -fno-module-lazy\" }\n+\n+#include \"auto-3.h\"\n+import \"auto-3_a.H\";"}]}