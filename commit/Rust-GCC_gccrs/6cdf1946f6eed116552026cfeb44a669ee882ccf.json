{"sha": "6cdf1946f6eed116552026cfeb44a669ee882ccf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNkZjE5NDZmNmVlZDExNjU1MjAyNmNmZWI0NGE2NjllZTg4MmNjZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-01-10T10:56:56Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-01-10T10:56:56Z"}, "message": "re PR tree-optimization/88775 (Optimize std::string assignment)\n\n\tPR tree-optimization/88775\n\t* include/bits/stl_function.h (greater<_Tp*>::operator(),\n\tless<_Tp*>::operator(), greater_equal<_Tp*>::operator(),\n\tless_equal<_Tp*>::operator()): Use __builtin_is_constant_evaluated\n\tinstead of __builtin_constant_p if available.  Don't bother with\n\tthe pointer comparison in C++11 and earlier.\n\nFrom-SVN: r267800", "tree": {"sha": "9e0df4647c48c61b0be61e9fa0ab0c1f4ded7f28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e0df4647c48c61b0be61e9fa0ab0c1f4ded7f28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cdf1946f6eed116552026cfeb44a669ee882ccf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cdf1946f6eed116552026cfeb44a669ee882ccf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cdf1946f6eed116552026cfeb44a669ee882ccf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cdf1946f6eed116552026cfeb44a669ee882ccf/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dbf02a2cd6652a1e95cce0ea5035ac394c023a00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbf02a2cd6652a1e95cce0ea5035ac394c023a00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbf02a2cd6652a1e95cce0ea5035ac394c023a00"}], "stats": {"total": 41, "additions": 37, "deletions": 4}, "files": [{"sha": "4e248d46f182dacc4e33bf1e892ca8a50198cdf2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cdf1946f6eed116552026cfeb44a669ee882ccf/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cdf1946f6eed116552026cfeb44a669ee882ccf/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6cdf1946f6eed116552026cfeb44a669ee882ccf", "patch": "@@ -1,3 +1,12 @@\n+2019-01-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/88775\n+\t* include/bits/stl_function.h (greater<_Tp*>::operator(),\n+\tless<_Tp*>::operator(), greater_equal<_Tp*>::operator(),\n+\tless_equal<_Tp*>::operator()): Use __builtin_is_constant_evaluated\n+\tinstead of __builtin_constant_p if available.  Don't bother with\n+\tthe pointer comparison in C++11 and earlier.\n+\n 2019-01-09  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tPR other/16615"}, {"sha": "358b9aa5e720426c43c1564220b0a781cc8fcef6", "filename": "libstdc++-v3/include/bits/stl_function.h", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cdf1946f6eed116552026cfeb44a669ee882ccf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_function.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cdf1946f6eed116552026cfeb44a669ee882ccf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_function.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_function.h?ref=6cdf1946f6eed116552026cfeb44a669ee882ccf", "patch": "@@ -413,8 +413,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _GLIBCXX14_CONSTEXPR bool\n       operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW\n       {\n-\tif (__builtin_constant_p (__x > __y))\n+#if __cplusplus >= 201402L\n+#ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED\n+\tif (__builtin_is_constant_evaluated())\n+#else\n+\tif (__builtin_constant_p(__x > __y))\n+#endif\n \t  return __x > __y;\n+#endif\n \treturn (__UINTPTR_TYPE__)__x > (__UINTPTR_TYPE__)__y;\n       }\n     };\n@@ -426,8 +432,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _GLIBCXX14_CONSTEXPR bool\n       operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW\n       {\n-\tif (__builtin_constant_p (__x < __y))\n+#if __cplusplus >= 201402L\n+#ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED\n+\tif (__builtin_is_constant_evaluated())\n+#else\n+\tif (__builtin_constant_p(__x < __y))\n+#endif\n \t  return __x < __y;\n+#endif\n \treturn (__UINTPTR_TYPE__)__x < (__UINTPTR_TYPE__)__y;\n       }\n     };\n@@ -439,8 +451,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _GLIBCXX14_CONSTEXPR bool\n       operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW\n       {\n-\tif (__builtin_constant_p (__x >= __y))\n+#if __cplusplus >= 201402L\n+#ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED\n+\tif (__builtin_is_constant_evaluated())\n+#else\n+\tif (__builtin_constant_p(__x >= __y))\n+#endif\n \t  return __x >= __y;\n+#endif\n \treturn (__UINTPTR_TYPE__)__x >= (__UINTPTR_TYPE__)__y;\n       }\n     };\n@@ -452,8 +470,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _GLIBCXX14_CONSTEXPR bool\n       operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW\n       {\n-\tif (__builtin_constant_p (__x <= __y))\n+#if __cplusplus >= 201402L\n+#ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED\n+\tif (__builtin_is_constant_evaluated())\n+#else\n+\tif (__builtin_constant_p(__x <= __y))\n+#endif\n \t  return __x <= __y;\n+#endif\n \treturn (__UINTPTR_TYPE__)__x <= (__UINTPTR_TYPE__)__y;\n       }\n     };"}]}