{"sha": "e1efef1ef15487a5a4056234db644557ba61cec6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFlZmVmMWVmMTU0ODdhNWE0MDU2MjM0ZGI2NDQ1NTdiYTYxY2VjNg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2006-10-30T18:18:03Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2006-10-30T18:18:03Z"}, "message": "mips.md (mul<mode>3): Split into...\n\ngcc/\n\t* config/mips/mips.md (mul<mode>3): Split into...\n\t(mulsi3, muldi3): ...these separate patterns.\n\nFrom-SVN: r118190", "tree": {"sha": "8c5890a6b08a48d47660460d890cce4626f40046", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c5890a6b08a48d47660460d890cce4626f40046"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1efef1ef15487a5a4056234db644557ba61cec6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1efef1ef15487a5a4056234db644557ba61cec6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1efef1ef15487a5a4056234db644557ba61cec6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1efef1ef15487a5a4056234db644557ba61cec6/comments", "author": null, "committer": null, "parents": [{"sha": "8ec2ac7b26d6311dca191f2985053215a3c9a794", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ec2ac7b26d6311dca191f2985053215a3c9a794", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ec2ac7b26d6311dca191f2985053215a3c9a794"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "d9232af3567e4b9f2feced49bfc6dccc5ff49a5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1efef1ef15487a5a4056234db644557ba61cec6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1efef1ef15487a5a4056234db644557ba61cec6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e1efef1ef15487a5a4056234db644557ba61cec6", "patch": "@@ -1,3 +1,8 @@\n+2006-10-30  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* config/mips/mips.md (mul<mode>3): Split into...\n+\t(mulsi3, muldi3): ...these separate patterns.\n+\n 2006-10-30  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/mips/linux64.h (DRIVER_SELF_SPECS): Use a single spec,"}, {"sha": "8a2e44a822aff055492eee6c28f7f7e0ca0bb5c4", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1efef1ef15487a5a4056234db644557ba61cec6/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1efef1ef15487a5a4056234db644557ba61cec6/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=e1efef1ef15487a5a4056234db644557ba61cec6", "patch": "@@ -1008,19 +1008,31 @@\n ;; These processors have PRId values of 0x00004220 and 0x00004300,\n ;; respectively.\n \n-(define_expand \"mul<mode>3\"\n-  [(set (match_operand:GPR 0 \"register_operand\")\n-\t(mult:GPR (match_operand:GPR 1 \"register_operand\")\n-\t\t  (match_operand:GPR 2 \"register_operand\")))]\n+(define_expand \"mulsi3\"\n+  [(set (match_operand:SI 0 \"register_operand\")\n+\t(mult:SI (match_operand:SI 1 \"register_operand\")\n+\t\t (match_operand:SI 2 \"register_operand\")))]\n   \"\"\n {\n-  if (<MODE>mode == SImode && ISA_HAS_MUL3)\n-    emit_insn (gen_mul<mode>3_mult3 (operands[0], operands[1], operands[2]));\n-  else if (!TARGET_FIX_R4000)\n-    emit_insn (gen_mul<mode>3_internal (operands[0], operands[1],\n-\t\t\t\t\toperands[2]));\n+  if (ISA_HAS_MUL3)\n+    emit_insn (gen_mulsi3_mult3 (operands[0], operands[1], operands[2]));\n+  else if (TARGET_FIX_R4000)\n+    emit_insn (gen_mulsi3_r4000 (operands[0], operands[1], operands[2]));\n+  else\n+    emit_insn (gen_mulsi3_internal (operands[0], operands[1], operands[2]));\n+  DONE;\n+})\n+\n+(define_expand \"muldi3\"\n+  [(set (match_operand:DI 0 \"register_operand\")\n+\t(mult:DI (match_operand:DI 1 \"register_operand\")\n+\t\t (match_operand:DI 2 \"register_operand\")))]\n+  \"TARGET_64BIT\"\n+{\n+  if (TARGET_FIX_R4000)\n+    emit_insn (gen_muldi3_r4000 (operands[0], operands[1], operands[2]));\n   else\n-    emit_insn (gen_mul<mode>3_r4000 (operands[0], operands[1], operands[2]));\n+    emit_insn (gen_muldi3_internal (operands[0], operands[1], operands[2]));\n   DONE;\n })\n "}]}