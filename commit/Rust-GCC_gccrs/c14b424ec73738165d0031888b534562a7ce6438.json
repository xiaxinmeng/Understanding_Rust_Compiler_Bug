{"sha": "c14b424ec73738165d0031888b534562a7ce6438", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE0YjQyNGVjNzM3MzgxNjVkMDAzMTg4OGI1MzQ1NjJhN2NlNjQzOA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2020-03-20T13:24:49Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-12T08:29:12Z"}, "message": "[Ada] Compiler crash on instance with overloaded actual and aspects\n\n2020-06-12  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch12.adb (Has_Contracts): New predicate to check whether a\n\tformal subprogram carries an aspect specification for a pre- or\n\tpostcondition.\n\t(Build_Subprogram_Wrappers): If actual is overloaded, create a\n\tnew name to be used in call inside wrapper body. This names\n\tcarries the interpretations of the actual, and is resolved when\n\tthe body is analyzed.\n\t(Build_Subprogram_Body_Wrapper): Use this generated name in\n\tcall.\n\t(Build_Subprogram_Decl_Wrapper): Build profile of wrapper from\n\tthe profile of formal, and reset type entities for subsequent\n\tanalysis.", "tree": {"sha": "ba6456954bf520a8d0589f5faa2ebe664af88475", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba6456954bf520a8d0589f5faa2ebe664af88475"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c14b424ec73738165d0031888b534562a7ce6438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c14b424ec73738165d0031888b534562a7ce6438", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c14b424ec73738165d0031888b534562a7ce6438", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c14b424ec73738165d0031888b534562a7ce6438/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c324c77eeda3203bc9280b7aeefc9aea13503792", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c324c77eeda3203bc9280b7aeefc9aea13503792", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c324c77eeda3203bc9280b7aeefc9aea13503792"}], "stats": {"total": 87, "additions": 69, "deletions": 18}, "files": [{"sha": "26987d5d7a3b53a95fa838f6121fe6db9faf14c9", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 69, "deletions": 18, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c14b424ec73738165d0031888b534562a7ce6438/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c14b424ec73738165d0031888b534562a7ce6438/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=c14b424ec73738165d0031888b534562a7ce6438", "patch": "@@ -496,8 +496,7 @@ package body Sem_Ch12 is\n    --  On return, the node N has been rewritten with the actual body.\n \n    function Build_Subprogram_Decl_Wrapper\n-     (Formal_Subp : Entity_Id;\n-      Actual_Subp : Entity_Id) return Node_Id;\n+     (Formal_Subp : Entity_Id) return Node_Id;\n    --  Ada 2020 allows formal subprograms to carry pre/postconditions.\n    --  At the point of instantiation these contracts apply to uses of\n    --  the actual subprogram. This is implemented by creating wrapper\n@@ -508,7 +507,7 @@ package body Sem_Ch12 is\n \n    function Build_Subprogram_Body_Wrapper\n      (Formal_Subp : Entity_Id;\n-      Actual_Subp : Entity_Id) return Node_Id;\n+      Actual_Name : Node_Id) return Node_Id;\n    --  The body of the wrapper is a call to the actual, with the generated\n    --  pre/postconditon checks added.\n \n@@ -668,6 +667,10 @@ package body Sem_Ch12 is\n    --  Traverse the Exchanged_Views list to see if a type was private\n    --  and has already been flipped during this phase of instantiation.\n \n+   function Has_Contracts (Decl : Node_Id) return Boolean;\n+   --  Determine whether a formal subprogram has a Pre- or Postcondition,\n+   --  in which case a subprogram wrapper has to be built for the actual.\n+\n    procedure Hide_Current_Scope;\n    --  When instantiating a generic child unit, the parent context must be\n    --  present, but the instance and all entities that may be generated\n@@ -1165,18 +1168,38 @@ package body Sem_Ch12 is\n            Defining_Unit_Name (Specification (Analyzed_Formal));\n          Aspect_Spec : Node_Id;\n          Decl_Node   : Node_Id;\n-         Ent         : Entity_Id;\n+         Actual_Name : Node_Id;\n \n       begin\n          --  Create declaration for wrapper subprogram\n+         --  The actual can be overloaded, in which case it will be\n+         --  resolved when the call in the wrapper body is analyzed.\n+         --  We attach the possible interpretations of the actual to\n+         --  the name to be used in the call in the wrapper body.\n \n          if Is_Entity_Name (Match) then\n-            Ent := Entity (Match);\n+            Actual_Name := New_Occurrence_Of (Entity (Match), Sloc (Match));\n+\n+            if Is_Overloaded (Match) then\n+               Save_Interps (Match, Actual_Name);\n+            end if;\n+\n          else\n-            Ent := Defining_Entity (Last (Assoc_List));\n+            --  Use renaming declaration created when analyzing actual.\n+            --  This may be incomplete if there are several formal\n+            --  subprograms whose actual is an attribute ???\n+\n+            declare\n+               Renaming_Decl : constant Node_Id := Last (Assoc_List);\n+\n+            begin\n+               Actual_Name := New_Occurrence_Of\n+                     (Defining_Entity (Renaming_Decl), Sloc (Match));\n+               Set_Etype (Actual_Name, Get_Instance_Of (Etype (Formal)));\n+            end;\n          end if;\n \n-         Decl_Node := Build_Subprogram_Decl_Wrapper (Formal, Ent);\n+         Decl_Node := Build_Subprogram_Decl_Wrapper (Formal);\n \n          --  Transfer aspect specifications from formal subprogram to wrapper\n \n@@ -1196,7 +1219,8 @@ package body Sem_Ch12 is\n          --  The subprogram may be called in the analysis of subsequent\n          --  actuals.\n \n-         Append_To (Assoc_List, Build_Subprogram_Body_Wrapper (Formal, Ent));\n+         Append_To (Assoc_List,\n+            Build_Subprogram_Body_Wrapper (Formal, Actual_Name));\n       end Build_Subprogram_Wrappers;\n \n       ----------------------------------------\n@@ -1865,7 +1889,7 @@ package body Sem_Ch12 is\n                      --  for it. This is an expansion activity that cannot\n                      --  take place e.g. within an enclosing generic unit.\n \n-                     if Present (Aspect_Specifications (Analyzed_Formal))\n+                     if Has_Contracts (Analyzed_Formal)\n                        and then Expander_Active\n                      then\n                         Build_Subprogram_Wrappers;\n@@ -6196,8 +6220,7 @@ package body Sem_Ch12 is\n    -----------------------------------\n \n    function Build_Subprogram_Decl_Wrapper\n-     (Formal_Subp : Entity_Id;\n-      Actual_Subp : Entity_Id) return Node_Id\n+     (Formal_Subp : Entity_Id) return Node_Id\n    is\n       Loc       : constant Source_Ptr := Sloc (Current_Scope);\n       Ret_Type  : constant Entity_Id  := Get_Instance_Of (Etype (Formal_Subp));\n@@ -6217,16 +6240,19 @@ package body Sem_Ch12 is\n \n       Profile := Parameter_Specifications (\n                    New_Copy_Tree\n-                    (Specification (Unit_Declaration_Node (Actual_Subp))));\n+                    (Specification (Unit_Declaration_Node (Formal_Subp))));\n \n       Form_F := First_Formal (Formal_Subp);\n       Parm_Spec := First (Profile);\n \n-      --  Create new entities for the formals.\n+      --  Create new entities for the formals. Reset entities so that\n+      --  parameter types are properly resolved when wrapper declaration\n+      --  is analyzed.\n \n       while Present (Parm_Spec) loop\n          New_F := Make_Defining_Identifier (Loc, Chars (Form_F));\n          Set_Defining_Identifier (Parm_Spec, New_F);\n+         Set_Entity (Parameter_Type (Parm_Spec), Empty);\n          Next (Parm_Spec);\n          Next_Formal (Form_F);\n       end loop;\n@@ -6256,13 +6282,13 @@ package body Sem_Ch12 is\n \n    function Build_Subprogram_Body_Wrapper\n      (Formal_Subp : Entity_Id;\n-      Actual_Subp : Entity_Id) return Node_Id\n+      Actual_Name : Node_Id) return Node_Id\n    is\n       Loc       : constant Source_Ptr := Sloc (Current_Scope);\n       Ret_Type  : constant Entity_Id  := Get_Instance_Of (Etype (Formal_Subp));\n       Spec_Node : constant Node_Id :=\n         Specification\n-          (Build_Subprogram_Decl_Wrapper (Formal_Subp, Actual_Subp));\n+          (Build_Subprogram_Decl_Wrapper (Formal_Subp));\n       Act       : Node_Id;\n       Actuals   : List_Id;\n       Body_Node : Node_Id;\n@@ -6279,15 +6305,14 @@ package body Sem_Ch12 is\n \n       if Ret_Type = Standard_Void_Type then\n          Stmt := Make_Procedure_Call_Statement (Loc,\n-          Name                   => New_Occurrence_Of (Actual_Subp, Loc),\n+          Name                   => Actual_Name,\n           Parameter_Associations => Actuals);\n \n       else\n          Stmt := Make_Simple_Return_Statement (Loc,\n             Expression =>\n               Make_Function_Call (Loc,\n-                Name                   =>\n-                  New_Occurrence_Of (Actual_Subp, Loc),\n+                Name                   => Actual_Name,\n                 Parameter_Associations => Actuals));\n       end if;\n \n@@ -9225,6 +9250,32 @@ package body Sem_Ch12 is\n       return False;\n    end Has_Been_Exchanged;\n \n+   -------------------\n+   -- Has_Contracts --\n+   -------------------\n+\n+   function Has_Contracts (Decl : Node_Id) return Boolean is\n+      A_List : constant List_Id := Aspect_Specifications (Decl);\n+      A_Spec : Node_Id;\n+      A_Id   : Aspect_Id;\n+   begin\n+      if No (A_List) then\n+         return False;\n+      else\n+         A_Spec := First (A_List);\n+         while Present (A_Spec) loop\n+            A_Id := Get_Aspect_Id (A_Spec);\n+            if A_Id = Aspect_Pre or else A_Id = Aspect_Post then\n+               return True;\n+            end if;\n+\n+            Next (A_Spec);\n+         end loop;\n+\n+         return False;\n+      end if;\n+   end Has_Contracts;\n+\n    ----------\n    -- Hash --\n    ----------"}]}