{"sha": "f8c550f7e19c79c98f6d21ad6ce68d615451459a", "node_id": "C_kwDOANBUbNoAKGY4YzU1MGY3ZTE5Yzc5Yzk4ZjZkMjFhZDZjZTY4ZDYxNTQ1MTQ1OWE", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-03-18T12:20:09Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-03-18T13:09:03Z"}, "message": "macros: Only expand merged repetitions if they contain the same amount\nof matches\n\nForbid merging repetitions if the matched fragments do not contain the\nsame amount of repetitions", "tree": {"sha": "45f589d179aa8c9f98a282e9a60999aef214d816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45f589d179aa8c9f98a282e9a60999aef214d816"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8c550f7e19c79c98f6d21ad6ce68d615451459a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8c550f7e19c79c98f6d21ad6ce68d615451459a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8c550f7e19c79c98f6d21ad6ce68d615451459a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8c550f7e19c79c98f6d21ad6ce68d615451459a/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bb9a29688ab4ddfec7f8d36ca2cee63c5f258d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bb9a29688ab4ddfec7f8d36ca2cee63c5f258d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bb9a29688ab4ddfec7f8d36ca2cee63c5f258d2"}], "stats": {"total": 85, "additions": 71, "deletions": 14}, "files": [{"sha": "a6933bb6aab2211d1354512b04502e936c449b8e", "filename": "gcc/rust/expand/rust-macro-substitute-ctx.cc", "status": "modified", "additions": 41, "deletions": 14, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c550f7e19c79c98f6d21ad6ce68d615451459a/gcc%2Frust%2Fexpand%2Frust-macro-substitute-ctx.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c550f7e19c79c98f6d21ad6ce68d615451459a/gcc%2Frust%2Fexpand%2Frust-macro-substitute-ctx.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-substitute-ctx.cc?ref=f8c550f7e19c79c98f6d21ad6ce68d615451459a", "patch": "@@ -30,18 +30,14 @@ SubstituteCtx::substitute_metavar (std::unique_ptr<AST::Token> &metavar)\n   return expanded;\n }\n \n-std::vector<std::unique_ptr<AST::Token>>\n-SubstituteCtx::substitute_repetition (\n-  size_t pattern_start, size_t pattern_end,\n-  std::unique_ptr<AST::Token> separator_token)\n+bool\n+SubstituteCtx::check_repetition_amount (size_t pattern_start,\n+\t\t\t\t\tsize_t pattern_end,\n+\t\t\t\t\tsize_t &expected_repetition_amount)\n {\n-  rust_assert (pattern_end < macro.size ());\n-\n-  std::vector<std::unique_ptr<AST::Token>> expanded;\n+  bool first_fragment_found = false;\n+  bool is_valid = true;\n \n-  // Find the first fragment and get the amount of repetitions that we should\n-  // perform\n-  size_t repeat_amount = 0;\n   for (size_t i = pattern_start; i < pattern_end; i++)\n     {\n       if (macro.at (i)->get_id () == DOLLAR_SIGN)\n@@ -59,17 +55,48 @@ SubstituteCtx::substitute_repetition (\n \t\t  rust_error_at (frag_token->get_locus (),\n \t\t\t\t \"metavar %s used in repetition does not exist\",\n \t\t\t\t frag_token->get_str ().c_str ());\n-\t\t  // FIXME:\n-\t\t  return expanded;\n+\n+\t\t  is_valid = false;\n \t\t}\n \n-\t      // FIXME: Refactor, ugly\n-\t      repeat_amount = it->second.get_match_amount ();\n+\t      size_t repeat_amount = it->second.get_match_amount ();\n+\t      if (!first_fragment_found)\n+\t\t{\n+\t\t  first_fragment_found = true;\n+\t\t  expected_repetition_amount = repeat_amount;\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  if (repeat_amount != expected_repetition_amount)\n+\t\t    {\n+\t\t      rust_error_at (\n+\t\t\tfrag_token->get_locus (),\n+\t\t\t\"different amount of matches used in merged \"\n+\t\t\t\"repetitions: expected %ld, got %ld\",\n+\t\t\texpected_repetition_amount, repeat_amount);\n+\t\t      is_valid = false;\n+\t\t    }\n+\t\t}\n \t    }\n \t}\n     }\n \n+  return is_valid;\n+}\n+\n+std::vector<std::unique_ptr<AST::Token>>\n+SubstituteCtx::substitute_repetition (\n+  size_t pattern_start, size_t pattern_end,\n+  std::unique_ptr<AST::Token> separator_token)\n+{\n+  rust_assert (pattern_end < macro.size ());\n+\n+  size_t repeat_amount = 0;\n+  if (!check_repetition_amount (pattern_start, pattern_end, repeat_amount))\n+    return {};\n+\n   rust_debug (\"repetition amount to use: %lu\", repeat_amount);\n+  std::vector<std::unique_ptr<AST::Token>> expanded;\n   std::vector<std::unique_ptr<AST::Token>> new_macro;\n \n   // We want to generate a \"new macro\" to substitute with. This new macro"}, {"sha": "81dcab7643bee56df4b469e7966f24335d99afa2", "filename": "gcc/rust/expand/rust-macro-substitute-ctx.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c550f7e19c79c98f6d21ad6ce68d615451459a/gcc%2Frust%2Fexpand%2Frust-macro-substitute-ctx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c550f7e19c79c98f6d21ad6ce68d615451459a/gcc%2Frust%2Fexpand%2Frust-macro-substitute-ctx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-substitute-ctx.h?ref=f8c550f7e19c79c98f6d21ad6ce68d615451459a", "patch": "@@ -26,6 +26,17 @@ class SubstituteCtx\n   std::vector<std::unique_ptr<AST::Token>> &macro;\n   std::map<std::string, MatchedFragmentContainer> &fragments;\n \n+  /**\n+   * Find the repetition amount to use when expanding a repetition, and\n+   * check that all fragments used respect that repetition amount\n+   *\n+   * @param pattern_start Start of the repetition pattern\n+   * @param pattern_end End of the repetition pattern\n+   * @param repeat_amount Reference to fill with the matched repetition amount\n+   */\n+  bool check_repetition_amount (size_t pattern_start, size_t pattern_end,\n+\t\t\t\tsize_t &repeat_amount);\n+\n public:\n   SubstituteCtx (std::vector<std::unique_ptr<AST::Token>> &input,\n \t\t std::vector<std::unique_ptr<AST::Token>> &macro,"}, {"sha": "f6588e75eb0ba9e50e60ebc0fbdc2f6410e453b9", "filename": "gcc/testsuite/rust/compile/macro26.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c550f7e19c79c98f6d21ad6ce68d615451459a/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro26.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c550f7e19c79c98f6d21ad6ce68d615451459a/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro26.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro26.rs?ref=f8c550f7e19c79c98f6d21ad6ce68d615451459a", "patch": "@@ -0,0 +1,10 @@\n+macro_rules! repeat {\n+    ( $( $i:literal ),* ; $( $j:literal ),* ) => (( $( ($i,$j) ),* ))\n+    // { dg-error \"different amount of matches used in merged repetitions\" \"\" { target *-*-* } .-1 }\n+}\n+\n+fn main() -> i32 {\n+    let _ = repeat!(1, 2, 3; 2, 3);\n+\n+    0\n+}"}, {"sha": "f838a83af6672a57fc2df99366ed19c4ec1bef8a", "filename": "gcc/testsuite/rust/execute/torture/macros24.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c550f7e19c79c98f6d21ad6ce68d615451459a/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmacros24.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c550f7e19c79c98f6d21ad6ce68d615451459a/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmacros24.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmacros24.rs?ref=f8c550f7e19c79c98f6d21ad6ce68d615451459a", "patch": "@@ -0,0 +1,9 @@\n+macro_rules! repeat {\n+    ( $( $i:literal ),* ; $( $j:literal ),* ) => (( $( ($i,$j) ),* ))\n+}\n+\n+fn main() -> i32 {\n+    let t = repeat!(1, 1; 2, 2);\n+\n+    t.0 .0 + t.0 .1 + t.1 .0 + t.1 .1 - 6\n+}"}]}