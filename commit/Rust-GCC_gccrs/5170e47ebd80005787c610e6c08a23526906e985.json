{"sha": "5170e47ebd80005787c610e6c08a23526906e985", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE3MGU0N2ViZDgwMDA1Nzg3YzYxMGU2YzA4YTIzNTI2OTA2ZTk4NQ==", "commit": {"author": {"name": "Andre Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2018-07-19T15:47:15Z"}, "committer": {"name": "Andre Vieira", "email": "avieira@gcc.gnu.org", "date": "2018-07-19T15:47:15Z"}, "message": "[PATCH, GCC, AARCH64] Add support for +profile extension\n\nThis patch adds support for the Statistical Profiling Extension (SPE) on\nAArch64. Even though the compiler will not generate code any differently\ngiven this extension, it will need to pass it on to the assembler in\norder to let it correctly assemble inline asm containing accesses to the\nextension's system registers.  The same applies when using the\npreprocessor on an assembly file as this first must pass through cc1.\n\nI left the hwcaps string for SPE empty as the kernel does not define a\nfeature string for this extension.  The current effect of this is that\ndriver will disable profile feature bit in GCC.  This is OK though\nbecause we don't, nor do we ever, enable this feature bit, as codegen is\nnot affect by the SPE support and more importantly the driver will still\npass the extension down to the assembler regardless.\n\ngcc/ChangeLog\n2018-07-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/aarch64/aarch64-option-extensions.def: New entry for profile\n\textension.\n\t* config/aarch64/aarch64.h (AARCH64_FL_PROFILE): New.\n\t* doc/invoke.texi (aarch64-feature-modifiers): New entry for profile\n\textension.\n\ngcc/testsuite/ChangeLog\n2018-07-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* gcc.target/aarch64/profile.c: New test.\n\nFrom-SVN: r262882", "tree": {"sha": "dae7649361d1e0fa9ac4148ffb34d144939a3e9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dae7649361d1e0fa9ac4148ffb34d144939a3e9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5170e47ebd80005787c610e6c08a23526906e985", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5170e47ebd80005787c610e6c08a23526906e985", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5170e47ebd80005787c610e6c08a23526906e985", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5170e47ebd80005787c610e6c08a23526906e985/comments", "author": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "0c998afe459cdcb448a86bd553220a4be302b7af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5170e47ebd80005787c610e6c08a23526906e985/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5170e47ebd80005787c610e6c08a23526906e985/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5170e47ebd80005787c610e6c08a23526906e985", "patch": "@@ -1,3 +1,11 @@\n+2018-07-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/aarch64/aarch64-option-extensions.def: New entry for profile\n+\textension.\n+\t* config/aarch64/aarch64.h (AARCH64_FL_PROFILE): New.\n+\t* doc/invoke.texi (aarch64-feature-modifiers): New entry for profile\n+\textension.\n+\n 2018-07-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \tPR target/83009"}, {"sha": "69ab796a4e1a959b89ebb55b599919c442cfb088", "filename": "gcc/config/aarch64/aarch64-option-extensions.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Fconfig%2Faarch64%2Faarch64-option-extensions.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Fconfig%2Faarch64%2Faarch64-option-extensions.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-option-extensions.def?ref=5170e47ebd80005787c610e6c08a23526906e985", "patch": "@@ -105,4 +105,7 @@ AARCH64_OPT_EXTENSION(\"fp16fml\", AARCH64_FL_F16FML, AARCH64_FL_FP | AARCH64_FL_F\n    Disabling \"sve\" just disables \"sve\".  */\n AARCH64_OPT_EXTENSION(\"sve\", AARCH64_FL_SVE, AARCH64_FL_FP | AARCH64_FL_SIMD | AARCH64_FL_F16, 0, \"sve\")\n \n+/* Enabling/Disabling \"profile\" does not enable/disable any other feature.  */\n+AARCH64_OPT_EXTENSION(\"profile\", AARCH64_FL_PROFILE, 0, 0, \"\")\n+\n #undef AARCH64_OPT_EXTENSION"}, {"sha": "c1218503bab19323eee1cca8b7e4bea8fbfcf573", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=5170e47ebd80005787c610e6c08a23526906e985", "patch": "@@ -158,6 +158,9 @@ extern unsigned aarch64_architecture_version;\n #define AARCH64_FL_SHA3\t      (1 << 18)  /* Has ARMv8.4-a SHA3 and SHA512.  */\n #define AARCH64_FL_F16FML     (1 << 19)  /* Has ARMv8.4-a FP16 extensions.  */\n \n+/* Statistical Profiling extensions.  */\n+#define AARCH64_FL_PROFILE    (1 << 20)\n+\n /* Has FP and SIMD.  */\n #define AARCH64_FL_FPSIMD     (AARCH64_FL_FP | AARCH64_FL_SIMD)\n "}, {"sha": "485f5998225b4486d49523173fe3f2b3e934dc2d", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=5170e47ebd80005787c610e6c08a23526906e985", "patch": "@@ -14845,6 +14845,9 @@ instructions. Use of this option with architectures prior to Armv8.2-A is not su\n @item sm4\n Enable the sm3 and sm4 crypto extension.  This also enables Advanced SIMD instructions.\n Use of this option with architectures prior to Armv8.2-A is not supported.\n+@item profile\n+Enable the Statistical Profiling extension.  This option is only to enable the\n+extension at the assembler level and does not affect code generation.\n \n @end table\n "}, {"sha": "2555ac0f8aa15ad616e69c3760435110128b01e9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5170e47ebd80005787c610e6c08a23526906e985", "patch": "@@ -1,3 +1,7 @@\n+2018-07-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* gcc.target/aarch64/profile.c: New test.\n+\n 2018-07-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \tPR target/83009"}, {"sha": "c2dd1124ca6ef1c71e7680899002d1c06d7c8b4a", "filename": "gcc/testsuite/gcc.target/aarch64/profile.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fprofile.c?ref=5170e47ebd80005787c610e6c08a23526906e985", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=armv8.2-a+profile\" } */\n+/* { dg-final { scan-assembler \"\\\\.arch armv8.2-a\\[\\^\\n\\]*\\\\+profile\\[\\^\\n\\]*\\n\" } } */"}]}