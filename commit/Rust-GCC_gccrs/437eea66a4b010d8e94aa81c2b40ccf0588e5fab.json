{"sha": "437eea66a4b010d8e94aa81c2b40ccf0588e5fab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM3ZWVhNjZhNGIwMTBkOGU5NGFhODFjMmI0MGNjZjA1ODhlNWZhYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-16T09:55:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-16T09:55:00Z"}, "message": "intl: Unbreak intl build with bison 3 when no regeneration is needed [PR92008]\n\nAs Iain reported, my change broke the case when one has bison >= 3,\nbut make decides there is no reason to regenerate plural.c, unfortunately\nthat seems to be a scenario I haven't tested.  The problem is that\nthe pregenerated plural.c has been generated with bison 1.35, but when\nconfig.h says HAVE_BISON3, the code assumes it is the bison3 variant.\nWhat used to work fine is when one has bison >= 3 and plural.c has been\nregenerated (e.g. do touch intl/plural.y and it will work), or when\none doesn't have any bison (then nothing is regenerated, but HAVE_BISON3\nisn't defined either), or when one has bison < 3 and doesn't need to\nregenerate, or when one has bison < 3 and it is regenerated.\n\nThe following patch fixes this, by killing the HAVE_BISON3 macro from\nconfig.h, and instead remembering the fact whether plural.c has been created\nwith bison < 3 or bison >= 3 in a separate new plural-config.h header.\nThe way this works:\n- user doesn't have bison\n- user has bison >= 3, but intl/{plural-config.h,plural.c} aren't older than intl/plural.y\n- user has bison < 3, but intl/{plural-config.h,plural.c} aren't older than intl/plural.y\n\tpregenerated !USE_BISON3 plural.c and plural-config.h from source\n\tdir is used, nothing in the objdir\n- user has bison >= 3 and intl/plural.y is newer\n\tMakefile generates plural.c and USE_BISON3 plural-config.h in the\n\tobjdir, which is then used in preference to srcdir copies\n- user has bison < 3 and intl/plural.y is newer\n\tMakefile generates plural.c and !USE_BISON3 plural-config.h in the\n\tobjdir, which is then used in preference to srcdir copies\nI have tested all these cases and make all-yes worked in all the cases.\nIf one uses the unsupported ./configure where srcdir == objdir, I guess\n(though haven't tested) that it should still work, just it would be nice\nif such people didn't try to check in the plural{.c,-config.h} they have\nregenerated.\nWhat doesn't work, but didn't work before either (just tested gcc-9 branch\ntoo) is when one doesn't have bison and plural.y is newer than plural.c.\nDon't do that ;)\n\n2020-04-16  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR bootstrap/92008\nintl/\n\t* configure.ac: Remove HAVE_BISON3 AC_DEFINE.\n\t* Makefile.in (HEADERS): Add plural-config.h.\n\t(.y.c): Also create plural-config.h.\n\t(dcigettext.o loadmsgcat.o plural.o plural-exp.o): Also depend\n\ton plural-config.h.\n\t(plural-config.h): Depend on plural.c.\n\t* plural-exp.h: Include plural-config.h.  Use USE_BISON3 instead\n\tof HAVE_BISON3.\n\t* plural.y: Use USE_BISON3 instead of HAVE_BISON3.\n\t* configure: Regenerated.\n\t* plural.c: Regenerated.\n\t* config.h.in: Regenerated.\n\t* plural-config.h: Generated.\ncontrib/\n\t* gcc_update: Add intl/plural.y dependency for intl/plural-config.h.", "tree": {"sha": "81c209397de5b0ca4f5a413e13702de9ac94bd97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81c209397de5b0ca4f5a413e13702de9ac94bd97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/437eea66a4b010d8e94aa81c2b40ccf0588e5fab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/437eea66a4b010d8e94aa81c2b40ccf0588e5fab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/437eea66a4b010d8e94aa81c2b40ccf0588e5fab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd87b1fddbbe7d424671ebf81c96e12d748fafc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd87b1fddbbe7d424671ebf81c96e12d748fafc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd87b1fddbbe7d424671ebf81c96e12d748fafc7"}], "stats": {"total": 56, "additions": 39, "deletions": 17}, "files": [{"sha": "7efe9a4956ea73f656dc993d5c5a1286f4e4b42b", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=437eea66a4b010d8e94aa81c2b40ccf0588e5fab", "patch": "@@ -1,3 +1,8 @@\n+2020-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR bootstrap/92008\n+\t* gcc_update: Add intl/plural.y dependency for intl/plural-config.h.\n+\n 2020-04-03  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-git-customization.sh: Search for the pattern"}, {"sha": "5e8af0e9a7c529a8eebfc22c29c6c6c40830f2d2", "filename": "contrib/gcc_update", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/contrib%2Fgcc_update", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/contrib%2Fgcc_update", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc_update?ref=437eea66a4b010d8e94aa81c2b40ccf0588e5fab", "patch": "@@ -72,6 +72,7 @@ fixincludes/configure: fixincludes/configure.ac fixincludes/aclocal.m4\n fixincludes/config.h.in: fixincludes/configure.ac fixincludes/aclocal.m4\n # intl library\n intl/plural.c: intl/plural.y\n+intl/plural-config.h: intl/plural.y\n intl/configure: intl/configure.ac intl/aclocal.m4\n intl/config.h.in: intl/configure.ac intl/aclocal.m4\n # Now, proceed to gcc automatically generated files"}, {"sha": "e8f0d36d20267408a9717957f5d001cccffd767b", "filename": "intl/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/intl%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/intl%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2FChangeLog?ref=437eea66a4b010d8e94aa81c2b40ccf0588e5fab", "patch": "@@ -1,5 +1,20 @@\n 2020-04-16  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR bootstrap/92008\n+\t* configure.ac: Remove HAVE_BISON3 AC_DEFINE.\n+\t* Makefile.in (HEADERS): Add plural-config.h.\n+\t(.y.c): Also create plural-config.h.\n+\t(dcigettext.o loadmsgcat.o plural.o plural-exp.o): Also depend\n+\ton plural-config.h.\n+\t(plural-config.h): Depend on plural.c.\n+\t* plural-exp.h: Include plural-config.h.  Use USE_BISON3 instead\n+\tof HAVE_BISON3.\n+\t* plural.y: Use USE_BISON3 instead of HAVE_BISON3.\n+\t* configure: Regenerated.\n+\t* plural.c: Regenerated.\n+\t* config.h.in: Regenerated.\n+\t* plural-config.h: Generated.\n+\n \tPR bootstrap/92008\n \t* configure.ac: Add check for bison >= 3, AC_DEFINE HAVE_BISON3\n \tand AC_SUBST BISON3_YES and BISON3_NO."}, {"sha": "356c8ab9b653d568d1d17dcf0bc3a07dc7ed589f", "filename": "intl/Makefile.in", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/intl%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/intl%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2FMakefile.in?ref=437eea66a4b010d8e94aa81c2b40ccf0588e5fab", "patch": "@@ -57,6 +57,7 @@ HEADERS = \\\n   gettextP.h \\\n   hash-string.h \\\n   loadinfo.h \\\n+  plural-config.h \\\n   plural-exp.h \\\n   eval-plural.h \\\n   localcharset.h \\\n@@ -133,10 +134,12 @@ libintl.h: $(srcdir)/libgnuintl.h\n \t$(COMPILE) $<\n \n .y.c:\n+@BISON3_YES@\techo '#define USE_BISON3' > $(patsubst %.c,%-config.h,$@)\n @BISON3_YES@\tsed 's,%pure_parser,,;s,^/\\* BISON3 \\(.*\\) \\*/$$,\\1,' $< > $@.y\n @BISON3_YES@\t$(YACC) $(YFLAGS) --output $@.c $@.y\n @BISON3_YES@\tsed 's/\\.c\\.y\"/.y\"/' $@.c > $@\n @BISON3_YES@\trm -f $@.c $@.y $@.h\n+@BISON3_NO@\techo '/* #define USE_BISON3 */' > $(patsubst %.c,%-config.h,$@)\n @BISON3_NO@\t$(YACC) $(YFLAGS) --output $@ $<\n \trm -f $*.h\n \n@@ -165,7 +168,7 @@ dngettext.o finddomain.o gettext.o intl-compat.o loadmsgcat.o \\\n localealias.o ngettext.o textdomain.o: gettextP.h gmo.h loadinfo.h\n dcigettext.o loadmsgcat.o: hash-string.h\n explodename.o l10nflist.o: loadinfo.h\n-dcigettext.o loadmsgcat.o plural.o plural-exp.o: plural-exp.h\n+dcigettext.o loadmsgcat.o plural.o plural-exp.o: plural-exp.h plural-config.h\n dcigettext.o: eval-plural.h\n localcharset.o: localcharset.h\n localealias.o localcharset.o relocatable.o: relocatable.h\n@@ -242,6 +245,8 @@ $(srcdir)/aclocal.m4: @MAINT@ $(aclocal_deps)\n config.h: stamp-h1\n \ttest -f config.h || (rm -f stamp-h1 && $(MAKE) stamp-h1)\n \n+plural-config.h: plural.c\n+\n stamp-h1: $(srcdir)/config.h.in config.status\n \t-rm -f stamp-h1\n \t$(SHELL) ./config.status config.h"}, {"sha": "9c9b53dc0eac8b7cb63b7e1cc83f3f6ec16200c5", "filename": "intl/config.h.in", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/intl%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/intl%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2Fconfig.h.in?ref=437eea66a4b010d8e94aa81c2b40ccf0588e5fab", "patch": "@@ -28,9 +28,6 @@\n /* Define to 1 if you have the <argz.h> header file. */\n #undef HAVE_ARGZ_H\n \n-/* Define if bison 3 or later is used. */\n-#undef HAVE_BISON3\n-\n /* Define if the GNU dcgettext() function is already present or preinstalled.\n    */\n #undef HAVE_DCGETTEXT"}, {"sha": "d69767b7d2190f772fb7954f77f613ec2d369a1f", "filename": "intl/configure", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/intl%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/intl%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2Fconfigure?ref=437eea66a4b010d8e94aa81c2b40ccf0588e5fab", "patch": "@@ -6808,9 +6808,6 @@ $as_echo_n \"checking bison 3 or later... \" >&6; }\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_prog_version\" >&5\n $as_echo \"$ac_prog_version\" >&6; }\n   if test $ac_bison3 = yes; then\n-\n-$as_echo \"#define HAVE_BISON3 1\" >>confdefs.h\n-\n     BISON3_YES=\n     BISON3_NO='#'\n   fi"}, {"sha": "6363e55e68a9c40ee4beca2b47bd45e985747682", "filename": "intl/configure.ac", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/intl%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/intl%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2Fconfigure.ac?ref=437eea66a4b010d8e94aa81c2b40ccf0588e5fab", "patch": "@@ -62,7 +62,6 @@ changequote([,])dnl\n   esac\n   AC_MSG_RESULT([$ac_prog_version])\n   if test $ac_bison3 = yes; then\n-    AC_DEFINE(HAVE_BISON3, 1, [Define if bison 3 or later is used.])\n     BISON3_YES=\n     BISON3_NO='#'\n   fi"}, {"sha": "53bbd11078e27fab8bf0109fedd3cfc839b80b08", "filename": "intl/plural-config.h", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/intl%2Fplural-config.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/intl%2Fplural-config.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2Fplural-config.h?ref=437eea66a4b010d8e94aa81c2b40ccf0588e5fab", "patch": "@@ -0,0 +1 @@\n+/* #define USE_BISON3 */"}, {"sha": "2dbb104099efaa0188aa52a910697a95ce10e3d9", "filename": "intl/plural-exp.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/intl%2Fplural-exp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/intl%2Fplural-exp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2Fplural-exp.h?ref=437eea66a4b010d8e94aa81c2b40ccf0588e5fab", "patch": "@@ -20,6 +20,8 @@\n #ifndef _PLURAL_EXP_H\n #define _PLURAL_EXP_H\n \n+#include <plural-config.h>\n+\n #ifndef PARAMS\n # if __STDC__ || defined __GNUC__ || defined __SUNPRO_C || defined __cplusplus || __PROTOTYPES\n #  define PARAMS(args) args\n@@ -111,7 +113,7 @@ struct parse_args\n \n extern void FREE_EXPRESSION PARAMS ((struct expression *exp))\n      internal_function;\n-#ifdef HAVE_BISON3\n+#ifdef USE_BISON3\n extern int PLURAL_PARSE PARAMS ((struct parse_args *arg));\n #else\n extern int PLURAL_PARSE PARAMS ((void *arg));"}, {"sha": "f9a8faa783883269f35e7c6becfdf93da07bdaba", "filename": "intl/plural.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/intl%2Fplural.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/intl%2Fplural.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2Fplural.c?ref=437eea66a4b010d8e94aa81c2b40ccf0588e5fab", "patch": "@@ -59,7 +59,7 @@\n # define __gettextparse PLURAL_PARSE\n #endif\n \n-#ifndef HAVE_BISON3\n+#ifndef USE_BISON3\n #define YYLEX_PARAM\t&((struct parse_args *) arg)->cp\n #define YYPARSE_PARAM\targ\n #endif\n@@ -89,7 +89,7 @@ static inline struct expression *new_exp_3 PARAMS ((enum operator op,\n \t\t\t\t\t\t   struct expression *bexp,\n \t\t\t\t\t\t   struct expression *tbranch,\n \t\t\t\t\t\t   struct expression *fbranch));\n-#ifdef HAVE_BISON3\n+#ifdef USE_BISON3\n static int yylex PARAMS ((YYSTYPE *lval, struct parse_args *arg));\n static void yyerror PARAMS ((struct parse_args *arg, const char *str));\n #else\n@@ -1372,7 +1372,7 @@ FREE_EXPRESSION (exp)\n }\n \n \n-#ifdef HAVE_BISON3\n+#ifdef USE_BISON3\n static int\n yylex (lval, arg)\n      YYSTYPE *lval;\n@@ -1526,7 +1526,7 @@ yylex (lval, pexp)\n }\n \n \n-#ifdef HAVE_BISON3\n+#ifdef USE_BISON3\n static void\n yyerror (arg, str)\n      struct parse_args *arg;"}, {"sha": "7531da5a7b2ec26bab832a466febabc0cb5fcb69", "filename": "intl/plural.y", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/intl%2Fplural.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437eea66a4b010d8e94aa81c2b40ccf0588e5fab/intl%2Fplural.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2Fplural.y?ref=437eea66a4b010d8e94aa81c2b40ccf0588e5fab", "patch": "@@ -40,7 +40,7 @@\n # define __gettextparse PLURAL_PARSE\n #endif\n \n-#ifndef HAVE_BISON3\n+#ifndef USE_BISON3\n #define YYLEX_PARAM\t&((struct parse_args *) arg)->cp\n #define YYPARSE_PARAM\targ\n #endif\n@@ -71,7 +71,7 @@ static inline struct expression *new_exp_3 PARAMS ((enum operator op,\n \t\t\t\t\t\t   struct expression *bexp,\n \t\t\t\t\t\t   struct expression *tbranch,\n \t\t\t\t\t\t   struct expression *fbranch));\n-#ifdef HAVE_BISON3\n+#ifdef USE_BISON3\n static int yylex PARAMS ((YYSTYPE *lval, struct parse_args *arg));\n static void yyerror PARAMS ((struct parse_args *arg, const char *str));\n #else\n@@ -266,7 +266,7 @@ FREE_EXPRESSION (exp)\n }\n \n \n-#ifdef HAVE_BISON3\n+#ifdef USE_BISON3\n static int\n yylex (lval, arg)\n      YYSTYPE *lval;\n@@ -420,7 +420,7 @@ yylex (lval, pexp)\n }\n \n \n-#ifdef HAVE_BISON3\n+#ifdef USE_BISON3\n static void\n yyerror (arg, str)\n      struct parse_args *arg;"}]}