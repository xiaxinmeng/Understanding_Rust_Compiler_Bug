{"sha": "441e02a5c44543f0afba3549b9939e54bafcff11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQxZTAyYTVjNDQ1NDNmMGFmYmEzNTQ5Yjk5MzllNTRiYWZjZmYxMQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-05-23T16:39:42Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-05-23T16:39:42Z"}, "message": "rs6000: Make all divide instructions one type\n\nThis uses the attribute \"size\" to specify the differences:\n\n\tidiv -> div size=32\n\tldiv -> div size=64\n\nIt could use \"dot\" as well, but the current code doesn't handle that.\n\nFrom-SVN: r210869", "tree": {"sha": "644c325d467970b746fbf036a3cb795b69d108fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/644c325d467970b746fbf036a3cb795b69d108fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/441e02a5c44543f0afba3549b9939e54bafcff11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/441e02a5c44543f0afba3549b9939e54bafcff11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/441e02a5c44543f0afba3549b9939e54bafcff11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/441e02a5c44543f0afba3549b9939e54bafcff11/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "58ee9e663594196b2b76669df15e12c1aeff53bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58ee9e663594196b2b76669df15e12c1aeff53bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58ee9e663594196b2b76669df15e12c1aeff53bf"}], "stats": {"total": 198, "additions": 126, "deletions": 72}, "files": [{"sha": "84d9817827c6982d0d22247e7ef7924b975ce505", "filename": "gcc/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -1,3 +1,40 @@\n+2014-05-23  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (type): Delete \"idiv\", \"ldiv\".  Add\n+\t\"div\".\n+\t(bits): New mode_attr.\n+\t(idiv_ldiv): Delete mode_attr.\n+\t(udiv<mode>3, *div<mode>3, div<div_extend>_<mode>): Adjust.\n+\t* config/rs6000/rs6000.c (rs6000_adjust_cost, is_cracked_insn,\n+\trs6000_adjust_priority, is_nonpipeline_insn,\n+\tinsn_must_be_first_in_group, insn_must_be_last_in_group): Adjust.\n+\n+\t* config/rs6000/40x.md (ppc403-idiv): Adjust.\n+\t* config/rs6000/440.md (ppc440-idiv): Adjust.\n+\t* config/rs6000/476.md (ppc476-idiv): Adjust.\n+\t* config/rs6000/601.md (ppc601-idiv): Adjust.\n+\t* config/rs6000/603.md (ppc603-idiv): Adjust.\n+\t* config/rs6000/6xx.md (ppc604-idiv, ppc620-idiv, ppc630-idiv,\n+\tppc620-ldiv): Adjust.\n+\t* config/rs6000/7450.md (ppc7450-idiv): Adjust.\n+\t* config/rs6000/7xx.md (ppc750-idiv): Adjust.\n+\t* config/rs6000/8540.md (ppc8540_divide): Adjust.\n+\t* config/rs6000/a2.md (ppca2-idiv, ppca2-ldiv): Adjust.\n+\t* config/rs6000/cell.md (cell-idiv, cell-ldiv): Adjust.\n+\t* config/rs6000/e300c2c3.md (ppce300c3_divide): Adjust.\n+\t* config/rs6000/e500mc.md (e500mc_divide): Adjust.\n+\t* config/rs6000/e500mc64.md (e500mc64_divide): Adjust.\n+\t* config/rs6000/e5500.md (e5500_divide, e5500_divide_d): Adjust.\n+\t* config/rs6000/e6500.md (e6500_divide, e6500_divide_d): Adjust.\n+\t* config/rs6000/mpc.md (mpccore-idiv): Adjust.\n+\t* config/rs6000/power4.md (power4-idiv, power4-ldiv): Adjust.\n+\t* config/rs6000/power5.md (power5-idiv, power5-ldiv): Adjust.\n+\t* config/rs6000/power6.md (power6-idiv, power6-ldiv): Adjust.\n+\t* config/rs6000/power7.md (power7-idiv, power7-ldiv): Adjust.\n+\t* config/rs6000/power8.md (power8-idiv, power8-ldiv): Adjust.\n+\t* config/rs6000/rs64.md (rs64a-idiv, rs64a-ldiv): Adjust.\n+\t* config/rs6000/titan.md (titan_fxu_div): Adjust.\n+\n 2014-05-23  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (type): Delete \"insert_word\","}, {"sha": "8ddccbacde4c8fe8df5ddfdf7e72e5903b011fa9", "filename": "gcc/config/rs6000/40x.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2F40x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2F40x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F40x.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -82,7 +82,7 @@\n   \"iu_40x\")\n \n (define_insn_reservation \"ppc403-idiv\" 33\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n        (eq_attr \"cpu\" \"ppc403,ppc405\"))\n   \"iu_40x*33\")\n "}, {"sha": "e6c28a7060ef7c1b61a5e0922b703a2edb28dd96", "filename": "gcc/config/rs6000/440.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2F440.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2F440.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F440.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -84,7 +84,7 @@\n   \"ppc440_issue,ppc440_i_pipe\")\n \n (define_insn_reservation \"ppc440-idiv\" 34\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n        (eq_attr \"cpu\" \"ppc440\"))\n   \"ppc440_issue,ppc440_i_pipe*33\")\n "}, {"sha": "5acd6682a1da6b51af9dabdd46dbee2e224f4928", "filename": "gcc/config/rs6000/476.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2F476.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2F476.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F476.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -88,7 +88,7 @@\n    ppc476_i_pipe\")\n \n (define_insn_reservation \"ppc476-idiv\" 11\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n        (eq_attr \"cpu\" \"ppc476\"))\n   \"ppc476_issue,\\\n    ppc476_i_pipe*11\")"}, {"sha": "85892c88006b5069a84b1f545fc99bdcb35b0659", "filename": "gcc/config/rs6000/601.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2F601.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2F601.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F601.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -66,7 +66,7 @@\n   \"iu_ppc601*5\")\n \n (define_insn_reservation \"ppc601-idiv\" 36\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n        (eq_attr \"cpu\" \"ppc601\"))\n   \"iu_ppc601*36\")\n "}, {"sha": "5f38741af19fe57ea2a854f1391b561d28ad3202", "filename": "gcc/config/rs6000/603.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2F603.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2F603.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F603.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -87,7 +87,7 @@\n   \"iu_603*2\")\n \n (define_insn_reservation \"ppc603-idiv\" 37\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n        (eq_attr \"cpu\" \"ppc603\"))\n   \"iu_603*37\")\n "}, {"sha": "3ff4caf2b01d45d5a243e13369ff093756c84576", "filename": "gcc/config/rs6000/6xx.md", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2F6xx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2F6xx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F6xx.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -123,22 +123,25 @@\n   \"mciu_6xx*5\")\n \n (define_insn_reservation \"ppc604-idiv\" 20\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n        (eq_attr \"cpu\" \"ppc604,ppc604e\"))\n   \"mciu_6xx*19\")\n \n (define_insn_reservation \"ppc620-idiv\" 37\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"ppc620\"))\n   \"mciu_6xx*36\")\n \n (define_insn_reservation \"ppc630-idiv\" 21\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"ppc630\"))\n   \"mciu_6xx*20\")\n \n (define_insn_reservation \"ppc620-ldiv\" 37\n-  (and (eq_attr \"type\" \"ldiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"ppc620,ppc630\"))\n   \"mciu_6xx*36\")\n "}, {"sha": "3333fd9b0ad12d358b19cc192e9634af23ef7be2", "filename": "gcc/config/rs6000/7450.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2F7450.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2F7450.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F7450.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -102,7 +102,7 @@\n   \"ppc7450_du,mciu_7450\")\n \n (define_insn_reservation \"ppc7450-idiv\" 23\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n        (eq_attr \"cpu\" \"ppc7450\"))\n   \"ppc7450_du,mciu_7450*23\")\n "}, {"sha": "67f3d11c1fda2b77735f0c75d8a9df3401979690", "filename": "gcc/config/rs6000/7xx.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2F7xx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2F7xx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F7xx.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -95,7 +95,7 @@\n   \"ppc750_du,iu1_7xx\")\n \n (define_insn_reservation \"ppc750-idiv\" 19\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n        (eq_attr \"cpu\" \"ppc750,ppc7400\"))\n   \"ppc750_du,iu1_7xx*19\")\n "}, {"sha": "578cf8ea979f38910170e9e1a70ceb9a5afbebf3", "filename": "gcc/config/rs6000/8540.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2F8540.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2F8540.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F8540.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -121,7 +121,7 @@\n ;; reservation of miu_stage3 here because we use the average latency\n ;; time.\n (define_insn_reservation \"ppc8540_divide\" 14\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n        (eq_attr \"cpu\" \"ppc8540,ppc8548\"))\n   \"ppc8540_decode,ppc8540_issue+ppc8540_mu_stage0+ppc8540_mu_div,\\\n    ppc8540_mu_div*13\")"}, {"sha": "52dbbd4735d8a9c34186a9454c8a5237dd91dc6a", "filename": "gcc/config/rs6000/a2.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fa2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fa2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fa2.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -62,12 +62,14 @@\n \n ;; D.4.9\n (define_insn_reservation \"ppca2-idiv\" 32\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"ppca2\"))\n   \"mult*32\")\n \n (define_insn_reservation \"ppca2-ldiv\" 65\n-  (and (eq_attr \"type\" \"ldiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"ppca2\"))\n   \"mult*65\")\n "}, {"sha": "1bf308eec3d82fc0f188759b4cf3894a9fad31c2", "filename": "gcc/config/rs6000/cell.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fcell.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fcell.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fcell.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -246,12 +246,14 @@\n  \n ;; divide\n (define_insn_reservation \"cell-idiv\" 32\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"cell\"))\n   \"slot1,nonpipeline,nonpipeline*30\")\n \n (define_insn_reservation \"cell-ldiv\" 64\n-  (and (eq_attr \"type\" \"ldiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"cell\"))\n   \"slot1,nonpipeline,nonpipeline*62\")\n "}, {"sha": "2abdfdb8163a0db8154073c35784ac91326b3d73", "filename": "gcc/config/rs6000/e300c2c3.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fe300c2c3.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fe300c2c3.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe300c2c3.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -110,7 +110,7 @@\n ;; Divide.  We use the average latency time here.  We omit reserving a\n ;; retire unit because of the result automata will be huge.\n (define_insn_reservation \"ppce300c3_divide\" 20\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n        (ior (eq_attr \"cpu\" \"ppce300c2\") (eq_attr \"cpu\" \"ppce300c3\")))\n   \"ppce300c3_decode,ppce300c3_issue+ppce300c3_iu_stage0+ppce300c3_mu_div,\\\n    ppce300c3_mu_div*19\")"}, {"sha": "580c30d13695cac5abf2211fd25ad9068fb0262b", "filename": "gcc/config/rs6000/e500mc.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fe500mc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fe500mc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500mc.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -98,7 +98,7 @@\n \n ;; Divide. We use the average latency time here.\n (define_insn_reservation \"e500mc_divide\" 14\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n        (eq_attr \"cpu\" \"ppce500mc\"))\n   \"e500mc_decode,e500mc_issue+e500mc_mu_stage0+e500mc_mu_div,\\\n    e500mc_mu_div*13\")"}, {"sha": "8844113f32a708cdb21ef2124ea2a436cb758c39", "filename": "gcc/config/rs6000/e500mc64.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fe500mc64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fe500mc64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500mc64.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -106,7 +106,7 @@\n \n ;; Divide. We use the average latency time here.\n (define_insn_reservation \"e500mc64_divide\" 14\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n        (eq_attr \"cpu\" \"ppce500mc64\"))\n   \"e500mc64_decode,e500mc64_issue+e500mc64_mu_stage0+e500mc64_mu_div,\\\n    e500mc64_mu_div*13\")"}, {"sha": "6b257d6578bfb523ebd1dd7958ee996840f77a56", "filename": "gcc/config/rs6000/e5500.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fe5500.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fe5500.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe5500.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -117,13 +117,15 @@\n \n ;; CFX - Divide.\n (define_insn_reservation \"e5500_divide\" 16\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"ppce5500\"))\n   \"e5500_decode,e5500_cfx_stage0+e5500_cfx_div,\\\n    e5500_cfx_div*15\")\n \n (define_insn_reservation \"e5500_divide_d\" 26\n-  (and (eq_attr \"type\" \"ldiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"ppce5500\"))\n   \"e5500_decode,e5500_cfx_stage0+e5500_cfx_div,\\\n    e5500_cfx_div*25\")"}, {"sha": "52565d9727eed38f348330097b76a00ef08b0e91", "filename": "gcc/config/rs6000/e6500.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fe6500.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fe6500.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe6500.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -120,13 +120,15 @@\n \n ;; CFX - Divide.\n (define_insn_reservation \"e6500_divide\" 16\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"ppce6500\"))\n   \"e6500_decode,e6500_cfx_stage0+e6500_cfx_div,\\\n    e6500_cfx_div*15\")\n \n (define_insn_reservation \"e6500_divide_d\" 26\n-  (and (eq_attr \"type\" \"ldiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"ppce6500\"))\n   \"e6500_decode,e6500_cfx_stage0+e6500_cfx_div,\\\n    e6500_cfx_div*25\")"}, {"sha": "7fe889c4be86485b82e903eeeffe106793bdc1c7", "filename": "gcc/config/rs6000/mpc.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fmpc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fmpc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fmpc.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -63,7 +63,7 @@\n \n ; Divide latency varies greatly from 2-11, use 6 as average\n (define_insn_reservation \"mpccore-idiv\" 6\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n        (eq_attr \"cpu\" \"mpccore\"))\n   \"mciu_mpc*6\")\n "}, {"sha": "73eac1fd2fc94aa7ec2c87ff5107fc0b8db2b31c", "filename": "gcc/config/rs6000/power4.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fpower4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fpower4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower4.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -314,12 +314,14 @@\n ; SPR move only executes in first IU.\n ; Integer division only executes in second IU.\n (define_insn_reservation \"power4-idiv\" 36\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"power4\"))\n   \"du1_power4+du2_power4,iu2_power4*35\")\n \n (define_insn_reservation \"power4-ldiv\" 68\n-  (and (eq_attr \"type\" \"ldiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"power4\"))\n   \"du1_power4+du2_power4,iu2_power4*67\")\n "}, {"sha": "8aa477a1c15e72b22ea91edaa0a32e18dd385ed6", "filename": "gcc/config/rs6000/power5.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fpower5.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fpower5.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower5.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -255,12 +255,14 @@\n ; SPR move only executes in first IU.\n ; Integer division only executes in second IU.\n (define_insn_reservation \"power5-idiv\" 36\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"power5\"))\n   \"du1_power5+du2_power5,iu2_power5*35\")\n \n (define_insn_reservation \"power5-ldiv\" 68\n-  (and (eq_attr \"type\" \"ldiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"power5\"))\n   \"du1_power5+du2_power5,iu2_power5*67\")\n "}, {"sha": "26e17f962ea2b872278a685bf3a5e1476ac201a9", "filename": "gcc/config/rs6000/power6.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fpower6.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fpower6.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower6.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -410,7 +410,8 @@\n   \"store_data_bypass_p\")\n \n (define_insn_reservation \"power6-idiv\" 44\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"power6\"))\n   \"(iu1_power6*44+iu2_power6*44+fpu1_power6*44)\\\n   |(iu1_power6*44+iu2_power6*44+fpu2_power6*44)\");\n@@ -425,7 +426,8 @@\n ;  \"store_data_bypass_p\")\n \n (define_insn_reservation \"power6-ldiv\" 56\n-  (and (eq_attr \"type\" \"ldiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"power6\"))\n   \"(iu1_power6*56+iu2_power6*56+fpu1_power6*56)\\\n   |(iu1_power6*56+iu2_power6*56+fpu2_power6*56)\");"}, {"sha": "5527829b84f946b23b6fbe4385d9e3a7f4032ac1", "filename": "gcc/config/rs6000/power7.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fpower7.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fpower7.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower7.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -219,12 +219,14 @@\n   \"DU2F_power7,FXU_power7,nothing*3,FXU_power7\")\n \n (define_insn_reservation \"power7-idiv\" 36\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"power7\"))\n   \"DU2F_power7,iu1_power7*36|iu2_power7*36\")\n \n (define_insn_reservation \"power7-ldiv\" 68\n-  (and (eq_attr \"type\" \"ldiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"power7\"))\n   \"DU2F_power7,iu1_power7*68|iu2_power7*68\")\n "}, {"sha": "99c9ec705e556b8b10e124b9b6c36d354f11edbf", "filename": "gcc/config/rs6000/power8.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fpower8.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Fpower8.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower8.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -250,12 +250,14 @@\n \n ; FXU divides are not pipelined\n (define_insn_reservation \"power8-idiv\" 37\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"power8\"))\n   \"DU_any_power8,fxu0_power8*37|fxu1_power8*37\")\n \n (define_insn_reservation \"power8-ldiv\" 68\n-  (and (eq_attr \"type\" \"ldiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"power8\"))\n   \"DU_any_power8,fxu0_power8*68|fxu1_power8*68\")\n "}, {"sha": "46cf08e8a23aa20de282b8a850da455982af83d0", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 19, "deletions": 26, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -26261,16 +26261,10 @@ rs6000_adjust_cost (rtx insn, rtx link, rtx dep_insn, int cost)\n                         return 17;\n                       break;\n                     }\n-                  case TYPE_IDIV:\n+                  case TYPE_DIV:\n                     {\n                       if (! store_data_bypass_p (dep_insn, insn))\n-                        return 45;\n-                      break;\n-                    }\n-                  case TYPE_LDIV:\n-                    {\n-                      if (! store_data_bypass_p (dep_insn, insn))\n-                        return 57;\n+                        return get_attr_size (dep_insn) == SIZE_32 ? 45 : 57;\n                       break;\n                     }\n                   default:\n@@ -26331,16 +26325,10 @@ rs6000_adjust_cost (rtx insn, rtx link, rtx dep_insn, int cost)\n                         return 17;\n                       break;\n                     }\n-                  case TYPE_IDIV:\n-                    {\n-                      if (set_to_load_agen (dep_insn, insn))\n-                        return 45;\n-                      break;\n-                    }\n-                  case TYPE_LDIV:\n+                  case TYPE_DIV:\n                     {\n                       if (set_to_load_agen (dep_insn, insn))\n-                        return 57;\n+                        return get_attr_size (dep_insn) == SIZE_32 ? 45 : 57;\n                       break;\n                     }\n                   default:\n@@ -26492,7 +26480,7 @@ is_cracked_insn (rtx insn)\n \t  || type == TYPE_COMPARE || type == TYPE_DELAYED_COMPARE\n \t  || (type == TYPE_MUL\n \t      && get_attr_dot (insn) == DOT_YES)\n-\t  || type == TYPE_IDIV || type == TYPE_LDIV\n+\t  || type == TYPE_DIV\n \t  || (type == TYPE_INSERT\n \t      && get_attr_size (insn) == SIZE_32))\n \treturn true;\n@@ -26649,7 +26637,7 @@ rs6000_adjust_priority (rtx insn ATTRIBUTE_UNUSED, int priority)\n \tbreak;\n \n       case TYPE_MUL:\n-      case TYPE_IDIV:\n+      case TYPE_DIV:\n \tfprintf (stderr, \"priority was %#x (%d) before adjustment\\n\",\n \t\t priority, priority);\n \tif (priority >= 0 && priority < 0x01000000)\n@@ -26703,8 +26691,7 @@ is_nonpipeline_insn (rtx insn)\n \n   type = get_attr_type (insn);\n   if (type == TYPE_MUL\n-      || type == TYPE_IDIV\n-      || type == TYPE_LDIV\n+      || type == TYPE_DIV\n       || type == TYPE_SDIV\n       || type == TYPE_DDIV\n       || type == TYPE_SSQRT\n@@ -27303,8 +27290,7 @@ insn_must_be_first_in_group (rtx insn)\n         case TYPE_CR_LOGICAL:\n         case TYPE_MTJMPR:\n         case TYPE_MFJMPR:\n-        case TYPE_IDIV:\n-        case TYPE_LDIV:\n+        case TYPE_DIV:\n         case TYPE_LOAD_L:\n         case TYPE_STORE_C:\n         case TYPE_ISYNC:\n@@ -27325,7 +27311,6 @@ insn_must_be_first_in_group (rtx insn)\n         case TYPE_VAR_SHIFT_ROTATE:\n         case TYPE_TRAP:\n         case TYPE_MUL:\n-        case TYPE_IDIV:\n         case TYPE_INSERT:\n         case TYPE_DELAYED_COMPARE:\n         case TYPE_FPCOMPARE:\n@@ -27338,6 +27323,11 @@ insn_must_be_first_in_group (rtx insn)\n         case TYPE_LOAD_L:\n         case TYPE_STORE_C:\n           return true;\n+        case TYPE_DIV:\n+          if (get_attr_size (insn) == SIZE_32)\n+            return true;\n+          else\n+            break;\n         case TYPE_LOAD:\n         case TYPE_STORE:\n         case TYPE_FPLOAD:\n@@ -27359,8 +27349,7 @@ insn_must_be_first_in_group (rtx insn)\n         case TYPE_MFCR:\n         case TYPE_MFCRF:\n         case TYPE_MTCR:\n-        case TYPE_IDIV:\n-        case TYPE_LDIV:\n+        case TYPE_DIV:\n         case TYPE_COMPARE:\n         case TYPE_DELAYED_COMPARE:\n         case TYPE_VAR_DELAYED_COMPARE:\n@@ -27469,7 +27458,6 @@ insn_must_be_last_in_group (rtx insn)\n       case TYPE_VAR_SHIFT_ROTATE:\n       case TYPE_TRAP:\n       case TYPE_MUL:\n-      case TYPE_IDIV:\n       case TYPE_DELAYED_COMPARE:\n       case TYPE_FPCOMPARE:\n       case TYPE_MFCR:\n@@ -27481,6 +27469,11 @@ insn_must_be_last_in_group (rtx insn)\n       case TYPE_LOAD_L:\n       case TYPE_STORE_C:\n         return true;\n+      case TYPE_DIV:\n+        if (get_attr_size (insn) == SIZE_32)\n+          return true;\n+        else\n+          break;\n       default:\n         break;\n     }"}, {"sha": "0de26c925c448b6d4af40dfafc4f4e248bc12f8f", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -160,7 +160,7 @@\n (define_attr \"type\"\n   \"integer,two,three,\n    shift,var_shift_rotate,insert,\n-   mul,halfmul,idiv,ldiv,\n+   mul,halfmul,div,\n    exts,cntlz,popcnt,isel,\n    load,store,fpload,fpstore,vecload,vecstore,\n    cmp,\n@@ -423,6 +423,9 @@\n \t\t      (V4SI  \"w\")\n \t\t      (V2DI  \"d\")])\n \n+;; How many bits in this mode?\n+(define_mode_attr bits [(QI \"8\") (HI \"16\") (SI \"32\") (DI \"64\")])\n+\n ; DImode bits\n (define_mode_attr dbits [(QI \"56\") (HI \"48\") (SI \"32\")])\n \n@@ -539,11 +542,6 @@\n \t\t\t\t\t (V2DI\t\"X,X,X,X,X\")\n \t\t\t\t\t (V2DF\t\"X,X,X,X,X\")\n \t\t\t\t\t (V1TI\t\"X,X,X,X,X\")])\n-\n-;; Mode attribute to give the correct type for integer divides\n-(define_mode_attr idiv_ldiv [(SI \"idiv\")\n-\t\t\t     (DI \"ldiv\")])\n-\n \f\n ;; Start with fixed-point load and store insns.  Here we put only the more\n ;; complex forms.  Basic data transfer is done later.\n@@ -2747,7 +2745,8 @@\n \t\t  (match_operand:GPR 2 \"gpc_reg_operand\" \"r\")))]\n   \"\"\n   \"div<wd>u %0,%1,%2\"\n-   [(set_attr \"type\" \"<idiv_ldiv>\")])\n+  [(set_attr \"type\" \"div\")\n+   (set_attr \"size\" \"<bits>\")])\n \n \n ;; For powers of two we can do srai/aze for divide and then adjust for\n@@ -2771,7 +2770,8 @@\n \t\t (match_operand:GPR 2 \"gpc_reg_operand\" \"r\")))]\n   \"\"\n   \"div<wd> %0,%1,%2\"\n-  [(set_attr \"type\" \"<idiv_ldiv>\")])\n+  [(set_attr \"type\" \"div\")\n+   (set_attr \"size\" \"<bits>\")])\n \n (define_expand \"mod<mode>3\"\n   [(use (match_operand:GPR 0 \"gpc_reg_operand\" \"\"))\n@@ -15507,7 +15507,8 @@\n \t\t    UNSPEC_DIV_EXTEND))]\n   \"TARGET_POPCNTD\"\n   \"div<wd><div_extend> %0,%1,%2\"\n-  [(set_attr \"type\" \"<idiv_ldiv>\")])\n+  [(set_attr \"type\" \"div\")\n+   (set_attr \"size\" \"<bits>\")])\n \n \f\n ;; Pack/unpack 128-bit floating point types that take 2 scalar registers"}, {"sha": "0260a1c9349202ddf9b63bc94c38bcca5c7ed6f1", "filename": "gcc/config/rs6000/rs64.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Frs64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Frs64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs64.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -86,12 +86,14 @@\n   \"mciu_rs64*34\")\n \n (define_insn_reservation \"rs64a-idiv\" 66\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"rs64a\"))\n   \"mciu_rs64*66\")\n \n (define_insn_reservation \"rs64a-ldiv\" 66\n-  (and (eq_attr \"type\" \"ldiv\")\n+  (and (eq_attr \"type\" \"div\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"rs64a\"))\n   \"mciu_rs64*66\")\n "}, {"sha": "1d33c0f6474b58ad7175166532b8d546f50a42d4", "filename": "gcc/config/rs6000/titan.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Ftitan.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441e02a5c44543f0afba3549b9939e54bafcff11/gcc%2Fconfig%2Frs6000%2Ftitan.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ftitan.md?ref=441e02a5c44543f0afba3549b9939e54bafcff11", "patch": "@@ -67,7 +67,7 @@\n ;; through its latency and initial disptach bottlenecks (i.e. issue\n ;; slots and fxu scheduler availability)\n (define_insn_reservation \"titan_fxu_div\" 34\n-  (and (eq_attr \"type\" \"idiv\")\n+  (and (eq_attr \"type\" \"div\")\n        (eq_attr \"cpu\" \"titan\"))\n   \"titan_issue,titan_fxu_sh\")\n "}]}