{"sha": "fb2c26082deb6a8c52efe232e420462da9d45d52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIyYzI2MDgyZGViNmE4YzUyZWZlMjMyZTQyMDQ2MmRhOWQ0NWQ1Mg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2004-01-16T20:58:27Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2004-01-16T20:58:27Z"}, "message": "inclhack.def (alpha___extern_prefix): Renamed to ...\n\n\t* fixinc/inclhack.def (alpha___extern_prefix): Renamed to ...\n\t(alpha___extern_prefix_sys_stat): ... this.\n\tApply to <sys/mount.h>, too.\n\tTweak to match more variations.\n\t* fixinc/tests/base/sys/stat.h: Adapt for new hackname.\n\n\t* fixinc/inclhack.def (alpha___extern_prefix,\n\talpha___extern_prefix_standards): New hacks to obey\n \t__PRAGMA_EXTERN_PREFIX.\n\t* fixinc/tests/base/testing.h [ALPHA___EXTERN_PREFIX_CHECK]: New\n\ttest.\n\t* fixinc/tests/base/standards.h: Likewise.\n\n\t* fixincl/inclhack.def (alpha_pthread): Tweak to match more\n\tvariations.\n\tNew testcase.\n\t* fixinc/tests/base/pthread.h: Handle it.\n\n\t* fixincl/inclhack.def (bad_lval): Sort file list.\n\tAdd many missing files up to Tru64 UNIX V5.1B.\n\t* gcc/fixinc/tests/base/libgen.h: Renamed to ...\n\t* gcc/fixinc/tests/base/dirent.h: ... this to match new file list\n\torder.\n\n\t* fixinc/fixincl.x: Regenerate.\n\nFrom-SVN: r75994", "tree": {"sha": "023c49cb2eb19b095b6e6c29e1d40769cd90e2e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/023c49cb2eb19b095b6e6c29e1d40769cd90e2e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb2c26082deb6a8c52efe232e420462da9d45d52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb2c26082deb6a8c52efe232e420462da9d45d52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb2c26082deb6a8c52efe232e420462da9d45d52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb2c26082deb6a8c52efe232e420462da9d45d52/comments", "author": null, "committer": null, "parents": [{"sha": "2b8deefadd5a9b8f57a906df6caad580491be8dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b8deefadd5a9b8f57a906df6caad580491be8dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b8deefadd5a9b8f57a906df6caad580491be8dc"}], "stats": {"total": 235, "additions": 215, "deletions": 20}, "files": [{"sha": "dc08858da27cf5223e24de4c2854c66e0f0aec7b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2c26082deb6a8c52efe232e420462da9d45d52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2c26082deb6a8c52efe232e420462da9d45d52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb2c26082deb6a8c52efe232e420462da9d45d52", "patch": "@@ -1,3 +1,31 @@\n+2004-01-16  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* fixinc/inclhack.def (alpha___extern_prefix): Renamed to ...\n+\t(alpha___extern_prefix_sys_stat): ... this.\n+\tApply to <sys/mount.h>, too.\n+\tTweak to match more variations.\n+\t* fixinc/tests/base/sys/stat.h: Adapt for new hackname.\n+\n+\t* fixinc/inclhack.def (alpha___extern_prefix,\n+\talpha___extern_prefix_standards): New hacks to obey \n+ \t__PRAGMA_EXTERN_PREFIX.\n+\t* fixinc/tests/base/testing.h [ALPHA___EXTERN_PREFIX_CHECK]: New\n+\ttest.\n+\t* fixinc/tests/base/standards.h: Likewise.\n+\t\n+\t* fixincl/inclhack.def (alpha_pthread): Tweak to match more\n+\tvariations.\n+\tNew testcase.\n+\t* fixinc/tests/base/pthread.h: Handle it.\n+\t\n+\t* fixincl/inclhack.def (bad_lval): Sort file list.\n+\tAdd many missing files up to Tru64 UNIX V5.1B.\n+\t* gcc/fixinc/tests/base/libgen.h: Renamed to ...\n+\t* gcc/fixinc/tests/base/dirent.h: ... this to match new file list\n+\torder.\n+\t\n+\t* fixinc/fixincl.x: Regenerate.\n+\n 2004-01-16  Mark Mitchell  <mark@codesourcery.com>\n \n \t* version.c (version_string): Change to 3.5.0."}, {"sha": "94caee7dd60b530362d6f274f8cdc488abab9d45", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 100, "deletions": 13, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2c26082deb6a8c52efe232e420462da9d45d52/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2c26082deb6a8c52efe232e420462da9d45d52/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=fb2c26082deb6a8c52efe232e420462da9d45d52", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Thursday December 18, 2003 at 01:49:23 PM PST\n+ * It has been AutoGen-ed  Tuesday December 23, 2003 at 01:59:31 PM MET\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Thu Dec 18 13:49:23 PST 2003\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Tue Dec 23 13:59:32 MET 2003\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 163 fixup descriptions.\n+ * This file contains 165 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -727,20 +727,20 @@ tSCC zAlpha___Extern_PrefixName[] =\n /*\n  *  File name selection pattern\n  */\n-tSCC zAlpha___Extern_PrefixList[] =\n-  \"|sys/stat.h|\";\n+#define zAlpha___Extern_PrefixList (char*)NULL\n /*\n  *  Machine/OS name selection pattern\n  */\n tSCC* apzAlpha___Extern_PrefixMachs[] = {\n-        \"alpha*-dec-osf5*\",\n+        \"alpha*-dec-osf*\",\n         (const char*)NULL };\n \n /*\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zAlpha___Extern_PrefixSelect0[] =\n-       \"#[ \\t]*if[ \\t]*defined\\\\(__DECC\\\\)\";\n+       \"(.*)(defined\\\\(__DECC\\\\)|def[ \\t]*__DECC)[ \\t]*\\n\\\n+(#[ \\t]*pragma[ \\t]*extern_prefix.*)\";\n \n #define    ALPHA___EXTERN_PREFIX_TEST_CT  1\n static tTestDesc aAlpha___Extern_PrefixTests[] = {\n@@ -750,6 +750,81 @@ static tTestDesc aAlpha___Extern_PrefixTests[] = {\n  *  Fix Command Arguments for Alpha___Extern_Prefix\n  */\n static const char* apzAlpha___Extern_PrefixPatch[] = {\n+    \"format\",\n+    \"%1 (defined(__DECC) || defined(__PRAGMA_EXTERN_PREFIX))\\n\\\n+%3\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Alpha___Extern_Prefix_Standards fix\n+ */\n+tSCC zAlpha___Extern_Prefix_StandardsName[] =\n+     \"alpha___extern_prefix_standards\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAlpha___Extern_Prefix_StandardsList[] =\n+  \"|standards.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAlpha___Extern_Prefix_StandardsMachs[] = {\n+        \"alpha*-dec-osf*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAlpha___Extern_Prefix_StandardsSelect0[] =\n+       \".*!defined\\\\(_LIBC_POLLUTION_H_\\\\) && !defined\\\\(__DECC\\\\)\";\n+\n+#define    ALPHA___EXTERN_PREFIX_STANDARDS_TEST_CT  1\n+static tTestDesc aAlpha___Extern_Prefix_StandardsTests[] = {\n+  { TT_EGREP,    zAlpha___Extern_Prefix_StandardsSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Alpha___Extern_Prefix_Standards\n+ */\n+static const char* apzAlpha___Extern_Prefix_StandardsPatch[] = {\n+    \"format\",\n+    \"%0 && !defined(__PRAGMA_EXTERN_PREFIX)\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Alpha___Extern_Prefix_Sys_Stat fix\n+ */\n+tSCC zAlpha___Extern_Prefix_Sys_StatName[] =\n+     \"alpha___extern_prefix_sys_stat\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAlpha___Extern_Prefix_Sys_StatList[] =\n+  \"|sys/stat.h|sys/mount.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAlpha___Extern_Prefix_Sys_StatMachs[] = {\n+        \"alpha*-dec-osf5*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAlpha___Extern_Prefix_Sys_StatSelect0[] =\n+       \"#[ \\t]*if[ \\t]*defined\\\\(__DECC\\\\)\";\n+\n+#define    ALPHA___EXTERN_PREFIX_SYS_STAT_TEST_CT  1\n+static tTestDesc aAlpha___Extern_Prefix_Sys_StatTests[] = {\n+  { TT_EGREP,    zAlpha___Extern_Prefix_Sys_StatSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Alpha___Extern_Prefix_Sys_Stat\n+ */\n+static const char* apzAlpha___Extern_Prefix_Sys_StatPatch[] = {\n     \"format\",\n     \"%0 || defined(__PRAGMA_EXTERN_PREFIX)\",\n     (char*)NULL };\n@@ -882,7 +957,7 @@ tSCC* apzAlpha_PthreadMachs[] = {\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zAlpha_PthreadSelect0[] =\n-       \"(#[ \\t]*if defined \\\\(_PTHREAD_ENV_DECC\\\\) || defined \\\\(_PTHREAD_ENV_EPCC\\\\))\\n\\\n+       \"((#[ \\t]*if)([ \\t]*defined[ \\t]*\\\\(_PTHREAD_ENV_DECC\\\\)|def _PTHREAD_ENV_DECC)(.*))\\n\\\n (#[ \\t]*define _PTHREAD_USE_PTDNAM_)\";\n \n #define    ALPHA_PTHREAD_TEST_CT  1\n@@ -894,8 +969,8 @@ static tTestDesc aAlpha_PthreadTests[] = {\n  */\n static const char* apzAlpha_PthreadPatch[] = {\n     \"format\",\n-    \"%1 || defined (__PRAGMA_EXTERN_PREFIX)\\n\\\n-%2\",\n+    \"%2 defined (_PTHREAD_ENV_DECC)%4 || defined (__PRAGMA_EXTERN_PREFIX)\\n\\\n+%5\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1159,7 +1234,7 @@ tSCC zBad_LvalName[] =\n  *  File name selection pattern\n  */\n tSCC zBad_LvalList[] =\n-  \"|libgen.h|dirent.h|ftw.h|grp.h|ndbm.h|pthread.h|pwd.h|signal.h|standards.h|stdlib.h|string.h|stropts.h|time.h|unistd.h|\";\n+  \"|dirent.h|ftw.h|grp.h|libgen.h|ndbm.h|pthread.h|pwd.h|signal.h|standards.h|stdio.h|stdlib.h|string.h|stropts.h|sys/mount.h|sys/resource.h|sys/signal.h|sys/socket.h|sys/stat.h|sys/stropts.h|sys/uio.h|time.h|unistd.h|utmp.h|utmpx.h|wchar.h|\";\n /*\n  *  Machine/OS name selection pattern\n  */\n@@ -6453,9 +6528,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          183\n+#define REGEX_COUNT          185\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            163\n+#define FIX_COUNT            165\n \n /*\n  *  Enumerate the fixes\n@@ -6476,6 +6551,8 @@ typedef enum {\n     AIX_VOLATILE_FIXIDX,\n     ALPHA___ASSERT_FIXIDX,\n     ALPHA___EXTERN_PREFIX_FIXIDX,\n+    ALPHA___EXTERN_PREFIX_STANDARDS_FIXIDX,\n+    ALPHA___EXTERN_PREFIX_SYS_STAT_FIXIDX,\n     ALPHA_ASSERT_FIXIDX,\n     ALPHA_GETOPT_FIXIDX,\n     ALPHA_PARENS_FIXIDX,\n@@ -6702,6 +6779,16 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ALPHA___EXTERN_PREFIX_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAlpha___Extern_PrefixTests,   apzAlpha___Extern_PrefixPatch, 0 },\n \n+  {  zAlpha___Extern_Prefix_StandardsName,    zAlpha___Extern_Prefix_StandardsList,\n+     apzAlpha___Extern_Prefix_StandardsMachs,\n+     ALPHA___EXTERN_PREFIX_STANDARDS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAlpha___Extern_Prefix_StandardsTests,   apzAlpha___Extern_Prefix_StandardsPatch, 0 },\n+\n+  {  zAlpha___Extern_Prefix_Sys_StatName,    zAlpha___Extern_Prefix_Sys_StatList,\n+     apzAlpha___Extern_Prefix_Sys_StatMachs,\n+     ALPHA___EXTERN_PREFIX_SYS_STAT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAlpha___Extern_Prefix_Sys_StatTests,   apzAlpha___Extern_Prefix_Sys_StatPatch, 0 },\n+\n   {  zAlpha_AssertName,    zAlpha_AssertList,\n      apzAlpha_AssertMachs,\n      ALPHA_ASSERT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "68fbaf5151a9ee8ca92bbf7b12865a404f60304c", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 57, "deletions": 4, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2c26082deb6a8c52efe232e420462da9d45d52/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2c26082deb6a8c52efe232e420462da9d45d52/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=fb2c26082deb6a8c52efe232e420462da9d45d52", "patch": "@@ -523,11 +523,50 @@ fix = {\n \n \n /*\n- *  Obey __PRAGMA_EXTERN_PREFIX for Tru64 UNIX V5 <sys/stat.h>.\n+ *  Obey __PRAGMA_EXTERN_PREFIX for Tru64 UNIX V4/5 headers.\n  */\n fix = {\n     hackname  = alpha___extern_prefix;\n+    select    = \"(.*)(defined\\\\(__DECC\\\\)|def[ \\t]*__DECC)[ \\t]*\\n(#[ \\t]*pragma[ \\t]*extern_prefix.*)\";\n+\n+    mach      = \"alpha*-dec-osf*\";\n+    c_fix     = format;\n+    c_fix_arg = \"%1 (defined(__DECC) || defined(__PRAGMA_EXTERN_PREFIX))\\n%3\";\n+\n+    test_text = \"#ifdef  __DECC\\n\"\n+\t\t\"#pragma extern_prefix \\\"_P\\\"\\n\"\n+\t\t\"#   if defined(__DECC)\\n\"\n+\t\t\"#     pragma extern_prefix \\\"_E\\\"\\n\"\n+\t\t\"# if !defined(_LIBC_POLLUTION_H_) && defined(__DECC)\\n\"\n+\t\t\"#  pragma extern_prefix \\\"\\\"\";\n+};\n+\n+\n+/*\n+ *  Obey __PRAGMA_EXTERN_PREFIX for Tru64 UNIX V4/5 <standards.h>.\n+ */\n+fix = {\n+    hackname  = alpha___extern_prefix_standards;\n+    files     = standards.h;\n+    select    = \".*!defined\\\\(_LIBC_POLLUTION_H_\\\\) && !defined\\\\(__DECC\\\\)\";\n+\n+    mach      = \"alpha*-dec-osf*\";\n+    c_fix     = format;\n+    c_fix_arg = \"%0 && !defined(__PRAGMA_EXTERN_PREFIX)\";\n+\n+    test_text = \"#if (_ISO_C_SOURCE>=19990L) && !defined(_LIBC_POLLUTION_H_) && !defined(__DECC)\";\n+};\n+\n+\n+/*\n+ *  Obey __PRAGMA_EXTERN_PREFIX for Tru64 UNIX V5 <sys/mount.h> and\n+ *  <sys/stat.h>.  The tests for __DECC are special in various ways, so\n+ *  alpha__extern_prefix cannot be used.\n+ */\n+fix = {\n+    hackname  = alpha___extern_prefix_sys_stat;\n     files     = sys/stat.h;\n+    files     = sys/mount.h;\n     select    = \"#[ \\t]*if[ \\t]*defined\\\\(__DECC\\\\)\";\n \n     mach      = \"alpha*-dec-osf5*\";\n@@ -585,14 +624,17 @@ fix = {\n fix = {\n     hackname  = alpha_pthread;\n     files     = pthread.h;\n-    select    = \"(#[ \\t]*if defined \\\\(_PTHREAD_ENV_DECC\\\\) || defined \\\\(_PTHREAD_ENV_EPCC\\\\))\\n\"\n+    select    = \"((#[ \\t]*if)([ \\t]*defined[ \\t]*\\\\(_PTHREAD_ENV_DECC\\\\)|def _PTHREAD_ENV_DECC)(.*))\\n\"\n \t\t\"(#[ \\t]*define _PTHREAD_USE_PTDNAM_)\";\n \n     mach      = \"alpha*-dec-osf*\";\n     c_fix     = format;\n-    c_fix_arg = \"%1 || defined (__PRAGMA_EXTERN_PREFIX)\\n%2\";\n+    c_fix_arg = \"%2 defined (_PTHREAD_ENV_DECC)%4 || defined (__PRAGMA_EXTERN_PREFIX)\\n%5\";\n \n     test_text = \"#  if defined (_PTHREAD_ENV_DECC) || defined (_PTHREAD_ENV_EPCC)\\n\"\n+\t\t\"#   define _PTHREAD_USE_PTDNAM_\\n\"\n+\t\t\"#  endif\\n\"\n+\t\t\"#  ifdef _PTHREAD_ENV_DECC\\n\"\n \t\t\"#   define _PTHREAD_USE_PTDNAM_\\n\"\n \t\t\"#  endif\";\n };\n@@ -734,20 +776,31 @@ fix = {\n \n     select   = \"^[ \\t]*#[ \\t]*pragma[ \\t]+extern_prefix\";\n \n-    files    = libgen.h;\n     files    = dirent.h;\n     files    = ftw.h;\n     files    = grp.h;\n+    files    = libgen.h;\n     files    = ndbm.h;\n     files    = pthread.h;\n     files    = pwd.h;\n     files    = signal.h;\n     files    = standards.h;\n+    files    = stdio.h;\n     files    = stdlib.h;\n     files    = string.h;\n     files    = stropts.h;\n+    files    = sys/mount.h;\n+    files    = sys/resource.h;\n+    files    = sys/signal.h;\n+    files    = sys/socket.h;\n+    files    = sys/stat.h;\n+    files    = sys/stropts.h;\n+    files    = sys/uio.h;\n     files    = time.h;\n     files    = unistd.h;\n+    files    = utmp.h;\n+    files    = utmpx.h;\n+    files    = wchar.h;\n \n     sed      =\n         \"s/^[ \\t]*#[ \\t]*define[ \\t][ \\t]*\\\\([^(]*\\\\)\\\\(([^)]*)\\\\)[ \\t]*\""}, {"sha": "55a76d1bd4320007861099464b5de504da5e7f68", "filename": "gcc/fixinc/tests/base/dirent.h", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2c26082deb6a8c52efe232e420462da9d45d52/gcc%2Ffixinc%2Ftests%2Fbase%2Fdirent.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2c26082deb6a8c52efe232e420462da9d45d52/gcc%2Ffixinc%2Ftests%2Fbase%2Fdirent.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fdirent.h?ref=fb2c26082deb6a8c52efe232e420462da9d45d52", "patch": "@@ -2,7 +2,7 @@\n \n     It has been auto-edited by fixincludes from:\n \n-\t\"fixinc/tests/inc/libgen.h\"\n+\t\"fixinc/tests/inc/dirent.h\"\n \n     This had to be done to correct non-standard usages in the\n     original, manufacturer supplied header file.  */", "previous_filename": "gcc/fixinc/tests/base/libgen.h"}, {"sha": "385c055ec83d7a4504218b4c3a154e09b180a98a", "filename": "gcc/fixinc/tests/base/pthread.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2c26082deb6a8c52efe232e420462da9d45d52/gcc%2Ffixinc%2Ftests%2Fbase%2Fpthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2c26082deb6a8c52efe232e420462da9d45d52/gcc%2Ffixinc%2Ftests%2Fbase%2Fpthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fpthread.h?ref=fb2c26082deb6a8c52efe232e420462da9d45d52", "patch": "@@ -19,6 +19,9 @@\n #  if defined (_PTHREAD_ENV_DECC) || defined (_PTHREAD_ENV_EPCC) || defined (__PRAGMA_EXTERN_PREFIX)\n #   define _PTHREAD_USE_PTDNAM_\n #  endif\n+#  if defined (_PTHREAD_ENV_DECC) || defined (__PRAGMA_EXTERN_PREFIX)\n+#   define _PTHREAD_USE_PTDNAM_\n+#  endif\n #endif  /* ALPHA_PTHREAD_CHECK */\n \n "}, {"sha": "fccf8063fa39d898e8215df27fd402901fc0acba", "filename": "gcc/fixinc/tests/base/standards.h", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2c26082deb6a8c52efe232e420462da9d45d52/gcc%2Ffixinc%2Ftests%2Fbase%2Fstandards.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2c26082deb6a8c52efe232e420462da9d45d52/gcc%2Ffixinc%2Ftests%2Fbase%2Fstandards.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fstandards.h?ref=fb2c26082deb6a8c52efe232e420462da9d45d52", "patch": "@@ -0,0 +1,14 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/standards.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( ALPHA___EXTERN_PREFIX_STANDARDS_CHECK )\n+#if (_ISO_C_SOURCE>=19990L) && !defined(_LIBC_POLLUTION_H_) && !defined(__DECC) && !defined(__PRAGMA_EXTERN_PREFIX)\n+#endif  /* ALPHA___EXTERN_PREFIX_STANDARDS_CHECK */"}, {"sha": "c2b2fb6d5649b91fca311378240ec050bbbbd42d", "filename": "gcc/fixinc/tests/base/sys/stat.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2c26082deb6a8c52efe232e420462da9d45d52/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Fstat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2c26082deb6a8c52efe232e420462da9d45d52/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Fstat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Fstat.h?ref=fb2c26082deb6a8c52efe232e420462da9d45d52", "patch": "@@ -9,9 +9,9 @@\n \n \n \n-#if defined( ALPHA___EXTERN_PREFIX_CHECK )\n+#if defined( ALPHA___EXTERN_PREFIX_SYS_STAT_CHECK )\n #   if defined(__DECC) || defined(__PRAGMA_EXTERN_PREFIX)\n-#endif  /* ALPHA___EXTERN_PREFIX_CHECK */\n+#endif  /* ALPHA___EXTERN_PREFIX_SYS_STAT_CHECK */\n \n \n #if defined( RS6000_FCHMOD_CHECK )"}, {"sha": "81caa065e67404491cb8ebb37e3611af5c1eb5d4", "filename": "gcc/fixinc/tests/base/testing.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2c26082deb6a8c52efe232e420462da9d45d52/gcc%2Ffixinc%2Ftests%2Fbase%2Ftesting.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2c26082deb6a8c52efe232e420462da9d45d52/gcc%2Ffixinc%2Ftests%2Fbase%2Ftesting.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Ftesting.h?ref=fb2c26082deb6a8c52efe232e420462da9d45d52", "patch": "@@ -9,6 +9,16 @@\n \n \n \n+#if defined( ALPHA___EXTERN_PREFIX_CHECK )\n+#if (defined(__DECC) || defined(__PRAGMA_EXTERN_PREFIX))\n+#pragma extern_prefix \"_P\"\n+#   if  (defined(__DECC) || defined(__PRAGMA_EXTERN_PREFIX))\n+#     pragma extern_prefix \"_E\"\n+# if !defined(_LIBC_POLLUTION_H_) &&  (defined(__DECC) || defined(__PRAGMA_EXTERN_PREFIX))\n+#  pragma extern_prefix \"\"\n+#endif  /* ALPHA___EXTERN_PREFIX_CHECK */\n+\n+\n #if defined( AVOID_WCHAR_T_TYPE_CHECK )\n #ifndef __cplusplus\n typedef unsigned short\twchar_t \t;"}]}