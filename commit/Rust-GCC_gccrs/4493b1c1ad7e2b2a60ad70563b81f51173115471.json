{"sha": "4493b1c1ad7e2b2a60ad70563b81f51173115471", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ5M2IxYzFhZDdlMmIyYTYwYWQ3MDU2M2I4MWY1MTE3MzExNTQ3MQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-03-26T00:16:25Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-03-26T00:16:25Z"}, "message": "Daily bump.", "tree": {"sha": "14422523929ed5a5836aea876244340a81bff892", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14422523929ed5a5836aea876244340a81bff892"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4493b1c1ad7e2b2a60ad70563b81f51173115471", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4493b1c1ad7e2b2a60ad70563b81f51173115471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4493b1c1ad7e2b2a60ad70563b81f51173115471", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4493b1c1ad7e2b2a60ad70563b81f51173115471/comments", "author": null, "committer": null, "parents": [{"sha": "e88ca9f42306e291d3cb2d34dd7f2b017a3c1e52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e88ca9f42306e291d3cb2d34dd7f2b017a3c1e52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e88ca9f42306e291d3cb2d34dd7f2b017a3c1e52"}], "stats": {"total": 296, "additions": 295, "deletions": 1}, "files": [{"sha": "cb823ef29f1a94e20248a6600184cc75266172c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4493b1c1ad7e2b2a60ad70563b81f51173115471/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4493b1c1ad7e2b2a60ad70563b81f51173115471/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4493b1c1ad7e2b2a60ad70563b81f51173115471", "patch": "@@ -1,3 +1,49 @@\n+2021-03-25  Stam Markianos-Wright  <stam.markianos-wright@arm.com>\n+\n+\tPR tree-optimization/96974\n+\t* tree-vect-stmts.c (vect_get_vector_types_for_stmt): Replace assert\n+\twith graceful exit.\n+\n+2021-03-25  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tRevert:\n+\t2021-03-25  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/98209\n+\tPR target/99744\n+\t* config/i386/i386.c (ix86_can_inline_p): Don't check ISA for\n+\talways_inline in system headers.\n+\n+2021-03-25  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* tree-vect-loop.c (vect_model_reduction_cost): Init inside_cost.\n+\n+2021-03-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99565\n+\t* tree-core.h (enum operand_equal_flag): Add OEP_ADDRESS_OF_SAME_FIELD.\n+\t* fold-const.c (operand_compare::operand_equal_p): Don't compare\n+\tfield offsets if OEP_ADDRESS_OF_SAME_FIELD.\n+\n+2021-03-25  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/98209\n+\tPR target/99744\n+\t* config/i386/i386.c (ix86_can_inline_p): Don't check ISA for\n+\talways_inline in system headers.\n+\n+2021-03-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/99746\n+\t* tree-vect-slp-patterns.c (complex_pattern::build): Do not mark\n+\tthe scalar stmt as patterned.  Instead set up required things\n+\tmanually.\n+\n+2021-03-25  Xionghu Luo  <luoxhu@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (power8_costs): Change l2 cache\n+\tfrom 256 to 512.\n+\n 2021-03-24  Martin Liska  <mliska@suse.cz>\n \n \tPR target/99753"}, {"sha": "782e9649ba5269d95f05276b325c9dc2b1b445c6", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4493b1c1ad7e2b2a60ad70563b81f51173115471/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4493b1c1ad7e2b2a60ad70563b81f51173115471/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=4493b1c1ad7e2b2a60ad70563b81f51173115471", "patch": "@@ -1 +1 @@\n-20210325\n+20210326"}, {"sha": "7084246c45a2bd52989dd5cfb090753eaf361bf2", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4493b1c1ad7e2b2a60ad70563b81f51173115471/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4493b1c1ad7e2b2a60ad70563b81f51173115471/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=4493b1c1ad7e2b2a60ad70563b81f51173115471", "patch": "@@ -1,3 +1,18 @@\n+2021-03-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/93695\n+\tPR analyzer/99044\n+\tPR analyzer/99716\n+\t* engine.cc (exploded_node::on_stmt): Clear sm-state involving\n+\tan SSA name at the def-stmt of that SSA name.\n+\t* program-state.cc (sm_state_map::purge_state_involving): New.\n+\t* program-state.h (sm_state_map::purge_state_involving): New decl.\n+\t* region-model.cc (selftest::test_involves_p): New.\n+\t(selftest::analyzer_region_model_cc_tests): Call it.\n+\t* svalue.cc (class involvement_visitor): New class\n+\t(svalue::involves_p): New.\n+\t* svalue.h (svalue::involves_p): New decl.\n+\n 2021-03-19  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/99614"}, {"sha": "7d6dab2d63dbf18615df3c5c683c3f66292f1077", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4493b1c1ad7e2b2a60ad70563b81f51173115471/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4493b1c1ad7e2b2a60ad70563b81f51173115471/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=4493b1c1ad7e2b2a60ad70563b81f51173115471", "patch": "@@ -1,3 +1,9 @@\n+2021-03-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99565\n+\t* c-warn.c (do_warn_duplicated_branches): Pass also\n+\tOEP_ADDRESS_OF_SAME_FIELD to operand_equal_p.\n+\n 2021-03-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/99230"}, {"sha": "c4d46058f9c83468868cd0961c4a26dd12d33f53", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4493b1c1ad7e2b2a60ad70563b81f51173115471/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4493b1c1ad7e2b2a60ad70563b81f51173115471/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=4493b1c1ad7e2b2a60ad70563b81f51173115471", "patch": "@@ -1,3 +1,9 @@\n+2021-03-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99565\n+\t* c-typeck.c (build_conditional_expr): Pass OEP_ADDRESS_OF_SAME_FIELD\n+\tto operand_equal_p.\n+\n 2021-03-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/99588"}, {"sha": "ba750a264cb2907655632a2b44d11bf7aea2da68", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4493b1c1ad7e2b2a60ad70563b81f51173115471/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4493b1c1ad7e2b2a60ad70563b81f51173115471/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4493b1c1ad7e2b2a60ad70563b81f51173115471", "patch": "@@ -1,3 +1,41 @@\n+2021-03-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99672\n+\t* parser.c (cp_parser_postfix_expression): For calls, create\n+\tcombined_loc and temporarily set input_location to it before\n+\tcalling finish_call_expr.\n+\n+2021-03-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/94751\n+\t* call.c (build_over_call): Maybe call mark_used in case\n+\tdeduce_inheriting_ctor fails and return error_mark_node.\n+\t* cp-tree.h (deduce_inheriting_ctor): Adjust declaration.\n+\t* method.c (deduce_inheriting_ctor): Return bool if the deduction\n+\tfails.\n+\t(implicitly_declare_fn): If raises is error_mark_node, call\n+\tsynthesized_method_walk with diag being true.\n+\n+2021-03-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99745\n+\t* decl2.c (grokbitfield): Diagnose bitfields containing bare parameter\n+\tpacks and don't set DECL_BIT_FIELD_REPRESENTATIVE in that case.\n+\n+2021-03-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/99331\n+\t* call.c (build_converted_constant_expr_internal): Don't emit\n+\t-Wconversion warnings.\n+\n+2021-03-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99565\n+\t* call.c (build_conditional_expr_1): Pass OEP_ADDRESS_OF_SAME_FIELD\n+\tto operand_equal_p.\n+\t* cvt.c (convert_to_void): Preserve location_t on COND_EXPR or\n+\tor COMPOUND_EXPR.\n+\n 2021-03-23  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/99283"}, {"sha": "63b4da679c62ebeb763e8c48bdb1b8cef9377caa", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4493b1c1ad7e2b2a60ad70563b81f51173115471/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4493b1c1ad7e2b2a60ad70563b81f51173115471/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=4493b1c1ad7e2b2a60ad70563b81f51173115471", "patch": "@@ -1,3 +1,7 @@\n+2021-03-25  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* fr.po: Update.\n+\n 2021-03-23  Joseph Myers  <joseph@codesourcery.com>\n \n \t* be.po, da.po, de.po, el.po, es.po, fi.po, fr.po, hr.po, id.po,"}, {"sha": "45af4ac44fae94358a18bce21c96674768cb762c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4493b1c1ad7e2b2a60ad70563b81f51173115471/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4493b1c1ad7e2b2a60ad70563b81f51173115471/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4493b1c1ad7e2b2a60ad70563b81f51173115471", "patch": "@@ -1,3 +1,99 @@\n+2021-03-25  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/55060\n+\t* gcc.dg/uninit-pr55060.c: New.\n+\n+2021-03-25  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/48483\n+\t* g++.dg/warn/uninit-pr48483.C: New test.\n+\n+2021-03-25  Martin Sebor  <msebor@redhat.com>\n+\n+\t* gcc.dg/uninit-pr44547.c: New.\n+\n+2021-03-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99672\n+\t* g++.dg/concepts/diagnostic2.C: Adjust expected caret line.\n+\t* g++.dg/cpp1y/builtin_location.C (f4, n6): Move #line directives\n+\tto match locus changes.\n+\t* g++.dg/cpp2a/srcloc1.C: Adjust expected column numbers.\n+\t* g++.dg/cpp2a/srcloc2.C: Likewise.\n+\t* g++.dg/cpp2a/srcloc15.C: Likewise.\n+\t* g++.dg/cpp2a/srcloc16.C: Likewise.\n+\t* g++.dg/cpp2a/srcloc19.C: New test.\n+\t* g++.dg/modules/adhoc-1_b.C: Adjust expected column numbers\n+\tand caret line.\n+\t* g++.dg/modules/macloc-1_c.C: Adjust expected column numbers.\n+\t* g++.dg/modules/macloc-1_d.C: Likewise.\n+\t* g++.dg/plugin/diagnostic-test-expressions-1.C: Adjust expected\n+\tcaret line.\n+\n+2021-03-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/94751\n+\t* g++.dg/cpp0x/inh-ctor37.C: New test.\n+\n+2021-03-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99745\n+\t* g++.dg/cpp0x/variadic181.C: New test.\n+\n+2021-03-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/99331\n+\t* g++.dg/warn/Wconversion5.C: New test.\n+\n+2021-03-25  Stam Markianos-Wright  <stam.markianos-wright@arm.com>\n+\n+\tPR tree-optimization/96974\n+\t* g++.target/aarch64/sve/pr96974.C: New test.\n+\n+2021-03-25  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tRevert:\n+\t2021-03-25  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/98209\n+\tPR target/99744\n+\t* gcc.target/i386/pr98209.c: New test.\n+\t* gcc.target/i386/pr99744-1.c: Likewise.\n+\t* gcc.target/i386/pr99744-2.c: Likewise.\n+\n+2021-03-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99565\n+\t* g++.dg/warn/Wduplicated-branches6.C: New test.\n+\t* g++.dg/warn/Wduplicated-branches7.C: New test.\n+\n+2021-03-25  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/98209\n+\tPR target/99744\n+\t* gcc.target/i386/pr98209.c: New test.\n+\t* gcc.target/i386/pr99744-1.c: Likewise.\n+\t* gcc.target/i386/pr99744-2.c: Likewise.\n+\n+2021-03-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/99746\n+\t* gfortran.dg/vect/pr99746.f90: New testcase.\n+\n+2021-03-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/93695\n+\tPR analyzer/99044\n+\tPR analyzer/99716\n+\t* gcc.dg/analyzer/attr-malloc-CVE-2019-19078-usb-leak.c: Remove\n+\txfail.\n+\t* gcc.dg/analyzer/pr93695-1.c: New test.\n+\t* gcc.dg/analyzer/pr99044-1.c: New test.\n+\t* gcc.dg/analyzer/pr99044-2.c: New test.\n+\t* gcc.dg/analyzer/pr99716-1.c: New test.\n+\t* gcc.dg/analyzer/pr99716-2.c: New test.\n+\t* gcc.dg/analyzer/pr99716-3.c: New test.\n+\n 2021-03-24  Martin Liska  <mliska@suse.cz>\n \n \tPR target/99753"}, {"sha": "6ac3472b4718c92a12366e8ded1de10e0188eb1f", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4493b1c1ad7e2b2a60ad70563b81f51173115471/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4493b1c1ad7e2b2a60ad70563b81f51173115471/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=4493b1c1ad7e2b2a60ad70563b81f51173115471", "patch": "@@ -1,3 +1,25 @@\n+2021-03-25  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* plugin/plugin-gcn.c (init_environment_variables): Don't prepend\n+\tthe 'HSA_RUNTIME_LIB' path to 'libhsa-runtime64.so'.\n+\t* plugin/configfrag.ac (HSA_RUNTIME_LIB): Clean up.\n+\t* config.h.in: Regenerate.\n+\t* configure: Likewise.\n+\n+2021-03-25  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR target/99555\n+\t* testsuite/lib/on_device_arch.c: New file.\n+\t* testsuite/libgomp.c/pr99555-1.c: Likewise.\n+\t* testsuite/libgomp.c-c++-common/task-detach-6.c: Until resolved,\n+\tskip for nvptx offloading, with error status.\n+\t* testsuite/libgomp.fortran/task-detach-6.f90: Likewise.\n+\n+2021-03-25  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-fortran/derivedtypes-arrays-1.f90:\n+\tOpenACC 'serial' construct diagnostic for nvptx offloading.\n+\n 2021-03-15  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR c++/99509"}, {"sha": "c9e7bc8fbd60f8d181d290299730f460fa2a71bd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4493b1c1ad7e2b2a60ad70563b81f51173115471/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4493b1c1ad7e2b2a60ad70563b81f51173115471/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4493b1c1ad7e2b2a60ad70563b81f51173115471", "patch": "@@ -1,3 +1,64 @@\n+2021-03-25  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* include/debug/string\n+\t(basic_string(const basic_string&, const _Alloc&)): Define even if !_GLIBCXX_USE_CXX11_ABI.\n+\t(basic_string(basic_string&&, const _Alloc&)): Likewise and add noexcept qualification.\n+\t(basic_string<>::erase): Adapt to take __const_iterator.\n+\t(basic_string(const _CharT*, const _Allocator&)): Remove assign call.\n+\t(basic_string<>::insert(const_iterator, _InputIte, _InputIte)): Try to\n+\tremove iterator debug layer even if !_GLIBCXX_USE_CXX11_ABI.\n+\t[_GLIBCXX_USE_CHAR8_T] (__gnu_debug::u8string): New.\n+\t(__gnu_debug::u16string, __gnu_debug::u32string): New.\n+\t(std::hash<__gnu_debug::basic_string<>>): New partial specialization.\n+\t(std::__is_fast_hash<__gnu_debug::basic_string<>>): Likewise.\n+\t* testsuite/util/exception/safety.h\n+\t(erase_base<__gnu_debug::basic_string<>>): New partial specialization.\n+\t(insert_base<__gnu_debug::basic_string<>>): Likewise.\n+\t* testsuite/util/testsuite_container_traits.h (traits<__gnu_debug::basic_string<>>):\n+\tNew partial specialization.\n+\t* testsuite/21_strings/basic_string/hash/debug.cc: New test.\n+\t* testsuite/21_strings/basic_string/requirements/citerators.cc:\n+\tAdd test on __gnu_debug::string.\n+\t* testsuite/21_strings/basic_string/requirements/dr438/constructor.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/requirements/exception/basic.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/requirements/exception/generation_prohibited.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/requirements/exception/propagation_consistent.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/requirements/explicit_instantiation/char/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/requirements/explicit_instantiation/char16_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/requirements/explicit_instantiation/char32_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/requirements/explicit_instantiation/char8_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/requirements/explicit_instantiation/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/requirements/typedefs.cc: Likewise.\n+\n+2021-03-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99672\n+\t* testsuite/18_support/source_location/consteval.cc (main): Adjust\n+\texpected column numbers.\n+\t* testsuite/18_support/source_location/1.cc (main): Likewise.\n+\n+2021-03-25  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* libsupc++/new_opa.cc [!_GLIBCXX_HOSTED]: Declare malloc.\n+\n+2021-03-25  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/util/exception/safety.h (setup_base::generate):\n+\tSupport seeding random engine.\n+\t(erase_point, erase_range): Adjust range of random numbers to\n+\tensure dereferenceable iterators are used where required.\n+\t(generation_prohibited::run): Do not try to erase from empty\n+\tcontainers.\n+\t* testsuite/util/testsuite_containergen.h (test_containers):\n+\tSupport seeding random engine.\n+\n 2021-03-23  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/std/ranges/adaptors/reverse.cc: Replace duplicated"}]}