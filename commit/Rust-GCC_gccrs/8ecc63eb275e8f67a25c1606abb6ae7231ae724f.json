{"sha": "8ecc63eb275e8f67a25c1606abb6ae7231ae724f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVjYzYzZWIyNzVlOGY2N2EyNWMxNjA2YWJiNmFlNzIzMWFlNzI0Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2003-12-03T22:40:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2003-12-03T22:40:58Z"}, "message": "expr.c (store_constructor): Only set RTX_UNCHANGING_P for read-only field if cleared is 0.\n\n\t* expr.c (store_constructor): Only set RTX_UNCHANGING_P for\n\tread-only field if cleared is 0.\n\n\t* gcc.dg/20031202-1.c: New test.\n\nFrom-SVN: r74251", "tree": {"sha": "8ce0b0e15aa050323e8012a0063c5c522e24d2b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ce0b0e15aa050323e8012a0063c5c522e24d2b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ecc63eb275e8f67a25c1606abb6ae7231ae724f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ecc63eb275e8f67a25c1606abb6ae7231ae724f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ecc63eb275e8f67a25c1606abb6ae7231ae724f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ecc63eb275e8f67a25c1606abb6ae7231ae724f/comments", "author": null, "committer": null, "parents": [{"sha": "26d86d940ebeffe2e360292bbba54a7d6eb33ef5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d86d940ebeffe2e360292bbba54a7d6eb33ef5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26d86d940ebeffe2e360292bbba54a7d6eb33ef5"}], "stats": {"total": 62, "additions": 59, "deletions": 3}, "files": [{"sha": "fde381b07527b8146c2c9425017fa86be2e1827c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ecc63eb275e8f67a25c1606abb6ae7231ae724f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ecc63eb275e8f67a25c1606abb6ae7231ae724f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ecc63eb275e8f67a25c1606abb6ae7231ae724f", "patch": "@@ -1,3 +1,8 @@\n+2003-12-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* expr.c (store_constructor): Only set RTX_UNCHANGING_P for\n+\tread-only field if cleared is 0.\n+\n 2003-12-03  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* config.gcc: Mark obsolete targets for GCC 3.4."}, {"sha": "2f58cd2a2361dcc086e82ae1990868ef9f984280", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ecc63eb275e8f67a25c1606abb6ae7231ae724f/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ecc63eb275e8f67a25c1606abb6ae7231ae724f/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=8ecc63eb275e8f67a25c1606abb6ae7231ae724f", "patch": "@@ -4643,7 +4643,10 @@ store_constructor (tree exp, rtx target, int cleared, HOST_WIDE_INT size)\n \t\t\t\t       highest_pow2_factor (offset));\n \t    }\n \n-\t  if (TREE_READONLY (field))\n+\t  /* If the constructor has been cleared, setting RTX_UNCHANGING_P\n+\t     on the MEM might lead to scheduling the clearing after the\n+\t     store.  */\n+\t  if (TREE_READONLY (field) && !cleared)\n \t    {\n \t      if (GET_CODE (to_rtx) == MEM)\n \t\tto_rtx = copy_rtx (to_rtx);"}, {"sha": "2a30f30ccc3d933531743a4ee44eed94e2d90796", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ecc63eb275e8f67a25c1606abb6ae7231ae724f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ecc63eb275e8f67a25c1606abb6ae7231ae724f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8ecc63eb275e8f67a25c1606abb6ae7231ae724f", "patch": "@@ -1,3 +1,7 @@\n+2003-12-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/20031202-1.c: New test.\n+\n 2003-12-03  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/10771\n@@ -10,12 +14,12 @@\n \n 2003-12-02  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n \n-\tPR c++/10126\r\n+\tPR c++/10126\n \t* g++.dg/template/ptrmem8.C: New test.\n \n 2003-12-02  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n \n-\tPR c++/12573\r\n+\tPR c++/12573\n \t* g++.dg/template/dependent-expr3.C: New test.\n \n 2003-12-01  James Lemke  <jim@wasabisystems.com>"}, {"sha": "424e01b5dd4206e3c632a638e084005411e76718", "filename": "gcc/testsuite/gcc.dg/20031202-1.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ecc63eb275e8f67a25c1606abb6ae7231ae724f/gcc%2Ftestsuite%2Fgcc.dg%2F20031202-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ecc63eb275e8f67a25c1606abb6ae7231ae724f/gcc%2Ftestsuite%2Fgcc.dg%2F20031202-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20031202-1.c?ref=8ecc63eb275e8f67a25c1606abb6ae7231ae724f", "patch": "@@ -0,0 +1,44 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -mtune=i686\" { target i?86-*-* } } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+struct A { char p[6]; } __attribute__((packed));\n+struct B {\n+    struct A a;\n+    void * const b;\n+    struct A const * const c;\n+    struct A const *d;\n+};\n+\n+char v;\n+\n+int __attribute__((noinline))\n+foo (struct B *b)\n+{\n+  int i;\n+  for (i = 0; i < 6; ++i)\n+    if (b->a.p[i])\n+      abort ();\n+  if (b->b != &v || b->c || b->d)\n+    abort ();\n+  return 12;\n+}\n+\n+int __attribute__((noinline))\n+bar (void *x)\n+{\n+  __asm __volatile (\"\" : \"=r\" (x) : \"0\" (x));\n+  struct B y = { .b = x, .c = (void *) 0 };\n+  return foo (&y) + 1;\n+}\n+\n+int\n+main (void)\n+{\n+  if (bar (&v) != 13)\n+    abort ();\n+  exit (0);\n+}"}]}