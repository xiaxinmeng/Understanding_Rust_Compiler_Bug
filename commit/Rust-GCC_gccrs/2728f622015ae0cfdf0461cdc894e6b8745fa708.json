{"sha": "2728f622015ae0cfdf0461cdc894e6b8745fa708", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjcyOGY2MjIwMTVhZTBjZmRmMDQ2MWNkYzg5NGU2Yjg3NDVmYTcwOA==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-03-15T13:09:36Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-03-15T13:09:36Z"}, "message": "class.c (make_class): Don't set CLASS_P here (because this function is also called by...\n\na\n\t* class.c (make_class):  Don't set CLASS_P here (because\n\tthis function is also called by build_java_array_type).\n\t(push_class):  Set CLASS_P here instead.\n\t* parse.h (TYPE_CLASS_P):  Check for TYPE_ARRAY_P is redundant.\n\t* jcf-dump.c (print_access_flags):  Take extra parameter to indicate\n\tcontext.  If the context is class, perfer \"super\" over \"synchronized\".\n\t* jcf-write.c (generate_classfile):  Don't add ACC_SUPER if interface.\n\t* parse.y (create_class):  Don't call parser_check_super here;\n\tit is not robust.  Always wait until later.\n\t* parse.y (method_header):  For interfaces, set ACC_ABSTRACT (to\n\tmatch what JDK 1.2 does), but don't set ACC_PUBLIC.\n\nFrom-SVN: r25783", "tree": {"sha": "96761f52ef23766bac1be77216dae04bc8b5292c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96761f52ef23766bac1be77216dae04bc8b5292c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2728f622015ae0cfdf0461cdc894e6b8745fa708", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2728f622015ae0cfdf0461cdc894e6b8745fa708", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2728f622015ae0cfdf0461cdc894e6b8745fa708", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2728f622015ae0cfdf0461cdc894e6b8745fa708/comments", "author": null, "committer": null, "parents": [{"sha": "10919149c3c46cc7041964ee2d309d360931336d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10919149c3c46cc7041964ee2d309d360931336d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10919149c3c46cc7041964ee2d309d360931336d"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "cc90341c4bf712f6e597083fcd492e0b7fe01eed", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2728f622015ae0cfdf0461cdc894e6b8745fa708/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2728f622015ae0cfdf0461cdc894e6b8745fa708/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=2728f622015ae0cfdf0461cdc894e6b8745fa708", "patch": "@@ -2696,7 +2696,9 @@ generate_classfile (clas, state)\n   else\n     i = 8 + 2 * total_supers;\n   ptr = append_chunk (NULL, i, state);\n-  i = get_access_flags (TYPE_NAME (clas)) | ACC_SUPER;\n+  i = get_access_flags (TYPE_NAME (clas));\n+  if (! (i & ACC_INTERFACE))\n+    i |= ACC_SUPER;\n   PUT2 (i); /* acces_flags */\n   i = find_class_constant (&state->cpool, clas);  PUT2 (i);  /* this_class */\n   if (clas == object_type_node)"}]}