{"sha": "26cd0fcc59abd212c085b0dfc290eec17406f8a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZjZDBmY2M1OWFiZDIxMmMwODViMGRmYzI5MGVlYzE3NDA2ZjhhOA==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2008-09-09T22:21:10Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2008-09-09T22:21:10Z"}, "message": "invoke.texi (ARM Options): Correct errors in discussion of -mfloat-abi, -mhard-float, and -msoft-float.\n\n2008-09-09  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* doc/invoke.texi (ARM Options): Correct errors in discussion \n\tof -mfloat-abi, -mhard-float, and -msoft-float.\n\nFrom-SVN: r140179", "tree": {"sha": "80c42f0e795c9d24146402f5f9df5a63ffbd6ebe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80c42f0e795c9d24146402f5f9df5a63ffbd6ebe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26cd0fcc59abd212c085b0dfc290eec17406f8a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26cd0fcc59abd212c085b0dfc290eec17406f8a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26cd0fcc59abd212c085b0dfc290eec17406f8a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26cd0fcc59abd212c085b0dfc290eec17406f8a8/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "701e903a76b3e1401b2a01c28504b21bf6a578fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/701e903a76b3e1401b2a01c28504b21bf6a578fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/701e903a76b3e1401b2a01c28504b21bf6a578fa"}], "stats": {"total": 53, "additions": 29, "deletions": 24}, "files": [{"sha": "bc784a6e5157d4ecbcb56ce9abdedf99d9091931", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26cd0fcc59abd212c085b0dfc290eec17406f8a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26cd0fcc59abd212c085b0dfc290eec17406f8a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26cd0fcc59abd212c085b0dfc290eec17406f8a8", "patch": "@@ -1,3 +1,8 @@\n+2008-09-09  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* doc/invoke.texi (ARM Options): Correct errors in discussion \n+\tof -mfloat-abi, -mhard-float, and -msoft-float.\n+\n 2008-09-09  Jakub Jelinek  <jakub@redhat.com>\n \t    Jan Hubicka  <jh@suse.cz>\n "}, {"sha": "1f0077fa7d009b22d880a2e1df01e3765f6c2dce", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26cd0fcc59abd212c085b0dfc290eec17406f8a8/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26cd0fcc59abd212c085b0dfc290eec17406f8a8/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=26cd0fcc59abd212c085b0dfc290eec17406f8a8", "patch": "@@ -8740,35 +8740,35 @@ different function prologues), and this information can be used to\n locate the start if functions inside an executable piece of code.  The\n default is @option{-msched-prolog}.\n \n+@item -mfloat-abi=@var{name}\n+@opindex mfloat-abi\n+Specifies which floating-point ABI to use.  Permissible values\n+are: @samp{soft}, @samp{softfp} and @samp{hard}.\n+\n+Specifying @samp{soft} causes GCC to generate output containing \n+library calls for floating-point operations.\n+@samp{softfp} allows the generation of code using hardware floating-point \n+instructions, but still uses the soft-float calling conventions.  \n+@samp{hard} allows generation of floating-point instructions \n+and uses FPU-specific calling conventions.\n+\n+Using @option{-mfloat-abi=hard} with VFP coprocessors is not supported.\n+Use @option{-mfloat-abi=softfp} with the appropriate @option{-mfpu} option\n+to allow the compiler to generate code that makes use of the hardware\n+floating-point capabilities for these CPUs.\n+\n+The default depends on the specific target configuration.  Note that\n+the hard-float and soft-float ABIs are not link-compatible; you must\n+compile your entire program with the same ABI, and link with a\n+compatible set of libraries.\n+\n @item -mhard-float\n @opindex mhard-float\n-Generate output containing floating point instructions.  This is the\n-default.\n+Equivalent to @option{-mfloat-abi=hard}.\n \n @item -msoft-float\n @opindex msoft-float\n-Generate output containing library calls for floating point.\n-@strong{Warning:} the requisite libraries are not available for all ARM\n-targets.  Normally the facilities of the machine's usual C compiler are\n-used, but this cannot be done directly in cross-compilation.  You must make\n-your own arrangements to provide suitable library functions for\n-cross-compilation.\n-\n-@option{-msoft-float} changes the calling convention in the output file;\n-therefore, it is only useful if you compile @emph{all} of a program with\n-this option.  In particular, you need to compile @file{libgcc.a}, the\n-library that comes with GCC, with @option{-msoft-float} in order for\n-this to work.\n-\n-@item -mfloat-abi=@var{name}\n-@opindex mfloat-abi\n-Specifies which ABI to use for floating point values.  Permissible values\n-are: @samp{soft}, @samp{softfp} and @samp{hard}.\n-\n-@samp{soft} and @samp{hard} are equivalent to @option{-msoft-float}\n-and @option{-mhard-float} respectively.  @samp{softfp} allows the generation\n-of floating point instructions, but still uses the soft-float calling\n-conventions.\n+Equivalent to @option{-mfloat-abi=soft}.\n \n @item -mlittle-endian\n @opindex mlittle-endian"}]}