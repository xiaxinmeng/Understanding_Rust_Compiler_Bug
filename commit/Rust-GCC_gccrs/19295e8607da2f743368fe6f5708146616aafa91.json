{"sha": "19295e8607da2f743368fe6f5708146616aafa91", "node_id": "C_kwDOANBUbNoAKDE5Mjk1ZTg2MDdkYTJmNzQzMzY4ZmU2ZjU3MDgxNDY2MTZhYWZhOTE", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-10-24T07:51:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-10-25T08:01:19Z"}, "message": "tree-optimization/100756 - niter analysis and folding\n\nniter analysis, specifically the part trying to simplify the computed\nmaybe_zero condition against the loop header copying condition, is\nconfused by us now simplifying\n\n  _15 = n_8(D) * 4;\n  if (_15 > 0)\n\nto\n\n  _15 = n_8(D) * 4;\n  if (n_8(D) > 0)\n\nwhich is perfectly sound at the point we do this transform.  One\nsolution might be to involve ranger in this simplification, another\nis to be more aggressive when expanding expressions - the condition\nwe try to simplify is _15 > 0, so all we need is expanding that\nto n_8(D) * 4 > 0.\n\nThe following does just that.\n\n\tPR tree-optimization/100756\n\t* tree-ssa-loop-niter.cc (expand_simple_operations): Also\n\texpand multiplications by invariants.\n\n\t* gcc.dg/vect/pr100756.c: New testcase.", "tree": {"sha": "955dc62382f85951dd7c0db7461da0927f1833bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/955dc62382f85951dd7c0db7461da0927f1833bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19295e8607da2f743368fe6f5708146616aafa91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19295e8607da2f743368fe6f5708146616aafa91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19295e8607da2f743368fe6f5708146616aafa91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19295e8607da2f743368fe6f5708146616aafa91/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "321f89e58510dd5df1b3dbe323344b987a7b11c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/321f89e58510dd5df1b3dbe323344b987a7b11c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/321f89e58510dd5df1b3dbe323344b987a7b11c6"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "c1362f29ebe2d851b5ce3aff697fe200a3523452", "filename": "gcc/testsuite/gcc.dg/vect/pr100756.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19295e8607da2f743368fe6f5708146616aafa91/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr100756.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19295e8607da2f743368fe6f5708146616aafa91/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr100756.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr100756.c?ref=19295e8607da2f743368fe6f5708146616aafa91", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n+\n+int\n+foo (int * restrict a, int n)\n+{\n+  int i, result = 0;\n+\n+  a = __builtin_assume_aligned (a, __BIGGEST_ALIGNMENT__);\n+  for (i = 0; i < n * 4; i++)\n+    result += a[i];\n+  return result;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"epilog loop required\" \"vect\" } } */"}, {"sha": "4ffcef4f4ff2fe182fbe711553c8e4575560ab07", "filename": "gcc/tree-ssa-loop-niter.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19295e8607da2f743368fe6f5708146616aafa91/gcc%2Ftree-ssa-loop-niter.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19295e8607da2f743368fe6f5708146616aafa91/gcc%2Ftree-ssa-loop-niter.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.cc?ref=19295e8607da2f743368fe6f5708146616aafa91", "patch": "@@ -2216,6 +2216,7 @@ expand_simple_operations (tree expr, tree stop, hash_map<tree, tree> &cache)\n \n     case PLUS_EXPR:\n     case MINUS_EXPR:\n+    case MULT_EXPR:\n       if (ANY_INTEGRAL_TYPE_P (TREE_TYPE (expr))\n \t  && TYPE_OVERFLOW_TRAPS (TREE_TYPE (expr)))\n \treturn expr;"}]}