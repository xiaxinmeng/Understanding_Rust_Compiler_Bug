{"sha": "cab554610be863878e01ceacee6c8360c8e48d7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FiNTU0NjEwYmU4NjM4NzhlMDFjZWFjZWU2YzgzNjBjOGU0OGQ3Yg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-10-13T18:31:01Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-10-13T18:31:01Z"}, "message": "(in_branch_delay): Allow fpload and fpstore.\n\nFrom-SVN: r2438", "tree": {"sha": "2f74e0650dcf6fd12e08302d585773f606b12926", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f74e0650dcf6fd12e08302d585773f606b12926"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cab554610be863878e01ceacee6c8360c8e48d7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cab554610be863878e01ceacee6c8360c8e48d7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cab554610be863878e01ceacee6c8360c8e48d7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cab554610be863878e01ceacee6c8360c8e48d7b/comments", "author": null, "committer": null, "parents": [{"sha": "aad3ab2fc718aa5bb361507ebac04b2f474531ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aad3ab2fc718aa5bb361507ebac04b2f474531ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aad3ab2fc718aa5bb361507ebac04b2f474531ac"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "6cf9eaa42f35ec3df3de2075e321957934006600", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cab554610be863878e01ceacee6c8360c8e48d7b/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cab554610be863878e01ceacee6c8360c8e48d7b/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=cab554610be863878e01ceacee6c8360c8e48d7b", "patch": "@@ -93,9 +93,16 @@\n ;; branches.  This would allow us to remove the nop always inserted before\n ;; a floating point branch.\n \n+;; ??? It is OK for fill_simple_delay_slots to put load/store instructions\n+;; in a delay slot, but it is not OK for fill_eager_delay_slots to do so.\n+;; This is because doing so will add several pipeline stalls to the path\n+;; that the load/store did not come from.  Unfortunately, there is no way\n+;; to prevent fill_eager_delay_slots from using load/store without completely\n+;; disabling them.  For the SPEC benchmark set, this is a serious lose,\n+;; because it prevents us from moving back the final store of inner loops.\n \n (define_attr \"in_branch_delay\" \"false,true\"\n-  (if_then_else (and (eq_attr \"type\" \"!uncond_branch,branch,call,call_no_delay_slot,multi,fpload,fpstore\")\n+  (if_then_else (and (eq_attr \"type\" \"!uncond_branch,branch,call,call_no_delay_slot,multi\")\n \t\t     (eq_attr \"length\" \"1\"))\n \t\t(const_string \"true\")\n \t\t(const_string \"false\")))"}]}