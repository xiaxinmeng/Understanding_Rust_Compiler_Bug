{"sha": "be0fe523e72a7ea821000e2ab6b7206a5be3b6ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUwZmU1MjNlNzJhN2VhODIxMDAwZTJhYjZiNzIwNmE1YmUzYjZlZA==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2007-04-13T07:04:39Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2007-04-13T07:04:39Z"}, "message": "Makefile.in (stamp-as, [...]): Remove.\n\n2007-04-12  Paolo Bonzini  <bonzini@gnu.org>\n            Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t* Makefile.in (stamp-as, stamp-collect-ld, stamp-nm): Remove.\n\t(libgcc.mvars): Don't depend on them.\n\t* configure.ac (as, collect-ld, nm): Create from exec-tool.in.\n\t* exec-tool.in: New.\n\n\nCo-Authored-By: Charles Wilson <libtool@cwilson.fastmail.fm>\n\nFrom-SVN: r123775", "tree": {"sha": "9ce1167dc3f4f37b9f0bbb1d6420b7ddde088386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ce1167dc3f4f37b9f0bbb1d6420b7ddde088386"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be0fe523e72a7ea821000e2ab6b7206a5be3b6ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be0fe523e72a7ea821000e2ab6b7206a5be3b6ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be0fe523e72a7ea821000e2ab6b7206a5be3b6ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be0fe523e72a7ea821000e2ab6b7206a5be3b6ed/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "41a14c0644d480c84a5027308e9932a85651fc56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41a14c0644d480c84a5027308e9932a85651fc56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41a14c0644d480c84a5027308e9932a85651fc56"}], "stats": {"total": 166, "additions": 111, "deletions": 55}, "files": [{"sha": "86b29907bc7661a6850f6ec23805064785b788a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0fe523e72a7ea821000e2ab6b7206a5be3b6ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0fe523e72a7ea821000e2ab6b7206a5be3b6ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be0fe523e72a7ea821000e2ab6b7206a5be3b6ed", "patch": "@@ -1,3 +1,11 @@\n+2007-04-12  Paolo Bonzini  <bonzini@gnu.org>\n+            Charles Wilson  <libtool@cwilson.fastmail.fm>\n+\n+\t* Makefile.in (stamp-as, stamp-collect-ld, stamp-nm): Remove.\n+\t(libgcc.mvars): Don't depend on them.\n+\t* configure.ac (as, collect-ld, nm): Create from exec-tool.in.\n+\t* exec-tool.in: New.\n+\n 2007-04-12  Brooks Moses  <brooks.moses@codesourcery.com>\n \n \t* doc/invoke.text (--help): Document --help=common."}, {"sha": "051dacf3bc75fcc9d95246633e970262f4c97fb6", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 55, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0fe523e72a7ea821000e2ab6b7206a5be3b6ed/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0fe523e72a7ea821000e2ab6b7206a5be3b6ed/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=be0fe523e72a7ea821000e2ab6b7206a5be3b6ed", "patch": "@@ -1466,60 +1466,6 @@ cpp$(exeext): $(GCC_OBJS) cppspec.o version.o intl.o prefix.o \\\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) cppspec.o \\\n \t  intl.o prefix.o version.o $(EXTRA_GCC_OBJS) $(LIBS)\n \n-# Create links to binutils, especially for in-tree builds, to make -B.\n-# use them.  We need hard links so that directories can be shuffled\n-# during toplevel bootstrap.\n-# Go through an additional indirection, because the file we create\n-# can be either `sometool' (if it is a script) or `sometool$(exeext)'\n-# (if it is a hard link).\n-stamp-as: $(ORIGINAL_AS_FOR_TARGET)\n-\t@echo creating as; \\\n-\tcase \"$(ORIGINAL_AS_FOR_TARGET)\" in \\\n-\t  ./as) ;; \\\n-\t  ../*) \\\n-\t     rm -f as$(exeext); \\\n-\t     echo $(LN) $< as$(exeext); \\\n-\t     $(LN) $< as$(exeext) || cp $< as$(exeext) ;; \\\n-\t  *) \\\n-\t     rm -f as; \\\n-\t     echo '#!$(SHELL)' > as; \\\n-\t     echo 'exec $(ORIGINAL_AS_FOR_TARGET) \"$$@\"' >> as ; \\\n-\t     chmod +x as ;; \\\n-\tesac\n-\techo timestamp > $@\n-\n-stamp-collect-ld: $(ORIGINAL_LD_FOR_TARGET)\n-\t@echo creating collect-ld; \\\n-\tcase \"$(ORIGINAL_LD_FOR_TARGET)\" in \\\n-\t  ./collect-ld) ;; \\\n-\t  ../*) \\\n-\t     rm -f collect-ld$(exeext); \\\n-\t     echo $(LN) $< collect-ld$(exeext); \\\n-\t     $(LN) $< collect-ld$(exeext) || cp $< collect-ld$(exeext) ;; \\\n-\t  *) \\\n-\t     rm -f collect-ld$(exeext); \\\n-\t     echo '#!$(SHELL)' > collect-ld; \\\n-\t     echo 'exec $(ORIGINAL_LD_FOR_TARGET) \"$$@\"' >> collect-ld ; \\\n-\t     chmod +x collect-ld ;; \\\n-\tesac\n-\techo timestamp > $@\n-\n-stamp-nm: $(ORIGINAL_NM_FOR_TARGET)\n-\t@echo creating nm; \\\n-\tcase \"$(ORIGINAL_NM_FOR_TARGET)\" in \\\n-\t  ./nm) ;; \\\n-\t  ../*) \\\n-\t     rm -f nm$(exeext); \\\n-\t     echo $(LN) $< nm$(exeext); \\\n-\t     $(LN) $< nm$(exeext) || cp $< nm$(exeext) ;; \\\n-\t  *) \\\n-\t     rm -f nm$(exeext); \\\n-\t     echo '#!$(SHELL)' > nm; \\\n-\t     echo 'exec $(ORIGINAL_NM_FOR_TARGET) \"$$@\"' >> nm ; \\\n-\t     chmod +x nm ;; \\\n-\tesac\n-\techo timestamp > $@\n-\n # Dump a specs file to make -B./ read these specs over installed ones.\n $(SPECS): xgcc$(exeext)\n \t$(GCC_FOR_TARGET) -dumpspecs > tmp-specs\n@@ -1567,7 +1513,7 @@ libgcc-support: libgcc.mvars stmp-int-hdrs $(STMP_FIXPROTO) $(TCONFIG_H) \\\n \t$(LIB2ADD_ST) $(LIB2ADDEH) $(srcdir)/emutls.c gcov-iov.h $(SFP_MACHINE)\n \n libgcc.mvars: config.status Makefile $(LIB2ADD) $(LIB2ADD_ST) specs \\\n-\t\txgcc$(exeext) stamp-as stamp-collect-ld stamp-nm\n+\t\txgcc$(exeext)\n \t: > tmp-libgcc.mvars\n \techo LIB1ASMFUNCS = '$(LIB1ASMFUNCS)' >> tmp-libgcc.mvars\n \techo LIB1ASMSRC = '$(LIB1ASMSRC)' >> tmp-libgcc.mvars"}, {"sha": "ed56355a52a26d1ada9941cef27578f81ebdb2ac", "filename": "gcc/configure", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0fe523e72a7ea821000e2ab6b7206a5be3b6ed/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0fe523e72a7ea821000e2ab6b7206a5be3b6ed/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=be0fe523e72a7ea821000e2ab6b7206a5be3b6ed", "patch": "@@ -13349,6 +13349,11 @@ fi\n \n ORIGINAL_AS_FOR_TARGET=$gcc_cv_as\n \n+case \"$ORIGINAL_AS_FOR_TARGET\" in\n+  ./as | ./as$build_exeext) ;;\n+  *)           ac_config_files=\"$ac_config_files as:exec-tool.in\"\n+ ;;\n+esac\n \n echo \"$as_me:$LINENO: checking what assembler to use\" >&5\n echo $ECHO_N \"checking what assembler to use... $ECHO_C\" >&6\n@@ -13465,6 +13470,11 @@ fi\n \n ORIGINAL_LD_FOR_TARGET=$gcc_cv_ld\n \n+case \"$ORIGINAL_LD_FOR_TARGET\" in\n+  ./collect-ld | ./collect-ld$build_exeext) ;;\n+  *)           ac_config_files=\"$ac_config_files collect-ld:exec-tool.in\"\n+ ;;\n+esac\n \n echo \"$as_me:$LINENO: checking what linker to use\" >&5\n echo $ECHO_N \"checking what linker to use... $ECHO_C\" >&6\n@@ -13569,6 +13579,12 @@ fi\n \n ORIGINAL_NM_FOR_TARGET=$gcc_cv_nm\n \n+case \"$ORIGINAL_NM_FOR_TARGET\" in\n+  ./nm | ./nm$build_exeext) ;;\n+  *)           ac_config_files=\"$ac_config_files nm:exec-tool.in\"\n+ ;;\n+esac\n+\n \n # Figure out what objdump we will be using.\n if test \"${gcc_cv_objdump+set}\" = set; then\n@@ -17526,6 +17542,9 @@ for ac_config_target in $ac_config_targets\n do\n   case \"$ac_config_target\" in\n   # Handling of arguments.\n+  \"as\" ) CONFIG_FILES=\"$CONFIG_FILES as:exec-tool.in\" ;;\n+  \"collect-ld\" ) CONFIG_FILES=\"$CONFIG_FILES collect-ld:exec-tool.in\" ;;\n+  \"nm\" ) CONFIG_FILES=\"$CONFIG_FILES nm:exec-tool.in\" ;;\n   \"$all_outputs\" ) CONFIG_FILES=\"$CONFIG_FILES $all_outputs\" ;;\n   \"default\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS default\" ;;\n   \"auto-host.h\" ) CONFIG_HEADERS=\"$CONFIG_HEADERS auto-host.h:config.in\" ;;\n@@ -18020,6 +18039,12 @@ s,@abs_top_builddir@,$ac_abs_top_builddir,;t t\n     rm -f $tmp/out\n   fi\n \n+  # Run the commands associated with the file.\n+  case $ac_file in\n+    as ) chmod +x as ;;\n+    collect-ld ) chmod +x collect-ld ;;\n+    nm ) chmod +x nm ;;\n+  esac\n done\n _ACEOF\n cat >>$CONFIG_STATUS <<\\_ACEOF"}, {"sha": "5f91210118f63efcc40c5dc10814bc7c649ec68d", "filename": "gcc/configure.ac", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0fe523e72a7ea821000e2ab6b7206a5be3b6ed/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0fe523e72a7ea821000e2ab6b7206a5be3b6ed/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=be0fe523e72a7ea821000e2ab6b7206a5be3b6ed", "patch": "@@ -1884,6 +1884,10 @@ fi])\n \n ORIGINAL_AS_FOR_TARGET=$gcc_cv_as\n AC_SUBST(ORIGINAL_AS_FOR_TARGET)\n+case \"$ORIGINAL_AS_FOR_TARGET\" in\n+  ./as | ./as$build_exeext) ;;\n+  *) AC_CONFIG_FILES(as:exec-tool.in, [chmod +x as]) ;;\n+esac \n \n AC_MSG_CHECKING(what assembler to use)\n if test \"$gcc_cv_as\" = ../gas/as-new$build_exeext; then\n@@ -1935,6 +1939,10 @@ fi])\n \n ORIGINAL_LD_FOR_TARGET=$gcc_cv_ld\n AC_SUBST(ORIGINAL_LD_FOR_TARGET)\n+case \"$ORIGINAL_LD_FOR_TARGET\" in\n+  ./collect-ld | ./collect-ld$build_exeext) ;;\n+  *) AC_CONFIG_FILES(collect-ld:exec-tool.in, [chmod +x collect-ld]) ;;\n+esac \n \n AC_MSG_CHECKING(what linker to use)\n if test \"$gcc_cv_ld\" = ../ld/ld-new$build_exeext; then\n@@ -1992,6 +2000,11 @@ fi\n \n ORIGINAL_NM_FOR_TARGET=$gcc_cv_nm\n AC_SUBST(ORIGINAL_NM_FOR_TARGET)\n+case \"$ORIGINAL_NM_FOR_TARGET\" in\n+  ./nm | ./nm$build_exeext) ;;\n+  *) AC_CONFIG_FILES(nm:exec-tool.in, [chmod +x nm]) ;;\n+esac\n+\n \n # Figure out what objdump we will be using.\n AS_VAR_SET_IF(gcc_cv_objdump,, ["}, {"sha": "bc6e7ec6f155c8ca8302a1b7e5dc0645f1b9faf8", "filename": "gcc/exec-tool.in", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0fe523e72a7ea821000e2ab6b7206a5be3b6ed/gcc%2Fexec-tool.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0fe523e72a7ea821000e2ab6b7206a5be3b6ed/gcc%2Fexec-tool.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexec-tool.in?ref=be0fe523e72a7ea821000e2ab6b7206a5be3b6ed", "patch": "@@ -0,0 +1,64 @@\n+#! /bin/sh\n+\n+# Copyright (C) 2007 Free Software Foundation, Inc.\n+# This file is part of GCC.\n+\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+# Boston MA 02110-1301, USA.\n+\n+# Invoke as, ld or nm from the build tree.\n+\n+ORIGINAL_AS_FOR_TARGET=\"@ORIGINAL_AS_FOR_TARGET@\"\n+ORIGINAL_LD_FOR_TARGET=\"@ORIGINAL_LD_FOR_TARGET@\"\n+ORIGINAL_NM_FOR_TARGET=\"@ORIGINAL_NM_FOR_TARGET@\"\n+exeext=@host_exeext@\n+\n+invoked=`basename \"$0\"`\n+case \"$invoked\" in\n+  as)\n+    original=$ORIGINAL_AS_FOR_TARGET\n+    prog=as-new$exeext\n+    dir=gas\n+    ;;\n+  collect-ld)\n+    original=$ORIGINAL_LD_FOR_TARGET\n+    prog=ld-new$exeext\n+    dir=ld\n+    ;;\n+  nm)\n+    original=$ORIGINAL_NM_FOR_TARGET\n+    prog=nm-new$exeext\n+    dir=binutils\n+    ;;\n+esac\n+\n+case \"$original\" in\n+  ../*)\n+    # compute absolute path of the location of this script\n+    tdir=`dirname \"$0\"`\n+    scriptdir=`cd \"$tdir\" && pwd`\n+\n+    if test -x $scriptdir/../$dir/$prog; then\n+      exec $scriptdir/../$dir/$prog ${1+\"$@\"}\n+    else\n+      exec $scriptdir/../prev-$dir/$prog ${1+\"$@\"}\n+    fi\n+    ;;\n+  *)\n+    exec \"$original\" ${1+\"$@\"}\n+    ;;\n+esac\n+\n+"}]}