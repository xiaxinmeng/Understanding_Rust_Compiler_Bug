{"sha": "b1aa06558404f699aac25f84835dc04b16f437ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFhYTA2NTU4NDA0ZjY5OWFhYzI1Zjg0ODM1ZGMwNGIxNmY0MzdlYQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2010-03-18T20:41:40Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2010-03-18T20:41:40Z"}, "message": "tree.h: Declare make_decl_rtl_for_debug.\n\n\t* tree.h: Declare make_decl_rtl_for_debug.\n\t* varasm.c (make_decl_rtl_for_debug): New.\n\t* dwarf2out.c (rtl_for_decl_location): Call it.\n\t* cfgexpand.c (expand_debug_expr): Call it.\n\nFrom-SVN: r157551", "tree": {"sha": "31d500a237a9fb98246138a3525f9f448865c82f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31d500a237a9fb98246138a3525f9f448865c82f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1aa06558404f699aac25f84835dc04b16f437ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1aa06558404f699aac25f84835dc04b16f437ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1aa06558404f699aac25f84835dc04b16f437ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1aa06558404f699aac25f84835dc04b16f437ea/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9a05b749247561513b357e5648ed75699fc7cb4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a05b749247561513b357e5648ed75699fc7cb4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a05b749247561513b357e5648ed75699fc7cb4e"}], "stats": {"total": 56, "additions": 50, "deletions": 6}, "files": [{"sha": "018d94c2c0fd17be1f23879bfa9c8e9aecd97970", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1aa06558404f699aac25f84835dc04b16f437ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1aa06558404f699aac25f84835dc04b16f437ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1aa06558404f699aac25f84835dc04b16f437ea", "patch": "@@ -1,3 +1,10 @@\n+2010-03-18  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* tree.h: Declare make_decl_rtl_for_debug.\n+\t* varasm.c (make_decl_rtl_for_debug): New.\n+\t* dwarf2out.c (rtl_for_decl_location): Call it.\n+\t* cfgexpand.c (expand_debug_expr): Call it.\n+\n 2010-03-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/43399"}, {"sha": "fcae897a3925e11a491a8fe05e55f556fcf66c72", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1aa06558404f699aac25f84835dc04b16f437ea/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1aa06558404f699aac25f84835dc04b16f437ea/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=b1aa06558404f699aac25f84835dc04b16f437ea", "patch": "@@ -2339,8 +2339,7 @@ expand_debug_expr (tree exp)\n \t      || mode == VOIDmode)\n \t    return NULL;\n \n-\t  op0 = DECL_RTL (exp);\n- \t  SET_DECL_RTL (exp, NULL);\n+\t  op0 = make_decl_rtl_for_debug (exp);\n \t  if (!MEM_P (op0)\n \t      || GET_CODE (XEXP (op0, 0)) != SYMBOL_REF\n \t      || SYMBOL_REF_DECL (XEXP (op0, 0)) != exp)"}, {"sha": "540d75fd9f93babcf6e225c02d2bc19ff06b080a", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1aa06558404f699aac25f84835dc04b16f437ea/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1aa06558404f699aac25f84835dc04b16f437ea/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=b1aa06558404f699aac25f84835dc04b16f437ea", "patch": "@@ -15770,10 +15770,7 @@ rtl_for_decl_location (tree decl)\n       && !DECL_HARD_REGISTER (decl)\n       && DECL_MODE (decl) != VOIDmode)\n     {\n-      rtl = DECL_RTL (decl);\n-      /* Reset DECL_RTL back, as various parts of the compiler expects\n-\t DECL_RTL set meaning it is actually going to be output.  */\n-      SET_DECL_RTL (decl, NULL);\n+      rtl = make_decl_rtl_for_debug (decl);\n       if (!MEM_P (rtl)\n \t  || GET_CODE (XEXP (rtl, 0)) != SYMBOL_REF\n \t  || SYMBOL_REF_DECL (XEXP (rtl, 0)) != decl)"}, {"sha": "bd441211242aeae051d150d76bcf3587a3a2f257", "filename": "gcc/testsuite/gfortran.dg/assign-debug.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1aa06558404f699aac25f84835dc04b16f437ea/gcc%2Ftestsuite%2Fgfortran.dg%2Fassign-debug.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1aa06558404f699aac25f84835dc04b16f437ea/gcc%2Ftestsuite%2Fgfortran.dg%2Fassign-debug.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassign-debug.f90?ref=b1aa06558404f699aac25f84835dc04b16f437ea", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+! { dg-options \"-fcompare-debug -O2\" }\n+      program test\n+      integer i\n+      common i\n+      assign 2000 to i  ! { dg-warning \"Deleted feature: ASSIGN statement\" }\n+2000  continue\n+      end"}, {"sha": "bc3cd29453e9d79a4512e12a40d057361e51b0e2", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1aa06558404f699aac25f84835dc04b16f437ea/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1aa06558404f699aac25f84835dc04b16f437ea/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=b1aa06558404f699aac25f84835dc04b16f437ea", "patch": "@@ -5131,6 +5131,7 @@ extern unsigned int update_alignment_for_field (record_layout_info, tree,\n                                                 unsigned int);\n /* varasm.c */\n extern void make_decl_rtl (tree);\n+extern rtx make_decl_rtl_for_debug (tree);\n extern void make_decl_one_only (tree, tree);\n extern int supports_one_only (void);\n extern void resolve_unique_section (tree, int, int);"}, {"sha": "31007b8af864174a56b2f5dfe756cd396e195267", "filename": "gcc/varasm.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1aa06558404f699aac25f84835dc04b16f437ea/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1aa06558404f699aac25f84835dc04b16f437ea/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=b1aa06558404f699aac25f84835dc04b16f437ea", "patch": "@@ -1476,6 +1476,38 @@ make_decl_rtl (tree decl)\n   if (flag_mudflap && TREE_CODE (decl) == VAR_DECL)\n     mudflap_enqueue_decl (decl);\n }\n+\n+/* Like make_decl_rtl, but inhibit creation of new alias sets when\n+   calling make_decl_rtl.  Also, reset DECL_RTL before returning the\n+   rtl.  */\n+\n+rtx\n+make_decl_rtl_for_debug (tree decl)\n+{\n+  unsigned int save_aliasing_flag;\n+  rtx rtl;\n+\n+  if (DECL_RTL_SET_P (decl))\n+    return DECL_RTL (decl);\n+\n+  /* Kludge alert!  Somewhere down the call chain, make_decl_rtl will\n+     call new_alias_set.  If running with -fcompare-debug, sometimes\n+     we do not want to create alias sets that will throw the alias\n+     numbers off in the comparison dumps.  So... clearing\n+     flag_strict_aliasing will keep new_alias_set() from creating a\n+     new set.  */\n+  save_aliasing_flag = flag_strict_aliasing;\n+  flag_strict_aliasing = 0;\n+\n+  rtl = DECL_RTL (decl);\n+  /* Reset DECL_RTL back, as various parts of the compiler expects\n+     DECL_RTL set meaning it is actually going to be output.  */\n+  SET_DECL_RTL (decl, NULL);\n+\n+  flag_strict_aliasing = save_aliasing_flag;\n+\n+  return rtl;\n+}\n \f\n /* Output a string of literal assembler code\n    for an `asm' keyword used between functions.  */"}]}