{"sha": "2f84c996da57d734c94dff8a8e913d210a580cc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY4NGM5OTZkYTU3ZDczNGM5NGRmZjhhOGU5MTNkMjEwYTU4MGNjOQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@airs.com", "date": "2005-04-04T20:58:00Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2005-04-04T20:58:00Z"}, "message": "test-pexecute.c (TEST_PEX_RUN): Move variable declaration before statement.\n\n\t* testsuite/test-pexecute.c (TEST_PEX_RUN): Move variable\n\tdeclaration before statement.\n\nFrom-SVN: r97576", "tree": {"sha": "4c7428d746d13eda1eefd8d5c95a8910c276b8aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c7428d746d13eda1eefd8d5c95a8910c276b8aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f84c996da57d734c94dff8a8e913d210a580cc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f84c996da57d734c94dff8a8e913d210a580cc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f84c996da57d734c94dff8a8e913d210a580cc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f84c996da57d734c94dff8a8e913d210a580cc9/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "71294e1e3175661f955e759e4d4c94c794518970", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71294e1e3175661f955e759e4d4c94c794518970", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71294e1e3175661f955e759e4d4c94c794518970"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "169c821e5ac4d4a82de9f52e3c098d46e9070922", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f84c996da57d734c94dff8a8e913d210a580cc9/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f84c996da57d734c94dff8a8e913d210a580cc9/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=2f84c996da57d734c94dff8a8e913d210a580cc9", "patch": "@@ -1,3 +1,8 @@\n+2005-04-04  Ian Lance Taylor  <ian@airs.com>\n+\n+\t* testsuite/test-pexecute.c (TEST_PEX_RUN): Move variable\n+\tdeclaration before statement.\n+\n 2005-04-02  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* bcmp.c: Fix warnings and implement using memcmp."}, {"sha": "dfb5413453edceebf0ffc5c86ae9b2eb17678783", "filename": "libiberty/testsuite/test-pexecute.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f84c996da57d734c94dff8a8e913d210a580cc9/libiberty%2Ftestsuite%2Ftest-pexecute.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f84c996da57d734c94dff8a8e913d210a580cc9/libiberty%2Ftestsuite%2Ftest-pexecute.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Ftest-pexecute.c?ref=2f84c996da57d734c94dff8a8e913d210a580cc9", "patch": "@@ -208,11 +208,12 @@ main (int argc, char **argv)\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       int err;\t\t\t\t\t\t\t\t\\\n+      const char *pex_run_err;\t\t\t\t\t\t\\\n       if (trace)\t\t\t\t\t\t\t\\\n \tfprintf (stderr, \"Line %d: running %s %s\\n\",\t\t\t\\\n \t\t __LINE__, EXECUTABLE, ARGV[0]);\t\t\t\\\n-      const char *pex_run_err = pex_run (PEXOBJ, FLAGS, EXECUTABLE,\t\\\n-\t\t\t\t\t ARGV, OUTNAME, ERRNAME, &err);\t\\\n+      pex_run_err = pex_run (PEXOBJ, FLAGS, EXECUTABLE, ARGV, OUTNAME,\t\\\n+\t\t\t     ERRNAME, &err);\t\t\t\t\\\n       if (pex_run_err != NULL)\t\t\t\t\t\t\\\n \tFATAL_ERROR (pex_run_err, err);\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\"}]}