{"sha": "75a4c3c194dda02369ca0b8ebcfe9f962f01dd02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVhNGMzYzE5NGRkYTAyMzY5Y2EwYjhlYmNmZTlmOTYyZjAxZGQwMg==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gmail.com", "date": "2006-12-20T17:50:17Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-12-20T17:50:17Z"}, "message": "re PR middle-end/30143 ([4.2 only] OpenMP can produce invalid gimple)\n\n2006-12-20  Andrew Pinski  <pinskia@gmail.com>\n\n        PR middle-end/30143\n        * omp-low.c (init_tmp_var): New function.\n        (save_tmp_var): New function.\n        (lower_omp_1): Use them for VAR_DECL.\n\n2006-12-20  Andrew Pinski  <pinskia@gmail.com>\n\n        PR middle-end/30143\n        * gcc.dg/gomp/complex-1.c: New testcase.\n\nFrom-SVN: r120080", "tree": {"sha": "541b4a163141e39bc6fc37017881bc7f9e447015", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/541b4a163141e39bc6fc37017881bc7f9e447015"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75a4c3c194dda02369ca0b8ebcfe9f962f01dd02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75a4c3c194dda02369ca0b8ebcfe9f962f01dd02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75a4c3c194dda02369ca0b8ebcfe9f962f01dd02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75a4c3c194dda02369ca0b8ebcfe9f962f01dd02/comments", "author": {"login": "pinskia", "id": 8496799, "node_id": "MDQ6VXNlcjg0OTY3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8496799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pinskia", "html_url": "https://github.com/pinskia", "followers_url": "https://api.github.com/users/pinskia/followers", "following_url": "https://api.github.com/users/pinskia/following{/other_user}", "gists_url": "https://api.github.com/users/pinskia/gists{/gist_id}", "starred_url": "https://api.github.com/users/pinskia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pinskia/subscriptions", "organizations_url": "https://api.github.com/users/pinskia/orgs", "repos_url": "https://api.github.com/users/pinskia/repos", "events_url": "https://api.github.com/users/pinskia/events{/privacy}", "received_events_url": "https://api.github.com/users/pinskia/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1863bbcab59ad1f858c20177875b1cd3acf3a94c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1863bbcab59ad1f858c20177875b1cd3acf3a94c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1863bbcab59ad1f858c20177875b1cd3acf3a94c"}], "stats": {"total": 69, "additions": 68, "deletions": 1}, "files": [{"sha": "6edf2cc07b3454889f0facba2fcb7609fe766460", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a4c3c194dda02369ca0b8ebcfe9f962f01dd02/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a4c3c194dda02369ca0b8ebcfe9f962f01dd02/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75a4c3c194dda02369ca0b8ebcfe9f962f01dd02", "patch": "@@ -1,3 +1,10 @@\n+2006-12-20  Andrew Pinski  <pinskia@gmail.com>\n+\n+\tPR middle-end/30143\n+\t* omp-low.c (init_tmp_var): New function.       \n+\t(save_tmp_var): New function.\n+\t(lower_omp_1): Use them for VAR_DECL.\n+\n 2006-12-20  Andrew Pinski  <pinskia@gmail.com>\n \n \t* tree-gimple.c (is_gimple_min_invariant): Treat constant vector"}, {"sha": "f3f4113b98c4bd85cef1c1dcb083dfd720e603bb", "filename": "gcc/omp-low.c", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a4c3c194dda02369ca0b8ebcfe9f962f01dd02/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a4c3c194dda02369ca0b8ebcfe9f962f01dd02/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=75a4c3c194dda02369ca0b8ebcfe9f962f01dd02", "patch": "@@ -4190,6 +4190,38 @@ lower_regimplify (tree *tp, struct walk_stmt_info *wi)\n     tsi_link_before (&wi->tsi, pre, TSI_SAME_STMT);\n }\n \n+/* Copy EXP into a temporary.  Insert the initialization statement before TSI.  */\n+\n+static tree\n+init_tmp_var (tree exp, tree_stmt_iterator *tsi)\n+{\n+  tree t, stmt;\n+\n+  t = create_tmp_var (TREE_TYPE (exp), NULL);\n+  DECL_GIMPLE_REG_P (t) = 1;\n+  stmt = build2 (GIMPLE_MODIFY_STMT, TREE_TYPE (t), t, exp);\n+  SET_EXPR_LOCUS (stmt, EXPR_LOCUS (tsi_stmt (*tsi)));\n+  tsi_link_before (tsi, stmt, TSI_SAME_STMT);\n+\n+  return t;\n+}\n+\n+/* Similarly, but copy from the temporary and insert the statement\n+   after the iterator.  */\n+\n+static tree\n+save_tmp_var (tree exp, tree_stmt_iterator *tsi)\n+{\n+  tree t, stmt;\n+\n+  t = create_tmp_var (TREE_TYPE (exp), NULL);\n+  DECL_GIMPLE_REG_P (t) = 1;\n+  stmt = build2 (GIMPLE_MODIFY_STMT, TREE_TYPE (t), exp, t);\n+  SET_EXPR_LOCUS (stmt, EXPR_LOCUS (tsi_stmt (*tsi)));\n+  tsi_link_after (tsi, stmt, TSI_SAME_STMT);\n+\n+  return t;\n+}\n \n /* Callback for walk_stmts.  Lower the OpenMP directive pointed by TP.  */\n \n@@ -4255,7 +4287,17 @@ lower_omp_1 (tree *tp, int *walk_subtrees, void *data)\n \n     case VAR_DECL:\n       if (ctx && DECL_HAS_VALUE_EXPR_P (t))\n-\tlower_regimplify (tp, wi);\n+\t{\n+\t  lower_regimplify (&t, wi);\n+\t  if (wi->val_only)\n+\t    {\n+\t      if (wi->is_lhs)\n+\t\tt = save_tmp_var (t, &wi->tsi);\n+\t      else\n+\t\tt = init_tmp_var (t, &wi->tsi);\n+\t    }\n+\t  *tp = t;\n+\t}\n       break;\n \n     case ADDR_EXPR:"}, {"sha": "dac041bfecbf1a09c134685d2702cf398c8291a8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a4c3c194dda02369ca0b8ebcfe9f962f01dd02/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a4c3c194dda02369ca0b8ebcfe9f962f01dd02/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=75a4c3c194dda02369ca0b8ebcfe9f962f01dd02", "patch": "@@ -1,3 +1,8 @@\n+2006-12-20  Andrew Pinski  <pinskia@gmail.com>\n+\n+\tPR middle-end/30143\n+\t* gcc.dg/gomp/complex-1.c: New testcase.\n+\n 2006-12-20  Roger Sayle  <roger@eyesopen.com>\n \n \t* gfortran.dg/array_memset_1.f90: New test case."}, {"sha": "0858ac9d3fa75ed26d361f5e8112d84e6cc76fa5", "filename": "gcc/testsuite/gcc.dg/gomp/complex-1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a4c3c194dda02369ca0b8ebcfe9f962f01dd02/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fcomplex-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a4c3c194dda02369ca0b8ebcfe9f962f01dd02/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fcomplex-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fcomplex-1.c?ref=75a4c3c194dda02369ca0b8ebcfe9f962f01dd02", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fopenmp -O1\" } */\n+/* PR middle-end/30143 */\n+\n+\n+int f (int n)\n+{\n+  int i;\n+  _Complex float t;\n+#pragma omp parallel\n+    for (i = 1; i < n - 1; ++i)\n+      t+=1;\n+}"}]}