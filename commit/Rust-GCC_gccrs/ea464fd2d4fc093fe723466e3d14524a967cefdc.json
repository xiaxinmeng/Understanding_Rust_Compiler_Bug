{"sha": "ea464fd2d4fc093fe723466e3d14524a967cefdc", "node_id": "C_kwDOANBUbNoAKGVhNDY0ZmQyZDRmYzA5M2ZlNzIzNDY2ZTNkMTQ1MjRhOTY3Y2VmZGM", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2021-10-20T16:09:00Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2021-10-20T16:09:00Z"}, "message": "AArch64: Add pattern for sshr to cmlt\n\nThis optimizes signed right shift by BITSIZE-1 into a cmlt operation which is\nmore optimal because generally compares have a higher throughput than shifts.\n\nOn AArch64 the result of the shift would have been either -1 or 0 which is the\nresults of the compare.\n\ni.e.\n\nvoid e (int * restrict a, int *b, int n)\n{\n    for (int i = 0; i < n; i++)\n      b[i] = a[i] >> 31;\n}\n\nnow generates:\n\n.L4:\n        ldr     q0, [x0, x3]\n        cmlt    v0.4s, v0.4s, #0\n        str     q0, [x1, x3]\n        add     x3, x3, 16\n        cmp     x4, x3\n        bne     .L4\n\ninstead of:\n\n.L4:\n        ldr     q0, [x0, x3]\n        sshr    v0.4s, v0.4s, 31\n        str     q0, [x1, x3]\n        add     x3, x3, 16\n        cmp     x4, x3\n        bne     .L4\n\nThanks,\nTamar\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64-simd.md (aarch64_simd_ashr<mode>): Add case cmp\n\tcase.\n\t* config/aarch64/constraints.md (D1): New.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/aarch64/shl-combine-2.c: New test.\n\t* gcc.target/aarch64/shl-combine-3.c: New test.\n\t* gcc.target/aarch64/shl-combine-4.c: New test.\n\t* gcc.target/aarch64/shl-combine-5.c: New test.", "tree": {"sha": "01b34245eb9926e79cad7d2a8496fdfac3ff7223", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01b34245eb9926e79cad7d2a8496fdfac3ff7223"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea464fd2d4fc093fe723466e3d14524a967cefdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea464fd2d4fc093fe723466e3d14524a967cefdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea464fd2d4fc093fe723466e3d14524a967cefdc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea464fd2d4fc093fe723466e3d14524a967cefdc/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41812e5e35e231c500468aa1ca779f7c703dc1a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41812e5e35e231c500468aa1ca779f7c703dc1a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41812e5e35e231c500468aa1ca779f7c703dc1a3"}], "stats": {"total": 76, "additions": 71, "deletions": 5}, "files": [{"sha": "0b340b49fa06684b80d0b78cb712e49328ca92d5", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea464fd2d4fc093fe723466e3d14524a967cefdc/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea464fd2d4fc093fe723466e3d14524a967cefdc/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=ea464fd2d4fc093fe723466e3d14524a967cefdc", "patch": "@@ -1127,12 +1127,14 @@\n )\n \n (define_insn \"aarch64_simd_ashr<mode>\"\n- [(set (match_operand:VDQ_I 0 \"register_operand\" \"=w\")\n-       (ashiftrt:VDQ_I (match_operand:VDQ_I 1 \"register_operand\" \"w\")\n-\t\t     (match_operand:VDQ_I  2 \"aarch64_simd_rshift_imm\" \"Dr\")))]\n+ [(set (match_operand:VDQ_I 0 \"register_operand\" \"=w,w\")\n+       (ashiftrt:VDQ_I (match_operand:VDQ_I 1 \"register_operand\" \"w,w\")\n+\t\t     (match_operand:VDQ_I  2 \"aarch64_simd_rshift_imm\" \"D1,Dr\")))]\n  \"TARGET_SIMD\"\n- \"sshr\\t%0.<Vtype>, %1.<Vtype>, %2\"\n-  [(set_attr \"type\" \"neon_shift_imm<q>\")]\n+ \"@\n+  cmlt\\t%0.<Vtype>, %1.<Vtype>, #0\n+  sshr\\t%0.<Vtype>, %1.<Vtype>, %2\"\n+  [(set_attr \"type\" \"neon_compare<q>,neon_shift_imm<q>\")]\n )\n \n (define_insn \"*aarch64_simd_sra<mode>\""}, {"sha": "18630815ffc13f2168300a899db69fd428dfb0d6", "filename": "gcc/config/aarch64/constraints.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea464fd2d4fc093fe723466e3d14524a967cefdc/gcc%2Fconfig%2Faarch64%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea464fd2d4fc093fe723466e3d14524a967cefdc/gcc%2Fconfig%2Faarch64%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fconstraints.md?ref=ea464fd2d4fc093fe723466e3d14524a967cefdc", "patch": "@@ -437,6 +437,14 @@\n       (match_test \"aarch64_simd_shift_imm_p (op, GET_MODE (op),\n \t\t\t\t\t\t true)\")))\n \n+(define_constraint \"D1\"\n+  \"@internal\n+ A constraint that matches vector of immediates that is bits(mode)-1.\"\n+ (and (match_code \"const,const_vector\")\n+      (match_test \"aarch64_const_vec_all_same_in_range_p (op,\n+\t\t\tGET_MODE_UNIT_BITSIZE (mode) - 1,\n+\t\t\tGET_MODE_UNIT_BITSIZE (mode) - 1)\")))\n+\n (define_constraint \"Dr\"\n   \"@internal\n  A constraint that matches vector of immediates for right shifts.\""}, {"sha": "6a0331fbe609ef5f28b67682a6074099c6bc4b1f", "filename": "gcc/testsuite/gcc.target/aarch64/shl-combine-2.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea464fd2d4fc093fe723466e3d14524a967cefdc/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fshl-combine-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea464fd2d4fc093fe723466e3d14524a967cefdc/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fshl-combine-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fshl-combine-2.c?ref=ea464fd2d4fc093fe723466e3d14524a967cefdc", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O3 --save-temps --param=vect-epilogues-nomask=0\" } */\n+\n+#define TYPE char\n+\n+void e (signed TYPE * restrict a, signed TYPE *b, int n)\n+{\n+    for (int i = 0; i < n; i++)\n+      b[i] = a[i] >> (sizeof(TYPE)*8)-1;\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tcmlt\\t} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tsshr\\t} } } */\n+"}, {"sha": "2086b24a3cb588e08655d0641810eede40c1603a", "filename": "gcc/testsuite/gcc.target/aarch64/shl-combine-3.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea464fd2d4fc093fe723466e3d14524a967cefdc/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fshl-combine-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea464fd2d4fc093fe723466e3d14524a967cefdc/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fshl-combine-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fshl-combine-3.c?ref=ea464fd2d4fc093fe723466e3d14524a967cefdc", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O3 --save-temps --param=vect-epilogues-nomask=0\" } */\n+\n+#define TYPE short\n+\n+void e (signed TYPE * restrict a, signed TYPE *b, int n)\n+{\n+    for (int i = 0; i < n; i++)\n+      b[i] = a[i] >> (sizeof(TYPE)*8)-1;\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tcmlt\\t} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tsshr\\t} } } */\n+"}, {"sha": "083181071f400ece0719f879d019f9dc05daa87b", "filename": "gcc/testsuite/gcc.target/aarch64/shl-combine-4.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea464fd2d4fc093fe723466e3d14524a967cefdc/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fshl-combine-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea464fd2d4fc093fe723466e3d14524a967cefdc/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fshl-combine-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fshl-combine-4.c?ref=ea464fd2d4fc093fe723466e3d14524a967cefdc", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O3 --save-temps --param=vect-epilogues-nomask=0\" } */\n+\n+#define TYPE int\n+\n+void e (signed TYPE * restrict a, signed TYPE *b, int n)\n+{\n+    for (int i = 0; i < n; i++)\n+      b[i] = a[i] >> (sizeof(TYPE)*8)-1;\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tcmlt\\t} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tsshr\\t} } } */\n+"}, {"sha": "6b2a6bd86b3658209e435c8cb4bbb14d5b11ddc4", "filename": "gcc/testsuite/gcc.target/aarch64/shl-combine-5.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea464fd2d4fc093fe723466e3d14524a967cefdc/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fshl-combine-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea464fd2d4fc093fe723466e3d14524a967cefdc/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fshl-combine-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fshl-combine-5.c?ref=ea464fd2d4fc093fe723466e3d14524a967cefdc", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O3 --save-temps --param=vect-epilogues-nomask=0\" } */\n+\n+#define TYPE long\n+\n+void e (signed TYPE * restrict a, signed TYPE *b, int n)\n+{\n+    for (int i = 0; i < n; i++)\n+      b[i] = a[i] >> (sizeof(TYPE)*8)-1;\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tcmlt\\t} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tsshr\\t} } } */\n+"}]}