{"sha": "8632824e9c117077ef95d907ff51553b584609ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYzMjgyNGU5YzExNzA3N2VmOTVkOTA3ZmY1MTU1M2I1ODQ2MDliYQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-11-24T09:31:57Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-11-24T09:31:57Z"}, "message": "[RTL-ree] PR rtl-optimization/68194: Restrict copy instruction in presence of conditional moves\n\n\tPR rtl-optimization/68194\n\tPR rtl-optimization/68328\n\tPR rtl-optimization/68185\n\t* ree.c (combine_reaching_defs): Reject copy_needed case if\n\tcopies_list is not empty.\n\n\t* gcc.c-torture/execute/pr68185.c: New test.\n\t* gcc.c-torture/execute/pr68328.c: Likewise.\n\nFrom-SVN: r230795", "tree": {"sha": "d047e8d586b542f770412c7b9ce466021f56bf60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d047e8d586b542f770412c7b9ce466021f56bf60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8632824e9c117077ef95d907ff51553b584609ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8632824e9c117077ef95d907ff51553b584609ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8632824e9c117077ef95d907ff51553b584609ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8632824e9c117077ef95d907ff51553b584609ba/comments", "author": null, "committer": null, "parents": [{"sha": "4404c2826c45ffb749e868b011c480a9d279f8e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4404c2826c45ffb749e868b011c480a9d279f8e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4404c2826c45ffb749e868b011c480a9d279f8e7"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "323c4a87426f2649244e1c565c8de23453f29603", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8632824e9c117077ef95d907ff51553b584609ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8632824e9c117077ef95d907ff51553b584609ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8632824e9c117077ef95d907ff51553b584609ba", "patch": "@@ -1,3 +1,12 @@\n+2015-11-24  Bernd Schmidt <bschmidt@redhat.com>\n+            Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR rtl-optimization/68194\n+\tPR rtl-optimization/68328\n+\tPR rtl-optimization/68185\n+\t* ree.c (combine_reaching_defs): Reject copy_needed case if\n+\tcopies_list is not empty.\n+\n 2015-11-24  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/68221"}, {"sha": "6cfc477470e608671a507a6988d304585fe84be2", "filename": "gcc/ree.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8632824e9c117077ef95d907ff51553b584609ba/gcc%2Free.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8632824e9c117077ef95d907ff51553b584609ba/gcc%2Free.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Free.c?ref=8632824e9c117077ef95d907ff51553b584609ba", "patch": "@@ -760,6 +760,12 @@ combine_reaching_defs (ext_cand *cand, const_rtx set_pat, ext_state *state)\n       if (state->defs_list.length () != 1)\n \treturn false;\n \n+      /* We don't have the structure described above if there are\n+\t conditional moves in between the def and the candidate,\n+\t and we will not handle them correctly.  See PR68194.  */\n+      if (state->copies_list.length () > 0)\n+\treturn false;\n+\n       /* We require the candidate not already be modified.  It may,\n \t for example have been changed from a (sign_extend (reg))\n \t into (zero_extend (sign_extend (reg)))."}, {"sha": "522b24bc0581d9cab7594304b9f61b0515b94e79", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8632824e9c117077ef95d907ff51553b584609ba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8632824e9c117077ef95d907ff51553b584609ba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8632824e9c117077ef95d907ff51553b584609ba", "patch": "@@ -1,3 +1,11 @@\n+2015-11-24  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR rtl-optimization/68194\n+\tPR rtl-optimization/68328\n+\tPR rtl-optimization/68185\n+\t* gcc.c-torture/execute/pr68185.c: New test.\n+\t* gcc.c-torture/execute/pr68328.c: Likewise.\n+\n 2015-11-23  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* gcc.c-torture/execute/lto-tbaa-1.c: New testcase."}, {"sha": "826531bf71ba1a65033313134e01a66802a5ddc7", "filename": "gcc/testsuite/gcc.c-torture/execute/pr68185.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8632824e9c117077ef95d907ff51553b584609ba/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr68185.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8632824e9c117077ef95d907ff51553b584609ba/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr68185.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr68185.c?ref=8632824e9c117077ef95d907ff51553b584609ba", "patch": "@@ -0,0 +1,29 @@\n+int a, b, d = 1, e, f, o, u, w = 1, z;\n+short c, q, t;\n+\n+int\n+main ()\n+{\n+  char g;\n+  for (; d; d--)\n+    {\n+      while (o)\n+\tfor (; e;)\n+\t  {\n+\t    c = b;\n+\t    int h = o = z;\n+\t    for (; u;)\n+\t      for (; a;)\n+\t\t;\n+\t  }\n+      if (t < 1)\n+\tg = w;\n+      f = g;\n+      g && (q = 1);\n+    }\n+\n+  if (q != 1)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}, {"sha": "edf244bb3563954781b608d4720b11fe4ded8aea", "filename": "gcc/testsuite/gcc.c-torture/execute/pr68328.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8632824e9c117077ef95d907ff51553b584609ba/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr68328.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8632824e9c117077ef95d907ff51553b584609ba/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr68328.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr68328.c?ref=8632824e9c117077ef95d907ff51553b584609ba", "patch": "@@ -0,0 +1,44 @@\n+int a, b, c = 1, d = 1, e;\n+\n+__attribute__ ((noinline, noclone))\n+     int foo (void)\n+{\n+  asm volatile (\"\":::\"memory\");\n+  return 4195552;\n+}\n+\n+__attribute__ ((noinline, noclone))\n+     void bar (int x, int y)\n+{\n+  asm volatile (\"\"::\"g\" (x), \"g\" (y):\"memory\");\n+  if (y == 0)\n+    __builtin_abort ();\n+}\n+\n+int\n+baz (int x)\n+{\n+  char g, h;\n+  int i, j;\n+\n+  foo ();\n+  for (;;)\n+    {\n+      if (c)\n+\th = d;\n+      g = h < x ? h : 0;\n+      i = (signed char) ((unsigned char) (g - 120) ^ 1);\n+      j = i > 97;\n+      if (a - j)\n+\tbar (0x123456, 0);\n+      if (!b)\n+\treturn e;\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  baz (2);\n+  return 0;\n+}"}]}