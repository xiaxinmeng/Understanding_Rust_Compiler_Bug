{"sha": "5cf5a0e59b7ad7736d36b0042881f0c0788ccd82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNmNWEwZTU5YjdhZDc3MzZkMzZiMDA0Mjg4MWYwYzA3ODhjY2Q4Mg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2013-12-30T08:48:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-12-30T08:48:25Z"}, "message": "re PR target/59605 (error: wrong number of branch edges after unconditional jump in bb 11)\n\n\tPR target/59605\n\t* config/i386/i386.c (ix86_expand_set_or_movmem): Create\n\tjump_around_label only if it doesn't exist.\n\n\t* gcc.dg/pr59605.c: New test.\n\nFrom-SVN: r206242", "tree": {"sha": "ec1dde7661a0c8475e36f564d51d434c65ce5d54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec1dde7661a0c8475e36f564d51d434c65ce5d54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cf5a0e59b7ad7736d36b0042881f0c0788ccd82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cf5a0e59b7ad7736d36b0042881f0c0788ccd82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cf5a0e59b7ad7736d36b0042881f0c0788ccd82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cf5a0e59b7ad7736d36b0042881f0c0788ccd82/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3836fdc0c92d3c2de7205a77029406dca22dfc21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3836fdc0c92d3c2de7205a77029406dca22dfc21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3836fdc0c92d3c2de7205a77029406dca22dfc21"}], "stats": {"total": 69, "additions": 68, "deletions": 1}, "files": [{"sha": "290a978f8bdeddba8204bae185cb9961c8428340", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cf5a0e59b7ad7736d36b0042881f0c0788ccd82/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cf5a0e59b7ad7736d36b0042881f0c0788ccd82/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5cf5a0e59b7ad7736d36b0042881f0c0788ccd82", "patch": "@@ -1,3 +1,9 @@\n+2013-12-30   H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/59605\n+\t* config/i386/i386.c (ix86_expand_set_or_movmem): Create\n+\tjump_around_label only if it doesn't exist.\n+\n 2013-12-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* doc/invoke.texi (output file options): Document -fada-spec-parent."}, {"sha": "6e6b2617f92e6cd0e28abae5f27470b8d3c4d8fb", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cf5a0e59b7ad7736d36b0042881f0c0788ccd82/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cf5a0e59b7ad7736d36b0042881f0c0788ccd82/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=5cf5a0e59b7ad7736d36b0042881f0c0788ccd82", "patch": "@@ -24047,7 +24047,8 @@ ix86_expand_set_or_movmem (rtx dst, rtx src, rtx count_exp, rtx val_exp,\n       else\n \t{\n \t  rtx hot_label = gen_label_rtx ();\n-\t  jump_around_label = gen_label_rtx ();\n+\t  if (jump_around_label == NULL_RTX)\n+\t    jump_around_label = gen_label_rtx ();\n \t  emit_cmp_and_jump_insns (count_exp, GEN_INT (dynamic_check - 1),\n \t\t\t\t   LEU, 0, GET_MODE (count_exp), 1, hot_label);\n \t  predict_jump (REG_BR_PROB_BASE * 90 / 100);"}, {"sha": "b7f12f5b9b57deb6feeed12bb89cf7acce697dc8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cf5a0e59b7ad7736d36b0042881f0c0788ccd82/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cf5a0e59b7ad7736d36b0042881f0c0788ccd82/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5cf5a0e59b7ad7736d36b0042881f0c0788ccd82", "patch": "@@ -1,3 +1,8 @@\n+2013-12-30   H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/59605\n+\t* gcc.dg/pr59605.c: New test.\n+\n 2013-12-27  Yury Gribov  <y.gribov@samsung.com>\n \n \tPR target/59585"}, {"sha": "45568438277ae80648d84d9a8a5eb6a26745ec8b", "filename": "gcc/testsuite/gcc.dg/pr59605.c", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cf5a0e59b7ad7736d36b0042881f0c0788ccd82/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59605.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cf5a0e59b7ad7736d36b0042881f0c0788ccd82/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59605.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59605.c?ref=5cf5a0e59b7ad7736d36b0042881f0c0788ccd82", "patch": "@@ -0,0 +1,55 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-additional-options \"-minline-stringops-dynamically\" { target { i?86-*-* x86_64-*-* } } } */\n+\n+extern void abort (void);\n+\n+#define MAX_OFFSET (sizeof (long long))\n+#define MAX_COPY (1024 + 8192)\n+#define MAX_EXTRA (sizeof (long long))\n+\n+#define MAX_LENGTH (MAX_OFFSET + MAX_COPY + MAX_EXTRA)\n+\n+static union {\n+  char buf[MAX_LENGTH];\n+  long long align_int;\n+  long double align_fp;\n+} u;\n+\n+char A[MAX_LENGTH];\n+\n+int\n+main ()\n+{\n+  int off, len, i;\n+  char *p, *q;\n+\n+  for (i = 0; i < MAX_LENGTH; i++)\n+    A[i] = 'A';\n+\n+  for (off = 0; off < MAX_OFFSET; off++)\n+    for (len = 1; len < MAX_COPY; len++)\n+      {\n+\tfor (i = 0; i < MAX_LENGTH; i++)\n+\t  u.buf[i] = 'a';\n+\n+\tp = __builtin_memcpy (u.buf + off, A, len);\n+\tif (p != u.buf + off)\n+\t  abort ();\n+\n+\tq = u.buf;\n+\tfor (i = 0; i < off; i++, q++)\n+\t  if (*q != 'a')\n+\t    abort ();\n+\n+\tfor (i = 0; i < len; i++, q++)\n+\t  if (*q != 'A')\n+\t    abort ();\n+\n+\tfor (i = 0; i < MAX_EXTRA; i++, q++)\n+\t  if (*q != 'a')\n+\t    abort ();\n+      }\n+\n+  return 0;\n+}"}]}