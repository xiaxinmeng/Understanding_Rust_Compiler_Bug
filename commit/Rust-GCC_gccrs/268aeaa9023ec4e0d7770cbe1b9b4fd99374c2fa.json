{"sha": "268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY4YWVhYTkwMjNlYzRlMGQ3NzcwY2JlMWI5YjRmZDk5Mzc0YzJmYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-20T10:51:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-20T10:51:01Z"}, "message": "[multiple changes]\n\n2016-04-20  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_util.adb, freeze.adb, sem_util.adb: Minor reformatting.\n\n2016-04-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_unst.adb (Check_Static_Type): For a private type, check\n\tfull view.\n\n2016-04-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_attr.adb (Check_Type): Reject an attribute reference in\n\tan aspect expression, when the prefix of the reference is the\n\tcurrent instance of the type to which the aspect applies.\n\nFrom-SVN: r235267", "tree": {"sha": "ddd6d680f17aaaf56643d8c833a2962f7dd7bd0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddd6d680f17aaaf56643d8c833a2962f7dd7bd0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa/comments", "author": null, "committer": null, "parents": [{"sha": "51b42ffa5ee75a45b9c708f30ed49b33df33a3c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51b42ffa5ee75a45b9c708f30ed49b33df33a3c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51b42ffa5ee75a45b9c708f30ed49b33df33a3c3"}], "stats": {"total": 80, "additions": 70, "deletions": 10}, "files": [{"sha": "81bc2cc5db1b6f3541634d49d29ad12936e2e8ca", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa", "patch": "@@ -1,3 +1,18 @@\n+2016-04-20  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_util.adb, freeze.adb, sem_util.adb: Minor reformatting.\n+\n+2016-04-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_unst.adb (Check_Static_Type): For a private type, check\n+\tfull view.\n+\n+2016-04-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_attr.adb (Check_Type): Reject an attribute reference in\n+\tan aspect expression, when the prefix of the reference is the\n+\tcurrent instance of the type to which the aspect applies.\n+\n 2016-04-20  Bob Duff  <duff@adacore.com>\n \n \t* sem_ch6.adb (Enter_Overloaded_Entity): Do not warn about"}, {"sha": "12204d86c768b904eff0ff22d1b188a57dacde1b", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa", "patch": "@@ -448,6 +448,15 @@ package body Exp_Unst is\n                      end loop;\n                   end;\n \n+               --  For private type, examine whether full view is static\n+\n+               elsif Is_Private_Type (T) and then Present (Full_View (T)) then\n+                  Check_Static_Type (Full_View (T), DT);\n+\n+                  if Is_Static_Type (Full_View (T)) then\n+                     Set_Is_Static_Type (T);\n+                  end if;\n+\n                --  For now, ignore other types\n \n                else"}, {"sha": "da9ed388521d1f09d43ffd958e20fd0d50acca72", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa", "patch": "@@ -924,8 +924,8 @@ package body Exp_Util is\n    --------------------------\n \n    procedure Build_Procedure_Form (N : Node_Id) is\n-      Loc          : constant Source_Ptr := Sloc (N);\n-      Subp         : constant Entity_Id := Defining_Entity (N);\n+      Loc  : constant Source_Ptr := Sloc (N);\n+      Subp : constant Entity_Id := Defining_Entity (N);\n \n       Func_Formal  : Entity_Id;\n       Proc_Formals : List_Id;\n@@ -941,7 +941,6 @@ package body Exp_Util is\n          Append_To (Proc_Formals,\n            Make_Parameter_Specification (Loc,\n              Defining_Identifier =>\n-\n                Make_Defining_Identifier (Loc, Chars (Func_Formal)),\n              Parameter_Type      =>\n                New_Occurrence_Of (Etype (Func_Formal), Loc)));"}, {"sha": "572b194e6876032d90ed005a040ccbefb7f605c7", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa", "patch": "@@ -7902,7 +7902,6 @@ package body Freeze is\n       then\n          Build_Procedure_Form (Unit_Declaration_Node (E));\n       end if;\n-\n    end Freeze_Subprogram;\n \n    ----------------------"}, {"sha": "e8483b9eebdae94b08b6f605209c7307e710183b", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 41, "deletions": 4, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa", "patch": "@@ -1408,10 +1408,41 @@ package body Sem_Attr is\n       --------------------------------\n \n       procedure Check_Array_Or_Scalar_Type is\n+         function In_Aspect_Specification return Boolean;\n+         --  A current instance of a type in an aspect specification is an\n+         --  object and not a type, and therefore cannot be of a scalar type\n+         --  in the prefix of one of the array attributes if the attribute\n+         --  reference is part of an aspect expression.\n+\n+         -----------------------------\n+         -- In_Aspect_Specification --\n+         -----------------------------\n+\n+         function In_Aspect_Specification return Boolean is\n+            P : Node_Id;\n+\n+         begin\n+            P := Parent (N);\n+            while Present (P) loop\n+               if Nkind (P) = N_Aspect_Specification then\n+                  return P_Type = Entity (P);\n+\n+               elsif Nkind (P) in N_Declaration then\n+                  return False;\n+               end if;\n+\n+               P := Parent (P);\n+            end loop;\n+\n+            return False;\n+         end In_Aspect_Specification;\n+\n+         --  Local variables\n+\n+         Dims  : Int;\n          Index : Entity_Id;\n \n-         D : Int;\n-         --  Dimension number for array attributes\n+      --  Start of processing for Check_Array_Or_Scalar_Type\n \n       begin\n          --  Case of string literal or string literal subtype. These cases\n@@ -1431,6 +1462,12 @@ package body Sem_Attr is\n \n             if Present (E1) then\n                Error_Attr (\"invalid argument in % attribute\", E1);\n+\n+            elsif In_Aspect_Specification then\n+               Error_Attr\n+                 (\"prefix of % attribute cannot be the current instance of a \"\n+                  & \"scalar type\", P);\n+\n             else\n                Set_Etype (N, P_Base_Type);\n                return;\n@@ -1466,9 +1503,9 @@ package body Sem_Attr is\n                Set_Etype (N, Base_Type (Etype (Index)));\n \n             else\n-               D := UI_To_Int (Intval (E1));\n+               Dims := UI_To_Int (Intval (E1));\n \n-               for J in 1 .. D - 1 loop\n+               for J in 1 .. Dims - 1 loop\n                   Next_Index (Index);\n                end loop;\n "}, {"sha": "ac4e8c2a39a2eaa824f83c5e16d00935658a3f89", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=268aeaa9023ec4e0d7770cbe1b9b4fd99374c2fa", "patch": "@@ -14360,8 +14360,9 @@ package body Sem_Util is\n                    and then Is_Predefined_File_Name\n                               (Unit_File_Name (Get_Source_Unit (Par)));\n             else\n-               return Present (Alias (Id))\n-                 and then Is_Unchecked_Conversion_Instance (Alias (Id));\n+               return\n+                 Present (Alias (Id))\n+                   and then Is_Unchecked_Conversion_Instance (Alias (Id));\n             end if;\n          end if;\n       end if;"}]}