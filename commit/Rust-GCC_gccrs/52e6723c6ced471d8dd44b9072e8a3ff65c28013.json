{"sha": "52e6723c6ced471d8dd44b9072e8a3ff65c28013", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJlNjcyM2M2Y2VkNDcxZDhkZDQ0YjkwNzJlOGEzZmY2NWMyODAxMw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2005-01-25T15:47:35Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2005-01-25T15:47:35Z"}, "message": "acinclude.m4 (GLIBCXX_ENABLE_C99): Test for complex math functions...\n\n\n2005-01-25  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* acinclude.m4 (GLIBCXX_ENABLE_C99): Test for complex math\n\tfunctions, and enable _GLIBCXX_USE_C99_COMPLEX_MATH if they exist.\n\t* acconfig.h: Add _GLIBCXX_USE_C99_COMPLEX_MATH.\n\t* config.h.in: Regenerate.\n\t* configure: Regenerate.\n\t* include/std/std_complex.h: Protect complex builtins with\n\t_GLIBCXX_USE_C99_COMPLEX_MATH.\n\nFrom-SVN: r94221", "tree": {"sha": "ecf0cbf54042e28cd61c1828feb8553a514cc166", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecf0cbf54042e28cd61c1828feb8553a514cc166"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52e6723c6ced471d8dd44b9072e8a3ff65c28013", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52e6723c6ced471d8dd44b9072e8a3ff65c28013", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52e6723c6ced471d8dd44b9072e8a3ff65c28013", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52e6723c6ced471d8dd44b9072e8a3ff65c28013/comments", "author": null, "committer": null, "parents": [{"sha": "e71c0aa7f57c24c9071ad48ce6908cfbfa93c210", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e71c0aa7f57c24c9071ad48ce6908cfbfa93c210", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e71c0aa7f57c24c9071ad48ce6908cfbfa93c210"}], "stats": {"total": 1934, "additions": 1909, "deletions": 25}, "files": [{"sha": "a6f79359fcea898b10cbecf7c242524f7b0e4cc3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52e6723c6ced471d8dd44b9072e8a3ff65c28013/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52e6723c6ced471d8dd44b9072e8a3ff65c28013/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=52e6723c6ced471d8dd44b9072e8a3ff65c28013", "patch": "@@ -1,3 +1,13 @@\n+2005-01-25  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* acinclude.m4 (GLIBCXX_ENABLE_C99): Test for complex math\n+\tfunctions, and enable _GLIBCXX_USE_C99_COMPLEX_MATH if they exist.\n+\t* acconfig.h: Add _GLIBCXX_USE_C99_COMPLEX_MATH.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* include/std/std_complex.h: Protect complex builtins with\n+\t_GLIBCXX_USE_C99_COMPLEX_MATH.\n+\n 2005-01-24  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/type_traits: Implement is_signed and is_unsigned."}, {"sha": "f1b821630ba898a35b195c78247dd88a7417b0ae", "filename": "libstdc++-v3/acconfig.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52e6723c6ced471d8dd44b9072e8a3ff65c28013/libstdc%2B%2B-v3%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52e6723c6ced471d8dd44b9072e8a3ff65c28013/libstdc%2B%2B-v3%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facconfig.h?ref=52e6723c6ced471d8dd44b9072e8a3ff65c28013", "patch": "@@ -13,11 +13,14 @@\n // Include I/O support for 'long long' and 'unsigned long long'.\n #undef _GLIBCXX_USE_LONG_LONG\n \n+// Define if C99 features such as lldiv_t, llabs, lldiv should be exposed.\n+#undef _GLIBCXX_USE_C99\n+\n // Define if C99 math functions (like fpclassify) should be exposed.\n #undef _GLIBCXX_USE_C99_MATH\n \n-// Define if C99 features such as lldiv_t, llabs, lldiv should be exposed.\n-#undef _GLIBCXX_USE_C99\n+// Define if C99 complex math functions should be used in std::complex.\n+#undef _GLIBCXX_USE_C99_COMPLEX_MATH\n \n // Define if code specialized for wchar_t should be used.\n #undef _GLIBCXX_USE_WCHAR_T"}, {"sha": "2a1c6e2e3320c2f077a931397f1a3db573db496b", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52e6723c6ced471d8dd44b9072e8a3ff65c28013/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52e6723c6ced471d8dd44b9072e8a3ff65c28013/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=52e6723c6ced471d8dd44b9072e8a3ff65c28013", "patch": "@@ -871,6 +871,121 @@ AC_DEFUN([GLIBCXX_ENABLE_C99], [\n     AC_DEFINE(_GLIBCXX_USE_C99_MATH)\n   fi\n \n+  # Check for the existence of <math.h> complex functions.\n+  # This is necessary even though libstdc++ uses the builtin versions\n+  # of these functions, because if the builtin cannot be used, a reference\n+  # to the library function is emitted.\n+  AC_CHECK_HEADERS(complex.h, ac_has_complex_h=yes, ac_has_complex_h=no)\n+  ac_c99_complex=no;\n+  if test x\"$ac_has_complex_h\" = x\"yes\"; then\n+    ac_c99_complex=yes;\n+    AC_MSG_CHECKING([for ISO C99 support in <complex.h>])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t           [typedef __complex__ float _ComplexT; _ComplexT tmp;\n+\t            cabsf(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    cabs(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t \t   [typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    cabsl(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t           [typedef __complex__ float _ComplexT; _ComplexT tmp;\n+                    cargf(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    carg(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t   \t   [typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    cargl(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t       \t   [typedef __complex__ float _ComplexT; _ComplexT tmp;\n+\t\t    ccosf(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    ccos(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    ccosl(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ float _ComplexT; _ComplexT tmp;\n+\t\t    ccoshf(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    ccosh(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    ccoshl(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ float _ComplexT; _ComplexT tmp;\n+\t\t    cexpf(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    cexp(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    cexpl(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ float _ComplexT; _ComplexT tmp;\n+\t\t    csinf(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    csin(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    csinl(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ float _ComplexT; _ComplexT tmp;\n+ \t\t    csinhf(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    csinh(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    csinhl(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ float _ComplexT; _ComplexT tmp;\n+\t\t    csqrtf(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    csqrt(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    csqrtl(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ float _ComplexT; _ComplexT tmp;\n+\t\t    ctanf(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    ctan(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    ctanl(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ float _ComplexT; _ComplexT tmp;\n+\t\t    ctanhf(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    ctanh(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t  \t   [typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    ctanhl(tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ float _ComplexT; _ComplexT tmp;\n+\t\t    cpowf(tmp, tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    cpow(tmp, tmp);],, [ac_c99_complex=no])\n+    AC_TRY_COMPILE([#include <complex.h>],\n+\t\t   [typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    cpowl(tmp, tmp);],, [ac_c99_complex=no])\n+  fi\n+  AC_MSG_RESULT($ac_c99_complex)\n+\n+  if test x\"$ac_c99_complex\" = x\"yes\"; then\n+    AC_DEFINE(_GLIBCXX_USE_C99_COMPLEX_MATH)\n+  fi\n+\n   # Check for the existence in <stdio.h> of vscanf, et. al.\n   ac_c99_stdio=yes;\n   AC_MSG_CHECKING([for ISO C99 support in <stdio.h>])"}, {"sha": "fdcc07cb2a2d982c07648a15c753af44380e2b27", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52e6723c6ced471d8dd44b9072e8a3ff65c28013/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52e6723c6ced471d8dd44b9072e8a3ff65c28013/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=52e6723c6ced471d8dd44b9072e8a3ff65c28013", "patch": "@@ -14,11 +14,14 @@\n // Include I/O support for 'long long' and 'unsigned long long'.\n #undef _GLIBCXX_USE_LONG_LONG\n \n+// Define if C99 features such as lldiv_t, llabs, lldiv should be exposed.\n+#undef _GLIBCXX_USE_C99\n+\n // Define if C99 math functions (like fpclassify) should be exposed.\n #undef _GLIBCXX_USE_C99_MATH\n \n-// Define if C99 features such as lldiv_t, llabs, lldiv should be exposed.\n-#undef _GLIBCXX_USE_C99\n+// Define if C99 complex math functions should be used in std::complex.\n+#undef _GLIBCXX_USE_C99_COMPLEX_MATH\n \n // Define if code specialized for wchar_t should be used.\n #undef _GLIBCXX_USE_WCHAR_T\n@@ -200,6 +203,9 @@\n /* Define to 1 if you have the `ceill' function. */\n #undef HAVE_CEILL\n \n+/* Define to 1 if you have the <complex.h> header file. */\n+#undef HAVE_COMPLEX_H\n+\n /* Define to 1 if you have the `copysign' function. */\n #undef HAVE_COPYSIGN\n "}, {"sha": "e2a7f58b4c12b9d66edb87071277b01375e5d870", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1691, "deletions": 0, "changes": 1691, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52e6723c6ced471d8dd44b9072e8a3ff65c28013/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52e6723c6ced471d8dd44b9072e8a3ff65c28013/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=52e6723c6ced471d8dd44b9072e8a3ff65c28013", "patch": "@@ -6368,6 +6368,7 @@ fi;\n \n \n \n+\n    # Check whether --enable-c99 or --disable-c99 was given.\n if test \"${enable_c99+set}\" = set; then\n   enableval=\"$enable_c99\"\n@@ -6947,6 +6948,1696 @@ _ACEOF\n \n   fi\n \n+  # Check for the existence of <math.h> complex functions.\n+  # This is necessary even though libstdc++ uses the builtin versions\n+  # of these functions, because if the builtin cannot be used, a reference\n+  # to the library function is emitted.\n+\n+for ac_header in complex.h\n+do\n+as_ac_Header=`echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n+if eval \"test \\\"\\${$as_ac_Header+set}\\\" = set\"; then\n+  echo \"$as_me:$LINENO: checking for $ac_header\" >&5\n+echo $ECHO_N \"checking for $ac_header... $ECHO_C\" >&6\n+if eval \"test \\\"\\${$as_ac_Header+set}\\\" = set\"; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+fi\n+echo \"$as_me:$LINENO: result: `eval echo '${'$as_ac_Header'}'`\" >&5\n+echo \"${ECHO_T}`eval echo '${'$as_ac_Header'}'`\" >&6\n+else\n+  # Is the header compilable?\n+echo \"$as_me:$LINENO: checking $ac_header usability\" >&5\n+echo $ECHO_N \"checking $ac_header usability... $ECHO_C\" >&6\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+$ac_includes_default\n+#include <$ac_header>\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_header_compiler=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_header_compiler=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+echo \"$as_me:$LINENO: result: $ac_header_compiler\" >&5\n+echo \"${ECHO_T}$ac_header_compiler\" >&6\n+\n+# Is the header present?\n+echo \"$as_me:$LINENO: checking $ac_header presence\" >&5\n+echo $ECHO_N \"checking $ac_header presence... $ECHO_C\" >&6\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <$ac_header>\n+_ACEOF\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_cpp conftest.$ac_ext\\\"\") >&5\n+  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } >/dev/null; then\n+  if test -s conftest.err; then\n+    ac_cpp_err=$ac_cxx_preproc_warn_flag\n+    ac_cpp_err=$ac_cpp_err$ac_cxx_werror_flag\n+  else\n+    ac_cpp_err=\n+  fi\n+else\n+  ac_cpp_err=yes\n+fi\n+if test -z \"$ac_cpp_err\"; then\n+  ac_header_preproc=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+  ac_header_preproc=no\n+fi\n+rm -f conftest.err conftest.$ac_ext\n+echo \"$as_me:$LINENO: result: $ac_header_preproc\" >&5\n+echo \"${ECHO_T}$ac_header_preproc\" >&6\n+\n+# So?  What about this header?\n+case $ac_header_compiler:$ac_header_preproc:$ac_cxx_preproc_warn_flag in\n+  yes:no: )\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!\" >&5\n+echo \"$as_me: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header: proceeding with the compiler's result\" >&5\n+echo \"$as_me: WARNING: $ac_header: proceeding with the compiler's result\" >&2;}\n+    ac_header_preproc=yes\n+    ;;\n+  no:yes:* )\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header: present but cannot be compiled\" >&5\n+echo \"$as_me: WARNING: $ac_header: present but cannot be compiled\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header:     check for missing prerequisite headers?\" >&5\n+echo \"$as_me: WARNING: $ac_header:     check for missing prerequisite headers?\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header: see the Autoconf documentation\" >&5\n+echo \"$as_me: WARNING: $ac_header: see the Autoconf documentation\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header:     section \\\"Present But Cannot Be Compiled\\\"\" >&5\n+echo \"$as_me: WARNING: $ac_header:     section \\\"Present But Cannot Be Compiled\\\"\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header: proceeding with the preprocessor's result\" >&5\n+echo \"$as_me: WARNING: $ac_header: proceeding with the preprocessor's result\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header: in the future, the compiler will take precedence\" >&5\n+echo \"$as_me: WARNING: $ac_header: in the future, the compiler will take precedence\" >&2;}\n+    (\n+      cat <<\\_ASBOX\n+## ----------------------------------------- ##\n+## Report this to the package-unused lists.  ##\n+## ----------------------------------------- ##\n+_ASBOX\n+    ) |\n+      sed \"s/^/$as_me: WARNING:     /\" >&2\n+    ;;\n+esac\n+echo \"$as_me:$LINENO: checking for $ac_header\" >&5\n+echo $ECHO_N \"checking for $ac_header... $ECHO_C\" >&6\n+if eval \"test \\\"\\${$as_ac_Header+set}\\\" = set\"; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  eval \"$as_ac_Header=\\$ac_header_preproc\"\n+fi\n+echo \"$as_me:$LINENO: result: `eval echo '${'$as_ac_Header'}'`\" >&5\n+echo \"${ECHO_T}`eval echo '${'$as_ac_Header'}'`\" >&6\n+\n+fi\n+if test `eval echo '${'$as_ac_Header'}'` = yes; then\n+  cat >>confdefs.h <<_ACEOF\n+#define `echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n+_ACEOF\n+ ac_has_complex_h=yes\n+else\n+  ac_has_complex_h=no\n+fi\n+\n+done\n+\n+  ac_c99_complex=no;\n+  if test x\"$ac_has_complex_h\" = x\"yes\"; then\n+    ac_c99_complex=yes;\n+    echo \"$as_me:$LINENO: checking for ISO C99 support in <complex.h>\" >&5\n+echo $ECHO_N \"checking for ISO C99 support in <complex.h>... $ECHO_C\" >&6\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ float _ComplexT; _ComplexT tmp;\n+\t            cabsf(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    cabs(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    cabsl(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ float _ComplexT; _ComplexT tmp;\n+                    cargf(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    carg(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    cargl(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ float _ComplexT; _ComplexT tmp;\n+\t\t    ccosf(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    ccos(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    ccosl(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ float _ComplexT; _ComplexT tmp;\n+\t\t    ccoshf(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    ccosh(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    ccoshl(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ float _ComplexT; _ComplexT tmp;\n+\t\t    cexpf(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    cexp(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    cexpl(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ float _ComplexT; _ComplexT tmp;\n+\t\t    csinf(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    csin(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    csinl(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ float _ComplexT; _ComplexT tmp;\n+ \t\t    csinhf(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    csinh(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    csinhl(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ float _ComplexT; _ComplexT tmp;\n+\t\t    csqrtf(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    csqrt(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    csqrtl(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ float _ComplexT; _ComplexT tmp;\n+\t\t    ctanf(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    ctan(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    ctanl(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ float _ComplexT; _ComplexT tmp;\n+\t\t    ctanhf(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    ctanh(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    ctanhl(tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ float _ComplexT; _ComplexT tmp;\n+\t\t    cpowf(tmp, tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ double _ComplexT; _ComplexT tmp;\n+\t\t    cpow(tmp, tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+int\n+main ()\n+{\n+typedef __complex__ long double _ComplexT; _ComplexT tmp;\n+\t\t    cpowl(tmp, tmp);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  :\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+  fi\n+  echo \"$as_me:$LINENO: result: $ac_c99_complex\" >&5\n+echo \"${ECHO_T}$ac_c99_complex\" >&6\n+\n+  if test x\"$ac_c99_complex\" = x\"yes\"; then\n+    cat >>confdefs.h <<\\_ACEOF\n+#define _GLIBCXX_USE_C99_COMPLEX_MATH 1\n+_ACEOF\n+\n+  fi\n+\n   # Check for the existence in <stdio.h> of vscanf, et. al.\n   ac_c99_stdio=yes;\n   echo \"$as_me:$LINENO: checking for ISO C99 support in <stdio.h>\" >&5"}, {"sha": "da322ab3a448b3cff6b576ba6d437a6055f87129", "filename": "libstdc++-v3/include/std/std_complex.h", "status": "modified", "additions": 80, "deletions": 21, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52e6723c6ced471d8dd44b9072e8a3ff65c28013/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_complex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52e6723c6ced471d8dd44b9072e8a3ff65c28013/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_complex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_complex.h?ref=52e6723c6ced471d8dd44b9072e8a3ff65c28013", "patch": "@@ -1,6 +1,6 @@\n // The template and inlines for the -*- C++ -*- complex number classes.\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -51,7 +51,7 @@\n \n namespace std\n {\n-  // Forward declarations\n+  // Forward declarations.\n   template<typename _Tp> class complex;\n   template<> class complex<float>;\n   template<> class complex<double>;\n@@ -558,9 +558,10 @@ namespace std\n         return __s;\n       __x /= __s; \n       __y /= __s;\n-          return __s * sqrt(__x * __x + __y * __y);\n+      return __s * sqrt(__x * __x + __y * __y);\n     }\n \n+#if _GLIBCXX_USE_C99_COMPLEX_MATH\n   inline float\n   __complex_abs(__complex__ float __z) { return __builtin_cabsf(__z); }\n \n@@ -569,23 +570,25 @@ namespace std\n \n   inline long double\n   __complex_abs(const __complex__ long double& __z)\n-  {\n-    return __builtin_cabsl(__z);\n-  }\n-  \n+  { return __builtin_cabsl(__z); }\n+\n   template<typename _Tp>\n     inline _Tp\n     abs(const complex<_Tp>& __z) { return __complex_abs(__z.__rep()); }\n+#else\n+  template<typename _Tp>\n+    inline _Tp\n+    abs(const complex<_Tp>& __z) { return __complex_abs(__z); }\n+#endif  \n \n \n   // 26.2.7/4: arg(__z): Returns the phase angle of __z.\n   template<typename _Tp>\n     inline _Tp\n     __complex_arg(const complex<_Tp>& __z)\n-    {\n-      return  atan2(__z.imag(), __z.real()); \n-    }\n+    { return  atan2(__z.imag(), __z.real()); }\n \n+#if _GLIBCXX_USE_C99_COMPLEX_MATH\n   inline float\n   __complex_arg(__complex__ float __z) { return __builtin_cargf(__z); }\n \n@@ -599,6 +602,11 @@ namespace std\n   template<typename _Tp>\n     inline _Tp\n     arg(const complex<_Tp>& __z) { return __complex_arg(__z.__rep()); }\n+#else\n+  template<typename _Tp>\n+    inline _Tp\n+    arg(const complex<_Tp>& __z) { return __complex_arg(__z); }\n+#endif\n \n   // 26.2.7/5: norm(__z) returns the squared magintude of __z.\n   //     As defined, norm() is -not- a norm is the common mathematical\n@@ -632,7 +640,8 @@ namespace std\n     inline _Tp\n     norm(const complex<_Tp>& __z)\n     {\n-      return _Norm_helper<__is_floating<_Tp>::_M_type && !_GLIBCXX_FAST_MATH>::_S_do_it(__z);\n+      return _Norm_helper<__is_floating<_Tp>::_M_type \n+\t&& !_GLIBCXX_FAST_MATH>::_S_do_it(__z);\n     }\n \n   template<typename _Tp>\n@@ -657,6 +666,7 @@ namespace std\n       return complex<_Tp>(cos(__x) * cosh(__y), -sin(__x) * sinh(__y));\n     }\n \n+#if _GLIBCXX_USE_C99_COMPLEX_MATH\n   inline __complex__ float\n   __complex_cos(__complex__ float __z) { return __builtin_ccosf(__z); }\n \n@@ -666,10 +676,15 @@ namespace std\n   inline __complex__ long double\n   __complex_cos(const __complex__ long double& __z)\n   { return __builtin_ccosl(__z); }\n-  \n+\n   template<typename _Tp>\n     inline complex<_Tp>\n     cos(const complex<_Tp>& __z) { return __complex_cos(__z.__rep()); }\n+#else\n+  template<typename _Tp>\n+    inline complex<_Tp>\n+    cos(const complex<_Tp>& __z) { return __complex_cos(__z); }\n+#endif\n \n   // 26.2.8/2 cosh(__z): Returns the hyperbolic cosine of __z.\n   template<typename _Tp>\n@@ -681,6 +696,7 @@ namespace std\n       return complex<_Tp>(cosh(__x) * cos(__y), sinh(__x) * sin(__y));\n     }\n \n+#if _GLIBCXX_USE_C99_COMPLEX_MATH\n   inline __complex__ float\n   __complex_cosh(__complex__ float __z) { return __builtin_ccoshf(__z); }\n \n@@ -694,13 +710,19 @@ namespace std\n   template<typename _Tp>\n     inline complex<_Tp>\n     cosh(const complex<_Tp>& __z) { return __complex_cosh(__z.__rep()); }\n+#else\n+  template<typename _Tp>\n+    inline complex<_Tp>\n+    cosh(const complex<_Tp>& __z) { return __complex_cosh(__z); }\n+#endif\n \n   // 26.2.8/3 exp(__z): Returns the complex base e exponential of x\n   template<typename _Tp>\n     inline complex<_Tp>\n     __complex_exp(const complex<_Tp>& __z)\n     { return std::polar(exp(__z.real()), __z.imag()); }\n \n+#if _GLIBCXX_USE_C99_COMPLEX_MATH\n   inline __complex__ float\n   __complex_exp(__complex__ float __z) { return __builtin_cexpf(__z); }\n \n@@ -710,10 +732,15 @@ namespace std\n   inline __complex__ long double\n   __complex_exp(const __complex__ long double& __z)\n   { return __builtin_cexpl(__z); }\n-  \n+\n   template<typename _Tp>\n     inline complex<_Tp>\n     exp(const complex<_Tp>& __z) { return __complex_exp(__z.__rep()); }\n+#else\n+  template<typename _Tp>\n+    inline complex<_Tp>\n+    exp(const complex<_Tp>& __z) { return __complex_exp(__z); }\n+#endif\n \n   // 26.2.8/5 log(__z): Reurns the natural complex logaritm of __z.\n   //                    The branch cut is along the negative axis.\n@@ -733,7 +760,7 @@ namespace std\n   __complex_log(const __complex__ long double& __z)\n   { return __builtin_clogl(__z); } */\n \n-  // FIXME: Currently wer don't use built-ins for log() because of some\n+  // FIXME: Currently we don't use built-ins for log() because of some\n   //        obscure user name-space issues.  So, we use the generic version\n   //        which is why we don't use __z.__rep() in the call below.\n   template<typename _Tp>\n@@ -755,6 +782,7 @@ namespace std\n       return complex<_Tp>(sin(__x) * cosh(__y), cos(__x) * sinh(__y)); \n     }\n \n+#if _GLIBCXX_USE_C99_COMPLEX_MATH\n   inline __complex__ float\n   __complex_sin(__complex__ float __z) { return __builtin_csinf(__z); }\n \n@@ -768,6 +796,11 @@ namespace std\n   template<typename _Tp>\n     inline complex<_Tp>\n     sin(const complex<_Tp>& __z) { return __complex_sin(__z.__rep()); }\n+#else\n+  template<typename _Tp>\n+    inline complex<_Tp>\n+    sin(const complex<_Tp>& __z) { return __complex_sin(__z); }\n+#endif\n \n   // 26.2.8/11 sinh(__z): Returns the hyperbolic sine of __z.\n   template<typename _Tp>\n@@ -779,6 +812,7 @@ namespace std\n       return complex<_Tp>(sinh(__x) * cos(__y), cosh(__x) * sin(__y));\n     }\n \n+#if _GLIBCXX_USE_C99_COMPLEX_MATH\n   inline __complex__ float\n   __complex_sinh(__complex__ float __z) { return __builtin_csinhf(__z); }      \n \n@@ -792,6 +826,11 @@ namespace std\n   template<typename _Tp>\n     inline complex<_Tp>\n     sinh(const complex<_Tp>& __z) { return __complex_sinh(__z.__rep()); }\n+#else\n+  template<typename _Tp>\n+    inline complex<_Tp>\n+    sinh(const complex<_Tp>& __z) { return __complex_sinh(__z); }\n+#endif\n \n   // 26.2.8/13 sqrt(__z): Returns the complex square root of __z.\n   //                     The branch cut is on the negative axis.\n@@ -817,6 +856,7 @@ namespace std\n         }\n     }\n \n+#if _GLIBCXX_USE_C99_COMPLEX_MATH\n   inline __complex__ float\n   __complex_sqrt(__complex__ float __z) { return __builtin_csqrtf(__z); }\n \n@@ -830,6 +870,11 @@ namespace std\n   template<typename _Tp>\n     inline complex<_Tp>\n     sqrt(const complex<_Tp>& __z) { return __complex_sqrt(__z.__rep()); }\n+#else\n+  template<typename _Tp>\n+    inline complex<_Tp>\n+    sqrt(const complex<_Tp>& __z) { return __complex_sqrt(__z); }\n+#endif\n \n   // 26.2.8/14 tan(__z):  Return the complex tangent of __z.\n   \n@@ -838,6 +883,7 @@ namespace std\n     __complex_tan(const complex<_Tp>& __z)\n     { return std::sin(__z) / std::cos(__z); }\n \n+#if _GLIBCXX_USE_C99_COMPLEX_MATH\n   inline __complex__ float\n   __complex_tan(__complex__ float __z) { return __builtin_ctanf(__z); }\n \n@@ -851,6 +897,12 @@ namespace std\n   template<typename _Tp>\n     inline complex<_Tp>\n     tan(const complex<_Tp>& __z) { return __complex_tan(__z.__rep()); }\n+#else\n+  template<typename _Tp>\n+    inline complex<_Tp>\n+    tan(const complex<_Tp>& __z) { return __complex_tan(__z); }\n+#endif\n+\n \n   // 26.2.8/15 tanh(__z):  Returns the hyperbolic tangent of __z.\n   \n@@ -859,6 +911,7 @@ namespace std\n     __complex_tanh(const complex<_Tp>& __z)\n     { return std::sinh(__z) / std::cosh(__z); }\n \n+#if _GLIBCXX_USE_C99_COMPLEX_MATH\n   inline __complex__ float\n   __complex_tanh(__complex__ float __z) { return __builtin_ctanhf(__z); }\n \n@@ -872,16 +925,20 @@ namespace std\n   template<typename _Tp>\n     inline complex<_Tp>\n     tanh(const complex<_Tp>& __z) { return __complex_tanh(__z.__rep()); }\n+#else\n+  template<typename _Tp>\n+    inline complex<_Tp>\n+    tanh(const complex<_Tp>& __z) { return __complex_tanh(__z); }\n+#endif\n+\n \n   // 26.2.8/9  pow(__x, __y): Returns the complex power base of __x\n   //                          raised to the __y-th power.  The branch\n   //                          cut is on the negative axis.\n   template<typename _Tp>\n     inline complex<_Tp>\n     pow(const complex<_Tp>& __z, int __n)\n-    {\n-      return std::__pow_helper(__z, __n);\n-    }\n+    { return std::__pow_helper(__z, __n); }\n \n   template<typename _Tp>\n     complex<_Tp>\n@@ -899,6 +956,7 @@ namespace std\n     __complex_pow(const complex<_Tp>& __x, const complex<_Tp>& __y)\n     { return __x == _Tp() ? _Tp() : std::exp(__y * std::log(__x)); }\n \n+#if _GLIBCXX_USE_C99_COMPLEX_MATH\n   inline __complex__ float\n   __complex_pow(__complex__ float __x, __complex__ float __y)\n   { return __builtin_cpowf(__x, __y); }\n@@ -910,7 +968,8 @@ namespace std\n   inline __complex__ long double\n   __complex_pow(__complex__ long double& __x, __complex__ long double& __y)\n   { return __builtin_cpowl(__x, __y); }\n-  \n+#endif\n+\n   template<typename _Tp>\n     inline complex<_Tp>\n     pow(const complex<_Tp>& __x, const complex<_Tp>& __y)\n@@ -936,7 +995,7 @@ namespace std\n       complex(_ComplexT __z) : _M_value(__z) { }\n \n       complex(float = 0.0f, float = 0.0f);\n-#ifdef _GLIBCXX_BUGGY_COMPLEX\n+#if _GLIBCXX_BUGGY_COMPLEX\n       complex(const complex& __z) : _M_value(__z._M_value) { }\n #endif\n       explicit complex(const complex<double>&);\n@@ -1092,7 +1151,7 @@ namespace std\n       complex(_ComplexT __z) : _M_value(__z) { }\n \n       complex(double  = 0.0, double = 0.0);\n-#ifdef _GLIBCXX_BUGGY_COMPLEX\n+#if _GLIBCXX_BUGGY_COMPLEX\n       complex(const complex& __z) : _M_value(__z._M_value) { }\n #endif\n       complex(const complex<float>&);\n@@ -1247,7 +1306,7 @@ namespace std\n       complex(_ComplexT __z) : _M_value(__z) { }\n \n       complex(long double = 0.0L, long double = 0.0L);\n-#ifdef _GLIBCXX_BUGGY_COMPLEX\n+#if _GLIBCXX_BUGGY_COMPLEX\n       complex(const complex& __z) : _M_value(__z._M_value) { }\n #endif\n       complex(const complex<float>&);"}]}