{"sha": "c75a3ddc67afe85c5bf177d76a47b487ee6277be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc1YTNkZGM2N2FmZTg1YzViZjE3N2Q3NmE0N2I0ODdlZTYyNzdiZQ==", "commit": {"author": {"name": "Philip Blundell", "email": "philb@gnu.org", "date": "2003-05-15T18:13:41Z"}, "committer": {"name": "Phil Blundell", "email": "pb@gcc.gnu.org", "date": "2003-05-15T18:13:41Z"}, "message": "re PR target/10730 ([arm] -O2 generates invalid asm)\n\n2003-05-15  Philip Blundell  <philb@gnu.org>\n\n\tPR target/10730\n\t* config/arm/arm.c (adjacent_mem_locations): Reject offsets\n\tinvolving invalid constants.\n\nFrom-SVN: r66838", "tree": {"sha": "2759a0cd344f37b8376653711cfc153b3b3f086b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2759a0cd344f37b8376653711cfc153b3b3f086b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c75a3ddc67afe85c5bf177d76a47b487ee6277be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c75a3ddc67afe85c5bf177d76a47b487ee6277be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c75a3ddc67afe85c5bf177d76a47b487ee6277be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c75a3ddc67afe85c5bf177d76a47b487ee6277be/comments", "author": {"login": "philb", "id": 227468, "node_id": "MDQ6VXNlcjIyNzQ2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/227468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philb", "html_url": "https://github.com/philb", "followers_url": "https://api.github.com/users/philb/followers", "following_url": "https://api.github.com/users/philb/following{/other_user}", "gists_url": "https://api.github.com/users/philb/gists{/gist_id}", "starred_url": "https://api.github.com/users/philb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philb/subscriptions", "organizations_url": "https://api.github.com/users/philb/orgs", "repos_url": "https://api.github.com/users/philb/repos", "events_url": "https://api.github.com/users/philb/events{/privacy}", "received_events_url": "https://api.github.com/users/philb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dffbbe8019dd880e4dcc4a66670acd7449cede92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dffbbe8019dd880e4dcc4a66670acd7449cede92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dffbbe8019dd880e4dcc4a66670acd7449cede92"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "772b5e0a50a80759f0dd369f570e57f13e5aba08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c75a3ddc67afe85c5bf177d76a47b487ee6277be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c75a3ddc67afe85c5bf177d76a47b487ee6277be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c75a3ddc67afe85c5bf177d76a47b487ee6277be", "patch": "@@ -1,3 +1,9 @@\n+2003-05-15  Philip Blundell  <philb@gnu.org>\n+\n+\tPR target/10730\n+\t* config/arm/arm.c (adjacent_mem_locations): Reject offsets\n+\tinvolving invalid constants.\n+\n 2003-05-15  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* pa.c (hppa_expand_prologue): Remove blockage."}, {"sha": "d776766dc7f14333b3a6dd699777dbbd99ef9460", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c75a3ddc67afe85c5bf177d76a47b487ee6277be/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c75a3ddc67afe85c5bf177d76a47b487ee6277be/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=c75a3ddc67afe85c5bf177d76a47b487ee6277be", "patch": "@@ -4571,6 +4571,12 @@ adjacent_mem_locations (a, b)\n       else\n \treg1 = REGNO (XEXP (b, 0));\n \n+      /* Don't accept any offset that will require multiple instructions to handle,\n+\t since this would cause the arith_adjacentmem pattern to output an overlong\n+\t sequence.  */\n+      if (!const_ok_for_op (PLUS, val0) || !const_ok_for_op (PLUS, val1))\n+\treturn 0;\n+      \n       return (reg0 == reg1) && ((val1 - val0) == 4 || (val0 - val1) == 4);\n     }\n   return 0;"}]}