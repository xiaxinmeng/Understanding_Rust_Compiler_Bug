{"sha": "9ef13bd018fc5c6e2dc57aa36d378919c8aeded1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVmMTNiZDAxOGZjNWM2ZTJkYzU3YWEzNmQzNzg5MTljOGFlZGVkMQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2011-03-16T06:26:29Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2011-03-16T06:26:29Z"}, "message": "re PR target/45844 (FAIL: gfortran.dg/vect/pr45714-b.f  -O  (internal compiler error))\n\n\tPR target/45844\n\t* config/rs6000/rs6000.c (rs6000_legitimize_reload_address): Don't\n\tcreate invalid offset address for vsx splat insn.\n\t* config/rs6000/predicates.md (splat_input_operand): New.\n\t* config/rs6000/vsx.md (vsx_splat_*): Use it.\n\nFrom-SVN: r171031", "tree": {"sha": "1a50a581db972867eb3dbeebd70c5c125ab2d722", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a50a581db972867eb3dbeebd70c5c125ab2d722"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ef13bd018fc5c6e2dc57aa36d378919c8aeded1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef13bd018fc5c6e2dc57aa36d378919c8aeded1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ef13bd018fc5c6e2dc57aa36d378919c8aeded1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef13bd018fc5c6e2dc57aa36d378919c8aeded1/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "338241572aaefd2b54e764abf0de187ece2bd184", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/338241572aaefd2b54e764abf0de187ece2bd184", "html_url": "https://github.com/Rust-GCC/gccrs/commit/338241572aaefd2b54e764abf0de187ece2bd184"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "87626232570275977e98e168578d0188f1593766", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef13bd018fc5c6e2dc57aa36d378919c8aeded1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef13bd018fc5c6e2dc57aa36d378919c8aeded1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ef13bd018fc5c6e2dc57aa36d378919c8aeded1", "patch": "@@ -1,3 +1,11 @@\n+2011-03-16  Alan Modra  <amodra@gmail.com>\n+\n+\tPR target/45844\n+\t* config/rs6000/rs6000.c (rs6000_legitimize_reload_address): Don't\n+\tcreate invalid offset address for vsx splat insn.\n+\t* config/rs6000/predicates.md (splat_input_operand): New.\n+\t* config/rs6000/vsx.md (vsx_splat_*): Use it.\n+\n 2011-03-15  Xinliang David Li  <davidxl@google.com>\n \n \tPR c/47837"}, {"sha": "046f8bca83b4ac7180a5eae61052cff2f8f0dd61", "filename": "gcc/config/rs6000/predicates.md", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef13bd018fc5c6e2dc57aa36d378919c8aeded1/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef13bd018fc5c6e2dc57aa36d378919c8aeded1/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpredicates.md?ref=9ef13bd018fc5c6e2dc57aa36d378919c8aeded1", "patch": "@@ -1,5 +1,5 @@\n ;; Predicate definitions for POWER and PowerPC.\n-;; Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010\n+;; Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011\n ;; Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n@@ -871,6 +871,23 @@\n   return 0;\n })\n \n+;; Return 1 if this operand is a valid input for a vsx_splat insn.\n+(define_predicate \"splat_input_operand\"\n+  (match_code \"label_ref,symbol_ref,const,high,reg,subreg,mem,\n+\t       const_double,const_vector,const_int,plus\")\n+{\n+  if (MEM_P (op))\n+    {\n+      if (mode == DFmode)\n+\tmode = V2DFmode;\n+      else if (mode == DImode)\n+\tmode = V2DImode;\n+      else\n+\tgcc_unreachable ();        \n+    }\n+  return input_operand (op, mode);\n+})\n+\n ;; Return true if OP is an invalid SUBREG operation on the e500.\n (define_predicate \"rs6000_nonimmediate_operand\"\n   (match_code \"reg,subreg,mem\")"}, {"sha": "0714c8fc3998734dcc8274e98b3dab0abdcb67a4", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef13bd018fc5c6e2dc57aa36d378919c8aeded1/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef13bd018fc5c6e2dc57aa36d378919c8aeded1/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=9ef13bd018fc5c6e2dc57aa36d378919c8aeded1", "patch": "@@ -6676,6 +6676,14 @@ rs6000_legitimize_reload_address (rtx x, enum machine_mode mode,\n {\n   bool reg_offset_p = reg_offset_addressing_ok_p (mode);\n \n+  /* Nasty hack for vsx_splat_V2DF/V2DI load from mem, which takes a\n+     DFmode/DImode MEM.  */\n+  if (reg_offset_p\n+      && opnum == 1\n+      && ((mode == DFmode && recog_data.operand_mode[0] == V2DFmode)\n+\t  || (mode == DImode && recog_data.operand_mode[0] == V2DImode)))\n+    reg_offset_p = false;\n+\n   /* We must recognize output that we have already generated ourselves.  */\n   if (GET_CODE (x) == PLUS\n       && GET_CODE (XEXP (x, 0)) == PLUS"}, {"sha": "a5b5a5374cb77debeef0a8a94a311f8fa25b5eff", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef13bd018fc5c6e2dc57aa36d378919c8aeded1/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef13bd018fc5c6e2dc57aa36d378919c8aeded1/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=9ef13bd018fc5c6e2dc57aa36d378919c8aeded1", "patch": "@@ -1076,7 +1076,7 @@\n (define_insn \"vsx_splat_<mode>\"\n   [(set (match_operand:VSX_D 0 \"vsx_register_operand\" \"=wd,wd,wd,?wa,?wa,?wa\")\n \t(vec_duplicate:VSX_D\n-\t (match_operand:<VS_scalar> 1 \"input_operand\" \"ws,f,Z,wa,wa,Z\")))]\n+\t (match_operand:<VS_scalar> 1 \"splat_input_operand\" \"ws,f,Z,wa,wa,Z\")))]\n   \"VECTOR_MEM_VSX_P (<MODE>mode)\"\n   \"@\n    xxpermdi %x0,%x1,%x1,0"}]}