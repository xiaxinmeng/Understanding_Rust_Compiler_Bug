{"sha": "674ec679059bca34099618b1987287b60ab12029", "node_id": "C_kwDOANBUbNoAKDY3NGVjNjc5MDU5YmNhMzQwOTk2MThiMTk4NzI4N2I2MGFiMTIwMjk", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-03-23T12:16:25Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-03-25T20:21:48Z"}, "message": "libstdc++: Add more doxygen comments in <bit>\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/bit (bit_cast, byteswap, endian): Add doxygen\n\tcomments.", "tree": {"sha": "735bc90ad4de7238f23e94aeb08a1936f71a9b90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/735bc90ad4de7238f23e94aeb08a1936f71a9b90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/674ec679059bca34099618b1987287b60ab12029", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/674ec679059bca34099618b1987287b60ab12029", "html_url": "https://github.com/Rust-GCC/gccrs/commit/674ec679059bca34099618b1987287b60ab12029", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/674ec679059bca34099618b1987287b60ab12029/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ab5c8cd03d92bf4ec41e351820349d92fbc40c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ab5c8cd03d92bf4ec41e351820349d92fbc40c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ab5c8cd03d92bf4ec41e351820349d92fbc40c4"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "ef19d649e32ded777c8622dd10e77b12ba208b3b", "filename": "libstdc++-v3/include/std/bit", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/674ec679059bca34099618b1987287b60ab12029/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbit", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/674ec679059bca34099618b1987287b60ab12029/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbit", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbit?ref=674ec679059bca34099618b1987287b60ab12029", "patch": "@@ -69,6 +69,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #define __cpp_lib_bit_cast 201806L\n \n   /// Create a value of type `To` from the bits of `from`.\n+  /**\n+   * @tparam _To   A trivially-copyable type.\n+   * @param __from A trivially-copyable object of the same size as `_To`.\n+   * @return       An object of type `_To`.\n+   * @since C++20\n+   */\n   template<typename _To, typename _From>\n     [[nodiscard]]\n     constexpr _To\n@@ -86,6 +92,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #define __cpp_lib_byteswap 202110L\n \n   /// Reverse order of bytes in the object representation of `value`.\n+  /**\n+   * @tparam _Tp     An integral type.\n+   * @param __value  An object of integer type.\n+   * @return         An object of the same type, with the bytes reversed.\n+   * @since C++23\n+   */\n   template<typename _Tp>\n     [[nodiscard]]\n     constexpr enable_if_t<is_integral<_Tp>::value, _Tp>\n@@ -444,7 +456,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n #define __cpp_lib_endian 201907L\n \n-  /// Byte order\n+  /// Byte order constants\n+  /**\n+   * The platform endianness can be checked by comparing `std::endian::native`\n+   * to one of `std::endian::big` or `std::endian::little`.\n+   *\n+   * @since C++20\n+   */\n   enum class endian\n   {\n     little = __ORDER_LITTLE_ENDIAN__,"}]}