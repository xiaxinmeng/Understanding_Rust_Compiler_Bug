{"sha": "364f4cd3072cb1fa99431fe001f03451059f075e", "node_id": "C_kwDOANBUbNoAKDM2NGY0Y2QzMDcyY2IxZmE5OTQzMWZlMDAxZjAzNDUxMDU5ZjA3NWU", "commit": {"author": {"name": "Owen Avery", "email": "powerboat9.gamer@gmail.com", "date": "2023-01-10T00:54:55Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-04-06T08:47:17Z"}, "message": "gccrs: Reuse TypeCheckPattern on LetStmt's\n\nUpdate Rust type-checking to reuse TypeCheckPattern on HIR::LetStmt's.\nThis will unify the paths and improve error handling.\n\ngcc/rust/ChangeLog:\n\n\t* typecheck/rust-hir-type-check-stmt.cc (TypeCheckStmt::visit): Cleanup LetStmt\n\ttype checking.\n\nSigned-off-by: Owen Avery <powerboat9.gamer@gmail.com>", "tree": {"sha": "56f4246ae0bb7b5b50aaca8b6bd1c4a310c4a73c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56f4246ae0bb7b5b50aaca8b6bd1c4a310c4a73c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/364f4cd3072cb1fa99431fe001f03451059f075e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/364f4cd3072cb1fa99431fe001f03451059f075e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/364f4cd3072cb1fa99431fe001f03451059f075e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/364f4cd3072cb1fa99431fe001f03451059f075e/comments", "author": {"login": "powerboat9", "id": 7397652, "node_id": "MDQ6VXNlcjczOTc2NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/7397652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/powerboat9", "html_url": "https://github.com/powerboat9", "followers_url": "https://api.github.com/users/powerboat9/followers", "following_url": "https://api.github.com/users/powerboat9/following{/other_user}", "gists_url": "https://api.github.com/users/powerboat9/gists{/gist_id}", "starred_url": "https://api.github.com/users/powerboat9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/powerboat9/subscriptions", "organizations_url": "https://api.github.com/users/powerboat9/orgs", "repos_url": "https://api.github.com/users/powerboat9/repos", "events_url": "https://api.github.com/users/powerboat9/events{/privacy}", "received_events_url": "https://api.github.com/users/powerboat9/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7eab9d18d97d0ea938c5c7194a7a82109d3a5ea6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eab9d18d97d0ea938c5c7194a7a82109d3a5ea6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eab9d18d97d0ea938c5c7194a7a82109d3a5ea6"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "956249a76070a05a86424fa60b5b92929f55cf67", "filename": "gcc/rust/typecheck/rust-hir-type-check-stmt.cc", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/364f4cd3072cb1fa99431fe001f03451059f075e/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-stmt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/364f4cd3072cb1fa99431fe001f03451059f075e/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-stmt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-stmt.cc?ref=364f4cd3072cb1fa99431fe001f03451059f075e", "patch": "@@ -82,7 +82,7 @@ TypeCheckStmt::visit (HIR::LetStmt &stmt)\n {\n   infered = TyTy::TupleType::get_unit_type (stmt.get_mappings ().get_hirid ());\n \n-  const HIR::Pattern &stmt_pattern = *stmt.get_pattern ();\n+  HIR::Pattern &stmt_pattern = *stmt.get_pattern ();\n   TyTy::BaseType *init_expr_ty = nullptr;\n   Location init_expr_locus;\n   if (stmt.has_init_expr ())\n@@ -111,27 +111,25 @@ TypeCheckStmt::visit (HIR::LetStmt &stmt)\n \t\t     TyTy::TyWithLocation (specified_ty, specified_ty_locus),\n \t\t     TyTy::TyWithLocation (init_expr_ty, init_expr_locus),\n \t\t     stmt.get_locus ());\n-      context->insert_type (stmt_pattern.get_pattern_mappings (), specified_ty);\n+      TypeCheckPattern::Resolve (&stmt_pattern, specified_ty);\n     }\n   else\n     {\n       // let x:i32;\n       if (specified_ty != nullptr)\n \t{\n-\t  context->insert_type (stmt_pattern.get_pattern_mappings (),\n-\t\t\t\tspecified_ty);\n+\t  TypeCheckPattern::Resolve (&stmt_pattern, specified_ty);\n \t}\n       // let x = 123;\n       else if (init_expr_ty != nullptr)\n \t{\n-\t  context->insert_type (stmt_pattern.get_pattern_mappings (),\n-\t\t\t\tinit_expr_ty);\n+\t  TypeCheckPattern::Resolve (&stmt_pattern, init_expr_ty);\n \t}\n       // let x;\n       else\n \t{\n-\t  context->insert_type (\n-\t    stmt_pattern.get_pattern_mappings (),\n+\t  TypeCheckPattern::Resolve (\n+\t    &stmt_pattern,\n \t    new TyTy::InferType (\n \t      stmt_pattern.get_pattern_mappings ().get_hirid (),\n \t      TyTy::InferType::InferTypeKind::GENERAL, stmt.get_locus ()));"}]}