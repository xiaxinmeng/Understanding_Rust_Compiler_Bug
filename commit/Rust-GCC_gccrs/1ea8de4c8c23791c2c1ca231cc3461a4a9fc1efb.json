{"sha": "1ea8de4c8c23791c2c1ca231cc3461a4a9fc1efb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVhOGRlNGM4YzIzNzkxYzJjMWNhMjMxY2MzNDYxYTRhOWZjMWVmYg==", "commit": {"author": {"name": "Dimitar Dimitrov", "email": "dimitar@dinux.eu", "date": "2019-09-15T15:01:22Z"}, "committer": {"name": "Dimitar Dimitrov", "email": "dimitar@dinux.eu", "date": "2020-05-05T17:42:57Z"}, "message": "PRU: Remove TARGET_HARD_REGNO_CALL_PART_CLOBBERED\n\nPer clarification in [1], macro is supposed to check for partial\nclobbering of single HW registers. Since PRU declares only 8-bit\nHW registers, and ABI does not define individual bit clobbering,\nit is safe to remove the implementation.\n\n[1] https://gcc.gnu.org/ml/gcc-patches/2019-09/msg00778.html\n\ngcc/ChangeLog:\n\n2020-05-05  Dimitar Dimitrov  <dimitar@dinux.eu>\n\n\t* config/pru/pru.c (pru_hard_regno_call_part_clobbered): Remove.\n\t(TARGET_HARD_REGNO_CALL_PART_CLOBBERED): Remove.\n\nSigned-off-by: Dimitar Dimitrov <dimitar@dinux.eu>", "tree": {"sha": "1507f675645916d8a880dba266cf890a7bed5422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1507f675645916d8a880dba266cf890a7bed5422"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ea8de4c8c23791c2c1ca231cc3461a4a9fc1efb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ea8de4c8c23791c2c1ca231cc3461a4a9fc1efb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ea8de4c8c23791c2c1ca231cc3461a4a9fc1efb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ea8de4c8c23791c2c1ca231cc3461a4a9fc1efb/comments", "author": null, "committer": null, "parents": [{"sha": "931dfb70abce3d979b8fa81e3b7c7dfcfecb0cd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/931dfb70abce3d979b8fa81e3b7c7dfcfecb0cd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/931dfb70abce3d979b8fa81e3b7c7dfcfecb0cd4"}], "stats": {"total": 39, "additions": 5, "deletions": 34}, "files": [{"sha": "6b4d53da318d88f481569d33c6fa9d074babfe60", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea8de4c8c23791c2c1ca231cc3461a4a9fc1efb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea8de4c8c23791c2c1ca231cc3461a4a9fc1efb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ea8de4c8c23791c2c1ca231cc3461a4a9fc1efb", "patch": "@@ -1,3 +1,8 @@\n+2020-05-05  Dimitar Dimitrov  <dimitar@dinux.eu>\n+\n+\t* config/pru/pru.c (pru_hard_regno_call_part_clobbered): Remove.\n+\t(TARGET_HARD_REGNO_CALL_PART_CLOBBERED): Remove.\n+\n 2020-05-05  Dimitar Dimitrov  <dimitar@dinux.eu>\n \n \t* config/pru/pru.h: Mark R3.w0 as caller saved."}, {"sha": "a715f6b07ceebc1fd4ac1b3a0388166e0783faff", "filename": "gcc/config/pru/pru.c", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea8de4c8c23791c2c1ca231cc3461a4a9fc1efb/gcc%2Fconfig%2Fpru%2Fpru.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea8de4c8c23791c2c1ca231cc3461a4a9fc1efb/gcc%2Fconfig%2Fpru%2Fpru.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpru%2Fpru.c?ref=1ea8de4c8c23791c2c1ca231cc3461a4a9fc1efb", "patch": "@@ -556,37 +556,6 @@ pru_hard_regno_scratch_ok (unsigned int regno)\n }\n \n \n-/* Implement TARGET_HARD_REGNO_CALL_PART_CLOBBERED.  */\n-\n-static bool\n-pru_hard_regno_call_part_clobbered (unsigned, unsigned regno,\n-\t\t\t\t    machine_mode mode)\n-{\n-  HARD_REG_SET caller_saved_set;\n-  HARD_REG_SET callee_saved_set;\n-\n-  CLEAR_HARD_REG_SET (caller_saved_set);\n-  CLEAR_HARD_REG_SET (callee_saved_set);\n-\n-  /* r0 and r1 are caller saved.  */\n-  add_range_to_hard_reg_set (&caller_saved_set, 0, 2 * 4);\n-\n-  add_range_to_hard_reg_set (&caller_saved_set, FIRST_ARG_REGNUM,\n-\t\t\t     LAST_ARG_REGNUM + 1 - FIRST_ARG_REGNUM);\n-\n-  /* Treat SP as callee saved.  */\n-  add_range_to_hard_reg_set (&callee_saved_set, STACK_POINTER_REGNUM, 4);\n-\n-  /* r3 to r13 are callee saved.  */\n-  add_range_to_hard_reg_set (&callee_saved_set, FIRST_CALLEE_SAVED_REGNUM,\n-\t\t\t     LAST_CALEE_SAVED_REGNUM + 1\n-\t\t\t     - FIRST_CALLEE_SAVED_REGNUM);\n-\n-  return overlaps_hard_reg_set_p (caller_saved_set, mode, regno)\n-\t && overlaps_hard_reg_set_p (callee_saved_set, mode, regno);\n-}\n-\n-\n /* Worker function for `HARD_REGNO_RENAME_OK'.\n    Return nonzero if register OLD_REG can be renamed to register NEW_REG.  */\n \n@@ -2935,9 +2904,6 @@ pru_unwind_word_mode (void)\n \n #undef  TARGET_HARD_REGNO_SCRATCH_OK\n #define TARGET_HARD_REGNO_SCRATCH_OK pru_hard_regno_scratch_ok\n-#undef  TARGET_HARD_REGNO_CALL_PART_CLOBBERED\n-#define TARGET_HARD_REGNO_CALL_PART_CLOBBERED \\\n-  pru_hard_regno_call_part_clobbered\n \n #undef TARGET_FUNCTION_ARG\n #define TARGET_FUNCTION_ARG pru_function_arg"}]}