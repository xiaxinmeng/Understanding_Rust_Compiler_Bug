{"sha": "7b1124877bf99491ff9128243a692a05567d9864", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IxMTI0ODc3YmY5OTQ5MWZmOTEyODI0M2E2OTJhMDU1NjdkOTg2NA==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-08-30T19:21:48Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-08-30T19:21:48Z"}, "message": "c-tree.h (struct language_function): Add arg_info element.\n\n\t* c-tree.h (struct language_function): Add arg_info element.\n\t* c-decl.c (current_function_arg_info): New.\n\t(grokdeclarator, store_parm_decls): Use it instead of\n\tDECL_ARGUMENTS.\n\t(c_push_function_context, c_pop_function_context): Save and\n\trestore it.\n\nFrom-SVN: r86798", "tree": {"sha": "b28bd4954b74e6b50dea52cc37ac70fcda624e58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b28bd4954b74e6b50dea52cc37ac70fcda624e58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b1124877bf99491ff9128243a692a05567d9864", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b1124877bf99491ff9128243a692a05567d9864", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b1124877bf99491ff9128243a692a05567d9864", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b1124877bf99491ff9128243a692a05567d9864/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "298e6adcf212620192ae9b66c27b4eae64916e7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/298e6adcf212620192ae9b66c27b4eae64916e7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/298e6adcf212620192ae9b66c27b4eae64916e7b"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "0017a24ac8d861aa5e00bb8cc00cf8cd45d8429b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1124877bf99491ff9128243a692a05567d9864/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1124877bf99491ff9128243a692a05567d9864/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b1124877bf99491ff9128243a692a05567d9864", "patch": "@@ -1,3 +1,12 @@\n+2004-08-30  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* c-tree.h (struct language_function): Add arg_info element.\n+\t* c-decl.c (current_function_arg_info): New.\n+\t(grokdeclarator, store_parm_decls): Use it instead of\n+\tDECL_ARGUMENTS.\n+\t(c_push_function_context, c_pop_function_context): Save and\n+\trestore it.\n+\n 2004-08-30  Richard Henderson  <rth@redhat.com>\n \n \t* c-typeck.c (build_unary_op): Don't expand ADDR_EXPR of a "}, {"sha": "7ef352e35412208c0537db8ea3dd5b154ff38172", "filename": "gcc/c-decl.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1124877bf99491ff9128243a692a05567d9864/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1124877bf99491ff9128243a692a05567d9864/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=7b1124877bf99491ff9128243a692a05567d9864", "patch": "@@ -104,6 +104,11 @@ static int enum_overflow;\n \n static location_t current_function_prototype_locus;\n \n+/* The argument information structure for the function currently being\n+   defined.  */\n+\n+static GTY(()) tree current_function_arg_info;\n+\n /* The current statement tree.  */\n \n static GTY(()) struct stmt_tree_s c_stmt_tree;\n@@ -4704,10 +4709,9 @@ grokdeclarator (tree declarator, tree declspecs,\n \t  = !(specbits & ((1 << (int) RID_STATIC) | (1 << (int) RID_AUTO)));\n \n \t/* For a function definition, record the argument information\n-\t   block in DECL_ARGUMENTS where store_parm_decls will look\n-\t   for it.  */\n+\t   block where store_parm_decls will look for it.  */\n \tif (funcdef_flag)\n-\t  DECL_ARGUMENTS (decl) = arg_info;\n+\t  current_function_arg_info = arg_info;\n \n \tif (defaulted_int)\n \t  C_FUNCTION_IMPLICIT_INT (decl) = 1;\n@@ -6352,16 +6356,18 @@ void\n store_parm_decls (void)\n {\n   tree fndecl = current_function_decl;\n+  bool proto;\n \n   /* The argument information block for FNDECL.  */\n-  tree arg_info = DECL_ARGUMENTS (fndecl);\n+  tree arg_info = current_function_arg_info;\n+  current_function_arg_info = 0;\n \n   /* True if this definition is written with a prototype.  Note:\n      despite C99 6.7.5.3p14, we can *not* treat an empty argument\n      list in a function definition as equivalent to (void) -- an\n      empty argument list specifies the function has no parameters,\n      but only (void) sets up a prototype for future calls.  */\n-  bool proto = ARG_INFO_TYPES (arg_info) != 0;\n+  proto = ARG_INFO_TYPES (arg_info) != 0;\n \n   if (proto)\n     store_parm_decls_newstyle (fndecl, arg_info);\n@@ -6645,6 +6651,7 @@ c_push_function_context (struct function *f)\n   p->x_break_label = c_break_label;\n   p->x_cont_label = c_cont_label;\n   p->x_switch_stack = c_switch_stack;\n+  p->arg_info = current_function_arg_info;\n   p->returns_value = current_function_returns_value;\n   p->returns_null = current_function_returns_null;\n   p->returns_abnormally = current_function_returns_abnormally;\n@@ -6673,6 +6680,7 @@ c_pop_function_context (struct function *f)\n   c_break_label = p->x_break_label;\n   c_cont_label = p->x_cont_label;\n   c_switch_stack = p->x_switch_stack;\n+  current_function_arg_info = p->arg_info;\n   current_function_returns_value = p->returns_value;\n   current_function_returns_null = p->returns_null;\n   current_function_returns_abnormally = p->returns_abnormally;"}, {"sha": "329948ade5360b7957cde3bfb7753defc6941280", "filename": "gcc/c-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1124877bf99491ff9128243a692a05567d9864/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1124877bf99491ff9128243a692a05567d9864/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=7b1124877bf99491ff9128243a692a05567d9864", "patch": "@@ -135,6 +135,7 @@ struct language_function GTY(())\n   tree x_break_label;\n   tree x_cont_label;\n   struct c_switch * GTY((skip)) x_switch_stack;\n+  tree arg_info;\n   int returns_value;\n   int returns_null;\n   int returns_abnormally;"}]}