{"sha": "3d581777692c6e9a03c380daf2c86a64f226850d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q1ODE3Nzc2OTJjNmU5YTAzYzM4MGRhZjJjODZhNjRmMjI2ODUwZA==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-05-23T10:21:37Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-23T10:21:37Z"}, "message": "[Ada] Minor reformatting\n\n2018-05-23  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* einfo.adb, exp_disp.adb, sem_ch3.adb, sem_ch6.adb, sem_prag.adb:\n\tMinor reformatting.\n\nFrom-SVN: r260571", "tree": {"sha": "4e8cca05c72422de1aa4adca8196fc79c4d8e379", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e8cca05c72422de1aa4adca8196fc79c4d8e379"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d581777692c6e9a03c380daf2c86a64f226850d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d581777692c6e9a03c380daf2c86a64f226850d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d581777692c6e9a03c380daf2c86a64f226850d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d581777692c6e9a03c380daf2c86a64f226850d/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "72cfbeae2b8dbc10e2738f5ccbe6328ac2111ddf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72cfbeae2b8dbc10e2738f5ccbe6328ac2111ddf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72cfbeae2b8dbc10e2738f5ccbe6328ac2111ddf"}], "stats": {"total": 63, "additions": 34, "deletions": 29}, "files": [{"sha": "bb1e21f70823075c01f4a29bc1d9222bc0a7d6bb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d581777692c6e9a03c380daf2c86a64f226850d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d581777692c6e9a03c380daf2c86a64f226850d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3d581777692c6e9a03c380daf2c86a64f226850d", "patch": "@@ -1,3 +1,8 @@\n+2018-05-23  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.adb, exp_disp.adb, sem_ch3.adb, sem_ch6.adb, sem_prag.adb:\n+\tMinor reformatting.\n+\n 2018-05-22  Justin Squirek  <squirek@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Expression_Function): Propagate flags from the"}, {"sha": "339faa66c7a2b2e07f6f71390fe706ab7dad76dd", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d581777692c6e9a03c380daf2c86a64f226850d/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d581777692c6e9a03c380daf2c86a64f226850d/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=3d581777692c6e9a03c380daf2c86a64f226850d", "patch": "@@ -253,13 +253,13 @@ package body Einfo is\n    --    Access_Disp_Table_Elab_Flag     Node30\n    --    Anonymous_Object                Node30\n    --    Corresponding_Equality          Node30\n+   --    Hidden_In_Formal_Instance       Elist30\n    --    Last_Aggregate_Assignment       Node30\n    --    Static_Initialization           Node30\n-   --    Hidden_In_Formal_Instance       Elist30\n \n+   --    Activation_Record_Component     Node31\n    --    Derived_Type_Link               Node31\n    --    Thunk_Entity                    Node31\n-   --    Activation_Record_Component     Node31\n \n    --    Corresponding_Function          Node32\n    --    Corresponding_Procedure         Node32"}, {"sha": "84add602c44b8e7cd1bda35d570bb979c87a434e", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d581777692c6e9a03c380daf2c86a64f226850d/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d581777692c6e9a03c380daf2c86a64f226850d/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=3d581777692c6e9a03c380daf2c86a64f226850d", "patch": "@@ -5021,7 +5021,7 @@ package body Exp_Disp is\n                 Constant_Present    => True,\n                 Object_Definition   =>\n                   New_Occurrence_Of (RTE (RE_Address), Loc),\n-                Expression =>\n+                Expression          =>\n                   Make_Attribute_Reference (Loc,\n                     Prefix         =>\n                       Make_Selected_Component (Loc,\n@@ -5033,7 +5033,8 @@ package body Exp_Disp is\n          end if;\n       end if;\n \n-      --  Generate: Expanded_Name : constant String := \"\";\n+      --  Generate:\n+      --    Expanded_Name : constant String := \"\";\n \n       if Global_Discard_Names or else Discard_Names (Typ) then\n          Append_To (Result,\n@@ -5069,29 +5070,30 @@ package body Exp_Disp is\n \n       if Expanded_Name /= External_Tag_Name then\n \n-         --  Generate: External_Tag_Name : constant String := \"\";\n+         --  Generate:\n+         --    External_Tag_Name : constant String := \"\";\n \n          if Present (No_Tagged_Streams_Pragma (Typ)) then\n             Append_To (Result,\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => External_Tag_Name,\n                 Constant_Present    => True,\n-                Object_Definition   => New_Occurrence_Of\n-                                         (Standard_String, Loc),\n-                Expression =>\n-                  Make_String_Literal (Loc, \"\")));\n+                Object_Definition   =>\n+                  New_Occurrence_Of (Standard_String, Loc),\n+                Expression          => Make_String_Literal (Loc, \"\")));\n \n          --  Generate:\n-         --   External_Tag_Name : constant String := full_qualified_name (typ);\n+         --    External_Tag_Name : constant String :=\n+         --                          full_qualified_name (typ);\n \n          else\n             Append_To (Result,\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => External_Tag_Name,\n                 Constant_Present    => True,\n-                Object_Definition   => New_Occurrence_Of\n-                                         (Standard_String, Loc),\n-                Expression =>\n+                Object_Definition   =>\n+                  New_Occurrence_Of (Standard_String, Loc),\n+                Expression          =>\n                   Make_String_Literal (Loc,\n                     Fully_Qualified_Name_String (First_Subtype (Typ)))));\n          end if;\n@@ -5198,8 +5200,7 @@ package body Exp_Disp is\n          New_Node :=\n            Unchecked_Convert_To (RTE (RE_Cstring_Ptr),\n              Make_Attribute_Reference (Loc,\n-               Prefix         => New_Occurrence_Of\n-                                   (External_Tag_Name, Loc),\n+               Prefix         => New_Occurrence_Of (External_Tag_Name, Loc),\n                Attribute_Name => Name_Address));\n \n       --  External_Tag of a local tagged type\n@@ -5332,8 +5333,8 @@ package body Exp_Disp is\n                New_Node :=\n                  Unchecked_Convert_To (RTE (RE_Cstring_Ptr),\n                    Make_Attribute_Reference (Loc,\n-                     Prefix         => New_Occurrence_Of\n-                                         (External_Tag_Name, Loc),\n+                     Prefix         =>\n+                       New_Occurrence_Of (External_Tag_Name, Loc),\n                      Attribute_Name => Name_Address));\n             else\n                Old_Val := Strval (Expr_Value_S (Expression (Def)));"}, {"sha": "84e1fec7e4cdd1918b418721913e9b61f84e91cf", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d581777692c6e9a03c380daf2c86a64f226850d/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d581777692c6e9a03c380daf2c86a64f226850d/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=3d581777692c6e9a03c380daf2c86a64f226850d", "patch": "@@ -17981,16 +17981,16 @@ package body Sem_Ch3 is\n          then\n             Result :=\n               Search_Derivation_Levels (Ti, Stored_Constraint (Ti), True);\n+\n          else\n             declare\n                Td : Entity_Id := Etype (Ti);\n \n             begin\n-\n                --  If the parent type is private, the full view may include\n-               --  renamed discriminants, and it is those stored values\n-               --  that may be needed (the partial view never has more\n-               --  information than the full view).\n+               --  renamed discriminants, and it is those stored values that\n+               --  may be needed (the partial view never has more information\n+               --  than the full view).\n \n                if Is_Private_Type (Td) and then Present (Full_View (Td)) then\n                   Td := Full_View (Td);"}, {"sha": "ccd9bd5efb731693436db7367502f905db4d0b68", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d581777692c6e9a03c380daf2c86a64f226850d/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d581777692c6e9a03c380daf2c86a64f226850d/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=3d581777692c6e9a03c380daf2c86a64f226850d", "patch": "@@ -5396,12 +5396,12 @@ package body Sem_Ch6 is\n          elsif Is_Formal_Subprogram (Old_Id)\n            or else Is_Formal_Subprogram (New_Id)\n            or else (Is_Subprogram (New_Id)\n-             and then Present (Alias (New_Id))\n-             and then Is_Formal_Subprogram (Alias (New_Id)))\n+                     and then Present (Alias (New_Id))\n+                     and then Is_Formal_Subprogram (Alias (New_Id)))\n          then\n             Conformance_Error\n-               (\"\\formal subprograms are not subtype conformant \"\n-                 & \"(RM 6.3.1 (17/3))\");\n+              (\"\\formal subprograms are not subtype conformant \"\n+               & \"(RM 6.3.1 (17/3))\");\n          end if;\n       end if;\n "}, {"sha": "e25873b7165831c60e2007341a6831078a320a29", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d581777692c6e9a03c380daf2c86a64f226850d/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d581777692c6e9a03c380daf2c86a64f226850d/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=3d581777692c6e9a03c380daf2c86a64f226850d", "patch": "@@ -21267,9 +21267,7 @@ package body Sem_Prag is\n                   end if;\n \n                   if In_Same_Declarative_Part (Parent (N), Orig_Def) then\n-\n                      Same_Decl := True;\n-\n                      Set_Is_Pure (Def_Id);\n \n                      if not Has_Pragma_Pure_Function (Def_Id) then\n@@ -21289,10 +21287,11 @@ package body Sem_Prag is\n                   Error_Msg_NE\n                     (\"pragma Pure_Function on& is redundant?r?\",\n                      N, Entity (E_Id));\n+\n                elsif not Same_Decl then\n                   Error_Pragma_Arg\n-                    (\"pragma% argument must be in same declarative \"\n-                     & \"part\", Arg1);\n+                    (\"pragma% argument must be in same declarative part\",\n+                     Arg1);\n                end if;\n             end if;\n          end Pure_Function;"}]}