{"sha": "4665616f99c52891f661a46caba5d72b34acf58c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY2NTYxNmY5OWM1Mjg5MWY2NjFhNDZjYWJhNWQ3MmIzNGFjZjU4Yw==", "commit": {"author": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1993-05-05T13:52:15Z"}, "committer": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1993-05-05T13:52:15Z"}, "message": "(__objc_add_handler, __objc_remove_handler,\n\n__objc_raise_error): New functions.\n(__ex_last_handler): New variable\n\nFrom-SVN: r4333", "tree": {"sha": "dba7fb88f9ea583d47b30db4b1769c0d11c533f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dba7fb88f9ea583d47b30db4b1769c0d11c533f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4665616f99c52891f661a46caba5d72b34acf58c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4665616f99c52891f661a46caba5d72b34acf58c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4665616f99c52891f661a46caba5d72b34acf58c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4665616f99c52891f661a46caba5d72b34acf58c/comments", "author": null, "committer": null, "parents": [{"sha": "c8266dd238bf96738d2b2cb05b1d271492d61a6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8266dd238bf96738d2b2cb05b1d271492d61a6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8266dd238bf96738d2b2cb05b1d271492d61a6b"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "ec42c2cfe1942edd5f7d03bd597c8643ae6e0071", "filename": "gcc/objc/misc.c", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4665616f99c52891f661a46caba5d72b34acf58c/gcc%2Fobjc%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4665616f99c52891f661a46caba5d72b34acf58c/gcc%2Fobjc%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fmisc.c?ref=4665616f99c52891f661a46caba5d72b34acf58c", "patch": "@@ -25,6 +25,7 @@ You should have received a copy of the GNU General Public License along with\n    covered by the GNU General Public License.  */\n \n #include \"runtime.h\"\n+#include \"error.h\"\n \n void objc_error(id object, const char* fmt, va_list);\n \n@@ -70,3 +71,46 @@ __objc_xcalloc(size_t nelem, size_t size)\n     objc_fatal(\"Virtual memory exhausted\\n\");\n   return res;\n }\n+\n+struct objc_ex_handler __ex_base_handler = {0, 0, 0, 0, 0 };\n+struct objc_ex_handler* __ex_last_handler = &__ex_base_handler;\n+\n+objc_uncaught_exception_handler _objc_uncaught_exception_handler = 0;\n+\n+void\n+__objc_add_handler(struct objc_ex_handler* hdlr)\n+{\n+  hdlr->ex_prev = __ex_last_handler;\n+  __ex_last_handler = hdlr;\n+}\n+\n+void \n+__objc_remove_handler(struct objc_ex_handler* hdlr)\n+{\n+  __ex_last_handler = hdlr->ex_prev;\n+}\n+\n+#ifndef __STRICT_ANSI__\n+__volatile\n+#endif\n+extern void __objc_raise_error(int code, const void* data1, const void* data2)\n+{\n+  if (__ex_last_handler->ex_prev) \n+    {\n+      __ex_last_handler->code = code;       \n+      __ex_last_handler->data1 = data1;     \n+      __ex_last_handler->data2 = data2;     \n+      longjmp (__ex_last_handler->ex_env, 1);\n+    } \n+  else\n+    {\n+      if (_objc_uncaught_exception_handler)\n+\t(*_objc_uncaught_exception_handler)(code, data1, data2);\n+      else\n+\t{\n+\t  printf (\"uncaught exception: code=%d, data1=%x, data2=%x\\n\",\n+\t\t  code, data1, data2);\n+\t  abort();\n+\t}\n+    }\n+}"}]}