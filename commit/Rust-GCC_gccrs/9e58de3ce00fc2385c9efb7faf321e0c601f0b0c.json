{"sha": "9e58de3ce00fc2385c9efb7faf321e0c601f0b0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU1OGRlM2NlMDBmYzIzODVjOWVmYjdmYWYzMjFlMGM2MDFmMGIwYw==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-09-12T08:58:16Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-09-13T15:16:56Z"}, "message": "Fix PR lto/49664: liblto_plugin.so exports too many symbols\n\nSo right now liblto_plugin.so exports many libiberty symbols and\nsimple_object file symbols but really it just needs to export onload.\n\nThis fixes the problem by using \"-export-symbols-regex onload\" on\nthe libtool link line.\n\nlto-plugin/ChangeLog:\n\n\tPR lto/49664\n\t* Makefile.am: Export only onload.\n\t* Makefile.in: Regenerate.", "tree": {"sha": "02c34b876dfd6c4259548ea704588fa6441b2029", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02c34b876dfd6c4259548ea704588fa6441b2029"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e58de3ce00fc2385c9efb7faf321e0c601f0b0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e58de3ce00fc2385c9efb7faf321e0c601f0b0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e58de3ce00fc2385c9efb7faf321e0c601f0b0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e58de3ce00fc2385c9efb7faf321e0c601f0b0c/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "512b383534785f9fc021e700a1fdda86cf0f3fe7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/512b383534785f9fc021e700a1fdda86cf0f3fe7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/512b383534785f9fc021e700a1fdda86cf0f3fe7"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "988d7a78294bb8fc2b600efe5d9bcf9725277fd2", "filename": "lto-plugin/Makefile.am", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e58de3ce00fc2385c9efb7faf321e0c601f0b0c/lto-plugin%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e58de3ce00fc2385c9efb7faf321e0c601f0b0c/lto-plugin%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FMakefile.am?ref=9e58de3ce00fc2385c9efb7faf321e0c601f0b0c", "patch": "@@ -21,7 +21,8 @@ in_gcc_libs = $(foreach lib, $(libexecsub_LTLIBRARIES), $(gcc_build_dir)/$(lib))\n liblto_plugin_la_SOURCES = lto-plugin.c\n # Note that we intentionally override the bindir supplied by ACX_LT_HOST_FLAGS.\n liblto_plugin_la_LDFLAGS = $(AM_LDFLAGS) \\\n-\t$(lt_host_flags) -module -avoid-version -bindir $(libexecsubdir)\n+\t$(lt_host_flags) -module -avoid-version -bindir $(libexecsubdir) \\\n+\t-export-symbols-regex onload\n # Can be simplified when libiberty becomes a normal convenience library.\n libiberty = $(with_libiberty)/libiberty.a\n libiberty_noasan = $(with_libiberty)/noasan/libiberty.a"}, {"sha": "f8df31bb1e86f82254eeca67abd281b50b4467a5", "filename": "lto-plugin/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e58de3ce00fc2385c9efb7faf321e0c601f0b0c/lto-plugin%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e58de3ce00fc2385c9efb7faf321e0c601f0b0c/lto-plugin%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FMakefile.in?ref=9e58de3ce00fc2385c9efb7faf321e0c601f0b0c", "patch": "@@ -323,6 +323,7 @@ prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n real_target_noncanonical = @real_target_noncanonical@\n+runstatedir = @runstatedir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@\n@@ -350,9 +351,9 @@ libexecsub_LTLIBRARIES = liblto_plugin.la\n in_gcc_libs = $(foreach lib, $(libexecsub_LTLIBRARIES), $(gcc_build_dir)/$(lib))\n liblto_plugin_la_SOURCES = lto-plugin.c\n # Note that we intentionally override the bindir supplied by ACX_LT_HOST_FLAGS.\n-liblto_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(lt_host_flags) -module -avoid-version \\\n-\t-bindir $(libexecsubdir) $(if $(wildcard \\\n-\t$(libiberty_noasan)),, $(if $(wildcard \\\n+liblto_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(lt_host_flags) -module \\\n+\t-avoid-version -bindir $(libexecsubdir) -export-symbols-regex \\\n+\tonload $(if $(wildcard $(libiberty_noasan)),, $(if $(wildcard \\\n \t$(libiberty_pic)),,-Wc,$(libiberty)))\n # Can be simplified when libiberty becomes a normal convenience library.\n libiberty = $(with_libiberty)/libiberty.a"}]}