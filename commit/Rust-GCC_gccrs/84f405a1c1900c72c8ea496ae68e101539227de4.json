{"sha": "84f405a1c1900c72c8ea496ae68e101539227de4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRmNDA1YTFjMTkwMGM3MmM4ZWE0OTZhZTY4ZTEwMTUzOTIyN2RlNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-08-04T15:02:21Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-08-04T15:02:21Z"}, "message": "gcc.c (self_spec): New variable.\n\n\t* gcc.c (self_spec): New variable.\n\t(static_specs): Add self_spec.\n\t(main): Call do_self_spec on \"self_spec\" specs after reading\n\tuser specs files.  Move compare_debug handling right after that.\n\nFrom-SVN: r177394", "tree": {"sha": "4887c14ce4e1fa413cff5cec4ac1ea7a41dccf82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4887c14ce4e1fa413cff5cec4ac1ea7a41dccf82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84f405a1c1900c72c8ea496ae68e101539227de4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84f405a1c1900c72c8ea496ae68e101539227de4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84f405a1c1900c72c8ea496ae68e101539227de4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84f405a1c1900c72c8ea496ae68e101539227de4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d320da4a5efe7b1b48eeee9d418103922e2b816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d320da4a5efe7b1b48eeee9d418103922e2b816", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d320da4a5efe7b1b48eeee9d418103922e2b816"}], "stats": {"total": 103, "additions": 61, "deletions": 42}, "files": [{"sha": "4229c497112c5c2132801ff24d187064ecfbe5f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f405a1c1900c72c8ea496ae68e101539227de4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f405a1c1900c72c8ea496ae68e101539227de4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84f405a1c1900c72c8ea496ae68e101539227de4", "patch": "@@ -1,3 +1,10 @@\n+2011-08-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c (self_spec): New variable.\n+\t(static_specs): Add self_spec.\n+\t(main): Call do_self_spec on \"self_spec\" specs after reading\n+\tuser specs files.  Move compare_debug handling right after that.\n+\n 2011-08-04  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-vrp.c (vrp_expr_computes_nonnegative): Remove."}, {"sha": "ddec8db706b77d0f27aa2627414424e7088870f1", "filename": "gcc/gcc.c", "status": "modified", "additions": 54, "deletions": 42, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f405a1c1900c72c8ea496ae68e101539227de4/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f405a1c1900c72c8ea496ae68e101539227de4/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=84f405a1c1900c72c8ea496ae68e101539227de4", "patch": "@@ -728,6 +728,7 @@ static const char *startfile_prefix_spec = STARTFILE_PREFIX_SPEC;\n static const char *sysroot_spec = SYSROOT_SPEC;\n static const char *sysroot_suffix_spec = SYSROOT_SUFFIX_SPEC;\n static const char *sysroot_hdrs_suffix_spec = SYSROOT_HEADERS_SUFFIX_SPEC;\n+static const char *self_spec = \"\";\n \n /* Standard options to cpp, cc1, and as, to reduce duplication in specs.\n    There should be no need to override these in target dependent files,\n@@ -1215,6 +1216,7 @@ static struct spec_list static_specs[] =\n   INIT_STATIC_SPEC (\"sysroot_spec\",             &sysroot_spec),\n   INIT_STATIC_SPEC (\"sysroot_suffix_spec\",\t&sysroot_suffix_spec),\n   INIT_STATIC_SPEC (\"sysroot_hdrs_suffix_spec\",\t&sysroot_hdrs_suffix_spec),\n+  INIT_STATIC_SPEC (\"self_spec\",\t\t&self_spec),\n };\n \n #ifdef EXTRA_SPECS\t\t/* additional specs needed */\n@@ -6261,48 +6263,6 @@ main (int argc, char **argv)\n   for (i = 0; i < ARRAY_SIZE (driver_self_specs); i++)\n     do_self_spec (driver_self_specs[i]);\n \n-  if (compare_debug)\n-    {\n-      enum save_temps save;\n-\n-      if (!compare_debug_second)\n-\t{\n-\t  n_switches_debug_check[1] = n_switches;\n-\t  n_switches_alloc_debug_check[1] = n_switches_alloc;\n-\t  switches_debug_check[1] = XDUPVEC (struct switchstr, switches,\n-\t\t\t\t\t     n_switches_alloc);\n-\n-\t  do_self_spec (\"%:compare-debug-self-opt()\");\n-\t  n_switches_debug_check[0] = n_switches;\n-\t  n_switches_alloc_debug_check[0] = n_switches_alloc;\n-\t  switches_debug_check[0] = switches;\n-\n-\t  n_switches = n_switches_debug_check[1];\n-\t  n_switches_alloc = n_switches_alloc_debug_check[1];\n-\t  switches = switches_debug_check[1];\n-\t}\n-\n-      /* Avoid crash when computing %j in this early.  */\n-      save = save_temps_flag;\n-      save_temps_flag = SAVE_TEMPS_NONE;\n-\n-      compare_debug = -compare_debug;\n-      do_self_spec (\"%:compare-debug-self-opt()\");\n-\n-      save_temps_flag = save;\n-\n-      if (!compare_debug_second)\n-\t{\n-\t  n_switches_debug_check[1] = n_switches;\n-\t  n_switches_alloc_debug_check[1] = n_switches_alloc;\n-\t  switches_debug_check[1] = switches;\n-\t  compare_debug = -compare_debug;\n-\t  n_switches = n_switches_debug_check[0];\n-\t  n_switches_alloc = n_switches_debug_check[0];\n-\t  switches = switches_debug_check[0];\n-\t}\n-    }\n-\n   /* If not cross-compiling, look for executables in the standard\n      places.  */\n   if (*cross_compile == '0')\n@@ -6412,6 +6372,58 @@ main (int argc, char **argv)\n       read_specs (filename ? filename : uptr->filename, FALSE);\n     }\n \n+  /* Process any user self specs.  */\n+  {\n+    struct spec_list *sl;\n+    for (sl = specs; sl; sl = sl->next)\n+      if (sl->name_len == sizeof \"self_spec\" - 1\n+\t  && !strcmp (sl->name, \"self_spec\"))\n+\tdo_self_spec (*sl->ptr_spec);\n+  }\n+\n+  if (compare_debug)\n+    {\n+      enum save_temps save;\n+\n+      if (!compare_debug_second)\n+\t{\n+\t  n_switches_debug_check[1] = n_switches;\n+\t  n_switches_alloc_debug_check[1] = n_switches_alloc;\n+\t  switches_debug_check[1] = XDUPVEC (struct switchstr, switches,\n+\t\t\t\t\t     n_switches_alloc);\n+\n+\t  do_self_spec (\"%:compare-debug-self-opt()\");\n+\t  n_switches_debug_check[0] = n_switches;\n+\t  n_switches_alloc_debug_check[0] = n_switches_alloc;\n+\t  switches_debug_check[0] = switches;\n+\n+\t  n_switches = n_switches_debug_check[1];\n+\t  n_switches_alloc = n_switches_alloc_debug_check[1];\n+\t  switches = switches_debug_check[1];\n+\t}\n+\n+      /* Avoid crash when computing %j in this early.  */\n+      save = save_temps_flag;\n+      save_temps_flag = SAVE_TEMPS_NONE;\n+\n+      compare_debug = -compare_debug;\n+      do_self_spec (\"%:compare-debug-self-opt()\");\n+\n+      save_temps_flag = save;\n+\n+      if (!compare_debug_second)\n+\t{\n+\t  n_switches_debug_check[1] = n_switches;\n+\t  n_switches_alloc_debug_check[1] = n_switches_alloc;\n+\t  switches_debug_check[1] = switches;\n+\t  compare_debug = -compare_debug;\n+\t  n_switches = n_switches_debug_check[0];\n+\t  n_switches_alloc = n_switches_debug_check[0];\n+\t  switches = switches_debug_check[0];\n+\t}\n+    }\n+\n+\n   /* If we have a GCC_EXEC_PREFIX envvar, modify it for cpp's sake.  */\n   if (gcc_exec_prefix)\n     gcc_exec_prefix = concat (gcc_exec_prefix, spec_machine, dir_separator_str,"}]}