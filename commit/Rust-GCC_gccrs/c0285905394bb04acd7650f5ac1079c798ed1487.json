{"sha": "c0285905394bb04acd7650f5ac1079c798ed1487", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAyODU5MDUzOTRiYjA0YWNkNzY1MGY1YWMxMDc5Yzc5OGVkMTQ4Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-08-12T18:05:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-08-12T18:05:43Z"}, "message": "re PR middle-end/37014 (internal compiler error: in expand_expr_real_1, at expr.c:8760)\n\n\tPR middle-end/37014\n\t* expr.c (expand_expr_real_1): Handle TRUTH_ANDIF_EXPR\n\tand TRUTH_ORIF_EXPR.\n\t* dojump.c (do_jump): Likewise.\n\n\t* gcc.c-torture/compile/20080812-1.c: New test.\n\nFrom-SVN: r139029", "tree": {"sha": "dadd521bd788faebcdfbb1b321ea56646b6b71d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dadd521bd788faebcdfbb1b321ea56646b6b71d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0285905394bb04acd7650f5ac1079c798ed1487", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0285905394bb04acd7650f5ac1079c798ed1487", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0285905394bb04acd7650f5ac1079c798ed1487", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0285905394bb04acd7650f5ac1079c798ed1487/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4c29307df9fef2001418b25babd1018a12d8687b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c29307df9fef2001418b25babd1018a12d8687b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c29307df9fef2001418b25babd1018a12d8687b"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "a49a7bc30127cdedf85265fb4e9ecb23a7b2af65", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0285905394bb04acd7650f5ac1079c798ed1487/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0285905394bb04acd7650f5ac1079c798ed1487/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0285905394bb04acd7650f5ac1079c798ed1487", "patch": "@@ -1,5 +1,10 @@\n 2008-08-12  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/37014\n+\t* expr.c (expand_expr_real_1): Handle TRUTH_ANDIF_EXPR\n+\tand TRUTH_ORIF_EXPR.\n+\t* dojump.c (do_jump): Likewise.\n+\n \tPR tree-optimization/37084\n \t* tree-inline.c (copy_bb): Call gimple_regimplify_operands\n \tif id->regimplify, don't assume stmt is a cast assignment."}, {"sha": "46aa4f2ebb831f50cfe6cef6f6d1fb7c13e68e74", "filename": "gcc/dojump.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0285905394bb04acd7650f5ac1079c798ed1487/gcc%2Fdojump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0285905394bb04acd7650f5ac1079c798ed1487/gcc%2Fdojump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdojump.c?ref=c0285905394bb04acd7650f5ac1079c798ed1487", "patch": "@@ -304,8 +304,6 @@ do_jump (tree exp, rtx if_false_label, rtx if_true_label)\n \tbreak;\n       }\n \n-    case TRUTH_ANDIF_EXPR:\n-    case TRUTH_ORIF_EXPR:\n     case COMPOUND_EXPR:\n       /* Lowered by gimplify.c.  */\n       gcc_unreachable ();\n@@ -515,6 +513,7 @@ do_jump (tree exp, rtx if_false_label, rtx if_true_label)\n       if (BRANCH_COST >= 4 || TREE_SIDE_EFFECTS (TREE_OPERAND (exp, 1)))\n \tgoto normal;\n \n+    case TRUTH_ANDIF_EXPR:\n       if (if_false_label == NULL_RTX)\n         {\n \t  drop_through_label = gen_label_rtx ();\n@@ -535,6 +534,7 @@ do_jump (tree exp, rtx if_false_label, rtx if_true_label)\n       if (BRANCH_COST >= 4 || TREE_SIDE_EFFECTS (TREE_OPERAND (exp, 1)))\n \tgoto normal;\n \n+    case TRUTH_ORIF_EXPR:\n       if (if_true_label == NULL_RTX)\n \t{\n           drop_through_label = gen_label_rtx ();"}, {"sha": "e61dc616165094ed30022404dd801ee74814a556", "filename": "gcc/expr.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0285905394bb04acd7650f5ac1079c798ed1487/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0285905394bb04acd7650f5ac1079c798ed1487/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=c0285905394bb04acd7650f5ac1079c798ed1487", "patch": "@@ -1,6 +1,6 @@\n /* Convert tree expression to rtl instructions, for GNU compiler.\n    Copyright (C) 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -8970,7 +8970,10 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n       /* If no set-flag instruction, must generate a conditional store\n \t into a temporary variable.  Drop through and handle this\n \t like && and ||.  */\n-\n+      /* Although TRUTH_{AND,OR}IF_EXPR aren't present in GIMPLE, they\n+\t are occassionally created by folding during expansion.  */\n+    case TRUTH_ANDIF_EXPR:\n+    case TRUTH_ORIF_EXPR:\n       if (! ignore\n \t  && (target == 0\n \t      || modifier == EXPAND_STACK_PARM\n@@ -9170,8 +9173,6 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n     case POSTDECREMENT_EXPR:\n     case LOOP_EXPR:\n     case EXIT_EXPR:\n-    case TRUTH_ANDIF_EXPR:\n-    case TRUTH_ORIF_EXPR:\n       /* Lowered by gimplify.c.  */\n       gcc_unreachable ();\n "}, {"sha": "f30067d9a67647f0f98d62c7c067c5ebd67a1265", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0285905394bb04acd7650f5ac1079c798ed1487/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0285905394bb04acd7650f5ac1079c798ed1487/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c0285905394bb04acd7650f5ac1079c798ed1487", "patch": "@@ -1,5 +1,8 @@\n 2008-08-12  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/37014\n+\t* gcc.c-torture/compile/20080812-1.c: New test.\n+\n \tPR tree-optimization/37084\n \t* g++.dg/tree-ssa/pr37084.C: New test.\n "}, {"sha": "2e4c13a70c854810acef12564eb65dd4d2401728", "filename": "gcc/testsuite/gcc.c-torture/compile/20080812-1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0285905394bb04acd7650f5ac1079c798ed1487/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080812-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0285905394bb04acd7650f5ac1079c798ed1487/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080812-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080812-1.c?ref=c0285905394bb04acd7650f5ac1079c798ed1487", "patch": "@@ -0,0 +1,21 @@\n+/* PR middle-end/37014 */\n+\n+void bar (signed char *);\n+\n+void\n+foo (int x, int y)\n+{\n+  int i;\n+  signed char a[123], b[123], c;\n+  for (i = 0; i < 123; i++)\n+    {\n+      int e = y - x;\n+      int d = e < 0 ? -e : e;\n+      c = d < 75;\n+      a[y] = c;\n+      b[y] = c;\n+      y--;\n+    }\n+  bar (b);\n+  bar (a);\n+}"}]}