{"sha": "6cbd53c2277e5013d83fe73d5e73844066b651a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNiZDUzYzIyNzdlNTAxM2Q4M2ZlNzNkNWU3Mzg0NDA2NmI2NTFhNw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2019-07-03T08:14:10Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-03T08:14:10Z"}, "message": "[Ada] Make loop labels unique for front-end inlined calls\n\nThis patch transforms loop labels in the body of subprograms that are to\nbe inlined by the front-end, to prevent accidental duplication of loop\nlabels, which might make the resulting source illegal.\n\n----\nSource program:\n----\npackage P is\n   procedure Get_Rom_Addr_Offset\n     with Inline_Always;\nend P;\n----\npackage body P is\n   procedure Get_Rom_Addr_Offset is\n      X : Integer;\n   begin\n      Main_Block :\n      for I in 1 .. 10 loop\n         X := 2;\n         exit Main_Block when I > 4;\n      other_loop:\n         for J in character'('a') .. 'z' loop\n            if I < 5 then\n               exit Main_Block when J = 'k';\n            else\n               Exit Other_Loop;\n            end if;\n         end loop other_loop;\n      end loop Main_Block;\n   end Get_Rom_Addr_Offset;\n\n   procedure P2 is\n   begin\n      Main_Block :\n      for I in 1 .. 1 loop\n         Get_Rom_Addr_Offset;\n      end loop Main_Block;\n   end P2;\nend P;\n----\nCommand:\n\n   gcc -c -gnatN -gnatd.u -gnatDG p.adb\n\n----\nOutput\n----\n\npackage body p is\n\n   procedure p__get_rom_addr_offset is\n      x : integer;\n      other_loop : label\n      main_block : label\n   begin\n      main_block : for i in 1 .. 10 loop\n         x := 2;\n         exit main_block when i > 4;\n         other_loop : for j in 'a' .. 'z' loop\n            if i < 5 then\n               exit main_block when j = 'k';\n            else\n               exit other_loop;\n            end if;\n         end loop other_loop;\n      end loop main_block;\n      return;\n   end p__get_rom_addr_offset;\n\n   procedure p__p2 is\n      main_block : label\n   begin\n      main_block : for i in 1 .. 1 loop\n         B6b : declare\n            x : integer;\n            other_loopL10b : label\n            main_blockL9b : label\n         begin\n            main_blockL9b : for i in 1 .. 10 loop\n               x := 2;\n               exit main_blockL9b when i > 4;\n               other_loopL10b : for j in 'a' .. 'z' loop\n                  if i < 5 then\n                     exit main_blockL9b when j = 'k';\n                  else\n                     exit other_loopL10b;\n                  end if;\n               end loop other_loopL10b;\n            end loop main_blockL9b;\n         end B6b;\n      end loop main_block;\n      return;\n   end p__p2;\nbegin\n   null;\nend p;\n\n2019-07-03  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* inline.adb (Make_Loop_Labels_Unique):  New procedure to modify\n\tthe source code of subprograms that are inlined by the\n\tfront-end, to prevent accidental duplication between loop labels\n\tin the inlined code and the code surrounding the inlined call.\n\nFrom-SVN: r272967", "tree": {"sha": "9aa66cca4c1bb2cb8381b52a6e9117171f792f01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9aa66cca4c1bb2cb8381b52a6e9117171f792f01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cbd53c2277e5013d83fe73d5e73844066b651a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cbd53c2277e5013d83fe73d5e73844066b651a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cbd53c2277e5013d83fe73d5e73844066b651a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cbd53c2277e5013d83fe73d5e73844066b651a7/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "438d9658a90f7cf0fa06e219455629817fae4c65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/438d9658a90f7cf0fa06e219455629817fae4c65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/438d9658a90f7cf0fa06e219455629817fae4c65"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "443947c9c0cb19646d48d1d69b2a77bd26507502", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cbd53c2277e5013d83fe73d5e73844066b651a7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cbd53c2277e5013d83fe73d5e73844066b651a7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6cbd53c2277e5013d83fe73d5e73844066b651a7", "patch": "@@ -1,3 +1,10 @@\n+2019-07-03  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* inline.adb (Make_Loop_Labels_Unique):  New procedure to modify\n+\tthe source code of subprograms that are inlined by the\n+\tfront-end, to prevent accidental duplication between loop labels\n+\tin the inlined code and the code surrounding the inlined call.\n+\n 2019-07-03  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* doc/gnat_ugn/elaboration_order_handling_in_gnat.rst: Update"}, {"sha": "ae1c217c7fbffd845caeacdde0b5f69fdfe202e4", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cbd53c2277e5013d83fe73d5e73844066b651a7/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cbd53c2277e5013d83fe73d5e73844066b651a7/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=6cbd53c2277e5013d83fe73d5e73844066b651a7", "patch": "@@ -2381,6 +2381,11 @@ package body Inline is\n       --  When generating C code, declare _Result, which may be used in the\n       --  inlined _Postconditions procedure to verify the return value.\n \n+      procedure Make_Loop_Labels_Unique (Stats : Node_Id);\n+      --  When compiling for CCG and performing front-end inlining, replace\n+      --  loop names and references to them so that they do not conflict\n+      --  with homographs in the current subprogram.\n+\n       procedure Make_Exit_Label;\n       --  Build declaration for exit label to be used in Return statements,\n       --  sets Exit_Lab (the label node) and Lab_Decl (corresponding implicit\n@@ -2474,6 +2479,59 @@ package body Inline is\n          end if;\n       end Make_Exit_Label;\n \n+      -----------------------------\n+      -- Make_Loop_Labels_Unique --\n+      -----------------------------\n+\n+      procedure Make_Loop_Labels_Unique (Stats : Node_Id) is\n+         S : Node_Id;\n+\n+         function Process_Loop (N : Node_Id) return Traverse_Result;\n+\n+         ------------------\n+         -- Process_Loop --\n+         ------------------\n+\n+         function Process_Loop (N : Node_Id) return Traverse_Result is\n+            Id  : Entity_Id;\n+\n+         begin\n+            if Nkind (N) = N_Loop_Statement\n+              and then Present (Identifier (N))\n+            then\n+\n+               --  Create new external name for loop. and update the\n+               --  corresponding entity.\n+\n+               Id := Entity (Identifier (N));\n+               Set_Chars (Id, New_External_Name (Chars (Id), 'L', -1));\n+               Set_Chars (Identifier (N), Chars (Id));\n+\n+            elsif Nkind (N) = N_Exit_Statement\n+              and then Present (Name (N))\n+            then\n+\n+               --  The exit statement must name an enclosing loop, whose\n+               --  name has already been updated.\n+\n+               Set_Chars (Name (N), Chars (Entity (Name (N))));\n+            end if;\n+\n+            return OK;\n+         end Process_Loop;\n+\n+         procedure Update_Loop_Names is new Traverse_Proc (Process_Loop);\n+\n+      begin\n+         if Modify_Tree_For_C then\n+            S := First (Statements (Stats));\n+            while Present (S) loop\n+               Update_Loop_Names (S);\n+               Next (S);\n+            end loop;\n+         end if;\n+      end Make_Loop_Labels_Unique;\n+\n       ---------------------\n       -- Process_Formals --\n       ---------------------\n@@ -2742,6 +2800,8 @@ package body Inline is\n          Fst : constant Node_Id := First (Statements (HSS));\n \n       begin\n+         Make_Loop_Labels_Unique (HSS);\n+\n          --  Optimize simple case: function body is a single return statement,\n          --  which has been expanded into an assignment.\n \n@@ -2829,6 +2889,8 @@ package body Inline is\n          HSS  : constant Node_Id := Handled_Statement_Sequence (Blk);\n \n       begin\n+         Make_Loop_Labels_Unique (HSS);\n+\n          --  If there is a transient scope for N, this will be the scope of the\n          --  actions for N, and the statements in Blk need to be within this\n          --  scope. For example, they need to have visibility on the constant"}]}