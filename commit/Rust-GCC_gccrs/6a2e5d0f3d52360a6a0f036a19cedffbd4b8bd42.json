{"sha": "6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEyZTVkMGYzZDUyMzYwYTZhMGYwMzZhMTljZWRmZmJkNGI4YmQ0Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T13:31:14Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T13:31:14Z"}, "message": "[multiple changes]\n\n2011-08-04  Vincent Celier  <celier@adacore.com>\n\n\t* gnat_ugn.texi: Improve documentation of gnatmake switch\n\t--source-info-file=.\n\n2011-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch7.adb (Make_Final_Call): Add local variable Atyp (assertion\n\ttype). Initialize Atyp to the appropriate type which is later checked\n\tfor completion. Rewrite the assertion associated with private type\n\tcompletion.\n\n2011-08-04  Ed Falis  <falis@adacore.com>\n\n\t* adaint.c: Add call to vxCpuConfiguredGet for VxWorks SMP to\n\tinitialize the number of CPUs.\n\n2011-08-04  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_type.adb (Disambiguate): New subsidiary routine\n\tIn_Same_Declaration_List, to implement AI05-0020: a user-defined\n\tequality on an anonymous access type whose designated type is private\n\tdoes not lead to an ambiguity with the universal access equality\n\toperator in the body or child units of the defining package. The same\n\tis true for a multiplication operator on a private type completed with\n\ta fixed-point-type.\n\n2011-08-04  Javier Miranda  <miranda@adacore.com>\n\n\t* opt.ads (Init_Or_Norm_Scalars_Config): Removed.\n\t(Normalize_Scalars_Config): Removed.\n\t* opt.adb\n\t(Register_Opt_Config_Switches): Remove registering config values of\n\tInit_Or_Norm_Scalars_Config and Normalize_Scalars_Config.\n\t(Restore_Opt_Config_Switches): Remove code which restores the values of\n\tInit_Or_Norm_Scalars and Normalize_Scalars. Recalculate value of\n\tInit_Or_Norm_Scalars.\n\t(Save_Opt_Config_Switches): Remove code which saves values of\n\tInit_Or_Norm_Scalars and Normalize_Scalars.\n\t(Set_Opt_Config_Switches): Remove code which restores config values of\n\tInit_Or_Norm_Scalars and Normalize_Scalars. Recalculate value of\n\tInit_Or_Norm_Scalars.\n\n2011-08-04  Yannick Moy  <moy@adacore.com>\n\n\t* frontend.adb (Frontend): remove previous patch to avoid full\n\tqualification in ALFA mode.\n\t* lib-xref-alfa.adb (Add_ALFA_Xrefs): use unique name for variables.\n\t* sem_util.adb, sem_util.ads (Unique_Name): new function to define a\n\tunique name for an entity, which could be used to identify the entity\n\tacross compilation units.\n\n2011-08-04  Thomas Quinot  <quinot@adacore.com>\n\n\t* prj-env.adb\n\t(Initialize_Default_Project_Path): Add target specific directory\n\t($prefix/$target/lib/gnat) in front of project path in all cases\n\t(making gnatmake's behaviour consistent with gprbuild).\n\t* gnatcmd.adb, make.adb, prj-makr.adb, clean.adb:\n\tPass target name from Sdefault to project subsystem.\n\t* gnatls.adb: Show new target specific default project directory.\n\n2011-08-04  Johannes Kanig  <kanig@adacore.com>\n\n\t* cstand.adb: Add Information to Identifier in Standard\n\t(Identifer_For): Set Entity to the corresponding entity\n\nFrom-SVN: r177383", "tree": {"sha": "bfbd6ffff1b8799e3f068096093ce709cd32cef8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfbd6ffff1b8799e3f068096093ce709cd32cef8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/comments", "author": null, "committer": null, "parents": [{"sha": "483361a6819afa90d3aa85727b6ddfbe610d102c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/483361a6819afa90d3aa85727b6ddfbe610d102c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/483361a6819afa90d3aa85727b6ddfbe610d102c"}], "stats": {"total": 298, "additions": 238, "deletions": 60}, "files": [{"sha": "2db1c79bf23eb2b100d60af9b37685c771a2d8c0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "patch": "@@ -1,3 +1,70 @@\n+2011-08-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnat_ugn.texi: Improve documentation of gnatmake switch\n+\t--source-info-file=.\n+\n+2011-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch7.adb (Make_Final_Call): Add local variable Atyp (assertion\n+\ttype). Initialize Atyp to the appropriate type which is later checked\n+\tfor completion. Rewrite the assertion associated with private type\n+\tcompletion.\n+\n+2011-08-04  Ed Falis  <falis@adacore.com>\n+\n+\t* adaint.c: Add call to vxCpuConfiguredGet for VxWorks SMP to\n+\tinitialize the number of CPUs.\n+\n+2011-08-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_type.adb (Disambiguate): New subsidiary routine\n+\tIn_Same_Declaration_List, to implement AI05-0020: a user-defined\n+\tequality on an anonymous access type whose designated type is private\n+\tdoes not lead to an ambiguity with the universal access equality\n+\toperator in the body or child units of the defining package. The same\n+\tis true for a multiplication operator on a private type completed with\n+\ta fixed-point-type.\n+\n+2011-08-04  Javier Miranda  <miranda@adacore.com>\n+\n+\t* opt.ads (Init_Or_Norm_Scalars_Config): Removed.\n+\t(Normalize_Scalars_Config): Removed.\n+\t* opt.adb\n+\t(Register_Opt_Config_Switches): Remove registering config values of\n+\tInit_Or_Norm_Scalars_Config and Normalize_Scalars_Config.\n+\t(Restore_Opt_Config_Switches): Remove code which restores the values of\n+\tInit_Or_Norm_Scalars and Normalize_Scalars. Recalculate value of\n+\tInit_Or_Norm_Scalars.\n+\t(Save_Opt_Config_Switches): Remove code which saves values of\n+\tInit_Or_Norm_Scalars and Normalize_Scalars.\n+\t(Set_Opt_Config_Switches): Remove code which restores config values of\n+\tInit_Or_Norm_Scalars and Normalize_Scalars. Recalculate value of\n+\tInit_Or_Norm_Scalars.\n+\n+2011-08-04  Yannick Moy  <moy@adacore.com>\n+\n+\t* frontend.adb (Frontend): remove previous patch to avoid full\n+\tqualification in ALFA mode.\n+\t* lib-xref-alfa.adb (Add_ALFA_Xrefs): use unique name for variables.\n+\t* sem_util.adb, sem_util.ads (Unique_Name): new function to define a\n+\tunique name for an entity, which could be used to identify the entity\n+\tacross compilation units.\n+\n+2011-08-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* prj-env.adb\n+\t(Initialize_Default_Project_Path): Add target specific directory\n+\t($prefix/$target/lib/gnat) in front of project path in all cases\n+\t(making gnatmake's behaviour consistent with gprbuild).\n+\t* gnatcmd.adb, make.adb, prj-makr.adb, clean.adb:\n+\tPass target name from Sdefault to project subsystem.\n+\t* gnatls.adb: Show new target specific default project directory.\n+\n+2011-08-04  Johannes Kanig  <kanig@adacore.com>\n+\n+\t* cstand.adb: Add Information to Identifier in Standard\n+\t(Identifer_For): Set Entity to the corresponding entity\n+\n 2011-08-04  Sergey Rybin  <rybin@adacore.com>\n \n \t* gnat_ugn.texi: Update doc on gnatcheck."}, {"sha": "a5cc29c473258491bde29f344f3bada2f9db04f9", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "patch": "@@ -51,6 +51,11 @@ extern \"C\" {\n #include \"cacheLib.h\"\n #endif /* __mips_vxworks */\n \n+/* If SMP, access vxCpuConfiguredGet */\n+#ifdef _WRS_CONFIG_SMP\n+#include <vxCpuLib.h>\n+#endif /* _WRS_CONFIG_SMP */\n+\n #endif /* VxWorks */\n \n #if (defined (__mips) && defined (__sgi)) || defined (__APPLE__)\n@@ -2442,6 +2447,12 @@ __gnat_number_of_cpus (void)\n   status = LIB$GETSYI (&code, &res);\n   if ((status & 1) != 0)\n     cores = res;\n+\n+#elif defined (__WRS_CONFIG_SMP)\n+  unsigned int vxCpuConfiguredGet (void);\n+\n+  cores = vxCpuConfiguredGet ();\n+\n #endif\n \n   return cores;"}, {"sha": "d6dc8ba140ed2128f68d461e10d26d62b5609f40", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "patch": "@@ -37,6 +37,7 @@ with Prj.Ext;\n with Prj.Pars;\n with Prj.Tree; use Prj.Tree;\n with Prj.Util; use Prj.Util;\n+with Sdefault;\n with Snames;\n with Switch;   use Switch;\n with Table;\n@@ -1528,7 +1529,8 @@ package body Clean is\n \n          Prj.Tree.Initialize (Root_Environment, Gnatmake_Flags);\n          Prj.Env.Initialize_Default_Project_Path\n-            (Root_Environment.Project_Path, Target_Name => \"\");\n+            (Root_Environment.Project_Path,\n+             Target_Name => Sdefault.Target_Name.all);\n \n          Project_Node_Tree := new Project_Node_Tree_Data;\n          Prj.Tree.Initialize (Project_Node_Tree);"}, {"sha": "650b86e5deef36d055191abb65289c69037d12c3", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "patch": "@@ -1651,6 +1651,7 @@ package body CStand is\n    begin\n       Ident_Node := New_Node (N_Identifier, Stloc);\n       Set_Chars (Ident_Node, Chars (Standard_Entity (S)));\n+      Set_Entity (Ident_Node, Standard_Entity (S));\n       return Ident_Node;\n    end Identifier_For;\n "}, {"sha": "bb5a9efdce39c14f1fbfa7a53750c7b02171c8d1", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "patch": "@@ -6734,6 +6734,7 @@ package body Exp_Ch7 is\n       For_Parent : Boolean := False) return Node_Id\n    is\n       Loc    : constant Source_Ptr := Sloc (Obj_Ref);\n+      Atyp   : Entity_Id;\n       Fin_Id : Entity_Id := Empty;\n       Ref    : Node_Id;\n       Utyp   : Entity_Id;\n@@ -6743,21 +6744,25 @@ package body Exp_Ch7 is\n \n       if Is_Class_Wide_Type (Typ) then\n          Utyp := Root_Type (Typ);\n+         Atyp := Utyp;\n          Ref  := Obj_Ref;\n \n       elsif Is_Concurrent_Type (Typ) then\n          Utyp := Corresponding_Record_Type (Typ);\n+         Atyp := Empty;\n          Ref  := Convert_Concurrent (Obj_Ref, Typ);\n \n       elsif Is_Private_Type (Typ)\n         and then Present (Full_View (Typ))\n         and then Is_Concurrent_Type (Full_View (Typ))\n       then\n          Utyp := Corresponding_Record_Type (Full_View (Typ));\n+         Atyp := Typ;\n          Ref  := Convert_Concurrent (Obj_Ref, Full_View (Typ));\n \n       else\n          Utyp := Typ;\n+         Atyp := Typ;\n          Ref  := Obj_Ref;\n       end if;\n \n@@ -6802,7 +6807,7 @@ package body Exp_Ch7 is\n       --  instead.\n \n       if Utyp /= Base_Type (Utyp) then\n-         pragma Assert (Is_Private_Type (Typ));\n+         pragma Assert (Present (Atyp) and then Is_Private_Type (Atyp));\n \n          Utyp := Base_Type (Utyp);\n          Ref  := Unchecked_Convert_To (Utyp, Ref);"}, {"sha": "c6dd8cb599112673586168ef42f0a5fc5f047b8b", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "patch": "@@ -372,11 +372,9 @@ begin\n    --  Qualify all entity names in inner packages, package bodies, etc.,\n    --  except when compiling for the VM back-ends, which depend on having\n    --  unqualified names in certain cases and handles the generation of\n-   --  qualified names when needed, and when compiling for formal verification,\n-   --  in which the back-end calls directly Qualify_All_Entity_Names after some\n-   --  preprocessing which uses the non-qualified names.\n+   --  qualified names when needed.\n \n-   if VM_Target = No_VM and then not ALFA_Mode then\n+   if VM_Target = No_VM then\n       Exp_Dbug.Qualify_All_Entity_Names;\n    end if;\n "}, {"sha": "6f7843a07619016d11294a5932c79dbc22be4750", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "patch": "@@ -9389,7 +9389,9 @@ to process the project files, especially when looking for sources that take a\n long time. If the source info file exists but cannot be parsed successfully,\n the Project Manager will attempt to recreate it. If the Project Manager fails\n to create the source info file, a message is issued, but gnatmake does not\n-fail.\n+fail. @command{gnatmake} \"trusts\" the source info file. This means that\n+if the source files have changed (addition, deletion, moving to a different\n+source directory), then the source info file need to be deleted and recreated.\n \n @ifclear vms\n @item --create-map-file"}, {"sha": "1a25dc8347fbf263ca15f62726aa7796ec1cb5af", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "patch": "@@ -41,6 +41,7 @@ with Prj.Ext;  use Prj.Ext;\n with Prj.Pars;\n with Prj.Tree; use Prj.Tree;\n with Prj.Util; use Prj.Util;\n+with Sdefault;\n with Sinput.P;\n with Snames;   use Snames;\n with Table;\n@@ -1360,7 +1361,8 @@ begin\n \n    Prj.Tree.Initialize (Root_Environment, Gnatmake_Flags);\n    Prj.Env.Initialize_Default_Project_Path\n-     (Root_Environment.Project_Path, Target_Name => \"\");\n+     (Root_Environment.Project_Path,\n+      Target_Name => Sdefault.Target_Name.all);\n \n    Project_Node_Tree := new Project_Node_Tree_Data;\n    Prj.Tree.Initialize (Project_Node_Tree);"}, {"sha": "25b2da1f09469870f2a88cb14a9b03a61f376bd3", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1614,6 +1614,9 @@ begin\n       Write_Str (\"   <Current_Directory>\");\n       Write_Eol;\n \n+      --  The code below reproduces Prj.Env.Initialize_Default_Project_Path,\n+      --  shouldn't we reuse that instead???\n+\n       declare\n          Project_Path : String_Access := Getenv (Gpr_Project_Path);\n \n@@ -1624,6 +1627,7 @@ begin\n          Last  : Natural;\n \n          Add_Default_Dir : Boolean := True;\n+         Prefix_Name_Len : Integer;\n \n       begin\n          --  If there is a project path, display each directory in the path\n@@ -1699,12 +1703,26 @@ begin\n             end loop;\n \n             --  If the sequence \"/lib\"/ was found, display the default\n-            --  directory <prefix>/lib/gnat/.\n+            --  directories <prefix>/<target>/lib/gnat and <prefix>/lib/gnat/.\n \n             if Name_Len >= 5 then\n-               Name_Buffer (Name_Len + 1 .. Name_Len + 4) := \"gnat\";\n-               Name_Buffer (Name_Len + 5) := Directory_Separator;\n-               Name_Len := Name_Len + 5;\n+               Prefix_Name_Len := Name_Len - 4;\n+\n+               Name_Len := Prefix_Name_Len;\n+\n+               Name_Len := Prefix_Name_Len;\n+               Add_Str_To_Name_Buffer (Sdefault.Target_Name.all);\n+               Name_Len := Name_Len - 1;\n+               Add_Str_To_Name_Buffer (Directory_Separator\n+                                       & \"lib\" & Directory_Separator\n+                                       & \"gnat\" & Directory_Separator);\n+               Write_Str (\"   \");\n+               Write_Line\n+                 (To_Host_Dir_Spec (Name_Buffer (1 .. Name_Len), True).all);\n+\n+               Name_Len := Prefix_Name_Len;\n+               Add_Str_To_Name_Buffer (\"lib\" & Directory_Separator\n+                                       & \"gnat\" & Directory_Separator);\n                Write_Str (\"   \");\n                Write_Line\n                  (To_Host_Dir_Spec (Name_Buffer (1 .. Name_Len), True).all);"}, {"sha": "77da460df3f7c23406951db250f7bee30d07af6b", "filename": "gcc/ada/lib-xref-alfa.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Flib-xref-alfa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Flib-xref-alfa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-alfa.adb?ref=6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "patch": "@@ -738,7 +738,7 @@ package body ALFA is\n \n             if XE.Ent /= Cur_Entity then\n                Cur_Entity_Name :=\n-                 new String'(Exact_Source_Name (Sloc (XE.Ent)));\n+                 new String'(Unique_Name (XE.Ent));\n             end if;\n \n             ALFA_Xref_Table.Append ("}, {"sha": "cc62e7f897b02018088d1bc22c6bf38b4ca40c48", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "patch": "@@ -51,6 +51,7 @@ with Prj.Env;\n with Prj.Pars;\n with Prj.Tree; use Prj.Tree;\n with Prj.Util;\n+with Sdefault;\n with SFN_Scan;\n with Sinput.P;\n with Snames;   use Snames;\n@@ -6370,7 +6371,7 @@ package body Make is\n \n       Prj.Tree.Initialize (Env, Gnatmake_Flags);\n       Prj.Env.Initialize_Default_Project_Path\n-        (Env.Project_Path, Target_Name => \"\");\n+        (Env.Project_Path, Target_Name => Sdefault.Target_Name.all);\n \n       Project_Node_Tree := new Project_Node_Tree_Data;\n       Prj.Tree.Initialize (Project_Node_Tree);"}, {"sha": "d850e69fe24c51396fc8763c0508afc6ac37b7f3", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "patch": "@@ -57,9 +57,7 @@ package body Opt is\n       External_Name_Exp_Casing_Config       := External_Name_Exp_Casing;\n       External_Name_Imp_Casing_Config       := External_Name_Imp_Casing;\n       Fast_Math_Config                      := Fast_Math;\n-      Init_Or_Norm_Scalars_Config           := Init_Or_Norm_Scalars;\n       Initialize_Scalars_Config             := Initialize_Scalars;\n-      Normalize_Scalars_Config              := Normalize_Scalars;\n       Optimize_Alignment_Config             := Optimize_Alignment;\n       Persistent_BSS_Mode_Config            := Persistent_BSS_Mode;\n       Polling_Required_Config               := Polling_Required;\n@@ -92,15 +90,20 @@ package body Opt is\n       External_Name_Exp_Casing       := Save.External_Name_Exp_Casing;\n       External_Name_Imp_Casing       := Save.External_Name_Imp_Casing;\n       Fast_Math                      := Save.Fast_Math;\n-      Init_Or_Norm_Scalars           := Save.Init_Or_Norm_Scalars;\n       Initialize_Scalars             := Save.Initialize_Scalars;\n-      Normalize_Scalars              := Save.Normalize_Scalars;\n       Optimize_Alignment             := Save.Optimize_Alignment;\n       Optimize_Alignment_Local       := Save.Optimize_Alignment_Local;\n       Persistent_BSS_Mode            := Save.Persistent_BSS_Mode;\n       Polling_Required               := Save.Polling_Required;\n       Short_Descriptors              := Save.Short_Descriptors;\n       Use_VADS_Size                  := Save.Use_VADS_Size;\n+\n+      --  Update consistently the value of Init_Or_Norm_Scalars. The value of\n+      --  Normalize_Scalars is not saved/restored because after set to True its\n+      --  value is never changed. That is, if a compilation unit has pragma\n+      --  Normalize_Scalars then it forces that value for all with'ed units.\n+\n+      Init_Or_Norm_Scalars := Initialize_Scalars or Normalize_Scalars;\n    end Restore_Opt_Config_Switches;\n \n    ------------------------------\n@@ -122,9 +125,7 @@ package body Opt is\n       Save.External_Name_Exp_Casing       := External_Name_Exp_Casing;\n       Save.External_Name_Imp_Casing       := External_Name_Imp_Casing;\n       Save.Fast_Math                      := Fast_Math;\n-      Save.Init_Or_Norm_Scalars           := Init_Or_Norm_Scalars;\n       Save.Initialize_Scalars             := Initialize_Scalars;\n-      Save.Normalize_Scalars              := Normalize_Scalars;\n       Save.Optimize_Alignment             := Optimize_Alignment;\n       Save.Optimize_Alignment_Local       := Optimize_Alignment_Local;\n       Save.Persistent_BSS_Mode            := Persistent_BSS_Mode;\n@@ -190,13 +191,19 @@ package body Opt is\n          External_Name_Exp_Casing    := External_Name_Exp_Casing_Config;\n          External_Name_Imp_Casing    := External_Name_Imp_Casing_Config;\n          Fast_Math                   := Fast_Math_Config;\n-         Init_Or_Norm_Scalars        := Init_Or_Norm_Scalars_Config;\n          Initialize_Scalars          := Initialize_Scalars_Config;\n-         Normalize_Scalars           := Normalize_Scalars_Config;\n          Optimize_Alignment          := Optimize_Alignment_Config;\n          Optimize_Alignment_Local    := False;\n          Persistent_BSS_Mode         := Persistent_BSS_Mode_Config;\n          Use_VADS_Size               := Use_VADS_Size_Config;\n+\n+         --  Update consistently the value of Init_Or_Norm_Scalars. The value\n+         --  of Normalize_Scalars is not saved/restored because once set to\n+         --  True its value is never changed. That is, if a compilation unit\n+         --  has pragma Normalize_Scalars then it forces that value for all\n+         --  with'ed units.\n+\n+         Init_Or_Norm_Scalars := Initialize_Scalars or Normalize_Scalars;\n       end if;\n \n       Default_Pool                   := Default_Pool_Config;"}, {"sha": "3eaa855358d906dc7e061876e397a4ffcc05e781", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "patch": "@@ -1718,25 +1718,13 @@ package Opt is\n    --  used to set the initial value of Fast_Math at the start of each new\n    --  compilation unit.\n \n-   Init_Or_Norm_Scalars_Config : Boolean;\n-   --  GNAT\n-   --  This is the value of the configuration switch that is set by one\n-   --  of the pragmas Initialize_Scalars or Normalize_Scalars.\n-\n    Initialize_Scalars_Config : Boolean;\n    --  GNAT\n    --  This is the value of the configuration switch that is set by the\n    --  pragma Initialize_Scalars when it appears in the gnat.adc file.\n    --  This switch is not set when the pragma appears ahead of a given\n    --  unit, so it does not affect the compilation of other units.\n \n-   Normalize_Scalars_Config : Boolean;\n-   --  GNAT\n-   --  This is the value of the configuration switch that is set by the\n-   --  pragma Normalize_Scalars when it appears in the gnat.adc file.\n-   --  This switch is not set when the pragma appears ahead of a given\n-   --  unit, so it does not affect the compilation of other units.\n-\n    Optimize_Alignment_Config : Character;\n    --  GNAT\n    --  This is the value of the configuration switch that controls the\n@@ -1916,7 +1904,6 @@ private\n       External_Name_Exp_Casing       : External_Casing_Type;\n       External_Name_Imp_Casing       : External_Casing_Type;\n       Fast_Math                      : Boolean;\n-      Init_Or_Norm_Scalars           : Boolean;\n       Initialize_Scalars             : Boolean;\n       Normalize_Scalars              : Boolean;\n       Optimize_Alignment             : Character;"}, {"sha": "5f5b831368b67704bb8e7d785f1edecc816a179f", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 44, "deletions": 21, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "patch": "@@ -1981,44 +1981,67 @@ package body Prj.Env is\n \n       if Add_Default_Dir then\n          declare\n-            Prefix : String_Ptr := Sdefault.Search_Dir_Prefix;\n+            Prefix : String_Ptr;\n+            Add_Prefix_Share_Gpr : Boolean;\n \n          begin\n-            if Prefix = null then\n+            if Sdefault.Search_Dir_Prefix = null then\n+\n+               --  gprbuild case\n+\n                Prefix := new String'(Executable_Prefix_Path);\n+               Add_Prefix_Share_Gpr := True;\n \n-               if Prefix.all /= \"\" then\n-                  if Target_Name /= \"\" then\n-                     Add_Str_To_Name_Buffer\n-                       (Path_Separator & Prefix.all &\n-                        Target_Name & Directory_Separator &\n-                        \"lib\" & Directory_Separator & \"gnat\");\n-                  end if;\n+            else\n+               Prefix := new String'(Sdefault.Search_Dir_Prefix.all\n+                                     & \"..\" & Dir_Separator\n+                                     & \"..\" & Dir_Separator\n+                                     & \"..\" & Dir_Separator\n+                                     & \"..\" & Dir_Separator);\n+               Add_Prefix_Share_Gpr := False;\n+            end if;\n+\n+            if Prefix.all /= \"\" then\n+               if Target_Name /= \"\" then\n+\n+                  --  $prefix/$target/lib/gnat\n \n                   Add_Str_To_Name_Buffer\n                     (Path_Separator & Prefix.all &\n-                     \"share\" & Directory_Separator & \"gpr\");\n+                     Target_Name);\n+\n+                  --  Note: Target_Name has a trailing / when it comes from\n+                  --  Sdefault.\n+\n+                  if Name_Buffer (Name_Len) /= '/' then\n+                     Add_Char_To_Name_Buffer (Directory_Separator);\n+                  end if;\n+\n+                  Add_Str_To_Name_Buffer\n+                    (\"lib\" & Directory_Separator & \"gnat\");\n+               end if;\n+\n+               if Add_Prefix_Share_Gpr then\n+\n+                  --  $prefix/share/gpr\n+\n                   Add_Str_To_Name_Buffer\n                     (Path_Separator & Prefix.all &\n-                     \"lib\" & Directory_Separator & \"gnat\");\n+                     \"share\" & Directory_Separator & \"gpr\");\n                end if;\n \n-            else\n-               Self.Path :=\n-                 new String'(Name_Buffer (1 .. Name_Len) & Path_Separator &\n-                             Prefix.all &\n-                             \"..\" &  Directory_Separator &\n-                             \"..\" & Directory_Separator &\n-                             \"..\" & Directory_Separator & \"gnat\");\n+               --  $prefix/lib/gnat\n+\n+               Add_Str_To_Name_Buffer\n+                 (Path_Separator & Prefix.all &\n+                  \"lib\" & Directory_Separator & \"gnat\");\n             end if;\n \n             Free (Prefix);\n          end;\n       end if;\n \n-      if Self.Path = null then\n-         Self.Path := new String'(Name_Buffer (1 .. Name_Len));\n-      end if;\n+      Self.Path := new String'(Name_Buffer (1 .. Name_Len));\n    end Initialize_Default_Project_Path;\n \n    --------------"}, {"sha": "29fe7b48cb04be8142c011c39be481021d855806", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "patch": "@@ -34,6 +34,7 @@ with Prj.Part;\n with Prj.PP;\n with Prj.Tree; use Prj.Tree;\n with Prj.Util; use Prj.Util;\n+with Sdefault;\n with Snames;   use Snames;\n with Table;    use Table;\n \n@@ -802,7 +803,8 @@ package body Prj.Makr is\n \n       Prj.Tree.Initialize (Root_Environment, Flags);\n       Prj.Env.Initialize_Default_Project_Path\n-        (Root_Environment.Project_Path, Target_Name => \"\");\n+        (Root_Environment.Project_Path,\n+         Target_Name => Sdefault.Target_Name.all);\n \n       Prj.Tree.Initialize (Tree);\n "}, {"sha": "cf48392c817f3046b62ec6f5603441f1debb11fb", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "patch": "@@ -1196,6 +1196,17 @@ package body Sem_Type is\n       --  Determine whether one of the candidates is an operation inherited by\n       --  a type that is derived from an actual in an instantiation.\n \n+      function In_Same_Declaration_List\n+        (Typ     : Entity_Id;\n+         Op_Decl : Entity_Id) return Boolean;\n+      --  AI05-0020: a spurious ambiguity may arise when equality on anonymous\n+      --  access types is declared on the partial view of a designated type, so\n+      --  that the type declaration and equality are not in the same list of\n+      --  declarations. This AI gives a preference rule for the user-defined\n+      --  operation. Same rule applies for arithmetic operations on private\n+      --  types completed with fixed-point types: the predefined operation is\n+      --  hidden;  this is already handled properly in GNAT.\n+\n       function Is_Actual_Subprogram (S : Entity_Id) return Boolean;\n       --  Determine whether a subprogram is an actual in an enclosing instance.\n       --  An overloading between such a subprogram and one declared outside the\n@@ -1255,6 +1266,26 @@ package body Sem_Type is\n          end if;\n       end Inherited_From_Actual;\n \n+      ------------------------------\n+      -- In_Same_Declaration_List --\n+      ------------------------------\n+\n+      function In_Same_Declaration_List\n+        (Typ     : Entity_Id;\n+         Op_Decl : Entity_Id) return Boolean\n+      is\n+         Scop : constant Entity_Id := Scope (Typ);\n+\n+      begin\n+         return In_Same_List (Parent (Typ), Op_Decl)\n+           or else\n+             (Ekind_In (Scop, E_Package, E_Generic_Package)\n+                and then List_Containing (Op_Decl) =\n+                  Visible_Declarations (Parent (Scop))\n+                and then List_Containing (Parent (Typ)) =\n+                  Private_Declarations (Parent (Scop)));\n+      end In_Same_Declaration_List;\n+\n       --------------------------\n       -- Is_Actual_Subprogram --\n       --------------------------\n@@ -1934,8 +1965,9 @@ package body Sem_Type is\n               and then Etype (User_Subp) = Standard_Boolean\n               and then Ekind (Operand_Type) = E_Anonymous_Access_Type\n               and then\n-                In_Same_List (Parent (Designated_Type (Operand_Type)),\n-                              Unit_Declaration_Node (User_Subp))\n+                In_Same_Declaration_List\n+                  (Designated_Type (Operand_Type),\n+                     Unit_Declaration_Node (User_Subp))\n             then\n                if It2.Nam = Predef_Subp then\n                   return It1;"}, {"sha": "8db690506aee461f45a26016de11552df695b687", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "patch": "@@ -12201,6 +12201,22 @@ package body Sem_Util is\n       end case;\n    end Unique_Defining_Entity;\n \n+   -----------------\n+   -- Unique_Name --\n+   -----------------\n+\n+   function Unique_Name (E : Entity_Id) return String is\n+      Name : constant String := Get_Name_String (Chars (E));\n+   begin\n+      if Has_Fully_Qualified_Name (E)\n+        or else E = Standard_Standard\n+      then\n+         return Name;\n+      else\n+         return Unique_Name (Scope (E)) & \"__\" & Name;\n+      end if;\n+   end Unique_Name;\n+\n    --------------------------\n    -- Unit_Declaration_Node --\n    --------------------------"}, {"sha": "7c7ddd65227d942ce353775397309c6e15b6469f", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=6a2e5d0f3d52360a6a0f036a19cedffbd4b8bd42", "patch": "@@ -1372,6 +1372,10 @@ package Sem_Util is\n    --  Return the entity which represents declaration N, so that matching\n    --  declaration and body have the same entity.\n \n+   function Unique_Name (E : Entity_Id) return String;\n+   --  Return a unique name for entity E, which could be used to identify E\n+   --  across compilation units.\n+\n    function Unit_Declaration_Node (Unit_Id : Entity_Id) return Node_Id;\n    --  Unit_Id is the simple name of a program unit, this function returns the\n    --  corresponding xxx_Declaration node for the entity. Also applies to the"}]}