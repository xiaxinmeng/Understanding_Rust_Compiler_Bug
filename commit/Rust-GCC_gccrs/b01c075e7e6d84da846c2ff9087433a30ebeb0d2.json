{"sha": "b01c075e7e6d84da846c2ff9087433a30ebeb0d2", "node_id": "C_kwDOANBUbNoAKGIwMWMwNzVlN2U2ZDg0ZGE4NDZjMmZmOTA4NzQzM2EzMGViZWIwZDI", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2022-06-29T15:55:41Z"}, "committer": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2022-06-29T15:55:41Z"}, "message": "nios2: Fix PIC function call slowness\n\nOn Nios II, PIC function calls use R_NIOS2_CALL* relocations, which\nmay refer to a GOT entry that initially points to a PLT entry to\nresolve the function on first call and that is then changed by the\ndynamic linker to point directly to the function to be called so\nsubsequent calls do not go through the dynamic linker.  To quote the\nABI, \"A global offset table (GOT) entry referenced using\nR_NIOS2_GOT16, R_NIOS2_GOT_LO as well as R_NIOS2_GOT_HA must be\nresolved at load time.  A GOT entry referenced only using\nR_NIOS2_CALL16, R_NIOS2_CALL_LO as well as R_NIOS2_CALL_HA can\ninitially refer to a procedure linkage table (PLT) entry and then be\nresolved lazily.\".\n\nHowever, GCC wrongly treats function addresses loaded from the GOT\nwith such relocations as constant.  If the address load is pulled out\nof a loop, then every call in the loop looks up the function by name.\nThis shows up as very slow execution of many glibc testcases in glibc\n2.35 and later (tests that call functions from shared libc many times\nin a loop), where tests are now built as PIE by default.  Fix this\nproblem by using gen_rtx_MEM instead of gen_const_mem when loading\naddresses for PIC function calls.\n\nTested with no regressions for cross to nios2-linux-gnu, where many\nglibc tests pass that previously timed out.\n\n\t* config/nios2/nios2.cc (nios2_load_pic_address): Use gen_rtx_MEM\n\tnot gen_const_mem for UNSPEC_PIC_CALL_SYM.", "tree": {"sha": "4efecf25464036f90f5081b5a9dc3823e09f11e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4efecf25464036f90f5081b5a9dc3823e09f11e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b01c075e7e6d84da846c2ff9087433a30ebeb0d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b01c075e7e6d84da846c2ff9087433a30ebeb0d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b01c075e7e6d84da846c2ff9087433a30ebeb0d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b01c075e7e6d84da846c2ff9087433a30ebeb0d2/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5097cdf9b8a0f00142c566b7723709db8690e51a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5097cdf9b8a0f00142c566b7723709db8690e51a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5097cdf9b8a0f00142c566b7723709db8690e51a"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "1a33c88f19fb6c896fb7ab3977875c2454e5538f", "filename": "gcc/config/nios2/nios2.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b01c075e7e6d84da846c2ff9087433a30ebeb0d2/gcc%2Fconfig%2Fnios2%2Fnios2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b01c075e7e6d84da846c2ff9087433a30ebeb0d2/gcc%2Fconfig%2Fnios2%2Fnios2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2.cc?ref=b01c075e7e6d84da846c2ff9087433a30ebeb0d2", "patch": "@@ -2552,7 +2552,10 @@ nios2_load_pic_address (rtx sym, int unspec, rtx tmp)\n       return nios2_large_got_address (offset, tmp);\n     }\n \n-  return gen_const_mem (Pmode, nios2_got_address (sym, unspec));\n+  if (unspec == UNSPEC_PIC_CALL_SYM)\n+    return gen_rtx_MEM (Pmode, nios2_got_address (sym, unspec));\n+  else\n+    return gen_const_mem (Pmode, nios2_got_address (sym, unspec));\n }\n \n /* Nonzero if the constant value X is a legitimate general operand"}]}