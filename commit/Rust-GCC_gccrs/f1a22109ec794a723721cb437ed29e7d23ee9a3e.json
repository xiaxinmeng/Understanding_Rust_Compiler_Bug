{"sha": "f1a22109ec794a723721cb437ed29e7d23ee9a3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFhMjIxMDllYzc5NGE3MjM3MjFjYjQzN2VkMjllN2QyM2VlOWEzZQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-06-27T18:13:12Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-06-27T18:13:12Z"}, "message": "[multiple changes]\n\n\n2003-06-27  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/testsuite_performance.h (__gnu_cxx_test): Change\n\toutput name to libstdc++-v3-performance.sum.\n\t* testsuite/Makefile.am (CLEANFILES): Remove .performance.\n\t* testsuite/Makefile.in: Regenerate.\n\n2003-06-27  Matthias Klose  <doko@debian.org>\n\n\t* testsuite/Makefile.am (check-abi, check-abi-verbose): Save\n\toutput of abi-check in libstdc++-v3-abi.sum.\n\t* testsuite/Makefile.in: Regenerate.\n\nFrom-SVN: r68593", "tree": {"sha": "c89331de4468963f883f4d8eb14ae696e02d8231", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c89331de4468963f883f4d8eb14ae696e02d8231"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1a22109ec794a723721cb437ed29e7d23ee9a3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a22109ec794a723721cb437ed29e7d23ee9a3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1a22109ec794a723721cb437ed29e7d23ee9a3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a22109ec794a723721cb437ed29e7d23ee9a3e/comments", "author": null, "committer": null, "parents": [{"sha": "7e4fb06a5182286640bf73410d09ab324c5e73ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e4fb06a5182286640bf73410d09ab324c5e73ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e4fb06a5182286640bf73410d09ab324c5e73ad"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "d528de95f6538a51069a913002f3c6bad7cceab2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a22109ec794a723721cb437ed29e7d23ee9a3e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a22109ec794a723721cb437ed29e7d23ee9a3e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f1a22109ec794a723721cb437ed29e7d23ee9a3e", "patch": "@@ -1,3 +1,16 @@\n+2003-06-27  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/testsuite_performance.h (__gnu_cxx_test): Change\n+\toutput name to libstdc++-v3-performance.sum.\n+\t* testsuite/Makefile.am (CLEANFILES): Remove .performance.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t\n+2003-06-27  Matthias Klose  <doko@debian.org>\n+\n+\t* testsuite/Makefile.am (check-abi, check-abi-verbose): Save\n+\toutput of abi-check in libstdc++-v3-abi.sum.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2003-06-27  Krister Walfridsson  <cato@df.lth.se>\n \n \t* config/os/bsd/netbsd/ctype_noninline.h"}, {"sha": "cd6245ba8c88ef1c7e8d45ad9e82530c9c1f79a1", "filename": "libstdc++-v3/testsuite/Makefile.am", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a22109ec794a723721cb437ed29e7d23ee9a3e/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a22109ec794a723721cb437ed29e7d23ee9a3e/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am?ref=f1a22109ec794a723721cb437ed29e7d23ee9a3e", "patch": "@@ -115,10 +115,13 @@ if GLIBCPP_TEST_ABI\n # Use 'new-abi-baseline' to create an initial symbol file.  Then run\n # 'check-abi' to test for changes against that file.\n check-abi: abi_check baseline_symbols current_symbols.txt\n-\t-@(./abi_check --check ./current_symbols.txt ${baseline_file})\n+\t-@(./abi_check --check ./current_symbols.txt ${baseline_file} \\\n+\t2>&1 | tee libstdc++-v3-abi.sum)\n \n check-abi-verbose: abi_check baseline_symbols current_symbols.txt \n-\t-@(./abi_check --check-verbose ./current_symbols.txt ${baseline_file})\n+\t-@(./abi_check --check-verbose ./current_symbols.txt ${baseline_file} \\\n+\t2>&1 | tee libstdc++-v3-abi.sum)\n+\n else\n check-abi:\n check-abi-verbose:\n@@ -152,4 +155,4 @@ check-performance: ${performance_script}\n \n # By adding these files here, automake will remove them for 'make clean'\n CLEANFILES = *.txt *.tst *.exe core* filebuf_* tmp* ostream_* *.log *.sum \\\n-\t     testsuite_* site.exp abi_check baseline_symbols *.performance\n+\t     testsuite_* site.exp abi_check baseline_symbols "}, {"sha": "ae6a4e25606f1e313d6bcfcf2c7a36a312b0cf39", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a22109ec794a723721cb437ed29e7d23ee9a3e/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a22109ec794a723721cb437ed29e7d23ee9a3e/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=f1a22109ec794a723721cb437ed29e7d23ee9a3e", "patch": "@@ -198,7 +198,7 @@ performance_script = ${glibcpp_srcdir}/scripts/check_performance\n \n # By adding these files here, automake will remove them for 'make clean'\n CLEANFILES = *.txt *.tst *.exe core* filebuf_* tmp* ostream_* *.log *.sum \\\n-\t     testsuite_* site.exp abi_check baseline_symbols *.performance\n+\t     testsuite_* site.exp abi_check baseline_symbols \n \n CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = \n@@ -521,10 +521,13 @@ new-abi-baseline:\n # Use 'new-abi-baseline' to create an initial symbol file.  Then run\n # 'check-abi' to test for changes against that file.\n @GLIBCPP_TEST_ABI_TRUE@check-abi: abi_check baseline_symbols current_symbols.txt\n-@GLIBCPP_TEST_ABI_TRUE@\t-@(./abi_check --check ./current_symbols.txt ${baseline_file})\n+@GLIBCPP_TEST_ABI_TRUE@\t-@(./abi_check --check ./current_symbols.txt ${baseline_file} \\\n+@GLIBCPP_TEST_ABI_TRUE@\t2>&1 | tee libstdc++-v3-abi.sum)\n \n @GLIBCPP_TEST_ABI_TRUE@check-abi-verbose: abi_check baseline_symbols current_symbols.txt \n-@GLIBCPP_TEST_ABI_TRUE@\t-@(./abi_check --check-verbose ./current_symbols.txt ${baseline_file})\n+@GLIBCPP_TEST_ABI_TRUE@\t-@(./abi_check --check-verbose ./current_symbols.txt ${baseline_file} \\\n+@GLIBCPP_TEST_ABI_TRUE@\t2>&1 | tee libstdc++-v3-abi.sum)\n+\n @GLIBCPP_TEST_ABI_FALSE@check-abi:\n @GLIBCPP_TEST_ABI_FALSE@check-abi-verbose:\n check-script: ${survey_script}"}, {"sha": "b55ed9121df57746186569725ff778ee99d89af9", "filename": "libstdc++-v3/testsuite/testsuite_performance.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a22109ec794a723721cb437ed29e7d23ee9a3e/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_performance.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a22109ec794a723721cb437ed29e7d23ee9a3e/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_performance.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_performance.h?ref=f1a22109ec794a723721cb437ed29e7d23ee9a3e", "patch": "@@ -170,7 +170,7 @@ namespace __gnu_cxx_test\n   {\n     const char space = ' ';\n     const char tab = '\\t';\n-    const char* name = \"libstdc++-v3.performance\";\n+    const char* name = \"libstdc++-v3-performance.sum\";\n     std::string::const_iterator i = file.begin() + file.find_last_of('/') + 1;\n     std::string testname(i, file.end());\n "}]}