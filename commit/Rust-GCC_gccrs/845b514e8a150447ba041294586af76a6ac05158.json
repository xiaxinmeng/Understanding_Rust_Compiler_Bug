{"sha": "845b514e8a150447ba041294586af76a6ac05158", "node_id": "C_kwDOANBUbNoAKDg0NWI1MTRlOGExNTA0NDdiYTA0MTI5NDU4NmFmNzZhNmFjMDUxNTg", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-12-21T11:27:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-12-21T12:12:52Z"}, "message": "middle-end/107994 - ICE after error with comparison gimplification\n\nThe following avoids passing down error_mark_node to fold_convert.\n\n\tPR middle-end/107994\n\t* gimplify.cc (gimplify_expr): Catch errorneous comparison\n\toperand.", "tree": {"sha": "cf2873d5099c18606c4e9a380edfdd7f91c01ca9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf2873d5099c18606c4e9a380edfdd7f91c01ca9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/845b514e8a150447ba041294586af76a6ac05158", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/845b514e8a150447ba041294586af76a6ac05158", "html_url": "https://github.com/Rust-GCC/gccrs/commit/845b514e8a150447ba041294586af76a6ac05158", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/845b514e8a150447ba041294586af76a6ac05158/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89ba8366fe12fd2d04535c99ba67f33d7e305132", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89ba8366fe12fd2d04535c99ba67f33d7e305132", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89ba8366fe12fd2d04535c99ba67f33d7e305132"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "c9c800a585090bf9730b704e496cbc57fcc76556", "filename": "gcc/gimplify.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845b514e8a150447ba041294586af76a6ac05158/gcc%2Fgimplify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845b514e8a150447ba041294586af76a6ac05158/gcc%2Fgimplify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.cc?ref=845b514e8a150447ba041294586af76a6ac05158", "patch": "@@ -17098,6 +17098,9 @@ gimplify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n \t\t Compare scalar mode aggregates as scalar mode values.  Using\n \t\t memcmp for them would be very inefficient at best, and is\n \t\t plain wrong if bitfields are involved.  */\n+\t      if (error_operand_p (TREE_OPERAND (*expr_p, 1)))\n+\t\tret = GS_ERROR;\n+\t      else\n \t\t{\n \t\t  tree type = TREE_TYPE (TREE_OPERAND (*expr_p, 1));\n \n@@ -17122,9 +17125,8 @@ gimplify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n \t\t    ret = gimplify_scalar_mode_aggregate_compare (expr_p);\n \t\t  else\n \t\t    ret = gimplify_variable_sized_compare (expr_p);\n-\n-\t\t  break;\n \t\t}\n+\t      break;\n \n \t    /* If *EXPR_P does not need to be special-cased, handle it\n \t       according to its class.  */"}]}