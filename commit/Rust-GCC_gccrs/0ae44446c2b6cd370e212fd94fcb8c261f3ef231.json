{"sha": "0ae44446c2b6cd370e212fd94fcb8c261f3ef231", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFlNDQ0NDZjMmI2Y2QzNzBlMjEyZmQ5NGZjYjhjMjYxZjNlZjIzMQ==", "commit": {"author": {"name": "Jose Ruiz", "email": "ruiz@adacore.com", "date": "2010-10-18T13:54:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-18T13:54:23Z"}, "message": "adaint.c (__gnat_pthread_setaffinity_np, [...]): Remove wrappers, no longer needed.\n\n2010-10-18  Jose Ruiz  <ruiz@adacore.com>\n\n\t* adaint.c (__gnat_pthread_setaffinity_np,\n\t__gnat_pthread_attr_setaffinity_np): Remove wrappers, no longer needed.\n\t* s-osinte-linux.ads (pthread_setaffinity_np,\n\tpthread_attr_setaffinity_np): Remove use of wrappers.\n\t* s-taprop-linux.adb (Create_Task, Initialize): Restore check to verify\n\twhether the affinity functionality is available in the OS.\n\t* gcc-interface/utils.c: Set TREE_STATIC on functions only when there\n\tare defined.\n\nFrom-SVN: r165635", "tree": {"sha": "fd8be92505a77963bb3e3da7c663b98880cdba33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd8be92505a77963bb3e3da7c663b98880cdba33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ae44446c2b6cd370e212fd94fcb8c261f3ef231", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ae44446c2b6cd370e212fd94fcb8c261f3ef231", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ae44446c2b6cd370e212fd94fcb8c261f3ef231", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ae44446c2b6cd370e212fd94fcb8c261f3ef231/comments", "author": {"login": "JoseRuizAdaCore", "id": 22770339, "node_id": "MDQ6VXNlcjIyNzcwMzM5", "avatar_url": "https://avatars.githubusercontent.com/u/22770339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoseRuizAdaCore", "html_url": "https://github.com/JoseRuizAdaCore", "followers_url": "https://api.github.com/users/JoseRuizAdaCore/followers", "following_url": "https://api.github.com/users/JoseRuizAdaCore/following{/other_user}", "gists_url": "https://api.github.com/users/JoseRuizAdaCore/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoseRuizAdaCore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoseRuizAdaCore/subscriptions", "organizations_url": "https://api.github.com/users/JoseRuizAdaCore/orgs", "repos_url": "https://api.github.com/users/JoseRuizAdaCore/repos", "events_url": "https://api.github.com/users/JoseRuizAdaCore/events{/privacy}", "received_events_url": "https://api.github.com/users/JoseRuizAdaCore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3fd9f17cdc0903732072cd64349ef14912d9cab0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fd9f17cdc0903732072cd64349ef14912d9cab0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fd9f17cdc0903732072cd64349ef14912d9cab0"}], "stats": {"total": 89, "additions": 33, "deletions": 56}, "files": [{"sha": "847bef2b532baf94e4c6ad354ab8c9011759e52b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae44446c2b6cd370e212fd94fcb8c261f3ef231/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae44446c2b6cd370e212fd94fcb8c261f3ef231/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0ae44446c2b6cd370e212fd94fcb8c261f3ef231", "patch": "@@ -1,3 +1,14 @@\n+2010-10-18  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* adaint.c (__gnat_pthread_setaffinity_np,\n+\t__gnat_pthread_attr_setaffinity_np): Remove wrappers, no longer needed.\n+\t* s-osinte-linux.ads (pthread_setaffinity_np,\n+\tpthread_attr_setaffinity_np): Remove use of wrappers.\n+\t* s-taprop-linux.adb (Create_Task, Initialize): Restore check to verify\n+\twhether the affinity functionality is available in the OS.\n+\t* gcc-interface/utils.c: Set TREE_STATIC on functions only when there\n+\tare defined.\n+\n 2010-10-18  Robert Dewar  <dewar@adacore.com>\n \n \t* einfo.ads, einfo.adb: Minor reformatting."}, {"sha": "3f4654f7a2ac59db698c945b8fda8cf0660d3621", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae44446c2b6cd370e212fd94fcb8c261f3ef231/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae44446c2b6cd370e212fd94fcb8c261f3ef231/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=0ae44446c2b6cd370e212fd94fcb8c261f3ef231", "patch": "@@ -3671,50 +3671,4 @@ void *__gnat_lwp_self (void)\n {\n    return (void *) syscall (__NR_gettid);\n }\n-\n-/* For the affinity functions, there are systems which do not provide\n-   the required support, so we create a wrapper to check its availability\n-   before calling. */\n-\n-extern int pthread_setaffinity_np (pthread_t th,\n-\t\t\t\t   size_t cpusetsize,\n-\t\t\t\t   const void *cpuset)\n- __attribute__((weak));\n-\n-extern int pthread_attr_setaffinity_np (pthread_attr_t *__attr,\n-\t\t\t\t\tsize_t cpusetsize,\n-\t\t\t\t\tconst void *cpuset)\n- __attribute__((weak));\n-\n-int __gnat_pthread_setaffinity_np (pthread_t th,\n-\t\t\t\t   size_t cpusetsize,\n-\t\t\t\t   const void *cpuset);\n-\n-int __gnat_pthread_attr_setaffinity_np (pthread_attr_t *__attr,\n-\t\t\t\t\tsize_t cpusetsize,\n-\t\t\t\t\tconst void *cpuset);\n-\n-int\n-__gnat_pthread_setaffinity_np (pthread_t th,\n-\t\t\t       size_t cpusetsize,\n-\t\t\t       const void *cpuset)\n-{\n-  /* Call the underlying OS operation if available */\n-  if (pthread_setaffinity_np)\n-    return pthread_setaffinity_np (th, cpusetsize, cpuset);\n-  else\n-    return 0;\n-}\n-\n-int\n-__gnat_pthread_attr_setaffinity_np (pthread_attr_t *__attr,\n-\t\t\t\t    size_t cpusetsize,\n-\t\t\t\t    const void *cpuset)\n-{\n-  /* Call the underlying OS operation if available */\n-  if (pthread_attr_setaffinity_np)\n-    return pthread_attr_setaffinity_np (__attr, cpusetsize, cpuset);\n-  else\n-    return 0;\n-}\n #endif"}, {"sha": "9973d27b33f6c562ea4eb56faa48510d6ae8f030", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae44446c2b6cd370e212fd94fcb8c261f3ef231/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae44446c2b6cd370e212fd94fcb8c261f3ef231/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=0ae44446c2b6cd370e212fd94fcb8c261f3ef231", "patch": "@@ -1783,7 +1783,6 @@ create_subprog_decl (tree subprog_name, tree asm_name,\n \n   DECL_EXTERNAL (subprog_decl)  = extern_flag;\n   TREE_PUBLIC (subprog_decl)    = public_flag;\n-  TREE_STATIC (subprog_decl)\t= 1;\n   TREE_READONLY (subprog_decl)  = TYPE_READONLY (subprog_type);\n   TREE_THIS_VOLATILE (subprog_decl) = TYPE_VOLATILE (subprog_type);\n   TREE_SIDE_EFFECTS (subprog_decl) = TYPE_VOLATILE (subprog_type);\n@@ -1831,6 +1830,9 @@ begin_subprog_body (tree subprog_decl)\n \n   announce_function (subprog_decl);\n \n+  /* This function is being defined.  */\n+  TREE_STATIC (subprog_decl) = 1;\n+\n   current_function_decl = subprog_decl;\n \n   /* Enter a new binding level and show that all the parameters belong to"}, {"sha": "2ea496357070700acfa68df5023cd4ed0a3ca784", "filename": "gcc/ada/s-osinte-linux.ads", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae44446c2b6cd370e212fd94fcb8c261f3ef231/gcc%2Fada%2Fs-osinte-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae44446c2b6cd370e212fd94fcb8c261f3ef231/gcc%2Fada%2Fs-osinte-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-linux.ads?ref=0ae44446c2b6cd370e212fd94fcb8c261f3ef231", "patch": "@@ -490,18 +490,20 @@ package System.OS_Interface is\n      (thread     : pthread_t;\n       cpusetsize : size_t;\n       cpuset     : access cpu_set_t) return int;\n-   pragma Import (C, pthread_setaffinity_np, \"__gnat_pthread_setaffinity_np\");\n-   --  Use a wrapper because this function may be available or not, depending\n-   --  on the version of the system.\n+   pragma Import (C, pthread_setaffinity_np, \"pthread_setaffinity_np\");\n+   pragma Weak_External (pthread_setaffinity_np);\n+   --  Use a weak symbol because this function may be available or not,\n+   --  depending on the version of the system.\n \n    function pthread_attr_setaffinity_np\n      (attr       : access pthread_attr_t;\n       cpusetsize : size_t;\n       cpuset     : access cpu_set_t) return int;\n    pragma Import (C, pthread_attr_setaffinity_np,\n-                  \"__gnat_pthread_attr_setaffinity_np\");\n-   --  Use a wrapper because this function may be available or not, depending\n-   --  on the version of the system.\n+                    \"pthread_attr_setaffinity_np\");\n+   pragma Weak_External (pthread_attr_setaffinity_np);\n+   --  Use a weak symbol because this function may be available or not,\n+   --  depending on the version of the system.\n \n private\n "}, {"sha": "db6ac9ff57115f7c5307d79a8be31552d875f369", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ae44446c2b6cd370e212fd94fcb8c261f3ef231/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ae44446c2b6cd370e212fd94fcb8c261f3ef231/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=0ae44446c2b6cd370e212fd94fcb8c261f3ef231", "patch": "@@ -851,7 +851,14 @@ package body System.Task_Primitives.Operations is\n       --  not behaving as expected. Setting the required attributes for the\n       --  creation of the thread works correctly and it is more appropriate.\n \n-      if T.Common.Base_CPU /= System.Multiprocessors.Not_A_Specific_CPU then\n+      --  Do nothing if required support not provided by the operating system\n+\n+      if pthread_attr_setaffinity_np'Address = System.Null_Address then\n+         null;\n+\n+      --  Support is available\n+\n+      elsif T.Common.Base_CPU /= System.Multiprocessors.Not_A_Specific_CPU then\n          declare\n             CPU_Set : aliased cpu_set_t := (bits => (others => False));\n          begin\n@@ -1326,8 +1333,9 @@ package body System.Task_Primitives.Operations is\n \n       --  pragma CPU for the environment task\n \n-      if Environment_Task.Common.Base_CPU /=\n-        System.Multiprocessors.Not_A_Specific_CPU\n+      if pthread_setaffinity_np'Address /= System.Null_Address\n+        and then Environment_Task.Common.Base_CPU /=\n+                   System.Multiprocessors.Not_A_Specific_CPU\n       then\n          declare\n             CPU_Set : aliased cpu_set_t := (bits => (others => False));"}]}