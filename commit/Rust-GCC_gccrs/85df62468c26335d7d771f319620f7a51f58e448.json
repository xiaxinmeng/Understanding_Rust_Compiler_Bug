{"sha": "85df62468c26335d7d771f319620f7a51f58e448", "node_id": "C_kwDOANBUbNoAKDg1ZGY2MjQ2OGMyNjMzNWQ3ZDc3MWYzMTk2MjBmN2E1MWY1OGU0NDg", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-02-19T11:30:47Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-13T08:04:34Z"}, "message": "[Ada] Do not overwrite limited view of result type\n\nThis removes obsolete code that overwrites a limited view present as the\nresult type of a function during the tentative analysis of prefixed\nviews for function calls involving tagged types. The original view is\nnecessary for the code generator to break the circularity present in\nthis setup.\n\nThe change also adds a couple of guards for the illegal case where the\nlimited view is the only view available when the function is invoked.\n\ngcc/ada/\n\n\t* aspects.adb (Find_Value_Of_Aspect): Add guard.\n\t* sem_ch4.adb (Complete_Object_Operation): Remove obsolete code.\n\t* sem_ch5.adb (Has_Sec_Stack_Default_Iterator): Add guard.", "tree": {"sha": "ec6a9b944f4ca04a7974908bd11a022396f17a92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec6a9b944f4ca04a7974908bd11a022396f17a92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85df62468c26335d7d771f319620f7a51f58e448", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85df62468c26335d7d771f319620f7a51f58e448", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85df62468c26335d7d771f319620f7a51f58e448", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85df62468c26335d7d771f319620f7a51f58e448/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18e278727e1a0430f50e878dbfadb35dae54baff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18e278727e1a0430f50e878dbfadb35dae54baff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18e278727e1a0430f50e878dbfadb35dae54baff"}], "stats": {"total": 18, "additions": 4, "deletions": 14}, "files": [{"sha": "3471a81f1766c76c4c7d979e488f18e12693f6a3", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85df62468c26335d7d771f319620f7a51f58e448/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85df62468c26335d7d771f319620f7a51f58e448/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=85df62468c26335d7d771f319620f7a51f58e448", "patch": "@@ -285,7 +285,9 @@ package body Aspects is\n \n    begin\n       if Present (Spec) then\n-         if A = Aspect_Default_Iterator then\n+         if A = Aspect_Default_Iterator\n+           and then Present (Aspect_Rep_Item (Spec))\n+         then\n             return Expression (Aspect_Rep_Item (Spec));\n          else\n             return Expression (Spec);"}, {"sha": "ad7448fedb5f007c36ba6ac85bb532f65badfcc9", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85df62468c26335d7d771f319620f7a51f58e448/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85df62468c26335d7d771f319620f7a51f58e448/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=85df62468c26335d7d771f319620f7a51f58e448", "patch": "@@ -9248,19 +9248,6 @@ package body Sem_Ch4 is\n             Save_Interps (Subprog, Node_To_Replace);\n \n          else\n-            --  The type of the subprogram may be a limited view obtained\n-            --  transitively from another unit. If full view is available,\n-            --  use it to analyze call. If there is no nonlimited view, then\n-            --  this is diagnosed when analyzing the rewritten call.\n-\n-            declare\n-               T : constant Entity_Id := Etype (Subprog);\n-            begin\n-               if From_Limited_With (T) then\n-                  Set_Etype (Entity (Subprog), Available_View (T));\n-               end if;\n-            end;\n-\n             Analyze (Node_To_Replace);\n \n             --  If the operation has been rewritten into a call, which may get"}, {"sha": "0a836089d9535358925b2ade48e36bd234068653", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85df62468c26335d7d771f319620f7a51f58e448/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85df62468c26335d7d771f319620f7a51f58e448/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=85df62468c26335d7d771f319620f7a51f58e448", "patch": "@@ -3675,6 +3675,7 @@ package body Sem_Ch5 is\n          begin\n             return\n               Present (Def_Iter)\n+                and then Present (Etype (Def_Iter))\n                 and then Requires_Transient_Scope (Etype (Def_Iter));\n          end Has_Sec_Stack_Default_Iterator;\n "}]}