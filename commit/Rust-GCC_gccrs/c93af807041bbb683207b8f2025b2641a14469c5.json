{"sha": "c93af807041bbb683207b8f2025b2641a14469c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkzYWY4MDcwNDFiYmI2ODMyMDdiOGYyMDI1YjI2NDFhMTQ0NjljNQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-07-29T13:56:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T13:56:59Z"}, "message": "a-except.adb: Minor comment clarification.\n\n2014-07-29  Robert Dewar  <dewar@adacore.com>\n\n\t* a-except.adb: Minor comment clarification.\n\n2014-07-29  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Complete list of implementation attributes.\n\t* snames.ads-tmpl: Clean up list of impl-defined attributes.\n\nFrom-SVN: r213192", "tree": {"sha": "3eb5c8a50f42afbc6808f34a4926158c7d1830d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3eb5c8a50f42afbc6808f34a4926158c7d1830d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c93af807041bbb683207b8f2025b2641a14469c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c93af807041bbb683207b8f2025b2641a14469c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c93af807041bbb683207b8f2025b2641a14469c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c93af807041bbb683207b8f2025b2641a14469c5/comments", "author": null, "committer": null, "parents": [{"sha": "f9e333abc4f13e38bec21c5a85c92edef40e84d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9e333abc4f13e38bec21c5a85c92edef40e84d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9e333abc4f13e38bec21c5a85c92edef40e84d3"}], "stats": {"total": 162, "additions": 145, "deletions": 17}, "files": [{"sha": "8966d9ea8a8ef796e17a673cf0951c0fa3f9623b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c93af807041bbb683207b8f2025b2641a14469c5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c93af807041bbb683207b8f2025b2641a14469c5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c93af807041bbb683207b8f2025b2641a14469c5", "patch": "@@ -1,3 +1,12 @@\n+2014-07-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-except.adb: Minor comment clarification.\n+\n+2014-07-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Complete list of implementation attributes.\n+\t* snames.ads-tmpl: Clean up list of impl-defined attributes.\n+\n 2014-07-29  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* freeze.adb (Freeze_Record_Type): Perform various"}, {"sha": "5d26790a316c2bb8fa186c1d2c589a8826beee08", "filename": "gcc/ada/a-except.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c93af807041bbb683207b8f2025b2641a14469c5/gcc%2Fada%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c93af807041bbb683207b8f2025b2641a14469c5/gcc%2Fada%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.adb?ref=c93af807041bbb683207b8f2025b2641a14469c5", "patch": "@@ -371,6 +371,10 @@ package body Ada.Exceptions is\n    --  which uses the exceptmsg.awk script to generate require exception data,\n    --  and this script requires and expects that this ordering rule holds.\n \n+   --  The one exception is that Rcheck_PE_Finalize_Raise_Exception is at the\n+   --  end of the list (for reasons that are documented with this routine). The\n+   --  script (exceptmsg.awk) has this special exception built in.\n+\n    procedure Rcheck_CE_Access_Check\n      (File : System.Address; Line : Integer);\n    procedure Rcheck_CE_Null_Access_Parameter"}, {"sha": "0f48f495004ca231113bc8cc84da815db22d590d", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 128, "deletions": 13, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c93af807041bbb683207b8f2025b2641a14469c5/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c93af807041bbb683207b8f2025b2641a14469c5/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=c93af807041bbb683207b8f2025b2641a14469c5", "patch": "@@ -340,11 +340,14 @@ Implementation Defined Attributes\n * Attribute Asm_Input::\n * Attribute Asm_Output::\n * Attribute AST_Entry::\n+* Attribute Atomic_Always_Lock_Free::\n * Attribute Bit::\n * Attribute Bit_Position::\n-* Attribute Compiler_Version::\n * Attribute Code_Address::\n+* Attribute Compiler_Version::\n+* Attribute Constant_Indexing::\n * Attribute Default_Bit_Order::\n+* Attribute Default_Iterator::\n * Attribute Descriptor_Size::\n * Attribute Elaborated::\n * Attribute Elab_Body::\n@@ -355,21 +358,28 @@ Implementation Defined Attributes\n * Attribute Enum_Rep::\n * Attribute Enum_Val::\n * Attribute Epsilon::\n+* Attribute Fast_Math::\n * Attribute Fixed_Value::\n+* Attribute From_Any::\n * Attribute Has_Access_Values::\n * Attribute Has_Discriminants::\n * Attribute Img::\n+* Attribute Implicit_Dereference::\n * Attribute Integer_Value::\n * Attribute Invalid_Value::\n+* Attribute Iterator_Element::\n+* Attribute Iterable::\n * Attribute Large::\n * Attribute Library_Level::\n+* Attribute Lock_Free::\n * Attribute Loop_Entry::\n * Attribute Machine_Size::\n * Attribute Mantissa::\n * Attribute Maximum_Alignment::\n * Attribute Mechanism_Code::\n * Attribute Null_Parameter::\n * Attribute Object_Size::\n+* Attribute Old::\n * Attribute Passed_By_Reference::\n * Attribute Pool_Address::\n * Attribute Range_Length::\n@@ -378,23 +388,26 @@ Implementation Defined Attributes\n * Attribute Result::\n * Attribute Safe_Emax::\n * Attribute Safe_Large::\n+* Attribute Safe_Small::\n * Attribute Scalar_Storage_Order::\n * Attribute Simple_Storage_Pool::\n * Attribute Small::\n * Attribute Storage_Unit::\n * Attribute Stub_Type::\n * Attribute System_Allocator_Alignment::\n * Attribute Target_Name::\n-* Attribute Tick::\n * Attribute To_Address::\n+* Attribute To_Any::\n * Attribute Type_Class::\n+* Attribute Type_Key::\n+* Attribute TypeCode::\n * Attribute UET_Address::\n * Attribute Unconstrained_Array::\n * Attribute Universal_Literal_String::\n * Attribute Unrestricted_Access::\n * Attribute Update::\n-* Attribute Valid_Scalars::\n * Attribute VADS_Size::\n+* Attribute Valid_Scalars::\n * Attribute Value_Size::\n * Attribute Wchar_T_Size::\n * Attribute Word_Size::\n@@ -8501,11 +8514,14 @@ consideration, you should minimize the use of these attributes.\n * Attribute Asm_Input::\n * Attribute Asm_Output::\n * Attribute AST_Entry::\n+* Attribute Atomic_Always_Lock_Free::\n * Attribute Bit::\n * Attribute Bit_Position::\n-* Attribute Compiler_Version::\n * Attribute Code_Address::\n+* Attribute Compiler_Version::\n+* Attribute Constant_Indexing::\n * Attribute Default_Bit_Order::\n+* Attribute Default_Iterator::\n * Attribute Descriptor_Size::\n * Attribute Elaborated::\n * Attribute Elab_Body::\n@@ -8516,21 +8532,28 @@ consideration, you should minimize the use of these attributes.\n * Attribute Enum_Rep::\n * Attribute Enum_Val::\n * Attribute Epsilon::\n+* Attribute Fast_Math::\n * Attribute Fixed_Value::\n+* Attribute From_Any::\n * Attribute Has_Access_Values::\n * Attribute Has_Discriminants::\n * Attribute Img::\n+* Attribute Implicit_Dereference::\n * Attribute Integer_Value::\n * Attribute Invalid_Value::\n+* Attribute Iterator_Element::\n+* Attribute Iterable::\n * Attribute Large::\n * Attribute Library_Level::\n+* Attribute Lock_Free::\n * Attribute Loop_Entry::\n * Attribute Machine_Size::\n * Attribute Mantissa::\n * Attribute Maximum_Alignment::\n * Attribute Mechanism_Code::\n * Attribute Null_Parameter::\n * Attribute Object_Size::\n+* Attribute Old::\n * Attribute Passed_By_Reference::\n * Attribute Pool_Address::\n * Attribute Range_Length::\n@@ -8539,23 +8562,26 @@ consideration, you should minimize the use of these attributes.\n * Attribute Result::\n * Attribute Safe_Emax::\n * Attribute Safe_Large::\n+* Attribute Safe_Small::\n * Attribute Scalar_Storage_Order::\n * Attribute Simple_Storage_Pool::\n * Attribute Small::\n * Attribute Storage_Unit::\n * Attribute Stub_Type::\n * Attribute System_Allocator_Alignment::\n * Attribute Target_Name::\n-* Attribute Tick::\n * Attribute To_Address::\n+* Attribute To_Any::\n * Attribute Type_Class::\n+* Attribute Type_Key::\n+* Attribute TypeCode::\n * Attribute UET_Address::\n * Attribute Unconstrained_Array::\n * Attribute Universal_Literal_String::\n * Attribute Unrestricted_Access::\n * Attribute Update::\n-* Attribute Valid_Scalars::\n * Attribute VADS_Size::\n+* Attribute Valid_Scalars::\n * Attribute Value_Size::\n * Attribute Wchar_T_Size::\n * Attribute Word_Size::\n@@ -8626,6 +8652,12 @@ pragma @code{Extend_System (Aux_DEC)}).  This value enables the given entry to\n be called when an AST occurs.  For further details, refer to the @cite{DEC Ada\n Language Reference Manual}, section 9.12a.\n \n+@node Attribute Atomic_Always_Lock_Free\n+@unnumberedsec Attribute Atomic_Always_Lock_Free\n+@findex Atomic_Always_Lock_Free\n+@noindent\n+PLEASE ADD DOCUMENTATION HERE???\n+\n @node Attribute Bit\n @unnumberedsec Attribute Bit\n @findex Bit\n@@ -8713,6 +8745,21 @@ generated code of the specified subprogram, which may or may not be\n the same value as is returned by the corresponding @code{'Address}\n attribute.\n \n+@node Attribute Compiler_Version\n+@unnumberedsec Attribute Compiler_Version\n+@findex Compiler_Version\n+@noindent\n+@code{Standard'Compiler_Version} (@code{Standard} is the only allowed\n+prefix) yields a static string identifying the version of the compiler\n+being used to compile the unit containing the attribute reference. A\n+typical result would be something like \"@value{EDITION} @value{gnat_version} (20090221)\".\n+\n+@node Attribute Constant_Indexing\n+@unnumberedsec Attribute Constant_Indexing\n+@findex Constant_Indexing\n+@noindent\n+PLEASE ADD DOCUMENTATION HERE???\n+\n @node Attribute Default_Bit_Order\n @unnumberedsec Attribute Default_Bit_Order\n @cindex Big endian\n@@ -8725,6 +8772,12 @@ as a @code{Pos} value (0 for @code{High_Order_First}, 1 for\n @code{Low_Order_First}).  This is used to construct the definition of\n @code{Default_Bit_Order} in package @code{System}.\n \n+@node Attribute Default_Iterator\n+@unnumberedsec Attribute Default_Iterator\n+@findex Default_Iterator\n+@noindent\n+PLEASE ADD DOCUMENTATION HERE???\n+\n @node Attribute Descriptor_Size\n @unnumberedsec Attribute Descriptor_Size\n @cindex Descriptor\n@@ -8893,6 +8946,12 @@ The @code{Epsilon} attribute is provided for compatibility with Ada 83.  See\n the Ada 83 reference manual for an exact description of the semantics of\n this attribute.\n \n+@node Attribute Fast_Math\n+@unnumberedsec Attribute Fast_Math\n+@findex Fast_Math\n+@noindent\n+PLEASE ADD DOCUMENTATION HERE???\n+\n @node Attribute Fixed_Value\n @unnumberedsec Attribute Fixed_Value\n @findex Fixed_Value\n@@ -8920,6 +8979,12 @@ that there are full range checks, to ensure that the result is in range.\n This attribute is primarily intended for use in implementation of the\n input-output functions for fixed-point values.\n \n+@node Attribute From_Any\n+@unnumberedsec Attribute From_Any\n+@findex From_Any\n+@noindent\n+PLEASE ADD DOCUMENTATION HERE???\n+\n @node Attribute Has_Access_Values\n @unnumberedsec Attribute Has_Access_Values\n @cindex Access values, testing for\n@@ -8973,6 +9038,12 @@ that returns the appropriate string when called. This means that\n @code{X'Img} can be renamed as a function-returning-string, or used\n in an instantiation as a function parameter.\n \n+@node Attribute Implicit_Dereference\n+@unnumberedsec Attribute Implicit_Dereference\n+@findex Implicit_Dereference\n+@noindent\n+PLEASE ADD DOCUMENTATION HERE???\n+\n @node Attribute Integer_Value\n @unnumberedsec Attribute Integer_Value\n @findex Integer_Value\n@@ -9012,6 +9083,18 @@ uninitialized value of the type if pragma Initialize_Scalars is used,\n including the ability to modify the value with the binder -Sxx flag and\n relevant environment variables at run time.\n \n+@node Attribute Iterator_Element\n+@unnumberedsec Attribute Iterator_Element\n+@findex Iterator_Element\n+@noindent\n+PLEASE ADD DOCUMENTATION HERE???\n+\n+@node Attribute Iterable\n+@unnumberedsec Attribute Iterable\n+@findex Iterable\n+@noindent\n+PLEASE ADD DOCUMENTATION HERE???\n+\n @node Attribute Large\n @unnumberedsec Attribute Large\n @cindex Ada 83 attributes\n@@ -9045,6 +9128,12 @@ package Gen is\n end Gen;\n @end smallexample\n \n+@node Attribute Lock_Free\n+@unnumberedsec Attribute Lock_Free\n+@findex Lock_Free\n+@noindent\n+PLEASE ADD DOCUMENTATION HERE???\n+\n @node Attribute Loop_Entry\n @unnumberedsec Attribute Loop_Entry\n @findex Loop_Entry\n@@ -9229,6 +9318,12 @@ generates the diagnostic shown above.\n Similar additional checks are performed in other contexts requiring\n statically matching subtypes.\n \n+@node Attribute Old\n+@unnumberedsec Attribute Old\n+@findex Old\n+@noindent\n+PLEASE ADD DOCUMENTATION HERE???\n+\n @node Attribute Passed_By_Reference\n @unnumberedsec Attribute Passed_By_Reference\n @cindex Parameters, when passed by reference\n@@ -9371,6 +9466,15 @@ The @code{Safe_Large} attribute is provided for compatibility with Ada 83.  See\n the Ada 83 reference manual for an exact description of the semantics of\n this attribute.\n \n+@node Attribute Safe_Small\n+@unnumberedsec Attribute Safe_Small\n+@cindex Ada 83 attributes\n+@findex Safe_Small\n+@noindent\n+The @code{Safe_Small} attribute is provided for compatibility with Ada 83.  See\n+the Ada 83 reference manual for an exact description of the semantics of\n+this attribute.\n+\n @node Attribute Scalar_Storage_Order\n @unnumberedsec Attribute Scalar_Storage_Order\n @cindex Endianness\n@@ -9597,13 +9701,6 @@ for the current compilation. For GCC implementations, this is the\n standard gcc target name without the terminating slash (for\n example, GNAT 5.0 on windows yields \"i586-pc-mingw32msv\").\n \n-@node Attribute Tick\n-@unnumberedsec Attribute Tick\n-@findex Tick\n-@noindent\n-@code{Standard'Tick} (@code{Standard} is the only permissible prefix)\n-provides the same value as @code{System.Tick},\n-\n @node Attribute To_Address\n @unnumberedsec Attribute To_Address\n @findex To_Address\n@@ -9624,6 +9721,12 @@ argument is static). The argument must be in the range\n modular manner (e.g. -1 means the same as 16#FFFF_FFFF# on\n a 32 bits machine).\n \n+@node Attribute To_Any\n+@unnumberedsec Attribute To_Any\n+@findex To_Any\n+@noindent\n+PLEASE ADD DOCUMENTATION HERE???\n+\n @node Attribute Type_Class\n @unnumberedsec Attribute Type_Class\n @findex Type_Class\n@@ -9652,6 +9755,18 @@ Protected types yield the value @code{Type_Class_Task}, which thus\n applies to all concurrent types.  This attribute is designed to\n be compatible with the DEC Ada 83 attribute of the same name.\n \n+@node Attribute Type_Key\n+@unnumberedsec Attribute Type_Key\n+@findex Type_Key\n+@noindent\n+PLEASE ADD DOCUMENTATION HERE???\n+\n+@node Attribute TypeCode\n+@unnumberedsec Attribute TypeCode\n+@findex TypeCode\n+@noindent\n+PLEASE ADD DOCUMENTATION HERE???\n+\n @node Attribute UET_Address\n @unnumberedsec Attribute UET_Address\n @findex UET_Address"}, {"sha": "03045f03d84fa1e796a7002f6ca74f3132a6c86b", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c93af807041bbb683207b8f2025b2641a14469c5/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c93af807041bbb683207b8f2025b2641a14469c5/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=c93af807041bbb683207b8f2025b2641a14469c5", "patch": "@@ -917,7 +917,7 @@ package Snames is\n    Name_Overlaps_Storage               : constant Name_Id := N + $; -- GNAT\n    Name_Partition_ID                   : constant Name_Id := N + $;\n    Name_Passed_By_Reference            : constant Name_Id := N + $; -- GNAT\n-   Name_Pool_Address                   : constant Name_Id := N + $;\n+   Name_Pool_Address                   : constant Name_Id := N + $; -- GNAT\n    Name_Pos                            : constant Name_Id := N + $;\n    Name_Position                       : constant Name_Id := N + $;\n    Name_Priority                       : constant Name_Id := N + $; -- Ada 05\n@@ -937,7 +937,7 @@ package Snames is\n    Name_Scaling                        : constant Name_Id := N + $;\n    Name_Signed_Zeros                   : constant Name_Id := N + $;\n    Name_Size                           : constant Name_Id := N + $;\n-   Name_Small                          : constant Name_Id := N + $;\n+   Name_Small                          : constant Name_Id := N + $; -- Ada 83\n    Name_Storage_Size                   : constant Name_Id := N + $;\n    Name_Storage_Unit                   : constant Name_Id := N + $; -- GNAT\n    Name_Stream_Size                    : constant Name_Id := N + $; -- Ada 05\n@@ -951,7 +951,7 @@ package Snames is\n    Name_UET_Address                    : constant Name_Id := N + $; -- GNAT\n    Name_Unbiased_Rounding              : constant Name_Id := N + $;\n    Name_Unchecked_Access               : constant Name_Id := N + $;\n-   Name_Unconstrained_Array            : constant Name_Id := N + $;\n+   Name_Unconstrained_Array            : constant Name_Id := N + $; -- GNAT\n    Name_Universal_Literal_String       : constant Name_Id := N + $; -- GNAT\n    Name_Unrestricted_Access            : constant Name_Id := N + $; -- GNAT\n    Name_Update                         : constant Name_Id := N + $; -- GNAT\n@@ -1024,7 +1024,7 @@ package Snames is\n    First_Type_Attribute_Name           : constant Name_Id := N + $;\n    Name_Base                           : constant Name_Id := N + $;\n    Name_Class                          : constant Name_Id := N + $;\n-   Name_Stub_Type                      : constant Name_Id := N + $;\n+   Name_Stub_Type                      : constant Name_Id := N + $; -- GNAT\n    Last_Type_Attribute_Name            : constant Name_Id := N + $;\n    Last_Entity_Attribute_Name          : constant Name_Id := N + $;\n    Last_Attribute_Name                 : constant Name_Id := N + $;"}]}