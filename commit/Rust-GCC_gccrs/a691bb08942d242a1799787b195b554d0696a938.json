{"sha": "a691bb08942d242a1799787b195b554d0696a938", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY5MWJiMDg5NDJkMjQyYTE3OTk3ODdiMTk1YjU1NGQwNjk2YTkzOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-07-27T10:29:02Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-07-27T10:29:02Z"}, "message": "char4_iunit_1.f03: Add ieee options.\n\n\t* gfortran.dg/char4_iunit_1.f03: Add ieee options.\n\tSkip on spu-*-* targets.\n\nFrom-SVN: r162561", "tree": {"sha": "38c4039f5107a803d1e9ceeee65828794e6b3f37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38c4039f5107a803d1e9ceeee65828794e6b3f37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a691bb08942d242a1799787b195b554d0696a938", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a691bb08942d242a1799787b195b554d0696a938", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a691bb08942d242a1799787b195b554d0696a938", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a691bb08942d242a1799787b195b554d0696a938/comments", "author": null, "committer": null, "parents": [{"sha": "7a9bf9a4e0fdbf96ac988e149941e24f13e97b8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a9bf9a4e0fdbf96ac988e149941e24f13e97b8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a9bf9a4e0fdbf96ac988e149941e24f13e97b8d"}], "stats": {"total": 93, "additions": 44, "deletions": 49}, "files": [{"sha": "6173d65a2d7f2b800df74029e32b589509cdb966", "filename": "gcc/ChangeLog", "status": "modified", "additions": 37, "deletions": 49, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a691bb08942d242a1799787b195b554d0696a938/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a691bb08942d242a1799787b195b554d0696a938/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a691bb08942d242a1799787b195b554d0696a938", "patch": "@@ -11,15 +11,13 @@\n \tc_common_initialize_diagnostics.\n \t* c-objc-common.h (LANG_HOOKS_OPTION_LANG_MASK,\n \tLANG_HOOKS_COMPLAIN_WRONG_LANG_P): Define.\n-\t* coretypes.h (struct cl_option, struct cl_decoded_option):\n-\tDeclare.\n+\t* coretypes.h (struct cl_option, struct cl_decoded_option): Declare.\n \t* hooks.c (hook_uint_uint_constcharptrptr_0): Remove.\n \t(hook_uint_void_0): New.\n \t* hooks.h (hook_uint_uint_constcharptrptr_0): Remove.\n \t(hook_uint_void_0): New.\n \t* opts-common.c (decode_cmdline_option,\n-\tdecode_cmdline_options_to_array): Also fill in canonical_option\n-\tfield.\n+\tdecode_cmdline_options_to_array): Also fill in canonical_option field.\n \t* opts.c (complain_wrong_lang): Use langhook to determine whether\n \tto complain instead of special-casing LTO.\n \t(decode_options): Separate lang_mask determination with\n@@ -114,13 +112,12 @@\n 2010-07-26  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/45056\n-\t* gimple-fold.c (fold_stmt_1): Also fold references in\n-\tdebug stmts.\n+\t* gimple-fold.c (fold_stmt_1): Also fold references in debug stmts.\n \n 2010-07-26  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/45071\n-\t* tree-ssa-sccvn.c  (vn_reference_maybe_forwprop_address): Always\n+\t* tree-ssa-sccvn.c (vn_reference_maybe_forwprop_address): Always\n \tadjust op->opcode.\n \n 2010-07-26  Naveen.H.S  <naveen.S@kpitcummins.com>\n@@ -134,9 +131,9 @@\n \tsave_r31, return_r31, save_interrupt, return_interrupt,\n \tsave_all_interrupt, return_all_interrupt, L_save_r2_r31,\n \tL_return_interrupt, callt_return_interrupt, L_restore_all_interrupt,\n-\tL_save_##START##_r31c, L_callt_save_r31c: Updated as per the\n+\tL_save_##START##_r31c, L_callt_save_r31c): Updated as per the\n \tnew ABI requirements.\n-\tsave_r6_r9, L_callt_save_r6_r9: Remove.\n+\t(save_r6_r9, L_callt_save_r6_r9): Remove.\n \t* config/v850/predicates.md (even_reg_operand, disp23_operand,\n \tconst_float_1_operand const_float_0_operand): New Predicates.\n \t(pattern_is_ok_for_prepare, pattern_is_ok_for_prologue,\n@@ -152,13 +149,11 @@\n \tassembly.\n \t(v850_float_z_comparison_operator, v850_select_cc_mode,\n \tv850_float_nz_comparison_operator,  v850_gen_float_compare,\n-\tv850_gen_compare): New functions to support comparison of\n-\tfloat values.\n+\tv850_gen_compare): New functions to support comparison of float values.\n \t(ep_memory_offset): Add support for V850E2 targets.\n \t(INTERRUPT_FIXED_NUM, INTERRUPT_ALL_SAVE_NUM): Update.\n \t(INTERRUPT_REGPARM_NUM): Remove.\n-\t(compute_register_save_size): Add extra case to save/restore\n-\tlong call.\n+\t(compute_register_save_size): Add extra case to save/restore long call.\n \t(use_prolog_function): New function to support prologue.\n \t(expand_prologue): Add support for V850E2 targets and modified\n \tas per the current ABI requirements.\n@@ -168,7 +163,7 @@\n \t(construct_dispose_instruction): Update as per the current ABI\n \trequirements.\n \t(construct_prepare_instruction): Likewise.\n-\t* config/v850/v850.h(TARGET_CPU_DEFAULT): Add target predefines.\n+\t* config/v850/v850.h (TARGET_CPU_DEFAULT): Add target predefines.\n \t(TARGET_CPU_v850e2, TARGET_CPU_v850e2v3): Define\n \t(CPP_SPEC): Updated to support v850e2 targets.\n \t(STRICT_ALIGNMENT): Modified.\n@@ -201,8 +196,7 @@\n \t(cc): Add set_z attribute.\n \t(unsign23byte_load, sign23byte_load, unsign23hword_load,\n \tsign23hword_load, 23word_load, 23byte_store, 23hword_store,\n-\t23word_store): New instructions for 23-bit displacement load and\n-\tstore.\n+\t23word_store): New instructions for 23-bit displacement load and store.\n \t(movqi_internal, movhi_internal): Update the attributes.\n \t(movsi, movsi_internal_v850e): Updated to support v850e2 targets.\n \t(movsi_internal_v850e, movsi_internal, movsf_internal): Update\n@@ -217,8 +211,7 @@\n \tone_cmplsi2): Clobber the CC_REGNUM register.\n \t(v850_clr1_1, v850_clr1_2, v850_clr1_3, andsi3, v850_set1_1,\n \tv850_set1_2, v850_set1_3, iorsi3, v850_not1_1, v850_not1_2,\n-\tv850_not1_3, xorsi3, one_cmplsi2): Update the attributes\n-\taccordingly.\n+\tv850_not1_3, xorsi3, one_cmplsi2): Update the attributes accordingly.\n \t(setf_insn, set_z_insn, set_nz_insn): New instructions for\n \tv850e2v3 target.\n \t(movsicc_normal_cc, movsicc_reversed_cc): New instructions.\n@@ -301,9 +294,8 @@\n \n 2010-07-24  Gerald Pfeifer  <gerald@pfeifer.com>\n \n-\t* doc/install.texi (Specific, *-*-freebsd*): Adjust to recent\n-\tchanges.  Streamline paragraph on compatibility with the system\n-\tcompiler.\n+\t* doc/install.texi (Specific, *-*-freebsd*): Adjust to recent changes.\n+\tStreamline paragraph on compatibility with the system compiler.\n \n 2010-07-24  Steven Bosscher  <steven@gcc.gnu.org>\n \n@@ -335,8 +327,7 @@\n 2010-07-23  Kai Tietz  <kai.tietz@onevision.com>\n \n \tPR target/41943\n-\t* Makefile.in (USER_H_INC_NEXT_PRE,\n-\tUSER_H_INC_NEXT_POST): New.\n+\t* Makefile.in (USER_H_INC_NEXT_PRE, USER_H_INC_NEXT_POST): New.\n \t(stmp-int-hdrs): Prefix/postfix headers by include_next.\n \t* config.gcc (user_headers_inc_next_pre): New.\n \t(user_headers_inc_next_post): Likewise.\n@@ -352,8 +343,7 @@\n \tSet tga_func for Solaris 2/x86 resp. SPARC.\n \tRemove duplicate parts of sparc*-sun-solaris2.* TLS check.\n \t(LIB_THREAD_LDFLAGS_SPEC): Define.\n-\t(LIB_TLS_SPEC): Define.\n-\tCheck for required Sun ld version.\n+\t(LIB_TLS_SPEC): Define.  Check for required Sun ld version.\n \t* configure: Regenerate.\n \t* config.in: Regenerate.\n \t* config/sol2.h (LIB_SPEC): Use LIB_THREAD_LDFLAGS_SPEC with\n@@ -420,8 +410,7 @@\n \n 2010-07-23  Richard Guenther  <rguenther@suse.de>\n \n-\t* lto-symtab.c (lto_symtab_merge): Use gtc_mode enum\n-\tvalues.\n+\t* lto-symtab.c (lto_symtab_merge): Use gtc_mode enum values.\n \t(lto_symtab_merge_decls_2): Likewise.\n \t* tree-ssa.c (useless_type_conversion_p): Likewise.\n \t* lto-streamer-in.c (input_gimple_stmt): Likewise.\n@@ -453,13 +442,13 @@\n \n 2010-07-23  Jie Zhang  <jie@codesourcery.com>\n \n-\t* doc/extend.texi: Remove IP2K from the description of naked\n-\tattribute.  Add MCORE instead.\n+\t* doc/extend.texi: Remove IP2K from the description of naked attribute.\n+\tAdd MCORE instead.\n \n-2010-07-10   Andi Kleen <ak@linux.intel.com>\n+2010-07-10  Andi Kleen  <ak@linux.intel.com>\n \n \tPR lto/44992\n-        * lto-opts.c (lto_write_options): Add NULL file_data argument to\n+\t* lto-opts.c (lto_write_options): Add NULL file_data argument to\n \tlto_get_section_name.\n \t* lto-section-out.c (lto_destroy_simple_output_block): Likewise.\n \t* lto-streamer-out.c (produce_asm): Likewise.\n@@ -471,12 +460,12 @@\n \t* lto-streamer.h (lto_file_decl_data): Add next, id, resolutions.\n \t(lto_get_section_name): Add file_data argument to prototype.\n \n-2010-07-10   Andi Kleen <ak@linux.intel.com>\n+2010-07-10  Andi Kleen  <ak@linux.intel.com>\n \n \t* lto-section-in.c (lto_section_name): Synchronize names\n \twith lto_get_section_name.\n \n-2010-07-10   Andi Kleen <ak@linux.intel.com>\n+2010-07-10  Andi Kleen  <ak@linux.intel.com>\n \n \t* lto-opts.c (lto_read_file_options): Check for missing section.\n \n@@ -670,8 +659,8 @@\n 2010-07-22  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n  \tPR target/43698\n-\t* config/arm/arm.md: Split arm_rev into *arm_rev\n-\tand *thumb1_rev. Set *arm_rev to be predicable.\n+\t* config/arm/arm.md: Split arm_rev into *arm_rev and *thumb1_rev.\n+\tSet *arm_rev to be predicable.\n \n 2010-07-22  Iain Sandoe  <iains@gcc.gnu.org>\n \n@@ -703,13 +692,13 @@\n \t(reload_combine_closest_single_use): Don't take DEBUG_INSNs\n \tinto account.\n \t(fixup_debug_insns): Don't copy the rtx.\n-\t(reload_combine_recognize_const_pattern): DEBUG_INSNs can't\n-\thave uses.  Don't copy when replacing.  Call fixup_debug_insns\n-\tin the case where we merged one add with another.\n-\t(reload_combine_recognize_pattern): Fail if there aren't any\n-\tuses.  Try harder to determine whether we're picking a valid\n-\tindex register.  Don't set store_ruid for an insn we're going\n-\tto scan in the next iteration.\n+\t(reload_combine_recognize_const_pattern): DEBUG_INSNs can't have uses.\n+\tDon't copy when replacing.  Call fixup_debug_insns in the case where\n+\twe merged one add with another.\n+\t(reload_combine_recognize_pattern): Fail if there aren't any uses.\n+\tTry harder to determine whether we're picking a valid index register.\n+\tDon't set store_ruid for an insn we're going to scan in the\n+\tnext iteration.\n \t(reload_combine): Remove unused code.\n \t(reload_combine_note_use): When updating use information for\n \tan old insn, ignore a use that occurs after store_ruid.\n@@ -786,8 +775,7 @@\n 2010-07-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/45003\n-\t* var-tracking.c (reverse_op): Also handle {SIGN,ZERO}_EXTEND of\n-\ta MEM.\n+\t* var-tracking.c (reverse_op): Also handle {SIGN,ZERO}_EXTEND of a MEM.\n \t* dwarf2out.c (loc_descriptor): Don't handle SIGN_EXTEND nor\n \tZERO_EXTEND here.\n \n@@ -1527,7 +1515,7 @@\n 2010-07-13  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* c-decl.c (finish_function): Fix typo in comment.\n-\t\n+\n 2010-07-12  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR bootstrap/44921\n@@ -9030,7 +9018,7 @@\n \tdebug_tree_chain): Likewise.\n \t* tree-loop-distribution.c (debug_rdg_partitions): Likewise.\n \t* cgraph.c (debug_cgraph_node, debug_cgraph): Likewise.\n-\t* optabs.c  (debug_optab_libfuncs): Likewise.\n+\t* optabs.c (debug_optab_libfuncs): Likewise.\n \t(verify_loop_closed_ssa): Likewise.\n \t* value-prof.c (verify_histograms): Likewise.\n \t* reload.c (debug_reload_to_stream, debug_reload): Likewise.\n@@ -10168,7 +10156,7 @@\n \t* toplev.c (general_init): Set global_dc->internal_error.\n \t* Makefile.in (diagnostic.o): Update dependencies.\n \n-2010-05-25 Iain Sandoe  <iains@gcc.gnu.org>\n+2010-05-25  Iain Sandoe  <iains@gcc.gnu.org>\n \n \t* config/rs6000/darwin64.h: Update DARWIN_ARCH_SPEC.\n \t* config/rs6000/t-darwin64: New.\n@@ -14345,7 +14333,7 @@\n \t* builtins.c (expand_builtin_signbit): Clean up, use double_int_*\n \tand immed_double_int_const functions.\n \t* optabs.c (expand_absneg_bit, expand_copysign_absneg,\n-\texpand_copysign_bit):  (Ditto.).\n+\texpand_copysign_bit): (Ditto.).\n \t* simplify-rtx.c (simplify_binary_operation_1): (Ditto.).\n \t* tree-ssa-address.c (addr_for_mem_ref): (Ditto.).\n \t* dojump.c (prefer_and_bit_test): (Ditto.).\n@@ -18793,7 +18781,7 @@\n 2010-02-16  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/41043\n-\t* tree-vrp.c  (vrp_var_may_overflow): Only ask SCEV for real loops.\n+\t* tree-vrp.c (vrp_var_may_overflow): Only ask SCEV for real loops.\n \t(vrp_visit_assignment_or_call): Do not ask SCEV for regular\n \tstatements ...\n \t(vrp_visit_phi_node): ... but only for loop PHI nodes."}, {"sha": "8058d2d9d659a5bf38484352140054b35f991a0e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a691bb08942d242a1799787b195b554d0696a938/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a691bb08942d242a1799787b195b554d0696a938/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a691bb08942d242a1799787b195b554d0696a938", "patch": "@@ -1,3 +1,8 @@\n+2010-07-27  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gfortran.dg/char4_iunit_1.f03: Add ieee options.\n+\tSkip on spu-*-* targets.\n+\n 2010-07-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/45083"}, {"sha": "57b3f78702f9b3820c5ca6bd40c05d12b45e41d5", "filename": "gcc/testsuite/gfortran.dg/char4_iunit_1.f03", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a691bb08942d242a1799787b195b554d0696a938/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar4_iunit_1.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a691bb08942d242a1799787b195b554d0696a938/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar4_iunit_1.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar4_iunit_1.f03?ref=a691bb08942d242a1799787b195b554d0696a938", "patch": "@@ -1,4 +1,6 @@\n ! { dg-do run }\n+! { dg-add-options ieee }\n+! { dg-skip-if \"NaN not supported\" { spu-*-* } { \"*\" } { \"\" } }\n ! PR37077 Implement Internal Unit I/O for character KIND=4\n ! Test case prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n program char4_iunit_1"}]}