{"sha": "d6a7a3be7489a8a89f352cc787fa6dbbe73ba85a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZhN2EzYmU3NDg5YThhODlmMzUyY2M3ODdmYTZkYmJlNzNiYTg1YQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-04-13T16:01:36Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-04-13T16:01:36Z"}, "message": "re PR fortran/31550 (f951: segfault in fold-const.c:1963)\n\n2007-04-13  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/31550\n\t* trans-types.c (copy_dt_decls_ifequal): Do not get pointer\n\tderived type components.\n\n2007-04-13  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/31550\n\t* gfortran.dg/used_types_16.f90: New test.\n\nFrom-SVN: r123791", "tree": {"sha": "7a40dd5e9cd1696ff750cbbedd9e56dddec6c1b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a40dd5e9cd1696ff750cbbedd9e56dddec6c1b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6a7a3be7489a8a89f352cc787fa6dbbe73ba85a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6a7a3be7489a8a89f352cc787fa6dbbe73ba85a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6a7a3be7489a8a89f352cc787fa6dbbe73ba85a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6a7a3be7489a8a89f352cc787fa6dbbe73ba85a/comments", "author": null, "committer": null, "parents": [{"sha": "0615f92345112bf405492e83c49273f4956e6df2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0615f92345112bf405492e83c49273f4956e6df2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0615f92345112bf405492e83c49273f4956e6df2"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "df60120a5ff43c6aba1629dd8709dc3e37b4ff09", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a7a3be7489a8a89f352cc787fa6dbbe73ba85a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a7a3be7489a8a89f352cc787fa6dbbe73ba85a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d6a7a3be7489a8a89f352cc787fa6dbbe73ba85a", "patch": "@@ -1,3 +1,9 @@\n+2007-04-13  Paul Thomas  <pault@gcc.gnu.org>\r\n+\r\n+\tPR fortran/31550\r\n+\t* trans-types.c (copy_dt_decls_ifequal): Do not get pointer\r\n+\tderived type components.\r\n+\r\n 2007-04-13  Tobias Schl\ufffdter  <tobi@gcc.gnu.org>\n \n \tPR fortran/18937"}, {"sha": "1462f3306893d06af75557fb16b04d42cc69859e", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a7a3be7489a8a89f352cc787fa6dbbe73ba85a/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a7a3be7489a8a89f352cc787fa6dbbe73ba85a/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=d6a7a3be7489a8a89f352cc787fa6dbbe73ba85a", "patch": "@@ -1446,7 +1446,7 @@ copy_dt_decls_ifequal (gfc_symbol *from, gfc_symbol *to)\n   for (; to_cm; to_cm = to_cm->next, from_cm = from_cm->next)\n     {\n       to_cm->backend_decl = from_cm->backend_decl;\n-      if (from_cm->ts.type == BT_DERIVED)\n+      if (!from_cm->pointer && from_cm->ts.type == BT_DERIVED)\n \tgfc_get_derived_type (to_cm->ts.derived);\n \n       else if (from_cm->ts.type == BT_CHARACTER)"}, {"sha": "04007bc81965c337f750b27fa5d5b1fa1083e684", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a7a3be7489a8a89f352cc787fa6dbbe73ba85a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a7a3be7489a8a89f352cc787fa6dbbe73ba85a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d6a7a3be7489a8a89f352cc787fa6dbbe73ba85a", "patch": "@@ -1,3 +1,8 @@\n+2007-04-13  Paul Thomas  <pault@gcc.gnu.org>\r\n+\r\n+\tPR fortran/31550\r\n+\t* gfortran.dg/used_types_16.f90: New test.\r\n+\r\n 2007-04-13  Tobias Schl\ufffdter  <tobi@gcc.gnu.org>\n \n \tPR fortran/18937"}, {"sha": "b1ad779cff6f94c631a5160a08a0de5b6414bf0a", "filename": "gcc/testsuite/gfortran.dg/used_types_16.f90", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a7a3be7489a8a89f352cc787fa6dbbe73ba85a/gcc%2Ftestsuite%2Fgfortran.dg%2Fused_types_16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a7a3be7489a8a89f352cc787fa6dbbe73ba85a/gcc%2Ftestsuite%2Fgfortran.dg%2Fused_types_16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fused_types_16.f90?ref=d6a7a3be7489a8a89f352cc787fa6dbbe73ba85a", "patch": "@@ -0,0 +1,51 @@\n+! { dg-do compile }\n+! Tests the fix for PR31550 in which pointers to derived type components\n+! were being TREE-SSA declared in the wrong order and so in the incorrect\n+! context.\n+!\n+! Contributed by Daniel Franke <dfranke@gcc.gnu.org>\n+!\n+MODULE class_dummy_atom_types\r\n+TYPE :: dummy_atom_list\r\n+  TYPE(dummy_atom), DIMENSION(:), POINTER :: table\r\n+  INTEGER                                 :: nused\r\n+END TYPE\r\n+\r\n+TYPE :: dummy_atom\r\n+  TYPE(dummy_atom_private), POINTER :: p\r\n+END TYPE\r\n+\r\n+TYPE :: dummy_atom_private\r\n+  TYPE(dummy_atom_list)       :: neighbours\r\n+END TYPE\r\n+END MODULE\r\n+\r\n+MODULE class_dummy_atom_list\r\n+USE class_dummy_atom_types, ONLY: dummy_atom_list\r\n+\r\n+INTERFACE \r\n+  SUBROUTINE dummy_atom_list_init_copy(this, other)\r\n+    USE class_dummy_atom_types, ONLY: dummy_atom_list\r\n+    TYPE(dummy_atom_list), INTENT(out) :: this\r\n+    TYPE(dummy_atom_list), INTENT(in)  :: other\r\n+  END SUBROUTINE\r\n+END INTERFACE\r\n+\r\n+INTERFACE\r\n+  SUBROUTINE dummy_atom_list_merge(this, other)\r\n+    USE class_dummy_atom_types, ONLY: dummy_atom_list\r\n+    TYPE(dummy_atom_list), INTENT(inout) :: this\r\n+    TYPE(dummy_atom_list), INTENT(in)    :: other\r\n+  END SUBROUTINE\r\n+END INTERFACE\r\n+END MODULE\r\n+\r\n+SUBROUTINE dummy_atom_list_init_copy(this, other)\r\n+  USE class_dummy_atom_list, ONLY: dummy_atom_list, dummy_atom_list_merge\r\n+\r\n+  TYPE(dummy_atom_list), INTENT(out) :: this\r\n+  TYPE(dummy_atom_list), INTENT(in)  :: other\r\n+\r\n+  this%table(1:this%nused) = other%table(1:other%nused)\r\n+END SUBROUTINE\r\n+! { dg-final { cleanup-modules \"class_dummy_atom_types class_dummy_atom_list\" } }"}]}