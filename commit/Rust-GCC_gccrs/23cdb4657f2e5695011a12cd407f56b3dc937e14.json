{"sha": "23cdb4657f2e5695011a12cd407f56b3dc937e14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNjZGI0NjU3ZjJlNTY5NTAxMWExMmNkNDA3ZjU2YjNkYzkzN2UxNA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-03-02T13:40:25Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-03-02T13:40:25Z"}, "message": "h8300.md (zero_extendqisi2): Change to an expander.\n\n\t* config/h8300/h8300.md (zero_extendqisi2): Change to an\n\texpander.\n\t(*zero_extendqisi2_h8300): New.\n\t(*zero_extendqisi2_h8300hs): New.\n\t(two splitters): New.\n\nFrom-SVN: r63660", "tree": {"sha": "a537cb1444231295b1116a456533476397a7327b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a537cb1444231295b1116a456533476397a7327b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23cdb4657f2e5695011a12cd407f56b3dc937e14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23cdb4657f2e5695011a12cd407f56b3dc937e14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23cdb4657f2e5695011a12cd407f56b3dc937e14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23cdb4657f2e5695011a12cd407f56b3dc937e14/comments", "author": null, "committer": null, "parents": [{"sha": "29efb633263ed76d05c7f99432315ffe48183e42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29efb633263ed76d05c7f99432315ffe48183e42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29efb633263ed76d05c7f99432315ffe48183e42"}], "stats": {"total": 52, "additions": 49, "deletions": 3}, "files": [{"sha": "5783d609aaf55090328ced630d62a0e1d10d1834", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23cdb4657f2e5695011a12cd407f56b3dc937e14/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23cdb4657f2e5695011a12cd407f56b3dc937e14/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23cdb4657f2e5695011a12cd407f56b3dc937e14", "patch": "@@ -1,3 +1,11 @@\n+2003-03-02  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md (zero_extendqisi2): Change to an\n+\texpander.\n+\t(*zero_extendqisi2_h8300): New.\n+\t(*zero_extendqisi2_h8300hs): New.\n+\t(two splitters): New.\n+\n 2003-03-02  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* fp-bit.h (float_to_usi): Fix condition wrapping prototype."}, {"sha": "495fba33d5cbfd9397841d81589b15e08f432ccd", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 41, "deletions": 3, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23cdb4657f2e5695011a12cd407f56b3dc937e14/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23cdb4657f2e5695011a12cd407f56b3dc937e14/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=23cdb4657f2e5695011a12cd407f56b3dc937e14", "patch": "@@ -2043,9 +2043,13 @@\n \t(zero_extend:HI (match_dup 2)))]\n   \"operands[2] = gen_rtx_REG (QImode, REGNO (operands[0]));\")\n \n-;; The compiler can synthesize a H8/300H variant of this which is\n-;; just as efficient as one that we'd create\n-(define_insn \"zero_extendqisi2\"\n+(define_expand \"zero_extendqisi2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(zero_extend:SI (match_operand:QI 1 \"general_operand_src\" \"\")))]\n+  \"\"\n+  \"\")\n+\n+(define_insn \"*zero_extendqisi2_h8300\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n \t(zero_extend:SI (match_operand:QI 1 \"general_operand_src\" \"0,g>\")))]\n   \"TARGET_H8300\"\n@@ -2055,6 +2059,40 @@\n   [(set_attr \"length\" \"4,8\")\n    (set_attr \"cc\" \"clobber,clobber\")])\n \n+(define_insn \"*zero_extendqisi2_h8300hs\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n+\t(zero_extend:SI (match_operand:QI 1 \"general_operand_src\" \"0,g>\")))]\n+  \"TARGET_H8300H || TARGET_H8300S\"\n+  \"@\n+  extu.w\t%T0\\;extu.l\t%S0\n+  mov.b\t%R1,%w0\\;extu.w\t%T0\\;extu.l\t%S0\"\n+  [(set_attr \"length\" \"4,12\")\n+   (set_attr \"cc\" \"set_znv,set_znv\")])\n+\n+(define_split\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(zero_extend:SI (match_operand:QI 1 \"general_operand_src\" \"\")))]\n+  \"(TARGET_H8300H || TARGET_H8300S)\n+   && reg_overlap_mentioned_p (operands[0], operands[1])\n+   && reload_completed\" \n+  [(set (match_dup 2)\n+\t(match_dup 1))\n+   (set (match_dup 0)\n+\t(zero_extend:SI (match_dup 2)))]\n+  \"operands[2] = gen_rtx_REG (QImode, REGNO (operands[0]));\")\n+\n+(define_split\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(zero_extend:SI (match_operand:QI 1 \"general_operand_src\" \"\")))]\n+  \"(TARGET_H8300H || TARGET_H8300S)\n+   && !reg_overlap_mentioned_p (operands[0], operands[1])\n+   && reload_completed\" \n+  [(set (match_dup 0)\n+\t(const_int 0))\n+   (set (strict_low_part (match_dup 2))\n+\t(match_dup 1))]\n+  \"operands[2] = gen_rtx_REG (QImode, REGNO (operands[0]));\")\n+\n (define_expand \"zero_extendhisi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(zero_extend:SI (match_operand:HI 1 \"register_operand\" \"\")))]"}]}