{"sha": "ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRiZDc0MmJmODRlN2VkMjhkOWQzN2QyYzdiNGNjOWYzZDdkMDVjMA==", "commit": {"author": {"name": "Nathan Myers", "email": "ncm@cantrip.org", "date": "2015-05-14T13:47:19Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-05-14T13:47:19Z"}, "message": "re PR libstdc++/66055 (hash containers missing required reserving constructors)\n\n2015-05-14  Nathan Myers  <ncm@cantrip.org>\n\t    Jonathan Wakely  <jwakely@redhat.com>\n\n\tPR libstdc++/66055\n\t* include/std/unordered_map (unordered_map, unordered_multimap): Add\n\tmissing constructors.\n\t* include/std/unordered_set (unordered_set, unordered_multiset):\n\tLikewise.\n\t* testsuite/23_containers/unordered_map/cons/66055.cc: New.\n\t* testsuite/23_containers/unordered_multimap/cons/66055.cc: New.\n\t* testsuite/23_containers/unordered_multiset/cons/66055.cc: New.\n\t* testsuite/23_containers/unordered_set/cons/66055.cc: New.\n\nCo-Authored-By: Jonathan Wakely <jwakely@redhat.com>\n\nFrom-SVN: r223198", "tree": {"sha": "f77775ca0a3b6aab8410c2c329b95d973c454e2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f77775ca0a3b6aab8410c2c329b95d973c454e2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0/comments", "author": {"login": "ncm", "id": 215047, "node_id": "MDQ6VXNlcjIxNTA0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/215047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ncm", "html_url": "https://github.com/ncm", "followers_url": "https://api.github.com/users/ncm/followers", "following_url": "https://api.github.com/users/ncm/following{/other_user}", "gists_url": "https://api.github.com/users/ncm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ncm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ncm/subscriptions", "organizations_url": "https://api.github.com/users/ncm/orgs", "repos_url": "https://api.github.com/users/ncm/repos", "events_url": "https://api.github.com/users/ncm/events{/privacy}", "received_events_url": "https://api.github.com/users/ncm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc8b587d7e3cac469d29a415149102858bf7faf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc8b587d7e3cac469d29a415149102858bf7faf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc8b587d7e3cac469d29a415149102858bf7faf8"}], "stats": {"total": 174, "additions": 174, "deletions": 0}, "files": [{"sha": "2311e9345037d7785dfea58f87f299d6192c65c9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0", "patch": "@@ -1,3 +1,16 @@\n+2015-05-14  Nathan Myers  <ncm@cantrip.org>\n+\t    Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/66055\n+\t* include/std/unordered_map (unordered_map, unordered_multimap): Add\n+\tmissing constructors.\n+\t* include/std/unordered_set (unordered_set, unordered_multiset):\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_map/cons/66055.cc: New.\n+\t* testsuite/23_containers/unordered_multimap/cons/66055.cc: New.\n+\t* testsuite/23_containers/unordered_multiset/cons/66055.cc: New.\n+\t* testsuite/23_containers/unordered_set/cons/66055.cc: New.\n+\n 2015-05-14  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/66011"}, {"sha": "069b85922ead045bf18bb18a9bff605e6b4eea6e", "filename": "libstdc++-v3/include/bits/unordered_map.h", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_map.h?ref=ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0", "patch": "@@ -146,6 +146,17 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       : _M_h(__n, __hf, __eql, __a)\n       { }\n \n+      unordered_map(size_type __n, const allocator_type& __a)\n+      : _M_h(__n, hasher(), key_equal(), __a)\n+      { }\n+\n+      explicit\n+      unordered_map(size_type __n,\n+\t\t    const hasher& __hf,\n+\t\t    const allocator_type& __a)\n+      : _M_h(__n, __hf, key_equal(), __a)\n+      { }\n+\n       /**\n        *  @brief  Builds an %unordered_map from a range.\n        *  @param  __first  An input iterator.\n@@ -861,6 +872,16 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       : _M_h(__n, __hf, __eql, __a)\n       { }\n \n+      unordered_multimap(size_type __n, const allocator_type& __a)\n+      : _M_h(__n, hasher(), key_equal(), __a)\n+      { }\n+\n+      unordered_multimap(size_type __n,\n+\t\t\t const hasher& __hf,\n+\t\t\t const allocator_type& __a)\n+      : _M_h(__n, __hf, key_equal(), __a)\n+      { }\n+\n       /**\n        *  @brief  Builds an %unordered_multimap from a range.\n        *  @param  __first An input iterator."}, {"sha": "c91eab8e113b14ccee07ccf7c8cb7f398468efd2", "filename": "libstdc++-v3/include/bits/unordered_set.h", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_set.h?ref=ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0", "patch": "@@ -140,6 +140,16 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       : _M_h(__n, __hf, __eql, __a)\n       { }\n \n+      unordered_set(size_type __n, const allocator_type& __a)\n+      : _M_h(__n, hasher(), key_equal(), __a)\n+      { }\n+\n+      unordered_set(size_type __n,\n+                    const hasher& __hf,\n+                    const allocator_type& __a)\n+      : unordered_set(__n, __hf, key_equal(), __a)\n+      { }\n+\n       /**\n        *  @brief  Builds an %unordered_set from a range.\n        *  @param  __first  An input iterator.\n@@ -779,6 +789,16 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       : _M_h(__n, __hf, __eql, __a)\n       { }\n \n+      unordered_multiset(size_type __n, const allocator_type& __a)\n+      : _M_h(__n, hasher(), key_equal(), __a)\n+      { }\n+\n+      unordered_multiset(size_type __n,\n+\t\t\t const hasher& __hf,\n+\t\t\t const allocator_type& __a)\n+      : _M_h(__n, __hf, key_equal(), __a)\n+      { }\n+\n       /**\n        *  @brief  Builds an %unordered_multiset from a range.\n        *  @param  __first  An input iterator."}, {"sha": "0d3e384110f7310e38aa61e5ee980708fb8099ef", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/cons/66055.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fcons%2F66055.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fcons%2F66055.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fcons%2F66055.cc?ref=ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0", "patch": "@@ -0,0 +1,30 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// Jonathan Wakely  <jwakely@redhat.com>\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+#include <unordered_map>\n+\n+using test_type = std::unordered_map<int, int>;\n+using hasher_type = test_type::hasher;\n+using alloc_type = test_type::allocator_type;\n+\n+test_type h1(10, alloc_type());\n+test_type h2(10, hasher_type(), alloc_type());"}, {"sha": "c4d68ec16da665b5bc50675112752cac38b6e644", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/cons/66055.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fcons%2F66055.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fcons%2F66055.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fcons%2F66055.cc?ref=ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0", "patch": "@@ -0,0 +1,30 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// Jonathan Wakely  <jwakely@redhat.com>\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+#include <unordered_map>\n+\n+using test_type = std::unordered_multimap<int, int>;\n+using hasher_type = test_type::hasher;\n+using alloc_type = test_type::allocator_type;\n+\n+test_type h1(10, alloc_type());\n+test_type h2(10, hasher_type(), alloc_type());"}, {"sha": "0680951ebd6d7a5d802b5500b127b4a4661a592b", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/cons/66055.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fcons%2F66055.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fcons%2F66055.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fcons%2F66055.cc?ref=ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0", "patch": "@@ -0,0 +1,30 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// Jonathan Wakely  <jwakely@redhat.com>\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+#include <unordered_set>\n+\n+using test_type = std::unordered_multiset<int>;\n+using hasher_type = test_type::hasher;\n+using alloc_type = test_type::allocator_type;\n+\n+test_type h1(10, alloc_type());\n+test_type h2(10, hasher_type(), alloc_type());"}, {"sha": "2ead0b1e5d1ced807541ec56d92ea018345e4897", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/cons/66055.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fcons%2F66055.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fcons%2F66055.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fcons%2F66055.cc?ref=ddbd742bf84e7ed28d9d37d2c7b4cc9f3d7d05c0", "patch": "@@ -0,0 +1,30 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// Jonathan Wakely  <jwakely@redhat.com>\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+#include <unordered_set>\n+\n+using test_type = std::unordered_set<int>;\n+using hasher_type = test_type::hasher;\n+using alloc_type = test_type::allocator_type;\n+\n+test_type h1(10, alloc_type());\n+test_type h2(10, hasher_type(), alloc_type());"}]}