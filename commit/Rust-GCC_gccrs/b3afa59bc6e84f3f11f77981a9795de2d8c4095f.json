{"sha": "b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNhZmE1OWJjNmU4NGYzZjExZjc3OTgxYTk3OTVkZTJkOGM0MDk1Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T11:08:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T11:08:56Z"}, "message": "[multiple changes]\n\n2009-11-30  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-taprop-posix.adb: Fix casing.\n\t* s-osinte-tru64.adb: Complete previous check-in.\n\n2009-11-30  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Document pragma Compiler_Unit\n\t* s-bitops.adb, s-restri.adb, g-htable.adb, s-restri.ads,\n\ta-comlin.ads, a-strhas.ads, s-strhas.adb, s-parame.adb,\n\ts-parame.ads, a-clrefi.adb, a-clrefi.ads, a-ioexce.ads: Supply missing\n\tCompiler_Unit pragmas.\n\t* freeze.adb (Freeze_Entity): Improve message for 8-bit boolean passed\n\tto C.\n\nFrom-SVN: r154784", "tree": {"sha": "43de46f1d86249df6141c9e602fac7c2e2a3847e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43de46f1d86249df6141c9e602fac7c2e2a3847e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/comments", "author": null, "committer": null, "parents": [{"sha": "c8c4161707cfe88595cd28a4eb652f4f4bb56abe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8c4161707cfe88595cd28a4eb652f4f4bb56abe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8c4161707cfe88595cd28a4eb652f4f4bb56abe"}], "stats": {"total": 97, "additions": 85, "deletions": 12}, "files": [{"sha": "33f3219507c24a39e4dea65b04c3d3d053b35049", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "patch": "@@ -1,3 +1,18 @@\n+2009-11-30  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-taprop-posix.adb: Fix casing.\n+\t* s-osinte-tru64.adb: Complete previous check-in.\n+\n+2009-11-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Document pragma Compiler_Unit\n+\t* s-bitops.adb, s-restri.adb, g-htable.adb, s-restri.ads,\n+\ta-comlin.ads, a-strhas.ads, s-strhas.adb, s-parame.adb,\n+\ts-parame.ads, a-clrefi.adb, a-clrefi.ads, a-ioexce.ads: Supply missing\n+\tCompiler_Unit pragmas.\n+\t* freeze.adb (Freeze_Entity): Improve message for 8-bit boolean passed\n+\tto C.\n+\n 2009-11-30  Robert Dewar  <dewar@adacore.com>\n \n \t* makeutl.adb, makeutl.ads, prj-proc.adb, prj.adb, prj.ads: Minor"}, {"sha": "938ea18fb5ed47d67f7215c4ff2a6f759e2ed635", "filename": "gcc/ada/a-clrefi.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fa-clrefi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fa-clrefi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-clrefi.adb?ref=b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2007-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,6 +29,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+pragma Compiler_Unit;\n+\n with Ada.Unchecked_Deallocation;\n \n with System.OS_Lib; use System.OS_Lib;"}, {"sha": "fdefafcccc9f42019a3a5876127b307ad3b7a784", "filename": "gcc/ada/a-clrefi.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fa-clrefi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fa-clrefi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-clrefi.ads?ref=b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "patch": "@@ -36,6 +36,8 @@\n --  Using a response file allow passing a set of arguments to an executable\n --  longer than the maximum allowed by the system on the command line.\n \n+pragma Compiler_Unit;\n+\n with System.Strings;\n \n package Ada.Command_Line.Response_File is"}, {"sha": "8d66e1542b97fd7e614eb831d5b3e89d4bedf9d4", "filename": "gcc/ada/a-comlin.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fa-comlin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fa-comlin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-comlin.ads?ref=b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "patch": "@@ -33,6 +33,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+pragma Compiler_Unit;\n+\n package Ada.Command_Line is\n    pragma Preelaborate;\n "}, {"sha": "44865ab6649570b02758199e14b1f30db1c07ef6", "filename": "gcc/ada/a-ioexce.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fa-ioexce.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fa-ioexce.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ioexce.ads?ref=b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "patch": "@@ -13,6 +13,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+pragma Compiler_Unit;\n+\n package Ada.IO_Exceptions is\n    pragma Pure;\n "}, {"sha": "c2574d1e9967b0fffc727baaf3ad789901dc18a4", "filename": "gcc/ada/a-strhas.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fa-strhas.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fa-strhas.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strhas.ads?ref=b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "patch": "@@ -13,6 +13,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+pragma Compiler_Unit;\n+\n with Ada.Containers;\n \n function Ada.Strings.Hash (Key : String) return Containers.Hash_Type;"}, {"sha": "9301071b301c0569c80c4b9ff55f13df5889d2ca", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "patch": "@@ -2535,6 +2535,8 @@ package body Freeze is\n                        and then not Has_Warnings_Off (F_Type)\n                        and then not Has_Warnings_Off (Formal)\n                      then\n+                        --  Qualify mention of formals with subprogram name\n+\n                         Error_Msg_Qual_Level := 1;\n \n                         --  Check suspicious use of fat C pointer\n@@ -2543,8 +2545,8 @@ package body Freeze is\n                           and then Esize (F_Type) > Ttypes.System_Address_Size\n                         then\n                            Error_Msg_N\n-                             (\"?type of & does not correspond \"\n-                              & \"to C pointer!\", Formal);\n+                             (\"?type of & does not correspond to C pointer!\",\n+                              Formal);\n \n                         --  Check suspicious return of boolean\n \n@@ -2554,8 +2556,10 @@ package body Freeze is\n                           and then not Has_Size_Clause (F_Type)\n                         then\n                            Error_Msg_N\n-                             (\"?& is an 8-bit Ada Boolean, \"\n-                              & \"use char in C!\", Formal);\n+                             (\"& is an 8-bit Ada Boolean?\", Formal);\n+                           Error_Msg_N\n+                             (\"\\use appropriate corresponding type in C \"\n+                              & \"(e.g. char)?\", Formal);\n \n                         --  Check suspicious tagged type\n \n@@ -2584,6 +2588,8 @@ package body Freeze is\n                               Formal, F_Type);\n                         end if;\n \n+                        --  Turn off name qualification after message output\n+\n                         Error_Msg_Qual_Level := 0;\n                      end if;\n \n@@ -2680,9 +2686,17 @@ package body Freeze is\n                           and then not Has_Warnings_Off (R_Type)\n                           and then not Has_Size_Clause (R_Type)\n                         then\n-                           Error_Msg_N\n-                             (\"?return type of & is an 8-bit \"\n-                              & \"Ada Boolean, use char in C!\", E);\n+                           declare\n+                              N : constant Node_Id :=\n+                                    Result_Definition (Declaration_Node (E));\n+                           begin\n+                              Error_Msg_NE\n+                                (\"return type of & is an 8-bit Ada Boolean?\",\n+                                 N, E);\n+                              Error_Msg_NE\n+                                (\"\\use appropriate corresponding type in C \"\n+                                 & \"(e.g. char)?\", N, E);\n+                           end;\n \n                         --  Check suspicious return tagged type\n "}, {"sha": "aa6c6b7bcae1059f76db95d9a2a461cd13f5f781", "filename": "gcc/ada/g-htable.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fg-htable.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fg-htable.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-htable.adb?ref=b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005, AdaCore                     --\n+--                     Copyright (C) 1995-2009, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,7 +34,9 @@\n --  This is a dummy body, required because if we remove the body we have\n --  bootstrap path problems (this unit used to have a body, and if we do not\n --  supply a dummy body, the old incorrect body is picked up during the\n---  bootstrap process.\n+--  bootstrap process).\n+\n+pragma Compiler_Unit;\n \n package body GNAT.HTable is\n end GNAT.HTable;"}, {"sha": "0a197c011f4307ee8067bd879782f0defa15bfe4", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "patch": "@@ -112,6 +112,7 @@ Implementation Defined Pragmas\n * Pragma Common_Object::\n * Pragma Compile_Time_Error::\n * Pragma Compile_Time_Warning::\n+* Pragma Compiler_Unit::\n * Pragma Complete_Representation::\n * Pragma Complex_Representation::\n * Pragma Component_Alignment::\n@@ -722,6 +723,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Common_Object::\n * Pragma Compile_Time_Error::\n * Pragma Compile_Time_Warning::\n+* Pragma Compiler_Unit::\n * Pragma Complete_Representation::\n * Pragma Complex_Representation::\n * Pragma Component_Alignment::\n@@ -1333,6 +1335,24 @@ of formal parameters are tested, and warnings given appropriately. Another use\n with a first parameter of True is to warn a client about use of a package,\n for example that it is not fully implemented.\n \n+@node Pragma Compiler_Unit\n+@unnumberedsec Pragma Compiler_Unit\n+@findex Compiler_Unit\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma Compiler_Unit;\n+@end smallexample\n+\n+@noindent\n+This pragma is intended only for internal use in the GNAT run-time library.\n+It indicates that the unit is used as part of the compiler build. The effect\n+is to disallow constructs (raise with message, conditional expressions etc)\n+that would cause trouble when bootstrapping using an older version of GNAT.\n+For the exact list of restrictions, see the compiler sources and references\n+to Is_Compiler_Unit.\n+\n @node Pragma Complete_Representation\n @unnumberedsec Pragma Complete_Representation\n @findex Complete_Representation"}, {"sha": "c49b829763db405c8802dfa4b961e8cf40aa50a5", "filename": "gcc/ada/s-bitops.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fs-bitops.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fs-bitops.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-bitops.adb?ref=b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "patch": "@@ -29,6 +29,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+pragma Compiler_Unit;\n+\n with System;                 use System;\n with System.Unsigned_Types;  use System.Unsigned_Types;\n "}, {"sha": "ad391bcb473f00fe1d0723033203639987725aa1", "filename": "gcc/ada/s-osinte-tru64.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fs-osinte-tru64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fs-osinte-tru64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-tru64.adb?ref=b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "patch": "@@ -102,7 +102,7 @@ package body System.OS_Interface is\n          Res :=\n            mprotect\n              (Teb.all.stack_yellow, Get_Page_Size,\n-              prot => (if Res then PROT_ON else PROT_OFF));\n+              prot => (if Hide then PROT_ON else PROT_OFF));\n       end if;\n    end Hide_Unhide_Yellow_Zone;\n "}, {"sha": "ff61b7ee57274d88f8bf90bf58c3b59f5fb97476", "filename": "gcc/ada/s-parame.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fs-parame.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fs-parame.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame.adb?ref=b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "patch": "@@ -31,6 +31,8 @@\n \n --  This is the default (used on all native platforms) version of this package\n \n+pragma Compiler_Unit;\n+\n package body System.Parameters is\n \n    -------------------------"}, {"sha": "2110034ec6b48f799ac2eb99d34db454965d0a96", "filename": "gcc/ada/s-parame.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fs-parame.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fs-parame.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame.ads?ref=b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "patch": "@@ -46,6 +46,8 @@\n --  Note: do not introduce any pragma Inline statements into this unit, since\n --  otherwise the relinking and rebinding capability would be deactivated.\n \n+pragma Compiler_Unit;\n+\n package System.Parameters is\n    pragma Pure;\n "}, {"sha": "7ce6da9cc46470d943823d5e8e4b7cf5d6abc08e", "filename": "gcc/ada/s-restri.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fs-restri.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fs-restri.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-restri.adb?ref=b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "patch": "@@ -29,6 +29,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+pragma Compiler_Unit;\n+\n package body System.Restrictions is\n    use Rident;\n "}, {"sha": "cd447c1b0b460ea81fb9fbd971cfc034f24919aa", "filename": "gcc/ada/s-restri.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fs-restri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fs-restri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-restri.ads?ref=b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "patch": "@@ -38,6 +38,8 @@\n --  with names discarded, so that we do not have image tables for the\n --  large restriction enumeration types at run time.\n \n+pragma Compiler_Unit;\n+\n with System.Rident;\n \n package System.Restrictions is"}, {"sha": "0e86cb66b312060712c6bc0f35f05b2b19b13fc3", "filename": "gcc/ada/s-strhas.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fs-strhas.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fs-strhas.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-strhas.adb?ref=b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "patch": "@@ -29,6 +29,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+pragma Compiler_Unit;\n+\n package body System.String_Hash is\n \n    --  Compute a hash value for a key. The approach here is follows the"}, {"sha": "d05bb1cd2d4f8dedc7ffa50cea450d9d47b9f576", "filename": "gcc/ada/s-taprop-posix.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fs-taprop-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3afa59bc6e84f3f11f77981a9795de2d8c4095f/gcc%2Fada%2Fs-taprop-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-posix.adb?ref=b3afa59bc6e84f3f11f77981a9795de2d8c4095f", "patch": "@@ -246,7 +246,7 @@ package body System.Task_Primitives.Operations is\n \n          Res :=\n            mprotect (Guard_Page_Address, Get_Page_Size,\n-                     prot => (if ON then PROT_ON else PROT_OFF));\n+                     prot => (if On then PROT_ON else PROT_OFF));\n          pragma Assert (Res = 0);\n       end if;\n    end Stack_Guard;"}]}