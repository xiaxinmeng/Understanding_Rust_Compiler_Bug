{"sha": "d693e39d020f8707434fe2e9f07849a9177fc5c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY5M2UzOWQwMjBmODcwNzQzNGZlMmU5ZjA3ODQ5YTkxNzdmYzVjNQ==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2008-05-26T14:43:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-26T14:43:50Z"}, "message": "2008-05-26  Thomas Quinot  <quinot@adacore.com>\n\n\t* rtsfind.ads, rtsfind.adb:\n\t(RE_Get_RACW): New runtime library entity provided by PolyORB s-parint.\n\t(Check_RPC): Support per-PCS-kind API versioning.\n\t\n\texp_dist.ads, exp_dist.adb:\n\t(Build_Stub_Tag, Get_Stub_Elements): New utility subprograms.\n\t(PolyORB_Support.Add_RACW_From_Any): Offload common code to new runtime\n\t library function Get_RACW.\n\t(PolyORB_Support.Add_RACW_To_Any): Offload common code to new runtime\n\tlibrary function Get_Reference.\n\t(PolyORB_Support.Add_RACW_Read_Attribute): Use Get_RACW instead of going\n\tthrough an intermediate Any.\n\t(PolyORB_Support.Add_RACW_Write_Attribute): Use Get_Reference instead of\n\tgoing through an intermediate Any.\n\t\n\t* sem_dist.adb: Minor reformatting.\n\nFrom-SVN: r135932", "tree": {"sha": "1252cc9ff2c492f632b13bafa339638c0658108b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1252cc9ff2c492f632b13bafa339638c0658108b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d693e39d020f8707434fe2e9f07849a9177fc5c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d693e39d020f8707434fe2e9f07849a9177fc5c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d693e39d020f8707434fe2e9f07849a9177fc5c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d693e39d020f8707434fe2e9f07849a9177fc5c5/comments", "author": null, "committer": null, "parents": [{"sha": "76fe54f07ae1d8e9a8a3bbc54dd9aaeee4105d18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76fe54f07ae1d8e9a8a3bbc54dd9aaeee4105d18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76fe54f07ae1d8e9a8a3bbc54dd9aaeee4105d18"}], "stats": {"total": 1982, "additions": 853, "deletions": 1129}, "files": [{"sha": "dfd9a2c568b302fbbcbf673fd94b8cc783e15c4b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d693e39d020f8707434fe2e9f07849a9177fc5c5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d693e39d020f8707434fe2e9f07849a9177fc5c5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d693e39d020f8707434fe2e9f07849a9177fc5c5", "patch": "@@ -1,3 +1,22 @@\n+2008-05-26  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* rtsfind.ads, rtsfind.adb:\n+\t(RE_Get_RACW): New runtime library entity provided by PolyORB s-parint.\n+\t(Check_RPC): Support per-PCS-kind API versioning.\n+\t\n+\texp_dist.ads, exp_dist.adb:\n+\t(Build_Stub_Tag, Get_Stub_Elements): New utility subprograms.\n+\t(PolyORB_Support.Add_RACW_From_Any): Offload common code to new runtime\n+\t library function Get_RACW.\n+\t(PolyORB_Support.Add_RACW_To_Any): Offload common code to new runtime\n+\tlibrary function Get_Reference.\n+\t(PolyORB_Support.Add_RACW_Read_Attribute): Use Get_RACW instead of going\n+\tthrough an intermediate Any.\n+\t(PolyORB_Support.Add_RACW_Write_Attribute): Use Get_Reference instead of\n+\tgoing through an intermediate Any.\n+\t\n+\t* sem_dist.adb: Minor reformatting.\n+\n 2008-05-26  Javier Miranda  <miranda@adacore.com>\n \n \t* einfo.ads (Abstract_Interface_Alias): Renamed as Interface_Alias."}, {"sha": "3a37cb30a2f0cdd8b1343b614253f6f2c1d1d313", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 790, "deletions": 1078, "changes": 1868, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d693e39d020f8707434fe2e9f07849a9177fc5c5/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d693e39d020f8707434fe2e9f07849a9177fc5c5/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=d693e39d020f8707434fe2e9f07849a9177fc5c5"}, {"sha": "a1418d3f6bbc80cbf6558d2daddbdaa39ebd7b0d", "filename": "gcc/ada/exp_dist.ads", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d693e39d020f8707434fe2e9f07849a9177fc5c5/gcc%2Fada%2Fexp_dist.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d693e39d020f8707434fe2e9f07849a9177fc5c5/gcc%2Fada%2Fexp_dist.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.ads?ref=d693e39d020f8707434fe2e9f07849a9177fc5c5", "patch": "@@ -26,12 +26,16 @@\n --  This package contains utility routines used for the generation of the\n --  stubs relevant to the distribution annex.\n \n-with Namet; use Namet;\n-with Types; use Types;\n+with Namet;  use Namet;\n+with Snames; use Snames;\n+with Types;  use Types;\n \n package Exp_Dist is\n \n-   PCS_Version_Number : constant := 1;\n+   PCS_Version_Number : constant array (PCS_Names) of Int :=\n+                          (Name_No_DSA      => 1,\n+                           Name_GARLIC_DSA  => 1,\n+                           Name_PolyORB_DSA => 2);\n    --  PCS interface version. This is used to check for consistency between the\n    --  compiler used to generate distribution stubs and the PCS implementation.\n    --  It must be incremented whenever a change is made to the generated code"}, {"sha": "a0efccc3f06b7101d448b49edfdf5f70921abc5e", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d693e39d020f8707434fe2e9f07849a9177fc5c5/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d693e39d020f8707434fe2e9f07849a9177fc5c5/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=d693e39d020f8707434fe2e9f07849a9177fc5c5", "patch": "@@ -959,7 +959,9 @@ package body Rtsfind is\n             if Get_PCS_Name = Name_No_DSA then\n                Check_RPC_Failure (\"distribution feature not supported\");\n \n-            elsif Get_PCS_Version /= Exp_Dist.PCS_Version_Number then\n+            elsif Get_PCS_Version /=\n+                    Exp_Dist.PCS_Version_Number (Get_PCS_Name)\n+            then\n                Check_RPC_Failure (\"PCS version mismatch\");\n \n             end if;"}, {"sha": "6fbfd9de895a7c21a44b6c40302b9ce0456ee1fd", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d693e39d020f8707434fe2e9f07849a9177fc5c5/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d693e39d020f8707434fe2e9f07849a9177fc5c5/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=d693e39d020f8707434fe2e9f07849a9177fc5c5", "patch": "@@ -1078,6 +1078,7 @@ package Rtsfind is\n \n      RE_DSA_Implementation,              -- System.Partition_Interface\n      RE_PCS_Version,                     -- System.Partition_Interface\n+     RE_Get_RACW,                        -- System.Partition_Interface\n      RE_Get_RCI_Package_Receiver,        -- System.Partition_Interface\n      RE_Get_Unique_Remote_Pointer,       -- System.Partition_Interface\n      RE_RACW_Stub_Type_Access,           -- System.Partition_Interface\n@@ -2209,6 +2210,7 @@ package Rtsfind is\n \n      RE_DSA_Implementation               => System_Partition_Interface,\n      RE_PCS_Version                      => System_Partition_Interface,\n+     RE_Get_RACW                         => System_Partition_Interface,\n      RE_Get_RCI_Package_Receiver         => System_Partition_Interface,\n      RE_Get_Unique_Remote_Pointer        => System_Partition_Interface,\n      RE_RACW_Stub_Type_Access            => System_Partition_Interface,"}, {"sha": "211bdddb49e34d18c0648f2e0566c004f6fc3ecd", "filename": "gcc/ada/sem_dist.adb", "status": "modified", "additions": 32, "deletions": 47, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d693e39d020f8707434fe2e9f07849a9177fc5c5/gcc%2Fada%2Fsem_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d693e39d020f8707434fe2e9f07849a9177fc5c5/gcc%2Fada%2Fsem_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.adb?ref=d693e39d020f8707434fe2e9f07849a9177fc5c5", "patch": "@@ -64,7 +64,9 @@ package body Sem_Dist is\n    procedure Add_Stub_Constructs (N : Node_Id) is\n       U    : constant Node_Id := Unit (N);\n       Spec : Entity_Id        := Empty;\n-      Exp  : Node_Id          := U;         --  Unit that will be expanded\n+\n+      Exp : Node_Id := U;\n+      --  Unit that will be expanded\n \n    begin\n       pragma Assert (Distribution_Stub_Mode /= No_Stubs);\n@@ -84,7 +86,6 @@ package body Sem_Dist is\n         or else Is_Remote_Call_Interface (Spec));\n \n       if Distribution_Stub_Mode = Generate_Caller_Stub_Body then\n-\n          if Is_Shared_Passive (Spec) then\n             null;\n          elsif Nkind (U) = N_Package_Body then\n@@ -95,7 +96,6 @@ package body Sem_Dist is\n          end if;\n \n       else\n-\n          if Is_Shared_Passive (Spec) then\n             Build_Passive_Partition_Stub (Exp);\n          else\n@@ -186,7 +186,6 @@ package body Sem_Dist is\n       if Parent_Name /= No_String then\n          Start_String (Parent_Name);\n          Store_String_Char (Get_Char_Code ('.'));\n-\n       else\n          Start_String;\n       end if;\n@@ -242,15 +241,13 @@ package body Sem_Dist is\n       Par : Node_Id;\n \n    begin\n-      if (Nkind (N) = N_Function_Call\n-              or else Nkind (N) = N_Procedure_Call_Statement)\n+      if Nkind_In (N, N_Function_Call, N_Procedure_Call_Statement)\n         and then Nkind (Name (N)) in N_Has_Entity\n         and then Is_Remote_Call_Interface (Entity (Name (N)))\n         and then Has_All_Calls_Remote (Scope (Entity (Name (N))))\n         and then Comes_From_Source (N)\n       then\n          Par := Parent (Entity (Name (N)));\n-\n          while Present (Par)\n            and then (Nkind (Par) /= N_Package_Specification\n                        or else Is_Wrapper_Package (Defining_Entity (Par)))\n@@ -294,9 +291,10 @@ package body Sem_Dist is\n    ------------------------------------\n \n    function Package_Specification_Of_Scope (E : Entity_Id) return Node_Id is\n-      N : Node_Id := Parent (E);\n+      N : Node_Id;\n \n    begin\n+      N := Parent (E);\n       while Nkind (N) /= N_Package_Specification loop\n          N := Parent (N);\n       end loop;\n@@ -317,11 +315,10 @@ package body Sem_Dist is\n       Typ            : constant Entity_Id := Etype (N);\n \n    begin\n-      Ety := Entity (Prefix (N));\n-\n       --  In case prefix is not a library unit entity, get the entity\n       --  of library unit.\n \n+      Ety := Entity (Prefix (N));\n       while (Present (Scope (Ety))\n         and then Scope (Ety) /= Standard_Standard)\n         and not Is_Child_Unit (Ety)\n@@ -363,7 +360,6 @@ package body Sem_Dist is\n \n       else\n          Get_Pt_Id_Call := Make_Function_Call (Loc, Get_Pt_Id);\n-\n       end if;\n \n       --  Replace the attribute node by a conversion of the function call\n@@ -426,10 +422,11 @@ package body Sem_Dist is\n \n       Tick_Access_Conv_Call :=\n         Make_Function_Call (Loc,\n-          Name => New_Occurrence_Of (Attribute_Subp, Loc),\n+          Name                   => New_Occurrence_Of (Attribute_Subp, Loc),\n           Parameter_Associations =>\n             New_List (\n-              Make_String_Literal (Loc, Full_Qualified_Name (RS_Pkg_E)),\n+              Make_String_Literal (Loc,\n+                Strval => Full_Qualified_Name (RS_Pkg_E)),\n               Build_Subprogram_Id (Loc, Remote_Subp),\n               New_Occurrence_Of (Async_E, Loc),\n               New_Occurrence_Of (All_Calls_Remote_E, Loc)));\n@@ -527,8 +524,7 @@ package body Sem_Dist is\n \n       Append_To (Priv_Decls,\n         Make_Full_Type_Declaration (Loc,\n-          Defining_Identifier =>\n-            Full_Obj_Type,\n+          Defining_Identifier => Full_Obj_Type,\n           Type_Definition     =>\n             Make_Record_Definition (Loc,\n               Abstract_Present => True,\n@@ -558,39 +554,33 @@ package body Sem_Dist is\n               All_Present => True,\n               Subtype_Indication =>\n                 Make_Attribute_Reference (Loc,\n-                  Prefix =>\n-                    New_Occurrence_Of (Obj_Type, Loc),\n-                  Attribute_Name =>\n-                    Name_Class))));\n+                  Prefix         => New_Occurrence_Of (Obj_Type, Loc),\n+                  Attribute_Name => Name_Class))));\n+\n       Set_Is_Remote_Call_Interface (RACW_Type, Is_RCI);\n       Set_Is_Remote_Types (RACW_Type, Is_RT);\n \n       Subpkg_Decl :=\n         Make_Package_Declaration (Loc,\n           Make_Package_Specification (Loc,\n-            Defining_Unit_Name =>\n-              Subpkg,\n-            Visible_Declarations =>\n-              Vis_Decls,\n-            Private_Declarations =>\n-              Priv_Decls,\n-            End_Label =>\n-              New_Occurrence_Of (Subpkg, Loc)));\n+            Defining_Unit_Name   => Subpkg,\n+            Visible_Declarations => Vis_Decls,\n+            Private_Declarations => Priv_Decls,\n+            End_Label            => New_Occurrence_Of (Subpkg, Loc)));\n+\n       Set_Is_Remote_Call_Interface (Subpkg, Is_RCI);\n       Set_Is_Remote_Types (Subpkg, Is_RT);\n       Insert_After_And_Analyze (N, Subpkg_Decl);\n \n       --  Generate package body to receive RACW calling stubs\n-      --  Note: Analyze_Declarations has an absolute requirement that\n-      --  the declaration list be non-empty, so we provide a dummy null\n-      --  statement here.\n+\n+      --  Note: Analyze_Declarations has an absolute requirement that the\n+      --  declaration list be non-empty, so provide dummy null statement here.\n \n       Subpkg_Body :=\n         Make_Package_Body (Loc,\n-          Defining_Unit_Name =>\n-            Make_Defining_Identifier (Loc, Chars (Subpkg)),\n-          Declarations => New_List (\n-            Make_Null_Statement (Loc)));\n+          Defining_Unit_Name => Make_Defining_Identifier (Loc, Chars (Subpkg)),\n+          Declarations       => New_List (Make_Null_Statement (Loc)));\n       Insert_After_And_Analyze (Subpkg_Decl, Subpkg_Body);\n \n       --  Many parts of the analyzer and expander expect\n@@ -612,10 +602,10 @@ package body Sem_Dist is\n                       Make_Defining_Identifier (Loc, Name_Ras),\n                     Component_Definition =>\n                       Make_Component_Definition (Loc,\n-                        Aliased_Present     =>\n-                          False,\n+                        Aliased_Present     => False,\n                         Subtype_Indication  =>\n                           New_Occurrence_Of (RACW_Type, Loc)))))));\n+\n       Set_Equivalent_Type (User_Type, Fat_Type);\n       Set_Corresponding_Remote_Type (Fat_Type, User_Type);\n       Insert_After_And_Analyze (Subpkg_Body, Fat_Type_Decl);\n@@ -656,7 +646,6 @@ package body Sem_Dist is\n          end if;\n \n       elsif Nkind (Deref_Subp_Call) = N_Indexed_Component then\n-\n          Params := Expressions (Deref_Subp_Call);\n \n          if Present (Params) then\n@@ -681,13 +670,12 @@ package body Sem_Dist is\n       if Ekind (Deref_Proc) = E_Function then\n          Call_Node :=\n            Make_Function_Call (Loc,\n-              Name => New_Occurrence_Of (Deref_Proc, Loc),\n+              Name                   => New_Occurrence_Of (Deref_Proc, Loc),\n               Parameter_Associations => Params);\n-\n       else\n          Call_Node :=\n            Make_Procedure_Call_Statement (Loc,\n-              Name => New_Occurrence_Of (Deref_Proc, Loc),\n+              Name                   => New_Occurrence_Of (Deref_Proc, Loc),\n               Parameter_Associations => Params);\n       end if;\n \n@@ -711,8 +699,8 @@ package body Sem_Dist is\n         and then (Is_Remote_Call_Interface (ET)\n                    or else Is_Remote_Types (ET))\n         and then Present (Corresponding_Remote_Type (ET))\n-        and then (Nkind (Parent (Parent (P))) = N_Procedure_Call_Statement\n-                   or else Nkind (Parent (Parent (P))) = N_Indexed_Component)\n+        and then Nkind_In (Parent (Parent (P)), N_Procedure_Call_Statement,\n+                                                N_Indexed_Component)\n         and then Expander_Active\n       then\n          RAS_E_Dereference (P);\n@@ -788,17 +776,14 @@ package body Sem_Dist is\n          --  We do not have to handle this case\n \n          return False;\n-\n       end if;\n \n       Rewrite (N,\n         Make_Aggregate (Loc,\n           Component_Associations => New_List (\n             Make_Component_Association (Loc,\n-              Choices => New_List (\n-                Make_Identifier (Loc, Name_Ras)),\n-              Expression =>\n-                Make_Null (Loc)))));\n+              Choices => New_List (Make_Identifier (Loc, Name_Ras)),\n+              Expression => Make_Null (Loc)))));\n       Analyze_And_Resolve (N, Target_Type);\n       return True;\n    end Remote_AST_Null_Value;"}]}