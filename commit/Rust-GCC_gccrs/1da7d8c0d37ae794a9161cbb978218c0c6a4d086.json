{"sha": "1da7d8c0d37ae794a9161cbb978218c0c6a4d086", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRhN2Q4YzBkMzdhZTc5NGE5MTYxY2JiOTc4MjE4YzBjNmE0ZDA4Ng==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-02-11T21:19:16Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-02-11T21:19:16Z"}, "message": "re PR tree-optimization/47420 (ICE in calc_dfs_tree during RESX lowering)\n\n\tPR tree-optimization/47420\n\t* ipa-split.c (visit_bb): Punt on any kind of GIMPLE_RESX.\n\nFrom-SVN: r170061", "tree": {"sha": "0be6d082a19931a25b706792a777759fc9d4fd6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0be6d082a19931a25b706792a777759fc9d4fd6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1da7d8c0d37ae794a9161cbb978218c0c6a4d086", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1da7d8c0d37ae794a9161cbb978218c0c6a4d086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1da7d8c0d37ae794a9161cbb978218c0c6a4d086", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1da7d8c0d37ae794a9161cbb978218c0c6a4d086/comments", "author": null, "committer": null, "parents": [{"sha": "a26e8df4dcf99181598e35b599663c6f484dec72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a26e8df4dcf99181598e35b599663c6f484dec72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a26e8df4dcf99181598e35b599663c6f484dec72"}], "stats": {"total": 96, "additions": 92, "deletions": 4}, "files": [{"sha": "25270c9a76266aac860507847f15450ded5e09d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1da7d8c0d37ae794a9161cbb978218c0c6a4d086/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1da7d8c0d37ae794a9161cbb978218c0c6a4d086/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1da7d8c0d37ae794a9161cbb978218c0c6a4d086", "patch": "@@ -1,4 +1,9 @@\n-2011-02-11  Pat Haugen <pthaugen@us.ibm.com>\n+2011-02-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR tree-optimization/47420\n+\t* ipa-split.c (visit_bb): Punt on any kind of GIMPLE_RESX.\n+\n+2011-02-11  Pat Haugen  <pthaugen@us.ibm.com>\n \n \tPR rtl-optimization/47614\n \t* rtl.h (check_for_inc_dec): Declare."}, {"sha": "3b26f61b1fb32193fc82409489b9bc58b4ff3037", "filename": "gcc/ipa-split.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1da7d8c0d37ae794a9161cbb978218c0c6a4d086/gcc%2Fipa-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1da7d8c0d37ae794a9161cbb978218c0c6a4d086/gcc%2Fipa-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-split.c?ref=1da7d8c0d37ae794a9161cbb978218c0c6a4d086", "patch": "@@ -643,11 +643,10 @@ visit_bb (basic_block bb, basic_block return_bb,\n \t into different partitions.  This would require tracking of\n \t EH regions and checking in consider_split_point if they \n \t are not used elsewhere.  */\n-      if (gimple_code (stmt) == GIMPLE_RESX\n-\t  && stmt_can_throw_external (stmt))\n+      if (gimple_code (stmt) == GIMPLE_RESX)\n \t{\n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n-\t    fprintf (dump_file, \"Cannot split: external resx.\\n\");\n+\t    fprintf (dump_file, \"Cannot split: resx.\\n\");\n \t  can_split = false;\n \t}\n       if (gimple_code (stmt) == GIMPLE_EH_DISPATCH)"}, {"sha": "06a388e01d02ff59380a5bfb45813e3b42b3b587", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1da7d8c0d37ae794a9161cbb978218c0c6a4d086/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1da7d8c0d37ae794a9161cbb978218c0c6a4d086/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1da7d8c0d37ae794a9161cbb978218c0c6a4d086", "patch": "@@ -1,3 +1,7 @@\n+2011-02-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* g++.dg/opt/inline17.C: New test.\n+\n 2011-02-11  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/47550"}, {"sha": "a42233d57b607cdbf0e07672260ed147ab2470a0", "filename": "gcc/testsuite/g++.dg/opt/inline17.C", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1da7d8c0d37ae794a9161cbb978218c0c6a4d086/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1da7d8c0d37ae794a9161cbb978218c0c6a4d086/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline17.C?ref=1da7d8c0d37ae794a9161cbb978218c0c6a4d086", "patch": "@@ -0,0 +1,80 @@\n+// PR tree-optimization/47420\n+// Testcase by Yu Simin <silver24k@gmail.com>\n+\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+class fooControlBase\n+{\n+public:\n+    fooControlBase() { }\n+\n+    virtual ~fooControlBase();\n+};\n+\n+class fooControl : public fooControlBase\n+{\n+public:\n+    fooControl() { }\n+};\n+\n+class sfTextEntryBase\n+{\n+public:\n+    sfTextEntryBase() {  }\n+    virtual ~sfTextEntryBase();\n+};\n+\n+class sfTextEntry : public sfTextEntryBase\n+{\n+public:\n+    sfTextEntry()\n+    {\n+    }\n+};\n+\n+class sfTextAreaBase\n+{\n+public:\n+    sfTextAreaBase() { }\n+    virtual ~sfTextAreaBase() { }\n+\n+protected:\n+};\n+\n+\n+class sfTextCtrlBase : public fooControl,\n+                                   public sfTextAreaBase,\n+                                   public sfTextEntry\n+{\n+public:\n+\n+\n+\n+    sfTextCtrlBase() { }\n+    virtual ~sfTextCtrlBase() { }\n+};\n+\n+class sfTextCtrl : public sfTextCtrlBase\n+{\n+public:\n+    sfTextCtrl(void* parent)\n+    {\n+        Create(parent);\n+    }\n+    virtual ~sfTextCtrl();\n+\n+    bool Create(void *parent);\n+\n+\n+};\n+\n+sfTextCtrl* CreateTextCtrl()\n+{\n+    return new sfTextCtrl(0);\n+}\n+\n+void foo ()\n+{\n+    new sfTextCtrl(0);\n+}"}]}