{"sha": "0258dc3a2c897ba06499af1493aac7e736adbbb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI1OGRjM2EyYzg5N2JhMDY0OTlhZjE0OTNhYWM3ZTczNmFkYmJiOQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2007-05-28T17:02:30Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2007-05-28T17:02:30Z"}, "message": "re PR libstdc++/31717 (libstdc++-v3 - Make fails with: ./c++locale.h:69: error: '__locale_t' does not name a type)\n\n2007-05-28  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/31717 \n\t* acinclude.m4 (GLIBCXX_ENABLE_CLOCALE): Re-organize. Sanity check\n\tgnu locale model requests to make sure it will work for the requested\n\ttarget. Add checks for strxfrm_l, strerror_l when in gnu locale,\n\tand strerror_r everywhere.\n\t* aclocal.m4: Regenerated.\n\t* configure: Regenerated.\n\t* config.h.in: Regenerated.\n\nFrom-SVN: r125134", "tree": {"sha": "a003e0d957688e8e441726499f76d1627c7cd6b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a003e0d957688e8e441726499f76d1627c7cd6b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0258dc3a2c897ba06499af1493aac7e736adbbb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0258dc3a2c897ba06499af1493aac7e736adbbb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0258dc3a2c897ba06499af1493aac7e736adbbb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0258dc3a2c897ba06499af1493aac7e736adbbb9/comments", "author": null, "committer": null, "parents": [{"sha": "3078848ea393c2269498b12f5bb809e85ec1af44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3078848ea393c2269498b12f5bb809e85ec1af44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3078848ea393c2269498b12f5bb809e85ec1af44"}], "stats": {"total": 475, "additions": 358, "deletions": 117}, "files": [{"sha": "e9135a921561fbcd2382ab544b49e8912d97efe4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0258dc3a2c897ba06499af1493aac7e736adbbb9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0258dc3a2c897ba06499af1493aac7e736adbbb9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0258dc3a2c897ba06499af1493aac7e736adbbb9", "patch": "@@ -1,3 +1,14 @@\n+2007-05-28  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/31717 \n+\t* acinclude.m4 (GLIBCXX_ENABLE_CLOCALE): Re-organize. Sanity check\n+\tgnu locale model requests to make sure it will work for the requested\n+\ttarget. Add checks for strxfrm_l, strerror_l when in gnu locale,\n+\tand strerror_r everywhere.\n+\t* aclocal.m4: Regenerated.\n+\t* configure: Regenerated.\n+\t* config.h.in: Regenerated.\n+\t\n 2007-05-27  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/boost_shared_ptr.h"}, {"sha": "07d5239f9ab4d22781b3e9c9bd0d3a49b3c565ec", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 83, "deletions": 53, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0258dc3a2c897ba06499af1493aac7e736adbbb9/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0258dc3a2c897ba06499af1493aac7e736adbbb9/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=0258dc3a2c897ba06499af1493aac7e736adbbb9", "patch": "@@ -1297,64 +1297,31 @@ dnl\n dnl Default is generic.\n dnl\n AC_DEFUN([GLIBCXX_ENABLE_CLOCALE], [\n-  AC_MSG_CHECKING([for C locale to use])\n   GLIBCXX_ENABLE(clocale,auto,[@<:@=MODEL@:>@],\n     [use MODEL for target locale package],\n     [permit generic|gnu|ieee_1003.1-2001|yes|no|auto])\n+\n+  # Deal with gettext issues.  Default to not using it (=no) until we detect\n+  # support for it later.  Let the user turn it off via --e/d, but let that\n+  # default to on for easier handling.\n+  USE_NLS=no\n+  AC_ARG_ENABLE(nls,\n+    AC_HELP_STRING([--enable-nls],[use Native Language Support (default)]),\n+    [],\n+    [enable_nls=yes])\n   \n-  # If they didn't use this option switch, or if they specified --enable\n-  # with no specific model, we'll have to look for one.  If they\n-  # specified --disable (???), do likewise.\n+  # Either a known packaage, or \"auto\"\n   if test $enable_clocale = no || test $enable_clocale = yes; then\n      enable_clocale=auto\n   fi\n-\n-  # Either a known package, or \"auto\"\n   enable_clocale_flag=$enable_clocale\n \n-  # Probe for locale support if no specific model is specified.\n+  # Probe for locale model to use if none specified.\n   # Default to \"generic\".\n   if test $enable_clocale_flag = auto; then\n     case ${target_os} in\n       linux* | gnu* | kfreebsd*-gnu | knetbsd*-gnu)\n-        AC_EGREP_CPP([_GLIBCXX_ok], [\n-        #include <features.h>\n-        #if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 2)\n-          _GLIBCXX_ok\n-        #endif\n-        ], enable_clocale_flag=gnu, enable_clocale_flag=generic)\n-\n-        # Test for bugs early in glibc-2.2.x series\n-          if test $enable_clocale_flag = gnu; then\n-          AC_TRY_RUN([\n-          #define _GNU_SOURCE 1\n-          #include <locale.h>\n-          #include <string.h>\n-          #if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)\n-          extern __typeof(newlocale) __newlocale;\n-          extern __typeof(duplocale) __duplocale;\n-          extern __typeof(strcoll_l) __strcoll_l;\n-          #endif\n-          int main()\n-          {\n-              const char __one[] = \"\ufffduglein Augmen\";\n-              const char __two[] = \"\ufffduglein\";\n-              int i;\n-              int j;\n-              __locale_t        loc;\n-               __locale_t        loc_dup;\n-              loc = __newlocale(1 << LC_ALL, \"de_DE\", 0);\n-              loc_dup = __duplocale(loc);\n-              i = __strcoll_l(__one, __two, loc);\n-              j = __strcoll_l(__one, __two, loc_dup);\n-              return 0;\n-          }\n-          ],\n-          [enable_clocale_flag=gnu],[enable_clocale_flag=generic],\n-          [enable_clocale_flag=generic])\n-          fi\n-\n-        # ... at some point put __strxfrm_l tests in as well.\n+        enable_clocale_flag=gnu\t\n         ;;\n       darwin* | freebsd*)\n         enable_clocale_flag=darwin\n@@ -1365,16 +1332,79 @@ AC_DEFUN([GLIBCXX_ENABLE_CLOCALE], [\n     esac\n   fi\n \n-  # Deal with gettext issues.  Default to not using it (=no) until we detect\n-  # support for it later.  Let the user turn it off via --e/d, but let that\n-  # default to on for easier handling.\n-  USE_NLS=no\n-  AC_ARG_ENABLE(nls,\n-    AC_HELP_STRING([--enable-nls],[use Native Language Support (default)]),\n-    [],\n-    [enable_nls=yes])\n+  # Sanity check model, and test for special functionality.\n+  if test $enable_clocale_flag = gnu; then\n+    AC_EGREP_CPP([_GLIBCXX_ok], [\n+    #include <features.h>\n+    #if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 2)\n+      _GLIBCXX_ok\n+    #endif\n+    ], enable_clocale_flag=gnu, enable_clocale_flag=generic)\n+\n+    # Test for bugs early in glibc-2.2.x series\n+    AC_TRY_RUN([\n+    #define _GNU_SOURCE 1\n+    #include <locale.h>\n+    #include <string.h>\n+    #if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)\n+    extern __typeof(newlocale) __newlocale;\n+    extern __typeof(duplocale) __duplocale;\n+    extern __typeof(strcoll_l) __strcoll_l;\n+    #endif\n+    int main()\n+    {\n+        const char __one[] = \"\ufffduglein Augmen\";\n+        const char __two[] = \"\ufffduglein\";\n+        int i;\n+        int j;\n+        __locale_t        loc;\n+        __locale_t        loc_dup;\n+        loc = __newlocale(1 << LC_ALL, \"de_DE\", 0);\n+        loc_dup = __duplocale(loc);\n+        i = __strcoll_l(__one, __two, loc);\n+        j = __strcoll_l(__one, __two, loc_dup);\n+        return 0;\n+    }\n+    ],\n+    [enable_clocale_flag=gnu],[enable_clocale_flag=generic],\n+    [enable_clocale_flag=generic])\n+\n+    # Set it to scream when it hurts.\n+    ac_save_CFLAGS=\"$CFLAGS\"\t\n+    CFLAGS=\"-Wimplicit-function-declaration -Werror\"\n+\n+    # Use strxfrm_l if available.\n+    AC_TRY_COMPILE([#define _GNU_SOURCE 1\n+     \t\t    #include <string.h>\n+\t\t    #include <locale.h>],\n+\t            [char s[128]; __locale_t loc; strxfrm_l(s, \"C\", 5, loc);], \n+                    AC_DEFINE(HAVE_STRXFRM_L, 1, \n+                    [Define if strxfrm_l is available in <string.h>.]),)\n+    \n+    # Use strerror_l if available.\n+    AC_TRY_COMPILE([#define _GNU_SOURCE 1\n+\t\t    #include <string.h>\n+\t\t    #include <locale.h>],\n+\t            [__locale_t loc; strerror_l(5, loc);], \n+                    AC_DEFINE(HAVE_STRERROR_L, 1, \n+                    [Define if strerror_l is available in <string.h>.]),)\n+\n+    CFLAGS=\"$ac_save_CFLAGS\"\n+  fi\n+\n+  # Perhaps use strerror_r if available, and strerror_l isn't.\n+  ac_save_CFLAGS=\"$CFLAGS\"\t\n+  CFLAGS=\"-Wimplicit-function-declaration -Werror\"\n+  AC_TRY_COMPILE([#define _GNU_SOURCE 1\n+\t     \t  #include <string.h>\n+\t\t  #include <locale.h>],\n+\t          [char s[128]; strerror_r(5, s, 128);], \n+                  AC_DEFINE(HAVE_STRERROR_R, 1, \n+                  [Define if strerror_r is available in <string.h>.]),)\n+  CFLAGS=\"$ac_save_CFLAGS\"\n \n   # Set configure bits for specified locale package\n+  AC_MSG_CHECKING([for C locale to use])\n   case ${enable_clocale_flag} in\n     generic)\n       AC_MSG_RESULT(generic)"}, {"sha": "aa18ed5088ab172a65a117a804e42b98a899c4d6", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0258dc3a2c897ba06499af1493aac7e736adbbb9/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0258dc3a2c897ba06499af1493aac7e736adbbb9/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=0258dc3a2c897ba06499af1493aac7e736adbbb9", "patch": "@@ -1578,10 +1578,27 @@ linux*)\n   # before this can be enabled.\n   hardcode_into_libs=yes\n \n+  # find out which ABI we are using\n+  libsuff=\n+  case \"$host_cpu\" in\n+  x86_64*|s390x*|powerpc64*)\n+    echo '[#]line __oline__ \"configure\"' > conftest.$ac_ext\n+    if AC_TRY_EVAL(ac_compile); then\n+      case `/usr/bin/file conftest.$ac_objext` in\n+      *64-bit*)\n+        libsuff=64\n+        sys_lib_search_path_spec=\"/lib${libsuff} /usr/lib${libsuff} /usr/local/lib${libsuff}\"\n+        ;;\n+      esac\n+    fi\n+    rm -rf conftest*\n+    ;;\n+  esac\n+\n   # Append ld.so.conf contents to the search path\n   if test -f /etc/ld.so.conf; then\n-    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s\", \\[$]2)); skip = 1; } { if (!skip) print \\[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;/^$/d' | tr '\\n' ' '`\n-    sys_lib_dlsearch_path_spec=\"/lib /usr/lib $lt_ld_extra\"\n+    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s 2>/dev/null\", \\[$]2)); skip = 1; } { if (!skip) print \\[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;/^$/d' | tr '\\n' ' '`\n+    sys_lib_dlsearch_path_spec=\"/lib${libsuff} /usr/lib${libsuff} $lt_ld_extra\"\n   fi\n \n   # We used to test for /lib/ld.so.1 and disable shared libraries on\n@@ -4288,6 +4305,9 @@ CC=$lt_[]_LT_AC_TAGVAR(compiler, $1)\n # Is the compiler the GNU C compiler?\n with_gcc=$_LT_AC_TAGVAR(GCC, $1)\n \n+gcc_dir=\\`gcc -print-file-name=. | $SED 's,/\\.$,,'\\`\n+gcc_ver=\\`gcc -dumpversion\\`\n+\n # An ERE matcher.\n EGREP=$lt_EGREP\n \n@@ -4421,11 +4441,11 @@ striplib=$lt_striplib\n \n # Dependencies to place before the objects being linked to create a\n # shared library.\n-predep_objects=$lt_[]_LT_AC_TAGVAR(predep_objects, $1)\n+predep_objects=\\`echo $lt_[]_LT_AC_TAGVAR(predep_objects, $1) | \\$SED -e \"s@\\${gcc_dir}@\\\\\\${gcc_dir}@g;s@\\${gcc_ver}@\\\\\\${gcc_ver}@g\"\\`\n \n # Dependencies to place after the objects being linked to create a\n # shared library.\n-postdep_objects=$lt_[]_LT_AC_TAGVAR(postdep_objects, $1)\n+postdep_objects=\\`echo $lt_[]_LT_AC_TAGVAR(postdep_objects, $1) | \\$SED -e \"s@\\${gcc_dir}@\\\\\\${gcc_dir}@g;s@\\${gcc_ver}@\\\\\\${gcc_ver}@g\"\\`\n \n # Dependencies to place before the objects being linked to create a\n # shared library.\n@@ -4437,7 +4457,7 @@ postdeps=$lt_[]_LT_AC_TAGVAR(postdeps, $1)\n \n # The library search path used internally by the compiler when linking\n # a shared library.\n-compiler_lib_search_path=$lt_[]_LT_AC_TAGVAR(compiler_lib_search_path, $1)\n+compiler_lib_search_path=\\`echo $lt_[]_LT_AC_TAGVAR(compiler_lib_search_path, $1) | \\$SED -e \"s@\\${gcc_dir}@\\\\\\${gcc_dir}@g;s@\\${gcc_ver}@\\\\\\${gcc_ver}@g\"\\`\n \n # Method to check whether dependent libraries are shared objects.\n deplibs_check_method=$lt_deplibs_check_method\n@@ -4517,7 +4537,7 @@ variables_saved_for_relink=\"$variables_saved_for_relink\"\n link_all_deplibs=$_LT_AC_TAGVAR(link_all_deplibs, $1)\n \n # Compile-time system search path for libraries\n-sys_lib_search_path_spec=$lt_sys_lib_search_path_spec\n+sys_lib_search_path_spec=\\`echo $lt_sys_lib_search_path_spec | \\$SED -e \"s@\\${gcc_dir}@\\\\\\${gcc_dir}@g;s@\\${gcc_ver}@\\\\\\${gcc_ver}@g\"\\`\n \n # Run-time system search path for libraries\n sys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec\n@@ -6353,6 +6373,7 @@ do\n     done\n   done\n done\n+IFS=$as_save_IFS\n lt_ac_max=0\n lt_ac_count=0\n # Add /usr/xpg4/bin/sed as it is typically found on Solaris\n@@ -6385,6 +6406,7 @@ for lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do\n done\n ])\n SED=$lt_cv_path_SED\n+AC_SUBST([SED])\n AC_MSG_RESULT([$SED])\n ])\n "}, {"sha": "b6d4967ee8a4d5bf4b1d400d6db3022f7ba09993", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0258dc3a2c897ba06499af1493aac7e736adbbb9/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0258dc3a2c897ba06499af1493aac7e736adbbb9/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=0258dc3a2c897ba06499af1493aac7e736adbbb9", "patch": "@@ -54,6 +54,9 @@\n /* Define to 1 if you have the `cosl' function. */\n #undef HAVE_COSL\n \n+/* Define to 1 if you have the <dlfcn.h> header file. */\n+#undef HAVE_DLFCN_H\n+\n /* Define to 1 if you have the <endian.h> header file. */\n #undef HAVE_ENDIAN_H\n \n@@ -289,6 +292,12 @@\n /* Define to 1 if you have the <stdlib.h> header file. */\n #undef HAVE_STDLIB_H\n \n+/* Define if strerror_l is available in <string.h>. */\n+#undef HAVE_STRERROR_L\n+\n+/* Define if strerror_r is available in <string.h>. */\n+#undef HAVE_STRERROR_R\n+\n /* Define to 1 if you have the <strings.h> header file. */\n #undef HAVE_STRINGS_H\n \n@@ -301,6 +310,9 @@\n /* Define to 1 if you have the `strtold' function. */\n #undef HAVE_STRTOLD\n \n+/* Define if strxfrm_l is available in <string.h>. */\n+#undef HAVE_STRXFRM_L\n+\n /* Define to 1 if you have the <sys/filio.h> header file. */\n #undef HAVE_SYS_FILIO_H\n \n@@ -631,6 +643,10 @@\n /* Define as const if the declaration of iconv() needs const. */\n #undef ICONV_CONST\n \n+/* Define to the sub-directory in which libtool stores uninstalled libraries.\n+   */\n+#undef LT_OBJDIR\n+\n /* Name of package */\n #undef PACKAGE\n "}, {"sha": "c2cf5762430e723860d6d914786d072abc9af22a", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 220, "deletions": 58, "changes": 278, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0258dc3a2c897ba06499af1493aac7e736adbbb9/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0258dc3a2c897ba06499af1493aac7e736adbbb9/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=0258dc3a2c897ba06499af1493aac7e736adbbb9", "patch": "@@ -13988,8 +13988,6 @@ echo \"${ECHO_T}stdio\" >&6\n \n \n \n-  echo \"$as_me:$LINENO: checking for C locale to use\" >&5\n-echo $ECHO_N \"checking for C locale to use... $ECHO_C\" >&6\n    # Check whether --enable-clocale or --disable-clocale was given.\n if test \"${enable_clocale+set}\" = set; then\n   enableval=\"$enable_clocale\"\n@@ -14006,32 +14004,53 @@ else\n fi;\n \n \n-  # If they didn't use this option switch, or if they specified --enable\n-  # with no specific model, we'll have to look for one.  If they\n-  # specified --disable (???), do likewise.\n+  # Deal with gettext issues.  Default to not using it (=no) until we detect\n+  # support for it later.  Let the user turn it off via --e/d, but let that\n+  # default to on for easier handling.\n+  USE_NLS=no\n+  # Check whether --enable-nls or --disable-nls was given.\n+if test \"${enable_nls+set}\" = set; then\n+  enableval=\"$enable_nls\"\n+\n+else\n+  enable_nls=yes\n+fi;\n+\n+  # Either a known packaage, or \"auto\"\n   if test $enable_clocale = no || test $enable_clocale = yes; then\n      enable_clocale=auto\n   fi\n-\n-  # Either a known package, or \"auto\"\n   enable_clocale_flag=$enable_clocale\n \n-  # Probe for locale support if no specific model is specified.\n+  # Probe for locale model to use if none specified.\n   # Default to \"generic\".\n   if test $enable_clocale_flag = auto; then\n     case ${target_os} in\n       linux* | gnu* | kfreebsd*-gnu | knetbsd*-gnu)\n-        cat >conftest.$ac_ext <<_ACEOF\n+        enable_clocale_flag=gnu\n+        ;;\n+      darwin* | freebsd*)\n+        enable_clocale_flag=darwin\n+\t;;\n+      *)\n+        enable_clocale_flag=generic\n+        ;;\n+    esac\n+  fi\n+\n+  # Sanity check model, and test for special functionality.\n+  if test $enable_clocale_flag = gnu; then\n+    cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n \n-        #include <features.h>\n-        #if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 2)\n-          _GLIBCXX_ok\n-        #endif\n+    #include <features.h>\n+    #if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 2)\n+      _GLIBCXX_ok\n+    #endif\n \n _ACEOF\n if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n@@ -14043,9 +14062,8 @@ fi\n rm -f conftest*\n \n \n-        # Test for bugs early in glibc-2.2.x series\n-          if test $enable_clocale_flag = gnu; then\n-          if test \"$cross_compiling\" = yes; then\n+    # Test for bugs early in glibc-2.2.x series\n+    if test \"$cross_compiling\" = yes; then\n   enable_clocale_flag=generic\n else\n   cat >conftest.$ac_ext <<_ACEOF\n@@ -14055,28 +14073,28 @@ cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n \n-          #define _GNU_SOURCE 1\n-          #include <locale.h>\n-          #include <string.h>\n-          #if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)\n-          extern __typeof(newlocale) __newlocale;\n-          extern __typeof(duplocale) __duplocale;\n-          extern __typeof(strcoll_l) __strcoll_l;\n-          #endif\n-          int main()\n-          {\n-              const char __one[] = \"\ufffduglein Augmen\";\n-              const char __two[] = \"\ufffduglein\";\n-              int i;\n-              int j;\n-              __locale_t        loc;\n-               __locale_t        loc_dup;\n-              loc = __newlocale(1 << LC_ALL, \"de_DE\", 0);\n-              loc_dup = __duplocale(loc);\n-              i = __strcoll_l(__one, __two, loc);\n-              j = __strcoll_l(__one, __two, loc_dup);\n-              return 0;\n-          }\n+    #define _GNU_SOURCE 1\n+    #include <locale.h>\n+    #include <string.h>\n+    #if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)\n+    extern __typeof(newlocale) __newlocale;\n+    extern __typeof(duplocale) __duplocale;\n+    extern __typeof(strcoll_l) __strcoll_l;\n+    #endif\n+    int main()\n+    {\n+        const char __one[] = \"\ufffduglein Augmen\";\n+        const char __two[] = \"\ufffduglein\";\n+        int i;\n+        int j;\n+        __locale_t        loc;\n+        __locale_t        loc_dup;\n+        loc = __newlocale(1 << LC_ALL, \"de_DE\", 0);\n+        loc_dup = __duplocale(loc);\n+        i = __strcoll_l(__one, __two, loc);\n+        j = __strcoll_l(__one, __two, loc_dup);\n+        return 0;\n+    }\n \n _ACEOF\n rm -f conftest$ac_exeext\n@@ -14101,32 +14119,176 @@ enable_clocale_flag=generic\n fi\n rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n fi\n-          fi\n \n-        # ... at some point put __strxfrm_l tests in as well.\n-        ;;\n-      darwin* | freebsd*)\n-        enable_clocale_flag=darwin\n-\t;;\n-      *)\n-        enable_clocale_flag=generic\n-        ;;\n-    esac\n+    # Set it to scream when it hurts.\n+    ac_save_CFLAGS=\"$CFLAGS\"\n+    CFLAGS=\"-Wimplicit-function-declaration -Werror\"\n+\n+    # Use strxfrm_l if available.\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#define _GNU_SOURCE 1\n+     \t\t    #include <string.h>\n+\t\t    #include <locale.h>\n+int\n+main ()\n+{\n+char s[128]; __locale_t loc; strxfrm_l(s, \"C\", 5, loc);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_STRXFRM_L 1\n+_ACEOF\n+\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+    # Use strerror_l if available.\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#define _GNU_SOURCE 1\n+\t\t    #include <string.h>\n+\t\t    #include <locale.h>\n+int\n+main ()\n+{\n+__locale_t loc; strerror_l(5, loc);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_STRERROR_L 1\n+_ACEOF\n+\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+    CFLAGS=\"$ac_save_CFLAGS\"\n   fi\n \n-  # Deal with gettext issues.  Default to not using it (=no) until we detect\n-  # support for it later.  Let the user turn it off via --e/d, but let that\n-  # default to on for easier handling.\n-  USE_NLS=no\n-  # Check whether --enable-nls or --disable-nls was given.\n-if test \"${enable_nls+set}\" = set; then\n-  enableval=\"$enable_nls\"\n+  # Perhaps use strerror_r if available, and strerror_l isn't.\n+  ac_save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\"-Wimplicit-function-declaration -Werror\"\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#define _GNU_SOURCE 1\n+\t     \t  #include <string.h>\n+\t\t  #include <locale.h>\n+int\n+main ()\n+{\n+char s[128]; strerror_r(5, s, 128);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_STRERROR_R 1\n+_ACEOF\n \n else\n-  enable_nls=yes\n-fi;\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+  CFLAGS=\"$ac_save_CFLAGS\"\n \n   # Set configure bits for specified locale package\n+  echo \"$as_me:$LINENO: checking for C locale to use\" >&5\n+echo $ECHO_N \"checking for C locale to use... $ECHO_C\" >&6\n   case ${enable_clocale_flag} in\n     generic)\n       echo \"$as_me:$LINENO: result: generic\" >&5\n@@ -16401,7 +16563,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n \n   # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 16404 \"configure\"\n+#line 16566 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int."}]}