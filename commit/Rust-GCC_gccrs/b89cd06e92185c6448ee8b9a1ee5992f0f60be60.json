{"sha": "b89cd06e92185c6448ee8b9a1ee5992f0f60be60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg5Y2QwNmU5MjE4NWM2NDQ4ZWU4YjlhMWVlNTk5MmYwZjYwYmU2MA==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2004-07-06T20:01:10Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2004-07-06T20:01:10Z"}, "message": "dojump.c (do_jump): REFERENCE_EXPR is dead.\n\n2004-07-06  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* dojump.c (do_jump): REFERENCE_EXPR is dead.\n\t* expr.c (expand_expr_real_1): Ditto.\n\t* tree-inline.c (estimate_num_insns_1): Ditto.\n\t* tree-pretty-print.c (dump_generic_node): Ditto.\n\t(op_symbol): Ditto.\n\t* tree.def: Ditto.\n\nFrom-SVN: r84165", "tree": {"sha": "af8894311d611109f29c553cb3925bb79c9c8093", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af8894311d611109f29c553cb3925bb79c9c8093"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b89cd06e92185c6448ee8b9a1ee5992f0f60be60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b89cd06e92185c6448ee8b9a1ee5992f0f60be60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b89cd06e92185c6448ee8b9a1ee5992f0f60be60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b89cd06e92185c6448ee8b9a1ee5992f0f60be60/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d3fa3a16c38ebdbc92d4953849b1655a8f8bc19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d3fa3a16c38ebdbc92d4953849b1655a8f8bc19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d3fa3a16c38ebdbc92d4953849b1655a8f8bc19"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "94cd3a2947986232e65a2dcf6746fcfbbb5660d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b89cd06e92185c6448ee8b9a1ee5992f0f60be60/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b89cd06e92185c6448ee8b9a1ee5992f0f60be60/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b89cd06e92185c6448ee8b9a1ee5992f0f60be60", "patch": "@@ -1,13 +1,22 @@\n 2004-07-06  Daniel Berlin  <dberlin@dberlin.org>\n-\t\n+\n+\t* dojump.c (do_jump): REFERENCE_EXPR is dead.\n+\t* expr.c (expand_expr_real_1): Ditto.\n+\t* tree-inline.c (estimate_num_insns_1): Ditto.\n+\t* tree-pretty-print.c (dump_generic_node): Ditto.\n+\t(op_symbol): Ditto.\n+\t* tree.def: Ditto.\n+\n+2004-07-06  Daniel Berlin  <dberlin@dberlin.org>\n+\n \t* tree-ssa-pre.c (reference_node_pool): New pool.\n \t(find_or_generate_expression): Class 'r' is okay too.\n \t(create_value_expr_from): Ditto.\n \t(add_to_sets): LHS should not include vuses.\n \t(eliminate): Ditto.\n \t(compute_avail): Reverse ordering of tests.\n \tValuize INDIRECT_REF as well.\n-\t\n+\n 2004-07-06  Richard Sandiford  <rsandifo@redhat.com>\n \n \tPR rtl-optimization/16380"}, {"sha": "27dc5804ebb8e34270f62c2a6a309c2850a7c3b9", "filename": "gcc/dojump.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b89cd06e92185c6448ee8b9a1ee5992f0f60be60/gcc%2Fdojump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b89cd06e92185c6448ee8b9a1ee5992f0f60be60/gcc%2Fdojump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdojump.c?ref=b89cd06e92185c6448ee8b9a1ee5992f0f60be60", "patch": "@@ -208,7 +208,6 @@ do_jump (tree exp, rtx if_false_label, rtx if_true_label)\n            < TYPE_PRECISION (TREE_TYPE (TREE_OPERAND (exp, 0)))))\n         goto normal;\n     case NON_LVALUE_EXPR:\n-    case REFERENCE_EXPR:\n     case ABS_EXPR:\n     case NEGATE_EXPR:\n     case LROTATE_EXPR:"}, {"sha": "a3e64f495d17d0ce3aa2cc89ea4140b4d8f52acf", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b89cd06e92185c6448ee8b9a1ee5992f0f60be60/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b89cd06e92185c6448ee8b9a1ee5992f0f60be60/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=b89cd06e92185c6448ee8b9a1ee5992f0f60be60", "patch": "@@ -6443,8 +6443,8 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n   original_target = target;\n   ignore = (target == const0_rtx\n \t    || ((code == NON_LVALUE_EXPR || code == NOP_EXPR\n-\t\t || code == CONVERT_EXPR || code == REFERENCE_EXPR\n-\t\t || code == COND_EXPR || code == VIEW_CONVERT_EXPR)\n+\t\t || code == CONVERT_EXPR || code == COND_EXPR \n+     || code == VIEW_CONVERT_EXPR)\n \t\t&& TREE_CODE (type) == VOID_TYPE));\n \n   /* If we are going to ignore this result, we need only do something\n@@ -7503,7 +7503,6 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n     case NON_LVALUE_EXPR:\n     case NOP_EXPR:\n     case CONVERT_EXPR:\n-    case REFERENCE_EXPR:\n       if (TREE_OPERAND (exp, 0) == error_mark_node)\n \treturn const0_rtx;\n "}, {"sha": "044d019092382f9c289db49c843aba6a931fa4c0", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b89cd06e92185c6448ee8b9a1ee5992f0f60be60/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b89cd06e92185c6448ee8b9a1ee5992f0f60be60/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=b89cd06e92185c6448ee8b9a1ee5992f0f60be60", "patch": "@@ -1211,7 +1211,6 @@ estimate_num_insns_1 (tree *tp, int *walk_subtrees, void *data)\n     case SAVE_EXPR:\n     case UNSAVE_EXPR:\n     case ADDR_EXPR:\n-    case REFERENCE_EXPR:\n     case COMPLEX_EXPR:\n     case EXIT_BLOCK_EXPR:\n     case CASE_LABEL_EXPR:"}, {"sha": "3ff23f753b1b043f23e1702be2154163bd28f15d", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b89cd06e92185c6448ee8b9a1ee5992f0f60be60/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b89cd06e92185c6448ee8b9a1ee5992f0f60be60/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=b89cd06e92185c6448ee8b9a1ee5992f0f60be60", "patch": "@@ -999,7 +999,6 @@ dump_generic_node (pretty_printer *buffer, tree node, int spc, int flags,\n     case BIT_NOT_EXPR:\n     case TRUTH_NOT_EXPR:\n     case ADDR_EXPR:\n-    case REFERENCE_EXPR:\n     case PREDECREMENT_EXPR:\n     case PREINCREMENT_EXPR:\n     case INDIRECT_REF:\n@@ -1851,9 +1850,6 @@ op_symbol (tree op)\n     case POSTINCREMENT_EXPR:\n       return \"++ \";\n \n-    case REFERENCE_EXPR:\n-      return \"\";\n-\n     default:\n       return \"<<< ??? >>>\";\n     }"}, {"sha": "b6897a787b14bde8e8015826dce059a4e3e48246", "filename": "gcc/tree.def", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b89cd06e92185c6448ee8b9a1ee5992f0f60be60/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b89cd06e92185c6448ee8b9a1ee5992f0f60be60/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=b89cd06e92185c6448ee8b9a1ee5992f0f60be60", "patch": "@@ -739,9 +739,6 @@ DEFTREECODE (UNSAVE_EXPR, \"unsave_expr\", 'e', 1)\n    Operand may have any mode.  Result mode is Pmode.  */\n DEFTREECODE (ADDR_EXPR, \"addr_expr\", 'e', 1)\n \n-/* Non-lvalue reference or pointer to an object.  */\n-DEFTREECODE (REFERENCE_EXPR, \"reference_expr\", 'e', 1)\n-\n /* Operand is a function constant; result is a function variable value\n    of type EPmode.  Used only for languages that need static chains.  */\n DEFTREECODE (ENTRY_VALUE_EXPR, \"entry_value_expr\", 'e', 1)"}]}