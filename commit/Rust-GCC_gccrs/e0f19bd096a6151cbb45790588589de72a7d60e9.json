{"sha": "e0f19bd096a6151cbb45790588589de72a7d60e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBmMTliZDA5NmE2MTUxY2JiNDU3OTA1ODg1ODlkZTcyYTdkNjBlOQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2001-11-12T18:20:59Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2001-11-12T18:20:59Z"}, "message": "h8300.c (shift_alg_qi): Use rotations when doing 6-bit logical shifts on H8/S.\n\n\t* config/h8300/h8300.c (shift_alg_qi): Use rotations when\n\tdoing 6-bit logical shifts on H8/S.\n\t(shift_alg_qi): Use special code for 21-bit shifts on H8/S.\n\t(get_shift_alg): Generate special code for 21-bit shifts on\n\tH8/S.\n\nFrom-SVN: r46961", "tree": {"sha": "689ad7f972ed9475dccdfa1c9d62b239c89991b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/689ad7f972ed9475dccdfa1c9d62b239c89991b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0f19bd096a6151cbb45790588589de72a7d60e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0f19bd096a6151cbb45790588589de72a7d60e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0f19bd096a6151cbb45790588589de72a7d60e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0f19bd096a6151cbb45790588589de72a7d60e9/comments", "author": null, "committer": null, "parents": [{"sha": "abfc1ef6079534411cab0dbfe6118c3971fb592c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abfc1ef6079534411cab0dbfe6118c3971fb592c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abfc1ef6079534411cab0dbfe6118c3971fb592c"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "49a9004038e4d85b5145380aecc2fd70be88952d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0f19bd096a6151cbb45790588589de72a7d60e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0f19bd096a6151cbb45790588589de72a7d60e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0f19bd096a6151cbb45790588589de72a7d60e9", "patch": "@@ -1,3 +1,11 @@\n+2001-11-12  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.c (shift_alg_qi): Use rotations when\n+\tdoing 6-bit logical shifts on H8/S.\n+\t(shift_alg_qi): Use special code for 21-bit shifts on H8/S.\n+\t(get_shift_alg): Generate special code for 21-bit shifts on\n+\tH8/S.\n+\n 2001-11-12  Kazu Hirata  <kazu@hxi.com>\n \n \t* config/h8300/h8300.c (get_shift_alg): Remove a redundant"}, {"sha": "29559bbb83941f4780a216feaa82840f02c45835", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0f19bd096a6151cbb45790588589de72a7d60e9/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0f19bd096a6151cbb45790588589de72a7d60e9/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=e0f19bd096a6151cbb45790588589de72a7d60e9", "patch": "@@ -2183,8 +2183,8 @@ static const enum shift_alg shift_alg_qi[3][3][8] = {\n   {\n     /* TARGET_H8300S  */\n     /*  0    1    2    3    4    5    6    7  */\n-    { INL, INL, INL, INL, INL, INL, INL, ROT }, /* SHIFT_ASHIFT   */\n-    { INL, INL, INL, INL, INL, INL, INL, ROT }, /* SHIFT_LSHIFTRT */\n+    { INL, INL, INL, INL, INL, INL, ROT, ROT }, /* SHIFT_ASHIFT   */\n+    { INL, INL, INL, INL, INL, INL, ROT, ROT }, /* SHIFT_LSHIFTRT */\n     { INL, INL, INL, INL, INL, INL, INL, SPC }  /* SHIFT_ASHIFTRT */\n   }\n };\n@@ -2272,15 +2272,15 @@ static const enum shift_alg shift_alg_si[3][3][32] = {\n     /* 24   25   26   27   28   29   30   31  */\n     { INL, INL, INL, INL, INL, INL, INL, INL,\n       INL, INL, INL, LOP, LOP, LOP, LOP, LOP,\n-      SPC, SPC, SPC, SPC, SPC, LOP, LOP, LOP,\n+      SPC, SPC, SPC, SPC, SPC, SPC, LOP, LOP,\n       SPC, LOP, LOP, LOP, ROT, ROT, ROT, ROT }, /* SHIFT_ASHIFT   */\n     { INL, INL, INL, INL, INL, INL, INL, INL,\n       INL, INL, INL, LOP, LOP, LOP, LOP, LOP,\n-      SPC, SPC, SPC, SPC, SPC, LOP, LOP, LOP,\n+      SPC, SPC, SPC, SPC, SPC, SPC, LOP, LOP,\n       SPC, LOP, LOP, LOP, ROT, ROT, ROT, ROT }, /* SHIFT_LSHIFTRT */\n     { INL, INL, INL, INL, INL, INL, INL, INL,\n       INL, INL, INL, LOP, LOP, LOP, LOP, LOP,\n-      SPC, SPC, SPC, SPC, SPC, LOP, LOP, LOP,\n+      SPC, SPC, SPC, SPC, SPC, SPC, LOP, LOP,\n       SPC, LOP, LOP, LOP, LOP, LOP, LOP, SPC }, /* SHIFT_ASHIFTRT */\n   }\n };\n@@ -2516,7 +2516,7 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t}\n       else if ((TARGET_H8300 && count == 16)\n \t       || (TARGET_H8300H && 16 <= count && count <= 19)\n-\t       || (TARGET_H8300S && 16 <= count && count <= 20))\n+\t       || (TARGET_H8300S && 16 <= count && count <= 21))\n \t{\n \t  info->remainder = count - 16;\n "}]}