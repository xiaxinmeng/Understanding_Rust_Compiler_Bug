{"sha": "f55b1d9739d7adf97c3ecd695e4529888be138ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU1YjFkOTczOWQ3YWRmOTdjM2VjZDY5NWU0NTI5ODg4YmUxMzhlZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-05-06T22:18:06Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-05-06T22:18:06Z"}, "message": "(find_equiv_reg): Don't look inside a CONST_DOUBLE; use\noperand_subword instead.\n\nFrom-SVN: r4373", "tree": {"sha": "da91edf84438c26184894ae82419f23027855cc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da91edf84438c26184894ae82419f23027855cc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f55b1d9739d7adf97c3ecd695e4529888be138ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f55b1d9739d7adf97c3ecd695e4529888be138ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f55b1d9739d7adf97c3ecd695e4529888be138ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f55b1d9739d7adf97c3ecd695e4529888be138ef/comments", "author": null, "committer": null, "parents": [{"sha": "7313c84b673430d8e972800966afdec82cbd9e22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7313c84b673430d8e972800966afdec82cbd9e22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7313c84b673430d8e972800966afdec82cbd9e22"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "46734683937c4f6cfbcb37f50207aecf17902b89", "filename": "gcc/reload.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f55b1d9739d7adf97c3ecd695e4529888be138ef/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f55b1d9739d7adf97c3ecd695e4529888be138ef/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=f55b1d9739d7adf97c3ecd695e4529888be138ef", "patch": "@@ -1,5 +1,5 @@\n /* Search an insn for pseudo regs that must be in hard regs and are not.\n-   Copyright (C) 1987, 1988, 1989, 1992 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1989, 1992, 1993 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -4948,7 +4948,7 @@ find_equiv_reg (goal, insn, class, other, reload_reg_p, goalreg, mode)\n      enum machine_mode mode;\n {\n   register rtx p = insn;\n-  rtx valtry, value, where;\n+  rtx goaltry, valtry, value, where;\n   register rtx pat;\n   register int regno = -1;\n   int valueno;\n@@ -5054,7 +5054,9 @@ find_equiv_reg (goal, insn, class, other, reload_reg_p, goalreg, mode)\n \t\t      && GET_CODE (XEXP (tem, 0)) == CONST_DOUBLE\n \t\t      && GET_MODE_CLASS (GET_MODE (XEXP (tem, 0))) == MODE_FLOAT\n \t\t      && GET_CODE (goal) == CONST_INT\n-\t\t      && INTVAL (goal) == CONST_DOUBLE_LOW (XEXP (tem, 0))\n+\t\t      && 0 != (goaltry = operand_subword (XEXP (tem, 0), 0, 0,\n+\t\t\t\t\t\t\t  VOIDmode))\n+\t\t      && rtx_equal_p (goal, goaltry)\n \t\t      && (valtry = operand_subword (SET_DEST (pat), 0, 0,\n \t\t\t\t\t\t    VOIDmode))\n \t\t      && (valueno = true_regnum (valtry)) >= 0)\n@@ -5064,7 +5066,9 @@ find_equiv_reg (goal, insn, class, other, reload_reg_p, goalreg, mode)\n \t\t      && GET_CODE (XEXP (tem, 0)) == CONST_DOUBLE\n \t\t      && GET_MODE_CLASS (GET_MODE (XEXP (tem, 0))) == MODE_FLOAT\n \t\t      && GET_CODE (goal) == CONST_INT\n-\t\t      && INTVAL (goal) == CONST_DOUBLE_HIGH (XEXP (tem, 0))\n+\t\t      && 0 != (goaltry = operand_subword (XEXP (tem, 0), 1, 0,\n+\t\t\t\t\t\t\t  VOIDmode))\n+\t\t      && rtx_equal_p (goal, goaltry)\n \t\t      && (valtry\n \t\t\t  = operand_subword (SET_DEST (pat), 1, 0, VOIDmode))\n \t\t      && (valueno = true_regnum (valtry)) >= 0)))"}]}