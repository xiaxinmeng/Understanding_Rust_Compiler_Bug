{"sha": "a1bbd445e2f512343859ddcd2676aefb61c6ddfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFiYmQ0NDVlMmY1MTIzNDM4NTlkZGNkMjY3NmFlZmI2MWM2ZGRmZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-05-16T15:11:33Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-05-16T15:11:33Z"}, "message": "dwarf2out.c (used_rtx_varray): Rename to used_rtx_array.\n\n\t* dwarf2out.c (used_rtx_varray): Rename to used_rtx_array.\n\tChange the type to VEC(rtx,gc)*.\n\t(mem_loc_descriptor, add_const_value_attributes,\n\tdwarf2out_init): Adjust uses of used_rtx_varray.\n\nFrom-SVN: r99777", "tree": {"sha": "694b752570473b3baad841f81f7f518d4fffa7a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/694b752570473b3baad841f81f7f518d4fffa7a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1bbd445e2f512343859ddcd2676aefb61c6ddfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1bbd445e2f512343859ddcd2676aefb61c6ddfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1bbd445e2f512343859ddcd2676aefb61c6ddfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1bbd445e2f512343859ddcd2676aefb61c6ddfe/comments", "author": null, "committer": null, "parents": [{"sha": "99e4078fec82463d0d2547504ad85b134739a521", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99e4078fec82463d0d2547504ad85b134739a521", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99e4078fec82463d0d2547504ad85b134739a521"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "8b3e8648e447c5270faea097e07a77e1cd20cfa9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1bbd445e2f512343859ddcd2676aefb61c6ddfe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1bbd445e2f512343859ddcd2676aefb61c6ddfe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1bbd445e2f512343859ddcd2676aefb61c6ddfe", "patch": "@@ -1,3 +1,10 @@\n+2005-05-16  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* dwarf2out.c (used_rtx_varray): Rename to used_rtx_array.\n+\tChange the type to VEC(rtx,gc)*.\n+\t(mem_loc_descriptor, add_const_value_attributes,\n+\tdwarf2out_init): Adjust uses of used_rtx_varray.\n+\n 2005-05-16  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* Makefile.in (options.c): Tell optc-gen.awk to include config.h,"}, {"sha": "aee1c2f9e71969417c1576fd8363ff4672fe237e", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1bbd445e2f512343859ddcd2676aefb61c6ddfe/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1bbd445e2f512343859ddcd2676aefb61c6ddfe/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=a1bbd445e2f512343859ddcd2676aefb61c6ddfe", "patch": "@@ -170,9 +170,12 @@ default_eh_frame_section (void)\n #endif\n }\n \n+DEF_VEC_P(rtx);\n+DEF_VEC_ALLOC_P(rtx,gc);\n+\n /* Array of RTXes referenced by the debugging information, which therefore\n    must be kept around forever.  */\n-static GTY(()) varray_type used_rtx_varray;\n+static GTY(()) VEC(rtx,gc) *used_rtx_array;\n \n /* A pointer to the base of a list of incomplete types which might be\n    completed at some later time.  incomplete_types_list needs to be a\n@@ -8680,7 +8683,7 @@ mem_loc_descriptor (rtx rtl, enum machine_mode mode, bool can_use_fbreg)\n       mem_loc_result = new_loc_descr (DW_OP_addr, 0, 0);\n       mem_loc_result->dw_loc_oprnd1.val_class = dw_val_class_addr;\n       mem_loc_result->dw_loc_oprnd1.v.val_addr = rtl;\n-      VARRAY_PUSH_RTX (used_rtx_varray, rtl);\n+      VEC_safe_push (rtx, gc, used_rtx_array, rtl);\n       break;\n \n     case PRE_MODIFY:\n@@ -9772,7 +9775,7 @@ add_const_value_attribute (dw_die_ref die, rtx rtl)\n     case LABEL_REF:\n     case CONST:\n       add_AT_addr (die, DW_AT_const_value, rtl);\n-      VARRAY_PUSH_RTX (used_rtx_varray, rtl);\n+      VEC_safe_push (rtx, gc, used_rtx_array, rtl);\n       break;\n \n     case PLUS:\n@@ -10660,7 +10663,7 @@ add_name_and_src_coords_attributes (dw_die_ref die, tree decl)\n     {\n       add_AT_addr (die, DW_AT_VMS_rtnbeg_pd_address,\n \t\t   XEXP (DECL_RTL (decl), 0));\n-      VARRAY_PUSH_RTX (used_rtx_varray, XEXP (DECL_RTL (decl), 0));\n+      VEC_safe_push (tree, gc, used_rtx_array, XEXP (DECL_RTL (decl), 0));\n     }\n #endif\n }\n@@ -13506,7 +13509,7 @@ dwarf2out_init (const char *filename ATTRIBUTE_UNUSED)\n \n   incomplete_types = VEC_alloc (tree, gc, 64);\n \n-  VARRAY_RTX_INIT (used_rtx_varray, 32, \"used_rtx_varray\");\n+  used_rtx_array = VEC_alloc (rtx, gc, 32);\n \n   ASM_GENERATE_INTERNAL_LABEL (text_end_label, TEXT_END_LABEL, 0);\n   ASM_GENERATE_INTERNAL_LABEL (abbrev_section_label,"}]}