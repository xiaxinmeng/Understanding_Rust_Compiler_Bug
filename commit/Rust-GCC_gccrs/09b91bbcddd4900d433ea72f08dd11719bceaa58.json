{"sha": "09b91bbcddd4900d433ea72f08dd11719bceaa58", "node_id": "C_kwDOANBUbNoAKDA5YjkxYmJjZGRkNDkwMGQ0MzNlYTcyZjA4ZGQxMTcxOWJjZWFhNTg", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-09-05T09:40:50Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-26T09:02:29Z"}, "message": "ada: Deconstruct build support for ancient MinGW\n\nRemove conditional C code for building GNAT with MinGW earlier than 2.0,\nwhich was released in 2007.\n\ngcc/ada/\n\n\t* adaint.c: Remove conditional #include directives for old MinGW.\n\t* cal.c: Always include winsock.h, since it is part of modern\n\tMinGW.\n\t* cstreams.c: Remove workaround for old MinGW.\n\t* expect.c: Remove conditional #include directive for old MinGW.\n\t* mingw32.h: Remove STD_MINGW and OLD_MINGW declarations.\n\t* sysdep.c: Remove conditional #include directive for old MinGW.", "tree": {"sha": "39f617d23f635a992980479f61572330caae3fd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39f617d23f635a992980479f61572330caae3fd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09b91bbcddd4900d433ea72f08dd11719bceaa58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09b91bbcddd4900d433ea72f08dd11719bceaa58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09b91bbcddd4900d433ea72f08dd11719bceaa58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09b91bbcddd4900d433ea72f08dd11719bceaa58/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb95fb2125230fb594d88a7d73b524853c6604c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb95fb2125230fb594d88a7d73b524853c6604c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb95fb2125230fb594d88a7d73b524853c6604c5"}], "stats": {"total": 54, "additions": 5, "deletions": 49}, "files": [{"sha": "199dbe0e4052671aa53b38ac6d953a3829588667", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b91bbcddd4900d433ea72f08dd11719bceaa58/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b91bbcddd4900d433ea72f08dd11719bceaa58/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=09b91bbcddd4900d433ea72f08dd11719bceaa58", "patch": "@@ -200,11 +200,7 @@ UINT __gnat_current_ccs_encoding;\n #endif\n \n /* wait.h processing */\n-#ifdef __MINGW32__\n-# if OLD_MINGW\n-#  include <sys/wait.h>\n-# endif\n-#elif defined (__vxworks) && defined (__RTP__)\n+#if defined (__vxworks) && defined (__RTP__)\n # include <wait.h>\n #elif defined (__Lynx__)\n /* ??? We really need wait.h and it includes resource.h on Lynx.  GCC\n@@ -214,7 +210,7 @@ UINT __gnat_current_ccs_encoding;\n    preventing the inclusion of the GCC header from doing anything.  */\n # define GCC_RESOURCE_H\n # include <sys/wait.h>\n-#elif defined (__PikeOS__)\n+#elif defined (__PikeOS__) || defined (__MINGW32__)\n /* No wait() or waitpid() calls available.  */\n #else\n /* Default case.  */\n@@ -335,11 +331,6 @@ const char *__gnat_library_template = GNAT_LIBRARY_TEMPLATE;\n \n #if defined (__MINGW32__)\n #include \"mingw32.h\"\n-\n-#if OLD_MINGW\n-#include <sys/param.h>\n-#endif\n-\n #else\n #include <sys/param.h>\n #endif"}, {"sha": "09bcc15c4b37ed868ddb465541bb4a8613f8999f", "filename": "gcc/ada/cal.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b91bbcddd4900d433ea72f08dd11719bceaa58/gcc%2Fada%2Fcal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b91bbcddd4900d433ea72f08dd11719bceaa58/gcc%2Fada%2Fcal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcal.c?ref=09b91bbcddd4900d433ea72f08dd11719bceaa58", "patch": "@@ -53,10 +53,8 @@\n \n #ifdef __MINGW32__\n #include \"mingw32.h\"\n-#if STD_MINGW\n #include <winsock.h>\n #endif\n-#endif\n \n void\n __gnat_timeval_to_duration (struct timeval *t, long long *sec, long *usec)"}, {"sha": "fc583e17004be3a419d619c6821d229a886db00e", "filename": "gcc/ada/cstreams.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b91bbcddd4900d433ea72f08dd11719bceaa58/gcc%2Fada%2Fcstreams.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b91bbcddd4900d433ea72f08dd11719bceaa58/gcc%2Fada%2Fcstreams.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstreams.c?ref=09b91bbcddd4900d433ea72f08dd11719bceaa58", "patch": "@@ -97,14 +97,6 @@ extern \"C\" {\n #undef fileno\n #endif\n \n-/* The _IONBF value in MINGW32 stdio.h is wrong.  */\n-#if defined (WINNT) || defined (_WINNT)\n-#if OLD_MINGW\n-#undef _IONBF\n-#define _IONBF 0004\n-#endif\n-#endif\n-\n int\n __gnat_feof (FILE *stream)\n {"}, {"sha": "48fb1076e91e11fcb2e1ebdc411f54dae8e406e6", "filename": "gcc/ada/expect.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b91bbcddd4900d433ea72f08dd11719bceaa58/gcc%2Fada%2Fexpect.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b91bbcddd4900d433ea72f08dd11719bceaa58/gcc%2Fada%2Fexpect.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpect.c?ref=09b91bbcddd4900d433ea72f08dd11719bceaa58", "patch": "@@ -42,17 +42,13 @@\n #include \"adaint.h\"\n #include <sys/types.h>\n \n-#ifdef __MINGW32__\n-# if OLD_MINGW\n-#  include <sys/wait.h>\n-# endif\n-#elif defined (__vxworks) && defined (__RTP__)\n+#if defined (__vxworks) && defined (__RTP__)\n # include <wait.h>\n #elif defined (__Lynx__)\n   /* ??? See comment in adaint.c.  */\n # define GCC_RESOURCE_H\n # include <sys/wait.h>\n-#elif defined (__PikeOS__)\n+#elif defined (__PikeOS__) || defined (__MINGW32__)\n   /* No wait.h available */\n #else\n #include <sys/wait.h>"}, {"sha": "bf8577bb1d4f9e95af4ae72014cfd65125f1d21f", "filename": "gcc/ada/mingw32.h", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b91bbcddd4900d433ea72f08dd11719bceaa58/gcc%2Fada%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b91bbcddd4900d433ea72f08dd11719bceaa58/gcc%2Fada%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmingw32.h?ref=09b91bbcddd4900d433ea72f08dd11719bceaa58", "patch": "@@ -101,23 +101,6 @@ extern UINT __gnat_current_ccs_encoding;\n \n #include <stdlib.h>\n \n-/* STD_MINGW: standard if MINGW32 version > 1.3, we have switched to this\n-   version instead of the previous enhanced version to ease building GNAT on\n-   Windows platforms. By using STD_MINGW or OLD_MINGW it is possible to build\n-   GNAT using both MingW include files (Old MingW + ACT changes and standard\n-   MingW starting with version 1.3.\n-   For w64 Mingw the define STD_MINGW is always set to value 1, because\n-   there is no old header set present.  */\n-#ifdef _WIN64\n-#define STD_MINGW 1\n-#else\n-#define STD_MINGW ((__MINGW32_MAJOR_VERSION == 1 \\\n-\t\t   && __MINGW32_MINOR_VERSION >= 3) \\\n-     || (__MINGW32_MAJOR_VERSION >= 2))\n-#endif\n-\n-#define OLD_MINGW (!(STD_MINGW))\n-\n #ifndef MAXPATHLEN\n #define MAXPATHLEN MAX_PATH\n #endif"}, {"sha": "7bdfcbc047c623ee13c20385cc8494254b35ecaa", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b91bbcddd4900d433ea72f08dd11719bceaa58/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b91bbcddd4900d433ea72f08dd11719bceaa58/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=09b91bbcddd4900d433ea72f08dd11719bceaa58", "patch": "@@ -323,11 +323,7 @@ __gnat_ttyname (int filedes ATTRIBUTE_UNUSED)\n   || defined (__QNX__)\n \n # ifdef __MINGW32__\n-#  if OLD_MINGW\n-#   include <termios.h>\n-#  else\n-#   include <conio.h>  /* for getch(), kbhit() */\n-#  endif\n+#  include <conio.h>  /* for getch(), kbhit() */\n # else\n #  include <termios.h>\n # endif"}]}