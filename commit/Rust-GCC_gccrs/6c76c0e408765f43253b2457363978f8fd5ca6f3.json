{"sha": "6c76c0e408765f43253b2457363978f8fd5ca6f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM3NmMwZTQwODc2NWY0MzI1M2IyNDU3MzYzOTc4ZjhmZDVjYTZmMw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-04-18T20:26:07Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-04-18T20:26:07Z"}, "message": "PR middle-end/89797 - ICE on a vector_size (1LU << 33) int variable \n\ngcc/ChangeLog:\n\t* tree.h (TYPE_VECTOR_SUBPARTS): Use HOST_WIDE_INT_1U.\n\t* config/aarch64/aarch64.c (aarch64_simd_vector_alignment): Avoid\n\tassuming type size fits in SHWI.\n\nFrom-SVN: r270447", "tree": {"sha": "be8266aee428b157f5e99cffdb8c4f49d79d5da0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be8266aee428b157f5e99cffdb8c4f49d79d5da0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c76c0e408765f43253b2457363978f8fd5ca6f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c76c0e408765f43253b2457363978f8fd5ca6f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c76c0e408765f43253b2457363978f8fd5ca6f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c76c0e408765f43253b2457363978f8fd5ca6f3/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6e809c849c8d0e0bfe5fa14bda0e663e0a65859", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6e809c849c8d0e0bfe5fa14bda0e663e0a65859", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6e809c849c8d0e0bfe5fa14bda0e663e0a65859"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "3784ca2d46516db4f6e3a5168a970377cb483fa0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c76c0e408765f43253b2457363978f8fd5ca6f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c76c0e408765f43253b2457363978f8fd5ca6f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c76c0e408765f43253b2457363978f8fd5ca6f3", "patch": "@@ -1,3 +1,10 @@\n+2019-04-18  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/89797\n+\t* tree.h (TYPE_VECTOR_SUBPARTS): Use HOST_WIDE_INT_1U.\n+\t* config/aarch64/aarch64.c (aarch64_simd_vector_alignment): Avoid\n+\tassuming type size fits in SHWI.\n+\n 2019-04-18  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/85051"}, {"sha": "41bdefc6fee53391e0d1aad7e6cc69411ba94840", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c76c0e408765f43253b2457363978f8fd5ca6f3/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c76c0e408765f43253b2457363978f8fd5ca6f3/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=6c76c0e408765f43253b2457363978f8fd5ca6f3", "patch": "@@ -14924,8 +14924,7 @@ aarch64_simd_vector_alignment (const_tree type)\n        be set for non-predicate vectors of booleans.  Modes are the most\n        direct way we have of identifying real SVE predicate types.  */\n     return GET_MODE_CLASS (TYPE_MODE (type)) == MODE_VECTOR_BOOL ? 16 : 128;\n-  HOST_WIDE_INT align = tree_to_shwi (TYPE_SIZE (type));\n-  return MIN (align, 128);\n+  return wi::umin (wi::to_wide (TYPE_SIZE (type)), 128).to_uhwi ();\n }\n \n /* Implement target hook TARGET_VECTORIZE_PREFERRED_VECTOR_ALIGNMENT.  */"}, {"sha": "2f2f109451a1125d5ee95922659c04ed111ab544", "filename": "gcc/tree.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c76c0e408765f43253b2457363978f8fd5ca6f3/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c76c0e408765f43253b2457363978f8fd5ca6f3/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=6c76c0e408765f43253b2457363978f8fd5ca6f3", "patch": "@@ -3735,13 +3735,13 @@ TYPE_VECTOR_SUBPARTS (const_tree node)\n   if (NUM_POLY_INT_COEFFS == 2)\n     {\n       poly_uint64 res = 0;\n-      res.coeffs[0] = 1 << (precision & 0xff);\n+      res.coeffs[0] = HOST_WIDE_INT_1U << (precision & 0xff);\n       if (precision & 0x100)\n-\tres.coeffs[1] = 1 << (precision & 0xff);\n+\tres.coeffs[1] = HOST_WIDE_INT_1U << (precision & 0xff);\n       return res;\n     }\n   else\n-    return (unsigned HOST_WIDE_INT)1 << precision;\n+    return HOST_WIDE_INT_1U << precision;\n }\n \n /* Set the number of elements in VECTOR_TYPE NODE to SUBPARTS, which must"}]}