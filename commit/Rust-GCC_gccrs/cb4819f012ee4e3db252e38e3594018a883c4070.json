{"sha": "cb4819f012ee4e3db252e38e3594018a883c4070", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I0ODE5ZjAxMmVlNGUzZGIyNTJlMzhlMzU5NDAxOGE4ODNjNDA3MA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-04-26T15:16:51Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-04-26T15:16:51Z"}, "message": "re PR tree-optimization/21047 (ASSERT_EXPR handling in fold never triggers.)\n\n\tPR tree-optimization/21047\n\t* fold-const.c (fold_binary): Abort on ASSERT_EXPR.\n\t(fold): Don't handle ASSERT_EXPR.\n\nFrom-SVN: r98770", "tree": {"sha": "2c8cbc8c0ddc406557bcc3346b925422a34dc063", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c8cbc8c0ddc406557bcc3346b925422a34dc063"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb4819f012ee4e3db252e38e3594018a883c4070", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb4819f012ee4e3db252e38e3594018a883c4070", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb4819f012ee4e3db252e38e3594018a883c4070", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb4819f012ee4e3db252e38e3594018a883c4070/comments", "author": null, "committer": null, "parents": [{"sha": "f3522a84f3aedacbfa06a31d334f1b4d6738fcfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3522a84f3aedacbfa06a31d334f1b4d6738fcfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3522a84f3aedacbfa06a31d334f1b4d6738fcfc"}], "stats": {"total": 23, "additions": 8, "deletions": 15}, "files": [{"sha": "2d441c43cab004e18a787823953c4919b7f6cb7b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb4819f012ee4e3db252e38e3594018a883c4070/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb4819f012ee4e3db252e38e3594018a883c4070/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb4819f012ee4e3db252e38e3594018a883c4070", "patch": "@@ -3,6 +3,10 @@\n \t* basic-block.h (ei_cond): New.\n \t(FOR_EACH_EDGE): Call ei_cond.\n \n+\tPR tree-optimization/21047\n+\t* fold-const.c (fold_binary): Abort on ASSERT_EXPR.\n+\t(fold): Don't handle ASSERT_EXPR.\n+\n 2005-04-25  Roger Sayle  <roger@eyesopen.com>\n \n \t* sched-deps.c (sched_analyze_1): On STACK_REGS targets, x87, treat"}, {"sha": "416d89e1cdf54d95721b34519ee7277bab0b9388", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb4819f012ee4e3db252e38e3594018a883c4070/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb4819f012ee4e3db252e38e3594018a883c4070/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=cb4819f012ee4e3db252e38e3594018a883c4070", "patch": "@@ -9864,6 +9864,10 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \treturn build_complex (type, arg0, arg1);\n       return NULL_TREE;\n \n+    case ASSERT_EXPR:\n+      /* An ASSERT_EXPR should never be passed to fold_binary.  */\n+      gcc_unreachable ();\n+\n     default:\n       return NULL_TREE;\n     } /* switch (code) */\n@@ -10147,21 +10151,6 @@ fold (tree expr)\n     case CONST_DECL:\n       return fold (DECL_INITIAL (t));\n \n-    case ASSERT_EXPR:\n-      {\n-\t/* Given ASSERT_EXPR <Y, COND>, return Y if COND can be folded\n-\t   to boolean_true_node.  If COND folds to boolean_false_node,\n-\t   return ASSERT_EXPR <Y, 0>.  Otherwise, return the original\n-\t   expression.  */\n-\ttree c = fold (ASSERT_EXPR_COND (t));\n-\tif (c == boolean_true_node)\n-\t  return ASSERT_EXPR_VAR (t);\n-\telse if (c == boolean_false_node)\n-\t  return build (ASSERT_EXPR, TREE_TYPE (t), ASSERT_EXPR_VAR (t), c);\n-\telse\n-\t  return t;\n-      }\n-\n     default:\n       return t;\n     } /* switch (code) */"}]}