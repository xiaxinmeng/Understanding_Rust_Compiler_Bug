{"sha": "0e2eb6abeb77d86e672f0872bca5dd3528134734", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUyZWI2YWJlYjc3ZDg2ZTY3MmYwODcyYmNhNWRkMzUyODEzNDczNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-01-24T12:36:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-01-24T12:36:14Z"}, "message": "re PR lto/87187 (FAIL: gfortran.dg/short_circuiting_3.f90   -g -flto  (internal compiler error) on darwin)\n\n2019-01-24  Richard Biener  <rguenther@suse.de>\n\n\tPR lto/87187\n\t* tree-streamer-out.c (write_ts_decl_common_tree_pointers):\n\tWhen in \"legacy\" debug mode make sure to reset self-origins.\n\nFrom-SVN: r268236", "tree": {"sha": "e88d14cee72ed4c3aaf0a1c625c0cc6a2beaae8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e88d14cee72ed4c3aaf0a1c625c0cc6a2beaae8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e2eb6abeb77d86e672f0872bca5dd3528134734", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e2eb6abeb77d86e672f0872bca5dd3528134734", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e2eb6abeb77d86e672f0872bca5dd3528134734", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e2eb6abeb77d86e672f0872bca5dd3528134734/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "12502bf2e905cba16edf28941a37e6de432ea108", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12502bf2e905cba16edf28941a37e6de432ea108", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12502bf2e905cba16edf28941a37e6de432ea108"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "960e8dacef9318b6ff16e0958fdae48d526b3993", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e2eb6abeb77d86e672f0872bca5dd3528134734/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e2eb6abeb77d86e672f0872bca5dd3528134734/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e2eb6abeb77d86e672f0872bca5dd3528134734", "patch": "@@ -1,3 +1,9 @@\n+2019-01-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR lto/87187\n+\t* tree-streamer-out.c (write_ts_decl_common_tree_pointers):\n+\tWhen in \"legacy\" debug mode make sure to reset self-origins.\n+\n 2019-01-24  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/88994"}, {"sha": "b66426387d68af5b88b8fe349aff7470f457181d", "filename": "gcc/tree-streamer-out.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e2eb6abeb77d86e672f0872bca5dd3528134734/gcc%2Ftree-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e2eb6abeb77d86e672f0872bca5dd3528134734/gcc%2Ftree-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-out.c?ref=0e2eb6abeb77d86e672f0872bca5dd3528134734", "patch": "@@ -603,7 +603,16 @@ write_ts_decl_common_tree_pointers (struct output_block *ob, tree expr,\n      special handling in LTO, it must be handled by streamer hooks.  */\n \n   stream_write_tree (ob, DECL_ATTRIBUTES (expr), ref_p);\n-  stream_write_tree (ob, DECL_ABSTRACT_ORIGIN (expr), ref_p);\n+\n+  /* On non-early-LTO enabled targets we claim we compiled with -g0\n+     but dwarf2out still did its set_decl_origin_self game fooling\n+     itself late.  Und that here since we won't have access to the\n+     early generated abstract DIEs.  */\n+  tree ao = DECL_ABSTRACT_ORIGIN (expr);\n+  if (debug_info_level == DINFO_LEVEL_NONE\n+      && ao == expr)\n+    ao = NULL_TREE;\n+  stream_write_tree (ob, ao, ref_p);\n \n   if ((VAR_P (expr) || TREE_CODE (expr) == PARM_DECL)\n       && DECL_HAS_VALUE_EXPR_P (expr))"}]}