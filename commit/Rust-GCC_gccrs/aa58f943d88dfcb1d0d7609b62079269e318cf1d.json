{"sha": "aa58f943d88dfcb1d0d7609b62079269e318cf1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE1OGY5NDNkODhkZmNiMWQwZDc2MDliNjIwNzkyNjllMzE4Y2YxZA==", "commit": {"author": {"name": "Jonathan Gray", "email": "jsg@openbsd.org", "date": "2009-09-27T13:20:23Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2009-09-27T13:20:23Z"}, "message": "config.gcc: Update OpenBSD targets.\n\n\t* config.gcc: Update OpenBSD targets.\n\t* config/openbsd-stdint.h: New file.\n\t* config/openbsd-libpthread.h: New file.\n\t* config/openbsd.h: Update and break out LIB_SPEC definition.\n\t* config/alpha/openbsd.h: Overhaul to reflect ELF migration.\n\t* config/i386/openbsdelf.h: Correct types.\n\t* config/m68k/openbsd.h: Likewise.\n\t* config/mips/openbsd.h: Likewise.\n\t* config/vax/openbsd.h: Likewise.\n\nFrom-SVN: r152218", "tree": {"sha": "f0527ec4e131c2d0cf30d66b4903df0b659e292a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0527ec4e131c2d0cf30d66b4903df0b659e292a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa58f943d88dfcb1d0d7609b62079269e318cf1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa58f943d88dfcb1d0d7609b62079269e318cf1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa58f943d88dfcb1d0d7609b62079269e318cf1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa58f943d88dfcb1d0d7609b62079269e318cf1d/comments", "author": {"login": "jonathangray", "id": 1737583, "node_id": "MDQ6VXNlcjE3Mzc1ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1737583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathangray", "html_url": "https://github.com/jonathangray", "followers_url": "https://api.github.com/users/jonathangray/followers", "following_url": "https://api.github.com/users/jonathangray/following{/other_user}", "gists_url": "https://api.github.com/users/jonathangray/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathangray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathangray/subscriptions", "organizations_url": "https://api.github.com/users/jonathangray/orgs", "repos_url": "https://api.github.com/users/jonathangray/repos", "events_url": "https://api.github.com/users/jonathangray/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathangray/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ffaf6f258a248a8c90267455c0e681ac1fb5345c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffaf6f258a248a8c90267455c0e681ac1fb5345c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffaf6f258a248a8c90267455c0e681ac1fb5345c"}], "stats": {"total": 214, "additions": 121, "deletions": 93}, "files": [{"sha": "b62d1e1f9b427bb28b0a707271aba45e4ccf28e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa58f943d88dfcb1d0d7609b62079269e318cf1d", "patch": "@@ -1,3 +1,15 @@\n+2009-09-19  Jonathan Gray <jsg@openbsd.org>\n+\n+\t* config.gcc: Update OpenBSD targets.\n+\t* config/openbsd-stdint.h: New file.\n+\t* config/openbsd-libpthread.h: New file.\n+\t* config/openbsd.h: Update and break out LIB_SPEC definition.\n+\t* config/alpha/openbsd.h: Overhaul to reflect ELF migration.\n+\t* config/i386/openbsdelf.h: Correct types.\n+\t* config/m68k/openbsd.h: Likewise.\n+\t* config/mips/openbsd.h: Likewise.\n+\t* config/vax/openbsd.h: Likewise.\n+\n 2009-09-27  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* fold-const.c (maybe_lvalue_p): Return false for M(IN|AX)_EXPR."}, {"sha": "89996f58c710de6df608c17e9806a38dd735b498", "filename": "gcc/config.gcc", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=aa58f943d88dfcb1d0d7609b62079269e318cf1d", "patch": "@@ -632,11 +632,11 @@ alpha*-*-netbsd*)\n \ttmake_file=\"${tmake_file} alpha/t-alpha alpha/t-ieee\"\n \t;;\n alpha*-*-openbsd*)\n-\ttm_defines=\"${tm_defines} OBSD_NO_DYNAMIC_LIBRARIES OBSD_HAS_DECLARE_FUNCTION_NAME OBSD_HAS_DECLARE_FUNCTION_SIZE OBSD_HAS_DECLARE_OBJECT\"\n-\ttm_file=\"alpha/alpha.h openbsd.h alpha/openbsd.h\"\n+\ttm_defines=\"${tm_defines} OBSD_HAS_DECLARE_FUNCTION_NAME OBSD_HAS_DECLARE_FUNCTION_SIZE OBSD_HAS_DECLARE_OBJECT\"\n+\ttm_file=\"alpha/alpha.h alpha/elf.h openbsd.h openbsd-stdint.h alpha/openbsd.h openbsd-libpthread.h\"\n \t# default x-alpha is only appropriate for dec-osf.\n \ttarget_cpu_default=\"MASK_GAS\"\n-\ttmake_file=\"alpha/t-alpha alpha/t-ieee\"\n+\ttmake_file=\"${tmake_file} alpha/t-alpha alpha/t-ieee\"\n \t;;\n alpha*-dec-osf[45]*)\n \tif test x$stabs = xyes\n@@ -1120,7 +1120,7 @@ i[34567]86-*-openbsd2.*|i[34567]86-*openbsd3.[0123])\n \t;;\n i[34567]86-*-openbsd*)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h\"\n-\ttm_file=\"${tm_file} openbsd.h i386/openbsdelf.h\"\n+\ttm_file=\"${tm_file} openbsd.h openbsd-stdint.h openbsd-libpthread.h i386/openbsdelf.h\"\n \tgas=yes\n \tgnu_ld=yes\n \t;;\n@@ -1561,7 +1561,7 @@ m68k*-*-openbsd*)\n \tdefault_cf_cpu=5475\n \t# needed to unconfuse gdb\n \ttm_defines=\"${tm_defines} OBSD_OLD_GAS\"\n-\ttm_file=\"${tm_file} openbsd.h m68k/openbsd.h\"\n+\ttm_file=\"${tm_file} openbsd.h openbsd-stdint.h openbsd-libpthread.h m68k/openbsd.h\"\n \ttmake_file=\"t-libc-ok t-openbsd m68k/t-openbsd\"\n \t# we need collect2 until our bug is fixed...\n \tuse_collect2=yes\n@@ -1699,7 +1699,7 @@ mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n mips*-*-openbsd*)\n \ttm_defines=\"${tm_defines} OBSD_HAS_DECLARE_FUNCTION_NAME OBSD_HAS_DECLARE_OBJECT OBSD_HAS_CORRECT_SPECS\"\n \ttarget_cpu_default=\"MASK_ABICALLS\"\n-\ttm_file=\"mips/mips.h openbsd.h mips/openbsd.h mips/sdb.h\"\n+\ttm_file=\"mips/mips.h openbsd.h openbsd-stdint.h openbsd-libpthread.h mips/openbsd.h mips/sdb.h\"\n \tcase ${target} in\n \tmips*el-*-openbsd*)\n \t    tm_defines=\"${tm_defines} TARGET_ENDIAN_DEFAULT=0\";;\n@@ -2301,7 +2301,8 @@ sparc-*-netbsdelf*)\n \textra_options=\"${extra_options} sparc/long-double-switch.opt\"\n \t;;\n sparc64-*-openbsd*)\n-\ttm_file=\"sparc/openbsd1-64.h ${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sparc/sp64-elf.h openbsd.h sparc/openbsd64.h\"\n+\ttm_file=\"sparc/openbsd1-64.h ${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sparc/sp64-elf.h\"\n+\ttm_file=\"${tm_file} openbsd.h openbsd-stdint.h openbsd-libpthread.h sparc/openbsd64.h\"\n \textra_options=\"${extra_options} sparc/little-endian.opt\"\n \tgas=yes gnu_ld=yes\n \twith_cpu=ultrasparc\n@@ -2511,7 +2512,7 @@ vax-*-netbsd*)\n \tuse_collect2=yes\n \t;;\n vax-*-openbsd*)\n-\ttm_file=\"vax/vax.h vax/openbsd1.h openbsd.h vax/openbsd.h\"\n+\ttm_file=\"vax/vax.h vax/openbsd1.h openbsd.h openbsd-stdint.h openbsd-pthread.h vax/openbsd.h\"\n \tuse_collect2=yes\n \t;;\n xstormy16-*-elf)"}, {"sha": "8efbaf5f4af53a08d7e76e840186ceb2a09adc7f", "filename": "gcc/config/alpha/openbsd.h", "status": "modified", "additions": 2, "deletions": 55, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2Fconfig%2Falpha%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2Fconfig%2Falpha%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fopenbsd.h?ref=aa58f943d88dfcb1d0d7609b62079269e318cf1d", "patch": "@@ -17,23 +17,13 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-/* We settle for little endian for now.  */\n-#define TARGET_ENDIAN_DEFAULT 0\n-\n /* Controlling the compilation driver.  */\n \n-/* alpha needs __start.  */\n-#undef LINK_SPEC\n-#define LINK_SPEC \\\n-  \"%{!nostdlib:%{!r*:%{!e*:-e __start}}} -dc -dp %{assert*}\"\n-\n /* run-time target specifications */\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n     do {\t\t\t\t\t\\\n-\tbuiltin_define (\"__OpenBSD__\");\t\t\\\n-\tbuiltin_define (\"__ANSI_COMPAT\");\t\\\n-\tbuiltin_define (\"__unix__\");\t\t\\\n-\tbuiltin_assert (\"system=unix\");\t\t\\\n+\tOPENBSD_OS_CPP_BUILTINS_ELF();\t\t\\\n+\tOPENBSD_OS_CPP_BUILTINS_LP64();\t\t\\\n     } while (0)\n \n /* Layout of source language data types.  */\n@@ -52,47 +42,4 @@ along with GCC; see the file COPYING3.  If not see\n #define WCHAR_TYPE_SIZE 32\n \n \f\n-#undef PREFERRED_DEBUGGING_TYPE\n-#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n-\n #define LOCAL_LABEL_PREFIX\t\".\"\n-\n-/* We don't have an init section yet.  */\n-#undef HAS_INIT_SECTION\n-\n-/* collect2 support (assembler format: macros for initialization).  */\n-\n-/* Don't tell collect2 we use COFF as we don't have (yet ?) a dynamic ld\n-   library with the proper functions to handle this -> collect2 will\n-   default to using nm.  */\n-#undef OBJECT_FORMAT_COFF\n-#undef EXTENDED_COFF\n-\n-/* Assembler format: exception region output.  */\n-\n-/* All configurations that don't use elf must be explicit about not using\n-   dwarf unwind information.  */\n-#ifdef INCOMING_RETURN_ADDR_RTX\n-#undef DWARF2_UNWIND_INFO\n-#define DWARF2_UNWIND_INFO 0\n-#endif\n-\n-/* Assembler format: label output.  */\n-\n-/* alpha ecoff supports only weak aliases.  */\n-#undef ASM_WEAKEN_LABEL\n-#define ASM_WEAKEN_LABEL(FILE,NAME) ASM_OUTPUT_WEAK_ALIAS (FILE,NAME,0)\n-\n-#define ASM_OUTPUT_WEAK_ALIAS(FILE,NAME,VALUE)\t\\\n- do {\t\t\t\t\t\t\\\n-  fputs (\"\\t.weakext\\t\", FILE);\t\t\t\\\n-  assemble_name (FILE, NAME);\t\t\t\\\n-  if (VALUE)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-      fputs (\" , \", FILE);\t\t\t\\\n-      assemble_name (FILE, VALUE);\t\t\\\n-    }\t\t\t\t\t\t\\\n-  fputc ('\\n', FILE);\t\t\t\t\\\n- } while (0)\n-\n-"}, {"sha": "d3728352b58f9625d28016c86ed94ea7e1845063", "filename": "gcc/config/i386/openbsdelf.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2Fconfig%2Fi386%2Fopenbsdelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2Fconfig%2Fi386%2Fopenbsdelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fopenbsdelf.h?ref=aa58f943d88dfcb1d0d7609b62079269e318cf1d", "patch": "@@ -55,17 +55,20 @@ along with GCC; see the file COPYING3.  If not see\n \n /* This must agree with <machine/ansi.h> */\n #undef SIZE_TYPE\n-#define SIZE_TYPE \"unsigned int\"\n+#define SIZE_TYPE \"long unsigned int\"\n \n #undef PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \"int\"\n+#define PTRDIFF_TYPE \"long int\"\n \n #undef WCHAR_TYPE\n #define WCHAR_TYPE \"int\"\n \n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE BITS_PER_WORD\n \n+#undef WINT_TYPE\n+#define WINT_TYPE \"int\"\n+\n /* Assembler format: overall framework.  */\n \n #undef ASM_APP_ON"}, {"sha": "b2ff062ea34c3c8c757fd98d9818d115112b7318", "filename": "gcc/config/m68k/openbsd.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2Fconfig%2Fm68k%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2Fconfig%2Fm68k%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fopenbsd.h?ref=aa58f943d88dfcb1d0d7609b62079269e318cf1d", "patch": "@@ -42,17 +42,20 @@ along with GCC; see the file COPYING3.  If not see\n \n /* This must agree with <machine/ansi.h> */\n #undef SIZE_TYPE\n-#define SIZE_TYPE \"unsigned int\"\n+#define SIZE_TYPE \"long unsigned int\"\n \n #undef PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \"int\"\n+#define PTRDIFF_TYPE \"long int\"\n \n #undef WCHAR_TYPE\n #define WCHAR_TYPE \"int\"\n \n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n \n+#undef WINT_TYPE\n+#define WINT_TYPE \"int\"\n+\n /* Storage layout.  */\n \n /* Every structure or union's size must be a multiple of 2 bytes.  */"}, {"sha": "2cf7fbcd885b0679d477cd27aa5d44e28698f007", "filename": "gcc/config/mips/openbsd.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2Fconfig%2Fmips%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2Fconfig%2Fmips%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fopenbsd.h?ref=aa58f943d88dfcb1d0d7609b62079269e318cf1d", "patch": "@@ -57,17 +57,20 @@ along with GCC; see the file COPYING3.  If not see\n \n /* This must agree with <machine/ansi.h>.  */\n #undef SIZE_TYPE\n-#define SIZE_TYPE \"unsigned int\"\n+#define SIZE_TYPE \"long unsigned int\"\n \n #undef PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \"int\"\n+#define PTRDIFF_TYPE \"long int\"\n \n #undef WCHAR_TYPE\n #define WCHAR_TYPE \"int\"\n \n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n \n+#undef WINT_TYPE\n+#define WINT_TYPE \"int\"\n+\n /* Controlling the compilation driver.  */\n \n /* LINK_SPEC appropriate for OpenBSD:  support for GCC options"}, {"sha": "104e64528d813888d66790e160a53f4467753539", "filename": "gcc/config/openbsd-libpthread.h", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2Fconfig%2Fopenbsd-libpthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2Fconfig%2Fopenbsd-libpthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fopenbsd-libpthread.h?ref=aa58f943d88dfcb1d0d7609b62079269e318cf1d", "patch": "@@ -0,0 +1,22 @@\n+/* LIB_SPEC appropriate for OpenBSD.  Include -lpthread if -pthread is\n+   specified on the command line. */\n+/*   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#define OBSD_LIB_SPEC \"%{!shared:%{pthread:-lpthread} -lc}\"\n+"}, {"sha": "de36455393c62b6b264a8e63fdfaf184d0e6a6c6", "filename": "gcc/config/openbsd-stdint.h", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2Fconfig%2Fopenbsd-stdint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2Fconfig%2Fopenbsd-stdint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fopenbsd-stdint.h?ref=aa58f943d88dfcb1d0d7609b62079269e318cf1d", "patch": "@@ -0,0 +1,31 @@\n+#define SIG_ATOMIC_TYPE\t\t\"int\"\n+ \n+#define INT8_TYPE\t\t\"signed char\"\n+#define INT16_TYPE\t\t\"short int\"\n+#define INT32_TYPE\t\t\"int\"\n+#define INT64_TYPE\t\t\"long long int\"\n+#define UINT8_TYPE\t\t\"unsigned char\"\n+#define UINT16_TYPE\t\t\"unsigned short int\"\n+#define UINT32_TYPE\t\t\"unsigned int\"\n+#define UINT64_TYPE\t\t\"unsigned long long int\"\n+ \n+#define INT_LEAST8_TYPE\t\t\"signed char\"\n+#define INT_LEAST16_TYPE\t\"short int\"\n+#define INT_LEAST32_TYPE\t\"int\"\n+#define INT_LEAST64_TYPE\t\"long long int\"\n+#define UINT_LEAST8_TYPE\t\"unsigned char\"\n+#define UINT_LEAST16_TYPE\t\"unsigned short int\"\n+#define UINT_LEAST32_TYPE\t\"unsigned int\"\n+#define UINT_LEAST64_TYPE\t\"unsigned long long int\"\n+ \n+#define INT_FAST8_TYPE\t\t\"int\"\n+#define INT_FAST16_TYPE\t\t\"int\"\n+#define INT_FAST32_TYPE\t\t\"int\"\n+#define INT_FAST64_TYPE\t\t\"long long int\"\n+#define UINT_FAST8_TYPE\t\t\"unsigned int\"\n+#define UINT_FAST16_TYPE\t\"unsigned int\"\n+#define UINT_FAST32_TYPE\t\"unsigned int\"\n+#define UINT_FAST64_TYPE\t\"unsigned long long int\"\n+ \n+#define INTPTR_TYPE\t\t\"long int\"\n+#define UINTPTR_TYPE\t\t\"unsigned long int\""}, {"sha": "59728c377d6c6a27f4b79298bc81bf7990fb8399", "filename": "gcc/config/openbsd.h", "status": "modified", "additions": 25, "deletions": 22, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2Fconfig%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2Fconfig%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fopenbsd.h?ref=aa58f943d88dfcb1d0d7609b62079269e318cf1d", "patch": "@@ -84,6 +84,24 @@ along with GCC; see the file COPYING3.  If not see\n     }\t\t\t\t\t\t\\\n   while (0)\n \n+/* TARGET_OS_CPP_BUILTINS() common to all OpenBSD ELF targets.  */\n+#define OPENBSD_OS_CPP_BUILTINS_ELF()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      OPENBSD_OS_CPP_BUILTINS();\t\t\\\n+      builtin_define (\"__ELF__\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+while (0)\n+\n+/* TARGET_OS_CPP_BUILTINS() common to all LP64 OpenBSD targets.  */\n+#define OPENBSD_OS_CPP_BUILTINS_LP64()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      builtin_define (\"_LP64\");\t\t\t\\\n+      builtin_define (\"__LP64__\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n+\n /* CPP_SPEC appropriate for OpenBSD. We deal with -posix and -pthread.\n    XXX the way threads are handled currently is not very satisfying,\n    since all code must be compiled with -pthread to work. \n@@ -95,15 +113,8 @@ along with GCC; see the file COPYING3.  If not see\n #define OBSD_CPP_SPEC \"%{posix:-D_POSIX_SOURCE} %{pthread:-D_POSIX_THREADS}\"\n #endif\n \n-/* LIB_SPEC appropriate for OpenBSD.  */\n-#ifdef HAS_LIBC_R\n-/*   -lc(_r)?(_p)?, select _r for threads, and _p for p or pg.  */\n-# define OBSD_LIB_SPEC \"%{!shared:-lc%{pthread:_r}%{p:_p}%{!p:%{pg:_p}}}\"\n-#else\n-/* Include -lpthread if -pthread is specified on the command line. */\n-# define OBSD_LIB_SPEC \"%{!shared:%{pthread:-lpthread%{p:_p}%{!p:%{pg:_p}}}} %{!shared:-lc%{p:_p}%{!p:%{pg:_p}}}\"\n-#endif\n-\n+#undef LIB_SPEC\n+#define LIB_SPEC OBSD_LIB_SPEC\n \n #ifndef OBSD_HAS_CORRECT_SPECS\n \n@@ -128,15 +139,11 @@ along with GCC; see the file COPYING3.  If not see\n /* Since we use gas, stdin -> - is a good idea.  */\n #define AS_NEEDS_DASH_FOR_PIPED_INPUT\n \n-/* LINK_SPEC appropriate for OpenBSD.  Support for GCC options \n-   -static, -assert, and -nostdlib.  */\n-#undef LINK_SPEC\n-#ifdef OBSD_NO_DYNAMIC_LIBRARIES\n-#define LINK_SPEC \\\n-  \"%{g:%{!nostdlib:-L/usr/lib/debug}} %{!nostdlib:%{!r*:%{!e*:-e start}}} -dc -dp %{assert*}\"\n-#else\n-#define LINK_SPEC \\\n-  \"%{g:%{!nostdlib:-L/usr/lib/debug}} %{!shared:%{!nostdlib:%{!r*:%{!e*:-e start}}}} %{shared:-Bshareable -x} -dc -dp %{R*} %{static:-Bstatic} %{assert*}\"\n+#undef LIB_SPEC\n+#define LIB_SPEC OBSD_LIB_SPEC\n+\n+#if defined(HAVE_LD_EH_FRAME_HDR)\n+#define LINK_EH_SPEC \"%{!static:--eh-frame-hdr} \"\n #endif\n \n #undef LIB_SPEC\n@@ -281,10 +288,6 @@ do {\t\t\t\t\t\t\t\t\t \\\n /* Storage layout.  */\n \n \f\n-/* Otherwise, since we support weak, gthr.h erroneously tries to use\n-   #pragma weak.  */\n-#define GTHREAD_USE_WEAK 0\n-\n /* bug work around: we don't want to support #pragma weak, but the current\n    code layout needs HANDLE_PRAGMA_WEAK asserted for __attribute((weak)) to\n    work.  On the other hand, we don't define HANDLE_PRAGMA_WEAK directly,"}, {"sha": "cdff4ca828c8405c945fd4e16bee20eb1f8b7ed3", "filename": "gcc/config/vax/openbsd.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2Fconfig%2Fvax%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa58f943d88dfcb1d0d7609b62079269e318cf1d/gcc%2Fconfig%2Fvax%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fopenbsd.h?ref=aa58f943d88dfcb1d0d7609b62079269e318cf1d", "patch": "@@ -33,13 +33,16 @@ along with GCC; see the file COPYING3.  If not see\n \n /* This must agree with <machine/ansi.h>  */\n #undef SIZE_TYPE\n-#define SIZE_TYPE \"unsigned int\"\n+#define SIZE_TYPE \"long unsigned int\"\n \n #undef PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \"int\"\n+#define PTRDIFF_TYPE \"long int\"\n \n #undef WCHAR_TYPE\n #define WCHAR_TYPE \"int\"\n \n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n+\n+#undef WINT_TYPE\n+#define WINT_TYPE \"int\""}]}