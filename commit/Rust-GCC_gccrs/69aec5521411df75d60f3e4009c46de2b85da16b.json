{"sha": "69aec5521411df75d60f3e4009c46de2b85da16b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlhZWM1NTIxNDExZGY3NWQ2MGYzZTQwMDljNDZkZTJiODVkYTE2Yg==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2015-04-20T13:35:35Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2015-04-20T13:35:35Z"}, "message": "[Obvious][AArch64] Delete unused aarch64_simd_emit_pair_result_insn.\n\n        * config/aarch64/aarch64.c (aarch64_simd_emit_pair_result_insn): Delete.\n        * config/aarch64/aarch64-protos.h (aarch64_simd_emit_pair_result_insn):\n        Delete.\n\nFrom-SVN: r222234", "tree": {"sha": "d1012b74dd727637300e285dcdec4d2c34c0932f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1012b74dd727637300e285dcdec4d2c34c0932f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69aec5521411df75d60f3e4009c46de2b85da16b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69aec5521411df75d60f3e4009c46de2b85da16b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69aec5521411df75d60f3e4009c46de2b85da16b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69aec5521411df75d60f3e4009c46de2b85da16b/comments", "author": null, "committer": null, "parents": [{"sha": "38a4960f5d8ce30ce480e1a10fb56390861981e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38a4960f5d8ce30ce480e1a10fb56390861981e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38a4960f5d8ce30ce480e1a10fb56390861981e5"}], "stats": {"total": 30, "additions": 6, "deletions": 24}, "files": [{"sha": "a34e846c14c355351907aeaa460212cb8f20352c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69aec5521411df75d60f3e4009c46de2b85da16b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69aec5521411df75d60f3e4009c46de2b85da16b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69aec5521411df75d60f3e4009c46de2b85da16b", "patch": "@@ -1,3 +1,9 @@\n+2015-04-20  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_simd_emit_pair_result_insn): Delete.\n+\t* config/aarch64/aarch64-protos.h (aarch64_simd_emit_pair_result_insn):\n+\tDelete.\n+\n 2015-04-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/65807"}, {"sha": "8676c5c9c85d82f05e8c63e27f29d1e244ac7104", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69aec5521411df75d60f3e4009c46de2b85da16b/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69aec5521411df75d60f3e4009c46de2b85da16b/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=69aec5521411df75d60f3e4009c46de2b85da16b", "patch": "@@ -264,12 +264,6 @@ void init_aarch64_simd_builtins (void);\n \n void aarch64_simd_emit_reg_reg_move (rtx *, enum machine_mode, unsigned int);\n \n-/* Emit code to place a AdvSIMD pair result in memory locations (with equal\n-   registers).  */\n-void aarch64_simd_emit_pair_result_insn (machine_mode,\n-\t\t\t\t\t rtx (*intfn) (rtx, rtx, rtx), rtx,\n-\t\t\t\t\t rtx);\n-\n /* Expand builtins for SIMD intrinsics.  */\n rtx aarch64_simd_expand_builtin (int, tree, rtx);\n "}, {"sha": "77a641e34ec895f7690e5150f314cfd3ce6db567", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69aec5521411df75d60f3e4009c46de2b85da16b/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69aec5521411df75d60f3e4009c46de2b85da16b/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=69aec5521411df75d60f3e4009c46de2b85da16b", "patch": "@@ -8569,24 +8569,6 @@ aarch64_simd_lane_bounds (rtx operand, HOST_WIDE_INT low, HOST_WIDE_INT high,\n   }\n }\n \n-/* Emit code to place a AdvSIMD pair result in memory locations (with equal\n-   registers).  */\n-void\n-aarch64_simd_emit_pair_result_insn (machine_mode mode,\n-\t\t\t    rtx (*intfn) (rtx, rtx, rtx), rtx destaddr,\n-                            rtx op1)\n-{\n-  rtx mem = gen_rtx_MEM (mode, destaddr);\n-  rtx tmp1 = gen_reg_rtx (mode);\n-  rtx tmp2 = gen_reg_rtx (mode);\n-\n-  emit_insn (intfn (tmp1, op1, tmp2));\n-\n-  emit_move_insn (mem, tmp1);\n-  mem = adjust_address (mem, mode, GET_MODE_SIZE (mode));\n-  emit_move_insn (mem, tmp2);\n-}\n-\n /* Return TRUE if OP is a valid vector addressing mode.  */\n bool\n aarch64_simd_mem_operand_p (rtx op)"}]}