{"sha": "216e83748d52d0bb056dd6b46ea74a14b08c7639", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE2ZTgzNzQ4ZDUyZDBiYjA1NmRkNmI0NmVhNzRhMTRiMDhjNzYzOQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2016-05-20T12:59:08Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2016-05-20T12:59:08Z"}, "message": "loop-doloop.c (doloop_optimize): Use get_estimated_loop_iterations_int and get_max_loop_iterations_int.\n\n\t* loop-doloop.c (doloop_optimize): Use get_estimated_loop_iterations_int\n\tand get_max_loop_iterations_int.\n\nFrom-SVN: r236509", "tree": {"sha": "68f6b8fbb27234c91e8d52822750ef532246bd69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68f6b8fbb27234c91e8d52822750ef532246bd69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/216e83748d52d0bb056dd6b46ea74a14b08c7639", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/216e83748d52d0bb056dd6b46ea74a14b08c7639", "html_url": "https://github.com/Rust-GCC/gccrs/commit/216e83748d52d0bb056dd6b46ea74a14b08c7639", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/216e83748d52d0bb056dd6b46ea74a14b08c7639/comments", "author": null, "committer": null, "parents": [{"sha": "77c9d5b4e6e5d9b2da11249168211a45d2e716c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77c9d5b4e6e5d9b2da11249168211a45d2e716c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77c9d5b4e6e5d9b2da11249168211a45d2e716c8"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "021f64e5bd8c0b6690288e8ea7b7a93d5e737657", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/216e83748d52d0bb056dd6b46ea74a14b08c7639/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/216e83748d52d0bb056dd6b46ea74a14b08c7639/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=216e83748d52d0bb056dd6b46ea74a14b08c7639", "patch": "@@ -1,3 +1,8 @@\n+2016-05-20  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* loop-doloop.c (doloop_optimize): Use get_estimated_loop_iterations_int\n+\tand get_max_loop_iterations_int.\n+\n 2016-05-20  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* tree-ssa-loop-niter.c (idx_infer_loop_bounds): We can not produce"}, {"sha": "6996c0bc0ef5b156fcf90d94116d3ea9d76cba6b", "filename": "gcc/loop-doloop.c", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/216e83748d52d0bb056dd6b46ea74a14b08c7639/gcc%2Floop-doloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/216e83748d52d0bb056dd6b46ea74a14b08c7639/gcc%2Floop-doloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-doloop.c?ref=216e83748d52d0bb056dd6b46ea74a14b08c7639", "patch": "@@ -610,7 +610,8 @@ doloop_optimize (struct loop *loop)\n   widest_int iterations, iterations_max;\n   rtx_code_label *start_label;\n   rtx condition;\n-  unsigned level, est_niter;\n+  unsigned level;\n+  HOST_WIDE_INT est_niter;\n   int max_cost;\n   struct niter_desc *desc;\n   unsigned word_mode_size;\n@@ -635,21 +636,16 @@ doloop_optimize (struct loop *loop)\n     }\n   mode = desc->mode;\n \n-  est_niter = 3;\n-  if (desc->const_iter)\n-    est_niter = desc->niter;\n-  /* If the estimate on number of iterations is reliable (comes from profile\n-     feedback), use it.  Do not use it normally, since the expected number\n-     of iterations of an unrolled loop is 2.  */\n-  if (loop->header->count)\n-    est_niter = expected_loop_iterations (loop);\n-\n-  if (est_niter < 3)\n+  est_niter = get_estimated_loop_iterations_int (loop);\n+  if (est_niter == -1)\n+    est_niter = get_max_loop_iterations_int (loop);\n+\n+  if (est_niter >= 0 && est_niter < 3)\n     {\n       if (dump_file)\n \tfprintf (dump_file,\n \t\t \"Doloop: Too few iterations (%u) to be profitable.\\n\",\n-\t\t est_niter);\n+\t\t (unsigned int)est_niter);\n       return false;\n     }\n "}]}