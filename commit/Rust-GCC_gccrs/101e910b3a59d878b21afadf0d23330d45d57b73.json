{"sha": "101e910b3a59d878b21afadf0d23330d45d57b73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAxZTkxMGIzYTU5ZDg3OGIyMWFmYWRmMGQyMzMzMGQ0NWQ1N2I3Mw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-11-13T15:32:34Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-11-13T15:32:34Z"}, "message": "[Diagnostic Patch] don't print column zero\n\nhttps://gcc.gnu.org/ml/gcc-patches/2017-10/msg01911.html\n\t* diagnostic.c (maybe_line_and_column): New.\n\t(diagnostic_get_location_text): Use it.\n\t(diagnostic_report_current_module): Likewise.\n\t(test_diagnostic_get_location_text): Add tests.\n\n\t* lib/gcc-dg.exp (process-message): Use -: for no column.\n\t* c-c++-common/cilk-plus/CK/cilk_for_grain_errors.c: Mark elided\n\tcolumn messages.\n\t* c-c++-common/cpp/pr58844-1.c: Likewise.\n\t* c-c++-common/cpp/pr58844-2.c: Likewise.\n\t* c-c++-common/cpp/warning-zero-location.c: Likewise.\n\t* g++.dg/diagnostic/pr77949.C: Likewise.\n\t* g++.dg/gomp/macro-4.C: Likewise.\n\t* gcc.dg/Wunknownprag.c: Likewise.\n\t* gcc.dg/builtin-redefine.c: Likewise.\n\t* gcc.dg/cpp/Wunknown-pragmas-1.c: Likewise.\n\t* gcc.dg/cpp/Wunused.c: Likewise.\n\t* gcc.dg/cpp/misspelled-directive-1.c: Likewise.\n\t* gcc.dg/cpp/redef2.c: Likewise.\n\t* gcc.dg/cpp/redef3.c: Likewise.\n\t* gcc.dg/cpp/redef4.c: Likewise.\n\t* gcc.dg/cpp/trad/Wunused.c: Likewise.\n\t* gcc.dg/cpp/trad/argcount.c: Likewise.\n\t* gcc.dg/cpp/trad/comment-3.c: Likewise.\n\t* gcc.dg/cpp/trad/comment.c: Likewise.\n\t* gcc.dg/cpp/trad/defined.c: Likewise.\n\t* gcc.dg/cpp/trad/directive.c: Likewise.\n\t* gcc.dg/cpp/trad/funlike-3.c: Likewise.\n\t* gcc.dg/cpp/trad/funlike.c: Likewise.\n\t* gcc.dg/cpp/trad/literals-2.c: Likewise.\n\t* gcc.dg/cpp/trad/macro.c: Likewise.\n\t* gcc.dg/cpp/trad/pr65238-4.c: Likewise.\n\t* gcc.dg/cpp/trad/recurse-1.c: Likewise.\n\t* gcc.dg/cpp/trad/recurse-2.c: Likewise.\n\t* gcc.dg/cpp/trad/redef2.c: Likewise.\n\t* gcc.dg/cpp/ucnid-11.c: Likewise.\n\t* gcc.dg/cpp/unc1.c: Likewise.\n\t* gcc.dg/cpp/unc2.c: Likewise.\n\t* gcc.dg/cpp/unc3.c: Likewise.\n\t* gcc.dg/cpp/unc4.c: Likewise.\n\t* gcc.dg/cpp/undef2.c: Likewise.\n\t* gcc.dg/cpp/warn-redefined-2.c: Likewise.\n\t* gcc.dg/cpp/warn-redefined.c: Likewise.\n\t* gcc.dg/cpp/warn-unused-macros-2.c: Likewise.\n\t* gcc.dg/cpp/warn-unused-macros.c: Likewise.\n\t* gcc.dg/empty-source-2.c: Likewise.\n\t* gcc.dg/empty-source-3.c: Likewise.\n\t* gcc.dg/gomp/macro-4.c: Likewise.\n\t* gcc.dg/noncompile/pr35447-1.c: Likewise.\n\t* gcc.dg/plugin/location-overflow-test-1.c: Likewise.\n\t* gcc.dg/pr20245-1.c: Likewise.\n\t* gcc.dg/pr28419.c: Likewise.\n\t* gcc.dg/rtl/truncated-rtl-file.c: Likewise.\n\t* gcc.dg/unclosed-init.c: Likewise.\n\nFrom-SVN: r254691", "tree": {"sha": "3e25421923a0a38b77ceb7eb0be88159d7a33931", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e25421923a0a38b77ceb7eb0be88159d7a33931"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/101e910b3a59d878b21afadf0d23330d45d57b73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/101e910b3a59d878b21afadf0d23330d45d57b73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/101e910b3a59d878b21afadf0d23330d45d57b73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/101e910b3a59d878b21afadf0d23330d45d57b73/comments", "author": null, "committer": null, "parents": [{"sha": "7ccdf51f87eb837a3b9e086b5ef07c0b150a980f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ccdf51f87eb837a3b9e086b5ef07c0b150a980f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ccdf51f87eb837a3b9e086b5ef07c0b150a980f"}], "stats": {"total": 958, "additions": 520, "deletions": 438}, "files": [{"sha": "316bd020c072214f06b90bf12a1f46b97cdb2db8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -1,3 +1,10 @@\n+2017-11-13  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* diagnostic.c (maybe_line_and_column): New.\n+\t(diagnostic_get_location_text): Use it.\n+\t(diagnostic_report_current_module): Likewise.\n+\t(test_diagnostic_get_location_text): Add tests.\n+\n 2017-11-13  Luis Machado  <luis.machado@linaro.org>\n \n \t* doc/md.texi (Specifying processor pipeline description): Fix"}, {"sha": "86201333d0067db24de85d1e9e9eaed7127bbad5", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 42, "deletions": 23, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -291,6 +291,25 @@ diagnostic_get_color_for_kind (diagnostic_t kind)\n   return diagnostic_kind_color[kind];\n }\n \n+/* Return a formatted line and column ':%line:%column'.  Elided if\n+   zero.  The result is a statically allocated buffer.  */\n+\n+static const char *\n+maybe_line_and_column (int line, int col)\n+{\n+  static char result[32];\n+\n+  if (line)\n+    {\n+      size_t l = snprintf (result, sizeof (result),\n+\t\t\t   col ? \":%d:%d\" : \":%d\", line, col);\n+      gcc_checking_assert (l < sizeof (result));\n+    }\n+  else\n+    result[0] = 0;\n+  return result;\n+}\n+\n /* Return a malloc'd string describing a location e.g. \"foo.c:42:10\".\n    The caller is responsible for freeing the memory.  */\n \n@@ -301,19 +320,13 @@ diagnostic_get_location_text (diagnostic_context *context,\n   pretty_printer *pp = context->printer;\n   const char *locus_cs = colorize_start (pp_show_color (pp), \"locus\");\n   const char *locus_ce = colorize_stop (pp_show_color (pp));\n+  const char *file = s.file ? s.file : progname;\n+  int line = strcmp (file, N_(\"<built-in>\")) ? s.line : 0;\n+  int col = context->show_column ? s.column : 0;\n \n-  if (s.file == NULL)\n-    return build_message_string (\"%s%s:%s\", locus_cs, progname, locus_ce);\n-\n-  if (!strcmp (s.file, N_(\"<built-in>\")))\n-    return build_message_string (\"%s%s:%s\", locus_cs, s.file, locus_ce);\n-\n-  if (context->show_column)\n-    return build_message_string (\"%s%s:%d:%d:%s\", locus_cs, s.file, s.line,\n-\t\t\t\t s.column, locus_ce);\n-  else\n-    return build_message_string (\"%s%s:%d:%s\", locus_cs, s.file, s.line,\n-\t\t\t\t locus_ce);\n+  const char *line_col = maybe_line_and_column (line, col);\n+  return build_message_string (\"%s%s%s:%s\", locus_cs, file,\n+\t\t\t       line_col, locus_ce);\n }\n \n /* Return a malloc'd string describing a location and the severity of the\n@@ -575,21 +588,20 @@ diagnostic_report_current_module (diagnostic_context *context, location_t where)\n       if (! MAIN_FILE_P (map))\n \t{\n \t  map = INCLUDED_FROM (line_table, map);\n-\t  if (context->show_column)\n-\t    pp_verbatim (context->printer,\n-\t\t\t \"In file included from %r%s:%d:%d%R\", \"locus\",\n-\t\t\t LINEMAP_FILE (map),\n-\t\t\t LAST_SOURCE_LINE (map), LAST_SOURCE_COLUMN (map));\n-\t  else\n-\t    pp_verbatim (context->printer,\n-\t\t\t \"In file included from %r%s:%d%R\", \"locus\",\n-\t\t\t LINEMAP_FILE (map), LAST_SOURCE_LINE (map));\n+\t  const char *line_col\n+\t    = maybe_line_and_column (LAST_SOURCE_LINE (map),\n+\t\t\t\t     context->show_column\n+\t\t\t\t     ? LAST_SOURCE_COLUMN (map) : 0);\n+\t  pp_verbatim (context->printer,\n+\t\t       \"In file included from %r%s%s%R\", \"locus\",\n+\t\t       LINEMAP_FILE (map), line_col);\n \t  while (! MAIN_FILE_P (map))\n \t    {\n \t      map = INCLUDED_FROM (line_table, map);\n+\t      line_col = maybe_line_and_column (LAST_SOURCE_LINE (map), 0);\n \t      pp_verbatim (context->printer,\n-\t\t\t   \",\\n                 from %r%s:%d%R\", \"locus\",\n-\t\t\t   LINEMAP_FILE (map), LAST_SOURCE_LINE (map));\n+\t\t\t   \",\\n                 from %r%s%s%R\", \"locus\",\n+\t\t\t   LINEMAP_FILE (map), line_col);\n \t    }\n \t  pp_verbatim (context->printer, \":\");\n \t  pp_newline (context->printer);\n@@ -1663,7 +1675,14 @@ test_diagnostic_get_location_text ()\n   assert_location_text (\"PROGNAME:\", NULL, 0, 0, true);\n   assert_location_text (\"<built-in>:\", \"<built-in>\", 42, 10, true);\n   assert_location_text (\"foo.c:42:10:\", \"foo.c\", 42, 10, true);\n+  assert_location_text (\"foo.c:42:\", \"foo.c\", 42, 0, true);\n+  assert_location_text (\"foo.c:\", \"foo.c\", 0, 10, true);\n   assert_location_text (\"foo.c:42:\", \"foo.c\", 42, 10, false);\n+  assert_location_text (\"foo.c:\", \"foo.c\", 0, 10, false);\n+\n+  maybe_line_and_column (INT_MAX, INT_MAX);\n+  maybe_line_and_column (INT_MIN, INT_MIN);\n+\n   progname = old_progname;\n }\n "}, {"sha": "e887d3e55c4b9295873f704a221886ba6f053cdc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 53, "deletions": 1, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -1,6 +1,58 @@\n+2017-11-13  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* lib/gcc-dg.exp (process-message): Use -: for no column.\n+\t* c-c++-common/cilk-plus/CK/cilk_for_grain_errors.c: Mark elided\n+\tcolumn messages.\n+\t* c-c++-common/cpp/pr58844-1.c: Likewise.\n+\t* c-c++-common/cpp/pr58844-2.c: Likewise.\n+\t* c-c++-common/cpp/warning-zero-location.c: Likewise.\n+\t* g++.dg/diagnostic/pr77949.C: Likewise.\n+\t* g++.dg/gomp/macro-4.C: Likewise.\n+\t* gcc.dg/Wunknownprag.c: Likewise.\n+\t* gcc.dg/builtin-redefine.c: Likewise.\n+\t* gcc.dg/cpp/Wunknown-pragmas-1.c: Likewise.\n+\t* gcc.dg/cpp/Wunused.c: Likewise.\n+\t* gcc.dg/cpp/misspelled-directive-1.c: Likewise.\n+\t* gcc.dg/cpp/redef2.c: Likewise.\n+\t* gcc.dg/cpp/redef3.c: Likewise.\n+\t* gcc.dg/cpp/redef4.c: Likewise.\n+\t* gcc.dg/cpp/trad/Wunused.c: Likewise.\n+\t* gcc.dg/cpp/trad/argcount.c: Likewise.\n+\t* gcc.dg/cpp/trad/comment-3.c: Likewise.\n+\t* gcc.dg/cpp/trad/comment.c: Likewise.\n+\t* gcc.dg/cpp/trad/defined.c: Likewise.\n+\t* gcc.dg/cpp/trad/directive.c: Likewise.\n+\t* gcc.dg/cpp/trad/funlike-3.c: Likewise.\n+\t* gcc.dg/cpp/trad/funlike.c: Likewise.\n+\t* gcc.dg/cpp/trad/literals-2.c: Likewise.\n+\t* gcc.dg/cpp/trad/macro.c: Likewise.\n+\t* gcc.dg/cpp/trad/pr65238-4.c: Likewise.\n+\t* gcc.dg/cpp/trad/recurse-1.c: Likewise.\n+\t* gcc.dg/cpp/trad/recurse-2.c: Likewise.\n+\t* gcc.dg/cpp/trad/redef2.c: Likewise.\n+\t* gcc.dg/cpp/ucnid-11.c: Likewise.\n+\t* gcc.dg/cpp/unc1.c: Likewise.\n+\t* gcc.dg/cpp/unc2.c: Likewise.\n+\t* gcc.dg/cpp/unc3.c: Likewise.\n+\t* gcc.dg/cpp/unc4.c: Likewise.\n+\t* gcc.dg/cpp/undef2.c: Likewise.\n+\t* gcc.dg/cpp/warn-redefined-2.c: Likewise.\n+\t* gcc.dg/cpp/warn-redefined.c: Likewise.\n+\t* gcc.dg/cpp/warn-unused-macros-2.c: Likewise.\n+\t* gcc.dg/cpp/warn-unused-macros.c: Likewise.\n+\t* gcc.dg/empty-source-2.c: Likewise.\n+\t* gcc.dg/empty-source-3.c: Likewise.\n+\t* gcc.dg/gomp/macro-4.c: Likewise.\n+\t* gcc.dg/noncompile/pr35447-1.c: Likewise.\n+\t* gcc.dg/plugin/location-overflow-test-1.c: Likewise.\n+\t* gcc.dg/pr20245-1.c: Likewise.\n+\t* gcc.dg/pr28419.c: Likewise.\n+\t* gcc.dg/rtl/truncated-rtl-file.c: Likewise.\n+\t* gcc.dg/unclosed-init.c: Likewise.\n+\n 2017-11-13  Charles Baylis  <charles.baylis@linaro.org>\n \n-        * gfortran.dg/ieee/ieee_8.f90: xfail for aarch64*-*-gnu*\n+\t* gfortran.dg/ieee/ieee_8.f90: xfail for aarch64*-*-gnu*\n \n 2017-11-13  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "bb72281120266b6f6288f67dd45d369e314c8a15", "filename": "gcc/testsuite/c-c++-common/cilk-plus/CK/cilk_for_grain_errors.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fcilk_for_grain_errors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fcilk_for_grain_errors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fcilk_for_grain_errors.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -18,7 +18,7 @@ int main(int argc, char **argv)\n   _Cilk_for (int ii = 0; ii < 10; ii++)\n     Array1[ii] = 0;\n \n-#pragma cilk grainsiz = 2 /* { dg-warning \"ignoring #pragma cilk grainsiz\" } */\n+#pragma cilk grainsiz = 2 /* { dg-warning \"-:ignoring #pragma cilk grainsiz\" } */\n   _Cilk_for (int ii = 0; ii < 10; ii++)\n     Array1[ii] = 0;\n "}, {"sha": "2a2e277b0fcbc6a672ea813d3923a1bb4dd83409", "filename": "gcc/testsuite/c-c++-common/cpp/pr58844-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr58844-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr58844-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr58844-1.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -4,5 +4,5 @@\n \n #define A x######x\n int A = 1;\n-#define A x######x\t/* { dg-message \"previous definition\" } */\n-#define A x##x\t\t/* { dg-warning \"redefined\" } */\n+#define A x######x\t/* { dg-message \"-:previous definition\" } */\n+#define A x##x\t\t/* { dg-warning \"-:redefined\" } */"}, {"sha": "52993b314be9599fccfa8922fa6ba309e699db51", "filename": "gcc/testsuite/c-c++-common/cpp/pr58844-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr58844-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr58844-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr58844-2.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -4,5 +4,5 @@\n \n #define A x######x\n int A = 1;\n-#define A x######x\t/* { dg-message \"previous definition\" } */\n-#define A x##x\t\t/* { dg-warning \"redefined\" } */\n+#define A x######x\t/* { dg-message \"-:previous definition\" } */\n+#define A x##x\t\t/* { dg-warning \"-:redefined\" } */"}, {"sha": "57544b6aff13b1c05d7f1a8b67fa5ae78b5b03a9", "filename": "gcc/testsuite/c-c++-common/cpp/warning-zero-location.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fwarning-zero-location.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fwarning-zero-location.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fwarning-zero-location.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -3,6 +3,6 @@\n    { dg-do compile }\n  */\n \n-#define _GNU_SOURCE \t/* { dg-warning \"redefined\" } */\n+#define _GNU_SOURCE \t/* { dg-warning \"-:redefined\" } */\n \n /* { dg-message \"\" \"#define _GNU_SOURCE\" {target *-*-* } 0 } */"}, {"sha": "b81d6e2bb46d989cebefc53a0e7fc9620e730c1d", "filename": "gcc/testsuite/g++.dg/diagnostic/pr77949.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fpr77949.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fpr77949.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fpr77949.C?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -4,4 +4,4 @@\n /* Very long line, where a missing semicolon would be suggested for\n    insertion at column 4097.  */\n class test {}   \n-// { dg-error \"0: expected .;. after class definition\" \"\" { target *-*-* } .-1 }\n+// { dg-error \"-: expected .;. after class definition\" \"\" { target *-*-* } .-1 }"}, {"sha": "6a69f1a3ca1cc53cd6ab8bb92a42870463d22dc6", "filename": "gcc/testsuite/g++.dg/gomp/macro-4.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fmacro-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fmacro-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fmacro-4.C?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -10,9 +10,9 @@ void bar (void);\n void\n foo (void)\n {\n-#pragma omp p\t\t// { dg-warning \"ignoring #pragma omp _Pragma\" }\n+#pragma omp p\t\t// { dg-warning \"-:ignoring #pragma omp _Pragma\" }\n     bar ();\n-  omp_p\t\t\t// { dg-warning \"ignoring #pragma omp _Pragma\" }\n+  omp_p\t\t\t// { dg-warning \"-:ignoring #pragma omp _Pragma\" }\n     bar ();\n }\n \n@@ -22,8 +22,8 @@ foo (void)\n void\n baz (void)\n {\n-#pragma omp parallel\t// { dg-warning \"ignoring #pragma omp serial\" }\n+#pragma omp parallel\t// { dg-warning \"-:ignoring #pragma omp serial\" }\n     bar ();\n-  omp_parallel\t\t// { dg-warning \"ignoring #pragma omp serial\" }\n+  omp_parallel\t\t// { dg-warning \"-:ignoring #pragma omp serial\" }\n     bar ();\n }"}, {"sha": "3514825a97e19e1c72638fd870e412e1c5594b33", "filename": "gcc/testsuite/gcc.dg/Wunknownprag.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2FWunknownprag.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2FWunknownprag.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWunknownprag.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -5,7 +5,7 @@\n \n /* We used to get \"unspellable token: CPP_EOF\" warnings.  */\n \n-#pragma\t\t\t\t/* { dg-warning \"ignoring #pragma\" } */\n-#pragma ~\t\t\t/* { dg-warning \"ignoring #pragma\" } */\n-#pragma baz\t\t\t/* { dg-warning \"ignoring #pragma\" } */\n-#pragma baz baz\t\t\t/* { dg-warning \"ignoring #pragma\" } */\n+#pragma\t\t\t\t/* { dg-warning \"-:ignoring #pragma\" } */\n+#pragma ~\t\t\t/* { dg-warning \"-:ignoring #pragma\" } */\n+#pragma baz\t\t\t/* { dg-warning \"-:ignoring #pragma\" } */\n+#pragma baz baz\t\t\t/* { dg-warning \"-:ignoring #pragma\" } */"}, {"sha": "882b2210992f488dac624336d75e4b1c12963c60", "filename": "gcc/testsuite/gcc.dg/builtin-redefine.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-redefine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-redefine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-redefine.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -27,8 +27,8 @@\n #define __TIME__ \"X\"         /* Define while undefined.  */\n #define __TIME__ \"X\"         /* Re-define while defined.  */ /* { dg-line time_prev } */\n \n-#define __TIME__ \"Y\"         /* { dg-warning \"\\\"__TIME__\\\" redefined\" } */\n-/* { dg-message \"previous definition\" \"\" { target *-*-* } time_prev } */\n+#define __TIME__ \"Y\"         /* { dg-warning \"-:\\\"__TIME__\\\" redefined\" } */\n+/* { dg-message \"-:previous definition\" \"\" { target *-*-* } time_prev } */\n \n #undef __TIME__              /* Undefine while defined.  */\n \n@@ -38,17 +38,17 @@\n #define __DATE__ \"X\"         /* Define while undefined.  */\n #define __DATE__ \"X\"         /* Re-define while defined.  */ /* { dg-line date_prev } */\n \n-#define __DATE__ \"Y\"         /* { dg-warning \"\\\"__DATE__\\\" redefined\" } */\n-/* { dg-message \"previous definition\" \"\" { target *-*-* } date_prev } */\n+#define __DATE__ \"Y\"         /* { dg-warning \"-:\\\"__DATE__\\\" redefined\" } */\n+/* { dg-message \"-:previous definition\" \"\" { target *-*-* } date_prev } */\n \n #undef __DATE__              /* Undefine while defined.  */\n \n \n #define __TIMESTAMP__ \"X\"    /* Define while already defined.  */\n #define __TIMESTAMP__ \"X\"    /* Re-define while defined.  */ /* { dg-line timestamp_prev } */\n \n-#define __TIMESTAMP__ \"Y\"    /* { dg-warning \"\\\"__TIMESTAMP__\\\" redefined\" } */\n-/* { dg-message \"previous definition\" \"\" { target *-*-* } timestamp_prev } */\n+#define __TIMESTAMP__ \"Y\"    /* { dg-warning \"-:\\\"__TIMESTAMP__\\\" redefined\" } */\n+/* { dg-message \"-:previous definition\" \"\" { target *-*-* } timestamp_prev } */\n \n #undef __TIMESTAMP__         /* Undefine while defined.  */\n \n@@ -71,9 +71,9 @@\n /* { dg-bogus \"Expected built-in is not defined\" \"\" { target *-*-* } .-1 } */\n #endif\n \n-#define __LINE__ 0           /* { dg-warning \"\\\"__LINE__\\\" redef\" } */\n-#define __INCLUDE_LEVEL__ 0  /* { dg-warning \"\\\"__INCLUDE_LEVEL__\\\" redef\" } */\n-#define __COUNTER__ 0        /* { dg-warning \"\\\"__COUNTER__\\\" redef\" } */\n+#define __LINE__ 0           /* { dg-warning \"-:\\\"__LINE__\\\" redef\" } */\n+#define __INCLUDE_LEVEL__ 0  /* { dg-warning \"-:\\\"__INCLUDE_LEVEL__\\\" redef\" } */\n+#define __COUNTER__ 0        /* { dg-warning \"-:\\\"__COUNTER__\\\" redef\" } */\n \n \n int unused;  /* Silence `ISO C forbids an empty translation unit' warning.  */"}, {"sha": "06a244e097d3162e29da78b093b12f3688528f2a", "filename": "gcc/testsuite/gcc.dg/cpp/Wunknown-pragmas-1.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2FWunknown-pragmas-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2FWunknown-pragmas-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2FWunknown-pragmas-1.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -5,25 +5,25 @@\n \n /* Make sure we get warnings in the expected lines.  */\n \n-#pragma unknown1 /* { dg-warning \"unknown1\" \"unknown1\" } */\n+#pragma unknown1 /* { dg-warning \"-:unknown1\" \"unknown1\" } */\n \n #define COMMA ,\n #define FOO(x) x\n #define BAR(x) _Pragma(\"unknown_before\") x\n #define BAZ(x) x _Pragma(\"unknown_after\")\n \n-int _Pragma(\"unknown2\") bar1; /* { dg-warning \"unknown2\" \"unknown2\" } */\n+int _Pragma(\"unknown2\") bar1; /* { dg-warning \"-:unknown2\" \"unknown2\" } */\n \n-FOO(int _Pragma(\"unknown3\") bar2); /* { dg-warning \"unknown3\" \"unknown3\" } */\n+FOO(int _Pragma(\"unknown3\") bar2); /* { dg-warning \"-:unknown3\" \"unknown3\" } */\n \n-int BAR(bar3); /* { dg-warning \"unknown_before\" \"unknown_before 1\" } */\n+int BAR(bar3); /* { dg-warning \"-:unknown_before\" \"unknown_before 1\" } */\n \n-BAR(int bar4); /* { dg-warning \"unknown_before\" \"unknown_before 2\" } */\n+BAR(int bar4); /* { dg-warning \"-:unknown_before\" \"unknown_before 2\" } */\n \n-int BAZ(bar5); /* { dg-warning \"unknown_after\" \"unknown_after 1\" } */\n+int BAZ(bar5); /* { dg-warning \"-:unknown_after\" \"unknown_after 1\" } */\n \n-int BAZ(bar6;) /* { dg-warning \"unknown_after\" \"unknown_after 2\" } */\n+int BAZ(bar6;) /* { dg-warning \"-:unknown_after\" \"unknown_after 2\" } */\n \n-FOO(int bar7; _Pragma(\"unknown4\")) /* { dg-warning \"unknown4\" \"unknown4\" } */\n+FOO(int bar7; _Pragma(\"unknown4\")) /* { dg-warning \"-:unknown4\" \"unknown4\" } */\n \n-#pragma unknown5 /* { dg-warning \"unknown5\" \"unknown5\" } */\n+#pragma unknown5 /* { dg-warning \"-:unknown5\" \"unknown5\" } */"}, {"sha": "d6f76288cd7413644011a28e7ece666c85863d2f", "filename": "gcc/testsuite/gcc.dg/cpp/Wunused.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2FWunused.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2FWunused.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2FWunused.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -15,9 +15,9 @@\n #define used3\t\t\t/* { dg-bogus \"used\" } */\n #define used4 used4\t\t/* { dg-bogus \"used\" } */\n \n-#define unused5\t\t\t/* { dg-warning \"used\" } */\n-#define unused6\t\t\t/* { dg-warning \"used\" } */\n-#define unused7()\t\t/* { dg-warning \"used\" } */\n+#define unused5\t\t\t/* { dg-warning \"-:used\" } */\n+#define unused6\t\t\t/* { dg-warning \"-:used\" } */\n+#define unused7()\t\t/* { dg-warning \"-:used\" } */\n \n #if defined used1\n #endif"}, {"sha": "d4176144f5d5b390ede3f6f9437fb5899d7c8bcd", "filename": "gcc/testsuite/gcc.dg/cpp/misspelled-directive-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmisspelled-directive-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmisspelled-directive-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmisspelled-directive-1.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -1,4 +1,4 @@\n-#ifndef SOME_GUARD /* { dg-error \"unterminated\" } */\n+#ifndef SOME_GUARD /* { dg-error \"-:unterminated\" } */\n \n #if 1\n /* Typo here: \"endfi\" should have been \"endif\".  */"}, {"sha": "439d33a705799bbe19b21162f03fe495d4fbf4a5", "filename": "gcc/testsuite/gcc.dg/cpp/redef2.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fredef2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fredef2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fredef2.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -17,15 +17,15 @@\n #define foo(x) x\n #define foo(x)x\t\t/* { dg-bogus \"redefined\" \"redefined foo\" } */\n \n-/* { dg-warning \"redefined\" \"redef mac\"     { target *-*-* } 7  }\n-   { dg-warning \"redefined\" \"redef mac\"     { target *-*-* } 8  }\n-   { dg-warning \"redefined\" \"redef mac\"     { target *-*-* } 9  }\n-   { dg-warning \"redefined\" \"redef ro\"      { target *-*-* } 12 }\n-   { dg-warning \"redefined\" \"redef va\"      { target *-*-* } 15 }\n+/* { dg-warning \"-:redefined\" \"redef mac\"     { target *-*-* } 7  }\n+   { dg-warning \"-:redefined\" \"redef mac\"     { target *-*-* } 8  }\n+   { dg-warning \"-:redefined\" \"redef mac\"     { target *-*-* } 9  }\n+   { dg-warning \"-:redefined\" \"redef ro\"      { target *-*-* } 12 }\n+   { dg-warning \"-:redefined\" \"redef va\"      { target *-*-* } 15 }\n \n-   { dg-message \"previous\"  \"prev def mac\"  { target *-*-* } 6  }\n-   { dg-message \"previous\"  \"prev def mac\"  { target *-*-* } 7  }\n-   { dg-message \"previous\"  \"prev def mac\"  { target *-*-* } 8  }\n-   { dg-message \"previous\"  \"prev def ro\"   { target *-*-* } 11 }\n-   { dg-message \"previous\"  \"prev def va\"   { target *-*-* } 14 }\n+   { dg-message \"-:previous\"  \"prev def mac\"  { target *-*-* } 6  }\n+   { dg-message \"-:previous\"  \"prev def mac\"  { target *-*-* } 7  }\n+   { dg-message \"-:previous\"  \"prev def mac\"  { target *-*-* } 8  }\n+   { dg-message \"-:previous\"  \"prev def ro\"   { target *-*-* } 11 }\n+   { dg-message \"-:previous\"  \"prev def va\"   { target *-*-* } 14 }\n */"}, {"sha": "4e4ef128b1024ff529234c9abbd9d319675d322b", "filename": "gcc/testsuite/gcc.dg/cpp/redef3.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fredef3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fredef3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fredef3.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -11,11 +11,11 @@\n #define D 1 2\n #define E\n \n-/* { dg-warning \"redefined\" \"redef A\"      { target *-*-* } 7  }\n-   { dg-warning \"redefined\" \"redef B\"      { target *-*-* } 9  }\n-   { dg-warning \"redefined\" \"redef D\"      { target *-*-* } 11 }\n-   { dg-warning \"redefined\" \"redef E\"      { target *-*-* } 12 }\n-   { dg-message \"previous\"  \"prev def A\"   { target *-*-* } 6  }\n-   { dg-message \"previous\"  \"prev def B\"   { target *-*-* } 8  }\n-   { dg-message \"previous\"  \"prev def D/E\" { target *-*-* } 0  }\n+/* { dg-warning \"-:redefined\" \"redef A\"      { target *-*-* } 7  }\n+   { dg-warning \"-:redefined\" \"redef B\"      { target *-*-* } 9  }\n+   { dg-warning \"-:redefined\" \"redef D\"      { target *-*-* } 11 }\n+   { dg-warning \"-:redefined\" \"redef E\"      { target *-*-* } 12 }\n+   { dg-message \"-:previous\"  \"prev def A\"   { target *-*-* } 6  }\n+   { dg-message \"-:previous\"  \"prev def B\"   { target *-*-* } 8  }\n+   { dg-message \"-:previous\"  \"prev def D/E\" { target *-*-* } 0  }\n */"}, {"sha": "aa6729b770b65af12f7e2430993e9400dfc14521", "filename": "gcc/testsuite/gcc.dg/cpp/redef4.c", "status": "modified", "additions": 260, "deletions": 260, "changes": 520, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fredef4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fredef4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fredef4.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -4,41 +4,41 @@\n /* { dg-do preprocess } */\n /* { dg-options \"\" } */\n \n-#define str(x) #x /* { dg-message \"previous definition\" } */\n-#define str(x) %: x /* { dg-warning \"redefined\" } */\n+#define str(x) #x /* { dg-message \"-:previous definition\" } */\n+#define str(x) %: x /* { dg-warning \"-:redefined\" } */\n #undef str\n-#define str(x) #x /* { dg-message \"previous definition\" } */\n-#define str(x) # x /* { dg-warning \"redefined\" } */\n+#define str(x) #x /* { dg-message \"-:previous definition\" } */\n+#define str(x) # x /* { dg-warning \"-:redefined\" } */\n #undef str\n-#define str(x) #x /* { dg-message \"previous definition\" } */\n-#define str(x) %: x /* { dg-warning \"redefined\" } */\n+#define str(x) #x /* { dg-message \"-:previous definition\" } */\n+#define str(x) %: x /* { dg-warning \"-:redefined\" } */\n #undef str\n-#define str(x) %:x /* { dg-message \"previous definition\" } */\n-#define str(x) #x /* { dg-warning \"redefined\" } */\n+#define str(x) %:x /* { dg-message \"-:previous definition\" } */\n+#define str(x) #x /* { dg-warning \"-:redefined\" } */\n #undef str\n-#define str(x) %:x /* { dg-message \"previous definition\" } */\n-#define str(x) %: x /* { dg-warning \"redefined\" } */\n+#define str(x) %:x /* { dg-message \"-:previous definition\" } */\n+#define str(x) %: x /* { dg-warning \"-:redefined\" } */\n #undef str\n-#define str(x) %:x /* { dg-message \"previous definition\" } */\n-#define str(x) # x /* { dg-warning \"redefined\" } */\n+#define str(x) %:x /* { dg-message \"-:previous definition\" } */\n+#define str(x) # x /* { dg-warning \"-:redefined\" } */\n #undef str\n-#define str(x) %:x /* { dg-message \"previous definition\" } */\n-#define str(x) %: x /* { dg-warning \"redefined\" } */\n+#define str(x) %:x /* { dg-message \"-:previous definition\" } */\n+#define str(x) %: x /* { dg-warning \"-:redefined\" } */\n #undef str\n-#define str(x) # x /* { dg-message \"previous definition\" } */\n-#define str(x) #x /* { dg-warning \"redefined\" } */\n+#define str(x) # x /* { dg-message \"-:previous definition\" } */\n+#define str(x) #x /* { dg-warning \"-:redefined\" } */\n #undef str\n-#define str(x) # x /* { dg-message \"previous definition\" } */\n-#define str(x) %: x /* { dg-warning \"redefined\" } */\n+#define str(x) # x /* { dg-message \"-:previous definition\" } */\n+#define str(x) %: x /* { dg-warning \"-:redefined\" } */\n #undef str\n-#define str(x) # x /* { dg-message \"previous definition\" } */\n-#define str(x) %: x /* { dg-warning \"redefined\" } */\n+#define str(x) # x /* { dg-message \"-:previous definition\" } */\n+#define str(x) %: x /* { dg-warning \"-:redefined\" } */\n #undef str\n-#define str(x) %: x /* { dg-message \"previous definition\" } */\n-#define str(x) #x /* { dg-warning \"redefined\" } */\n+#define str(x) %: x /* { dg-message \"-:previous definition\" } */\n+#define str(x) #x /* { dg-warning \"-:redefined\" } */\n #undef str\n-#define str(x) %: x /* { dg-message \"previous definition\" } */\n-#define str(x) # x /* { dg-warning \"redefined\" } */\n+#define str(x) %: x /* { dg-message \"-:previous definition\" } */\n+#define str(x) # x /* { dg-warning \"-:redefined\" } */\n #undef str\n \n #define str(x) #x\n@@ -54,173 +54,173 @@\n #define str(x) %: x\n #undef str\n \n-#define astr(x) a#x /* { dg-message \"previous definition\" } */\n-#define astr(x) a%: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a#x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a%: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a#x /* { dg-message \"previous definition\" } */\n-#define astr(x) a# x /* { dg-warning \"redefined\" } */\n+#define astr(x) a#x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a# x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a#x /* { dg-message \"previous definition\" } */\n-#define astr(x) a%: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a#x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a%: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a#x /* { dg-message \"previous definition\" } */\n-#define astr(x) a #x /* { dg-warning \"redefined\" } */\n+#define astr(x) a#x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a #x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a#x /* { dg-message \"previous definition\" } */\n-#define astr(x) a %:x /* { dg-warning \"redefined\" } */\n+#define astr(x) a#x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a %:x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a#x /* { dg-message \"previous definition\" } */\n-#define astr(x) a # x /* { dg-warning \"redefined\" } */\n+#define astr(x) a#x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a # x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a#x /* { dg-message \"previous definition\" } */\n-#define astr(x) a %: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a#x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a %: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a%:x /* { dg-message \"previous definition\" } */\n-#define astr(x) a#x /* { dg-warning \"redefined\" } */\n+#define astr(x) a%:x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a#x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a%:x /* { dg-message \"previous definition\" } */\n-#define astr(x) a%: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a%:x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a%: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a%:x /* { dg-message \"previous definition\" } */\n-#define astr(x) a# x /* { dg-warning \"redefined\" } */\n+#define astr(x) a%:x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a# x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a%:x /* { dg-message \"previous definition\" } */\n-#define astr(x) a%: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a%:x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a%: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a%:x /* { dg-message \"previous definition\" } */\n-#define astr(x) a #x /* { dg-warning \"redefined\" } */\n+#define astr(x) a%:x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a #x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a%:x /* { dg-message \"previous definition\" } */\n-#define astr(x) a %:x /* { dg-warning \"redefined\" } */\n+#define astr(x) a%:x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a %:x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a%:x /* { dg-message \"previous definition\" } */\n-#define astr(x) a # x /* { dg-warning \"redefined\" } */\n+#define astr(x) a%:x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a # x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a%:x /* { dg-message \"previous definition\" } */\n-#define astr(x) a %: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a%:x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a %: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a# x /* { dg-message \"previous definition\" } */\n-#define astr(x) a#x /* { dg-warning \"redefined\" } */\n+#define astr(x) a# x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a#x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a# x /* { dg-message \"previous definition\" } */\n-#define astr(x) a%: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a# x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a%: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a# x /* { dg-message \"previous definition\" } */\n-#define astr(x) a%: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a# x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a%: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a# x /* { dg-message \"previous definition\" } */\n-#define astr(x) a #x /* { dg-warning \"redefined\" } */\n+#define astr(x) a# x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a #x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a# x /* { dg-message \"previous definition\" } */\n-#define astr(x) a %:x /* { dg-warning \"redefined\" } */\n+#define astr(x) a# x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a %:x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a# x /* { dg-message \"previous definition\" } */\n-#define astr(x) a # x /* { dg-warning \"redefined\" } */\n+#define astr(x) a# x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a # x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a# x /* { dg-message \"previous definition\" } */\n-#define astr(x) a %: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a# x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a %: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a%: x /* { dg-message \"previous definition\" } */\n-#define astr(x) a#x /* { dg-warning \"redefined\" } */\n+#define astr(x) a%: x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a#x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a%: x /* { dg-message \"previous definition\" } */\n-#define astr(x) a# x /* { dg-warning \"redefined\" } */\n+#define astr(x) a%: x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a# x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a%: x /* { dg-message \"previous definition\" } */\n-#define astr(x) a #x /* { dg-warning \"redefined\" } */\n+#define astr(x) a%: x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a #x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a%: x /* { dg-message \"previous definition\" } */\n-#define astr(x) a %:x /* { dg-warning \"redefined\" } */\n+#define astr(x) a%: x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a %:x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a%: x /* { dg-message \"previous definition\" } */\n-#define astr(x) a # x /* { dg-warning \"redefined\" } */\n+#define astr(x) a%: x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a # x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a%: x /* { dg-message \"previous definition\" } */\n-#define astr(x) a %: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a%: x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a %: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a #x /* { dg-message \"previous definition\" } */\n-#define astr(x) a#x /* { dg-warning \"redefined\" } */\n+#define astr(x) a #x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a#x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a #x /* { dg-message \"previous definition\" } */\n-#define astr(x) a%: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a #x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a%: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a #x /* { dg-message \"previous definition\" } */\n-#define astr(x) a# x /* { dg-warning \"redefined\" } */\n+#define astr(x) a #x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a# x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a #x /* { dg-message \"previous definition\" } */\n-#define astr(x) a%: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a #x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a%: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a #x /* { dg-message \"previous definition\" } */\n-#define astr(x) a %:x /* { dg-warning \"redefined\" } */\n+#define astr(x) a #x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a %:x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a #x /* { dg-message \"previous definition\" } */\n-#define astr(x) a # x /* { dg-warning \"redefined\" } */\n+#define astr(x) a #x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a # x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a #x /* { dg-message \"previous definition\" } */\n-#define astr(x) a %: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a #x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a %: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a %:x /* { dg-message \"previous definition\" } */\n-#define astr(x) a#x /* { dg-warning \"redefined\" } */\n+#define astr(x) a %:x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a#x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a %:x /* { dg-message \"previous definition\" } */\n-#define astr(x) a%: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a %:x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a%: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a %:x /* { dg-message \"previous definition\" } */\n-#define astr(x) a# x /* { dg-warning \"redefined\" } */\n+#define astr(x) a %:x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a# x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a %:x /* { dg-message \"previous definition\" } */\n-#define astr(x) a%: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a %:x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a%: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a %:x /* { dg-message \"previous definition\" } */\n-#define astr(x) a #x /* { dg-warning \"redefined\" } */\n+#define astr(x) a %:x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a #x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a %:x /* { dg-message \"previous definition\" } */\n-#define astr(x) a # x /* { dg-warning \"redefined\" } */\n+#define astr(x) a %:x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a # x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a %:x /* { dg-message \"previous definition\" } */\n-#define astr(x) a %: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a %:x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a %: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a # x /* { dg-message \"previous definition\" } */\n-#define astr(x) a#x /* { dg-warning \"redefined\" } */\n+#define astr(x) a # x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a#x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a # x /* { dg-message \"previous definition\" } */\n-#define astr(x) a%: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a # x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a%: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a # x /* { dg-message \"previous definition\" } */\n-#define astr(x) a# x /* { dg-warning \"redefined\" } */\n+#define astr(x) a # x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a# x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a # x /* { dg-message \"previous definition\" } */\n-#define astr(x) a%: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a # x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a%: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a # x /* { dg-message \"previous definition\" } */\n-#define astr(x) a #x /* { dg-warning \"redefined\" } */\n+#define astr(x) a # x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a #x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a # x /* { dg-message \"previous definition\" } */\n-#define astr(x) a %:x /* { dg-warning \"redefined\" } */\n+#define astr(x) a # x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a %:x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a # x /* { dg-message \"previous definition\" } */\n-#define astr(x) a %: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a # x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a %: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a %: x /* { dg-message \"previous definition\" } */\n-#define astr(x) a#x /* { dg-warning \"redefined\" } */\n+#define astr(x) a %: x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a#x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a %: x /* { dg-message \"previous definition\" } */\n-#define astr(x) a%: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a %: x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a%: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a %: x /* { dg-message \"previous definition\" } */\n-#define astr(x) a# x /* { dg-warning \"redefined\" } */\n+#define astr(x) a %: x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a# x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a %: x /* { dg-message \"previous definition\" } */\n-#define astr(x) a%: x /* { dg-warning \"redefined\" } */\n+#define astr(x) a %: x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a%: x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a %: x /* { dg-message \"previous definition\" } */\n-#define astr(x) a #x /* { dg-warning \"redefined\" } */\n+#define astr(x) a %: x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a #x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a %: x /* { dg-message \"previous definition\" } */\n-#define astr(x) a %:x /* { dg-warning \"redefined\" } */\n+#define astr(x) a %: x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a %:x /* { dg-warning \"-:redefined\" } */\n #undef astr\n-#define astr(x) a %: x /* { dg-message \"previous definition\" } */\n-#define astr(x) a # x /* { dg-warning \"redefined\" } */\n+#define astr(x) a %: x /* { dg-message \"-:previous definition\" } */\n+#define astr(x) a # x /* { dg-warning \"-:redefined\" } */\n #undef astr\n \n #define astr(x) a#x\n@@ -248,173 +248,173 @@\n #define astr(x) a %: x\n #undef astr\n \n-#define cat(x,y) x##y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x%:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x##y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x%:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x##y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x## y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x##y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x## y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x##y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x%:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x##y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x%:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x##y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x ##y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x##y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x ##y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x##y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x %:%:y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x##y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x %:%:y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x##y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x ## y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x##y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x ## y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x##y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x %:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x##y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x %:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x%:%:y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x##y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x%:%:y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x##y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x%:%:y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x%:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x%:%:y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x%:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x%:%:y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x## y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x%:%:y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x## y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x%:%:y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x%:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x%:%:y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x%:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x%:%:y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x ##y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x%:%:y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x ##y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x%:%:y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x %:%:y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x%:%:y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x %:%:y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x%:%:y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x ## y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x%:%:y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x ## y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x%:%:y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x %:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x%:%:y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x %:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x## y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x##y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x## y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x##y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x## y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x%:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x## y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x%:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x## y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x%:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x## y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x%:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x## y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x ##y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x## y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x ##y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x## y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x %:%:y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x## y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x %:%:y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x## y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x ## y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x## y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x ## y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x## y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x %:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x## y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x %:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x%:%: y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x##y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x%:%: y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x##y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x%:%: y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x## y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x%:%: y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x## y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x%:%: y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x ##y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x%:%: y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x ##y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x%:%: y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x %:%:y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x%:%: y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x %:%:y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x%:%: y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x ## y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x%:%: y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x ## y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x%:%: y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x %:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x%:%: y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x %:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x ##y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x##y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x ##y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x##y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x ##y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x%:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x ##y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x%:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x ##y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x## y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x ##y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x## y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x ##y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x%:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x ##y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x%:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x ##y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x %:%:y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x ##y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x %:%:y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x ##y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x ## y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x ##y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x ## y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x ##y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x %:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x ##y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x %:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x %:%:y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x##y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x %:%:y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x##y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x %:%:y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x%:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x %:%:y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x%:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x %:%:y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x## y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x %:%:y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x## y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x %:%:y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x%:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x %:%:y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x%:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x %:%:y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x ##y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x %:%:y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x ##y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x %:%:y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x ## y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x %:%:y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x ## y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x %:%:y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x %:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x %:%:y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x %:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x ## y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x##y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x ## y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x##y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x ## y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x%:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x ## y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x%:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x ## y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x## y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x ## y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x## y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x ## y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x%:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x ## y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x%:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x ## y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x ##y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x ## y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x ##y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x ## y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x %:%:y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x ## y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x %:%:y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x ## y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x %:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x ## y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x %:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x %:%: y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x##y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x %:%: y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x##y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x %:%: y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x%:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x %:%: y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x%:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x %:%: y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x## y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x %:%: y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x## y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x %:%: y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x%:%: y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x %:%: y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x%:%: y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x %:%: y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x ##y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x %:%: y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x ##y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x %:%: y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x %:%:y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x %:%: y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x %:%:y /* { dg-warning \"-:redefined\" } */\n #undef cat\n-#define cat(x,y) x %:%: y /* { dg-message \"previous definition\" } */\n-#define cat(x,y) x ## y /* { dg-warning \"redefined\" } */\n+#define cat(x,y) x %:%: y /* { dg-message \"-:previous definition\" } */\n+#define cat(x,y) x ## y /* { dg-warning \"-:redefined\" } */\n #undef cat\n \n #define cat(x,y) x##y\n@@ -442,28 +442,28 @@\n #define cat(x,y) x %:%: y\n #undef cat\n \n-#define cat3(x,y,z) x##y##z /* { dg-message \"previous definition\" } */\n-#define cat3(x,y,z) x##y####z /* { dg-warning \"redefined\" } */\n+#define cat3(x,y,z) x##y##z /* { dg-message \"-:previous definition\" } */\n+#define cat3(x,y,z) x##y####z /* { dg-warning \"-:redefined\" } */\n #undef cat3\n \n-#define cat3(x,y,z) x##y####z /* { dg-message \"previous definition\" } */\n-#define cat3(x,y,z) x####y##z /* { dg-warning \"redefined\" } */\n+#define cat3(x,y,z) x##y####z /* { dg-message \"-:previous definition\" } */\n+#define cat3(x,y,z) x####y##z /* { dg-warning \"-:redefined\" } */\n #undef cat3\n \n-#define cat3(x,y,z) x##y####z /* { dg-message \"previous definition\" } */\n-#define cat3(x,y,z) x##y## ##z /* { dg-warning \"redefined\" } */\n+#define cat3(x,y,z) x##y####z /* { dg-message \"-:previous definition\" } */\n+#define cat3(x,y,z) x##y## ##z /* { dg-warning \"-:redefined\" } */\n #undef cat3\n \n-#define cat3(x,y,z) x##y####z /* { dg-message \"previous definition\" } */\n-#define cat3(x,y,z) x##y##%:%:z /* { dg-warning \"redefined\" } */\n+#define cat3(x,y,z) x##y####z /* { dg-message \"-:previous definition\" } */\n+#define cat3(x,y,z) x##y##%:%:z /* { dg-warning \"-:redefined\" } */\n #undef cat3\n \n-#define cat3(x,y,z) x##y######## ####z /* { dg-message \"previous definition\" } */\n-#define cat3(x,y,z) x##y############z /* { dg-warning \"redefined\" } */\n+#define cat3(x,y,z) x##y######## ####z /* { dg-message \"-:previous definition\" } */\n+#define cat3(x,y,z) x##y############z /* { dg-warning \"-:redefined\" } */\n #undef cat3\n \n-#define cat3(x,y,z) x##y############z /* { dg-message \"previous definition\" } */\n-#define cat3(x,y,z) x##y########%:%:##z /* { dg-warning \"redefined\" } */\n+#define cat3(x,y,z) x##y############z /* { dg-message \"-:previous definition\" } */\n+#define cat3(x,y,z) x##y########%:%:##z /* { dg-warning \"-:redefined\" } */\n #undef cat3\n \n #define cat3(x,y,z) x##y##z"}, {"sha": "97465f3967ce3e25cdbfde06c164076cdd61a5fd", "filename": "gcc/testsuite/gcc.dg/cpp/trad/Wunused.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2FWunused.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2FWunused.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2FWunused.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -14,9 +14,9 @@\n #define used3\t\t\t/* { dg-bogus \"used\" } */\n #define used4 something\t\t/* { dg-bogus \"used\" } */\n \n-#define unused5\t\t\t/* { dg-warning \"used\" } */\n-#define unused6\t\t\t/* { dg-warning \"used\" } */\n-#define unused7()\t\t/* { dg-warning \"used\" } */\n+#define unused5\t\t\t/* { dg-warning \"-:used\" } */\n+#define unused6\t\t\t/* { dg-warning \"-:used\" } */\n+#define unused7()\t\t/* { dg-warning \"-:used\" } */\n \n #if defined used1\n #endif"}, {"sha": "7098caf7d7672864925349bfe26262acdcd6e869", "filename": "gcc/testsuite/gcc.dg/cpp/trad/argcount.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fargcount.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fargcount.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fargcount.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -7,15 +7,15 @@\n #define g(x, y) x y\n #define h()\n \n-f(); \t\t/* { dg-bogus \"requires 1\" \"no arg is 1 empty arg\" } */\n-f( ); \t\t/* { dg-bogus \"macro\" \"1 arg to 1 param macro\" } */\n-f(1,); \t\t/* { dg-error \"passed 2\" \"2 args to 1 param macro\" } */\n-f(1,2);\t\t/* { dg-error \"passed 2\" \"2 args to 1 param macro\" } */\n-h();\t\t/* { dg-bogus \"macro\" \"no arg to 1 param macro\" } */\n-h( );\t\t/* { dg-error \"passed 1\" \"1 arg to 0 param macro\" } */\n-h(1,2);\t\t/* { dg-error \"passed 2\" \"2 args to 0 param macro\" } */\n-g();\t\t/* { dg-error \"requires 2\" \"0 args to 2 param macro\" } */\n-g( );\t\t/* { dg-error \"requires 2\" \"1 args to 2 param macro\" } */\n-g( ,2);\t\t/* { dg-bogus \"requires 2\" \"2 args to 2 param macro\" } */\n-g(,);\t\t/* { dg-bogus \"requires 2\" \"2 args to 2 param macro\" } */\n-g(1,2,3);\t/* { dg-error \"passed 3\" \"3 args to 2 param macro\" } */\n+f(); \t\t/* { dg-bogus \"-:requires 1\" \"no arg is 1 empty arg\" } */\n+f( ); \t\t/* { dg-bogus \"-:macro\" \"1 arg to 1 param macro\" } */\n+f(1,); \t\t/* { dg-error \"-:passed 2\" \"2 args to 1 param macro\" } */\n+f(1,2);\t\t/* { dg-error \"-:passed 2\" \"2 args to 1 param macro\" } */\n+h();\t\t/* { dg-bogus \"-:macro\" \"no arg to 1 param macro\" } */\n+h( );\t\t/* { dg-error \"-:passed 1\" \"1 arg to 0 param macro\" } */\n+h(1,2);\t\t/* { dg-error \"-:passed 2\" \"2 args to 0 param macro\" } */\n+g();\t\t/* { dg-error \"-:requires 2\" \"0 args to 2 param macro\" } */\n+g( );\t\t/* { dg-error \"-:requires 2\" \"1 args to 2 param macro\" } */\n+g( ,2);\t\t/* { dg-bogus \"-:requires 2\" \"2 args to 2 param macro\" } */\n+g(,);\t\t/* { dg-bogus \"-:requires 2\" \"2 args to 2 param macro\" } */\n+g(1,2,3);\t/* { dg-error \"-:passed 3\" \"3 args to 2 param macro\" } */"}, {"sha": "7d1d8252f0192289d46d6011b55816cab01717be", "filename": "gcc/testsuite/gcc.dg/cpp/trad/comment-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fcomment-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fcomment-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fcomment-3.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -3,4 +3,4 @@\n /* { dg-do preprocess } */\n \n #if 0\n-#endif //  /* { dg-warning \"extra tokens\" } */\n+#endif //  /* { dg-warning \"-:extra tokens\" } */"}, {"sha": "36fa90d3f37ebb1ab2f30c4b5cd42b2539244a79", "filename": "gcc/testsuite/gcc.dg/cpp/trad/comment.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fcomment.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fcomment.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fcomment.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -2,4 +2,4 @@\n \n /* { dg-do preprocess } */\n \n-/* { dg-error \"unterminated comment\" }\n+/* { dg-error \"-:unterminated comment\" }"}, {"sha": "fa4c4119d3d7fa63d81584abfee435c492106788", "filename": "gcc/testsuite/gcc.dg/cpp/trad/defined.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fdefined.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fdefined.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fdefined.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -16,7 +16,7 @@\n #error REGPARMS should be defined\n #endif\n \n-#define defined\t\t\t/* { dg-error \"defined\" } */\n+#define defined\t\t\t/* { dg-error \"-:defined\" } */\n \n /* No diagnostics, though you could argue there should be.  */\n #if defined defined"}, {"sha": "0a42df62639a87f2eac48b607bd19e56792a9c77", "filename": "gcc/testsuite/gcc.dg/cpp/trad/directive.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fdirective.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fdirective.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fdirective.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -12,7 +12,7 @@ HASH\n /* Directives with their #s indented are not recognized.  */\n  #if 0\t/* { dg-bogus \"unterminated\" } */\n \n-#wrong\t/* { dg-error \"invalid\" } */\n+#wrong\t/* { dg-error \"-:invalid\" } */\n \n #define foo 2\n #define bar + 3"}, {"sha": "2baa99a31c34f2b18840d55a3d4164eb09553f67", "filename": "gcc/testsuite/gcc.dg/cpp/trad/funlike-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Ffunlike-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Ffunlike-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Ffunlike-3.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -5,8 +5,8 @@\n \n #define f(x) x\n \n-#if 2 f(/* { dg-error \"unterminated\" \"unterminated macro in directive\" } */\n+#if 2 f(/* { dg-error \"-:unterminated\" \"unterminated macro in directive\" } */\n )\n #endif\n \n-f( /* { dg-error \"unterminated\" \"unterminated macro\" } */\n+f( /* { dg-error \"-:unterminated\" \"unterminated macro\" } */"}, {"sha": "1af6f9fcf97ff365f61fd9f6de9ff0443c722c6a", "filename": "gcc/testsuite/gcc.dg/cpp/trad/funlike.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Ffunlike.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Ffunlike.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Ffunlike.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -21,5 +21,5 @@\n # error\t\t/* { dg-bogus \"error\" \"empty macro\" } */\n #endif\n \n-#if f paren 6) /* { dg-error \"missing binary\" \"macro-expanded parenthesis\" } */\n+#if f paren 6) /* { dg-error \"-:missing binary\" \"macro-expanded parenthesis\" } */\n #endif"}, {"sha": "a6f9637c640ec7ac08ebc9d7b3cd59ac49dd0074", "filename": "gcc/testsuite/gcc.dg/cpp/trad/literals-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fliterals-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fliterals-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fliterals-2.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -2,7 +2,7 @@\n    recognized.  */\n \n /* { dg-do preprocess } */\n-/* { dg-warning \"missing terminating\" \"bad charconst\" { target *-*-* } .+2 } */\n-/* { dg-error \"not valid\" \"bad charconst\" { target *-*-* } .+1 } */\n+/* { dg-warning \"-:missing terminating\" \"bad charconst\" { target *-*-* } .+2 } */\n+/* { dg-error \"-:not valid\" \"bad charconst\" { target *-*-* } .+1 } */\n #if 'x\n #endif"}, {"sha": "6f8aa9ac239be16548d5eb30a83acb025d228817", "filename": "gcc/testsuite/gcc.dg/cpp/trad/macro.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fmacro.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -4,7 +4,7 @@\n /* { dg-do preprocess } */\n \n #define f(x) \n-#define g(x, y...)\t\t/* { dg-error \"macro parameter list\" } */\n+#define g(x, y...)\t\t/* { dg-error \"-:macro parameter list\" } */\n \n #if 0\n #define f(a,b)\t\t\t/* { dg-bogus \"passed 2 arguments\" } */"}, {"sha": "3cee7b9888b68518ef7bf945099be5fa63c51745", "filename": "gcc/testsuite/gcc.dg/cpp/trad/pr65238-4.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fpr65238-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fpr65238-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fpr65238-4.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -11,9 +11,9 @@\n #if __has_attribute(__has_attribute(unused))\n #endif\n \n-/* { dg-error \"unterminated argument list invoking macro .__has_attribute.\" \"\" {target \"*-*-*\"} 5 } */\n-/* { dg-error \"#if with no expression\" \"\" {target \"*-*-*\"} 5 } */\n-/* { dg-error \"unterminated argument list invoking macro .__has_attribute.\" \"\" {target \"*-*-*\"} 7 } */\n-/* { dg-error \"macro .__has_attribute. passed 2 arguments, but takes just 1\" \"\" {target \"*-*-*\"} 9 } */\n-/* { dg-error \"missing ... in expression\" \"\" {target \"*-*-*\"} 9 } */\n-/* { dg-error \"macro .__has_attribute. requires an identifier\" \"\" {target \"*-*-*\"} 11 } */\n+/* { dg-error \"-:unterminated argument list invoking macro .__has_attribute.\" \"\" {target \"*-*-*\"} 5 } */\n+/* { dg-error \"-:#if with no expression\" \"\" {target \"*-*-*\"} 5 } */\n+/* { dg-error \"-:unterminated argument list invoking macro .__has_attribute.\" \"\" {target \"*-*-*\"} 7 } */\n+/* { dg-error \"-:macro .__has_attribute. passed 2 arguments, but takes just 1\" \"\" {target \"*-*-*\"} 9 } */\n+/* { dg-error \"-:missing ... in expression\" \"\" {target \"*-*-*\"} 9 } */\n+/* { dg-error \"-:macro .__has_attribute. requires an identifier\" \"\" {target \"*-*-*\"} 11 } */"}, {"sha": "31c020bad8750e90eade59b9f0703a51d303a8fa", "filename": "gcc/testsuite/gcc.dg/cpp/trad/recurse-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Frecurse-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Frecurse-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Frecurse-1.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -4,7 +4,7 @@\n /* { dg-do preprocess } */\n \n #define foo foo\n-foo\t\t\t\t/* { dg-error \"detected recursion\" } */\n+foo\t\t\t\t/* { dg-error \"-:detected recursion\" } */\n \n #define bar a bar b\n-bar\t\t\t\t/* { dg-error \"detected recursion\" } */\n+bar\t\t\t\t/* { dg-error \"-:detected recursion\" } */"}, {"sha": "3e5929d5a044b7b7c6b5a5903fc5941e1e30cc56", "filename": "gcc/testsuite/gcc.dg/cpp/trad/recurse-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Frecurse-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Frecurse-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Frecurse-2.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -4,13 +4,13 @@\n /* { dg-do preprocess } */\n \n #define foo() foo()\n-foo();\t\t\t\t/* { dg-error \"detected recursion\" } */\n+foo();\t\t\t\t/* { dg-error \"-:detected recursion\" } */\n \n #define bar() bar baz() bar\n bar();\t\t\t\t/* { dg-bogus \"detected recursion\" } */\n \n #define baz() foo()\n-baz();\t\t\t       /* { dg-error \"detected recursion\" } */\n+baz();\t\t\t       /* { dg-error \"-:detected recursion\" } */\n \n #define a(x) x(a)\n-a(a);\t\t\t       /* { dg-error \"detected recursion\" } */\n+a(a);\t\t\t       /* { dg-error \"-:detected recursion\" } */"}, {"sha": "ad10b86fd3d50cd45da82bfbf7e32f2af2686f03", "filename": "gcc/testsuite/gcc.dg/cpp/trad/redef2.c", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fredef2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fredef2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fredef2.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -2,31 +2,31 @@\n \n /* { dg-do preprocess } */\n \n-#define foo bar    /* { dg-message \"previous def\" \"foo prev def\" } */\n-#define foo barr   /* { dg-warning \"redefined\" \"foo redefined\" } */\n+#define foo bar    /* { dg-message \"-:previous def\" \"foo prev def\" } */\n+#define foo barr   /* { dg-warning \"-:redefined\" \"foo redefined\" } */\n \n #undef foo\n-#define foo bar    /* { dg-message \"previous def\" \"foo prev def 2\" } */\n-#define foo() bar    /* { dg-warning \"redefined\" \"foo redefined 2\" } */\n+#define foo bar    /* { dg-message \"-:previous def\" \"foo prev def 2\" } */\n+#define foo() bar    /* { dg-warning \"-:redefined\" \"foo redefined 2\" } */\n \n #undef foo\n-#define foo() bar    /* { dg-message \"previous def\" \"foo prev def\" } */\n-#define foo() barr   /* { dg-warning \"redefined\" \"foo redefined\" } */\n+#define foo() bar    /* { dg-message \"-:previous def\" \"foo prev def\" } */\n+#define foo() barr   /* { dg-warning \"-:redefined\" \"foo redefined\" } */\n \n-#define quux(thud) a thud b /* { dg-message \"previous def\" \"quux prev def\" } */\n-#define quux(thu) a thud b   /* { dg-warning \"redefined\" \"quux redefined\" } */\n+#define quux(thud) a thud b /* { dg-message \"-:previous def\" \"quux prev def\" } */\n+#define quux(thu) a thud b   /* { dg-warning \"-:redefined\" \"quux redefined\" } */\n \n-#define bar(x, y) x+y /* { dg-message \"previous def\" \"bar prev def\" } */\n-#define bar(x, y) x+x   /* { dg-warning \"redefined\" \"bar redefined\" } */\n+#define bar(x, y) x+y /* { dg-message \"-:previous def\" \"bar prev def\" } */\n+#define bar(x, y) x+x   /* { dg-warning \"-:redefined\" \"bar redefined\" } */\n \n-#define bat(x, y) x+y  /* { dg-message \"previous def\" \"bat prev def\" } */\n-#define bat(x, y) x+ y   /* { dg-warning \"redefined\" \"bat redefined\" } */\n+#define bat(x, y) x+y  /* { dg-message \"-:previous def\" \"bat prev def\" } */\n+#define bat(x, y) x+ y   /* { dg-warning \"-:redefined\" \"bat redefined\" } */\n \n-#define baz(x, y) x+y  /* { dg-message \"previous def\" \"baz prev def\" } */\n-#define baz(x, y) x +y   /* { dg-warning \"redefined\" \"baz redefined\" } */\n+#define baz(x, y) x+y  /* { dg-message \"-:previous def\" \"baz prev def\" } */\n+#define baz(x, y) x +y   /* { dg-warning \"-:redefined\" \"baz redefined\" } */\n \n-#define f(x, y) \"x y\"  /* { dg-message \"previous def\" \"f prev def\" } */\n-#define f(x, y) \"x  y\"   /* { dg-warning \"redefined\" \"f redefined\" } */\n+#define f(x, y) \"x y\"  /* { dg-message \"-:previous def\" \"f prev def\" } */\n+#define f(x, y) \"x  y\"   /* { dg-warning \"-:redefined\" \"f redefined\" } */\n \n-#define g(x, y) 'x'  /* { dg-message \"previous def\" \"g prev def\" } */\n-#define g(x, y) ' x'   /* { dg-warning \"redefined\" \"g redefined\" } */\n+#define g(x, y) 'x'  /* { dg-message \"-:previous def\" \"g prev def\" } */\n+#define g(x, y) ' x'   /* { dg-warning \"-:redefined\" \"g redefined\" } */"}, {"sha": "b6956f5445436a4284b8c98b18d2134547093112", "filename": "gcc/testsuite/gcc.dg/cpp/ucnid-11.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-11.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -4,23 +4,23 @@\n /* { dg-options \"-std=c99 -pedantic-errors\" } */\n \n /* Different spelling of UCN in expansion.  */\n-#define m1 \\u00c1 /* { dg-message \"previous definition\" } */\n-#define m1 \\u00C1 /* { dg-error \"redefined\" } */\n+#define m1 \\u00c1 /* { dg-message \"-:previous definition\" } */\n+#define m1 \\u00C1 /* { dg-error \"-:redefined\" } */\n \n #define m1ok \\u00c1\n #define m1ok \\u00c1\n \n /* Different spelling of UCN in argument name.  */\n-#define m2(\\u00c1) /* { dg-message \"previous definition\" } */\n-#define m2(\\u00C1) /* { dg-error \"redefined\" } */\n+#define m2(\\u00c1) /* { dg-message \"-:previous definition\" } */\n+#define m2(\\u00C1) /* { dg-error \"-:redefined\" } */\n \n #define m2ok(\\u00c1)\n #define m2ok(\\u00c1)\n \n /* Same spelling in argument name but different spelling when used in\n    expansion.  */\n-#define m3(\\u00c1) \\u00c1 /* { dg-message \"previous definition\" } */\n-#define m3(\\u00c1) \\u00C1 /* { dg-error \"redefined\" } */\n+#define m3(\\u00c1) \\u00c1 /* { dg-message \"-:previous definition\" } */\n+#define m3(\\u00c1) \\u00C1 /* { dg-error \"-:redefined\" } */\n \n #define m3ok(\\u00c1) \\u00C1\n #define m3ok(\\u00c1) \\u00C1"}, {"sha": "d8eb19231031b0b4d277ca67dbf56afa5e1bd69f", "filename": "gcc/testsuite/gcc.dg/cpp/unc1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Func1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Func1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Func1.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -1,7 +1,7 @@\n /* Tests for un-terminated conditionals: 1.  */\n /* { dg-do preprocess } */\n \n-#if 1  /* { dg-error \"unterminated\" \"unterminated #if\" } */\n+#if 1  /* { dg-error \"-:unterminated\" \"unterminated #if\" } */\n \n #ifdef notdef /* { dg-bogus \"unterminated\" \"nested terminated #ifdef\" } */\n "}, {"sha": "faa4b2905b491543dec110087adebf2abaeef1c7", "filename": "gcc/testsuite/gcc.dg/cpp/unc2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Func2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Func2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Func2.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -1,7 +1,7 @@\n /* Tests for unterminated conditionals: 2.  */\n /* { dg-do preprocess } */\n \n-#ifdef __sparc__  /* { dg-error \"unterminated\" \"unterminated if-elif-elif...\" } */\n+#ifdef __sparc__  /* { dg-error \"-:unterminated\" \"unterminated if-elif-elif...\" } */\n sparc\n #elif defined __powerpc__\n ppc"}, {"sha": "e20339cf809572d70c9f8fcb6c922ea1b2cfebb3", "filename": "gcc/testsuite/gcc.dg/cpp/unc3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Func3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Func3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Func3.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -1,5 +1,5 @@\n /* Tests for unterminated conditionals: 3.  */\n /* { dg-do preprocess } */\n \n-#if 1  /* { dg-error \"#else\" \"unterminated #else\" } */\n+#if 1  /* { dg-error \"-:#else\" \"unterminated #else\" } */\n #else"}, {"sha": "410e2fcda0cd56825fd46a7e726c619c4e6bc5a8", "filename": "gcc/testsuite/gcc.dg/cpp/unc4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Func4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Func4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Func4.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -36,4 +36,4 @@ ignored\n \n /* dg.exp doesn't read the included files for tags, so we have to\n    do them explicitly here.  */\n-/* { dg-error \"#if\" \"unc1.c: unterminated #if\" { target *-*-* } 4 } */\n+/* { dg-error \"-:#if\" \"unc1.c: unterminated #if\" { target *-*-* } 4 } */"}, {"sha": "189a72dd9c2d956d8f85d49caafa08e9b7daacf7", "filename": "gcc/testsuite/gcc.dg/cpp/undef2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fundef2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fundef2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fundef2.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -3,11 +3,11 @@\n \n /* { dg-do preprocess } */\n \n-#undef __DATE__\t\t/* { dg-warning \"undefining\" \"__DATE__\" } */\n-#undef __TIME__\t\t/* { dg-warning \"undefining\" \"__TIME__\" } */\n-#undef __FILE__\t\t/* { dg-warning \"undefining\" \"__FILE__\" } */\n-#undef __LINE__\t\t/* { dg-warning \"undefining\" \"__LINE__\" } */\n-#undef __STDC__\t\t/* { dg-warning \"undefining\" \"__STDC__\" } */\n+#undef __DATE__\t\t/* { dg-warning \"-:undefining \\\"__DATE__\\\"\" } */\n+#undef __TIME__\t\t/* { dg-warning \"-:undefining \\\"__TIME__\\\"\" } */\n+#undef __FILE__\t\t/* { dg-warning \"-:undefining \\\"__FILE__\\\"\" } */\n+#undef __LINE__\t\t/* { dg-warning \"undefining \\\"__LINE__\\\"\" } */\n+#undef __STDC__\t\t/* { dg-warning \"undefining \\\"__STDC__\\\"\" } */\n \n /* These should be protected from #undef, but aren't, because they\n    are set with normal #define commands - and on top of that, some"}, {"sha": "ea5ad8170cd83ebf8cb59926ca004f4c0556b7a5", "filename": "gcc/testsuite/gcc.dg/cpp/warn-redefined-2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-redefined-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-redefined-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-redefined-2.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -6,13 +6,13 @@\n // { dg-bogus \"__TIME__ builtin is not defined\" \"no-time\" { target *-*-* } .-1 }\n #endif\n \n-#define __TIME__ \"X\"  // { dg-error \"\\\"__TIME__\\\" redefined .-Werror=builtin-macro-redefined.\" }\n+#define __TIME__ \"X\"  // { dg-error \"-:\\\"__TIME__\\\" redefined .-Werror=builtin-macro-redefined.\" }\n \n #define __TIME__ \"Y\"  // { dg-bogus \"-Wbuiltin-macro-redefined\" }\n-                      // { dg-warning \"\\\"__TIME__\\\" redefined\" \"not-builtin-1\" { target *-*-* } .-1 }\n-                      // { dg-message \"previous definition\" \"previous-1\" { target *-*-* } 9 }\n+                      // { dg-warning \"-:\\\"__TIME__\\\" redefined\" \"not-builtin-1\" { target *-*-* } .-1 }\n+                      // { dg-message \"-:previous definition\" \"previous-1\" { target *-*-* } 9 }\n \n #define X \"X\"\n #define X \"Y\"         // { dg-bogus \"-Wbuiltin-macro-redefined\" }\n-                      // { dg-warning \"\\\"X\\\" redefined\" \"not-builtin-2\" { target *-*-* } .-1 }\n-                      // { dg-message \"previous definition\" \"previous-2\" { target *-*-* } 15 }\n+                      // { dg-warning \"-:\\\"X\\\" redefined\" \"not-builtin-2\" { target *-*-* } .-1 }\n+                      // { dg-message \"-:previous definition\" \"previous-2\" { target *-*-* } 15 }"}, {"sha": "e04466897067b7da4c0deaf6e533fbf4be270784", "filename": "gcc/testsuite/gcc.dg/cpp/warn-redefined.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-redefined.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-redefined.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-redefined.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -6,13 +6,13 @@\n // { dg-bogus \"__TIME__ builtin is not defined\" \"no-time\" { target *-*-* } .-1 }\n #endif\n \n-#define __TIME__ \"X\"  // { dg-warning \"\\\"__TIME__\\\" redefined .-Wbuiltin-macro-redefined.\" }\n+#define __TIME__ \"X\"  // { dg-warning \"-:\\\"__TIME__\\\" redefined .-Wbuiltin-macro-redefined.\" }\n \n #define __TIME__ \"Y\"  // { dg-bogus \"-Wbuiltin-macro-redefined\" }\n-                      // { dg-warning \"\\\"__TIME__\\\" redefined\" \"not-builtin-1\" { target *-*-* } .-1 }\n-                      // { dg-message \"previous definition\" \"previous-1\" { target *-*-* } 9 }\n+                      // { dg-warning \"-:\\\"__TIME__\\\" redefined\" \"not-builtin-1\" { target *-*-* } .-1 }\n+                      // { dg-message \"-:previous definition\" \"previous-1\" { target *-*-* } 9 }\n \n #define X \"X\"\n #define X \"Y\"         // { dg-bogus \"-Wbuiltin-macro-redefined\" }\n-                      // { dg-warning \"\\\"X\\\" redefined\" \"not-builtin-2\" { target *-*-* } .-1 }\n-                      // { dg-message \"previous definition\" \"previous-2\" { target *-*-* } 15 }\n+                      // { dg-warning \"-:\\\"X\\\" redefined\" \"not-builtin-2\" { target *-*-* } .-1 }\n+                      // { dg-message \"-:previous definition\" \"previous-2\" { target *-*-* } 15 }"}, {"sha": "f82d67fe9c28f67b7e42b8514627b32ebe1ed735", "filename": "gcc/testsuite/gcc.dg/cpp/warn-unused-macros-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-unused-macros-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-unused-macros-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-unused-macros-2.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -1,4 +1,4 @@\n // { dg-do preprocess }\n // { dg-options \"-std=gnu99 -fdiagnostics-show-option -Werror=unused-macros\" }\n /* { dg-message \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n-#define X X  // { dg-error \"macro \\\"X\\\" is not used .-Werror=unused-macros.\" }\n+#define X X  // { dg-error \"-:macro \\\"X\\\" is not used .-Werror=unused-macros.\" }"}, {"sha": "b18f506b13b683f0c4344cb399fa212a71aa19cf", "filename": "gcc/testsuite/gcc.dg/cpp/warn-unused-macros.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-unused-macros.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-unused-macros.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-unused-macros.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -1,4 +1,4 @@\n // { dg-do preprocess }\n // { dg-options \"-std=gnu99 -fdiagnostics-show-option -Wunused-macros\" }\n \n-#define X X  // { dg-warning \"macro \\\"X\\\" is not used .-Wunused-macros.\" }\n+#define X X  // { dg-warning \"-:macro \\\"X\\\" is not used .-Wunused-macros.\" }"}, {"sha": "e0180ec94751eac5ed5187fedd3296fb1023a22d", "filename": "gcc/testsuite/gcc.dg/empty-source-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-2.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -3,4 +3,4 @@\n /* { dg-do compile } */\n /* { dg-options \"-pedantic\" } */\n \n-/* { dg-warning \"ISO C forbids an empty translation unit\" \"empty\" } */\n+/* { dg-warning \"-:ISO C forbids an empty translation unit\" \"empty\" } */"}, {"sha": "f8c58b3ef3fd503317d1472d089ff3b695113c03", "filename": "gcc/testsuite/gcc.dg/empty-source-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-3.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -4,4 +4,4 @@\n /* { dg-do compile } */\n /* { dg-options \"-pedantic-errors\" } */\n \n-/* { dg-error \"ISO C forbids an empty translation unit\" \"empty\" } */\n+/* { dg-error \"-:ISO C forbids an empty translation unit\" \"empty\" } */"}, {"sha": "28d198b1ce32cde0fea26067cb26c911914dd3ab", "filename": "gcc/testsuite/gcc.dg/gomp/macro-4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fmacro-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fmacro-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fmacro-4.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -10,9 +10,9 @@ void bar (void);\n void\n foo (void)\n {\n-#pragma omp p\t\t/* { dg-warning \"ignoring #pragma omp _Pragma\" } */\n+#pragma omp p\t\t/* { dg-warning \"-:ignoring #pragma omp _Pragma\" } */\n     bar ();\n-  omp_p\t\t\t/* { dg-warning \"ignoring #pragma omp _Pragma\" } */\n+  omp_p\t\t\t/* { dg-warning \"-:ignoring #pragma omp _Pragma\" } */\n     bar ();\n }\n \n@@ -22,8 +22,8 @@ foo (void)\n void\n baz (void)\n {\n-#pragma omp parallel\t/* { dg-warning \"ignoring #pragma omp serial\" } */\n+#pragma omp parallel\t/* { dg-warning \"-:ignoring #pragma omp serial\" } */\n     bar ();\n-  omp_parallel\t\t/* { dg-warning \"ignoring #pragma omp serial\" } */\n+  omp_parallel\t\t/* { dg-warning \"-:ignoring #pragma omp serial\" } */\n     bar ();\n }"}, {"sha": "b9bbb733fae4d146a536e2bc0e1a6abfc8447275", "filename": "gcc/testsuite/gcc.dg/noncompile/pr35447-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fpr35447-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fpr35447-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fpr35447-1.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -4,4 +4,4 @@\n void foo()\n {\n   ({ int i().; }); /* { dg-error \"expected\" } */\n-} /* { dg-error \"expected\" } */\n+} /* { dg-error \"-:expected\" } */"}, {"sha": "1a80a668a0fa06af663a4d8dece717b1e0763dac", "filename": "gcc/testsuite/gcc.dg/plugin/location-overflow-test-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Flocation-overflow-test-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Flocation-overflow-test-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Flocation-overflow-test-1.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -5,15 +5,15 @@\n    numbers are available.  */\n \n /* Verify that we're in column-less mode.  */\n-extern unknown_type test; /* { dg-error \"0: unknown type name\" } */\n+extern unknown_type test; /* { dg-error \"-:unknown type name\" } */\n \n /* PR c++/68819: verify that -Wmisleading-indentation is suppressed.  */\n \n int\n fn_1 (int flag)\n {\n   int x = 4, y = 5;\n-  if (flag) x = 3; y = 2; /* { dg-message \"disabled from this point\" } */\n+  if (flag) x = 3; y = 2; /* { dg-message \"-:disabled from this point\" } */\n   return x * y;\n }\n "}, {"sha": "b5767d88b7bb15a7d9d5abd3ba7b418cf7480fdd", "filename": "gcc/testsuite/gcc.dg/pr20245-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fpr20245-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fpr20245-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr20245-1.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -2,4 +2,4 @@\n /* { dg-do compile } */\n /* { dg-options \"\" } */\n \n-void foo() x; /* { dg-error \"expected\" } */\n+void foo() x; /* { dg-error \"-:expected\" } */"}, {"sha": "9974864034bc4db384d0802ca5395396bea98db4", "filename": "gcc/testsuite/gcc.dg/pr28419.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28419.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28419.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28419.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -1,3 +1,4 @@\n /* { dg-do compile } */\n void foo() \n const char* p = __FUNCTION__; /* { dg-error \"\" } */\n+/* { dg-error \"-:expected\" \"\" } */"}, {"sha": "fffb4d7011af649615629fbec48c5614e5fc15bc", "filename": "gcc/testsuite/gcc.dg/rtl/truncated-rtl-file.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Frtl%2Ftruncated-rtl-file.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Frtl%2Ftruncated-rtl-file.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Frtl%2Ftruncated-rtl-file.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -1,2 +1,2 @@\n void __RTL test (void)\n-{ /* { dg-error \"no closing brace\" } */\n+{ /* { dg-error \"-:no closing brace\" } */"}, {"sha": "3deb88e777c90f2ec4886c5f8227373efbe173aa", "filename": "gcc/testsuite/gcc.dg/unclosed-init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Funclosed-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Fgcc.dg%2Funclosed-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funclosed-init.c?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -1,3 +1,3 @@\n int unclosed[] = { /* { dg-message \"18: to match this '.'\" } */\n   42\n- /* { dg-error \"0: expected '.' at end of input\" } */\n+ /* { dg-error \"-: expected '.' at end of input\" } */"}, {"sha": "98366dc1fc3676ab06c4ac2e40f6c01416fc4069", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101e910b3a59d878b21afadf0d23330d45d57b73/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=101e910b3a59d878b21afadf0d23330d45d57b73", "patch": "@@ -1092,24 +1092,27 @@ proc process-message { msgproc msgprefix dgargs } {\n     set newentry [lindex ${dg-messages} end]\n     set expmsg [lindex $newentry 2]\n \n+    set column \"\"\n     # Handle column numbers from the specified expression (if there is\n     # one) and set up the search expression that will be used by DejaGnu.\n-    if [regexp \"^(\\[0-9\\]+):\" $expmsg \"\" column] {\n+    if [regexp {^-:} $expmsg] {\n+\t# The expected column is -, so shouldn't appear.\n+\tset expmsg [string range $expmsg 2 end]\n+    } elseif [regexp {^[0-9]+:} $expmsg column] {\n \t# The expression in the directive included a column number.\n-\t# Remove \"COLUMN:\" from the original expression and move it\n+\t# Remove it from the original expression and move it\n \t# to the proper place in the search expression.\n-\tregsub \"^\\[0-9\\]+:\" $expmsg \"\" expmsg\n-\tset expmsg \"$column: $msgprefix\\[^\\n\\]*$expmsg\"\n+\tset expmsg [string range $expmsg [string length $column] end]\n     } elseif [string match \"\" [lindex $newentry 0]] {\n \t# The specified line number is 0; don't expect a column number.\n-\tset expmsg \"$msgprefix\\[^\\n\\]*$expmsg\"\n     } else {\n \t# There is no column number in the search expression, but we\n \t# should expect one in the message itself.\n-\tset expmsg \"\\[0-9\\]+: $msgprefix\\[^\\n\\]*$expmsg\"\n+\tset column {[0-9]+:}\n     }\n-\n+    set expmsg \"$column $msgprefix\\[^\\n\\]*$expmsg\"\n     set newentry [lreplace $newentry 2 2 $expmsg]\n+\n     set dg-messages [lreplace ${dg-messages} end end $newentry]\n     verbose \"process-message:\\n${dg-messages}\" 2\n }"}]}