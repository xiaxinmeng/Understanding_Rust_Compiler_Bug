{"sha": "4000fada38a6497218c7930152e25a1d9da4e1de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAwMGZhZGEzOGE2NDk3MjE4Yzc5MzAxNTJlMjVhMWQ5ZGE0ZTFkZQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zackw@stanford.edu", "date": "2001-04-20T03:45:51Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-04-20T03:45:51Z"}, "message": "toplev.c: Excise all code for the undocumented -dm option.\n\n\t* toplev.c: Excise all code for the undocumented -dm option.\n\t(float_signal): Call signal just once, unconditionally.\n\nFrom-SVN: r41438", "tree": {"sha": "b3f30cbb39e94d8ac3bec7f609c6aa80a6ffb274", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3f30cbb39e94d8ac3bec7f609c6aa80a6ffb274"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4000fada38a6497218c7930152e25a1d9da4e1de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4000fada38a6497218c7930152e25a1d9da4e1de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4000fada38a6497218c7930152e25a1d9da4e1de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4000fada38a6497218c7930152e25a1d9da4e1de/comments", "author": null, "committer": null, "parents": [{"sha": "dea8be3e9fea111391e7710c41cff0ce6c8b6b05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dea8be3e9fea111391e7710c41cff0ce6c8b6b05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dea8be3e9fea111391e7710c41cff0ce6c8b6b05"}], "stats": {"total": 34, "additions": 8, "deletions": 26}, "files": [{"sha": "fdb66e07ebc3c5ec9a26d459cf6c59272cc60900", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4000fada38a6497218c7930152e25a1d9da4e1de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4000fada38a6497218c7930152e25a1d9da4e1de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4000fada38a6497218c7930152e25a1d9da4e1de", "patch": "@@ -1,3 +1,8 @@\n+2001-04-19  Zack Weinberg  <zackw@stanford.edu>\n+\n+\t* toplev.c: Excise all code for the undocumented -dm option.\n+\t(float_signal): Call signal just once, unconditionally.\n+\n 2001-04-19  Geoff Keating  <geoffk@redhat.com>\n \n \t* fold-const.c (fold): Use first_rtl_op rather than"}, {"sha": "20205ec97f51efcbb96e5b2a3bc7479b5b6bd2a4", "filename": "gcc/toplev.c", "status": "modified", "additions": 3, "deletions": 26, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4000fada38a6497218c7930152e25a1d9da4e1de/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4000fada38a6497218c7930152e25a1d9da4e1de/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=4000fada38a6497218c7930152e25a1d9da4e1de", "patch": "@@ -335,7 +335,6 @@ static void close_dump_file PARAMS ((enum dump_file_index,\n \n int rtl_dump_and_exit;\n int flag_print_asm_name;\n-static int flag_print_mem;\n static int version_flag;\n static char *filename;\n enum graph_dump_types graph_dump_format;\n@@ -1648,11 +1647,10 @@ float_signal (signo)\n {\n   if (float_handled == 0)\n     crash_signal (signo);\n-#if defined (USG) || defined (hpux)\n-  /* Re-enable the signal catcher.  */\n-  signal (SIGFPE, float_signal);\n-#endif\n   float_handled = 0;\n+\n+  /* On System-V derived systems, we must reinstall the signal handler.\n+     This is harmless on BSD-derived systems.  */\n   signal (SIGFPE, float_signal);\n   longjmp (float_handler, 1);\n }\n@@ -4027,9 +4025,6 @@ decode_d_option (arg)\n       case 'A':\n \tflag_debug_asm = 1;\n \tbreak;\n-      case 'm':\n-\tflag_print_mem = 1;\n-\tbreak;\n       case 'p':\n \tflag_print_asm_name = 1;\n \tbreak;\n@@ -4940,24 +4935,6 @@ toplev_main (argc, argv)\n \n   compile_file (filename);\n \n-#if !defined(OS2) && !defined(VMS) && (!defined(_WIN32) || defined (__CYGWIN__)) && !defined(__INTERIX)\n-  if (flag_print_mem)\n-    {\n-      char *lim = (char *) sbrk (0);\n-\n-      fnotice (stderr, \"Data size %ld.\\n\", (long) (lim - (char *) &environ));\n-      fflush (stderr);\n-\n-#ifndef __MSDOS__\n-#ifdef USG\n-      system (\"ps -l 1>&2\");\n-#else /* not USG  */\n-      system (\"ps v\");\n-#endif /* not USG  */\n-#endif\n-    }\n-#endif /* ! OS2 && ! VMS && (! _WIN32 || CYGWIN) && ! __INTERIX  */\n-\n   if (errorcount)\n     return (FATAL_EXIT_CODE);\n   if (sorrycount)"}]}