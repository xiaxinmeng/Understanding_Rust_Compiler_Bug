{"sha": "df61c5dc3a16178834651d3437da6fa4490b480b", "node_id": "C_kwDOANBUbNoAKGRmNjFjNWRjM2ExNjE3ODgzNDY1MWQzNDM3ZGE2ZmE0NDkwYjQ4MGI", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2022-03-31T20:33:01Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-18T08:41:01Z"}, "message": "[Ada] Overriding error on type derived from discriminated untagged private type\n\nWhen a derived type DT has an untagged private parent type PT with a\ndiscriminant, where the full type of PT is tagged, and DT inherits a\nfunction F with an anonymous access result that designates the type, the\ncompiler wrongly reports an error saying that DT must be declared\nabstract or F overridden. A test is added to exclude checking the\nabstract overriding rules that should only apply to inherited\nsubprograms of tagged derived types.\n\ngcc/ada/\n\n\t* sem_ch3.adb (Check_Abstract_Overriding): If the type is\n\tderived from an untagged type, then don't perform any of the\n\tabstract overriding error checks.", "tree": {"sha": "ea353aec3e3d42dec37aea40eb2a0dc8cf4b37a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea353aec3e3d42dec37aea40eb2a0dc8cf4b37a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df61c5dc3a16178834651d3437da6fa4490b480b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df61c5dc3a16178834651d3437da6fa4490b480b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df61c5dc3a16178834651d3437da6fa4490b480b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df61c5dc3a16178834651d3437da6fa4490b480b/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16b8ba101f770503f363c095d7be5c055705b84b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b8ba101f770503f363c095d7be5c055705b84b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16b8ba101f770503f363c095d7be5c055705b84b"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "dfade0f9193e50d04e5987017a80800673f4b32d", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df61c5dc3a16178834651d3437da6fa4490b480b/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df61c5dc3a16178834651d3437da6fa4490b480b/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=df61c5dc3a16178834651d3437da6fa4490b480b", "patch": "@@ -11047,6 +11047,14 @@ package body Sem_Ch3 is\n          Subp := Node (Elmt);\n          Alias_Subp := Alias (Subp);\n \n+         --  If the parent type is untagged, then no overriding error checks\n+         --  are needed (such as in the case of an implicit full type for\n+         --  a derived type whose parent is an untagged private type with\n+         --  a tagged full type).\n+\n+         if not Is_Tagged_Type (Etype (T)) then\n+            null;\n+\n          --  Inherited subprograms are identified by the fact that they do not\n          --  come from source, and the associated source location is the\n          --  location of the first subtype of the derived type.\n@@ -11065,7 +11073,7 @@ package body Sem_Ch3 is\n          --  overriding in Ada 2005, but wrappers need to be built for them\n          --  (see exp_ch3, Build_Controlling_Function_Wrappers).\n \n-         if Is_Null_Extension (T)\n+         elsif Is_Null_Extension (T)\n            and then Has_Controlling_Result (Subp)\n            and then Ada_Version >= Ada_2005\n            and then Present (Alias_Subp)"}]}