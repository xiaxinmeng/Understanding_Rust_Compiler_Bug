{"sha": "0dcbc6dd8e6bc57a27d5b1cdbd8447a2f5a618b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRjYmM2ZGQ4ZTZiYzU3YTI3ZDViMWNkYmQ4NDQ3YTJmNWE2MThiMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-02-12T09:29:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-02-12T09:29:39Z"}, "message": "re PR tree-optimization/89253 (ICE in split_loop, at tree-ssa-loop-split.c:566)\n\n2019-02-12  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/89253\n\t* tree-ssa-loop-split.c (tree_ssa_split_loops): Check we can\n\tduplicate the loop.\n\n\t* gfortran.dg/pr89253.f: New testcase.\n\nFrom-SVN: r268790", "tree": {"sha": "72e9df579ba369fe6ec5d2ecf2e68f8773e55fee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72e9df579ba369fe6ec5d2ecf2e68f8773e55fee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0dcbc6dd8e6bc57a27d5b1cdbd8447a2f5a618b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dcbc6dd8e6bc57a27d5b1cdbd8447a2f5a618b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dcbc6dd8e6bc57a27d5b1cdbd8447a2f5a618b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dcbc6dd8e6bc57a27d5b1cdbd8447a2f5a618b2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a4553534dfcccf992d30307a8bdbb5405ecd01f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4553534dfcccf992d30307a8bdbb5405ecd01f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4553534dfcccf992d30307a8bdbb5405ecd01f7"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "fd015eb2be6ede34ac82307943025ac38af24094", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dcbc6dd8e6bc57a27d5b1cdbd8447a2f5a618b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dcbc6dd8e6bc57a27d5b1cdbd8447a2f5a618b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0dcbc6dd8e6bc57a27d5b1cdbd8447a2f5a618b2", "patch": "@@ -1,3 +1,9 @@\n+2019-02-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/89253\n+\t* tree-ssa-loop-split.c (tree_ssa_split_loops): Check we can\n+\tduplicate the loop.\n+\n 2019-02-11  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR lto/88147"}, {"sha": "de2f0923b135ef8ec7cd6837c2461362dc14d44d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dcbc6dd8e6bc57a27d5b1cdbd8447a2f5a618b2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dcbc6dd8e6bc57a27d5b1cdbd8447a2f5a618b2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0dcbc6dd8e6bc57a27d5b1cdbd8447a2f5a618b2", "patch": "@@ -1,3 +1,8 @@\n+2019-02-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/89253\n+\t* gfortran.dg/pr89253.f: New testcase.\n+\n 2019-02-11  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/89212 - ICE converting nullptr to pointer-to-member-function."}, {"sha": "6dc9df138fd592a4ea0762219480b110946dd174", "filename": "gcc/testsuite/gfortran.dg/pr89253.f", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dcbc6dd8e6bc57a27d5b1cdbd8447a2f5a618b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89253.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dcbc6dd8e6bc57a27d5b1cdbd8447a2f5a618b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89253.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89253.f?ref=0dcbc6dd8e6bc57a27d5b1cdbd8447a2f5a618b2", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do compile }\n+! { dg-additional-options \"-fsplit-loops -fno-tree-dominator-opts -std=legacy -w\" }\n+      program jr\n+      integer :: w5, pg, zh\n+      w5 = 0\n+      write (w5)\n+      assign 0002 to w5\n+      do pg = 1, 3\n+         if (pg .eq. 1) then\n+            do zh = 1, pg\n+            end do\n+         else\n+            goto w5\n+ 0001       zh = 0\n+ 0002       zh = 0\n+            assign 0001 to w5\n+         endif\n+      end do\n+      end"}, {"sha": "999c9a303668e23bed39d50fb8d94500e51551f7", "filename": "gcc/tree-ssa-loop-split.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dcbc6dd8e6bc57a27d5b1cdbd8447a2f5a618b2/gcc%2Ftree-ssa-loop-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dcbc6dd8e6bc57a27d5b1cdbd8447a2f5a618b2/gcc%2Ftree-ssa-loop-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-split.c?ref=0dcbc6dd8e6bc57a27d5b1cdbd8447a2f5a618b2", "patch": "@@ -649,7 +649,8 @@ tree_ssa_split_loops (void)\n \t\t\t\t\tfalse, true)\n \t  && niter.cmp != ERROR_MARK\n \t  /* We can't yet handle loops controlled by a != predicate.  */\n-\t  && niter.cmp != NE_EXPR)\n+\t  && niter.cmp != NE_EXPR\n+\t  && can_duplicate_loop_p (loop))\n \t{\n \t  if (split_loop (loop, &niter))\n \t    {"}]}