{"sha": "053a35af653f47c7fa2d8addc2a37714446e9948", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUzYTM1YWY2NTNmNDdjN2ZhMmQ4YWRkYzJhMzc3MTQ0NDZlOTk0OA==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2001-07-09T15:25:34Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2001-07-09T15:25:34Z"}, "message": "expmed.c (store_fixed_bit_field): Don't use a mode bigger than the mode of the memory location.\n\n2001-07-03  Andrew Haley  <aph@redhat.com>\n\n        * expmed.c (store_fixed_bit_field): Don't use a mode bigger than\n        the mode of the memory location.\n\nFrom-SVN: r43864", "tree": {"sha": "893e05c4344b127d055622ac707e30c71feed8d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/893e05c4344b127d055622ac707e30c71feed8d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/053a35af653f47c7fa2d8addc2a37714446e9948", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/053a35af653f47c7fa2d8addc2a37714446e9948", "html_url": "https://github.com/Rust-GCC/gccrs/commit/053a35af653f47c7fa2d8addc2a37714446e9948", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/053a35af653f47c7fa2d8addc2a37714446e9948/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7e54f5b80a38372c05aa9f19937a88ec5681b0ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e54f5b80a38372c05aa9f19937a88ec5681b0ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e54f5b80a38372c05aa9f19937a88ec5681b0ab"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "9481d68d69ae14f7ed2bb2cc9e84fa59ba650931", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053a35af653f47c7fa2d8addc2a37714446e9948/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053a35af653f47c7fa2d8addc2a37714446e9948/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=053a35af653f47c7fa2d8addc2a37714446e9948", "patch": "@@ -1,3 +1,8 @@\n+2001-07-03  Andrew Haley  <aph@redhat.com>\n+\n+\t* expmed.c (store_fixed_bit_field): Don't use a mode bigger than\n+\tthe mode of the memory location.\n+\n 2001-07-09  Bo Thorsen  <bo@suse.co.uk>\n \n \t* config/i386/unix.h (ASM_OUTPUT_MI_THUNK): Fix x86-64 vtable support."}, {"sha": "d334f6dad1f61458e40815186eacf4f042dc7d79", "filename": "gcc/expmed.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053a35af653f47c7fa2d8addc2a37714446e9948/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053a35af653f47c7fa2d8addc2a37714446e9948/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=053a35af653f47c7fa2d8addc2a37714446e9948", "patch": "@@ -673,10 +673,15 @@ store_fixed_bit_field (op0, offset, bitsize, bitpos, value, struct_align)\n     {\n       /* Get the proper mode to use for this field.  We want a mode that\n \t includes the entire field.  If such a mode would be larger than\n-\t a word, we won't be doing the extraction the normal way.  */\n+\t a word, we won't be doing the extraction the normal way.  \n+\t We don't want a mode bigger than the destination.  */\n \n+      mode = GET_MODE (op0);\n+      if (GET_MODE_BITSIZE (mode) == 0\n+          || GET_MODE_BITSIZE (mode) > GET_MODE_BITSIZE (word_mode))\n+        mode = word_mode;\n       mode = get_best_mode (bitsize, bitpos + offset * BITS_PER_UNIT,\n-\t\t\t    struct_align, word_mode,\n+\t\t\t    struct_align, mode,\n \t\t\t    GET_CODE (op0) == MEM && MEM_VOLATILE_P (op0));\n \n       if (mode == VOIDmode)"}]}