{"sha": "df0f0674ebec4b6953d899bff3600bf6418927fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYwZjA2NzRlYmVjNGI2OTUzZDg5OWJmZjM2MDBiZjY0MTg5MjdmYQ==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-02-28T18:01:54Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-02-28T18:01:54Z"}, "message": "Makefile.tpl: Rearrange.\n\n\t* Makefile.tpl: Rearrange.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r63567", "tree": {"sha": "e7c7356c47586787f95c6cdffce4e0c603b99d03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7c7356c47586787f95c6cdffce4e0c603b99d03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df0f0674ebec4b6953d899bff3600bf6418927fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df0f0674ebec4b6953d899bff3600bf6418927fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df0f0674ebec4b6953d899bff3600bf6418927fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df0f0674ebec4b6953d899bff3600bf6418927fa/comments", "author": null, "committer": null, "parents": [{"sha": "a6fdf2d3bf5c3802e1e3982eed1bee911815b88f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6fdf2d3bf5c3802e1e3982eed1bee911815b88f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6fdf2d3bf5c3802e1e3982eed1bee911815b88f"}], "stats": {"total": 657, "additions": 355, "deletions": 302}, "files": [{"sha": "d58578cc6253db637f5e6650695f729076682f77", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df0f0674ebec4b6953d899bff3600bf6418927fa/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df0f0674ebec4b6953d899bff3600bf6418927fa/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=df0f0674ebec4b6953d899bff3600bf6418927fa", "patch": "@@ -1,3 +1,8 @@\n+2003-02-28  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* Makefile.tpl: Rearrange.\n+\t* Makefile.in: Regenerate.\n+\n 2003-02-25  Uwe Stieber <uwe@wwws.de>\n \n \t* configure.in: Add support for kaOS as cross build target system."}, {"sha": "6e5dc0682fb582a1913810b26f4f94ac9deaf2c1", "filename": "Makefile.in", "status": "modified", "additions": 175, "deletions": 151, "changes": 326, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df0f0674ebec4b6953d899bff3600bf6418927fa/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df0f0674ebec4b6953d899bff3600bf6418927fa/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=df0f0674ebec4b6953d899bff3600bf6418927fa", "patch": "@@ -20,8 +20,10 @@\n # Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n #\n \n+# -------------------------------\n+# Standard Autoconf-set variables\n+# -------------------------------\n VPATH=@srcdir@\n-links=@configlinks@\n \n build_alias=@build_alias@\n build_cpu=@build_cpu@\n@@ -39,21 +41,13 @@ target_vendor=@target_vendor@\n target_os=@target_os@\n target_canonical=@target_cpu@-@target_vendor@-@target_os@\n \n-enable_shared = @enable_shared@\n-enable_threads = @enable_threads@\n-enable_version_specific_runtime_libs = @enable_version_specific_runtime_libs@\n-# The file containing GCC's version number.\n-gcc_version_trigger = @gcc_version_trigger@\n-gcc_version = @gcc_version@\n-\n-# The gcc driver likes to know the arguments it was configured with.\n-TOPLEVEL_CONFIGURE_ARGUMENTS=@TOPLEVEL_CONFIGURE_ARGUMENTS@\n-\n-srcdir = @srcdir@\n+program_transform_name = @program_transform_name@\n \n prefix = @prefix@\n exec_prefix = @exec_prefix@\n \n+srcdir = @srcdir@\n+\n bindir = @bindir@\n sbindir = @sbindir@\n libexecdir = @libexecdir@\n@@ -66,14 +60,6 @@ includedir = @includedir@\n oldincludedir = @oldincludedir@\n infodir = @infodir@\n mandir = @mandir@\n-gxx_include_dir = @gxx_include_dir@\n-libstdcxx_incdir = @libstdcxx_incdir@\n-\n-tooldir = @tooldir@\n-build_tooldir = @build_tooldir@\n-\n-program_transform_name = @program_transform_name@\n-\n man1dir = $(mandir)/man1\n man2dir = $(mandir)/man2\n man3dir = $(mandir)/man3\n@@ -83,17 +69,6 @@ man6dir = $(mandir)/man6\n man7dir = $(mandir)/man7\n man8dir = $(mandir)/man8\n man9dir = $(mandir)/man9\n-# Directory in which the compiler finds executables, libraries, etc.\n-libsubdir = $(libdir)/gcc-lib/$(target_alias)/$(gcc_version)\n-GDB_NLM_DEPS = \n-\n-SHELL = @config_shell@\n-\n-# pwd command to use.  Allow user to override default by setting PWDCMD in\n-# the environment to account for automounters.  The make variable must not\n-# be called PWDCMD, otherwise the value set here is passed to make\n-# subprocesses and overrides the setting from the user's environment.\n-PWD = $${PWDCMD-pwd}\n \n # INSTALL_PROGRAM_ARGS is changed by configure.in to use -x for a\n # cygwin host.\n@@ -104,52 +79,92 @@ INSTALL_PROGRAM = $(INSTALL) $(INSTALL_PROGRAM_ARGS)\n INSTALL_SCRIPT = $(INSTALL)\n INSTALL_DATA = $(INSTALL) -m 644\n \n-AS = @AS@\n-AR = @AR@\n-AR_FLAGS = rc\n-RANLIB = @RANLIB@\n-CC = @CC@\n+# -------------------------------------------------\n+# Miscellaneous non-standard autoconf-set variables\n+# -------------------------------------------------\n \n-# Special variables passed down in EXTRA_GCC_FLAGS.  They are defined\n-# here so that they can be overridden by Makefile fragments.\n-BUILD_CC = $(CC_FOR_BUILD)\n-BUILD_PREFIX = @BUILD_PREFIX@\n-BUILD_PREFIX_1 = @BUILD_PREFIX_1@\n+links=@configlinks@\n+enable_shared = @enable_shared@\n+enable_threads = @enable_threads@\n+enable_version_specific_runtime_libs = @enable_version_specific_runtime_libs@\n+# The file containing GCC's version number.\n+gcc_version_trigger = @gcc_version_trigger@\n+gcc_version = @gcc_version@\n \n-CFLAGS = @CFLAGS@\n-CXXFLAGS = @CXXFLAGS@\n+# The gcc driver likes to know the arguments it was configured with.\n+TOPLEVEL_CONFIGURE_ARGUMENTS=@TOPLEVEL_CONFIGURE_ARGUMENTS@\n \n-LDFLAGS = \n-LIBCFLAGS = $(CFLAGS)\n-CFLAGS_FOR_BUILD = $(CFLAGS)\n-# During gcc bootstrap, if we use some random cc for stage1 then\n-# CFLAGS will be just -g.  We want to ensure that TARGET libraries\n-# (which we know are built with gcc) are built with optimizations so\n-# prepend -O2 when setting CFLAGS_FOR_TARGET.\n-CFLAGS_FOR_TARGET = -O2 $(CFLAGS)\n-LDFLAGS_FOR_TARGET = \n-LIBCFLAGS_FOR_TARGET = $(CFLAGS_FOR_TARGET)\n-PICFLAG = \n-PICFLAG_FOR_TARGET = \n+gxx_include_dir = @gxx_include_dir@\n+libstdcxx_incdir = @libstdcxx_incdir@\n \n-CXX = @CXX@\n+tooldir = @tooldir@\n+build_tooldir = @build_tooldir@\n \n-# Use -O2 to stress test the compiler.\n-LIBCXXFLAGS = $(CXXFLAGS) -fno-implicit-templates\n-CXXFLAGS_FOR_TARGET = $(CXXFLAGS)\n-LIBCXXFLAGS_FOR_TARGET = $(CXXFLAGS_FOR_TARGET) -fno-implicit-templates\n+# Directory in which the compiler finds executables, libraries, etc.\n+libsubdir = $(libdir)/gcc-lib/$(target_alias)/$(gcc_version)\n+GDB_NLM_DEPS = \n \n-DLLTOOL = @DLLTOOL@\n-WINDRES = @WINDRES@\n+# This is the name of the environment variable used for the path to\n+# the libraries.\n+RPATH_ENVVAR = @RPATH_ENVVAR@\n \n-NM = @NM@\n+# This is set by configure to REALLY_SET_LIB_PATH if --enable-shared\n+# was used.\n+SET_LIB_PATH = @SET_LIB_PATH@\n \n-LD = @LD@\n+# configure.in sets SET_LIB_PATH to this if --enable-shared was used.\n+# Some platforms don't like blank entries, so we remove duplicate,\n+# leading and trailing colons.\n+REALLY_SET_LIB_PATH = \\\n+  $(RPATH_ENVVAR)=`echo \"$(HOST_LIB_PATH):$(TARGET_LIB_PATH):$$$(RPATH_ENVVAR)\" | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`; export $(RPATH_ENVVAR);\n \n-# These values are substituted by configure.\n-DEFAULT_YACC = @DEFAULT_YACC@\n-DEFAULT_LEX = @DEFAULT_LEX@\n-DEFAULT_M4 = @DEFAULT_M4@\n+# This is the list of directories to be built for the build system.\n+BUILD_CONFIGDIRS = libiberty\n+# Build programs are put under this directory.\n+BUILD_SUBDIR = @build_subdir@\n+# This is set by the configure script to the arguments to use when configuring\n+# directories built for the build system.\n+BUILD_CONFIGARGS = @build_configargs@\n+\n+# This is the list of directories to built for the host system.\n+SUBDIRS = @configdirs@\n+# This is set by the configure script to the arguments to use when configuring\n+# directories built for the host system.\n+HOST_CONFIGARGS = @host_configargs@\n+\n+# This is set by the configure script to the list of directories which\n+# should be built using the target tools.\n+TARGET_CONFIGDIRS = @target_configdirs@\n+# Target libraries are put under this directory:\n+TARGET_SUBDIR = @target_subdir@\n+# This is set by the configure script to the arguments to use when configuring\n+# directories built for the target.\n+TARGET_CONFIGARGS = @target_configargs@\n+\n+# ----------------------------------------------\n+# Programs producing files for the BUILD machine\n+# ----------------------------------------------\n+\n+SHELL = @config_shell@\n+\n+# pwd command to use.  Allow user to override default by setting PWDCMD in\n+# the environment to account for automounters.  The make variable must not\n+# be called PWDCMD, otherwise the value set here is passed to make\n+# subprocesses and overrides the setting from the user's environment.\n+PWD = $${PWDCMD-pwd}\n+\n+# compilers to use to create programs which must be run in the build\n+# environment.\n+CC_FOR_BUILD = @CC_FOR_BUILD@\n+CFLAGS_FOR_BUILD = $(CFLAGS)\n+\n+CXX_FOR_BUILD = $(CXX)\n+\n+# Special variables passed down in EXTRA_GCC_FLAGS.  They are defined\n+# here so that they can be overridden by Makefile fragments.\n+BUILD_CC = $(CC_FOR_BUILD)\n+BUILD_PREFIX = @BUILD_PREFIX@\n+BUILD_PREFIX_1 = @BUILD_PREFIX_1@\n \n BISON=@BISON@\n USUAL_BISON = `if [ -f $$r/bison/bison ] ; then \\\n@@ -158,6 +173,7 @@ USUAL_BISON = `if [ -f $$r/bison/bison ] ; then \\\n \t    echo bison ; \\\n \t fi`\n \n+DEFAULT_YACC = @DEFAULT_YACC@\n YACC=@YACC@\n USUAL_YACC = `if [ -f $$r/bison/bison ] ; then \\\n \t    echo $$r/bison/bison -y -L $$s/bison/ ; \\\n@@ -167,11 +183,13 @@ USUAL_YACC = `if [ -f $$r/bison/bison ] ; then \\\n \t    echo ${DEFAULT_YACC} ; \\\n \tfi`\n \n+DEFAULT_LEX = @DEFAULT_LEX@\n LEX=@LEX@\n USUAL_LEX = `if [ -f $$r/flex/flex ] ; \\\n \tthen echo $$r/flex/flex ; \\\n \telse echo ${DEFAULT_LEX} ; fi`\n \n+DEFAULT_M4 = @DEFAULT_M4@\n M4 = `if [ -f $$r/m4/m4 ] ; \\\n \tthen echo $$r/m4/m4 ; \\\n \telse echo ${DEFAULT_M4} ; fi`\n@@ -198,74 +216,61 @@ RUNTEST = `if [ -f $$s/dejagnu/runtest ] ; \\\n \tthen echo $$s/dejagnu/runtest ; \\\n \telse echo runtest ; fi`\n \n+# ---------------------------------------------\n+# Programs producing files for the HOST machine\n+# ---------------------------------------------\n \n-# compilers to use to create programs which must be run in the build\n-# environment.\n-CC_FOR_BUILD = @CC_FOR_BUILD@\n-CXX_FOR_BUILD = $(CXX)\n+# This is the list of directories that may be needed in RPATH_ENVVAR\n+# so that programs built for the host machine work.\n+HOST_LIB_PATH = $$r/bfd:$$r/opcodes\n \n-SUBDIRS = @configdirs@\n+AS = @AS@\n \n-# This is set by the configure script to the list of directories which\n-# should be built using the target tools.\n-TARGET_CONFIGDIRS = @target_configdirs@\n+AR = @AR@\n+AR_FLAGS = rc\n \n-# Target libraries are put under this directory:\n-# Changed by configure to $(target_alias) if cross.\n-TARGET_SUBDIR = @target_subdir@\n+CC = @CC@\n+CFLAGS = @CFLAGS@\n+LIBCFLAGS = $(CFLAGS)\n \n-BUILD_CONFIGDIRS = libiberty\n-BUILD_SUBDIR = @build_subdir@\n+CXX = @CXX@\n+CXXFLAGS = @CXXFLAGS@\n+LIBCXXFLAGS = $(CXXFLAGS) -fno-implicit-templates\n \n-# This is set by the configure script to the arguments to use when configuring\n-# directories built for the build system.\n-BUILD_CONFIGARGS = @build_configargs@\n+DLLTOOL = @DLLTOOL@\n \n-# This is set by the configure script to the arguments to use when configuring\n-# directories built for the host system.\n-HOST_CONFIGARGS = @host_configargs@\n+NM = @NM@\n \n-# This is set by the configure script to the arguments to use when configuring\n-# directories built for the target.\n-TARGET_CONFIGARGS = @target_configargs@\n+LD = @LD@\n+LDFLAGS = \n \n-# This is set by configure to REALLY_SET_LIB_PATH if --enable-shared\n-# was used.\n-SET_LIB_PATH = @SET_LIB_PATH@\n+RANLIB = @RANLIB@\n \n-# This is the name of the environment variable used for the path to\n-# the libraries.  This may be changed by configure.in.\n-RPATH_ENVVAR = @RPATH_ENVVAR@\n+WINDRES = @WINDRES@\n \n-# This is the list of directories that may be needed in RPATH_ENVVAR\n-# so that programs built for the host machine work.\n-HOST_LIB_PATH = $$r/bfd:$$r/opcodes\n+PICFLAG = \n+\n+# -----------------------------------------------\n+# Programs producing files for the TARGET machine\n+# -----------------------------------------------\n \n # This is the list of directories that may be needed in RPATH_ENVVAR\n # so that prorgams built for the target machine work.\n TARGET_LIB_PATH = $$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs:\n \n-# configure.in sets SET_LIB_PATH to this if --enable-shared was used.\n-# Some platforms don't like blank entries, so we remove duplicate,\n-# leading and trailing colons.\n-REALLY_SET_LIB_PATH = \\\n-  $(RPATH_ENVVAR)=`echo \"$(HOST_LIB_PATH):$(TARGET_LIB_PATH):$$$(RPATH_ENVVAR)\" | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`; export $(RPATH_ENVVAR);\n-\n-# Should be substed by configure.in\n FLAGS_FOR_TARGET = @FLAGS_FOR_TARGET@\n-CC_FOR_TARGET = @CC_FOR_TARGET@\n-CXX_FOR_TARGET = @CXX_FOR_TARGET@\n-RAW_CXX_FOR_TARGET = @RAW_CXX_FOR_TARGET@\n-CXX_FOR_TARGET_FOR_RECURSIVE_MAKE = @CXX_FOR_TARGET_FOR_RECURSIVE_MAKE@\n-RAW_CXX_FOR_TARGET_FOR_RECURSIVE_MAKE = @RAW_CXX_FOR_TARGET_FOR_RECURSIVE_MAKE@\n-GCJ_FOR_TARGET = @GCJ_FOR_TARGET@\n \n-# If GCC_FOR_TARGET is not overriden on the command line, then this\n-# variable is passed down to the gcc Makefile, where it is used to\n-# build libgcc2.a.  We define it here so that it can itself be\n-# overridden on the command line.\n-GCC_FOR_TARGET=@GCC_FOR_TARGET@\n-USUAL_GCC_FOR_TARGET = $(STAGE_CC_WRAPPER) $$r/gcc/xgcc -B$$r/gcc/ $(FLAGS_FOR_TARGET)\n+AR_FOR_TARGET=@AR_FOR_TARGET@\n+USUAL_AR_FOR_TARGET = ` \\\n+  if [ -f $$r/binutils/ar ] ; then \\\n+    echo $$r/binutils/ar ; \\\n+  else \\\n+    if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n+      echo $(AR); \\\n+    else \\\n+       echo ar | sed '$(program_transform_name)' ; \\\n+    fi; \\\n+  fi`\n \n AS_FOR_TARGET=@AS_FOR_TARGET@\n USUAL_AS_FOR_TARGET = ` \\\n@@ -281,19 +286,26 @@ USUAL_AS_FOR_TARGET = ` \\\n     fi; \\\n   fi`\n \n-LD_FOR_TARGET=@LD_FOR_TARGET@\n-USUAL_LD_FOR_TARGET = ` \\\n-  if [ -f $$r/ld/ld-new ] ; then \\\n-    echo $$r/ld/ld-new ; \\\n-  elif [ -f $$r/gcc/xgcc ]; then \\\n-    $(CC_FOR_TARGET) -print-prog-name=ld ; \\\n-  else \\\n-    if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n-      echo $(LD); \\\n-    else \\\n-       echo ld | sed '$(program_transform_name)' ; \\\n-    fi; \\\n-  fi`\n+CC_FOR_TARGET = @CC_FOR_TARGET@\n+# During gcc bootstrap, if we use some random cc for stage1 then\n+# CFLAGS will be just -g.  We want to ensure that TARGET libraries\n+# (which we know are built with gcc) are built with optimizations so\n+# prepend -O2 when setting CFLAGS_FOR_TARGET.\n+CFLAGS_FOR_TARGET = -O2 $(CFLAGS)\n+# If GCC_FOR_TARGET is not overriden on the command line, then this\n+# variable is passed down to the gcc Makefile, where it is used to\n+# build libgcc2.a.  We define it here so that it can itself be\n+# overridden on the command line.\n+GCC_FOR_TARGET=@GCC_FOR_TARGET@\n+USUAL_GCC_FOR_TARGET = $(STAGE_CC_WRAPPER) $$r/gcc/xgcc -B$$r/gcc/ $(FLAGS_FOR_TARGET)\n+LIBCFLAGS_FOR_TARGET = $(CFLAGS_FOR_TARGET)\n+\n+CXX_FOR_TARGET = @CXX_FOR_TARGET@\n+RAW_CXX_FOR_TARGET = @RAW_CXX_FOR_TARGET@\n+CXX_FOR_TARGET_FOR_RECURSIVE_MAKE = @CXX_FOR_TARGET_FOR_RECURSIVE_MAKE@\n+RAW_CXX_FOR_TARGET_FOR_RECURSIVE_MAKE = @RAW_CXX_FOR_TARGET_FOR_RECURSIVE_MAKE@\n+CXXFLAGS_FOR_TARGET = $(CXXFLAGS)\n+LIBCXXFLAGS_FOR_TARGET = $(CXXFLAGS_FOR_TARGET) -fno-implicit-templates\n \n DLLTOOL_FOR_TARGET=@DLLTOOL_FOR_TARGET@\n USUAL_DLLTOOL_FOR_TARGET = ` \\\n@@ -307,27 +319,35 @@ USUAL_DLLTOOL_FOR_TARGET = ` \\\n     fi; \\\n   fi`\n \n-WINDRES_FOR_TARGET=@WINDRES_FOR_TARGET@\n-USUAL_WINDRES_FOR_TARGET = ` \\\n-  if [ -f $$r/binutils/windres ] ; then \\\n-    echo $$r/binutils/windres ; \\\n+GCJ_FOR_TARGET = @GCJ_FOR_TARGET@\n+\n+LD_FOR_TARGET=@LD_FOR_TARGET@\n+USUAL_LD_FOR_TARGET = ` \\\n+  if [ -f $$r/ld/ld-new ] ; then \\\n+    echo $$r/ld/ld-new ; \\\n+  elif [ -f $$r/gcc/xgcc ]; then \\\n+    $(CC_FOR_TARGET) -print-prog-name=ld ; \\\n   else \\\n     if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n-      echo $(WINDRES); \\\n+      echo $(LD); \\\n     else \\\n-       echo windres | sed '$(program_transform_name)' ; \\\n+       echo ld | sed '$(program_transform_name)' ; \\\n     fi; \\\n   fi`\n \n-AR_FOR_TARGET=@AR_FOR_TARGET@\n-USUAL_AR_FOR_TARGET = ` \\\n-  if [ -f $$r/binutils/ar ] ; then \\\n-    echo $$r/binutils/ar ; \\\n+LDFLAGS_FOR_TARGET = \n+\n+NM_FOR_TARGET=@NM_FOR_TARGET@\n+USUAL_NM_FOR_TARGET = ` \\\n+  if [ -f $$r/binutils/nm-new ] ; then \\\n+    echo $$r/binutils/nm-new ; \\\n+  elif [ -f $$r/gcc/xgcc ]; then \\\n+    $(CC_FOR_TARGET) -print-prog-name=nm ; \\\n   else \\\n     if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n-      echo $(AR); \\\n+      echo $(NM); \\\n     else \\\n-       echo ar | sed '$(program_transform_name)' ; \\\n+       echo nm | sed '$(program_transform_name)' ; \\\n     fi; \\\n   fi`\n \n@@ -347,20 +367,24 @@ USUAL_RANLIB_FOR_TARGET = ` \\\n     fi; \\\n   fi`\n \n-NM_FOR_TARGET=@NM_FOR_TARGET@\n-USUAL_NM_FOR_TARGET = ` \\\n-  if [ -f $$r/binutils/nm-new ] ; then \\\n-    echo $$r/binutils/nm-new ; \\\n-  elif [ -f $$r/gcc/xgcc ]; then \\\n-    $(CC_FOR_TARGET) -print-prog-name=nm ; \\\n+WINDRES_FOR_TARGET=@WINDRES_FOR_TARGET@\n+USUAL_WINDRES_FOR_TARGET = ` \\\n+  if [ -f $$r/binutils/windres ] ; then \\\n+    echo $$r/binutils/windres ; \\\n   else \\\n     if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n-      echo $(NM); \\\n+      echo $(WINDRES); \\\n     else \\\n-       echo nm | sed '$(program_transform_name)' ; \\\n+       echo windres | sed '$(program_transform_name)' ; \\\n     fi; \\\n   fi`\n \n+PICFLAG_FOR_TARGET = \n+\n+# ------------------------------------\n+# Miscellaneous targets and flag lists\n+# ------------------------------------\n+\n # The first rule in the file had better be this one.  Don't put any above it.\n # This lives here to allow makefile fragments to contain dependencies.\n all: all.normal"}, {"sha": "316e7e41cee63dcaa2316ba25a2581438517e59a", "filename": "Makefile.tpl", "status": "modified", "additions": 175, "deletions": 151, "changes": 326, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df0f0674ebec4b6953d899bff3600bf6418927fa/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df0f0674ebec4b6953d899bff3600bf6418927fa/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=df0f0674ebec4b6953d899bff3600bf6418927fa", "patch": "@@ -23,8 +23,10 @@ in\n # Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n #\n \n+# -------------------------------\n+# Standard Autoconf-set variables\n+# -------------------------------\n VPATH=@srcdir@\n-links=@configlinks@\n \n build_alias=@build_alias@\n build_cpu=@build_cpu@\n@@ -42,21 +44,13 @@ target_vendor=@target_vendor@\n target_os=@target_os@\n target_canonical=@target_cpu@-@target_vendor@-@target_os@\n \n-enable_shared = @enable_shared@\n-enable_threads = @enable_threads@\n-enable_version_specific_runtime_libs = @enable_version_specific_runtime_libs@\n-# The file containing GCC's version number.\n-gcc_version_trigger = @gcc_version_trigger@\n-gcc_version = @gcc_version@\n-\n-# The gcc driver likes to know the arguments it was configured with.\n-TOPLEVEL_CONFIGURE_ARGUMENTS=@TOPLEVEL_CONFIGURE_ARGUMENTS@\n-\n-srcdir = @srcdir@\n+program_transform_name = @program_transform_name@\n \n prefix = @prefix@\n exec_prefix = @exec_prefix@\n \n+srcdir = @srcdir@\n+\n bindir = @bindir@\n sbindir = @sbindir@\n libexecdir = @libexecdir@\n@@ -69,14 +63,6 @@ includedir = @includedir@\n oldincludedir = @oldincludedir@\n infodir = @infodir@\n mandir = @mandir@\n-gxx_include_dir = @gxx_include_dir@\n-libstdcxx_incdir = @libstdcxx_incdir@\n-\n-tooldir = @tooldir@\n-build_tooldir = @build_tooldir@\n-\n-program_transform_name = @program_transform_name@\n-\n man1dir = $(mandir)/man1\n man2dir = $(mandir)/man2\n man3dir = $(mandir)/man3\n@@ -86,17 +72,6 @@ man6dir = $(mandir)/man6\n man7dir = $(mandir)/man7\n man8dir = $(mandir)/man8\n man9dir = $(mandir)/man9\n-# Directory in which the compiler finds executables, libraries, etc.\n-libsubdir = $(libdir)/gcc-lib/$(target_alias)/$(gcc_version)\n-GDB_NLM_DEPS = \n-\n-SHELL = @config_shell@\n-\n-# pwd command to use.  Allow user to override default by setting PWDCMD in\n-# the environment to account for automounters.  The make variable must not\n-# be called PWDCMD, otherwise the value set here is passed to make\n-# subprocesses and overrides the setting from the user's environment.\n-PWD = $${PWDCMD-pwd}\n \n # INSTALL_PROGRAM_ARGS is changed by configure.in to use -x for a\n # cygwin host.\n@@ -107,52 +82,92 @@ INSTALL_PROGRAM = $(INSTALL) $(INSTALL_PROGRAM_ARGS)\n INSTALL_SCRIPT = $(INSTALL)\n INSTALL_DATA = $(INSTALL) -m 644\n \n-AS = @AS@\n-AR = @AR@\n-AR_FLAGS = rc\n-RANLIB = @RANLIB@\n-CC = @CC@\n+# -------------------------------------------------\n+# Miscellaneous non-standard autoconf-set variables\n+# -------------------------------------------------\n \n-# Special variables passed down in EXTRA_GCC_FLAGS.  They are defined\n-# here so that they can be overridden by Makefile fragments.\n-BUILD_CC = $(CC_FOR_BUILD)\n-BUILD_PREFIX = @BUILD_PREFIX@\n-BUILD_PREFIX_1 = @BUILD_PREFIX_1@\n+links=@configlinks@\n+enable_shared = @enable_shared@\n+enable_threads = @enable_threads@\n+enable_version_specific_runtime_libs = @enable_version_specific_runtime_libs@\n+# The file containing GCC's version number.\n+gcc_version_trigger = @gcc_version_trigger@\n+gcc_version = @gcc_version@\n \n-CFLAGS = @CFLAGS@\n-CXXFLAGS = @CXXFLAGS@\n+# The gcc driver likes to know the arguments it was configured with.\n+TOPLEVEL_CONFIGURE_ARGUMENTS=@TOPLEVEL_CONFIGURE_ARGUMENTS@\n \n-LDFLAGS = \n-LIBCFLAGS = $(CFLAGS)\n-CFLAGS_FOR_BUILD = $(CFLAGS)\n-# During gcc bootstrap, if we use some random cc for stage1 then\n-# CFLAGS will be just -g.  We want to ensure that TARGET libraries\n-# (which we know are built with gcc) are built with optimizations so\n-# prepend -O2 when setting CFLAGS_FOR_TARGET.\n-CFLAGS_FOR_TARGET = -O2 $(CFLAGS)\n-LDFLAGS_FOR_TARGET = \n-LIBCFLAGS_FOR_TARGET = $(CFLAGS_FOR_TARGET)\n-PICFLAG = \n-PICFLAG_FOR_TARGET = \n+gxx_include_dir = @gxx_include_dir@\n+libstdcxx_incdir = @libstdcxx_incdir@\n \n-CXX = @CXX@\n+tooldir = @tooldir@\n+build_tooldir = @build_tooldir@\n \n-# Use -O2 to stress test the compiler.\n-LIBCXXFLAGS = $(CXXFLAGS) -fno-implicit-templates\n-CXXFLAGS_FOR_TARGET = $(CXXFLAGS)\n-LIBCXXFLAGS_FOR_TARGET = $(CXXFLAGS_FOR_TARGET) -fno-implicit-templates\n+# Directory in which the compiler finds executables, libraries, etc.\n+libsubdir = $(libdir)/gcc-lib/$(target_alias)/$(gcc_version)\n+GDB_NLM_DEPS = \n \n-DLLTOOL = @DLLTOOL@\n-WINDRES = @WINDRES@\n+# This is the name of the environment variable used for the path to\n+# the libraries.\n+RPATH_ENVVAR = @RPATH_ENVVAR@\n \n-NM = @NM@\n+# This is set by configure to REALLY_SET_LIB_PATH if --enable-shared\n+# was used.\n+SET_LIB_PATH = @SET_LIB_PATH@\n \n-LD = @LD@\n+# configure.in sets SET_LIB_PATH to this if --enable-shared was used.\n+# Some platforms don't like blank entries, so we remove duplicate,\n+# leading and trailing colons.\n+REALLY_SET_LIB_PATH = \\\n+  $(RPATH_ENVVAR)=`echo \"$(HOST_LIB_PATH):$(TARGET_LIB_PATH):$$$(RPATH_ENVVAR)\" | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`; export $(RPATH_ENVVAR);\n \n-# These values are substituted by configure.\n-DEFAULT_YACC = @DEFAULT_YACC@\n-DEFAULT_LEX = @DEFAULT_LEX@\n-DEFAULT_M4 = @DEFAULT_M4@\n+# This is the list of directories to be built for the build system.\n+BUILD_CONFIGDIRS = libiberty\n+# Build programs are put under this directory.\n+BUILD_SUBDIR = @build_subdir@\n+# This is set by the configure script to the arguments to use when configuring\n+# directories built for the build system.\n+BUILD_CONFIGARGS = @build_configargs@\n+\n+# This is the list of directories to built for the host system.\n+SUBDIRS = @configdirs@\n+# This is set by the configure script to the arguments to use when configuring\n+# directories built for the host system.\n+HOST_CONFIGARGS = @host_configargs@\n+\n+# This is set by the configure script to the list of directories which\n+# should be built using the target tools.\n+TARGET_CONFIGDIRS = @target_configdirs@\n+# Target libraries are put under this directory:\n+TARGET_SUBDIR = @target_subdir@\n+# This is set by the configure script to the arguments to use when configuring\n+# directories built for the target.\n+TARGET_CONFIGARGS = @target_configargs@\n+\n+# ----------------------------------------------\n+# Programs producing files for the BUILD machine\n+# ----------------------------------------------\n+\n+SHELL = @config_shell@\n+\n+# pwd command to use.  Allow user to override default by setting PWDCMD in\n+# the environment to account for automounters.  The make variable must not\n+# be called PWDCMD, otherwise the value set here is passed to make\n+# subprocesses and overrides the setting from the user's environment.\n+PWD = $${PWDCMD-pwd}\n+\n+# compilers to use to create programs which must be run in the build\n+# environment.\n+CC_FOR_BUILD = @CC_FOR_BUILD@\n+CFLAGS_FOR_BUILD = $(CFLAGS)\n+\n+CXX_FOR_BUILD = $(CXX)\n+\n+# Special variables passed down in EXTRA_GCC_FLAGS.  They are defined\n+# here so that they can be overridden by Makefile fragments.\n+BUILD_CC = $(CC_FOR_BUILD)\n+BUILD_PREFIX = @BUILD_PREFIX@\n+BUILD_PREFIX_1 = @BUILD_PREFIX_1@\n \n BISON=@BISON@\n USUAL_BISON = `if [ -f $$r/bison/bison ] ; then \\\n@@ -161,6 +176,7 @@ USUAL_BISON = `if [ -f $$r/bison/bison ] ; then \\\n \t    echo bison ; \\\n \t fi`\n \n+DEFAULT_YACC = @DEFAULT_YACC@\n YACC=@YACC@\n USUAL_YACC = `if [ -f $$r/bison/bison ] ; then \\\n \t    echo $$r/bison/bison -y -L $$s/bison/ ; \\\n@@ -170,11 +186,13 @@ USUAL_YACC = `if [ -f $$r/bison/bison ] ; then \\\n \t    echo ${DEFAULT_YACC} ; \\\n \tfi`\n \n+DEFAULT_LEX = @DEFAULT_LEX@\n LEX=@LEX@\n USUAL_LEX = `if [ -f $$r/flex/flex ] ; \\\n \tthen echo $$r/flex/flex ; \\\n \telse echo ${DEFAULT_LEX} ; fi`\n \n+DEFAULT_M4 = @DEFAULT_M4@\n M4 = `if [ -f $$r/m4/m4 ] ; \\\n \tthen echo $$r/m4/m4 ; \\\n \telse echo ${DEFAULT_M4} ; fi`\n@@ -201,74 +219,61 @@ RUNTEST = `if [ -f $$s/dejagnu/runtest ] ; \\\n \tthen echo $$s/dejagnu/runtest ; \\\n \telse echo runtest ; fi`\n \n+# ---------------------------------------------\n+# Programs producing files for the HOST machine\n+# ---------------------------------------------\n \n-# compilers to use to create programs which must be run in the build\n-# environment.\n-CC_FOR_BUILD = @CC_FOR_BUILD@\n-CXX_FOR_BUILD = $(CXX)\n+# This is the list of directories that may be needed in RPATH_ENVVAR\n+# so that programs built for the host machine work.\n+HOST_LIB_PATH = $$r/bfd:$$r/opcodes\n \n-SUBDIRS = @configdirs@\n+AS = @AS@\n \n-# This is set by the configure script to the list of directories which\n-# should be built using the target tools.\n-TARGET_CONFIGDIRS = @target_configdirs@\n+AR = @AR@\n+AR_FLAGS = rc\n \n-# Target libraries are put under this directory:\n-# Changed by configure to $(target_alias) if cross.\n-TARGET_SUBDIR = @target_subdir@\n+CC = @CC@\n+CFLAGS = @CFLAGS@\n+LIBCFLAGS = $(CFLAGS)\n \n-BUILD_CONFIGDIRS = libiberty\n-BUILD_SUBDIR = @build_subdir@\n+CXX = @CXX@\n+CXXFLAGS = @CXXFLAGS@\n+LIBCXXFLAGS = $(CXXFLAGS) -fno-implicit-templates\n \n-# This is set by the configure script to the arguments to use when configuring\n-# directories built for the build system.\n-BUILD_CONFIGARGS = @build_configargs@\n+DLLTOOL = @DLLTOOL@\n \n-# This is set by the configure script to the arguments to use when configuring\n-# directories built for the host system.\n-HOST_CONFIGARGS = @host_configargs@\n+NM = @NM@\n \n-# This is set by the configure script to the arguments to use when configuring\n-# directories built for the target.\n-TARGET_CONFIGARGS = @target_configargs@\n+LD = @LD@\n+LDFLAGS = \n \n-# This is set by configure to REALLY_SET_LIB_PATH if --enable-shared\n-# was used.\n-SET_LIB_PATH = @SET_LIB_PATH@\n+RANLIB = @RANLIB@\n \n-# This is the name of the environment variable used for the path to\n-# the libraries.  This may be changed by configure.in.\n-RPATH_ENVVAR = @RPATH_ENVVAR@\n+WINDRES = @WINDRES@\n \n-# This is the list of directories that may be needed in RPATH_ENVVAR\n-# so that programs built for the host machine work.\n-HOST_LIB_PATH = $$r/bfd:$$r/opcodes\n+PICFLAG = \n+\n+# -----------------------------------------------\n+# Programs producing files for the TARGET machine\n+# -----------------------------------------------\n \n # This is the list of directories that may be needed in RPATH_ENVVAR\n # so that prorgams built for the target machine work.\n TARGET_LIB_PATH = $$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs:\n \n-# configure.in sets SET_LIB_PATH to this if --enable-shared was used.\n-# Some platforms don't like blank entries, so we remove duplicate,\n-# leading and trailing colons.\n-REALLY_SET_LIB_PATH = \\\n-  $(RPATH_ENVVAR)=`echo \"$(HOST_LIB_PATH):$(TARGET_LIB_PATH):$$$(RPATH_ENVVAR)\" | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`; export $(RPATH_ENVVAR);\n-\n-# Should be substed by configure.in\n FLAGS_FOR_TARGET = @FLAGS_FOR_TARGET@\n-CC_FOR_TARGET = @CC_FOR_TARGET@\n-CXX_FOR_TARGET = @CXX_FOR_TARGET@\n-RAW_CXX_FOR_TARGET = @RAW_CXX_FOR_TARGET@\n-CXX_FOR_TARGET_FOR_RECURSIVE_MAKE = @CXX_FOR_TARGET_FOR_RECURSIVE_MAKE@\n-RAW_CXX_FOR_TARGET_FOR_RECURSIVE_MAKE = @RAW_CXX_FOR_TARGET_FOR_RECURSIVE_MAKE@\n-GCJ_FOR_TARGET = @GCJ_FOR_TARGET@\n \n-# If GCC_FOR_TARGET is not overriden on the command line, then this\n-# variable is passed down to the gcc Makefile, where it is used to\n-# build libgcc2.a.  We define it here so that it can itself be\n-# overridden on the command line.\n-GCC_FOR_TARGET=@GCC_FOR_TARGET@\n-USUAL_GCC_FOR_TARGET = $(STAGE_CC_WRAPPER) $$r/gcc/xgcc -B$$r/gcc/ $(FLAGS_FOR_TARGET)\n+AR_FOR_TARGET=@AR_FOR_TARGET@\n+USUAL_AR_FOR_TARGET = ` \\\n+  if [ -f $$r/binutils/ar ] ; then \\\n+    echo $$r/binutils/ar ; \\\n+  else \\\n+    if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n+      echo $(AR); \\\n+    else \\\n+       echo ar | sed '$(program_transform_name)' ; \\\n+    fi; \\\n+  fi`\n \n AS_FOR_TARGET=@AS_FOR_TARGET@\n USUAL_AS_FOR_TARGET = ` \\\n@@ -284,19 +289,26 @@ USUAL_AS_FOR_TARGET = ` \\\n     fi; \\\n   fi`\n \n-LD_FOR_TARGET=@LD_FOR_TARGET@\n-USUAL_LD_FOR_TARGET = ` \\\n-  if [ -f $$r/ld/ld-new ] ; then \\\n-    echo $$r/ld/ld-new ; \\\n-  elif [ -f $$r/gcc/xgcc ]; then \\\n-    $(CC_FOR_TARGET) -print-prog-name=ld ; \\\n-  else \\\n-    if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n-      echo $(LD); \\\n-    else \\\n-       echo ld | sed '$(program_transform_name)' ; \\\n-    fi; \\\n-  fi`\n+CC_FOR_TARGET = @CC_FOR_TARGET@\n+# During gcc bootstrap, if we use some random cc for stage1 then\n+# CFLAGS will be just -g.  We want to ensure that TARGET libraries\n+# (which we know are built with gcc) are built with optimizations so\n+# prepend -O2 when setting CFLAGS_FOR_TARGET.\n+CFLAGS_FOR_TARGET = -O2 $(CFLAGS)\n+# If GCC_FOR_TARGET is not overriden on the command line, then this\n+# variable is passed down to the gcc Makefile, where it is used to\n+# build libgcc2.a.  We define it here so that it can itself be\n+# overridden on the command line.\n+GCC_FOR_TARGET=@GCC_FOR_TARGET@\n+USUAL_GCC_FOR_TARGET = $(STAGE_CC_WRAPPER) $$r/gcc/xgcc -B$$r/gcc/ $(FLAGS_FOR_TARGET)\n+LIBCFLAGS_FOR_TARGET = $(CFLAGS_FOR_TARGET)\n+\n+CXX_FOR_TARGET = @CXX_FOR_TARGET@\n+RAW_CXX_FOR_TARGET = @RAW_CXX_FOR_TARGET@\n+CXX_FOR_TARGET_FOR_RECURSIVE_MAKE = @CXX_FOR_TARGET_FOR_RECURSIVE_MAKE@\n+RAW_CXX_FOR_TARGET_FOR_RECURSIVE_MAKE = @RAW_CXX_FOR_TARGET_FOR_RECURSIVE_MAKE@\n+CXXFLAGS_FOR_TARGET = $(CXXFLAGS)\n+LIBCXXFLAGS_FOR_TARGET = $(CXXFLAGS_FOR_TARGET) -fno-implicit-templates\n \n DLLTOOL_FOR_TARGET=@DLLTOOL_FOR_TARGET@\n USUAL_DLLTOOL_FOR_TARGET = ` \\\n@@ -310,27 +322,35 @@ USUAL_DLLTOOL_FOR_TARGET = ` \\\n     fi; \\\n   fi`\n \n-WINDRES_FOR_TARGET=@WINDRES_FOR_TARGET@\n-USUAL_WINDRES_FOR_TARGET = ` \\\n-  if [ -f $$r/binutils/windres ] ; then \\\n-    echo $$r/binutils/windres ; \\\n+GCJ_FOR_TARGET = @GCJ_FOR_TARGET@\n+\n+LD_FOR_TARGET=@LD_FOR_TARGET@\n+USUAL_LD_FOR_TARGET = ` \\\n+  if [ -f $$r/ld/ld-new ] ; then \\\n+    echo $$r/ld/ld-new ; \\\n+  elif [ -f $$r/gcc/xgcc ]; then \\\n+    $(CC_FOR_TARGET) -print-prog-name=ld ; \\\n   else \\\n     if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n-      echo $(WINDRES); \\\n+      echo $(LD); \\\n     else \\\n-       echo windres | sed '$(program_transform_name)' ; \\\n+       echo ld | sed '$(program_transform_name)' ; \\\n     fi; \\\n   fi`\n \n-AR_FOR_TARGET=@AR_FOR_TARGET@\n-USUAL_AR_FOR_TARGET = ` \\\n-  if [ -f $$r/binutils/ar ] ; then \\\n-    echo $$r/binutils/ar ; \\\n+LDFLAGS_FOR_TARGET = \n+\n+NM_FOR_TARGET=@NM_FOR_TARGET@\n+USUAL_NM_FOR_TARGET = ` \\\n+  if [ -f $$r/binutils/nm-new ] ; then \\\n+    echo $$r/binutils/nm-new ; \\\n+  elif [ -f $$r/gcc/xgcc ]; then \\\n+    $(CC_FOR_TARGET) -print-prog-name=nm ; \\\n   else \\\n     if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n-      echo $(AR); \\\n+      echo $(NM); \\\n     else \\\n-       echo ar | sed '$(program_transform_name)' ; \\\n+       echo nm | sed '$(program_transform_name)' ; \\\n     fi; \\\n   fi`\n \n@@ -350,20 +370,24 @@ USUAL_RANLIB_FOR_TARGET = ` \\\n     fi; \\\n   fi`\n \n-NM_FOR_TARGET=@NM_FOR_TARGET@\n-USUAL_NM_FOR_TARGET = ` \\\n-  if [ -f $$r/binutils/nm-new ] ; then \\\n-    echo $$r/binutils/nm-new ; \\\n-  elif [ -f $$r/gcc/xgcc ]; then \\\n-    $(CC_FOR_TARGET) -print-prog-name=nm ; \\\n+WINDRES_FOR_TARGET=@WINDRES_FOR_TARGET@\n+USUAL_WINDRES_FOR_TARGET = ` \\\n+  if [ -f $$r/binutils/windres ] ; then \\\n+    echo $$r/binutils/windres ; \\\n   else \\\n     if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n-      echo $(NM); \\\n+      echo $(WINDRES); \\\n     else \\\n-       echo nm | sed '$(program_transform_name)' ; \\\n+       echo windres | sed '$(program_transform_name)' ; \\\n     fi; \\\n   fi`\n \n+PICFLAG_FOR_TARGET = \n+\n+# ------------------------------------\n+# Miscellaneous targets and flag lists\n+# ------------------------------------\n+\n # The first rule in the file had better be this one.  Don't put any above it.\n # This lives here to allow makefile fragments to contain dependencies.\n all: all.normal"}]}