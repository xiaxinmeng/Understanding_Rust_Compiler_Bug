{"sha": "303f4850651051e7c7ae04851d993246f6110fb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAzZjQ4NTA2NTEwNTFlN2M3YWUwNDg1MWQ5OTMyNDZmNjExMGZiNg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2018-03-01T22:08:02Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2018-03-01T22:08:02Z"}, "message": "[PR c++/84434] ICE with deduction guide\n\nhttps://gcc.gnu.org/ml/gcc-patches/2018-03/msg00063.html\n\tPR c++/84434\n\t* name-lookup.c (member_vec_dedup): Remove manually peeled\n\titeration.  Ignore dependent ctor inheritance.\n\n\tPR c++/84434\n\t* g++.dg/template/pr84434.C: New.\n\nFrom-SVN: r258114", "tree": {"sha": "f9d0aa6cc04b211372ee1f64d265b4033d030cd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9d0aa6cc04b211372ee1f64d265b4033d030cd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/303f4850651051e7c7ae04851d993246f6110fb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/303f4850651051e7c7ae04851d993246f6110fb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/303f4850651051e7c7ae04851d993246f6110fb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/303f4850651051e7c7ae04851d993246f6110fb6/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "56fc943329299ed3b53ddefd9bcdec997ee9cc71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56fc943329299ed3b53ddefd9bcdec997ee9cc71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56fc943329299ed3b53ddefd9bcdec997ee9cc71"}], "stats": {"total": 118, "additions": 72, "deletions": 46}, "files": [{"sha": "4cb531038b2551f77d28e37766563d9cdaa694c2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303f4850651051e7c7ae04851d993246f6110fb6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303f4850651051e7c7ae04851d993246f6110fb6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=303f4850651051e7c7ae04851d993246f6110fb6", "patch": "@@ -1,3 +1,9 @@\n+2018-03-01  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/84434\n+\t* name-lookup.c (member_vec_dedup): Remove manually peeled\n+\titeration.  Ignore dependent ctor inheritance.\n+\n 2018-03-01  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/71569 - decltype of template."}, {"sha": "2773cf4d878b26aacd6f7ce0175b36b8e19757b2", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 38, "deletions": 46, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303f4850651051e7c7ae04851d993246f6110fb6/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303f4850651051e7c7ae04851d993246f6110fb6/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=303f4850651051e7c7ae04851d993246f6110fb6", "patch": "@@ -1591,68 +1591,58 @@ member_vec_dedup (vec<tree, va_gc> *member_vec)\n   if (!len)\n     return;\n \n-  tree current = (*member_vec)[0], name = OVL_NAME (current);\n-  tree next = NULL_TREE, next_name = NULL_TREE;\n-  for (unsigned jx, ix = 0; ix < len;\n-       ix = jx, current = next, name = next_name)\n+  tree name = OVL_NAME ((*member_vec)[0]);\n+  for (unsigned jx, ix = 0; ix < len; ix = jx)\n     {\n+      tree current = NULL_TREE;\n       tree to_type = NULL_TREE;\n       tree to_using = NULL_TREE;\n       tree marker = NULL_TREE;\n-      if (IDENTIFIER_CONV_OP_P (name))\n-\t{\n-\t  marker = current;\n-\t  current = OVL_CHAIN (current);\n-\t  name = DECL_NAME (OVL_FUNCTION (marker));\n-\t  gcc_checking_assert (name == conv_op_identifier);\n-\t}\n \n-      if (TREE_CODE (current) == USING_DECL)\n+      for (jx = ix; jx < len; jx++)\n \t{\n-\t  current = strip_using_decl (current);\n-\t  if (is_overloaded_fn (current))\n-\t    current = NULL_TREE;\n-\t  else if (TREE_CODE (current) == USING_DECL)\n+\t  tree next = (*member_vec)[jx];\n+\t  if (jx != ix)\n \t    {\n-\t      to_using = current;\n-\t      current = NULL_TREE;\n+\t      tree next_name = OVL_NAME (next);\n+\t      if (next_name != name)\n+\t\t{\n+\t\t  name = next_name;\n+\t\t  break;\n+\t\t}\n \t    }\n-\t}\n \n-      if (current && DECL_DECLARES_TYPE_P (current))\n-\t{\n-\t  to_type = current;\n-\t  current = NULL_TREE;\n-\t}\n-\n-      for (jx = ix + 1; jx < len; jx++)\n-\t{\n-\t  next = (*member_vec)[jx];\n-\t  next_name = OVL_NAME (next);\n-\t  if (next_name != name)\n-\t    break;\n-\n-\t  if (marker)\n+\t  if (IDENTIFIER_CONV_OP_P (name))\n \t    {\n-\t      gcc_checking_assert (OVL_FUNCTION (marker)\n-\t\t\t\t   == OVL_FUNCTION (next));\n+\t      marker = next;\n \t      next = OVL_CHAIN (next);\n \t    }\n \n \t  if (TREE_CODE (next) == USING_DECL)\n \t    {\n+\t      if (IDENTIFIER_CTOR_P (name))\n+\t\t/* Dependent inherited ctor. */\n+\t\tcontinue;\n+\n \t      next = strip_using_decl (next);\n-\t      if (is_overloaded_fn (next))\n-\t\tnext = NULL_TREE;\n-\t      else if (TREE_CODE (next) == USING_DECL)\n+\t      if (TREE_CODE (next) == USING_DECL)\n \t\t{\n \t\t  to_using = next;\n-\t\t  next = NULL_TREE;\n+\t\t  continue;\n \t\t}\n+\n+\t      if (is_overloaded_fn (next))\n+\t\tcontinue;\n \t    }\n \n-\t  if (next && DECL_DECLARES_TYPE_P (next))\n-\t    to_type = next;\n+\t  if (DECL_DECLARES_TYPE_P (next))\n+\t    {\n+\t      to_type = next;\n+\t      continue;\n+\t    }\n+\n+\t  if (!current)\n+\t    current = next;\n \t}\n \n       if (to_using)\n@@ -1671,13 +1661,15 @@ member_vec_dedup (vec<tree, va_gc> *member_vec)\n \t    current = stat_hack (current, to_type);\n \t}\n \n-      gcc_assert (current);\n-      if (marker)\n+      if (current)\n \t{\n-\t  OVL_CHAIN (marker) = current;\n-\t  current = marker;\n+\t  if (marker)\n+\t    {\n+\t      OVL_CHAIN (marker) = current;\n+\t      current = marker;\n+\t    }\n+\t  (*member_vec)[store++] = current;\n \t}\n-      (*member_vec)[store++] = current;\n     }\n \n   while (store++ < len)"}, {"sha": "90b53ae2584ce13cc5a522595b2b873600af3aac", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303f4850651051e7c7ae04851d993246f6110fb6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303f4850651051e7c7ae04851d993246f6110fb6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=303f4850651051e7c7ae04851d993246f6110fb6", "patch": "@@ -1,3 +1,8 @@\n+2018-03-01  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/84434\n+\t* g++.dg/template/pr84434.C: New.\n+\n 2018-03-01  Thomas Preud'homme  <thomas.preudhomme@arm.com\n \n \t* gcc.target/arm/copysign_softfloat_1.c: Remove dg-add-options and add"}, {"sha": "b005c95df1711a8d4bc8fe29000aa90a13cd5932", "filename": "gcc/testsuite/g++.dg/template/pr84434.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303f4850651051e7c7ae04851d993246f6110fb6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr84434.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303f4850651051e7c7ae04851d993246f6110fb6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr84434.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr84434.C?ref=303f4850651051e7c7ae04851d993246f6110fb6", "patch": "@@ -0,0 +1,23 @@\n+// PR c++/84434 ICE with deduction guide and dependent using decl\n+// { dg-do compile { target c++17 } }\n+\n+template <typename T> class B {\n+public:\n+  template <typename U> B (U)  {}\n+};\n+\n+template <typename T>\n+struct scope_guard : B<T> {\n+  using base_type = B<T>;\n+\n+  using base_type::base_type;\n+\n+   ~scope_guard() = default;\n+};\n+\n+template <typename T>\n+scope_guard (T) -> scope_guard<T>;\n+\n+void Frob () {\n+  scope_guard (1);\n+}"}]}