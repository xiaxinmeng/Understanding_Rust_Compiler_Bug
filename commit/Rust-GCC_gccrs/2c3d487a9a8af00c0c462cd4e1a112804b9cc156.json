{"sha": "2c3d487a9a8af00c0c462cd4e1a112804b9cc156", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMzZDQ4N2E5YThhZjAwYzBjNDYyY2Q0ZTFhMTEyODA0YjljYzE1Ng==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2020-12-13T20:46:17Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2020-12-13T20:46:17Z"}, "message": "VAX: Unify push operation selection\n\nAvoid the possibility of code discrepancies like one fixed with the\nprevious change and improve the structure of code by selecting between\npush and non-push operations in a single place in `vax_output_int_move'.\n\nThe PUSHAB/MOVAB address moves are never actually produced from this\ncode as the SImode invocation of this function is guarded with the\n`nonsymbolic_operand' predicate, but let's not mess up with this code\ntoo much on this occasion and keep the piece in place.\n\n\t* config/vax/vax.c (vax_output_int_move): Unify push operation\n\tselection.", "tree": {"sha": "d43e662f8ae02395a8927a5c06623dcae4b5bdf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d43e662f8ae02395a8927a5c06623dcae4b5bdf0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c3d487a9a8af00c0c462cd4e1a112804b9cc156", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c3d487a9a8af00c0c462cd4e1a112804b9cc156", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c3d487a9a8af00c0c462cd4e1a112804b9cc156", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c3d487a9a8af00c0c462cd4e1a112804b9cc156/comments", "author": null, "committer": null, "parents": [{"sha": "d9ec27c1c385d21ee47db8be4168dbc45ebe6e11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9ec27c1c385d21ee47db8be4168dbc45ebe6e11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9ec27c1c385d21ee47db8be4168dbc45ebe6e11"}], "stats": {"total": 19, "additions": 6, "deletions": 13}, "files": [{"sha": "f5968d60fd6a336b408517f0db18c58c08754686", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c3d487a9a8af00c0c462cd4e1a112804b9cc156/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c3d487a9a8af00c0c462cd4e1a112804b9cc156/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=2c3d487a9a8af00c0c462cd4e1a112804b9cc156", "patch": "@@ -1235,6 +1235,7 @@ vax_output_int_move (rtx insn ATTRIBUTE_UNUSED, rtx *operands,\n {\n   rtx hi[3], lo[3];\n   const char *pattern_hi, *pattern_lo;\n+  bool push_p;\n \n   switch (mode)\n     {\n@@ -1345,19 +1346,13 @@ vax_output_int_move (rtx insn ATTRIBUTE_UNUSED, rtx *operands,\n       return \"movq %1,%0\";\n \n     case E_SImode:\n+      push_p = push_operand (operands[0], SImode);\n+\n       if (symbolic_operand (operands[1], SImode))\n-\t{\n-\t  if (push_operand (operands[0], SImode))\n-\t    return \"pushab %a1\";\n-\t  return \"movab %a1,%0\";\n-\t}\n+\treturn push_p ? \"pushab %a1\" : \"movab %a1,%0\";\n \n       if (operands[1] == const0_rtx)\n-\t{\n-\t  if (push_operand (operands[0], SImode))\n-\t    return \"pushl %1\";\n-\t  return \"clrl %0\";\n-\t}\n+\treturn push_p ? \"pushl %1\" : \"clrl %0\";\n \n       if (CONST_INT_P (operands[1])\n \t  && (unsigned HOST_WIDE_INT) INTVAL (operands[1]) >= 64)\n@@ -1383,9 +1378,7 @@ vax_output_int_move (rtx insn ATTRIBUTE_UNUSED, rtx *operands,\n \t  if (i >= -0x8000 && i < 0)\n \t    return \"cvtwl %1,%0\";\n \t}\n-      if (push_operand (operands[0], SImode))\n-\treturn \"pushl %1\";\n-      return \"movl %1,%0\";\n+      return push_p ? \"pushl %1\" : \"movl %1,%0\";\n \n     case E_HImode:\n       if (CONST_INT_P (operands[1]))"}]}