{"sha": "060a3f289f9c442174aea0599b5d609433f00952", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYwYTNmMjg5ZjljNDQyMTc0YWVhMDU5OWI1ZDYwOTQzM2YwMDk1Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T09:22:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T09:22:08Z"}, "message": "[multiple changes]\n\n2011-08-01  Pascal Obry  <obry@adacore.com>\n\n\t* a-stzunb-shared.adb, a-strunb-shared.adb, a-stwiun-shared.adb:\n\tFix Replace_Slice when High is above current string size.\n\t(Replace_Slice): Fix DL computation when High is above current\n\tstring length.\n\n2011-08-01  Gary Dismukes  <dismukes@adacore.com>\n\n\t* gnat_rm.texi: Add documentation for pragma Static_Elaboration_Desired.\n\nFrom-SVN: r177004", "tree": {"sha": "e2b94e114b55709602a6d89ccd45950da66fca16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2b94e114b55709602a6d89ccd45950da66fca16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/060a3f289f9c442174aea0599b5d609433f00952", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/060a3f289f9c442174aea0599b5d609433f00952", "html_url": "https://github.com/Rust-GCC/gccrs/commit/060a3f289f9c442174aea0599b5d609433f00952", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/060a3f289f9c442174aea0599b5d609433f00952/comments", "author": null, "committer": null, "parents": [{"sha": "e7f567a338ca40ad1dc232c2d523810f70bd9478", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f567a338ca40ad1dc232c2d523810f70bd9478", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7f567a338ca40ad1dc232c2d523810f70bd9478"}], "stats": {"total": 62, "additions": 56, "deletions": 6}, "files": [{"sha": "12ba03bd7717532ad7d577e2d1765361a2942b22", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/060a3f289f9c442174aea0599b5d609433f00952/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/060a3f289f9c442174aea0599b5d609433f00952/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=060a3f289f9c442174aea0599b5d609433f00952", "patch": "@@ -1,3 +1,14 @@\n+2011-08-01  Pascal Obry  <obry@adacore.com>\n+\n+\t* a-stzunb-shared.adb, a-strunb-shared.adb, a-stwiun-shared.adb:\n+\tFix Replace_Slice when High is above current string size.\n+\t(Replace_Slice): Fix DL computation when High is above current\n+\tstring length.\n+\n+2011-08-01  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* gnat_rm.texi: Add documentation for pragma Static_Elaboration_Desired.\n+\n 2011-08-01  Matthew Heaney  <heaney@adacore.com>\n \n \t* a-rbtgbo.adb (Delete_Node_Sans_Free): Fixed assignment to left child"}, {"sha": "b0e413dde8b5b5fb7de06080af48f32c2eae1620", "filename": "gcc/ada/a-strunb-shared.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/060a3f289f9c442174aea0599b5d609433f00952/gcc%2Fada%2Fa-strunb-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/060a3f289f9c442174aea0599b5d609433f00952/gcc%2Fada%2Fa-strunb-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strunb-shared.adb?ref=060a3f289f9c442174aea0599b5d609433f00952", "patch": "@@ -1347,7 +1347,9 @@ package body Ada.Strings.Unbounded is\n       --  Do replace operation when removed slice is not empty\n \n       if High >= Low then\n-         DL := By'Length + SR.Last + Low - High - 1;\n+         DL := By'Length + SR.Last + Low - Integer'Min (High, SR.Last) - 1;\n+         --  This is the number of characters remaining in the string after\n+         --  replacing the slice.\n \n          --  Result is empty string, reuse empty shared string\n \n@@ -1394,7 +1396,9 @@ package body Ada.Strings.Unbounded is\n       --  Do replace operation only when replaced slice is not empty\n \n       if High >= Low then\n-         DL := By'Length + SR.Last + Low - High - 1;\n+         DL := By'Length + SR.Last + Low - Integer'Min (High, SR.Last) - 1;\n+         --  This is the number of characters remaining in the string after\n+         --  replacing the slice.\n \n          --  Result is empty string, reuse empty shared string\n "}, {"sha": "95b17eff5f846b572a05f2319a2a4e5bdf8dece3", "filename": "gcc/ada/a-stwiun-shared.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/060a3f289f9c442174aea0599b5d609433f00952/gcc%2Fada%2Fa-stwiun-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/060a3f289f9c442174aea0599b5d609433f00952/gcc%2Fada%2Fa-stwiun-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwiun-shared.adb?ref=060a3f289f9c442174aea0599b5d609433f00952", "patch": "@@ -1359,7 +1359,9 @@ package body Ada.Strings.Wide_Unbounded is\n       --  Do replace operation when removed slice is not empty\n \n       if High >= Low then\n-         DL := By'Length + SR.Last + Low - High - 1;\n+         DL := By'Length + SR.Last + Low - Integer'Min (High, SR.Last) - 1;\n+         --  This is the number of characters remaining in the string after\n+         --  replacing the slice.\n \n          --  Result is empty string, reuse empty shared string\n \n@@ -1406,7 +1408,9 @@ package body Ada.Strings.Wide_Unbounded is\n       --  Do replace operation only when replaced slice is not empty\n \n       if High >= Low then\n-         DL := By'Length + SR.Last + Low - High - 1;\n+         DL := By'Length + SR.Last + Low - Integer'Min (High, SR.Last) - 1;\n+         --  This is the number of characters remaining in the string after\n+         --  replacing the slice.\n \n          --  Result is empty string, reuse empty shared string\n "}, {"sha": "965d856e182a1a5cb9edf3f29b814e0712224967", "filename": "gcc/ada/a-stzunb-shared.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/060a3f289f9c442174aea0599b5d609433f00952/gcc%2Fada%2Fa-stzunb-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/060a3f289f9c442174aea0599b5d609433f00952/gcc%2Fada%2Fa-stzunb-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzunb-shared.adb?ref=060a3f289f9c442174aea0599b5d609433f00952", "patch": "@@ -1369,7 +1369,9 @@ package body Ada.Strings.Wide_Wide_Unbounded is\n       --  Do replace operation when removed slice is not empty\n \n       if High >= Low then\n-         DL := By'Length + SR.Last + Low - High - 1;\n+         DL := By'Length + SR.Last + Low - Integer'Min (High, SR.Last) - 1;\n+         --  This is the number of characters remaining in the string after\n+         --  replacing the slice.\n \n          --  Result is empty string, reuse empty shared string\n \n@@ -1416,7 +1418,9 @@ package body Ada.Strings.Wide_Wide_Unbounded is\n       --  Do replace operation only when replaced slice is not empty\n \n       if High >= Low then\n-         DL := By'Length + SR.Last + Low - High - 1;\n+         DL := By'Length + SR.Last + Low - Integer'Min (High, SR.Last) - 1;\n+         --  This is the number of characters remaining in the string after\n+         --  replacing the slice.\n \n          --  Result is empty string, reuse empty shared string\n "}, {"sha": "ead41e6c63801c82e62f3880fe56384a70a617c5", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/060a3f289f9c442174aea0599b5d609433f00952/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/060a3f289f9c442174aea0599b5d609433f00952/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=060a3f289f9c442174aea0599b5d609433f00952", "patch": "@@ -192,6 +192,7 @@ Implementation Defined Pragmas\n * Pragma Source_File_Name::\n * Pragma Source_File_Name_Project::\n * Pragma Source_Reference::\n+* Pragma Static_Elaboration_Desired::\n * Pragma Stream_Convert::\n * Pragma Style_Checks::\n * Pragma Subtitle::\n@@ -817,6 +818,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Source_File_Name::\n * Pragma Source_File_Name_Project::\n * Pragma Source_Reference::\n+* Pragma Static_Elaboration_Desired::\n * Pragma Stream_Convert::\n * Pragma Style_Checks::\n * Pragma Subtitle::\n@@ -4597,6 +4599,31 @@ The second argument must be a string literal, it cannot be a static\n string expression other than a string literal.  This is because its value\n is needed for error messages issued by all phases of the compiler.\n \n+@node Pragma Static_Elaboration_Desired\n+@unnumberedsec Pragma Static_Elaboration_Desired\n+@findex Static_Elaboration_Desired\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma Static_Elaboration_Desired;\n+@end smallexample\n+\n+@noindent\n+This pragma is used to indicate the desire for objects declared in the library\n+unit to which the pragma applies to be initialized statically. This means that\n+if an object is initialized (either explicitly or by default initialization),\n+then the object's value can be determined at compile time and it requires no\n+code to initialize it. This generally allows the object to be allocated in\n+read-only data space. A warning is issued if an object or aggregate declared\n+at the top level of the package cannot be initialized statically. Additionally,\n+use of this pragma will suppress the generation of loops to initialize named\n+aggregates whose only choice is an others choice that specifies a component\n+value known at compile time, so that it can be allocated as static data. This\n+is limited to aggregates with a maximum of 100 components. (See also the\n+restriction No_Implicit_Loops, which supports static allocation for larger\n+aggregates.)\n+\n @node Pragma Stream_Convert\n @unnumberedsec Pragma Stream_Convert\n @findex Stream_Convert"}]}