{"sha": "a3716585f62b7a661635d13c451a778b6bae9c7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM3MTY1ODVmNjJiN2E2NjE2MzVkMTNjNDUxYTc3OGI2YmFlOWM3Zg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-12-04T14:21:58Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-12-04T14:21:58Z"}, "message": "cfgrtl.c (force_nonfallthru_and_redirect): Allow abnormal edge to be forced into nonfallthru.\n\n\t* cfgrtl.c (force_nonfallthru_and_redirect):  Allow abnormal edge\n\tto be forced into nonfallthru.\n\nFrom-SVN: r59816", "tree": {"sha": "27eb37067662ddfbcb09ebb5d889660914bb553c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27eb37067662ddfbcb09ebb5d889660914bb553c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3716585f62b7a661635d13c451a778b6bae9c7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3716585f62b7a661635d13c451a778b6bae9c7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3716585f62b7a661635d13c451a778b6bae9c7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3716585f62b7a661635d13c451a778b6bae9c7f/comments", "author": null, "committer": null, "parents": [{"sha": "8c048a52a4276abc22570de56d52de74033b7ecc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c048a52a4276abc22570de56d52de74033b7ecc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c048a52a4276abc22570de56d52de74033b7ecc"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "4667a64cd67cebd44f36f26656d3cb896c602f82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3716585f62b7a661635d13c451a778b6bae9c7f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3716585f62b7a661635d13c451a778b6bae9c7f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a3716585f62b7a661635d13c451a778b6bae9c7f", "patch": "@@ -1,3 +1,8 @@\n+Wed Dec  4 15:20:54 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cfgrtl.c (force_nonfallthru_and_redirect):  Allow abnormal edge\n+\tto be forced into nonfallthru.\n+\n 2002-12-03  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* config/t-netbsd (USER_H): Set to $(EXTRA_HEADERS)."}, {"sha": "84e62c6850e3590d7db39c0122052f5db9d47aba", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3716585f62b7a661635d13c451a778b6bae9c7f/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3716585f62b7a661635d13c451a778b6bae9c7f/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=a3716585f62b7a661635d13c451a778b6bae9c7f", "patch": "@@ -933,12 +933,23 @@ force_nonfallthru_and_redirect (e, target)\n      edge e;\n      basic_block target;\n {\n-  basic_block jump_block, new_bb = NULL;\n+  basic_block jump_block, new_bb = NULL, src = e->src;\n   rtx note;\n   edge new_edge;\n+  int abnormal_edge_flags = 0;\n \n   if (e->flags & EDGE_ABNORMAL)\n-    abort ();\n+    {\n+      /* Irritating special case - fallthru edge to the same block as abnormal\n+\t edge.\n+\t We can't redirect abnormal edge, but we still can split the fallthru\n+\t one and create separate abnormal edge to original destination. \n+\t This allows bb-reorder to make such edge non-fallthru.  */\n+      if (e->dest != target)\n+\tabort ();\n+      abnormal_edge_flags = e->flags & ~(EDGE_FALLTHRU | EDGE_CAN_FALLTHRU);\n+      e->flags &= EDGE_FALLTHRU | EDGE_CAN_FALLTHRU;\n+    }\n   else if (!(e->flags & EDGE_FALLTHRU))\n     abort ();\n   else if (e->src == ENTRY_BLOCK_PTR)\n@@ -962,7 +973,7 @@ force_nonfallthru_and_redirect (e, target)\n       make_single_succ_edge (ENTRY_BLOCK_PTR, bb, EDGE_FALLTHRU);\n     }\n \n-  if (e->src->succ->succ_next)\n+  if (e->src->succ->succ_next || abnormal_edge_flags)\n     {\n       /* Create the new structures.  */\n \n@@ -1029,6 +1040,9 @@ force_nonfallthru_and_redirect (e, target)\n   emit_barrier_after (jump_block->end);\n   redirect_edge_succ_nodup (e, target);\n \n+  if (abnormal_edge_flags)\n+    make_edge (src, target, abnormal_edge_flags);\n+\n   return new_bb;\n }\n "}]}