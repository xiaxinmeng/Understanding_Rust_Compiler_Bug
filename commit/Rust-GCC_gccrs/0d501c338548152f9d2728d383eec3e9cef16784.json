{"sha": "0d501c338548152f9d2728d383eec3e9cef16784", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ1MDFjMzM4NTQ4MTUyZjlkMjcyOGQzODNlZWMzZTljZWYxNjc4NA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-30T13:25:25Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-30T13:29:20Z"}, "message": "libstdc++: Use <sys/socket.h> features conditionally [PR 100285]\n\nThis makes the uses of getsockopt and setsockopt in\n<experimental/socket> conditional on the availability of <sys/socket.h>.\n\nIt also fixes a test to check for <sys/socket.h> instead of <socket.h>.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/100285\n\t* include/experimental/socket (__basic_socket_impl::set_option)\n\t(__basic_socket_impl::get_option) [!_GLIBCXX_HAVE_SYS_SOCKET_H]:\n\tJust set error code.\n\t* testsuite/experimental/net/socket/socket_base.cc: CHeck\n\tfor <sys/socket.h> not <socket.h>.", "tree": {"sha": "80dd7441a67f0a8fb36880fc08a99174dc6849b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80dd7441a67f0a8fb36880fc08a99174dc6849b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d501c338548152f9d2728d383eec3e9cef16784", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d501c338548152f9d2728d383eec3e9cef16784", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d501c338548152f9d2728d383eec3e9cef16784", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d501c338548152f9d2728d383eec3e9cef16784/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57028ff2d3f56deec25498f83e99c39478acc02f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57028ff2d3f56deec25498f83e99c39478acc02f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57028ff2d3f56deec25498f83e99c39478acc02f"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "9db4a245ccfc9a3ff64ceab194ce081fba871eb2", "filename": "libstdc++-v3/include/experimental/socket", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d501c338548152f9d2728d383eec3e9cef16784/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fsocket", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d501c338548152f9d2728d383eec3e9cef16784/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fsocket", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fsocket?ref=0d501c338548152f9d2728d383eec3e9cef16784", "patch": "@@ -622,6 +622,7 @@ inline namespace v1\n \tvoid\n \tset_option(const _SettableSocketOption& __option, error_code& __ec)\n \t{\n+# ifdef _GLIBCXX_HAVE_SYS_SOCKET_H\n \t  int __result = ::setsockopt(_M_sockfd, __option.level(_M_protocol),\n \t\t\t\t      __option.name(_M_protocol),\n \t\t\t\t      __option.data(_M_protocol),\n@@ -630,12 +631,16 @@ inline namespace v1\n \t    __ec.assign(errno, generic_category());\n \t  else\n \t    __ec.clear();\n+#else\n+\t  __ec = std::make_error_code(std::errc::not_supported);\n+#endif\n \t}\n \n       template<typename _GettableSocketOption>\n \tvoid\n \tget_option(_GettableSocketOption& __option, error_code& __ec) const\n \t{\n+# ifdef _GLIBCXX_HAVE_SYS_SOCKET_H\n \t  int __result = ::getsockopt(_M_sockfd, __option.level(_M_protocol),\n \t\t\t\t      __option.name(_M_protocol),\n \t\t\t\t      __option.data(_M_protocol),\n@@ -644,6 +649,9 @@ inline namespace v1\n \t    __ec.assign(errno, generic_category());\n \t  else\n \t    __ec.clear();\n+#else\n+\t  __ec = std::make_error_code(std::errc::not_supported);\n+#endif\n \t}\n \n       template<typename _IoControlCommand>"}, {"sha": "f957b6c92f6509dcca6886b152c8d4ad48b48e78", "filename": "libstdc++-v3/testsuite/experimental/net/socket/socket_base.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d501c338548152f9d2728d383eec3e9cef16784/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnet%2Fsocket%2Fsocket_base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d501c338548152f9d2728d383eec3e9cef16784/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnet%2Fsocket%2Fsocket_base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnet%2Fsocket%2Fsocket_base.cc?ref=0d501c338548152f9d2728d383eec3e9cef16784", "patch": "@@ -129,7 +129,7 @@ void check_integer_sockopt()\n \n void test_option_types()\n {\n-#if __has_include(<socket.h>)\n+#if __has_include(<sys/socket.h>)\n   check_boolean_sockopt<S::broadcast>();\n \n   check_boolean_sockopt<S::debug>();\n@@ -174,7 +174,7 @@ void test_option_types()\n \n void test_constants()\n {\n-#if __has_include(<socket.h>)\n+#if __has_include(<sys/socket.h>)\n   static_assert( is_enum<S::shutdown_type>::value, \"\" );\n   static_assert( S::shutdown_receive != S::shutdown_send, \"\" );\n   static_assert( S::shutdown_receive != S::shutdown_both, \"\" );"}]}