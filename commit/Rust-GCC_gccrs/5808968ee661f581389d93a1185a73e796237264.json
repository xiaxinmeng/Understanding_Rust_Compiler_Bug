{"sha": "5808968ee661f581389d93a1185a73e796237264", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgwODk2OGVlNjYxZjU4MTM4OWQ5M2ExMTg1YTczZTc5NjIzNzI2NA==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-08-04T18:55:15Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-08-04T18:55:15Z"}, "message": "tree.h (fold_build1): Change to macro and call fold_build1_stat.\n\n2005-08-04  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        * tree.h (fold_build1): Change to macro and call fold_build1_stat.\n        (fold_build2): Likewise.\n        (fold_build3): Likewise.\n        (fold_build1_stat): New function prototype.\n        (fold_build2_stat): Likewise.\n        (fold_build3_stat): Likewise.\n        * fold-const.c (fold_build1): Rename to ..\n        (fold_build1_stat): this.  Add MEM_STAT_DECL.  Pass the mem stats\n        through to build1_stat.\n        (fold_build2): Rename to ..\n        (fold_build2_stat): this.  Add MEM_STAT_DECL.  Pass the mem stats\n        through to build2_stat.\n        (fold_build3): Rename to ..\n        (fold_build3_stat): this.  Add MEM_STAT_DECL.  Pass the mem stats\n        through to build3_stat.\n\nFrom-SVN: r102743", "tree": {"sha": "61c19a26903750f5a2061d0c0b8838d971fe738d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61c19a26903750f5a2061d0c0b8838d971fe738d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5808968ee661f581389d93a1185a73e796237264", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5808968ee661f581389d93a1185a73e796237264", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5808968ee661f581389d93a1185a73e796237264", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5808968ee661f581389d93a1185a73e796237264/comments", "author": null, "committer": null, "parents": [{"sha": "d70eadf7badda66d552d4a68278c1d382e6e0a9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d70eadf7badda66d552d4a68278c1d382e6e0a9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d70eadf7badda66d552d4a68278c1d382e6e0a9b"}], "stats": {"total": 44, "additions": 34, "deletions": 10}, "files": [{"sha": "151a1dc404f4197676b25a6044810f90dcb6526a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5808968ee661f581389d93a1185a73e796237264/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5808968ee661f581389d93a1185a73e796237264/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5808968ee661f581389d93a1185a73e796237264", "patch": "@@ -1,3 +1,21 @@\n+2005-08-04  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\t* tree.h (fold_build1): Change to macro and call fold_build1_stat.\n+\t(fold_build2): Likewise.\n+\t(fold_build3): Likewise.\n+\t(fold_build1_stat): New function prototype.\n+\t(fold_build2_stat): Likewise.\n+\t(fold_build3_stat): Likewise.\n+\t* fold-const.c (fold_build1): Rename to ..\n+\t(fold_build1_stat): this.  Add MEM_STAT_DECL.  Pass the mem stats\n+\tthrough to build1_stat.\n+\t(fold_build2): Rename to ..\n+\t(fold_build2_stat): this.  Add MEM_STAT_DECL.  Pass the mem stats\n+\tthrough to build2_stat.\n+\t(fold_build3): Rename to ..\n+\t(fold_build3_stat): this.  Add MEM_STAT_DECL.  Pass the mem stats\n+\tthrough to build3_stat.\n+\n 2005-08-04  David Edelsohn  <edelsohn@gnu.org>\n \n \t* function.c (assign_stack_local_1): Do not correct stack slot"}, {"sha": "383bd670d1d4211916a0836d525cf8f74d9c1894", "filename": "gcc/fold-const.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5808968ee661f581389d93a1185a73e796237264/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5808968ee661f581389d93a1185a73e796237264/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=5808968ee661f581389d93a1185a73e796237264", "patch": "@@ -10414,7 +10414,7 @@ fold_checksum_tree (tree expr, struct md5_ctx *ctx, htab_t ht)\n    operand OP0.  */\n \n tree\n-fold_build1 (enum tree_code code, tree type, tree op0)\n+fold_build1_stat (enum tree_code code, tree type, tree op0 MEM_STAT_DECL)\n {\n   tree tem;\n #ifdef ENABLE_FOLD_CHECKING\n@@ -10431,7 +10431,7 @@ fold_build1 (enum tree_code code, tree type, tree op0)\n   \n   tem = fold_unary (code, type, op0);\n   if (!tem)\n-    tem = build1 (code, type, op0);\n+    tem = build1_stat (code, type, op0 PASS_MEM_STAT);\n   \n #ifdef ENABLE_FOLD_CHECKING\n   md5_init_ctx (&ctx);\n@@ -10451,7 +10451,8 @@ fold_build1 (enum tree_code code, tree type, tree op0)\n    with operands OP0 and OP1.  */\n \n tree\n-fold_build2 (enum tree_code code, tree type, tree op0, tree op1)\n+fold_build2_stat (enum tree_code code, tree type, tree op0, tree op1\n+\t\t  MEM_STAT_DECL)\n {\n   tree tem;\n #ifdef ENABLE_FOLD_CHECKING\n@@ -10476,7 +10477,7 @@ fold_build2 (enum tree_code code, tree type, tree op0, tree op1)\n \n   tem = fold_binary (code, type, op0, op1);\n   if (!tem)\n-    tem = build2 (code, type, op0, op1);\n+    tem = build2_stat (code, type, op0, op1 PASS_MEM_STAT);\n   \n #ifdef ENABLE_FOLD_CHECKING\n   md5_init_ctx (&ctx);\n@@ -10504,8 +10505,10 @@ fold_build2 (enum tree_code code, tree type, tree op0, tree op1)\n    type TYPE with operands OP0, OP1, and OP2.  */\n \n tree\n-fold_build3 (enum tree_code code, tree type, tree op0, tree op1, tree op2)\n-{  tree tem;\n+fold_build3_stat (enum tree_code code, tree type, tree op0, tree op1, tree op2\n+\t     MEM_STAT_DECL)\n+{\n+  tree tem;\n #ifdef ENABLE_FOLD_CHECKING\n   unsigned char checksum_before_op0[16],\n                 checksum_before_op1[16],\n@@ -10535,7 +10538,7 @@ fold_build3 (enum tree_code code, tree type, tree op0, tree op1, tree op2)\n   \n   tem = fold_ternary (code, type, op0, op1, op2);\n   if (!tem)\n-    tem =  build3 (code, type, op0, op1, op2);\n+    tem =  build3_stat (code, type, op0, op1, op2 PASS_MEM_STAT);\n       \n #ifdef ENABLE_FOLD_CHECKING\n   md5_init_ctx (&ctx);"}, {"sha": "7ddfa97dae41e8bf67f448c96b21f7834bd6d6b3", "filename": "gcc/tree.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5808968ee661f581389d93a1185a73e796237264/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5808968ee661f581389d93a1185a73e796237264/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=5808968ee661f581389d93a1185a73e796237264", "patch": "@@ -3789,9 +3789,12 @@ extern tree fold (tree);\n extern tree fold_unary (enum tree_code, tree, tree);\n extern tree fold_binary (enum tree_code, tree, tree, tree);\n extern tree fold_ternary (enum tree_code, tree, tree, tree, tree);\n-extern tree fold_build1 (enum tree_code, tree, tree);\n-extern tree fold_build2 (enum tree_code, tree, tree, tree);\n-extern tree fold_build3 (enum tree_code, tree, tree, tree, tree);\n+extern tree fold_build1_stat (enum tree_code, tree, tree MEM_STAT_DECL);\n+#define fold_build1(c,t1,t2) fold_build1_stat (c, t1, t2 MEM_STAT_INFO)\n+extern tree fold_build2_stat (enum tree_code, tree, tree, tree MEM_STAT_DECL);\n+#define fold_build2(c,t1,t2,t3) fold_build2_stat (c, t1, t2, t3 MEM_STAT_INFO)\n+extern tree fold_build3_stat (enum tree_code, tree, tree, tree, tree MEM_STAT_DECL);\n+#define fold_build3(c,t1,t2,t3,t4) fold_build3_stat (c, t1, t2, t3, t4 MEM_STAT_INFO)\n extern tree fold_initializer (tree);\n extern tree fold_convert (tree, tree);\n extern tree fold_single_bit_test (enum tree_code, tree, tree, tree);"}]}