{"sha": "c377a5902350ca6ef843d256485263ef1880b614", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM3N2E1OTAyMzUwY2E2ZWY4NDNkMjU2NDg1MjYzZWYxODgwYjYxNA==", "commit": {"author": {"name": "Charles Hannum", "email": "mycroft@gnu.org", "date": "1992-05-06T03:54:41Z"}, "committer": {"name": "Charles Hannum", "email": "mycroft@gnu.org", "date": "1992-05-06T03:54:41Z"}, "message": "entered into RCS\n\nFrom-SVN: r913", "tree": {"sha": "709478208fa5063edf30b5c5d809d1bc08a195b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/709478208fa5063edf30b5c5d809d1bc08a195b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c377a5902350ca6ef843d256485263ef1880b614", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c377a5902350ca6ef843d256485263ef1880b614", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c377a5902350ca6ef843d256485263ef1880b614", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c377a5902350ca6ef843d256485263ef1880b614/comments", "author": null, "committer": null, "parents": [{"sha": "d3614a37de84d6a4c96b17c6927b31120206b2c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3614a37de84d6a4c96b17c6927b31120206b2c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3614a37de84d6a4c96b17c6927b31120206b2c5"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "6cc7816cb7f883e666261760ae052655a5fb7016", "filename": "gcc/config/i386/att.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c377a5902350ca6ef843d256485263ef1880b614/gcc%2Fconfig%2Fi386%2Fatt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c377a5902350ca6ef843d256485263ef1880b614/gcc%2Fconfig%2Fi386%2Fatt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fatt.h?ref=c377a5902350ca6ef843d256485263ef1880b614", "patch": "@@ -84,12 +84,14 @@ bss_section ()\t\t\t\t\t\t\t\\\n    PREFIX is the class of label and NUM is the number within the class.\n    This is suitable for output with `assemble_name'.  */\n \n+#undef ASM_GENERATE_INTERNAL_LABEL\n #define ASM_GENERATE_INTERNAL_LABEL(BUF,PREFIX,NUMBER)\t\\\n   sprintf ((BUF), \".%s%d\", (PREFIX), (NUMBER))\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */\n \n+#undef ASM_OUTPUT_INTERNAL_LABEL\n #define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n   fprintf (FILE, \".%s%d:\\n\", PREFIX, NUM)\n "}]}