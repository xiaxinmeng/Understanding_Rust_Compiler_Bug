{"sha": "64f62168ef931afaa0a57fadf9b4410cadcbe249", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRmNjIxNjhlZjkzMWFmYWEwYTU3ZmFkZjliNDQxMGNhZGNiZTI0OQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-04-07T04:24:20Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-04-07T04:24:20Z"}, "message": "Sync\n\t* Add symcat file.\n\t* libiberty.h expose basename prototype on more systems\n\nFrom-SVN: r26238", "tree": {"sha": "6e6cc6a956154ca32ba5d6f69e0eeaf4c817e7e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e6cc6a956154ca32ba5d6f69e0eeaf4c817e7e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64f62168ef931afaa0a57fadf9b4410cadcbe249", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64f62168ef931afaa0a57fadf9b4410cadcbe249", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64f62168ef931afaa0a57fadf9b4410cadcbe249", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64f62168ef931afaa0a57fadf9b4410cadcbe249/comments", "author": null, "committer": null, "parents": [{"sha": "9c0225173d2978616b1bc9c18f2be39f054a4b98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c0225173d2978616b1bc9c18f2be39f054a4b98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c0225173d2978616b1bc9c18f2be39f054a4b98"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "120fb2adb87bb6a79017379c6e46bb4fe0b71909", "filename": "include/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64f62168ef931afaa0a57fadf9b4410cadcbe249/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64f62168ef931afaa0a57fadf9b4410cadcbe249/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=64f62168ef931afaa0a57fadf9b4410cadcbe249", "patch": "@@ -6,6 +6,10 @@\n \n \t* splay-tree.h (splay_tree_compare_ints): Declare.\n \n+Wed Mar 24 12:46:29 1999  Andrew Cagney  <cagney@amy.cygnus.com>\n+\n+\t* libiberty.h (basename): Cygwin{,32} should have the prototype.\n+\n Mon Dec 14 09:53:31 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* demangle.h: Don't check IN_GCC anymore.\n@@ -26,6 +30,10 @@ Tue Dec  8 00:30:31 1998  Elena Zannoni  <ezannoni@kwikemart.cygnus.com>\n         (ARM_DEMANGLING): coerce to int.\n         (HP_DEMANGLING): new macro.\n \n+Fri Nov 20 13:14:00 1998  Andrew Cagney  <cagney@b1.cygnus.com>\n+\n+\t* libiberty.h (basename): Add prototype for FreeBSD.\n+\n Fri Nov 13 19:19:11 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* libiberty.h: Prototype xcalloc."}, {"sha": "cf313662ef42be870bdab23023d09506d6eb0ea3", "filename": "include/libiberty.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64f62168ef931afaa0a57fadf9b4410cadcbe249/include%2Flibiberty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64f62168ef931afaa0a57fadf9b4410cadcbe249/include%2Flibiberty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Flibiberty.h?ref=64f62168ef931afaa0a57fadf9b4410cadcbe249", "patch": "@@ -36,7 +36,7 @@ extern char **dupargv PARAMS ((char **));\n    across different systems, sometimes as \"char *\" and sometimes as\n    \"const char *\" */\n \n-#if defined(__GNU_LIBRARY__ ) || defined (__linux__)\n+#if defined (__GNU_LIBRARY__ ) || defined (__linux__) || defined (__FreeBSD__) || defined (__CYGWIN__) || defined (__CYGWIN32__)\n extern char *basename PARAMS ((const char *));\n #else\n extern char *basename ();"}, {"sha": "01efada2618929c6405265137023a4d63e35b474", "filename": "include/symcat.h", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64f62168ef931afaa0a57fadf9b4410cadcbe249/include%2Fsymcat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64f62168ef931afaa0a57fadf9b4410cadcbe249/include%2Fsymcat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fsymcat.h?ref=64f62168ef931afaa0a57fadf9b4410cadcbe249", "patch": "@@ -0,0 +1,40 @@\n+/* Symbol concatenation utilities.\n+\n+   Copyright (C) 1998, Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+ \n+   You should have received a copy of the GNU General Public License along\n+   with this program; if not, write to the Free Software Foundation, Inc.,\n+   59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+#ifndef SYM_CAT_H\n+#define SYM_CAT_H\n+\n+#if defined (__STDC__) || defined (ALMOST_STDC)\n+#define CONCAT2(a,b)\t a##b\n+#define CONCAT3(a,b,c)\t a##b##c\n+#define CONCAT4(a,b,c,d) a##b##c##d\n+#define STRINGX(s) #s\n+#else\n+#define CONCAT2(a,b)\t a/**/b\n+#define CONCAT3(a,b,c)\t a/**/b/**/c\n+#define CONCAT4(a,b,c,d) a/**/b/**/c/**/d\n+#define STRINGX(s) \"?\"\n+#endif\n+\n+#define XCONCAT2(a,b)     CONCAT2(a,b)\n+#define XCONCAT3(a,b,c)   CONCAT3(a,b,c)\n+#define XCONCAT4(a,b,c,d) CONCAT4(a,b,c,d)\n+\n+#define XSTRING(s) STRINGX(s) \n+\n+#endif SYM_CAT_H"}]}