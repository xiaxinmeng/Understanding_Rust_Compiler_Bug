{"sha": "f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY3YTk4ODFhODZiY2RlYjY3ZmE1MmMwYThlYjQ1Y2U5ZDQxMzRkNA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-07-27T17:27:06Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-07-27T17:27:06Z"}, "message": "[multiple changes]\n\n2010-07-27  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/ext/vstring_util.h: Include bits/range_access.h.\n\t* testsuite/ext/vstring/range_access.cc: New test.\n\n2010-07-27  Ed Smith-Rowland  <3dw4rd@verizon.net>\n\n\t* include/bits/range_access.h: New.\n\t* include/Makefile.in: Add bits/range_access.h.\n\t* include/Makefile.am: Regenerate.\n\t* include/std/array: Include bits/range_access.h.\n\t* include/std/deque: Ditto.\n\t* include/std/forward_list: Ditto.\n\t* include/std/iterator: Ditto.\n\t* include/std/list: Ditto.\n\t* include/std/map: Ditto.\n\t* include/std/regex: Ditto.\n\t* include/std/set: Ditto.\n\t* include/std/string: Ditto.\n\t* include/std/unordered_map: Ditto.\n\t* include/std/unordered_set: Ditto.\n\t* include/std/vector: Ditto.\n\t* include/std/valarray: Add begin() and end().\n\t* libsupc++/initializer_list: Ditto.\n\t* include/tr1_impl/utility: Add begin() and end().\n\t* include/std/tuple: Ditto.\n\t* testsuite/24_iterators/headers/iterator/range_access.cc: New test.\n\t* testsuite/24_iterators/range_access.cc: Ditto.\n\t* testsuite/28_regex/range_access.cc: Ditto.\n\t* testsuite/18_support/initializer_list/range_access.cc: Ditto.\n\t* testsuite/21_strings/basic_string/range_access.cc: Ditto.\n\t* testsuite/26_numerics/valarray/range_access.cc: Ditto.\n\t* testsuite/23_containers/unordered_map/range_access.cc: Ditto.\n\t* testsuite/23_containers/multimap/range_access.cc: Ditto.\n\t* testsuite/23_containers/set/range_access.cc: Ditto.\n\t* testsuite/23_containers/unordered_multimap/range_access.cc: Ditto.\n\t* testsuite/23_containers/forward_list/range_access.cc: Ditto.\n\t* testsuite/23_containers/unordered_set/range_access.cc: Ditto.\n\t* testsuite/23_containers/vector/range_access.cc: Ditto.\n\t* testsuite/23_containers/deque/range_access.cc: Ditto.\n\t* testsuite/23_containers/multiset/range_access.cc: Ditto.\n\t* testsuite/23_containers/list/range_access.cc: Ditto.\n\t* testsuite/23_containers/unordered_multiset/range_access.cc: Ditto.\n\t* testsuite/23_containers/map/range_access.cc: Ditto.\n\t* testsuite/23_containers/array/range_access.cc: Ditto.\n\t* testsuite/20_util/tuple/range_access.cc: Ditto.\n\t* testsuite/20_util/pair/range_access.cc: Ditto.\n\nFrom-SVN: r162578", "tree": {"sha": "fe5f2e2bd09e714c8ed3e945800795e79446e5c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe5f2e2bd09e714c8ed3e945800795e79446e5c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/comments", "author": null, "committer": null, "parents": [{"sha": "9f39bd531612c767cbcf0148b3baa95a9122453e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f39bd531612c767cbcf0148b3baa95a9122453e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f39bd531612c767cbcf0148b3baa95a9122453e"}], "stats": {"total": 971, "additions": 970, "deletions": 1}, "files": [{"sha": "e435f9f2e39c5a15690e766f0a3a1f42a2111d25", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -1,3 +1,51 @@\n+2010-07-27  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/ext/vstring_util.h: Include bits/range_access.h.\n+\t* testsuite/ext/vstring/range_access.cc: New test.\n+\n+2010-07-27  Ed Smith-Rowland  <3dw4rd@verizon.net>\n+\n+\t* include/bits/range_access.h: New.\n+\t* include/Makefile.in: Add bits/range_access.h.\n+\t* include/Makefile.am: Regenerate.\n+\t* include/std/array: Include bits/range_access.h.\n+\t* include/std/deque: Ditto.\n+\t* include/std/forward_list: Ditto.\n+\t* include/std/iterator: Ditto.\n+\t* include/std/list: Ditto.\n+\t* include/std/map: Ditto.\n+\t* include/std/regex: Ditto.\n+\t* include/std/set: Ditto.\n+\t* include/std/string: Ditto.\n+\t* include/std/unordered_map: Ditto.\n+\t* include/std/unordered_set: Ditto.\n+\t* include/std/vector: Ditto.\n+\t* include/std/valarray: Add begin() and end().\n+\t* libsupc++/initializer_list: Ditto.\n+\t* include/tr1_impl/utility: Add begin() and end().\n+\t* include/std/tuple: Ditto.\n+\t* testsuite/24_iterators/headers/iterator/range_access.cc: New test.\n+\t* testsuite/24_iterators/range_access.cc: Ditto.\n+\t* testsuite/28_regex/range_access.cc: Ditto.\n+\t* testsuite/18_support/initializer_list/range_access.cc: Ditto.\n+\t* testsuite/21_strings/basic_string/range_access.cc: Ditto.\n+\t* testsuite/26_numerics/valarray/range_access.cc: Ditto.\n+\t* testsuite/23_containers/unordered_map/range_access.cc: Ditto.\n+\t* testsuite/23_containers/multimap/range_access.cc: Ditto.\n+\t* testsuite/23_containers/set/range_access.cc: Ditto.\n+\t* testsuite/23_containers/unordered_multimap/range_access.cc: Ditto.\n+\t* testsuite/23_containers/forward_list/range_access.cc: Ditto.\n+\t* testsuite/23_containers/unordered_set/range_access.cc: Ditto.\n+\t* testsuite/23_containers/vector/range_access.cc: Ditto.\n+\t* testsuite/23_containers/deque/range_access.cc: Ditto.\n+\t* testsuite/23_containers/multiset/range_access.cc: Ditto.\n+\t* testsuite/23_containers/list/range_access.cc: Ditto.\n+\t* testsuite/23_containers/unordered_multiset/range_access.cc: Ditto.\n+\t* testsuite/23_containers/map/range_access.cc: Ditto.\n+\t* testsuite/23_containers/array/range_access.cc: Ditto.\n+\t* testsuite/20_util/tuple/range_access.cc: Ditto.\n+\t* testsuite/20_util/pair/range_access.cc: Ditto.\n+\n 2010-07-27  Paolo Carlini  <paolo.carlini@oracle.com>\n \t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n "}, {"sha": "6a371a4f8fa2a296830908edf568b15e5ccc5982", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -121,6 +121,7 @@ bits_headers = \\\n \t${bits_srcdir}/postypes.h \\\n \t${bits_srcdir}/random.h \\\n \t${bits_srcdir}/random.tcc \\\n+\t${bits_srcdir}/range_access.h \\\n \t${bits_srcdir}/regex.h \\\n \t${bits_srcdir}/regex_compiler.h \\\n \t${bits_srcdir}/regex_constants.h \\"}, {"sha": "1aa641a9c864da7dbaeed4decb21b9bd427cab68", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -363,6 +363,7 @@ bits_headers = \\\n \t${bits_srcdir}/postypes.h \\\n \t${bits_srcdir}/random.h \\\n \t${bits_srcdir}/random.tcc \\\n+\t${bits_srcdir}/range_access.h \\\n \t${bits_srcdir}/regex.h \\\n \t${bits_srcdir}/regex_compiler.h \\\n \t${bits_srcdir}/regex_constants.h \\"}, {"sha": "e9bf67e499bcac6cd6b1d17528aebe8b4287849f", "filename": "libstdc++-v3/include/bits/range_access.h", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,102 @@\n+// <range_access.h> -*- C++ -*-\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+/** @file bits/range_access.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n+#ifndef _GLIBCXX_RANGE_ACCESS_H\n+#define _GLIBCXX_RANGE_ACCESS_H 1\n+\n+#pragma GCC system_header\n+\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+\n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n+  /**\n+   *  @brief  Return an iterator pointing to the first element of\n+   *          the container.\n+   *  @param  cont  Container.\n+   */\n+  template<class _Container>\n+    inline auto\n+    begin(_Container& __cont) -> decltype(__cont.begin())\n+    { return __cont.begin(); }\n+\n+  /**\n+   *  @brief  Return an iterator pointing to the first element of\n+   *          the const container.\n+   *  @param  cont  Container.\n+   */\n+  template<class _Container>\n+    inline auto\n+    begin(const _Container& __cont) -> decltype(__cont.begin())\n+    { return __cont.begin(); }\n+\n+  /**\n+   *  @brief  Return an iterator pointing to one past the last element of\n+   *          the container.\n+   *  @param  cont  Container.\n+   */\n+  template<class _Container>\n+    inline auto\n+    end(_Container& __cont) -> decltype(__cont.end())\n+    { return __cont.end(); }\n+\n+  /**\n+   *  @brief  Return an iterator pointing to one past the last element of\n+   *          the const container.\n+   *  @param  cont  Container.\n+   */\n+  template<class _Container>\n+    inline auto\n+    end(const _Container& __cont) -> decltype(__cont.end())\n+    { return __cont.end(); }\n+\n+  /**\n+   *  @brief  Return an iterator pointing to the first element of the array.\n+   *  @param  arr  Array.\n+   */\n+  template<class _Tp, size_t _Nm>\n+    inline _Tp*\n+    begin(_Tp (&__arr)[_Nm])\n+    { return __arr; }\n+\n+  /**\n+   *  @brief  Return an iterator pointing to one past the last element\n+   *          of the array.\n+   *  @param  arr  Array.\n+   */\n+  template<class _Tp, size_t _Nm>\n+    inline _Tp*\n+    end(_Tp (&__arr)[_Nm])\n+    { return __arr + _Nm; }\n+\n+_GLIBCXX_END_NAMESPACE\n+\n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n+\n+#endif // _GLIBCXX_RANGE_ACCESS_H"}, {"sha": "6779f4dc9f0e8bf8c348320e64eef9b550c51aed", "filename": "libstdc++-v3/include/ext/vstring_util.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring_util.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring_util.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring_util.h?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -1,6 +1,7 @@\n // Versatile string utility -*- C++ -*-\n \n-// Copyright (C) 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -42,6 +43,7 @@\n #include <bits/stl_iterator.h>\n #include <ext/numeric_traits.h>\n #include <bits/move.h>\n+#include <bits/range_access.h>\n \n _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n "}, {"sha": "26e762de3397e14822098496414955bd0a3aefc9", "filename": "libstdc++-v3/include/std/array", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -40,6 +40,7 @@\n #endif\n \n #include <bits/stl_algobase.h>\n+#include <bits/range_access.h>\n \n #if defined(_GLIBCXX_INCLUDE_AS_CXX0X)\n #  include <tr1_impl/array>"}, {"sha": "b7f4b0acdaf4a0fd307feaf6b10c0bcae32d8bf9", "filename": "libstdc++-v3/include/std/deque", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdeque?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -63,6 +63,7 @@\n #include <bits/stl_construct.h>\n #include <bits/stl_uninitialized.h>\n #include <bits/stl_deque.h>\n+#include <bits/range_access.h>\n \n #ifndef _GLIBCXX_EXPORT_TEMPLATE\n # include <bits/deque.tcc>"}, {"sha": "8b11db765b4de78b1401c7ba5a04a37e9ecddf78", "filename": "libstdc++-v3/include/std/forward_list", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fforward_list", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fforward_list", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fforward_list?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -36,6 +36,7 @@\n #else\n \n #include <bits/forward_list.h>\n+#include <bits/range_access.h>\n \n #ifndef _GLIBCXX_EXPORT_TEMPLATE\n # include <bits/forward_list.tcc>"}, {"sha": "90152b7cb287aee124ffa1bd7d377248409faa14", "filename": "libstdc++-v3/include/std/iterator", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiterator", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiterator", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiterator?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -65,5 +65,6 @@\n #include <istream>\n #include <bits/stream_iterator.h>\n #include <bits/streambuf_iterator.h>\n+#include <bits/range_access.h>\n \n #endif /* _GLIBCXX_ITERATOR */"}, {"sha": "566bd89ca8eeb67730877acef0343e8b5a717440", "filename": "libstdc++-v3/include/std/list", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flist?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -61,6 +61,7 @@\n #include <bits/stl_algobase.h>\n #include <bits/allocator.h>\n #include <bits/stl_list.h>\n+#include <bits/range_access.h>\n \n #ifndef _GLIBCXX_EXPORT_TEMPLATE\n # include <bits/list.tcc>"}, {"sha": "0ff8bdd94a206e175745fd835355e7048bd7be28", "filename": "libstdc++-v3/include/std/map", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmap", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmap", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmap?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -60,6 +60,7 @@\n #include <bits/stl_tree.h>\n #include <bits/stl_map.h>\n #include <bits/stl_multimap.h>\n+#include <bits/range_access.h>\n \n #ifdef _GLIBCXX_DEBUG\n # include <debug/map>"}, {"sha": "eabb843078e725fd92c8c0141c3d41a54091a460", "filename": "libstdc++-v3/include/std/regex", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fregex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fregex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fregex?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -52,6 +52,7 @@\n #include <utility>\n #include <vector>\n \n+#include <bits/range_access.h>\n #include <bits/regex_constants.h>\n #include <bits/regex_error.h>\n #include <bits/regex_cursor.h>"}, {"sha": "47d0c971a32035e453b99238af451f498e65d29c", "filename": "libstdc++-v3/include/std/set", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fset?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -60,6 +60,7 @@\n #include <bits/stl_tree.h>\n #include <bits/stl_set.h>\n #include <bits/stl_multiset.h>\n+#include <bits/range_access.h>\n \n #ifdef _GLIBCXX_DEBUG\n # include <debug/set>"}, {"sha": "439557fe169ed0be8d50eb9a99ca19baf03cbf12", "filename": "libstdc++-v3/include/std/string", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -51,6 +51,7 @@\n #include <ext/numeric_traits.h> \n #include <bits/stl_algobase.h> \n #include <bits/basic_string.h>\n+#include <bits/range_access.h>\n \n #ifndef _GLIBCXX_EXPORT_TEMPLATE\n # include <bits/basic_string.tcc> "}, {"sha": "d2432511f24a077d85029fd163922501fb6b182f", "filename": "libstdc++-v3/include/std/tuple", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -696,6 +696,24 @@ namespace std\n \n   const _Swallow_assign ignore{};\n \n+  /**\n+   *  @brief  Return the first of a tuple containing two input iterators.\n+   *  @param  tpl  Tuple.\n+   */\n+  template<class _InputIterator>\n+    inline _InputIterator\n+    begin(const tuple<_InputIterator, _InputIterator>& __tpl)\n+    { return get<0>(__tpl); }\n+\n+  /**\n+   *  @brief  Return the second of a tuple containing two input iterators.\n+   *  @param  tpl  Tuple.\n+   */\n+  template<class _InputIterator>\n+    inline _InputIterator\n+    end(const tuple<_InputIterator, _InputIterator>& __tpl)\n+    { return get<1>(__tpl); }\n+\n   /**\n    * Stores a tuple of indices. Used by bind() to extract the elements\n    * in a tuple. "}, {"sha": "e77a2972af82d254a12ef8c94ce8bbd5eddcb137", "filename": "libstdc++-v3/include/std/unordered_map", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Funordered_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Funordered_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Funordered_map?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -44,6 +44,7 @@\n #include <bits/functional_hash.h>\n #include <bits/hashtable.h>\n #include <bits/unordered_map.h>\n+#include <bits/range_access.h>\n \n #ifdef _GLIBCXX_DEBUG\n # include <debug/unordered_map>"}, {"sha": "739e0a4a44930f4aa977b2540fe9fd2ca9d27ad2", "filename": "libstdc++-v3/include/std/unordered_set", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Funordered_set", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Funordered_set", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Funordered_set?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -44,6 +44,7 @@\n #include <bits/functional_hash.h>\n #include <bits/hashtable.h>\n #include <bits/unordered_set.h>\n+#include <bits/range_access.h>\n \n #ifdef _GLIBCXX_DEBUG\n # include <debug/unordered_set>"}, {"sha": "d67eae26ef7c4c886e71b30c6fb9403bd439b337", "filename": "libstdc++-v3/include/std/valarray", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvalarray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvalarray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvalarray?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -1107,6 +1107,48 @@ _DEFINE_BINARY_OPERATOR(>=, __greater_equal)\n \n #undef _DEFINE_BINARY_OPERATOR\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+  /**\n+   *  @brief  Return an iterator pointing to the first element of\n+   *          the valarray.\n+   *  @param  va  valarray.\n+   */\n+  template<class _Tp>\n+    inline _Tp*\n+    begin(valarray<_Tp>& __va)\n+    { return std::__addressof(__va[0]); }\n+\n+  /**\n+   *  @brief  Return an iterator pointing to the first element of\n+   *          the const valarray.\n+   *  @param  va  valarray.\n+   */\n+  template<class _Tp>\n+    inline const _Tp*\n+    begin(const valarray<_Tp>& __va)\n+    { return std::__addressof(__va[0]); }\n+\n+  /**\n+   *  @brief  Return an iterator pointing to one past the last element of\n+   *          the valarray.\n+   *  @param  va  valarray.\n+   */\n+  template<class _Tp>\n+    inline _Tp*\n+    end(valarray<_Tp>& __va)\n+    { return std::__addressof(__va[0]) + __va.size(); }\n+\n+  /**\n+   *  @brief  Return an iterator pointing to one past the last element of\n+   *          the const valarray.\n+   *  @param  va  valarray.\n+   */\n+  template<class _Tp>\n+    inline const _Tp*\n+    end(const valarray<_Tp>& __va)\n+    { return std::__addressof(__va[0]) + __va.size(); }\n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n+\n   // @} group numeric_arrays\n \n _GLIBCXX_END_NAMESPACE"}, {"sha": "ca44aaccf66e39e9fb3a6664a74ca831a4b19ebe", "filename": "libstdc++-v3/include/std/vector", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvector?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -64,6 +64,7 @@\n #include <bits/stl_uninitialized.h>\n #include <bits/stl_vector.h>\n #include <bits/stl_bvector.h> \n+#include <bits/range_access.h>\n \n #ifndef _GLIBCXX_EXPORT_TEMPLATE\n # include <bits/vector.tcc>"}, {"sha": "c3b3527f96353ffbbdcd5f644275dbed6499b876", "filename": "libstdc++-v3/include/tr1_impl/utility", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Futility", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Futility", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Futility?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -115,6 +115,26 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     get(const std::pair<_Tp1, _Tp2>& __in)\n     { return __pair_get<_Int>::__const_get(__in); }\n \n+#ifdef _GLIBCXX_INCLUDE_AS_CXX0X\n+  /**\n+   *  @brief  Return the first of a pair containing two input iterators.\n+   *  @param  p  Pair.\n+   */\n+  template<class _InputIterator>\n+    inline _InputIterator\n+    begin(const std::pair<_InputIterator, _InputIterator>& __p)\n+    { return __p.first; }\n+\n+  /**\n+   *  @brief  Return the second of a pair containing two input iterators.\n+   *  @param  p  Pair.\n+   */\n+  template<class _InputIterator>\n+    inline _InputIterator\n+    end(const std::pair<_InputIterator, _InputIterator>& __p)\n+    { return __p.second; }\n+#endif\n+\n _GLIBCXX_END_NAMESPACE_TR1\n }\n "}, {"sha": "0006b70f40ab5e39ed8567b56979f4bfa3cd7fe1", "filename": "libstdc++-v3/libsupc++/initializer_list", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Finitializer_list", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Finitializer_list", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Finitializer_list?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -75,6 +75,26 @@ namespace std\n       const_iterator\n       end() const { return begin() + size(); }\n   };\n+\n+  /**\n+   *  @brief  Return an iterator pointing to the first element of\n+   *          the initilizer_list.\n+   *  @param  il  Initializer list.\n+   */\n+  template<class _Tp>\n+    inline const _Tp*\n+    begin(initializer_list<_Tp> __ils)\n+    { return __ils.begin(); }\n+\n+  /**\n+   *  @brief  Return an iterator pointing to one past the last element\n+   *          of the initilizer_list.\n+   *  @param  il  Initializer list.\n+   */\n+  template<class _Tp>\n+    inline const _Tp*\n+    end(initializer_list<_Tp> __ils)\n+    { return __ils.end(); }\n }\n \n #pragma GCC visibility pop"}, {"sha": "f4bf96bb3ef61327c4ca2873077527c803e273e9", "filename": "libstdc++-v3/testsuite/18_support/initializer_list/range_access.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Finitializer_list%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Finitializer_list%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Finitializer_list%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,30 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 18.9.3 Initializer list range access [support.initlist.range]\n+\n+#include <initializer_list>\n+\n+void\n+test01()\n+{\n+  std::begin({1, 2, 3});\n+  std::end({1, 2, 3});\n+}"}, {"sha": "036b78cc419666149860cca0d55f64f6f9be319b", "filename": "libstdc++-v3/testsuite/20_util/pair/range_access.cc", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,33 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 20.3.5.4, pair range access: [pair.range]\n+\n+#include <utility>\n+#include <vector>\n+\n+void\n+test01()\n+{\n+  std::vector<double> v{1.0, 2.0, 3.0};\n+  auto p = std::make_pair(v.begin(), v.end());\n+  std::begin(p);\n+  std::end(p);\n+}"}, {"sha": "dad7523ef7fa9573524160ab9ae829bc924b5bf0", "filename": "libstdc++-v3/testsuite/20_util/tuple/range_access.cc", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,33 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 20.4.2.10, tuple range access: pair range access [tuple.range]\n+\n+#include <tuple>\n+#include <vector>\n+\n+void\n+test01()\n+{\n+  std::vector<double> v{1.0, 2.0, 3.0};\n+  auto t = std::make_tuple(v.begin(), v.end());\n+  std::begin(t);\n+  std::end(t);\n+}"}, {"sha": "1ce386cbe961dbd844b87871dc5805acd3625904", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/range_access.cc", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,37 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.6.5, range access [iterator.range]\n+\n+#include <string>\n+\n+void\n+test01()\n+{\n+  std::string s(\"Hello, World!\");\n+  std::begin(s);\n+  std::end(s);\n+\n+#ifdef _GLIBCXX_USE_WCHAR_T\n+  std::wstring ws(L\"Hello, World!\");\n+  std::begin(ws);\n+  std::end(ws);\n+#endif\n+}"}, {"sha": "544d9f91ce1c95aed8af00b23da898bd8fd95f3f", "filename": "libstdc++-v3/testsuite/23_containers/array/range_access.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.6.5, range access [iterator.range]\n+\n+#include <array>\n+\n+void\n+test01()\n+{\n+  std::array<int, 3> a{1, 2, 3};\n+  std::begin(a);\n+  std::end(a);\n+}"}, {"sha": "d996ed6d1b0f1739a6915744e2f36f89c82d69ad", "filename": "libstdc++-v3/testsuite/23_containers/deque/range_access.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.6.5, range access [iterator.range]\n+\n+#include <deque>\n+\n+void\n+test01()\n+{\n+  std::deque<int> d{1, 2, 3};\n+  std::begin(d);\n+  std::end(d);\n+}"}, {"sha": "378cd9f0b1ec480f73b86085f5024d822f708787", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/range_access.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.6.5, range access [iterator.range]\n+\n+#include <forward_list>\n+\n+void\n+test01()\n+{\n+  std::forward_list<int> fl{1, 2, 3};\n+  std::begin(fl);\n+  std::end(fl);\n+}"}, {"sha": "afe148d9e666e3dda712ae6c1dea5fe1ac0d5f70", "filename": "libstdc++-v3/testsuite/23_containers/list/range_access.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.6.5, range access [iterator.range]\n+\n+#include <list>\n+\n+void\n+test01()\n+{\n+  std::list<int> l{1, 2, 3};\n+  std::begin(l);\n+  std::end(l);\n+}"}, {"sha": "2fb7f4ac943663409ea7cd686cd047b0060b49ea", "filename": "libstdc++-v3/testsuite/23_containers/map/range_access.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.6.5, range access [iterator.range]\n+\n+#include <map>\n+\n+void\n+test01()\n+{\n+  std::map<int, double> m{{1, 1.0}, {2, 2.0}, {3, 3.0}};\n+  std::begin(m);\n+  std::end(m);\n+}"}, {"sha": "da4c77b4acac0b6143398b77e4cd826472d349e7", "filename": "libstdc++-v3/testsuite/23_containers/multimap/range_access.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.6.5, range access [iterator.range]\n+\n+#include <map>\n+\n+void\n+test01()\n+{\n+  std::multimap<int, double> mm{{1, 1.0}, {2, 2.0}, {3, 3.0}};\n+  std::begin(mm);\n+  std::end(mm);\n+}"}, {"sha": "b8e3accce6c2ce8240da5ac2a34bea4ee95616df", "filename": "libstdc++-v3/testsuite/23_containers/multiset/range_access.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.6.5, range access [iterator.range]\n+\n+#include <set>\n+\n+void\n+test01()\n+{\n+  std::multiset<int> ms{1, 2, 3};\n+  std::begin(ms);\n+  std::end(ms);\n+}"}, {"sha": "ffbda4e93fe8cc4af51b473c9b9ce3e743663c70", "filename": "libstdc++-v3/testsuite/23_containers/set/range_access.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.6.5, range access [iterator.range]\n+\n+#include <set>\n+\n+void\n+test01()\n+{\n+  std::set<int> s{1, 2, 3};\n+  std::begin(s);\n+  std::end(s);\n+}"}, {"sha": "b41b6a5b3eee04a4d55c813e5986b32c4fdc76bd", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/range_access.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.6.5, range access [iterator.range]\n+\n+#include <unordered_map>\n+\n+void\n+test01()\n+{\n+  std::unordered_map<int, double> um{{1, 1.0}, {2, 2.0}, {3, 3.0}};\n+  std::begin(um);\n+  std::end(um);\n+}"}, {"sha": "f95a6681b1b35f7b1527ca995019bfe2e2ad7dc1", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/range_access.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.6.5, range access [iterator.range]\n+\n+#include <unordered_map>\n+\n+void\n+test01()\n+{\n+  std::unordered_multimap<int, double> umm{{1, 1.0}, {2, 2.0}, {3, 3.0}};\n+  std::begin(umm);\n+  std::end(umm);\n+}"}, {"sha": "137b0d6d2e9298ed02d525d6861e2a5ca7a08adb", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/range_access.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.6.5, range access [iterator.range]\n+\n+#include <unordered_set>\n+\n+void\n+test01()\n+{\n+  std::unordered_multiset<int> ums{1, 2, 3};\n+  std::begin(ums);\n+  std::end(ums);\n+}"}, {"sha": "ea116c364af293599a3521c7c026dfd1210e5778", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/range_access.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.6.5, range access [iterator.range]\n+\n+#include <unordered_set>\n+\n+void\n+test01()\n+{\n+  std::unordered_set<int> us{1, 2, 3};\n+  std::begin(us);\n+  std::end(us);\n+}"}, {"sha": "0a10959b2401e37bc8b0447b27af91a06701113f", "filename": "libstdc++-v3/testsuite/23_containers/vector/range_access.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,35 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.6.5, range access [iterator.range]\n+\n+#include <vector>\n+\n+void\n+test01()\n+{\n+  std::vector<double> v{1.0, 2.0, 3.0};\n+  std::begin(v);\n+  std::end(v);\n+\n+  std::vector<bool> vb{true, false, true};\n+  std::begin(vb);\n+  std::end(vb);\n+}"}, {"sha": "8082e0d0631e2a74749941e1f4c7822779bb9038", "filename": "libstdc++-v3/testsuite/24_iterators/headers/iterator/range_access.cc", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fheaders%2Fiterator%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fheaders%2Fiterator%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fheaders%2Fiterator%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,33 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <iterator>\n+\n+namespace std\n+{\n+  template<class C> auto begin(C& c) -> decltype(c.begin());\n+  template<class C> auto begin(const C& c) -> decltype(c.begin());\n+\n+  template<class C> auto end(C& c) -> decltype(c.end());\n+  template<class C> auto end(const C& c) -> decltype(c.end());\n+\n+  template<class T, size_t N> T* begin(T (&array)[N]);\n+  template<class T, size_t N> T* end(T (&array)[N]);\n+}"}, {"sha": "3bd1d2e5da36636ce6dbb976766511788cfddf08", "filename": "libstdc++-v3/testsuite/24_iterators/range_access.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.6.5, range access [iterator.range]\n+\n+#include <iterator>\n+\n+void\n+test01()\n+{\n+  int arr[3] = {1, 2, 3};\n+  std::begin(arr);\n+  std::end(arr);\n+}"}, {"sha": "be08d0298d3ac1ad015eb76d0294d2795f42a03f", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/range_access.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 26.6.10 valarray range access: [valarray.range]\n+\n+#include <valarray>\n+\n+void\n+test01()\n+{\n+  std::valarray<double> va{1.0, 2.0, 3.0};\n+  std::begin(va);\n+  std::end(va);\n+}"}, {"sha": "0bd620f0bd5102c62b9cf59211eb3fda904c317c", "filename": "libstdc++-v3/testsuite/28_regex/range_access.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.6.5, range access [iterator.range]\n+\n+#include <regex>\n+\n+void\n+test01()\n+{\n+  std::smatch sm;\n+  std::begin(sm);\n+  std::end(sm);\n+}"}, {"sha": "323229247093b43b36fad7f8103fcf952e164f9f", "filename": "libstdc++-v3/testsuite/ext/vstring/range_access.cc", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frange_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frange_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frange_access.cc?ref=f67a9881a86bcdeb67fa52c0a8eb45ce9d4134d4", "patch": "@@ -0,0 +1,37 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.6.5, range access [iterator.range]\n+\n+#include <ext/vstring.h>\n+\n+void\n+test01()\n+{\n+  __gnu_cxx::__vstring s(\"Hello, World!\");\n+  std::begin(s);\n+  std::end(s);\n+\n+#ifdef _GLIBCXX_USE_WCHAR_T\n+  __gnu_cxx::__wvstring ws(L\"Hello, World!\");\n+  std::begin(ws);\n+  std::end(ws);\n+#endif\n+}"}]}