{"sha": "18acf3baf1705dd1091b6d396bf5b2acd4ce40cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThhY2YzYmFmMTcwNWRkMTA5MWI2ZDM5NmJmNWIyYWNkNGNlNDBjYw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@cygnus.com", "date": "2000-08-01T07:44:11Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-08-01T07:44:11Z"}, "message": "fileops.cc: Update to current glibc sources.\n\n\n\n2000-07-31  Benjamin Kosnik  <bkoz@cygnus.com>\n\n\t* libio/fileops.cc: Update to current glibc sources.\n\t* libio/genops.c: Same.\n\t* libio/iofwide.c: Same.\n\t* libio/libio.h: Same.\n\t* libio/libioP.h: Same.\n\t* libio/wfiledoalloc.c: Same.\n\t* libio/wgenops.c: Same.\n\nFrom-SVN: r35407", "tree": {"sha": "6fa559896dc43d664ec3b763dc3c8f8a622501e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fa559896dc43d664ec3b763dc3c8f8a622501e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/comments", "author": null, "committer": null, "parents": [{"sha": "da92f7ff07103b11b2dbbb5f42fa7db07daf2fb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da92f7ff07103b11b2dbbb5f42fa7db07daf2fb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da92f7ff07103b11b2dbbb5f42fa7db07daf2fb4"}], "stats": {"total": 221, "additions": 130, "deletions": 91}, "files": [{"sha": "75d91b482c61d21ecf42b94eb64afed90dedf6db", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=18acf3baf1705dd1091b6d396bf5b2acd4ce40cc", "patch": "@@ -1,3 +1,13 @@\n+2000-07-31  Benjamin Kosnik  <bkoz@cygnus.com>\n+\n+\t* libio/fileops.cc: Update to current glibc sources.\n+\t* libio/genops.c: Same.\n+\t* libio/iofwide.c: Same.\n+\t* libio/libio.h: Same.\n+\t* libio/libioP.h: Same.\n+\t* libio/wfiledoalloc.c: Same.\n+\t* libio/wgenops.c: Same.\n+\t\n 2000-07-28  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* acinclude.m4: Include ../libtool.m4."}, {"sha": "f3baa04519ee24fbd69f176e0a014a04ca979f2a", "filename": "libstdc++-v3/libio/fileops.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/libstdc%2B%2B-v3%2Flibio%2Ffileops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/libstdc%2B%2B-v3%2Flibio%2Ffileops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2Ffileops.c?ref=18acf3baf1705dd1091b6d396bf5b2acd4ce40cc", "patch": "@@ -380,8 +380,7 @@ _IO_new_do_write (fp, data, to_do)\n      const char *data;\n      _IO_size_t to_do;\n {\n-  return (to_do == 0 || new_do_write (fp, data, to_do) == to_do)\n-  \t ? 0 : EOF;\n+  return (to_do == 0 || new_do_write (fp, data, to_do) == to_do) ? 0 : EOF;\n }\n \n static"}, {"sha": "281bab0e717da17ad73081e04d3f5d6b07bef9a0", "filename": "libstdc++-v3/libio/genops.c", "status": "modified", "additions": 30, "deletions": 25, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/libstdc%2B%2B-v3%2Flibio%2Fgenops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/libstdc%2B%2B-v3%2Flibio%2Fgenops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2Fgenops.c?ref=18acf3baf1705dd1091b6d396bf5b2acd4ce40cc", "patch": "@@ -45,11 +45,11 @@ _IO_un_link (fp)\n #ifdef _IO_MTSAFE_IO\n       _IO_lock_lock (list_all_lock);\n #endif\n-      for (f = &_IO_list_all; *f != NULL; f = &(*f)->file._chain)\n+      for (f = &_IO_list_all; *f; f = (struct _IO_FILE_plus **) &(*f)->file._chain)\n \t{\n \t  if (*f == fp)\n \t    {\n-\t      *f = fp->file._chain;\n+\t      *f = (struct _IO_FILE_plus *) fp->file._chain;\n \t      break;\n \t    }\n \t}\n@@ -70,7 +70,7 @@ _IO_link_in (fp)\n #ifdef _IO_MTSAFE_IO\n \t_IO_lock_lock (list_all_lock);\n #endif\n-\tfp->file._chain = _IO_list_all;\n+\tfp->file._chain = (_IO_FILE *) _IO_list_all;\n \t_IO_list_all = fp;\n #ifdef _IO_MTSAFE_IO\n \t_IO_lock_unlock (list_all_lock);\n@@ -194,6 +194,9 @@ __overflow (f, ch)\n      _IO_FILE *f;\n      int ch;\n {\n+  /* This is a single-byte stream.  */\n+  if (f->_mode == 0)\n+    _IO_fwide (f, -1);\n   return _IO_OVERFLOW (f, ch);\n }\n \n@@ -287,6 +290,8 @@ __underflow (fp)\n     return EOF;\n #endif\n \n+  if (fp->_mode == 0)\n+    _IO_fwide (fp, -1);\n   if (_IO_in_put_mode (fp))\n     if (_IO_switch_to_get_mode (fp) == EOF)\n       return EOF;\n@@ -317,6 +322,8 @@ __uflow (fp)\n     return EOF;\n #endif\n \n+  if (fp->_mode == 0)\n+    _IO_fwide (fp, -11);\n   if (_IO_in_put_mode (fp))\n     if (_IO_switch_to_get_mode (fp) == EOF)\n       return EOF;\n@@ -745,41 +752,39 @@ int\n _IO_flush_all ()\n {\n   int result = 0;\n-  struct _IO_FILE_plus *fp;\n-  for (fp = _IO_list_all; fp != NULL; fp = fp->file._chain)\n-    if (((fp->file._mode < 0 && fp->file._IO_write_ptr > fp->file._IO_write_base)\n+  struct _IO_FILE *fp;\n+  for (fp = (_IO_FILE *) _IO_list_all; fp; fp = fp->_chain)\n+    if (((fp->_mode < 0 && fp->_IO_write_ptr > fp->_IO_write_base)\n #if defined _LIBC || defined _GLIBCPP_USE_WCHAR_T\n-\n-\t || (fp->file._vtable_offset == 0\n-\t     && fp->file._mode > 0 && (fp->file._wide_data->_IO_write_ptr\n-\t\t\t\t  > fp->file._wide_data->_IO_write_base))\n+\t || (fp->_vtable_offset == 0\n+\t     && fp->_mode > 0 && (fp->_wide_data->_IO_write_ptr\n+\t\t\t\t  > fp->_wide_data->_IO_write_base)))\n #endif\n-\t )\n-\t&& _IO_OVERFLOW (&fp->file, EOF) == EOF)\n+\t&& _IO_OVERFLOW (fp, EOF) == EOF)\n       result = EOF;\n   return result;\n }\n \n void\n _IO_flush_all_linebuffered ()\n {\n-  struct _IO_FILE_plus *fp;\n-  for (fp = _IO_list_all; fp != NULL; fp = fp->file._chain)\n-    if ((fp->file._flags & _IO_NO_WRITES) == 0 && fp->file._flags & _IO_LINE_BUF)\n-      _IO_OVERFLOW (&fp->file, EOF);\n+  struct _IO_FILE *fp;\n+  for (fp = (_IO_FILE *) _IO_list_all; fp; fp = fp->_chain)\n+    if ((fp->_flags & _IO_NO_WRITES) == 0 && fp->_flags & _IO_LINE_BUF)\n+      _IO_OVERFLOW (fp, EOF);\n }\n \n static void _IO_unbuffer_write __P ((void));\n \n static void\n _IO_unbuffer_write ()\n {\n-  struct _IO_FILE_plus *fp;\n-  for (fp = _IO_list_all; fp != NULL; fp = fp->file._chain)\n-    if (! (fp->file._flags & _IO_UNBUFFERED)\n-\t&& (! (fp->file._flags & _IO_NO_WRITES)\n-\t    || (fp->file._flags & _IO_IS_APPENDING)))\n-      _IO_SETBUF (&fp->file, NULL, 0);\n+  struct _IO_FILE *fp;\n+  for (fp = (_IO_FILE *) _IO_list_all; fp; fp = fp->_chain)\n+    if (! (fp->_flags & _IO_UNBUFFERED)\n+\t&& (! (fp->_flags & _IO_NO_WRITES)\n+\t    || (fp->_flags & _IO_IS_APPENDING)))\n+      _IO_SETBUF (fp, NULL, 0);\n }\n \n int\n@@ -1039,7 +1044,7 @@ _IO_default_imbue (fp, locale)\n _IO_ITER\n _IO_iter_begin()\n {\n-  return _IO_list_all;\n+  return (_IO_ITER) _IO_list_all;\n }\n \n _IO_ITER\n@@ -1052,14 +1057,14 @@ _IO_ITER\n _IO_iter_next(iter)\n     _IO_ITER iter;\n {\n-  return iter->file._chain;\n+  return iter->_chain;\n }\n \n _IO_FILE *\n _IO_iter_file(iter)\n     _IO_ITER iter;\n {\n-  return (_IO_FILE *) iter;\n+  return iter;\n }\n \n void"}, {"sha": "5032ce5b771160bb54bfc4874ca8972c695491ab", "filename": "libstdc++-v3/libio/iofwide.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/libstdc%2B%2B-v3%2Flibio%2Fiofwide.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/libstdc%2B%2B-v3%2Flibio%2Fiofwide.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2Fiofwide.c?ref=18acf3baf1705dd1091b6d396bf5b2acd4ce40cc", "patch": "@@ -35,6 +35,7 @@\n # include <langinfo.h>\n # include <locale/localeinfo.h>\n # include <wcsmbs/wcsmbsload.h>\n+# include <iconv/gconv_int.h>\n #endif\n \n \n@@ -76,6 +77,14 @@ struct _IO_codecvt __libio_codecvt =\n };\n \n \n+/* static struct __gconv_trans_data libio_translit =*/\n+#ifdef _LIBC\n+struct __gconv_trans_data libio_translit =\n+{\n+  .__trans_fct = __gconv_transliterate\n+};\n+#endif\n+\n /* Return orientation of stream.  If mode is nonzero try to change\n    the orientation first.  */\n #undef _IO_fwide\n@@ -92,9 +101,6 @@ _IO_fwide (fp, mode)\n        or the orientation already has been determined.  */\n     return fp->_mode;\n \n-  _IO_cleanup_region_start ((void (*) __P ((void *))) _IO_funlockfile, fp);\n-  _IO_flockfile (fp);\n-\n   /* Set the orientation appropriately.  */\n   if (mode > 0)\n     {\n@@ -138,7 +144,11 @@ _IO_fwide (fp, mode)\n \tcc->__cd_out.__cd.__data[0].__statep = &fp->_wide_data->_IO_state;\n \n \t/* XXX For now no transliteration.  */\n+#ifdef _LIBC\n+\tcc->__cd_out.__cd.__data[0].__trans = &libio_translit;\n+#else\n \tcc->__cd_out.__cd.__data[0].__trans = NULL;\n+#endif\n       }\n #else\n # ifdef _GLIBCPP_USE_WCHAR_T\n@@ -179,9 +189,6 @@ _IO_fwide (fp, mode)\n   /* Set the mode now.  */\n   fp->_mode = mode;\n \n-  _IO_funlockfile (fp);\n-  _IO_cleanup_region_end (0);\n-\n   return mode;\n }\n "}, {"sha": "7b3b2e1d6111a31c5015b37ce2ec26ff79ebef20", "filename": "libstdc++-v3/libio/libio.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/libstdc%2B%2B-v3%2Flibio%2Flibio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/libstdc%2B%2B-v3%2Flibio%2Flibio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2Flibio.h?ref=18acf3baf1705dd1091b6d396bf5b2acd4ce40cc", "patch": "@@ -259,8 +259,6 @@ struct _IO_wide_data\n #endif\n };\n \n-struct _IO_FILE_plus;\n-\n struct _IO_FILE {\n   int _flags;\t\t/* High-order word is _IO_MAGIC; rest is flags. */\n #define _IO_file_flags _flags\n@@ -282,7 +280,7 @@ struct _IO_FILE {\n \n   struct _IO_marker *_markers;\n \n-  struct _IO_FILE_plus *_chain;\n+  struct _IO_FILE *_chain;\n \n   int _fileno;\n   int _blksize;\n@@ -324,6 +322,8 @@ struct _IO_FILE_complete\n typedef struct _IO_FILE _IO_FILE;\n #endif\n \n+struct _IO_FILE_plus;\n+\n extern struct _IO_FILE_plus _IO_2_1_stdin_;\n extern struct _IO_FILE_plus _IO_2_1_stdout_;\n extern struct _IO_FILE_plus _IO_2_1_stderr_;"}, {"sha": "b2a4ecf0634cce9e5046d1cfa0e93b20c0b64802", "filename": "libstdc++-v3/libio/libioP.h", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/libstdc%2B%2B-v3%2Flibio%2FlibioP.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/libstdc%2B%2B-v3%2Flibio%2FlibioP.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FlibioP.h?ref=18acf3baf1705dd1091b6d396bf5b2acd4ce40cc", "patch": "@@ -323,7 +323,7 @@ struct _IO_cookie_file\n \n /* Iterator type for walking global linked list of _IO_FILE objects. */\n \n-typedef struct _IO_FILE_plus *_IO_ITER;\n+typedef struct _IO_FILE *_IO_ITER;\n \n /* Generic functions */\n \n@@ -714,19 +714,19 @@ extern int _IO_vscanf __P ((const char *, _IO_va_list));\n # ifdef _IO_USE_OLD_IO_FILE\n #  define FILEBUF_LITERAL(CHAIN, FLAGS, FD, WDP) \\\n        { _IO_MAGIC+_IO_LINKED+_IO_IS_FILEBUF+FLAGS, \\\n-         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, CHAIN, FD, \\\n-\t   0, _IO_pos_BAD, 0, 0, { 0 }, &_IO_stdfile_##FD##_lock }\n+         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  (_IO_FILE *) CHAIN, FD, \\\n+\t 0, _IO_pos_BAD, 0, 0, { 0 }, &_IO_stdfile_##FD##_lock }\n # else\n #  if defined _LIBC || defined _GLIBCPP_USE_WCHAR_T\n #   define FILEBUF_LITERAL(CHAIN, FLAGS, FD, WDP) \\\n        { _IO_MAGIC+_IO_LINKED+_IO_IS_FILEBUF+FLAGS, \\\n-         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, CHAIN, FD, \\\n+         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  (_IO_FILE *) CHAIN, FD, \\\n \t 0, _IO_pos_BAD, 0, 0, { 0 }, &_IO_stdfile_##FD##_lock, _IO_pos_BAD,\\\n \t NULL, WDP, 0 }\n #  else\n #   define FILEBUF_LITERAL(CHAIN, FLAGS, FD, WDP) \\\n        { _IO_MAGIC+_IO_LINKED+_IO_IS_FILEBUF+FLAGS, \\\n-         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, CHAIN, FD, \\\n+         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  (_IO_FILE *) CHAIN, FD, \\\n \t 0, _IO_pos_BAD, 0, 0, { 0 }, &_IO_stdfile_##FD##_lock, _IO_pos_BAD,\\\n \t 0 }\n #  endif\n@@ -735,18 +735,19 @@ extern int _IO_vscanf __P ((const char *, _IO_va_list));\n # ifdef _IO_USE_OLD_IO_FILE\n #  define FILEBUF_LITERAL(CHAIN, FLAGS, FD, WDP) \\\n        { _IO_MAGIC+_IO_LINKED+_IO_IS_FILEBUF+FLAGS, \\\n-\t   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, CHAIN, FD, 0, _IO_pos_BAD }\n+\t 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (_IO_FILE *) CHAIN, FD, \\\n+\t 0, _IO_pos_BAD }\n # else\n #  if defined _LIBC || defined _GLIBCPP_USE_WCHAR_T\n #   define FILEBUF_LITERAL(CHAIN, FLAGS, FD, WDP) \\\n        { _IO_MAGIC+_IO_LINKED+_IO_IS_FILEBUF+FLAGS, \\\n-         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, CHAIN, FD, \\\n+         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (_IO_FILE *) CHAIN, FD, \\\n \t 0, _IO_pos_BAD, 0, 0, { 0 }, 0, _IO_pos_BAD, \\\n \t NULL, WDP, 0 }\n #  else\n #   define FILEBUF_LITERAL(CHAIN, FLAGS, FD, WDP) \\\n        { _IO_MAGIC+_IO_LINKED+_IO_IS_FILEBUF+FLAGS, \\\n-         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, CHAIN, FD, \\\n+         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (_IO_FILE *) CHAIN, FD, \\\n \t 0, _IO_pos_BAD, 0, 0, { 0 }, 0, _IO_pos_BAD, \\\n \t 0 }\n #  endif"}, {"sha": "4e4ca67b2d3bb6fd0e4febca1e98f7bb065dfac0", "filename": "libstdc++-v3/libio/wfiledoalloc.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/libstdc%2B%2B-v3%2Flibio%2Fwfiledoalloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/libstdc%2B%2B-v3%2Flibio%2Fwfiledoalloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2Fwfiledoalloc.c?ref=18acf3baf1705dd1091b6d396bf5b2acd4ce40cc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1993, 1997, 1999 Free Software Foundation, Inc.\n+/* Copyright (C) 1993, 1997, 1999, 2000 Free Software Foundation, Inc.\n    This file is part of the GNU IO Library.\n \n    This library is free software; you can redistribute it and/or\n@@ -76,12 +76,13 @@ _IO_wfile_doallocate (fp)\n   struct _G_stat64 st;\n \n   /* Allocate room for the external buffer.  */\n-  _IO_file_doallocate (fp);\n+  if (fp->_IO_buf_base == NULL)\n+    _IO_file_doallocate (fp);\n \n   if (fp->_fileno < 0 || _IO_SYSSTAT (fp, &st) < 0)\n     {\n       couldbetty = 0;\n-      size = _IO_BUFSIZ * sizeof (wchar_t);\n+      size = _IO_BUFSIZ;\n #if 0\n       /* do not try to optimise fseek() */\n       fp->_flags |= __SNPT;\n@@ -91,13 +92,12 @@ _IO_wfile_doallocate (fp)\n     {\n       couldbetty = S_ISCHR (st.st_mode);\n #if _IO_HAVE_ST_BLKSIZE\n-      size = ((st.st_blksize <= 0 ? _IO_BUFSIZ : st.st_blksize)\n-\t      * sizeof (wchar_t));\n+      size = st.st_blksize <= 0 ? _IO_BUFSIZ : st.st_blksize;\n #else\n-      size = _IO_BUFSIZ * sizeof (wchar_t);\n+      size = _IO_BUFSIZ;\n #endif\n     }\n-  ALLOC_WBUF (p, size, EOF);\n+  ALLOC_WBUF (p, size * sizeof (wchar_t), EOF);\n   _IO_wsetb (fp, p, p + size, 1);\n   if (couldbetty && isatty (fp->_fileno))\n     fp->_flags |= _IO_LINE_BUF;"}, {"sha": "e30bbe1f5455c5b4582ca8732e3643b834f88660", "filename": "libstdc++-v3/libio/wfileops.c", "status": "modified", "additions": 55, "deletions": 40, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/libstdc%2B%2B-v3%2Flibio%2Fwfileops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/libstdc%2B%2B-v3%2Flibio%2Fwfileops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2Fwfileops.c?ref=18acf3baf1705dd1091b6d396bf5b2acd4ce40cc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1993, 1995, 1997, 1998, 1999 Free Software Foundation, Inc.\n+/* Copyright (C) 1993, 95, 97, 98, 99, 2000 Free Software Foundation, Inc.\n    This file is part of the GNU IO Library.\n    Written by Ulrich Drepper <drepper@cygnus.com>.\n    Based on the single byte version by Per Bothner <bothner@cygnus.com>.\n@@ -77,40 +77,46 @@ _IO_wdo_write (fp, data, to_do)\n      _IO_size_t to_do;\n {\n   struct _IO_codecvt *cc = &fp->_wide_data->_codecvt;\n-  _IO_size_t count = 0;\n \n-  while (to_do > 0)\n+  if (to_do > 0)\n     {\n-      enum __codecvt_result result;\n-      const wchar_t *new_data;\n-\n-      if (fp->_IO_write_end == fp->_IO_write_ptr)\n+      if (fp->_IO_write_end == fp->_IO_write_ptr\n+\t  && fp->_IO_write_end != fp->_IO_write_base)\n \t{\n-\t  _IO_new_file_overflow (fp, EOF);\n-\t  assert (fp->_IO_write_end > fp->_IO_write_ptr);\n+\t  if (_IO_new_do_write (fp, fp->_IO_write_base,\n+\t\t\t\tfp->_IO_write_ptr - fp->_IO_write_base) == EOF)\n+\t    return EOF;\n \t}\n \n-      /* Now convert from the internal format into the external buffer.  */\n-      result = (*cc->__codecvt_do_out) (cc, &fp->_wide_data->_IO_state,\n-\t\t\t\t\tdata, data + to_do, &new_data,\n-\t\t\t\t\tfp->_IO_write_ptr,\n-\t\t\t\t\tfp->_IO_write_end,\n-\t\t\t\t\t&fp->_IO_write_ptr);\n-\n-      /* Write out what we produced so far.  */\n-      if (_IO_new_do_write (fp, fp->_IO_write_base,\n-\t\t\t    fp->_IO_write_ptr - fp->_IO_write_base) == EOF)\n-\t/* Something went wrong.  */\n-\treturn EOF;\n-\n-      count += new_data - data;\n-      to_do -= new_data - data;\n-      data = new_data;\n-\n-      /* Next see whether we had problems during the conversion.  If yes,\n-\t we cannot go on.  */\n-      if (result != __codecvt_ok)\n-\tbreak;\n+      do\n+\t{\n+\t  enum __codecvt_result result;\n+\t  const wchar_t *new_data;\n+\n+\t  /* Now convert from the internal format into the external buffer.  */\n+\t  result = (*cc->__codecvt_do_out) (cc, &fp->_wide_data->_IO_state,\n+\t\t\t\t\t    data, data + to_do, &new_data,\n+\t\t\t\t\t    fp->_IO_write_ptr,\n+\t\t\t\t\t    fp->_IO_buf_end,\n+\t\t\t\t\t    &fp->_IO_write_ptr);\n+\n+\t  /* Write out what we produced so far.  */\n+\t  if (_IO_new_do_write (fp, fp->_IO_write_base,\n+\t\t\t\tfp->_IO_write_ptr - fp->_IO_write_base) == EOF)\n+\t    /* Something went wrong.  */\n+\t    return EOF;\n+\n+\t  to_do -= new_data - data;\n+\n+\t  /* Next see whether we had problems during the conversion.  If yes,\n+\t     we cannot go on.  */\n+\t  if (result != __codecvt_ok\n+\t      && (result != __codecvt_partial || new_data - data == 0))\n+\t    break;\n+\n+\t  data = new_data;\n+\t}\n+      while (to_do > 0);\n     }\n \n   _IO_wsetg (fp, fp->_wide_data->_IO_buf_base, fp->_wide_data->_IO_buf_base,\n@@ -121,7 +127,7 @@ _IO_wdo_write (fp, data, to_do)\n \t\t\t\t   ? fp->_wide_data->_IO_buf_base\n \t\t\t\t   : fp->_wide_data->_IO_buf_end);\n \n-  return count;\n+  return to_do == 0 ? 0 : WEOF;\n }\n \n \n@@ -190,9 +196,6 @@ _IO_wfile_underflow (fp)\n     fp->_IO_read_base = fp->_IO_read_ptr = fp->_IO_read_end =\n       fp->_IO_buf_base;\n \n-  fp->_IO_write_base = fp->_IO_write_ptr = fp->_IO_write_end =\n-    fp->_IO_buf_base;\n-\n   if (fp->_IO_buf_base == NULL)\n     {\n       /* Maybe we already have a push back pointer.  */\n@@ -202,8 +205,14 @@ _IO_wfile_underflow (fp)\n \t  fp->_flags &= ~_IO_IN_BACKUP;\n \t}\n       _IO_doallocbuf (fp);\n+\n+      fp->_IO_read_base = fp->_IO_read_ptr = fp->_IO_read_end =\n+\tfp->_IO_buf_base;\n     }\n \n+  fp->_IO_write_base = fp->_IO_write_ptr = fp->_IO_write_end =\n+    fp->_IO_buf_base;\n+\n   if (fp->_wide_data->_IO_buf_base == NULL)\n     {\n       /* Maybe we already have a push back pointer.  */\n@@ -222,11 +231,6 @@ _IO_wfile_underflow (fp)\n \n   _IO_switch_to_get_mode (fp);\n \n-  fp->_IO_read_base = fp->_IO_read_ptr = fp->_IO_buf_base;\n-  fp->_IO_read_end = fp->_IO_buf_base;\n-  fp->_IO_write_base = fp->_IO_write_ptr = fp->_IO_write_end\n-    = fp->_IO_buf_base;\n-\n   fp->_wide_data->_IO_read_base = fp->_wide_data->_IO_read_ptr =\n     fp->_wide_data->_IO_buf_base;\n   fp->_wide_data->_IO_read_end = fp->_wide_data->_IO_buf_base;\n@@ -306,6 +310,12 @@ _IO_wfile_overflow (f, wch)\n \t  _IO_wdoallocbuf (f);\n \t  _IO_wsetg (f, f->_wide_data->_IO_buf_base,\n \t\t     f->_wide_data->_IO_buf_base, f->_wide_data->_IO_buf_base);\n+\n+\t  if (f->_IO_write_base == NULL)\n+\t    {\n+\t      _IO_doallocbuf (f);\n+\t      _IO_setg (f, f->_IO_buf_base, f->_IO_buf_base, f->_IO_buf_base);\n+\t    }\n \t}\n       else\n \t{\n@@ -330,13 +340,18 @@ _IO_wfile_overflow (f, wch)\n       f->_wide_data->_IO_read_base = f->_wide_data->_IO_read_ptr =\n \tf->_wide_data->_IO_read_end;\n \n+      f->_IO_write_ptr = f->_IO_read_ptr;\n+      f->_IO_write_base = f->_IO_write_ptr;\n+      f->_IO_write_end = f->_IO_buf_end;\n+      f->_IO_read_base = f->_IO_read_ptr = f->_IO_read_end;\n+\n       f->_flags |= _IO_CURRENTLY_PUTTING;\n       if (f->_flags & (_IO_LINE_BUF+_IO_UNBUFFERED))\n \tf->_wide_data->_IO_write_end = f->_wide_data->_IO_write_ptr;\n     }\n   if (wch == WEOF)\n     return _IO_do_flush (f);\n-  if (f->_wide_data->_IO_write_ptr == f->_wide_data->_IO_buf_end )\n+  if (f->_wide_data->_IO_write_ptr == f->_wide_data->_IO_buf_end)\n     /* Buffer is really full */\n     if (_IO_do_flush (f) == WEOF)\n       return WEOF;"}, {"sha": "7440e690b6a91ab2574634e228c6b7d0aea1b3fd", "filename": "libstdc++-v3/libio/wgenops.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/libstdc%2B%2B-v3%2Flibio%2Fwgenops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18acf3baf1705dd1091b6d396bf5b2acd4ce40cc/libstdc%2B%2B-v3%2Flibio%2Fwgenops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2Fwgenops.c?ref=18acf3baf1705dd1091b6d396bf5b2acd4ce40cc", "patch": "@@ -275,6 +275,8 @@ __wunderflow (fp)\n   if (fp->_mode < 0 || (fp->_mode == 0 && _IO_fwide (fp, 1) != 1))\n     return WEOF;\n \n+  if (fp->_mode == 0)\n+    _IO_fwide (fp, 1);\n   if (_IO_in_put_mode (fp))\n     if (_IO_switch_to_wget_mode (fp) == EOF)\n       return WEOF;"}]}