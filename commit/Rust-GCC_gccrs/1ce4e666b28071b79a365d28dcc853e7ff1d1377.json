{"sha": "1ce4e666b28071b79a365d28dcc853e7ff1d1377", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNlNGU2NjZiMjgwNzFiNzlhMzY1ZDI4ZGNjODUzZTdmZjFkMTM3Nw==", "commit": {"author": {"name": "Sascha Brawer", "email": "brawer@dandelis.ch", "date": "2003-08-01T20:10:22Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-08-01T20:10:22Z"}, "message": "BevelBorder.java, [...]: Prepend \"doc-files\" to all paths to embedded Javadoc images...\n\n2003-08-01  Sascha Brawer  <brawer@dandelis.ch>\n\n\t* javax/swing/border/BevelBorder.java,\n\tjavax/swing/border/EtchedBorder.java,\n\tjavax/swing/border/LineBorder.java,\n\tjavax/swing/border/MatteBorder.java,\n\tjavax/swing/border/SoftBevelBorder.java,\n\tjavax/swing/plaf/BorderUIResource.java,\n\tjavax/swing/plaf/ComponentUI.java,\n\tjavax/swing/plaf/TreeUI.java,\n\tjavax/swing/plaf/basic/BasicBorders.java,\n\tjavax/swing/plaf/basic/BasicGraphicsUtils.java,\n\tjavax/swing/plaf/basic/BasicTreeUI.java:\n\tPrepend \"doc-files\" to all paths to embedded Javadoc images, so\n\tthat the generated documentation contains the correct URL.\n\nFrom-SVN: r70063", "tree": {"sha": "0c86b8223fb5057bb758535247da893f1d1a3294", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c86b8223fb5057bb758535247da893f1d1a3294"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ce4e666b28071b79a365d28dcc853e7ff1d1377", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce4e666b28071b79a365d28dcc853e7ff1d1377", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ce4e666b28071b79a365d28dcc853e7ff1d1377", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce4e666b28071b79a365d28dcc853e7ff1d1377/comments", "author": null, "committer": null, "parents": [{"sha": "ee935db4b6f1bf4c055cc99521a55ed1b4ed476a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee935db4b6f1bf4c055cc99521a55ed1b4ed476a"}], "stats": {"total": 175, "additions": 99, "deletions": 76}, "files": [{"sha": "39f8318d875afd87af2a03add7816937029290be", "filename": "libjava/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=1ce4e666b28071b79a365d28dcc853e7ff1d1377", "patch": "@@ -1,3 +1,19 @@\n+2003-08-01  Sascha Brawer  <brawer@dandelis.ch>\n+\n+\t* javax/swing/border/BevelBorder.java,\n+\tjavax/swing/border/EtchedBorder.java,\n+\tjavax/swing/border/LineBorder.java,\n+\tjavax/swing/border/MatteBorder.java,\n+\tjavax/swing/border/SoftBevelBorder.java,\n+\tjavax/swing/plaf/BorderUIResource.java,\n+\tjavax/swing/plaf/ComponentUI.java,\n+\tjavax/swing/plaf/TreeUI.java,\n+\tjavax/swing/plaf/basic/BasicBorders.java,\n+\tjavax/swing/plaf/basic/BasicGraphicsUtils.java,\n+\tjavax/swing/plaf/basic/BasicTreeUI.java:\n+\tPrepend \"doc-files\" to all paths to embedded Javadoc images, so\n+\tthat the generated documentation contains the correct URL.\n+\n 2003-08-01  Tom Tromey  <tromey@redhat.com>\n \n \t* configure: Rebuilt."}, {"sha": "dd5a52b0184454ef7035440e50ea422c58740506", "filename": "libjava/javax/swing/border/BevelBorder.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fborder%2FBevelBorder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fborder%2FBevelBorder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fborder%2FBevelBorder.java?ref=1ce4e666b28071b79a365d28dcc853e7ff1d1377", "patch": "@@ -125,7 +125,7 @@\n    * constructed by this method will automatically reflect a change\n    * to the component&#x2019;s background color.\n    *\n-   * <p><img src=\"BevelBorder-1.png\" width=\"500\" height=\"150\"\n+   * <p><img src=\"doc-files/BevelBorder-1.png\" width=\"500\" height=\"150\"\n    * alt=\"[An illustration showing raised and lowered BevelBorders]\" />\n    *\n    * @param bevelType the desired appearance of the border. The value\n@@ -147,7 +147,7 @@ public BevelBorder(int bevelType)\n    * Constructs a BevelBorder given its appearance type and two colors\n    * for its highlight and shadow.\n    *\n-   * <p><img src=\"BevelBorder-2.png\" width=\"500\" height=\"150\"\n+   * <p><img src=\"doc-files/BevelBorder-2.png\" width=\"500\" height=\"150\"\n    * alt=\"[An illustration showing BevelBorders that were constructed\n    * with this method]\" />\n    *\n@@ -188,7 +188,7 @@ public BevelBorder(int bevelType, Color highlight, Color shadow)\n    * Constructs a BevelBorder given its appearance type and all\n    * colors.\n    *\n-   * <p><img src=\"BevelBorder-3.png\" width=\"500\" height=\"150\"\n+   * <p><img src=\"doc-files/BevelBorder-3.png\" width=\"500\" height=\"150\"\n    * alt=\"[An illustration showing BevelBorders that were constructed\n    * with this method]\" />\n    *"}, {"sha": "859e5f832fdbdf9af9a846cdc939b203352b0566", "filename": "libjava/javax/swing/border/EtchedBorder.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fborder%2FEtchedBorder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fborder%2FEtchedBorder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fborder%2FEtchedBorder.java?ref=1ce4e666b28071b79a365d28dcc853e7ff1d1377", "patch": "@@ -51,7 +51,7 @@\n  * explicitly specify the border colors, or to let the colors derive\n  * from the background color of the enclosed Component.\n  *\n- * <p><img src=\"EtchedBorder-1.png\" width=\"500\" height=\"200\"\n+ * <p><img src=\"doc-files/EtchedBorder-1.png\" width=\"500\" height=\"200\"\n  * alt=\"[An illustration of the two EtchedBorder variants]\" />\n  *\n  * @author Sascha Brawer (brawer@dandelis.ch)\n@@ -119,7 +119,7 @@ public EtchedBorder()\n    * colors will be derived from the background color of the enclosed\n    * Component when the border gets painted.\n    *\n-   * <p><img src=\"EtchedBorder-1.png\" width=\"500\" height=\"200\"\n+   * <p><img src=\"doc-files/EtchedBorder-1.png\" width=\"500\" height=\"200\"\n    * alt=\"[An illustration of the two EtchedBorder variants]\" />\n    *\n    * @param etchType the desired appearance of the border. The value\n@@ -165,7 +165,7 @@ public EtchedBorder(Color highlight, Color shadow)\n    * explicitly selecting the colors that will be used for\n    * highlight and shadow.\n    *\n-   * <p><img src=\"EtchedBorder-2.png\" width=\"500\" height=\"200\"\n+   * <p><img src=\"doc-files/EtchedBorder-2.png\" width=\"500\" height=\"200\"\n    * alt=\"[An illustration that shows which pixels get painted\n    * in what color]\" />\n    *"}, {"sha": "bf42309a27b69241259582bc6aff0eee2c27a287", "filename": "libjava/javax/swing/border/LineBorder.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fborder%2FLineBorder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fborder%2FLineBorder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fborder%2FLineBorder.java?ref=1ce4e666b28071b79a365d28dcc853e7ff1d1377", "patch": "@@ -128,7 +128,7 @@ public LineBorder(Color color, int thickness)\n    * Constructs a LineBorder given its color, thickness, and whether\n    * it has rounded corners.\n    * \n-   * <p><img src=\"LineBorder-1.png\" width=\"500\" height=\"200\"\n+   * <p><img src=\"doc-files/LineBorder-1.png\" width=\"500\" height=\"200\"\n    * alt=\"[An illustration of two LineBorders] />\n    *\n    * <p>Note that the enlarged view in the right-hand picture shows"}, {"sha": "e7b0f62e465ff07e2088d7e8933bd5d6a1aa9ca6", "filename": "libjava/javax/swing/border/MatteBorder.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fborder%2FMatteBorder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fborder%2FMatteBorder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fborder%2FMatteBorder.java?ref=1ce4e666b28071b79a365d28dcc853e7ff1d1377", "patch": "@@ -49,7 +49,7 @@\n  * A border that is filled with either a solid color or with repeated\n  * icon tiles.\n  *\n- * <p><img src=\"MatteBorder-1.png\" width=\"500\" height=\"150\"\n+ * <p><img src=\"doc-files/MatteBorder-1.png\" width=\"500\" height=\"150\"\n  * alt=\"[Two MatteBorders]\" />\n  *\n  * @author Sascha Brawer (brawer@dandelis.ch)\n@@ -88,7 +88,7 @@\n    * Constructs a MatteBorder given the width on each side\n    * and a fill color.\n    *\n-   * <p><img src=\"MatteBorder-2.png\" width=\"500\" height=\"150\"\n+   * <p><img src=\"doc-files/MatteBorder-2.png\" width=\"500\" height=\"150\"\n    * alt=\"[A picture of a MatteBorder made by this constructor]\" />\n    *\n    * @param top the width of the border at its top edge.\n@@ -112,7 +112,7 @@ public MatteBorder(int top, int left, int bottom, int right,\n   /**\n    * Constructs a MatteBorder given its insets and fill color.\n    *\n-   * <p><img src=\"MatteBorder-3.png\" width=\"500\" height=\"150\"\n+   * <p><img src=\"doc-files/MatteBorder-3.png\" width=\"500\" height=\"150\"\n    * alt=\"[A picture of a MatteBorder made by this constructor]\" />\n    *\n    * @param borderInsets an Insets object whose <code>top</code>,\n@@ -134,7 +134,7 @@ public MatteBorder(Insets borderInsets, Color matteColor)\n    * Constructs a MatteBorder given the width on each side\n    * and an icon for tiling the border area.\n    *\n-   * <p><img src=\"MatteBorder-4.png\" width=\"500\" height=\"150\"\n+   * <p><img src=\"doc-files/MatteBorder-4.png\" width=\"500\" height=\"150\"\n    * alt=\"[A picture of a MatteBorder made by this constructor]\" />\n    *\n    * @param top the width of the border at its top edge.\n@@ -159,7 +159,7 @@ public MatteBorder(int top, int left, int bottom, int right,\n    * Constructs a MatteBorder given its insets and an icon\n    * for tiling the border area.\n    *\n-   * <p><img src=\"MatteBorder-5.png\" width=\"500\" height=\"150\"\n+   * <p><img src=\"doc-files/MatteBorder-5.png\" width=\"500\" height=\"150\"\n    * alt=\"[A picture of a MatteBorder made by this constructor]\" />\n    *\n    * @param borderInsets an Insets object whose <code>top</code>,\n@@ -183,7 +183,7 @@ public MatteBorder(Insets borderInsets, Icon tileIcon)\n    * at the left and right edge, the icon height for the top and\n    * bottom edge.\n    *\n-   * <p><img src=\"MatteBorder-6.png\" width=\"500\" height=\"150\"\n+   * <p><img src=\"doc-files/MatteBorder-6.png\" width=\"500\" height=\"150\"\n    * alt=\"[A picture of a MatteBorder made by this constructor]\" />\n    *\n    * @param tileIcon an icon for tiling the border area."}, {"sha": "341954c3c9fe61edc3ca935ce0a2fbe36a82164d", "filename": "libjava/javax/swing/border/SoftBevelBorder.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fborder%2FSoftBevelBorder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fborder%2FSoftBevelBorder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fborder%2FSoftBevelBorder.java?ref=1ce4e666b28071b79a365d28dcc853e7ff1d1377", "patch": "@@ -74,7 +74,7 @@\n    * constructed by this method will automatically reflect a change\n    * to the component&#x2019;s background color.\n    *\n-   * <p><img src=\"SoftBevelBorder-1.png\" width=\"500\" height=\"200\"\n+   * <p><img src=\"doc-files/SoftBevelBorder-1.png\" width=\"500\" height=\"200\"\n    * alt=\"[An illustration showing raised and lowered SoftBevelBorders]\" />\n    *\n    * @param bevelType the desired appearance of the border. The value\n@@ -94,7 +94,7 @@ public SoftBevelBorder(int bevelType)\n    * Constructs a SoftBevelBorder given its appearance type and two\n    * colors for its highlight and shadow.\n    *\n-   * <p><img src=\"SoftBevelBorder-2.png\" width=\"500\" height=\"150\"\n+   * <p><img src=\"doc-files/SoftBevelBorder-2.png\" width=\"500\" height=\"150\"\n    * alt=\"[An illustration showing SoftBevelBorders that were\n    * constructed with this method]\" />\n    *\n@@ -136,7 +136,7 @@ public SoftBevelBorder(int bevelType, Color highlight, Color shadow)\n    * Constructs a SoftBevelBorder given its appearance type and all\n    * colors.\n    *\n-   * <p><img src=\"SoftBevelBorder-3.png\" width=\"500\" height=\"150\"\n+   * <p><img src=\"doc-files/SoftBevelBorder-3.png\" width=\"500\" height=\"150\"\n    * alt=\"[An illustration showing SoftBevelBorders that were\n    * constructed with this method]\" />\n    *"}, {"sha": "a3f0db026fd5f2faa9431d0581fb23878e4919ef", "filename": "libjava/javax/swing/plaf/BorderUIResource.java", "status": "modified", "additions": 29, "deletions": 23, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fplaf%2FBorderUIResource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fplaf%2FBorderUIResource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2FBorderUIResource.java?ref=1ce4e666b28071b79a365d28dcc853e7ff1d1377", "patch": "@@ -277,7 +277,8 @@ public static class BevelBorderUIResource\n      * constructed by this method will automatically reflect a change\n      * to the component&#x2019;s background color.\n      *\n-     * <p><img src=\"../border/BevelBorder-1.png\" width=\"500\" height=\"150\"\n+     * <p><img src=\"../border/doc-files/BevelBorder-1.png\"\n+     * width=\"500\" height=\"150\"\n      * alt=\"[An illustration showing raised and lowered BevelBorders]\" />\n      *\n      * @param bevelType the desired appearance of the border. The value\n@@ -297,9 +298,9 @@ public BevelBorderUIResource(int bevelType)\n      * Constructs a BevelBorderUIResource given its appearance type\n      * and two colors for its highlight and shadow.\n      *\n-     * <p><img src=\"../border/BevelBorder-2.png\" width=\"500\" height=\"150\"\n-     * alt=\"[An illustration showing BevelBorders that were constructed\n-     * with this method]\" />\n+     * <p><img src=\"../border/doc-files/BevelBorder-2.png\" width=\"500\"\n+     * height=\"150\" alt=\"[An illustration showing BevelBorders that were\n+     * constructed with this method]\" />\n      *\n      * @param bevelType the desired appearance of the border. The value\n      *        must be either {@link javax.swing.border.BevelBorder#RAISED}\n@@ -337,9 +338,9 @@ public BevelBorderUIResource(int bevelType,\n      * Constructs a BevelBorderUIResource given its appearance type\n      * and all its colors.\n      *\n-     * <p><img src=\"../border/BevelBorder-3.png\" width=\"500\" height=\"150\"\n-     * alt=\"[An illustration showing BevelBorders that were constructed\n-     * with this method]\" />\n+     * <p><img src=\"../border/doc-files/BevelBorder-3.png\" width=\"500\"\n+     * height=\"150\" alt=\"[An illustration showing BevelBorders that\n+     * were constructed with this method]\" />\n      *\n      * @param bevelType the desired appearance of the border. The value\n      *        must be either {@link javax.swing.border.BevelBorder#RAISED}\n@@ -429,7 +430,8 @@ public CompoundBorderUIResource(Border outsideBorder,\n    * always install borders that implement <code>UIResource</code>,\n    * such as the borders provided by this class.\n    *\n-   * <p><img src=\"../border/EmptyBorder-1.png\" width=\"290\" height=\"200\"\n+   * <p><img src=\"../border/doc-files/EmptyBorder-1.png\"\n+   * width=\"290\" height=\"200\"\n    * alt=\"[An illustration of EmptyBorder]\" />\n    *\n    * @author Brian Jones (cbj@gnu.org)\n@@ -483,8 +485,9 @@ public EmptyBorderUIResource(Insets insets)\n    * always install borders that implement <code>UIResource</code>,\n    * such as the borders provided by this class.\n    *\n-   * <p><img src=\"../border/EtchedBorder-1.png\" width=\"500\" height=\"200\"\n-   * alt=\"[An illustration of the two EtchedBorder variants]\" />\n+   * <p><img src=\"../border/doc-files/EtchedBorder-1.png\" width=\"500\"\n+   * height=\"200\" alt=\"[An illustration of the two EtchedBorder\n+   * variants]\" />\n    *\n    * @author Brian Jones (cbj@gnu.org)\n    * @author Sascha Brawer (brawer@dandelis.ch)\n@@ -509,8 +512,9 @@ public EtchedBorderUIResource()\n      * appearance. The colors will be derived from the background\n      * color of the enclosed Component when the border gets painted.\n      *\n-     * <p><img src=\"../border/EtchedBorder-1.png\" width=\"500\" height=\"200\"\n-     * alt=\"[An illustration of the two EtchedBorder variants]\" />\n+     * <p><img src=\"../border/doc-files/EtchedBorder-1.png\"\n+     * width=\"500\" height=\"200\" alt=\"[An illustration of the two\n+     * EtchedBorder variants]\" />\n      *\n      * @param etchType the desired appearance of the border. The value\n      *        must be either {@link javax.swing.border.EtchedBorder#RAISED}\n@@ -549,7 +553,7 @@ public EtchedBorderUIResource(Color highlight, Color shadow)\n      * appearance, explicitly selecting the colors that will be used\n      * for highlight and shadow.\n      *\n-     * <p><img src=\"../border/EtchedBorder-2.png\" width=\"500\"\n+     * <p><img src=\"../border/doc-files/EtchedBorder-2.png\" width=\"500\"\n      * height=\"200\" alt=\"[An illustration that shows which pixels get\n      * painted in what color]\" />\n      *\n@@ -583,8 +587,8 @@ public EtchedBorderUIResource(int etchType,\n    * always install borders that implement <code>UIResource</code>,\n    * such as the borders provided by this class.\n    *\n-   * <p><img src=\"../border/LineBorder-1.png\" width=\"500\" height=\"200\"\n-   * alt=\"[An illustration of two LineBorders] />\n+   * <p><img src=\"../border/doc-files/LineBorder-1.png\" width=\"500\"\n+   * height=\"200\" alt=\"[An illustration of two LineBorders] />\n    *\n    * @author Brian Jones (cbj@gnu.org)\n    * @author Sascha Brawer (brawer@dandelis.ch)\n@@ -638,8 +642,8 @@ public LineBorderUIResource(Color color, int thickness)\n    * always install borders that implement <code>UIResource</code>,\n    * such as the borders provided by this class.\n    *\n-   * <p><img src=\"../border/MatteBorder-1.png\" width=\"500\" height=\"150\"\n-   * alt=\"[An illustration of two MatteBorders] />\n+   * <p><img src=\"../border/doc-files/MatteBorder-1.png\" width=\"500\"\n+   * height=\"150\" alt=\"[An illustration of two MatteBorders] />\n    *\n    * @author Brian Jones (cbj@gnu.org)\n    * @author Sascha Brawer (brawer@dandelis.ch)\n@@ -652,8 +656,9 @@ public LineBorderUIResource(Color color, int thickness)\n      * Constructs a MatteBorderUIResource given the width on each side\n      * and a fill color.\n      *\n-     * <p><img src=\"../border/MatteBorder-2.png\" width=\"500\" height=\"150\"\n-     * alt=\"[A picture of a MatteBorder made by this constructor]\" />\n+     * <p><img src=\"../border/doc-files/MatteBorder-2.png\" width=\"500\"\n+     * height=\"150\" alt=\"[A picture of a MatteBorder made by this\n+     * constructor]\" />\n      *\n      * @param top the width of the border at its top edge.\n      * @param left the width of the border at its left edge.\n@@ -673,7 +678,7 @@ public MatteBorderUIResource(int top, int left,\n      * Constructs a MatteBorderUIResource given the width on each side\n      * and an icon for tiling the border area.\n      *\n-     * <p><img src=\"../border/MatteBorder-4.png\" width=\"500\"\n+     * <p><img src=\"../border/doc-files/MatteBorder-4.png\" width=\"500\"\n      * height=\"150\" alt=\"[A picture of a MatteBorder made by this\n      * constructor]\" />\n      *\n@@ -697,10 +702,11 @@ public MatteBorderUIResource(int top, int left,\n      * the left and right edge, the icon height for the top and bottom\n      * edge.\n      *\n-     * <p><img src=\"../border/MatteBorder-6.png\" width=\"500\" height=\"150\"\n-     * alt=\"[A picture of a MatteBorder made by this constructor]\" />\n+     * <p><img src=\"../border/doc-files/MatteBorder-6.png\" width=\"500\"\n+     * height=\"150\" alt=\"[A picture of a MatteBorder made by this\n+     * constructor]\" />\n      *\n-     * @param tileIcon an icon for tiling the border area.\n+     * @param tileIcon an icon for tiling the border area. \n      */\n     public MatteBorderUIResource(Icon tileIcon)\n     {"}, {"sha": "5147ebb96099e2bbfecec0f933abbafa931c45f0", "filename": "libjava/javax/swing/plaf/ComponentUI.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fplaf%2FComponentUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fplaf%2FComponentUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2FComponentUI.java?ref=1ce4e666b28071b79a365d28dcc853e7ff1d1377", "patch": "@@ -50,7 +50,7 @@\n  * should not need to access this class; it is internal to Swing\n  * and the look-and-feel implementations.\n  *\n- * <p><img src=\"ComponentUI-1.png\" width=\"700\" height=\"550\"\n+ * <p><img src=\"doc-files/ComponentUI-1.png\" width=\"700\" height=\"550\"\n  * alt=\"[UML diagram illustrating the architecture for pluggable\n  * look and feels]\" />\n  *"}, {"sha": "7c441343bb2aaf9c526da0aaaf734a9b08b8d6f8", "filename": "libjava/javax/swing/plaf/TreeUI.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fplaf%2FTreeUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fplaf%2FTreeUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2FTreeUI.java?ref=1ce4e666b28071b79a365d28dcc853e7ff1d1377", "patch": "@@ -125,7 +125,7 @@ public TreeUI()\n   /**\n    * Finds the path that is closest to the specified position.\n    *\n-   * <p><img src=\"TreeUI-1.png\" width=\"300\" height=\"250\"\n+   * <p><img src=\"doc-files/TreeUI-1.png\" width=\"300\" height=\"250\"\n    * alt=\"[A screen shot of a JTree] />\n    *\n    * <p>As shown by the above illustration, the bounds of the"}, {"sha": "7002d14332c21a0d32c82531d7b4a605880effa4", "filename": "libjava/javax/swing/plaf/basic/BasicBorders.java", "status": "modified", "additions": 28, "deletions": 27, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicBorders.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicBorders.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicBorders.java?ref=1ce4e666b28071b79a365d28dcc853e7ff1d1377", "patch": "@@ -85,7 +85,7 @@\n    * <code>&#x201c;Button.light&#x201d;</code>, and\n    * <code>&#x201c;Button.highlight&#x201d;</code>.\n    *\n-   * <p><img src=\"BasicBorders.ButtonBorder-1.png\" width=\"300\"\n+   * <p><img src=\"doc-files/BasicBorders.ButtonBorder-1.png\" width=\"300\"\n    * height=\"170\" alt=\"[A screen shot of the returned border]\" />\n    *\n    * @return a {@link\n@@ -135,7 +135,7 @@ public static Border getButtonBorder()\n    * <code>&#x201c;RadioButton.light&#x201d;</code>, and\n    * <code>&#x201c;RadioButton.highlight&#x201d;</code>.\n    *\n-   * <p><img src=\"BasicBorders.RadioButtonBorder-1.png\" width=\"300\"\n+   * <p><img src=\"doc-files/BasicBorders.RadioButtonBorder-1.png\" width=\"300\"\n    * height=\"135\" alt=\"[A screen shot of the returned border]\" />\n    *\n    * @return a {@link\n@@ -187,7 +187,7 @@ public static Border getRadioButtonBorder()\n    * <code>&#x201c;ToggleButton.light&#x201d;</code>, and\n    * <code>&#x201c;ToggleButton.highlight&#x201d;</code>.\n    *\n-   * <p><img src=\"BasicBorders.ToggleButtonBorder-1.png\" width=\"270\"\n+   * <p><img src=\"doc-files/BasicBorders.ToggleButtonBorder-1.png\" width=\"270\"\n    * height=\"135\" alt=\"[A screen shot of the returned border]\" />\n    *\n    * @return a {@link\n@@ -238,7 +238,7 @@ public static Border getToggleButtonBorder()\n    * using the keys <code>&#x201c;MenuBar.shadow&#x201d;</code> and\n    * <code>&#x201c;MenuBar.highlight&#x201d;</code>.\n    *\n-   * <p><img src=\"BasicBorders.MenuBarBorder-1.png\" width=\"500\"\n+   * <p><img src=\"doc-files/BasicBorders.MenuBarBorder-1.png\" width=\"500\"\n    * height=\"140\" alt=\"[A screen shot of a JMenuBar with this border]\" />\n    *\n    * @return a {@link #MenuBarBorder}.\n@@ -266,10 +266,10 @@ public static Border getMenuBarBorder()\n    * using the keys <code>&#x201c;SplitPane.darkShadow&#x201d;</code> and\n    * <code>&#x201c;SplitPane.highlight&#x201d;</code>.\n    *   \n-   * <p><img src=\"BasicBorders.SplitPaneBorder-1.png\" width=\"520\"\n+   * <p><img src=\"doc-files/BasicBorders.SplitPaneBorder-1.png\" width=\"520\"\n    * height=\"200\" alt=\"[A screen shot for JSplitPane.HORIZONTAL_SPLIT]\" />\n    *\n-   * <p><img src=\"BasicBorders.SplitPaneBorder-2.png\" width=\"520\"\n+   * <p><img src=\"doc-files/BasicBorders.SplitPaneBorder-2.png\" width=\"520\"\n    * height=\"200\" alt=\"[A screen shot for JSplitPane.VERTICAL_SPLIT]\" />\n    *\n    * @return a {@link #SplitPaneBorder}.\n@@ -299,8 +299,9 @@ public static Border getSplitPaneBorder()\n    * <code>&#x201c;SplitPane.highlight&#x201d;</code>. The color of the\n    * other two edges is the background color of the divider.\n    *\n-   * <p><img src=\"BasicBorders.SplitPaneDividerBorder-1.png\" width=\"520\"\n-   * height=\"200\" alt=\"[A screen shot for JSplitPane.HORIZONTAL_SPLIT]\" />\n+   * <p><img src=\"doc-files/BasicBorders.SplitPaneDividerBorder-1.png\"\n+   * width=\"520\" height=\"200\" alt= \n+   * \"[A screen shot for JSplitPane.HORIZONTAL_SPLIT]\" />\n    *\n    * @return an instance of <code>SplitPaneDividerBorder</code>, which is\n    *         not a public API class of this package.\n@@ -334,7 +335,7 @@ public static Border getSplitPaneDividerBorder()\n    * <code>&#x201c;TextField.light&#x201d;</code>, and\n    * <code>&#x201c;TextField.highlight&#x201d;</code>.\n    *\n-   * <p><img src=\"BasicBorders.FieldBorder-1.png\" width=\"500\"\n+   * <p><img src=\"doc-files/BasicBorders.FieldBorder-1.png\" width=\"500\"\n    * height=\"200\" alt=\"[A screen shot of a border returned by\n    * this method]\" />\n    *\n@@ -364,7 +365,7 @@ public static Border getTextFieldBorder()\n    * feels better use different borders for their progress bars, or\n    * they will look really terrible.\n    *\n-   * <p><img src=\"BasicBorders-1.png\" width=\"120\" height=\"80\"\n+   * <p><img src=\"doc-files/BasicBorders-1.png\" width=\"120\" height=\"80\"\n    * alt=\"[A screen shot of a border returned by this method]\" />\n    */\n   public static Border getProgressBarBorder()\n@@ -380,7 +381,7 @@ public static Border getProgressBarBorder()\n    * Returns a border that is composed of a raised bevel border and a\n    * one-pixel thick line border.\n    *\n-   * <p><img src=\"BasicBorders-2.png\" width=\"300\" height=\"200\"\n+   * <p><img src=\"doc-files/BasicBorders-2.png\" width=\"300\" height=\"200\"\n    * alt=\"[A screen shot of a border returned by this method]\" />\n    *\n    * <p>The colors of the border are retrieved from the\n@@ -440,7 +441,7 @@ static Border getMarginBorder()  // intentionally not public\n    * A border whose appearance depends on the state of\n    * the enclosed button.\n    *\n-   * <p><img src=\"BasicBorders.ButtonBorder-1.png\" width=\"300\"\n+   * <p><img src=\"doc-files/BasicBorders.ButtonBorder-1.png\" width=\"300\"\n    * height=\"170\" alt=\"[A screen shot of this border]\" />\n    *\n    * @see javax.swing.plaf.basic.BasicGraphicsUtils#drawBezel\n@@ -616,7 +617,7 @@ public Insets getBorderInsets(Component c, Insets insets)\n    * A border that makes its enclosed component appear as lowered\n    * into the surface. Typically used for text fields.\n    *\n-   * <p><img src=\"BasicBorders.FieldBorder-1.png\" width=\"500\"\n+   * <p><img src=\"doc-files/BasicBorders.FieldBorder-1.png\" width=\"500\"\n    * height=\"200\" alt=\"[A screen shot of this border]\" />\n    *\n    * @see javax.swing.plaf.basic.BasicGraphicsUtils#drawEtchedRect\n@@ -784,7 +785,7 @@ public Insets getBorderInsets(Component c, Insets insets)\n    * component.  If the enclosed component has no such method,\n    * this border will not occupy any space.\n    *\n-   * <p><img src=\"BasicBorders.MarginBorder-1.png\" width=\"325\"\n+   * <p><img src=\"doc-files/BasicBorders.MarginBorder-1.png\" width=\"325\"\n    * height=\"200\" alt=\"[An illustration that shows how MarginBorder\n    * determines its borders]\" />\n    *\n@@ -885,7 +886,7 @@ else if (c instanceof JTextComponent)\n   /**\n    * A border for drawing a separator line below JMenuBar.\n    *\n-   * <p><img src=\"BasicBorders.MenuBarBorder-1.png\" width=\"500\"\n+   * <p><img src=\"doc-files/BasicBorders.MenuBarBorder-1.png\" width=\"500\"\n    * height=\"140\" alt=\"[A screen shot of a JMenuBar with this border]\" />\n    *\n    * @author Sascha Brawer (brawer@dandelis.ch)\n@@ -919,7 +920,7 @@ else if (c instanceof JTextComponent)\n      * Constructs a new MenuBarBorder for drawing a JMenuBar in\n      * the Basic look and feel.\n      *\n-     * <p><img src=\"BasicBorders.MenuBarBorder-1.png\" width=\"500\"\n+     * <p><img src=\"doc-files/BasicBorders.MenuBarBorder-1.png\" width=\"500\"\n      * height=\"140\" alt=\"[A screen shot of a JMenuBar with this\n      * border]\" />\n      *\n@@ -1041,7 +1042,7 @@ public Insets getBorderInsets(Component c, Insets insets)\n   /**\n    * A border for drawing radio buttons in the Basic look and feel.\n    *\n-   * <p><img src=\"BasicBorders.RadioButtonBorder-1.png\" width=\"300\"\n+   * <p><img src=\"doc-files/BasicBorders.RadioButtonBorder-1.png\" width=\"300\"\n    * height=\"135\" alt=\"[A screen shot of this border]\" />\n    *\n    * <p>Note about the screen shot: Normally, the\n@@ -1285,10 +1286,10 @@ public void paintBorder(Component c, Graphics  g,\n    * in the middle of the JSplitPane has its own border class, of which\n    * an instance can be obtained with {@link #getSplitPaneDividerBorder()}.\n    *\n-   * <p><img src=\"BasicBorders.SplitPaneBorder-1.png\" width=\"520\"\n+   * <p><img src=\"doc-files/BasicBorders.SplitPaneBorder-1.png\" width=\"520\"\n    * height=\"200\" alt=\"[A screen shot for JSplitPane.HORIZONTAL_SPLIT]\" />\n    *\n-   * <p><img src=\"BasicBorders.SplitPaneBorder-2.png\" width=\"520\"\n+   * <p><img src=\"doc-files/BasicBorders.SplitPaneBorder-2.png\" width=\"520\"\n    * height=\"200\" alt=\"[A screen shot for JSplitPane.VERTICAL_SPLIT]\" />\n    *\n    * <p>In contrast to the other borders of the Basic look and feel,\n@@ -1381,10 +1382,10 @@ public SplitPaneBorder(Color highlight, Color shadow)\n     /**\n      * Paints the border around a <code>JSplitPane</code>.\n      *\n-     * <p><img src=\"BasicBorders.SplitPaneBorder-1.png\" width=\"520\"\n+     * <p><img src=\"doc-files/BasicBorders.SplitPaneBorder-1.png\" width=\"520\"\n      * height=\"200\" alt=\"[A screen shot for JSplitPane.HORIZONTAL_SPLIT]\" />\n      *\n-     * <p><img src=\"BasicBorders.SplitPaneBorder-2.png\" width=\"520\"\n+     * <p><img src=\"doc-files/BasicBorders.SplitPaneBorder-2.png\" width=\"520\"\n      * height=\"200\" alt=\"[A screen shot for JSplitPane.VERTICAL_SPLIT]\" />\n      *\n      * @param c the <code>JSplitPane</code> whose border is to be painted.\n@@ -1535,7 +1536,7 @@ public boolean isBorderOpaque()\n   /**\n    * A border for the divider inside a JSplitPane.\n    *\n-   * <p><img src=\"BasicBorders.SplitPaneDividerBorder-1.png\"\n+   * <p><img src=\"doc-files/BasicBorders.SplitPaneDividerBorder-1.png\"\n    * width=\"520\" height=\"200\" alt=\"[A screen shot of this border]\" />\n    *\n    * @author Sascha Brawer (brawer@dandelis.ch)\n@@ -1575,9 +1576,9 @@ public SplitPaneDividerBorder(Color highlight, Color shadow)\n     /**\n      * Paints the border around the divider of a <code>JSplitPane</code>.\n      *\n-     * <p><img src=\"BasicBorders.SplitPaneDividerBorder-1.png\" width=\"520\"\n-     * height=\"200\" alt=\"[A picture that shows which pixels get painted\n-     * in what color]\" />\n+     * <p><img src=\"doc-files/BasicBorders.SplitPaneDividerBorder-1.png\"\n+     * width=\"520\" height=\"200\" alt=\"[A picture that shows which pixels\n+     * get painted in what color]\" />\n      *\n      * @param c the <code>JSplitPane</code> whose divider&#x2019;s border\n      *        is to be painted.\n@@ -1687,8 +1688,8 @@ private JSplitPane getSplitPane(Component c)\n   /**\n    * A border for toggle buttons in the Basic look and feel.\n    *\n-   * <p><img src=\"BasicBorders.ToggleButtonBorder-1.png\" width=\"270\"\n-   * height=\"135\" alt=\"[A screen shot of this border]\" />\n+   * <p><img src=\"doc-files/BasicBorders.ToggleButtonBorder-1.png\"\n+   * width=\"270\" height=\"135\" alt=\"[A screen shot of this border]\" />\n    *\n    * <p>The Sun implementation always seems to draw exactly\n    * the same border, irrespective of the state of the button."}, {"sha": "d7b53d54f6c2d2818a7b766cb7b1588e3752fe73", "filename": "libjava/javax/swing/plaf/basic/BasicGraphicsUtils.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicGraphicsUtils.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicGraphicsUtils.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicGraphicsUtils.java?ref=1ce4e666b28071b79a365d28dcc853e7ff1d1377", "patch": "@@ -78,7 +78,7 @@ public BasicGraphicsUtils()\n    * Draws a rectangle that appears etched into the surface, given\n    * four colors that are used for drawing.\n    *\n-   * <p><img src=\"BasicGraphicsUtils-1.png\" width=\"360\"\n+   * <p><img src=\"doc-files/BasicGraphicsUtils-1.png\" width=\"360\"\n    * height=\"200\" alt=\"[An illustration that shows which pixels\n    * get painted in what color]\" />\n    *\n@@ -166,7 +166,7 @@ public static Insets getEtchedInsets()\n    * Draws a rectangle that appears etched into the surface, given\n    * two colors that are used for drawing.\n    *\n-   * <p><img src=\"BasicGraphicsUtils-2.png\" width=\"360\"\n+   * <p><img src=\"doc-files/BasicGraphicsUtils-2.png\" width=\"360\"\n    * height=\"200\" alt=\"[An illustration that shows which pixels\n    * get painted in what color]\" />\n    *\n@@ -224,7 +224,7 @@ public static Insets getGrooveInsets()\n    * Draws a border that is suitable for buttons of the Basic look and\n    * feel.\n    *\n-   * <p><img src=\"BasicGraphicsUtils-3.png\" width=\"500\"\n+   * <p><img src=\"doc-files/BasicGraphicsUtils-3.png\" width=\"500\"\n    * height=\"300\" alt=\"[An illustration that shows which pixels\n    * get painted in what color]\" />\n    *\n@@ -305,7 +305,7 @@ public static void drawBezel(Graphics g,\n    * Draws a rectangle that appears lowered into the surface, given\n    * four colors that are used for drawing.\n    *\n-   * <p><img src=\"BasicGraphicsUtils-4.png\" width=\"360\"\n+   * <p><img src=\"doc-files/BasicGraphicsUtils-4.png\" width=\"360\"\n    * height=\"200\" alt=\"[An illustration that shows which pixels\n    * get painted in what color]\" />\n    *\n@@ -362,7 +362,7 @@ public static void drawLoweredBezel(Graphics g,\n    * drawn without underlining. Drawing is performed in the current\n    * color and font of <code>g</code>.\n    *\n-   * <p><img src=\"BasicGraphicsUtils-5.png\" width=\"500\"\n+   * <p><img src=\"doc-files/BasicGraphicsUtils-5.png\" width=\"500\"\n    * height=\"100\" alt=\"[An illustration showing how to use the\n    * method]\" />\n    *\n@@ -413,7 +413,7 @@ public static void drawString(Graphics g, String text,\n    * at the specified index. Drawing is performed in the current color\n    * and font of <code>g</code>.\n    *\n-   * <p><img src=\"BasicGraphicsUtils-5.png\" width=\"500\"\n+   * <p><img src=\"doc-files/BasicGraphicsUtils-5.png\" width=\"500\"\n    * height=\"100\" alt=\"[An illustration showing how to use the\n    * method]\" />\n    *\n@@ -540,7 +540,7 @@ public static void drawStringUnderlineCharAt(Graphics g, String text,\n    * those pixels is the current color of the Graphics <code>g</code>.\n    * Any other pixels are left unchanged.\n    *\n-   * <p><img src=\"BasicGraphicsUtils-7.png\" width=\"360\"\n+   * <p><img src=\"doc-files/BasicGraphicsUtils-7.png\" width=\"360\"\n    * height=\"200\" alt=\"[An illustration that shows which pixels\n    * get painted]\" />\n    *"}, {"sha": "0c20cb7c710a19825177a91d7d29feebf1d40849", "filename": "libjava/javax/swing/plaf/basic/BasicTreeUI.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTreeUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce4e666b28071b79a365d28dcc853e7ff1d1377/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTreeUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTreeUI.java?ref=1ce4e666b28071b79a365d28dcc853e7ff1d1377", "patch": "@@ -132,7 +132,7 @@ public int getRowCount(JTree tree)\n   /**\n    * Finds the path that is closest to the specified position.\n    *\n-   * <p><img src=\"../TreeUI-1.png\" width=\"300\" height=\"250\"\n+   * <p><img src=\"../doc-files/TreeUI-1.png\" width=\"300\" height=\"250\"\n    * alt=\"[A screen shot of a JTree] />\n    *\n    * <p>As shown by the above illustration, the bounds of the"}]}