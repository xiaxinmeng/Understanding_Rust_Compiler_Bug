{"sha": "613b1547cb3671c682f5af945050cde2c8ed4c6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEzYjE1NDdjYjM2NzFjNjgyZjVhZjk0NTA1MGNkZTJjOGVkNGM2YQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-21T23:00:23Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-21T23:00:23Z"}, "message": "Makefile.in: Fix c-pch.o and ggc-common.o dependencies on timevars.\n\n\t* Makefile.in: Fix c-pch.o and ggc-common.o dependencies on timevars.\n\n\t* timevar.c: Do not include any core headers.\n\t(timevar_print): De-i18n-ize.\n\t(print_time): Likewise.\n\t* timevar.h (timevar_push, timevar_pop): Make inline functions.\n\nFrom-SVN: r159687", "tree": {"sha": "4ea0ed08ffb8f8e095b4d94390460ac81a328a89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ea0ed08ffb8f8e095b4d94390460ac81a328a89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/613b1547cb3671c682f5af945050cde2c8ed4c6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/613b1547cb3671c682f5af945050cde2c8ed4c6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/613b1547cb3671c682f5af945050cde2c8ed4c6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/613b1547cb3671c682f5af945050cde2c8ed4c6a/comments", "author": null, "committer": null, "parents": [{"sha": "5d127eeb298103e87782c6492700d328b04dcb49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d127eeb298103e87782c6492700d328b04dcb49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d127eeb298103e87782c6492700d328b04dcb49"}], "stats": {"total": 54, "additions": 37, "deletions": 17}, "files": [{"sha": "1d6d14b8b364470eb259dbe321523155ff6a7550", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613b1547cb3671c682f5af945050cde2c8ed4c6a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613b1547cb3671c682f5af945050cde2c8ed4c6a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=613b1547cb3671c682f5af945050cde2c8ed4c6a", "patch": "@@ -1,3 +1,12 @@\n+2010-05-21  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* Makefile.in: Fix c-pch.o and ggc-common.o dependencies on timevars.\n+\n+\t* timevar.c: Do not include any core headers.\n+\t(timevar_print): De-i18n-ize.\n+\t(print_time): Likewise.\n+\t* timevar.h (timevar_push, timevar_pop): Make inline functions.\n+\n 2010-05-21  Joseph Myers  <joseph@codesourcery.com>\n \n \t* diagnostic.c: Don't include tm.h, tree.h, tm_p.h, langhooks.h or"}, {"sha": "f416366c7e852ff84fa661fd7d11d0b3a1e5562d", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613b1547cb3671c682f5af945050cde2c8ed4c6a/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613b1547cb3671c682f5af945050cde2c8ed4c6a/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=613b1547cb3671c682f5af945050cde2c8ed4c6a", "patch": "@@ -2092,7 +2092,7 @@ c-dump.o : c-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n c-pch.o : c-pch.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(CPPLIB_H) $(TREE_H) \\\n \t$(C_COMMON_H) output.h $(TOPLEV_H) $(C_PRAGMA_H) $(GGC_H) debug.h \\\n \tlanghooks.h $(FLAGS_H) hosthooks.h version.h $(TARGET_H) opts.h \\\n-\ttimevar.h\n+\t$(TIMEVAR_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t  -DHOST_MACHINE=\\\"$(host)\\\" -DTARGET_MACHINE=\\\"$(target)\\\" \\\n \t  $< $(OUTPUT_OPTION)\n@@ -2186,7 +2186,7 @@ gtype-desc.o: gtype-desc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \n ggc-common.o: ggc-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\t\\\n \t$(GGC_H) $(HASHTAB_H) $(TOPLEV_H) $(PARAMS_H) hosthooks.h\t\\\n-\t$(HOSTHOOKS_DEF_H) vec.h $(PLUGIN_H) timevar.h\n+\t$(HOSTHOOKS_DEF_H) vec.h $(PLUGIN_H) $(TIMEVAR_H)\n \n ggc-page.o: ggc-page.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n \t$(FLAGS_H) $(TOPLEV_H) $(GGC_H) $(TIMEVAR_H) $(TM_P_H) $(PARAMS_H) $(TREE_FLOW_H) $(PLUGIN_H)"}, {"sha": "df671e4c27c732b454d74bbfc73555c51975b73b", "filename": "gcc/timevar.c", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613b1547cb3671c682f5af945050cde2c8ed4c6a/gcc%2Ftimevar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613b1547cb3671c682f5af945050cde2c8ed4c6a/gcc%2Ftimevar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.c?ref=613b1547cb3671c682f5af945050cde2c8ed4c6a", "patch": "@@ -26,11 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #ifdef HAVE_SYS_RESOURCE_H\n #include <sys/resource.h>\n #endif\n-#include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"intl.h\"\n-#include \"rtl.h\"\n-#include \"toplev.h\"\n+#include \"timevar.h\"\n \n #ifndef HAVE_CLOCK_T\n typedef int clock_t;\n@@ -109,8 +105,8 @@ static double clocks_to_msec;\n #define CLOCKS_TO_MSEC (1 / (double)CLOCKS_PER_SEC)\n #endif\n \n-#include \"flags.h\"\n-#include \"timevar.h\"\n+/* True if timevars should be used.  In GCC, this happens with\n+   the -ftime-report flag.  */\n \n bool timevar_enable;\n \n@@ -408,7 +404,7 @@ timevar_print (FILE *fp)\n      TIMEVAR.  */\n   start_time = now;\n \n-  fputs (_(\"\\nExecution times (seconds)\\n\"), fp);\n+  fputs (\"\\nExecution times (seconds)\\n\", fp);\n   for (id = 0; id < (unsigned int) TIMEVAR_LAST; ++id)\n     {\n       struct timevar_def *tv = &timevars[(timevar_id_t) id];\n@@ -466,7 +462,7 @@ timevar_print (FILE *fp)\n     }\n \n   /* Print total time.  */\n-  fputs (_(\" TOTAL                 :\"), fp);\n+  fputs (\" TOTAL                 :\", fp);\n #ifdef HAVE_USER_TIME\n   fprintf (fp, \"%7.2f          \", total->user);\n #endif\n@@ -499,7 +495,7 @@ print_time (const char *str, long total)\n {\n   long all_time = get_run_time ();\n   fprintf (stderr,\n-\t   _(\"time in %s: %ld.%06ld (%ld%%)\\n\"),\n+\t   \"time in %s: %ld.%06ld (%ld%%)\\n\",\n \t   str, total / 1000000, total % 1000000,\n \t   all_time == 0 ? 0\n \t   : (long) (((100.0 * (double) total) / (double) all_time) + .5));"}, {"sha": "e776dbf07f50d7897872343adfeb608106183e52", "filename": "gcc/timevar.h", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613b1547cb3671c682f5af945050cde2c8ed4c6a/gcc%2Ftimevar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613b1547cb3671c682f5af945050cde2c8ed4c6a/gcc%2Ftimevar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.h?ref=613b1547cb3671c682f5af945050cde2c8ed4c6a", "patch": "@@ -80,10 +80,15 @@ typedef enum\n timevar_id_t;\n #undef DEFTIMEVAR\n \n+/* True if timevars should be used.  In GCC, this happens with\n+   the -ftime-report flag.  */\n+extern bool timevar_enable;\n+\n+/* Total amount of memory allocated by garbage collector.  */\n+extern size_t timevar_ggc_mem_total;\n+\n /* Execute the sequence: timevar_pop (TV), return (E);  */\n #define POP_TIMEVAR_AND_RETURN(TV, E)  do { timevar_pop (TV); return (E); }while(0)\n-#define timevar_pop(TV) do { if (timevar_enable) timevar_pop_1 (TV); }while(0)\n-#define timevar_push(TV) do { if (timevar_enable) timevar_push_1 (TV); }while(0)\n \n extern void timevar_init (void);\n extern void timevar_push_1 (timevar_id_t);\n@@ -93,10 +98,20 @@ extern void timevar_stop (timevar_id_t);\n extern void timevar_print (FILE *);\n \n /* Provided for backward compatibility.  */\n-extern void print_time (const char *, long);\n+static inline void\n+timevar_push (timevar_id_t tv)\n+{\n+  if (timevar_enable)\n+    timevar_push_1 (tv);\n+}\n \n-extern bool timevar_enable;\n+static inline void\n+timevar_pop (timevar_id_t tv)\n+{\n+  if (timevar_enable)\n+    timevar_pop_1 (tv);\n+}\n \n-extern size_t timevar_ggc_mem_total;\n+extern void print_time (const char *, long);\n \n #endif /* ! GCC_TIMEVAR_H */"}]}