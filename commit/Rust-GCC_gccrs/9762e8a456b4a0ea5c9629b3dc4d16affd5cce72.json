{"sha": "9762e8a456b4a0ea5c9629b3dc4d16affd5cce72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc2MmU4YTQ1NmI0YTBlYTVjOTYyOWIzZGM0ZDE2YWZmZDVjY2U3Mg==", "commit": {"author": {"name": "Martin v. L\u00f6wis", "email": "loewis@informatik.hu-berlin.de", "date": "2000-04-24T18:03:42Z"}, "committer": {"name": "Martin v. L\u00f6wis", "email": "loewis@gcc.gnu.org", "date": "2000-04-24T18:03:42Z"}, "message": "invoke.texi: Correct grammatical errors...\n\n\t* invoke.texi: Correct grammatical errors, document\n\t-fno-gnu-keywords as identical to -fno-asm for C++.\n\nFrom-SVN: r33384", "tree": {"sha": "1001f01bdbc61b777abff48a73138617ab5aadeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1001f01bdbc61b777abff48a73138617ab5aadeb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9762e8a456b4a0ea5c9629b3dc4d16affd5cce72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9762e8a456b4a0ea5c9629b3dc4d16affd5cce72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9762e8a456b4a0ea5c9629b3dc4d16affd5cce72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9762e8a456b4a0ea5c9629b3dc4d16affd5cce72/comments", "author": null, "committer": null, "parents": [{"sha": "99e757d5101bd235e7d8915eaeefc76515876b55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99e757d5101bd235e7d8915eaeefc76515876b55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99e757d5101bd235e7d8915eaeefc76515876b55"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "a942048e071582425b3820ad2ef53c79b7d61f8e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9762e8a456b4a0ea5c9629b3dc4d16affd5cce72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9762e8a456b4a0ea5c9629b3dc4d16affd5cce72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9762e8a456b4a0ea5c9629b3dc4d16affd5cce72", "patch": "@@ -1,3 +1,8 @@\n+2000-04-24  Martin v. L\ufffdwis  <loewis@informatik.hu-berlin.de>\n+\n+\t* invoke.texi: Correct grammatical errors, document\n+\t-fno-gnu-keywords as identical to -fno-asm for C++.\n+\n 2000-04-24  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* aclocal.m4: (GCC_HEADER_STRING, GCC_NEED_DECLARATION,"}, {"sha": "0e3a48a2028ea9b6ea74afd9f6e13a30b8a871de", "filename": "gcc/invoke.texi", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9762e8a456b4a0ea5c9629b3dc4d16affd5cce72/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9762e8a456b4a0ea5c9629b3dc4d16affd5cce72/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=9762e8a456b4a0ea5c9629b3dc4d16affd5cce72", "patch": "@@ -745,8 +745,7 @@ instead.  @samp{-ansi} implies @samp{-fno-asm}.\n \n In C++, this switch only affects the @code{typeof} keyword, since\n @code{asm} and @code{inline} are standard keywords.  You may want to\n-use the @samp{-fno-gnu-keywords} flag instead, as it also disables the\n-other, C++-specific, extension keywords such as @code{headof}.\n+use the @samp{-fno-gnu-keywords} flag instead, which has the same effect.\n \n @item -fno-builtin\n @cindex builtin functions\n@@ -1099,9 +1098,9 @@ but to allow and give a warning for old-style code that would\n otherwise be invalid, or have different behavior.\n \n @item -fno-gnu-keywords\n-Do not recognize @code{typeof} as a keyword, so that code can use these\n-words as identifiers. You can use the keywords @code{__typeof__}\n-instead.  @samp{-ansi} implies @samp{-fno-gnu-keywords}.\n+Do not recognize @code{typeof} as a keyword, so that code can use this\n+word as an identifier. You can use the keyword @code{__typeof__} instead.  \n+@samp{-ansi} implies @samp{-fno-gnu-keywords}.\n \n @item -fguiding-decls\n Treat a function declaration with the same type as a potential function"}]}