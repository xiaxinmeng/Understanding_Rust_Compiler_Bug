{"sha": "7e2fda6e4a47eebcd310e314da6a63be9629dbbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2UyZmRhNmU0YTQ3ZWViY2QzMTBlMzE0ZGE2YTYzYmU5NjI5ZGJiZA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@cygnus.co.uk", "date": "2000-08-01T18:45:53Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "2000-08-01T18:45:53Z"}, "message": "From Joern Rennecke:\n\n\t* sh.h (CPP_SPEC, TARGET_SWITCHES): Add m4-nofpu.\n\t* sh.md (udivsi3, divsi3): Don't use libcalls that use the FPU\n\tunless TARGET_SH3E is set.\n\t* t-sh (MULTILIB_MATCHES): Add m2=m4-nofpu.\n\n\t* sh.md (ashlsi3_d, ashlsi3_k): Remove, replace with\n\t(ashlsi3_std): New pattern.\n\t(ashlsi3 expander): Use it for TARGET_SH3.\n\t* sh.c (gen_ashift): Use it instead of ashlsi3_k.\n\nFrom-SVN: r35411", "tree": {"sha": "faa6cf14764c4611f8f7ee9292d320fa66185f87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faa6cf14764c4611f8f7ee9292d320fa66185f87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e2fda6e4a47eebcd310e314da6a63be9629dbbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e2fda6e4a47eebcd310e314da6a63be9629dbbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e2fda6e4a47eebcd310e314da6a63be9629dbbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e2fda6e4a47eebcd310e314da6a63be9629dbbd/comments", "author": null, "committer": null, "parents": [{"sha": "967add5195958651dbead852622bdbf7b88b0904", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/967add5195958651dbead852622bdbf7b88b0904", "html_url": "https://github.com/Rust-GCC/gccrs/commit/967add5195958651dbead852622bdbf7b88b0904"}], "stats": {"total": 72, "additions": 48, "deletions": 24}, "files": [{"sha": "279d0f678f9539356f2cf306646da06513a464d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e2fda6e4a47eebcd310e314da6a63be9629dbbd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e2fda6e4a47eebcd310e314da6a63be9629dbbd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e2fda6e4a47eebcd310e314da6a63be9629dbbd", "patch": "@@ -1,3 +1,16 @@\n+2000-08-01  Bernd Schmidt  <bernds@cygnus.co.uk>\n+\n+\tFrom Joern Rennecke:\n+\t* sh.h (CPP_SPEC, TARGET_SWITCHES): Add m4-nofpu.\n+\t* sh.md (udivsi3, divsi3): Don't use libcalls that use the FPU\n+\tunless TARGET_SH3E is set.\n+\t* t-sh (MULTILIB_MATCHES): Add m2=m4-nofpu.\n+\n+\t* sh.md (ashlsi3_d, ashlsi3_k): Remove, replace with\n+\t(ashlsi3_std): New pattern.\n+\t(ashlsi3 expander): Use it for TARGET_SH3.\n+\t* sh.c (gen_ashift): Use it instead of ashlsi3_k.\n+\n Tue Aug  1 12:34:21 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n \n \t* loop.c (canonicalize_condition):  Use destination, not source to"}, {"sha": "e63796a1f1c80443c5cc3488ef580ec0da560fb7", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e2fda6e4a47eebcd310e314da6a63be9629dbbd/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e2fda6e4a47eebcd310e314da6a63be9629dbbd/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=7e2fda6e4a47eebcd310e314da6a63be9629dbbd", "patch": "@@ -1039,7 +1039,7 @@ gen_ashift (type, n, reg)\n \temit_insn (gen_lshrsi3_k (reg, reg, GEN_INT (n)));\n       break;\n     case ASHIFT:\n-      emit_insn (gen_ashlsi3_k (reg, reg, GEN_INT (n)));\n+      emit_insn (gen_ashlsi3_std (reg, reg, GEN_INT (n)));\n       break;\n     }\n }"}, {"sha": "82be5c885bf06777810f59918f13135799f302d0", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e2fda6e4a47eebcd310e314da6a63be9629dbbd/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e2fda6e4a47eebcd310e314da6a63be9629dbbd/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=7e2fda6e4a47eebcd310e314da6a63be9629dbbd", "patch": "@@ -46,8 +46,9 @@ extern int code_for_indirect_jump_scratch;\n %{m3e:-D__SH3E__} \\\n %{m4-single-only:-D__SH4_SINGLE_ONLY__} \\\n %{m4-single:-D__SH4_SINGLE__} \\\n+%{m4-nofpu:-D__sh3__} \\\n %{m4:-D__SH4__} \\\n-%{!m1:%{!m2:%{!m3:%{!m3e:%{!m4:%{!m4-single:%{!m4-single-only:-D__sh1__}}}}}}} \\\n+%{!m1:%{!m2:%{!m3:%{!m3e:%{!m4:%{!m4-single:%{!m4-single-only:%{!m4-nofpu:-D__sh1__}}}}}}}} \\\n %{mnomacsave:-D__NOMACSAVE__} \\\n %{mhitachi:-D__HITACHI__}\"\n \n@@ -182,8 +183,9 @@ extern int target_flags;\n   {\"2\",\t        SH2_BIT},\t\t\t\\\n   {\"3\",\t        SH3_BIT|SH2_BIT},\t\t\\\n   {\"3e\",\tSH3E_BIT|SH3_BIT|SH2_BIT|FPU_SINGLE_BIT},\t\\\n-  {\"4-single-only\",\tSH3E_BIT|SH3_BIT|SH2_BIT|SH3E_BIT|HARD_SH4_BIT|FPU_SINGLE_BIT},\t\\\n+  {\"4-single-only\",\tSH3E_BIT|SH3_BIT|SH2_BIT|HARD_SH4_BIT|FPU_SINGLE_BIT},\t\\\n   {\"4-single\",\tSH4_BIT|SH3E_BIT|SH3_BIT|SH2_BIT|HARD_SH4_BIT|FPU_SINGLE_BIT},\\\n+  {\"4-nofpu\",\tSH3_BIT|SH2_BIT|HARD_SH4_BIT},\\\n   {\"4\",\t        SH4_BIT|SH3E_BIT|SH3_BIT|SH2_BIT|HARD_SH4_BIT},\t\\\n   {\"b\",\t\t-LITTLE_ENDIAN_BIT},  \t\t\\\n   {\"bigtable\", \tBIGTABLE_BIT},\t\t\t\\"}, {"sha": "dd915d3646fe1141e7cd0dad79f0dd3abb9672b7", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 29, "deletions": 20, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e2fda6e4a47eebcd310e314da6a63be9629dbbd/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e2fda6e4a47eebcd310e314da6a63be9629dbbd/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=7e2fda6e4a47eebcd310e314da6a63be9629dbbd", "patch": "@@ -955,7 +955,7 @@\n \n   operands[3] = gen_reg_rtx(SImode);\n   /* Emit the move of the address to a pseudo outside of the libcall.  */\n-  if (TARGET_HARD_SH4)\n+  if (TARGET_HARD_SH4 && TARGET_SH3E)\n     {\n       emit_move_insn (operands[3],\n \t\t      gen_rtx_SYMBOL_REF (SImode, \\\"__udivsi3_i4\\\"));\n@@ -1041,7 +1041,7 @@\n \n   operands[3] = gen_reg_rtx(SImode);\n   /* Emit the move of the address to a pseudo outside of the libcall.  */\n-  if (TARGET_HARD_SH4)\n+  if (TARGET_HARD_SH4 && TARGET_SH3E)\n     {\n       emit_move_insn (operands[3],\n \t\t      gen_rtx_SYMBOL_REF (SImode, \\\"__sdivsi3_i4\\\"));\n@@ -1525,23 +1525,32 @@\n ;;\n ;; shift left\n \n-(define_insn \"ashlsi3_d\"\n-  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n-\t(ashift:SI (match_operand:SI 1 \"arith_reg_operand\" \"0\")\n-\t\t   (match_operand:SI 2 \"arith_reg_operand\" \"r\")))]\n-  \"TARGET_SH3\"\n-  \"shld\t%2,%0\"\n-  [(set_attr \"type\" \"dyn_shift\")])\n-\n-(define_insn \"ashlsi3_k\"\n-  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r,r\")\n-\t(ashift:SI (match_operand:SI 1 \"arith_reg_operand\" \"0,0\")\n-\t\t   (match_operand:SI 2 \"const_int_operand\" \"M,K\")))]\n-  \"CONST_OK_FOR_K (INTVAL (operands[2]))\"\n+;; This pattern is used by init_expmed for computing the costs of shift\n+;; insns.\n+\n+(define_insn_and_split \"ashlsi3_std\"\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r,r,r,r\")\n+\t(ashift:SI (match_operand:SI 1 \"arith_reg_operand\" \"0,0,0,0\")\n+\t\t   (match_operand:SI 2 \"nonmemory_operand\" \"r,M,K,?ri\")))\n+   (clobber (match_scratch:SI 3 \"=X,X,X,&r\"))]\n+  \"TARGET_SH3\n+   || (GET_CODE (operands[2]) == CONST_INT\n+       && CONST_OK_FOR_K (INTVAL (operands[2])))\"\n   \"@\n-\tadd\t%0,%0\n-\tshll%O2\t%0\"\n-  [(set_attr \"type\" \"arith\")])\n+   shld\t%2,%0\n+   add\t%0,%0\n+   shll%O2\t%0\n+   #\"\n+  \"TARGET_SH3\n+   && GET_CODE (operands[2]) == CONST_INT\n+   && ! CONST_OK_FOR_K (INTVAL (operands[2]))\"\n+  [(set (match_dup 3) (match_dup 2))\n+   (parallel\n+    [(set (match_dup 0) (ashift:SI (match_dup 1) (match_dup 3)))\n+     (clobber (match_dup 4))])]\n+  \"operands[4] = gen_rtx_SCRATCH (SImode);\"\n+  [(set_attr \"length\" \"*,*,*,4\")\n+   (set_attr \"type\" \"dyn_shift,arith,arith,arith\")])\n \n (define_insn \"ashlhi3_k\"\n   [(set (match_operand:HI 0 \"arith_reg_operand\" \"=r,r\")\n@@ -1594,9 +1603,9 @@\n   if (GET_CODE (operands[2]) == CONST_INT\n       && sh_dynamicalize_shift_p (operands[2]))\n     operands[2] = force_reg (SImode, operands[2]);\n-  if (TARGET_SH3 && arith_reg_operand (operands[2], GET_MODE (operands[2])))\n+  if (TARGET_SH3)\n     {\n-      emit_insn (gen_ashlsi3_d (operands[0], operands[1], operands[2]));\n+      emit_insn (gen_ashlsi3_std (operands[0], operands[1], operands[2]));\n       DONE;\n     }\n   if (! immediate_operand (operands[2], GET_MODE (operands[2])))"}, {"sha": "cb187aa855cfbb939c58afaaa6534d26c778ff45", "filename": "gcc/config/sh/t-sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e2fda6e4a47eebcd310e314da6a63be9629dbbd/gcc%2Fconfig%2Fsh%2Ft-sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e2fda6e4a47eebcd310e314da6a63be9629dbbd/gcc%2Fconfig%2Fsh%2Ft-sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-sh?ref=7e2fda6e4a47eebcd310e314da6a63be9629dbbd", "patch": "@@ -23,7 +23,7 @@ fp-bit.c: $(srcdir)/config/fp-bit.c\n \n MULTILIB_OPTIONS= ml m2/m3e/m4-single-only/m4-single/m4\n MULTILIB_DIRNAMES= \n-MULTILIB_MATCHES = m2=m3\n+MULTILIB_MATCHES = m2=m3 m2=m4-nofpu\n \n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib"}]}