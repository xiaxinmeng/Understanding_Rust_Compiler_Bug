{"sha": "59068a897368c953c7acebf678cd29fb46038711", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTkwNjhhODk3MzY4Yzk1M2M3YWNlYmY2NzhjZDI5ZmI0NjAzODcxMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-06-08T12:25:03Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-06-08T12:25:03Z"}, "message": "Correct indentation of one line.\n\nFrom-SVN: r82753", "tree": {"sha": "cdbdf253645fdc5009b0db337402c1365e330f1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdbdf253645fdc5009b0db337402c1365e330f1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59068a897368c953c7acebf678cd29fb46038711", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59068a897368c953c7acebf678cd29fb46038711", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59068a897368c953c7acebf678cd29fb46038711", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59068a897368c953c7acebf678cd29fb46038711/comments", "author": null, "committer": null, "parents": [{"sha": "a98f59be6461692ca395b721c8fd60c9527449cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a98f59be6461692ca395b721c8fd60c9527449cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a98f59be6461692ca395b721c8fd60c9527449cf"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1c8aa7cffb7285d9c34eb26818cdd31900aab2ee", "filename": "gcc/dojump.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59068a897368c953c7acebf678cd29fb46038711/gcc%2Fdojump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59068a897368c953c7acebf678cd29fb46038711/gcc%2Fdojump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdojump.c?ref=59068a897368c953c7acebf678cd29fb46038711", "patch": "@@ -338,7 +338,7 @@ do_jump (tree exp, rtx if_false_label, rtx if_true_label)\n             && type != 0 && bitsize >= 0\n             && TYPE_PRECISION (type) < TYPE_PRECISION (TREE_TYPE (exp))\n             && (cmp_optab->handlers[(int) TYPE_MODE (type)].insn_code\n-          != CODE_FOR_nothing))\n+\t\t!= CODE_FOR_nothing))\n           {\n             do_jump (convert (type, exp), if_false_label, if_true_label);\n             break;"}]}