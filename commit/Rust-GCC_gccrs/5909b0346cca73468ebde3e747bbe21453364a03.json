{"sha": "5909b0346cca73468ebde3e747bbe21453364a03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTkwOWIwMzQ2Y2NhNzM0NjhlYmRlM2U3NDdiYmUyMTQ1MzM2NGEwMw==", "commit": {"author": {"name": "Bryce McKinlay", "email": "mckinlay@redhat.com", "date": "2005-02-16T04:10:42Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2005-02-16T04:10:42Z"}, "message": "re PR libgcj/19823 (java fails with non-executable memory)\n\n2005-02-15  Bryce McKinlay  <mckinlay@redhat.com>\n\n\tPR libgcj/19823\n\t* configure.host: Set gc_use_mmap on *-linux*.\n\t* configure.ac: Define USE_MMAP if gc_use_mmap is set.\n\t* include/private/gc_priv.h: Include gc_config.h.\n\t* configure, include/gc_config.h.in: Rebuilt.\n\nFrom-SVN: r95094", "tree": {"sha": "314f8a11ca03d334447c50d10982b23142d3c8de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/314f8a11ca03d334447c50d10982b23142d3c8de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5909b0346cca73468ebde3e747bbe21453364a03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5909b0346cca73468ebde3e747bbe21453364a03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5909b0346cca73468ebde3e747bbe21453364a03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5909b0346cca73468ebde3e747bbe21453364a03/comments", "author": null, "committer": null, "parents": [{"sha": "1dd8ce20fb5066513a09788b4bdc76b2d98b0ba2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dd8ce20fb5066513a09788b4bdc76b2d98b0ba2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dd8ce20fb5066513a09788b4bdc76b2d98b0ba2"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "2194ad5863fdfc9989e7f6ce5fbed8f5b8e99bbd", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5909b0346cca73468ebde3e747bbe21453364a03/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5909b0346cca73468ebde3e747bbe21453364a03/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=5909b0346cca73468ebde3e747bbe21453364a03", "patch": "@@ -1,3 +1,11 @@\n+2005-02-15  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\tPR libgcj/19823\n+\t* configure.host: Set gc_use_mmap on *-linux*.\n+\t* configure.ac: Define USE_MMAP if gc_use_mmap is set.\n+\t* include/private/gc_priv.h: Include gc_config.h.\n+\t* configure, include/gc_config.h.in: Rebuilt.\n+\n 2005-02-07  Hans Boehm  <Hans.Boehm@hp.com>\n \n \t* allchblk.c (GC_allochblk_nth): Dont overlook available space if"}, {"sha": "b205d328c03ed4549c41707f3165b6e0bccb762a", "filename": "boehm-gc/configure", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5909b0346cca73468ebde3e747bbe21453364a03/boehm-gc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5909b0346cca73468ebde3e747bbe21453364a03/boehm-gc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure?ref=5909b0346cca73468ebde3e747bbe21453364a03", "patch": "@@ -6558,6 +6558,14 @@ _ACEOF\n   fi\n fi;\n \n+if test \"${gc_use_mmap}\" = \"yes\"; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define USE_MMAP 1\n+_ACEOF\n+\n+fi\n+\n if test -n \"$with_cross_host\" &&\n    test x\"$with_cross_host\" != x\"no\"; then\n   toolexecdir='$(exec_prefix)/$(target_noncanonical)'"}, {"sha": "dfb0e17e2611e01f556e45792bca190f742118b5", "filename": "boehm-gc/configure.ac", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5909b0346cca73468ebde3e747bbe21453364a03/boehm-gc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5909b0346cca73468ebde3e747bbe21453364a03/boehm-gc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure.ac?ref=5909b0346cca73468ebde3e747bbe21453364a03", "patch": "@@ -446,6 +446,10 @@ AC_ARG_ENABLE(gc-debug,\n     esac \n   fi])\n \n+if test \"${gc_use_mmap}\" = \"yes\"; then\n+  AC_DEFINE(USE_MMAP, 1, [use MMAP instead of sbrk to get new memory])\n+fi\n+\n if test -n \"$with_cross_host\" &&\n    test x\"$with_cross_host\" != x\"no\"; then\n   toolexecdir='$(exec_prefix)/$(target_noncanonical)'"}, {"sha": "97f4dacb6deef195b42e58e165ccac5d447a9d28", "filename": "boehm-gc/configure.host", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5909b0346cca73468ebde3e747bbe21453364a03/boehm-gc%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5909b0346cca73468ebde3e747bbe21453364a03/boehm-gc%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure.host?ref=5909b0346cca73468ebde3e747bbe21453364a03", "patch": "@@ -18,8 +18,11 @@\n \n # It sets the following shell variables:\n #   gc_cflags\tSpecial CFLAGS to use when building\n+#   gc_use_mmap  Set to \"yes\" on platforms where mmap should be used instead\n+#\t\t of sbrk. This will define USE_MMAP.\n \n gc_cflags=\"\"\n+gc_use_mmap=\n \n # We should set -fexceptions if we are using gcc and might be used\n # inside something like gcj.  This is the zeroth approximation:\n@@ -37,6 +40,12 @@ else\n     esac\n fi\n \n+case \"${host}\" in\n+  *-linux*)\n+    gc_use_mmap=yes\n+    ;;\n+esac\n+\n case \"${target_optspace}:${host}\" in\n   yes:*)\n     gc_cflags=\"${gc_cflags} -Os\""}, {"sha": "92f1b2cf4607c30bb29d0da5914e5e55b220e52d", "filename": "boehm-gc/include/gc_config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5909b0346cca73468ebde3e747bbe21453364a03/boehm-gc%2Finclude%2Fgc_config.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5909b0346cca73468ebde3e747bbe21453364a03/boehm-gc%2Finclude%2Fgc_config.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fgc_config.h.in?ref=5909b0346cca73468ebde3e747bbe21453364a03", "patch": "@@ -145,6 +145,9 @@\n /* define GC_local_malloc() & GC_local_malloc_atomic() */\n #undef THREAD_LOCAL_ALLOC\n \n+/* use MMAP instead of sbrk to get new memory */\n+#undef USE_MMAP\n+\n /* POSIX version of C Source */\n #undef _POSIX_C_SOURCE\n "}, {"sha": "c336ce5c433dbb2c7897a0ce372b0a0dc171144b", "filename": "boehm-gc/include/private/gc_priv.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5909b0346cca73468ebde3e747bbe21453364a03/boehm-gc%2Finclude%2Fprivate%2Fgc_priv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5909b0346cca73468ebde3e747bbe21453364a03/boehm-gc%2Finclude%2Fprivate%2Fgc_priv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fprivate%2Fgc_priv.h?ref=5909b0346cca73468ebde3e747bbe21453364a03", "patch": "@@ -19,6 +19,10 @@\n # ifndef GC_PRIVATE_H\n # define GC_PRIVATE_H\n \n+/* Autoconf definitions. */\n+/* FIXME: This should really be included directly from each .c file. */\n+#include <gc_config.h>\n+\n #if defined(mips) && defined(SYSTYPE_BSD) && defined(sony_news)\n     /* sony RISC NEWS, NEWSOS 4 */\n #   define BSD_TIME"}]}