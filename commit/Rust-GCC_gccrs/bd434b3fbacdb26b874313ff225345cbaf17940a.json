{"sha": "bd434b3fbacdb26b874313ff225345cbaf17940a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ0MzRiM2ZiYWNkYjI2Yjg3NDMxM2ZmMjI1MzQ1Y2JhZjE3OTQwYQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2011-08-02T09:07:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T09:07:35Z"}, "message": "sem_aggr.adb (Resolve_Aggregate): disable incorrectly placed check in formal mode\n\n2011-08-02  Yannick Moy  <moy@adacore.com>\n\n\t* sem_aggr.adb (Resolve_Aggregate): disable incorrectly placed check in\n\tformal mode\n\t* sem_util.adb (Matching_Static_Array_Bounds): proper detection of\n\tmatching static array bounds, taking into account the special case of\n\tstring literals\n\t* sem_ch3.adb: Typo in comment.\n\nFrom-SVN: r177100", "tree": {"sha": "dfbd6aca0d748e60a7893dca9b609ac86b89da93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfbd6aca0d748e60a7893dca9b609ac86b89da93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd434b3fbacdb26b874313ff225345cbaf17940a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd434b3fbacdb26b874313ff225345cbaf17940a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd434b3fbacdb26b874313ff225345cbaf17940a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd434b3fbacdb26b874313ff225345cbaf17940a/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fe5d30682cc829629a2a9d5994957676635e1b80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe5d30682cc829629a2a9d5994957676635e1b80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe5d30682cc829629a2a9d5994957676635e1b80"}], "stats": {"total": 96, "additions": 78, "deletions": 18}, "files": [{"sha": "0f7b14fb5edfde873d086efdb951a961532fefcb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd434b3fbacdb26b874313ff225345cbaf17940a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd434b3fbacdb26b874313ff225345cbaf17940a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bd434b3fbacdb26b874313ff225345cbaf17940a", "patch": "@@ -1,3 +1,12 @@\n+2011-08-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Aggregate): disable incorrectly placed check in\n+\tformal mode\n+\t* sem_util.adb (Matching_Static_Array_Bounds): proper detection of\n+\tmatching static array bounds, taking into account the special case of\n+\tstring literals\n+\t* sem_ch3.adb: Typo in comment.\n+\n 2011-08-02  Yannick Moy  <moy@adacore.com>\n \n \t* errout.adb, errout.ads (Check_Formal_Restriction): new procedure"}, {"sha": "82025542ef6c685acf5e0cfc77fbd4ae8266d8c9", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd434b3fbacdb26b874313ff225345cbaf17940a/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd434b3fbacdb26b874313ff225345cbaf17940a/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=bd434b3fbacdb26b874313ff225345cbaf17940a", "patch": "@@ -1112,12 +1112,16 @@ package body Sem_Aggr is\n                   Check_Formal_Restriction\n                     (\"array aggregate should have only OTHERS\", N);\n                end if;\n-            elsif not (Nkind (Parent (N)) = N_Aggregate\n-                       and then Is_Array_Type (Etype (Parent (N)))\n-                       and then Number_Dimensions (Etype (Parent (N))) > 1)\n-            then\n-               Check_Formal_Restriction\n-                 (\"array aggregate should be qualified\", N);\n+\n+               --  The following check is disabled until a proper place is\n+               --  found where the type of the parent node can be inspected.\n+\n+--              elsif not (Nkind (Parent (N)) = N_Aggregate\n+--                         and then Is_Array_Type (Etype (Parent (N)))\n+--                         and then Number_Dimensions (Etype (Parent (N))) > 1)\n+--              then\n+--                 Check_Formal_Restriction\n+--                   (\"array aggregate should be qualified\", N);\n             else\n                null;\n             end if;"}, {"sha": "bb1552a6dbc8b03c5ada7feb81b72b970fe64524", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd434b3fbacdb26b874313ff225345cbaf17940a/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd434b3fbacdb26b874313ff225345cbaf17940a/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=bd434b3fbacdb26b874313ff225345cbaf17940a", "patch": "@@ -11515,7 +11515,7 @@ package body Sem_Ch3 is\n           (Nkind (S) = N_Attribute_Reference\n             and then Attribute_Name (S) = Name_Range)\n       then\n-         --  A Range attribute will transformed into N_Range by Resolve\n+         --  A Range attribute will be transformed into N_Range by Resolve\n \n          Analyze (S);\n          Set_Etype (S, T);"}, {"sha": "964b3f832109ec95c5fff8101ba58a9682c2170d", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 58, "deletions": 11, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd434b3fbacdb26b874313ff225345cbaf17940a/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd434b3fbacdb26b874313ff225345cbaf17940a/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=bd434b3fbacdb26b874313ff225345cbaf17940a", "patch": "@@ -9,7 +9,7 @@\n --          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU Genconflieral Public License as published  by the Free Soft- --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n -- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n -- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n@@ -8013,8 +8013,10 @@ package body Sem_Util is\n       R_Index : Node_Id;\n       L_Low   : Node_Id;\n       L_High  : Node_Id;\n+      L_Len   : Uint;\n       R_Low   : Node_Id;\n       R_High  : Node_Id;\n+      R_Len   : Uint;\n \n    begin\n       if L_Ndims /= R_Ndims then\n@@ -8027,18 +8029,65 @@ package body Sem_Util is\n          return False;\n       end if;\n \n-      L_Index := First_Index (L_Typ);\n-      R_Index := First_Index (R_Typ);\n+      --  First treat specially the first dimension, as the lower bound and\n+      --  length of string literals are not stored like those of arrays.\n \n-      --  There may not be an index available even if the type is constrained,\n-      --  see for example 0100-C23 when this function is called from\n-      --  Resolve_Qualified_Expression. Temporarily return False in that case.\n+      if Ekind (L_Typ) = E_String_Literal_Subtype then\n+         L_Low := String_Literal_Low_Bound (L_Typ);\n+         L_Len := String_Literal_Length (L_Typ);\n+      else\n+         L_Index := First_Index (L_Typ);\n+         Get_Index_Bounds (L_Index, L_Low, L_High);\n+\n+         if         Is_OK_Static_Expression (L_Low)\n+           and then Is_OK_Static_Expression (L_High)\n+         then\n+            if Expr_Value (L_High) < Expr_Value (L_Low) then\n+               L_Len := Uint_0;\n+            else\n+               L_Len := (Expr_Value (L_High) - Expr_Value (L_Low)) + 1;\n+            end if;\n+         else\n+            return False;\n+         end if;\n+      end if;\n \n-      if No (L_Index) or else No (R_Index) then\n+      if Ekind (R_Typ) = E_String_Literal_Subtype then\n+         R_Low := String_Literal_Low_Bound (R_Typ);\n+         R_Len := String_Literal_Length (R_Typ);\n+      else\n+         R_Index := First_Index (R_Typ);\n+         Get_Index_Bounds (R_Index, R_Low, R_High);\n+\n+         if         Is_OK_Static_Expression (R_Low)\n+           and then Is_OK_Static_Expression (R_High)\n+         then\n+            if Expr_Value (R_High) < Expr_Value (R_Low) then\n+               R_Len := Uint_0;\n+            else\n+               R_Len := (Expr_Value (R_High) - Expr_Value (R_Low)) + 1;\n+            end if;\n+         else\n+            return False;\n+         end if;\n+      end if;\n+\n+      if         Is_OK_Static_Expression (L_Low)\n+        and then Is_OK_Static_Expression (R_Low)\n+        and then Expr_Value (L_Low) = Expr_Value (R_Low)\n+        and then L_Len = R_Len\n+      then\n+         null;\n+      else\n          return False;\n       end if;\n \n-      for Indx in 1 .. L_Ndims loop\n+      --  Then treat all other dimensions\n+\n+      for Indx in 2 .. L_Ndims loop\n+         Next (L_Index);\n+         Next (R_Index);\n+\n          Get_Index_Bounds (L_Index, L_Low, L_High);\n          Get_Index_Bounds (R_Index, R_Low, R_High);\n \n@@ -8049,9 +8098,7 @@ package body Sem_Util is\n            and then Expr_Value (L_Low)  = Expr_Value (R_Low)\n            and then Expr_Value (L_High) = Expr_Value (R_High)\n          then\n-            Next (L_Index);\n-            Next (R_Index);\n-\n+            null;\n          else\n             return False;\n          end if;"}]}