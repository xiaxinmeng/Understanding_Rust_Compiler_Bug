{"sha": "e9fb7579cbb9fa7adea13e7ee34dfd44fe19ad90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTlmYjc1NzljYmI5ZmE3YWRlYTEzZTdlZTM0ZGZkNDRmZTE5YWQ5MA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-02-05T15:54:00Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-02-10T21:21:03Z"}, "message": "analyzer: gfortran testsuite support\n\nThis patch adds a gfortran.dg/analyzer subdirectory with an analyzer.exp,\nsetting DEFAULT_FFLAGS on the tests run within it.\n\nIt also adds a couple of simple proof-of-concept tests of e.g. detecting\ndouble-frees from gfortran.\n\ngcc/testsuite/ChangeLog:\n\t* gfortran.dg/analyzer/analyzer.exp: New subdirectory and .exp\n\tsuite.\n\t* gfortran.dg/analyzer/malloc-example.f90: New test.\n\t* gfortran.dg/analyzer/malloc.f90: New test.", "tree": {"sha": "88e9e371a3f1ffdb59eb82d11038f45b14eebb87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88e9e371a3f1ffdb59eb82d11038f45b14eebb87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9fb7579cbb9fa7adea13e7ee34dfd44fe19ad90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9fb7579cbb9fa7adea13e7ee34dfd44fe19ad90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9fb7579cbb9fa7adea13e7ee34dfd44fe19ad90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9fb7579cbb9fa7adea13e7ee34dfd44fe19ad90/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7214fce3024d726ad548d7003fa162eb5021c491", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7214fce3024d726ad548d7003fa162eb5021c491", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7214fce3024d726ad548d7003fa162eb5021c491"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "3840833d66c502def1f47e84a5c7a30800c97d94", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9fb7579cbb9fa7adea13e7ee34dfd44fe19ad90/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9fb7579cbb9fa7adea13e7ee34dfd44fe19ad90/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e9fb7579cbb9fa7adea13e7ee34dfd44fe19ad90", "patch": "@@ -1,3 +1,10 @@\n+2020-02-10  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gfortran.dg/analyzer/analyzer.exp: New subdirectory and .exp\n+\tsuite.\n+\t* gfortran.dg/analyzer/malloc-example.f90: New test.\n+\t* gfortran.dg/analyzer/malloc.f90: New test.\n+\n 2020-02-10  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/93640"}, {"sha": "00edfa54dce02eb1113802fd3ed68980e48e0a05", "filename": "gcc/testsuite/gfortran.dg/analyzer/analyzer.exp", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9fb7579cbb9fa7adea13e7ee34dfd44fe19ad90/gcc%2Ftestsuite%2Fgfortran.dg%2Fanalyzer%2Fanalyzer.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9fb7579cbb9fa7adea13e7ee34dfd44fe19ad90/gcc%2Ftestsuite%2Fgfortran.dg%2Fanalyzer%2Fanalyzer.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fanalyzer%2Fanalyzer.exp?ref=e9fb7579cbb9fa7adea13e7ee34dfd44fe19ad90", "patch": "@@ -0,0 +1,55 @@\n+#  Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+#  This file is part of GCC.\n+#\n+#  GCC is free software; you can redistribute it and/or modify it under\n+#  the terms of the GNU General Public License as published by the Free\n+#  Software Foundation; either version 3, or (at your option) any later\n+#  version.\n+#\n+#  GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+#  WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+#  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+#  for more details.\n+#\n+#  You should have received a copy of the GNU General Public License\n+#  along with GCC; see the file COPYING3.  If not see\n+#  <http://www.gnu.org/licenses/>.\n+\n+# GCC testsuite that uses the `dg.exp' driver.\n+\n+# Load support procs.\n+load_lib gfortran-dg.exp\n+load_lib gfortran.exp\n+\n+# If the analyzer has not been enabled, bail.\n+if { ![check_effective_target_analyzer] } {\n+    return\n+}\n+\n+global DEFAULT_FFLAGS\n+if [info exists DEFAULT_FFLAGS] then {\n+  set save_default_fflags $DEFAULT_FFLAGS\n+}\n+\n+# If a testcase doesn't have special options, use these.\n+set DEFAULT_FFLAGS \"-fanalyzer -fdiagnostics-path-format=separate-events -Wanalyzer-too-complex -fanalyzer-call-summaries\"\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+\n+gfortran_init\n+\n+gfortran-dg-runtest [lsort \\\n+       [glob -nocomplain $srcdir/$subdir/*.\\[fF\\]{,90,95,03,08} ] ] \"\" $DEFAULT_FFLAGS\n+\n+# All done.\n+dg-finish\n+\n+if [info exists save_default_fflags] {\n+  set DEFAULT_FFLAGS $save_default_fflags\n+} else {\n+  unset DEFAULT_FFLAGS\n+}"}, {"sha": "4c48d415e0529618c5761248b0e7e08eba9db5fa", "filename": "gcc/testsuite/gfortran.dg/analyzer/malloc-example.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9fb7579cbb9fa7adea13e7ee34dfd44fe19ad90/gcc%2Ftestsuite%2Fgfortran.dg%2Fanalyzer%2Fmalloc-example.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9fb7579cbb9fa7adea13e7ee34dfd44fe19ad90/gcc%2Ftestsuite%2Fgfortran.dg%2Fanalyzer%2Fmalloc-example.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fanalyzer%2Fmalloc-example.f90?ref=e9fb7579cbb9fa7adea13e7ee34dfd44fe19ad90", "patch": "@@ -0,0 +1,21 @@\n+! Example from GCC documentation\n+! { dg-do compile }\n+! { dg-additional-options \"-fcray-pointer\" }\n+\n+program test_malloc\n+  implicit none\n+  integer i\n+  real*8 x(*), z\n+  pointer(ptr_x,x)\n+\n+  ptr_x = malloc(20*8)\n+  do i = 1, 20\n+    x(i) = sqrt(1.0d0 / i)\n+  end do\n+  z = 0\n+  do i = 1, 20\n+    z = z + x(i)\n+    print *, z\n+  end do\n+  call free(ptr_x)\n+end program test_malloc"}, {"sha": "05a0bcc3a53a80825b78f59a160776784c21c1a5", "filename": "gcc/testsuite/gfortran.dg/analyzer/malloc.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9fb7579cbb9fa7adea13e7ee34dfd44fe19ad90/gcc%2Ftestsuite%2Fgfortran.dg%2Fanalyzer%2Fmalloc.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9fb7579cbb9fa7adea13e7ee34dfd44fe19ad90/gcc%2Ftestsuite%2Fgfortran.dg%2Fanalyzer%2Fmalloc.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fanalyzer%2Fmalloc.f90?ref=e9fb7579cbb9fa7adea13e7ee34dfd44fe19ad90", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do compile }\n+! { dg-additional-options \"-fcray-pointer -O0\" }\n+\n+subroutine test_ok\n+  real*8 x(*)\n+  pointer(ptr_x,x)\n+\n+  ptr_x = malloc(20*8)\n+  call free(ptr_x)\n+end subroutine test_ok ! { dg-bogus \"leak\" }\n+\n+subroutine test_double_free\n+  real*8 x(*)\n+  pointer(ptr_x,x)\n+\n+  ptr_x = malloc(20*8)\n+  call free(ptr_x)\n+  call free(ptr_x) ! { dg-warning \"double-'free'\" }\n+end subroutine test_double_free ! { dg-bogus \"leak\" }"}]}