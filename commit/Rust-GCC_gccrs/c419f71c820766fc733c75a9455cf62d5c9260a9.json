{"sha": "c419f71c820766fc733c75a9455cf62d5c9260a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQxOWY3MWM4MjA3NjZmYzczM2M3NWE5NDU1Y2Y2MmQ1YzkyNjBhOQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2015-09-26T07:48:10Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-09-26T07:48:10Z"}, "message": "[PATCH] Fix undefined behaviour in arc port\n\n\t* config/arc/arc.c (arc_output_addsi): Fix left shift undefined\n\tbehaviour.\n\t* config/arc/constraints.md (Cca, C2a): Fix left shift undefined\n\tbehaviour.\n\nFrom-SVN: r228166", "tree": {"sha": "6ec737c1aed89baec6db3cf988edcfce7d59fe9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ec737c1aed89baec6db3cf988edcfce7d59fe9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c419f71c820766fc733c75a9455cf62d5c9260a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c419f71c820766fc733c75a9455cf62d5c9260a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c419f71c820766fc733c75a9455cf62d5c9260a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c419f71c820766fc733c75a9455cf62d5c9260a9/comments", "author": null, "committer": null, "parents": [{"sha": "a0a65802bf1336dcaf72b060bc8a8decf228945a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0a65802bf1336dcaf72b060bc8a8decf228945a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0a65802bf1336dcaf72b060bc8a8decf228945a"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "01fac466660956b2f86875e297fc2da4476154a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c419f71c820766fc733c75a9455cf62d5c9260a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c419f71c820766fc733c75a9455cf62d5c9260a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c419f71c820766fc733c75a9455cf62d5c9260a9", "patch": "@@ -1,5 +1,10 @@\n 2015-09-26  Jeff Law  <law@redhat.com>\n \n+\t* config/arc/arc.c (arc_output_addsi): Fix left shift undefined\n+\tbehaviour.\n+\t* config/arc/constraints.md (Cca, C2a): Fix left shift undefined\n+\tbehaviour.\n+\n \t* config/sh/sh.h (CONST_OK_FOR_J16): Fix left shift undefined\n \tbehaviour\n "}, {"sha": "4d731b53f6c5e0775fabd6905ee1c39071d36185", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c419f71c820766fc733c75a9455cf62d5c9260a9/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c419f71c820766fc733c75a9455cf62d5c9260a9/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=c419f71c820766fc733c75a9455cf62d5c9260a9", "patch": "@@ -7393,7 +7393,7 @@ arc_output_addsi (rtx *operands, bool cond_p, bool output_p)\n       int range_factor = neg_intval & intval;\n       int shift;\n \n-      if (intval == -1 << 31)\n+      if (intval == (HOST_WIDE_INT) (HOST_WIDE_INT_M1U << 31))\n \tADDSI_OUTPUT1 (\"bxor%? %0,%1,31\");\n \n       /* If we can use a straight add / sub instead of a {add,sub}[123] of\n@@ -9320,7 +9320,9 @@ arc_legitimize_reload_address (rtx *p, machine_mode mode, int opnum,\n       if ((scale-1) & offset)\n \tscale = 1;\n       shift = scale >> 1;\n-      offset_base = (offset + (256 << shift)) & (-512 << shift);\n+      offset_base\n+\t= ((offset + (256 << shift))\n+\t   & ((HOST_WIDE_INT)(-512U << shift)));\n       /* Sometimes the normal form does not suit DImode.  We\n \t could avoid that by using smaller ranges, but that\n \t would give less optimized code when SImode is"}, {"sha": "b3ea115fc03496b5cb5c32f373e1f9089a832185", "filename": "gcc/config/arc/constraints.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c419f71c820766fc733c75a9455cf62d5c9260a9/gcc%2Fconfig%2Farc%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c419f71c820766fc733c75a9455cf62d5c9260a9/gcc%2Fconfig%2Farc%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Fconstraints.md?ref=c419f71c820766fc733c75a9455cf62d5c9260a9", "patch": "@@ -167,7 +167,7 @@\n   \"@internal\n    Conditional or three-address add / sub constant\"\n   (and (match_code \"const_int\")\n-       (match_test \"ival == -1 << 31\n+       (match_test \"ival == (HOST_WIDE_INT)(HOST_WIDE_INT_M1U << 31)\n \t\t    || (ival >= -0x1f8 && ival <= 0x1f8\n \t\t\t&& ((ival >= 0 ? ival : -ival)\n \t\t\t    <= 0x3f * (ival & -ival)))\")))\n@@ -195,7 +195,7 @@\n   \"@internal\n    Unconditional two-address add / sub constant\"\n   (and (match_code \"const_int\")\n-       (match_test \"ival == -1 << 31\n+       (match_test \"ival == HOST_WIDE_INT (HOST_WIDE_INT_M1U << 31)\n \t\t    || (ival >= -0x4000 && ival <= 0x4000\n \t\t\t&& ((ival >= 0 ? ival : -ival)\n \t\t\t    <= 0x7ff * (ival & -ival)))\")))"}]}