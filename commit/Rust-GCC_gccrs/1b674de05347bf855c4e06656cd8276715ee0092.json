{"sha": "1b674de05347bf855c4e06656cd8276715ee0092", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI2NzRkZTA1MzQ3YmY4NTVjNGUwNjY1NmNkODI3NjcxNWVlMDA5Mg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-05-08T08:20:45Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-05-08T08:20:45Z"}, "message": "re PR middle-end/36154 (internal compiler error: in get_constraint_for_component_ref, at tree-ssa-structalias.c:2727)\n\n2008-05-08  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/36154\n\t* tree-ssa-structalias.c (push_fields_onto_fieldstack): Make\n\tsure to create a representative for trailing arrays for PTA.\n\n\t* gcc.c-torture/compile/pr36154.c: New testcase.\n\nFrom-SVN: r135071", "tree": {"sha": "e0980eeaca11a9f476d545834ecfe14de6369efe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0980eeaca11a9f476d545834ecfe14de6369efe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b674de05347bf855c4e06656cd8276715ee0092", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b674de05347bf855c4e06656cd8276715ee0092", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b674de05347bf855c4e06656cd8276715ee0092", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b674de05347bf855c4e06656cd8276715ee0092/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b13e7b6cfc7ecbdd98cbff22e1b1a394c1f50dbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b13e7b6cfc7ecbdd98cbff22e1b1a394c1f50dbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b13e7b6cfc7ecbdd98cbff22e1b1a394c1f50dbc"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "1121be1a9e053961afe10f591362c80256b021ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b674de05347bf855c4e06656cd8276715ee0092/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b674de05347bf855c4e06656cd8276715ee0092/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b674de05347bf855c4e06656cd8276715ee0092", "patch": "@@ -1,3 +1,9 @@\n+2008-05-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/36154\n+\t* tree-ssa-structalias.c (push_fields_onto_fieldstack): Make\n+\tsure to create a representative for trailing arrays for PTA.\n+\n 2008-05-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/36172"}, {"sha": "2b137fa9988ea8a1872572d44e2ccf362efe4880", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b674de05347bf855c4e06656cd8276715ee0092/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b674de05347bf855c4e06656cd8276715ee0092/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b674de05347bf855c4e06656cd8276715ee0092", "patch": "@@ -1,3 +1,8 @@\n+2008-05-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/36154\n+\t* gcc.c-torture/compile/pr36154.c: New testcase.\n+\n 2008-05-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/36172"}, {"sha": "ae3eb83fa11f3df89f61b3272396b0db96207bec", "filename": "gcc/testsuite/gcc.c-torture/compile/pr36154.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b674de05347bf855c4e06656cd8276715ee0092/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr36154.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b674de05347bf855c4e06656cd8276715ee0092/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr36154.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr36154.c?ref=1b674de05347bf855c4e06656cd8276715ee0092", "patch": "@@ -0,0 +1,11 @@\n+struct eth_test_pkt {\n+  unsigned short len;\n+  unsigned short ctr;\n+  unsigned char packet[];\n+} __attribute__ ((packed));\n+struct eth_test_pkt pkt_unaligned = { .packet = { 0xFC } };\n+int cmd_unaligned(const void *p)\n+{\n+  return memcmp(p, pkt_unaligned.packet, 1);\n+}\n+"}, {"sha": "d58478ebeb29591a4818d8b8eb07caf3d327afff", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b674de05347bf855c4e06656cd8276715ee0092/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b674de05347bf855c4e06656cd8276715ee0092/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=1b674de05347bf855c4e06656cd8276715ee0092", "patch": "@@ -4160,11 +4160,15 @@ push_fields_onto_fieldstack (tree type, VEC(fieldoff_s,heap) **fieldstack,\n \t\t        (DECL_NONADDRESSABLE_P (field)\n \t\t         ? addressable_type\n \t\t         : TREE_TYPE (field))))\n-\t\t     && DECL_SIZE (field)\n-\t\t     && !integer_zerop (DECL_SIZE (field)))\n-\t      /* Empty structures may have actual size, like in C++. So\n+\t\t     && ((DECL_SIZE (field)\n+\t\t\t  && !integer_zerop (DECL_SIZE (field)))\n+\t\t\t || (!DECL_SIZE (field)\n+\t\t\t     && TREE_CODE (TREE_TYPE (field)) == ARRAY_TYPE)))\n+\t      /* Empty structures may have actual size, like in C++.  So\n \t         see if we didn't push any subfields and the size is\n-\t         nonzero, push the field onto the stack */\n+\t         nonzero, push the field onto the stack.  Trailing flexible\n+\t\t array members also need a representative to be able to\n+\t\t treat taking their address in PTA.  */\n \t      push = true;\n \n \t    if (push)"}]}