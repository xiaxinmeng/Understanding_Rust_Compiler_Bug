{"sha": "4232ebbbc9c2d188214485cd8e951648c45323e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDIzMmViYmJjOWMyZDE4ODIxNDQ4NWNkOGU5NTE2NDhjNDUzMjNlNw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-02-29T15:30:08Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-02-29T15:30:08Z"}, "message": "Replace ENABLE_CHECKING macro with flag_checking in GNAT\n\n\t* gcc-interface/utils.c (set_reverse_storage_order_on_pad_type):\n\tReplace ENABLE_CHECKING macro with flag_checking.\n\nFrom-SVN: r233815", "tree": {"sha": "dc5ea421264253caa18d9cff63f5e8966a1f1b1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc5ea421264253caa18d9cff63f5e8966a1f1b1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4232ebbbc9c2d188214485cd8e951648c45323e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4232ebbbc9c2d188214485cd8e951648c45323e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4232ebbbc9c2d188214485cd8e951648c45323e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4232ebbbc9c2d188214485cd8e951648c45323e7/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2998cb96c8128b826c357caed14d75961115c441", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2998cb96c8128b826c357caed14d75961115c441", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2998cb96c8128b826c357caed14d75961115c441"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "de617b16ca3d89f550cf0a1c399f45fca5bef98e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4232ebbbc9c2d188214485cd8e951648c45323e7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4232ebbbc9c2d188214485cd8e951648c45323e7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4232ebbbc9c2d188214485cd8e951648c45323e7", "patch": "@@ -1,3 +1,8 @@\n+2016-02-29  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-interface/utils.c (set_reverse_storage_order_on_pad_type):\n+\tReplace ENABLE_CHECKING macro with flag_checking.\n+\n 2016-02-29  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Access_Type>: Retrofit"}, {"sha": "9bd2773ba9e8b50abc40aabb1a25a1f00637ac45", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4232ebbbc9c2d188214485cd8e951648c45323e7/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4232ebbbc9c2d188214485cd8e951648c45323e7/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=4232ebbbc9c2d188214485cd8e951648c45323e7", "patch": "@@ -1486,11 +1486,13 @@ set_reverse_storage_order_on_pad_type (tree type)\n {\n   tree field, canonical_pad_type;\n \n-#ifdef ENABLE_CHECKING\n-  /* If the inner type is not scalar then the function does nothing.  */\n-  tree inner_type = TREE_TYPE (TYPE_FIELDS (type));\n-  gcc_assert (!AGGREGATE_TYPE_P (inner_type) && !VECTOR_TYPE_P (inner_type));\n-#endif\n+  if (flag_checking)\n+    {\n+      /* If the inner type is not scalar then the function does nothing.  */\n+      tree inner_type = TREE_TYPE (TYPE_FIELDS (type));\n+      gcc_assert (!AGGREGATE_TYPE_P (inner_type)\n+\t\t  && !VECTOR_TYPE_P (inner_type));\n+    }\n \n   /* This is required for the canonicalization.  */\n   gcc_assert (TREE_CONSTANT (TYPE_SIZE (type)));"}]}