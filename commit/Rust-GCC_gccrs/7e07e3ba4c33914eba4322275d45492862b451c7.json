{"sha": "7e07e3ba4c33914eba4322275d45492862b451c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2UwN2UzYmE0YzMzOTE0ZWJhNDMyMjI3NWQ0NTQ5Mjg2MmI0NTFjNw==", "commit": {"author": {"name": "Gavin Koch", "email": "gavin@cygnus.com", "date": "1998-01-20T08:01:08Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-20T08:01:08Z"}, "message": "mips.md (divsi3,divdi3,modsi3,moddi3,udivsi3,udivdi3, [...]): Handle mips16 div/mod by a constant.\n\n        * mips/mips.md (divsi3,divdi3,modsi3,moddi3,udivsi3,udivdi3,\n        umodsi3,umoddi3): Handle mips16 div/mod by a constant.\n\nFrom-SVN: r17430", "tree": {"sha": "cccd2626c1d3dce8fc70f405eec88263a11b767b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cccd2626c1d3dce8fc70f405eec88263a11b767b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e07e3ba4c33914eba4322275d45492862b451c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e07e3ba4c33914eba4322275d45492862b451c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e07e3ba4c33914eba4322275d45492862b451c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e07e3ba4c33914eba4322275d45492862b451c7/comments", "author": null, "committer": null, "parents": [{"sha": "7169565c20f4626b4103dd2c86bc859098dc0a77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7169565c20f4626b4103dd2c86bc859098dc0a77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7169565c20f4626b4103dd2c86bc859098dc0a77"}], "stats": {"total": 133, "additions": 117, "deletions": 16}, "files": [{"sha": "5753b51c993a099bf51ec528a20fd60134106456", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e07e3ba4c33914eba4322275d45492862b451c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e07e3ba4c33914eba4322275d45492862b451c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e07e3ba4c33914eba4322275d45492862b451c7", "patch": "@@ -1,3 +1,8 @@\n+Tue Jan 20 09:02:31 1998  Gavin Koch  (gavin@cygnus.com)\n+\n+\t* mips/mips.md (divsi3,divdi3,modsi3,moddi3,udivsi3,udivdi3,\n+\tumodsi3,umoddi3): Handle mips16 div/mod by a constant.\n+\n Mon Jan 19 21:57:00 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* i386.md (push): Prohibit symbolic constants if flag_pic."}, {"sha": "3d0695bb5e6ca3eb7a3c0e6aa54cfca07f00772e", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 112, "deletions": 16, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e07e3ba4c33914eba4322275d45492862b451c7/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e07e3ba4c33914eba4322275d45492862b451c7/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=7e07e3ba4c33914eba4322275d45492862b451c7", "patch": "@@ -2253,109 +2253,205 @@\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"8\")])\t\t;; various tests for dividing by 0 and such\n \n-(define_insn \"divsi3\"\n+(define_expand \"divsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(div:SI (match_operand:SI 1 \"register_operand\" \"d\")\n \t\t(match_operand:SI 2 \"nonmemory_operand\" \"di\")))\n    (clobber (match_scratch:SI 3 \"=l\"))\n    (clobber (match_scratch:SI 4 \"=h\"))\n    (clobber (match_scratch:SI 6 \"=a\"))]\n   \"!optimize\"\n+  \"\n+{\n+  /* MIPS16 needs div/rem ops in registers. */\n+  if (TARGET_MIPS16)\n+    operands[2] = force_reg (SImode, operands[2]);\n+}\")\n+\n+(define_insn \"divsi3_internal\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+\t(div:SI (match_operand:SI 1 \"register_operand\" \"d\")\n+\t\t(match_operand:SI 2 \"nonmemory_operand\" \"di\")))]\n+  \"!optimize\"\n   \"div\\\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"idiv\")\n    (set_attr \"mode\"\t\"SI\")\n-   (set_attr \"length\"\t\"13\")])\t\t;; various tests for dividing by 0 and such\n+   (set_attr \"length\"\t\"13\")])\t;; various tests for dividing by 0 and such\n \n-(define_insn \"divdi3\"\n+(define_expand \"divdi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n \t(div:DI (match_operand:DI 1 \"se_register_operand\" \"d\")\n \t\t(match_operand:DI 2 \"se_nonmemory_operand\" \"di\")))\n    (clobber (match_scratch:DI 3 \"=l\"))\n    (clobber (match_scratch:DI 4 \"=h\"))\n    (clobber (match_scratch:DI 6 \"=a\"))]\n   \"TARGET_64BIT && !optimize\"\n+  \"\n+{\n+  /* MIPS16 needs div/rem ops in registers. */\n+  if (TARGET_MIPS16)\n+    operands[2] = force_reg (DImode, operands[2]);\n+}\")\n+\n+(define_insn \"divdi3_internal\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n+\t(div:DI (match_operand:DI 1 \"se_register_operand\" \"d\")\n+\t\t(match_operand:DI 2 \"se_nonmemory_operand\" \"di\")))]\n+  \"TARGET_64BIT && !optimize\"\n   \"ddiv\\\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"idiv\")\n    (set_attr \"mode\"\t\"DI\")\n-   (set_attr \"length\"\t\"14\")])\t\t;; various tests for dividing by 0 and such\n+   (set_attr \"length\"\t\"14\")])\t;; various tests for dividing by 0 and such\n \n-(define_insn \"modsi3\"\n+(define_expand \"modsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(mod:SI (match_operand:SI 1 \"register_operand\" \"d\")\n \t\t(match_operand:SI 2 \"nonmemory_operand\" \"di\")))\n    (clobber (match_scratch:SI 3 \"=l\"))\n    (clobber (match_scratch:SI 4 \"=h\"))\n    (clobber (match_scratch:SI 6 \"=a\"))]\n   \"!optimize\"\n+  \"\n+{\n+  /* MIPS16 needs div/rem ops in registers. */\n+  if (TARGET_MIPS16)\n+    operands[2] = force_reg (SImode, operands[2]);\n+}\")\n+\n+(define_insn \"modsi3_internal\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+\t(mod:SI (match_operand:SI 1 \"register_operand\" \"d\")\n+\t\t(match_operand:SI 2 \"nonmemory_operand\" \"di\")))]\n+  \"!optimize\"\n   \"rem\\\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"idiv\")\n    (set_attr \"mode\"\t\"SI\")\n-   (set_attr \"length\"\t\"13\")])\t\t;; various tests for dividing by 0 and such\n+   (set_attr \"length\"\t\"13\")])\t;; various tests for dividing by 0 and such\n \n-(define_insn \"moddi3\"\n+(define_expand \"moddi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n \t(mod:DI (match_operand:DI 1 \"se_register_operand\" \"d\")\n \t\t(match_operand:DI 2 \"se_nonmemory_operand\" \"di\")))\n    (clobber (match_scratch:DI 3 \"=l\"))\n    (clobber (match_scratch:DI 4 \"=h\"))\n    (clobber (match_scratch:DI 6 \"=a\"))]\n   \"TARGET_64BIT && !optimize\"\n+  \"\n+{\n+  /* MIPS16 needs div/rem ops in registers. */\n+  if (TARGET_MIPS16)\n+    operands[2] = force_reg (DImode, operands[2]);\n+}\")\n+\n+(define_insn \"moddi3_internal\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n+\t(mod:DI (match_operand:DI 1 \"se_register_operand\" \"d\")\n+\t\t(match_operand:DI 2 \"se_nonmemory_operand\" \"di\")))]\n+  \"TARGET_64BIT && !optimize\"\n   \"drem\\\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"idiv\")\n    (set_attr \"mode\"\t\"DI\")\n-   (set_attr \"length\"\t\"14\")])\t\t;; various tests for dividing by 0 and such\n+   (set_attr \"length\"\t\"14\")])\t;; various tests for dividing by 0 and such\n \n-(define_insn \"udivsi3\"\n+(define_expand \"udivsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(udiv:SI (match_operand:SI 1 \"register_operand\" \"d\")\n \t\t (match_operand:SI 2 \"nonmemory_operand\" \"di\")))\n    (clobber (match_scratch:SI 3 \"=l\"))\n    (clobber (match_scratch:SI 4 \"=h\"))\n    (clobber (match_scratch:SI 6 \"=a\"))]\n   \"!optimize\"\n+  \"\n+{\n+  /* MIPS16 needs div/rem ops in registers. */\n+  if (TARGET_MIPS16)\n+    operands[2] = force_reg (SImode, operands[2]);\n+}\")\n+\n+(define_insn \"udivsi3_internal\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+\t(udiv:SI (match_operand:SI 1 \"register_operand\" \"d\")\n+\t\t (match_operand:SI 2 \"nonmemory_operand\" \"di\")))]\n+  \"!optimize\"\n   \"divu\\\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"idiv\")\n    (set_attr \"mode\"\t\"SI\")\n-   (set_attr \"length\"\t\"7\")])\t\t;; various tests for dividing by 0 and such\n+   (set_attr \"length\"\t\"7\")])\t;; various tests for dividing by 0 and such\n \n-(define_insn \"udivdi3\"\n+(define_expand \"udivdi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n \t(udiv:DI (match_operand:DI 1 \"se_register_operand\" \"d\")\n \t\t (match_operand:DI 2 \"se_nonmemory_operand\" \"di\")))\n    (clobber (match_scratch:DI 3 \"=l\"))\n    (clobber (match_scratch:DI 4 \"=h\"))\n    (clobber (match_scratch:DI 6 \"=a\"))]\n   \"TARGET_64BIT && !optimize\"\n+  \"\n+{\n+  /* MIPS16 needs div/rem ops in registers. */\n+  if (TARGET_MIPS16)\n+    operands[2] = force_reg (DImode, operands[2]);\n+}\")\n+\n+(define_insn \"udivdi3_internal\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n+\t(udiv:DI (match_operand:DI 1 \"se_register_operand\" \"d\")\n+\t\t (match_operand:DI 2 \"se_nonmemory_operand\" \"di\")))]\n+  \"TARGET_64BIT && !optimize\"\n   \"ddivu\\\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"idiv\")\n    (set_attr \"mode\"\t\"DI\")\n-   (set_attr \"length\"\t\"7\")])\t\t;; various tests for dividing by 0 and such\n+   (set_attr \"length\"\t\"7\")])\t;; various tests for dividing by 0 and such\n \n-(define_insn \"umodsi3\"\n+(define_expand \"umodsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(umod:SI (match_operand:SI 1 \"register_operand\" \"d\")\n \t\t (match_operand:SI 2 \"nonmemory_operand\" \"di\")))\n    (clobber (match_scratch:SI 3 \"=l\"))\n    (clobber (match_scratch:SI 4 \"=h\"))\n    (clobber (match_scratch:SI 6 \"=a\"))]\n   \"!optimize\"\n+  \"\n+{\n+  /* MIPS16 needs div/rem ops in registers. */\n+  if (TARGET_MIPS16)\n+    operands[2] = force_reg (SImode, operands[2]);\n+}\")\n+\n+(define_insn \"umodsi3_internal\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+\t(umod:SI (match_operand:SI 1 \"register_operand\" \"d\")\n+\t\t (match_operand:SI 2 \"nonmemory_operand\" \"di\")))]\n+  \"!optimize\"\n   \"remu\\\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"idiv\")\n    (set_attr \"mode\"\t\"SI\")\n-   (set_attr \"length\"\t\"7\")])\t\t;; various tests for dividing by 0 and such\n+   (set_attr \"length\"\t\"7\")])\t;; various tests for dividing by 0 and such\n \n-(define_insn \"umoddi3\"\n+(define_expand \"umoddi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n \t(umod:DI (match_operand:DI 1 \"se_register_operand\" \"d\")\n \t\t (match_operand:DI 2 \"se_nonmemory_operand\" \"di\")))\n    (clobber (match_scratch:DI 3 \"=l\"))\n    (clobber (match_scratch:DI 4 \"=h\"))\n    (clobber (match_scratch:DI 6 \"=a\"))]\n   \"TARGET_64BIT && !optimize\"\n+  \"\n+{\n+  /* MIPS16 needs div/rem ops in registers. */\n+  if (TARGET_MIPS16)\n+    operands[2] = force_reg (DImode, operands[2]);\n+}\")\n+\n+(define_insn \"umoddi3_internal\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n+\t(umod:DI (match_operand:DI 1 \"se_register_operand\" \"d\")\n+\t\t (match_operand:DI 2 \"se_nonmemory_operand\" \"di\")))]\n+  \"TARGET_64BIT && !optimize\"\n   \"dremu\\\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"idiv\")\n    (set_attr \"mode\"\t\"DI\")\n-   (set_attr \"length\"\t\"7\")])\t\t;; various tests for dividing by 0 and such\n+   (set_attr \"length\"\t\"7\")])\t;; various tests for dividing by 0 and such\n \n \f\n ;;"}]}