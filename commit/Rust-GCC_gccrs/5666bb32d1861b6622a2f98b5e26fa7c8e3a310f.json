{"sha": "5666bb32d1861b6622a2f98b5e26fa7c8e3a310f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY2NmJiMzJkMTg2MWI2NjIyYTJmOThiNWUyNmZhN2M4ZTNhMzEwZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-12-22T23:16:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-12-22T23:16:38Z"}, "message": "re PR c++/42331 (ICE with invalid array initializer)\n\n\tPR c++/42331\n\t* typeck.c (cp_build_modify_expr): Fix thinko.\n\nFrom-SVN: r155410", "tree": {"sha": "afb8874005dbd420c06d698d50141343ba8de761", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afb8874005dbd420c06d698d50141343ba8de761"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5666bb32d1861b6622a2f98b5e26fa7c8e3a310f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5666bb32d1861b6622a2f98b5e26fa7c8e3a310f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5666bb32d1861b6622a2f98b5e26fa7c8e3a310f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5666bb32d1861b6622a2f98b5e26fa7c8e3a310f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e19977d3790a900d90b30fb2bf0bab3ff8a57d9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e19977d3790a900d90b30fb2bf0bab3ff8a57d9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e19977d3790a900d90b30fb2bf0bab3ff8a57d9a"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "b75e38ac22d6560f0cc67d41944accde9849ae40", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5666bb32d1861b6622a2f98b5e26fa7c8e3a310f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5666bb32d1861b6622a2f98b5e26fa7c8e3a310f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5666bb32d1861b6622a2f98b5e26fa7c8e3a310f", "patch": "@@ -1,3 +1,8 @@\n+2009-12-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/42331\n+\t* typeck.c (cp_build_modify_expr): Fix thinko.\n+\n 2009-12-21  Jason Merrill  <jason@redhat.com>\n \n \t* mangle.c (write_member_name): Move abi-version=1 code back to..."}, {"sha": "f17d9c52519e2f23ad4150749f86f60e7331d71b", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5666bb32d1861b6622a2f98b5e26fa7c8e3a310f/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5666bb32d1861b6622a2f98b5e26fa7c8e3a310f/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=5666bb32d1861b6622a2f98b5e26fa7c8e3a310f", "patch": "@@ -6455,15 +6455,15 @@ cp_build_modify_expr (tree lhs, enum tree_code modifycode, tree rhs,\n     {\n       int from_array;\n \n-      if (BRACE_ENCLOSED_INITIALIZER_P (rhs))\n+      if (BRACE_ENCLOSED_INITIALIZER_P (newrhs))\n \t{\n-\t  if (check_array_initializer (lhs, lhstype, rhs))\n+\t  if (check_array_initializer (lhs, lhstype, newrhs))\n \t    return error_mark_node;\n-\t  rhs = digest_init (lhstype, rhs);\n+\t  newrhs = digest_init (lhstype, newrhs);\n \t}\n \n       else if (!same_or_base_type_p (TYPE_MAIN_VARIANT (lhstype),\n-\t\t\t\t     TYPE_MAIN_VARIANT (TREE_TYPE (rhs))))\n+\t\t\t\t     TYPE_MAIN_VARIANT (TREE_TYPE (newrhs))))\n \t{\n \t  if (complain & tf_error)\n \t    error (\"incompatible types in assignment of %qT to %qT\","}, {"sha": "cfd4b5ecf1e77baf4178f64444991af32b776ddb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5666bb32d1861b6622a2f98b5e26fa7c8e3a310f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5666bb32d1861b6622a2f98b5e26fa7c8e3a310f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5666bb32d1861b6622a2f98b5e26fa7c8e3a310f", "patch": "@@ -1,3 +1,8 @@\n+2009-12-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/42331\n+\t* g++.dg/cpp0x/initlist29.C: New.\n+\n 2009-12-22  Iain Sandoe  <iain.sandoe@sandoe-acoustics.co.uk>\n \n \tPR target/41605"}, {"sha": "1568678e0d02e824c651a8f676b0ac941129bb07", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist29.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5666bb32d1861b6622a2f98b5e26fa7c8e3a310f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5666bb32d1861b6622a2f98b5e26fa7c8e3a310f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist29.C?ref=5666bb32d1861b6622a2f98b5e26fa7c8e3a310f", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/42331\n+// { dg-options \"-std=c++0x\" }\n+\n+class Mesh\n+{\n+public:\n+  Mesh(const char*)\n+  { typele={0}; }\t\t// { dg-error \"\" }\n+\n+private:\n+  int typele[7][2];\n+};\n+\n+Mesh m(0);"}]}