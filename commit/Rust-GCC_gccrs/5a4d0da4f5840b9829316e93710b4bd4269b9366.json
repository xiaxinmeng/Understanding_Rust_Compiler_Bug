{"sha": "5a4d0da4f5840b9829316e93710b4bd4269b9366", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE0ZDBkYTRmNTg0MGI5ODI5MzE2ZTkzNzEwYjRiZDQyNjliOTM2Ng==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2019-09-24T11:16:57Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2019-09-24T11:16:57Z"}, "message": "[PR 91832] Do not ICE on negative offsets in ipa-sra\n\nHi,\n\nIPA-SRA asserts that an offset obtained from get_ref_base_and_extent\nis non-negative (after it verifies it is based on a parameter).  That\nassumption is invalid as the testcase shows.  One could probably also write a\ntestcase with defined behavior, but unless I see a reasonable one\nwhere the transformation is really desirable, I'd like to just punt on\nthose cases.\n\nBootstrapped and tested on x86_64-linux.  OK for trunk?\n\nThanks,\n\nMartin\n\n2019-09-24  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/91832\n\t* ipa-sra.c (scan_expr_access): Check that offset is non-negative.\n\n\ttestsuite/\n\t* gcc.dg/ipa/pr91832.c: New test.\n\nFrom-SVN: r276093", "tree": {"sha": "e0e8f506f497d6d20c321c60767cd80e88ff880b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0e8f506f497d6d20c321c60767cd80e88ff880b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a4d0da4f5840b9829316e93710b4bd4269b9366", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a4d0da4f5840b9829316e93710b4bd4269b9366", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a4d0da4f5840b9829316e93710b4bd4269b9366", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a4d0da4f5840b9829316e93710b4bd4269b9366/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f9e08f57e1de90de5bc9d2a00815ea38064c733", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f9e08f57e1de90de5bc9d2a00815ea38064c733", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f9e08f57e1de90de5bc9d2a00815ea38064c733"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "2d7e2805203e79f0d5da07cc378cf3cf9588add7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a4d0da4f5840b9829316e93710b4bd4269b9366/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a4d0da4f5840b9829316e93710b4bd4269b9366/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a4d0da4f5840b9829316e93710b4bd4269b9366", "patch": "@@ -1,3 +1,8 @@\n+2019-09-24  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/91832\n+\t* ipa-sra.c (scan_expr_access): Check that offset is non-negative.\n+\n 2019-09-24  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-sccvn.c (vn_reference_lookup_3): Valueize MEM_REF"}, {"sha": "0ccebbd46072d715dacffe41943609ff067e8113", "filename": "gcc/ipa-sra.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a4d0da4f5840b9829316e93710b4bd4269b9366/gcc%2Fipa-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a4d0da4f5840b9829316e93710b4bd4269b9366/gcc%2Fipa-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-sra.c?ref=5a4d0da4f5840b9829316e93710b4bd4269b9366", "patch": "@@ -1692,7 +1692,12 @@ scan_expr_access (tree expr, gimple *stmt, isra_scan_context ctx,\n       disqualify_split_candidate (desc, \"Encountered a bit-field access.\");\n       return;\n     }\n-  gcc_assert (offset >= 0);\n+  if (offset < 0)\n+    {\n+      disqualify_split_candidate (desc, \"Encountered an access at a \"\n+\t\t\t\t  \"negative offset.\");\n+      return;\n+    }\n   gcc_assert ((offset % BITS_PER_UNIT) == 0);\n   gcc_assert ((size % BITS_PER_UNIT) == 0);\n   if ((offset / BITS_PER_UNIT) >= (UINT_MAX - ISRA_ARG_SIZE_LIMIT)"}, {"sha": "83acf8eab66bc79a66b69c878968dc8047754eeb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a4d0da4f5840b9829316e93710b4bd4269b9366/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a4d0da4f5840b9829316e93710b4bd4269b9366/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5a4d0da4f5840b9829316e93710b4bd4269b9366", "patch": "@@ -1,3 +1,8 @@\n+2019-09-24  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/91832\n+\t* gcc.dg/ipa/pr91832.c: New test.\n+\n 2019-09-24  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.dg/torture/20190924-1.c: New testcase."}, {"sha": "4a0d62ec1d9cb7b82505079d4c84b6867bd6ef38", "filename": "gcc/testsuite/gcc.dg/ipa/pr91832.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a4d0da4f5840b9829316e93710b4bd4269b9366/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr91832.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a4d0da4f5840b9829316e93710b4bd4269b9366/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr91832.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr91832.c?ref=5a4d0da4f5840b9829316e93710b4bd4269b9366", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\"  } */\n+\n+struct A1 {\n+  char a1[1];\n+};\n+\n+void fn2(char a);\n+\n+void fn1(struct A1 *p1) {\n+  fn2(p1->a1[-1]);\n+}"}]}