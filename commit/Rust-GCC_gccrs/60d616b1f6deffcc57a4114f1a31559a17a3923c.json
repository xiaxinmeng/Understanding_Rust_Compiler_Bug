{"sha": "60d616b1f6deffcc57a4114f1a31559a17a3923c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBkNjE2YjFmNmRlZmZjYzU3YTQxMTRmMWEzMTU1OWExN2EzOTIzYw==", "commit": {"author": {"name": "Mihail Ionescu", "email": "mihail.ionescu@arm.com", "date": "2020-01-17T17:56:41Z"}, "committer": {"name": "Mihail Ionescu", "email": "mihail.ionescu@arm.com", "date": "2020-01-17T18:50:38Z"}, "message": "[GCC/ARM, 1/2] Add support for ASRL(reg) and LSLL(reg) instructions for Armv8.1-M Mainline\n\nThis patch is adding the following instructions:\n\nASRL (reg)\nLSLL (reg)\n\n*** gcc/ChangeLog ***\n\n2020-01-17  Mihail-Calin Ionescu <mihail.ionescu@arm.com>\n\t    Sudakshina Das  <sudi.das@arm.com>\n\n\t* config/arm/arm.md (ashldi3): Generate thumb2_lsll for TARGET_HAVE_MVE.\n\t(ashrdi3): Generate thumb2_asrl for TARGET_HAVE_MVE.\n\t* config/arm/arm.c (arm_hard_regno_mode_ok): Allocate even odd\n\tregister pairs for doubleword quantities for ARMv8.1M-Mainline.\n\t* config/arm/thumb2.md (thumb2_asrl): New.\n\t(thumb2_lsll): Likewise.\n\n2020-01-17  Mihail-Calin Ionescu <mihail.ionescu@arm.com>\n\t    Sudakshina Das  <sudi.das@arm.com>\n\n\t* gcc.target/arm/armv8_1m-shift-reg_1.c: New test.", "tree": {"sha": "2249d70f1506a4236544f25cb590578bfb3fceec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2249d70f1506a4236544f25cb590578bfb3fceec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60d616b1f6deffcc57a4114f1a31559a17a3923c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60d616b1f6deffcc57a4114f1a31559a17a3923c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60d616b1f6deffcc57a4114f1a31559a17a3923c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60d616b1f6deffcc57a4114f1a31559a17a3923c/comments", "author": null, "committer": null, "parents": [{"sha": "674dcc3f738c4be2bc7d51d72d98fb1c0d2ebea2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/674dcc3f738c4be2bc7d51d72d98fb1c0d2ebea2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/674dcc3f738c4be2bc7d51d72d98fb1c0d2ebea2"}], "stats": {"total": 85, "additions": 82, "deletions": 3}, "files": [{"sha": "2dadf5891e7d8ec1944477a103de7d7158bd4dbe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60d616b1f6deffcc57a4114f1a31559a17a3923c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60d616b1f6deffcc57a4114f1a31559a17a3923c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60d616b1f6deffcc57a4114f1a31559a17a3923c", "patch": "@@ -1,3 +1,13 @@\n+2020-01-17  Mihail-Calin Ionescu  <mihail.ionescu@arm.com>\n+\t    Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* config/arm/arm.md (ashldi3): Generate thumb2_lsll for TARGET_HAVE_MVE.\n+\t(ashrdi3): Generate thumb2_asrl for TARGET_HAVE_MVE.\n+\t* config/arm/arm.c (arm_hard_regno_mode_ok): Allocate even odd\n+\tregister pairs for doubleword quantities for ARMv8.1M-Mainline.\n+\t* config/arm/thumb2.md (thumb2_asrl): New.\n+\t(thumb2_lsll): Likewise.\n+\n 2020-01-17  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/arm/arm.c (cmse_nonsecure_call_inline_register_clear): Remove"}, {"sha": "6ead410d1a8b307a646fda57b37b884fae7d0ab0", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60d616b1f6deffcc57a4114f1a31559a17a3923c/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60d616b1f6deffcc57a4114f1a31559a17a3923c/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=60d616b1f6deffcc57a4114f1a31559a17a3923c", "patch": "@@ -24906,14 +24906,16 @@ arm_hard_regno_mode_ok (unsigned int regno, machine_mode mode)\n \n   /* We allow almost any value to be stored in the general registers.\n      Restrict doubleword quantities to even register pairs in ARM state\n-     so that we can use ldrd.  Do not allow very large Neon structure\n-     opaque modes in general registers; they would use too many.  */\n+     so that we can use ldrd. The same restriction applies for MVE\n+     in order to support Armv8.1-M Mainline instructions.\n+     Do not allow very large Neon structure  opaque modes in general\n+     registers; they would use too many.  */\n   if (regno <= LAST_ARM_REGNUM)\n     {\n       if (ARM_NUM_REGS (mode) > 4)\n \treturn false;\n \n-      if (TARGET_THUMB2)\n+      if (TARGET_THUMB2 && !TARGET_HAVE_MVE)\n \treturn true;\n \n       return !(TARGET_LDRD && GET_MODE_SIZE (mode) > 4 && (regno & 1) != 0);"}, {"sha": "315b04c4434c0a0d7dd572e432c213bc005782a3", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60d616b1f6deffcc57a4114f1a31559a17a3923c/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60d616b1f6deffcc57a4114f1a31559a17a3923c/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=60d616b1f6deffcc57a4114f1a31559a17a3923c", "patch": "@@ -4399,6 +4399,22 @@\n                    (match_operand:SI 2 \"reg_or_int_operand\")))]\n   \"TARGET_32BIT\"\n   \"\n+  if (TARGET_HAVE_MVE)\n+    {\n+      if (!reg_or_int_operand (operands[2], SImode))\n+        operands[2] = force_reg (SImode, operands[2]);\n+\n+      /* Armv8.1-M Mainline double shifts are not expanded.  */\n+      if (REG_P (operands[2]))\n+\t{\n+\t  if (!reg_overlap_mentioned_p(operands[0], operands[1]))\n+\t    emit_insn (gen_movdi (operands[0], operands[1]));\n+\n+\t  emit_insn (gen_thumb2_lsll (operands[0], operands[2]));\n+\t  DONE;\n+\t}\n+    }\n+\n   arm_emit_coreregs_64bit_shift (ASHIFT, operands[0], operands[1],\n \t\t\t\t operands[2], gen_reg_rtx (SImode),\n \t\t\t\t gen_reg_rtx (SImode));\n@@ -4426,6 +4442,16 @@\n                      (match_operand:SI 2 \"reg_or_int_operand\")))]\n   \"TARGET_32BIT\"\n   \"\n+  /* Armv8.1-M Mainline double shifts are not expanded.  */\n+  if (TARGET_HAVE_MVE && REG_P (operands[2]))\n+    {\n+      if (!reg_overlap_mentioned_p(operands[0], operands[1]))\n+\temit_insn (gen_movdi (operands[0], operands[1]));\n+\n+      emit_insn (gen_thumb2_asrl (operands[0], operands[2]));\n+      DONE;\n+    }\n+\n   arm_emit_coreregs_64bit_shift (ASHIFTRT, operands[0], operands[1],\n \t\t\t\t operands[2], gen_reg_rtx (SImode),\n \t\t\t\t gen_reg_rtx (SImode));"}, {"sha": "a5986de4859a4241dbdcf1606bb16d56d9b0c58e", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60d616b1f6deffcc57a4114f1a31559a17a3923c/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60d616b1f6deffcc57a4114f1a31559a17a3923c/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=60d616b1f6deffcc57a4114f1a31559a17a3923c", "patch": "@@ -1626,3 +1626,19 @@\n   }\n   [(set_attr \"predicable\" \"yes\")]\n )\n+\n+(define_insn \"thumb2_asrl\"\n+  [(set (match_operand:DI 0 \"arm_general_register_operand\" \"+r\")\n+\t(ashiftrt:DI (match_dup 0)\n+\t\t     (match_operand:SI 1 \"arm_general_register_operand\" \"r\")))]\n+  \"TARGET_HAVE_MVE\"\n+  \"asrl%?\\\\t%Q0, %R0, %1\"\n+  [(set_attr \"predicable\" \"yes\")])\n+\n+(define_insn \"thumb2_lsll\"\n+  [(set (match_operand:DI 0 \"arm_general_register_operand\" \"+r\")\n+\t(ashift:DI (match_dup 0)\n+\t\t   (match_operand:SI 1 \"arm_general_register_operand\" \"r\")))]\n+  \"TARGET_HAVE_MVE\"\n+  \"lsll%?\\\\t%Q0, %R0, %1\"\n+  [(set_attr \"predicable\" \"yes\")])"}, {"sha": "9de42e4de428cb0a701c7a780631534da4e6b2f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60d616b1f6deffcc57a4114f1a31559a17a3923c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60d616b1f6deffcc57a4114f1a31559a17a3923c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=60d616b1f6deffcc57a4114f1a31559a17a3923c", "patch": "@@ -1,3 +1,8 @@\n+2020-01-17  Mihail-Calin Ionescu <mihail.ionescu@arm.com>\n+\t    Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* gcc.target/arm/armv8_1m-shift-reg_1.c: New test.\n+\n 2020-01-17  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR testsuite/93227"}, {"sha": "a97e9d687ef66e9642dd1d735125c8ee941fb151", "filename": "gcc/testsuite/gcc.target/arm/armv8_1m-shift-reg-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60d616b1f6deffcc57a4114f1a31559a17a3923c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv8_1m-shift-reg-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60d616b1f6deffcc57a4114f1a31559a17a3923c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv8_1m-shift-reg-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv8_1m-shift-reg-1.c?ref=60d616b1f6deffcc57a4114f1a31559a17a3923c", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=armv8.1-m.main+mve -mfloat-abi=softfp\" } */\n+\n+long long longval2;\n+int intval2;\n+\n+long long int\n+asrl_reg ()\n+{\n+ return (longval2 >> intval2);\n+}\n+\n+long long unsigned int\n+lsll_reg (long long unsigned longval1, int intval1)\n+{\n+  return (longval1 << intval1);\n+}\n+\n+/* { dg-final { scan-assembler \"asrl\\\\tr\\[0-9\\], r\\[0-9\\], r\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"lsll\\\\tr\\[0-9\\], r\\[0-9\\], r\\[0-9\\]\" } } */"}]}