{"sha": "3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "node_id": "C_kwDOANBUbNoAKDNhY2I5MjljYzBiZWI3OWU2ZjQwMDVlYjIyZWU4OGI0NWUxY2JjMWQ", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-15T11:08:06Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-17T12:13:02Z"}, "message": "libstdc++: Define <stacktrace> header for C++23\n\nAdd the <stacktrace> header and a new libstdc++_libbacktrace.a library\nthat provides the implementation. For now, the new library is only built\nif --enable-libstdcxx-backtrace=yes is used. As with the Filesystem TS,\nthe new library is only provided as a static archive.\n\nlibstdc++-v3/ChangeLog:\n\n\t* acinclude.m4 (GLIBCXX_ENABLE_BACKTRACE): New macro.\n\t* configure.ac: Use GLIBCXX_ENABLE_BACKTRACE.\n\t* include/Makefile.am: Add new header.\n\t* include/Makefile.in: Regenerate.\n\t* include/std/stacktrace: New header.\n\t* include/std/version (__cpp_lib_stacktrace): Define.\n\t* Makefile.in: Regenerate.\n\t* config.h.in: Regenerate.\n\t* configure: Regenerate.\n\t* doc/Makefile.in: Regenerate.\n\t* libsupc++/Makefile.in: Regenerate.\n\t* po/Makefile.in: Regenerate.\n\t* python/Makefile.in: Regenerate.\n\t* src/Makefile.am: Regenerate.\n\t* src/Makefile.in: Regenerate.\n\t* src/c++11/Makefile.in: Regenerate.\n\t* src/c++17/Makefile.in: Regenerate.\n\t* src/c++20/Makefile.in: Regenerate.\n\t* src/c++98/Makefile.in: Regenerate.\n\t* src/filesystem/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\t* src/libbacktrace/Makefile.am: New file.\n\t* src/libbacktrace/Makefile.in: New file.\n\t* src/libbacktrace/backtrace-rename.h: New file.\n\t* src/libbacktrace/backtrace-supported.h.in: New file.\n\t* src/libbacktrace/config.h.in: New file.\n\t* testsuite/lib/libstdc++.exp (check_effective_target_stacktrace):\n\tNew proc.\n\t* testsuite/20_util/stacktrace/entry.cc: New test.\n\t* testsuite/20_util/stacktrace/synopsis.cc: New test.\n\t* testsuite/20_util/stacktrace/version.cc: New test.", "tree": {"sha": "fe8949d8821cec4574e6807e2548e685e1de4241", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe8949d8821cec4574e6807e2548e685e1de4241"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a3dc58a1d7a792e776a59389e8901b614ce6d0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a3dc58a1d7a792e776a59389e8901b614ce6d0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a3dc58a1d7a792e776a59389e8901b614ce6d0d"}], "stats": {"total": 2619, "additions": 2605, "deletions": 14}, "files": [{"sha": "58a0acdcc1b985e1471da3737cc41fe0e4d795cc", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -185,6 +185,7 @@ ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n ACLOCAL = @ACLOCAL@\n ALLOCATOR_H = @ALLOCATOR_H@\n ALLOCATOR_NAME = @ALLOCATOR_NAME@\n+ALLOC_FILE = @ALLOC_FILE@\n AMTAR = @AMTAR@\n AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n AR = @AR@\n@@ -196,6 +197,10 @@ AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n AUTOMAKE = @AUTOMAKE@\n AWK = @AWK@\n+BACKTRACE_CPPFLAGS = @BACKTRACE_CPPFLAGS@\n+BACKTRACE_SUPPORTED = @BACKTRACE_SUPPORTED@\n+BACKTRACE_SUPPORTS_THREADS = @BACKTRACE_SUPPORTS_THREADS@\n+BACKTRACE_USES_MALLOC = @BACKTRACE_USES_MALLOC@\n BASIC_FILE_CC = @BASIC_FILE_CC@\n BASIC_FILE_H = @BASIC_FILE_H@\n CC = @CC@\n@@ -240,6 +245,7 @@ EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n FGREP = @FGREP@\n+FORMAT_FILE = @FORMAT_FILE@\n FREESTANDING_FLAGS = @FREESTANDING_FLAGS@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n@@ -295,6 +301,7 @@ SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n+VIEW_FILE = @VIEW_FILE@\n VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@"}, {"sha": "336c690f07b908f45de0304a344171e5d842741a", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 137, "deletions": 1, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -49,7 +49,7 @@ AC_DEFUN([GLIBCXX_CONFIGURE], [\n   # Keep these sync'd with the list in Makefile.am.  The first provides an\n   # expandable list at autoconf time; the second provides an expandable list\n   # (i.e., shell variable) at configure time.\n-  m4_define([glibcxx_SUBDIRS],[include libsupc++ src src/c++98 src/c++11 src/c++17 src/c++20 src/filesystem doc po testsuite python])\n+  m4_define([glibcxx_SUBDIRS],[include libsupc++ src src/c++98 src/c++11 src/c++17 src/c++20 src/filesystem src/libbacktrace doc po testsuite python])\n   SUBDIRS='glibcxx_SUBDIRS'\n \n   # These need to be absolute paths, yet at the same time need to\n@@ -4801,6 +4801,142 @@ AC_DEFUN([GLIBCXX_CHECK_ARC4RANDOM], [\n   AC_LANG_RESTORE\n ])\n \n+dnl\n+dnl Check to see whether to build libstdc++_libbacktrace.a\n+dnl\n+dnl --enable-libstdcxx-backtrace\n+dnl\n+AC_DEFUN([GLIBCXX_ENABLE_BACKTRACE], [\n+  GLIBCXX_ENABLE(libstdcxx-backtrace,auto,,\n+    [turns on libbacktrace support],\n+    [permit yes|no|auto])\n+\n+  # Most of this is adapted from libsanitizer/configure.ac\n+\n+  BACKTRACE_CPPFLAGS=\n+\n+  # libbacktrace only needs atomics for int, which we've already tested\n+  if test \"$glibcxx_cv_atomic_int\" = \"yes\"; then\n+    BACKTRACE_CPPFLAGS=\"$BACKTRACE_CPPFLAGS -DHAVE_ATOMIC_FUNCTIONS=1\"\n+  fi\n+\n+  # Test for __sync support.\n+  AC_CACHE_CHECK([__sync extensions],\n+  [glibcxx_cv_sys_sync],\n+  [GCC_TRY_COMPILE_OR_LINK(\n+     [int i;],\n+     [__sync_bool_compare_and_swap (&i, i, i);\n+     __sync_lock_test_and_set (&i, 1);\n+     __sync_lock_release (&i);],\n+     [glibcxx_cv_sys_sync=yes],\n+     [glibcxx_cv_sys_sync=no])\n+  ])\n+  if test \"$glibcxx_cv_sys_sync\" = \"yes\"; then\n+    BACKTRACE_CPPFLAGS=\"$BACKTRACE_CPPFLAGS -DHAVE_SYNC_FUNCTIONS=1\"\n+  fi\n+\n+  # Check for dl_iterate_phdr.\n+  AC_CHECK_HEADERS(link.h)\n+  if test \"$ac_cv_header_link_h\" = \"no\"; then\n+    have_dl_iterate_phdr=no\n+  else\n+    # When built as a GCC target library, we can't do a link test.\n+    AC_EGREP_HEADER([dl_iterate_phdr], [link.h], [have_dl_iterate_phdr=yes],\n+\t\t    [have_dl_iterate_phdr=no])\n+  fi\n+  if test \"$have_dl_iterate_phdr\" = \"yes\"; then\n+    BACKTRACE_CPPFLAGS=\"$BACKTRACE_CPPFLAGS -DHAVE_DL_ITERATE_PHDR=1\"\n+  fi\n+\n+  # Check for the fcntl function.\n+  if test -n \"${with_target_subdir}\"; then\n+     case \"${host}\" in\n+     *-*-mingw*) have_fcntl=no ;;\n+     *) have_fcntl=yes ;;\n+     esac\n+  else\n+    AC_CHECK_FUNC(fcntl, [have_fcntl=yes], [have_fcntl=no])\n+  fi\n+  if test \"$have_fcntl\" = \"yes\"; then\n+    BACKTRACE_CPPFLAGS=\"$BACKTRACE_CPPFLAGS -DHAVE_FCNTL=1\"\n+  fi\n+\n+  AC_CHECK_DECLS(strnlen)\n+\n+  # Check for getexecname function.\n+  if test -n \"${with_target_subdir}\"; then\n+     case \"${host}\" in\n+     *-*-solaris2*) have_getexecname=yes ;;\n+     *) have_getexecname=no ;;\n+     esac\n+  else\n+    AC_CHECK_FUNC(getexecname, [have_getexecname=yes], [have_getexecname=no])\n+  fi\n+  if test \"$have_getexecname\" = \"yes\"; then\n+    BACKTRACE_CPPFLAGS=\"$BACKTRACE_CPPFLAGS -DHAVE_GETEXECNAME=1\"\n+  fi\n+\n+# The library needs to be able to read the executable itself.  Compile\n+# a file to determine the executable format.  The awk script\n+# filetype.awk prints out the file type.\n+AC_CACHE_CHECK([output filetype],\n+[glibcxx_cv_sys_filetype],\n+[filetype=\n+AC_COMPILE_IFELSE(\n+  [AC_LANG_PROGRAM([int i;], [int j;])],\n+  [filetype=`${AWK} -f $srcdir/../libbacktrace/filetype.awk conftest.$ac_objext`],\n+  [AC_MSG_FAILURE([compiler failed])])\n+glibcxx_cv_sys_filetype=$filetype])\n+\n+# Match the file type to decide what files to compile.\n+FORMAT_FILE=\n+case \"$glibcxx_cv_sys_filetype\" in\n+elf*) FORMAT_FILE=\"elf.lo\" ;;\n+*) AC_MSG_WARN([could not determine output file type])\n+   FORMAT_FILE=\"unknown.lo\"\n+   enable_libstdcxx_backtrace=no\n+   ;;\n+esac\n+AC_SUBST(FORMAT_FILE)\n+\n+# ELF defines.\n+elfsize=\n+case \"$glibcxx_cv_sys_filetype\" in\n+elf32) elfsize=32 ;;\n+elf64) elfsize=64 ;;\n+esac\n+BACKTRACE_CPPFLAGS=\"$BACKTRACE_CPPFLAGS -DBACKTRACE_ELF_SIZE=$elfsize\"\n+\n+  ALLOC_FILE=alloc.lo\n+  AC_SUBST(ALLOC_FILE)\n+  VIEW_FILE=read.lo\n+  AC_SUBST(VIEW_FILE)\n+\n+  AC_MSG_CHECKING([whether to build libbacktrace support])\n+  if test \"$enable_libstdcxx_backtrace\" == \"auto\"; then\n+    enable_libstdcxx_backtrace=no\n+  fi\n+  if test \"$enable_libstdcxx_backtrace\" == \"yes\"; then\n+    BACKTRACE_SUPPORTED=1\n+    BACKTRACE_USES_MALLOC=1\n+    if test \"$ac_has_gthreads\" = \"yes\"; then\n+      BACKTRACE_SUPPORTS_THREADS=1\n+    else\n+      BACKTRACE_SUPPORTS_THREADS=0\n+    fi\n+    AC_SUBST(BACKTRACE_CPPFLAGS)\n+    AC_SUBST(BACKTRACE_SUPPORTED)\n+    AC_SUBST(BACKTRACE_USES_MALLOC)\n+    AC_SUBST(BACKTRACE_SUPPORTS_THREADS)\n+    AC_DEFINE(HAVE_STACKTRACE, 1, [Define if the <stacktrace> header is supported.])\n+  else\n+    BACKTRACE_SUPPORTED=0\n+    BACKTRACE_USES_MALLOC=0\n+    BACKTRACE_SUPPORTS_THREADS=0\n+  fi\n+  AC_MSG_RESULT($enable_libstdcxx_backtrace)\n+  GLIBCXX_CONDITIONAL(ENABLE_BACKTRACE, [test \"$enable_libstdcxx_backtrace\" != no])\n+])\n \n # Macros from the top-level gcc directory.\n m4_include([../config/gc++filt.m4])"}, {"sha": "168961aa11b6845bd7af76682efe9fdc79a3ae06", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -66,6 +66,10 @@\n /* Define to 1 if you have the `cosl' function. */\n #undef HAVE_COSL\n \n+/* Define to 1 if you have the declaration of `strnlen', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_STRNLEN\n+\n /* Define to 1 if you have the <dirent.h> header file. */\n #undef HAVE_DIRENT_H\n \n@@ -213,6 +217,9 @@\n /* Define if link is available in <unistd.h>. */\n #undef HAVE_LINK\n \n+/* Define to 1 if you have the <link.h> header file. */\n+#undef HAVE_LINK_H\n+\n /* Define if futex syscall is available. */\n #undef HAVE_LINUX_FUTEX\n \n@@ -346,6 +353,9 @@\n /* Define to 1 if you have the `sqrtl' function. */\n #undef HAVE_SQRTL\n \n+/* Define if the <stacktrace> header is supported. */\n+#undef HAVE_STACKTRACE\n+\n /* Define to 1 if you have the <stdalign.h> header file. */\n #undef HAVE_STDALIGN_H\n "}, {"sha": "34f6718cfd0f2d6ff32eb567c96c795954e81060", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 307, "deletions": 10, "changes": 317, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -675,6 +675,15 @@ DOT\n DOXYGEN\n BUILD_INFO_FALSE\n BUILD_INFO_TRUE\n+ENABLE_BACKTRACE_FALSE\n+ENABLE_BACKTRACE_TRUE\n+BACKTRACE_SUPPORTS_THREADS\n+BACKTRACE_USES_MALLOC\n+BACKTRACE_SUPPORTED\n+BACKTRACE_CPPFLAGS\n+VIEW_FILE\n+ALLOC_FILE\n+FORMAT_FILE\n ENABLE_FILESYSTEM_TS_FALSE\n ENABLE_FILESYSTEM_TS_TRUE\n baseline_subdir_switch\n@@ -947,6 +956,7 @@ enable_libstdcxx_dual_abi\n with_default_libstdcxx_abi\n enable_libstdcxx_threads\n enable_libstdcxx_filesystem_ts\n+enable_libstdcxx_backtrace\n enable_cet\n with_gxx_include_dir\n enable_version_specific_runtime_libs\n@@ -1653,6 +1663,8 @@ Optional Features:\n                           enable C++11 threads support [default=auto]\n   --enable-libstdcxx-filesystem-ts\n                           turns on ISO/IEC TS 18822 support [default=auto]\n+  --enable-libstdcxx-backtrace\n+                          turns on libbacktrace support [default=auto]\n   --enable-cet            enable Intel CET in target libraries [default=auto]\n   --enable-version-specific-runtime-libs\n                           Specify that runtime libraries should be installed\n@@ -5539,7 +5551,7 @@ $as_echo \"$ac_cv_path_EGREP\" >&6; }\n   # expandable list at autoconf time; the second provides an expandable list\n   # (i.e., shell variable) at configure time.\n \n-  SUBDIRS='include libsupc++ src src/c++98 src/c++11 src/c++17 src/c++20 src/filesystem doc po testsuite python'\n+  SUBDIRS='include libsupc++ src src/c++98 src/c++11 src/c++17 src/c++20 src/filesystem src/libbacktrace doc po testsuite python'\n \n   # These need to be absolute paths, yet at the same time need to\n   # canonicalize only relative paths, because then amd will not unmount\n@@ -12179,7 +12191,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12182 \"configure\"\n+#line 12194 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12285,7 +12297,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12288 \"configure\"\n+#line 12300 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15969,7 +15981,7 @@ $as_echo \"$glibcxx_cv_atomic_long_long\" >&6; }\n   # Fake what AC_TRY_COMPILE does.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15972 \"configure\"\n+#line 15984 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -16004,7 +16016,7 @@ $as_echo \"$glibcxx_cv_atomic_bool\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 16007 \"configure\"\n+#line 16019 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -16039,7 +16051,7 @@ $as_echo \"$glibcxx_cv_atomic_short\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 16042 \"configure\"\n+#line 16054 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -16075,7 +16087,7 @@ $as_echo \"$glibcxx_cv_atomic_int\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 16078 \"configure\"\n+#line 16090 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -16228,7 +16240,7 @@ $as_echo \"mutex\" >&6; }\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 16231 \"configure\"\n+#line 16243 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -16270,7 +16282,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for this test.\n \n   cat > conftest.$ac_ext << EOF\n-#line 16273 \"configure\"\n+#line 16285 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -76951,6 +76963,263 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n+\n+   # Check whether --enable-libstdcxx-backtrace was given.\n+if test \"${enable_libstdcxx_backtrace+set}\" = set; then :\n+  enableval=$enable_libstdcxx_backtrace;\n+      case \"$enableval\" in\n+       yes|no|auto) ;;\n+       *) as_fn_error $? \"Unknown argument to enable/disable libstdcxx-backtrace\" \"$LINENO\" 5 ;;\n+\t  \t        esac\n+\n+else\n+  enable_libstdcxx_backtrace=auto\n+fi\n+\n+\n+\n+  # Most of this is adapted from libsanitizer/configure.ac\n+\n+  BACKTRACE_CPPFLAGS=\n+\n+  # libbacktrace only needs atomics for int, which we've already tested\n+  if test \"$glibcxx_cv_atomic_int\" = \"yes\"; then\n+    BACKTRACE_CPPFLAGS=\"$BACKTRACE_CPPFLAGS -DHAVE_ATOMIC_FUNCTIONS=1\"\n+  fi\n+\n+  # Test for __sync support.\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking __sync extensions\" >&5\n+$as_echo_n \"checking __sync extensions... \" >&6; }\n+if ${glibcxx_cv_sys_sync+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test x$gcc_no_link = xyes; then\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+int i;\n+int\n+main ()\n+{\n+__sync_bool_compare_and_swap (&i, i, i);\n+     __sync_lock_test_and_set (&i, 1);\n+     __sync_lock_release (&i);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_sys_sync=yes\n+else\n+  glibcxx_cv_sys_sync=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+else\n+  if test x$gcc_no_link = xyes; then\n+  as_fn_error $? \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n+fi\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+int i;\n+int\n+main ()\n+{\n+__sync_bool_compare_and_swap (&i, i, i);\n+     __sync_lock_test_and_set (&i, 1);\n+     __sync_lock_release (&i);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  glibcxx_cv_sys_sync=yes\n+else\n+  glibcxx_cv_sys_sync=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_sys_sync\" >&5\n+$as_echo \"$glibcxx_cv_sys_sync\" >&6; }\n+  if test \"$glibcxx_cv_sys_sync\" = \"yes\"; then\n+    BACKTRACE_CPPFLAGS=\"$BACKTRACE_CPPFLAGS -DHAVE_SYNC_FUNCTIONS=1\"\n+  fi\n+\n+  # Check for dl_iterate_phdr.\n+  for ac_header in link.h\n+do :\n+  ac_fn_c_check_header_mongrel \"$LINENO\" \"link.h\" \"ac_cv_header_link_h\" \"$ac_includes_default\"\n+if test \"x$ac_cv_header_link_h\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LINK_H 1\n+_ACEOF\n+\n+fi\n+\n+done\n+\n+  if test \"$ac_cv_header_link_h\" = \"no\"; then\n+    have_dl_iterate_phdr=no\n+  else\n+    # When built as a GCC target library, we can't do a link test.\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <link.h>\n+\n+_ACEOF\n+if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n+  $EGREP \"dl_iterate_phdr\" >/dev/null 2>&1; then :\n+  have_dl_iterate_phdr=yes\n+else\n+  have_dl_iterate_phdr=no\n+fi\n+rm -f conftest*\n+\n+  fi\n+  if test \"$have_dl_iterate_phdr\" = \"yes\"; then\n+    BACKTRACE_CPPFLAGS=\"$BACKTRACE_CPPFLAGS -DHAVE_DL_ITERATE_PHDR=1\"\n+  fi\n+\n+  # Check for the fcntl function.\n+  if test -n \"${with_target_subdir}\"; then\n+     case \"${host}\" in\n+     *-*-mingw*) have_fcntl=no ;;\n+     *) have_fcntl=yes ;;\n+     esac\n+  else\n+    ac_fn_c_check_func \"$LINENO\" \"fcntl\" \"ac_cv_func_fcntl\"\n+if test \"x$ac_cv_func_fcntl\" = xyes; then :\n+  have_fcntl=yes\n+else\n+  have_fcntl=no\n+fi\n+\n+  fi\n+  if test \"$have_fcntl\" = \"yes\"; then\n+    BACKTRACE_CPPFLAGS=\"$BACKTRACE_CPPFLAGS -DHAVE_FCNTL=1\"\n+  fi\n+\n+  ac_fn_c_check_decl \"$LINENO\" \"strnlen\" \"ac_cv_have_decl_strnlen\" \"$ac_includes_default\"\n+if test \"x$ac_cv_have_decl_strnlen\" = xyes; then :\n+  ac_have_decl=1\n+else\n+  ac_have_decl=0\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_STRNLEN $ac_have_decl\n+_ACEOF\n+\n+\n+  # Check for getexecname function.\n+  if test -n \"${with_target_subdir}\"; then\n+     case \"${host}\" in\n+     *-*-solaris2*) have_getexecname=yes ;;\n+     *) have_getexecname=no ;;\n+     esac\n+  else\n+    ac_fn_c_check_func \"$LINENO\" \"getexecname\" \"ac_cv_func_getexecname\"\n+if test \"x$ac_cv_func_getexecname\" = xyes; then :\n+  have_getexecname=yes\n+else\n+  have_getexecname=no\n+fi\n+\n+  fi\n+  if test \"$have_getexecname\" = \"yes\"; then\n+    BACKTRACE_CPPFLAGS=\"$BACKTRACE_CPPFLAGS -DHAVE_GETEXECNAME=1\"\n+  fi\n+\n+# The library needs to be able to read the executable itself.  Compile\n+# a file to determine the executable format.  The awk script\n+# filetype.awk prints out the file type.\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking output filetype\" >&5\n+$as_echo_n \"checking output filetype... \" >&6; }\n+if ${glibcxx_cv_sys_filetype+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  filetype=\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+int i;\n+int\n+main ()\n+{\n+int j;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  filetype=`${AWK} -f $srcdir/../libbacktrace/filetype.awk conftest.$ac_objext`\n+else\n+  { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n+$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n+as_fn_error $? \"compiler failed\n+See \\`config.log' for more details\" \"$LINENO\" 5; }\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+glibcxx_cv_sys_filetype=$filetype\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_sys_filetype\" >&5\n+$as_echo \"$glibcxx_cv_sys_filetype\" >&6; }\n+\n+# Match the file type to decide what files to compile.\n+FORMAT_FILE=\n+case \"$glibcxx_cv_sys_filetype\" in\n+elf*) FORMAT_FILE=\"elf.lo\" ;;\n+*) { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: could not determine output file type\" >&5\n+$as_echo \"$as_me: WARNING: could not determine output file type\" >&2;}\n+   FORMAT_FILE=\"unknown.lo\"\n+   enable_libstdcxx_backtrace=no\n+   ;;\n+esac\n+\n+\n+# ELF defines.\n+elfsize=\n+case \"$glibcxx_cv_sys_filetype\" in\n+elf32) elfsize=32 ;;\n+elf64) elfsize=64 ;;\n+esac\n+BACKTRACE_CPPFLAGS=\"$BACKTRACE_CPPFLAGS -DBACKTRACE_ELF_SIZE=$elfsize\"\n+\n+  ALLOC_FILE=alloc.lo\n+\n+  VIEW_FILE=read.lo\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether to build libbacktrace support\" >&5\n+$as_echo_n \"checking whether to build libbacktrace support... \" >&6; }\n+  if test \"$enable_libstdcxx_backtrace\" == \"auto\"; then\n+    enable_libstdcxx_backtrace=no\n+  fi\n+  if test \"$enable_libstdcxx_backtrace\" == \"yes\"; then\n+    BACKTRACE_SUPPORTED=1\n+    BACKTRACE_USES_MALLOC=1\n+    if test \"$ac_has_gthreads\" = \"yes\"; then\n+      BACKTRACE_SUPPORTS_THREADS=1\n+    else\n+      BACKTRACE_SUPPORTS_THREADS=0\n+    fi\n+\n+\n+\n+\n+\n+$as_echo \"#define HAVE_STACKTRACE 1\" >>confdefs.h\n+\n+  else\n+    BACKTRACE_SUPPORTED=0\n+    BACKTRACE_USES_MALLOC=0\n+    BACKTRACE_SUPPORTS_THREADS=0\n+  fi\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_libstdcxx_backtrace\" >&5\n+$as_echo \"$enable_libstdcxx_backtrace\" >&6; }\n+\n+\n+\n # For Networking TS.\n for ac_header in fcntl.h sys/ioctl.h sys/socket.h sys/uio.h poll.h netdb.h arpa/inet.h netinet/in.h netinet/tcp.h\n do :\n@@ -77970,6 +78239,15 @@ else\n fi\n \n \n+    if test \"$enable_libstdcxx_backtrace\" != no; then\n+  ENABLE_BACKTRACE_TRUE=\n+  ENABLE_BACKTRACE_FALSE='#'\n+else\n+  ENABLE_BACKTRACE_TRUE='#'\n+  ENABLE_BACKTRACE_FALSE=\n+fi\n+\n+\n \n \n cat >confcache <<\\_ACEOF\n@@ -78235,6 +78513,8 @@ ac_config_files=\"$ac_config_files scripts/extract_symvers\"\n \n ac_config_files=\"$ac_config_files doc/xsl/customization.xsl\"\n \n+ac_config_files=\"$ac_config_files src/libbacktrace/backtrace-supported.h\"\n+\n \n # Multilibs need MULTISUBDIR defined correctly in certain makefiles so\n # that multilib installs will end up installed in the correct place.\n@@ -78244,7 +78524,7 @@ ac_config_files=\"$ac_config_files doc/xsl/customization.xsl\"\n # append it here.  Only modify Makefiles that have just been created.\n #\n # Also, get rid of this simulated-VPATH thing that automake does.\n-ac_config_files=\"$ac_config_files include/Makefile libsupc++/Makefile src/Makefile src/c++98/Makefile src/c++11/Makefile src/c++17/Makefile src/c++20/Makefile src/filesystem/Makefile doc/Makefile po/Makefile testsuite/Makefile python/Makefile\"\n+ac_config_files=\"$ac_config_files include/Makefile libsupc++/Makefile src/Makefile src/c++98/Makefile src/c++11/Makefile src/c++17/Makefile src/c++20/Makefile src/filesystem/Makefile src/libbacktrace/Makefile doc/Makefile po/Makefile testsuite/Makefile python/Makefile\"\n \n \n ac_config_commands=\"$ac_config_commands generate-headers\"\n@@ -78479,6 +78759,10 @@ if test -z \"${ENABLE_FILESYSTEM_TS_TRUE}\" && test -z \"${ENABLE_FILESYSTEM_TS_FAL\n   as_fn_error $? \"conditional \\\"ENABLE_FILESYSTEM_TS\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${ENABLE_BACKTRACE_TRUE}\" && test -z \"${ENABLE_BACKTRACE_FALSE}\"; then\n+  as_fn_error $? \"conditional \\\"ENABLE_BACKTRACE\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${BUILD_INFO_TRUE}\" && test -z \"${BUILD_INFO_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"BUILD_INFO\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n@@ -79498,6 +79782,7 @@ do\n     \"scripts/testsuite_flags\") CONFIG_FILES=\"$CONFIG_FILES scripts/testsuite_flags\" ;;\n     \"scripts/extract_symvers\") CONFIG_FILES=\"$CONFIG_FILES scripts/extract_symvers\" ;;\n     \"doc/xsl/customization.xsl\") CONFIG_FILES=\"$CONFIG_FILES doc/xsl/customization.xsl\" ;;\n+    \"src/libbacktrace/backtrace-supported.h\") CONFIG_FILES=\"$CONFIG_FILES src/libbacktrace/backtrace-supported.h\" ;;\n     \"include/Makefile\") CONFIG_FILES=\"$CONFIG_FILES include/Makefile\" ;;\n     \"libsupc++/Makefile\") CONFIG_FILES=\"$CONFIG_FILES libsupc++/Makefile\" ;;\n     \"src/Makefile\") CONFIG_FILES=\"$CONFIG_FILES src/Makefile\" ;;\n@@ -79506,6 +79791,7 @@ do\n     \"src/c++17/Makefile\") CONFIG_FILES=\"$CONFIG_FILES src/c++17/Makefile\" ;;\n     \"src/c++20/Makefile\") CONFIG_FILES=\"$CONFIG_FILES src/c++20/Makefile\" ;;\n     \"src/filesystem/Makefile\") CONFIG_FILES=\"$CONFIG_FILES src/filesystem/Makefile\" ;;\n+    \"src/libbacktrace/Makefile\") CONFIG_FILES=\"$CONFIG_FILES src/libbacktrace/Makefile\" ;;\n     \"doc/Makefile\") CONFIG_FILES=\"$CONFIG_FILES doc/Makefile\" ;;\n     \"po/Makefile\") CONFIG_FILES=\"$CONFIG_FILES po/Makefile\" ;;\n     \"testsuite/Makefile\") CONFIG_FILES=\"$CONFIG_FILES testsuite/Makefile\" ;;\n@@ -81377,6 +81663,17 @@ _EOF\n  ;;\n     \"src/filesystem/Makefile\":F) cat > vpsed$$ << \\_EOF\n s!`test -f '$<' || echo '$(srcdir)/'`!!\n+_EOF\n+   sed -f vpsed$$ $ac_file > tmp$$\n+   mv tmp$$ $ac_file\n+   rm vpsed$$\n+   echo 'MULTISUBDIR =' >> $ac_file\n+   ml_norecursion=yes\n+   . ${multi_basedir}/config-ml.in\n+   { ml_norecursion=; unset ml_norecursion;}\n+ ;;\n+    \"src/libbacktrace/Makefile\":F) cat > vpsed$$ << \\_EOF\n+s!`test -f '$<' || echo '$(srcdir)/'`!!\n _EOF\n    sed -f vpsed$$ $ac_file > tmp$$\n    mv tmp$$ $ac_file"}, {"sha": "2a3bc520501ab23efb0fdf9733147852a087e725", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -489,6 +489,8 @@ AC_CHECK_HEADERS([fcntl.h dirent.h sys/statvfs.h utime.h])\n GLIBCXX_ENABLE_FILESYSTEM_TS\n GLIBCXX_CHECK_FILESYSTEM_DEPS\n \n+GLIBCXX_ENABLE_BACKTRACE\n+\n # For Networking TS.\n AC_CHECK_HEADERS([fcntl.h sys/ioctl.h sys/socket.h sys/uio.h poll.h netdb.h arpa/inet.h netinet/in.h netinet/tcp.h])\n AC_CHECK_DECL(F_GETFL,,,[#include <fcntl.h>])\n@@ -629,6 +631,7 @@ AC_CONFIG_FILES(Makefile)\n AC_CONFIG_FILES([scripts/testsuite_flags],[chmod +x scripts/testsuite_flags])\n AC_CONFIG_FILES([scripts/extract_symvers],[chmod +x scripts/extract_symvers])\n AC_CONFIG_FILES([doc/xsl/customization.xsl])\n+AC_CONFIG_FILES([src/libbacktrace/backtrace-supported.h])\n \n # Multilibs need MULTISUBDIR defined correctly in certain makefiles so\n # that multilib installs will end up installed in the correct place."}, {"sha": "6aaceea7491c0fe79643b9cfb94baa4fe449d620", "filename": "libstdc++-v3/doc/Makefile.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -144,6 +144,7 @@ ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n ACLOCAL = @ACLOCAL@\n ALLOCATOR_H = @ALLOCATOR_H@\n ALLOCATOR_NAME = @ALLOCATOR_NAME@\n+ALLOC_FILE = @ALLOC_FILE@\n AMTAR = @AMTAR@\n AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n AR = @AR@\n@@ -155,6 +156,10 @@ AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n AUTOMAKE = @AUTOMAKE@\n AWK = @AWK@\n+BACKTRACE_CPPFLAGS = @BACKTRACE_CPPFLAGS@\n+BACKTRACE_SUPPORTED = @BACKTRACE_SUPPORTED@\n+BACKTRACE_SUPPORTS_THREADS = @BACKTRACE_SUPPORTS_THREADS@\n+BACKTRACE_USES_MALLOC = @BACKTRACE_USES_MALLOC@\n BASIC_FILE_CC = @BASIC_FILE_CC@\n BASIC_FILE_H = @BASIC_FILE_H@\n CC = @CC@\n@@ -199,6 +204,7 @@ EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n FGREP = @FGREP@\n+FORMAT_FILE = @FORMAT_FILE@\n FREESTANDING_FLAGS = @FREESTANDING_FLAGS@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n@@ -254,6 +260,7 @@ SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n+VIEW_FILE = @VIEW_FILE@\n VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@"}, {"sha": "d1431926cdd731adebb10da7a96da07f26c7914f", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -80,6 +80,7 @@ std_headers = \\\n \t${std_srcdir}/sstream \\\n \t${std_srcdir}/syncstream \\\n \t${std_srcdir}/stack \\\n+\t${std_srcdir}/stacktrace \\\n \t${std_srcdir}/stdexcept \\\n \t${std_srcdir}/stop_token \\\n \t${std_srcdir}/streambuf \\"}, {"sha": "de2a25f5168a52ec5d4977bea0d23a0f6f07128f", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -144,6 +144,7 @@ ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n ACLOCAL = @ACLOCAL@\n ALLOCATOR_H = @ALLOCATOR_H@\n ALLOCATOR_NAME = @ALLOCATOR_NAME@\n+ALLOC_FILE = @ALLOC_FILE@\n AMTAR = @AMTAR@\n AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n AR = @AR@\n@@ -155,6 +156,10 @@ AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n AUTOMAKE = @AUTOMAKE@\n AWK = @AWK@\n+BACKTRACE_CPPFLAGS = @BACKTRACE_CPPFLAGS@\n+BACKTRACE_SUPPORTED = @BACKTRACE_SUPPORTED@\n+BACKTRACE_SUPPORTS_THREADS = @BACKTRACE_SUPPORTS_THREADS@\n+BACKTRACE_USES_MALLOC = @BACKTRACE_USES_MALLOC@\n BASIC_FILE_CC = @BASIC_FILE_CC@\n BASIC_FILE_H = @BASIC_FILE_H@\n CC = @CC@\n@@ -199,6 +204,7 @@ EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n FGREP = @FGREP@\n+FORMAT_FILE = @FORMAT_FILE@\n FREESTANDING_FLAGS = @FREESTANDING_FLAGS@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n@@ -254,6 +260,7 @@ SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n+VIEW_FILE = @VIEW_FILE@\n VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@\n@@ -431,6 +438,7 @@ std_headers = \\\n \t${std_srcdir}/sstream \\\n \t${std_srcdir}/syncstream \\\n \t${std_srcdir}/stack \\\n+\t${std_srcdir}/stacktrace \\\n \t${std_srcdir}/stdexcept \\\n \t${std_srcdir}/stop_token \\\n \t${std_srcdir}/streambuf \\"}, {"sha": "623f44bdca4f1ea25cd75ceea636aa7754b55114", "filename": "libstdc++-v3/include/std/stacktrace", "status": "added", "additions": 672, "deletions": 0, "changes": 672, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstacktrace", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstacktrace", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstacktrace?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -0,0 +1,672 @@\n+// <stacktrace> -*- C++ -*-\n+\n+// Copyright The GNU Toolchain Authors.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+#ifndef _GLIBCXX_STACKTRACE\n+#define _GLIBCXX_STACKTRACE 1\n+\n+#pragma GCC system_header\n+\n+#include <bits/c++config.h>\n+\n+#if __cplusplus > 202002L && _GLIBCXX_HAVE_STACKTRACE\n+#include <compare>\n+#include <string>\n+#include <sstream>\n+#include <bits/stl_algobase.h>\n+#include <bits/stl_algo.h>\n+#include <bits/stl_iterator.h>\n+#include <bits/stl_uninitialized.h>\n+#include <cxxabi.h>\n+\n+struct __glibcxx_backtrace_state;\n+struct __glibcxx_backtrace_simple_data;\n+\n+extern \"C\"\n+{\n+__glibcxx_backtrace_state*\n+__glibcxx_backtrace_create_state(const char*, int,\n+\t\t\t\t void(*)(void*, const char*, int),\n+\t\t\t\t void*);\n+\n+int\n+__glibcxx_backtrace_simple(__glibcxx_backtrace_state*, int,\n+\t\t\t   int (*) (void*, uintptr_t),\n+\t\t\t   void(*)(void*, const char*, int),\n+\t\t\t   void*);\n+int\n+__glibcxx_backtrace_pcinfo(__glibcxx_backtrace_state*, uintptr_t,\n+\t\t\t   int (*)(void*, uintptr_t,\n+\t\t\t\t   const char*, int, const char*),\n+\t\t\t   void(*)(void*, const char*, int),\n+\t\t\t   void*);\n+\n+int\n+__glibcxx_backtrace_syminfo(__glibcxx_backtrace_state*, uintptr_t addr,\n+\t\t\t    void (*) (void*, uintptr_t, const char*,\n+\t\t\t\t      uintptr_t, uintptr_t),\n+\t\t\t    void(*)(void*, const char*, int),\n+\t\t\t    void*);\n+}\n+\n+namespace std _GLIBCXX_VISIBILITY(default)\n+{\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n+\n+#define __cpp_lib_stacktrace 202011L\n+\n+  // [stacktrace.entry], class stacktrace_entry\n+  class stacktrace_entry\n+  {\n+    using uint_least32_t = __UINT_LEAST32_TYPE__;\n+    using uintptr_t = __UINTPTR_TYPE__;\n+\n+  public:\n+    using native_handle_type = uintptr_t;\n+\n+    // [stacktrace.entry.ctor], constructors\n+\n+    constexpr\n+    stacktrace_entry() noexcept = default;\n+\n+    constexpr\n+    stacktrace_entry(const stacktrace_entry& __other) noexcept = default;\n+\n+    constexpr stacktrace_entry&\n+    operator=(const stacktrace_entry& __other) noexcept = default;\n+\n+    ~stacktrace_entry() = default;\n+\n+    // [stacktrace.entry.obs], observers\n+\n+    constexpr native_handle_type\n+    native_handle() const noexcept { return _M_pc; }\n+\n+    constexpr explicit operator bool() const noexcept { return _M_pc != -1; }\n+\n+    // [stacktrace.entry.query], query\n+    string\n+    description() const\n+    {\n+      string __s;\n+      _M_get_info(&__s, nullptr, nullptr);\n+      return __s;\n+    }\n+\n+    string\n+    source_file() const\n+    {\n+      string __s;\n+      _M_get_info(nullptr, &__s, nullptr);\n+      return __s;\n+    }\n+\n+    uint_least32_t\n+    source_line() const\n+    {\n+      int __line = 0;\n+      _M_get_info(nullptr, nullptr, &__line);\n+      return __line;\n+    }\n+\n+    // [stacktrace.entry.cmp], comparison\n+    friend constexpr bool\n+    operator==(const stacktrace_entry& __x,\n+\t       const stacktrace_entry& __y) noexcept\n+    { return __x._M_pc == __y._M_pc; }\n+\n+    friend constexpr strong_ordering\n+    operator<=>(const stacktrace_entry& __x,\n+\t\tconst stacktrace_entry& __y) noexcept\n+    { return __x._M_pc <=> __y._M_pc; }\n+\n+  private:\n+    native_handle_type _M_pc = -1;\n+\n+    template<typename _Allocator> friend class basic_stacktrace;\n+\n+    static __glibcxx_backtrace_state*\n+    _S_init()\n+    {\n+      static __glibcxx_backtrace_state* __state\n+\t= __glibcxx_backtrace_create_state(nullptr, 1, nullptr, nullptr);\n+      return __state;\n+    }\n+\n+    template<typename _CharT, typename _Traits>\n+      friend basic_ostream<_CharT, _Traits>&\n+      operator<<(basic_ostream<_CharT, _Traits>&, const stacktrace_entry&);\n+\n+    bool\n+    _M_get_info(string* __desc, string* __file, int* __line) const\n+    {\n+      if (!*this)\n+\treturn false;\n+\n+      struct _Data\n+      {\n+\tstring* _M_desc;\n+\tstring* _M_file;\n+\tint* _M_line;\n+      } __data = { __desc, __file, __line };\n+\n+      auto __cb = [](void* __data, uintptr_t, const char* __filename,\n+\t\t     int __lineno, const char* __function) -> int {\n+\t  auto& __d = *static_cast<_Data*>(__data);\n+\t  if (__function && __d._M_desc)\n+\t    *__d._M_desc = _S_demangle(__function);\n+\t  if (__filename && __d._M_file)\n+\t    *__d._M_file = __filename;\n+\t  if (__d._M_line)\n+\t    *__d._M_line = __lineno;\n+\t  return __function != nullptr;\n+      };\n+      const auto __state = _S_init();\n+      if (::__glibcxx_backtrace_pcinfo(__state, _M_pc, +__cb, nullptr, &__data))\n+\treturn true;\n+      if (__desc && __desc->empty())\n+\t{\n+\t  auto __cb2 = [](void* __data, uintptr_t, const char* __symname,\n+\t      uintptr_t, uintptr_t) {\n+\t      if (__symname)\n+\t\t*static_cast<_Data*>(__data)->_M_desc = _S_demangle(__symname);\n+\t  };\n+\t  if (::__glibcxx_backtrace_syminfo(__state, _M_pc, +__cb2, nullptr,\n+\t\t\t\t\t    &__data))\n+\t    return true;\n+\t}\n+      return false;\n+    }\n+\n+    static string\n+    _S_demangle(const char* __name)\n+    {\n+      string __s;\n+      int __status;\n+      char* __str = __cxxabiv1::__cxa_demangle(__name, nullptr, nullptr,\n+\t\t\t\t\t       &__status);\n+      if (__status == 0)\n+\t__s = __str;\n+      __builtin_free(__str);\n+      return __s;\n+    }\n+  };\n+\n+  // [stacktrace.basic], class template basic_stacktrace\n+  template<typename _Allocator>\n+    class basic_stacktrace\n+    {\n+      using _AllocTraits = allocator_traits<_Allocator>;\n+\n+    public:\n+      using value_type = stacktrace_entry;\n+      using const_reference = const value_type&;\n+      using reference = value_type&;\n+      using const_iterator\n+\t= __gnu_cxx::__normal_iterator<value_type*, basic_stacktrace>;\n+      using iterator = const_iterator;\n+      using reverse_iterator = std::reverse_iterator<iterator>;\n+      using const_reverse_iterator = std::reverse_iterator<const_iterator>;\n+      using difference_type = ptrdiff_t;\n+      using size_type = unsigned short;\n+      using allocator_type = _Allocator;\n+\n+      // [stacktrace.basic.ctor], creation and assignment\n+\n+      static basic_stacktrace\n+      current(const allocator_type& __alloc = allocator_type()) noexcept\n+      {\n+\treturn current(0, size_type(-1), __alloc);\n+      }\n+\n+      static basic_stacktrace\n+      current(size_type __skip,\n+\t      const allocator_type& __alloc = allocator_type()) noexcept\n+      {\n+\treturn current(__skip, size_type(-1), __alloc);\n+      }\n+\n+      static basic_stacktrace\n+      current(size_type __skip, size_type __max_depth,\n+\t      const allocator_type& __alloc = allocator_type()) noexcept\n+      {\n+\t__glibcxx_assert(__skip <= (size_type(-1) - __max_depth));\n+\n+\tauto __state = stacktrace_entry::_S_init();\n+\tbasic_stacktrace __ret(__alloc);\n+\tif (!__ret._M_reserve(std::min<int>(__max_depth, 64)))\n+\t  return __ret;\n+\n+\tauto __cb = [](void* __data, uintptr_t __pc) {\n+\t  auto& __s = *static_cast<basic_stacktrace*>(__data);\n+\t  stacktrace_entry __f;\n+\t  __f._M_pc = __pc;\n+\t  if (__s._M_push_back(__f))\n+\t    return 0;\n+\t  return 1;\n+\t};\n+\n+\tif (__glibcxx_backtrace_simple(__state, __skip, +__cb, nullptr,\n+\t\t\t\t       std::__addressof(__ret)))\n+\t  {\n+\t    __ret._M_clear();\n+\t  }\n+\treturn __ret;\n+      }\n+\n+      basic_stacktrace()\n+      noexcept(is_nothrow_default_constructible_v<allocator_type>)\n+      { }\n+\n+      explicit\n+      basic_stacktrace(const allocator_type& __alloc) noexcept\n+      : _M_alloc(__alloc)\n+      { }\n+\n+      basic_stacktrace(const basic_stacktrace& __other) noexcept\n+      : basic_stacktrace(__other, __other._M_alloc)\n+      { }\n+\n+      basic_stacktrace(basic_stacktrace&& __other) noexcept\n+      : _M_alloc(std::move(__other._M_alloc)),\n+\t_M_impl(std::__exchange(__other._M_impl, {}))\n+      { }\n+\n+      basic_stacktrace(const basic_stacktrace& __other,\n+\t\t       const allocator_type& __alloc) noexcept\n+      : _M_alloc(__alloc)\n+      {\n+\tif (const auto __s = __other._M_impl._M_size)\n+\t  if (auto __f = _M_impl._M_allocate(_M_alloc, __s))\n+\t    {\n+\t      std::uninitialized_copy_n(__other.begin(), __s, __f);\n+\t      _M_impl._M_size = __s;\n+\t    }\n+      }\n+\n+      basic_stacktrace(basic_stacktrace&& __other,\n+\t\t       const allocator_type& __alloc) noexcept\n+      : _M_alloc(__alloc)\n+      {\n+\tif constexpr (_Allocator::is_always_equal::value)\n+\t  {\n+\t    _M_impl = std::__exchange(__other._M_impl, {});\n+\t  }\n+\telse if (_M_alloc == __other._M_alloc)\n+\t  {\n+\t    _M_impl = std::__exchange(__other._M_impl, {});\n+\t  }\n+      }\n+\n+      basic_stacktrace&\n+      operator=(const basic_stacktrace& __other) noexcept\n+      {\n+\tif (std::__addressof(__other) == this)\n+\t  return *this;\n+\n+\tconstexpr bool __pocca\n+\t  = _AllocTraits::propagate_on_container_copy_assignment::value;\n+\tconstexpr bool __always_eq = _AllocTraits::is_always_equal::value;\n+\n+\tconst auto __s = __other.size();\n+\n+\tif constexpr (!__always_eq && __pocca)\n+\t  {\n+\t    if (_M_alloc != __other._M_alloc)\n+\t      {\n+\t\t// Cannot keep the same storage, so deallocate it now.\n+\t\t_M_clear();\n+\t      }\n+\t  }\n+\n+\tif (_M_impl._M_capacity < __s)\n+\t  {\n+\t    // Need to allocate new storage.\n+\t    _M_clear();\n+\n+\t    // Use the allocator we will have after this function returns.\n+\t    auto& __alloc = __pocca ? __other._M_alloc : _M_alloc;\n+\t    if (auto __f = _M_impl._M_allocate(__alloc, __s))\n+\t      {\n+\t\tstd::uninitialized_copy_n(__other.begin(), __s, __f);\n+\t\t_M_impl._M_size = __s;\n+\t      }\n+\t  }\n+\telse\n+\t  {\n+\t    // Current storage is large enough and can be freed by whichever\n+\t    // allocator we will have after this function returns.\n+\t    auto __to = std::copy_n(__other.begin(), __s, begin());\n+\t    std::destroy(__to, end());\n+\t    _M_impl._M_size = __s;\n+\t  }\n+\n+\tif constexpr (__pocca)\n+\t  _M_alloc = __other._M_alloc;\n+\n+\treturn *this;\n+      }\n+\n+      basic_stacktrace&\n+      operator=(basic_stacktrace&& __other) noexcept\n+      {\n+\tif (std::__addressof(__other) == this)\n+\t  return *this;\n+\n+\tconstexpr bool __pocma\n+\t  = _AllocTraits::propagate_on_container_move_assignment::value;\n+\n+\tif constexpr (_AllocTraits::is_always_equal::value)\n+\t  std::swap(_M_impl, __other._M_impl);\n+\telse if (_M_alloc == __other._M_alloc)\n+\t  std::swap(_M_impl, __other._M_impl);\n+\telse\n+\t  {\n+\t    const auto __s = __other.size();\n+\n+\t    if constexpr (__pocma || _M_impl._M_capacity < __s)\n+\t      {\n+\t\t// Need to allocate new storage.\n+\t\t_M_clear();\n+\n+\t\t// Use the allocator we will have after this function returns.\n+\t\tauto& __alloc = __pocma ? __other._M_alloc : _M_alloc;\n+\t\tif (auto __f = _M_impl._M_allocate(__alloc, __s))\n+\t\t  std::uninitialized_copy_n(__other.begin(), __s, __f);\n+\t      }\n+\t    else\n+\t      {\n+\t\t// Current storage is large enough.\n+\t\tauto __first = __other.begin();\n+\t\tauto __mid = __first + std::min(__s, _M_impl._M_size);\n+\t\tauto __last = __other.end();\n+\t\tauto __to = std::copy(__first, __mid, begin());\n+\t\t__to = std::uninitialized_copy(__mid, __last, __to);\n+\t\tstd::destroy(__to, end());\n+\t      }\n+\t    _M_impl._M_size = __s;\n+\t  }\n+\n+\tif constexpr (__pocma)\n+\t  _M_alloc = std::move(__other._M_alloc);\n+\n+\treturn *this;\n+      }\n+\n+      constexpr ~basic_stacktrace()\n+      {\n+\t_M_clear();\n+      }\n+\n+      // [stacktrace.basic.obs], observers\n+      allocator_type get_allocator() const noexcept { return _M_alloc; }\n+\n+      const_iterator\n+      begin() const noexcept\n+      { return const_iterator{_M_impl._M_frames}; }\n+\n+      const_iterator\n+      end() const noexcept\n+      { return begin() + size(); }\n+\n+      const_reverse_iterator\n+      rbegin() const noexcept\n+      { return std::make_reverse_iterator(end()); }\n+\n+      const_reverse_iterator\n+      rend() const noexcept\n+      { return std::make_reverse_iterator(begin()); }\n+\n+      const_iterator cbegin() const noexcept { return begin(); }\n+      const_iterator cend() const noexcept { return end(); }\n+      const_reverse_iterator crbegin() const noexcept { return rbegin(); };\n+      const_reverse_iterator crend() const noexcept { return rend(); };\n+\n+      [[nodiscard]] bool empty() const noexcept { return size() == 0; }\n+      size_type size() const noexcept { return _M_impl._M_size; }\n+      size_type max_size() const noexcept { return size_type(-1); }\n+\n+      const_reference\n+      operator[](size_type __n) const noexcept\n+      {\n+\t__glibcxx_assert(__n < size());\n+\treturn begin()[__n];\n+      }\n+\n+      const_reference\n+      at(size_type __n) const\n+      {\n+\tif (__n >= size())\n+\t  __throw_out_of_range(\"basic_stack_trace::at: bad frame number\");\n+\treturn begin()[__n];\n+      }\n+\n+      // [stacktrace.basic.cmp], comparisons\n+      template<typename _Allocator2>\n+\tfriend bool\n+\toperator==(const basic_stacktrace& __x,\n+\t\t   const basic_stacktrace<_Allocator2>& __y) noexcept\n+\t{ return std::equal(__x.begin(), __x.end(), __y.begin(), __y.end()); }\n+\n+      template<typename _Allocator2>\n+\tfriend strong_ordering\n+\toperator<=>(const basic_stacktrace& __x,\n+\t\t    const basic_stacktrace<_Allocator2>& __y) noexcept\n+\t{\n+\t  if (auto __s = __x.size() <=> __y.size(); __s != 0)\n+\t    return __s;\n+\t  return std::lexicographical_compare_three_way(__x.begin(), __x.end(),\n+\t\t\t\t\t\t\t__y.begin(), __y.end());\n+\t}\n+\n+      // [stacktrace.basic.mod], modifiers\n+      void\n+      swap(basic_stacktrace& __other) noexcept\n+      {\n+\tstd::swap(_M_impl. __other._M_impl);\n+\tif constexpr (_AllocTraits::propagate_on_container_swap::value)\n+\t  std::swap(_M_alloc, __other._M_alloc);\n+      }\n+\n+    private:\n+      bool\n+      _M_reserve(size_type __n) noexcept\n+      {\n+\treturn _M_impl._M_allocate(_M_alloc, __n) != nullptr;\n+      }\n+\n+      bool\n+      _M_push_back(const value_type& __x) noexcept\n+      {\n+\treturn _M_impl._M_push_back(_M_alloc, __x);\n+      }\n+\n+      void\n+      _M_clear() noexcept\n+      {\n+\t_M_impl._M_destroy();\n+\t_M_impl._M_deallocate(_M_alloc);\n+      }\n+\n+      struct _Impl\n+      {\n+\tusing pointer = typename _AllocTraits::pointer;\n+\n+\tpointer\t  _M_frames   = nullptr;\n+\tsize_type _M_size     = 0;\n+\tsize_type _M_capacity = 0;\n+\n+\t// Precondition: _M_frames == nullptr\n+\tpointer\n+\t_M_allocate(allocator_type& __alloc, size_type __n) noexcept\n+\t{\n+\t  __try\n+\t    {\n+\t      _M_frames = __n ? __alloc.allocate(__n) : nullptr;\n+\t      _M_capacity = __n;\n+\t    }\n+\t  __catch (...)\n+\t    {\n+\t      _M_frames = nullptr;\n+\t      _M_capacity = 0;\n+\t    }\n+\t  return _M_frames;\n+\t}\n+\n+\tvoid\n+\t_M_deallocate(allocator_type& __alloc) noexcept\n+\t{\n+\t  if (_M_capacity)\n+\t    {\n+\t      __alloc.deallocate(_M_frames, _M_capacity);\n+\t      _M_frames = nullptr;\n+\t      _M_capacity = 0;\n+\t    }\n+\t}\n+\n+\tvoid\n+\t_M_destroy() noexcept\n+\t{\n+\t  std::destroy_n(_M_frames, _M_size);\n+\t  _M_size = 0;\n+\t}\n+\n+\tbool\n+\t_M_push_back(allocator_type& __alloc,\n+\t\t     const stacktrace_entry& __f) noexcept\n+\t{\n+\t  if (_M_size == _M_capacity)\n+\t    {\n+\t      _Impl __tmp;\n+\t      if (auto __f = __tmp._M_allocate(__alloc, _M_capacity * 2))\n+\t\tstd::uninitialized_copy_n(_M_frames, _M_size, __f);\n+\t      else\n+\t\treturn false;\n+\t      _M_deallocate(__alloc);\n+\t      std::swap(*this, __tmp);\n+\t    }\n+\t  stacktrace_entry* __addr = std::to_address(_M_frames + _M_size++);\n+\t  std::construct_at(__addr, __f);\n+\t  return true;\n+\t}\n+\n+      };\n+\n+      [[no_unique_address]] allocator_type  _M_alloc{};\n+\n+      _Impl _M_impl{};\n+    };\n+\n+  // basic_stacktrace typedef names\n+  using stacktrace = basic_stacktrace<allocator<stacktrace_entry>>;\n+\n+  // [stacktrace.basic.nonmem], non-member functions\n+  template<typename _Allocator>\n+    inline void\n+    swap(basic_stacktrace<_Allocator>& __a, basic_stacktrace<_Allocator>& __b)\n+    noexcept(noexcept(__a.swap(__b)))\n+    { __a.swap(__b); }\n+\n+  template<typename _CharT, typename _Traits>\n+    inline basic_ostream<_CharT, _Traits>&\n+    operator<<(basic_ostream<_CharT, _Traits>& __os,\n+\t       const stacktrace_entry& __f)\n+    {\n+      string __desc, __file;\n+      int __line;\n+      if (__f._M_get_info(&__desc, &__file, &__line))\n+\t{\n+\t  __os.width(4);\n+\t  __os << __desc << \" at \" << __file << ':' << __line;\n+\t}\n+      return __os;\n+    }\n+\n+  template<typename _CharT, typename _Traits, typename _Allocator>\n+    inline basic_ostream<_CharT, _Traits>&\n+    operator<<(basic_ostream<_CharT, _Traits>& __os,\n+\t       const basic_stacktrace<_Allocator>& __st)\n+    {\n+      for (stacktrace::size_type __i = 0; __i < __st.size(); ++__i)\n+\t{\n+\t  __os.width(4);\n+\t  __os << __i << \"# \" << __st[__i] << '\\n';\n+\t}\n+      return __os;\n+    }\n+\n+  inline string\n+  to_string(const stacktrace_entry& __f)\n+  {\n+    std::ostringstream __os;\n+    __os << __f;\n+    return std::move(__os).str();\n+  }\n+\n+  template<typename _Allocator>\n+    string\n+    to_string(const basic_stacktrace<_Allocator>& __st)\n+    {\n+      std::ostringstream __os;\n+      __os << __st;\n+      return std::move(__os).str();\n+    }\n+\n+  namespace pmr\n+  {\n+    template<typename _Tp> class polymorphic_allocator;\n+    using stacktrace\n+      = basic_stacktrace<polymorphic_allocator<stacktrace_entry>>;\n+  }\n+\n+  // [stacktrace.basic.hash], hash support\n+\n+  template<>\n+    struct hash<stacktrace_entry>\n+    {\n+      size_t\n+      operator()(const stacktrace_entry& __f) const noexcept\n+      {\n+\tusing __h = hash<stacktrace_entry::native_handle_type>;\n+\treturn __h()(__f.native_handle());\n+      }\n+    };\n+\n+  template<typename _Allocator>\n+    struct hash<basic_stacktrace<_Allocator>>\n+    {\n+      size_t\n+      operator()(const basic_stacktrace<_Allocator>& __st) const noexcept\n+      {\n+\thash<stacktrace_entry::native_handle_type> __h;\n+\tsize_t __val = _Hash_impl::hash(__st.size());\n+\tfor (const auto& __f : __st)\n+\t  __val = _Hash_impl::__hash_combine(__h(__f), __val);\n+\treturn __val;\n+      }\n+    };\n+\n+_GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace std\n+#endif // C++23\n+\n+#endif /* _GLIBCXX_STACKTRACE */"}, {"sha": "e3afe57c7823a6f6bf872b2c9f73ce31063b35a6", "filename": "libstdc++-v3/include/std/version", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -312,6 +312,9 @@\n #if __cpp_lib_span\n # define __cpp_lib_spanstream 202106L\n #endif\n+#if _GLIBCXX_HAVE_STACKTRACE\n+# define __cpp_lib_stacktrace 202011L\n+#endif\n #define __cpp_lib_string_contains 202011L\n #if _GLIBCXX_USE_CXX11_ABI // Only supported with cxx11-abi\n # define __cpp_lib_string_resize_and_overwrite 202110L"}, {"sha": "a4402009b854da007bdd3676a3ccdef75ae9422e", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -253,6 +253,7 @@ ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n ACLOCAL = @ACLOCAL@\n ALLOCATOR_H = @ALLOCATOR_H@\n ALLOCATOR_NAME = @ALLOCATOR_NAME@\n+ALLOC_FILE = @ALLOC_FILE@\n AMTAR = @AMTAR@\n AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n AR = @AR@\n@@ -264,6 +265,10 @@ AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n AUTOMAKE = @AUTOMAKE@\n AWK = @AWK@\n+BACKTRACE_CPPFLAGS = @BACKTRACE_CPPFLAGS@\n+BACKTRACE_SUPPORTED = @BACKTRACE_SUPPORTED@\n+BACKTRACE_SUPPORTS_THREADS = @BACKTRACE_SUPPORTS_THREADS@\n+BACKTRACE_USES_MALLOC = @BACKTRACE_USES_MALLOC@\n BASIC_FILE_CC = @BASIC_FILE_CC@\n BASIC_FILE_H = @BASIC_FILE_H@\n CC = @CC@\n@@ -308,6 +313,7 @@ EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n FGREP = @FGREP@\n+FORMAT_FILE = @FORMAT_FILE@\n FREESTANDING_FLAGS = @FREESTANDING_FLAGS@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n@@ -363,6 +369,7 @@ SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n+VIEW_FILE = @VIEW_FILE@\n VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@"}, {"sha": "243f3db7b7290aa726682cad0d4d0c073044d320", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -144,6 +144,7 @@ ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n ACLOCAL = @ACLOCAL@\n ALLOCATOR_H = @ALLOCATOR_H@\n ALLOCATOR_NAME = @ALLOCATOR_NAME@\n+ALLOC_FILE = @ALLOC_FILE@\n AMTAR = @AMTAR@\n AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n AR = @AR@\n@@ -155,6 +156,10 @@ AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n AUTOMAKE = @AUTOMAKE@\n AWK = @AWK@\n+BACKTRACE_CPPFLAGS = @BACKTRACE_CPPFLAGS@\n+BACKTRACE_SUPPORTED = @BACKTRACE_SUPPORTED@\n+BACKTRACE_SUPPORTS_THREADS = @BACKTRACE_SUPPORTS_THREADS@\n+BACKTRACE_USES_MALLOC = @BACKTRACE_USES_MALLOC@\n BASIC_FILE_CC = @BASIC_FILE_CC@\n BASIC_FILE_H = @BASIC_FILE_H@\n CC = @CC@\n@@ -199,6 +204,7 @@ EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n FGREP = @FGREP@\n+FORMAT_FILE = @FORMAT_FILE@\n FREESTANDING_FLAGS = @FREESTANDING_FLAGS@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n@@ -254,6 +260,7 @@ SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n+VIEW_FILE = @VIEW_FILE@\n VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@"}, {"sha": "9da4b31fc8303411fcfd98b5b12a492c158a79f4", "filename": "libstdc++-v3/python/Makefile.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2FMakefile.in?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -174,6 +174,7 @@ ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n ACLOCAL = @ACLOCAL@\n ALLOCATOR_H = @ALLOCATOR_H@\n ALLOCATOR_NAME = @ALLOCATOR_NAME@\n+ALLOC_FILE = @ALLOC_FILE@\n AMTAR = @AMTAR@\n AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n AR = @AR@\n@@ -185,6 +186,10 @@ AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n AUTOMAKE = @AUTOMAKE@\n AWK = @AWK@\n+BACKTRACE_CPPFLAGS = @BACKTRACE_CPPFLAGS@\n+BACKTRACE_SUPPORTED = @BACKTRACE_SUPPORTED@\n+BACKTRACE_SUPPORTS_THREADS = @BACKTRACE_SUPPORTS_THREADS@\n+BACKTRACE_USES_MALLOC = @BACKTRACE_USES_MALLOC@\n BASIC_FILE_CC = @BASIC_FILE_CC@\n BASIC_FILE_H = @BASIC_FILE_H@\n CC = @CC@\n@@ -229,6 +234,7 @@ EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n FGREP = @FGREP@\n+FORMAT_FILE = @FORMAT_FILE@\n FREESTANDING_FLAGS = @FREESTANDING_FLAGS@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n@@ -284,6 +290,7 @@ SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n+VIEW_FILE = @VIEW_FILE@\n VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@"}, {"sha": "71a0da2cd93592c5342ddd459f972affba66cbde", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -28,8 +28,14 @@ else\n filesystem_dir =\n endif\n \n+if ENABLE_BACKTRACE\n+backtrace_dir = libbacktrace\n+else\n+backtrace_dir =\n+endif\n+\n ## Keep this list sync'd with acinclude.m4:GLIBCXX_CONFIGURE.\n-SUBDIRS = c++98 c++11 c++17 c++20 $(filesystem_dir)\n+SUBDIRS = c++98 c++11 c++17 c++20 $(filesystem_dir) $(backtrace_dir)\n \n # Cross compiler support.\n if VTV_CYGMIN\n@@ -64,6 +70,9 @@ vpath % $(top_srcdir)/src/c++20\n if ENABLE_FILESYSTEM_TS\n vpath % $(top_srcdir)/src/filesystem\n endif\n+if ENABLE_BACKTRACE\n+vpath % $(top_srcdir)/src/libbacktrace\n+endif\n \n if GLIBCXX_LDBL_COMPAT\n ldbl_compat_sources = compatibility-ldbl.cc"}, {"sha": "429f3d17967198e4c128b5d4402c6b51c4ead4ce", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -238,11 +238,12 @@ am__define_uniq_tagged_files = \\\n   done | $(am__uniquify_input)`\n ETAGS = etags\n CTAGS = ctags\n-DIST_SUBDIRS = c++98 c++11 c++17 c++20 filesystem\n+DIST_SUBDIRS = c++98 c++11 c++17 c++20 filesystem libbacktrace\n ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n ACLOCAL = @ACLOCAL@\n ALLOCATOR_H = @ALLOCATOR_H@\n ALLOCATOR_NAME = @ALLOCATOR_NAME@\n+ALLOC_FILE = @ALLOC_FILE@\n AMTAR = @AMTAR@\n AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n AR = @AR@\n@@ -254,6 +255,10 @@ AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n AUTOMAKE = @AUTOMAKE@\n AWK = @AWK@\n+BACKTRACE_CPPFLAGS = @BACKTRACE_CPPFLAGS@\n+BACKTRACE_SUPPORTED = @BACKTRACE_SUPPORTED@\n+BACKTRACE_SUPPORTS_THREADS = @BACKTRACE_SUPPORTS_THREADS@\n+BACKTRACE_USES_MALLOC = @BACKTRACE_USES_MALLOC@\n BASIC_FILE_CC = @BASIC_FILE_CC@\n BASIC_FILE_H = @BASIC_FILE_H@\n CC = @CC@\n@@ -298,6 +303,7 @@ EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n FGREP = @FGREP@\n+FORMAT_FILE = @FORMAT_FILE@\n FREESTANDING_FLAGS = @FREESTANDING_FLAGS@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n@@ -353,6 +359,7 @@ SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n+VIEW_FILE = @VIEW_FILE@\n VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@\n@@ -473,7 +480,9 @@ WARN_CXXFLAGS = \\\n AM_CPPFLAGS = $(GLIBCXX_INCLUDES) $(CPPFLAGS)\n @ENABLE_FILESYSTEM_TS_FALSE@filesystem_dir = \n @ENABLE_FILESYSTEM_TS_TRUE@filesystem_dir = filesystem\n-SUBDIRS = c++98 c++11 c++17 c++20 $(filesystem_dir)\n+@ENABLE_BACKTRACE_FALSE@backtrace_dir = \n+@ENABLE_BACKTRACE_TRUE@backtrace_dir = libbacktrace\n+SUBDIRS = c++98 c++11 c++17 c++20 $(filesystem_dir) $(backtrace_dir)\n @VTV_CYGMIN_FALSE@toolexeclib_LTLIBRARIES = libstdc++.la\n \n # Cross compiler support.\n@@ -993,6 +1002,7 @@ vpath % $(top_srcdir)/src/c++11\n vpath % $(top_srcdir)/src/c++17\n vpath % $(top_srcdir)/src/c++20\n @ENABLE_FILESYSTEM_TS_TRUE@vpath % $(top_srcdir)/src/filesystem\n+@ENABLE_BACKTRACE_TRUE@vpath % $(top_srcdir)/src/libbacktrace\n @GLIBCXX_LDBL_COMPAT_TRUE@compatibility-ldbl.lo: compatibility-ldbl.cc\n @GLIBCXX_LDBL_COMPAT_TRUE@\t$(LTCXXCOMPILE64) $(LONG_DOUBLE_COMPAT_FLAGS) -c $<\n @GLIBCXX_LDBL_COMPAT_TRUE@compatibility-ldbl.o: compatibility-ldbl.cc"}, {"sha": "892c505eddc6c235a3efd611fb7e81e8888875b9", "filename": "libstdc++-v3/src/c++11/Makefile.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -210,6 +210,7 @@ ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n ACLOCAL = @ACLOCAL@\n ALLOCATOR_H = @ALLOCATOR_H@\n ALLOCATOR_NAME = @ALLOCATOR_NAME@\n+ALLOC_FILE = @ALLOC_FILE@\n AMTAR = @AMTAR@\n AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n AR = @AR@\n@@ -221,6 +222,10 @@ AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n AUTOMAKE = @AUTOMAKE@\n AWK = @AWK@\n+BACKTRACE_CPPFLAGS = @BACKTRACE_CPPFLAGS@\n+BACKTRACE_SUPPORTED = @BACKTRACE_SUPPORTED@\n+BACKTRACE_SUPPORTS_THREADS = @BACKTRACE_SUPPORTS_THREADS@\n+BACKTRACE_USES_MALLOC = @BACKTRACE_USES_MALLOC@\n BASIC_FILE_CC = @BASIC_FILE_CC@\n BASIC_FILE_H = @BASIC_FILE_H@\n CC = @CC@\n@@ -265,6 +270,7 @@ EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n FGREP = @FGREP@\n+FORMAT_FILE = @FORMAT_FILE@\n FREESTANDING_FLAGS = @FREESTANDING_FLAGS@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n@@ -320,6 +326,7 @@ SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n+VIEW_FILE = @VIEW_FILE@\n VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@"}, {"sha": "b88917e101acc5e2d259570a376e46614456e545", "filename": "libstdc++-v3/src/c++17/Makefile.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2FMakefile.in?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -190,6 +190,7 @@ ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n ACLOCAL = @ACLOCAL@\n ALLOCATOR_H = @ALLOCATOR_H@\n ALLOCATOR_NAME = @ALLOCATOR_NAME@\n+ALLOC_FILE = @ALLOC_FILE@\n AMTAR = @AMTAR@\n AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n AR = @AR@\n@@ -201,6 +202,10 @@ AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n AUTOMAKE = @AUTOMAKE@\n AWK = @AWK@\n+BACKTRACE_CPPFLAGS = @BACKTRACE_CPPFLAGS@\n+BACKTRACE_SUPPORTED = @BACKTRACE_SUPPORTED@\n+BACKTRACE_SUPPORTS_THREADS = @BACKTRACE_SUPPORTS_THREADS@\n+BACKTRACE_USES_MALLOC = @BACKTRACE_USES_MALLOC@\n BASIC_FILE_CC = @BASIC_FILE_CC@\n BASIC_FILE_H = @BASIC_FILE_H@\n CC = @CC@\n@@ -245,6 +250,7 @@ EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n FGREP = @FGREP@\n+FORMAT_FILE = @FORMAT_FILE@\n FREESTANDING_FLAGS = @FREESTANDING_FLAGS@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n@@ -300,6 +306,7 @@ SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n+VIEW_FILE = @VIEW_FILE@\n VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@"}, {"sha": "197d75b8e4ba38068105a6bb50ff3d5674e7b3b9", "filename": "libstdc++-v3/src/c++20/Makefile.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B20%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B20%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B20%2FMakefile.in?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -185,6 +185,7 @@ ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n ACLOCAL = @ACLOCAL@\n ALLOCATOR_H = @ALLOCATOR_H@\n ALLOCATOR_NAME = @ALLOCATOR_NAME@\n+ALLOC_FILE = @ALLOC_FILE@\n AMTAR = @AMTAR@\n AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n AR = @AR@\n@@ -196,6 +197,10 @@ AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n AUTOMAKE = @AUTOMAKE@\n AWK = @AWK@\n+BACKTRACE_CPPFLAGS = @BACKTRACE_CPPFLAGS@\n+BACKTRACE_SUPPORTED = @BACKTRACE_SUPPORTED@\n+BACKTRACE_SUPPORTS_THREADS = @BACKTRACE_SUPPORTS_THREADS@\n+BACKTRACE_USES_MALLOC = @BACKTRACE_USES_MALLOC@\n BASIC_FILE_CC = @BASIC_FILE_CC@\n BASIC_FILE_H = @BASIC_FILE_H@\n CC = @CC@\n@@ -240,6 +245,7 @@ EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n FGREP = @FGREP@\n+FORMAT_FILE = @FORMAT_FILE@\n FREESTANDING_FLAGS = @FREESTANDING_FLAGS@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n@@ -295,6 +301,7 @@ SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n+VIEW_FILE = @VIEW_FILE@\n VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@"}, {"sha": "90eff5da986fdc57f59a451bd919b1cde3c56c67", "filename": "libstdc++-v3/src/c++98/Makefile.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -206,6 +206,7 @@ ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n ACLOCAL = @ACLOCAL@\n ALLOCATOR_H = @ALLOCATOR_H@\n ALLOCATOR_NAME = @ALLOCATOR_NAME@\n+ALLOC_FILE = @ALLOC_FILE@\n AMTAR = @AMTAR@\n AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n AR = @AR@\n@@ -217,6 +218,10 @@ AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n AUTOMAKE = @AUTOMAKE@\n AWK = @AWK@\n+BACKTRACE_CPPFLAGS = @BACKTRACE_CPPFLAGS@\n+BACKTRACE_SUPPORTED = @BACKTRACE_SUPPORTED@\n+BACKTRACE_SUPPORTS_THREADS = @BACKTRACE_SUPPORTS_THREADS@\n+BACKTRACE_USES_MALLOC = @BACKTRACE_USES_MALLOC@\n BASIC_FILE_CC = @BASIC_FILE_CC@\n BASIC_FILE_H = @BASIC_FILE_H@\n CC = @CC@\n@@ -261,6 +266,7 @@ EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n FGREP = @FGREP@\n+FORMAT_FILE = @FORMAT_FILE@\n FREESTANDING_FLAGS = @FREESTANDING_FLAGS@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n@@ -316,6 +322,7 @@ SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n+VIEW_FILE = @VIEW_FILE@\n VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@"}, {"sha": "8986b427fba5d853a5e354e10404619ecb1f1e8a", "filename": "libstdc++-v3/src/filesystem/Makefile.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2FMakefile.in?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -214,6 +214,7 @@ ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n ACLOCAL = @ACLOCAL@\n ALLOCATOR_H = @ALLOCATOR_H@\n ALLOCATOR_NAME = @ALLOCATOR_NAME@\n+ALLOC_FILE = @ALLOC_FILE@\n AMTAR = @AMTAR@\n AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n AR = @AR@\n@@ -225,6 +226,10 @@ AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n AUTOMAKE = @AUTOMAKE@\n AWK = @AWK@\n+BACKTRACE_CPPFLAGS = @BACKTRACE_CPPFLAGS@\n+BACKTRACE_SUPPORTED = @BACKTRACE_SUPPORTED@\n+BACKTRACE_SUPPORTS_THREADS = @BACKTRACE_SUPPORTS_THREADS@\n+BACKTRACE_USES_MALLOC = @BACKTRACE_USES_MALLOC@\n BASIC_FILE_CC = @BASIC_FILE_CC@\n BASIC_FILE_H = @BASIC_FILE_H@\n CC = @CC@\n@@ -269,6 +274,7 @@ EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n FGREP = @FGREP@\n+FORMAT_FILE = @FORMAT_FILE@\n FREESTANDING_FLAGS = @FREESTANDING_FLAGS@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n@@ -324,6 +330,7 @@ SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n+VIEW_FILE = @VIEW_FILE@\n VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@"}, {"sha": "3a3195167b28f129809ccae471de886fec7537c9", "filename": "libstdc++-v3/src/libbacktrace/Makefile.am", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2FMakefile.am?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -0,0 +1,101 @@\n+# Makefile.am -- Backtrace in libstdc++ Makefile.\n+# Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+\n+# Redistribution and use in source and binary forms, with or without\n+# modification, are permitted provided that the following conditions are\n+# met:\n+\n+#     (1) Redistributions of source code must retain the above copyright\n+#     notice, this list of conditions and the following disclaimer. \n+\n+#     (2) Redistributions in binary form must reproduce the above copyright\n+#     notice, this list of conditions and the following disclaimer in\n+#     the documentation and/or other materials provided with the\n+#     distribution.  \n+\n+#     (3) The name of the author may not be used to\n+#     endorse or promote products derived from this software without\n+#     specific prior written permission.\n+\n+# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n+# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+# DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\n+# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n+# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n+# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\n+# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+# POSSIBILITY OF SUCH DAMAGE.\n+\n+include $(top_srcdir)/fragment.am\n+\n+toolexeclib_LTLIBRARIES = libstdc++_libbacktrace.la\n+\n+ACLOCAL_AMFLAGS = -I ../.. -I ../../config\n+\n+AM_CPPFLAGS = -I $(top_srcdir)/../include -I $(top_srcdir)/../libgcc \\\n+\t-I ../../../libgcc -I .. -I $(top_srcdir) \\\n+\t-I $(top_srcdir)/../libbacktrace \\\n+\t-include $(top_srcdir)/src/libbacktrace/backtrace-rename.h \\\n+\t$(BACKTRACE_CPPFLAGS)\n+\n+WARN_FLAGS = -W -Wall -Wwrite-strings -Wmissing-format-attribute \\\n+\t     -Wcast-qual -Werror\n+C_WARN_FLAGS = $(WARN_FLAGS) -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wno-unused-but-set-variable\n+CXX_WARN_FLAGS = $(WARN_FLAGS) -Wno-unused-parameter\n+AM_CFLAGS = $(C_WARN_FLAGS)\n+AM_CFLAGS += $(EXTRA_CFLAGS)\n+AM_CXXFLAGS = $(CXX_WARN_FLAGS) -fno-rtti -fno-exceptions\n+AM_CXXFLAGS += $(EXTRA_CXXFLAGS)\n+\n+libstdc___libbacktrace_la_SOURCES = \\\n+\t../../../libbacktrace/backtrace.h \\\n+\t../../../libbacktrace/atomic.c \\\n+\t../../../libbacktrace/dwarf.c \\\n+\t../../../libbacktrace/fileline.c \\\n+\t../../../libbacktrace/internal.h \\\n+\t../../../libbacktrace/posix.c \\\n+\t../../../libbacktrace/sort.c \\\n+\t../../../libbacktrace/simple.c \\\n+\t../../../libbacktrace/state.c \\\n+\t../../../libiberty/cp-demangle.c\n+\n+FORMAT_FILES = \\\n+\t../../../libbacktrace/elf.c \\\n+\t../../../libbacktrace/unknown.c\n+\n+VIEW_FILES = \\\n+\t../../../libbacktrace/read.c \\\n+\t../../../libbacktrace/mmapio.c\n+\n+ALLOC_FILES = \\\n+\t../../../libbacktrace/alloc.c \\\n+\t../../../libbacktrace/mmap.c\n+\n+EXTRA_libstdc___libbacktrace_la_SOURCES = \\\n+\t$(FORMAT_FILES) \\\n+\t$(VIEW_FILES) \\\n+\t$(ALLOC_FILES)\n+\n+libstdc___libbacktrace_la_LIBADD = \\\n+\t$(FORMAT_FILE) \\\n+\t$(VIEW_FILE) \\\n+\t$(ALLOC_FILE)\n+\n+libstdc___libbacktrace_la_DEPENDENCIES = $(libstdc___libbacktrace_la_LIBADD)\n+\n+LTCOMPILE = \\\n+\t$(LIBTOOL) --tag CC --tag disable-shared \\\n+\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n+\t--mode=compile $(CC) $(TOPLEVEL_INCLUDES) \\\n+\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) $(EXTRA_CFLAGS)\n+\n+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n+\n+LINK = \\\n+\t$(LIBTOOL) --tag CC --tag disable-shared \\\n+\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n+\t--mode=link $(CC) \\\n+\t$(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CFLAGS) $(LTLDFLAGS) -o $@"}, {"sha": "35e5effc70d81ccd35d843174c4cb00730e31c84", "filename": "libstdc++-v3/src/libbacktrace/Makefile.in", "status": "added", "additions": 860, "deletions": 0, "changes": 860, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2FMakefile.in?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -0,0 +1,860 @@\n+# Makefile.in generated by automake 1.15.1 from Makefile.am.\n+# @configure_input@\n+\n+# Copyright (C) 1994-2017 Free Software Foundation, Inc.\n+\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+@SET_MAKE@\n+\n+# Makefile.am -- Backtrace in libstdc++ Makefile.\n+# Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+\n+# Redistribution and use in source and binary forms, with or without\n+# modification, are permitted provided that the following conditions are\n+# met:\n+\n+#     (1) Redistributions of source code must retain the above copyright\n+#     notice, this list of conditions and the following disclaimer. \n+\n+#     (2) Redistributions in binary form must reproduce the above copyright\n+#     notice, this list of conditions and the following disclaimer in\n+#     the documentation and/or other materials provided with the\n+#     distribution.  \n+\n+#     (3) The name of the author may not be used to\n+#     endorse or promote products derived from this software without\n+#     specific prior written permission.\n+\n+# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n+# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+# DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\n+# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n+# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n+# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\n+# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+# POSSIBILITY OF SUCH DAMAGE.\n+\n+VPATH = @srcdir@\n+am__is_gnu_make = { \\\n+  if test -z '$(MAKELEVEL)'; then \\\n+    false; \\\n+  elif test -n '$(MAKE_HOST)'; then \\\n+    true; \\\n+  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \\\n+    true; \\\n+  else \\\n+    false; \\\n+  fi; \\\n+}\n+am__make_running_with_option = \\\n+  case $${target_option-} in \\\n+      ?) ;; \\\n+      *) echo \"am__make_running_with_option: internal error: invalid\" \\\n+              \"target option '$${target_option-}' specified\" >&2; \\\n+         exit 1;; \\\n+  esac; \\\n+  has_opt=no; \\\n+  sane_makeflags=$$MAKEFLAGS; \\\n+  if $(am__is_gnu_make); then \\\n+    sane_makeflags=$$MFLAGS; \\\n+  else \\\n+    case $$MAKEFLAGS in \\\n+      *\\\\[\\ \\\t]*) \\\n+        bs=\\\\; \\\n+        sane_makeflags=`printf '%s\\n' \"$$MAKEFLAGS\" \\\n+          | sed \"s/$$bs$$bs[$$bs $$bs\t]*//g\"`;; \\\n+    esac; \\\n+  fi; \\\n+  skip_next=no; \\\n+  strip_trailopt () \\\n+  { \\\n+    flg=`printf '%s\\n' \"$$flg\" | sed \"s/$$1.*$$//\"`; \\\n+  }; \\\n+  for flg in $$sane_makeflags; do \\\n+    test $$skip_next = yes && { skip_next=no; continue; }; \\\n+    case $$flg in \\\n+      *=*|--*) continue;; \\\n+        -*I) strip_trailopt 'I'; skip_next=yes;; \\\n+      -*I?*) strip_trailopt 'I';; \\\n+        -*O) strip_trailopt 'O'; skip_next=yes;; \\\n+      -*O?*) strip_trailopt 'O';; \\\n+        -*l) strip_trailopt 'l'; skip_next=yes;; \\\n+      -*l?*) strip_trailopt 'l';; \\\n+      -[dEDm]) skip_next=yes;; \\\n+      -[JT]) skip_next=yes;; \\\n+    esac; \\\n+    case $$flg in \\\n+      *$$target_option*) has_opt=yes; break;; \\\n+    esac; \\\n+  done; \\\n+  test $$has_opt = yes\n+am__make_dryrun = (target_option=n; $(am__make_running_with_option))\n+am__make_keepgoing = (target_option=k; $(am__make_running_with_option))\n+pkgdatadir = $(datadir)/@PACKAGE@\n+pkgincludedir = $(includedir)/@PACKAGE@\n+pkglibdir = $(libdir)/@PACKAGE@\n+pkglibexecdir = $(libexecdir)/@PACKAGE@\n+am__cd = CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\" && cd\n+install_sh_DATA = $(install_sh) -c -m 644\n+install_sh_PROGRAM = $(install_sh) -c\n+install_sh_SCRIPT = $(install_sh) -c\n+INSTALL_HEADER = $(INSTALL_DATA)\n+transform = $(program_transform_name)\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+build_triplet = @build@\n+host_triplet = @host@\n+target_triplet = @target@\n+subdir = src/libbacktrace\n+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n+am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n+\t$(top_srcdir)/../config/enable.m4 \\\n+\t$(top_srcdir)/../config/futex.m4 \\\n+\t$(top_srcdir)/../config/hwcaps.m4 \\\n+\t$(top_srcdir)/../config/iconv.m4 \\\n+\t$(top_srcdir)/../config/lead-dot.m4 \\\n+\t$(top_srcdir)/../config/lib-ld.m4 \\\n+\t$(top_srcdir)/../config/lib-link.m4 \\\n+\t$(top_srcdir)/../config/lib-prefix.m4 \\\n+\t$(top_srcdir)/../config/lthostflags.m4 \\\n+\t$(top_srcdir)/../config/multi.m4 \\\n+\t$(top_srcdir)/../config/no-executables.m4 \\\n+\t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n+\t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n+\t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n+\t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n+\t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/crossconfig.m4 \\\n+\t$(top_srcdir)/linkage.m4 $(top_srcdir)/acinclude.m4 \\\n+\t$(top_srcdir)/../config/gc++filt.m4 \\\n+\t$(top_srcdir)/../config/tls.m4 $(top_srcdir)/../config/gthr.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 $(top_srcdir)/configure.ac\n+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n+\t$(ACLOCAL_M4)\n+DIST_COMMON = $(srcdir)/Makefile.am\n+CONFIG_HEADER = $(top_builddir)/config.h\n+CONFIG_CLEAN_FILES = backtrace-supported.h\n+CONFIG_CLEAN_VPATH_FILES =\n+am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n+am__vpath_adj = case $$p in \\\n+    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+    *) f=$$p;; \\\n+  esac;\n+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n+am__install_max = 40\n+am__nobase_strip_setup = \\\n+  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\n+am__nobase_strip = \\\n+  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\n+am__nobase_list = $(am__nobase_strip_setup); \\\n+  for p in $$list; do echo \"$$p $$p\"; done | \\\n+  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n+  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n+    if (++n[$$2] == $(am__install_max)) \\\n+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n+    END { for (dir in files) print dir, files[dir] }'\n+am__base_list = \\\n+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n+  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__uninstall_files_from_dir = { \\\n+  test -z \"$$files\" \\\n+    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n+    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n+         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n+  }\n+am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\"\n+LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n+am__DEPENDENCIES_1 =\n+am_libstdc___libbacktrace_la_OBJECTS = atomic.lo dwarf.lo fileline.lo \\\n+\tposix.lo sort.lo simple.lo state.lo cp-demangle.lo\n+libstdc___libbacktrace_la_OBJECTS =  \\\n+\t$(am_libstdc___libbacktrace_la_OBJECTS)\n+AM_V_lt = $(am__v_lt_@AM_V@)\n+am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)\n+am__v_lt_0 = --silent\n+am__v_lt_1 = \n+AM_V_P = $(am__v_P_@AM_V@)\n+am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)\n+am__v_P_0 = false\n+am__v_P_1 = :\n+AM_V_GEN = $(am__v_GEN_@AM_V@)\n+am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)\n+am__v_GEN_0 = @echo \"  GEN     \" $@;\n+am__v_GEN_1 = \n+AM_V_at = $(am__v_at_@AM_V@)\n+am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)\n+am__v_at_0 = @\n+am__v_at_1 = \n+DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)\n+depcomp =\n+am__depfiles_maybe =\n+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n+\t$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n+AM_V_CC = $(am__v_CC_@AM_V@)\n+am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)\n+am__v_CC_0 = @echo \"  CC      \" $@;\n+am__v_CC_1 = \n+CCLD = $(CC)\n+AM_V_CCLD = $(am__v_CCLD_@AM_V@)\n+am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)\n+am__v_CCLD_0 = @echo \"  CCLD    \" $@;\n+am__v_CCLD_1 = \n+SOURCES = $(libstdc___libbacktrace_la_SOURCES) \\\n+\t$(EXTRA_libstdc___libbacktrace_la_SOURCES)\n+am__can_run_installinfo = \\\n+  case $$AM_UPDATE_INFO_DIR in \\\n+    n|no|NO) false;; \\\n+    *) (install-info --version) >/dev/null 2>&1;; \\\n+  esac\n+am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)\n+# Read a list of newline-separated strings from the standard input,\n+# and print each of them once, without duplicates.  Input order is\n+# *not* preserved.\n+am__uniquify_input = $(AWK) '\\\n+  BEGIN { nonempty = 0; } \\\n+  { items[$$0] = 1; nonempty = 1; } \\\n+  END { if (nonempty) { for (i in items) print i; }; } \\\n+'\n+# Make sure the list of sources is unique.  This is necessary because,\n+# e.g., the same source file might be shared among _SOURCES variables\n+# for different programs/libraries.\n+am__define_uniq_tagged_files = \\\n+  list='$(am__tagged_files)'; \\\n+  unique=`for i in $$list; do \\\n+    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+  done | $(am__uniquify_input)`\n+ETAGS = etags\n+CTAGS = ctags\n+ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n+ACLOCAL = @ACLOCAL@\n+ALLOCATOR_H = @ALLOCATOR_H@\n+ALLOCATOR_NAME = @ALLOCATOR_NAME@\n+ALLOC_FILE = @ALLOC_FILE@\n+AMTAR = @AMTAR@\n+AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n+AR = @AR@\n+AS = @AS@\n+ATOMICITY_SRCDIR = @ATOMICITY_SRCDIR@\n+ATOMIC_FLAGS = @ATOMIC_FLAGS@\n+ATOMIC_WORD_SRCDIR = @ATOMIC_WORD_SRCDIR@\n+AUTOCONF = @AUTOCONF@\n+AUTOHEADER = @AUTOHEADER@\n+AUTOMAKE = @AUTOMAKE@\n+AWK = @AWK@\n+BACKTRACE_CPPFLAGS = @BACKTRACE_CPPFLAGS@\n+BACKTRACE_SUPPORTED = @BACKTRACE_SUPPORTED@\n+BACKTRACE_SUPPORTS_THREADS = @BACKTRACE_SUPPORTS_THREADS@\n+BACKTRACE_USES_MALLOC = @BACKTRACE_USES_MALLOC@\n+BASIC_FILE_CC = @BASIC_FILE_CC@\n+BASIC_FILE_H = @BASIC_FILE_H@\n+CC = @CC@\n+CCODECVT_CC = @CCODECVT_CC@\n+CCOLLATE_CC = @CCOLLATE_CC@\n+CCTYPE_CC = @CCTYPE_CC@\n+CFLAGS = @CFLAGS@\n+CLOCALE_CC = @CLOCALE_CC@\n+CLOCALE_H = @CLOCALE_H@\n+CLOCALE_INTERNAL_H = @CLOCALE_INTERNAL_H@\n+CMESSAGES_CC = @CMESSAGES_CC@\n+CMESSAGES_H = @CMESSAGES_H@\n+CMONEY_CC = @CMONEY_CC@\n+CNUMERIC_CC = @CNUMERIC_CC@\n+CPP = @CPP@\n+CPPFLAGS = @CPPFLAGS@\n+CPU_DEFINES_SRCDIR = @CPU_DEFINES_SRCDIR@\n+CPU_OPT_BITS_RANDOM = @CPU_OPT_BITS_RANDOM@\n+CPU_OPT_EXT_RANDOM = @CPU_OPT_EXT_RANDOM@\n+CSTDIO_H = @CSTDIO_H@\n+CTIME_CC = @CTIME_CC@\n+CTIME_H = @CTIME_H@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+CXXFILT = @CXXFILT@\n+CXXFLAGS = @CXXFLAGS@\n+CYGPATH_W = @CYGPATH_W@\n+C_INCLUDE_DIR = @C_INCLUDE_DIR@\n+DBLATEX = @DBLATEX@\n+DEBUG_FLAGS = @DEBUG_FLAGS@\n+DEFS = @DEFS@\n+DOT = @DOT@\n+DOXYGEN = @DOXYGEN@\n+DSYMUTIL = @DSYMUTIL@\n+DUMPBIN = @DUMPBIN@\n+ECHO_C = @ECHO_C@\n+ECHO_N = @ECHO_N@\n+ECHO_T = @ECHO_T@\n+EGREP = @EGREP@\n+ERROR_CONSTANTS_SRCDIR = @ERROR_CONSTANTS_SRCDIR@\n+EXEEXT = @EXEEXT@\n+EXTRA_CFLAGS = @EXTRA_CFLAGS@\n+EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n+FGREP = @FGREP@\n+FORMAT_FILE = @FORMAT_FILE@\n+FREESTANDING_FLAGS = @FREESTANDING_FLAGS@\n+GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n+GLIBCXX_LIBS = @GLIBCXX_LIBS@\n+GREP = @GREP@\n+HWCAP_CFLAGS = @HWCAP_CFLAGS@\n+INSTALL = @INSTALL@\n+INSTALL_DATA = @INSTALL_DATA@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@\n+INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+LD = @LD@\n+LDFLAGS = @LDFLAGS@\n+LIBICONV = @LIBICONV@\n+LIBOBJS = @LIBOBJS@\n+LIBS = @LIBS@\n+LIBTOOL = @LIBTOOL@\n+LIPO = @LIPO@\n+LN_S = @LN_S@\n+LONG_DOUBLE_128_FLAGS = @LONG_DOUBLE_128_FLAGS@\n+LONG_DOUBLE_ALT128_COMPAT_FLAGS = @LONG_DOUBLE_ALT128_COMPAT_FLAGS@\n+LONG_DOUBLE_COMPAT_FLAGS = @LONG_DOUBLE_COMPAT_FLAGS@\n+LTLIBICONV = @LTLIBICONV@\n+LTLIBOBJS = @LTLIBOBJS@\n+MAINT = @MAINT@\n+MAKEINFO = @MAKEINFO@\n+MKDIR_P = @MKDIR_P@\n+NM = @NM@\n+NMEDIT = @NMEDIT@\n+OBJDUMP = @OBJDUMP@\n+OBJEXT = @OBJEXT@\n+OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n+OPT_LDFLAGS = @OPT_LDFLAGS@\n+OS_INC_SRCDIR = @OS_INC_SRCDIR@\n+OTOOL = @OTOOL@\n+OTOOL64 = @OTOOL64@\n+PACKAGE = @PACKAGE@\n+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n+PACKAGE_NAME = @PACKAGE_NAME@\n+PACKAGE_STRING = @PACKAGE_STRING@\n+PACKAGE_TARNAME = @PACKAGE_TARNAME@\n+PACKAGE_URL = @PACKAGE_URL@\n+PACKAGE_VERSION = @PACKAGE_VERSION@\n+PATH_SEPARATOR = @PATH_SEPARATOR@\n+PDFLATEX = @PDFLATEX@\n+RANLIB = @RANLIB@\n+SECTION_FLAGS = @SECTION_FLAGS@\n+SECTION_LDFLAGS = @SECTION_LDFLAGS@\n+SED = @SED@\n+SET_MAKE = @SET_MAKE@\n+SHELL = @SHELL@\n+STRIP = @STRIP@\n+SYMVER_FILE = @SYMVER_FILE@\n+TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n+USE_NLS = @USE_NLS@\n+VERSION = @VERSION@\n+VIEW_FILE = @VIEW_FILE@\n+VTV_CXXFLAGS = @VTV_CXXFLAGS@\n+VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n+VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@\n+WARN_FLAGS = -W -Wall -Wwrite-strings -Wmissing-format-attribute \\\n+\t     -Wcast-qual -Werror\n+\n+XMLCATALOG = @XMLCATALOG@\n+XMLLINT = @XMLLINT@\n+XSLTPROC = @XSLTPROC@\n+XSL_STYLE_DIR = @XSL_STYLE_DIR@\n+abs_builddir = @abs_builddir@\n+abs_srcdir = @abs_srcdir@\n+abs_top_builddir = @abs_top_builddir@\n+abs_top_srcdir = @abs_top_srcdir@\n+ac_ct_CC = @ac_ct_CC@\n+ac_ct_CXX = @ac_ct_CXX@\n+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@\n+am__leading_dot = @am__leading_dot@\n+am__tar = @am__tar@\n+am__untar = @am__untar@\n+baseline_dir = @baseline_dir@\n+baseline_subdir_switch = @baseline_subdir_switch@\n+bindir = @bindir@\n+build = @build@\n+build_alias = @build_alias@\n+build_cpu = @build_cpu@\n+build_os = @build_os@\n+build_vendor = @build_vendor@\n+builddir = @builddir@\n+check_msgfmt = @check_msgfmt@\n+datadir = @datadir@\n+datarootdir = @datarootdir@\n+docdir = @docdir@\n+dvidir = @dvidir@\n+enable_shared = @enable_shared@\n+enable_static = @enable_static@\n+exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n+glibcxx_MOFILES = @glibcxx_MOFILES@\n+glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n+glibcxx_POFILES = @glibcxx_POFILES@\n+glibcxx_builddir = @glibcxx_builddir@\n+glibcxx_compiler_pic_flag = @glibcxx_compiler_pic_flag@\n+glibcxx_compiler_shared_flag = @glibcxx_compiler_shared_flag@\n+glibcxx_cxx98_abi = @glibcxx_cxx98_abi@\n+glibcxx_localedir = @glibcxx_localedir@\n+glibcxx_lt_pic_flag = @glibcxx_lt_pic_flag@\n+glibcxx_prefixdir = @glibcxx_prefixdir@\n+glibcxx_srcdir = @glibcxx_srcdir@\n+glibcxx_toolexecdir = @glibcxx_toolexecdir@\n+glibcxx_toolexeclibdir = @glibcxx_toolexeclibdir@\n+gxx_include_dir = @gxx_include_dir@\n+host = @host@\n+host_alias = @host_alias@\n+host_cpu = @host_cpu@\n+host_os = @host_os@\n+host_vendor = @host_vendor@\n+htmldir = @htmldir@\n+includedir = @includedir@\n+infodir = @infodir@\n+install_sh = @install_sh@\n+libdir = @libdir@\n+libexecdir = @libexecdir@\n+libtool_VERSION = @libtool_VERSION@\n+localedir = @localedir@\n+localstatedir = @localstatedir@\n+lt_host_flags = @lt_host_flags@\n+mandir = @mandir@\n+mkdir_p = @mkdir_p@\n+multi_basedir = @multi_basedir@\n+oldincludedir = @oldincludedir@\n+pdfdir = @pdfdir@\n+port_specific_symbol_files = @port_specific_symbol_files@\n+prefix = @prefix@\n+program_transform_name = @program_transform_name@\n+psdir = @psdir@\n+python_mod_dir = @python_mod_dir@\n+sbindir = @sbindir@\n+sharedstatedir = @sharedstatedir@\n+srcdir = @srcdir@\n+sysconfdir = @sysconfdir@\n+target = @target@\n+target_alias = @target_alias@\n+target_cpu = @target_cpu@\n+target_os = @target_os@\n+target_vendor = @target_vendor@\n+thread_header = @thread_header@\n+tmake_file = @tmake_file@\n+top_build_prefix = @top_build_prefix@\n+top_builddir = @top_builddir@\n+top_srcdir = @top_srcdir@\n+toplevel_builddir = @toplevel_builddir@\n+toplevel_srcdir = @toplevel_srcdir@\n+\n+# May be used by various substitution variables.\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n+MAINT_CHARSET = latin1\n+mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n+PWD_COMMAND = $${PWDCMD-pwd}\n+STAMP = echo timestamp >\n+toolexecdir = $(glibcxx_toolexecdir)\n+toolexeclibdir = $(glibcxx_toolexeclibdir)\n+@ENABLE_WERROR_FALSE@WERROR_FLAG = \n+@ENABLE_WERROR_TRUE@WERROR_FLAG = -Werror\n+@ENABLE_EXTERN_TEMPLATE_FALSE@XTEMPLATE_FLAGS = \n+@ENABLE_EXTERN_TEMPLATE_TRUE@XTEMPLATE_FLAGS = -fno-implicit-templates\n+@GLIBCXX_LDBL_ALT128_COMPAT_FALSE@LDBL_128_FLAGS = \n+@GLIBCXX_LDBL_ALT128_COMPAT_TRUE@LDBL_128_FLAGS = $(LONG_DOUBLE_128_FLAGS)\n+\n+# These bits are all figured out from configure.  Look in acinclude.m4\n+# or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n+CONFIG_CXXFLAGS = \\\n+\t$(SECTION_FLAGS) $(HWCAP_CFLAGS) -frandom-seed=$@ $(LDBL_128_FLAGS)\n+\n+WARN_CXXFLAGS = \\\n+\t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once \n+\n+AM_CPPFLAGS = -I $(top_srcdir)/../include -I $(top_srcdir)/../libgcc \\\n+\t-I ../../../libgcc -I .. -I $(top_srcdir) \\\n+\t-I $(top_srcdir)/../libbacktrace \\\n+\t-include $(top_srcdir)/src/libbacktrace/backtrace-rename.h \\\n+\t$(BACKTRACE_CPPFLAGS)\n+\n+toolexeclib_LTLIBRARIES = libstdc++_libbacktrace.la\n+ACLOCAL_AMFLAGS = -I ../.. -I ../../config\n+C_WARN_FLAGS = $(WARN_FLAGS) -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wno-unused-but-set-variable\n+CXX_WARN_FLAGS = $(WARN_FLAGS) -Wno-unused-parameter\n+AM_CFLAGS = $(C_WARN_FLAGS) $(EXTRA_CFLAGS)\n+AM_CXXFLAGS = $(CXX_WARN_FLAGS) -fno-rtti -fno-exceptions \\\n+\t$(EXTRA_CXXFLAGS)\n+libstdc___libbacktrace_la_SOURCES = \\\n+\t../../../libbacktrace/backtrace.h \\\n+\t../../../libbacktrace/atomic.c \\\n+\t../../../libbacktrace/dwarf.c \\\n+\t../../../libbacktrace/fileline.c \\\n+\t../../../libbacktrace/internal.h \\\n+\t../../../libbacktrace/posix.c \\\n+\t../../../libbacktrace/sort.c \\\n+\t../../../libbacktrace/simple.c \\\n+\t../../../libbacktrace/state.c \\\n+\t../../../libiberty/cp-demangle.c\n+\n+FORMAT_FILES = \\\n+\t../../../libbacktrace/elf.c \\\n+\t../../../libbacktrace/unknown.c\n+\n+VIEW_FILES = \\\n+\t../../../libbacktrace/read.c \\\n+\t../../../libbacktrace/mmapio.c\n+\n+ALLOC_FILES = \\\n+\t../../../libbacktrace/alloc.c \\\n+\t../../../libbacktrace/mmap.c\n+\n+EXTRA_libstdc___libbacktrace_la_SOURCES = \\\n+\t$(FORMAT_FILES) \\\n+\t$(VIEW_FILES) \\\n+\t$(ALLOC_FILES)\n+\n+libstdc___libbacktrace_la_LIBADD = \\\n+\t$(FORMAT_FILE) \\\n+\t$(VIEW_FILE) \\\n+\t$(ALLOC_FILE)\n+\n+libstdc___libbacktrace_la_DEPENDENCIES = $(libstdc___libbacktrace_la_LIBADD)\n+LTCOMPILE = \\\n+\t$(LIBTOOL) --tag CC --tag disable-shared \\\n+\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n+\t--mode=compile $(CC) $(TOPLEVEL_INCLUDES) \\\n+\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) $(EXTRA_CFLAGS)\n+\n+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n+LINK = \\\n+\t$(LIBTOOL) --tag CC --tag disable-shared \\\n+\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n+\t--mode=link $(CC) \\\n+\t$(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CFLAGS) $(LTLDFLAGS) -o $@\n+\n+all: all-am\n+\n+.SUFFIXES:\n+.SUFFIXES: .c .lo .o .obj\n+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/fragment.am $(am__configure_deps)\n+\t@for dep in $?; do \\\n+\t  case '$(am__configure_deps)' in \\\n+\t    *$$dep*) \\\n+\t      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \\\n+\t        && { if test -f $@; then exit 0; else break; fi; }; \\\n+\t      exit 1;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps src/libbacktrace/Makefile'; \\\n+\t$(am__cd) $(top_srcdir) && \\\n+\t  $(AUTOMAKE) --foreign --ignore-deps src/libbacktrace/Makefile\n+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n+\t@case '$?' in \\\n+\t  *config.status*) \\\n+\t    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \\\n+\t  *) \\\n+\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n+\t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n+\tesac;\n+$(top_srcdir)/fragment.am $(am__empty):\n+\n+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+\n+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+$(am__aclocal_m4_deps):\n+backtrace-supported.h: $(top_builddir)/config.status $(srcdir)/backtrace-supported.h.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@\n+\n+install-toolexeclibLTLIBRARIES: $(toolexeclib_LTLIBRARIES)\n+\t@$(NORMAL_INSTALL)\n+\t@list='$(toolexeclib_LTLIBRARIES)'; test -n \"$(toolexeclibdir)\" || list=; \\\n+\tlist2=; for p in $$list; do \\\n+\t  if test -f $$p; then \\\n+\t    list2=\"$$list2 $$p\"; \\\n+\t  else :; fi; \\\n+\tdone; \\\n+\ttest -z \"$$list2\" || { \\\n+\t  echo \" $(MKDIR_P) '$(DESTDIR)$(toolexeclibdir)'\"; \\\n+\t  $(MKDIR_P) \"$(DESTDIR)$(toolexeclibdir)\" || exit 1; \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(toolexeclibdir)'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 \"$(DESTDIR)$(toolexeclibdir)\"; \\\n+\t}\n+\n+uninstall-toolexeclibLTLIBRARIES:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(toolexeclib_LTLIBRARIES)'; test -n \"$(toolexeclibdir)\" || list=; \\\n+\tfor p in $$list; do \\\n+\t  $(am__strip_dir) \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(toolexeclibdir)/$$f'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f \"$(DESTDIR)$(toolexeclibdir)/$$f\"; \\\n+\tdone\n+\n+clean-toolexeclibLTLIBRARIES:\n+\t-test -z \"$(toolexeclib_LTLIBRARIES)\" || rm -f $(toolexeclib_LTLIBRARIES)\n+\t@list='$(toolexeclib_LTLIBRARIES)'; \\\n+\tlocs=`for p in $$list; do echo $$p; done | \\\n+\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n+\t      sort -u`; \\\n+\ttest -z \"$$locs\" || { \\\n+\t  echo rm -f $${locs}; \\\n+\t  rm -f $${locs}; \\\n+\t}\n+\n+libstdc++_libbacktrace.la: $(libstdc___libbacktrace_la_OBJECTS) $(libstdc___libbacktrace_la_DEPENDENCIES) $(EXTRA_libstdc___libbacktrace_la_DEPENDENCIES) \n+\t$(AM_V_CCLD)$(LINK) -rpath $(toolexeclibdir) $(libstdc___libbacktrace_la_OBJECTS) $(libstdc___libbacktrace_la_LIBADD) $(LIBS)\n+\n+mostlyclean-compile:\n+\t-rm -f *.$(OBJEXT)\n+\n+distclean-compile:\n+\t-rm -f *.tab.c\n+\n+.c.o:\n+\t$(AM_V_CC)$(COMPILE) -c -o $@ $<\n+\n+.c.obj:\n+\t$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n+\n+.c.lo:\n+\t$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<\n+\n+atomic.lo: ../../../libbacktrace/atomic.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atomic.lo `test -f '../../../libbacktrace/atomic.c' || echo '$(srcdir)/'`../../../libbacktrace/atomic.c\n+\n+dwarf.lo: ../../../libbacktrace/dwarf.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dwarf.lo `test -f '../../../libbacktrace/dwarf.c' || echo '$(srcdir)/'`../../../libbacktrace/dwarf.c\n+\n+fileline.lo: ../../../libbacktrace/fileline.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fileline.lo `test -f '../../../libbacktrace/fileline.c' || echo '$(srcdir)/'`../../../libbacktrace/fileline.c\n+\n+posix.lo: ../../../libbacktrace/posix.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o posix.lo `test -f '../../../libbacktrace/posix.c' || echo '$(srcdir)/'`../../../libbacktrace/posix.c\n+\n+sort.lo: ../../../libbacktrace/sort.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sort.lo `test -f '../../../libbacktrace/sort.c' || echo '$(srcdir)/'`../../../libbacktrace/sort.c\n+\n+simple.lo: ../../../libbacktrace/simple.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o simple.lo `test -f '../../../libbacktrace/simple.c' || echo '$(srcdir)/'`../../../libbacktrace/simple.c\n+\n+state.lo: ../../../libbacktrace/state.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o state.lo `test -f '../../../libbacktrace/state.c' || echo '$(srcdir)/'`../../../libbacktrace/state.c\n+\n+cp-demangle.lo: ../../../libiberty/cp-demangle.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cp-demangle.lo `test -f '../../../libiberty/cp-demangle.c' || echo '$(srcdir)/'`../../../libiberty/cp-demangle.c\n+\n+elf.lo: ../../../libbacktrace/elf.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o elf.lo `test -f '../../../libbacktrace/elf.c' || echo '$(srcdir)/'`../../../libbacktrace/elf.c\n+\n+unknown.lo: ../../../libbacktrace/unknown.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unknown.lo `test -f '../../../libbacktrace/unknown.c' || echo '$(srcdir)/'`../../../libbacktrace/unknown.c\n+\n+read.lo: ../../../libbacktrace/read.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o read.lo `test -f '../../../libbacktrace/read.c' || echo '$(srcdir)/'`../../../libbacktrace/read.c\n+\n+mmapio.lo: ../../../libbacktrace/mmapio.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmapio.lo `test -f '../../../libbacktrace/mmapio.c' || echo '$(srcdir)/'`../../../libbacktrace/mmapio.c\n+\n+alloc.lo: ../../../libbacktrace/alloc.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o alloc.lo `test -f '../../../libbacktrace/alloc.c' || echo '$(srcdir)/'`../../../libbacktrace/alloc.c\n+\n+mmap.lo: ../../../libbacktrace/mmap.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmap.lo `test -f '../../../libbacktrace/mmap.c' || echo '$(srcdir)/'`../../../libbacktrace/mmap.c\n+\n+mostlyclean-libtool:\n+\t-rm -f *.lo\n+\n+clean-libtool:\n+\t-rm -rf .libs _libs\n+\n+ID: $(am__tagged_files)\n+\t$(am__define_uniq_tagged_files); mkid -fID $$unique\n+tags: tags-am\n+TAGS: tags\n+\n+tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n+\tset x; \\\n+\there=`pwd`; \\\n+\t$(am__define_uniq_tagged_files); \\\n+\tshift; \\\n+\tif test -z \"$(ETAGS_ARGS)$$*$$unique\"; then :; else \\\n+\t  test -n \"$$unique\" || unique=$$empty_fix; \\\n+\t  if test $$# -gt 0; then \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      \"$$@\" $$unique; \\\n+\t  else \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      $$unique; \\\n+\t  fi; \\\n+\tfi\n+ctags: ctags-am\n+\n+CTAGS: ctags\n+ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n+\t$(am__define_uniq_tagged_files); \\\n+\ttest -z \"$(CTAGS_ARGS)$$unique\" \\\n+\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n+\t     $$unique\n+\n+GTAGS:\n+\there=`$(am__cd) $(top_builddir) && pwd` \\\n+\t  && $(am__cd) $(top_srcdir) \\\n+\t  && gtags -i $(GTAGS_ARGS) \"$$here\"\n+cscopelist: cscopelist-am\n+\n+cscopelist-am: $(am__tagged_files)\n+\tlist='$(am__tagged_files)'; \\\n+\tcase \"$(srcdir)\" in \\\n+\t  [\\\\/]* | ?:[\\\\/]*) sdir=\"$(srcdir)\" ;; \\\n+\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n+\tesac; \\\n+\tfor i in $$list; do \\\n+\t  if test -f \"$$i\"; then \\\n+\t    echo \"$(subdir)/$$i\"; \\\n+\t  else \\\n+\t    echo \"$$sdir/$$i\"; \\\n+\t  fi; \\\n+\tdone >> $(top_builddir)/cscope.files\n+\n+distclean-tags:\n+\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n+check-am: all-am\n+check: check-am\n+all-am: Makefile $(LTLIBRARIES)\n+installdirs:\n+\tfor dir in \"$(DESTDIR)$(toolexeclibdir)\"; do \\\n+\t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n+\tdone\n+install: install-am\n+install-exec: install-exec-am\n+install-data: install-data-am\n+uninstall: uninstall-am\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+\n+installcheck: installcheck-am\n+install-strip:\n+\tif test -z '$(STRIP)'; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t      install; \\\n+\telse \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n+\tfi\n+mostlyclean-generic:\n+\n+clean-generic:\n+\n+distclean-generic:\n+\t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n+\n+maintainer-clean-generic:\n+\t@echo \"This command is intended for maintainers to use\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+clean: clean-am\n+\n+clean-am: clean-generic clean-libtool clean-toolexeclibLTLIBRARIES \\\n+\tmostlyclean-am\n+\n+distclean: distclean-am\n+\t-rm -f Makefile\n+distclean-am: clean-am distclean-compile distclean-generic \\\n+\tdistclean-tags\n+\n+dvi: dvi-am\n+\n+dvi-am:\n+\n+html: html-am\n+\n+html-am:\n+\n+info: info-am\n+\n+info-am:\n+\n+install-data-am:\n+\n+install-dvi: install-dvi-am\n+\n+install-dvi-am:\n+\n+install-exec-am: install-toolexeclibLTLIBRARIES\n+\n+install-html: install-html-am\n+\n+install-html-am:\n+\n+install-info: install-info-am\n+\n+install-info-am:\n+\n+install-man:\n+\n+install-pdf: install-pdf-am\n+\n+install-pdf-am:\n+\n+install-ps: install-ps-am\n+\n+install-ps-am:\n+\n+installcheck-am:\n+\n+maintainer-clean: maintainer-clean-am\n+\t-rm -f Makefile\n+maintainer-clean-am: distclean-am maintainer-clean-generic\n+\n+mostlyclean: mostlyclean-am\n+\n+mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n+\tmostlyclean-libtool\n+\n+pdf: pdf-am\n+\n+pdf-am:\n+\n+ps: ps-am\n+\n+ps-am:\n+\n+uninstall-am: uninstall-toolexeclibLTLIBRARIES\n+\n+.MAKE: install-am install-strip\n+\n+.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \\\n+\tclean-libtool clean-toolexeclibLTLIBRARIES cscopelist-am ctags \\\n+\tctags-am distclean distclean-compile distclean-generic \\\n+\tdistclean-libtool distclean-tags dvi dvi-am html html-am info \\\n+\tinfo-am install install-am install-data install-data-am \\\n+\tinstall-dvi install-dvi-am install-exec install-exec-am \\\n+\tinstall-html install-html-am install-info install-info-am \\\n+\tinstall-man install-pdf install-pdf-am install-ps \\\n+\tinstall-ps-am install-strip install-toolexeclibLTLIBRARIES \\\n+\tinstallcheck installcheck-am installdirs maintainer-clean \\\n+\tmaintainer-clean-generic mostlyclean mostlyclean-compile \\\n+\tmostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \\\n+\ttags tags-am uninstall uninstall-am \\\n+\tuninstall-toolexeclibLTLIBRARIES\n+\n+.PRECIOUS: Makefile\n+\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"}, {"sha": "7a59f166e624e5df9d840d1e9e24d0752a96123b", "filename": "libstdc++-v3/src/libbacktrace/backtrace-rename.h", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2Fbacktrace-rename.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2Fbacktrace-rename.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2Fbacktrace-rename.h?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -0,0 +1,41 @@\n+/* Ensure we don't pollute application namespace.  */\n+#define backtrace_alloc __glibcxx_backtrace_alloc\n+#define backtrace_close __glibcxx_backtrace_close\n+#define backtrace_create_state __glibcxx_backtrace_create_state\n+#define backtrace_dwarf_add __glibcxx_backtrace_dwarf_add\n+#define backtrace_free __glibcxx_backtrace_free\n+#define backtrace_get_view __glibcxx_backtrace_get_view\n+#define backtrace_initialize __glibcxx_backtrace_initialize\n+#define backtrace_open __glibcxx_backtrace_open\n+#define backtrace_pcinfo __glibcxx_backtrace_pcinfo\n+#define backtrace_qsort __glibcxx_backtrace_qsort\n+#define backtrace_release_view __glibcxx_backtrace_release_view\n+#define backtrace_simple __glibcxx_backtrace_simple\n+#define backtrace_state __glibcxx_backtrace_state\n+#define backtrace_syminfo __glibcxx_backtrace_syminfo\n+#define backtrace_uncompress_lzma __glibcxx_backtrace_uncompress_lzma\n+#define backtrace_uncompress_zdebug __glibcxx_backtrace_uncompress_zdebug\n+#define backtrace_vector_finish __glibcxx_backtrace_vector_finish\n+#define backtrace_vector_grow __glibcxx_backtrace_vector_grow\n+#define backtrace_vector_release __glibcxx_backtrace_vector_release\n+#define backtrace_syminfo_to_full_callback __glibcxx_backtrace_syminfo_to_full_callback\n+#define backtrace_syminfo_to_full_error_callback __glibcxx_backtrace_syminfo_to_full_error_callback\n+\n+#define cplus_demangle_builtin_types __glibcxx_cplus_demangle_builtin_types\n+#define cplus_demangle_fill_ctor __glibcxx_cplus_demangle_fill_ctor\n+#define cplus_demangle_fill_dtor __glibcxx_cplus_demangle_fill_dtor\n+#define cplus_demangle_fill_extended_operator __glibcxx_cplus_demangle_fill_extended_operator\n+#define cplus_demangle_fill_name __glibcxx_cplus_demangle_fill_name\n+#define cplus_demangle_init_info __glibcxx_cplus_demangle_init_info\n+#define cplus_demangle_mangled_name __glibcxx_cplus_demangle_mangled_name\n+#define cplus_demangle_operators __glibcxx_cplus_demangle_operators\n+#define cplus_demangle_print __glibcxx_cplus_demangle_print\n+#define cplus_demangle_print_callback __glibcxx_cplus_demangle_print_callback\n+#define cplus_demangle_type __glibcxx_cplus_demangle_type\n+#define cplus_demangle_v3 __glibcxx_cplus_demangle_v3\n+#define cplus_demangle_v3_callback __glibcxx_cplus_demangle_v3_callback\n+#define is_gnu_v3_mangled_ctor __glibcxx_is_gnu_v3_mangled_ctor\n+#define is_gnu_v3_mangled_dtor __glibcxx_is_gnu_v3_mangled_dtor\n+#define java_demangle_v3 __glibcxx_java_demangle_v3\n+#define java_demangle_v3_callback __glibcxx_java_demangle_v3_callback\n+"}, {"sha": "a9a32d774947d3616d9c6025b0e709d3b44df7f1", "filename": "libstdc++-v3/src/libbacktrace/backtrace-supported.h.in", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2Fbacktrace-supported.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2Fbacktrace-supported.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2Fbacktrace-supported.h.in?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -0,0 +1,61 @@\n+/* backtrace-supported.h.in -- Whether stack backtrace is supported.\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Written by Ian Lance Taylor, Google.\n+\n+Redistribution and use in source and binary forms, with or without\n+modification, are permitted provided that the following conditions are\n+met:\n+\n+    (1) Redistributions of source code must retain the above copyright\n+    notice, this list of conditions and the following disclaimer.\n+\n+    (2) Redistributions in binary form must reproduce the above copyright\n+    notice, this list of conditions and the following disclaimer in\n+    the documentation and/or other materials provided with the\n+    distribution.\n+\n+    (3) The name of the author may not be used to\n+    endorse or promote products derived from this software without\n+    specific prior written permission.\n+\n+THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n+IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\n+INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n+HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n+STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\n+IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+POSSIBILITY OF SUCH DAMAGE.  */\n+\n+/* The file backtrace-supported.h.in is used by configure to generate\n+   the file backtrace-supported.h.  The file backtrace-supported.h may\n+   be #include'd to see whether the backtrace library will be able to\n+   get a backtrace and produce symbolic information.  */\n+\n+\n+/* BACKTRACE_SUPPORTED will be #define'd as 1 if the backtrace library\n+   should work, 0 if it will not.  Libraries may #include this to make\n+   other arrangements.  */\n+\n+#define BACKTRACE_SUPPORTED @BACKTRACE_SUPPORTED@\n+\n+/* BACKTRACE_USES_MALLOC will be #define'd as 1 if the backtrace\n+   library will call malloc as it works, 0 if it will call mmap\n+   instead.  This may be used to determine whether it is safe to call\n+   the backtrace functions from a signal handler.  In general this\n+   only applies to calls like backtrace and backtrace_pcinfo.  It does\n+   not apply to backtrace_simple, which never calls malloc.  It does\n+   not apply to backtrace_print, which always calls fprintf and\n+   therefore malloc.  */\n+\n+#define BACKTRACE_USES_MALLOC @BACKTRACE_USES_MALLOC@\n+\n+/* BACKTRACE_SUPPORTS_THREADS will be #define'd as 1 if the backtrace\n+   library is configured with threading support, 0 if not.  If this is\n+   0, the threaded parameter to backtrace_create_state must be passed\n+   as 0.  */\n+\n+#define BACKTRACE_SUPPORTS_THREADS @BACKTRACE_SUPPORTS_THREADS@"}, {"sha": "cdb416e6406129911d2a149d2f4339dd86ebc3dc", "filename": "libstdc++-v3/src/libbacktrace/config.h.in", "status": "added", "additions": 184, "deletions": 0, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2Fconfig.h.in?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -0,0 +1,184 @@\n+/* config.h.in.  Generated from configure.ac by autoheader.  */\n+\n+/* ELF size: 32 or 64 */\n+#undef BACKTRACE_ELF_SIZE\n+\n+/* XCOFF size: 32 or 64 */\n+#undef BACKTRACE_XCOFF_SIZE\n+\n+/* Define to 1 if you have the __atomic functions */\n+#undef HAVE_ATOMIC_FUNCTIONS\n+\n+/* Define to 1 if you have the `clock_gettime' function. */\n+#undef HAVE_CLOCK_GETTIME\n+\n+/* Define to 1 if you have the declaration of `getpagesize', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_GETPAGESIZE\n+\n+/* Define to 1 if you have the declaration of `strnlen', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_STRNLEN\n+\n+/* Define to 1 if you have the <dlfcn.h> header file. */\n+#undef HAVE_DLFCN_H\n+\n+/* Define if dl_iterate_phdr is available. */\n+#undef HAVE_DL_ITERATE_PHDR\n+\n+/* Define to 1 if you have the fcntl function */\n+#undef HAVE_FCNTL\n+\n+/* Define if getexecname is available. */\n+#undef HAVE_GETEXECNAME\n+\n+/* Define if _Unwind_GetIPInfo is available. */\n+#undef HAVE_GETIPINFO\n+\n+/* Define to 1 if you have the <inttypes.h> header file. */\n+#undef HAVE_INTTYPES_H\n+\n+/* Define to 1 if you have KERN_PROC and KERN_PROC_PATHNAME in <sys/sysctl.h>.\n+   */\n+#undef HAVE_KERN_PROC\n+\n+/* Define to 1 if you have KERN_PROCARGS and KERN_PROC_PATHNAME in\n+   <sys/sysctl.h>. */\n+#undef HAVE_KERN_PROC_ARGS\n+\n+/* Define if -llzma is available. */\n+#undef HAVE_LIBLZMA\n+\n+/* Define to 1 if you have the <link.h> header file. */\n+#undef HAVE_LINK_H\n+\n+/* Define if AIX loadquery is available. */\n+#undef HAVE_LOADQUERY\n+\n+/* Define to 1 if you have the `lstat' function. */\n+#undef HAVE_LSTAT\n+\n+/* Define to 1 if you have the <mach-o/dyld.h> header file. */\n+#undef HAVE_MACH_O_DYLD_H\n+\n+/* Define to 1 if you have the <memory.h> header file. */\n+#undef HAVE_MEMORY_H\n+\n+/* Define to 1 if you have the `readlink' function. */\n+#undef HAVE_READLINK\n+\n+/* Define to 1 if you have the <stdint.h> header file. */\n+#undef HAVE_STDINT_H\n+\n+/* Define to 1 if you have the <stdlib.h> header file. */\n+#undef HAVE_STDLIB_H\n+\n+/* Define to 1 if you have the <strings.h> header file. */\n+#undef HAVE_STRINGS_H\n+\n+/* Define to 1 if you have the <string.h> header file. */\n+#undef HAVE_STRING_H\n+\n+/* Define to 1 if you have the __sync functions */\n+#undef HAVE_SYNC_FUNCTIONS\n+\n+/* Define to 1 if you have the <sys/ldr.h> header file. */\n+#undef HAVE_SYS_LDR_H\n+\n+/* Define to 1 if you have the <sys/mman.h> header file. */\n+#undef HAVE_SYS_MMAN_H\n+\n+/* Define to 1 if you have the <sys/stat.h> header file. */\n+#undef HAVE_SYS_STAT_H\n+\n+/* Define to 1 if you have the <sys/types.h> header file. */\n+#undef HAVE_SYS_TYPES_H\n+\n+/* Define to 1 if you have the <unistd.h> header file. */\n+#undef HAVE_UNISTD_H\n+\n+/* Define if -lz is available. */\n+#undef HAVE_ZLIB\n+\n+/* Define to the sub-directory in which libtool stores uninstalled libraries.\n+   */\n+#undef LT_OBJDIR\n+\n+/* Define to the address where bug reports for this package should be sent. */\n+#undef PACKAGE_BUGREPORT\n+\n+/* Define to the full name of this package. */\n+#undef PACKAGE_NAME\n+\n+/* Define to the full name and version of this package. */\n+#undef PACKAGE_STRING\n+\n+/* Define to the one symbol short name of this package. */\n+#undef PACKAGE_TARNAME\n+\n+/* Define to the home page for this package. */\n+#undef PACKAGE_URL\n+\n+/* Define to the version of this package. */\n+#undef PACKAGE_VERSION\n+\n+/* The size of `char', as computed by sizeof. */\n+#undef SIZEOF_CHAR\n+\n+/* The size of `int', as computed by sizeof. */\n+#undef SIZEOF_INT\n+\n+/* The size of `long', as computed by sizeof. */\n+#undef SIZEOF_LONG\n+\n+/* The size of `short', as computed by sizeof. */\n+#undef SIZEOF_SHORT\n+\n+/* The size of `void *', as computed by sizeof. */\n+#undef SIZEOF_VOID_P\n+\n+/* Define to 1 if you have the ANSI C header files. */\n+#undef STDC_HEADERS\n+\n+/* Enable extensions on AIX 3, Interix.  */\n+#ifndef _ALL_SOURCE\n+# undef _ALL_SOURCE\n+#endif\n+/* Enable GNU extensions on systems that have them.  */\n+#ifndef _GNU_SOURCE\n+# undef _GNU_SOURCE\n+#endif\n+/* Enable threading extensions on Solaris.  */\n+#ifndef _POSIX_PTHREAD_SEMANTICS\n+# undef _POSIX_PTHREAD_SEMANTICS\n+#endif\n+/* Enable extensions on HP NonStop.  */\n+#ifndef _TANDEM_SOURCE\n+# undef _TANDEM_SOURCE\n+#endif\n+/* Enable general extensions on Solaris.  */\n+#ifndef __EXTENSIONS__\n+# undef __EXTENSIONS__\n+#endif\n+\n+\n+/* Enable large inode numbers on Mac OS X 10.5.  */\n+#ifndef _DARWIN_USE_64_BIT_INODE\n+# define _DARWIN_USE_64_BIT_INODE 1\n+#endif\n+\n+/* Number of bits in a file offset, on hosts where this is settable. */\n+#undef _FILE_OFFSET_BITS\n+\n+/* Define for large files, on AIX-style hosts. */\n+#undef _LARGE_FILES\n+\n+/* Define to 1 if on MINIX. */\n+#undef _MINIX\n+\n+/* Define to 2 if the system does not provide POSIX.1 features except with\n+   this defined. */\n+#undef _POSIX_1_SOURCE\n+\n+/* Define to 1 if you need to in order for `stat' and other things to work. */\n+#undef _POSIX_SOURCE"}, {"sha": "0bbcabd8fae94b2cdd429f3ebb1bce0e636cf78e", "filename": "libstdc++-v3/testsuite/20_util/stacktrace/entry.cc", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fstacktrace%2Fentry.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fstacktrace%2Fentry.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fstacktrace%2Fentry.cc?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -0,0 +1,53 @@\n+// { dg-options \"-std=gnu++23 -lstdc++_libbacktrace\" }\n+// { dg-do run { target c++23 } }\n+// { dg-require-effective-target stacktrace }\n+\n+#include <stacktrace>\n+#include \"testsuite_hooks.h\"\n+\n+static_assert( std::regular<std::stacktrace_entry> );\n+static_assert( std::three_way_comparable<std::stacktrace_entry> );\n+\n+constexpr bool\n+test_constexpr()\n+{\n+  std::stacktrace_entry empty;\n+  VERIFY( !empty );\n+  VERIFY( empty == empty );\n+  VERIFY( std::is_eq(empty <=> empty) );\n+\n+  std::stacktrace_entry::native_handle_type native  = empty.native_handle();\n+  VERIFY( empty.native_handle() == native );\n+\n+  return true;\n+}\n+static_assert( test_constexpr() );\n+\n+void\n+test_members()\n+{\n+  std::stacktrace_entry empty;\n+  VERIFY( empty.description().size() == 0 );\n+  VERIFY( empty.source_file().size() == 0 );\n+  VERIFY( empty.source_line() == 0 );\n+\n+  std::stacktrace_entry e1 = std::stacktrace::current().at(0);\n+  std::stacktrace_entry e2 = std::stacktrace::current().at(0);\n+  VERIFY( e1 != e2 );\n+  VERIFY( e1.description() == e2.description() );\n+  VERIFY( e1.source_file() == e2.source_file() );\n+  VERIFY( e1.source_line() != e2.source_line() );\n+\n+  std::stacktrace_entry e3 = []{\n+    return std::stacktrace::current().at(0);\n+  }();\n+  VERIFY( e1 != e3 );\n+  VERIFY( e1.description() != e3.description() );\n+  VERIFY( e1.source_file() == e3.source_file() );\n+  VERIFY( e1.source_line() != e3.source_line() );\n+}\n+\n+int main()\n+{\n+  test_constexpr();\n+}"}, {"sha": "72582fa53c6a96ae6d67bb27481674db37a36c35", "filename": "libstdc++-v3/testsuite/20_util/stacktrace/synopsis.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fstacktrace%2Fsynopsis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fstacktrace%2Fsynopsis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fstacktrace%2Fsynopsis.cc?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -0,0 +1,46 @@\n+// { dg-options \"-std=gnu++23\" }\n+// { dg-do compile { target c++23 } }\n+// { dg-require-effective-target stacktrace }\n+\n+#include <stacktrace>\n+\n+#ifndef __cpp_lib_stacktrace\n+# error \"Feature-test macro for stacktrace missing in <stacktrace>\"\n+#elif __cpp_lib_stacktrace < 202011L\n+# error \"Feature-test macro for stacktrace has wrong value in <stacktrace>\"\n+#endif\n+\n+namespace std\n+{\n+  class stacktrace_entry;\n+\n+  template<class Allocator>\n+    class basic_stacktrace;\n+\n+  using stacktrace = basic_stacktrace<allocator<stacktrace_entry>>;\n+\n+  template<class Allocator>\n+    void swap(basic_stacktrace<Allocator>& a, basic_stacktrace<Allocator>& b)\n+    noexcept(noexcept(a.swap(b)));\n+\n+  string to_string(const stacktrace_entry& f);\n+\n+  template<class Allocator>\n+    string to_string(const basic_stacktrace<Allocator>& st);\n+\n+  template<class charT, class traits>\n+    basic_ostream<charT, traits>&\n+    operator<<(basic_ostream<charT, traits>& os, const stacktrace_entry& f);\n+\n+  template<class charT, class traits, class Allocator>\n+    basic_ostream<charT, traits>&\n+    operator<<(basic_ostream<charT, traits>& os, const basic_stacktrace<Allocator>& st);\n+\n+  namespace pmr {\n+    using stacktrace = basic_stacktrace<polymorphic_allocator<stacktrace_entry>>;\n+  }\n+\n+  template<class T> struct hash;\n+  template<> struct hash<stacktrace_entry>;\n+  template<class Allocator> struct hash<basic_stacktrace<Allocator>>;\n+}"}, {"sha": "ed466be5a36264fbeef55b65cd4614880b49d210", "filename": "libstdc++-v3/testsuite/20_util/stacktrace/version.cc", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fstacktrace%2Fversion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fstacktrace%2Fversion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fstacktrace%2Fversion.cc?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -0,0 +1,11 @@\n+// { dg-options \"-std=gnu++23\" }\n+// { dg-do preprocess { target c++23 } }\n+// { dg-require-effective-target stacktrace }\n+\n+#include <version>\n+\n+#ifndef __cpp_lib_stacktrace\n+# error \"Feature-test macro for stacktrace missing in <version>\"\n+#elif __cpp_lib_stacktrace < 202011L\n+# error \"Feature-test macro for stacktrace has wrong value in <version>\"\n+#endif"}, {"sha": "170806056767017934a5db59e1f0158acd695d86", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -144,6 +144,7 @@ ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n ACLOCAL = @ACLOCAL@\n ALLOCATOR_H = @ALLOCATOR_H@\n ALLOCATOR_NAME = @ALLOCATOR_NAME@\n+ALLOC_FILE = @ALLOC_FILE@\n AMTAR = @AMTAR@\n AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n AR = @AR@\n@@ -155,6 +156,10 @@ AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n AUTOMAKE = @AUTOMAKE@\n AWK = @AWK@\n+BACKTRACE_CPPFLAGS = @BACKTRACE_CPPFLAGS@\n+BACKTRACE_SUPPORTED = @BACKTRACE_SUPPORTED@\n+BACKTRACE_SUPPORTS_THREADS = @BACKTRACE_SUPPORTS_THREADS@\n+BACKTRACE_USES_MALLOC = @BACKTRACE_USES_MALLOC@\n BASIC_FILE_CC = @BASIC_FILE_CC@\n BASIC_FILE_H = @BASIC_FILE_H@\n CC = @CC@\n@@ -199,6 +204,7 @@ EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n FGREP = @FGREP@\n+FORMAT_FILE = @FORMAT_FILE@\n FREESTANDING_FLAGS = @FREESTANDING_FLAGS@\n GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n GLIBCXX_LIBS = @GLIBCXX_LIBS@\n@@ -254,6 +260,7 @@ SYMVER_FILE = @SYMVER_FILE@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n+VIEW_FILE = @VIEW_FILE@\n VTV_CXXFLAGS = @VTV_CXXFLAGS@\n VTV_CXXLINKFLAGS = @VTV_CXXLINKFLAGS@\n VTV_PCH_CXXFLAGS = @VTV_PCH_CXXFLAGS@"}, {"sha": "0debbea7ee1814c61088ed1a2c709c2fc1196b87", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=3acb929cc0beb79e6f4005eb22ee88b45e1cbc1d", "patch": "@@ -1346,6 +1346,14 @@ proc check_effective_target_std_allocator_new { } {\n     }]\n }\n \n+# Return 1 if libstdc++ was built as --enable-libstdcxx-backtrace\n+proc check_effective_target_stacktrace { } {\n+    return [check_v3_target_prop_cached et_stacktrace {\n+\tset cond \"_GLIBCXX_HAVE_STACKTRACE\"\n+\treturn [v3_check_preprocessor_condition stacktrace $cond]\n+    }]\n+}\n+\n set additional_prunes \"\"\n \n if { [info exists env(GCC_RUNTEST_PARALLELIZE_DIR)] \\"}]}