{"sha": "19656178bc77d347cb674bb990bb5c9e1476df4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk2NTYxNzhiYzc3ZDM0N2NiNjc0YmI5OTBiYjVjOWUxNDc2ZGY0YQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-01-13T18:47:19Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-01-13T18:47:19Z"}, "message": "re PR tree-optimization/42704 (ICE in verify_ssa after early SRA)\n\n2010-01-13  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/42704\n\t* tree-sra.c (sra_modify_assign): Do not delete assignments to\n\tSSA_NAMEs.\n\n\t* testsuite/g++.dg/torture/pr42704.C: New test.\n\nFrom-SVN: r155865", "tree": {"sha": "59b36f18584c6d5e63168a4f9345044923958f28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59b36f18584c6d5e63168a4f9345044923958f28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19656178bc77d347cb674bb990bb5c9e1476df4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19656178bc77d347cb674bb990bb5c9e1476df4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19656178bc77d347cb674bb990bb5c9e1476df4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19656178bc77d347cb674bb990bb5c9e1476df4a/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a2ace66e98b4f4c2ad908a62c8c611f1afb3f3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a2ace66e98b4f4c2ad908a62c8c611f1afb3f3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a2ace66e98b4f4c2ad908a62c8c611f1afb3f3d"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "0bf51b8ac90103597b112b89ee9dceb9bb21ccbd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19656178bc77d347cb674bb990bb5c9e1476df4a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19656178bc77d347cb674bb990bb5c9e1476df4a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19656178bc77d347cb674bb990bb5c9e1476df4a", "patch": "@@ -1,3 +1,9 @@\n+2010-01-13  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/42704\n+\t* tree-sra.c (sra_modify_assign): Do not delete assignments to\n+\tSSA_NAMEs.\n+\n 2010-01-13  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/42703"}, {"sha": "5bce27b598bccc049b045b187b1597a13b9641ec", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19656178bc77d347cb674bb990bb5c9e1476df4a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19656178bc77d347cb674bb990bb5c9e1476df4a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=19656178bc77d347cb674bb990bb5c9e1476df4a", "patch": "@@ -1,7 +1,12 @@\n+2010-01-13  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/42704\n+\t* g++.dg/torture/pr42704.C: New test.\n+\n 2010-01-13  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/42703\n-\t* testsuite/gcc.c-torture/compile/pr42703.c: New test.\n+\t* gcc.c-torture/compile/pr42703.c: New test.\n \n 2010-01-13  Richard Guenther  <rguenther@suse.de>\n "}, {"sha": "735b1e7bdea740f5d63bf073ce8665a596c09246", "filename": "gcc/testsuite/g++.dg/torture/pr42704.C", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19656178bc77d347cb674bb990bb5c9e1476df4a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr42704.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19656178bc77d347cb674bb990bb5c9e1476df4a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr42704.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr42704.C?ref=19656178bc77d347cb674bb990bb5c9e1476df4a", "patch": "@@ -0,0 +1,44 @@\n+/* { dg-do compile } */\n+\n+typedef int PRInt32;\n+class nsTreeRows {\n+    class Subtree { };\n+    enum { kMaxDepth = 32 };\n+    struct Link {\n+        Subtree* mParent;\n+        PRInt32 mChildIndex;\n+        Link&         operator=(const Link& aLink) {\n+            mParent = aLink.mParent;\n+            mChildIndex = aLink.mChildIndex;\n+        }\n+    };\n+    class iterator {\n+        PRInt32 mTop;\n+        PRInt32 mRowIndex;\n+        Link mLink[kMaxDepth];\n+    public:\n+        iterator() : mTop(-1), mRowIndex(-1) { }\n+        iterator& operator=(const iterator& aIterator);\n+    };\n+    Subtree*     EnsureSubtreeFor(Subtree* aParent, PRInt32 aChildIndex);\n+    Subtree*     GetSubtreeFor(const Subtree* aParent,\n+PRInt32 aChildIndex,                   PRInt32* aSubtreeSize = 0);\n+    void     InvalidateCachedRow() {\n+        mLastRow = iterator();\n+    }\n+    iterator mLastRow;\n+};\n+nsTreeRows::Subtree* nsTreeRows::EnsureSubtreeFor(Subtree* aParent,\n+                     PRInt32 aChildIndex) {\n+    Subtree* subtree = GetSubtreeFor(aParent, aChildIndex);\n+    if (! subtree) {\n+        InvalidateCachedRow();\n+    }\n+}\n+nsTreeRows::iterator& nsTreeRows::iterator::operator=(const iterator&\n+aIterator) {\n+    mTop = aIterator.mTop;\n+    for (PRInt32 i = mTop;\n+         i >= 0;\n+         --i)         mLink[i] = aIterator.mLink[i];\n+}"}, {"sha": "e9766d78a54e92e7923f1bc514147068155cc9ee", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19656178bc77d347cb674bb990bb5c9e1476df4a/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19656178bc77d347cb674bb990bb5c9e1476df4a/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=19656178bc77d347cb674bb990bb5c9e1476df4a", "patch": "@@ -2533,7 +2533,9 @@ sra_modify_assign (gimple *stmt, gimple_stmt_iterator *gsi,\n \t{\n \t  if (access_has_children_p (racc))\n \t    {\n-\t      if (!racc->grp_unscalarized_data)\n+\t      if (!racc->grp_unscalarized_data\n+\t\t  /* Do not remove SSA name definitions (PR 42704).  */\n+\t\t  && TREE_CODE (lhs) != SSA_NAME)\n \t\t{\n \t\t  generate_subtree_copies (racc->first_child, lhs,\n \t\t\t\t\t   racc->offset, 0, 0, gsi,"}]}