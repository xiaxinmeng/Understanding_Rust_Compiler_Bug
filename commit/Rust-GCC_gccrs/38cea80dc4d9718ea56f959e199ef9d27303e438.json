{"sha": "38cea80dc4d9718ea56f959e199ef9d27303e438", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhjZWE4MGRjNGQ5NzE4ZWE1NmY5NTllMTk5ZWY5ZDI3MzAzZTQzOA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2014-08-01T13:50:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T13:50:32Z"}, "message": "sem_ch3.adb (Access_Type_Declaration): If designated type is a limited view...\n\n2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Access_Type_Declaration): If designated type is\n\ta limited view, create a master entity (as is already done for\n\tclass-wide types) in case the full view designates a type that\n\tcontains tasks.\n\t* sem_ch8.adb (Find_Selected_Component): If prefix is a dereference\n\tand the designated type is a limited view, use the non-limited\n\tview if available.\n\nFrom-SVN: r213464", "tree": {"sha": "2baba41748d37eb8c97408b02e552b72cf6fa728", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2baba41748d37eb8c97408b02e552b72cf6fa728"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38cea80dc4d9718ea56f959e199ef9d27303e438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38cea80dc4d9718ea56f959e199ef9d27303e438", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38cea80dc4d9718ea56f959e199ef9d27303e438", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38cea80dc4d9718ea56f959e199ef9d27303e438/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bf0b0e5ee1c756b593f8e8d0456504575ac63218", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf0b0e5ee1c756b593f8e8d0456504575ac63218", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf0b0e5ee1c756b593f8e8d0456504575ac63218"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "225c24cafa3dec794b31be67880564569a219d80", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38cea80dc4d9718ea56f959e199ef9d27303e438/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38cea80dc4d9718ea56f959e199ef9d27303e438/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=38cea80dc4d9718ea56f959e199ef9d27303e438", "patch": "@@ -1,3 +1,13 @@\n+2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Access_Type_Declaration): If designated type is\n+\ta limited view, create a master entity (as is already done for\n+\tclass-wide types) in case the full view designates a type that\n+\tcontains tasks.\n+\t* sem_ch8.adb (Find_Selected_Component): If prefix is a dereference\n+\tand the designated type is a limited view, use the non-limited\n+\tview if available.\n+\n 2014-08-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/ada-tree.h (DECL_BY_DESCRIPTOR_P): Delete."}, {"sha": "a713057db211b498a5a608d7ed3134b28c7b3175", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38cea80dc4d9718ea56f959e199ef9d27303e438/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38cea80dc4d9718ea56f959e199ef9d27303e438/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=38cea80dc4d9718ea56f959e199ef9d27303e438", "patch": "@@ -1331,9 +1331,23 @@ package body Sem_Ch3 is\n \n          if Ekind (Root_Type (Entity (S))) = E_Incomplete_Type then\n             Set_Directly_Designated_Type (T, Entity (S));\n+\n+            --  If the designated type is a limited view, we cannot tell if\n+            --  the full view contains tasks, and there is no way to handle\n+            --  that full view in a client. We create a master entity for the\n+            --  scope, which will be used when a client determines that one\n+            --  is needed.\n+\n+            if From_Limited_With (Entity (S))\n+              and then not Is_Class_Wide_Type (Entity (S))\n+            then\n+               Set_Ekind (T, E_Access_Type);\n+               Build_Master_Entity (T);\n+               Build_Master_Renaming (T);\n+            end if;\n+\n          else\n-            Set_Directly_Designated_Type (T,\n-              Process_Subtype (S, P, T, 'P'));\n+            Set_Directly_Designated_Type (T, Process_Subtype (S, P, T, 'P'));\n          end if;\n \n          --  If the access definition is of the form: ACCESS NOT NULL .."}, {"sha": "5cdb324951658eb77ab1eb7d2c7f586463fb140e", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38cea80dc4d9718ea56f959e199ef9d27303e438/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38cea80dc4d9718ea56f959e199ef9d27303e438/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=38cea80dc4d9718ea56f959e199ef9d27303e438", "patch": "@@ -6236,6 +6236,25 @@ package body Sem_Ch8 is\n             Write_Entity_Info (P_Type, \"      \"); Write_Eol;\n          end if;\n \n+         --  The designated type may be a limited view with no components.\n+         --  Check whether the non-limited view is available, because in some\n+         --  cases this will not be set when instlling the context.\n+\n+         if Is_Access_Type (P_Type) then\n+            declare\n+               D : constant Entity_Id := Directly_Designated_Type (P_Type);\n+            begin\n+               if Is_Incomplete_Type (D)\n+                 and then not Is_Class_Wide_Type (D)\n+                 and then From_Limited_With (D)\n+                 and then Present (Non_Limited_View (D))\n+                 and then not Is_Class_Wide_Type (Non_Limited_View (D))\n+               then\n+                  Set_Directly_Designated_Type (P_Type,  Non_Limited_View (D));\n+               end if;\n+            end;\n+         end if;\n+\n          --  First check for components of a record object (not the\n          --  result of a call, which is handled below).\n "}]}