{"sha": "0948d23fffba754853cc93984e106d2aaf9a3897", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk0OGQyM2ZmZmJhNzU0ODUzY2M5Mzk4NGUxMDZkMmFhZjlhMzg5Nw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-06-15T13:24:53Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-06-15T13:24:53Z"}, "message": "re PR rtl-optimization/80474 (ipa-cp wrongly adding LO(symbol) twice)\n\n\tPR rtl-optimization/80474\n\t* reorg.c (update_block): Do not ignore instructions in a delay slot.\n\nFrom-SVN: r249219", "tree": {"sha": "a3e56701bccc21dc51b9119ff81ebbfb6290c913", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3e56701bccc21dc51b9119ff81ebbfb6290c913"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0948d23fffba754853cc93984e106d2aaf9a3897", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0948d23fffba754853cc93984e106d2aaf9a3897", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0948d23fffba754853cc93984e106d2aaf9a3897", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0948d23fffba754853cc93984e106d2aaf9a3897/comments", "author": null, "committer": null, "parents": [{"sha": "d12366802a9ac3de79126daeea9ae60aad98e1d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d12366802a9ac3de79126daeea9ae60aad98e1d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d12366802a9ac3de79126daeea9ae60aad98e1d5"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "fc9554f0142f9e30b12471e153f8bced42c40f18", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0948d23fffba754853cc93984e106d2aaf9a3897/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0948d23fffba754853cc93984e106d2aaf9a3897/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0948d23fffba754853cc93984e106d2aaf9a3897", "patch": "@@ -1,3 +1,8 @@\n+2017-06-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR rtl-optimization/80474\n+\t* reorg.c (update_block): Do not ignore instructions in a delay slot.\n+\n 2017-06-15  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (add<mode>3): Use reg_or_subregno instead"}, {"sha": "dbd74ab24045bbc8b51dc9b41226a9832f382270", "filename": "gcc/reorg.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0948d23fffba754853cc93984e106d2aaf9a3897/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0948d23fffba754853cc93984e106d2aaf9a3897/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=0948d23fffba754853cc93984e106d2aaf9a3897", "patch": "@@ -1694,9 +1694,8 @@ own_thread_p (rtx thread, rtx label, int allow_fallthrough)\n }\n \f\n /* Called when INSN is being moved from a location near the target of a jump.\n-   We leave a marker of the form (use (INSN)) immediately in front\n-   of WHERE for mark_target_live_regs.  These markers will be deleted when\n-   reorg finishes.\n+   We leave a marker of the form (use (INSN)) immediately in front of WHERE\n+   for mark_target_live_regs.  These markers will be deleted at the end.\n \n    We used to try to update the live status of registers if WHERE is at\n    the start of a basic block, but that can't work since we may remove a\n@@ -1705,16 +1704,10 @@ own_thread_p (rtx thread, rtx label, int allow_fallthrough)\n static void\n update_block (rtx_insn *insn, rtx_insn *where)\n {\n-  /* Ignore if this was in a delay slot and it came from the target of\n-     a branch.  */\n-  if (INSN_FROM_TARGET_P (insn))\n-    return;\n-\n   emit_insn_before (gen_rtx_USE (VOIDmode, insn), where);\n \n   /* INSN might be making a value live in a block where it didn't use to\n      be.  So recompute liveness information for this block.  */\n-\n   incr_ticks_for_insn (insn);\n }\n "}]}