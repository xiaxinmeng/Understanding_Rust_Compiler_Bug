{"sha": "8d913d99967bff72161caa2f87788c49a7cb60fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ5MTNkOTk5NjdiZmY3MjE2MWNhYTJmODc3ODhjNDlhN2NiNjBmZQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@one.net.au", "date": "2001-04-13T05:34:06Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2001-04-13T05:34:06Z"}, "message": "pa-hpux10.h (NEW_HP_ASSEMBLER): Define to 1.\n\n\t* pa-hpux10.h (NEW_HP_ASSEMBLER): Define to 1.\n\t* pa-hpux11.h (NEW_HP_ASSEMBLER): Likewise.\n\t* pa.h (LEGITIMATE_CONSTANT_P) Collapse two defines depending on\n\tNEW_HP_ASSEMBLER into one.  Kill warnings.\n\nFrom-SVN: r41326", "tree": {"sha": "5b4c8e3e99da37cf004ccb3565247723224bb86a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b4c8e3e99da37cf004ccb3565247723224bb86a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d913d99967bff72161caa2f87788c49a7cb60fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d913d99967bff72161caa2f87788c49a7cb60fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d913d99967bff72161caa2f87788c49a7cb60fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d913d99967bff72161caa2f87788c49a7cb60fe/comments", "author": null, "committer": null, "parents": [{"sha": "c21a23721b83d04590617d61f38a122c20c576f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21a23721b83d04590617d61f38a122c20c576f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c21a23721b83d04590617d61f38a122c20c576f5"}], "stats": {"total": 45, "additions": 22, "deletions": 23}, "files": [{"sha": "0fbc838e575edd5a12208e922c65bc53919511d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d913d99967bff72161caa2f87788c49a7cb60fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d913d99967bff72161caa2f87788c49a7cb60fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d913d99967bff72161caa2f87788c49a7cb60fe", "patch": "@@ -1,5 +1,10 @@\n 2001-04-13  Alan Modra  <amodra@one.net.au>\n \n+\t* pa-hpux10.h (NEW_HP_ASSEMBLER): Define to 1.\n+\t* pa-hpux11.h (NEW_HP_ASSEMBLER): Likewise.\n+\t* pa.h (LEGITIMATE_CONSTANT_P) Collapse two defines depending on\n+\tNEW_HP_ASSEMBLER into one.  Kill warnings.\n+\n \t* pa-gas.h: Delete file.\n \t* config.gcc: Match `parisc' as well as `hppa' for cpu_type=pa.\n \tAdd new targets hppa*64*-*-linux* and parisc*64*-*-linux*.  Update"}, {"sha": "c9322b9ab657d85f9223d21cb555d12507fa573d", "filename": "gcc/config/pa/pa-hpux10.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d913d99967bff72161caa2f87788c49a7cb60fe/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d913d99967bff72161caa2f87788c49a7cb60fe/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h?ref=8d913d99967bff72161caa2f87788c49a7cb60fe", "patch": "@@ -60,4 +60,5 @@ Boston, MA 02111-1307, USA.  */\n \n /* hpux10 has the new HP assembler.  It's still lousy, but it's a whole lot\n    better than the assembler shipped with older versions of hpux.  */\n-#define NEW_HP_ASSEMBLER\n+#undef NEW_HP_ASSEMBLER\n+#define NEW_HP_ASSEMBLER 1"}, {"sha": "522605453f6ffd20c962675a5ac7b172232e9a33", "filename": "gcc/config/pa/pa-hpux11.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d913d99967bff72161caa2f87788c49a7cb60fe/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d913d99967bff72161caa2f87788c49a7cb60fe/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h?ref=8d913d99967bff72161caa2f87788c49a7cb60fe", "patch": "@@ -59,7 +59,8 @@ Boston, MA 02111-1307, USA.  */\n \n /* hpux11 has the new HP assembler.  It's still lousy, but it's a whole lot\n    better than the assembler shipped with older versions of hpux.  */\n-#define NEW_HP_ASSEMBLER\n+#undef NEW_HP_ASSEMBLER\n+#define NEW_HP_ASSEMBLER 1\n \n /* Make GCC agree with types.h.  */\n #undef SIZE_TYPE"}, {"sha": "7548c1f4d36d0096d815246e2226a5a5c835ed6e", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 13, "deletions": 21, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d913d99967bff72161caa2f87788c49a7cb60fe/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d913d99967bff72161caa2f87788c49a7cb60fe/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=8d913d99967bff72161caa2f87788c49a7cb60fe", "patch": "@@ -1116,28 +1116,20 @@ extern int may_call_alloca;\n \n    ?!? For now also reject CONST_DOUBLES in 64bit mode.  This will need\n    further work.  */\n-#ifdef NEW_HP_ASSEMBLER\n-#define LEGITIMATE_CONSTANT_P(X)  \t\t\\\n-  ((GET_MODE_CLASS (GET_MODE (X)) != MODE_FLOAT\t\\\n-    || (X) == CONST0_RTX (GET_MODE (X)))\t\\\n-   && !(TARGET_64BIT && GET_CODE (X) == CONST_DOUBLE) \\\n-   && !(TARGET_64BIT && GET_CODE (X) == CONST_INT \\\n-\t&& !(cint_ok_for_move (INTVAL (X))\t\\\n-\t     || ((INTVAL (X) & 0xffffffff80000000L) == 0xffffffff80000000L) \\\n-\t     || ((INTVAL (X) & 0xffffffff00000000L) == 0x0000000000000000L))) \\\n-   && !function_label_operand (X, VOIDmode))\n-#else\n-#define LEGITIMATE_CONSTANT_P(X)  \t\t\\\n-  ((GET_MODE_CLASS (GET_MODE (X)) != MODE_FLOAT\t\\\n-    || (X) == CONST0_RTX (GET_MODE (X)))\t\\\n-   && (GET_CODE (X) != LABEL_REF || TARGET_GAS)\\\n-   && !(TARGET_64BIT && GET_CODE (X) == CONST_DOUBLE) \\\n-   && !(TARGET_64BIT && GET_CODE (X) == CONST_INT \\\n-\t&& !(cint_ok_for_move (INTVAL (X))\t\\\n-\t     || ((INTVAL (X) & 0xffffffff80000000L) == 0xffffffff80000000L) \\\n-\t     || ((INTVAL (X) & 0xffffffff00000000L) == 0x0000000000000000L))) \\\n-   && !function_label_operand (X, VOIDmode))\n+#ifndef NEW_HP_ASSEMBLER\n+#define NEW_HP_ASSEMBLER 0\n #endif\n+#define LEGITIMATE_CONSTANT_P(X)\t\t\t\t\\\n+  ((GET_MODE_CLASS (GET_MODE (X)) != MODE_FLOAT\t\t\t\\\n+    || (X) == CONST0_RTX (GET_MODE (X)))\t\t\t\\\n+   && (NEW_HP_ASSEMBLER || TARGET_GAS || GET_CODE (X) != LABEL_REF)\t\\\n+   && !(TARGET_64BIT && GET_CODE (X) == CONST_DOUBLE)\t\t\\\n+   && !(TARGET_64BIT && GET_CODE (X) == CONST_INT\t\t\\\n+\t&& !(HOST_BITS_PER_WIDE_INT <= 32\t\t\t\\\n+\t     || (INTVAL (X) >= (HOST_WIDE_INT) -1 << 31\t\t\\\n+\t\t && INTVAL (X) < (HOST_WIDE_INT) 1 << 32)\t\\\n+\t     || cint_ok_for_move (INTVAL (X))))\t\t\t\\\n+   && !function_label_operand (X, VOIDmode))\n \n /* Subroutine for EXTRA_CONSTRAINT.\n "}]}