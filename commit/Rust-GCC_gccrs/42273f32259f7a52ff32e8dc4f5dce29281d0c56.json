{"sha": "42273f32259f7a52ff32e8dc4f5dce29281d0c56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDIyNzNmMzIyNTlmN2E1MmZmMzJlOGRjNGY1ZGNlMjkyODFkMGM1Ng==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-10-12T22:04:07Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-10-12T22:04:07Z"}, "message": "Makefile.in: Rebuilt.\n\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (rmi_java_source_files): Added new files.\n\t* gnu/java/rmi/rmic/RMIC.java (compile): Uncommented; fixed to use\n\tnew Compiler class.\n\t* gnu/java/rmi/rmic/Makefile.am (EXTRA_DIST): Updated.\n\t* gnu/java/rmi/rmic/Compile_gcj.java: New file.\n\t* gnu/java/rmi/rmic/CompilerProcess.java: New file.\n\t* gnu/java/rmi/rmic/Compiler.java: New file.\n\nFrom-SVN: r46235", "tree": {"sha": "aa03ee1a96070709bdc7a9676c1a4596a6823405", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa03ee1a96070709bdc7a9676c1a4596a6823405"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42273f32259f7a52ff32e8dc4f5dce29281d0c56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42273f32259f7a52ff32e8dc4f5dce29281d0c56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42273f32259f7a52ff32e8dc4f5dce29281d0c56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42273f32259f7a52ff32e8dc4f5dce29281d0c56/comments", "author": null, "committer": null, "parents": [{"sha": "44a4ca5e4fd004949da533324aed10247b2ea3e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44a4ca5e4fd004949da533324aed10247b2ea3e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44a4ca5e4fd004949da533324aed10247b2ea3e5"}], "stats": {"total": 225, "additions": 213, "deletions": 12}, "files": [{"sha": "489f13de0cef735161d3d97bce0b971575ed1578", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42273f32259f7a52ff32e8dc4f5dce29281d0c56/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42273f32259f7a52ff32e8dc4f5dce29281d0c56/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=42273f32259f7a52ff32e8dc4f5dce29281d0c56", "patch": "@@ -1,3 +1,14 @@\n+2001-10-12  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (rmi_java_source_files): Added new files.\n+\t* gnu/java/rmi/rmic/RMIC.java (compile): Uncommented; fixed to use\n+\tnew Compiler class.\n+\t* gnu/java/rmi/rmic/Makefile.am (EXTRA_DIST): Updated.\n+\t* gnu/java/rmi/rmic/Compile_gcj.java: New file.\n+\t* gnu/java/rmi/rmic/CompilerProcess.java: New file.\n+\t* gnu/java/rmi/rmic/Compiler.java: New file.\n+\n 2001-10-11  Tom Tromey  <tromey@redhat.com>\n \n \t* configure: Rebuilt."}, {"sha": "6bfb6d9f4d5891771b169bbeab335a53fe82ec2a", "filename": "libjava/Makefile.am", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42273f32259f7a52ff32e8dc4f5dce29281d0c56/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42273f32259f7a52ff32e8dc4f5dce29281d0c56/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=42273f32259f7a52ff32e8dc4f5dce29281d0c56", "patch": "@@ -883,6 +883,9 @@ gnu/java/rmi/dgc/DGCImpl_Stub.java \\\n gnu/java/rmi/registry/RegistryImpl.java\t\\\n gnu/java/rmi/registry/RegistryImpl_Skel.java \\\n gnu/java/rmi/registry/RegistryImpl_Stub.java \\\n+gnu/java/rmi/rmic/Compile_gcj.java \\\n+gnu/java/rmi/rmic/Compiler.java\t\\\n+gnu/java/rmi/rmic/CompilerProcess.java \\\n gnu/java/rmi/rmic/RMIC.java \\\n gnu/java/rmi/rmic/TabbedWriter.java \\\n gnu/java/rmi/server/ProtocolConstants.java \\"}, {"sha": "fe48046d40ff64654ad43184893e5469315c2d34", "filename": "libjava/Makefile.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42273f32259f7a52ff32e8dc4f5dce29281d0c56/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42273f32259f7a52ff32e8dc4f5dce29281d0c56/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=42273f32259f7a52ff32e8dc4f5dce29281d0c56", "patch": "@@ -632,6 +632,9 @@ gnu/java/rmi/dgc/DGCImpl_Stub.java \\\n gnu/java/rmi/registry/RegistryImpl.java\t\\\n gnu/java/rmi/registry/RegistryImpl_Skel.java \\\n gnu/java/rmi/registry/RegistryImpl_Stub.java \\\n+gnu/java/rmi/rmic/Compile_gcj.java \\\n+gnu/java/rmi/rmic/Compiler.java\t\\\n+gnu/java/rmi/rmic/CompilerProcess.java \\\n gnu/java/rmi/rmic/RMIC.java \\\n gnu/java/rmi/rmic/TabbedWriter.java \\\n gnu/java/rmi/server/ProtocolConstants.java \\\n@@ -1580,6 +1583,9 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/java/rmi/registry/RegistryImpl.P \\\n .deps/gnu/java/rmi/registry/RegistryImpl_Skel.P \\\n .deps/gnu/java/rmi/registry/RegistryImpl_Stub.P \\\n+.deps/gnu/java/rmi/rmic/Compile_gcj.P \\\n+.deps/gnu/java/rmi/rmic/Compiler.P \\\n+.deps/gnu/java/rmi/rmic/CompilerProcess.P \\\n .deps/gnu/java/rmi/rmic/RMIC.P .deps/gnu/java/rmi/rmic/TabbedWriter.P \\\n .deps/gnu/java/rmi/server/ProtocolConstants.P \\\n .deps/gnu/java/rmi/server/RMIDefaultSocketFactory.P \\"}, {"sha": "4a5f8e408fb663e069d6e0c3502609ff9e12682d", "filename": "libjava/gnu/java/rmi/rmic/Compile_gcj.java", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42273f32259f7a52ff32e8dc4f5dce29281d0c56/libjava%2Fgnu%2Fjava%2Frmi%2Frmic%2FCompile_gcj.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42273f32259f7a52ff32e8dc4f5dce29281d0c56/libjava%2Fgnu%2Fjava%2Frmi%2Frmic%2FCompile_gcj.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Frmi%2Frmic%2FCompile_gcj.java?ref=42273f32259f7a52ff32e8dc4f5dce29281d0c56", "patch": "@@ -0,0 +1,50 @@\n+/*\n+  Copyright (c) 2001 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License.\n+ */\n+\n+package gnu.java.rmi.rmic;\n+\n+/** Subclass of Compiler that can be used to invoke gcj.  */\n+public class Compile_gcj extends CompilerProcess\n+{\n+  public String[] computeArguments (String filename)\n+  {\n+    int len = 3 + (dest == null ? 0 : 2);\n+    String[] result = new String[len];\n+    int i = 0;\n+\n+    result[i++] = \"gcj\";\n+    result[i++] = \"-C\";\n+    if (dest != null)\n+      {\n+\tresult[i++] = \"-d\";\n+\tresult[i++] = dest;\n+      }\n+    result[i++] = filename;\n+\n+    return result;\n+  }\n+}"}, {"sha": "ab58e633f3dcc0c173aaae02275452a4ecaaf6a9", "filename": "libjava/gnu/java/rmi/rmic/Compiler.java", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42273f32259f7a52ff32e8dc4f5dce29281d0c56/libjava%2Fgnu%2Fjava%2Frmi%2Frmic%2FCompiler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42273f32259f7a52ff32e8dc4f5dce29281d0c56/libjava%2Fgnu%2Fjava%2Frmi%2Frmic%2FCompiler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Frmi%2Frmic%2FCompiler.java?ref=42273f32259f7a52ff32e8dc4f5dce29281d0c56", "patch": "@@ -0,0 +1,75 @@\n+/*\n+  Copyright (c) 2001 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License.\n+ */\n+\n+package gnu.java.rmi.rmic;\n+\n+/** A Compiler object can be used to compile a .java file into a\n+ * .class file.  This is an abstract class; the\n+ * <code>getInstance()</code> method is used to obtain the actual\n+ * compiler object.  */\n+public abstract class Compiler\n+{\n+  // Can't directly instantiate.\n+  protected Compiler ()\n+  {\n+  }\n+\n+  /** Create a new compiler instance.  */\n+  public static Compiler getInstance ()\n+  {\n+    return getInstance (System.getProperty (\"classpath.compiler\", \"gcj\"));\n+  }\n+\n+  /** Create a new compiler instance given the name of the compiler.  */\n+  public static Compiler getInstance (String name)\n+  {\n+    try\n+      {\n+\tClass k = Class.forName (classPrefix + name);\n+\treturn (Compiler) k.newInstance ();\n+      }\n+    catch (Throwable _)\n+      {\n+      }\n+    return null;\n+  }\n+\n+  /** Set the directory where output files will be put.  */\n+  public void setDestination (String dest)\n+  {\n+    this.dest = dest;\n+  }\n+\n+  /** Compile the given file.  Throws exception on error.  */\n+  public abstract void compile (String name) throws Exception;\n+\n+  /** The destination directory, or null if none set.  */\n+  protected String dest;\n+\n+  /** Class prefix used when trying to find instance.  */\n+  private static final String classPrefix = \"gnu.java.rmi.rmic.Compile_\";\n+}"}, {"sha": "576ea69a695d74091ab68452029f45a41774ba71", "filename": "libjava/gnu/java/rmi/rmic/CompilerProcess.java", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42273f32259f7a52ff32e8dc4f5dce29281d0c56/libjava%2Fgnu%2Fjava%2Frmi%2Frmic%2FCompilerProcess.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42273f32259f7a52ff32e8dc4f5dce29281d0c56/libjava%2Fgnu%2Fjava%2Frmi%2Frmic%2FCompilerProcess.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Frmi%2Frmic%2FCompilerProcess.java?ref=42273f32259f7a52ff32e8dc4f5dce29281d0c56", "patch": "@@ -0,0 +1,61 @@\n+/*\n+  Copyright (c) 2001 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License.\n+ */\n+\n+package gnu.java.rmi.rmic;\n+\n+/** Subclass of Compiler that can be subclassed to invoke a process to\n+ * do its work.  */\n+public abstract class CompilerProcess extends Compiler\n+{\n+  /** This is used to compute the command line for the process.  */\n+  public abstract String[] computeArguments (String filename);\n+\n+  public void compile (String name) throws Exception\n+  {\n+    String[] args = computeArguments (name);\n+    Process p = Runtime.getRuntime ().exec (args);\n+    // FIXME: probably should collect compiler output here and then\n+    // put it into the exception message.\n+    int result;\n+    while (true)\n+      {\n+\ttry\n+\t  {\n+\t    result = p.waitFor ();\n+\t    break;\n+\t  }\n+\tcatch (InterruptedException _)\n+\t  {\n+\t  }\n+      }\n+    if (result != 0)\n+      {\n+\t// FIXME: wrong exception class.\n+\tthrow new Exception (\"compiler exited with status: \" + result);\n+      }\n+  }\n+}"}, {"sha": "591d522421d88123942f30a1d3ed075ef26234c3", "filename": "libjava/gnu/java/rmi/rmic/RMIC.java", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42273f32259f7a52ff32e8dc4f5dce29281d0c56/libjava%2Fgnu%2Fjava%2Frmi%2Frmic%2FRMIC.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42273f32259f7a52ff32e8dc4f5dce29281d0c56/libjava%2Fgnu%2Fjava%2Frmi%2Frmic%2FRMIC.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Frmi%2Frmic%2FRMIC.java?ref=42273f32259f7a52ff32e8dc4f5dce29281d0c56", "patch": "@@ -1,5 +1,5 @@\n /*\n-  Copyright (c) 1996, 1997, 1998, 1999 Free Software Foundation, Inc.\n+  Copyright (c) 1996, 1997, 1998, 1999, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,7 +38,6 @@\n import java.util.Arrays;\n import java.lang.Comparable;\n import gnu.java.rmi.server.RMIHashes;\n-// import kaffe.tools.compiler.Compiler;\n \n public class RMIC {\n \n@@ -839,16 +838,12 @@ else if (returntype == Double.TYPE) {\n }\n \n private void compile(String name) throws Exception {\n-\tthrow new Error (\"Not implemented\");\n-//  \tCompiler comp = Compiler.getInstance();\n-//  \tif (verbose) {\n-//  \t\tSystem.out.println(\"[Compiling class \" + name + \"]\");\n-//  \t}\n-//  \tcomp.setDestination(destination);\n-//  \tboolean result = comp.compile(name);\n-//  \tif (result == false) {\n-//  \t\tthrow comp.getException();\n-//  \t}\n+\tCompiler comp = Compiler.getInstance();\n+\tif (verbose) {\n+\t\tSystem.out.println(\"[Compiling class \" + name + \"]\");\n+\t}\n+\tcomp.setDestination(destination);\n+\tcomp.compile(name);\n }\n \n private static String getPrettyName(Class cls) {"}]}