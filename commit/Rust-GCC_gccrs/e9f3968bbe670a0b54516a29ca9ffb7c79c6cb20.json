{"sha": "e9f3968bbe670a0b54516a29ca9ffb7c79c6cb20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTlmMzk2OGJiZTY3MGEwYjU0NTE2YTI5Y2E5ZmZiN2M3OWM2Y2IyMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-03-17T02:35:36Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-03-17T02:35:36Z"}, "message": "* parser.c (cp_parser_lambda_expression): Use nreverse.\n\nFrom-SVN: r196730", "tree": {"sha": "ead253e3ce34cd2425f8a0d8213e1bdae227a6ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ead253e3ce34cd2425f8a0d8213e1bdae227a6ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9f3968bbe670a0b54516a29ca9ffb7c79c6cb20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9f3968bbe670a0b54516a29ca9ffb7c79c6cb20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9f3968bbe670a0b54516a29ca9ffb7c79c6cb20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9f3968bbe670a0b54516a29ca9ffb7c79c6cb20/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e2adfdad84167e48735d35154e0a8becf9264111", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2adfdad84167e48735d35154e0a8becf9264111", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2adfdad84167e48735d35154e0a8becf9264111"}], "stats": {"total": 17, "additions": 4, "deletions": 13}, "files": [{"sha": "de8f0307f2dc029f2aad0c83e0587589c6f255d6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9f3968bbe670a0b54516a29ca9ffb7c79c6cb20/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9f3968bbe670a0b54516a29ca9ffb7c79c6cb20/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e9f3968bbe670a0b54516a29ca9ffb7c79c6cb20", "patch": "@@ -1,5 +1,7 @@\n 2013-03-16  Jason Merrill  <jason@redhat.com>\n \n+\t* parser.c (cp_parser_lambda_expression): Use nreverse.\n+\n \tPR c++/56447\n \tPR c++/55532\n \t* pt.c (instantiate_class_template_1): Instantiate lambda capture"}, {"sha": "f4149323e4db5dbe9fac32c194f6cf3963d34b0e", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9f3968bbe670a0b54516a29ca9ffb7c79c6cb20/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9f3968bbe670a0b54516a29ca9ffb7c79c6cb20/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=e9f3968bbe670a0b54516a29ca9ffb7c79c6cb20", "patch": "@@ -8195,19 +8195,8 @@ cp_parser_lambda_expression (cp_parser* parser)\n       cp_parser_skip_to_end_of_block_or_statement (parser);\n \n     /* The capture list was built up in reverse order; fix that now.  */\n-    {\n-      tree newlist = NULL_TREE;\n-      tree elt, next;\n-\n-      for (elt = LAMBDA_EXPR_CAPTURE_LIST (lambda_expr);\n-\t   elt; elt = next)\n-\t{\n-\t  next = TREE_CHAIN (elt);\n-\t  TREE_CHAIN (elt) = newlist;\n-\t  newlist = elt;\n-\t}\n-      LAMBDA_EXPR_CAPTURE_LIST (lambda_expr) = newlist;\n-    }\n+    LAMBDA_EXPR_CAPTURE_LIST (lambda_expr)\n+      = nreverse (LAMBDA_EXPR_CAPTURE_LIST (lambda_expr));\n \n     if (ok)\n       maybe_add_lambda_conv_op (type);"}]}