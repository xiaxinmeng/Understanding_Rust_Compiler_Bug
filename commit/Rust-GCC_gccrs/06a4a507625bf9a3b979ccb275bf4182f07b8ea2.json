{"sha": "06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZhNGE1MDc2MjViZjlhM2I5NzljY2IyNzViZjQxODJmMDdiOGVhMg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2007-04-19T00:24:09Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2007-04-19T00:24:09Z"}, "message": "libjava\n\t* Regenerated headers with new gjavah.\nlibjava/classpath\n\t* tools/gnu/classpath/tools/javah/MethodHelper.java (print):\n\tChanged arguments.  Directly print method name.\n\t* tools/gnu/classpath/tools/javah/ClassWrapper.java\n\t(methodNameMap): New field.\n\t(makeVtable): Initialize it.\n\t(printMethods): Compute name for bridge targets.\n\nFrom-SVN: r123965", "tree": {"sha": "e08786d000d7c3bc2119fb775da6d96fbbe84475", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e08786d000d7c3bc2119fb775da6d96fbbe84475"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/comments", "author": null, "committer": null, "parents": [{"sha": "5604bf10dd082cdf609d29e1e99a5879758a7c46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5604bf10dd082cdf609d29e1e99a5879758a7c46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5604bf10dd082cdf609d29e1e99a5879758a7c46"}], "stats": {"total": 406, "additions": 220, "deletions": 186}, "files": [{"sha": "500d47c999cddec2ed6c66462054da1bd7f17acc", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -1,3 +1,7 @@\n+2007-04-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Regenerated headers with new gjavah.\n+\n 2007-04-18  Andrew Haley  <aph@redhat.com>\n \n \t* java/lang/reflect/natVMProxy.cc (ncode_closure): Add"}, {"sha": "987ac9eff84047063cc1461897400211d6e44b58", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -1,3 +1,12 @@\n+2007-04-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* tools/gnu/classpath/tools/javah/MethodHelper.java (print):\n+\tChanged arguments.  Directly print method name.\n+\t* tools/gnu/classpath/tools/javah/ClassWrapper.java\n+\t(methodNameMap): New field.\n+\t(makeVtable): Initialize it.\n+\t(printMethods): Compute name for bridge targets.\n+\n 2007-04-17  Andrew Haley  <aph@redhat.com>\n \n \t* gnu/java/rmi/server/UnicastConnectionManager.java"}, {"sha": "0e671874914fb9eda4b473bb0ef5356841c3d988", "filename": "libjava/classpath/lib/gnu/java/awt/peer/gtk/ComponentGraphics.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FComponentGraphics.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FComponentGraphics.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FComponentGraphics.class?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2"}, {"sha": "661d491ff4985fb8a0ce1cb060d8f6b43a50f40e", "filename": "libjava/classpath/lib/gnu/java/rmi/server/TripleKey.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Frmi%2Fserver%2FTripleKey.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Frmi%2Fserver%2FTripleKey.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Frmi%2Fserver%2FTripleKey.class?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2"}, {"sha": "917dfc9b564512d8f17a7129049f6cd3bb1ce229", "filename": "libjava/classpath/lib/gnu/java/rmi/server/UnicastConnectionManager.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Frmi%2Fserver%2FUnicastConnectionManager.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Frmi%2Fserver%2FUnicastConnectionManager.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Frmi%2Fserver%2FUnicastConnectionManager.class?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2"}, {"sha": "da5ddebe53b5f934ec91da996219c0beba6c7b48", "filename": "libjava/classpath/tools/classes/gnu/classpath/tools/javah/ClassWrapper.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FClassWrapper.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FClassWrapper.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FClassWrapper.class?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2"}, {"sha": "2bd32023281843416f092622f759c01ec2c5f0b5", "filename": "libjava/classpath/tools/classes/gnu/classpath/tools/javah/MethodHelper.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FMethodHelper.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FMethodHelper.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FMethodHelper.class?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2"}, {"sha": "2172628a671bdda480f62853e436012136870d73", "filename": "libjava/classpath/tools/gnu/classpath/tools/javah/ClassWrapper.java", "status": "modified", "additions": 34, "deletions": 5, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FClassWrapper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FClassWrapper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FClassWrapper.java?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -1,5 +1,5 @@\n /* ClassWrapper.java - wrap ASM class objects\n- Copyright (C) 2006 Free Software Foundation, Inc.\n+ Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n \n  This file is part of GNU Classpath.\n \n@@ -43,6 +43,7 @@\n import java.io.PrintStream;\n import java.lang.reflect.Modifier;\n import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Iterator;\n \n@@ -68,6 +69,11 @@\n   // A set of all the method names in this class.\n   HashSet methodNames = new HashSet();\n \n+  // This maps a method name + descriptor, e.g. \"method()V\", to the\n+  // name chosen for the method.  This is used when computing the\n+  // names of bridge method targets.\n+  HashMap methodNameMap = new HashMap();\n+\n   public ClassWrapper(Main classpath)\n   {\n     this.classpath = classpath;\n@@ -187,18 +193,24 @@ private void makeVtable() throws IOException\n         superClass.makeVtable();\n         vtable = new ArrayList(superClass.vtable);\n         bridgeTargets = new HashSet(superClass.bridgeTargets);\n+\tmethodNameMap = new HashMap(superClass.methodNameMap);\n       }\n     else\n       {\n         // Object.\n         vtable = new ArrayList();\n         bridgeTargets = new HashSet();\n+\tmethodNameMap = new HashMap();\n       }\n     addLocalMethods();\n     addInterfaces(this);\n \n-    // Make a set of all the targets of bridge methods.\n-    // We rename bridge methods to avoid problems with C++.\n+    // Make a set of all the targets of bridge methods.  We rename\n+    // bridge target methods to avoid problems with C++.  You might\n+    // think we could rename the bridge methods themselves, but bridge\n+    // methods by definition override a method from the superclass --\n+    // and we have to consider the superclass' header as an\n+    // unchangeable entity.\n     Iterator i = methods.iterator();\n     while (i.hasNext())\n       {\n@@ -232,8 +244,25 @@ private void printMethods(CniPrintStream out) throws IOException\n     while (i.hasNext())\n       {\n         MethodNode m = (MethodNode) i.next();\n-        boolean isTarget = bridgeTargets.contains(m.name + m.desc);\n-        MethodHelper.print(out, m, this, isTarget);\n+\tString nameToUse;\n+\tString sum = m.name + m.desc;\n+\tif (bridgeTargets.contains(sum))\n+\t  {\n+\t    if (methodNameMap.containsKey(sum))\n+\t      nameToUse = (String) methodNameMap.get(sum);\n+\t    else\n+\t      {\n+\t\t// Bridge target that is new in this class.\n+\t\tString cname = this.name;\n+\t\tint index = cname.lastIndexOf('/');\n+\t\tcname = cname.substring(index + 1);\n+\t\tnameToUse = cname + \"$\" + m.name;\n+\t      }\n+\t  }\n+\telse\n+\t  nameToUse = Keywords.getCxxName(m.name);\n+\tmethodNameMap.put(sum, nameToUse);\n+        MethodHelper.print(out, m, this, nameToUse);\n       }\n   }\n "}, {"sha": "4359523ba05f57165f68445f51a7aec96ae25c74", "filename": "libjava/classpath/tools/gnu/classpath/tools/javah/MethodHelper.java", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FMethodHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FMethodHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FMethodHelper.java?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -1,5 +1,5 @@\n /* MethodHelper.java - helper class for manipulating methods\n- Copyright (C) 2006 Free Software Foundation, Inc.\n+ Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n \n  This file is part of GNU Classpath.\n \n@@ -76,7 +76,7 @@ public static String getBridgeTarget(MethodNode meth)\n   }\n \n   public static void print(CniPrintStream out, MethodNode meth,\n-                           ClassWrapper declarer, boolean isBridgeTarget)\n+                           ClassWrapper declarer, String realMethodName)\n   {\n     if (\"<clinit>\".equals(meth.name))\n       return;\n@@ -97,15 +97,7 @@ else if (! isInit && ! Modifier.isPrivate(meth.access)\n       {\n         out.print(Type.getReturnType(meth.desc));\n         out.print(\" \");\n-        if (isBridgeTarget)\n-          {\n-            out.print(\"target$\");\n-            out.print(meth.name);\n-          }\n-        else\n-          {\n-            out.print(Keywords.getCxxName(meth.name));\n-          }\n+\tout.print(realMethodName);\n       }\n     else\n       {"}, {"sha": "e3ab18316f0a08b15a74873c450d5cacdd550685", "filename": "libjava/gnu/java/security/action/GetPropertyAction.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjava%2Fsecurity%2Faction%2FGetPropertyAction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjava%2Fsecurity%2Faction%2FGetPropertyAction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fsecurity%2Faction%2FGetPropertyAction.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -31,7 +31,7 @@ class gnu::java::security::action::GetPropertyAction : public ::java::lang::Obje\n   GetPropertyAction();\n   GetPropertyAction(::java::lang::String *);\n   GetPropertyAction(::java::lang::String *, ::java::lang::String *);\n-  virtual ::java::lang::String * target$run();\n+  virtual ::java::lang::String * GetPropertyAction$run();\n   virtual ::gnu::java::security::action::GetPropertyAction * setParameters(::java::lang::String *);\n   virtual ::gnu::java::security::action::GetPropertyAction * setParameters(::java::lang::String *, ::java::lang::String *);\n   virtual ::java::lang::Object * run();"}, {"sha": "b10ee5d31de57feb657959694e51fe17bb3e4062", "filename": "libjava/gnu/java/security/action/GetSecurityPropertyAction.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjava%2Fsecurity%2Faction%2FGetSecurityPropertyAction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjava%2Fsecurity%2Faction%2FGetSecurityPropertyAction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fsecurity%2Faction%2FGetSecurityPropertyAction.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -33,7 +33,7 @@ class gnu::java::security::action::GetSecurityPropertyAction : public ::java::la\n   GetSecurityPropertyAction(::java::lang::String *, ::java::lang::String *);\n   virtual ::gnu::java::security::action::GetSecurityPropertyAction * setParameters(::java::lang::String *);\n   virtual ::gnu::java::security::action::GetSecurityPropertyAction * setParameters(::java::lang::String *, ::java::lang::String *);\n-  virtual ::java::lang::String * target$run();\n+  virtual ::java::lang::String * GetSecurityPropertyAction$run();\n   virtual ::java::lang::Object * run();\n private:\n   ::java::lang::String * __attribute__((aligned(__alignof__( ::java::lang::Object)))) name;"}, {"sha": "eaef0d0d25513066686d494c05655cd68f7ec79d", "filename": "libjava/gnu/javax/net/ssl/provider/AbstractHandshake$1.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FAbstractHandshake%241.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FAbstractHandshake%241.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FAbstractHandshake%241.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -34,7 +34,7 @@ class gnu::javax::net::ssl::provider::AbstractHandshake$1 : public ::java::lang:\n public: // actually package-private\n   AbstractHandshake$1(::gnu::javax::net::ssl::provider::AbstractHandshake$CertVerifier *);\n public:\n-  ::java::lang::ClassLoader * target$run();\n+  ::java::lang::ClassLoader * AbstractHandshake$1$run();\n   ::java::lang::Object * run();\n public: // actually package-private\n   ::gnu::javax::net::ssl::provider::AbstractHandshake$CertVerifier * __attribute__((aligned(__alignof__( ::java::lang::Object)))) this$1;"}, {"sha": "b19a13f22fd8f20c72714bc8142163a84d444f4b", "filename": "libjava/gnu/javax/net/ssl/provider/CertificateStatusRequest$ResponderIdIterator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FCertificateStatusRequest%24ResponderIdIterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FCertificateStatusRequest%24ResponderIdIterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FCertificateStatusRequest%24ResponderIdIterator.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -35,7 +35,7 @@ class gnu::javax::net::ssl::provider::CertificateStatusRequest$ResponderIdIterat\n \n public:\n   CertificateStatusRequest$ResponderIdIterator(::gnu::javax::net::ssl::provider::CertificateStatusRequest *);\n-  virtual JArray< jbyte > * target$next();\n+  virtual JArray< jbyte > * CertificateStatusRequest$ResponderIdIterator$next();\n   virtual jboolean hasNext();\n   virtual void remove();\n   virtual ::java::lang::Object * next();"}, {"sha": "059ea01eda43e38e41c076f70fc20630539f8538", "filename": "libjava/gnu/javax/net/ssl/provider/CertificateURL$Iterator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FCertificateURL%24Iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FCertificateURL%24Iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FCertificateURL%24Iterator.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -34,7 +34,7 @@ class gnu::javax::net::ssl::provider::CertificateURL$Iterator : public ::java::l\n \n public:\n   CertificateURL$Iterator(::gnu::javax::net::ssl::provider::CertificateURL *);\n-  virtual ::gnu::javax::net::ssl::provider::CertificateURL$URLAndOptionalHash * target$next();\n+  virtual ::gnu::javax::net::ssl::provider::CertificateURL$URLAndOptionalHash * CertificateURL$Iterator$next();\n   virtual jboolean hasNext();\n   virtual void remove();\n   virtual ::java::lang::Object * next();"}, {"sha": "2cf1f2fa6b74f5fb4155fcebdd2a1c83617f3f5e", "filename": "libjava/gnu/javax/net/ssl/provider/CipherSuiteList$Iterator.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FCipherSuiteList%24Iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FCipherSuiteList%24Iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FCipherSuiteList%24Iterator.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -35,15 +35,15 @@ class gnu::javax::net::ssl::provider::CipherSuiteList$Iterator : public ::java::\n public: // actually package-private\n   CipherSuiteList$Iterator(::gnu::javax::net::ssl::provider::CipherSuiteList *);\n public:\n-  virtual void target$add(::gnu::javax::net::ssl::provider::CipherSuite *);\n+  virtual void CipherSuiteList$Iterator$add(::gnu::javax::net::ssl::provider::CipherSuite *);\n   virtual jboolean hasNext();\n   virtual jboolean hasPrevious();\n-  virtual ::gnu::javax::net::ssl::provider::CipherSuite * target$next();\n+  virtual ::gnu::javax::net::ssl::provider::CipherSuite * CipherSuiteList$Iterator$next();\n   virtual jint nextIndex();\n-  virtual ::gnu::javax::net::ssl::provider::CipherSuite * target$previous();\n+  virtual ::gnu::javax::net::ssl::provider::CipherSuite * CipherSuiteList$Iterator$previous();\n   virtual jint previousIndex();\n   virtual void remove();\n-  virtual void target$set(::gnu::javax::net::ssl::provider::CipherSuite *);\n+  virtual void CipherSuiteList$Iterator$set(::gnu::javax::net::ssl::provider::CipherSuite *);\n   virtual ::java::lang::Object * next();\n   virtual ::java::lang::Object * previous();\n   virtual void add(::java::lang::Object *);"}, {"sha": "7d9d7ad34f366aff81a75990e82f2e16fea6b4c0", "filename": "libjava/gnu/javax/net/ssl/provider/ClientCertificateTypeList$Iterator.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FClientCertificateTypeList%24Iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FClientCertificateTypeList%24Iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FClientCertificateTypeList%24Iterator.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -35,15 +35,15 @@ class gnu::javax::net::ssl::provider::ClientCertificateTypeList$Iterator : publi\n public: // actually package-private\n   ClientCertificateTypeList$Iterator(::gnu::javax::net::ssl::provider::ClientCertificateTypeList *);\n public:\n-  virtual void target$add(::gnu::javax::net::ssl::provider::CertificateRequest$ClientCertificateType *);\n+  virtual void ClientCertificateTypeList$Iterator$add(::gnu::javax::net::ssl::provider::CertificateRequest$ClientCertificateType *);\n   virtual jboolean hasNext();\n   virtual jboolean hasPrevious();\n-  virtual ::gnu::javax::net::ssl::provider::CertificateRequest$ClientCertificateType * target$next();\n+  virtual ::gnu::javax::net::ssl::provider::CertificateRequest$ClientCertificateType * ClientCertificateTypeList$Iterator$next();\n   virtual jint nextIndex();\n-  virtual ::gnu::javax::net::ssl::provider::CertificateRequest$ClientCertificateType * target$previous();\n+  virtual ::gnu::javax::net::ssl::provider::CertificateRequest$ClientCertificateType * ClientCertificateTypeList$Iterator$previous();\n   virtual jint previousIndex();\n   virtual void remove();\n-  virtual void target$set(::gnu::javax::net::ssl::provider::CertificateRequest$ClientCertificateType *);\n+  virtual void ClientCertificateTypeList$Iterator$set(::gnu::javax::net::ssl::provider::CertificateRequest$ClientCertificateType *);\n   virtual ::java::lang::Object * next();\n   virtual ::java::lang::Object * previous();\n   virtual void add(::java::lang::Object *);"}, {"sha": "6eff62df8c8696517aff4e0b6830ef6312cd3006", "filename": "libjava/gnu/javax/net/ssl/provider/CompressionMethodList$Iterator.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FCompressionMethodList%24Iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FCompressionMethodList%24Iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FCompressionMethodList%24Iterator.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -35,15 +35,15 @@ class gnu::javax::net::ssl::provider::CompressionMethodList$Iterator : public ::\n public: // actually package-private\n   CompressionMethodList$Iterator(::gnu::javax::net::ssl::provider::CompressionMethodList *);\n public:\n-  virtual void target$add(::gnu::javax::net::ssl::provider::CompressionMethod *);\n+  virtual void CompressionMethodList$Iterator$add(::gnu::javax::net::ssl::provider::CompressionMethod *);\n   virtual jboolean hasNext();\n   virtual jboolean hasPrevious();\n-  virtual ::gnu::javax::net::ssl::provider::CompressionMethod * target$next();\n+  virtual ::gnu::javax::net::ssl::provider::CompressionMethod * CompressionMethodList$Iterator$next();\n   virtual jint nextIndex();\n-  virtual ::gnu::javax::net::ssl::provider::CompressionMethod * target$previous();\n+  virtual ::gnu::javax::net::ssl::provider::CompressionMethod * CompressionMethodList$Iterator$previous();\n   virtual jint previousIndex();\n   virtual void remove();\n-  virtual void target$set(::gnu::javax::net::ssl::provider::CompressionMethod *);\n+  virtual void CompressionMethodList$Iterator$set(::gnu::javax::net::ssl::provider::CompressionMethod *);\n   virtual ::java::lang::Object * next();\n   virtual ::java::lang::Object * previous();\n   virtual void add(::java::lang::Object *);"}, {"sha": "d65857822ba3ffd28120fa26182293ea1161ff30", "filename": "libjava/gnu/javax/net/ssl/provider/ExtensionList$ExtensionsIterator.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FExtensionList%24ExtensionsIterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FExtensionList%24ExtensionsIterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FExtensionList%24ExtensionsIterator.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -36,13 +36,13 @@ class gnu::javax::net::ssl::provider::ExtensionList$ExtensionsIterator : public\n   ExtensionList$ExtensionsIterator(::gnu::javax::net::ssl::provider::ExtensionList *);\n   jboolean hasNext();\n   jboolean hasPrevious();\n-  ::gnu::javax::net::ssl::provider::Extension * target$next();\n-  ::gnu::javax::net::ssl::provider::Extension * target$previous();\n+  ::gnu::javax::net::ssl::provider::Extension * ExtensionList$ExtensionsIterator$next();\n+  ::gnu::javax::net::ssl::provider::Extension * ExtensionList$ExtensionsIterator$previous();\n   jint nextIndex();\n   jint previousIndex();\n-  void target$add(::gnu::javax::net::ssl::provider::Extension *);\n+  void ExtensionList$ExtensionsIterator$add(::gnu::javax::net::ssl::provider::Extension *);\n   void remove();\n-  void target$set(::gnu::javax::net::ssl::provider::Extension *);\n+  void ExtensionList$ExtensionsIterator$set(::gnu::javax::net::ssl::provider::Extension *);\n   ::java::lang::Object * next();\n   ::java::lang::Object * previous();\n   void add(::java::lang::Object *);"}, {"sha": "79230e257ff904ae9b0abb5783ca371fa374debe", "filename": "libjava/gnu/javax/net/ssl/provider/ProtocolVersion.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FProtocolVersion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FProtocolVersion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FProtocolVersion.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -45,7 +45,7 @@ class gnu::javax::net::ssl::provider::ProtocolVersion : public ::java::lang::Obj\n   jint rawValue();\n   jboolean equals(::java::lang::Object *);\n   jint hashCode();\n-  jint target$compareTo(::gnu::javax::net::ssl::provider::ProtocolVersion *);\n+  jint ProtocolVersion$compareTo(::gnu::javax::net::ssl::provider::ProtocolVersion *);\n   ::java::lang::String * toString(::java::lang::String *);\n   ::java::lang::String * toString();\n   jint compareTo(::java::lang::Object *);"}, {"sha": "411d009a5312a0523e94fd6dfe46c860e185f056", "filename": "libjava/gnu/javax/net/ssl/provider/SSLServerSocketFactoryImpl.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSSLServerSocketFactoryImpl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSSLServerSocketFactoryImpl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSSLServerSocketFactoryImpl.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -46,9 +46,9 @@ class gnu::javax::net::ssl::provider::SSLServerSocketFactoryImpl : public ::java\n   SSLServerSocketFactoryImpl(::gnu::javax::net::ssl::provider::SSLContextImpl *);\n   virtual JArray< ::java::lang::String * > * getDefaultCipherSuites();\n   virtual JArray< ::java::lang::String * > * getSupportedCipherSuites();\n-  virtual ::gnu::javax::net::ssl::provider::SSLServerSocketImpl * target$createServerSocket(jint);\n-  virtual ::gnu::javax::net::ssl::provider::SSLServerSocketImpl * target$createServerSocket(jint, jint);\n-  virtual ::gnu::javax::net::ssl::provider::SSLServerSocketImpl * target$createServerSocket(jint, jint, ::java::net::InetAddress *);\n+  virtual ::gnu::javax::net::ssl::provider::SSLServerSocketImpl * SSLServerSocketFactoryImpl$createServerSocket(jint);\n+  virtual ::gnu::javax::net::ssl::provider::SSLServerSocketImpl * SSLServerSocketFactoryImpl$createServerSocket(jint, jint);\n+  virtual ::gnu::javax::net::ssl::provider::SSLServerSocketImpl * SSLServerSocketFactoryImpl$createServerSocket(jint, jint, ::java::net::InetAddress *);\n   virtual ::java::net::ServerSocket * createServerSocket(jint, jint, ::java::net::InetAddress *);\n   virtual ::java::net::ServerSocket * createServerSocket(jint, jint);\n   virtual ::java::net::ServerSocket * createServerSocket(jint);"}, {"sha": "3302defad140463981de0ab8960caa931bfc184a", "filename": "libjava/gnu/javax/net/ssl/provider/SSLServerSocketImpl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSSLServerSocketImpl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSSLServerSocketImpl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSSLServerSocketImpl.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -57,7 +57,7 @@ class gnu::javax::net::ssl::provider::SSLServerSocketImpl : public ::javax::net:\n   virtual void setNeedClientAuth(jboolean);\n   virtual void setUseClientMode(jboolean);\n   virtual void setWantClientAuth(jboolean);\n-  virtual ::gnu::javax::net::ssl::provider::SSLSocketImpl * target$accept();\n+  virtual ::gnu::javax::net::ssl::provider::SSLSocketImpl * SSLServerSocketImpl$accept();\n   virtual ::java::net::Socket * accept();\n private:\n   ::gnu::javax::net::ssl::provider::SSLContextImpl * __attribute__((aligned(__alignof__( ::javax::net::ssl::SSLServerSocket)))) contextImpl;"}, {"sha": "24ac5f9bce1a2b467dd0ebdfeab14946420342b1", "filename": "libjava/gnu/javax/net/ssl/provider/SSLSocketFactoryImpl.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSSLSocketFactoryImpl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSSLSocketFactoryImpl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSSLSocketFactoryImpl.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -47,10 +47,10 @@ class gnu::javax::net::ssl::provider::SSLSocketFactoryImpl : public ::javax::net\n   virtual ::java::net::Socket * createSocket(::java::net::Socket *, ::java::lang::String *, jint, jboolean);\n   virtual JArray< ::java::lang::String * > * getDefaultCipherSuites();\n   virtual JArray< ::java::lang::String * > * getSupportedCipherSuites();\n-  virtual ::gnu::javax::net::ssl::provider::SSLSocketImpl * target$createSocket(::java::lang::String *, jint);\n-  virtual ::gnu::javax::net::ssl::provider::SSLSocketImpl * target$createSocket(::java::lang::String *, jint, ::java::net::InetAddress *, jint);\n-  virtual ::gnu::javax::net::ssl::provider::SSLSocketImpl * target$createSocket(::java::net::InetAddress *, jint);\n-  virtual ::gnu::javax::net::ssl::provider::SSLSocketImpl * target$createSocket(::java::net::InetAddress *, jint, ::java::net::InetAddress *, jint);\n+  virtual ::gnu::javax::net::ssl::provider::SSLSocketImpl * SSLSocketFactoryImpl$createSocket(::java::lang::String *, jint);\n+  virtual ::gnu::javax::net::ssl::provider::SSLSocketImpl * SSLSocketFactoryImpl$createSocket(::java::lang::String *, jint, ::java::net::InetAddress *, jint);\n+  virtual ::gnu::javax::net::ssl::provider::SSLSocketImpl * SSLSocketFactoryImpl$createSocket(::java::net::InetAddress *, jint);\n+  virtual ::gnu::javax::net::ssl::provider::SSLSocketImpl * SSLSocketFactoryImpl$createSocket(::java::net::InetAddress *, jint, ::java::net::InetAddress *, jint);\n   virtual ::java::net::Socket * createSocket(::java::net::InetAddress *, jint, ::java::net::InetAddress *, jint);\n   virtual ::java::net::Socket * createSocket(::java::net::InetAddress *, jint);\n   virtual ::java::net::Socket * createSocket(::java::lang::String *, jint, ::java::net::InetAddress *, jint);"}, {"sha": "6289bfdef1d6c451f35a420d5332478632b48e58", "filename": "libjava/gnu/javax/net/ssl/provider/ServerNameList$Iterator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FServerNameList%24Iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FServerNameList%24Iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FServerNameList%24Iterator.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -35,7 +35,7 @@ class gnu::javax::net::ssl::provider::ServerNameList$Iterator : public ::java::l\n public:\n   ServerNameList$Iterator(::gnu::javax::net::ssl::provider::ServerNameList *);\n   virtual jboolean hasNext();\n-  virtual ::gnu::javax::net::ssl::provider::ServerNameList$ServerName * target$next();\n+  virtual ::gnu::javax::net::ssl::provider::ServerNameList$ServerName * ServerNameList$Iterator$next();\n   virtual void remove();\n   virtual ::java::lang::Object * next();\n private:"}, {"sha": "89969b1116550a6d7d7fca8aabce7fc60ebddb3e", "filename": "libjava/gnu/javax/net/ssl/provider/TrustedAuthorities$AuthoritiesIterator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FTrustedAuthorities%24AuthoritiesIterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FTrustedAuthorities%24AuthoritiesIterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FTrustedAuthorities%24AuthoritiesIterator.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -34,7 +34,7 @@ class gnu::javax::net::ssl::provider::TrustedAuthorities$AuthoritiesIterator : p\n \n public:\n   TrustedAuthorities$AuthoritiesIterator(::gnu::javax::net::ssl::provider::TrustedAuthorities *);\n-  virtual ::gnu::javax::net::ssl::provider::TrustedAuthorities$TrustedAuthority * target$next();\n+  virtual ::gnu::javax::net::ssl::provider::TrustedAuthorities$TrustedAuthority * TrustedAuthorities$AuthoritiesIterator$next();\n   virtual jboolean hasNext();\n   virtual void remove();\n   virtual ::java::lang::Object * next();"}, {"sha": "f41f17b9fce6a39b8b2bffacd2dfdd64b6df58f6", "filename": "libjava/gnu/javax/net/ssl/provider/X500PrincipalList$Iterator.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FX500PrincipalList%24Iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FX500PrincipalList%24Iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FX500PrincipalList%24Iterator.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -46,15 +46,15 @@ class gnu::javax::net::ssl::provider::X500PrincipalList$Iterator : public ::java\n \n public:\n   X500PrincipalList$Iterator(::gnu::javax::net::ssl::provider::X500PrincipalList *);\n-  virtual void target$add(::javax::security::auth::x500::X500Principal *);\n+  virtual void X500PrincipalList$Iterator$add(::javax::security::auth::x500::X500Principal *);\n   virtual jboolean hasNext();\n   virtual jboolean hasPrevious();\n-  virtual ::javax::security::auth::x500::X500Principal * target$next();\n+  virtual ::javax::security::auth::x500::X500Principal * X500PrincipalList$Iterator$next();\n   virtual jint nextIndex();\n-  virtual ::javax::security::auth::x500::X500Principal * target$previous();\n+  virtual ::javax::security::auth::x500::X500Principal * X500PrincipalList$Iterator$previous();\n   virtual jint previousIndex();\n   virtual void remove();\n-  virtual void target$set(::javax::security::auth::x500::X500Principal *);\n+  virtual void X500PrincipalList$Iterator$set(::javax::security::auth::x500::X500Principal *);\n   virtual ::java::lang::Object * next();\n   virtual ::java::lang::Object * previous();\n   virtual void add(::java::lang::Object *);"}, {"sha": "d5d2de3a16766a416225f6de14c29e42859c2e89", "filename": "libjava/java/io/CharArrayWriter.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fio%2FCharArrayWriter.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fio%2FCharArrayWriter.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FCharArrayWriter.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -26,18 +26,18 @@ class java::io::CharArrayWriter : public ::java::io::Writer\n   virtual void write(JArray< jchar > *, jint, jint);\n   virtual void write(::java::lang::String *, jint, jint);\n   virtual void writeTo(::java::io::Writer *);\n-  virtual ::java::io::CharArrayWriter * target$append(jchar);\n-  virtual ::java::io::CharArrayWriter * target$append(::java::lang::CharSequence *);\n-  virtual ::java::io::CharArrayWriter * target$append(::java::lang::CharSequence *, jint, jint);\n+  virtual ::java::io::CharArrayWriter * CharArrayWriter$append(jchar);\n+  virtual ::java::io::CharArrayWriter * CharArrayWriter$append(::java::lang::CharSequence *);\n+  virtual ::java::io::CharArrayWriter * CharArrayWriter$append(::java::lang::CharSequence *, jint, jint);\n private:\n   void resize(jint);\n public:\n   virtual ::java::lang::Appendable * append(::java::lang::CharSequence *, jint, jint);\n-  virtual ::java::io::Writer * target$append(::java::lang::CharSequence *, jint, jint);\n+  virtual ::java::io::Writer * CharArrayWriter$append(::java::lang::CharSequence *, jint, jint);\n   virtual ::java::lang::Appendable * append(::java::lang::CharSequence *);\n-  virtual ::java::io::Writer * target$append(::java::lang::CharSequence *);\n+  virtual ::java::io::Writer * CharArrayWriter$append(::java::lang::CharSequence *);\n   virtual ::java::lang::Appendable * append(jchar);\n-  virtual ::java::io::Writer * target$append(jchar);\n+  virtual ::java::io::Writer * CharArrayWriter$append(jchar);\n private:\n   static const jint DEFAULT_INITIAL_BUFFER_SIZE = 32;\n public: // actually protected"}, {"sha": "b76912e34efffda44ab432e3e7616176bce2bbb9", "filename": "libjava/java/io/PrintStream.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fio%2FPrintStream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fio%2FPrintStream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FPrintStream.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -63,9 +63,9 @@ class java::io::PrintStream : public ::java::io::FilterOutputStream\n   virtual void println(JArray< jchar > *);\n   virtual void write(jint);\n   virtual void write(JArray< jbyte > *, jint, jint);\n-  virtual ::java::io::PrintStream * target$append(jchar);\n-  virtual ::java::io::PrintStream * target$append(::java::lang::CharSequence *);\n-  virtual ::java::io::PrintStream * target$append(::java::lang::CharSequence *, jint, jint);\n+  virtual ::java::io::PrintStream * PrintStream$append(jchar);\n+  virtual ::java::io::PrintStream * PrintStream$append(::java::lang::CharSequence *);\n+  virtual ::java::io::PrintStream * PrintStream$append(::java::lang::CharSequence *, jint, jint);\n   virtual ::java::io::PrintStream * printf(::java::lang::String *, JArray< ::java::lang::Object * > *);\n   virtual ::java::io::PrintStream * printf(::java::util::Locale *, ::java::lang::String *, JArray< ::java::lang::Object * > *);\n   virtual ::java::io::PrintStream * format(::java::lang::String *, JArray< ::java::lang::Object * > *);"}, {"sha": "cf1fb324a9c9e428992a76cfa5eb9c42d97d7f78", "filename": "libjava/java/io/PrintWriter.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fio%2FPrintWriter.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fio%2FPrintWriter.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FPrintWriter.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -52,19 +52,19 @@ class java::io::PrintWriter : public ::java::io::Writer\n   virtual void write(::java::lang::String *, jint, jint);\n   virtual void write(JArray< jchar > *);\n   virtual void write(::java::lang::String *);\n-  virtual ::java::io::PrintWriter * target$append(jchar);\n-  virtual ::java::io::PrintWriter * target$append(::java::lang::CharSequence *);\n-  virtual ::java::io::PrintWriter * target$append(::java::lang::CharSequence *, jint, jint);\n+  virtual ::java::io::PrintWriter * PrintWriter$append(jchar);\n+  virtual ::java::io::PrintWriter * PrintWriter$append(::java::lang::CharSequence *);\n+  virtual ::java::io::PrintWriter * PrintWriter$append(::java::lang::CharSequence *, jint, jint);\n   virtual ::java::io::PrintWriter * printf(::java::lang::String *, JArray< ::java::lang::Object * > *);\n   virtual ::java::io::PrintWriter * printf(::java::util::Locale *, ::java::lang::String *, JArray< ::java::lang::Object * > *);\n   virtual ::java::io::PrintWriter * format(::java::lang::String *, JArray< ::java::lang::Object * > *);\n   virtual ::java::io::PrintWriter * format(::java::util::Locale *, ::java::lang::String *, JArray< ::java::lang::Object * > *);\n   virtual ::java::lang::Appendable * append(::java::lang::CharSequence *, jint, jint);\n-  virtual ::java::io::Writer * target$append(::java::lang::CharSequence *, jint, jint);\n+  virtual ::java::io::Writer * Writer$append(::java::lang::CharSequence *, jint, jint);\n   virtual ::java::lang::Appendable * append(::java::lang::CharSequence *);\n-  virtual ::java::io::Writer * target$append(::java::lang::CharSequence *);\n+  virtual ::java::io::Writer * Writer$append(::java::lang::CharSequence *);\n   virtual ::java::lang::Appendable * append(jchar);\n-  virtual ::java::io::Writer * target$append(jchar);\n+  virtual ::java::io::Writer * Writer$append(jchar);\n private:\n   jboolean __attribute__((aligned(__alignof__( ::java::io::Writer)))) autoflush;\n   jboolean error;"}, {"sha": "c2933e7aff615329e9ffc1e996f0a8cee3c6d54b", "filename": "libjava/java/io/StringWriter.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fio%2FStringWriter.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fio%2FStringWriter.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FStringWriter.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -24,15 +24,15 @@ class java::io::StringWriter : public ::java::io::Writer\n   virtual void write(JArray< jchar > *, jint, jint);\n   virtual void write(::java::lang::String *);\n   virtual void write(::java::lang::String *, jint, jint);\n-  virtual ::java::io::StringWriter * target$append(jchar);\n-  virtual ::java::io::StringWriter * target$append(::java::lang::CharSequence *);\n-  virtual ::java::io::StringWriter * target$append(::java::lang::CharSequence *, jint, jint);\n+  virtual ::java::io::StringWriter * StringWriter$append(jchar);\n+  virtual ::java::io::StringWriter * StringWriter$append(::java::lang::CharSequence *);\n+  virtual ::java::io::StringWriter * StringWriter$append(::java::lang::CharSequence *, jint, jint);\n   virtual ::java::lang::Appendable * append(::java::lang::CharSequence *, jint, jint);\n-  virtual ::java::io::Writer * target$append(::java::lang::CharSequence *, jint, jint);\n+  virtual ::java::io::Writer * Writer$append(::java::lang::CharSequence *, jint, jint);\n   virtual ::java::lang::Appendable * append(::java::lang::CharSequence *);\n-  virtual ::java::io::Writer * target$append(::java::lang::CharSequence *);\n+  virtual ::java::io::Writer * Writer$append(::java::lang::CharSequence *);\n   virtual ::java::lang::Appendable * append(jchar);\n-  virtual ::java::io::Writer * target$append(jchar);\n+  virtual ::java::io::Writer * Writer$append(jchar);\n private:\n   static const jint DEFAULT_BUFFER_SIZE = 16;\n   ::java::lang::StringBuffer * __attribute__((aligned(__alignof__( ::java::io::Writer)))) buffer;"}, {"sha": "148501ac6e64a0cdc0edc349f9a2123eb5357bcf", "filename": "libjava/java/io/Writer.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fio%2FWriter.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fio%2FWriter.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FWriter.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -24,9 +24,9 @@ class java::io::Writer : public ::java::lang::Object\n   virtual void write(JArray< jchar > *, jint, jint) = 0;\n   virtual void write(::java::lang::String *);\n   virtual void write(::java::lang::String *, jint, jint);\n-  virtual ::java::io::Writer * target$append(jchar);\n-  virtual ::java::io::Writer * target$append(::java::lang::CharSequence *);\n-  virtual ::java::io::Writer * target$append(::java::lang::CharSequence *, jint, jint);\n+  virtual ::java::io::Writer * Writer$append(jchar);\n+  virtual ::java::io::Writer * Writer$append(::java::lang::CharSequence *);\n+  virtual ::java::io::Writer * Writer$append(::java::lang::CharSequence *, jint, jint);\n   virtual ::java::lang::Appendable * append(::java::lang::CharSequence *, jint, jint);\n   virtual ::java::lang::Appendable * append(::java::lang::CharSequence *);\n   virtual ::java::lang::Appendable * append(jchar);"}, {"sha": "0ead5b527e4f4b02d57c99706b686c44f20e647d", "filename": "libjava/java/lang/Boolean.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FBoolean.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FBoolean.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FBoolean.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -22,7 +22,7 @@ class java::lang::Boolean : public ::java::lang::Object\n   jint hashCode();\n   jboolean equals(::java::lang::Object *);\n   static jboolean getBoolean(::java::lang::String *);\n-  jint target$compareTo(::java::lang::Boolean *);\n+  jint Boolean$compareTo(::java::lang::Boolean *);\n   static jboolean parseBoolean(::java::lang::String *);\n   jint compareTo(::java::lang::Object *);\n private:"}, {"sha": "fc9e3b33f675831d45e6703f4b219f8a4d2e1418", "filename": "libjava/java/lang/Byte.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FByte.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FByte.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FByte.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -32,7 +32,7 @@ class java::lang::Byte : public ::java::lang::Number\n   ::java::lang::String * toString();\n   jint hashCode();\n   jboolean equals(::java::lang::Object *);\n-  jint target$compareTo(::java::lang::Byte *);\n+  jint Byte$compareTo(::java::lang::Byte *);\n   jint compareTo(::java::lang::Object *);\n private:\n   static const jlong serialVersionUID = -7183698231559129828LL;"}, {"sha": "a2144709853e9c36e14b23759dee2453be981eb3", "filename": "libjava/java/lang/Character.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FCharacter.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FCharacter.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FCharacter.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -76,7 +76,7 @@ class java::lang::Character : public ::java::lang::Object\n   static jbyte getDirectionality(jint);\n   static jboolean isMirrored(jchar);\n   static jboolean isMirrored(jint);\n-  jint target$compareTo(::java::lang::Character *);\n+  jint Character$compareTo(::java::lang::Character *);\n   static ::java::lang::Character * valueOf(jchar);\n   static jchar reverseBytes(jchar);\n   static JArray< jchar > * toChars(jint);"}, {"sha": "7808acc46596aee109d024201c9fd53a7257a71b", "filename": "libjava/java/lang/Double.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FDouble.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FDouble.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FDouble.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -35,7 +35,7 @@ class java::lang::Double : public ::java::lang::Number\n   static jlong doubleToLongBits(jdouble);\n   static jlong doubleToRawLongBits(jdouble);\n   static jdouble longBitsToDouble(jlong);\n-  jint target$compareTo(::java::lang::Double *);\n+  jint Double$compareTo(::java::lang::Double *);\n   static jint compare(jdouble, jdouble);\n   jint compareTo(::java::lang::Object *);\n private:"}, {"sha": "a75f2766c9322e1ab7cb00c52e62b451ba71bd3f", "filename": "libjava/java/lang/Enum.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FEnum.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FEnum.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FEnum.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -18,7 +18,7 @@ class java::lang::Enum : public ::java::lang::Object\n   virtual jboolean equals(::java::lang::Object *);\n   virtual jint hashCode();\n   virtual ::java::lang::String * toString();\n-  virtual jint target$compareTo(::java::lang::Enum *);\n+  virtual jint Enum$compareTo(::java::lang::Enum *);\n public: // actually protected\n   virtual ::java::lang::Object * clone();\n public:"}, {"sha": "0069df44bffe6eab6ae943b49467d22477139b3e", "filename": "libjava/java/lang/Float.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FFloat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FFloat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FFloat.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -36,7 +36,7 @@ class java::lang::Float : public ::java::lang::Number\n   static jint floatToIntBits(jfloat);\n   static jint floatToRawIntBits(jfloat);\n   static jfloat intBitsToFloat(jint);\n-  jint target$compareTo(::java::lang::Float *);\n+  jint Float$compareTo(::java::lang::Float *);\n   static jint compare(jfloat, jfloat);\n   jint compareTo(::java::lang::Object *);\n private:"}, {"sha": "aebcd0a164f904f5e7de6c841aa8fdbb163c2871", "filename": "libjava/java/lang/Integer.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FInteger.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FInteger.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FInteger.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -39,7 +39,7 @@ class java::lang::Integer : public ::java::lang::Number\n   static ::java::lang::Integer * getInteger(::java::lang::String *, jint);\n   static ::java::lang::Integer * getInteger(::java::lang::String *, ::java::lang::Integer *);\n   static ::java::lang::Integer * decode(::java::lang::String *);\n-  jint target$compareTo(::java::lang::Integer *);\n+  jint Integer$compareTo(::java::lang::Integer *);\n   static jint bitCount(jint);\n   static jint rotateLeft(jint, jint);\n   static jint rotateRight(jint, jint);"}, {"sha": "b0358e6d729d0eef7477c41bddfe4ea6e5554db9", "filename": "libjava/java/lang/Long.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FLong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FLong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FLong.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -37,7 +37,7 @@ class java::lang::Long : public ::java::lang::Number\n   static ::java::lang::Long * getLong(::java::lang::String *);\n   static ::java::lang::Long * getLong(::java::lang::String *, jlong);\n   static ::java::lang::Long * getLong(::java::lang::String *, ::java::lang::Long *);\n-  jint target$compareTo(::java::lang::Long *);\n+  jint Long$compareTo(::java::lang::Long *);\n   static jint bitCount(jlong);\n   static jlong rotateLeft(jlong, jint);\n   static jlong rotateRight(jlong, jint);"}, {"sha": "4858db52f4ad980000f4c3dc61578f1e5ad0a5bb", "filename": "libjava/java/lang/Short.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FShort.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FShort.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FShort.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -32,7 +32,7 @@ class java::lang::Short : public ::java::lang::Number\n   ::java::lang::String * toString();\n   jint hashCode();\n   jboolean equals(::java::lang::Object *);\n-  jint target$compareTo(::java::lang::Short *);\n+  jint Short$compareTo(::java::lang::Short *);\n   static jshort reverseBytes(jshort);\n   jint compareTo(::java::lang::Object *);\n private:"}, {"sha": "8a1b121bc2bf911d5cbaa633127491fc343936c0", "filename": "libjava/java/lang/String$CaseInsensitiveComparator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FString%24CaseInsensitiveComparator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FString%24CaseInsensitiveComparator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FString%24CaseInsensitiveComparator.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -14,7 +14,7 @@ class java::lang::String$CaseInsensitiveComparator : public ::java::lang::Object\n public: // actually package-private\n   String$CaseInsensitiveComparator();\n public:\n-  jint target$compare(::java::lang::String *, ::java::lang::String *);\n+  jint String$CaseInsensitiveComparator$compare(::java::lang::String *, ::java::lang::String *);\n   jint compare(::java::lang::Object *, ::java::lang::Object *);\n private:\n   static const jlong serialVersionUID = 8575799808933029326LL;"}, {"sha": "5fa06de982bbb99be73a433874dbddaca80a7e63", "filename": "libjava/java/lang/String.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FString.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FString.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FString.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -62,7 +62,7 @@ class java::lang::String : public ::java::lang::Object\n   jboolean contentEquals(::java::lang::StringBuffer *);\n   jboolean contentEquals(::java::lang::CharSequence *);\n   jboolean equalsIgnoreCase(::java::lang::String *);\n-  jint target$compareTo(::java::lang::String *);\n+  jint String$compareTo(::java::lang::String *);\n private:\n   jint nativeCompareTo(::java::lang::String *);\n public:"}, {"sha": "983ef98d73c2a5c770abb14bd5c3f29ed6dda5f8", "filename": "libjava/java/lang/StringBuffer.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FStringBuffer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FStringBuffer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FStringBuffer.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -34,9 +34,9 @@ class java::lang::StringBuffer : public ::java::lang::Object\n   ::java::lang::StringBuffer * append(JArray< jchar > *, jint, jint);\n   ::java::lang::StringBuffer * appendCodePoint(jint);\n   ::java::lang::StringBuffer * append(jboolean);\n-  ::java::lang::StringBuffer * target$append(jchar);\n-  ::java::lang::StringBuffer * target$append(::java::lang::CharSequence *);\n-  ::java::lang::StringBuffer * target$append(::java::lang::CharSequence *, jint, jint);\n+  ::java::lang::StringBuffer * StringBuffer$append(jchar);\n+  ::java::lang::StringBuffer * StringBuffer$append(::java::lang::CharSequence *);\n+  ::java::lang::StringBuffer * StringBuffer$append(::java::lang::CharSequence *, jint, jint);\n   ::java::lang::StringBuffer * append(jint);\n   ::java::lang::StringBuffer * append(jlong);\n   ::java::lang::StringBuffer * append(jfloat);"}, {"sha": "b8b504a995d601430be0f0ee5f67ac9ff29368dd", "filename": "libjava/java/lang/StringBuilder.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FStringBuilder.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FStringBuilder.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FStringBuilder.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -31,9 +31,9 @@ class java::lang::StringBuilder : public ::java::lang::Object\n   ::java::lang::StringBuilder * append(JArray< jchar > *);\n   ::java::lang::StringBuilder * append(JArray< jchar > *, jint, jint);\n   ::java::lang::StringBuilder * append(jboolean);\n-  ::java::lang::StringBuilder * target$append(jchar);\n-  ::java::lang::StringBuilder * target$append(::java::lang::CharSequence *);\n-  ::java::lang::StringBuilder * target$append(::java::lang::CharSequence *, jint, jint);\n+  ::java::lang::StringBuilder * StringBuilder$append(jchar);\n+  ::java::lang::StringBuilder * StringBuilder$append(::java::lang::CharSequence *);\n+  ::java::lang::StringBuilder * StringBuilder$append(::java::lang::CharSequence *, jint, jint);\n   ::java::lang::StringBuilder * appendCodePoint(jint);\n   ::java::lang::StringBuilder * append(jint);\n   ::java::lang::StringBuilder * append(jlong);"}, {"sha": "c8ef8aade07c749c5d397910c7715f71bbc95e3e", "filename": "libjava/java/lang/System$EnvironmentMap.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FSystem%24EnvironmentMap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Flang%2FSystem%24EnvironmentMap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FSystem%24EnvironmentMap.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -18,10 +18,10 @@ class java::lang::System$EnvironmentMap : public ::java::util::HashMap\n   virtual jboolean containsKey(::java::lang::Object *);\n   virtual jboolean containsValue(::java::lang::Object *);\n   virtual ::java::util::Set * entrySet();\n-  virtual ::java::lang::String * target$get(::java::lang::Object *);\n+  virtual ::java::lang::String * System$EnvironmentMap$get(::java::lang::Object *);\n   virtual ::java::util::Set * keySet();\n-  virtual ::java::lang::String * target$put(::java::lang::String *, ::java::lang::String *);\n-  virtual ::java::lang::String * target$remove(::java::lang::Object *);\n+  virtual ::java::lang::String * System$EnvironmentMap$put(::java::lang::String *, ::java::lang::String *);\n+  virtual ::java::lang::String * System$EnvironmentMap$remove(::java::lang::Object *);\n   virtual ::java::util::Collection * values();\n   virtual ::java::lang::Object * get(::java::lang::Object *);\n   virtual ::java::lang::Object * remove(::java::lang::Object *);"}, {"sha": "aeeab25236d69b5b30a0ff89b2942955fff3deb5", "filename": "libjava/java/math/BigDecimal.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fmath%2FBigDecimal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fmath%2FBigDecimal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fmath%2FBigDecimal.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -62,7 +62,7 @@ class java::math::BigDecimal : public ::java::lang::Number\n private:\n   ::java::math::BigDecimal * floor();\n public:\n-  virtual jint target$compareTo(::java::math::BigDecimal *);\n+  virtual jint BigDecimal$compareTo(::java::math::BigDecimal *);\n   virtual jboolean equals(::java::lang::Object *);\n   virtual jint hashCode();\n   virtual ::java::math::BigDecimal * max(::java::math::BigDecimal *);"}, {"sha": "eaf03268224c694374b278824ff2288732a1acd1", "filename": "libjava/java/math/BigInteger.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fmath%2FBigInteger.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fmath%2FBigInteger.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fmath%2FBigInteger.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -48,7 +48,7 @@ class java::math::BigInteger : public ::java::lang::Number\n private:\n   static jint compareTo(::java::math::BigInteger *, ::java::math::BigInteger *);\n public:\n-  virtual jint target$compareTo(::java::math::BigInteger *);\n+  virtual jint BigInteger$compareTo(::java::math::BigInteger *);\n   virtual ::java::math::BigInteger * min(::java::math::BigInteger *);\n   virtual ::java::math::BigInteger * max(::java::math::BigInteger *);\n private:"}, {"sha": "d955dce503c6b3002e358e971fa8c9e184a3af62", "filename": "libjava/java/net/URI.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fnet%2FURI.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fnet%2FURI.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURI.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -69,7 +69,7 @@ class java::net::URI : public ::java::lang::Object\n   ::java::lang::String * getFragment();\n   jboolean equals(::java::lang::Object *);\n   jint hashCode();\n-  jint target$compareTo(::java::net::URI *);\n+  jint URI$compareTo(::java::net::URI *);\n private:\n   jint compareFragments(::java::net::URI *);\n public:"}, {"sha": "7836894bde792037bc476839ee0aa389cebb5a8a", "filename": "libjava/java/nio/ByteBuffer.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fnio%2FByteBuffer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fnio%2FByteBuffer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FByteBuffer.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -47,7 +47,7 @@ class java::nio::ByteBuffer : public ::java::nio::Buffer\n   virtual jint arrayOffset();\n   virtual jint hashCode();\n   virtual jboolean equals(::java::lang::Object *);\n-  virtual jint target$compareTo(::java::nio::ByteBuffer *);\n+  virtual jint ByteBuffer$compareTo(::java::nio::ByteBuffer *);\n   virtual ::java::nio::ByteOrder * order();\n   virtual ::java::nio::ByteBuffer * order(::java::nio::ByteOrder *);\n   virtual jbyte get() = 0;"}, {"sha": "3d3356041ea95a32f0c5bf608479367fc1535e68", "filename": "libjava/java/nio/CharBuffer.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fnio%2FCharBuffer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fnio%2FCharBuffer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FCharBuffer.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -43,7 +43,7 @@ class java::nio::CharBuffer : public ::java::nio::Buffer\n   virtual jint arrayOffset();\n   virtual jint hashCode();\n   virtual jboolean equals(::java::lang::Object *);\n-  virtual jint target$compareTo(::java::nio::CharBuffer *);\n+  virtual jint CharBuffer$compareTo(::java::nio::CharBuffer *);\n   virtual ::java::nio::ByteOrder * order() = 0;\n   virtual jchar get() = 0;\n   virtual ::java::nio::CharBuffer * put(jchar) = 0;\n@@ -60,9 +60,9 @@ class java::nio::CharBuffer : public ::java::nio::Buffer\n   virtual ::java::nio::CharBuffer * put(::java::lang::String *, jint, jint);\n   virtual ::java::nio::CharBuffer * put(::java::lang::String *);\n   virtual jchar charAt(jint);\n-  virtual ::java::nio::CharBuffer * target$append(jchar);\n-  virtual ::java::nio::CharBuffer * target$append(::java::lang::CharSequence *);\n-  virtual ::java::nio::CharBuffer * target$append(::java::lang::CharSequence *, jint, jint);\n+  virtual ::java::nio::CharBuffer * CharBuffer$append(jchar);\n+  virtual ::java::nio::CharBuffer * CharBuffer$append(::java::lang::CharSequence *);\n+  virtual ::java::nio::CharBuffer * CharBuffer$append(::java::lang::CharSequence *, jint, jint);\n   virtual ::java::lang::Appendable * append(::java::lang::CharSequence *, jint, jint);\n   virtual ::java::lang::Appendable * append(::java::lang::CharSequence *);\n   virtual ::java::lang::Appendable * append(jchar);"}, {"sha": "e201a4f27617e8bbcf28f8d72a2087386bc67dba", "filename": "libjava/java/nio/DoubleBuffer.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fnio%2FDoubleBuffer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fnio%2FDoubleBuffer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FDoubleBuffer.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -40,7 +40,7 @@ class java::nio::DoubleBuffer : public ::java::nio::Buffer\n   virtual jint arrayOffset();\n   virtual jint hashCode();\n   virtual jboolean equals(::java::lang::Object *);\n-  virtual jint target$compareTo(::java::nio::DoubleBuffer *);\n+  virtual jint DoubleBuffer$compareTo(::java::nio::DoubleBuffer *);\n   virtual ::java::nio::ByteOrder * order() = 0;\n   virtual jdouble get() = 0;\n   virtual ::java::nio::DoubleBuffer * put(jdouble) = 0;"}, {"sha": "18348f2ea4be6508565c2a9beeebf748e03101e5", "filename": "libjava/java/nio/FloatBuffer.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fnio%2FFloatBuffer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fnio%2FFloatBuffer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FFloatBuffer.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -40,7 +40,7 @@ class java::nio::FloatBuffer : public ::java::nio::Buffer\n   virtual jint arrayOffset();\n   virtual jint hashCode();\n   virtual jboolean equals(::java::lang::Object *);\n-  virtual jint target$compareTo(::java::nio::FloatBuffer *);\n+  virtual jint FloatBuffer$compareTo(::java::nio::FloatBuffer *);\n   virtual ::java::nio::ByteOrder * order() = 0;\n   virtual jfloat get() = 0;\n   virtual ::java::nio::FloatBuffer * put(jfloat) = 0;"}, {"sha": "e099d4a0b23c95f6511f46a0f4f6e4d50fb4bb01", "filename": "libjava/java/nio/IntBuffer.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fnio%2FIntBuffer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fnio%2FIntBuffer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FIntBuffer.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -40,7 +40,7 @@ class java::nio::IntBuffer : public ::java::nio::Buffer\n   virtual jint arrayOffset();\n   virtual jint hashCode();\n   virtual jboolean equals(::java::lang::Object *);\n-  virtual jint target$compareTo(::java::nio::IntBuffer *);\n+  virtual jint IntBuffer$compareTo(::java::nio::IntBuffer *);\n   virtual ::java::nio::ByteOrder * order() = 0;\n   virtual jint get() = 0;\n   virtual ::java::nio::IntBuffer * put(jint) = 0;"}, {"sha": "0e6ad30ef076250f4646b9cb52bd55b8f30539d0", "filename": "libjava/java/nio/LongBuffer.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fnio%2FLongBuffer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fnio%2FLongBuffer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FLongBuffer.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -40,7 +40,7 @@ class java::nio::LongBuffer : public ::java::nio::Buffer\n   virtual jint arrayOffset();\n   virtual jint hashCode();\n   virtual jboolean equals(::java::lang::Object *);\n-  virtual jint target$compareTo(::java::nio::LongBuffer *);\n+  virtual jint LongBuffer$compareTo(::java::nio::LongBuffer *);\n   virtual ::java::nio::ByteOrder * order() = 0;\n   virtual jlong get() = 0;\n   virtual ::java::nio::LongBuffer * put(jlong) = 0;"}, {"sha": "ddcfc093ee257c4ff4360f7b134f25cdf921082b", "filename": "libjava/java/nio/ShortBuffer.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fnio%2FShortBuffer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fnio%2FShortBuffer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FShortBuffer.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -40,7 +40,7 @@ class java::nio::ShortBuffer : public ::java::nio::Buffer\n   virtual jint arrayOffset();\n   virtual jint hashCode();\n   virtual jboolean equals(::java::lang::Object *);\n-  virtual jint target$compareTo(::java::nio::ShortBuffer *);\n+  virtual jint ShortBuffer$compareTo(::java::nio::ShortBuffer *);\n   virtual ::java::nio::ByteOrder * order() = 0;\n   virtual jshort get() = 0;\n   virtual ::java::nio::ShortBuffer * put(jshort) = 0;"}, {"sha": "dabf4671d4f56c6a4302d1886c17a57142b32b81", "filename": "libjava/java/nio/charset/Charset.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fnio%2Fcharset%2FCharset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fnio%2Fcharset%2FCharset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2Fcharset%2FCharset.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -62,7 +62,7 @@ class java::nio::charset::Charset : public ::java::lang::Object\n   virtual ::java::nio::ByteBuffer * encode(::java::nio::CharBuffer *);\n   virtual ::java::nio::ByteBuffer * encode(::java::lang::String *);\n   virtual ::java::nio::CharBuffer * decode(::java::nio::ByteBuffer *);\n-  virtual jint target$compareTo(::java::nio::charset::Charset *);\n+  virtual jint Charset$compareTo(::java::nio::charset::Charset *);\n   virtual jint hashCode();\n   virtual jboolean equals(::java::lang::Object *);\n   virtual ::java::lang::String * toString();"}, {"sha": "5b85eff35374dd2127c24823499880a008853af8", "filename": "libjava/java/sql/Timestamp.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fsql%2FTimestamp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Fsql%2FTimestamp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsql%2FTimestamp.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -39,7 +39,7 @@ class java::sql::Timestamp : public ::java::util::Date\n   virtual jboolean equals(::java::lang::Object *);\n   virtual jboolean equals(::java::sql::Timestamp *);\n   virtual jint compareTo(::java::sql::Timestamp *);\n-  virtual jint target$compareTo(::java::util::Date *);\n+  virtual jint Timestamp$compareTo(::java::util::Date *);\n public: // actually package-private\n   static const jlong serialVersionUID = 2745179027874758501LL;\n private:"}, {"sha": "ac110813f14dc26756ff906e62b50888680bbb1c", "filename": "libjava/java/text/CollationKey.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Ftext%2FCollationKey.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Ftext%2FCollationKey.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FCollationKey.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -27,7 +27,7 @@ class java::text::CollationKey : public ::java::lang::Object\n public: // actually package-private\n   CollationKey(::java::text::Collator *, ::java::lang::String *, JArray< jbyte > *);\n public:\n-  virtual jint target$compareTo(::java::text::CollationKey *);\n+  virtual jint CollationKey$compareTo(::java::text::CollationKey *);\n   virtual jboolean equals(::java::lang::Object *);\n   virtual ::java::lang::String * getSourceString();\n   virtual jint hashCode();"}, {"sha": "d1ac9e514d2916aaf350218734dff4bc43c46482", "filename": "libjava/java/util/ArrayDeque.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FArrayDeque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FArrayDeque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FArrayDeque.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -55,7 +55,7 @@ class java::util::ArrayDeque : public ::java::util::AbstractCollection\n   virtual void clear();\n   virtual JArray< ::java::lang::Object * > * toArray();\n   virtual JArray< ::java::lang::Object * > * toArray(JArray< ::java::lang::Object * > *);\n-  virtual ::java::util::ArrayDeque * target$clone();\n+  virtual ::java::util::ArrayDeque * ArrayDeque$clone();\n private:\n   void writeObject(::java::io::ObjectOutputStream *);\n   void readObject(::java::io::ObjectInputStream *);"}, {"sha": "3a46dc0379349a8898e3beb69696efbafe6bdda1", "filename": "libjava/java/util/Calendar.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FCalendar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FCalendar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FCalendar.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -66,7 +66,7 @@ class java::util::Calendar : public ::java::lang::Object\n   virtual jint getLeastMaximum(jint) = 0;\n   virtual jint getActualMinimum(jint);\n   virtual jint getActualMaximum(jint);\n-  virtual jint target$compareTo(::java::util::Calendar *);\n+  virtual jint Calendar$compareTo(::java::util::Calendar *);\n   virtual ::java::lang::Object * clone();\n   virtual ::java::lang::String * toString();\n private:"}, {"sha": "11c7d2052432d5e4e4c5a472271501a3892b59ca", "filename": "libjava/java/util/Collections$4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FCollections%244.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FCollections%244.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FCollections%244.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -14,7 +14,7 @@ class java::util::Collections$4 : public ::java::util::Collections$SynchronizedI\n public: // actually package-private\n   Collections$4(::java::util::Collections$3 *, ::java::lang::Object *, ::java::util::Iterator *);\n public:\n-  ::java::util::Map$Entry * target$next();\n+  ::java::util::Map$Entry * Collections$4$next();\n   ::java::lang::Object * next();\n public: // actually package-private\n   ::java::util::Collections$3 * __attribute__((aligned(__alignof__( ::java::util::Collections$SynchronizedIterator)))) this$2;"}, {"sha": "a5cf8b690e6dae2a8ab88f5f1bd35a2276e1a57c", "filename": "libjava/java/util/Collections$5.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FCollections%245.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FCollections%245.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FCollections%245.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -14,7 +14,7 @@ class java::util::Collections$5 : public ::java::util::Collections$UnmodifiableI\n public: // actually package-private\n   Collections$5(::java::util::Collections$UnmodifiableMap$UnmodifiableEntrySet *, ::java::util::Iterator *);\n public:\n-  ::java::util::Map$Entry * target$next();\n+  ::java::util::Map$Entry * Collections$5$next();\n   ::java::lang::Object * next();\n public: // actually package-private\n   ::java::util::Collections$UnmodifiableMap$UnmodifiableEntrySet * __attribute__((aligned(__alignof__( ::java::util::Collections$UnmodifiableIterator)))) this$2;"}, {"sha": "1128060de453ad1874998c7ab50ebe75fcf77b64", "filename": "libjava/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FCollections%24UnmodifiableMap%24UnmodifiableEntrySet.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FCollections%24UnmodifiableMap%24UnmodifiableEntrySet.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FCollections%24UnmodifiableMap%24UnmodifiableEntrySet.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -17,7 +17,7 @@ class java::util::Collections$UnmodifiableMap$UnmodifiableEntrySet : public ::ja\n   Collections$UnmodifiableMap$UnmodifiableEntrySet(::java::util::Set *);\n public:\n   ::java::util::Iterator * iterator();\n-  JArray< ::java::util::Map$Entry * > * target$toArray();\n+  JArray< ::java::util::Map$Entry * > * Collections$UnmodifiableMap$UnmodifiableEntrySet$toArray();\n   JArray< ::java::lang::Object * > * toArray(JArray< ::java::lang::Object * > *);\n   JArray< ::java::lang::Object * > * toArray();\n private:"}, {"sha": "0f801d87aa005bede32bb82db5417745d5703bef", "filename": "libjava/java/util/Date.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FDate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FDate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FDate.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -28,7 +28,7 @@ class java::util::Date : public ::java::lang::Object\n   virtual jboolean after(::java::util::Date *);\n   virtual jboolean before(::java::util::Date *);\n   virtual jboolean equals(::java::lang::Object *);\n-  virtual jint target$compareTo(::java::util::Date *);\n+  virtual jint Date$compareTo(::java::util::Date *);\n   virtual jint hashCode();\n   virtual ::java::lang::String * toString();\n   virtual ::java::lang::String * toLocaleString();"}, {"sha": "6ab63d3906973a8f81a05e11913be4ae2704d768", "filename": "libjava/java/util/EnumMap$2.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FEnumMap%242.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FEnumMap%242.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FEnumMap%242.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -15,7 +15,7 @@ class java::util::EnumMap$2 : public ::java::lang::Object\n   EnumMap$2(::java::util::EnumMap$1 *);\n public:\n   jboolean hasNext();\n-  ::java::lang::Enum * target$next();\n+  ::java::lang::Enum * EnumMap$2$next();\n   void remove();\n   ::java::lang::Object * next();\n public: // actually package-private"}, {"sha": "eaa36b04c9e4ea2879d3c698764916eb690f6267", "filename": "libjava/java/util/EnumMap$6.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FEnumMap%246.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FEnumMap%246.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FEnumMap%246.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -15,7 +15,7 @@ class java::util::EnumMap$6 : public ::java::lang::Object\n   EnumMap$6(::java::util::EnumMap$5 *);\n public:\n   jboolean hasNext();\n-  ::java::util::Map$Entry * target$next();\n+  ::java::util::Map$Entry * EnumMap$6$next();\n   void remove();\n   ::java::lang::Object * next();\n public: // actually package-private"}, {"sha": "074f87839177097bbb49a15891241fcf17440381", "filename": "libjava/java/util/EnumMap.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FEnumMap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FEnumMap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FEnumMap.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -21,15 +21,15 @@ class java::util::EnumMap : public ::java::util::AbstractMap\n   virtual jboolean containsValue(::java::lang::Object *);\n   virtual jboolean containsKey(::java::lang::Object *);\n   virtual ::java::lang::Object * get(::java::lang::Object *);\n-  virtual ::java::lang::Object * target$put(::java::lang::Enum *, ::java::lang::Object *);\n+  virtual ::java::lang::Object * EnumMap$put(::java::lang::Enum *, ::java::lang::Object *);\n   virtual ::java::lang::Object * remove(::java::lang::Object *);\n   virtual void putAll(::java::util::Map *);\n   virtual void clear();\n   virtual ::java::util::Set * keySet();\n   virtual ::java::util::Collection * values();\n   virtual ::java::util::Set * entrySet();\n   virtual jboolean equals(::java::lang::Object *);\n-  virtual ::java::util::EnumMap * target$clone();\n+  virtual ::java::util::EnumMap * EnumMap$clone();\n   virtual ::java::lang::Object * clone();\n   virtual ::java::lang::Object * put(::java::lang::Object *, ::java::lang::Object *);\n private:"}, {"sha": "55e1c91d248fc2eab704b9b134a4f942989ca1c0", "filename": "libjava/java/util/EnumSet$1.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FEnumSet%241.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FEnumSet%241.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FEnumSet%241.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -15,7 +15,7 @@ class java::util::EnumSet$1 : public ::java::lang::Object\n   EnumSet$1(::java::util::EnumSet *);\n public:\n   jboolean hasNext();\n-  ::java::lang::Enum * target$next();\n+  ::java::lang::Enum * EnumSet$1$next();\n   void remove();\n   ::java::lang::Object * next();\n public: // actually package-private"}, {"sha": "200868ae876ee6e41efe2cacb51d926eb5987259", "filename": "libjava/java/util/EnumSet.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FEnumSet.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FEnumSet.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FEnumSet.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -16,10 +16,10 @@ class java::util::EnumSet : public ::java::util::AbstractSet\n public: // actually package-private\n   EnumSet();\n public:\n-  virtual ::java::util::EnumSet * target$clone();\n+  virtual ::java::util::EnumSet * EnumSet$clone();\n   virtual jint size();\n   virtual ::java::util::Iterator * iterator();\n-  virtual jboolean target$add(::java::lang::Enum *);\n+  virtual jboolean EnumSet$add(::java::lang::Enum *);\n   virtual jboolean addAll(::java::util::Collection *);\n   virtual void clear();\n   virtual jboolean contains(::java::lang::Object *);"}, {"sha": "a0f160153120745b667583c89be72c2cdb0468e6", "filename": "libjava/java/util/Hashtable$EntryEnumerator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FHashtable%24EntryEnumerator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FHashtable%24EntryEnumerator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FHashtable%24EntryEnumerator.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -15,7 +15,7 @@ class java::util::Hashtable$EntryEnumerator : public ::java::lang::Object\n   Hashtable$EntryEnumerator(::java::util::Hashtable *);\n public:\n   virtual jboolean hasMoreElements();\n-  virtual ::java::util::Map$Entry * target$nextElement();\n+  virtual ::java::util::Map$Entry * Hashtable$EntryEnumerator$nextElement();\n   virtual ::java::lang::Object * nextElement();\n public: // actually package-private\n   jint __attribute__((aligned(__alignof__( ::java::lang::Object)))) count;"}, {"sha": "7927391ef4ac95ce040c20852503333507ccb8a0", "filename": "libjava/java/util/Hashtable$EntryIterator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FHashtable%24EntryIterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FHashtable%24EntryIterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FHashtable%24EntryIterator.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -15,7 +15,7 @@ class java::util::Hashtable$EntryIterator : public ::java::lang::Object\n   Hashtable$EntryIterator(::java::util::Hashtable *);\n public:\n   virtual jboolean hasNext();\n-  virtual ::java::util::Map$Entry * target$next();\n+  virtual ::java::util::Map$Entry * Hashtable$EntryIterator$next();\n   virtual void remove();\n   virtual ::java::lang::Object * next();\n public: // actually package-private"}, {"sha": "0eda9d67bbb41cc05c54822fcdee08beb8965e95", "filename": "libjava/java/util/UUID.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FUUID.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2FUUID.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FUUID.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -16,7 +16,7 @@ class java::util::UUID : public ::java::lang::Object\n public:\n   UUID(jlong, jlong);\n   jint clockSequence();\n-  jint target$compareTo(::java::util::UUID *);\n+  jint UUID$compareTo(::java::util::UUID *);\n   jboolean equals(::java::lang::Object *);\n   static ::java::util::UUID * fromString(::java::lang::String *);\n   ::java::lang::String * toString();"}, {"sha": "4c4c191b51be708a4e3bbc0252248aa8dcd269a8", "filename": "libjava/java/util/concurrent/ConcurrentHashMap$EntryIterator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentHashMap%24EntryIterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentHashMap%24EntryIterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentHashMap%24EntryIterator.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -14,7 +14,7 @@ class java::util::concurrent::ConcurrentHashMap$EntryIterator : public ::java::u\n public: // actually package-private\n   ConcurrentHashMap$EntryIterator(::java::util::concurrent::ConcurrentHashMap *);\n public:\n-  ::java::util::Map$Entry * target$next();\n+  ::java::util::Map$Entry * ConcurrentHashMap$EntryIterator$next();\n   ::java::lang::Object * next();\n public: // actually package-private\n   ::java::util::concurrent::ConcurrentHashMap * __attribute__((aligned(__alignof__( ::java::util::concurrent::ConcurrentHashMap$HashIterator)))) this$0;"}, {"sha": "67d71928f54707e003ea4006515748087b63beaa", "filename": "libjava/java/util/concurrent/ConcurrentSkipListMap$EntryIterator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListMap%24EntryIterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListMap%24EntryIterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListMap%24EntryIterator.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -14,7 +14,7 @@ class java::util::concurrent::ConcurrentSkipListMap$EntryIterator : public ::jav\n public: // actually package-private\n   ConcurrentSkipListMap$EntryIterator(::java::util::concurrent::ConcurrentSkipListMap *);\n public:\n-  ::java::util::Map$Entry * target$next();\n+  ::java::util::Map$Entry * ConcurrentSkipListMap$EntryIterator$next();\n   ::java::lang::Object * next();\n public: // actually package-private\n   ::java::util::concurrent::ConcurrentSkipListMap * __attribute__((aligned(__alignof__( ::java::util::concurrent::ConcurrentSkipListMap$Iter)))) this$0;"}, {"sha": "e52b30ea14d9b5b56e408645c5cdc24c52ff7932", "filename": "libjava/java/util/concurrent/ConcurrentSkipListMap$KeySet.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListMap%24KeySet.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListMap%24KeySet.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListMap%24KeySet.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -38,9 +38,9 @@ class java::util::concurrent::ConcurrentSkipListMap$KeySet : public ::java::util\n   ::java::util::NavigableSet * subSet(::java::lang::Object *, jboolean, ::java::lang::Object *, jboolean);\n   ::java::util::NavigableSet * headSet(::java::lang::Object *, jboolean);\n   ::java::util::NavigableSet * tailSet(::java::lang::Object *, jboolean);\n-  ::java::util::NavigableSet * target$subSet(::java::lang::Object *, ::java::lang::Object *);\n-  ::java::util::NavigableSet * target$headSet(::java::lang::Object *);\n-  ::java::util::NavigableSet * target$tailSet(::java::lang::Object *);\n+  ::java::util::NavigableSet * ConcurrentSkipListMap$KeySet$subSet(::java::lang::Object *, ::java::lang::Object *);\n+  ::java::util::NavigableSet * ConcurrentSkipListMap$KeySet$headSet(::java::lang::Object *);\n+  ::java::util::NavigableSet * ConcurrentSkipListMap$KeySet$tailSet(::java::lang::Object *);\n   ::java::util::NavigableSet * descendingSet();\n   ::java::util::SortedSet * subSet(::java::lang::Object *, ::java::lang::Object *);\n   ::java::util::SortedSet * tailSet(::java::lang::Object *);"}, {"sha": "0c0c9e552484ce54d0708d6466de665979f45749", "filename": "libjava/java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListMap%24SubMap%24SubMapEntryIterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListMap%24SubMap%24SubMapEntryIterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListMap%24SubMap%24SubMapEntryIterator.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -14,7 +14,7 @@ class java::util::concurrent::ConcurrentSkipListMap$SubMap$SubMapEntryIterator :\n public: // actually package-private\n   ConcurrentSkipListMap$SubMap$SubMapEntryIterator(::java::util::concurrent::ConcurrentSkipListMap$SubMap *);\n public:\n-  ::java::util::Map$Entry * target$next();\n+  ::java::util::Map$Entry * ConcurrentSkipListMap$SubMap$SubMapEntryIterator$next();\n   ::java::lang::Object * next();\n public: // actually package-private\n   ::java::util::concurrent::ConcurrentSkipListMap$SubMap * __attribute__((aligned(__alignof__( ::java::util::concurrent::ConcurrentSkipListMap$SubMap$SubMapIter)))) this$1;"}, {"sha": "345fb255173a5be91c40c35ee909d196bbcf25e6", "filename": "libjava/java/util/concurrent/ConcurrentSkipListMap$SubMap.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListMap%24SubMap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListMap%24SubMap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListMap%24SubMap.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -46,13 +46,13 @@ class java::util::concurrent::ConcurrentSkipListMap$SubMap : public ::java::util\n private:\n   ::java::util::concurrent::ConcurrentSkipListMap$SubMap * newSubMap(::java::lang::Object *, jboolean, ::java::lang::Object *, jboolean);\n public:\n-  ::java::util::concurrent::ConcurrentSkipListMap$SubMap * target$subMap(::java::lang::Object *, jboolean, ::java::lang::Object *, jboolean);\n-  ::java::util::concurrent::ConcurrentSkipListMap$SubMap * target$headMap(::java::lang::Object *, jboolean);\n-  ::java::util::concurrent::ConcurrentSkipListMap$SubMap * target$tailMap(::java::lang::Object *, jboolean);\n-  ::java::util::concurrent::ConcurrentSkipListMap$SubMap * target$subMap(::java::lang::Object *, ::java::lang::Object *);\n-  ::java::util::concurrent::ConcurrentSkipListMap$SubMap * target$headMap(::java::lang::Object *);\n-  ::java::util::concurrent::ConcurrentSkipListMap$SubMap * target$tailMap(::java::lang::Object *);\n-  ::java::util::concurrent::ConcurrentSkipListMap$SubMap * target$descendingMap();\n+  ::java::util::concurrent::ConcurrentSkipListMap$SubMap * ConcurrentSkipListMap$SubMap$subMap(::java::lang::Object *, jboolean, ::java::lang::Object *, jboolean);\n+  ::java::util::concurrent::ConcurrentSkipListMap$SubMap * ConcurrentSkipListMap$SubMap$headMap(::java::lang::Object *, jboolean);\n+  ::java::util::concurrent::ConcurrentSkipListMap$SubMap * ConcurrentSkipListMap$SubMap$tailMap(::java::lang::Object *, jboolean);\n+  ::java::util::concurrent::ConcurrentSkipListMap$SubMap * ConcurrentSkipListMap$SubMap$subMap(::java::lang::Object *, ::java::lang::Object *);\n+  ::java::util::concurrent::ConcurrentSkipListMap$SubMap * ConcurrentSkipListMap$SubMap$headMap(::java::lang::Object *);\n+  ::java::util::concurrent::ConcurrentSkipListMap$SubMap * ConcurrentSkipListMap$SubMap$tailMap(::java::lang::Object *);\n+  ::java::util::concurrent::ConcurrentSkipListMap$SubMap * ConcurrentSkipListMap$SubMap$descendingMap();\n   ::java::util::Map$Entry * ceilingEntry(::java::lang::Object *);\n   ::java::lang::Object * ceilingKey(::java::lang::Object *);\n   ::java::util::Map$Entry * lowerEntry(::java::lang::Object *);\n@@ -67,7 +67,7 @@ class java::util::concurrent::ConcurrentSkipListMap$SubMap : public ::java::util\n   ::java::util::Map$Entry * lastEntry();\n   ::java::util::Map$Entry * pollFirstEntry();\n   ::java::util::Map$Entry * pollLastEntry();\n-  ::java::util::NavigableSet * target$keySet();\n+  ::java::util::NavigableSet * ConcurrentSkipListMap$SubMap$keySet();\n   ::java::util::NavigableSet * navigableKeySet();\n   ::java::util::Collection * values();\n   ::java::util::Set * entrySet();"}, {"sha": "2f4da898b7c981b81420375d3840dab9be082510", "filename": "libjava/java/util/concurrent/ConcurrentSkipListMap.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListMap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListMap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListMap.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -51,7 +51,7 @@ class java::util::concurrent::ConcurrentSkipListMap : public ::java::util::Abstr\n   ConcurrentSkipListMap(::java::util::Comparator *);\n   ConcurrentSkipListMap(::java::util::Map *);\n   ConcurrentSkipListMap(::java::util::SortedMap *);\n-  virtual ::java::util::concurrent::ConcurrentSkipListMap * target$clone();\n+  virtual ::java::util::concurrent::ConcurrentSkipListMap * ConcurrentSkipListMap$clone();\n private:\n   void buildFromSorted(::java::util::SortedMap *);\n   void writeObject(::java::io::ObjectOutputStream *);\n@@ -65,11 +65,11 @@ class java::util::concurrent::ConcurrentSkipListMap : public ::java::util::Abstr\n   virtual jint size();\n   virtual jboolean isEmpty();\n   virtual void clear();\n-  virtual ::java::util::NavigableSet * target$keySet();\n+  virtual ::java::util::NavigableSet * ConcurrentSkipListMap$keySet();\n   virtual ::java::util::NavigableSet * navigableKeySet();\n   virtual ::java::util::Collection * values();\n   virtual ::java::util::Set * entrySet();\n-  virtual ::java::util::concurrent::ConcurrentNavigableMap * target$descendingMap();\n+  virtual ::java::util::concurrent::ConcurrentNavigableMap * ConcurrentSkipListMap$descendingMap();\n   virtual ::java::util::NavigableSet * descendingKeySet();\n   virtual jboolean equals(::java::lang::Object *);\n   virtual ::java::lang::Object * putIfAbsent(::java::lang::Object *, ::java::lang::Object *);\n@@ -79,12 +79,12 @@ class java::util::concurrent::ConcurrentSkipListMap : public ::java::util::Abstr\n   virtual ::java::util::Comparator * comparator();\n   virtual ::java::lang::Object * firstKey();\n   virtual ::java::lang::Object * lastKey();\n-  virtual ::java::util::concurrent::ConcurrentNavigableMap * target$subMap(::java::lang::Object *, jboolean, ::java::lang::Object *, jboolean);\n-  virtual ::java::util::concurrent::ConcurrentNavigableMap * target$headMap(::java::lang::Object *, jboolean);\n-  virtual ::java::util::concurrent::ConcurrentNavigableMap * target$tailMap(::java::lang::Object *, jboolean);\n-  virtual ::java::util::concurrent::ConcurrentNavigableMap * target$subMap(::java::lang::Object *, ::java::lang::Object *);\n-  virtual ::java::util::concurrent::ConcurrentNavigableMap * target$headMap(::java::lang::Object *);\n-  virtual ::java::util::concurrent::ConcurrentNavigableMap * target$tailMap(::java::lang::Object *);\n+  virtual ::java::util::concurrent::ConcurrentNavigableMap * ConcurrentSkipListMap$subMap(::java::lang::Object *, jboolean, ::java::lang::Object *, jboolean);\n+  virtual ::java::util::concurrent::ConcurrentNavigableMap * ConcurrentSkipListMap$headMap(::java::lang::Object *, jboolean);\n+  virtual ::java::util::concurrent::ConcurrentNavigableMap * ConcurrentSkipListMap$tailMap(::java::lang::Object *, jboolean);\n+  virtual ::java::util::concurrent::ConcurrentNavigableMap * ConcurrentSkipListMap$subMap(::java::lang::Object *, ::java::lang::Object *);\n+  virtual ::java::util::concurrent::ConcurrentNavigableMap * ConcurrentSkipListMap$headMap(::java::lang::Object *);\n+  virtual ::java::util::concurrent::ConcurrentNavigableMap * ConcurrentSkipListMap$tailMap(::java::lang::Object *);\n   virtual ::java::util::Map$Entry * lowerEntry(::java::lang::Object *);\n   virtual ::java::lang::Object * lowerKey(::java::lang::Object *);\n   virtual ::java::util::Map$Entry * floorEntry(::java::lang::Object *);"}, {"sha": "65ea1a9a9326e153776c4e5dab06ecb3c07b1244", "filename": "libjava/java/util/concurrent/ConcurrentSkipListSet.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListSet.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListSet.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fconcurrent%2FConcurrentSkipListSet.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -29,7 +29,7 @@ class java::util::concurrent::ConcurrentSkipListSet : public ::java::util::Abstr\n public: // actually package-private\n   ConcurrentSkipListSet(::java::util::concurrent::ConcurrentNavigableMap *);\n public:\n-  virtual ::java::util::concurrent::ConcurrentSkipListSet * target$clone();\n+  virtual ::java::util::concurrent::ConcurrentSkipListSet * ConcurrentSkipListSet$clone();\n   virtual jint size();\n   virtual jboolean isEmpty();\n   virtual jboolean contains(::java::lang::Object *);\n@@ -52,9 +52,9 @@ class java::util::concurrent::ConcurrentSkipListSet : public ::java::util::Abstr\n   virtual ::java::util::NavigableSet * subSet(::java::lang::Object *, jboolean, ::java::lang::Object *, jboolean);\n   virtual ::java::util::NavigableSet * headSet(::java::lang::Object *, jboolean);\n   virtual ::java::util::NavigableSet * tailSet(::java::lang::Object *, jboolean);\n-  virtual ::java::util::NavigableSet * target$subSet(::java::lang::Object *, ::java::lang::Object *);\n-  virtual ::java::util::NavigableSet * target$headSet(::java::lang::Object *);\n-  virtual ::java::util::NavigableSet * target$tailSet(::java::lang::Object *);\n+  virtual ::java::util::NavigableSet * ConcurrentSkipListSet$subSet(::java::lang::Object *, ::java::lang::Object *);\n+  virtual ::java::util::NavigableSet * ConcurrentSkipListSet$headSet(::java::lang::Object *);\n+  virtual ::java::util::NavigableSet * ConcurrentSkipListSet$tailSet(::java::lang::Object *);\n   virtual ::java::util::NavigableSet * descendingSet();\n private:\n   void setMap(::java::util::concurrent::ConcurrentNavigableMap *);"}, {"sha": "cdcc1bf20b3b22e8f8cf0c12cd9b1fbd3821f806", "filename": "libjava/java/util/concurrent/DelayQueue$Itr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FDelayQueue%24Itr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FDelayQueue%24Itr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fconcurrent%2FDelayQueue%24Itr.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -17,7 +17,7 @@ class java::util::concurrent::DelayQueue$Itr : public ::java::lang::Object\n   DelayQueue$Itr(::java::util::concurrent::DelayQueue *, JArray< ::java::lang::Object * > *);\n public:\n   virtual jboolean hasNext();\n-  virtual ::java::util::concurrent::Delayed * target$next();\n+  virtual ::java::util::concurrent::Delayed * DelayQueue$Itr$next();\n   virtual void remove();\n   virtual ::java::lang::Object * next();\n public: // actually package-private"}, {"sha": "b97f32248cc537ea0f238f39673fc220d724a030", "filename": "libjava/java/util/concurrent/DelayQueue.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FDelayQueue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FDelayQueue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fconcurrent%2FDelayQueue.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -16,14 +16,14 @@ class java::util::concurrent::DelayQueue : public ::java::util::AbstractQueue\n public:\n   DelayQueue();\n   DelayQueue(::java::util::Collection *);\n-  virtual jboolean target$add(::java::util::concurrent::Delayed *);\n-  virtual jboolean target$offer(::java::util::concurrent::Delayed *);\n-  virtual void target$put(::java::util::concurrent::Delayed *);\n-  virtual jboolean target$offer(::java::util::concurrent::Delayed *, jlong, ::java::util::concurrent::TimeUnit *);\n-  virtual ::java::util::concurrent::Delayed * target$poll();\n-  virtual ::java::util::concurrent::Delayed * target$take();\n-  virtual ::java::util::concurrent::Delayed * target$poll(jlong, ::java::util::concurrent::TimeUnit *);\n-  virtual ::java::util::concurrent::Delayed * target$peek();\n+  virtual jboolean DelayQueue$add(::java::util::concurrent::Delayed *);\n+  virtual jboolean DelayQueue$offer(::java::util::concurrent::Delayed *);\n+  virtual void DelayQueue$put(::java::util::concurrent::Delayed *);\n+  virtual jboolean DelayQueue$offer(::java::util::concurrent::Delayed *, jlong, ::java::util::concurrent::TimeUnit *);\n+  virtual ::java::util::concurrent::Delayed * DelayQueue$poll();\n+  virtual ::java::util::concurrent::Delayed * DelayQueue$take();\n+  virtual ::java::util::concurrent::Delayed * DelayQueue$poll(jlong, ::java::util::concurrent::TimeUnit *);\n+  virtual ::java::util::concurrent::Delayed * DelayQueue$peek();\n   virtual jint size();\n   virtual jint drainTo(::java::util::Collection *);\n   virtual jint drainTo(::java::util::Collection *, jint);"}, {"sha": "5ae31075595c64975a594f21234960845ee7e73b", "filename": "libjava/java/util/concurrent/ScheduledThreadPoolExecutor$1.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FScheduledThreadPoolExecutor%241.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FScheduledThreadPoolExecutor%241.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fconcurrent%2FScheduledThreadPoolExecutor%241.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -15,7 +15,7 @@ class java::util::concurrent::ScheduledThreadPoolExecutor$1 : public ::java::lan\n   ScheduledThreadPoolExecutor$1(::java::util::concurrent::ScheduledThreadPoolExecutor$DelayedWorkQueue *);\n public:\n   jboolean hasNext();\n-  ::java::lang::Runnable * target$next();\n+  ::java::lang::Runnable * ScheduledThreadPoolExecutor$1$next();\n   void remove();\n   ::java::lang::Object * next();\n private:"}, {"sha": "26fac62545c9a3b62ab46d927447991503be3e02", "filename": "libjava/java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.h", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FScheduledThreadPoolExecutor%24DelayedWorkQueue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FScheduledThreadPoolExecutor%24DelayedWorkQueue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fconcurrent%2FScheduledThreadPoolExecutor%24DelayedWorkQueue.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -15,16 +15,16 @@ class java::util::concurrent::ScheduledThreadPoolExecutor$DelayedWorkQueue : pub\n \n   ScheduledThreadPoolExecutor$DelayedWorkQueue();\n public:\n-  virtual ::java::lang::Runnable * target$poll();\n-  virtual ::java::lang::Runnable * target$peek();\n-  virtual ::java::lang::Runnable * target$take();\n-  virtual ::java::lang::Runnable * target$poll(jlong, ::java::util::concurrent::TimeUnit *);\n-  virtual jboolean target$add(::java::lang::Runnable *);\n-  virtual jboolean target$offer(::java::lang::Runnable *);\n-  virtual void target$put(::java::lang::Runnable *);\n-  virtual jboolean target$offer(::java::lang::Runnable *, jlong, ::java::util::concurrent::TimeUnit *);\n-  virtual ::java::lang::Runnable * target$remove();\n-  virtual ::java::lang::Runnable * target$element();\n+  virtual ::java::lang::Runnable * ScheduledThreadPoolExecutor$DelayedWorkQueue$poll();\n+  virtual ::java::lang::Runnable * ScheduledThreadPoolExecutor$DelayedWorkQueue$peek();\n+  virtual ::java::lang::Runnable * ScheduledThreadPoolExecutor$DelayedWorkQueue$take();\n+  virtual ::java::lang::Runnable * ScheduledThreadPoolExecutor$DelayedWorkQueue$poll(jlong, ::java::util::concurrent::TimeUnit *);\n+  virtual jboolean ScheduledThreadPoolExecutor$DelayedWorkQueue$add(::java::lang::Runnable *);\n+  virtual jboolean ScheduledThreadPoolExecutor$DelayedWorkQueue$offer(::java::lang::Runnable *);\n+  virtual void ScheduledThreadPoolExecutor$DelayedWorkQueue$put(::java::lang::Runnable *);\n+  virtual jboolean ScheduledThreadPoolExecutor$DelayedWorkQueue$offer(::java::lang::Runnable *, jlong, ::java::util::concurrent::TimeUnit *);\n+  virtual ::java::lang::Runnable * ScheduledThreadPoolExecutor$DelayedWorkQueue$remove();\n+  virtual ::java::lang::Runnable * ScheduledThreadPoolExecutor$DelayedWorkQueue$element();\n   virtual void clear();\n   virtual jint drainTo(::java::util::Collection *);\n   virtual jint drainTo(::java::util::Collection *, jint);"}, {"sha": "ba9ad31a4a6a9351ef695706ff730d560875b4ec", "filename": "libjava/java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FScheduledThreadPoolExecutor%24ScheduledFutureTask.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2FScheduledThreadPoolExecutor%24ScheduledFutureTask.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fconcurrent%2FScheduledThreadPoolExecutor%24ScheduledFutureTask.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -17,7 +17,7 @@ class java::util::concurrent::ScheduledThreadPoolExecutor$ScheduledFutureTask :\n   ScheduledThreadPoolExecutor$ScheduledFutureTask(::java::util::concurrent::ScheduledThreadPoolExecutor *, ::java::util::concurrent::Callable *, jlong);\n public:\n   virtual jlong getDelay(::java::util::concurrent::TimeUnit *);\n-  virtual jint target$compareTo(::java::util::concurrent::Delayed *);\n+  virtual jint ScheduledThreadPoolExecutor$ScheduledFutureTask$compareTo(::java::util::concurrent::Delayed *);\n   virtual jboolean isPeriodic();\n private:\n   void runPeriodic();"}, {"sha": "10f87c922025a634560534e764720dcc6a86dadb", "filename": "libjava/java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2Flocks%2FReentrantReadWriteLock%24Sync%24ThreadLocalHoldCounter.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2Flocks%2FReentrantReadWriteLock%24Sync%24ThreadLocalHoldCounter.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fconcurrent%2Flocks%2FReentrantReadWriteLock%24Sync%24ThreadLocalHoldCounter.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -14,7 +14,7 @@ class java::util::concurrent::locks::ReentrantReadWriteLock$Sync$ThreadLocalHold\n public: // actually package-private\n   ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter();\n public:\n-  ::java::util::concurrent::locks::ReentrantReadWriteLock$Sync$HoldCounter * target$initialValue();\n+  ::java::util::concurrent::locks::ReentrantReadWriteLock$Sync$HoldCounter * ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter$initialValue();\n   ::java::lang::Object * initialValue();\n   static ::java::lang::Class class$;\n };"}, {"sha": "e7da50a750b391dc8d4ba2a0606010dc6276beae", "filename": "libjava/java/util/concurrent/locks/ReentrantReadWriteLock.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2Flocks%2FReentrantReadWriteLock.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fconcurrent%2Flocks%2FReentrantReadWriteLock.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fconcurrent%2Flocks%2FReentrantReadWriteLock.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -14,8 +14,8 @@ class java::util::concurrent::locks::ReentrantReadWriteLock : public ::java::lan\n public:\n   ReentrantReadWriteLock();\n   ReentrantReadWriteLock(jboolean);\n-  virtual ::java::util::concurrent::locks::ReentrantReadWriteLock$WriteLock * target$writeLock();\n-  virtual ::java::util::concurrent::locks::ReentrantReadWriteLock$ReadLock * target$readLock();\n+  virtual ::java::util::concurrent::locks::ReentrantReadWriteLock$WriteLock * ReentrantReadWriteLock$writeLock();\n+  virtual ::java::util::concurrent::locks::ReentrantReadWriteLock$ReadLock * ReentrantReadWriteLock$readLock();\n   virtual jboolean isFair();\n public: // actually protected\n   virtual ::java::lang::Thread * getOwner();"}, {"sha": "60aea6996790077c763d66d8edb26ff7d84c0b8b", "filename": "libjava/java/util/jar/JarFile$JarEnumeration.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fjar%2FJarFile%24JarEnumeration.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fjar%2FJarFile%24JarEnumeration.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fjar%2FJarFile%24JarEnumeration.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -15,7 +15,7 @@ class java::util::jar::JarFile$JarEnumeration : public ::java::lang::Object\n   JarFile$JarEnumeration(::java::util::Enumeration *, ::java::util::jar::JarFile *);\n public:\n   virtual jboolean hasMoreElements();\n-  virtual ::java::util::jar::JarEntry * target$nextElement();\n+  virtual ::java::util::jar::JarEntry * JarFile$JarEnumeration$nextElement();\n   virtual ::java::lang::Object * nextElement();\n private:\n   ::java::util::Enumeration * __attribute__((aligned(__alignof__( ::java::lang::Object)))) entries;"}, {"sha": "f041ae04a4f48c7f3497a0585f73994cb7443aab", "filename": "libjava/java/util/zip/ZipFile$ZipEntryEnumeration.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fzip%2FZipFile%24ZipEntryEnumeration.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjava%2Futil%2Fzip%2FZipFile%24ZipEntryEnumeration.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FZipFile%24ZipEntryEnumeration.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -14,7 +14,7 @@ class java::util::zip::ZipFile$ZipEntryEnumeration : public ::java::lang::Object\n public:\n   ZipFile$ZipEntryEnumeration(::java::util::Iterator *);\n   virtual jboolean hasMoreElements();\n-  virtual ::java::util::zip::ZipEntry * target$nextElement();\n+  virtual ::java::util::zip::ZipEntry * ZipFile$ZipEntryEnumeration$nextElement();\n   virtual ::java::lang::Object * nextElement();\n private:\n   ::java::util::Iterator * __attribute__((aligned(__alignof__( ::java::lang::Object)))) elements;"}, {"sha": "ba1077fd49f11ed726ef7ba81821df392304a915", "filename": "libjava/javax/imageio/ImageIO$1.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjavax%2Fimageio%2FImageIO%241.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjavax%2Fimageio%2FImageIO%241.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fimageio%2FImageIO%241.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -26,7 +26,7 @@ class javax::imageio::ImageIO$1 : public ::java::lang::Object\n   ImageIO$1(::java::util::Iterator *);\n public:\n   jboolean hasNext();\n-  ::javax::imageio::ImageTranscoder * target$next();\n+  ::javax::imageio::ImageTranscoder * ImageIO$1$next();\n   void remove();\n   ::java::lang::Object * next();\n private:"}, {"sha": "bb0285eee302517d77d82c5f343590d5b8f93ef7", "filename": "libjava/javax/imageio/ImageIO$ImageReaderIterator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjavax%2Fimageio%2FImageIO%24ImageReaderIterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjavax%2Fimageio%2FImageIO%24ImageReaderIterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fimageio%2FImageIO%24ImageReaderIterator.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -26,7 +26,7 @@ class javax::imageio::ImageIO$ImageReaderIterator : public ::java::lang::Object\n   ImageIO$ImageReaderIterator(::java::util::Iterator *, ::java::lang::Object *);\n   ImageIO$ImageReaderIterator(::java::util::Iterator *);\n   jboolean hasNext();\n-  ::javax::imageio::ImageReader * target$next();\n+  ::javax::imageio::ImageReader * ImageIO$ImageReaderIterator$next();\n   void remove();\n   ::java::lang::Object * next();\n public: // actually package-private"}, {"sha": "dcf9101f00d697bdcf84132520deb2a11b9663e4", "filename": "libjava/javax/imageio/ImageIO$ImageWriterIterator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjavax%2Fimageio%2FImageIO%24ImageWriterIterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjavax%2Fimageio%2FImageIO%24ImageWriterIterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fimageio%2FImageIO%24ImageWriterIterator.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -26,7 +26,7 @@ class javax::imageio::ImageIO$ImageWriterIterator : public ::java::lang::Object\n   ImageIO$ImageWriterIterator(::java::util::Iterator *, ::java::lang::Object *);\n   ImageIO$ImageWriterIterator(::java::util::Iterator *);\n   jboolean hasNext();\n-  ::javax::imageio::ImageWriter * target$next();\n+  ::javax::imageio::ImageWriter * ImageIO$ImageWriterIterator$next();\n   void remove();\n   ::java::lang::Object * next();\n public: // actually package-private"}, {"sha": "e02a3e7e99be16642bf6185b5e6b09f716807512", "filename": "libjava/javax/print/attribute/standard/JobStateReasons.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobStateReasons.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobStateReasons.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobStateReasons.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -33,7 +33,7 @@ class javax::print::attribute::standard::JobStateReasons : public ::java::util::\n   JobStateReasons(jint, jfloat);\n   JobStateReasons(jint);\n   JobStateReasons(::java::util::Collection *);\n-  jboolean target$add(::javax::print::attribute::standard::JobStateReason *);\n+  jboolean JobStateReasons$add(::javax::print::attribute::standard::JobStateReason *);\n   ::java::lang::Class * getCategory();\n   ::java::lang::String * getName();\n   jboolean add(::java::lang::Object *);"}, {"sha": "fc3d70330e4c0d92d63f5db612fcf035fe973f99", "filename": "libjava/javax/print/attribute/standard/PrinterStateReasons.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterStateReasons.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a4a507625bf9a3b979ccb275bf4182f07b8ea2/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterStateReasons.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterStateReasons.h?ref=06a4a507625bf9a3b979ccb275bf4182f07b8ea2", "patch": "@@ -35,7 +35,7 @@ class javax::print::attribute::standard::PrinterStateReasons : public ::java::ut\n   PrinterStateReasons(jint);\n   PrinterStateReasons(::java::util::Map *);\n   ::java::util::Set * printerStateReasonSet(::javax::print::attribute::standard::Severity *);\n-  ::javax::print::attribute::standard::Severity * target$put(::javax::print::attribute::standard::PrinterStateReason *, ::javax::print::attribute::standard::Severity *);\n+  ::javax::print::attribute::standard::Severity * PrinterStateReasons$put(::javax::print::attribute::standard::PrinterStateReason *, ::javax::print::attribute::standard::Severity *);\n   ::java::lang::Class * getCategory();\n   ::java::lang::String * getName();\n   ::java::lang::Object * put(::java::lang::Object *, ::java::lang::Object *);"}]}