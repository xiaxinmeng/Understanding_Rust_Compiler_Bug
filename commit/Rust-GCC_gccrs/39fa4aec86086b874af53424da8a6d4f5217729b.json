{"sha": "39fa4aec86086b874af53424da8a6d4f5217729b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzlmYTRhZWM4NjA4NmI4NzRhZjUzNDI0ZGE4YTZkNGY1MjE3NzI5Yg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-06-01T10:37:27Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-06-01T10:37:27Z"}, "message": "[ARM] Tie operand 1 to operand 0 in AESMC pattern when fusing AES/AESMC\n\n\t* config/arm/arm.c (arm_fusion_enabled_p): New function.\n\t* config/arm/arm-protos.h (arm_fusion_enabled_p): Declare prototype.\n\t* config/arm/crypto.md (crypto_<crypto_pattern>, CRYPTO_UNARY):\n\tAdd \"=w,0\" alternative.  Enable it when AES/AESMC fusion is enabled.\n\nFrom-SVN: r236982", "tree": {"sha": "24a90875010c1639a83c3e28357d9457481720dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24a90875010c1639a83c3e28357d9457481720dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39fa4aec86086b874af53424da8a6d4f5217729b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39fa4aec86086b874af53424da8a6d4f5217729b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39fa4aec86086b874af53424da8a6d4f5217729b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39fa4aec86086b874af53424da8a6d4f5217729b/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0dfeef505c7d5a619cc91d37acbfb9ea2c7f729", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0dfeef505c7d5a619cc91d37acbfb9ea2c7f729", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0dfeef505c7d5a619cc91d37acbfb9ea2c7f729"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "b9baf4c9c0a85c9cacc1f0061baad4d2ef1d39ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39fa4aec86086b874af53424da8a6d4f5217729b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39fa4aec86086b874af53424da8a6d4f5217729b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39fa4aec86086b874af53424da8a6d4f5217729b", "patch": "@@ -1,3 +1,10 @@\n+2016-06-01  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.c (arm_fusion_enabled_p): New function.\n+\t* config/arm/arm-protos.h (arm_fusion_enabled_p): Declare prototype.\n+\t* config/arm/crypto.md (crypto_<crypto_pattern>, CRYPTO_UNARY):\n+\tAdd \"=w,0\" alternative.  Enable it when AES/AESMC fusion is enabled.\n+\n 2016-06-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-vect-loop.c (vect_determine_vectorization_factor): Also take"}, {"sha": "aaaabb761cfdad943ac895b511a0514cd4ee8471", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39fa4aec86086b874af53424da8a6d4f5217729b/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39fa4aec86086b874af53424da8a6d4f5217729b/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=39fa4aec86086b874af53424da8a6d4f5217729b", "patch": "@@ -321,6 +321,7 @@ extern int vfp3_const_double_for_bits (rtx);\n \n extern void arm_emit_coreregs_64bit_shift (enum rtx_code, rtx, rtx, rtx, rtx,\n \t\t\t\t\t   rtx);\n+extern bool arm_fusion_enabled_p (tune_params::fuse_ops);\n extern bool arm_valid_symbolic_address_p (rtx);\n extern bool arm_validize_comparison (rtx *, rtx *, rtx *);\n #endif /* RTX_CODE */"}, {"sha": "e9240908ea9c7795f1064f6741091eb3264ef0ff", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39fa4aec86086b874af53424da8a6d4f5217729b/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39fa4aec86086b874af53424da8a6d4f5217729b/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=39fa4aec86086b874af53424da8a6d4f5217729b", "patch": "@@ -29858,6 +29858,13 @@ aarch_macro_fusion_pair_p (rtx_insn* prev, rtx_insn* curr)\n   return false;\n }\n \n+/* Return true iff the instruction fusion described by OP is enabled.  */\n+bool\n+arm_fusion_enabled_p (tune_params::fuse_ops op)\n+{\n+  return current_tune->fusible_ops & op;\n+}\n+\n /* Implement the TARGET_ASAN_SHADOW_OFFSET hook.  */\n \n static unsigned HOST_WIDE_INT"}, {"sha": "0f510f069408471fcbf6751f161e984f39929813", "filename": "gcc/config/arm/crypto.md", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39fa4aec86086b874af53424da8a6d4f5217729b/gcc%2Fconfig%2Farm%2Fcrypto.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39fa4aec86086b874af53424da8a6d4f5217729b/gcc%2Fconfig%2Farm%2Fcrypto.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcrypto.md?ref=39fa4aec86086b874af53424da8a6d4f5217729b", "patch": "@@ -18,14 +18,27 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n \n+\n+;; When AES/AESMC fusion is enabled we want the register allocation to\n+;; look like:\n+;;    AESE Vn, _\n+;;    AESMC Vn, Vn\n+;; So prefer to tie operand 1 to operand 0 when fusing.\n+\n (define_insn \"crypto_<crypto_pattern>\"\n-  [(set (match_operand:<crypto_mode> 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:<crypto_mode> 0 \"register_operand\" \"=w,w\")\n         (unspec:<crypto_mode> [(match_operand:<crypto_mode> 1\n-                       \"register_operand\" \"w\")]\n+                       \"register_operand\" \"0,w\")]\n          CRYPTO_UNARY))]\n   \"TARGET_CRYPTO\"\n   \"<crypto_pattern>.<crypto_size_sfx>\\\\t%q0, %q1\"\n-  [(set_attr \"type\" \"<crypto_type>\")]\n+  [(set_attr \"type\" \"<crypto_type>\")\n+   (set_attr_alternative \"enabled\"\n+     [(if_then_else (match_test\n+\t\t       \"arm_fusion_enabled_p (tune_params::FUSE_AES_AESMC)\")\n+\t\t     (const_string \"yes\" )\n+\t\t     (const_string \"no\"))\n+      (const_string \"yes\")])]\n )\n \n (define_insn \"crypto_<crypto_pattern>\""}]}