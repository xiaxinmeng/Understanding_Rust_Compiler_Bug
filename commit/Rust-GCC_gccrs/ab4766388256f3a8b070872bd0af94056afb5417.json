{"sha": "ab4766388256f3a8b070872bd0af94056afb5417", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI0NzY2Mzg4MjU2ZjNhOGIwNzA4NzJiZDBhZjk0MDU2YWZiNTQxNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-16T13:53:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-16T13:53:37Z"}, "message": "[multiple changes]\n\n2014-07-16  Robert Dewar  <dewar@adacore.com>\n\n\t* a-coinho.adb, a-coinho-shared.adb, a-coinho-shared.ads: Minor\n\treformatting.\n\n2014-07-16  Ed Schonberg  <schonberg@adacore.com>\n\n\t* a-cohase.ads: Type Iterator must be controlled, so that the\n\ttampering bit is properly set through an iteration.\n\t* a-cohase.adb: Add Finalize operation for type Iterator.\n\nFrom-SVN: r212643", "tree": {"sha": "4411672446c3d5a0beded559300f272f3861e178", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4411672446c3d5a0beded559300f272f3861e178"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab4766388256f3a8b070872bd0af94056afb5417", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab4766388256f3a8b070872bd0af94056afb5417", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab4766388256f3a8b070872bd0af94056afb5417", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab4766388256f3a8b070872bd0af94056afb5417/comments", "author": null, "committer": null, "parents": [{"sha": "3a859cff11c42d863dc37bca68290a308ccfa60c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a859cff11c42d863dc37bca68290a308ccfa60c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a859cff11c42d863dc37bca68290a308ccfa60c"}], "stats": {"total": 51, "additions": 38, "deletions": 13}, "files": [{"sha": "2ff72261881c01c5f656a56c0c56374a48c6e789", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab4766388256f3a8b070872bd0af94056afb5417/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab4766388256f3a8b070872bd0af94056afb5417/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ab4766388256f3a8b070872bd0af94056afb5417", "patch": "@@ -1,3 +1,14 @@\n+2014-07-16  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-coinho.adb, a-coinho-shared.adb, a-coinho-shared.ads: Minor\n+\treformatting.\n+\n+2014-07-16  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* a-cohase.ads: Type Iterator must be controlled, so that the\n+\ttampering bit is properly set through an iteration.\n+\t* a-cohase.adb: Add Finalize operation for type Iterator.\n+\n 2014-07-16  Ed Schonberg  <schonberg@adacore.com>\n \n \t* a-coinho-shared.adb, a-coinho-shared.ads: Proper structures for"}, {"sha": "1c3db68f8074caa032c82fefab33d54b576288c0", "filename": "gcc/ada/a-cohase.adb", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab4766388256f3a8b070872bd0af94056afb5417/gcc%2Fada%2Fa-cohase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab4766388256f3a8b070872bd0af94056afb5417/gcc%2Fada%2Fa-cohase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohase.adb?ref=ab4766388256f3a8b070872bd0af94056afb5417", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -601,6 +601,17 @@ package body Ada.Containers.Hashed_Sets is\n       end if;\n    end Finalize;\n \n+   procedure Finalize (Object : in out Iterator) is\n+   begin\n+      if Object.Container /= null then\n+         declare\n+            B : Natural renames Object.Container.HT.Busy;\n+         begin\n+            B := B - 1;\n+         end;\n+      end if;\n+   end Finalize;\n+\n    ----------\n    -- Find --\n    ----------\n@@ -1029,8 +1040,12 @@ package body Ada.Containers.Hashed_Sets is\n    function Iterate\n      (Container : Set) return Set_Iterator_Interfaces.Forward_Iterator'Class\n    is\n+      B  : Natural renames Container'Unrestricted_Access.all.HT.Busy;\n    begin\n-      return Iterator'(Container => Container'Unrestricted_Access);\n+      B := B + 1;\n+      return It : constant Iterator :=\n+         Iterator'(Limited_Controlled with\n+              Container => Container'Unrestricted_Access);\n    end Iterate;\n \n    ------------"}, {"sha": "9e4ebc173f585431f05ef57a0fe3e8865f2aabac", "filename": "gcc/ada/a-cohase.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab4766388256f3a8b070872bd0af94056afb5417/gcc%2Fada%2Fa-cohase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab4766388256f3a8b070872bd0af94056afb5417/gcc%2Fada%2Fa-cohase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohase.ads?ref=ab4766388256f3a8b070872bd0af94056afb5417", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -543,8 +543,8 @@ private\n \n    No_Element : constant Cursor := (Container => null, Node => null);\n \n-   type Iterator is limited new\n-     Set_Iterator_Interfaces.Forward_Iterator with record\n+   type Iterator is new Limited_Controlled\n+     and Set_Iterator_Interfaces.Forward_Iterator with record\n         Container : Set_Access;\n      end record;\n \n@@ -553,5 +553,6 @@ private\n    overriding function Next\n      (Object   : Iterator;\n       Position : Cursor) return Cursor;\n+   overriding procedure Finalize (Object : in out Iterator);\n \n end Ada.Containers.Hashed_Sets;"}, {"sha": "df2d55ad574eb2ae2c8db7dc4d9e0dad799d6516", "filename": "gcc/ada/a-coinho-shared.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab4766388256f3a8b070872bd0af94056afb5417/gcc%2Fada%2Fa-coinho-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab4766388256f3a8b070872bd0af94056afb5417/gcc%2Fada%2Fa-coinho-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho-shared.adb?ref=ab4766388256f3a8b070872bd0af94056afb5417", "patch": "@@ -38,12 +38,13 @@ package body Ada.Containers.Indefinite_Holders is\n \n    function \"=\" (Left, Right : Holder) return Boolean is\n    begin\n-      if Left.Reference = null and Right.Reference = null then\n+      if Left.Reference = Right.Reference then\n+         --  Covers both null and not null but the same shared object cases.\n+\n          return True;\n \n       elsif Left.Reference /= null and Right.Reference /= null then\n          return Left.Reference.Element.all = Right.Reference.Element.all;\n-\n       else\n          return False;\n       end if;\n@@ -66,6 +67,7 @@ package body Ada.Containers.Indefinite_Holders is\n    begin\n       if Control.Container /= null then\n          Reference (Control.Container.Reference);\n+\n          declare\n             B : Natural renames Control.Container.Busy;\n          begin\n@@ -122,10 +124,9 @@ package body Ada.Containers.Indefinite_Holders is\n               (Element => Container.Reference.Element.all'Access,\n                Control => (Controlled with Container'Unrestricted_Access));\n       B   : Natural renames Ref.Control.Container.Busy;\n-\n    begin\n       Reference (Ref.Control.Container.Reference);\n-         B := B + 1;\n+      B := B + 1;\n       return Ref;\n    end Constant_Reference;\n "}, {"sha": "3e1ed18a4b0baf17aca22286cde0aed11d07fb40", "filename": "gcc/ada/a-coinho-shared.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab4766388256f3a8b070872bd0af94056afb5417/gcc%2Fada%2Fa-coinho-shared.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab4766388256f3a8b070872bd0af94056afb5417/gcc%2Fada%2Fa-coinho-shared.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho-shared.ads?ref=ab4766388256f3a8b070872bd0af94056afb5417", "patch": "@@ -130,8 +130,7 @@ private\n    overriding procedure Adjust (Container : in out Holder);\n    overriding procedure Finalize (Container : in out Holder);\n \n-   type Reference_Control_Type is new Controlled with\n-   record\n+   type Reference_Control_Type is new Controlled with record\n       Container : Holder_Access;\n    end record;\n "}, {"sha": "9fe4c143e4d637c6fe6990c4a7fbcb01e97c191b", "filename": "gcc/ada/a-coinho.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab4766388256f3a8b070872bd0af94056afb5417/gcc%2Fada%2Fa-coinho.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab4766388256f3a8b070872bd0af94056afb5417/gcc%2Fada%2Fa-coinho.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho.adb?ref=ab4766388256f3a8b070872bd0af94056afb5417", "patch": "@@ -40,10 +40,8 @@ package body Ada.Containers.Indefinite_Holders is\n    begin\n       if Left.Element = null and Right.Element = null then\n          return True;\n-\n       elsif Left.Element /= null and Right.Element /= null then\n          return Left.Element.all = Right.Element.all;\n-\n       else\n          return False;\n       end if;"}]}