{"sha": "4390e7bfbc641a52c6192b448768dafdf4565527", "node_id": "C_kwDOANBUbNoAKDQzOTBlN2JmYmM2NDFhNTJjNjE5MmI0NDg3NjhkYWZkZjQ1NjU1Mjc", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-06-19T00:16:23Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-06-19T00:16:23Z"}, "message": "Daily bump.", "tree": {"sha": "b6a2d77d20764400c12d8545a36aad78f6318697", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6a2d77d20764400c12d8545a36aad78f6318697"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4390e7bfbc641a52c6192b448768dafdf4565527", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4390e7bfbc641a52c6192b448768dafdf4565527", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4390e7bfbc641a52c6192b448768dafdf4565527", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4390e7bfbc641a52c6192b448768dafdf4565527/comments", "author": null, "committer": null, "parents": [{"sha": "856a9b8fc2b457963898c539f0db92a1baa0bf27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/856a9b8fc2b457963898c539f0db92a1baa0bf27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/856a9b8fc2b457963898c539f0db92a1baa0bf27"}], "stats": {"total": 121, "additions": 120, "deletions": 1}, "files": [{"sha": "cf564d1736854035c0ac1d2c9ec2afd76e98608a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4390e7bfbc641a52c6192b448768dafdf4565527/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4390e7bfbc641a52c6192b448768dafdf4565527/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4390e7bfbc641a52c6192b448768dafdf4565527", "patch": "@@ -1,3 +1,65 @@\n+2022-06-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* common.opt (flag_sanitize_trap): New variable.\n+\t(fsanitize-trap=, fsanitize-trap): New options.\n+\t(fsanitize-undefined-trap-on-error): Change into deprecated alias\n+\tfor -fsanitize-trap=all.\n+\t* opts.h (struct sanitizer_opts_s): Add can_trap member.\n+\t* opts.cc (finish_options): Complain about unsupported\n+\t-fsanitize-trap= options.\n+\t(sanitizer_opts): Add can_trap values to all entries.\n+\t(get_closest_sanitizer_option): Ignore -fsanitize-trap=\n+\toptions which have can_trap false.\n+\t(parse_sanitizer_options): Add support for -fsanitize-trap=.\n+\tFor -fsanitize-trap=all, enable\n+\tSANITIZE_UNDEFINED | SANITIZE_UNDEFINED_NONDEFAULT.  Disallow\n+\t-fsanitize-trap=vptr here.\n+\t(common_handle_option): Handle OPT_fsanitize_trap_ and\n+\tOPT_fsanitize_trap.\n+\t* sanopt.cc (maybe_optimize_ubsan_null_ifn): Check\n+\tflag_sanitize_trap & SANITIZE_{NULL,ALIGNMENT} instead of\n+\tflag_sanitize_undefined_trap_on_error.\n+\t* gcc.cc (sanitize_spec_function): Use\n+\tflag_sanitize & ~flag_sanitize_trap instead of flag_sanitize\n+\tand drop use of flag_sanitize_undefined_trap_on_error in\n+\t\"undefined\" handling.\n+\t* ubsan.cc (ubsan_instrument_unreachable): Use\n+\tflag_sanitize_trap & SANITIZE_??? instead of\n+\tflag_sanitize_undefined_trap_on_error.\n+\t(ubsan_expand_bounds_ifn, ubsan_expand_null_ifn,\n+\tubsan_expand_objsize_ifn, ubsan_expand_ptr_ifn,\n+\tubsan_build_overflow_builtin, instrument_bool_enum_load,\n+\tubsan_instrument_float_cast, instrument_nonnull_arg,\n+\tinstrument_nonnull_return, instrument_builtin): Likewise.\n+\t* doc/invoke.texi (-fsanitize-trap=, -fsanitize-trap): Document.\n+\t(-fsanitize-undefined-trap-on-error): Document as deprecated\n+\talias of -fsanitize-trap.\n+\n+2022-06-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/105998\n+\t* varasm.cc (narrowing_initializer_constant_valid_p): Check\n+\tSCALAR_INT_MODE_P instead of INTEGRAL_MODE_P, also break on\n+\t! INTEGRAL_TYPE_P and do the same check also on op{0,1}'s type.\n+\n+2022-06-18  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR tree-optimization/105835\n+\t* match.pd (convert (mult zero_one_valued_p@1 INTEGER_CST@2)):\n+\tNarrow integer multiplication by a zero_one_valued_p operand.\n+\t(convert (cond @1 INTEGER_CST@2 INTEGER_CST@3)): Push integer\n+\tconversions inside COND_EXPR where both data operands are\n+\tinteger constants.\n+\n+2022-06-18  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n+\n+\t* config/xtensa/constraints.md (Y):\n+\tChange to include integer constants until reload begins.\n+\t* config/xtensa/predicates.md (move_operand): Ditto.\n+\t* config/xtensa/xtensa.cc (xtensa_emit_move_sequence):\n+\tChange to allow storing integer constants into litpool only after\n+\treload begins.\n+\n 2022-06-17  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/105209"}, {"sha": "ff3ede7eb96e2876b5ff01b3772d0040ccc0eb3d", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4390e7bfbc641a52c6192b448768dafdf4565527/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4390e7bfbc641a52c6192b448768dafdf4565527/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=4390e7bfbc641a52c6192b448768dafdf4565527", "patch": "@@ -1 +1 @@\n-20220618\n+20220619"}, {"sha": "a605c3c797eafe1c481a5f0a6f5e5e8a9cd527fb", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4390e7bfbc641a52c6192b448768dafdf4565527/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4390e7bfbc641a52c6192b448768dafdf4565527/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=4390e7bfbc641a52c6192b448768dafdf4565527", "patch": "@@ -1,3 +1,14 @@\n+2022-06-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-ubsan.cc (ubsan_instrument_division, ubsan_instrument_shift):\n+\tUse flag_sanitize_trap & SANITIZE_??? instead of\n+\tflag_sanitize_undefined_trap_on_error.  If 2 sanitizers are involved\n+\tand flag_sanitize_trap differs for them, emit __builtin_trap only\n+\tfor the comparison where trap is requested.\n+\t(ubsan_instrument_vla, ubsan_instrument_return): Use\n+\tlag_sanitize_trap & SANITIZE_??? instead of\n+\tflag_sanitize_undefined_trap_on_error.\n+\n 2022-06-13  Jason Merrill  <jason@redhat.com>\n \n \t* c-ubsan.cc (ubsan_instrument_return): Use BUILTINS_LOCATION."}, {"sha": "5c1c306fff9d831efdec2c011b552f7d9ffc7898", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4390e7bfbc641a52c6192b448768dafdf4565527/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4390e7bfbc641a52c6192b448768dafdf4565527/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4390e7bfbc641a52c6192b448768dafdf4565527", "patch": "@@ -1,3 +1,9 @@\n+2022-06-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* cp-ubsan.cc (cp_ubsan_instrument_vptr_p): Use\n+\tflag_sanitize_trap & SANITIZE_VPTR instead of\n+\tflag_sanitize_undefined_trap_on_error.\n+\n 2022-06-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/106001"}, {"sha": "b6689441704490371f13f84987dd7dd5dd31708e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4390e7bfbc641a52c6192b448768dafdf4565527/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4390e7bfbc641a52c6192b448768dafdf4565527/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4390e7bfbc641a52c6192b448768dafdf4565527", "patch": "@@ -1,3 +1,11 @@\n+2022-06-18  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/105986\n+\t* simplify.cc (gfc_simplify_btest): Add check for POS argument.\n+\t(gfc_simplify_ibclr): Add check for POS argument.\n+\t(gfc_simplify_ibits): Add check for POS and LEN arguments.\n+\t(gfc_simplify_ibset): Add check for POS argument.\n+\n 2022-06-08  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* openmp.cc (gfc_match_omp_clauses): Check also parent namespace"}, {"sha": "d77961e74dbfcfb706cc078d8698a249c629a125", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4390e7bfbc641a52c6192b448768dafdf4565527/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4390e7bfbc641a52c6192b448768dafdf4565527/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4390e7bfbc641a52c6192b448768dafdf4565527", "patch": "@@ -1,3 +1,35 @@\n+2022-06-18  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/105986\n+\t* gfortran.dg/check_bits_3.f90: New test.\n+\n+2022-06-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-c++-common/ubsan/nonnull-4.c: Use -fsanitize-trap=all\n+\tinstead of -fsanitize-undefined-trap-on-error.\n+\t* c-c++-common/ubsan/div-by-zero-4.c: Use\n+\t-fsanitize-trap=signed-integer-overflow instead of\n+\t-fsanitize-undefined-trap-on-error.\n+\t* c-c++-common/ubsan/overflow-add-4.c: Use -fsanitize-trap=undefined\n+\tinstead of -fsanitize-undefined-trap-on-error.\n+\t* c-c++-common/ubsan/pr56956.c: Likewise.\n+\t* c-c++-common/ubsan/pr68142.c: Likewise.\n+\t* c-c++-common/ubsan/pr80932.c: Use\n+\t-fno-sanitize-trap=all -fsanitize-trap=shift,undefined\n+\tinstead of -fsanitize-undefined-trap-on-error.\n+\t* c-c++-common/ubsan/align-8.c: Use -fsanitize-trap=alignment\n+\tinstead of -fsanitize-undefined-trap-on-error.\n+\n+2022-06-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/105998\n+\t* c-c++-common/pr105998.c: New test.\n+\n+2022-06-18  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR tree-optimization/105835\n+\t* gcc.dg/pr105835.c: New test case.\n+\n 2022-06-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/106001"}]}