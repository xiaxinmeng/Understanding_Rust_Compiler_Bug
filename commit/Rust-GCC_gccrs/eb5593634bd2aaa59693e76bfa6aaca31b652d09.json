{"sha": "eb5593634bd2aaa59693e76bfa6aaca31b652d09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI1NTkzNjM0YmQyYWFhNTk2OTNlNzZiZmE2YWFjYTMxYjY1MmQwOQ==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2001-06-28T03:13:49Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2001-06-28T03:13:49Z"}, "message": "inline pow fix/PTHREAD_*_INITIALIZER for Solaris/UW7 Byteorder.h search problem\n\nFrom-SVN: r43623", "tree": {"sha": "a0d1dc6651a6dad250efddf85b3d06d88922a4f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0d1dc6651a6dad250efddf85b3d06d88922a4f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb5593634bd2aaa59693e76bfa6aaca31b652d09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb5593634bd2aaa59693e76bfa6aaca31b652d09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb5593634bd2aaa59693e76bfa6aaca31b652d09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb5593634bd2aaa59693e76bfa6aaca31b652d09/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f60b945b39191b1c033618bdc5dbe2c22655a407", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f60b945b39191b1c033618bdc5dbe2c22655a407", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f60b945b39191b1c033618bdc5dbe2c22655a407"}], "stats": {"total": 151, "additions": 115, "deletions": 36}, "files": [{"sha": "3b00c8ba47b204ca1ed60088163ba77d70cbe5a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb5593634bd2aaa59693e76bfa6aaca31b652d09/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb5593634bd2aaa59693e76bfa6aaca31b652d09/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb5593634bd2aaa59693e76bfa6aaca31b652d09", "patch": "@@ -1,3 +1,13 @@\n+2001-06-27  Bruce Korb  <bkorb@gnu.org>\n+\n+\t* fixinc/inclhack.def(hpux11_cpp_pow_inline): new, but real similar to\n+\thpux10_cpp_pow_inline.  Not similar enough.\n+\t(solaris_mutex_init): renamed.  PTHREAD_*_INITIALIZER is a problem for\n+\tall Solaris versions.  This fix patches MUTEX and COND initializers,\n+\tthe RWLOCK one will wait for someone to complain.  For now, anyway.\n+\t(uw7_byteorder_fix): It was looking for the byteorder.h file in the\n+\twrong directory.\n+\n 2001-06-27  Stan Shebs  <shebs@apple.com>\n \n \t* objc/objc-act.c (handle_impent): Rewrite to be more portable"}, {"sha": "478fab182dd30ed054b6e5aebd6bedf2127e0094", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 71, "deletions": 24, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb5593634bd2aaa59693e76bfa6aaca31b652d09/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb5593634bd2aaa59693e76bfa6aaca31b652d09/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=eb5593634bd2aaa59693e76bfa6aaca31b652d09", "patch": "@@ -5,7 +5,7 @@\n  * files which are fixed to work correctly with ANSI C and placed in a\n  * directory that GNU C will search.\n  *\n- * This file contains 140 fixup descriptions.\n+ * This file contains 141 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -1985,6 +1985,43 @@ static const char* apzHpux10_Cpp_Pow_InlinePatch[] = {\n     \"\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Hpux11_Cpp_Pow_Inline fix\n+ */\n+tSCC zHpux11_Cpp_Pow_InlineName[] =\n+     \"hpux11_cpp_pow_inline\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zHpux11_Cpp_Pow_InlineList[] =\n+  \"|math.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzHpux11_Cpp_Pow_InlineMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zHpux11_Cpp_Pow_InlineSelect0[] =\n+       \" +inline double pow\\\\(double d,int expon\\\\) {\\n\\\n+ +return pow\\\\(d, \\\\(double\\\\)expon\\\\);\\n\\\n+ +}\\n\";\n+\n+#define    HPUX11_CPP_POW_INLINE_TEST_CT  1\n+static tTestDesc aHpux11_Cpp_Pow_InlineTests[] = {\n+  { TT_EGREP,    zHpux11_Cpp_Pow_InlineSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Hpux11_Cpp_Pow_Inline\n+ */\n+static const char* apzHpux11_Cpp_Pow_InlinePatch[] = {\n+    \"format\",\n+    \"\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Hpux11_Fabsf fix\n@@ -3702,38 +3739,42 @@ static const char* apzSco_UtimePatch[] = {\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n- *  Description of Solaris27_Mutex_Init fix\n+ *  Description of Solaris_Mutex_Init fix\n  */\n-tSCC zSolaris27_Mutex_InitName[] =\n-     \"solaris27_mutex_init\";\n+tSCC zSolaris_Mutex_InitName[] =\n+     \"solaris_mutex_init\";\n \n /*\n  *  File name selection pattern\n  */\n-tSCC zSolaris27_Mutex_InitList[] =\n+tSCC zSolaris_Mutex_InitList[] =\n   \"|pthread.h|\";\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzSolaris27_Mutex_InitMachs (const char**)NULL\n+#define apzSolaris_Mutex_InitMachs (const char**)NULL\n \n /*\n  *  content selection pattern - do fix if pattern found\n  */\n-tSCC zSolaris27_Mutex_InitSelect0[] =\n-       \"@\\\\(#\\\\)pthread.h[ \\t]+1.26[ \\t]+98/04/12 SMI\";\n+tSCC zSolaris_Mutex_InitSelect0[] =\n+       \"@\\\\(#\\\\)pthread.h[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n \n-#define    SOLARIS27_MUTEX_INIT_TEST_CT  1\n-static tTestDesc aSolaris27_Mutex_InitTests[] = {\n-  { TT_EGREP,    zSolaris27_Mutex_InitSelect0, (regex_t*)NULL }, };\n+#define    SOLARIS_MUTEX_INIT_TEST_CT  1\n+static tTestDesc aSolaris_Mutex_InitTests[] = {\n+  { TT_EGREP,    zSolaris_Mutex_InitSelect0, (regex_t*)NULL }, };\n \n /*\n- *  Fix Command Arguments for Solaris27_Mutex_Init\n+ *  Fix Command Arguments for Solaris_Mutex_Init\n  */\n-static const char* apzSolaris27_Mutex_InitPatch[] = {\n+static const char* apzSolaris_Mutex_InitPatch[] = {\n     \"format\",\n-    \"%1, {0}}\",\n-    \"(define[ \\t]+PTHREAD_MUTEX_INITIALIZER.*),[ \\t]*0}$\",\n+    \"#if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)\\n\\\n+%0\\n\\\n+#else\\n\\\n+%1, {0}}%3\\n\\\n+#endif\",\n+    \"(^#define[ \\t]+PTHREAD_(MUTEX|COND)_INITIALIZER[ \\t]+{.*),[ \\t]*0}(|[ \\t].*)$\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -5028,7 +5069,7 @@ tSCC zUw7_Byteorder_FixSelect0[] =\n  *  perform the 'test' shell command - do fix on success\n  */\n tSCC zUw7_Byteorder_FixTest0[] =\n-       \"-f $DESTDIR/sys/byteorder.h\";\n+       \"-f sys/byteorder.h\";\n \n #define    UW7_BYTEORDER_FIX_TEST_CT  2\n static tTestDesc aUw7_Byteorder_FixTests[] = {\n@@ -5041,7 +5082,7 @@ static tTestDesc aUw7_Byteorder_FixTests[] = {\n static const char* apzUw7_Byteorder_FixPatch[] = {\n     \"format\",\n     \"\",\n-    \"^extern.*(htons|ntohs).*\\\\(in_port_t\\\\).*\\n\",\n+    \"^extern.*[ \\t](htons|ntohs).*\\\\(in_port_t\\\\).*;\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -5466,9 +5507,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          147\n+#define REGEX_COUNT          148\n #define MACH_LIST_SIZE_LIMIT 279\n-#define FIX_COUNT            140\n+#define FIX_COUNT            141\n \n /*\n  *  Enumerate the fixes\n@@ -5523,6 +5564,7 @@ typedef enum {\n     HP_INLINE_FIXIDX,\n     HP_SYSFILE_FIXIDX,\n     HPUX10_CPP_POW_INLINE_FIXIDX,\n+    HPUX11_CPP_POW_INLINE_FIXIDX,\n     HPUX11_FABSF_FIXIDX,\n     HPUX11_UINT32_C_FIXIDX,\n     HPUX8_BOGUS_INLINES_FIXIDX,\n@@ -5568,7 +5610,7 @@ typedef enum {\n     RS6000_PARAM_FIXIDX,\n     SCO_STATIC_FUNC_FIXIDX,\n     SCO_UTIME_FIXIDX,\n-    SOLARIS27_MUTEX_INIT_FIXIDX,\n+    SOLARIS_MUTEX_INIT_FIXIDX,\n     STATSSWTCH_FIXIDX,\n     STDIO_STDARG_H_FIXIDX,\n     STDIO_VA_LIST_FIXIDX,\n@@ -5862,6 +5904,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      HPUX10_CPP_POW_INLINE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aHpux10_Cpp_Pow_InlineTests,   apzHpux10_Cpp_Pow_InlinePatch, 0 },\n \n+  {  zHpux11_Cpp_Pow_InlineName,    zHpux11_Cpp_Pow_InlineList,\n+     apzHpux11_Cpp_Pow_InlineMachs,\n+     HPUX11_CPP_POW_INLINE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aHpux11_Cpp_Pow_InlineTests,   apzHpux11_Cpp_Pow_InlinePatch, 0 },\n+\n   {  zHpux11_FabsfName,    zHpux11_FabsfList,\n      apzHpux11_FabsfMachs,\n      HPUX11_FABSF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -6087,10 +6134,10 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      SCO_UTIME_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aSco_UtimeTests,   apzSco_UtimePatch, 0 },\n \n-  {  zSolaris27_Mutex_InitName,    zSolaris27_Mutex_InitList,\n-     apzSolaris27_Mutex_InitMachs,\n-     SOLARIS27_MUTEX_INIT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aSolaris27_Mutex_InitTests,   apzSolaris27_Mutex_InitPatch, 0 },\n+  {  zSolaris_Mutex_InitName,    zSolaris_Mutex_InitList,\n+     apzSolaris_Mutex_InitMachs,\n+     SOLARIS_MUTEX_INIT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aSolaris_Mutex_InitTests,   apzSolaris_Mutex_InitPatch, 0 },\n \n   {  zStatsswtchName,    zStatsswtchList,\n      apzStatsswtchMachs,"}, {"sha": "510bb7923684c8a053bdcde83de1835d8b67784b", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 34, "deletions": 12, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb5593634bd2aaa59693e76bfa6aaca31b652d09/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb5593634bd2aaa59693e76bfa6aaca31b652d09/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=eb5593634bd2aaa59693e76bfa6aaca31b652d09", "patch": "@@ -1149,7 +1149,7 @@ fix = {\n \n \n /*\n- * Delete C++ double pow (double, int) inline function from HP-UX 10\n+ * Delete C++ double pow (double, int) inline function from HP-UX 10 & 11\n  * math.h to prevent clash with define in c_std/bits/std_cmath.h.\n  */\n fix = {\n@@ -1180,6 +1180,20 @@ fix = {\n \t\"#    endif\";\n };\n \n+fix = {\n+     hackname  = hpux11_cpp_pow_inline;\n+     files     = math.h;\n+     select    = \" +inline double pow\\\\(double d,int expon\\\\) {\\n\"\n+                 \" +return pow\\\\(d, \\\\(double\\\\)expon\\\\);\\n\"\n+                 \" +}\\n\";\n+     c_fix     = format;\n+     c_fix_arg = \"\";\n+\n+     test_text =\n+            \"   inline double pow(double d,int expon) {\\n\"\n+            \"     return pow(d, (double)expon);\\n\"\n+            \"   }\\n\";\n+};\n \n /*\n  *  Keep HP-UX 11 from stomping on C++ math namespace\n@@ -2052,22 +2066,30 @@ fix = {\n \n \n /*\n- * Sun Solaris 2.7 defines PTHREAD_MUTEX_INITIALIZER with a trailing\n+ * Sun Solaris defines PTHREAD_MUTEX_INITIALIZER with a trailing\n  * \"0\" for the last field of the pthread_mutex_t structure, which is\n  * of type upad64_t, which itself is typedef'd to int64_t, but with\n  * __STDC__ defined (e.g. by -ansi) it is a union. So change the\n  * initializer to \"{0}\" instead\n  */\n fix = {\n-  hackname = solaris27_mutex_init;\n-  select = '@\\(#\\)pthread.h' \"[ \\t]+1.26[ \\t]+98/04/12 SMI\";\n+  hackname = solaris_mutex_init;\n+  select = '@\\(#\\)pthread.h' \"[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n   files = pthread.h;\n   c_fix = format;\n-  c_fix_arg = \"%1, {0}}\";\n-  c_fix_arg = \"(define[ \\t]+PTHREAD_MUTEX_INITIALIZER.*),[ \\t]*0}$\";\n+  c_fix_arg = \"#if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)\\n\"\n+              \"%0\\n\"\n+              \"#else\\n\"\n+              \"%1, {0}}%3\\n\"\n+              \"#endif\";\n+  c_fix_arg = \"(^#define[ \\t]+PTHREAD_(MUTEX|COND)_INITIALIZER[ \\t]+{.*)\"\n+              \",[ \\t]*0}\" \"(|[ \\t].*)$\";\n   test_text =\n   '#ident \"@(#)pthread.h  1.26  98/04/12 SMI\"'\"\\n\"\n-  \"#define PTHREAD_MUTEX_INITIALIZER {{{0},0}, {{{0}}}, 0}\";\n+  \"#define PTHREAD_MUTEX_INITIALIZER\\t{{{0},0}, {{{0}}}, 0}\\n\"\n+  \"#define PTHREAD_COND_INITIALIZER\\t{{{0}, 0}, 0}\\t/* DEFAULTCV */\\n\"\n+  \"#define PTHREAD_RWLOCK_INITIALIZER\\t\"\n+           \"{0, 0, 0, {0, 0, 0}, {0, 0}, {0, 0}}\";\n };\n \n \n@@ -3058,7 +3080,7 @@ fix = {\n     hackname = uw7_byteorder_fix;\n     files    = arpa/inet.h;\n     select   = \"in_port_t\";\n-    test     = \"-f $DESTDIR/sys/byteorder.h\";\n+    test     = \"-f sys/byteorder.h\";\n #ifndef SVR5\n \tmach = \"*-*-sysv4*\";\n \tmach = \"i?86-*-sysv5*\";\n@@ -3070,12 +3092,12 @@ fix = {\n \n     c_fix     = format;\n     c_fix_arg = \"\";\n-    c_fix_arg = \"^extern.*(htons|ntohs).*\\\\(in_port_t\\\\).*\\n\";\n+    c_fix_arg = \"^extern.*[ \\t](htons|ntohs).*\\\\(in_port_t\\\\).*;\";\n \n-    test_text = \"extern htons(in_port_t);\"\n+    test_text = \"extern in_port_t\\thtons __P((in_port_t));\\n\"\n+                \"extern in_port_t\\tntohs __P((in_port_t));\"\n                 \"`[ ! -d $DESTDIR/sys ] && mkdir $DESTDIR/sys\\n\"\n-                \"echo '/* DUMMY */' >> sys/byteorder.h\\n\"\n-                \"touch $DESTDIR/sys/byteorder.h`\";\n+                \"echo '/* DUMMY */' >> sys/byteorder.h`\";\n };\n \n "}]}