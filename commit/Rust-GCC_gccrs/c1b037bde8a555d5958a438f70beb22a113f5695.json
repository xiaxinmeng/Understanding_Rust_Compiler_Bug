{"sha": "c1b037bde8a555d5958a438f70beb22a113f5695", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFiMDM3YmRlOGE1NTVkNTk1OGE0MzhmNzBiZWIyMmExMTNmNTY5NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-10-18T16:52:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-10-18T16:52:12Z"}, "message": "iostream.cc (ends): Release the acquired lock.\n\n\t* iostream.cc (ends): Release the acquired lock.\n\t(endl): Likewise.\n\nFrom-SVN: r36937", "tree": {"sha": "2bee594f11dfe8380034cda27bae78086805969c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bee594f11dfe8380034cda27bae78086805969c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1b037bde8a555d5958a438f70beb22a113f5695", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1b037bde8a555d5958a438f70beb22a113f5695", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1b037bde8a555d5958a438f70beb22a113f5695", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1b037bde8a555d5958a438f70beb22a113f5695/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "81cf47b209c433b6cb1ccffb030789a06ffa5c16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81cf47b209c433b6cb1ccffb030789a06ffa5c16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81cf47b209c433b6cb1ccffb030789a06ffa5c16"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "5c9836ee7b02d2549b32c008ce78c528e1f4081f", "filename": "libio/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1b037bde8a555d5958a438f70beb22a113f5695/libio%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1b037bde8a555d5958a438f70beb22a113f5695/libio%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libio%2FChangeLog?ref=c1b037bde8a555d5958a438f70beb22a113f5695", "patch": "@@ -1,3 +1,8 @@\n+2000-10-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* iostream.cc (ends): Release the acquired lock.\n+\t(endl): Likewise.\n+\n 2000-10-16  Jakub Jelinek  <jakub@redhat.com>\n \n \t* iostream.cc (ostream::operator<<(double n)) [__GLIBC_MINOR__ >= 2]:"}, {"sha": "ae1db1afd9c9f8583f63d8cf9e440c95eef19b2d", "filename": "libio/iostream.cc", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1b037bde8a555d5958a438f70beb22a113f5695/libio%2Fiostream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1b037bde8a555d5958a438f70beb22a113f5695/libio%2Fiostream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libio%2Fiostream.cc?ref=c1b037bde8a555d5958a438f70beb22a113f5695", "patch": "@@ -965,15 +965,25 @@ int istream::_skip_ws()\n \n ostream& ends(ostream& outs)\n {\n-    if (outs.opfx())\n+    if (outs.opfx()) {\n+\t_IO_cleanup_region_start ((void (*) __P ((void *))) _IO_funlockfile,\n+\t\t\t\t  outs._strbuf);\n \touts.put('\\0');\n+\touts.osfx();\n+\t_IO_cleanup_region_end (0);\n+    }\n     return outs;\n }\n \n ostream& endl(ostream& outs)\n {\n-    if (outs.opfx())\n+    if (outs.opfx()) {\n+\t_IO_cleanup_region_start ((void (*) __P ((void *))) _IO_funlockfile,\n+\t\t\t\t  outs._strbuf);\n         flush(outs.put('\\n'));\n+\touts.osfx();\n+\t_IO_cleanup_region_end (0);\n+    }\n     return outs;\n }\n "}]}