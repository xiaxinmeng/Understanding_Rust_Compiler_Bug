{"sha": "90be6e465c82f68e872ed9f5ea2388f709fee359", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBiZTZlNDY1YzgyZjY4ZTg3MmVkOWY1ZWEyMzg4ZjcwOWZlZTM1OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-12-18T16:50:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-12-18T16:50:06Z"}, "message": "re PR target/59539 (Missed optimisation: VEX-prefixed operations don't need aligned data)\n\n\tPR target/59539\n\t* config/i386/sse.md\n\t(<sse>_loadu<ssemodesuffix><avxsizesuffix><mask_name>,\n\t<sse2_avx_avx512f>_loaddqu<mode><mask_name>): New expanders,\n\tprefix existing define_insn names with *.\n\n\t* gcc.target/i386/pr59539-1.c: New test.\n\t* gcc.target/i386/pr59539-2.c: New test.\n\nFrom-SVN: r206090", "tree": {"sha": "635271aaba6d080002960b3467e6dec50a8d6682", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/635271aaba6d080002960b3467e6dec50a8d6682"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90be6e465c82f68e872ed9f5ea2388f709fee359", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90be6e465c82f68e872ed9f5ea2388f709fee359", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90be6e465c82f68e872ed9f5ea2388f709fee359", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90be6e465c82f68e872ed9f5ea2388f709fee359/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "69aeb34f52ac77c4704a08f91156de8ffd9d797b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69aeb34f52ac77c4704a08f91156de8ffd9d797b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69aeb34f52ac77c4704a08f91156de8ffd9d797b"}], "stats": {"total": 93, "additions": 91, "deletions": 2}, "files": [{"sha": "83e8321f9c257afff0fdaa48da897189a56d5f98", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90be6e465c82f68e872ed9f5ea2388f709fee359/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90be6e465c82f68e872ed9f5ea2388f709fee359/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90be6e465c82f68e872ed9f5ea2388f709fee359", "patch": "@@ -1,3 +1,11 @@\n+2013-12-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/59539\n+\t* config/i386/sse.md\n+\t(<sse>_loadu<ssemodesuffix><avxsizesuffix><mask_name>,\n+\t<sse2_avx_avx512f>_loaddqu<mode><mask_name>): New expanders,\n+\tprefix existing define_insn names with *.\n+\n 2013-12-18  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/arm/arm.c (arm_expand_epilogue_apcs_frame): Fix thinko."}, {"sha": "2cbbb14ccea45cd7bbaad0278a0a3917a5367070", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 45, "deletions": 2, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90be6e465c82f68e872ed9f5ea2388f709fee359/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90be6e465c82f68e872ed9f5ea2388f709fee359/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=90be6e465c82f68e872ed9f5ea2388f709fee359", "patch": "@@ -912,7 +912,28 @@\n   DONE;\n })\n \n-(define_insn \"<sse>_loadu<ssemodesuffix><avxsizesuffix><mask_name>\"\n+(define_expand \"<sse>_loadu<ssemodesuffix><avxsizesuffix><mask_name>\"\n+  [(set (match_operand:VF 0 \"register_operand\")\n+\t(unspec:VF [(match_operand:VF 1 \"nonimmediate_operand\")]\n+\t  UNSPEC_LOADU))]\n+  \"TARGET_SSE && <mask_mode512bit_condition>\"\n+{\n+  /* For AVX, normal *mov<mode>_internal pattern will handle unaligned loads\n+     just fine if misaligned_operand is true, and without the UNSPEC it can\n+     be combined with arithmetic instructions.  If misaligned_operand is\n+     false, still emit UNSPEC_LOADU insn to honor user's request for\n+     misaligned load.  */\n+  if (TARGET_AVX\n+      && misaligned_operand (operands[1], <MODE>mode)\n+      /* FIXME: Revisit after AVX512F merge is completed.  */\n+      && !<mask_applied>)\n+    {\n+      emit_insn (gen_rtx_SET (VOIDmode, operands[0], operands[1]));\n+      DONE;\n+    }\n+})\n+\n+(define_insn \"*<sse>_loadu<ssemodesuffix><avxsizesuffix><mask_name>\"\n   [(set (match_operand:VF 0 \"register_operand\" \"=v\")\n \t(unspec:VF\n \t  [(match_operand:VF 1 \"nonimmediate_operand\" \"vm\")]\n@@ -999,7 +1020,29 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"<sse2_avx_avx512f>_loaddqu<mode><mask_name>\"\n+(define_expand \"<sse2_avx_avx512f>_loaddqu<mode><mask_name>\"\n+  [(set (match_operand:VI_UNALIGNED_LOADSTORE 0 \"register_operand\")\n+\t(unspec:VI_UNALIGNED_LOADSTORE\n+\t  [(match_operand:VI_UNALIGNED_LOADSTORE 1 \"nonimmediate_operand\")]\n+\t  UNSPEC_LOADU))]\n+  \"TARGET_SSE2 && <mask_mode512bit_condition>\"\n+{\n+  /* For AVX, normal *mov<mode>_internal pattern will handle unaligned loads\n+     just fine if misaligned_operand is true, and without the UNSPEC it can\n+     be combined with arithmetic instructions.  If misaligned_operand is\n+     false, still emit UNSPEC_LOADU insn to honor user's request for\n+     misaligned load.  */\n+  if (TARGET_AVX\n+      && misaligned_operand (operands[1], <MODE>mode)\n+      /* FIXME: Revisit after AVX512F merge is completed.  */\n+      && !<mask_applied>)\n+    {\n+      emit_insn (gen_rtx_SET (VOIDmode, operands[0], operands[1]));\n+      DONE;\n+    }\n+})\n+\n+(define_insn \"*<sse2_avx_avx512f>_loaddqu<mode><mask_name>\"\n   [(set (match_operand:VI_UNALIGNED_LOADSTORE 0 \"register_operand\" \"=v\")\n \t(unspec:VI_UNALIGNED_LOADSTORE\n \t  [(match_operand:VI_UNALIGNED_LOADSTORE 1 \"nonimmediate_operand\" \"vm\")]"}, {"sha": "20a1bc59c4ff81898d4ad75a86cffdef580e1c04", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90be6e465c82f68e872ed9f5ea2388f709fee359/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90be6e465c82f68e872ed9f5ea2388f709fee359/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90be6e465c82f68e872ed9f5ea2388f709fee359", "patch": "@@ -1,3 +1,9 @@\n+2013-12-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/59539\n+\t* gcc.target/i386/pr59539-1.c: New test.\n+\t* gcc.target/i386/pr59539-2.c: New test.\n+\n 2013-12-18  Nick Clifton  <nickc@redhat.com>\n \n \t* gcc.dg/pr32912-2.c: Fix for 16-bit targets."}, {"sha": "9b34053c4cb5434e4e05b452b64b01eea4523b38", "filename": "gcc/testsuite/gcc.target/i386/pr59539-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90be6e465c82f68e872ed9f5ea2388f709fee359/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59539-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90be6e465c82f68e872ed9f5ea2388f709fee359/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59539-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59539-1.c?ref=90be6e465c82f68e872ed9f5ea2388f709fee359", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/59539 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx\" } */\n+\n+#include <immintrin.h>\n+\n+int\n+foo (void *p1, void *p2)\n+{\n+  __m128i d1 = _mm_loadu_si128 ((__m128i *) p1);\n+  __m128i d2 = _mm_loadu_si128 ((__m128i *) p2);\n+  __m128i result = _mm_cmpeq_epi16 (d1, d2);\n+  return _mm_movemask_epi8 (result);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\" 1 } } */"}, {"sha": "b53b8c407abaeac3e4176dd6834e3ef28be79c60", "filename": "gcc/testsuite/gcc.target/i386/pr59539-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90be6e465c82f68e872ed9f5ea2388f709fee359/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59539-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90be6e465c82f68e872ed9f5ea2388f709fee359/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59539-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59539-2.c?ref=90be6e465c82f68e872ed9f5ea2388f709fee359", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/59539 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx2\" } */\n+\n+#include <immintrin.h>\n+\n+int\n+foo (void *p1, void *p2)\n+{\n+  __m256i d1 = _mm256_loadu_si256 ((__m256i *) p1);\n+  __m256i d2 = _mm256_loadu_si256 ((__m256i *) p2);\n+  __m256i result = _mm256_cmpeq_epi16 (d1, d2);\n+  return _mm256_movemask_epi8 (result);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqu\" 1 } } */"}]}