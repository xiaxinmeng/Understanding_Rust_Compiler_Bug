{"sha": "c5a0835dea5cfb00153b38ecbe14f067c586ccdb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVhMDgzNWRlYTVjZmIwMDE1M2IzOGVjYmUxNGYwNjdjNTg2Y2NkYg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-10-31T21:30:22Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-10-31T21:30:22Z"}, "message": "* gcc.c-torture/execute/va-arg-21.c: New test.\n\nFrom-SVN: r37167", "tree": {"sha": "29f99a78921a83373df20b8da7e84ba267f8c12b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29f99a78921a83373df20b8da7e84ba267f8c12b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5a0835dea5cfb00153b38ecbe14f067c586ccdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5a0835dea5cfb00153b38ecbe14f067c586ccdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5a0835dea5cfb00153b38ecbe14f067c586ccdb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5a0835dea5cfb00153b38ecbe14f067c586ccdb/comments", "author": null, "committer": null, "parents": [{"sha": "7e08e19030fe87f00af88372c2fea23c1b8f0ac1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e08e19030fe87f00af88372c2fea23c1b8f0ac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e08e19030fe87f00af88372c2fea23c1b8f0ac1"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "838db0760012d98b38e8a31caa3613f53be197ec", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a0835dea5cfb00153b38ecbe14f067c586ccdb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a0835dea5cfb00153b38ecbe14f067c586ccdb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c5a0835dea5cfb00153b38ecbe14f067c586ccdb", "patch": "@@ -1,3 +1,7 @@\n+2000-10-31  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gcc.c-torture/execute/va-arg-21.c: New test.\n+\n 2000-10-31  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* gcc.dg/c99-complex-2.c: New test."}, {"sha": "8c9802a372dfff545fd8a43bd69e470d2a783c34", "filename": "gcc/testsuite/gcc.c-torture/execute/va-arg-21.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a0835dea5cfb00153b38ecbe14f067c586ccdb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fva-arg-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a0835dea5cfb00153b38ecbe14f067c586ccdb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fva-arg-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fva-arg-21.c?ref=c5a0835dea5cfb00153b38ecbe14f067c586ccdb", "patch": "@@ -0,0 +1,48 @@\n+/* Copyright (C) 2000  Free Software Foundation.\n+\n+   If the argument to va_end() has side effects, test whether side\n+   effects from that argument are honored.\n+\n+   Written by Kaveh R. Ghazi, 10/31/2000.  */\n+\n+#include <stdarg.h>\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+#ifndef __GNUC__\n+#define __attribute__(x)\n+#endif\n+\n+static void __attribute__ ((__format__ (__printf__, 1, 2)))\n+doit (const char *s, ...) \n+{\n+  va_list *ap_array[3], **ap_ptr = ap_array;\n+\n+  ap_array[0] = malloc (sizeof(va_list));\n+  ap_array[1] = NULL;\n+  ap_array[2] = malloc (sizeof(va_list));\n+  \n+  va_start (*ap_array[0], s);\n+  vprintf (s, **ap_ptr);\n+  /* Increment the va_list pointer once.  */\n+  va_end (**ap_ptr++);\n+\n+  /* Increment the va_list pointer a second time.  */\n+  ap_ptr++;\n+  \n+  va_start (*ap_array[2], s);\n+  /* If we failed to increment ap_ptr twice, then the parameter passed\n+     in here will dereference NULL and should cause a crash.  */\n+  vprintf (s, **ap_ptr);\n+  va_end (**ap_ptr);\n+\n+  /* Just in case, If *ap_ptr is NULL abort anyway.  */\n+  if (*ap_ptr == 0)\n+    abort();\n+}\n+\n+int main()\n+{\n+  doit (\"%s\", \"hello world\\n\");\n+  return 0;\n+}"}]}