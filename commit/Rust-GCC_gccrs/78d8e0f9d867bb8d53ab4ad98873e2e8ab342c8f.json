{"sha": "78d8e0f9d867bb8d53ab4ad98873e2e8ab342c8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhkOGUwZjlkODY3YmI4ZDUzYWI0YWQ5ODg3M2UyZThhYjM0MmM4Zg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-07-25T04:03:42Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-07-25T04:03:42Z"}, "message": "[multiple changes]\n\n2004-07-24  Zack Weinberg  <zack@codesourcery.com>\n\n\t* config/ia64/ia64.c (general_xfmode_operand)\n\t(destination_xfmode_operand): Delete.\n\t* config/ia64/ia64.h (PREDICATE_CODES): Remove them.\n\t* config/ia64/ia64.md (*movxf_internal): Use general_operand\n\tand destination_operand.\n\n2004-07-24  Alexander Kabaev  <kan@freebsd.org>\n\n\t* config/ia64/ia64.h (SUBTARGET_EXTRA_SPECS): Default to nothing.\n\t(EXTRA_SPECS): Use SUBTARGET_EXTRA_SPECS.\n\nFrom-SVN: r85141", "tree": {"sha": "c68a6795ba355ed9c059d3fb2334e3850142f83f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c68a6795ba355ed9c059d3fb2334e3850142f83f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78d8e0f9d867bb8d53ab4ad98873e2e8ab342c8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78d8e0f9d867bb8d53ab4ad98873e2e8ab342c8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78d8e0f9d867bb8d53ab4ad98873e2e8ab342c8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78d8e0f9d867bb8d53ab4ad98873e2e8ab342c8f/comments", "author": null, "committer": null, "parents": [{"sha": "c5e36c09e5df095a140f98e064d14759a09e1108", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e36c09e5df095a140f98e064d14759a09e1108", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5e36c09e5df095a140f98e064d14759a09e1108"}], "stats": {"total": 46, "additions": 21, "deletions": 25}, "files": [{"sha": "2af48d1dec32cbbf10ffa2ae5cf33b03c64120b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78d8e0f9d867bb8d53ab4ad98873e2e8ab342c8f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78d8e0f9d867bb8d53ab4ad98873e2e8ab342c8f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78d8e0f9d867bb8d53ab4ad98873e2e8ab342c8f", "patch": "@@ -1,3 +1,16 @@\n+2004-07-24  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* config/ia64/ia64.c (general_xfmode_operand)\n+\t(destination_xfmode_operand): Delete.\n+\t* config/ia64/ia64.h (PREDICATE_CODES): Remove them.\n+\t* config/ia64/ia64.md (*movxf_internal): Use general_operand\n+\tand destination_operand.\n+\n+2004-07-24  Alexander Kabaev  <kan@freebsd.org>\n+\n+\t* config/ia64/ia64.h (SUBTARGET_EXTRA_SPECS): Default to nothing.\n+\t(EXTRA_SPECS): Use SUBTARGET_EXTRA_SPECS.\n+\n 2004-07-24  Alexander Kabaev  <kan@freebsd.org>\n \t    Zack Weinberg  <zack@codesourcery.com\n "}, {"sha": "d88b8e7dc96e6dc7bbdb60554391ec040b5a5750", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78d8e0f9d867bb8d53ab4ad98873e2e8ab342c8f/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78d8e0f9d867bb8d53ab4ad98873e2e8ab342c8f/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=78d8e0f9d867bb8d53ab4ad98873e2e8ab342c8f", "patch": "@@ -955,26 +955,6 @@ ar_pfs_reg_operand (register rtx op, enum machine_mode mode)\n \t  && REGNO (op) == AR_PFS_REGNUM);\n }\n \n-/* Like general_operand, but don't allow (mem (addressof)).  */\n-\n-int\n-general_xfmode_operand (rtx op, enum machine_mode mode)\n-{\n-  if (! general_operand (op, mode))\n-    return 0;\n-  return 1;\n-}\n-\n-/* Similarly.  */\n-\n-int\n-destination_xfmode_operand (rtx op, enum machine_mode mode)\n-{\n-  if (! destination_operand (op, mode))\n-    return 0;\n-  return 1;\n-}\n-\n /* Similarly.  */\n \n int"}, {"sha": "00d35ea149f1652f7bdf4df9abc4faf0e5f4175f", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78d8e0f9d867bb8d53ab4ad98873e2e8ab342c8f/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78d8e0f9d867bb8d53ab4ad98873e2e8ab342c8f/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=78d8e0f9d867bb8d53ab4ad98873e2e8ab342c8f", "patch": "@@ -44,8 +44,13 @@ do {\t\t\t\t\t\t\\\n \t  builtin_define(\"__BIG_ENDIAN__\");\t\\\n } while (0)\n \n+#ifndef SUBTARGET_EXTRA_SPECS\n+#define SUBTARGET_EXTRA_SPECS\n+#endif\n+\n #define EXTRA_SPECS \\\n-  { \"asm_extra\", ASM_EXTRA_SPEC },\n+  { \"asm_extra\", ASM_EXTRA_SPEC }, \\\n+  SUBTARGET_EXTRA_SPECS\n \n #define CC1_SPEC \"%(cc1_cpu) \"\n \n@@ -2179,8 +2184,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n { \"ar_lc_reg_operand\", {REG}},\t\t\t\t\t\t\\\n { \"ar_ccv_reg_operand\", {REG}},\t\t\t\t\t\t\\\n { \"ar_pfs_reg_operand\", {REG}},\t\t\t\t\t\t\\\n-{ \"general_xfmode_operand\", {SUBREG, REG, CONST_DOUBLE, MEM}},\t\t\\\n-{ \"destination_xfmode_operand\", {SUBREG, REG, MEM}},\t\t\t\\\n { \"xfreg_or_fp01_operand\", {REG, CONST_DOUBLE}},\t\t\t\\\n { \"basereg_operand\", {SUBREG, REG}},\n "}, {"sha": "04eda406a4fc1a46bcb61a5ddcb7b9b45f937bcd", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78d8e0f9d867bb8d53ab4ad98873e2e8ab342c8f/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78d8e0f9d867bb8d53ab4ad98873e2e8ab342c8f/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=78d8e0f9d867bb8d53ab4ad98873e2e8ab342c8f", "patch": "@@ -773,8 +773,8 @@\n ;; ??? There's no easy way to mind volatile acquire/release semantics.\n \n (define_insn \"*movxf_internal\"\n-  [(set (match_operand:XF 0 \"destination_xfmode_operand\" \"=f,f, m\")\n-\t(match_operand:XF 1 \"general_xfmode_operand\"     \"fG,m,fG\"))]\n+  [(set (match_operand:XF 0 \"destination_operand\" \"=f,f, m\")\n+\t(match_operand:XF 1 \"general_operand\"     \"fG,m,fG\"))]\n   \"ia64_move_ok (operands[0], operands[1])\"\n   \"@\n    mov %0 = %F1"}]}