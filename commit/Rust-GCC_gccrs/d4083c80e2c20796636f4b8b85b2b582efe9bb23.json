{"sha": "d4083c80e2c20796636f4b8b85b2b582efe9bb23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQwODNjODBlMmMyMDc5NjYzNmY0YjhiODViMmI1ODJlZmU5YmIyMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-05-02T18:37:00Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-05-02T18:37:00Z"}, "message": "re PR libstdc++/31777 (GLIBCXX_FORCE_NEW doesn't always work in pool_allocator)\n\n2007-05-02  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/31777\n\t* include/ext/pool_allocator.h (__pool_alloc<>::allocate,\n\t__pool_alloc<>::deallocate): Fix _S_force_new check.\n\nFrom-SVN: r124355", "tree": {"sha": "2f5179f8d6109a50d4b421d6bfacc610e31ebf06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f5179f8d6109a50d4b421d6bfacc610e31ebf06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4083c80e2c20796636f4b8b85b2b582efe9bb23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4083c80e2c20796636f4b8b85b2b582efe9bb23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4083c80e2c20796636f4b8b85b2b582efe9bb23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4083c80e2c20796636f4b8b85b2b582efe9bb23/comments", "author": null, "committer": null, "parents": [{"sha": "c5b75e95c0401ac670518c22761f1f34144a753b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5b75e95c0401ac670518c22761f1f34144a753b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5b75e95c0401ac670518c22761f1f34144a753b"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "1aee8b0baf8da03a4d6cd6b1d261e3a281fe7104", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4083c80e2c20796636f4b8b85b2b582efe9bb23/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4083c80e2c20796636f4b8b85b2b582efe9bb23/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d4083c80e2c20796636f4b8b85b2b582efe9bb23", "patch": "@@ -1,3 +1,9 @@\n+2007-05-02  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/31777\n+\t* include/ext/pool_allocator.h (__pool_alloc<>::allocate,\n+\t__pool_alloc<>::deallocate): Fix _S_force_new check.\n+\n 2007-05-01  Benjamin Kosnik  <bkoz@redhat.com>\n \t\n \t* 23_containers/requirements/sequences/dr438/deque/*: Move to..."}, {"sha": "f9dcc7fc88db76a536ca54f8bf9be9708467449d", "filename": "libstdc++-v3/include/ext/pool_allocator.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4083c80e2c20796636f4b8b85b2b582efe9bb23/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpool_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4083c80e2c20796636f4b8b85b2b582efe9bb23/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpool_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpool_allocator.h?ref=d4083c80e2c20796636f4b8b85b2b582efe9bb23", "patch": "@@ -1,6 +1,6 @@\n // Allocators -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -212,7 +212,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \t    }\n \n \t  const size_t __bytes = __n * sizeof(_Tp);\t      \n-\t  if (__bytes > size_t(_S_max_bytes) || _S_force_new == 1)\n+\t  if (__bytes > size_t(_S_max_bytes) || _S_force_new > 0)\n \t    __ret = static_cast<_Tp*>(::operator new(__bytes));\n \t  else\n \t    {\n@@ -241,7 +241,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       if (__builtin_expect(__n != 0 && __p != 0, true))\n \t{\n \t  const size_t __bytes = __n * sizeof(_Tp);\n-\t  if (__bytes > static_cast<size_t>(_S_max_bytes) || _S_force_new == 1)\n+\t  if (__bytes > static_cast<size_t>(_S_max_bytes) || _S_force_new > 0)\n \t    ::operator delete(__p);\n \t  else\n \t    {"}]}