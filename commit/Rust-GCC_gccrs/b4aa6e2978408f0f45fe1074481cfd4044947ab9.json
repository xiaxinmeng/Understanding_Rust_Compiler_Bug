{"sha": "b4aa6e2978408f0f45fe1074481cfd4044947ab9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRhYTZlMjk3ODQwOGYwZjQ1ZmUxMDc0NDgxY2ZkNDA0NDk0N2FiOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-02-16T12:16:45Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-08T07:51:03Z"}, "message": "[Ada] AI12-0287 Legality Rules for null exclusions in renaming are too fierce\n\n2020-06-08  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch12.adb (Instantiate_Object): Relax rules related to null\n\texclusions and generic objects. Handle all anonymous types\n\tconsistently and not just E_Anonymous_Access_Type.\n\t* sem_ch8.adb (Analyze_Object_Renaming): Change wording so that\n\tit applies to both renamings and instantiations to avoid\n\tconfusion.", "tree": {"sha": "6268ae9f3ce9ed75b15c3391b407cdabc4f6f0f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6268ae9f3ce9ed75b15c3391b407cdabc4f6f0f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4aa6e2978408f0f45fe1074481cfd4044947ab9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4aa6e2978408f0f45fe1074481cfd4044947ab9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4aa6e2978408f0f45fe1074481cfd4044947ab9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4aa6e2978408f0f45fe1074481cfd4044947ab9/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58c4038810a0951979d2b3c06bda0cadea3a50ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58c4038810a0951979d2b3c06bda0cadea3a50ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58c4038810a0951979d2b3c06bda0cadea3a50ea"}], "stats": {"total": 44, "additions": 25, "deletions": 19}, "files": [{"sha": "2b38f9241330496a4dcf378fc31e50d3a56eff64", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 21, "deletions": 13, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4aa6e2978408f0f45fe1074481cfd4044947ab9/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4aa6e2978408f0f45fe1074481cfd4044947ab9/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=b4aa6e2978408f0f45fe1074481cfd4044947ab9", "patch": "@@ -11279,10 +11279,9 @@ package body Sem_Ch12 is\n             --  access type.\n \n             if Ada_Version < Ada_2005\n-              or else Ekind (Base_Type (Ftyp))           /=\n-                                                  E_Anonymous_Access_Type\n-              or else Ekind (Base_Type (Etype (Actual))) /=\n-                                                  E_Anonymous_Access_Type\n+              or else Ekind (Base_Type (Ftyp)) not in Anonymous_Access_Kind\n+              or else Ekind (Base_Type (Etype (Actual)))\n+                        not in Anonymous_Access_Kind\n             then\n                Error_Msg_NE\n                  (\"type of actual does not match type of&\", Actual, Gen_Obj);\n@@ -11477,15 +11476,19 @@ package body Sem_Ch12 is\n          Actual_Decl := Parent (Entity (Actual));\n       end if;\n \n-      --  Ada 2005 (AI-423): For a formal object declaration with a null\n-      --  exclusion or an access definition that has a null exclusion: If the\n-      --  actual matching the formal object declaration denotes a generic\n-      --  formal object of another generic unit G, and the instantiation\n-      --  containing the actual occurs within the body of G or within the body\n-      --  of a generic unit declared within the declarative region of G, then\n-      --  the declaration of the formal object of G must have a null exclusion.\n-      --  Otherwise, the subtype of the actual matching the formal object\n-      --  declaration shall exclude null.\n+      --  Ada 2005 (AI-423) refined by AI12-0287:\n+      --  For an object_renaming_declaration with a null_exclusion or an\n+      --  access_definition that has a null_exclusion, the subtype of the\n+      --  object_name shall exclude null. In addition, if the\n+      --  object_renaming_declaration occurs within the body of a generic unit\n+      --  G or within the body of a generic unit declared within the\n+      --  declarative region of generic unit G, then:\n+      --  * if the object_name statically denotes a generic formal object of\n+      --    mode in out of G, then the declaration of that object shall have a\n+      --    null_exclusion;\n+      --  * if the object_name statically denotes a call of a generic formal\n+      --    function of G, then the declaration of the result of that function\n+      --    shall have a null_exclusion.\n \n       if Ada_Version >= Ada_2005\n         and then Present (Actual_Decl)\n@@ -11494,6 +11497,11 @@ package body Sem_Ch12 is\n         and then Nkind (Analyzed_Formal) = N_Formal_Object_Declaration\n         and then not Has_Null_Exclusion (Actual_Decl)\n         and then Has_Null_Exclusion (Analyzed_Formal)\n+        and then Ekind (Defining_Identifier (Analyzed_Formal))\n+                  = E_Generic_In_Out_Parameter\n+        and then ((In_Generic_Scope (Entity (Actual))\n+                    and then In_Package_Body (Scope (Entity (Actual))))\n+                  or else not Can_Never_Be_Null (Etype (Actual)))\n       then\n          Error_Msg_Sloc := Sloc (Analyzed_Formal);\n          Error_Msg_N"}, {"sha": "c65ab5cd95fbd4c70a5d2314c76377432b328c87", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4aa6e2978408f0f45fe1074481cfd4044947ab9/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4aa6e2978408f0f45fe1074481cfd4044947ab9/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=b4aa6e2978408f0f45fe1074481cfd4044947ab9", "patch": "@@ -1278,7 +1278,7 @@ package body Sem_Ch8 is\n                then\n                   if not Can_Never_Be_Null (Etype (Nam_Ent)) then\n                      Error_Msg_N\n-                       (\"renamed formal does not exclude `NULL` \"\n+                       (\"object does not exclude `NULL` \"\n                         & \"(RM 8.5.1(4.6/2))\", N);\n \n                   elsif In_Package_Body (Scope (Id)) then\n@@ -1292,7 +1292,7 @@ package body Sem_Ch8 is\n \n                elsif not Can_Never_Be_Null (Etype (Nam_Ent)) then\n                   Error_Msg_N\n-                    (\"renamed object does not exclude `NULL` \"\n+                    (\"object does not exclude `NULL` \"\n                      & \"(RM 8.5.1(4.6/2))\", N);\n \n                --  An instance is illegal if it contains a renaming that\n@@ -1309,8 +1309,7 @@ package body Sem_Ch8 is\n                                             N_Raise_Constraint_Error\n                then\n                   Error_Msg_N\n-                    (\"renamed actual does not exclude `NULL` \"\n-                     & \"(RM 8.5.1(4.6/2))\", N);\n+                    (\"actual does not exclude `NULL` (RM 8.5.1(4.6/2))\", N);\n \n                --  Finally, if there is a null exclusion, the subtype mark\n                --  must not be null-excluding.\n@@ -1328,8 +1327,7 @@ package body Sem_Ch8 is\n               and then not Can_Never_Be_Null (Etype (Nam_Ent))\n             then\n                Error_Msg_N\n-                 (\"renamed object does not exclude `NULL` \"\n-                  & \"(RM 8.5.1(4.6/2))\", N);\n+                 (\"object does not exclude `NULL` (RM 8.5.1(4.6/2))\", N);\n \n             elsif Has_Null_Exclusion (N)\n               and then No (Access_Definition (N))"}]}