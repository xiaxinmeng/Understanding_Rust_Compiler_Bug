{"sha": "0bf0efd537002cfccc99e7b72ac8fdab64b76cf5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJmMGVmZDUzNzAwMmNmY2NjOTllN2I3MmFjOGZkYWI2NGI3NmNmNQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-12-06T09:23:00Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-12-06T09:23:00Z"}, "message": "re PR fortran/34333 (if(nan == nan) wrongly returns TRUE, when nan is a parameter)\n\n2007-12-06  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34333\n        * primary.c (match_boz_constant): Add gfc_notify_std\n        * diagnostics.\n\n2007-12-06  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34333\n        * gfortran.dg/boz_7.f90: New.\n        * gfortran.dg/int_1.f90: Disable -pedantic option.\n        * gfortran.dg/boz_1.f90: Ditto.\n        * gfortran.dg/boz_3.f90: Ditto.\n        * gfortran.dg/pr16433.f: Accomodate for new BOZ warning.\n        * gfortran.dg/ibits.f90: Ditto.\n        * gfortran.dg/unf_io_convert_1.f90: Ditto.\n        * gfortran.dg/unf_io_convert_2.f90: Ditto.\n\nFrom-SVN: r130644", "tree": {"sha": "d21043d9f6e975dd962e635576dd414376aba9e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d21043d9f6e975dd962e635576dd414376aba9e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "df1f30e1c5f24cb1bc89095b5908ba7b86c32b86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df1f30e1c5f24cb1bc89095b5908ba7b86c32b86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df1f30e1c5f24cb1bc89095b5908ba7b86c32b86"}], "stats": {"total": 75, "additions": 59, "deletions": 16}, "files": [{"sha": "2d5d176bffe1f819c2afe63d76be9a40ee1851fc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0bf0efd537002cfccc99e7b72ac8fdab64b76cf5", "patch": "@@ -1,3 +1,8 @@\n+2007-12-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34333\n+\t* primary.c (match_boz_constant): Add gfc_notify_std diagnostics.\n+\n 2007-12-06  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/34335"}, {"sha": "99cdaad9466e92e17af44f8d8fdd0b1b8328b22d", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=0bf0efd537002cfccc99e7b72ac8fdab64b76cf5", "patch": "@@ -351,7 +351,7 @@ match_boz_constant (gfc_expr **result)\n \n   if (x_hex && pedantic\n       && (gfc_notify_std (GFC_STD_GNU, \"Extension: Hexadecimal \"\n-\t\t\t  \"constant at %C uses non-standard syntax.\")\n+\t\t\t  \"constant at %C uses non-standard syntax\")\n \t  == FAILURE))\n       return MATCH_ERROR;\n \n@@ -388,8 +388,11 @@ match_boz_constant (gfc_expr **result)\n \tdefault:\n \t  goto backup;\n \t}\n-\tgfc_notify_std (GFC_STD_GNU, \"Extension: BOZ constant \"\n-\t\t\t\"at %C uses non-standard postfix syntax.\");\n+\n+      if (gfc_notify_std (GFC_STD_GNU, \"Extension: BOZ constant \"\n+\t\t\t  \"at %C uses non-standard postfix syntax\")\n+\t  == FAILURE)\n+\treturn MATCH_ERROR;\n     }\n \n   gfc_current_locus = old_loc;\n@@ -419,6 +422,14 @@ match_boz_constant (gfc_expr **result)\n       return MATCH_ERROR;\n     }\n \n+  /* FIXME: Fortran 2003 allows BOZ also in REAL(), CMPLX(), INT();\n+     see PR18026 and PR29471.  */\n+  if (!gfc_in_match_data ()\n+      && (gfc_notify_std (GFC_STD_GNU, \"Extension: BOZ used outside a DATA \"\n+\t\t\t  \"statement at %C\")\n+\t  == FAILURE))\n+      return MATCH_ERROR;\n+\n   *result = e;\n   return MATCH_YES;\n "}, {"sha": "e63a9f1f15315fad1936dc9ae202a3435972dd6e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0bf0efd537002cfccc99e7b72ac8fdab64b76cf5", "patch": "@@ -1,3 +1,15 @@\n+2007-12-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34333\n+\t* gfortran.dg/boz_7.f90: New.\n+\t* gfortran.dg/int_1.f90: Disable -pedantic option.\n+\t* gfortran.dg/boz_1.f90: Ditto.\n+\t* gfortran.dg/boz_3.f90: Ditto.\n+\t* gfortran.dg/pr16433.f: Accomodate for new BOZ warning.\n+\t* gfortran.dg/ibits.f90: Ditto.\n+\t* gfortran.dg/unf_io_convert_1.f90: Ditto.\n+\t* gfortran.dg/unf_io_convert_2.f90: Ditto.\n+\n 2007-12-06  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/34335"}, {"sha": "d3fa7c7acaf884249621363bdd2174e4b48b40c1", "filename": "gcc/testsuite/gfortran.dg/boz_1.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_1.f90?ref=0bf0efd537002cfccc99e7b72ac8fdab64b76cf5", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do run }\n+! { dg-options \"-std=gnu\" }\n ! Test the boz handling\n program boz\n "}, {"sha": "e8a93d129a92ff9fdd824b17f25beb51c3ddcfc7", "filename": "gcc/testsuite/gfortran.dg/boz_3.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_3.f90?ref=0bf0efd537002cfccc99e7b72ac8fdab64b76cf5", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do run }\n+! { dg-options \"-std=gnu\" }\n ! Test that the BOZ constant on the RHS, which are of different KIND than\n ! the LHS, are correctly converted.\n !"}, {"sha": "fea0682f28def513b85277f94244e7290afdc315", "filename": "gcc/testsuite/gfortran.dg/boz_7.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_7.f90?ref=0bf0efd537002cfccc99e7b72ac8fdab64b76cf5", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f95 -pedantic\" }\n+!\n+! PR fortran/34342\n+!\n+! Some BOZ extensions where not diagnosed\n+!\n+integer :: k, m\n+integer :: j = z'000abc' ! { dg-error \"Extension: BOZ used outside a DATA statement\" }\n+data k/x'0003'/ ! { dg-error \"uses non-standard syntax\" }\n+data m/'0003'z/ ! { dg-error \"uses non-standard postfix syntax\" }\n+end"}, {"sha": "93fe58d95d479a2fd09dd589539bea2e086ce2b4", "filename": "gcc/testsuite/gfortran.dg/ibits.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ftestsuite%2Fgfortran.dg%2Fibits.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ftestsuite%2Fgfortran.dg%2Fibits.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fibits.f90?ref=0bf0efd537002cfccc99e7b72ac8fdab64b76cf5", "patch": "@@ -2,7 +2,7 @@\n ! Test that the mask is properly converted to the kind type of j in ibits.\n program ibits_test\n   implicit none\n-  integer(8), parameter :: n = z'00000000FFFFFFFF'\n+  integer(8), parameter :: n = z'00000000FFFFFFFF' ! { dg-warning \"BOZ used outside a DATA statement\" }\n   integer(8) i,j,k,m\n   j = 1\n   do i=1,70"}, {"sha": "853578e26921704a3c16e580e1b873410040b32a", "filename": "gcc/testsuite/gfortran.dg/int_1.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ftestsuite%2Fgfortran.dg%2Fint_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ftestsuite%2Fgfortran.dg%2Fint_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fint_1.f90?ref=0bf0efd537002cfccc99e7b72ac8fdab64b76cf5", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do run }\n+! { dg-options \"-std=gnu\" }\n !\n ! 13.7.53    INT(A [, KIND])\n !"}, {"sha": "df8c4187ea2378b46cc3831193b2298965d4ddc6", "filename": "gcc/testsuite/gfortran.dg/pr16433.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr16433.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr16433.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr16433.f?ref=0bf0efd537002cfccc99e7b72ac8fdab64b76cf5", "patch": "@@ -1,6 +1,6 @@\n ! { dg-do compile }\n       real x\n       double precision dx\n-      x = x'2ffde' ! { dg-warning \"exadecimal constant\" \"Hex constant can't begin with x\" }\n+      data x/x'2ffde'/ ! { dg-warning \"exadecimal constant\" \"Hex constant can't begin with x\" }\n       dx = x  ! { dg-bogus \"exadecimal constant\" \"Hex constant where there is none\" }\n       end"}, {"sha": "bbe02beb4353967b1de2fe23e83a21716edb651f", "filename": "gcc/testsuite/gfortran.dg/unf_io_convert_1.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ftestsuite%2Fgfortran.dg%2Funf_io_convert_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ftestsuite%2Fgfortran.dg%2Funf_io_convert_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Funf_io_convert_1.f90?ref=0bf0efd537002cfccc99e7b72ac8fdab64b76cf5", "patch": "@@ -18,9 +18,9 @@ program main\n   integer i\n   character*4 str\n \n-  m(1) = Z'11223344'\n-  m(2) = Z'55667788'\n-  n    = Z'77AABBCC'\n+  m(1) = Z'11223344' ! { dg-warning \"BOZ used outside a DATA statement\" }\n+  m(2) = Z'55667788' ! { dg-warning \"BOZ used outside a DATA statement\" }\n+  n    = Z'77AABBCC' ! { dg-warning \"BOZ used outside a DATA statement\" }\n   str = 'asdf'\n   do i = 1,size\n      r(i) = i\n@@ -46,23 +46,23 @@ program main\n   read(9) str\n   !\n   ! check results\n-  if (m(1).ne.Z'11223344') then\n+  if (m(1).ne.Z'11223344') then ! { dg-warning \"BOZ used outside a DATA statement\" }\n      if (debug) then\n         print '(A,Z8)','m(1) incorrect.  m(1) = ',m(1)\n      else\n         call abort\n      endif\n   endif\n   \n-  if (m(2).ne.Z'55667788') then\n+  if (m(2).ne.Z'55667788') then ! { dg-warning \"BOZ used outside a DATA statement\" }\n      if (debug) then\n         print '(A,Z8)','m(2) incorrect.  m(2) = ',m(2)\n      else\n         call abort\n      endif\n   endif\n   \n-  if (n.ne.Z'77AABBCC') then\n+  if (n.ne.Z'77AABBCC') then ! { dg-warning \"BOZ used outside a DATA statement\" }\n      if (debug) then\n         print '(A,Z8)','n incorrect.  n = ',n\n      else"}, {"sha": "bfb3591c65d81bea5dd0a7b6bde6fed0865de763", "filename": "gcc/testsuite/gfortran.dg/unf_io_convert_2.f90", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ftestsuite%2Fgfortran.dg%2Funf_io_convert_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf0efd537002cfccc99e7b72ac8fdab64b76cf5/gcc%2Ftestsuite%2Fgfortran.dg%2Funf_io_convert_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Funf_io_convert_2.f90?ref=0bf0efd537002cfccc99e7b72ac8fdab64b76cf5", "patch": "@@ -15,26 +15,26 @@ program main\n   close(10,status=\"delete\")\n \n   open (10, form=\"unformatted\",convert=\"big_endian\") ! { dg-warning \"Extension: CONVERT\" }\n-  i = (/ Z'11223344', Z'55667700' /)\n+  i = (/ Z'11223344', Z'55667700' /) ! { dg-warning \"BOZ used outside a DATA statement\" }\n   write (10) i\n   rewind (10)\n   read (10) b\n-  if (any(b /= (/ Z'11', Z'22', Z'33', Z'44', Z'55', Z'66', Z'77', Z'00' /))) &\n+  if (any(b /= (/ Z'11', Z'22', Z'33', Z'44', Z'55', Z'66', Z'77', Z'00' /))) & ! { dg-warning \"BOZ used outside a DATA statement\" }\n     call abort\n   backspace 10\n   read (10) j\n-  if (j /= Z'1122334455667700') call abort\n+  if (j /= Z'1122334455667700') call abort ! { dg-warning \"BOZ used outside a DATA statement\" }\n   close (10, status=\"delete\")\n \n   open (10, form=\"unformatted\", convert=\"little_endian\") ! { dg-warning \"Extension: CONVERT\" }\n   write (10) i\n   rewind (10)\n   read (10) b\n-  if (any(b /= (/ Z'44', Z'33', Z'22', Z'11', Z'00', Z'77', Z'66', Z'55' /))) &\n+  if (any(b /= (/ Z'44', Z'33', Z'22', Z'11', Z'00', Z'77', Z'66', Z'55' /))) & ! { dg-warning \"BOZ used outside a DATA statement\" }\n     call abort\n   backspace 10\n   read (10) j\n-  if (j /= Z'5566770011223344') call abort\n+  if (j /= Z'5566770011223344') call abort ! { dg-warning \"BOZ used outside a DATA statement\" }\n   close (10, status=\"delete\")\n \n end program main"}]}