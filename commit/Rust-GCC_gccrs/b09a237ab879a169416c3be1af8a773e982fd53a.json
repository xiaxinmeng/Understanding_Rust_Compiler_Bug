{"sha": "b09a237ab879a169416c3be1af8a773e982fd53a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA5YTIzN2FiODc5YTE2OTQxNmMzYmUxYWY4YTc3M2U5ODJmZDUzYQ==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2018-07-31T09:55:26Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-31T09:55:26Z"}, "message": "[Ada] Fix a freezing issue\n\n2018-07-31  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* sem.ads (Inside_Preanalysis_Without_Freezing): New global\n\tcounter.\n\t* sem.adb (Semantics): This subprogram has now the\n\tresponsibility of resetting the counter before analyzing a unit,\n\tand restoring its previous value before returning.\n\t* freeze.adb (Freeze_Entity): Do not freeze if we are\n\tpreanalyzing without freezing.\n\t* sem_res.adb (Preanalyze_And_Resolve): Set & restore\n\tIn_Preanalysis_Without_Freezing.\n\nFrom-SVN: r263091", "tree": {"sha": "74ca9b929f74d2a445137d3a9061cf40dd349c44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74ca9b929f74d2a445137d3a9061cf40dd349c44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b09a237ab879a169416c3be1af8a773e982fd53a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b09a237ab879a169416c3be1af8a773e982fd53a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b09a237ab879a169416c3be1af8a773e982fd53a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b09a237ab879a169416c3be1af8a773e982fd53a/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3bb9bd7dcc46a48b45419072e552336d3e6569fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bb9bd7dcc46a48b45419072e552336d3e6569fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bb9bd7dcc46a48b45419072e552336d3e6569fd"}], "stats": {"total": 51, "additions": 48, "deletions": 3}, "files": [{"sha": "33ff75bf2a6ca67b09111cf4768875b4f283a6cf", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09a237ab879a169416c3be1af8a773e982fd53a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09a237ab879a169416c3be1af8a773e982fd53a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b09a237ab879a169416c3be1af8a773e982fd53a", "patch": "@@ -1,3 +1,15 @@\n+2018-07-31  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem.ads (Inside_Preanalysis_Without_Freezing): New global\n+\tcounter.\n+\t* sem.adb (Semantics): This subprogram has now the\n+\tresponsibility of resetting the counter before analyzing a unit,\n+\tand restoring its previous value before returning.\n+\t* freeze.adb (Freeze_Entity): Do not freeze if we are\n+\tpreanalyzing without freezing.\n+\t* sem_res.adb (Preanalyze_And_Resolve): Set & restore\n+\tIn_Preanalysis_Without_Freezing.\n+\n 2018-07-31  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch4.adb (Traverse_Homonyms): Consider generic actuals that"}, {"sha": "9979cbf71e1bae365ab8ca1d4305b69cd8356d2c", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09a237ab879a169416c3be1af8a773e982fd53a/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09a237ab879a169416c3be1af8a773e982fd53a/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=b09a237ab879a169416c3be1af8a773e982fd53a", "patch": "@@ -5280,6 +5280,12 @@ package body Freeze is\n          Result := No_List;\n          goto Leave;\n \n+      --  Do not freeze if we are preanalyzing without freezing\n+\n+      elsif Inside_Preanalysis_Without_Freezing > 0 then\n+         Result := No_List;\n+         goto Leave;\n+\n       elsif Ekind (E) = E_Generic_Package then\n          Result := Freeze_Generic_Entities (E);\n          goto Leave;"}, {"sha": "2415ef8f60522322b2a729d8e97ca6588b6059e4", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09a237ab879a169416c3be1af8a773e982fd53a/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09a237ab879a169416c3be1af8a773e982fd53a/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=b09a237ab879a169416c3be1af8a773e982fd53a", "patch": "@@ -1447,9 +1447,18 @@ package body Sem is\n       --  unit. All with'ed units are analyzed with config restrictions reset\n       --  and we need to restore these saved values at the end.\n \n+      Save_Preanalysis_Counter : constant Nat :=\n+                                   Inside_Preanalysis_Without_Freezing;\n+      --  Saves the preanalysis nesting-level counter; required since we may\n+      --  need to analyze a unit as a consequence of the preanalysis of an\n+      --  expression without freezing (and the loaded unit must be fully\n+      --  analyzed).\n+\n    --  Start of processing for Semantics\n \n    begin\n+      Inside_Preanalysis_Without_Freezing := 0;\n+\n       if Debug_Unit_Walk then\n          if Already_Analyzed then\n             Write_Str (\"(done)\");\n@@ -1622,6 +1631,8 @@ package body Sem is\n             Unit (Comp_Unit),\n             Prefix => \"<-- \");\n       end if;\n+\n+      Inside_Preanalysis_Without_Freezing := Save_Preanalysis_Counter;\n    end Semantics;\n \n    --------"}, {"sha": "58f3f0555389ea952feaedf963d1ecac1326f87b", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09a237ab879a169416c3be1af8a773e982fd53a/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09a237ab879a169416c3be1af8a773e982fd53a/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=b09a237ab879a169416c3be1af8a773e982fd53a", "patch": "@@ -286,6 +286,11 @@ package Sem is\n    --  freezing nodes can modify the status of this flag, any other client\n    --  should regard it as read-only.\n \n+   Inside_Preanalysis_Without_Freezing : Nat := 0;\n+   --  Flag indicating whether we are preanalyzing an expression performing no\n+   --  freezing. Non-zero means we are inside (it is actually a level counter\n+   --  to deal with nested calls).\n+\n    Unloaded_Subunits : Boolean := False;\n    --  This flag is set True if we have subunits that are not loaded. This\n    --  occurs when the main unit is a subunit, and contains lower level"}, {"sha": "5f9f1c3911db28f8b34091f511a75b0d13205263", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09a237ab879a169416c3be1af8a773e982fd53a/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09a237ab879a169416c3be1af8a773e982fd53a/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=b09a237ab879a169416c3be1af8a773e982fd53a", "patch": "@@ -1671,14 +1671,17 @@ package body Sem_Res is\n       T             : Entity_Id;\n       With_Freezing : Boolean)\n    is\n-      Save_Full_Analysis   : constant Boolean := Full_Analysis;\n-      Save_Must_Not_Freeze : constant Boolean := Must_Not_Freeze (N);\n-\n+      Save_Full_Analysis     : constant Boolean := Full_Analysis;\n+      Save_Must_Not_Freeze   : constant Boolean := Must_Not_Freeze (N);\n+      Save_Preanalysis_Count : constant Nat :=\n+                                 Inside_Preanalysis_Without_Freezing;\n    begin\n       pragma Assert (Nkind (N) in N_Subexpr);\n \n       if not With_Freezing then\n          Set_Must_Not_Freeze (N);\n+         Inside_Preanalysis_Without_Freezing :=\n+           Inside_Preanalysis_Without_Freezing + 1;\n       end if;\n \n       Full_Analysis := False;\n@@ -1708,6 +1711,14 @@ package body Sem_Res is\n       Expander_Mode_Restore;\n       Full_Analysis := Save_Full_Analysis;\n       Set_Must_Not_Freeze (N, Save_Must_Not_Freeze);\n+\n+      if not With_Freezing then\n+         Inside_Preanalysis_Without_Freezing :=\n+           Inside_Preanalysis_Without_Freezing - 1;\n+      end if;\n+\n+      pragma Assert\n+        (Inside_Preanalysis_Without_Freezing = Save_Preanalysis_Count);\n    end Preanalyze_And_Resolve;\n \n    ----------------------------"}]}