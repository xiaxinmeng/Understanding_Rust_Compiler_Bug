{"sha": "9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQxZDlmYzhiNGExZDBhZWZkMTNkNTczZDM5NTdjYTU3MjBkZDUxOQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-08-17T00:16:32Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-08-17T00:16:32Z"}, "message": "Daily bump.", "tree": {"sha": "1affef1d6a2f4d6cd88658814ed1f96df916a25f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1affef1d6a2f4d6cd88658814ed1f96df916a25f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/comments", "author": null, "committer": null, "parents": [{"sha": "052bdc7f2ba4b56d1ff9625d69b97c23bc858309", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/052bdc7f2ba4b56d1ff9625d69b97c23bc858309", "html_url": "https://github.com/Rust-GCC/gccrs/commit/052bdc7f2ba4b56d1ff9625d69b97c23bc858309"}], "stats": {"total": 220, "additions": 219, "deletions": 1}, "files": [{"sha": "3a815ec344cc101d81b53ba83cba8c30b2669bbe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519", "patch": "@@ -1,3 +1,120 @@\n+2021-08-16  Jeff Law  <jlaw@localhost.localdomain>\n+\n+\t* config.gcc (rl78-*-elf*): Do not include dbxelf.h.\n+\n+2021-08-16  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* config/sparc/rtemself.h (SPARC_GCOV_TYPE_SIZE): Define.\n+\t* config/sparc/sparc.c (sparc_gcov_type_size): New.\n+\t(TARGET_GCOV_TYPE_SIZE): Redefine if SPARC_GCOV_TYPE_SIZE is defined.\n+\t* coverage.c (get_gcov_type): Use targetm.gcov_type_size().\n+\t* doc/tm.texi (TARGET_GCOV_TYPE_SIZE): Add hook under \"Misc\".\n+\t* doc/tm.texi.in: Regenerate.\n+\t* target.def (gcov_type_size): New target hook.\n+\t* targhooks.c (default_gcov_type_size): New.\n+\t* targhooks.h (default_gcov_type_size): Declare.\n+\t* tree-profile.c (gimple_gen_edge_profiler): Use precision of\n+\tgcov_type_node.\n+\t(gimple_gen_time_profiler): Likewise.\n+\n+2021-08-16  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+\n+\t* dwarf2out.c (add_scalar_info): Deal with DW_AT_data_bit_offset.\n+\n+2021-08-16  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR middle-end/101931\n+\t* omp-low.c (omp_runtime_api_call): Update for routines\n+\tadded in the meanwhile.\n+\n+2021-08-16  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/100393\n+\t* tree-switch-conversion.c (group_cluster::dump): Use\n+\t  get_comparison_count.\n+\t(jump_table_cluster::find_jump_tables): Pre-compute number of\n+\tcomparisons and then decrement it. Cache also max_ratio.\n+\t(jump_table_cluster::can_be_handled): Change signature.\n+\t* tree-switch-conversion.h (get_comparison_count): New.\n+\n+2021-08-16  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+\n+\t* dwarf2out.c (add_data_member_location_attribute): Use GNAT\n+\tencodings only when -fgnat-encodings=all is specified.\n+\t(add_bound_info): Likewise.\n+\t(add_byte_size_attribute): Likewise.\n+\t(gen_member_die): Likewise.\n+\n+2021-08-16  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* omp-oacc-neuter-broadcast.cc\n+\t(execute_omp_oacc_neuter_broadcast): Plug 'par' memory leak.\n+\n+2021-08-16  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* omp-oacc-neuter-broadcast.cc\n+\t(execute_omp_oacc_neuter_broadcast): Clarify memory management for\n+\t'prop_set'.\n+\n+2021-08-16  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* omp-oacc-neuter-broadcast.cc (field_map): Move variable into...\n+\t(execute_omp_oacc_neuter_broadcast): ... here.\n+\t(install_var_field, build_receiver_ref, build_sender_ref): Take\n+\t'field_map_t *' parameter.  Adjust all users.\n+\t(worker_single_copy, neuter_worker_single): Take a\n+\t'record_field_map_t *' parameter.  Adjust all users.\n+\n+2021-08-16  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/101930\n+\t* config/i386/i386.md (ldexp<mode>3): Force operands[1] to\n+\treg.\n+\n+2021-08-16  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/101726\n+\t* multiple_target.c (create_dispatcher_calls): Make default\n+\t  function local only if it is a definition.\n+\n+2021-08-16  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/100600\n+\t* ipa-icf-gimple.c (func_checker::compare_ssa_name): Do not\n+\t  consider equal SSA_NAMEs when one is a param.\n+\n+2021-08-16  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/101846\n+\t* config/i386/i386-expand.c (ix86_expand_vec_perm_vpermt2):\n+\tSupport vpermi2b for V32QI/V16QImode.\n+\t(ix86_extract_perm_from_pool_constant): New function.\n+\t(ix86_expand_vec_one_operand_perm_avx512): Support\n+\tvpermw/vpermb under TARGET_AVX512BW/TARGET_AVX512VBMI.\n+\t(expand_vec_perm_1): Adjust comments for upper.\n+\t* config/i386/i386-protos.h (ix86_extract_perm_from_pool_constant):\n+\tNew declare.\n+\t* config/i386/predicates.md (permvar_truncate_operand): New predicate.\n+\t(pshufb_truncv4siv4hi_operand): Ditto.\n+\t(pshufb_truncv8hiv8qi_operand): Ditto.\n+\t* config/i386/sse.md (*avx512bw_permvar_truncv16siv16hi_1):\n+\tNew pre_reload define_insn_and_split.\n+\t(*avx512f_permvar_truncv8siv8hi_1): Ditto.\n+\t(*avx512f_vpermvar_truncv8div8si_1): Ditto.\n+\t(*avx512f_permvar_truncv32hiv32qi_1): Ditto.\n+\t(*avx512f_permvar_truncv16hiv16qi_1): Ditto.\n+\t(*avx512f_permvar_truncv4div4si_1): Ditto.\n+\t(*avx512f_pshufb_truncv8hiv8qi_1): Ditto.\n+\t(*avx512f_pshufb_truncv4siv4hi_1): Ditto.\n+\t(*avx512f_pshufd_truncv2div2si_1): Ditto.\n+\n+2021-08-16  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* config/riscv/multilib-generator: Support code model option for\n+\tmulti-lib.\n+\t* doc/install.texi: Add document of new option for\n+\t--with-multilib-generator.\n+\n 2021-08-15  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n \n \t* config/rs6000/rs6000.c (xcoff_tls_exec_model_detected): New."}, {"sha": "e72fc6bd26dbaa6b4f863800e0e87b29d7b39143", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519", "patch": "@@ -1 +1 @@\n-20210816\n+20210817"}, {"sha": "a6fdf7bd8ae201af7440e5d2e0503dad6ed0c700", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519", "patch": "@@ -1,3 +1,8 @@\n+2021-08-16  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* c-cppbuiltin.c (c_cpp_builtins): Define\n+\t__LIBGCC_GCOV_TYPE_SIZE if flag_building_libgcc is true.\n+\n 2021-08-12  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-pragma.h (enum pragma_kind): Add PRAGMA_OMP_MASKED."}, {"sha": "5b3744c316722fdbd2ad50525be0fbcd8326e11c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519", "patch": "@@ -1,3 +1,43 @@\n+2021-08-16  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* dump-parse-tree.c (show_omp_clauses): Handle 'filter' clause.\n+\t(show_omp_node, show_code_node): Handle (combined) omp masked construct.\n+\t* frontend-passes.c (gfc_code_walker): Likewise.\n+\t* gfortran.h (enum gfc_statement): Add ST_OMP_*_MASKED*.\n+\t(enum gfc_exec_op): Add EXEC_OMP_*_MASKED*.\n+\t* match.h (gfc_match_omp_masked, gfc_match_omp_masked_taskloop,\n+\tgfc_match_omp_masked_taskloop_simd, gfc_match_omp_parallel_masked,\n+\tgfc_match_omp_parallel_masked_taskloop,\n+\tgfc_match_omp_parallel_masked_taskloop_simd): New prototypes.\n+\t* openmp.c (enum omp_mask1): Add OMP_CLAUSE_FILTER.\n+\t(gfc_match_omp_clauses): Match it.\n+\t(OMP_MASKED_CLAUSES, gfc_match_omp_parallel_masked,\n+\tgfc_match_omp_parallel_masked_taskloop,\n+\tgfc_match_omp_parallel_masked_taskloop_simd,\n+\tgfc_match_omp_masked, gfc_match_omp_masked_taskloop,\n+\tgfc_match_omp_masked_taskloop_simd): New.\n+\t(resolve_omp_clauses): Resolve filter clause.\n+\t(gfc_resolve_omp_parallel_blocks, resolve_omp_do,\n+\tomp_code_to_statement, gfc_resolve_omp_directive): Handle\n+\tomp masked constructs.\n+\t* parse.c (decode_omp_directive, case_exec_markers,\n+\tgfc_ascii_statement, parse_omp_do, parse_omp_structured_block,\n+\tparse_executable): Likewise.\n+\t* resolve.c (gfc_resolve_blocks, gfc_resolve_code): Likewise.\n+\t* st.c (gfc_free_statement): Likewise.\n+\t* trans-openmp.c (gfc_trans_omp_clauses): Handle filter clause.\n+\t(GFC_OMP_SPLIT_MASKED, GFC_OMP_MASK_MASKED): New enum values.\n+\t(gfc_trans_omp_masked): New.\n+\t(gfc_split_omp_clauses): Handle combined masked directives.\n+\t(gfc_trans_omp_master_taskloop): Rename to ...\n+\t(gfc_trans_omp_master_masked_taskloop): ... this; handle also\n+\tcombined masked directives.\n+\t(gfc_trans_omp_parallel_master): Rename to ...\n+\t(gfc_trans_omp_parallel_master_masked): ... this; handle\n+\tcombined masked directives.\n+\t(gfc_trans_omp_directive): Handle EXEC_OMP_*_MASKED*.\n+\t* trans.c (trans_code): Likewise.\n+\n 2021-08-15  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/99351"}, {"sha": "540de571770fae6511370f12f4539ad8e0950aee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519", "patch": "@@ -1,3 +1,28 @@\n+2021-08-16  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/101930\n+\t* gcc.target/i386/pr101930.c: New test.\n+\n+2021-08-16  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/100600\n+\t* gcc.dg/ipa/pr100600.c: New test.\n+\n+2021-08-16  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/101846\n+\t* gcc.target/i386/pr101846-2.c: New test.\n+\t* gcc.target/i386/pr101846-3.c: New test.\n+\t* gcc.target/i386/pr101846-4.c: New test.\n+\n+2021-08-16  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gfortran.dg/gomp/masked-1.f90: New test.\n+\t* gfortran.dg/gomp/masked-2.f90: New test.\n+\t* gfortran.dg/gomp/masked-3.f90: New test.\n+\t* gfortran.dg/gomp/masked-combined-1.f90: New test.\n+\t* gfortran.dg/gomp/masked-combined-2.f90: New test.\n+\n 2021-08-15  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/99351"}, {"sha": "843a84bf20e5994e401b5cd6e90eac0bef73abca", "filename": "libcpp/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/libcpp%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/libcpp%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2FChangeLog?ref=9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519", "patch": "@@ -1,3 +1,7 @@\n+2021-08-16  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* de.po: Update.\n+\n 2021-07-26  Joseph Myers  <joseph@codesourcery.com>\n \n \t* cpplib.pot: Regenerate."}, {"sha": "6df79c41da34979b40bbcb3d4bc070fd440151a1", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519", "patch": "@@ -1,3 +1,8 @@\n+2021-08-16  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* libgcov.h (gcov_type): Define using __LIBGCC_GCOV_TYPE_SIZE.\n+\t(gcov_type_unsigned): Likewise.\n+\n 2021-08-14  Stafford Horne  <shorne@gmail.com>\n \n \tPR target/99783"}, {"sha": "ad7e81c027a83b6eae24576c2a67d183665719a9", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519", "patch": "@@ -1,3 +1,12 @@\n+2021-08-16  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-c-c++-common/mode-transitions.c: Address\n+\t'?:' issues.\n+\n+2021-08-16  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* testsuite/libgomp.fortran/masked-1.f90: New test.\n+\n 2021-08-13  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* testsuite/libgomp.oacc-c-c++-common/static-variable-1.c: Adjust."}, {"sha": "bb0ba6916df25d809e5771b5ed08331df1db090a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9d1d9fc8b4a1d0aefd13d573d3957ca5720dd519", "patch": "@@ -1,3 +1,16 @@\n+2021-08-16  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/101937\n+\t* src/c++11/debug.cc (PrintContext::_M_indent): Replace with a\n+\tstatic data member.\n+\t(print_word): Use qualified-id to access it.\n+\n+2021-08-16  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* python/Makefile.am [GLIBCXX_BUILD_DEBUG] (install-data-local):\n+\tInstall another copy of the GDB hook.\n+\t* python/Makefile.in: Regenerate.\n+\n 2021-08-12  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/101870"}]}