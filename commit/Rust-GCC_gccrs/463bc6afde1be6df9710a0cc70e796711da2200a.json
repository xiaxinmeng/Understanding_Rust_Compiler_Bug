{"sha": "463bc6afde1be6df9710a0cc70e796711da2200a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYzYmM2YWZkZTFiZTZkZjk3MTBhMGNjNzBlNzk2NzExZGEyMjAwYQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-10-12T13:26:01Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-10-12T13:26:01Z"}, "message": "AncestorListener.java, [...]: Removed redundant modifiers.\n\n2003-10-12  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/event/AncestorListener.java,\n\tjavax/swing/event/CaretListener.java,\n\tjavax/swing/event/CellEditorListener.java,\n\tjavax/swing/event/ChangeListener.java,\n\tjavax/swing/event/DocumentEvent.java,\n\tjavax/swing/event/DocumentListener.java,\n\tjavax/swing/event/HyperlinkListener.java,\n\tjavax/swing/event/InternalFrameListener.java,\n\tjavax/swing/event/ListDataListener.java,\n\tjavax/swing/event/ListSelectionListener.java,\n\tjavax/swing/event/MenuDragMouseListener.java,\n\tjavax/swing/event/MenuKeyListener.java,\n\tjavax/swing/event/MenuListener.java,\n\tjavax/swing/event/MouseInputListener.java,\n\tjavax/swing/event/PopupMenuListener.java,\n\tjavax/swing/event/TableColumnModelListener.java,\n\tjavax/swing/event/TableModelListener.java,\n\tjavax/swing/event/TreeExpansionListener.java,\n\tjavax/swing/event/TreeModelListener.java,\n\tjavax/swing/event/TreeSelectionListener.java,\n\tjavax/swing/event/TreeWillExpandListener.java,\n\tjavax/swing/event/UndoableEditListener.java,\n\tjavax/swing/plaf/UIResource.java,\n\tjavax/swing/plaf/metal/MetalLookAndFeel.java:\n\tRemoved redundant modifiers.\n\nFrom-SVN: r72395", "tree": {"sha": "0737ea23977c15c3b2a868cead5cf0db554d1c32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0737ea23977c15c3b2a868cead5cf0db554d1c32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/463bc6afde1be6df9710a0cc70e796711da2200a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/463bc6afde1be6df9710a0cc70e796711da2200a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/463bc6afde1be6df9710a0cc70e796711da2200a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/463bc6afde1be6df9710a0cc70e796711da2200a/comments", "author": null, "committer": null, "parents": [{"sha": "134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8"}], "stats": {"total": 202, "additions": 115, "deletions": 87}, "files": [{"sha": "1271b8bd48d19e27af7e5c25422a60b5b50abbfa", "filename": "libjava/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -1,3 +1,31 @@\n+2003-10-12  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/event/AncestorListener.java,\n+\tjavax/swing/event/CaretListener.java,\n+\tjavax/swing/event/CellEditorListener.java,\n+\tjavax/swing/event/ChangeListener.java,\n+\tjavax/swing/event/DocumentEvent.java,\n+\tjavax/swing/event/DocumentListener.java,\n+\tjavax/swing/event/HyperlinkListener.java,\n+\tjavax/swing/event/InternalFrameListener.java,\n+\tjavax/swing/event/ListDataListener.java,\n+\tjavax/swing/event/ListSelectionListener.java,\n+\tjavax/swing/event/MenuDragMouseListener.java,\n+\tjavax/swing/event/MenuKeyListener.java,\n+\tjavax/swing/event/MenuListener.java,\n+\tjavax/swing/event/MouseInputListener.java,\n+\tjavax/swing/event/PopupMenuListener.java,\n+\tjavax/swing/event/TableColumnModelListener.java,\n+\tjavax/swing/event/TableModelListener.java,\n+\tjavax/swing/event/TreeExpansionListener.java,\n+\tjavax/swing/event/TreeModelListener.java,\n+\tjavax/swing/event/TreeSelectionListener.java,\n+\tjavax/swing/event/TreeWillExpandListener.java,\n+\tjavax/swing/event/UndoableEditListener.java,\n+\tjavax/swing/plaf/UIResource.java,\n+\tjavax/swing/plaf/metal/MetalLookAndFeel.java:\n+\tRemoved redundant modifiers.\n+\n 2003-10-12  Michael Koch  <konqueror@gmx.de>\n \n \t* javax/swing/Action.java,"}, {"sha": "bc0f91d85718358ae5b2c61c8ce32ae005038ad9", "filename": "libjava/javax/swing/event/AncestorListener.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FAncestorListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FAncestorListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FAncestorListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -51,19 +51,19 @@ public interface AncestorListener extends EventListener {\n \t * Ancestor Added\n \t * @param event Ancestor Event\n \t */\n-\tpublic void ancestorAdded(AncestorEvent event);\n+\tvoid ancestorAdded(AncestorEvent event);\n \n \t/**\n \t * Ancestor Removed\n \t * @param event Ancestor Event\n \t */\n-\tpublic void ancestorRemoved(AncestorEvent event);\n+\tvoid ancestorRemoved(AncestorEvent event);\n \n \t/**\n \t * Ancestor Moved\n \t * @param event Ancestor Event\n \t */\n-\tpublic void ancestorMoved(AncestorEvent event);\n+\tvoid ancestorMoved(AncestorEvent event);\n \n \n } // AncestorListener"}, {"sha": "5765b634b0ed6aa392baf7ec0cef774491ac64c8", "filename": "libjava/javax/swing/event/CaretListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FCaretListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FCaretListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FCaretListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -41,7 +41,7 @@\n import java.util.EventListener;\n \n /**\n- * CaretListener interface\n+ * CaretListener public interface\n  * @author Andrew Selkirk\n  */\n public interface CaretListener extends EventListener {\n@@ -50,7 +50,7 @@ public interface CaretListener extends EventListener {\n \t * Caret position has been updated\n \t * @param event Caret Event\n \t */\n-\tpublic void caretUpdate(CaretEvent event);\n+\tvoid caretUpdate(CaretEvent event);\n \n \n } // CaretListener"}, {"sha": "abbb1039e3e7170b153e8cf82b36e88a8d89d5a3", "filename": "libjava/javax/swing/event/CellEditorListener.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FCellEditorListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FCellEditorListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FCellEditorListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -41,7 +41,7 @@\n import java.util.EventListener;\n \n /**\n- * CellEditorListener interface\n+ * CellEditorListener public interface\n  * @author Andrew Selkirk\n  */\n public interface CellEditorListener extends EventListener {\n@@ -50,13 +50,13 @@ public interface CellEditorListener extends EventListener {\n \t * Editing has been canceled\n \t * @param event Change Event\n \t */\n-\tpublic void editingCanceled(ChangeEvent event);\n+\tvoid editingCanceled(ChangeEvent event);\n \n \t/**\n \t * Editing has been stopped\n \t * @param event Change Event\n \t */\n-\tpublic void editingStopped(ChangeEvent event);\n+\tvoid editingStopped(ChangeEvent event);\n \n \n } // CellEditorListener"}, {"sha": "b952fc10f900a28023228ed209fb885923ee99d1", "filename": "libjava/javax/swing/event/ChangeListener.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FChangeListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FChangeListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FChangeListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -51,7 +51,7 @@ public interface ChangeListener extends EventListener {\n \t * State changed\n \t * @param event Change Event\n \t */\n-\tpublic void stateChanged(ChangeEvent event);\n+\tvoid stateChanged(ChangeEvent event);\n \n \n } // ChangeListener"}, {"sha": "e86f3e4133b7e05f3692b2d5a2c793fa995d1332", "filename": "libjava/javax/swing/event/DocumentEvent.java", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FDocumentEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FDocumentEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FDocumentEvent.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -41,7 +41,7 @@\n import javax.swing.text.*;\n \n /**\n- * DocumentEvent interface\n+ * DocumentEvent public interface\n  * @author Andrew Selkirk\n  * @author Ronald Veldema\n  */\n@@ -52,9 +52,9 @@ public interface DocumentEvent {\n \t//-------------------------------------------------------------\n \n \t/**\n-\t * ElementChange interface\n+\t * ElementChange public interface\n \t */\n-\tpublic static interface ElementChange {\n+\tpublic interface ElementChange {\n \n \t\t//-------------------------------------------------------------\n \t\t// Methods ----------------------------------------------------\n@@ -64,33 +64,33 @@ public static interface ElementChange {\n \t\t * getIndex\n \t\t * @returns int\n \t\t */\n-\t\tpublic int getIndex();\n+\t\tint getIndex();\n \n \t\t/**\n \t\t * getElement\n \t\t * @returns Element\n \t\t */\n-\t\tpublic Element getElement();\n+\t\tElement getElement();\n \n \t\t/**\n \t\t * getChildrenRemoved\n \t\t * @returns Element[]\n \t\t */\n-\t\tpublic Element[] getChildrenRemoved();\n+\t\tElement[] getChildrenRemoved();\n \n \t\t/**\n \t\t * getChildrenAdded\n \t\t * @returns Element[]\n \t\t */\n-\t\tpublic Element[] getChildrenAdded();\n+\t\tElement[] getChildrenAdded();\n \n \n \t} // ElementChange\n \n \t/**\n \t * EventType\n \t */\n-\tpublic static final class EventType {\n+\tclass EventType {\n \n \t\t//-------------------------------------------------------------\n \t\t// Variables --------------------------------------------------\n@@ -99,17 +99,17 @@ public static final class EventType {\n \t\t/**\n \t\t * INSERT\n \t\t */\n-\t\tpublic static final EventType INSERT = new EventType(\"INSERT\"); // TODO\n+\t\tEventType INSERT = new EventType(\"INSERT\"); // TODO\n \n \t\t/**\n \t\t * REMOVE\n \t\t */\n-\t\tpublic static final EventType REMOVE = new EventType(\"REMOVE\"); // TODO\n+\t\tEventType REMOVE = new EventType(\"REMOVE\"); // TODO\n \n \t\t/**\n \t\t * CHANGE\n \t\t */\n-\t\tpublic static final EventType CHANGE = new EventType(\"CHANGE\"); // TODO\n+\t\tEventType CHANGE = new EventType(\"CHANGE\"); // TODO\n \n \t\t/**\n \t\t * typeString\n@@ -154,32 +154,32 @@ public String toString() {\n \t * getType\n \t * @returns EventType\n \t */\n-\tpublic EventType getType();\n+\tEventType getType();\n \n \t/**\n \t * getOffset\n \t * @returns int\n \t */\n-\tpublic int getOffset();\n+\tint getOffset();\n \n \t/**\n \t * getLength\n \t * @returns int\n \t */\n-\tpublic int getLength();\n+\tint getLength();\n \n \t/**\n \t * getDocument\n \t * @returns Document\n \t */\n-\tpublic Document getDocument();\n+\tDocument getDocument();\n \n \t/**\n \t * getChange\n \t * @param element TODO\n \t * @returns ElementChange\n \t */\n-\tpublic ElementChange getChange(Element element);\n+\tElementChange getChange(Element element);\n \n \n } // DocumentEvent"}, {"sha": "7593880f60fdb5e6f6ca6fb7e44109314a3295ca", "filename": "libjava/javax/swing/event/DocumentListener.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FDocumentListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FDocumentListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FDocumentListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -40,7 +40,7 @@\n import java.util.EventListener;\n \n /**\n- * DocumentListener interface\n+ * DocumentListener public interface\n  * @author Andrew Selkirk\n  * @author Ronald Veldema\n  */\n@@ -50,19 +50,19 @@ public interface DocumentListener extends EventListener {\n \t * Changed update\n \t * @param event Document Event\n \t */\n-\tpublic void changedUpdate(DocumentEvent event);\n+\tvoid changedUpdate(DocumentEvent event);\n \n \t/**\n \t * Insert update\n \t * @param event Document Event\n \t */\n-\tpublic void insertUpdate(DocumentEvent event);\n+\tvoid insertUpdate(DocumentEvent event);\n \n \t/**\n \t * Remove update\n \t * @param event Document Event\n \t */\n-\tpublic void removeUpdate(DocumentEvent event);\n+\tvoid removeUpdate(DocumentEvent event);\n \n \n } // DocumentListener"}, {"sha": "3e448ce5480db0a89451b35e7647581efc742a5f", "filename": "libjava/javax/swing/event/HyperlinkListener.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FHyperlinkListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FHyperlinkListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FHyperlinkListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -51,7 +51,7 @@ public interface HyperlinkListener extends EventListener {\n \t * Hyperlink updated\n \t * @param event Hyperlink Event\n \t */\n-\tpublic void hyperlinkUpdate(HyperlinkEvent event);\n+\tvoid hyperlinkUpdate(HyperlinkEvent event);\n \n \n } // HyperlinkListener"}, {"sha": "7b297846db457ddd6a3e236dbbf79c62b8f911e9", "filename": "libjava/javax/swing/event/InternalFrameListener.java", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FInternalFrameListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FInternalFrameListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FInternalFrameListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -41,7 +41,7 @@\n import java.util.EventListener;\n \n /**\n- * InternalFrameListener interface\n+ * InternalFrameListener public interface\n  * @author Andrew Selkirk\n  */\n public interface InternalFrameListener extends EventListener {\n@@ -50,43 +50,43 @@ public interface InternalFrameListener extends EventListener {\n \t * Internal frame activated\n \t * @param event Internal Frame Event\n \t */\n-\tpublic void internalFrameActivated(InternalFrameEvent event);\n+\tvoid internalFrameActivated(InternalFrameEvent event);\n \n \t/**\n \t * Internal frame closed\n \t * @param event Internal Frame Event\n \t */\n-\tpublic void internalFrameClosed(InternalFrameEvent event);\n+\tvoid internalFrameClosed(InternalFrameEvent event);\n \n \t/**\n \t * Internal frame closing\n \t * @param event Internal Frame Event\n \t */\n-\tpublic void internalFrameClosing(InternalFrameEvent event);\n+\tvoid internalFrameClosing(InternalFrameEvent event);\n \n \t/**\n \t * Internal frame deactivated\n \t * @param event Internal Frame Event\n \t */\n-\tpublic void internalFrameDeactivated(InternalFrameEvent event);\n+\tvoid internalFrameDeactivated(InternalFrameEvent event);\n \n \t/**\n \t * Internal frame deiconified\n \t * @param event Internal Frame Event\n \t */\n-\tpublic void internalFrameDeiconified(InternalFrameEvent event);\n+\tvoid internalFrameDeiconified(InternalFrameEvent event);\n \n \t/**\n \t * Internal frame iconified\n \t * @param event Internal Frame Event\n \t */\n-\tpublic void internalFrameIconified(InternalFrameEvent event);\n+\tvoid internalFrameIconified(InternalFrameEvent event);\n \n \t/**\n \t * Internal frame opened\n \t * @param event Internal Frame Event\n \t */\n-\tpublic void internalFrameOpened(InternalFrameEvent event);\n+\tvoid internalFrameOpened(InternalFrameEvent event);\n \n \n } // InternalFrameListener"}, {"sha": "eeaf07adad0aa6998050bc92504b84d05e8017f4", "filename": "libjava/javax/swing/event/ListDataListener.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FListDataListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FListDataListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FListDataListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -41,7 +41,7 @@\n import java.util.EventListener;\n \n /**\n- * ListDataListener interface\n+ * ListDataListener public interface\n  * @author Andrew Selkirk\n  * @author Ronald Veldema\n  */\n@@ -51,19 +51,19 @@ public interface ListDataListener extends EventListener {\n \t * Contents Changed\n \t * @param event ListDataEvent Event\n \t */\n-\tpublic void contentsChanged(ListDataEvent event);\n+\tvoid contentsChanged(ListDataEvent event);\n \n \t/**\n \t * Interval Added\n \t * @param event ListDataEvent Event\n \t */\n-\tpublic void intervalAdded(ListDataEvent event);\n+\tvoid intervalAdded(ListDataEvent event);\n \n \t/**\n \t * Interval Removed\n \t * @param event ListDataEvent Event\n \t */\n-\tpublic void intervalRemoved(ListDataEvent event);\n+\tvoid intervalRemoved(ListDataEvent event);\n \n \n } // ListDataListener"}, {"sha": "17293bd4ee35a15b64e855c24540e987bc9aae02", "filename": "libjava/javax/swing/event/ListSelectionListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FListSelectionListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FListSelectionListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FListSelectionListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -41,7 +41,7 @@\n import java.util.EventListener;\n \n /**\n- * ListSelectionListener interface\n+ * ListSelectionListener public interface\n  * @author Andrew Selkirk\n  * @author Ronald Veldema\n  */\n@@ -51,7 +51,7 @@ public interface ListSelectionListener extends EventListener {\n \t * Value changed\n \t * @param event List Selection Event\n \t */\n-\tpublic void valueChanged(ListSelectionEvent event);\n+\tvoid valueChanged(ListSelectionEvent event);\n \n \n } // ListSelectionListener"}, {"sha": "226d291d2c58c6619884f4f819c382332f1aa381", "filename": "libjava/javax/swing/event/MenuDragMouseListener.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FMenuDragMouseListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FMenuDragMouseListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FMenuDragMouseListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -41,7 +41,7 @@\n import java.util.EventListener;\n \n /**\n- * MenuDragMouseListener interface\n+ * MenuDragMouseListener public interface\n  * @author Andrew Selkirk\n  */\n public interface MenuDragMouseListener extends EventListener {\n@@ -50,25 +50,25 @@ public interface MenuDragMouseListener extends EventListener {\n \t * Menu drag mouse dragged\n \t * @param event Menu Drag Mouse Event\n \t */\n-\tpublic void menuDragMouseDragged(MenuDragMouseEvent event);\n+\tvoid menuDragMouseDragged(MenuDragMouseEvent event);\n \n \t/**\n \t * Menu drag mouse entered\n \t * @param event Menu Drag Mouse Event\n \t */\n-\tpublic void menuDragMouseEntered(MenuDragMouseEvent event);\n+\tvoid menuDragMouseEntered(MenuDragMouseEvent event);\n \n \t/**\n \t * Menu drag mouse exited\n \t * @param event Menu Drag Mouse Event\n \t */\n-\tpublic void menuDragMouseExited(MenuDragMouseEvent event);\n+\tvoid menuDragMouseExited(MenuDragMouseEvent event);\n \n \t/**\n \t * Menu drag mouse released\n \t * @param event Menu Drag Mouse Event\n \t */\n-\tpublic void menuDragMouseReleased(MenuDragMouseEvent event);\n+\tvoid menuDragMouseReleased(MenuDragMouseEvent event);\n \n \n } // MenuDragMouseListener"}, {"sha": "bb956f4e4015a77536193004fee33dcce35957d7", "filename": "libjava/javax/swing/event/MenuKeyListener.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FMenuKeyListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FMenuKeyListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FMenuKeyListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -41,7 +41,7 @@\n import java.util.EventListener;\n \n /**\n- * MenuKeyListener interface\n+ * MenuKeyListener public interface\n  * @author Andrew Selkirk\n  */\n public interface MenuKeyListener extends EventListener {\n@@ -50,19 +50,19 @@ public interface MenuKeyListener extends EventListener {\n \t * Menu key pressed\n \t * @param event Menu Key Event\n \t */\n-\tpublic void menuKeyPressed(MenuKeyEvent event);\n+\tvoid menuKeyPressed(MenuKeyEvent event);\n \n \t/**\n \t * Menu key released\n \t * @param event Menu Key Event\n \t */\n-\tpublic void menuKeyReleased(MenuKeyEvent event);\n+\tvoid menuKeyReleased(MenuKeyEvent event);\n \n \t/**\n \t * Menu key typed\n \t * @param event Menu Key Event\n \t */\n-\tpublic void menuKeyTyped(MenuKeyEvent event);\n+\tvoid menuKeyTyped(MenuKeyEvent event);\n \n \n } // MenuKeyListener"}, {"sha": "6e37c34cd13e88fe9cf03601c1058c24fed2a684", "filename": "libjava/javax/swing/event/MenuListener.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FMenuListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FMenuListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FMenuListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -41,7 +41,7 @@\n import java.util.EventListener;\n \n /**\n- * MenuListener interface\n+ * MenuListener public interface\n  * @author Andrew Selkirk\n  */\n public interface MenuListener extends EventListener {\n@@ -50,19 +50,19 @@ public interface MenuListener extends EventListener {\n \t * Menu canceled\n \t * @param event Menu Event\n \t */\n-\tpublic void menuCanceled(MenuEvent event);\n+\tvoid menuCanceled(MenuEvent event);\n \n \t/**\n \t * Menu deselected\n \t * @param event Menu Event\n \t */\n-\tpublic void menuDeselected(MenuEvent event);\n+\tvoid menuDeselected(MenuEvent event);\n \n \t/**\n \t * Menu selected\n \t * @param event Menu Event\n \t */\n-\tpublic void menuSelected(MenuEvent event);\n+\tvoid menuSelected(MenuEvent event);\n \n \n } // MenuListener"}, {"sha": "35d79cd4eecc2df616920b4265630f5e2eafc758", "filename": "libjava/javax/swing/event/MouseInputListener.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FMouseInputListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FMouseInputListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FMouseInputListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -42,7 +42,7 @@\n import java.awt.event.MouseMotionListener;\n \n /**\n- * MouseInputListener interface\n+ * MouseInputListener public interface\n  * @author Andrew Selkirk\n  */\n public interface MouseInputListener extends MouseListener,"}, {"sha": "84cc25199822c8833de8b85d326669ac24d8fec4", "filename": "libjava/javax/swing/event/PopupMenuListener.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FPopupMenuListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FPopupMenuListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FPopupMenuListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -41,7 +41,7 @@\n import java.util.EventListener;\n \n /**\n- * PopupMenuListener interface\n+ * PopupMenuListener public interface\n  * @author Andrew Selkirk\n  */\n public interface PopupMenuListener extends EventListener {\n@@ -50,19 +50,19 @@ public interface PopupMenuListener extends EventListener {\n \t * Popup Menu Canceled\n \t * @param event Popup Menu Event\n \t */\n-\tpublic void popupMenuCanceled(PopupMenuEvent event);\n+\tvoid popupMenuCanceled(PopupMenuEvent event);\n \n \t/**\n \t * Popup Menu will become invisible\n \t * @param event Popup Menu Event\n \t */\n-\tpublic void popupMenuWillBecomeInvisible(PopupMenuEvent event);\n+\tvoid popupMenuWillBecomeInvisible(PopupMenuEvent event);\n \n \t/**\n \t * Popup Menu will become visible\n \t * @param event Popup Menu Event\n \t */\n-\tpublic void popupMenuWillBecomeVisible(PopupMenuEvent event);\n+\tvoid popupMenuWillBecomeVisible(PopupMenuEvent event);\n \n \n } // PopupMenuListener"}, {"sha": "4234ba93da53c5fdd45abe87c13b5fee7ef663e9", "filename": "libjava/javax/swing/event/TableColumnModelListener.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FTableColumnModelListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FTableColumnModelListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FTableColumnModelListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -41,7 +41,7 @@\n import java.util.EventListener;\n \n /**\n- * TableColumnModelListener interface\n+ * TableColumnModelListener public interface\n  * @author Andrew Selkirk\n  */\n public interface TableColumnModelListener extends EventListener {\n@@ -50,31 +50,31 @@ public interface TableColumnModelListener extends EventListener {\n \t * Column added\n \t * @param event Table Column Model Event\n \t */\n-\tpublic void columnAdded(TableColumnModelEvent event);\n+\tvoid columnAdded(TableColumnModelEvent event);\n \n \t/**\n \t * Column margin changed\n \t * @param event Change Event\n \t */\n-\tpublic void columnMarginChanged(ChangeEvent event);\n+\tvoid columnMarginChanged(ChangeEvent event);\n \n \t/**\n \t * Column moved\n \t * @param event Table Column Model Event\n \t */\n-\tpublic void columnMoved(TableColumnModelEvent event);\n+\tvoid columnMoved(TableColumnModelEvent event);\n \n \t/**\n \t * Column removed\n \t * @param event Table Column Model Event\n \t */\n-\tpublic void columnRemoved(TableColumnModelEvent event);\n+\tvoid columnRemoved(TableColumnModelEvent event);\n \n \t/**\n \t * Column selection changed\n \t * @param event List Selection Event\n \t */\n-\tpublic void columnSelectionChanged(ListSelectionEvent event);\n+\tvoid columnSelectionChanged(ListSelectionEvent event);\n \n \n } // TableColumnModelListener"}, {"sha": "9b61222868fc01c5b3ebdc5f1c6e4c39264c2e11", "filename": "libjava/javax/swing/event/TableModelListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FTableModelListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FTableModelListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FTableModelListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -40,7 +40,7 @@\n import java.util.EventListener;\n \n /**\n- * TableModelListener interface\n+ * TableModelListener public interface\n  * @author Andrew Selkirk\n  */\n public interface TableModelListener extends EventListener {\n@@ -49,7 +49,7 @@ public interface TableModelListener extends EventListener {\n \t * Table changed\n \t * @param event Table Model Event\n \t */\n-\tpublic void tableChanged(TableModelEvent event);\n+\tvoid tableChanged(TableModelEvent event);\n \n \n } // TableModelListener"}, {"sha": "621963b3ce3091366ef98b94f8ae5ed71920db4d", "filename": "libjava/javax/swing/event/TreeExpansionListener.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FTreeExpansionListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FTreeExpansionListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FTreeExpansionListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -41,7 +41,7 @@\n import java.util.EventListener;\n \n /**\n- * TreeExpansionListener interface\n+ * TreeExpansionListener public interface\n  * @author Andrew Selkirk\n  */\n public interface TreeExpansionListener extends EventListener {\n@@ -50,13 +50,13 @@ public interface TreeExpansionListener extends EventListener {\n \t * Tree collapsed\n \t * @param event Tree Expansion Event\n \t */\n-\tpublic void treeCollapsed(TreeExpansionEvent event);\n+\tvoid treeCollapsed(TreeExpansionEvent event);\n \n \t/**\n \t * Tree expanded\n \t * @param event Tree Expansion Event\n \t */\n-\tpublic void treeExpanded(TreeExpansionEvent event);\n+\tvoid treeExpanded(TreeExpansionEvent event);\n \n \n } // TreeExpansionListener"}, {"sha": "7a46fa93649410a9c26498c7c373d6065b184b80", "filename": "libjava/javax/swing/event/TreeModelListener.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FTreeModelListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FTreeModelListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FTreeModelListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -41,7 +41,7 @@\n import java.util.EventListener;\n \n /**\n- * TreeModelListener interface\n+ * TreeModelListener public interface\n  * @author Andrew Selkirk\n  */\n public interface TreeModelListener extends EventListener {\n@@ -50,25 +50,25 @@ public interface TreeModelListener extends EventListener {\n \t * Tree nodes changed\n \t * @param event Tree Model Event\n \t */\n-\tpublic void treeNodesChanged(TreeModelEvent event);\n+\tvoid treeNodesChanged(TreeModelEvent event);\n \n \t/**\n \t * Tree nodes inserted\n \t * @param event Tree Model Event\n \t */\n-\tpublic void treeNodesInserted(TreeModelEvent event);\n+\tvoid treeNodesInserted(TreeModelEvent event);\n \n \t/**\n \t * Tree nodes removed\n \t * @param event Tree Model Event\n \t */\n-\tpublic void treeNodesRemoved(TreeModelEvent event);\n+\tvoid treeNodesRemoved(TreeModelEvent event);\n \n \t/**\n \t * Tree structured changed\n \t * @param event Tree Model Event\n \t */\n-\tpublic void treeStructureChanged(TreeModelEvent event);\n+\tvoid treeStructureChanged(TreeModelEvent event);\n \n \n } // TreeModelListener"}, {"sha": "78d138aa259634cded33270db6f2587e971553f5", "filename": "libjava/javax/swing/event/TreeSelectionListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FTreeSelectionListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FTreeSelectionListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FTreeSelectionListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -41,7 +41,7 @@\n import java.util.EventListener;\n \n /**\n- * TreeSelectionListener interface\n+ * TreeSelectionListener public interface\n  * @author Andrew Selkirk\n  */\n public interface TreeSelectionListener extends EventListener {\n@@ -50,7 +50,7 @@ public interface TreeSelectionListener extends EventListener {\n \t * Value changed\n \t * @param event Tree Selection Event\n \t */\n-\tpublic void valueChanged(TreeSelectionEvent event);\n+\tvoid valueChanged(TreeSelectionEvent event);\n \n \n } // TreeSelectionListener"}, {"sha": "b24c3710576ea2bad0d7e83fa2b5a10c20bb1c1f", "filename": "libjava/javax/swing/event/TreeWillExpandListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FTreeWillExpandListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FTreeWillExpandListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FTreeWillExpandListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -51,14 +51,14 @@ public interface TreeWillExpandListener extends EventListener\n    * \n    * @param event The tree expansion Event\n    */\n-  public void treeWillCollapse(TreeExpansionEvent event)\n+  void treeWillCollapse(TreeExpansionEvent event)\n     throws ExpandVetoException;\n \n   /**\n    * Invoked whenever a node in the tree is about to be expanded.\n    * \n    * @param event The tree expansion Event\n    */\n-  public void treeWillExpand(TreeExpansionEvent event)\n+  void treeWillExpand(TreeExpansionEvent event)\n     throws ExpandVetoException;\n }  "}, {"sha": "0e9cf5e6b969738c7fdecd83d25938d43a3f301c", "filename": "libjava/javax/swing/event/UndoableEditListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FUndoableEditListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fevent%2FUndoableEditListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FUndoableEditListener.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -41,7 +41,7 @@\n import java.util.EventListener;\n \n /**\n- * UndoableEditListener interface\n+ * UndoableEditListener public interface\n  * @author Andrew Selkirk\n  * @author Ronald Veldema\n  */\n@@ -51,7 +51,7 @@ public interface UndoableEditListener extends EventListener {\n \t * Undoable edit has happened\n \t * @param event Undoable Edit Event\n \t */\n-\tpublic void undoableEditHappened(UndoableEditEvent event);\n+\tvoid undoableEditHappened(UndoableEditEvent event);\n \n \n } // UndoableEditListener"}, {"sha": "1fff8488cb0c406d73228b89f14656c305887ab7", "filename": "libjava/javax/swing/plaf/UIResource.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fplaf%2FUIResource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fplaf%2FUIResource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2FUIResource.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -39,8 +39,8 @@\n package javax.swing.plaf;\n \n /**\n- * This interface is used to designate which objects were created by\n- * <code>ComponentUI</code> delegates.  When uninstalling the user interface\n+ * This public interface is used to designate which objects were created by\n+ * <code>ComponentUI</code> delegates.  When uninstalling the user public interface\n  * renderer with <code>ComponentUI.uninstallUI()</code> the renderer\n  * property is set to <code>null</code>.\n  * <br>"}, {"sha": "075c0b213e25d96297ba06c03c91ca66eb8e63e1", "filename": "libjava/javax/swing/plaf/metal/MetalLookAndFeel.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fplaf%2Fmetal%2FMetalLookAndFeel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463bc6afde1be6df9710a0cc70e796711da2200a/libjava%2Fjavax%2Fswing%2Fplaf%2Fmetal%2FMetalLookAndFeel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fmetal%2FMetalLookAndFeel.java?ref=463bc6afde1be6df9710a0cc70e796711da2200a", "patch": "@@ -66,4 +66,4 @@ public UIDefaults getDefaults()\n \t     //      Returns the default values for this look and feel. \n \t     return LAF_defaults;\n \t }\n- };\n+ }"}]}