{"sha": "36d2d101fa9d21189195cce1e90b955096a79779", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZkMmQxMDFmYTlkMjExODkxOTVjY2UxZTkwYjk1NTA5NmE3OTc3OQ==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2018-08-22T23:43:44Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-08-22T23:43:44Z"}, "message": "tree-ssa-dse.c (compute_trims): Avoid folding away undefined behaviour.\n\n\t* tree-ssa-dse.c (compute_trims): Avoid folding away undefined\n\tbehaviour.\n\nFrom-SVN: r263793", "tree": {"sha": "5e2dacb95dffb68975016fb56187863415ed909c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e2dacb95dffb68975016fb56187863415ed909c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36d2d101fa9d21189195cce1e90b955096a79779", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36d2d101fa9d21189195cce1e90b955096a79779", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36d2d101fa9d21189195cce1e90b955096a79779", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36d2d101fa9d21189195cce1e90b955096a79779/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f73a5316b6f76fa62979c29f4ec3620bf821dca0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f73a5316b6f76fa62979c29f4ec3620bf821dca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f73a5316b6f76fa62979c29f4ec3620bf821dca0"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "f362c36962bec77a4ad0b8b09e469fe7237295b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d2d101fa9d21189195cce1e90b955096a79779/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d2d101fa9d21189195cce1e90b955096a79779/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=36d2d101fa9d21189195cce1e90b955096a79779", "patch": "@@ -1,3 +1,8 @@\n+2018-08-22  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* tree-ssa-dse.c (compute_trims): Avoid folding away undefined\n+\tbehaviour.\n+\n 2018-08-22  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/87052"}, {"sha": "016aa6cc97c7b5131bbb4c6682a9eb2d0e3beff5", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d2d101fa9d21189195cce1e90b955096a79779/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d2d101fa9d21189195cce1e90b955096a79779/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=36d2d101fa9d21189195cce1e90b955096a79779", "patch": "@@ -248,6 +248,13 @@ compute_trims (ao_ref *ref, sbitmap live, int *trim_head, int *trim_tail,\n \t residual handling in mem* and str* functions is usually\n \t reasonably efficient.  */\n       *trim_tail = last_orig - last_live;\n+\n+      /* But don't trim away out of bounds accesses, as this defeats\n+\t proper warnings.  */\n+      if (*trim_tail\n+\t  && compare_tree_int (TYPE_SIZE_UNIT (TREE_TYPE (ref->base)),\n+\t\t\t       last_orig) <= 0)\n+\t*trim_tail = 0;\n     }\n   else\n     *trim_tail = 0;"}]}