{"sha": "60bf20045f4a747573b2759e8228173edb0e6f12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBiZjIwMDQ1ZjRhNzQ3NTczYjI3NTllODIyODE3M2VkYjBlNmYxMg==", "commit": {"author": {"name": "Brendan Kehoe", "email": "brendan@gcc.gnu.org", "date": "1997-07-28T23:08:39Z"}, "committer": {"name": "Brendan Kehoe", "email": "brendan@gcc.gnu.org", "date": "1997-07-28T23:08:39Z"}, "message": "integrate.c (expand_inline_function): Use xmalloc instead of alloca for the LABEL_MAP.\n\n\t* integrate.c (expand_inline_function): Use xmalloc instead of\n\talloca for the LABEL_MAP.\n\t(save_for_inline_copying): Likewise.\n\nFrom-SVN: r14546", "tree": {"sha": "fbd750fc0ec8485e8d92ea25b410438bb9050324", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbd750fc0ec8485e8d92ea25b410438bb9050324"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60bf20045f4a747573b2759e8228173edb0e6f12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60bf20045f4a747573b2759e8228173edb0e6f12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60bf20045f4a747573b2759e8228173edb0e6f12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60bf20045f4a747573b2759e8228173edb0e6f12/comments", "author": null, "committer": null, "parents": [{"sha": "3bb1329eda5f5c4997aad7b8b4014890e9c6b433", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bb1329eda5f5c4997aad7b8b4014890e9c6b433", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bb1329eda5f5c4997aad7b8b4014890e9c6b433"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "217d24b56b07d350742e582f685941d8713001f5", "filename": "gcc/integrate.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60bf20045f4a747573b2759e8228173edb0e6f12/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60bf20045f4a747573b2759e8228173edb0e6f12/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=60bf20045f4a747573b2759e8228173edb0e6f12", "patch": "@@ -414,6 +414,10 @@ save_for_inline_copying (fndecl)\n   rtx first_nonparm_insn;\n   char *new, *new1;\n \n+  /* The pointer used to track the true location of the memory used\n+     for LABEL_MAP.  */\n+  rtx *real_label_map = NULL_PTR;\n+\n   /* Make and emit a return-label if we have not already done so. \n      Do this before recording the bounds on label numbers.  */\n \n@@ -512,8 +516,12 @@ save_for_inline_copying (fndecl)\n \n   /* Likewise each label rtx must have a unique rtx as its copy.  */\n \n-  label_map = (rtx *)alloca ((max_labelno - min_labelno) * sizeof (rtx));\n-  label_map -= min_labelno;\n+  /* We used to use alloca here, but the size of what it would try to\n+     allocate would occasionally cause it to exceed the stack limit and\n+     cause unpredictable core dumps.  Some examples were > 2Mb in size.  */\n+  real_label_map\n+    = (rtx *) xmalloc ((max_labelno - min_labelno) * sizeof (rtx));\n+  label_map = real_label_map - min_labelno;\n \n   for (i = min_labelno; i < max_labelno; i++)\n     label_map[i] = gen_label_rtx ();\n@@ -655,6 +663,9 @@ save_for_inline_copying (fndecl)\n   regno_pointer_align = new1;\n \n   set_new_first_and_last_insn (first_insn, last_insn);\n+\n+  if (real_label_map)\n+    free (real_label_map);\n }\n \n /* Return a copy of a chain of nodes, chained through the TREE_CHAIN field."}]}