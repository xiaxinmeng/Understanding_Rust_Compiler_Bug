{"sha": "ae1158c42534a9becfb51585b9b69df8d0d13a10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUxMTU4YzQyNTM0YTliZWNmYjUxNTg1YjliNjlkZjhkMGQxM2ExMA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-10-24T09:06:26Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-10-24T09:06:26Z"}, "message": "utils2.c (build_binary_op): Tweak formatting.\n\n\t* gcc-interface/utils2.c (build_binary_op): Tweak formatting.\n\t(build_unary_op): Likewise.\n\nFrom-SVN: r229284", "tree": {"sha": "21364ffe18e1321ac0adecb2f180dc5d3417ad50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21364ffe18e1321ac0adecb2f180dc5d3417ad50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae1158c42534a9becfb51585b9b69df8d0d13a10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae1158c42534a9becfb51585b9b69df8d0d13a10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae1158c42534a9becfb51585b9b69df8d0d13a10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae1158c42534a9becfb51585b9b69df8d0d13a10/comments", "author": null, "committer": null, "parents": [{"sha": "e7838ec9d2ea06e844ef23660862781b81a26329", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7838ec9d2ea06e844ef23660862781b81a26329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7838ec9d2ea06e844ef23660862781b81a26329"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "bc01e68f48bcd304dec44793b40fd80c60a5778f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1158c42534a9becfb51585b9b69df8d0d13a10/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1158c42534a9becfb51585b9b69df8d0d13a10/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ae1158c42534a9becfb51585b9b69df8d0d13a10", "patch": "@@ -1,3 +1,8 @@\n+2015-10-24  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/utils2.c (build_binary_op): Tweak formatting.\n+\t(build_unary_op): Likewise.\n+\n 2015-10-23  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gnat_rm.texi, gnat_ugn.texi: Regenerate."}, {"sha": "47446ba89699ff43a1631fd8ea00bf71085d8f86", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1158c42534a9becfb51585b9b69df8d0d13a10/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1158c42534a9becfb51585b9b69df8d0d13a10/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=ae1158c42534a9becfb51585b9b69df8d0d13a10", "patch": "@@ -1038,8 +1038,8 @@ build_binary_op (enum tree_code op_code, tree result_type,\n     case TRUTH_AND_EXPR:\n     case TRUTH_OR_EXPR:\n     case TRUTH_XOR_EXPR:\n-      gcc_checking_assert (TREE_CODE (\n-\t\t\t\tget_base_type (result_type)) == BOOLEAN_TYPE);\n+      gcc_checking_assert\n+\t(TREE_CODE (get_base_type (result_type)) == BOOLEAN_TYPE);\n       operation_type = left_base_type;\n       left_operand = convert (operation_type, left_operand);\n       right_operand = convert (operation_type, right_operand);\n@@ -1051,8 +1051,8 @@ build_binary_op (enum tree_code op_code, tree result_type,\n     case LT_EXPR:\n     case EQ_EXPR:\n     case NE_EXPR:\n-      gcc_checking_assert (TREE_CODE (\n-\t\t\t\tget_base_type (result_type)) == BOOLEAN_TYPE);\n+      gcc_checking_assert\n+\t(TREE_CODE (get_base_type (result_type)) == BOOLEAN_TYPE);\n       /* If either operand is a NULL_EXPR, just return a new one.  */\n       if (TREE_CODE (left_operand) == NULL_EXPR)\n \treturn build2 (op_code, result_type,\n@@ -1332,8 +1332,8 @@ build_unary_op (enum tree_code op_code, tree result_type, tree operand)\n       break;\n \n     case TRUTH_NOT_EXPR:\n-      gcc_checking_assert (TREE_CODE (\n-\t\t\t\tget_base_type (result_type)) == BOOLEAN_TYPE);\n+      gcc_checking_assert\n+\t(TREE_CODE (get_base_type (result_type)) == BOOLEAN_TYPE);\n       result = invert_truthvalue_loc (EXPR_LOCATION (operand), operand);\n       /* When not optimizing, fold the result as invert_truthvalue_loc\n \t doesn't fold the result of comparisons.  This is intended to undo"}]}