{"sha": "09e4850d7e5ab207bf04c389c80ff9bc548f8298", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDllNDg1MGQ3ZTVhYjIwN2JmMDRjMzg5YzgwZmY5YmM1NDhmODI5OA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-08-10T13:35:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-08-10T13:35:34Z"}, "message": "re PR middle-end/54219 (__builtin_shuffle mask reversed)\n\n2012-08-10  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/54219\n\t* fold-const.c (fold_ternary_loc): Do not reverse the mask\n\twhen canonicalizing it when folding VEC_PERM_EXPR.\n\n\t* gcc.dg/torture/vector-shuffle1.c: New testcase.\n\nFrom-SVN: r190297", "tree": {"sha": "31eaec0e13000baa8f1cb7ab7d41cd89f9b560a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31eaec0e13000baa8f1cb7ab7d41cd89f9b560a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09e4850d7e5ab207bf04c389c80ff9bc548f8298", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09e4850d7e5ab207bf04c389c80ff9bc548f8298", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09e4850d7e5ab207bf04c389c80ff9bc548f8298", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09e4850d7e5ab207bf04c389c80ff9bc548f8298/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "99cababb4b154f763a609127b498a9f0fa99b3f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99cababb4b154f763a609127b498a9f0fa99b3f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99cababb4b154f763a609127b498a9f0fa99b3f8"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "914742e61286c6107bf5cf6d86a0e56cd3ebb971", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09e4850d7e5ab207bf04c389c80ff9bc548f8298/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09e4850d7e5ab207bf04c389c80ff9bc548f8298/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09e4850d7e5ab207bf04c389c80ff9bc548f8298", "patch": "@@ -1,3 +1,9 @@\n+2012-08-10  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/54219\n+\t* fold-const.c (fold_ternary_loc): Do not reverse the mask\n+\twhen canonicalizing it when folding VEC_PERM_EXPR.\n+\n 2012-08-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR middle-end/54211"}, {"sha": "5e14125eea07e8f632eacb3f666a4b4ade1e6b2d", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09e4850d7e5ab207bf04c389c80ff9bc548f8298/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09e4850d7e5ab207bf04c389c80ff9bc548f8298/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=09e4850d7e5ab207bf04c389c80ff9bc548f8298", "patch": "@@ -14189,7 +14189,7 @@ fold_ternary_loc (location_t loc, enum tree_code code, tree type,\n \t      tree *tsel = XALLOCAVEC (tree, nelts);\n \t      tree eltype = TREE_TYPE (TREE_TYPE (arg2));\n \t      for (i = 0; i < nelts; i++)\n-\t\ttsel[i] = build_int_cst (eltype, sel[nelts - i - 1]);\n+\t\ttsel[i] = build_int_cst (eltype, sel[i]);\n \t      t = build_vector (TREE_TYPE (arg2), tsel);\n \t      return build3_loc (loc, VEC_PERM_EXPR, type, op0, op1, t);\n \t    }"}, {"sha": "bc8573524a3b6fcef7400bdea65c29bc2fb4ae43", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09e4850d7e5ab207bf04c389c80ff9bc548f8298/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09e4850d7e5ab207bf04c389c80ff9bc548f8298/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=09e4850d7e5ab207bf04c389c80ff9bc548f8298", "patch": "@@ -1,3 +1,8 @@\n+2012-08-10  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/54219\n+\t* gcc.dg/torture/vector-shuffle1.c: New testcase.\n+\n 2012-08-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR middle-end/54211"}, {"sha": "9fa4f217587afa63364329f06eb5f94759cdafcf", "filename": "gcc/testsuite/gcc.dg/torture/vector-shuffle1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09e4850d7e5ab207bf04c389c80ff9bc548f8298/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fvector-shuffle1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09e4850d7e5ab207bf04c389c80ff9bc548f8298/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fvector-shuffle1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fvector-shuffle1.c?ref=09e4850d7e5ab207bf04c389c80ff9bc548f8298", "patch": "@@ -0,0 +1,20 @@\n+/* PR54219 */\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+typedef int v2si __attribute__((vector_size(2*sizeof(int))));\n+\n+v2si f(v2si x)\n+{\n+  /* This requires canonicalization of the mask to { 1, 0 }.  */\n+  return __builtin_shuffle(x,x, (v2si) { 5, 0 });\n+}\n+\n+int main()\n+{\n+  v2si y = f((v2si) { 1, 2 });\n+  if (y[0] != 2 || y[1] != 1)\n+    abort ();\n+  return 0;\n+}"}]}