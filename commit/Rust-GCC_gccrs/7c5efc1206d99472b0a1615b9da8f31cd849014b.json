{"sha": "7c5efc1206d99472b0a1615b9da8f31cd849014b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M1ZWZjMTIwNmQ5OTQ3MmIwYTE2MTViOWRhOGYzMWNkODQ5MDE0Yg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2013-11-18T14:51:45Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2013-11-18T14:51:45Z"}, "message": "tree.h (tree_to_shwi, [...]): Declare, with inline expansions.\n\ngcc/\n\t* tree.h (tree_to_shwi, tree_to_uhwi): Declare, with inline expansions.\n\t* tree.c (tree_to_shwi, tree_to_uhwi): New functions.\n\nFrom-SVN: r204958", "tree": {"sha": "ea1865acfa2c48b11b47c74919bbc11f420abb9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea1865acfa2c48b11b47c74919bbc11f420abb9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c5efc1206d99472b0a1615b9da8f31cd849014b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c5efc1206d99472b0a1615b9da8f31cd849014b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c5efc1206d99472b0a1615b9da8f31cd849014b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c5efc1206d99472b0a1615b9da8f31cd849014b/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a36c51b09466ab6c403be328a970aa65e47bc90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a36c51b09466ab6c403be328a970aa65e47bc90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a36c51b09466ab6c403be328a970aa65e47bc90"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "276c1cbe66bf20b22a7769bad691e6e6090f814b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c5efc1206d99472b0a1615b9da8f31cd849014b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c5efc1206d99472b0a1615b9da8f31cd849014b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c5efc1206d99472b0a1615b9da8f31cd849014b", "patch": "@@ -1,3 +1,8 @@\n+2013-11-18  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* tree.h (tree_to_shwi, tree_to_uhwi): Declare, with inline expansions.\n+\t* tree.c (tree_to_shwi, tree_to_uhwi): New functions.\n+\n 2013-11-18  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* expr.h: Update comments to refer to tree_fits_[su]hwi_p rather"}, {"sha": "124e5312e3136d15893c00da04193fb623f9bf78", "filename": "gcc/tree.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c5efc1206d99472b0a1615b9da8f31cd849014b/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c5efc1206d99472b0a1615b9da8f31cd849014b/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=7c5efc1206d99472b0a1615b9da8f31cd849014b", "patch": "@@ -7027,6 +7027,28 @@ tree_low_cst (const_tree t, int pos)\n   return TREE_INT_CST_LOW (t);\n }\n \n+/* T is an INTEGER_CST whose numerical value (extended according to\n+   TYPE_UNSIGNED) fits in a signed HOST_WIDE_INT.  Return that\n+   HOST_WIDE_INT.  */\n+\n+HOST_WIDE_INT\n+tree_to_shwi (const_tree t)\n+{\n+  gcc_assert (tree_fits_shwi_p (t));\n+  return TREE_INT_CST_LOW (t);\n+}\n+\n+/* T is an INTEGER_CST whose numerical value (extended according to\n+   TYPE_UNSIGNED) fits in an unsigned HOST_WIDE_INT.  Return that\n+   HOST_WIDE_INT.  */\n+\n+HOST_WIDE_INT\n+tree_to_uhwi (const_tree t)\n+{\n+  gcc_assert (tree_fits_uhwi_p (t));\n+  return TREE_INT_CST_LOW (t);\n+}\n+\n /* Return the most significant (sign) bit of T.  */\n \n int"}, {"sha": "ae30deafbba74fbef780891b6ea0e6225948017f", "filename": "gcc/tree.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c5efc1206d99472b0a1615b9da8f31cd849014b/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c5efc1206d99472b0a1615b9da8f31cd849014b/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=7c5efc1206d99472b0a1615b9da8f31cd849014b", "patch": "@@ -3673,13 +3673,29 @@ extern bool tree_fits_uhwi_p (const_tree)\n #endif\n   ;\n extern HOST_WIDE_INT tree_low_cst (const_tree, int);\n+extern HOST_WIDE_INT tree_to_shwi (const_tree);\n+extern HOST_WIDE_INT tree_to_uhwi (const_tree);\n #if !defined ENABLE_TREE_CHECKING && (GCC_VERSION >= 4003)\n extern inline __attribute__ ((__gnu_inline__)) HOST_WIDE_INT\n tree_low_cst (const_tree t, int pos)\n {\n   gcc_assert (host_integerp (t, pos));\n   return TREE_INT_CST_LOW (t);\n }\n+\n+extern inline __attribute__ ((__gnu_inline__)) HOST_WIDE_INT\n+tree_to_shwi (const_tree t)\n+{\n+  gcc_assert (tree_fits_shwi_p (t));\n+  return TREE_INT_CST_LOW (t);\n+}\n+\n+extern inline __attribute__ ((__gnu_inline__)) HOST_WIDE_INT\n+tree_to_uhwi (const_tree t)\n+{\n+  gcc_assert (tree_fits_uhwi_p (t));\n+  return TREE_INT_CST_LOW (t);\n+}\n #endif\n extern int tree_int_cst_sgn (const_tree);\n extern int tree_int_cst_sign_bit (const_tree);"}]}