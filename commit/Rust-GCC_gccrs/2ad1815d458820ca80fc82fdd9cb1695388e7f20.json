{"sha": "2ad1815d458820ca80fc82fdd9cb1695388e7f20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFkMTgxNWQ0NTg4MjBjYTgwZmM4MmZkZDljYjE2OTUzODhlN2YyMA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-03-04T11:06:32Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-03-04T11:06:32Z"}, "message": "re PR c/9262 (ICE on false case label)\n\n\tPR c/9262\n\t* c-typeck.c (do_case): Attach the first case label to the SWITCH_BODY.\n\t(c_finish_case): Rechain the next statements to the SWITCH_STMT.\n\nFrom-SVN: r63783", "tree": {"sha": "92460f53d9e91b8dcf0b9b59cd6749d9166388c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92460f53d9e91b8dcf0b9b59cd6749d9166388c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ad1815d458820ca80fc82fdd9cb1695388e7f20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ad1815d458820ca80fc82fdd9cb1695388e7f20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ad1815d458820ca80fc82fdd9cb1695388e7f20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ad1815d458820ca80fc82fdd9cb1695388e7f20/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e2483ef7c73635b42aa871ef48b7d8c7763c0e53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2483ef7c73635b42aa871ef48b7d8c7763c0e53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2483ef7c73635b42aa871ef48b7d8c7763c0e53"}], "stats": {"total": 63, "additions": 54, "deletions": 9}, "files": [{"sha": "8de94d8f5e424261fcf7a7d543e63d572f6d3fd6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad1815d458820ca80fc82fdd9cb1695388e7f20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad1815d458820ca80fc82fdd9cb1695388e7f20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ad1815d458820ca80fc82fdd9cb1695388e7f20", "patch": "@@ -1,3 +1,9 @@\n+2003-03-04  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR c/9262\n+\t* c-typeck.c (do_case): Attach the first case label to the SWITCH_BODY.\n+\t(c_finish_case): Rechain the next statements to the SWITCH_STMT.\n+\n Tue Mar  4 11:30:04 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* doc/invoke.texi:  Document that unit-at-a-time is enabled for -O3"}, {"sha": "8302a9678f03589af8046e1ed33981fd6901e7c2", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad1815d458820ca80fc82fdd9cb1695388e7f20/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad1815d458820ca80fc82fdd9cb1695388e7f20/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=2ad1815d458820ca80fc82fdd9cb1695388e7f20", "patch": "@@ -7184,11 +7184,19 @@ do_case (low_value, high_value)\n \n   if (switch_stack)\n     {\n+      bool switch_was_empty_p = (SWITCH_BODY (switch_stack->switch_stmt) == NULL_TREE);\n+\n       label = c_add_case_label (switch_stack->cases, \n \t\t\t\tSWITCH_COND (switch_stack->switch_stmt), \n \t\t\t\tlow_value, high_value);\n       if (label == error_mark_node)\n \tlabel = NULL_TREE;\n+      else if (switch_was_empty_p)\n+\t{\n+\t  /* Attach the first case label to the SWITCH_BODY.  */\n+\t  SWITCH_BODY (switch_stack->switch_stmt) = TREE_CHAIN (switch_stack->switch_stmt);\n+\t  TREE_CHAIN (switch_stack->switch_stmt) = NULL_TREE;\n+\t}\n     }\n   else if (low_value)\n     error (\"case label not within a switch statement\");\n@@ -7205,7 +7213,8 @@ c_finish_case ()\n {\n   struct c_switch *cs = switch_stack;\n \n-  RECHAIN_STMTS (cs->switch_stmt, SWITCH_BODY (cs->switch_stmt)); \n+  /* Rechain the next statements to the SWITCH_STMT.  */\n+  last_tree = cs->switch_stmt;\n \n   /* Pop the stack.  */\n   switch_stack = switch_stack->next;"}, {"sha": "fb4f391b64f41c96c8810f0e22a6d65ab3eeea20", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad1815d458820ca80fc82fdd9cb1695388e7f20/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad1815d458820ca80fc82fdd9cb1695388e7f20/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2ad1815d458820ca80fc82fdd9cb1695388e7f20", "patch": "@@ -1,3 +1,11 @@\n+2003-03-04  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/switch-2.c: New test.\n+\t* gcc.dg/switch-3.c: New test.\n+\t* gcc.dg/Wswitch.c: Adjust line numbers.\n+\t* gcc.dg/Wswitch-default.c: Likewise.\n+\t* gcc.dg/Wswitch-enum.c: Likewise.\n+\n 2003-03-04  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* gcc.c-torture/execute/20030222-1.c: New test."}, {"sha": "a1a3d39c1d9dc711e923605f399a3c9088e9860e", "filename": "gcc/testsuite/gcc.dg/Wswitch-default.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad1815d458820ca80fc82fdd9cb1695388e7f20/gcc%2Ftestsuite%2Fgcc.dg%2FWswitch-default.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad1815d458820ca80fc82fdd9cb1695388e7f20/gcc%2Ftestsuite%2Fgcc.dg%2FWswitch-default.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWswitch-default.c?ref=2ad1815d458820ca80fc82fdd9cb1695388e7f20", "patch": "@@ -18,8 +18,8 @@ foo (int i, int j, enum e ei, enum e ej, enum e ek, enum e el,\n     case 4: return 3;\n     default: break;\n     }\n-  switch (ei)\n-    { /* { dg-warning \"switch missing default case\" } */\n+  switch (ei) /* { dg-warning \"switch missing default case\" } */\n+    {\n     }\n   switch (ej)\n     {"}, {"sha": "d031b12ce14698b4c4d4eb2c278e45540e81798d", "filename": "gcc/testsuite/gcc.dg/Wswitch-enum.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad1815d458820ca80fc82fdd9cb1695388e7f20/gcc%2Ftestsuite%2Fgcc.dg%2FWswitch-enum.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad1815d458820ca80fc82fdd9cb1695388e7f20/gcc%2Ftestsuite%2Fgcc.dg%2FWswitch-enum.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWswitch-enum.c?ref=2ad1815d458820ca80fc82fdd9cb1695388e7f20", "patch": "@@ -19,9 +19,9 @@ foo (int i, int j, enum e ei, enum e ej, enum e ek, enum e el,\n     case 4: return 3;\n     default: break;\n     }\n-  switch (ei)\n-    { /* { dg-warning \"enumeration value `e1' not handled in switch\" \"enum e1\" } */\n-    } /* { dg-warning \"enumeration value `e2' not handled in switch\" \"enum e2\" { target *-*-* } 23 } */\n+  switch (ei) /* { dg-warning \"enumeration value `e1' not handled in switch\" \"enum e1\" } */\n+    { /* { dg-warning \"enumeration value `e2' not handled in switch\" \"enum e2\" { target *-*-* } 22 } */\n+    }\n   switch (ej)\n     { /* { dg-warning \"enumeration value `e1' not handled in switch\" \"enum e1\" { target *-*-* } 28 } */\n     default: break;"}, {"sha": "38c3cbbb44617e4a9d0850e0301e92d81a7bf4b5", "filename": "gcc/testsuite/gcc.dg/Wswitch.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad1815d458820ca80fc82fdd9cb1695388e7f20/gcc%2Ftestsuite%2Fgcc.dg%2FWswitch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad1815d458820ca80fc82fdd9cb1695388e7f20/gcc%2Ftestsuite%2Fgcc.dg%2FWswitch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWswitch.c?ref=2ad1815d458820ca80fc82fdd9cb1695388e7f20", "patch": "@@ -19,9 +19,9 @@ foo (int i, int j, enum e ei, enum e ej, enum e ek, enum e el,\n     case 4: return 3;\n     default: break;\n     }\n-  switch (ei)\n-    { /* { dg-warning \"enumeration value `e1' not handled in switch\" \"enum e1\" } */\n-    } /* { dg-warning \"enumeration value `e2' not handled in switch\" \"enum e2\" { target *-*-* } 23 } */\n+  switch (ei) /* { dg-warning \"enumeration value `e1' not handled in switch\" \"enum e1\" } */\n+    { /*{ dg-warning \"enumeration value `e2' not handled in switch\" \"enum e2\" { target *-*-* } 22 } */\n+    }\n   switch (ej)\n     {\n     default: break;"}, {"sha": "29a966d31a7d91c42d8a37ce5531c4a7d3ac9e77", "filename": "gcc/testsuite/gcc.dg/switch-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad1815d458820ca80fc82fdd9cb1695388e7f20/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad1815d458820ca80fc82fdd9cb1695388e7f20/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-2.c?ref=2ad1815d458820ca80fc82fdd9cb1695388e7f20", "patch": "@@ -0,0 +1,10 @@\n+/* PR c/9262 */\n+/* Originator: Rasmus Hahn <rassahah@neofonie.de> */\n+/* { dg-do compile } */\n+\n+int foo(int i)\n+{\n+  switch (i)\n+    case 3:\n+      return 1,\n+}  /* { dg-error \"(parse|syntax) error\" } */"}, {"sha": "593c42d8b16ef8ec3a4fb4acec8a53e5cc219260", "filename": "gcc/testsuite/gcc.dg/switch-3.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad1815d458820ca80fc82fdd9cb1695388e7f20/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad1815d458820ca80fc82fdd9cb1695388e7f20/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-3.c?ref=2ad1815d458820ca80fc82fdd9cb1695388e7f20", "patch": "@@ -0,0 +1,12 @@\n+/* PR c/9262 */\n+/* Originator: Rasmus Hahn <rassahah@neofonie.de> */\n+/* { dg-do compile } */\n+\n+int foo(int i)\n+{\n+  switch (i)\n+    case 3:\n+      return 1;\n+    case 4:      /* { dg-error \"not within a switch statement\" } */\n+      return 1;\n+}"}]}