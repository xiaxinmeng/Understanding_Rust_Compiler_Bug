{"sha": "fdc5359fb65458577a9d2a529d64cb0a54618cff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRjNTM1OWZiNjU0NTg1NzdhOWQyYTUyOWQ2NGNiMGE1NDYxOGNmZg==", "commit": {"author": {"name": "Matthew Malcomson", "email": "matthew.malcomson@arm.com", "date": "2019-12-09T12:03:53Z"}, "committer": {"name": "Matthew Malcomson", "email": "matmal01@gcc.gnu.org", "date": "2019-12-09T12:03:53Z"}, "message": "[mid-end] Add notes to dataflow insn info when re-emitting (PR92410)\n\nIn scheduling passes, notes are removed with `remove_notes` before the\nscheduling is done, and added back in with `reemit_notes` once the\nscheduling has been decided.\n\nThis process leaves the notes in the RTL chain with different insn uid's\nthan were there before.  Having different UID's (larger than the\nprevious ones) means that DF_INSN_INFO_GET(insn) will access outside of\nthe allocated array.\n\nThis has been seen in the `regstat_bb_compute_calls_crossed` function.\nThis patch adds an assert to the `regstat_bb_compute_calls_crossed`\nfunction so that bad accesses here are caught instead of going\nunnoticed, and then avoids the problem.\n\nWe avoid the problem by ensuring that new notes added by `reemit_notes` have an\ninsn record given to them.  This is done by adding a call to\n`df_insn_create_insn_record` on each note added in `reemit_notes`.\n`df_insn_create_insn_record` leaves this new record zeroed out, which appears\nto be fine for notes (e.g. `df_bb_refs_record` already does not set\nanything except the luid for notes, and notes have no dataflow information to\nrecord).\n\nWe add the testcase that Martin found here\nhttps://gcc.gnu.org/bugzilla/show_bug.cgi?id=92410#c2 .\nThis testcase fails with the \"regstat.c\" change, and then succeeds with the\n\"haifa-sched.c\" change.\n\nThere is a similar problem with labels, that the `gcc_assert` catches\nwhen running regression tests in gcc.dg/fold-eqandshift-1.c and\ngcc.c-torture/compile/pr32482.c.\nThis is due to the `cfg_layout_finalize` call in `bb-reorder.c` emitting\nnew labels, and these labels not having a dataflow df_insn_info member.\n\nWe solve this by manually calling `df_recompute_luids` on each basic\nblock once this pass has finished.\n\nTesting done:\n  Ran regression tests on aarch64-none-linux-gnu cross compiler.\n  Bootstrapped and ran tests on aarch64-none-linux-gnu native.\n\ngcc/ChangeLog:\n\n2019-12-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n\n\tPR middle-end/92410\n\t* bb-reorder.c (pass_reorder_blocks::execute): Recompute\n\tdataflow luids once basic blocks have been reordered.\n\t* haifa-sched.c (reemit_notes): Create df insn record for each\n\tnew note.\n\t* regstat.c (regstat_bb_compute_calls_crossed): Assert every\n\tinsn has an insn record before trying to use it.\n\ngcc/testsuite/ChangeLog:\n\n2019-12-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n\n\tPR middle-end/92410\n\t* gcc.dg/torture/pr92410.c: New test.\n\nFrom-SVN: r279124", "tree": {"sha": "45f4b9b573dea8a33641596b57b98c5010b76000", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45f4b9b573dea8a33641596b57b98c5010b76000"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdc5359fb65458577a9d2a529d64cb0a54618cff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdc5359fb65458577a9d2a529d64cb0a54618cff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdc5359fb65458577a9d2a529d64cb0a54618cff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdc5359fb65458577a9d2a529d64cb0a54618cff/comments", "author": {"login": "mmalcomson", "id": 57484298, "node_id": "MDQ6VXNlcjU3NDg0Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmalcomson", "html_url": "https://github.com/mmalcomson", "followers_url": "https://api.github.com/users/mmalcomson/followers", "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}", "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions", "organizations_url": "https://api.github.com/users/mmalcomson/orgs", "repos_url": "https://api.github.com/users/mmalcomson/repos", "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}", "received_events_url": "https://api.github.com/users/mmalcomson/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad8b778345e01ff8ce252bf572965684a0826082", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad8b778345e01ff8ce252bf572965684a0826082", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad8b778345e01ff8ce252bf572965684a0826082"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "43e838cd9bb3515a8204da7bc4afd71d66a78a40", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc5359fb65458577a9d2a529d64cb0a54618cff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc5359fb65458577a9d2a529d64cb0a54618cff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fdc5359fb65458577a9d2a529d64cb0a54618cff", "patch": "@@ -1,3 +1,13 @@\n+2019-12-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\tPR middle-end/92410\n+\t* bb-reorder.c (pass_reorder_blocks::execute): Recompute\n+\tdataflow luids once basic blocks have been reordered.\n+\t* haifa-sched.c (reemit_notes): Create df insn record for each\n+\tnew note.\n+\t* regstat.c (regstat_bb_compute_calls_crossed): Assert every\n+\tinsn has an insn record before trying to use it.\n+\n 2019-12-09  Hongtao Liu  <hongtao.liu@intel.com>\n \n     * gcc/common/config/i386/i386-common.c"}, {"sha": "1cdeac155e303656203a97647438517923d5f977", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc5359fb65458577a9d2a529d64cb0a54618cff/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc5359fb65458577a9d2a529d64cb0a54618cff/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=fdc5359fb65458577a9d2a529d64cb0a54618cff", "patch": "@@ -2662,6 +2662,8 @@ pass_reorder_blocks::execute (function *fun)\n       bb->aux = bb->next_bb;\n   cfg_layout_finalize ();\n \n+  FOR_EACH_BB_FN (bb, fun)\n+    df_recompute_luids (bb);\n   return 0;\n }\n "}, {"sha": "d56c40581df4c1cc89af235eda67dfa8a3e66195", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc5359fb65458577a9d2a529d64cb0a54618cff/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc5359fb65458577a9d2a529d64cb0a54618cff/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=fdc5359fb65458577a9d2a529d64cb0a54618cff", "patch": "@@ -5432,6 +5432,7 @@ reemit_notes (rtx_insn *insn)\n \n \t  last = emit_note_before (note_type, last);\n \t  remove_note (insn, note);\n+\t  df_insn_create_insn_record (last);\n \t}\n     }\n }"}, {"sha": "c6cefb117d7330cc1b9787c37083e05e2acda2d2", "filename": "gcc/regstat.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc5359fb65458577a9d2a529d64cb0a54618cff/gcc%2Fregstat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc5359fb65458577a9d2a529d64cb0a54618cff/gcc%2Fregstat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregstat.c?ref=fdc5359fb65458577a9d2a529d64cb0a54618cff", "patch": "@@ -324,6 +324,7 @@ regstat_bb_compute_calls_crossed (unsigned int bb_index, bitmap live)\n \n   FOR_BB_INSNS_REVERSE (bb, insn)\n     {\n+      gcc_assert (INSN_UID (insn) < DF_INSN_SIZE ());\n       struct df_insn_info *insn_info = DF_INSN_INFO_GET (insn);\n       unsigned int regno;\n "}, {"sha": "8361b7837283a2da1d4c4d0b7bac80113a784c44", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc5359fb65458577a9d2a529d64cb0a54618cff/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc5359fb65458577a9d2a529d64cb0a54618cff/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fdc5359fb65458577a9d2a529d64cb0a54618cff", "patch": "@@ -1,3 +1,8 @@\n+2019-12-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\tPR middle-end/92410\n+\t* gcc.dg/torture/pr92410.c: New test.\n+\n 2019-12-09  Sudakshina Das  <sudi.das@arm.com>\n \n \t* gcc.dg/vect/vect-shift-5.c: New test."}, {"sha": "628e329782260ef36f26506bfbc0d36a93b33f41", "filename": "gcc/testsuite/gcc.dg/torture/pr92410.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc5359fb65458577a9d2a529d64cb0a54618cff/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr92410.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc5359fb65458577a9d2a529d64cb0a54618cff/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr92410.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr92410.c?ref=fdc5359fb65458577a9d2a529d64cb0a54618cff", "patch": "@@ -0,0 +1,8 @@\n+/* PR middle-end/92410  */\n+/* { dg-do compile } */\n+int v;\n+\n+int a() {\n+  ;\n+  return v;\n+}"}]}