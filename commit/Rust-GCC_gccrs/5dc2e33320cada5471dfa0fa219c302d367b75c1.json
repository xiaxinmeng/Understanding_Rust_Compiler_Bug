{"sha": "5dc2e33320cada5471dfa0fa219c302d367b75c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRjMmUzMzMyMGNhZGE1NDcxZGZhMGZhMjE5YzMwMmQzNjdiNzVjMQ==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2005-09-30T14:33:53Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "2005-09-30T14:33:53Z"}, "message": "re PR tree-optimization/21430 (Quadratic behavior with constant initializers)\n\n\n\n2005-09-30  Andrew Macleod  <amacleod@redat.com>\n\n\tPR tree-optimization/21430\n\t* tree-ssa-operands.c (set_virtual_use_link): New. Link new virtual\n\tuse operands, and set stmt pointer if need be.\n\t(FINALIZE_CORRECT_USE: New. Macro to call appropriate use fixup routine.\n\ttree-ssa-opfinalize.h (FINALIZE_FUNC): Call FINALIZE_CORRECT_USE if\n\tpresent.\n\nFrom-SVN: r104816", "tree": {"sha": "65d4c34b798ef798c112286b2ed77aff525f9049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65d4c34b798ef798c112286b2ed77aff525f9049"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dc2e33320cada5471dfa0fa219c302d367b75c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc2e33320cada5471dfa0fa219c302d367b75c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dc2e33320cada5471dfa0fa219c302d367b75c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc2e33320cada5471dfa0fa219c302d367b75c1/comments", "author": null, "committer": null, "parents": [{"sha": "eae6e95b7f3905e1e4b92360b51eef4785ae9d22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eae6e95b7f3905e1e4b92360b51eef4785ae9d22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eae6e95b7f3905e1e4b92360b51eef4785ae9d22"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "6ff4c0fdbf97e00964d3e3a73b3d7703bebbc812", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc2e33320cada5471dfa0fa219c302d367b75c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc2e33320cada5471dfa0fa219c302d367b75c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5dc2e33320cada5471dfa0fa219c302d367b75c1", "patch": "@@ -1,3 +1,12 @@\n+2005-09-30  Andrew Macleod  <amacleod@redat.com>\n+\n+\tPR tree-optimization/21430\n+\t* tree-ssa-operands.c (set_virtual_use_link): New. Link new virtual\n+\tuse operands, and set stmt pointer if need be.\n+\t(FINALIZE_CORRECT_USE: New. Macro to call appropriate use fixup routine.\n+\ttree-ssa-opfinalize.h (FINALIZE_FUNC): Call FINALIZE_CORRECT_USE if\n+\tpresent.\n+\n 2005-09-29  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \tPR middle-end/24053"}, {"sha": "1c592573e8195de80cfd16d9ab12cef2db9f0371", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc2e33320cada5471dfa0fa219c302d367b75c1/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc2e33320cada5471dfa0fa219c302d367b75c1/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=5dc2e33320cada5471dfa0fa219c302d367b75c1", "patch": "@@ -511,6 +511,24 @@ correct_use_link (use_operand_p ptr, tree stmt)\n }\n \n \n+/* This routine makes sure that PTR is in an immediate use list, and makes\n+   sure the stmt pointer is set to the current stmt.  Virtual uses do not need\n+   the overhead of correct_use_link since they cannot be directly manipulated\n+   like a real use can be.  (They don't exist in the TREE_OPERAND nodes.)  */\n+static inline void\n+set_virtual_use_link (use_operand_p ptr, tree stmt)\n+{\n+  /*  Fold_stmt () may have changed the stmt pointers.  */\n+  if (ptr->stmt != stmt)\n+    ptr->stmt = stmt;\n+\n+  /* If this use isn't in a list, add it to the correct list.  */\n+  if (!ptr->prev)\n+    link_imm_use (ptr, *(ptr->use));\n+}\n+\n+\n+\n #define FINALIZE_OPBUILD\t\tbuild_defs\n #define FINALIZE_OPBUILD_BASE(I)\topbuild_elem_real (&build_defs, (I))\n #define FINALIZE_OPBUILD_ELEM(I)\topbuild_elem_real (&build_defs, (I))\n@@ -553,6 +571,7 @@ finalize_ssa_defs (tree stmt)\n #define FINALIZE_ELEM(PTR)\t((PTR)->use_ptr.use)\n #define FINALIZE_OPS\t\tUSE_OPS\n #define FINALIZE_USE_PTR(PTR)\tUSE_OP_PTR (PTR)\n+#define FINALIZE_CORRECT_USE\tcorrect_use_link\n #define FINALIZE_BASE(VAR)\tVAR\n #define FINALIZE_BASE_TYPE\ttree *\n #define FINALIZE_BASE_ZERO\tNULL\n@@ -596,6 +615,7 @@ finalize_ssa_uses (tree stmt)\n #define FINALIZE_ELEM(PTR)\tMAYDEF_RESULT (PTR)\n #define FINALIZE_OPS\t\tMAYDEF_OPS\n #define FINALIZE_USE_PTR(PTR)\tMAYDEF_OP_PTR (PTR)\n+#define FINALIZE_CORRECT_USE\tset_virtual_use_link\n #define FINALIZE_BASE_ZERO\t0\n #define FINALIZE_BASE(VAR)\t((TREE_CODE (VAR) == SSA_NAME)\t\t\\\n \t\t\t\t? DECL_UID (SSA_NAME_VAR (VAR)) : DECL_UID ((VAR)))\n@@ -647,6 +667,7 @@ cleanup_v_may_defs (void)\n #define FINALIZE_ELEM(PTR)\tVUSE_OP (PTR)\n #define FINALIZE_OPS\t\tVUSE_OPS\n #define FINALIZE_USE_PTR(PTR)\tVUSE_OP_PTR (PTR)\n+#define FINALIZE_CORRECT_USE\tset_virtual_use_link\n #define FINALIZE_BASE_ZERO\t0\n #define FINALIZE_BASE(VAR)\t((TREE_CODE (VAR) == SSA_NAME)\t\t\\\n \t\t\t\t? DECL_UID (SSA_NAME_VAR (VAR)) : DECL_UID ((VAR)))\n@@ -740,6 +761,7 @@ finalize_ssa_vuses (tree stmt)\n #define FINALIZE_ELEM(PTR)\tMUSTDEF_RESULT (PTR)\n #define FINALIZE_OPS\t\tMUSTDEF_OPS\n #define FINALIZE_USE_PTR(PTR)\tMUSTDEF_KILL_PTR (PTR)\n+#define FINALIZE_CORRECT_USE\tset_virtual_use_link\n #define FINALIZE_BASE_ZERO\t0\n #define FINALIZE_BASE(VAR)\t((TREE_CODE (VAR) == SSA_NAME)\t\t\\\n \t\t\t\t? DECL_UID (SSA_NAME_VAR (VAR)) : DECL_UID ((VAR)))"}, {"sha": "f58c93f3a1973b664c355d27b751f895f42de680", "filename": "gcc/tree-ssa-opfinalize.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc2e33320cada5471dfa0fa219c302d367b75c1/gcc%2Ftree-ssa-opfinalize.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc2e33320cada5471dfa0fa219c302d367b75c1/gcc%2Ftree-ssa-opfinalize.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-opfinalize.h?ref=5dc2e33320cada5471dfa0fa219c302d367b75c1", "patch": "@@ -86,8 +86,8 @@ FINALIZE_FUNC (tree stmt)\n \t  /* if variables are the same, reuse this node.  */\n \t  last->next = old_ops;\n \t  last = old_ops;\n-#ifdef FINALIZE_USE_PTR\n-\t  correct_use_link (FINALIZE_USE_PTR (last), stmt);\n+#ifdef FINALIZE_CORRECT_USE\n+\t  FINALIZE_CORRECT_USE (FINALIZE_USE_PTR (last), stmt);\n #endif\n \t  old_ops = old_ops->next;\n \t  new_i = opbuild_next (&FINALIZE_OPBUILD, new_i);\n@@ -173,3 +173,4 @@ FINALIZE_FUNC (tree stmt)\n #undef FINALIZE_OPBUILD_ELEM\n #undef FINALIZE_OPBUILD_BASE\n #undef FINALIZE_BASE_ZERO\n+#undef FINALIZE_CORRECT_USE"}]}