{"sha": "d2f2cb195c121b8018aafd2285e6ea123a9de1af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJmMmNiMTk1YzEyMWI4MDE4YWFmZDIyODVlNmVhMTIzYTlkZTFhZg==", "commit": {"author": {"name": "John Wehle", "email": "john@feith.com", "date": "1998-05-15T20:41:47Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-05-15T20:41:47Z"}, "message": "* i386.md (movdi-1, movdi): Rewrite based on SI move patterns.\n\nFrom-SVN: r19786", "tree": {"sha": "d6e60de49256939a1a7c50dedcf92c64afd23757", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6e60de49256939a1a7c50dedcf92c64afd23757"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2f2cb195c121b8018aafd2285e6ea123a9de1af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2f2cb195c121b8018aafd2285e6ea123a9de1af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2f2cb195c121b8018aafd2285e6ea123a9de1af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2f2cb195c121b8018aafd2285e6ea123a9de1af/comments", "author": {"login": "jlwehle", "id": 46985578, "node_id": "MDQ6VXNlcjQ2OTg1NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/46985578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlwehle", "html_url": "https://github.com/jlwehle", "followers_url": "https://api.github.com/users/jlwehle/followers", "following_url": "https://api.github.com/users/jlwehle/following{/other_user}", "gists_url": "https://api.github.com/users/jlwehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlwehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlwehle/subscriptions", "organizations_url": "https://api.github.com/users/jlwehle/orgs", "repos_url": "https://api.github.com/users/jlwehle/repos", "events_url": "https://api.github.com/users/jlwehle/events{/privacy}", "received_events_url": "https://api.github.com/users/jlwehle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "51bcf66114982e2322781d49d45494e26074028e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51bcf66114982e2322781d49d45494e26074028e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51bcf66114982e2322781d49d45494e26074028e"}], "stats": {"total": 54, "additions": 31, "deletions": 23}, "files": [{"sha": "c281bdd8aaa5689e4a499bdd35ec3eef13268111", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2f2cb195c121b8018aafd2285e6ea123a9de1af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2f2cb195c121b8018aafd2285e6ea123a9de1af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2f2cb195c121b8018aafd2285e6ea123a9de1af", "patch": "@@ -1,3 +1,7 @@\n+Fri May 15 21:40:06 1998  John Wehle  (john@feith.com)\n+\n+\t* i386.md (movdi-1, movdi): Rewrite based on SI move patterns.\n+\n Fri May 15 18:55:22 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* tree.h (BINFO_SIZE, TYPE_BINFO_SIZE): New macros."}, {"sha": "70687094b2f14f01eccdd054fa854001e17c8b30", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 27, "deletions": 23, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2f2cb195c121b8018aafd2285e6ea123a9de1af/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2f2cb195c121b8018aafd2285e6ea123a9de1af/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=d2f2cb195c121b8018aafd2285e6ea123a9de1af", "patch": "@@ -1633,36 +1633,40 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"push_operand\" \"=<,<,<,<\")\n-\t(match_operand:DI 1 \"general_operand\" \"riF,o,o,o\"))\n-   (clobber (match_scratch:SI 2 \"=X,&r,&r,X\"))\n-   (clobber (match_scratch:SI 3 \"=X,&r,X,X\"))]\n+  [(set (match_operand:DI 0 \"push_operand\" \"=<\")\n+\t(match_operand:DI 1 \"general_operand\" \"riF\"))]\n   \"\"\n-  \"*\n-{\n-  if (GET_CODE (operands[1]) != MEM)\n-    return output_move_double (operands);\n+  \"* return output_move_double (operands);\")\n \n-  else\n-    return output_move_pushmem (operands, insn, GET_MODE_SIZE (DImode), 2, 4);\n-}\")\n+(define_insn \"\"\n+  [(set (match_operand:DI 0 \"push_operand\" \"=<\")\n+\t(match_operand:DI 1 \"memory_operand\" \"o\"))]\n+  \"TARGET_PUSH_MEMORY\"\n+  \"* return output_move_pushmem (operands, insn, GET_MODE_SIZE (DImode),0,0);\")\n \n-(define_insn \"movdi\"\n-  [(set (match_operand:DI 0 \"general_operand\" \"=o,o,r,rm\")\n-\t(match_operand:DI 1 \"general_operand\" \"o,o,m,riF\"))\n-   (clobber (match_scratch:SI 2 \"=&r,&r,X,X\"))\n-   (clobber (match_scratch:SI 3 \"=&r,X,X,X\"))]\n+(define_expand \"movdi\"\n+  [(set (match_operand:DI 0 \"general_operand\" \"\")\n+\t(match_operand:DI 1 \"general_operand\" \"\"))]\n   \"\"\n-  \"*\n+  \"\n {\n-  rtx low[2], high[2], xop[6];\n-\n-  if (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\n-    return output_move_double (operands);\n-  else\n-    return output_move_memory (operands, insn, GET_MODE_SIZE (DImode), 2, 4);\n+  /* Don't generate memory->memory moves, go through a register */\n+  if (TARGET_MOVE\n+      && (reload_in_progress | reload_completed) == 0\n+      && GET_CODE (operands[0]) == MEM\n+      && GET_CODE (operands[1]) == MEM)\n+    {\n+      operands[1] = force_reg (DImode, operands[1]);\n+    }\n }\")\n \n+(define_insn \"\"\n+  [(set (match_operand:DI 0 \"general_operand\" \"=g,r\")\n+\t(match_operand:DI 1 \"general_operand\" \"riF,m\"))]\n+  \"(!TARGET_MOVE || GET_CODE (operands[0]) != MEM)\n+   || (GET_CODE (operands[1]) != MEM)\"\n+  \"* return output_move_double (operands);\")\n+\n \f\n ;;- conversion instructions\n ;;- NONE"}]}