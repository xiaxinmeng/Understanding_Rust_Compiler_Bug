{"sha": "9dc7a9da32c24233f30b6cc76381933298c2eaa9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRjN2E5ZGEzMmMyNDIzM2YzMGI2Y2M3NjM4MTkzMzI5OGMyZWFhOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2014-10-27T18:40:37Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-10-27T18:40:37Z"}, "message": "s390.c: Include rtl-iter.h.\n\ngcc/\n\t* config/s390/s390.c: Include rtl-iter.h.\n\t(check_dpu): Delete.\n\t(s390_loop_unroll_adjust): Only iterate over patterns.\n\tUse FOR_EACH_SUBRTX.\n\nFrom-SVN: r216753", "tree": {"sha": "0222e6e8180e4f43cc50b06425071998be61e182", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0222e6e8180e4f43cc50b06425071998be61e182"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9dc7a9da32c24233f30b6cc76381933298c2eaa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dc7a9da32c24233f30b6cc76381933298c2eaa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dc7a9da32c24233f30b6cc76381933298c2eaa9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dc7a9da32c24233f30b6cc76381933298c2eaa9/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3dfc96ea690917c6d15775c1189140922dd35bca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dfc96ea690917c6d15775c1189140922dd35bca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dfc96ea690917c6d15775c1189140922dd35bca"}], "stats": {"total": 32, "additions": 14, "deletions": 18}, "files": [{"sha": "534542caaf07ea8f24ee54afe34c2fd0411e4a54", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dc7a9da32c24233f30b6cc76381933298c2eaa9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dc7a9da32c24233f30b6cc76381933298c2eaa9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9dc7a9da32c24233f30b6cc76381933298c2eaa9", "patch": "@@ -1,3 +1,10 @@\n+2014-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/s390/s390.c: Include rtl-iter.h.\n+\t(check_dpu): Delete.\n+\t(s390_loop_unroll_adjust): Only iterate over patterns.\n+\tUse FOR_EACH_SUBRTX.\n+\n 2014-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/spu/spu.c: Include rtl-iter.h"}, {"sha": "e8d7395873646425c3ac5aee6abda066a53e0b29", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 7, "deletions": 18, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dc7a9da32c24233f30b6cc76381933298c2eaa9/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dc7a9da32c24233f30b6cc76381933298c2eaa9/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=9dc7a9da32c24233f30b6cc76381933298c2eaa9", "patch": "@@ -81,6 +81,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"context.h\"\n #include \"builtins.h\"\n+#include \"rtl-iter.h\"\n \n /* Define the specific costs for a given cpu.  */\n \n@@ -11756,19 +11757,6 @@ s390_sched_init (FILE *file ATTRIBUTE_UNUSED,\n   s390_sched_state = 0;\n }\n \n-/* This function checks the whole of insn X for memory references. The\n-   function always returns zero because the framework it is called\n-   from would stop recursively analyzing the insn upon a return value\n-   other than zero. The real result of this function is updating\n-   counter variable MEM_COUNT.  */\n-static int\n-check_dpu (rtx *x, unsigned *mem_count)\n-{\n-  if (*x != NULL_RTX && MEM_P (*x))\n-    (*mem_count)++;\n-  return 0;\n-}\n-\n /* This target hook implementation for TARGET_LOOP_UNROLL_ADJUST calculates\n    a new number struct loop *loop should be unrolled if tuned for cpus with\n    a built-in stride prefetcher.\n@@ -11791,12 +11779,13 @@ s390_loop_unroll_adjust (unsigned nunroll, struct loop *loop)\n \n   /* Count the number of memory references within the loop body.  */\n   bbs = get_loop_body (loop);\n+  subrtx_iterator::array_type array;\n   for (i = 0; i < loop->num_nodes; i++)\n-    {\n-      for (insn = BB_HEAD (bbs[i]); insn != BB_END (bbs[i]); insn = NEXT_INSN (insn))\n-\tif (INSN_P (insn) && INSN_CODE (insn) != -1)\n-            for_each_rtx_in_insn (&insn, (rtx_function) check_dpu, &mem_count);\n-    }\n+    FOR_BB_INSNS (bbs[i], insn)\n+      if (INSN_P (insn) && INSN_CODE (insn) != -1)\n+\tFOR_EACH_SUBRTX (iter, array, PATTERN (insn), NONCONST)\n+\t  if (MEM_P (*iter))\n+\t    mem_count += 1;\n   free (bbs);\n \n   /* Prevent division by zero, and we do not need to adjust nunroll in this case.  */"}]}