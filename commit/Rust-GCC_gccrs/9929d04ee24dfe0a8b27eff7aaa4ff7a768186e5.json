{"sha": "9929d04ee24dfe0a8b27eff7aaa4ff7a768186e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkyOWQwNGVlMjRkZmUwYThiMjdlZmY3YWFhNGZmN2E3NjgxODZlNQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-01-21T19:17:10Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-01-21T23:49:33Z"}, "message": "testsuite: Adjust cpp2a/lambda-uneval regrex\n\nBoth lambda-uneval1.C and lambda-uneval5.C test that a symbol is not\ndeclared global by looking for \"globl\" assembler directive.  The testcases\ngenerate the \"lglobl\" directive in AIX XCOFF, which is a false positive.\nThis patch restricts the regex to ignore a prepended \"l\".  The patch\nalso tightens the regex to specifically look for space, tab or period\nbetween the \"globl\" and the symbol.\n\nTested on powerpc-ibm-aix7.2.3.0 and powerpc64le-linux-gnu.\n\n\t* g++.dg/cpp2a/lambda-uneval1.C: Ignore preceding \"l\" and\n\tintervening period.\n\t* g++.dg/cpp2a/lambda-uneval5.C: Ignore preceding \"l\" and\n\texplicitly check for intervening space, tab or period.", "tree": {"sha": "7b9ec6b8b427e8067af83dc1b54d0db56ec1e7c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b9ec6b8b427e8067af83dc1b54d0db56ec1e7c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9929d04ee24dfe0a8b27eff7aaa4ff7a768186e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9929d04ee24dfe0a8b27eff7aaa4ff7a768186e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9929d04ee24dfe0a8b27eff7aaa4ff7a768186e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9929d04ee24dfe0a8b27eff7aaa4ff7a768186e5/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68ba1039c7daf0485b167fe199ed7e8031158091", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68ba1039c7daf0485b167fe199ed7e8031158091", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68ba1039c7daf0485b167fe199ed7e8031158091"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f4505b6957ecdcb0c406731abb6138bd21032e31", "filename": "gcc/testsuite/g++.dg/cpp2a/lambda-uneval1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9929d04ee24dfe0a8b27eff7aaa4ff7a768186e5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-uneval1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9929d04ee24dfe0a8b27eff7aaa4ff7a768186e5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-uneval1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-uneval1.C?ref=9929d04ee24dfe0a8b27eff7aaa4ff7a768186e5", "patch": "@@ -2,7 +2,7 @@\n \n typedef decltype([]{}) C; // the closure type has no name for linkage purposes\n \n-// { dg-final { scan-assembler-not \"globl\\[ \\t]*_Z1f\" } }\n+// { dg-final { scan-assembler-not \"\\[^l\\]globl\\[ \\t\\.\\]*_Z1f\" } }\n // { dg-final { scan-assembler-not \"_Z1f1C\" } }\n void f(C) {}\n "}, {"sha": "1e16679311c6c4ca9aa5e23bdb8ca8908f96aa4c", "filename": "gcc/testsuite/g++.dg/cpp2a/lambda-uneval5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9929d04ee24dfe0a8b27eff7aaa4ff7a768186e5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-uneval5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9929d04ee24dfe0a8b27eff7aaa4ff7a768186e5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-uneval5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-uneval5.C?ref=9929d04ee24dfe0a8b27eff7aaa4ff7a768186e5", "patch": "@@ -2,4 +2,4 @@\n \n using L = decltype([]{ });\n void f(L) { }\n-// { dg-final { scan-assembler-not \"globl.*_Z1f\" } }\n+// { dg-final { scan-assembler-not \"\\[^l\\]globl\\[ \\t\\.\\]*_Z1f\" } }"}]}