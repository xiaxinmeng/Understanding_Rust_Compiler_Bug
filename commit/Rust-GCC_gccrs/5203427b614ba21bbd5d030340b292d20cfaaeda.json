{"sha": "5203427b614ba21bbd5d030340b292d20cfaaeda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIwMzQyN2I2MTRiYTIxYmJkNWQwMzAzNDBiMjkyZDIwY2ZhYWVkYQ==", "commit": {"author": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1992-03-27T00:24:06Z"}, "committer": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1992-03-27T00:24:06Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r593", "tree": {"sha": "85aa7e62a12a4a28e51155ab572af35793c41962", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85aa7e62a12a4a28e51155ab572af35793c41962"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5203427b614ba21bbd5d030340b292d20cfaaeda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5203427b614ba21bbd5d030340b292d20cfaaeda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5203427b614ba21bbd5d030340b292d20cfaaeda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5203427b614ba21bbd5d030340b292d20cfaaeda/comments", "author": null, "committer": null, "parents": [{"sha": "526fef40af059bfd6e45ccdb66fbae12f49ed032", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/526fef40af059bfd6e45ccdb66fbae12f49ed032", "html_url": "https://github.com/Rust-GCC/gccrs/commit/526fef40af059bfd6e45ccdb66fbae12f49ed032"}], "stats": {"total": 40, "additions": 24, "deletions": 16}, "files": [{"sha": "ed6d27d8fce41d7e6a2b09f5451fdf996418bcf8", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 24, "deletions": 16, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5203427b614ba21bbd5d030340b292d20cfaaeda/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5203427b614ba21bbd5d030340b292d20cfaaeda/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=5203427b614ba21bbd5d030340b292d20cfaaeda", "patch": "@@ -999,59 +999,67 @@\n ;; part.\n \n (define_expand \"fixuns_truncdfsi2\"\n-  [(parallel [(set (match_dup 3)\n-\t\t   (fix:DI\n-\t\t    (fix:DF (match_operand:DF 1 \"register_operand\" \"\"))))\n+  [(set (match_dup 5)\n+\t(match_operand:DF 1 \"register_operand\" \"\"))\n+   (parallel [(set (match_dup 3)\n+\t\t   (fix:DI (fix:DF (match_dup 5))))\n \t      (clobber (match_scratch:HI 2 \"\"))\n-\t      (clobber (match_dup 1))])\n+\t      (clobber (match_dup 5))])\n    (set (match_operand:SI 0 \"general_operand\" \"\")\n \t(match_dup 4))]\n   \"TARGET_80387\"\n   \"\n {\n   operands[3] = gen_reg_rtx (DImode);\n   operands[4] = gen_lowpart (SImode, operands[3]);\n+  operands[5] = gen_reg_rtx (DFmode);\n }\")\n \n (define_expand \"fixuns_truncsfsi2\"\n-  [(parallel [(set (match_dup 3)\n-\t\t   (fix:DI\n-\t\t    (fix:SF (match_operand:SF 1 \"register_operand\" \"\"))))\n+  [(set (match_dup 5)\n+\t(match_operand:SF 1 \"register_operand\" \"\"))\n+   (parallel [(set (match_dup 3)\n+\t\t   (fix:DI (fix:SF (match_dup 5))))\n \t      (clobber (match_scratch:HI 2 \"\"))\n-\t      (clobber (match_dup 1))])\n+\t      (clobber (match_dup 5))])\n    (set (match_operand:SI 0 \"general_operand\" \"\")\n \t(match_dup 4))]\n   \"TARGET_80387\"\n   \"\n {\n   operands[3] = gen_reg_rtx (DImode);\n   operands[4] = gen_lowpart (SImode, operands[3]);\n+  operands[5] = gen_reg_rtx (SFmode);\n }\")\n \n ;; Signed conversion to DImode.\n \n (define_expand \"fix_truncdfdi2\"\n-  [(parallel [(set (match_operand:DI 0 \"general_operand\" \"\")\n-\t\t   (fix:DI\n-\t\t    (fix:DF (match_operand:DF 1 \"register_operand\" \"\"))))\n+  [(set (match_dup 3)\n+\t(match_operand:DF 1 \"register_operand\" \"\"))\n+   (parallel [(set (match_operand:DI 0 \"general_operand\" \"\")\n+\t\t   (fix:DI (fix:DF (match_dup 3))))\n \t      (clobber (match_scratch:HI 2 \"\"))\n-\t      (clobber (match_dup 1))])]\n+\t      (clobber (match_dup 3))])]\n   \"TARGET_80387\"\n   \"\n {\n   operands[1] = copy_to_mode_reg (DFmode, operands[1]);\n+  operands[3] = gen_reg_rtx (DFmode);\n }\")\n \n (define_expand \"fix_truncsfdi2\"\n-  [(parallel [(set (match_operand:DI 0 \"general_operand\" \"\")\n-\t\t   (fix:DI\n-\t\t    (fix:SF (match_operand:SF 1 \"register_operand\" \"\"))))\n+  [(set (match_dup 3)\n+\t(match_operand:SF 1 \"register_operand\" \"\"))\n+   (parallel [(set (match_operand:DI 0 \"general_operand\" \"\")\n+\t\t   (fix:DI (fix:SF (match_dup 3))))\n \t      (clobber (match_scratch:HI 2 \"\"))\n-\t      (clobber (match_dup 1))])]\n+\t      (clobber (match_dup 3))])]\n   \"TARGET_80387\"\n   \"\n {\n   operands[1] = copy_to_mode_reg (SFmode, operands[1]);\n+  operands[3] = gen_reg_rtx (SFmode);\n }\")\n \n ;; These match a signed conversion of either DFmode or SFmode to DImode."}]}