{"sha": "af58bf3dd274f03235f934dc9d714d1901e66eb5", "node_id": "C_kwDOANBUbNoAKGFmNThiZjNkZDI3NGYwMzIzNWY5MzRkYzlkNzE0ZDE5MDFlNjZlYjU", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2023-05-08T13:52:05Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-05-08T14:53:18Z"}, "message": "gccrs: we can only return unit-type when the ABI is non C\n\ngcc/rust/ChangeLog:\n\n\t* backend/rust-compile-type.cc (TyTyResolveCompile::visit): add filter\n\nSigned-off-by: Philip Herron <herron.philip@googlemail.com>", "tree": {"sha": "153cfb5b637a416b1e6046b9632fe2533cbc4496", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/153cfb5b637a416b1e6046b9632fe2533cbc4496"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af58bf3dd274f03235f934dc9d714d1901e66eb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af58bf3dd274f03235f934dc9d714d1901e66eb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af58bf3dd274f03235f934dc9d714d1901e66eb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af58bf3dd274f03235f934dc9d714d1901e66eb5/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea597e73da52a4292986b5267fc535006ae4c343", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea597e73da52a4292986b5267fc535006ae4c343", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea597e73da52a4292986b5267fc535006ae4c343"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "655f6e6fd57d4e05878b0816e3d1624902b241b0", "filename": "gcc/rust/backend/rust-compile-type.cc", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af58bf3dd274f03235f934dc9d714d1901e66eb5/gcc%2Frust%2Fbackend%2Frust-compile-type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af58bf3dd274f03235f934dc9d714d1901e66eb5/gcc%2Frust%2Fbackend%2Frust-compile-type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-type.cc?ref=af58bf3dd274f03235f934dc9d714d1901e66eb5", "patch": "@@ -177,11 +177,20 @@ TyTyResolveCompile::visit (const TyTy::FnType &type)\n   std::vector<Backend::typed_identifier> parameters;\n   std::vector<Backend::typed_identifier> results;\n \n-  auto hir_type = type.get_return_type ();\n-  auto ret = TyTyResolveCompile::compile (ctx, hir_type, trait_object_mode);\n-  Location return_type_locus\n-    = ctx->get_mappings ()->lookup_location (hir_type->get_ref ());\n-  results.push_back (Backend::typed_identifier (\"_\", ret, return_type_locus));\n+  // we can only return unit-type if its not the C ABI because it will expect\n+  // void\n+  auto hir_type = type.get_return_type ()->destructure ();\n+  bool return_is_unit = hir_type->is_unit ();\n+  bool is_c_abi = type.get_abi () == ABI::C;\n+  bool should_be_void = is_c_abi && return_is_unit;\n+  if (!should_be_void)\n+    {\n+      auto ret = TyTyResolveCompile::compile (ctx, hir_type, trait_object_mode);\n+      Location return_type_locus\n+\t= ctx->get_mappings ()->lookup_location (hir_type->get_ref ());\n+      results.push_back (\n+\tBackend::typed_identifier (\"_\", ret, return_type_locus));\n+    }\n \n   for (auto &param_pair : type.get_params ())\n     {"}]}