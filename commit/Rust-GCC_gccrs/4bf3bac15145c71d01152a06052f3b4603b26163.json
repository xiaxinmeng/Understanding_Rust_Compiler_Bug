{"sha": "4bf3bac15145c71d01152a06052f3b4603b26163", "node_id": "C_kwDOANBUbNoAKDRiZjNiYWMxNTE0NWM3MWQwMTE1MmEwNjA1MmYzYjQ2MDNiMjYxNjM", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-02-24T00:16:22Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-02-24T00:16:22Z"}, "message": "Daily bump.", "tree": {"sha": "a7b87c95d0ff4d78756e954a7727b41280c5bc64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7b87c95d0ff4d78756e954a7727b41280c5bc64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bf3bac15145c71d01152a06052f3b4603b26163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bf3bac15145c71d01152a06052f3b4603b26163", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bf3bac15145c71d01152a06052f3b4603b26163", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bf3bac15145c71d01152a06052f3b4603b26163/comments", "author": null, "committer": null, "parents": [{"sha": "aee1adf2cdc1cf4e116e5c05b6e7c92b0fbb264b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aee1adf2cdc1cf4e116e5c05b6e7c92b0fbb264b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aee1adf2cdc1cf4e116e5c05b6e7c92b0fbb264b"}], "stats": {"total": 126, "additions": 125, "deletions": 1}, "files": [{"sha": "bf1e5c0e60ff59f365d4dd83260f7cee1c2f6940", "filename": "gcc/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bf3bac15145c71d01152a06052f3b4603b26163/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bf3bac15145c71d01152a06052f3b4603b26163/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4bf3bac15145c71d01152a06052f3b4603b26163", "patch": "@@ -1,3 +1,46 @@\n+2022-02-23  Richard Biener  <rguenther@suse.de>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/104644\n+\t* doc/match-and-simplify.texi: Amend ! documentation.\n+\t* genmatch.cc (expr::gen_transform): Code-generate ! support\n+\tfor GENERIC.\n+\t(parser::parse_expr): Allow ! for GENERIC.\n+\t* match.pd (cmp (bswap @0) INTEGER_CST@1): Use ! modifier on\n+\tbswap.\n+\n+2022-02-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/101636\n+\t* tree-vect-slp.cc (vect_print_slp_tree): Dump the\n+\tvector type of the node.\n+\t(vect_slp_analyze_operations): Make sure the CTOR\n+\tis vectorized with an expected type.\n+\t(vectorize_slp_instance_root_stmt): Revert r10-5979 fix.\n+\n+2022-02-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/104633\n+\t* gimple-warn-recursion.cc (pass_warn_recursion::find_function_exit):\n+\tDon't warn about calls to corresponding builtin from extern inline\n+\tgnu_inline wrappers.\n+\n+2022-02-23  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR target/104489\n+\t* config/nvptx/nvptx.md (*movhf_insn): Add subregs_ok attribute.\n+\n+2022-02-23  Christophe Lyon  <christophe.lyon@arm.com>\n+\n+\tPR target/100757\n+\tPR target/101325\n+\t* config/arm/vfp.md (thumb2_movhi_vfp, thumb2_movhi_fp16): Fix\n+\ttypo.\n+\n+2022-02-23  Cui,Lili  <lili.cui@intel.com>\n+\n+\t* doc/invoke.texi: Update documents for Intel architectures.\n+\n 2022-02-22  Roger Sayle  <roger@nextmovesoftware.com>\n \n \t* config/i386/i386-expand.cc (ix86_expand_cmpxchg_loop): Restore"}, {"sha": "586e0feb81882a86f3ec7094426f77cbf51e90c7", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bf3bac15145c71d01152a06052f3b4603b26163/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bf3bac15145c71d01152a06052f3b4603b26163/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=4bf3bac15145c71d01152a06052f3b4603b26163", "patch": "@@ -1 +1 @@\n-20220223\n+20220224"}, {"sha": "2ebc551b63a9ae2e5f8ad5c2c2e27b6af79eec93", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bf3bac15145c71d01152a06052f3b4603b26163/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bf3bac15145c71d01152a06052f3b4603b26163/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=4bf3bac15145c71d01152a06052f3b4603b26163", "patch": "@@ -1,3 +1,34 @@\n+2022-02-23  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104434\n+\t* analyzer.h (class const_fn_result_svalue): New decl.\n+\t* region-model-impl-calls.cc (call_details::get_manager): New.\n+\t* region-model-manager.cc\n+\t(region_model_manager::get_or_create_const_fn_result_svalue): New.\n+\t(region_model_manager::log_stats): Log\n+\tm_const_fn_result_values_map.\n+\t* region-model.cc (const_fn_p): New.\n+\t(maybe_get_const_fn_result): New.\n+\t(region_model::on_call_pre): Handle fndecls with\n+\t__attribute__((const)) by calling the above rather than making\n+\ta conjured_svalue.\n+\t* region-model.h (visitor::visit_const_fn_result_svalue): New.\n+\t(region_model_manager::get_or_create_const_fn_result_svalue): New\n+\tdecl.\n+\t(region_model_manager::const_fn_result_values_map_t): New typedef.\n+\t(region_model_manager::m_const_fn_result_values_map): New field.\n+\t(call_details::get_manager): New decl.\n+\t* svalue.cc (svalue::cmp_ptr): Handle SK_CONST_FN_RESULT.\n+\t(const_fn_result_svalue::dump_to_pp): New.\n+\t(const_fn_result_svalue::dump_input): New.\n+\t(const_fn_result_svalue::accept): New.\n+\t* svalue.h (enum svalue_kind): Add SK_CONST_FN_RESULT.\n+\t(svalue::dyn_cast_const_fn_result_svalue): New.\n+\t(class const_fn_result_svalue): New.\n+\t(is_a_helper <const const_fn_result_svalue *>::test): New.\n+\t(template <> struct default_hash_traits<const_fn_result_svalue::key_t>):\n+\tNew.\n+\n 2022-02-17  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/104576"}, {"sha": "b17735585135c8e0ef48c3951ceb0a5f33d002a6", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bf3bac15145c71d01152a06052f3b4603b26163/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bf3bac15145c71d01152a06052f3b4603b26163/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=4bf3bac15145c71d01152a06052f3b4603b26163", "patch": "@@ -1,3 +1,9 @@\n+2022-02-23  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-parser.cc (c_parser_parse_gimple_body): Diagnose\n+\tSSA names without definition.\n+\t(c_parser_gimple_declaration): Handle pointer typed SSA names.\n+\n 2022-02-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/104532"}, {"sha": "8bfd8730fa07e5f716f107fd03519789bb9f7785", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bf3bac15145c71d01152a06052f3b4603b26163/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bf3bac15145c71d01152a06052f3b4603b26163/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4bf3bac15145c71d01152a06052f3b4603b26163", "patch": "@@ -1,3 +1,47 @@\n+2022-02-23  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104434\n+\t* gcc.dg/analyzer/attr-const-1.c: New test.\n+\t* gcc.dg/analyzer/attr-const-2.c: New test.\n+\t* gcc.dg/analyzer/attr-const-3.c: New test.\n+\t* gcc.dg/analyzer/pr104434-const.c: New test.\n+\t* gcc.dg/analyzer/pr104434-nonconst.c: New test.\n+\t* gcc.dg/analyzer/pr104434.h: New test.\n+\n+2022-02-23  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/79493\n+\t* g++.dg/diagnostic/undeclared1.C: New test.\n+\n+2022-02-23  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/70077\n+\t* g++.dg/cpp0x/noexcept76.C: New test.\n+\n+2022-02-23  Richard Biener  <rguenther@suse.de>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/104644\n+\t* gcc.dg/pr104644.c: New test.\n+\n+2022-02-23  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/gimplefe-49.c: New testcase.\n+\t* gcc.dg/gimplefe-error-13.c: Likewise.\n+\n+2022-02-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/101636\n+\t* gcc.target/i386/pr101636.c: New testcase.\n+\t* c-c++-common/torture/pr101636.c: Likewise.\n+\n+2022-02-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/104633\n+\t* gcc.dg/Winfinite-recursion-3.c: New test.\n+\t* gcc.dg/Winfinite-recursion-4.c: New test.\n+\t* gcc.dg/Winfinite-recursion-5.c: New test.\n+\n 2022-02-22  Paul A. Clarke  <pc@us.ibm.com>\n \n \t* g++.dg/ext/altivec-1.C: Move to g++.target/powerpc, adjust dg"}]}