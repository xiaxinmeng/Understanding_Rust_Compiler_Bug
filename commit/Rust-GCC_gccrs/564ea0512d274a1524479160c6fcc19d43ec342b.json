{"sha": "564ea0512d274a1524479160c6fcc19d43ec342b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY0ZWEwNTEyZDI3NGExNTI0NDc5MTYwYzZmY2MxOWQ0M2VjMzQyYg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1999-02-12T13:31:48Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1999-02-12T13:31:48Z"}, "message": "Fix linux-x-cygwin build failure with readline.\n\n\t* stmt.c (expand_return): Return if optimize_tail_recursion succeeded.\n\t(optimize_tail_recursion): Change return type from void to int.\n\tAdd return statements.\n\t* tree.h (optimize_tail_recursion): Change prototype to match.\n\nFrom-SVN: r25170", "tree": {"sha": "7c82effa40734a355a02edf3747e67c31c5b7128", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c82effa40734a355a02edf3747e67c31c5b7128"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/564ea0512d274a1524479160c6fcc19d43ec342b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/564ea0512d274a1524479160c6fcc19d43ec342b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/564ea0512d274a1524479160c6fcc19d43ec342b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/564ea0512d274a1524479160c6fcc19d43ec342b/comments", "author": null, "committer": null, "parents": [{"sha": "22505ad8f35c50ee96e5a642ea54e2de39ea2e52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22505ad8f35c50ee96e5a642ea54e2de39ea2e52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22505ad8f35c50ee96e5a642ea54e2de39ea2e52"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "507c2e56a8ff74d301ecd338d0674af6c062f2a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564ea0512d274a1524479160c6fcc19d43ec342b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564ea0512d274a1524479160c6fcc19d43ec342b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=564ea0512d274a1524479160c6fcc19d43ec342b", "patch": "@@ -1,3 +1,10 @@\n+Fri Feb 12 13:06:28 1999  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* stmt.c (expand_return): Return if optimize_tail_recursion succeeded.\n+\t(optimize_tail_recursion): Change return type from void to int.\n+\tAdd return statements.\n+\t* tree.h (optimize_tail_recursion): Change prototype to match.\n+\n Fri Feb 12 21:09:51 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* reload.c (find_reloads_subreg_address): New function, broken out of"}, {"sha": "0bcc78c3dcb253c38f05cbe77f50d944e21f0387", "filename": "gcc/stmt.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564ea0512d274a1524479160c6fcc19d43ec342b/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564ea0512d274a1524479160c6fcc19d43ec342b/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=564ea0512d274a1524479160c6fcc19d43ec342b", "patch": "@@ -2632,7 +2632,8 @@ expand_return (retval)\n     }\n \n   /* Attempt to optimize the call if it is tail recursive.  */\n-  optimize_tail_recursion (retval_rhs, last_insn);\n+  if (optimize_tail_recursion (retval_rhs, last_insn))\n+    return;\n \n #ifdef HAVE_return\n   /* This optimization is safe if there are local cleanups\n@@ -2840,12 +2841,13 @@ drop_through_at_end_p ()\n \f\n /* Test CALL_EXPR to determine if it is a potential tail recursion call\n    and emit code to optimize the tail recursion.  LAST_INSN indicates where\n-   to place the jump to the tail recursion label.\n+   to place the jump to the tail recursion label.  Return TRUE if the\n+   call was optimized into a goto.\n \n    This is only used by expand_return, but expand_call is expected to\n    use it soon.  */\n \n-void\n+int\n optimize_tail_recursion (call_expr, last_insn)\n      tree call_expr;\n      rtx last_insn;\n@@ -2874,7 +2876,10 @@ optimize_tail_recursion (call_expr, last_insn)\n       emit_queue ();\n       expand_goto_internal (NULL_TREE, tail_recursion_label, last_insn);\n       emit_barrier ();\n+      return 1;\n     }\n+\n+  return 0;\n }\n \n /* Emit code to alter this function's formal parms for a tail-recursive call."}, {"sha": "2f1d8e6130f9eea43b4c5f701a87541f194d1d0d", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564ea0512d274a1524479160c6fcc19d43ec342b/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564ea0512d274a1524479160c6fcc19d43ec342b/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=564ea0512d274a1524479160c6fcc19d43ec342b", "patch": "@@ -1933,7 +1933,7 @@ extern int expand_exit_something\t\tPROTO((void));\n \n extern void expand_null_return\t\t\tPROTO((void));\n extern void expand_return\t\t\tPROTO((tree));\n-extern void optimize_tail_recursion\t\tPROTO((tree, struct rtx_def *));\n+extern int optimize_tail_recursion\t\tPROTO((tree, struct rtx_def *));\n extern void expand_start_bindings\t\tPROTO((int));\n extern void expand_end_bindings\t\t\tPROTO((tree, int, int));\n extern void start_cleanup_deferral\t\tPROTO((void));"}]}