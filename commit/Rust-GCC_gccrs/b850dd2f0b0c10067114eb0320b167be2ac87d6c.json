{"sha": "b850dd2f0b0c10067114eb0320b167be2ac87d6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg1MGRkMmYwYjBjMTAwNjcxMTRlYjAzMjBiMTY3YmUyYWM4N2Q2Yw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-10-07T14:09:05Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-10-07T14:09:05Z"}, "message": "re PR sanitizer/67867 (UBSan bootstrap fails with error: \u2018otype\u2019 may be used uninitialized in this function [-Werror=maybe-uninitialized])\n\n\tPR sanitizer/67867\n\t* search.c (accessible_p): Initialize OTYPE to NULL_TREE.\n\nFrom-SVN: r228569", "tree": {"sha": "36e65db888823805e4724e7395b5e54da6071099", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36e65db888823805e4724e7395b5e54da6071099"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b850dd2f0b0c10067114eb0320b167be2ac87d6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b850dd2f0b0c10067114eb0320b167be2ac87d6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b850dd2f0b0c10067114eb0320b167be2ac87d6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b850dd2f0b0c10067114eb0320b167be2ac87d6c/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f3ccbc8e54b83e0d068eec310915892440a97fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f3ccbc8e54b83e0d068eec310915892440a97fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f3ccbc8e54b83e0d068eec310915892440a97fc"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "d465ef6a5e2e30ee611b7e9f7cfd4a0a869ffc0d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b850dd2f0b0c10067114eb0320b167be2ac87d6c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b850dd2f0b0c10067114eb0320b167be2ac87d6c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b850dd2f0b0c10067114eb0320b167be2ac87d6c", "patch": "@@ -1,3 +1,8 @@\n+2015-10-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/67867\n+\t* search.c (accessible_p): Initialize OTYPE to NULL_TREE.\n+\n 2015-10-07  Marek Polacek  <polacek@redhat.com>\n \n \t* cp-gimplify.c (genericize_if_stmt): Use protected_set_expr_location."}, {"sha": "56bb266da310319721a8361d1820a0b37a3e541a", "filename": "gcc/cp/search.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b850dd2f0b0c10067114eb0320b167be2ac87d6c/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b850dd2f0b0c10067114eb0320b167be2ac87d6c/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=b850dd2f0b0c10067114eb0320b167be2ac87d6c", "patch": "@@ -961,7 +961,7 @@ accessible_p (tree type, tree decl, bool consider_local_p)\n       && (!processing_template_parmlist || processing_template_decl > 1))\n     return 1;\n \n-  tree otype;\n+  tree otype = NULL_TREE;\n   if (!TYPE_P (type))\n     {\n       /* When accessing a non-static member, the most derived type in the"}]}