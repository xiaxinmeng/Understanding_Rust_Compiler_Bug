{"sha": "f225b813e4d1d337164b72361f23306c1b28d550", "node_id": "C_kwDOANBUbNoAKGYyMjViODEzZTRkMWQzMzcxNjRiNzIzNjFmMjMzMDZjMWIyOGQ1NTA", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-11-11T00:17:22Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-11-11T00:17:22Z"}, "message": "Daily bump.", "tree": {"sha": "88100c831be977723e0dc9d5f9c1deb3c3f4c1ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88100c831be977723e0dc9d5f9c1deb3c3f4c1ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f225b813e4d1d337164b72361f23306c1b28d550", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f225b813e4d1d337164b72361f23306c1b28d550", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f225b813e4d1d337164b72361f23306c1b28d550", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f225b813e4d1d337164b72361f23306c1b28d550/comments", "author": null, "committer": null, "parents": [{"sha": "5c6546ca7d8cab1f1c129f5b55f709e2ceee0f94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c6546ca7d8cab1f1c129f5b55f709e2ceee0f94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c6546ca7d8cab1f1c129f5b55f709e2ceee0f94"}], "stats": {"total": 286, "additions": 285, "deletions": 1}, "files": [{"sha": "c664c89741133ff45ef82eb76844955a2cdfb84f", "filename": "ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f225b813e4d1d337164b72361f23306c1b28d550/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f225b813e4d1d337164b72361f23306c1b28d550/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=f225b813e4d1d337164b72361f23306c1b28d550", "patch": "@@ -1,3 +1,14 @@\n+2022-11-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/baseconf.py: Modernize by using pathlib.\n+\n+2022-11-10  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* doc/baseconf.py: Inject dirname(__file__)/'modules' to path\n+\tinstead of just ``.''.\n+\t* doc/gcc_sphinx.py: Moved to...\n+\t* doc/modules/gcc_sphinx.py: ...here.\n+\n 2022-11-09  Martin Liska  <mliska@suse.cz>\n \n \t* configure.ac: Use new install URL."}, {"sha": "e314cfae70e0438f604ef89f9abf095258fabe5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f225b813e4d1d337164b72361f23306c1b28d550/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f225b813e4d1d337164b72361f23306c1b28d550/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f225b813e4d1d337164b72361f23306c1b28d550", "patch": "@@ -1,3 +1,76 @@\n+2022-11-10  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/99671\n+\t* tristate.h (tristate::is_unknown): New.\n+\n+2022-11-10  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* doc/gcc/gcc-command-options/options-that-control-static-analysis.rst:\n+\tAdd -Wanalyzer-deref-before-check.\n+\n+2022-11-10  Marek Polacek  <polacek@redhat.com>\n+\n+\t* doc/gcc/gcc-command-options/options-controlling-c++-dialect.rst:\n+\tExtend the description of -Wdangling-reference.\n+\n+2022-11-10  Andrew Pinski  <apinski@marvell.com>\n+\n+\t* config/bfin/bfin.h (SLOW_SHORT_ACCESS): Delete.\n+\t* config/i386/i386.h (SLOW_SHORT_ACCESS): Delete.\n+\t* system.h: Poison SLOW_SHORT_ACCESS\n+\n+2022-11-10  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range.cc (frange::set_nonnegative): Remove NAN sign handling.\n+\t(range_tests_signed_zeros): Adjust test.\n+\n+2022-11-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84646\n+\t* tree-ssa-forwprop.cc (pass_forwprop::execute): Improve\n+\tcopy propagation across PHIs.\n+\n+2022-11-10  Philipp Tomsich  <philipp.tomsich@vrull.eu>\n+\n+\t* config/riscv/riscv-cores.def (RISCV_TUNE): Update\n+\tsifive-7-series to point to the sifive_7 pipeline description.\n+\n+2022-11-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84646\n+\t* tree-ssa-ccp.cc (set_lattice_value): Make sure we\n+\tallow a const -> copy transition and avoid using meet\n+\tin that case.\n+\n+2022-11-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/cpp/conf.py: Add newline at last line.\n+\t* doc/cppinternals/conf.py: Add newline at last line.\n+\t* doc/gcc/conf.py: Add newline at last line.\n+\t* doc/gccint/conf.py: Add newline at last line.\n+\t* doc/install/conf.py: Add newline at last line.\n+\n+2022-11-10  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-loop-unswitch.cc (init_loop_unswitch_info): First collect\n+\tcandidates and determine the outermost loop to unswitch.\n+\t(tree_ssa_unswitch_loops): First perform all guard hoisting,\n+\tthen perform unswitching on innermost loop predicates.\n+\t(find_unswitching_predicates_for_bb): Keep track of the\n+\toutermost loop to unswitch.\n+\t(evaluate_bbs): Adjust exit test.\n+\t(tree_unswitch_single_loop): Dump whether we unswitched an outer\n+\tloop.\n+\t(tree_unswitch_loop): Remove assert we unswitch only innermost\n+\tloops.\n+\n+2022-11-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/107585\n+\tPR target/107546\n+\t* config/i386/i386-expand.cc (ix86_expand_int_sse_cmp): Use\n+\tgen_int_mode rather than GEN_INT.\n+\n 2022-11-09  Martin Liska  <mliska@suse.cz>\n \t    Sinan  <sinan.lin@linux.alibaba.com>\n "}, {"sha": "361ef5a71d917d017f6c3cf3ca1c511c395a3ad8", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f225b813e4d1d337164b72361f23306c1b28d550/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f225b813e4d1d337164b72361f23306c1b28d550/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=f225b813e4d1d337164b72361f23306c1b28d550", "patch": "@@ -1 +1 @@\n-20221110\n+20221111"}, {"sha": "99dbe7c95f4ff28f58835c4aabde0f60e036d92f", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f225b813e4d1d337164b72361f23306c1b28d550/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f225b813e4d1d337164b72361f23306c1b28d550/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=f225b813e4d1d337164b72361f23306c1b28d550", "patch": "@@ -1,3 +1,52 @@\n+2022-11-10  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/99671\n+\t* analyzer.opt (Wanalyzer-deref-before-check): New warning.\n+\t* diagnostic-manager.cc\n+\t(null_assignment_sm_context::set_next_state): Only add state\n+\tchange events for transition to \"null\" state.\n+\t(null_assignment_sm_context::is_transition_to_null): New.\n+\t* engine.cc (impl_region_model_context::on_pop_frame): New.\n+\t* exploded-graph.h (impl_region_model_context::on_pop_frame): New\n+\tdecl.\n+\t* program-state.cc (sm_state_map::clear_any_state): New.\n+\t(sm_state_map::can_merge_with_p): New.\n+\t(program_state::can_merge_with_p): Replace requirement that\n+\tsm-states be equal in favor of an attempt to merge them.\n+\t* program-state.h (sm_state_map::clear_any_state): New decl.\n+\t(sm_state_map::can_merge_with_p): New decl.\n+\t* region-model.cc (region_model::eval_condition): Make const.\n+\t(region_model::pop_frame): Call ctxt->on_pop_frame.\n+\t* region-model.h (region_model::eval_condition): Make const.\n+\t(region_model_context::on_pop_frame): New vfunc.\n+\t(noop_region_model_context::on_pop_frame): New.\n+\t(region_model_context_decorator::on_pop_frame): New.\n+\t* sm-malloc.cc (enum resource_state): Add RS_ASSUMED_NON_NULL.\n+\t(allocation_state::dump_to_pp): Drop \"final\".\n+\t(struct assumed_non_null_state): New subclass.\n+\t(malloc_state_machine::m_assumed_non_null): New.\n+\t(assumed_non_null_p): New.\n+\t(class deref_before_check): New.\n+\t(assumed_non_null_state::dump_to_pp): New.\n+\t(malloc_state_machine::get_or_create_assumed_non_null_state_for_frame):\n+\tNew.\n+\t(malloc_state_machine::maybe_assume_non_null): New.\n+\t(malloc_state_machine::on_stmt): Transition from start state to\n+\t\"assumed-non-null\" state for pointers passed to\n+\t__attribute__((nonnull)) arguments, and for pointers explicitly\n+\tdereferenced.  Call maybe_complain_about_deref_before_check for\n+\tpointers explicitly compared against NULL.\n+\t(malloc_state_machine::maybe_complain_about_deref_before_check):\n+\tNew.\n+\t(malloc_state_machine::on_deallocator_call): Also transition\n+\t\"assumed-non-null\" states to \"freed\".\n+\t(malloc_state_machine::on_pop_frame): New.\n+\t(malloc_state_machine::maybe_get_merged_states_nonequal): New.\n+\t* sm-malloc.dot: Update for changes to sm-malloc.cc.\n+\t* sm.h (state_machine::on_pop_frame): New.\n+\t(state_machine::maybe_get_merged_state): New.\n+\t(state_machine::maybe_get_merged_states_nonequal): New.\n+\n 2022-11-09  David Malcolm  <dmalcolm@redhat.com>\n \n \t* checker-path.cc (checker_event::debug): New."}, {"sha": "82c47d29c43fc55594640f3a992448b076adf1a9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f225b813e4d1d337164b72361f23306c1b28d550/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f225b813e4d1d337164b72361f23306c1b28d550/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f225b813e4d1d337164b72361f23306c1b28d550", "patch": "@@ -1,3 +1,11 @@\n+2022-11-10  Marek Polacek  <polacek@redhat.com>\n+\n+\t* call.cc (std_pair_ref_ref_p): New.\n+\t(do_warn_dangling_reference): Also warn when the function returns\n+\tstd::pair<const T&, const T&>.  Recurse into TARGET_EXPR_INITIAL.\n+\t(maybe_warn_dangling_reference): Don't return early if we're\n+\tinitializing a std_pair_ref_ref_p.\n+\n 2022-11-09  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tree.cc (handle_carries_dependency_attribute): New function."}, {"sha": "774a3ffbc5e83755238f91434ae5660c49354c19", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f225b813e4d1d337164b72361f23306c1b28d550/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f225b813e4d1d337164b72361f23306c1b28d550/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=f225b813e4d1d337164b72361f23306c1b28d550", "patch": "@@ -1,3 +1,7 @@\n+2022-11-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/conf.py: Add newline at last line.\n+\n 2022-11-09  Martin Liska  <mliska@suse.cz>\n \n \t* doc/copyright.rst:"}, {"sha": "9ae909b2494eb67bdf9b8d5f1405f16e0c3f6db2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f225b813e4d1d337164b72361f23306c1b28d550/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f225b813e4d1d337164b72361f23306c1b28d550/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f225b813e4d1d337164b72361f23306c1b28d550", "patch": "@@ -1,3 +1,80 @@\n+2022-11-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/gfortran/intrinsic-procedures/abs.rst: Move label directly before title.\n+\t* doc/gfortran/intrinsic-procedures/acos.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/acosd.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/acosh.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/aimag.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/aint.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/anint.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/asin.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/asind.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/asinh.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/atan.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/atan2.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/atan2d.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/atand.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/atanh.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/besselj0.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/besselj1.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/besseljn.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/bessely0.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/bessely1.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/besselyn.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/btest.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/char.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/conjg.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/cos.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/cosd.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/cosh.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/cotan.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/cotand.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/dim.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/dprod.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/erf.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/erfc.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/exp.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/gamma.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/iand.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/ibclr.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/ibits.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/ibset.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/ichar.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/ieor.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/index.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/int.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/ior.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/ishft.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/ishftc.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/len.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/lge.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/lgt.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/lle.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/llt.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/log.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/log10.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/loggamma.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/max.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/min.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/mod.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/mvbits.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/nint.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/not.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/real.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/sign.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/sin.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/sind.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/sinh.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/sqrt.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/tan.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/tand.rst: Likewise.\n+\t* doc/gfortran/intrinsic-procedures/tanh.rst: Likewise.\n+\n+2022-11-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/gfc-internals/conf.py: Add newline at last line.\n+\t* doc/gfortran/conf.py: Add newline at last line.\n+\n 2022-11-09  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/107559"}, {"sha": "c18f9845008927527c470cb0983de084582302da", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f225b813e4d1d337164b72361f23306c1b28d550/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f225b813e4d1d337164b72361f23306c1b28d550/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=f225b813e4d1d337164b72361f23306c1b28d550", "patch": "@@ -1,3 +1,7 @@\n+2022-11-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/conf.py: Add newline at last line.\n+\n 2022-11-10  Ian Lance Taylor  <iant@golang.org>\n \n \tPR target/107581"}, {"sha": "71b45de5451bee989032c81529e5d0186be5962d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f225b813e4d1d337164b72361f23306c1b28d550/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f225b813e4d1d337164b72361f23306c1b28d550/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f225b813e4d1d337164b72361f23306c1b28d550", "patch": "@@ -1,3 +1,33 @@\n+2022-11-10  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc.dg/analyzer/deref-before-check-1.c: New test.\n+\t* gcc.dg/analyzer/deref-before-check-2.c: New test.\n+\t* gcc.dg/analyzer/deref-before-check-pr77425.c: New test.\n+\t* gcc.dg/analyzer/malloc-1.c (test_51): New test.\n+\n+2022-11-10  Marek Polacek  <polacek@redhat.com>\n+\n+\t* g++.dg/warn/Wdangling-reference6.C: New test.\n+\n+2022-11-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84646\n+\t* gcc.dg/tree-ssa/ssa-ccp-42.c: New testcase.\n+\n+2022-11-10  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/loop-unswitch-18.c: New testcase.\n+\t* gcc.dg/tree-ssa/loopclosedphi.c: Disable unswitching,\n+\tadjust expected counts.\n+\t* gcc.dg/torture/pr71462.c: Add -w to ignore undefined\n+\tbehavior diagnostics after now unswitching outer loops.\n+\n+2022-11-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/107585\n+\tPR target/107546\n+\t* gcc.dg/pr107585.c: New test.\n+\n 2022-11-09  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/107559"}, {"sha": "228271fa7f9d5f455b49966d6db2911904aec341", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f225b813e4d1d337164b72361f23306c1b28d550/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f225b813e4d1d337164b72361f23306c1b28d550/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=f225b813e4d1d337164b72361f23306c1b28d550", "patch": "@@ -1,3 +1,7 @@\n+2022-11-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/conf.py: Add newline at last line.\n+\n 2022-11-09  Martin Liska  <mliska@suse.cz>\n \n \t* Makefile.in: Add missing HAS_SPHINX_BUILD."}, {"sha": "81f28e4ce3c71fd68f63042e6b055124029c47d9", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f225b813e4d1d337164b72361f23306c1b28d550/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f225b813e4d1d337164b72361f23306c1b28d550/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=f225b813e4d1d337164b72361f23306c1b28d550", "patch": "@@ -1,3 +1,7 @@\n+2022-11-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/conf.py: Add newline at last line.\n+\n 2022-11-09  Martin Liska  <mliska@suse.cz>\n \n \t* doc/bsd.rst:"}, {"sha": "1c381140c1187682a3e1e591f54006d8406a56f4", "filename": "libitm/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f225b813e4d1d337164b72361f23306c1b28d550/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f225b813e4d1d337164b72361f23306c1b28d550/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=f225b813e4d1d337164b72361f23306c1b28d550", "patch": "@@ -1,3 +1,7 @@\n+2022-11-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/conf.py: Add newline at last line.\n+\n 2022-11-09  Martin Liska  <mliska@suse.cz>\n \n \t* Makefile.in: Add missing HAS_SPHINX_BUILD."}, {"sha": "25cf7101ee8cb402fb45b8c133ac5df09e222a61", "filename": "libquadmath/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f225b813e4d1d337164b72361f23306c1b28d550/libquadmath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f225b813e4d1d337164b72361f23306c1b28d550/libquadmath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FChangeLog?ref=f225b813e4d1d337164b72361f23306c1b28d550", "patch": "@@ -1,3 +1,7 @@\n+2022-11-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/conf.py: Add newline at last line.\n+\n 2022-11-09  Martin Liska  <mliska@suse.cz>\n \n \t* Makefile.in: Add missing HAS_SPHINX_BUILD."}, {"sha": "f562aca2cd2bfb01c768e207314ff76e84d238e1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f225b813e4d1d337164b72361f23306c1b28d550/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f225b813e4d1d337164b72361f23306c1b28d550/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f225b813e4d1d337164b72361f23306c1b28d550", "patch": "@@ -1,3 +1,11 @@\n+2022-11-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/concepts (__detail::__destructible_impl)\n+\t(__detail::__destructible): New variable templates.\n+\t(destructible): Use __detail::__destructible.\n+\t* testsuite/std/concepts/concepts.lang/concept.destructible/1.cc:\n+\tAdd more checks for array and reference types.\n+\n 2022-11-08  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/18_support/new_nothrow.cc: Add missing noexcept"}, {"sha": "de633fcfa11cb78602da4ecea75baf313220a9c2", "filename": "maintainer-scripts/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f225b813e4d1d337164b72361f23306c1b28d550/maintainer-scripts%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f225b813e4d1d337164b72361f23306c1b28d550/maintainer-scripts%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2FChangeLog?ref=f225b813e4d1d337164b72361f23306c1b28d550", "patch": "@@ -1,3 +1,7 @@\n+2022-11-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* crontab: Fix superfluous 'sh' for Python script.\n+\n 2022-11-09  Martin Liska  <mliska@suse.cz>\n \n \t* update_web_docs_git.py: Create sources tarball."}]}