{"sha": "76ed5f08f4462d7d22bc6cda3624e131e65bdd52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZlZDVmMDhmNDQ2MmQ3ZDIyYmM2Y2RhMzYyNGUxMzFlNjViZGQ1Mg==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2018-07-31T09:55:53Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-31T09:55:53Z"}, "message": "[Ada] Compiler failure on an extended_return_statement in a block\n\nWhen compiling with an assertion-enabled compiler, Assert_Failure can be\nraised when expanded an extended_return_statement whose enclosing scope\nis not a function (such as when it's a block_statement). The simple fix\nis to change the Assert to test Current_Subprogram rather than Current_Scope.\nThree such Assert pragmas are corrected in this way.\n\n2018-07-31  Gary Dismukes  <dismukes@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch6.adb (Expand_N_Extended_Return_Statement): Replace\n\tcalls to Current_Scope in three assertions with calls to\n\tCurrent_Subprogram.\n\ngcc/testsuite/\n\n\t* gnat.dg/block_ext_return_assert_failure.adb: New testcase.\n\nFrom-SVN: r263096", "tree": {"sha": "054114f442c2e9e2489c8dd2bcb09c35b7aaed8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/054114f442c2e9e2489c8dd2bcb09c35b7aaed8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76ed5f08f4462d7d22bc6cda3624e131e65bdd52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ed5f08f4462d7d22bc6cda3624e131e65bdd52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76ed5f08f4462d7d22bc6cda3624e131e65bdd52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ed5f08f4462d7d22bc6cda3624e131e65bdd52/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4a2e585d3b4e829f48fcb3c2a825584890b4fda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4a2e585d3b4e829f48fcb3c2a825584890b4fda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4a2e585d3b4e829f48fcb3c2a825584890b4fda"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "f8da47c8fde5d68704ebb849efbef7f926ee8605", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ed5f08f4462d7d22bc6cda3624e131e65bdd52/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ed5f08f4462d7d22bc6cda3624e131e65bdd52/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=76ed5f08f4462d7d22bc6cda3624e131e65bdd52", "patch": "@@ -1,3 +1,9 @@\n+2018-07-31  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_N_Extended_Return_Statement): Replace\n+\tcalls to Current_Scope in three assertions with calls to\n+\tCurrent_Subprogram.\n+\n 2018-07-31  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_eval.adb (Check_Non_Static_Context): Do not warn on an"}, {"sha": "f71cdab4703707fffd9a3c3f0873b6e09111a13e", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ed5f08f4462d7d22bc6cda3624e131e65bdd52/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ed5f08f4462d7d22bc6cda3624e131e65bdd52/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=76ed5f08f4462d7d22bc6cda3624e131e65bdd52", "patch": "@@ -4763,7 +4763,7 @@ package body Exp_Ch6 is\n       --  the pointer to the object) they are always handled by means of\n       --  simple return statements.\n \n-      pragma Assert (not Is_Thunk (Current_Scope));\n+      pragma Assert (not Is_Thunk (Current_Subprogram));\n \n       if Nkind (Ret_Obj_Decl) = N_Object_Declaration then\n          Exp := Expression (Ret_Obj_Decl);\n@@ -4772,9 +4772,9 @@ package body Exp_Ch6 is\n          --  then F and G are both b-i-p, or neither b-i-p.\n \n          if Nkind (Exp) = N_Function_Call then\n-            pragma Assert (Ekind (Current_Scope) = E_Function);\n+            pragma Assert (Ekind (Current_Subprogram) = E_Function);\n             pragma Assert\n-              (Is_Build_In_Place_Function (Current_Scope) =\n+              (Is_Build_In_Place_Function (Current_Subprogram) =\n                Is_Build_In_Place_Function_Call (Exp));\n             null;\n          end if;"}, {"sha": "2258aa25a0fb382bd0744086f43f16c2c748c75d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ed5f08f4462d7d22bc6cda3624e131e65bdd52/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ed5f08f4462d7d22bc6cda3624e131e65bdd52/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=76ed5f08f4462d7d22bc6cda3624e131e65bdd52", "patch": "@@ -1,3 +1,7 @@\n+2018-07-31  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* gnat.dg/block_ext_return_assert_failure.adb: New testcase.\n+\n 2018-07-31  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/iter3.adb: New testcase."}, {"sha": "afd66b30902103d62cdf2fedac14ebcb0ac988c8", "filename": "gcc/testsuite/gnat.dg/block_ext_return_assert_failure.adb", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ed5f08f4462d7d22bc6cda3624e131e65bdd52/gcc%2Ftestsuite%2Fgnat.dg%2Fblock_ext_return_assert_failure.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ed5f08f4462d7d22bc6cda3624e131e65bdd52/gcc%2Ftestsuite%2Fgnat.dg%2Fblock_ext_return_assert_failure.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fblock_ext_return_assert_failure.adb?ref=76ed5f08f4462d7d22bc6cda3624e131e65bdd52", "patch": "@@ -0,0 +1,24 @@\n+--  { dg-do compile }\n+\n+--  This test used to crash a compiler with assertions enabled\n+\n+procedure Block_Ext_Return_Assert_Failure is\n+\n+   function Return_Int return Integer is\n+   begin\n+      return 123;\n+   end Return_Int;\n+\n+   function F return Integer is\n+   begin\n+      declare\n+      begin\n+         return Result : constant Integer := Return_Int do\n+            null;\n+         end return;\n+      end;\n+   end F;\n+\n+begin\n+   null;\n+end Block_Ext_Return_Assert_Failure;"}]}