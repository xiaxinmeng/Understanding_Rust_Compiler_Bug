{"sha": "35fae080e6722415f3308bb3375236f657022b61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVmYWUwODBlNjcyMjQxNWYzMzA4YmIzMzc1MjM2ZjY1NzAyMmI2MQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-12-02T14:38:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-02T14:38:54Z"}, "message": "a-coinve.adb, [...]: Minor reformatting.\n\n2011-12-02  Robert Dewar  <dewar@adacore.com>\n\n\t* a-coinve.adb, a-coorma.adb, freeze.adb, a-coorse.adb, a-comutr.adb,\n\ta-coormu.adb, a-convec.adb: Minor reformatting.\n\nFrom-SVN: r181913", "tree": {"sha": "1cdaf7acba063fc30006b1aa7fab06c89b66e731", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cdaf7acba063fc30006b1aa7fab06c89b66e731"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35fae080e6722415f3308bb3375236f657022b61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35fae080e6722415f3308bb3375236f657022b61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35fae080e6722415f3308bb3375236f657022b61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35fae080e6722415f3308bb3375236f657022b61/comments", "author": null, "committer": null, "parents": [{"sha": "e47e21c129bdb0cf5066944faf503f761b6023e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e47e21c129bdb0cf5066944faf503f761b6023e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e47e21c129bdb0cf5066944faf503f761b6023e0"}], "stats": {"total": 87, "additions": 37, "deletions": 50}, "files": [{"sha": "116759d889276807de85c1398952b50062cc50e8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fae080e6722415f3308bb3375236f657022b61/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fae080e6722415f3308bb3375236f657022b61/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=35fae080e6722415f3308bb3375236f657022b61", "patch": "@@ -1,3 +1,8 @@\n+2011-12-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-coinve.adb, a-coorma.adb, freeze.adb, a-coorse.adb, a-comutr.adb,\n+\ta-coormu.adb, a-convec.adb: Minor reformatting.\n+\n 2011-12-02  Matthew Heaney  <heaney@adacore.com>\n \n \t* a-coormu.ads, a-ciormu.ads: Declare iterator factory function."}, {"sha": "dca166f495b3a79ad2f6fcd892d1f8895676aae8", "filename": "gcc/ada/a-coinve.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fae080e6722415f3308bb3375236f657022b61/gcc%2Fada%2Fa-coinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fae080e6722415f3308bb3375236f657022b61/gcc%2Fada%2Fa-coinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinve.adb?ref=35fae080e6722415f3308bb3375236f657022b61", "patch": "@@ -29,6 +29,7 @@\n \n with Ada.Containers.Generic_Array_Sort;\n with Ada.Unchecked_Deallocation;\n+\n with System; use type System.Address;\n \n package body Ada.Containers.Indefinite_Vectors is\n@@ -1112,7 +1113,6 @@ package body Ada.Containers.Indefinite_Vectors is\n       if Object.Container /= null then\n          declare\n             B : Natural renames Object.Container.all.Busy;\n-\n          begin\n             B := B - 1;\n          end;"}, {"sha": "d68f2a8f51ade4271e414282876604673174ac77", "filename": "gcc/ada/a-comutr.adb", "status": "modified", "additions": 15, "deletions": 29, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fae080e6722415f3308bb3375236f657022b61/gcc%2Fada%2Fa-comutr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fae080e6722415f3308bb3375236f657022b61/gcc%2Fada%2Fa-comutr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-comutr.adb?ref=35fae080e6722415f3308bb3375236f657022b61", "patch": "@@ -29,6 +29,7 @@\n \n with Ada.Unchecked_Conversion;\n with Ada.Unchecked_Deallocation;\n+\n with System; use type System.Address;\n \n package body Ada.Containers.Multiway_Trees is\n@@ -913,7 +914,6 @@ package body Ada.Containers.Multiway_Trees is\n       if Object.Container /= null then\n          declare\n             B : Natural renames Object.Container.all.Busy;\n-\n          begin\n             B := B - 1;\n          end;\n@@ -925,7 +925,6 @@ package body Ada.Containers.Multiway_Trees is\n       if Object.Container /= null then\n          declare\n             B : Natural renames Object.Container.all.Busy;\n-\n          begin\n             B := B - 1;\n          end;\n@@ -942,13 +941,12 @@ package body Ada.Containers.Multiway_Trees is\n    is\n       N : constant Tree_Node_Access :=\n             Find_In_Children (Root_Node (Container), Item);\n-\n    begin\n       if N = null then\n          return No_Element;\n+      else\n+         return Cursor'(Container'Unrestricted_Access, N);\n       end if;\n-\n-      return Cursor'(Container'Unrestricted_Access, N);\n    end Find;\n \n    -----------\n@@ -1071,11 +1069,8 @@ package body Ada.Containers.Multiway_Trees is\n \n    function Has_Element (Position : Cursor) return Boolean is\n    begin\n-      if Position = No_Element then\n-         return False;\n-      end if;\n-\n-      return Position.Node.Parent /= null;\n+      return (if Position = No_Element then False\n+              else Position.Node.Parent /= null);\n    end Has_Element;\n \n    ------------------\n@@ -1325,11 +1320,8 @@ package body Ada.Containers.Multiway_Trees is\n \n    function Is_Leaf (Position : Cursor) return Boolean is\n    begin\n-      if Position = No_Element then\n-         return False;\n-      end if;\n-\n-      return Position.Node.Children.First = null;\n+      return (if Position = No_Element then False\n+              else Position.Node.Children.First = null);\n    end Is_Leaf;\n \n    ------------------\n@@ -1361,11 +1353,8 @@ package body Ada.Containers.Multiway_Trees is\n \n    function Is_Root (Position : Cursor) return Boolean is\n    begin\n-      if Position.Container = null then\n-         return False;\n-      end if;\n-\n-      return Position = Root (Position.Container.all);\n+      return (if Position.Container = null then False\n+              else Position = Root (Position.Container.all));\n    end Is_Root;\n \n    -------------\n@@ -1400,7 +1389,6 @@ package body Ada.Containers.Multiway_Trees is\n       B  : Natural renames Container'Unrestricted_Access.all.Busy;\n       RC : constant Cursor :=\n             (Container'Unrestricted_Access, Root_Node (Container));\n-\n    begin\n       return It : constant Iterator :=\n                     Iterator'(Limited_Controlled with\n@@ -1474,7 +1462,6 @@ package body Ada.Containers.Multiway_Trees is\n       return Tree_Iterator_Interfaces.Reversible_Iterator'Class\n    is\n       B : Natural renames Container'Unrestricted_Access.all.Busy;\n-\n    begin\n       return It : constant Child_Iterator :=\n                     Child_Iterator'(Limited_Controlled with\n@@ -1494,7 +1481,6 @@ package body Ada.Containers.Multiway_Trees is\n       return Tree_Iterator_Interfaces.Forward_Iterator'Class\n    is\n       B : Natural renames Position.Container'Unrestricted_Access.all.Busy;\n-\n    begin\n       return It : constant Iterator :=\n                     Iterator'(Limited_Controlled with\n@@ -1635,7 +1621,7 @@ package body Ada.Containers.Multiway_Trees is\n    begin\n       if Is_Leaf (Position) then\n \n-         --  If sibling is present, return it.\n+         --  If sibling is present, return it\n \n          if N.Next /= null then\n             return (Object.Container, N.Next);\n@@ -1650,7 +1636,7 @@ package body Ada.Containers.Multiway_Trees is\n             begin\n                while Par.Next = null loop\n \n-                  --  If we are back at the root the iteration is complete.\n+                  --  If we are back at the root the iteration is complete\n \n                   if Par = Root_Node (T)  then\n                      return No_Element;\n@@ -1679,7 +1665,7 @@ package body Ada.Containers.Multiway_Trees is\n          end if;\n \n       else\n-         --  If an internal node, return its first child.\n+         --  If an internal node, return its first child\n \n          return (Object.Container, N.Children.First);\n       end if;\n@@ -1790,7 +1776,7 @@ package body Ada.Containers.Multiway_Trees is\n \n       for J in Count_Type'(2) .. Count loop\n \n-         --  Reclaim other nodes if Storage_Error.  ???\n+         --  Reclaim other nodes if Storage_Error???\n \n          Last.Next := new Tree_Node_Type'(Parent  => Parent.Node,\n                                           Prev    => Last,\n@@ -2044,8 +2030,8 @@ package body Ada.Containers.Multiway_Trees is\n       C : Children_Type renames Subtree.Parent.Children;\n \n    begin\n-      --  This is a utility operation to remove a subtree\n-      --  node from its parent's list of children.\n+      --  This is a utility operation to remove a subtree node from its\n+      --  parent's list of children.\n \n       if C.First = Subtree then\n          pragma Assert (Subtree.Prev = null);"}, {"sha": "980708d1f7e20ad02442b65f24b4f6d246dac684", "filename": "gcc/ada/a-convec.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fae080e6722415f3308bb3375236f657022b61/gcc%2Fada%2Fa-convec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fae080e6722415f3308bb3375236f657022b61/gcc%2Fada%2Fa-convec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-convec.adb?ref=35fae080e6722415f3308bb3375236f657022b61", "patch": "@@ -29,6 +29,7 @@\n \n with Ada.Containers.Generic_Array_Sort;\n with Ada.Unchecked_Deallocation;\n+\n with System; use type System.Address;\n \n package body Ada.Containers.Vectors is\n@@ -785,7 +786,6 @@ package body Ada.Containers.Vectors is\n       if Object.Container /= null then\n          declare\n             B : Natural renames Object.Container.all.Busy;\n-\n          begin\n             B := B - 1;\n          end;\n@@ -923,7 +923,6 @@ package body Ada.Containers.Vectors is\n          J : Index_Type'Base;\n \n       begin\n-\n          --  The semantics of Merge changed slightly per AI05-0021. It was\n          --  originally the case that if Target and Source denoted the same\n          --  container object, then the GNAT implementation of Merge did\n@@ -1489,8 +1488,8 @@ package body Ada.Containers.Vectors is\n          K : Index_Type'Base;\n \n       begin\n-         --  We next copy the source items that follow the space we\n-         --  inserted. Index value K is the first index of that portion of the\n+         --  We next copy the source items that follow the space we inserted.\n+         --  Index value K is the first index of that portion of the\n          --  destination that receives this slice of the source. (For the\n          --  reasons given above, this slice is guaranteed to be non-empty.)\n "}, {"sha": "41df493812db4ac11a0ccf0d8224423d964ee101", "filename": "gcc/ada/a-coorma.adb", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fae080e6722415f3308bb3375236f657022b61/gcc%2Fada%2Fa-coorma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fae080e6722415f3308bb3375236f657022b61/gcc%2Fada%2Fa-coorma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorma.adb?ref=35fae080e6722415f3308bb3375236f657022b61", "patch": "@@ -499,7 +499,6 @@ package body Ada.Containers.Ordered_Maps is\n       if Object.Container /= null then\n          declare\n             B : Natural renames Object.Container.all.Tree.Busy;\n-\n          begin\n             B := B - 1;\n          end;\n@@ -512,13 +511,9 @@ package body Ada.Containers.Ordered_Maps is\n \n    function Find (Container : Map; Key : Key_Type) return Cursor is\n       Node : constant Node_Access := Key_Ops.Find (Container.Tree, Key);\n-\n    begin\n-      if Node = null then\n-         return No_Element;\n-      end if;\n-\n-      return Cursor'(Container'Unrestricted_Access, Node);\n+      return (if Node = null then No_Element\n+                else Cursor'(Container'Unrestricted_Access, Node));\n    end Find;\n \n    -----------\n@@ -778,10 +773,8 @@ package body Ada.Containers.Ordered_Maps is\n    begin\n       if L.Key < R.Key then\n          return False;\n-\n       elsif R.Key < L.Key then\n          return False;\n-\n       else\n          return L.Element = R.Element;\n       end if;"}, {"sha": "2bfc682ef5814c60620e69bec7532bbd0a1eac07", "filename": "gcc/ada/a-coormu.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fae080e6722415f3308bb3375236f657022b61/gcc%2Fada%2Fa-coormu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fae080e6722415f3308bb3375236f657022b61/gcc%2Fada%2Fa-coormu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coormu.adb?ref=35fae080e6722415f3308bb3375236f657022b61", "patch": "@@ -1555,11 +1555,8 @@ package body Ada.Containers.Ordered_Multisets is\n          Node : constant Node_Access :=\n                   Tree_Operations.Previous (Position.Node);\n       begin\n-         if Node = null then\n-            return No_Element;\n-         end if;\n-\n-         return Cursor'(Position.Container, Node);\n+         return (if Node = null then No_Element\n+                 else Cursor'(Position.Container, Node));\n       end;\n    end Previous;\n "}, {"sha": "c8bf665ee17e9fc39175a248dfca32aba8c4ecc2", "filename": "gcc/ada/a-coorse.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fae080e6722415f3308bb3375236f657022b61/gcc%2Fada%2Fa-coorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fae080e6722415f3308bb3375236f657022b61/gcc%2Fada%2Fa-coorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorse.adb?ref=35fae080e6722415f3308bb3375236f657022b61", "patch": "@@ -523,7 +523,6 @@ package body Ada.Containers.Ordered_Sets is\n       if Object.Container /= null then\n          declare\n             B : Natural renames Object.Container.all.Tree.Busy;\n-\n          begin\n             B := B - 1;\n          end;"}, {"sha": "3e31e9a50bc1d7f80f5a013fabbbad3446d6e1ea", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fae080e6722415f3308bb3375236f657022b61/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fae080e6722415f3308bb3375236f657022b61/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=35fae080e6722415f3308bb3375236f657022b61", "patch": "@@ -1356,14 +1356,22 @@ package body Freeze is\n                   Bod : constant Node_Id := Next (After);\n \n                begin\n+                  --  The presence of a body freezes all entities previously\n+                  --  declared in the current list of declarations, but this\n+                  --  does not apply if the body does not come from source.\n+                  --  A type invariant is transformed into a subprogram body\n+                  --  which is placed at the end of the private part of the\n+                  --  current package, but this body does not freeze incomplete\n+                  --  types that may be declared in this private part.\n+\n                   if (Nkind_In (Bod, N_Subprogram_Body,\n                                      N_Entry_Body,\n                                      N_Package_Body,\n                                      N_Protected_Body,\n                                      N_Task_Body)\n                         or else Nkind (Bod) in N_Body_Stub)\n                     and then\n-                     List_Containing (After) = List_Containing (Parent (E))\n+                      List_Containing (After) = List_Containing (Parent (E))\n                     and then Comes_From_Source (Bod)\n                   then\n                      Error_Msg_Sloc := Sloc (Next (After));"}]}