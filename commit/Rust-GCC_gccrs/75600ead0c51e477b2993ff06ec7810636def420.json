{"sha": "75600ead0c51e477b2993ff06ec7810636def420", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU2MDBlYWQwYzUxZTQ3N2IyOTkzZmYwNmVjNzgxMDYzNmRlZjQyMA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-12-26T04:46:37Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-12-26T04:46:37Z"}, "message": "pa.h (DBX_BLOCKS_FUNCTION_RELATIVE): Define.\n\n        * pa.h (DBX_BLOCKS_FUNCTION_RELATIVE): Define.\n        (ASM_OUTPUT_SOURCE_LINE): Likewise.\n        (DBX_FUNCTION_FIRST): Likewise.\n\n        * pa.h (FRAME_POINTER_REGNUM, ARG_POINTER_REGNUM): Change to %r3\n        for compatability with HP compilers.\n\n        * pa.h (READONLY_DATA_SECTION): Re-enable use of $LIT$.\n\nFrom-SVN: r6325", "tree": {"sha": "89a2506835b98e5bb94719ada5d49fa5adc7add6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89a2506835b98e5bb94719ada5d49fa5adc7add6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75600ead0c51e477b2993ff06ec7810636def420", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75600ead0c51e477b2993ff06ec7810636def420", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75600ead0c51e477b2993ff06ec7810636def420", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75600ead0c51e477b2993ff06ec7810636def420/comments", "author": null, "committer": null, "parents": [{"sha": "c0b178d09bb9bb6c8fba904b322c8e8ea87e7615", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b178d09bb9bb6c8fba904b322c8e8ea87e7615", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0b178d09bb9bb6c8fba904b322c8e8ea87e7615"}], "stats": {"total": 40, "additions": 23, "deletions": 17}, "files": [{"sha": "99c465f8a2139b0b47d9b6ca917d04250740cb67", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 23, "deletions": 17, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75600ead0c51e477b2993ff06ec7810636def420/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75600ead0c51e477b2993ff06ec7810636def420/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=75600ead0c51e477b2993ff06ec7810636def420", "patch": "@@ -101,6 +101,24 @@ extern int target_flags;\n #define DBX_DEBUGGING_INFO\n #define DEFAULT_GDB_EXTENSIONS 1\n \n+/* This is the way other stabs-in-XXX tools do things.  We will be\n+   compatable.  */\n+#define DBX_BLOCKS_FUNCTION_RELATIVE 1\n+\n+/* Likewise for linenos.  */\n+#undef  ASM_OUTPUT_SOURCE_LINE\n+#define ASM_OUTPUT_SOURCE_LINE(file, line)\t\t\\\n+  { static int sym_lineno = 1;\t\t\t\t\\\n+    fprintf (file, \"\\t.stabn 68,0,%d,L$M%d-%s\\nL$M%d:\\n\",\t\\\n+\t     line, sym_lineno,\t\t\t\t\\\n+\t     XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0) + 1, \\\n+\t     sym_lineno);\t\t\t\t\\\n+    sym_lineno += 1; }\n+\n+/* But, to make this work, we have to output the stabs for the function\n+   name *first*...  */\n+#define DBX_FUNCTION_FIRST\n+\n /* Only lables should ever begin in colunm zero.  */\n #define ASM_STABS_OP \"\\t.stabs\"\n #define ASM_STABN_OP \"\\t.stabn\"\n@@ -265,9 +283,9 @@ extern int target_flags;\n                   so is not fixed.\n    Reg 1\t= ADDIL target/Temporary (hardware).\n    Reg 2\t= Return Pointer\n-   Reg 3\t= Preserved Register (Gnu).  Frame Pointer (> 8k frames HP.)\n-   Reg 4\t= Frame Pointer (Gnu)\n-   Reg 5-18\t= Preserved Registers\n+   Reg 3\t= Frame Pointer\n+   Reg 4\t= Frame Pointer (>8k varying frame with HP compilers only)\n+   Reg 4-18\t= Preserved Registers\n    Reg 19\t= Linkage Table Register in HPUX 8.0 shared library scheme.\n    Reg 20-22\t= Temporary Registers\n    Reg 23-26\t= Temporary/Parameter Registers\n@@ -449,7 +467,7 @@ extern int target_flags;\n #define STACK_POINTER_REGNUM 30\n \n /* Base register for access to local variables of the function.  */\n-#define FRAME_POINTER_REGNUM 4\n+#define FRAME_POINTER_REGNUM 3\n \n /* Value should be nonzero if functions must have frame pointers. */\n #define FRAME_POINTER_REQUIRED (current_function_calls_alloca)\n@@ -465,7 +483,7 @@ extern int target_flags;\n   do {(VAR) = - compute_frame_size (get_frame_size (), 0);} while (0)\n \n /* Base register for access to arguments of the function.  */\n-#define ARG_POINTER_REGNUM 4\n+#define ARG_POINTER_REGNUM 3\n \n /* Register in which static-chain is passed to a function.  */\n /* ??? */\n@@ -1595,19 +1613,7 @@ do { fprintf (FILE, \"\\t.SPACE $PRIVATE$\\n\\\n /* Supposedly the assembler rejects the command if there is no tab!  */\n #define READONLY_DATA_ASM_OP \"\\t.SPACE $TEXT$\\n\\t.SUBSPA $LIT$\\n\"\n \n-#if 0\n-/* This has apparently triggered a latent GAS bug which manifests itself\n-   as numerous warnings from the debugger of the form:\n-\n-   During symbol reading, inner block not inside outer block in ...\n-   inner block not inside outer block in ...\n-\n-   Or as local variables not being accessable from the debugger.\n-\n-   Disable $LIT$ for now.  Try it with GAS-2 when it is functional (I\n-   am not even going to try to fix this in GAS-1).  */\n #define READONLY_DATA_SECTION readonly_data\n-#endif\n \n /* Output before writable data.  */\n "}]}