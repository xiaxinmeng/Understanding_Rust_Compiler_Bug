{"sha": "2e681adf5db47a5230dd6159c202f89383f98eff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU2ODFhZGY1ZGI0N2E1MjMwZGQ2MTU5YzIwMmY4OTM4M2Y5OGVmZg==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2010-11-03T10:45:40Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2010-11-03T10:45:40Z"}, "message": "re PR bootstrap/44335 (gcc-4.6-20100529 java bootstrap failure on arm-linux-gnueabi)\n\n\tPR bootstrap/44335\ngcc:\n\t* targhooks.c (targhook_words_big_endian): New function.\n\t(targhook_float_words_big_endian): Likewise.\n\t* targhooks.h (targhook_words_big_endian): Declare.\n\t(targhook_float_words_big_endian): Likewise.\n\t* target.def (words_big_endian, float_words_big_endian): New hooks.\ngcc/java:\n\t* jfc-parse.c (target.h): Include.\n\t(handle_constant): Use targetm.words_big_endian and\n\ttargetm.float_words_big_endian.\n\t(get_constant): Use targetm.float_words_big_endian.\n\nFrom-SVN: r166238", "tree": {"sha": "8b011a627911d0c6c53d5e9ba79752c0b699e5e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b011a627911d0c6c53d5e9ba79752c0b699e5e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e681adf5db47a5230dd6159c202f89383f98eff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e681adf5db47a5230dd6159c202f89383f98eff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e681adf5db47a5230dd6159c202f89383f98eff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e681adf5db47a5230dd6159c202f89383f98eff/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "43236c265b65d3e9447f84272300db648416d37e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43236c265b65d3e9447f84272300db648416d37e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43236c265b65d3e9447f84272300db648416d37e"}], "stats": {"total": 55, "additions": 52, "deletions": 3}, "files": [{"sha": "1286395ace4b3bdd7075a1d45ec7d78820be4916", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e681adf5db47a5230dd6159c202f89383f98eff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e681adf5db47a5230dd6159c202f89383f98eff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e681adf5db47a5230dd6159c202f89383f98eff", "patch": "@@ -1,3 +1,12 @@\n+2010-11-03  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\tPR bootstrap/44335\n+\t* targhooks.c (targhook_words_big_endian): New function.\n+\t(targhook_float_words_big_endian): Likewise.\n+\t* targhooks.h (targhook_words_big_endian): Declare.\n+\t(targhook_float_words_big_endian): Likewise.\n+\t* target.def (words_big_endian, float_words_big_endian): New hooks.\n+\n 2010-11-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/46165"}, {"sha": "ae89444eb1e9f03134a1c54d63dcdb9bac2bdfde", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e681adf5db47a5230dd6159c202f89383f98eff/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e681adf5db47a5230dd6159c202f89383f98eff/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=2e681adf5db47a5230dd6159c202f89383f98eff", "patch": "@@ -1,3 +1,11 @@\n+2010-11-03  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\tPR bootstrap/44335\n+\t* jfc-parse.c (target.h): Include.\n+\t(handle_constant): Use targetm.words_big_endian and\n+\ttargetm.float_words_big_endian.\n+\t(get_constant): Use targetm.float_words_big_endian.\n+\n 2010-10-13  Richard Henderson  <rth@redhat.com>\n \n \t* lang.c (java_eh_personality): Update call to"}, {"sha": "30f171cdc905cd8a502a5f99c5876163b503fecb", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e681adf5db47a5230dd6159c202f89383f98eff/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e681adf5db47a5230dd6159c202f89383f98eff/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=2e681adf5db47a5230dd6159c202f89383f98eff", "patch": "@@ -43,6 +43,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"cgraph.h\"\n #include \"vecprim.h\"\n #include \"bitmap.h\"\n+#include \"target.h\"\n \n #ifdef HAVE_LOCALE_H\n #include <locale.h>\n@@ -555,12 +556,12 @@ handle_constant (JCF *jcf, int index, enum cpool_tag purpose)\n \n     case CONSTANT_Long:\n       index = handle_long_constant (jcf, cpool, CONSTANT_Long, index,\n-\t\t\t\t    WORDS_BIG_ENDIAN);\n+\t\t\t\t    targetm.words_big_endian ());\n       break;\n       \n     case CONSTANT_Double:\n       index = handle_long_constant (jcf, cpool, CONSTANT_Double, index,\n-\t\t\t\t    FLOAT_WORDS_BIG_ENDIAN);\n+\t\t\t\t    targetm.float_words_big_endian ());\n       break;\n \n     case CONSTANT_Float:\n@@ -1071,7 +1072,7 @@ get_constant (JCF *jcf, int index)\n \thi = JPOOL_UINT (jcf, index);\n \tlo = JPOOL_UINT (jcf, index+1);\n \n-\tif (FLOAT_WORDS_BIG_ENDIAN)\n+\tif (targetm.float_words_big_endian ())\n \t  buf[0] = hi, buf[1] = lo;\n \telse\n \t  buf[0] = lo, buf[1] = hi;"}, {"sha": "7947961bf9e0ac62064d7aff043a97a847890b34", "filename": "gcc/target.def", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e681adf5db47a5230dd6159c202f89383f98eff/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e681adf5db47a5230dd6159c202f89383f98eff/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=2e681adf5db47a5230dd6159c202f89383f98eff", "patch": "@@ -1141,6 +1141,22 @@ DEFHOOK\n  bool, (const_tree record_type),\n  hook_bool_const_tree_false)\n \n+/* For now this is only an interface to WORDS_BIG_ENDIAN for\n+   target-independent code like the front ends, need performance testing\n+   before switching completely to the target hook.  */\n+DEFHOOK_UNDOC\n+(words_big_endian,\n+ \"\",\n+ bool, (void),\n+ targhook_words_big_endian)\n+\n+/* Likewise for FLOAT_WORDS_BIG_ENDIAN.  */\n+DEFHOOK_UNDOC\n+(float_words_big_endian,\n+ \"\",\n+ bool, (void),\n+ targhook_float_words_big_endian)\n+\n /* True if the target supports decimal floating point.  */\n DEFHOOK\n (decimal_float_supported_p,"}, {"sha": "36474367134e89487e249593b72f68700b6b851e", "filename": "gcc/targhooks.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e681adf5db47a5230dd6159c202f89383f98eff/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e681adf5db47a5230dd6159c202f89383f98eff/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=2e681adf5db47a5230dd6159c202f89383f98eff", "patch": "@@ -425,6 +425,19 @@ default_scalar_mode_supported_p (enum machine_mode mode)\n     }\n }\n \n+/* Make some target macros useable by target-independent code.  */\n+bool\n+targhook_words_big_endian (void)\n+{\n+  return !!WORDS_BIG_ENDIAN;\n+}\n+\n+bool\n+targhook_float_words_big_endian (void)\n+{\n+  return !!FLOAT_WORDS_BIG_ENDIAN;\n+}\n+\n /* True if the target supports decimal floating point.  */\n \n bool"}, {"sha": "eeefe05d043fa81aec4d5e70a29fe31f78e13c12", "filename": "gcc/targhooks.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e681adf5db47a5230dd6159c202f89383f98eff/gcc%2Ftarghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e681adf5db47a5230dd6159c202f89383f98eff/gcc%2Ftarghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.h?ref=2e681adf5db47a5230dd6159c202f89383f98eff", "patch": "@@ -68,6 +68,8 @@ extern bool default_print_operand_punct_valid_p (unsigned char);\n extern bool default_asm_output_addr_const_extra (FILE *, rtx);\n \n extern bool default_scalar_mode_supported_p (enum machine_mode);\n+extern bool targhook_words_big_endian (void);\n+extern bool targhook_float_words_big_endian (void);\n extern bool default_decimal_float_supported_p (void);\n extern bool default_fixed_point_supported_p (void);\n "}]}