{"sha": "ec7886c19b5853d27c37cfb269f70805e4296231", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM3ODg2YzE5YjU4NTNkMjdjMzdjZmIyNjlmNzA4MDVlNDI5NjIzMQ==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-01-16T02:37:09Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-01-16T02:37:09Z"}, "message": "Fix PR c++/69091 (ICE with operator overload having 'auto' return type)\n\ngcc/cp/ChangeLog:\n\n\tPR c++/69091\n\t* pt.c (type_dependent_expression_p): For a function template\n\tspecialization, a type is dependent iff any of its template\n\targuments are.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/69091\n\t* g++.dg/template/pr69091.C: New test.\n\nFrom-SVN: r232463", "tree": {"sha": "a034319e48216378ff232cd782888a7ce4ebf446", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a034319e48216378ff232cd782888a7ce4ebf446"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec7886c19b5853d27c37cfb269f70805e4296231", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec7886c19b5853d27c37cfb269f70805e4296231", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec7886c19b5853d27c37cfb269f70805e4296231", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec7886c19b5853d27c37cfb269f70805e4296231/comments", "author": null, "committer": null, "parents": [{"sha": "203484bb27d092dde0f91bf50ce6bc541f1e5dfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/203484bb27d092dde0f91bf50ce6bc541f1e5dfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/203484bb27d092dde0f91bf50ce6bc541f1e5dfe"}], "stats": {"total": 45, "additions": 41, "deletions": 4}, "files": [{"sha": "6b7e81b0733778f56ddb2ef26341057d109fcec2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec7886c19b5853d27c37cfb269f70805e4296231/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec7886c19b5853d27c37cfb269f70805e4296231/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ec7886c19b5853d27c37cfb269f70805e4296231", "patch": "@@ -1,3 +1,10 @@\n+2016-01-16  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/69091\n+\t* pt.c (type_dependent_expression_p): For a function template\n+\tspecialization, a type is dependent iff any of its template\n+\targuments are.\n+\n 2016-01-16  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \t* cp-array-notation.c (cp_expand_cond_array_notations): Return"}, {"sha": "403c5ac0bea813d7cc8c28b2362aac4aa5f8744d", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec7886c19b5853d27c37cfb269f70805e4296231/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec7886c19b5853d27c37cfb269f70805e4296231/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ec7886c19b5853d27c37cfb269f70805e4296231", "patch": "@@ -22759,12 +22759,12 @@ type_dependent_expression_p (tree expression)\n \t      || dependent_scope_p (scope));\n     }\n \n+  /* A function template specialization is type-dependent if it has any\n+     dependent template arguments.  */\n   if (TREE_CODE (expression) == FUNCTION_DECL\n       && DECL_LANG_SPECIFIC (expression)\n-      && DECL_TEMPLATE_INFO (expression)\n-      && (any_dependent_template_arguments_p\n-\t  (INNERMOST_TEMPLATE_ARGS (DECL_TI_ARGS (expression)))))\n-    return true;\n+      && DECL_TEMPLATE_INFO (expression))\n+    return any_dependent_template_arguments_p (DECL_TI_ARGS (expression));\n \n   if (TREE_CODE (expression) == TEMPLATE_DECL\n       && !DECL_TEMPLATE_TEMPLATE_PARM_P (expression))"}, {"sha": "82810dd6aeb383a4f068ca124c601c3590f39439", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec7886c19b5853d27c37cfb269f70805e4296231/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec7886c19b5853d27c37cfb269f70805e4296231/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ec7886c19b5853d27c37cfb269f70805e4296231", "patch": "@@ -1,3 +1,8 @@\n+2016-01-16  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/69091\n+\t* g++.dg/template/pr69091.C: New test.\n+\n 2016-01-16  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \t* c-c++-common/cilk-plus/AN/an-if.c: Check that the original"}, {"sha": "ec7bb25691246382b9a51c17da405e56206de2b7", "filename": "gcc/testsuite/g++.dg/template/pr69091.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec7886c19b5853d27c37cfb269f70805e4296231/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr69091.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec7886c19b5853d27c37cfb269f70805e4296231/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr69091.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr69091.C?ref=ec7886c19b5853d27c37cfb269f70805e4296231", "patch": "@@ -0,0 +1,25 @@\n+// PR c++/69091\n+// { dg-do compile { target c++14 } }\n+\n+template <class ValueType, ValueType>\n+struct Option {};\n+\n+template <class ValueType, ValueType Value, class OptionsRhs>\n+auto operator|(Option<ValueType, Value>, OptionsRhs) {\n+  return Value;\n+}\n+\n+enum canine_t { no, yes };\n+Option<canine_t, no> cat;\n+Option<canine_t, yes> dog;\n+\n+template <class T>\n+void f(T) {\n+  cat | dog;\n+}\n+\n+struct A {};\n+int main() {\n+  f(A{});\n+  return 0;\n+}"}]}