{"sha": "ea973bad53d63fa66e3a6b0446ae95e7e130f30a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE5NzNiYWQ1M2Q2M2ZhNjZlM2E2YjA0NDZhZTk1ZTdlMTMwZjMwYQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-12-13T14:43:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-12-13T14:43:44Z"}, "message": "re PR debug/48354 (internal compiler error: in splice_child_die, at dwarf2out.c:8064)\n\n2011-12-13  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/48354\n\t* tree.c (find_decls_types_r): Also walk DECL_ORIGINAL_TYPE.\n\t* tree-streamer-in.c (lto_input_ts_decl_non_common_tree_pointers):\n\tStream DECL_ORIGINAL_TYPE.\n\t* tree-streamer-out.c (write_ts_decl_non_common_tree_pointers):\n\tLikewise.\n\n\tlto/\n\t* lto.c (lto_ft_decl_non_common): When we merged DECL_ORIGINAL_TYPE\n\twith the type of the TYPE_DECL clear DECL_ORIGINAL_TYPE.\n\n\t* g++.dg/lto/pr48354-1_0.C: New testcase.\n\nFrom-SVN: r182286", "tree": {"sha": "ef1bbe465db7790613b6d18f148baf8d06fab828", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef1bbe465db7790613b6d18f148baf8d06fab828"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea973bad53d63fa66e3a6b0446ae95e7e130f30a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea973bad53d63fa66e3a6b0446ae95e7e130f30a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea973bad53d63fa66e3a6b0446ae95e7e130f30a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea973bad53d63fa66e3a6b0446ae95e7e130f30a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88d599dcf67fd7be5c2a6bdd279bbd7e1ac7f7aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88d599dcf67fd7be5c2a6bdd279bbd7e1ac7f7aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88d599dcf67fd7be5c2a6bdd279bbd7e1ac7f7aa"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "a7107642c75c961d3f51289e6e4c6cd48389ad32", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea973bad53d63fa66e3a6b0446ae95e7e130f30a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea973bad53d63fa66e3a6b0446ae95e7e130f30a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea973bad53d63fa66e3a6b0446ae95e7e130f30a", "patch": "@@ -1,3 +1,12 @@\n+2011-12-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/48354\n+\t* tree.c (find_decls_types_r): Also walk DECL_ORIGINAL_TYPE.\n+\t* tree-streamer-in.c (lto_input_ts_decl_non_common_tree_pointers):\n+\tStream DECL_ORIGINAL_TYPE.\n+\t* tree-streamer-out.c (write_ts_decl_non_common_tree_pointers):\n+\tLikewise.\n+\n 2011-12-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tRevert"}, {"sha": "2c7d83be7bd7d9cf0f285fe488741187a8c28b17", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea973bad53d63fa66e3a6b0446ae95e7e130f30a/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea973bad53d63fa66e3a6b0446ae95e7e130f30a/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=ea973bad53d63fa66e3a6b0446ae95e7e130f30a", "patch": "@@ -1,3 +1,9 @@\n+2011-12-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/48354\n+\t* lto.c (lto_ft_decl_non_common): When we merged DECL_ORIGINAL_TYPE\n+\twith the type of the TYPE_DECL clear DECL_ORIGINAL_TYPE.\n+\n 2011-12-01  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* lto-lang.c (lto_attribute_table): Handle *tm regparm."}, {"sha": "accb807cba374d2343716de8f75d67cd9db89d5c", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea973bad53d63fa66e3a6b0446ae95e7e130f30a/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea973bad53d63fa66e3a6b0446ae95e7e130f30a/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=ea973bad53d63fa66e3a6b0446ae95e7e130f30a", "patch": "@@ -381,6 +381,13 @@ lto_ft_decl_non_common (tree t)\n   LTO_FIXUP_TREE (DECL_ARGUMENT_FLD (t));\n   LTO_FIXUP_TREE (DECL_RESULT_FLD (t));\n   LTO_FIXUP_TREE (DECL_VINDEX (t));\n+  /* The C frontends may create exact duplicates for DECL_ORIGINAL_TYPE\n+     like for 'typedef enum foo foo'.  We have no way of avoiding to\n+     merge them and dwarf2out.c cannot deal with this,\n+     so fix this up by clearing DECL_ORIGINAL_TYPE in this case.  */\n+  if (TREE_CODE (t) == TYPE_DECL\n+      && DECL_ORIGINAL_TYPE (t) == TREE_TYPE (t))\n+    DECL_ORIGINAL_TYPE (t) = NULL_TREE;\n }\n \n /* Fix up fields of a decl_non_common T.  */"}, {"sha": "849dda08ae01dec10a8519a5ae02f8ac1e770678", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea973bad53d63fa66e3a6b0446ae95e7e130f30a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea973bad53d63fa66e3a6b0446ae95e7e130f30a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ea973bad53d63fa66e3a6b0446ae95e7e130f30a", "patch": "@@ -1,3 +1,8 @@\n+2011-12-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/48354\n+\t* g++.dg/lto/pr48354-1_0.C: New testcase.\n+\n 2011-12-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/51519"}, {"sha": "b2ae97709dfd109aeb95c277087ccb6f677a7611", "filename": "gcc/testsuite/g++.dg/lto/pr48354-1_0.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea973bad53d63fa66e3a6b0446ae95e7e130f30a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr48354-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea973bad53d63fa66e3a6b0446ae95e7e130f30a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr48354-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr48354-1_0.C?ref=ea973bad53d63fa66e3a6b0446ae95e7e130f30a", "patch": "@@ -0,0 +1,16 @@\n+// { dg-lto-do link }\n+// { dg-lto-options { { -g -flto } } }\n+// { dg-extra-ld-options \"-r -nostdlib\" }\n+\n+template<typename T> struct Identity { typedef T type; };\n+struct S {\n+    typedef void (S::*FP)();\n+    FP fp;\n+};\n+void g();\n+void f() {\n+    typedef Identity<S>::type Dummy;\n+    S s;\n+    g();\n+}\n+"}, {"sha": "919a5be306072b77b8250491577f629c4a3ca718", "filename": "gcc/tree-streamer-in.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea973bad53d63fa66e3a6b0446ae95e7e130f30a/gcc%2Ftree-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea973bad53d63fa66e3a6b0446ae95e7e130f30a/gcc%2Ftree-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-in.c?ref=ea973bad53d63fa66e3a6b0446ae95e7e130f30a", "patch": "@@ -602,6 +602,8 @@ lto_input_ts_decl_non_common_tree_pointers (struct lto_input_block *ib,\n       DECL_ARGUMENTS (expr) = stream_read_tree (ib, data_in);\n       DECL_RESULT (expr) = stream_read_tree (ib, data_in);\n     }\n+  else if (TREE_CODE (expr) == TYPE_DECL)\n+    DECL_ORIGINAL_TYPE (expr) = stream_read_tree (ib, data_in);\n   DECL_VINDEX (expr) = stream_read_tree (ib, data_in);\n }\n "}, {"sha": "fea15ff1137debd51d00bfa961c0fe3c63670727", "filename": "gcc/tree-streamer-out.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea973bad53d63fa66e3a6b0446ae95e7e130f30a/gcc%2Ftree-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea973bad53d63fa66e3a6b0446ae95e7e130f30a/gcc%2Ftree-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-out.c?ref=ea973bad53d63fa66e3a6b0446ae95e7e130f30a", "patch": "@@ -508,6 +508,8 @@ write_ts_decl_non_common_tree_pointers (struct output_block *ob, tree expr,\n       stream_write_tree (ob, DECL_ARGUMENTS (expr), ref_p);\n       stream_write_tree (ob, DECL_RESULT (expr), ref_p);\n     }\n+  else if (TREE_CODE (expr) == TYPE_DECL)\n+    stream_write_tree (ob, DECL_ORIGINAL_TYPE (expr), ref_p);\n   stream_write_tree (ob, DECL_VINDEX (expr), ref_p);\n }\n "}, {"sha": "d62afe5c6cb81d089eb6c2e96b0932a366934042", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea973bad53d63fa66e3a6b0446ae95e7e130f30a/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea973bad53d63fa66e3a6b0446ae95e7e130f30a/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=ea973bad53d63fa66e3a6b0446ae95e7e130f30a", "patch": "@@ -4796,6 +4796,7 @@ find_decls_types_r (tree *tp, int *ws, void *data)\n \t{\n \t  fld_worklist_push (DECL_ARGUMENT_FLD (t), fld);\n \t  fld_worklist_push (DECL_VINDEX (t), fld);\n+\t  fld_worklist_push (DECL_ORIGINAL_TYPE (t), fld);\n \t}\n       else if (TREE_CODE (t) == FIELD_DECL)\n \t{"}]}