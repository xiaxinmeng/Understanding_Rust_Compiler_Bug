{"sha": "b913199ea39e5027a5f4176f245fe7fef1951dcd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkxMzE5OWVhMzllNTAyN2E1ZjQxNzZmMjQ1ZmU3ZmVmMTk1MWRjZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-12T12:06:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-12T12:06:59Z"}, "message": "[multiple changes]\n\n2011-12-12  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Expression_Function): If the function\n\tis not a completion, pre-analyze the expression now to prevent\n\tspurious visibility on later entities. The body is inserted at\n\tthe end of the current declaration list or package to prevent\n\tearly freezing, but the visibility is established at the point\n\tof definition.\n\n2011-12-12  Bob Duff  <duff@adacore.com>\n\n\t* sem.adb, sem.ads: Add debugging routines.\n\n2011-12-12  Tristan Gingold  <gingold@adacore.com>\n\n\t* gnatls.adb: (gnatls): Also add the objects dir in search list.\n\nFrom-SVN: r182235", "tree": {"sha": "c1e16e7248e0c9ff47cd8c99f940a305cc7a64b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1e16e7248e0c9ff47cd8c99f940a305cc7a64b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b913199ea39e5027a5f4176f245fe7fef1951dcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b913199ea39e5027a5f4176f245fe7fef1951dcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b913199ea39e5027a5f4176f245fe7fef1951dcd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b913199ea39e5027a5f4176f245fe7fef1951dcd/comments", "author": null, "committer": null, "parents": [{"sha": "f0f3286a5a9af9c4b0d0af7a567c4f465f8fc382", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0f3286a5a9af9c4b0d0af7a567c4f465f8fc382", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0f3286a5a9af9c4b0d0af7a567c4f465f8fc382"}], "stats": {"total": 70, "additions": 66, "deletions": 4}, "files": [{"sha": "8ccc29bbbe705f3a43eb1c0a5c7f8beb1aa4d744", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b913199ea39e5027a5f4176f245fe7fef1951dcd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b913199ea39e5027a5f4176f245fe7fef1951dcd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b913199ea39e5027a5f4176f245fe7fef1951dcd", "patch": "@@ -1,3 +1,20 @@\n+2011-12-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Expression_Function): If the function\n+\tis not a completion, pre-analyze the expression now to prevent\n+\tspurious visibility on later entities. The body is inserted at\n+\tthe end of the current declaration list or package to prevent\n+\tearly freezing, but the visibility is established at the point\n+\tof definition.\n+\n+2011-12-12  Bob Duff  <duff@adacore.com>\n+\n+\t* sem.adb, sem.ads: Add debugging routines.\n+\n+2011-12-12  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* gnatls.adb: (gnatls): Also add the objects dir in search list.\n+\n 2011-12-12  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_atag.adb, exp_atag.ads, exp_util.adb, exp_attr.adb,"}, {"sha": "91b84a173009c57b9b49098f8afb50c41c9881b5", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b913199ea39e5027a5f4176f245fe7fef1951dcd/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b913199ea39e5027a5f4176f245fe7fef1951dcd/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=b913199ea39e5027a5f4176f245fe7fef1951dcd", "patch": "@@ -1228,6 +1228,14 @@ procedure Gnatls is\n \n          if Src_Path /= null then\n             Add_Search_Dirs (Src_Path, Include);\n+\n+            --  Add the lib subdirectory if it exists\n+\n+            Lib_Path := Get_RTS_Search_Dir (Name, Objects);\n+            if Lib_Path /= null then\n+               Add_Search_Dirs (Lib_Path, Objects);\n+            end if;\n+\n             return;\n          end if;\n       end if;"}, {"sha": "fc8f74cf811448d61b29e1255f53a5a705b11c43", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b913199ea39e5027a5f4176f245fe7fef1951dcd/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b913199ea39e5027a5f4176f245fe7fef1951dcd/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=b913199ea39e5027a5f4176f245fe7fef1951dcd", "patch": "@@ -1555,6 +1555,24 @@ package body Sem is\n       end if;\n    end Semantics;\n \n+   --------\n+   -- ss --\n+   --------\n+\n+   function ss (Index : Int) return Scope_Stack_Entry is\n+   begin\n+      return Scope_Stack.Table (Index);\n+   end ss;\n+\n+   ---------\n+   -- sst --\n+   ---------\n+\n+   function sst return Scope_Stack_Entry is\n+   begin\n+      return ss (Scope_Stack.Last);\n+   end sst;\n+\n    ------------------------\n    -- Walk_Library_Items --\n    ------------------------\n@@ -1602,7 +1620,7 @@ package body Sem is\n       --  an instance spec, do the body last.\n \n       procedure Do_Withed_Unit (Withed_Unit : Node_Id);\n-      --  Apply Do_Unit_And_Dependents to a unit in a context clause.\n+      --  Apply Do_Unit_And_Dependents to a unit in a context clause\n \n       procedure Process_Bodies_In_Context (Comp : Node_Id);\n       --  The main unit and its spec may depend on bodies that contain generics"}, {"sha": "7dec90243a9089e8bd5b2e50d8535f609c435109", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b913199ea39e5027a5f4176f245fe7fef1951dcd/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b913199ea39e5027a5f4176f245fe7fef1951dcd/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=b913199ea39e5027a5f4176f245fe7fef1951dcd", "patch": "@@ -660,4 +660,14 @@ package Sem is\n    --  Item is never an instantiation. Instead, the instance declaration is\n    --  passed, and (if the instantiation is the main unit), the instance body.\n \n+   --  Debugging:\n+\n+   function ss (Index : Int) return Scope_Stack_Entry;\n+   pragma Export (Ada, ss);\n+   --  \"ss\" = \"scope stack\"; returns the Index'th entry in the Scope_Stack\n+\n+   function sst return Scope_Stack_Entry;\n+   pragma Export (Ada, sst);\n+   --  \"sst\" = \"scope stack top\"; same as ss(Scope_Stack.Last)\n+\n end Sem;"}, {"sha": "64b909263292dfbfc323b61302facf9f7f37dc90", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b913199ea39e5027a5f4176f245fe7fef1951dcd/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b913199ea39e5027a5f4176f245fe7fef1951dcd/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=b913199ea39e5027a5f4176f245fe7fef1951dcd", "patch": "@@ -281,6 +281,7 @@ package body Sem_Ch6 is\n       New_Body : Node_Id;\n       New_Decl : Node_Id;\n       New_Spec : Node_Id;\n+      Ret      : Node_Id;\n \n    begin\n       --  This is one of the occasions on which we transform the tree during\n@@ -302,15 +303,15 @@ package body Sem_Ch6 is\n          Prev     := Find_Corresponding_Spec (N);\n       end if;\n \n+      Ret := Make_Simple_Return_Statement (LocX, Expression (N));\n+\n       New_Body :=\n         Make_Subprogram_Body (Loc,\n           Specification              => New_Spec,\n           Declarations               => Empty_List,\n           Handled_Statement_Sequence =>\n             Make_Handled_Sequence_Of_Statements (LocX,\n-              Statements => New_List (\n-                Make_Simple_Return_Statement (LocX,\n-                  Expression => Expression (N)))));\n+              Statements => New_List (Ret)));\n \n       if Present (Prev) and then Ekind (Prev) = E_Generic_Function then\n \n@@ -362,10 +363,13 @@ package body Sem_Ch6 is\n \n          --  To prevent premature freeze action, insert the new body at the end\n          --  of the current declarations, or at the end of the package spec.\n+         --  However, resolve usage names now, to prevent spurious visibility\n+         --  on later entities.\n \n          declare\n             Decls : List_Id          := List_Containing (N);\n             Par   : constant Node_Id := Parent (Decls);\n+            Id    : constant Entity_Id := Defining_Entity (New_Decl);\n \n          begin\n             if Nkind (Par) = N_Package_Specification\n@@ -377,6 +381,11 @@ package body Sem_Ch6 is\n             end if;\n \n             Insert_After (Last (Decls), New_Body);\n+            Push_Scope (Id);\n+            Install_Formals (Id);\n+            Preanalyze_Spec_Expression (Expression  (Ret), Etype (Id));\n+            End_Scope;\n+\n          end;\n       end if;\n "}]}