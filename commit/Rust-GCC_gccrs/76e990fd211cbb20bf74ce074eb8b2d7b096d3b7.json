{"sha": "76e990fd211cbb20bf74ce074eb8b2d7b096d3b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZlOTkwZmQyMTFjYmIyMGJmNzRjZTA3NGViOGIyZDdiMDk2ZDNiNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-06-18T09:20:40Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-06-18T09:20:40Z"}, "message": "stor-layout: Don't create DECL_BIT_FIELD_REPRESENTATIVE for QUAL_UNION_TYPE [PR101062]\n\n> The following patch does create them, but treats all such bitfields as if\n> they were in a structure where the particular bitfield is the only field.\n\nWhile the patch passed bootstrap/regtest on the trunk, when trying to\nbackport it to 11 branch the bootstrap failed with\natree.ads:3844:34: size for \"Node_Record\" too small\nerrors.  Turns out the error is not about size being too small, but actually\nabout size being non-constant, and comes from:\n /* In a FIELD_DECL of a RECORD_TYPE, this is a pointer to the storage\n    representative FIELD_DECL.  */\n #define DECL_BIT_FIELD_REPRESENTATIVE(NODE) \\\n   (FIELD_DECL_CHECK (NODE)->field_decl.qualifier)\n\n /* For a FIELD_DECL in a QUAL_UNION_TYPE, records the expression, which\n    if nonzero, indicates that the field occupies the type.  */\n  #define DECL_QUALIFIER(NODE) (FIELD_DECL_CHECK (NODE)->field_decl.qualifier)\nso by setting up DECL_BIT_FIELD_REPRESENTATIVE in QUAL_UNION_TYPE we\nactually set or modify DECL_QUALIFIER and then construct size as COND_EXPRs\nwith those bit field representatives (e.g. with array type) as conditions\nwhich doesn't fold into constant.\n\nThe following patch fixes it by not creating DECL_BIT_FIELD_REPRESENTATIVEs\nfor QUAL_UNION_TYPE as there is nowhere to store them,\n\nShall we change tree.h to document that DECL_BIT_FIELD_REPRESENTATIVE\nis valid also on UNION_TYPE?\nI see:\ntree-ssa-alias.c-  if (TREE_CODE (type1) == RECORD_TYPE\ntree-ssa-alias.c:      && DECL_BIT_FIELD_REPRESENTATIVE (field1))\ntree-ssa-alias.c:    field1 = DECL_BIT_FIELD_REPRESENTATIVE (field1);\ntree-ssa-alias.c-  if (TREE_CODE (type2) == RECORD_TYPE\ntree-ssa-alias.c:      && DECL_BIT_FIELD_REPRESENTATIVE (field2))\ntree-ssa-alias.c:    field2 = DECL_BIT_FIELD_REPRESENTATIVE (field2);\nShall we change that to || == UNION_TYPE or do we assume all fields\nare overlapping in a UNION_TYPE already?\nAt other spots (asan, ubsan, expr.c) it is unclear what will happen\nif they see a QUAL_UNION_TYPE with a DECL_QUALIFIER (or does the Ada FE\nlower that somehow)?\n\n2021-06-18  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/101062\n\t* stor-layout.c (finish_bitfield_layout): Don't add bitfield\n\trepresentatives in QUAL_UNION_TYPE.", "tree": {"sha": "2d8f29cb2190737a01acd169e0f9bd421c435a9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d8f29cb2190737a01acd169e0f9bd421c435a9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76e990fd211cbb20bf74ce074eb8b2d7b096d3b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76e990fd211cbb20bf74ce074eb8b2d7b096d3b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76e990fd211cbb20bf74ce074eb8b2d7b096d3b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76e990fd211cbb20bf74ce074eb8b2d7b096d3b7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba71587184b28fd04eb56ac6ac8e7ad5bdab8ac5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba71587184b28fd04eb56ac6ac8e7ad5bdab8ac5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba71587184b28fd04eb56ac6ac8e7ad5bdab8ac5"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "9f850c3951ec8d8deca2214d297c905188936bcc", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76e990fd211cbb20bf74ce074eb8b2d7b096d3b7/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76e990fd211cbb20bf74ce074eb8b2d7b096d3b7/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=76e990fd211cbb20bf74ce074eb8b2d7b096d3b7", "patch": "@@ -2172,6 +2172,9 @@ finish_bitfield_layout (tree t)\n   tree field, prev;\n   tree repr = NULL_TREE;\n \n+  if (TREE_CODE (t) == QUAL_UNION_TYPE)\n+    return;\n+\n   for (prev = NULL_TREE, field = TYPE_FIELDS (t);\n        field; field = DECL_CHAIN (field))\n     {"}]}