{"sha": "d1081010a1addfcf156b7042f581f0698ea25f61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEwODEwMTBhMWFkZGZjZjE1NmI3MDQyZjU4MWYwNjk4ZWEyNWY2MQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-11-20T19:36:14Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-11-20T19:36:14Z"}, "message": "Improve hashing of decls in ipa-icf-gimple\n\nAnother remaining case is that we end up comparing calls with mismatching\nnumber of parameters or with different permutations of them.\n\nThis is because we hash decls to nothing. This patch improves that by\nhashing decls by their code and parm decls by indexes that are stable.\nAlso for defualt defs in SSA_NAMEs we can add the corresponding decl (that\nis usually parm decls).\n\nStill we could improve on this by hasing ssa names by their definit parameters\nand possibly making maps of other decls and assigning them stable function\nlocal IDs.\n\n\t* ipa-icf-gimple.c (func_checker::hash_operand): Improve hashing of\n\tdecls.", "tree": {"sha": "29868023f30dd95ba74865823d3eef924f6f3120", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29868023f30dd95ba74865823d3eef924f6f3120"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1081010a1addfcf156b7042f581f0698ea25f61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1081010a1addfcf156b7042f581f0698ea25f61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1081010a1addfcf156b7042f581f0698ea25f61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1081010a1addfcf156b7042f581f0698ea25f61/comments", "author": null, "committer": null, "parents": [{"sha": "4c3b16f3c11088f4c3a25ddd59ee5bc38c15f379", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c3b16f3c11088f4c3a25ddd59ee5bc38c15f379", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c3b16f3c11088f4c3a25ddd59ee5bc38c15f379"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "7e2b3c4624c9c8739ebfbd3098748fa84752499a", "filename": "gcc/ipa-icf-gimple.c", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1081010a1addfcf156b7042f581f0698ea25f61/gcc%2Fipa-icf-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1081010a1addfcf156b7042f581f0698ea25f61/gcc%2Fipa-icf-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf-gimple.c?ref=d1081010a1addfcf156b7042f581f0698ea25f61", "patch": "@@ -242,13 +242,29 @@ func_checker::hash_operand (const_tree arg, inchash::hash &hstate,\n \n   switch (TREE_CODE (arg))\n     {\n+    case PARM_DECL:\n+      {\n+\tunsigned int index = 0;\n+\tif (DECL_CONTEXT (arg))\n+\t  for (tree p = DECL_ARGUMENTS (DECL_CONTEXT (arg));\n+\t       p && index < 32; p = DECL_CHAIN (p), index++)\n+\t    if (p == arg)\n+\t      break;\n+\thstate.add_int (PARM_DECL);\n+\thstate.add_int (index);\n+      }\n+      return;\n     case FUNCTION_DECL:\n     case VAR_DECL:\n     case LABEL_DECL:\n-    case PARM_DECL:\n     case RESULT_DECL:\n     case CONST_DECL:\n+      hstate.add_int (TREE_CODE (arg));\n+      return;\n     case SSA_NAME:\n+      hstate.add_int (SSA_NAME);\n+      if (SSA_NAME_IS_DEFAULT_DEF (arg))\n+\thash_operand (SSA_NAME_VAR (arg), hstate, flags);\n       return;\n     case FIELD_DECL:\n       inchash::add_expr (DECL_FIELD_OFFSET (arg), hstate, flags);\n@@ -265,6 +281,8 @@ func_checker::hash_operand (const_tree arg, inchash::hash &hstate,\n       hstate.add_int (0xc10bbe5);\n       return;\n     }\n+  gcc_assert (!DECL_P (arg));\n+  gcc_assert (!TYPE_P (arg));\n \n   return operand_compare::hash_operand (arg, hstate, flags);\n }"}]}