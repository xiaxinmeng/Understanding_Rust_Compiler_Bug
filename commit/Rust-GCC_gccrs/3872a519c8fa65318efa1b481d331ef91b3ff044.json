{"sha": "3872a519c8fa65318efa1b481d331ef91b3ff044", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg3MmE1MTljOGZhNjUzMThlZmExYjQ4MWQzMzFlZjkxYjNmZjA0NA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-05-20T17:00:39Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-05-20T17:00:39Z"}, "message": "i386: Fix zero/sign extend expanders [PR95229]\n\n2020-05-20  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/ChangeLog:\n\tPR target/95229\n\t* config/i386/sse.md (<code>v8qiv8hi2): Use\n\tsimplify_gen_subreg instead of simplify_subreg.\n\t(<code>v8qiv8si2): Ditto.\n\t(<code>v4qiv4si2): Ditto.\n\t(<code>v4hiv4si2): Ditto.\n\t(<code>v8qiv8di2): Ditto.\n\t(<code>v4qiv4di2): Ditto.\n\t(<code>v2qiv2di2): Ditto.\n\t(<code>v4hiv4di2): Ditto.\n\t(<code>v2hiv2di2): Ditto.\n\t(<code>v2siv2di2): Ditto.\n\ngcc/testsuite/ChangeLog:\n\tPR target/95229\n\t* g++.target/i386/pr95229.C: New test.", "tree": {"sha": "e337a8fa91e894d044af53b6f92b9073bb476be0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e337a8fa91e894d044af53b6f92b9073bb476be0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3872a519c8fa65318efa1b481d331ef91b3ff044", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3872a519c8fa65318efa1b481d331ef91b3ff044", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3872a519c8fa65318efa1b481d331ef91b3ff044", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3872a519c8fa65318efa1b481d331ef91b3ff044/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cf6f31527c6d8dd2cc96f4efe8ff70d60d5fb44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cf6f31527c6d8dd2cc96f4efe8ff70d60d5fb44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cf6f31527c6d8dd2cc96f4efe8ff70d60d5fb44"}], "stats": {"total": 64, "additions": 54, "deletions": 10}, "files": [{"sha": "3368d86c1e1fdaa9eba8b25826134699e2cf6e2e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3872a519c8fa65318efa1b481d331ef91b3ff044/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3872a519c8fa65318efa1b481d331ef91b3ff044/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3872a519c8fa65318efa1b481d331ef91b3ff044", "patch": "@@ -1,3 +1,18 @@\n+2020-05-20  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/95229\n+\t* config/i386/sse.md (<code>v8qiv8hi2): Use\n+\tsimplify_gen_subreg instead of simplify_subreg.\n+\t(<code>v8qiv8si2): Ditto.\n+\t(<code>v4qiv4si2): Ditto.\n+\t(<code>v4hiv4si2): Ditto.\n+\t(<code>v8qiv8di2): Ditto.\n+\t(<code>v4qiv4di2): Ditto.\n+\t(<code>v2qiv2di2): Ditto.\n+\t(<code>v4hiv4di2): Ditto.\n+\t(<code>v2hiv2di2): Ditto.\n+\t(<code>v2siv2di2): Ditto.\n+\n 2020-05-20  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/95238"}, {"sha": "c831543b4e9722b4ac4f37b41effec15da0fa91a", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3872a519c8fa65318efa1b481d331ef91b3ff044/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3872a519c8fa65318efa1b481d331ef91b3ff044/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=3872a519c8fa65318efa1b481d331ef91b3ff044", "patch": "@@ -17408,7 +17408,7 @@\n {\n   if (!MEM_P (operands[1]))\n     {\n-      operands[1] = simplify_subreg (V16QImode, operands[1], V8QImode, 0);\n+      operands[1] = simplify_gen_subreg (V16QImode, operands[1], V8QImode, 0);\n       emit_insn (gen_sse4_1_<code>v8qiv8hi2 (operands[0], operands[1]));\n       DONE;\n     }\n@@ -17485,7 +17485,7 @@\n {\n   if (!MEM_P (operands[1]))\n     {\n-      operands[1] = simplify_subreg (V16QImode, operands[1], V8QImode, 0);\n+      operands[1] = simplify_gen_subreg (V16QImode, operands[1], V8QImode, 0);\n       emit_insn (gen_avx2_<code>v8qiv8si2 (operands[0], operands[1]));\n       DONE;\n     }\n@@ -17548,7 +17548,7 @@\n {\n   if (!MEM_P (operands[1]))\n     {\n-      operands[1] = simplify_subreg (V16QImode, operands[1], V4QImode, 0);\n+      operands[1] = simplify_gen_subreg (V16QImode, operands[1], V4QImode, 0);\n       emit_insn (gen_sse4_1_<code>v4qiv4si2 (operands[0], operands[1]));\n       DONE;\n     }\n@@ -17640,7 +17640,7 @@\n {\n   if (!MEM_P (operands[1]))\n     {\n-      operands[1] = simplify_subreg (V8HImode, operands[1], V4HImode, 0);\n+      operands[1] = simplify_gen_subreg (V8HImode, operands[1], V4HImode, 0);\n       emit_insn (gen_sse4_1_<code>v4hiv4si2 (operands[0], operands[1]));\n       DONE;\n     }\n@@ -17698,7 +17698,7 @@\n {\n   if (!MEM_P (operands[1]))\n     {\n-      operands[1] = simplify_subreg (V16QImode, operands[1], V8QImode, 0);\n+      operands[1] = simplify_gen_subreg (V16QImode, operands[1], V8QImode, 0);\n       emit_insn (gen_avx512f_<code>v8qiv8di2 (operands[0], operands[1]));\n       DONE;\n     }\n@@ -17759,7 +17759,7 @@\n {\n   if (!MEM_P (operands[1]))\n     {\n-      operands[1] = simplify_subreg (V16QImode, operands[1], V8QImode, 0);\n+      operands[1] = simplify_gen_subreg (V16QImode, operands[1], V8QImode, 0);\n       emit_insn (gen_avx2_<code>v4qiv4di2 (operands[0], operands[1]));\n       DONE;\n     }\n@@ -17785,7 +17785,7 @@\n \t  (match_operand:V2QI 1 \"register_operand\")))]\n   \"TARGET_SSE4_1\"\n {\n-  operands[1] = simplify_subreg (V16QImode, operands[1], V2QImode, 0);\n+  operands[1] = simplify_gen_subreg (V16QImode, operands[1], V2QImode, 0);\n   emit_insn (gen_sse4_1_<code>v2qiv2di2 (operands[0], operands[1]));\n   DONE;\n })\n@@ -17857,7 +17857,7 @@\n {\n   if (!MEM_P (operands[1]))\n     {\n-      operands[1] = simplify_subreg (V8HImode, operands[1], V4HImode, 0);\n+      operands[1] = simplify_gen_subreg (V8HImode, operands[1], V4HImode, 0);\n       emit_insn (gen_avx2_<code>v4hiv4di2 (operands[0], operands[1]));\n       DONE;\n     }\n@@ -17918,7 +17918,7 @@\n {\n   if (!MEM_P (operands[1]))\n     {\n-      operands[1] = simplify_subreg (V8HImode, operands[1], V2HImode, 0);\n+      operands[1] = simplify_gen_subreg (V8HImode, operands[1], V2HImode, 0);\n       emit_insn (gen_sse4_1_<code>v2hiv2di2 (operands[0], operands[1]));\n       DONE;\n     }\n@@ -18008,7 +18008,7 @@\n {\n   if (!MEM_P (operands[1]))\n     {\n-      operands[1] = simplify_subreg (V4SImode, operands[1], V2SImode, 0);\n+      operands[1] = simplify_gen_subreg (V4SImode, operands[1], V2SImode, 0);\n       emit_insn (gen_sse4_1_<code>v2siv2di2 (operands[0], operands[1]));\n       DONE;\n     }"}, {"sha": "9d04b2d4b148649c5016d5ba6817d5cb5e8619f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3872a519c8fa65318efa1b481d331ef91b3ff044/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3872a519c8fa65318efa1b481d331ef91b3ff044/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3872a519c8fa65318efa1b481d331ef91b3ff044", "patch": "@@ -1,3 +1,8 @@\n+2020-05-20  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/95229\n+\t* g++.target/i386/pr95229.C: New test.\n+\n 2020-05-20  Mark Eggleston  <markeggleston@gcc.gnu.org>\n \n \tPR fortran/39695"}, {"sha": "edf5aa4389e51fa0f7b3e8e8352029c2a5973ef7", "filename": "gcc/testsuite/g++.target/i386/pr95229.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3872a519c8fa65318efa1b481d331ef91b3ff044/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr95229.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3872a519c8fa65318efa1b481d331ef91b3ff044/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr95229.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr95229.C?ref=3872a519c8fa65318efa1b481d331ef91b3ff044", "patch": "@@ -0,0 +1,24 @@\n+// PR target/95229\n+// { dg-do compile }\n+// { dg-options \"-O3 -march=znver1\" }\n+\n+struct a {\n+  unsigned long long b;\n+  unsigned long long c;\n+};\n+\n+class {\n+public:\n+  a d;\n+} e;\n+\n+struct f {\n+  unsigned g;\n+  unsigned h;\n+  void i();\n+};\n+\n+void f::i() {\n+  e.d.b += g;\n+  e.d.c += h;\n+}"}]}