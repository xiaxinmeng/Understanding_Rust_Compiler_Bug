{"sha": "f172748112d29afc2d4eddcdc68845761ad78ad9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE3Mjc0ODExMmQyOWFmYzJkNGVkZGNkYzY4ODQ1NzYxYWQ3OGFkOQ==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@debian.org", "date": "2001-12-14T22:52:17Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2001-12-14T22:52:17Z"}, "message": "gcj.texi: Markup for man page generation.\n\n\t* gcj.texi: Markup for man page generation. Document missing\n\toptions printed by <tool> --help.\n\tTerminate description of gij's -ms option with a dot.\n\t* Make-lang.in ($(srcdir)/java/*.1): New targets.\n\t(java.generated-manpages java.install-man, java.uninstall,\n\tjava-maintainer-clean) Updated.\n\nFrom-SVN: r48016", "tree": {"sha": "7bd30c66d3067f816c575d218766130821d6dffa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bd30c66d3067f816c575d218766130821d6dffa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f172748112d29afc2d4eddcdc68845761ad78ad9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f172748112d29afc2d4eddcdc68845761ad78ad9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f172748112d29afc2d4eddcdc68845761ad78ad9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f172748112d29afc2d4eddcdc68845761ad78ad9/comments", "author": null, "committer": null, "parents": [{"sha": "3da33af300c4717e3a93359153a49339d2852d59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3da33af300c4717e3a93359153a49339d2852d59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3da33af300c4717e3a93359153a49339d2852d59"}], "stats": {"total": 276, "additions": 263, "deletions": 13}, "files": [{"sha": "192b6bc104d9c4f772b750509a97ae7082627678", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f172748112d29afc2d4eddcdc68845761ad78ad9/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f172748112d29afc2d4eddcdc68845761ad78ad9/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=f172748112d29afc2d4eddcdc68845761ad78ad9", "patch": "@@ -1,3 +1,12 @@\n+2001-12-14  Matthias Klose  <doko@debian.org>\n+\n+\t* gcj.texi: Markup for man page generation. Document missing\n+\toptions printed by <tool> --help.\n+\tTerminate description of gij's -ms option with a dot.\n+\t* Make-lang.in ($(srcdir)/java/*.1): New targets.\n+\t(java.generated-manpages java.install-man, java.uninstall,\n+\tjava-maintainer-clean) Updated.\n+\n 2001-12-14  Hans Boehm  <Hans_Boehm@hp.com>\n \n \t* class.c (get_dispatch_table): Fix java vtable layout"}, {"sha": "cb44d231d7fa429157382c57ad63fcb6c229bcc6", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 73, "deletions": 1, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f172748112d29afc2d4eddcdc68845761ad78ad9/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f172748112d29afc2d4eddcdc68845761ad78ad9/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=f172748112d29afc2d4eddcdc68845761ad78ad9", "patch": "@@ -149,7 +149,9 @@ java.rest.encap:\n \n java.info: $(srcdir)/java/gcj.info\n java.dvi: java/gcj.dvi\n-java.generated-manpages:\n+java.generated-manpages: $(srcdir)/java/gcj.1 $(srcdir)/java/gcjh.1 \\\n+\t$(srcdir)/java/jv-scan.1 $(srcdir)/java/jcf-dump.1 \\\n+\t$(srcdir)/java/gij.1\n \n # Install hooks:\n # jc1, gcj, jvgenmain, and gcjh are installed elsewhere as part\n@@ -184,6 +186,12 @@ java.install-man:\n java.uninstall:\n \t-rm -rf $(bindir)/$(JAVA_INSTALL_NAME)$(exeext)\n \t-rm -rf $(bindir)/$(JAVA_CROSS_NAME)$(exeext)\n+\t-rm -rf $(man1dir)/$(JAVA_INSTALL_NAME)$(man1ext)\n+\t-rm -rf $(man1dir)/$(JAVA_CROSS_NAME)$(man1ext)\n+\t-rm -rf $(man1dir)/gcjh$(man1ext)\n+\t-rm -rf $(man1dir)/jv-scan$(man1ext)\n+\t-rm -rf $(man1dir)/jcf-dump$(man1ext)\n+\t-rm -rf $(man1dir)/gij$(man1ext)\n \n java.install-info: installdirs\n \tif [ -f jc1$(exeext) ] ; then \\\n@@ -217,6 +225,9 @@ java.distclean:\n java.extraclean:\n java.maintainer-clean:\n \t-rm -f java/parse.c java/parse-scan.c java/parse.output java/y.tab.c\n+\t-rm -f $(srcdir)/java/gcj.1 $(srcdir)/java/gcjh.1\n+\t-rm -f $(srcdir)/java/jv-scan.1 $(srcdir)/java/jcf-dump.1\n+\t-rm -f $(srcdir)/java/gij.1\n #\f\n # Stage hooks:\n # The main makefile has already created stage?/java.\n@@ -309,3 +320,64 @@ java/gcj.dvi: $(srcdir)/java/gcj.texi $(srcdir)/doc/include/fdl.texi \\\n \t $(srcdir)/doc/include/gpl.texi\n \ts=`cd $(srcdir); pwd`; export s; \\\n \tcd java && $(TEXI2DVI) -I $$s/doc/include $$s/java/gcj.texi\n+\n+$(srcdir)/java/gcj.1: $(srcdir)/java/gcj.texi\n+\t-$(TEXI2POD) -D gcj < $(srcdir)/java/gcj.texi > java/gcj.pod\n+\t($(POD2MAN) --section=1 java/gcj.pod > java/gcj.1.T$$$$ && \\\n+\t\tmv -f java/gcj.1.T$$$$ $(srcdir)/java/gcj.1) || \\\n+\t\t(rm -f java/gcj.1.T$$$$ && exit 1)\n+\trm -f java/gcj.pod\n+\n+$(srcdir)/java/gcjh.1: $(srcdir)/java/gcj.texi\n+\t-$(TEXI2POD) -D gcjh < $(srcdir)/java/gcj.texi > java/gcjh.pod\n+\t($(POD2MAN) --section=1 java/gcjh.pod > java/gcjh.1.T$$$$ && \\\n+\t\tmv -f java/gcjh.1.T$$$$ $(srcdir)/java/gcjh.1) || \\\n+\t\t(rm -f java/gcjh.1.T$$$$ && exit 1)\n+\trm -f java/gcjh.pod\n+\n+$(srcdir)/java/jv-scan.1: $(srcdir)/java/gcj.texi\n+\t-$(TEXI2POD) -D jv-scan < $(srcdir)/java/gcj.texi > java/jv-scan.pod\n+\t($(POD2MAN) --section=1 java/jv-scan.pod > java/jv-scan.1.T$$$$ && \\\n+\t\tmv -f java/jv-scan.1.T$$$$ $(srcdir)/java/jv-scan.1) || \\\n+\t\t(rm -f java/jv-scan.1.T$$$$ && exit 1)\n+\trm -f java/jv-scan.pod\n+\n+$(srcdir)/java/jcf-dump.1: $(srcdir)/java/gcj.texi\n+\t-$(TEXI2POD) -D jcf-dump < $(srcdir)/java/gcj.texi > java/jcf-dump.pod\n+\t($(POD2MAN) --section=1 java/jcf-dump.pod > java/jcf-dump.1.T$$$$ && \\\n+\t\tmv -f java/jcf-dump.1.T$$$$ $(srcdir)/java/jcf-dump.1) || \\\n+\t\t(rm -f java/jcf-dump.1.T$$$$ && exit 1)\n+\trm -f java/jcf-dump.pod\n+\n+$(srcdir)/java/gij.1: $(srcdir)/java/gcj.texi\n+\t-$(TEXI2POD) -D gij < $(srcdir)/java/gcj.texi > java/gij.pod\n+\t($(POD2MAN) --section=1 java/gij.pod > java/gij.1.T$$$$ && \\\n+\t\tmv -f java/gij.1.T$$$$ $(srcdir)/java/gij.1) || \\\n+\t\t(rm -f java/gij.1.T$$$$ && exit 1)\n+\trm -f java/gij.pod\n+\n+# Install the man pages.\n+java.install-man: installdirs $(GENERATED_JAVA_MANPAGES)\n+\t-if [ -f $(GCJ)$(exeext) ]; then \\\n+\t  if [ -f $(GCJ)-cross$(exeext) ]; then \\\n+\t    rm -f $(man1dir)/$(JAVA_CROSS_NAME)$(man1ext); \\\n+\t    $(INSTALL_DATA) $(srcdir)/java/gcj.1 $(man1dir)/$(JAVA_CROSS_NAME)$(man1ext); \\\n+\t    chmod a-x $(man1dir)/$(JAVA_CROSS_NAME)$(man1ext); \\\n+\t  else \\\n+\t    rm -f $(man1dir)/$(JAVA_INSTALL_NAME)$(man1ext); \\\n+\t    $(INSTALL_DATA) $(srcdir)/java/gcj.1 $(man1dir)/$(JAVA_INSTALL_NAME)$(man1ext); \\\n+\t    chmod a-x $(man1dir)/$(JAVA_INSTALL_NAME)$(man1ext); \\\n+\t  fi ; \\\n+\tfi\n+\t-rm -f $(man1dir)/gcjh$(man1ext)\n+\t-$(INSTALL_DATA) $(srcdir)/java/gcjh.1 $(man1dir)/gcjh$(man1ext)\n+\t-chmod a-x $(man1dir)/gcjh$(man1ext)\n+\t-rm -f $(man1dir)/jv-scan$(man1ext)\n+\t-$(INSTALL_DATA) $(srcdir)/java/jv-scan.1 $(man1dir)/jv-scan$(man1ext)\n+\t-chmod a-x $(man1dir)/jv-scan$(man1ext)\n+\t-rm -f $(man1dir)/jcf-dump$(man1ext)\n+\t-$(INSTALL_DATA) $(srcdir)/java/jcf-dump.1 $(man1dir)/jcf-dump$(man1ext)\n+\t-chmod a-x $(man1dir)/jcf-dump$(man1ext)\n+\t-rm -f $(man1dir)/gij$(man1ext)\n+\t-$(INSTALL_DATA) $(srcdir)/java/gij.1 $(man1dir)/gij$(man1ext)\n+\t-chmod a-x $(man1dir)/gij$(man1ext)"}, {"sha": "d9922e0e64e17526d167f7e12faade7d98001165", "filename": "gcc/java/gcj.texi", "status": "modified", "additions": 181, "deletions": 12, "changes": 193, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f172748112d29afc2d4eddcdc68845761ad78ad9/gcc%2Fjava%2Fgcj.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f172748112d29afc2d4eddcdc68845761ad78ad9/gcc%2Fjava%2Fgcj.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgcj.texi?ref=f172748112d29afc2d4eddcdc68845761ad78ad9", "patch": "@@ -14,6 +14,10 @@\n @set version-gcc 3.1\n @set which-gcj GCC-@value{version-gcc}\n \n+@macro gcctabopt{body}\n+@code{\\body\\}\n+@end macro\n+\n @ifinfo\n @format\n @dircategory Programming\n@@ -33,15 +37,23 @@\n @end direntry\n @end format\n \n+@c man begin COPYRIGHT\n Copyright (C) @value{copyrights-gcj} Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.1 or\n any later version published by the Free Software Foundation; with the\n Invariant Sections being ``GNU General Public License'', the Front-Cover\n texts being (a) (see below), and with the Back-Cover Texts being (b)\n-(see below).  A copy of the license is included in the section entitled\n+(see below).  A copy of the license is included in the\n+@c man end\n+section entitled\n ``GNU Free Documentation License''.\n+@ignore\n+@c man begin COPYRIGHT\n+man page gfdl(7).\n+@c man end\n+@end ignore\n \n (a) The FSF's Front-Cover Text is:\n \n@@ -120,11 +132,33 @@ files and object files, and it can read both Java source code and\n @node Invoking gcj\n @chapter Invoking gcj\n \n+@c man title gcj Ahead-of-time compiler for the Java language\n+\n+@ignore\n+@c man begin SYNOPSIS gcj\n+gcj [@option{-I}@var{dir}@dots{}] [@option{-d}@var{dir}@dots{}]\n+    [@option{--classpath}=@var{path}] [@option{--CLASSPATH}=@var{path}]\n+    [@option{-f}@var{option}@dots{}] [@option{--encoding}=@var{name}]\n+    [@option{--main}=@var{classname}] [@option{-D}@var{name}[=@var{value}]@dots{}]\n+    [@option{-C}] [@option{-R} @var{resource-name}] [@option{-d} @var{directory}]\n+    [@option{-W}@var{warn}@dots{}]\n+    @var{sourcefile}@dots{}\n+@c man end\n+@c man begin SEEALSO gcj\n+gcc(1), gcjh(1), gij(1), jv-scan(1), jcf-dump(1), gfdl(7),\n+and the Info entries for @file{gcj} and @file{gcc}.\n+@c man end\n+@end ignore\n+\n+@c man begin DESCRIPTION gcj\n+\n As @code{gcj} is just another front end to @code{gcc}, it supports many\n of the same options as gcc.  @xref{Option Summary, , Option Summary,\n gcc, Using the GNU Compiler Collection}.  This manual only documents the\n options specific to @code{gcj}.\n \n+@c man end\n+\n @menu\n * Input and output files::\n * Input Options::\t\tHow gcj finds files\n@@ -134,14 +168,16 @@ options specific to @code{gcj}.\n * Configure-time Options::\tOptions you won't use\n @end menu\n \n+@c man begin OPTIONS gcj\n+\n @node Input and output files\n @section Input and output files\n \n A @code{gcj} command is like a @code{gcc} command, in that it\n consists of a number of options and file names.  The following kinds\n of input file names are supported:\n \n-@table @code\n+@table @gcctabopt\n @item @var{file}.java\n Java source files.\n @item @var{file}.class\n@@ -192,7 +228,7 @@ In the below, a directory or path component can refer either to an\n actual directory on the filesystem, or to a @file{.zip} or @file{.jar}\n file, which @code{gcj} will search as if it is a directory.\n \n-@table @code\n+@table @gcctabopt\n @item -I@var{dir}\n All directories specified by @code{-I} are kept in order and prepended\n to the class path constructed from all the other options.  Unless\n@@ -245,7 +281,7 @@ if it isn't found, unless it compiles to bytecode (the option\n @code{-fforce-classes-archive-check} can be used to overide this\n behavior in this particular case.)\n \n-@table @code\n+@table @gcctabopt\n @item -fforce-classes-archive-check\n This forces the compiler to always check for the special zero length\n attribute @code{gnu.gcj.gcj-compiled} in @code{java.lang.Object} and\n@@ -287,7 +323,7 @@ warning, then @code{-Wno-foo} will disable it.  Here we've chosen to\n document the form of the warning which will have an effect -- the\n default being the opposite of what is listed.\n \n-@table @code\n+@table @gcctabopt\n @item -Wredundant-modifiers\n With this flag, @code{gcj} will warn about redundant modifiers.  For\n instance, it will warn if an interface method is declared @code{public}.\n@@ -316,7 +352,7 @@ This is the same as @code{-Wredundant-modifiers -Wextraneous-semicolon\n In addition to the many @code{gcc} options controlling code generation,\n @code{gcj} has several options specific to itself.\n \n-@table @code\n+@table @gcctabopt\n @item --main=@var{CLASSNAME}\n This option is used when linking to specify the name of the class whose\n @code{main} method should be invoked when the resulting executable is\n@@ -382,7 +418,7 @@ this group into a @samp{spec} file which is read by @code{gcj}.  These\n options are listed here for completeness; if you are using @code{libgcj}\n then you won't want to touch these options.\n \n-@table @code\n+@table @gcctabopt\n @item -fuse-boehm-gc\n This enables the use of the Boehm GC bitmap marking code.  In particular\n this causes @code{gcj} to put an object marking descriptor into each\n@@ -406,6 +442,7 @@ this because null pointer accesses are caught automatically by the\n processor.\n @end table\n \n+@c man end\n \n @node Compatibility\n @chapter Compatibility with the Java Platform\n@@ -443,12 +480,37 @@ the appropriate response.\n @node Invoking gcjh\n @chapter Invoking gcjh\n \n+@c man title gcjh generate header files from Java class files\n+\n+@c man begin DESCRIPTION gcjh\n+\n The @code{gcjh} program is used to generate header files from class\n files.  It can generate both CNI and JNI header files, as well as stub\n implementation files which can be used as a basis for implementing the\n required native methods.\n \n-@table @code\n+@c man end\n+\n+@ignore\n+@c man begin SYNOPSIS gcjh\n+gcjh [@option{-stubs}] [@option{-jni}]\n+    [@option{-add}@var{text}] [@option{-append}@var{text}] [@option{-friend}@var{text}] [@option{-preprend}@var{text}]\n+    [@option{--classpath}=@var{path}] [@option{--CLASSPATH}=@var{path}]\n+    [@option{-I}@var{dir}@dots{}] [@option{-d}@var{dir}@dots{}]\n+    [@option{-o}@var{file}] [@option{-td}@var{dir}]\n+    [@option{-M}] [@option{-MM}] [@option{-MD}] [@option{-MMD}]\n+    [@option{--version}] [@option{--help}] [@option{-v}] [@option{--verbose}]\n+    @var{classname}@dots{}\n+@c man end\n+@c man begin SEEALSO gcjh\n+gcc(1), gcj(1), gij(1), jv-scan(1), jcf-dump(1), gfdl(7),\n+and the Info entries for @file{gcj} and @file{gcc}.\n+@c man end\n+@end ignore\n+\n+@c man begin OPTIONS gcjh\n+\n+@table @gcctabopt\n @item -stubs\n This causes @code{gcjh} to generate stub files instead of header files.\n By default the stub file will be named after the class, with a suffix of\n@@ -488,24 +550,61 @@ one class on the command line.\n @item -td @var{directory}\n Sets the name of the directory to use for temporary files.\n \n+@item -M\n+Print all dependencies to stdout; suppress ordinary output.\n+\n+@item -MM\n+Print non-system dependencies to stdout; suppress ordinary output.\n+\n+@item -MD\n+Print all dependencies to stdout.\n+\n+@item -MMD\n+Print non-system dependencies to stdout.\n+\n @item --help\n Print help about @code{gcjh} and exit.  No further processing is done.\n \n @item --version\n Print version information for @code{gcjh} and exit.  No further\n processing is done.\n+\n+@item -v, --verbose\n+Print extra information while running.\n @end table\n \n All remaining options are considered to be names of classes.\n \n+@c man end\n \n @node Invoking jv-scan\n @chapter Invoking jv-scan\n \n+@c man title jv-scan print information about Java source file\n+\n+@c man begin DESCRIPTION jv-scan\n+\n The @code{jv-scan} program can be used to print information about a Java\n source file (@file{.java} file).\n \n-@table @code\n+@c man end\n+\n+@ignore\n+@c man begin SYNOPSIS jv-scan\n+jv-scan [@option{--complexity}] [@option{--encoding}@var{name}]\n+    [@option{--print-main}] [@option{--list-class}] [@option{--list-filename}]\n+    [@option{--version}] [@option{--help}]\n+    [@option{-o}@var{file}] @var{inputfile}@dots{}\n+@c man end\n+@c man begin SEEALSO jv-scan\n+gcc(1), gcj(1), gcjh(1), gij(1), jcf-dump(1), gfdl(7),\n+and the Info entries for @file{gcj} and @file{gcc}.\n+@c man end\n+@end ignore\n+\n+@c man begin OPTIONS jv-scan\n+\n+@table @gcctabopt\n @item --complexity\n This prints a complexity measure, related to cyclomatic complexity, for\n each input file.\n@@ -526,17 +625,46 @@ also print the name of the file in which each class was found.\n \n @item -o @var{file}\n Print output to the named file.\n+\n+@item --help\n+Print help, then exit.\n+\n+@item --version\n+Print version number, then exit.\n @end table\n \n+@c man end\n \n @node Invoking jcf-dump\n @chapter Invoking jcf-dump\n \n+@c man title jcf-dump print information about Java class files\n+\n+@ignore\n+@c man begin SYNOPSIS jcf-dump\n+jcf-dump [@option{-c}] [@option{--javap}]\n+    [@option{--classpath}=@var{path}] [@option{--CLASSPATH}=@var{path}]\n+    [@option{-I}@var{dir}@dots{}] [@option{-o}@var{file}]\n+    [@option{--version}] [@option{--help}] [@option{-v}] [@option{--verbose}]\n+    @var{classname}@dots{}\n+@c man end\n+@c man begin SEEALSO jcf-dump\n+gcc(1), gcj(1), gcjh(1), gij(1), jcf-dump(1), gfdl(7),\n+and the Info entries for @file{gcj} and @file{gcc}.\n+@c man end\n+@end ignore\n+\n+@c man begin DESCRIPTION jcf-dump\n+\n This is a class file examiner, similar to @code{javap}.  It will print\n information about a number of classes, which are specifed by class name\n or file name.\n \n-@table @code\n+@c man end\n+\n+@c man begin OPTIONS jcf-dump\n+\n+@table @gcctabopt\n @item -c\n Disassemble method bodies.  By default method bodies are not printed.\n \n@@ -549,12 +677,42 @@ feature is very incomplete.\n @itemx -I@var{directory}\n @itemx -o @var{file}\n These options as the same as the corresponding @code{gcj} options.\n+\n+@item --help\n+Print help, then exit.\n+\n+@item --version\n+Print version number, then exit.\n+\n+@item -v, --verbose\n+Print extra information while running.\n @end table\n \n+@c man end\n \n @node Invoking gij\n @chapter Invoking gij\n \n+@c man title gij GNU interpreter for Java bytecode\n+\n+@ignore\n+@c man begin SYNOPSIS gij\n+gij [@option{OPTION}] @dots{} @var{JARFILE} [@var{ARGS}@dots{}]\n+\n+gij [@option{-jar}] [@option{OPTION}] @dots{} @var{CLASS} [@var{ARGS}@dots{}]\n+\n+  [@option{-D}@var{name}[=@var{value}]@dots{}]\n+  [@option{-ms=}@var{number}] [@option{-mx=}@var{number}]\n+  [@option{--version}] [@option{--help}]\n+@c man end\n+@c man begin SEEALSO gij\n+gcc(1), gcj(1), gcjh(1), jv-scan(1), jcf-dump(1), gfdl(7),\n+and the Info entries for @file{gcj} and @file{gcc}.\n+@c man end\n+@end ignore\n+\n+@c man begin DESCRIPTION gij\n+\n @code{gij} is a Java bytecode interpreter included with @code{libgcj}.\n @code{gij} is not available on every platform; porting it requires a\n small amount of assembly programming which has not been done for all the\n@@ -580,7 +738,11 @@ Note that @code{gij} is not limited to interpreting code.  Because\n objects, it is possible to give @code{gij} the name of a class which has\n been compiled and put into a shared library on the class path.\n \n-@table @code\n+@c man end\n+\n+@c man begin OPTIONS gij\n+\n+@table @gcctabopt\n @item -D@var{name}[=@var{value}]\n This defines a system property named @var{name} with value @var{value}.\n If @var{value} is not specified then it defaults to the empty string.\n@@ -589,16 +751,23 @@ be retrieved at runtime using the @code{java.lang.System.getProperty}\n method.\n \n @item -ms=@var{number}\n-This sets the initial heap size \n+This sets the initial heap size.\n \n @item -mx=@var{number}\n This sets the maximum heap size.\n \n @item -jar\n This indicates that the name passed to @code{gij} should be interpreted\n as the name of a jar file, not a class.\n+\n+@item --help\n+Print help, then exit.\n+\n+@item --version\n+Print version number, then exit.\n @end table\n \n+@c man end\n \n @node Resources\n @chapter Resources"}]}