{"sha": "b3e77224edbcb06cfd6ef585c11fc2c7d9672a16", "node_id": "C_kwDOANBUbNoAKGIzZTc3MjI0ZWRiY2IwNmNmZDZlZjU4NWMxMWZjMmM3ZDk2NzJhMTY", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2022-01-17T04:55:42Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2022-01-17T05:43:23Z"}, "message": "rs6000: Use known constant for GET_MODE_NUNITS and similar\n\nThis patch is to clean up some codes with GET_MODE_UNIT_SIZE or\nGET_MODE_NUNITS, which can use known constants or just be removed.\n\nNote that Carl Love helped to confirm altivec_vreveti2 introduced\nin r12-1341 is useless and can be removed.\n\ngcc/ChangeLog:\n\n\t* config/rs6000/altivec.md (altivec_vreveti2): Remove.\n\t* config/rs6000/vsx.md (*vsx_extract_si, *vsx_extract_si_<uns>float_df,\n\t*vsx_extract_si_<uns>float_<mode>, *vsx_insert_extract_v4sf_p9): Use\n\tknown constant values to simplify code.", "tree": {"sha": "f963a90de8dd6f63e0bc3284e6b6cf84c07dec82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f963a90de8dd6f63e0bc3284e6b6cf84c07dec82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3e77224edbcb06cfd6ef585c11fc2c7d9672a16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3e77224edbcb06cfd6ef585c11fc2c7d9672a16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3e77224edbcb06cfd6ef585c11fc2c7d9672a16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3e77224edbcb06cfd6ef585c11fc2c7d9672a16/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "240dd6c063b481c092c9ec406b69b400f6f033f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/240dd6c063b481c092c9ec406b69b400f6f033f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/240dd6c063b481c092c9ec406b69b400f6f033f1"}], "stats": {"total": 41, "additions": 12, "deletions": 29}, "files": [{"sha": "efc8ae35c2e7816cfb8d8bba3413f81f56d9a3e8", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3e77224edbcb06cfd6ef585c11fc2c7d9672a16/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3e77224edbcb06cfd6ef585c11fc2c7d9672a16/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=b3e77224edbcb06cfd6ef585c11fc2c7d9672a16", "patch": "@@ -3961,31 +3961,6 @@\n   DONE;\n })\n \n-;; Vector reverse elements\n-(define_expand \"altivec_vreveti2\"\n-  [(set (match_operand:TI 0 \"register_operand\" \"=v\")\n-\t(unspec:TI [(match_operand:TI 1 \"register_operand\" \"v\")]\n-\t\t      UNSPEC_VREVEV))]\n-  \"TARGET_ALTIVEC\"\n-{\n-  int i, j, size, num_elements;\n-  rtvec v = rtvec_alloc (16);\n-  rtx mask = gen_reg_rtx (V16QImode);\n-\n-  size = GET_MODE_UNIT_SIZE (TImode);\n-  num_elements = GET_MODE_NUNITS (TImode);\n-\n-  for (j = 0; j < num_elements; j++)\n-    for (i = 0; i < size; i++)\n-      RTVEC_ELT (v, i + j * size)\n-\t= GEN_INT (i + (num_elements - 1 - j) * size);\n-\n-  emit_insn (gen_vec_initv16qiqi (mask, gen_rtx_PARALLEL (V16QImode, v)));\n-  emit_insn (gen_altivec_vperm_ti (operands[0], operands[1],\n-\t     operands[1], mask));\n-  DONE;\n-})\n-\n ;; Vector reverse elements for V16QI V8HI V4SI V4SF\n (define_expand \"altivec_vreve<mode>2\"\n   [(set (match_operand:VEC_K 0 \"register_operand\" \"=v\")"}, {"sha": "e84ffb6a6db93c6c508d07e3509d8cc4927b8d29", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3e77224edbcb06cfd6ef585c11fc2c7d9672a16/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3e77224edbcb06cfd6ef585c11fc2c7d9672a16/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=b3e77224edbcb06cfd6ef585c11fc2c7d9672a16", "patch": "@@ -3854,8 +3854,10 @@\n   rtx vec_tmp = operands[3];\n   int value;\n \n+  /* Adjust index for LE element ordering, the below minuend 3 is computed by\n+     GET_MODE_NUNITS (V4SImode) - 1.  */\n   if (!BYTES_BIG_ENDIAN)\n-    element = GEN_INT (GET_MODE_NUNITS (V4SImode) - 1 - INTVAL (element));\n+    element = GEN_INT (3 - INTVAL (element));\n \n   /* If the value is in the correct position, we can avoid doing the VSPLT<x>\n      instruction.  */\n@@ -4230,8 +4232,10 @@\n   rtx v4si_tmp = operands[3];\n   int value;\n \n+  /* Adjust index for LE element ordering, the below minuend 3 is computed by\n+     GET_MODE_NUNITS (V4SImode) - 1.  */\n   if (!BYTES_BIG_ENDIAN)\n-    element = GEN_INT (GET_MODE_NUNITS (V4SImode) - 1 - INTVAL (element));\n+    element = GEN_INT (3 - INTVAL (element));\n \n   /* If the value is in the correct position, we can avoid doing the VSPLT<x>\n      instruction.  */\n@@ -4273,8 +4277,10 @@\n   rtx df_tmp = operands[4];\n   int value;\n \n+  /* Adjust index for LE element ordering, the below minuend 3 is computed by\n+     GET_MODE_NUNITS (V4SImode) - 1.  */\n   if (!BYTES_BIG_ENDIAN)\n-    element = GEN_INT (GET_MODE_NUNITS (V4SImode) - 1 - INTVAL (element));\n+    element = GEN_INT (3 - INTVAL (element));\n \n   /* If the value is in the correct position, we can avoid doing the VSPLT<x>\n      instruction.  */\n@@ -4466,8 +4472,10 @@\n {\n   int ele = INTVAL (operands[4]);\n \n+  /* Adjust index for LE element ordering, the below minuend 3 is computed by\n+     GET_MODE_NUNITS (V4SFmode) - 1.  */\n   if (!BYTES_BIG_ENDIAN)\n-    ele = GET_MODE_NUNITS (V4SFmode) - 1 - ele;\n+    ele = 3 - ele;\n \n   operands[4] = GEN_INT (GET_MODE_SIZE (SFmode) * ele);\n   return \"xxinsertw %x0,%x2,%4\";"}]}