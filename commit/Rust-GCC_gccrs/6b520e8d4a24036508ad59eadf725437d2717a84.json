{"sha": "6b520e8d4a24036508ad59eadf725437d2717a84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI1MjBlOGQ0YTI0MDM2NTA4YWQ1OWVhZGY3MjU0MzdkMjcxN2E4NA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-12-16T14:19:44Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-12-16T14:19:44Z"}, "message": "re PR tree-optimization/78819 (Wrong code with VRP caused by register assertions along default switch labels)\n\n\tPR tree-optimization/78819\n\t* tree-vrp.c (find_switch_asserts): Return if the insertion limit is 0.\n\tDon't register an assertion if the default case shares a label with\n\tanother case.\n\n\t* gcc.dg/tree-ssa/vrp112.c: New test.\n\nFrom-SVN: r243746", "tree": {"sha": "ee8280c2dd57fb2d8ff965d646a7cfff34eaf2be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee8280c2dd57fb2d8ff965d646a7cfff34eaf2be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b520e8d4a24036508ad59eadf725437d2717a84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b520e8d4a24036508ad59eadf725437d2717a84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b520e8d4a24036508ad59eadf725437d2717a84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b520e8d4a24036508ad59eadf725437d2717a84/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed2def05fefdf59e42ad6f13262e5323030e1610", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed2def05fefdf59e42ad6f13262e5323030e1610", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed2def05fefdf59e42ad6f13262e5323030e1610"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "2a443d0a4999823060a8c96b4a49f0cdf832baab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b520e8d4a24036508ad59eadf725437d2717a84/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b520e8d4a24036508ad59eadf725437d2717a84/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b520e8d4a24036508ad59eadf725437d2717a84", "patch": "@@ -1,3 +1,10 @@\n+2016-12-16  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR tree-optimization/78819\n+\t* tree-vrp.c (find_switch_asserts): Return if the insertion limit is 0.\n+\tDon't register an assertion if the default case shares a label with\n+\tanother case.\n+\n 2016-12-16  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* config/arm/arm.md (subsi3_carryin): Add Thumb-2 RSC #0."}, {"sha": "3307b2efce9ff865e918116e4d16b1e3a03a3efe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b520e8d4a24036508ad59eadf725437d2717a84/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b520e8d4a24036508ad59eadf725437d2717a84/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b520e8d4a24036508ad59eadf725437d2717a84", "patch": "@@ -1,3 +1,8 @@\n+2016-12-16  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR tree-optimization/78819\n+\t* gcc.dg/tree-ssa/vrp112.c: New test.\n+\n 2016-12-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/opt61.adb: New test."}, {"sha": "fdc6711bae415dada95bfda62ff762934e7fa20d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp112.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b520e8d4a24036508ad59eadf725437d2717a84/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp112.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b520e8d4a24036508ad59eadf725437d2717a84/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp112.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp112.c?ref=6b520e8d4a24036508ad59eadf725437d2717a84", "patch": "@@ -0,0 +1,31 @@\n+/* PR tree-optimization/78819 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+__attribute__((noinline, noclone)) void\n+foo (int argc)\n+{\n+  if (argc <= 0 || argc > 3)\n+    return;\n+\n+  switch (argc)\n+    {\n+    case 1:\n+    case 3:\n+      if (argc != 3)\n+\t__builtin_abort ();\n+      break;\n+    case 2:\n+      asm (\"\");\n+      break;\n+    default:\n+      __builtin_abort ();\n+    }\n+}\n+\n+int\n+main (void)\n+{\n+  foo (3);\n+  return 0;\n+}"}, {"sha": "31b6b7de35d814db08d07d3df68724ffda1c2d5a", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b520e8d4a24036508ad59eadf725437d2717a84/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b520e8d4a24036508ad59eadf725437d2717a84/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=6b520e8d4a24036508ad59eadf725437d2717a84", "patch": "@@ -6051,10 +6051,17 @@ find_switch_asserts (basic_block bb, gswitch *last)\n   /* Now register along the default label assertions that correspond to the\n      anti-range of each label.  */\n   int insertion_limit = PARAM_VALUE (PARAM_MAX_VRP_SWITCH_ASSERTIONS);\n+  if (insertion_limit == 0)\n+    return;\n+\n+  /* We can't do this if the default case shares a label with another case.  */\n+  tree default_cl = gimple_switch_default_label (last);\n   for (idx = 1; idx < n; idx++)\n     {\n       tree min, max;\n       tree cl = gimple_switch_label (last, idx);\n+      if (CASE_LABEL (cl) == CASE_LABEL (default_cl))\n+\tcontinue;\n \n       min = CASE_LOW (cl);\n       max = CASE_HIGH (cl);\n@@ -6065,6 +6072,8 @@ find_switch_asserts (basic_block bb, gswitch *last)\n \t{\n \t  tree next_min, next_max;\n \t  tree next_cl = gimple_switch_label (last, idx);\n+\t  if (CASE_LABEL (next_cl) == CASE_LABEL (default_cl))\n+\t    break;\n \n \t  next_min = CASE_LOW (next_cl);\n \t  next_max = CASE_HIGH (next_cl);"}]}