{"sha": "75214935bee043e659ca7172a84451ded10e8987", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUyMTQ5MzViZWUwNDNlNjU5Y2E3MTcyYTg0NDUxZGVkMTBlODk4Nw==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2017-12-07T17:50:54Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2017-12-07T17:50:54Z"}, "message": "re PR target/83252 (Wrong code with \"-march=skylake-avx512 -O3\")\n\n2017-12-07  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/83252\n\tPR rtl-optimization/80818\n\t* lra.c (add_regs_to_insn_regno_info): Make a hard reg in CLOBBER\n\talways early clobbered.\n\t* lra-lives.c (process_bb_lives): Check input hard regs for early\n\tclobbered non-operand hard reg.\n\nFrom-SVN: r255471", "tree": {"sha": "d8573e0592c70f7dbd5aff292a730f6d78f007be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8573e0592c70f7dbd5aff292a730f6d78f007be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75214935bee043e659ca7172a84451ded10e8987", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75214935bee043e659ca7172a84451ded10e8987", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75214935bee043e659ca7172a84451ded10e8987", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75214935bee043e659ca7172a84451ded10e8987/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "47f5f7e74920fe65f5ebe4737a9c70c34178990a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47f5f7e74920fe65f5ebe4737a9c70c34178990a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47f5f7e74920fe65f5ebe4737a9c70c34178990a"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "da13cd5f831f45bda5ff232703f0d03d7b7a145a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75214935bee043e659ca7172a84451ded10e8987/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75214935bee043e659ca7172a84451ded10e8987/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75214935bee043e659ca7172a84451ded10e8987", "patch": "@@ -1,3 +1,12 @@\n+2017-12-07  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/83252\n+\tPR rtl-optimization/80818\n+\t* lra.c (add_regs_to_insn_regno_info): Make a hard reg in CLOBBER\n+\talways early clobbered.\n+\t* lra-lives.c (process_bb_lives): Check input hard regs for early\n+\tclobbered non-operand hard reg.\n+\n 2017-12-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/83164"}, {"sha": "785e436dc0e8d7c14c2529f116c870791b89dd1a", "filename": "gcc/lra-lives.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75214935bee043e659ca7172a84451ded10e8987/gcc%2Flra-lives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75214935bee043e659ca7172a84451ded10e8987/gcc%2Flra-lives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-lives.c?ref=75214935bee043e659ca7172a84451ded10e8987", "patch": "@@ -928,7 +928,18 @@ process_bb_lives (basic_block bb, int &curr_point, bool dead_insn_p)\n       for (reg = curr_static_id->hard_regs; reg != NULL; reg = reg->next)\n \tif (reg->type == OP_OUT\n \t    && reg_early_clobber_p (reg, n_alt) && ! reg->subreg_p)\n-\t  make_hard_regno_dead (reg->regno);\n+\t  {\n+\t    struct lra_insn_reg *reg2;\n+\t    \n+\t    /* We can have early clobbered non-operand hard reg and\n+\t       the same hard reg as an insn input.  Don't make hard\n+\t       reg dead before the insns.  */\n+\t    for (reg2 = curr_id->regs; reg2 != NULL; reg2 = reg2->next)\n+\t      if (reg2->type != OP_OUT && reg2->regno == reg->regno)\n+\t\tbreak;\n+\t    if (reg2 == NULL)\n+\t      make_hard_regno_dead (reg->regno);\n+\t  }\n \n       if (need_curr_point_incr)\n \tnext_program_point (curr_point, freq);"}, {"sha": "3fd15ee57943af3b31701f6bc5727526e489697e", "filename": "gcc/lra.c", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75214935bee043e659ca7172a84451ded10e8987/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75214935bee043e659ca7172a84451ded10e8987/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=75214935bee043e659ca7172a84451ded10e8987", "patch": "@@ -1476,15 +1476,11 @@ add_regs_to_insn_regno_info (lra_insn_recog_data_t data, rtx x,\n       add_regs_to_insn_regno_info (data, SET_SRC (x), insn, OP_IN, false, 0);\n       break;\n     case CLOBBER:\n-      {\n-\tint code = INSN_CODE (insn);\n-\n-\t/* We treat clobber of non-operand hard registers as early\n-\t   clobber (the behavior is expected from asm).  */\n-\tadd_regs_to_insn_regno_info (data, XEXP (x, 0), insn, OP_OUT,\n-\t\t\t\t     code < 0, code < 0 ? ALL_ALTERNATIVES : 0);\n-\tbreak;\n-      }\n+      /* We treat clobber of non-operand hard registers as early\n+\t clobber.  */\n+      add_regs_to_insn_regno_info (data, XEXP (x, 0), insn, OP_OUT,\n+\t\t\t\t   true, ALL_ALTERNATIVES);\n+      break;\n     case PRE_INC: case PRE_DEC: case POST_INC: case POST_DEC:\n       add_regs_to_insn_regno_info (data, XEXP (x, 0), insn, OP_INOUT, false, 0);\n       break;"}]}