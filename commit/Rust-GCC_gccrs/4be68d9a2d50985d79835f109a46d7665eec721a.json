{"sha": "4be68d9a2d50985d79835f109a46d7665eec721a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJlNjhkOWEyZDUwOTg1ZDc5ODM1ZjEwOWE0NmQ3NjY1ZWVjNzIxYQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-04-30T08:22:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-04-30T08:22:15Z"}, "message": "re PR tree-optimization/43879 (-fipa-pta causes various miscompilations)\n\n2010-04-30  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/43879\n\t* tree-ssa-structalias.c (get_constraint_for_1): Properly\n\thandle non-zero initializers.\n\n\t* gcc.dg/torture/pr43879_1.c: New testcase.\n\nFrom-SVN: r158924", "tree": {"sha": "44218b6855bc66127f9b11af7c5a184ffc5ce829", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44218b6855bc66127f9b11af7c5a184ffc5ce829"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4be68d9a2d50985d79835f109a46d7665eec721a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4be68d9a2d50985d79835f109a46d7665eec721a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4be68d9a2d50985d79835f109a46d7665eec721a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4be68d9a2d50985d79835f109a46d7665eec721a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0646825443aef1495f97f719f91fdc7a5c1e26f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0646825443aef1495f97f719f91fdc7a5c1e26f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0646825443aef1495f97f719f91fdc7a5c1e26f8"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "936a83861376156b1fd7b8bbacdb858222645b43", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4be68d9a2d50985d79835f109a46d7665eec721a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4be68d9a2d50985d79835f109a46d7665eec721a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4be68d9a2d50985d79835f109a46d7665eec721a", "patch": "@@ -1,3 +1,9 @@\n+2010-04-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43879\n+\t* tree-ssa-structalias.c (get_constraint_for_1): Properly\n+\thandle non-zero initializers.\n+\n 2010-04-30  Richard Guenther  <rguenther@suse.de>\n \n \t* builtins.c (fold_builtin_1): Delete free (0)."}, {"sha": "f3284dc07adce5495c91ee24c3e3b0a0ea65460a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4be68d9a2d50985d79835f109a46d7665eec721a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4be68d9a2d50985d79835f109a46d7665eec721a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4be68d9a2d50985d79835f109a46d7665eec721a", "patch": "@@ -1,3 +1,8 @@\n+2010-04-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43879\n+\t* gcc.dg/torture/pr43879_1.c: New testcase.\n+\n 2010-04-30  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/builtin-free.c: New testcase."}, {"sha": "151a184cb19d95ea0ffb35d2e32839af4e061684", "filename": "gcc/testsuite/gcc.dg/torture/pr43879_1.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4be68d9a2d50985d79835f109a46d7665eec721a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr43879_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4be68d9a2d50985d79835f109a46d7665eec721a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr43879_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr43879_1.c?ref=4be68d9a2d50985d79835f109a46d7665eec721a", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fipa-pta\" } */\n+/* { dg-additional-sources \"pr43879_2.c\" } */\n+\n+void bar(int c)\n+{\n+\tstatic int x = 1;\n+\tif (c != x) __builtin_abort();\n+\tx--;\n+}\n+\n+void baz(int *i)\n+{\n+\t(*i)--;\n+}\n+\n+struct TBL {\n+\tint (*p)(int *i);\n+};\n+extern struct TBL tbl;\n+\n+int main()\n+{\n+\tint c = 1;\n+\treturn tbl.p(&c);\n+}\n+"}, {"sha": "8155653a6279fd972304353cc6af497de4cd08bb", "filename": "gcc/testsuite/gcc.dg/torture/pr43879_2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4be68d9a2d50985d79835f109a46d7665eec721a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr43879_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4be68d9a2d50985d79835f109a46d7665eec721a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr43879_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr43879_2.c?ref=4be68d9a2d50985d79835f109a46d7665eec721a", "patch": "@@ -0,0 +1,17 @@\n+struct TBL {\n+\tint (*p)(int *i);\n+};\n+\n+extern void bar(int i);\n+extern void baz(int *i);\n+\n+static int foo(int *i)\n+{\n+\tbar(*i);\n+\tbaz(i);\n+\tbar(*i);\n+\treturn *i;\n+}\n+\n+struct TBL tbl = { foo };\n+"}, {"sha": "928dc04d131daff81894efb37d0068779d5058b6", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4be68d9a2d50985d79835f109a46d7665eec721a/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4be68d9a2d50985d79835f109a46d7665eec721a/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=4be68d9a2d50985d79835f109a46d7665eec721a", "patch": "@@ -3285,8 +3285,10 @@ get_constraint_for_1 (tree t, VEC (ce_s, heap) **results, bool address_p)\n       && ((TREE_CODE (t) == INTEGER_CST\n \t   && integer_zerop (t))\n \t  /* The only valid CONSTRUCTORs in gimple with pointer typed\n-\t     elements are zero-initializer.  */\n-\t  || TREE_CODE (t) == CONSTRUCTOR))\n+\t     elements are zero-initializer.  But in IPA mode we also\n+\t     process global initializers, so verify at least.  */\n+\t  || (TREE_CODE (t) == CONSTRUCTOR\n+\t      && CONSTRUCTOR_NELTS (t) == 0)))\n     {\n       temp.var = nothing_id;\n       temp.type = ADDRESSOF;"}]}