{"sha": "5d7cefe516e70313d60ce9f620eb4eb3f5bfc6f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ3Y2VmZTUxNmU3MDMxM2Q2MGNlOWY2MjBlYjRlYjNmNWJmYzZmOQ==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2009-12-08T13:56:06Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2009-12-08T13:56:06Z"}, "message": "re PR middle-end/38474 (compile time explosion in dataflow_set_preserve_mem_locs at -O3)\n\n\tPR middle-end/38474\n\t* function.c (free_temp_slots): Only walk the temp slot\n\taddresses and combine slots if we actually changes something.\n\t(pop_temp_slots): Ditto.\n\nFrom-SVN: r155087", "tree": {"sha": "c537ebdbca988616de7016720b46a6181b211688", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c537ebdbca988616de7016720b46a6181b211688"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d7cefe516e70313d60ce9f620eb4eb3f5bfc6f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7cefe516e70313d60ce9f620eb4eb3f5bfc6f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d7cefe516e70313d60ce9f620eb4eb3f5bfc6f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7cefe516e70313d60ce9f620eb4eb3f5bfc6f9/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "41a394bbf8d47ae58aad6b9068cd6f0f27cc2f2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41a394bbf8d47ae58aad6b9068cd6f0f27cc2f2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41a394bbf8d47ae58aad6b9068cd6f0f27cc2f2f"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "186fe581d47ba8ca2166f4b91dd4ac7f60d8fc0c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7cefe516e70313d60ce9f620eb4eb3f5bfc6f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7cefe516e70313d60ce9f620eb4eb3f5bfc6f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d7cefe516e70313d60ce9f620eb4eb3f5bfc6f9", "patch": "@@ -1,3 +1,10 @@\n+2009-12-08  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/38474\n+\t* function.c (free_temp_slots): Only walk the temp slot\n+\taddresses and combine slots if we actually changes something.\n+\t(pop_temp_slots): Ditto.\n+\n 2009-12-08  Olga Golovanevsky  <olga@il.ibm.com>\n \n \tPR middle-end/41843"}, {"sha": "ac5ba94f9d1af3e2b74e0c19297669f34fb7300c", "filename": "gcc/function.c", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7cefe516e70313d60ce9f620eb4eb3f5bfc6f9/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7cefe516e70313d60ce9f620eb4eb3f5bfc6f9/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=5d7cefe516e70313d60ce9f620eb4eb3f5bfc6f9", "patch": "@@ -1164,17 +1164,24 @@ void\n free_temp_slots (void)\n {\n   struct temp_slot *p, *next;\n+  bool some_available = false;\n \n   for (p = *temp_slots_at_level (temp_slot_level); p; p = next)\n     {\n       next = p->next;\n \n       if (!p->keep)\n-\tmake_slot_available (p);\n+\t{\n+\t  make_slot_available (p);\n+\t  some_available = true;\n+\t}\n     }\n \n-  remove_unused_temp_slot_addresses ();\n-  combine_temp_slots ();\n+  if (some_available)\n+    {\n+      remove_unused_temp_slot_addresses ();\n+      combine_temp_slots ();\n+    }\n }\n \n /* Push deeper into the nesting level for stack temporaries.  */\n@@ -1192,15 +1199,20 @@ void\n pop_temp_slots (void)\n {\n   struct temp_slot *p, *next;\n+  bool some_available = false;\n \n   for (p = *temp_slots_at_level (temp_slot_level); p; p = next)\n     {\n       next = p->next;\n       make_slot_available (p);\n+      some_available = true;\n     }\n \n-  remove_unused_temp_slot_addresses ();\n-  combine_temp_slots ();\n+  if (some_available)\n+    {\n+      remove_unused_temp_slot_addresses ();\n+      combine_temp_slots ();\n+    }\n \n   temp_slot_level--;\n }"}]}