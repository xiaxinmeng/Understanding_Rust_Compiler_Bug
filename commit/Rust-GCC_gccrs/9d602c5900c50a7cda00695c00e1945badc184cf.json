{"sha": "9d602c5900c50a7cda00695c00e1945badc184cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ2MDJjNTkwMGM1MGE3Y2RhMDA2OTVjMDBlMTk0NWJhZGMxODRjZg==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2010-11-25T12:30:07Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2010-11-25T12:30:07Z"}, "message": "cgraphunit.c (process_function_and_variable_attributes): Mark dllexport-ed function/variables as needed.\n\n2010-11-25  Kai Tietz  <kai.tietz@onevision.com>\n\n\t* cgraphunit.c (process_function_and_variable_attributes):\n\tMark dllexport-ed function/variables as needed.\n\t* ipa.c (cgraph_externally_visible_p): Make dllexport-ed\n\tas externally visible.\n\n2010-11-25  Kai Tietz  <kai.tietz@onevision.com>\n\n\t* gcc.dg/dll-8.c: New.\n\nFrom-SVN: r167144", "tree": {"sha": "53c658f06750cdef237c8cdb0035bc208fccf85b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53c658f06750cdef237c8cdb0035bc208fccf85b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d602c5900c50a7cda00695c00e1945badc184cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d602c5900c50a7cda00695c00e1945badc184cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d602c5900c50a7cda00695c00e1945badc184cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d602c5900c50a7cda00695c00e1945badc184cf/comments", "author": null, "committer": null, "parents": [{"sha": "c8230704c44609131a832307f2eee04df3206eb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8230704c44609131a832307f2eee04df3206eb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8230704c44609131a832307f2eee04df3206eb8"}], "stats": {"total": 51, "additions": 48, "deletions": 3}, "files": [{"sha": "c5d09798f4ff270fc3395d93f41e1c95bcd018da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d602c5900c50a7cda00695c00e1945badc184cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d602c5900c50a7cda00695c00e1945badc184cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d602c5900c50a7cda00695c00e1945badc184cf", "patch": "@@ -1,3 +1,10 @@\n+2010-11-25  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* cgraphunit.c (process_function_and_variable_attributes):\n+\tMark dllexport-ed function/variables as needed.\n+\t* ipa.c (cgraph_externally_visible_p): Make dllexport-ed\n+\tas externally visible.\n+\n 2010-11-25  Alexander Monakov  <amonakov@ispras.ru>\n \n \tPR rtl-optimization/46585"}, {"sha": "c7c566540f0082c2c5fd815544d30707c5d9dbae", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d602c5900c50a7cda00695c00e1945badc184cf/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d602c5900c50a7cda00695c00e1945badc184cf/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=9d602c5900c50a7cda00695c00e1945badc184cf", "patch": "@@ -816,7 +816,14 @@ process_function_and_variable_attributes (struct cgraph_node *first,\n       tree decl = node->decl;\n       if (DECL_PRESERVE_P (decl))\n \tcgraph_mark_needed_node (node);\n-      if (lookup_attribute (\"externally_visible\", DECL_ATTRIBUTES (decl)))\n+      if (TARGET_DLLIMPORT_DECL_ATTRIBUTES\n+\t  && lookup_attribute (\"dllexport\", DECL_ATTRIBUTES (decl))\n+\t  && TREE_PUBLIC (node->decl))\n+\t{\n+\t  if (node->local.finalized)\n+\t    cgraph_mark_needed_node (node);\n+\t}\n+      else if (lookup_attribute (\"externally_visible\", DECL_ATTRIBUTES (decl)))\n \t{\n \t  if (! TREE_PUBLIC (node->decl))\n \t    warning_at (DECL_SOURCE_LOCATION (node->decl), OPT_Wattributes,\n@@ -835,7 +842,14 @@ process_function_and_variable_attributes (struct cgraph_node *first,\n \t  if (vnode->finalized)\n \t    varpool_mark_needed_node (vnode);\n \t}\n-      if (lookup_attribute (\"externally_visible\", DECL_ATTRIBUTES (decl)))\n+      if (TARGET_DLLIMPORT_DECL_ATTRIBUTES\n+\t  && lookup_attribute (\"dllexport\", DECL_ATTRIBUTES (decl))\n+\t  && TREE_PUBLIC (node->decl))\n+\t{\n+\t  if (vnode->finalized)\n+\t    varpool_mark_needed_node (vnode);\n+\t}\n+      else if (lookup_attribute (\"externally_visible\", DECL_ATTRIBUTES (decl)))\n \t{\n \t  if (! TREE_PUBLIC (vnode->decl))\n \t    warning_at (DECL_SOURCE_LOCATION (vnode->decl), OPT_Wattributes,"}, {"sha": "0b6518bf44972eccbe715b57415c818ec6793fd4", "filename": "gcc/ipa.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d602c5900c50a7cda00695c00e1945badc184cf/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d602c5900c50a7cda00695c00e1945badc184cf/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=9d602c5900c50a7cda00695c00e1945badc184cf", "patch": "@@ -662,7 +662,9 @@ cgraph_externally_visible_p (struct cgraph_node *node, bool whole_program, bool\n     return true;\n   if (lookup_attribute (\"externally_visible\", DECL_ATTRIBUTES (node->decl)))\n     return true;\n-\n+  if (TARGET_DLLIMPORT_DECL_ATTRIBUTES\n+      && lookup_attribute (\"dllexport\", DECL_ATTRIBUTES (node->decl)))\n+    return true;\n   /* When doing LTO or whole program, we can bring COMDAT functoins static.\n      This improves code quality and we know we will duplicate them at most twice\n      (in the case that we are not using plugin and link with object file\n@@ -724,6 +726,10 @@ varpool_externally_visible_p (struct varpool_node *vnode, bool aliased)\n   if (lookup_attribute (\"externally_visible\",\n \t\t\tDECL_ATTRIBUTES (vnode->decl)))\n     return true;\n+  if (TARGET_DLLIMPORT_DECL_ATTRIBUTES\n+      && lookup_attribute (\"dllexport\",\n+\t\t\t   DECL_ATTRIBUTES (vnode->decl)))\n+    return true;\n \n   /* See if we have linker information about symbol not being used or\n      if we need to make guess based on the declaration."}, {"sha": "4dc1eeee11f758bc54f8fd9613e3a8fd166358db", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d602c5900c50a7cda00695c00e1945badc184cf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d602c5900c50a7cda00695c00e1945badc184cf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9d602c5900c50a7cda00695c00e1945badc184cf", "patch": "@@ -1,3 +1,7 @@\n+2010-11-25  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* gcc.dg/dll-8.c: New.\n+\n 2010-11-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/loop_optimization7.adb: Remove dg-require-effective-target."}, {"sha": "98afba8d0d2bc708642d63605648407d789a709c", "filename": "gcc/testsuite/gcc.dg/dll-8.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d602c5900c50a7cda00695c00e1945badc184cf/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d602c5900c50a7cda00695c00e1945badc184cf/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-8.c?ref=9d602c5900c50a7cda00695c00e1945badc184cf", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile { target i?86-pc-cygwin } } */\n+/* { dg-do compile { target i?86-*-mingw* x86_64-*-mingw*} } */\n+/* { dg-options \"-O3 -fwhole-program\" } */\n+/* { dg-final { scan-assembler \"foo1\" } } */\n+/* { dg-final { scan-assembler-not \"foo2\" } } */\n+/* { dg-final { scan-assembler \"doo1\" } } */\n+/* { dg-final { scan-assembler-not \"doo2\" } } */\n+\n+__declspec(dllexport) int doo1 = 2;\n+int doo2 = 3;\n+__declspec(dllexport) int foo1 (void) { return 0; }\n+int foo2 (void) { return 1; }\n+int main() { return 0; }\n+"}]}