{"sha": "c1fd153eb85c624834e1a6ed14116705b3a8866e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFmZDE1M2ViODVjNjI0ODM0ZTFhNmVkMTQxMTY3MDViM2E4ODY2ZQ==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2000-06-17T19:43:21Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-06-17T19:43:21Z"}, "message": "reorder some files= entries\n\nFrom-SVN: r34582", "tree": {"sha": "de9e9e08bbe4f6a23deae5f24b4a3fb806eac942", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de9e9e08bbe4f6a23deae5f24b4a3fb806eac942"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1fd153eb85c624834e1a6ed14116705b3a8866e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1fd153eb85c624834e1a6ed14116705b3a8866e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1fd153eb85c624834e1a6ed14116705b3a8866e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1fd153eb85c624834e1a6ed14116705b3a8866e/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "33002945c162325d7421a4627b8b54ae5c008183", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33002945c162325d7421a4627b8b54ae5c008183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33002945c162325d7421a4627b8b54ae5c008183"}], "stats": {"total": 79, "additions": 44, "deletions": 35}, "files": [{"sha": "263dd7537b1365496e728a2e2625932ac6391d47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1fd153eb85c624834e1a6ed14116705b3a8866e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1fd153eb85c624834e1a6ed14116705b3a8866e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1fd153eb85c624834e1a6ed14116705b3a8866e", "patch": "@@ -4,6 +4,7 @@\n \tfor a single fix\n \t* fixinc/inclhack.def(ctrl_quotes_def): add a second test\n \t(io_quotes_def): add a second test\n+\t(various): reorder `files' so that \"limits.h\" is never first\n \t* fixinc/tests/base/*: update the testing output\n \n Sat Jun 17 10:33:59 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>"}, {"sha": "df7023ddc7b1afbc09a629491bf4453ef2713f0b", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 26, "deletions": 18, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1fd153eb85c624834e1a6ed14116705b3a8866e/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1fd153eb85c624834e1a6ed14116705b3a8866e/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=c1fd153eb85c624834e1a6ed14116705b3a8866e", "patch": "@@ -2267,7 +2267,7 @@ tSCC zLimits_IfndefsName[] =\n  *  File name selection pattern\n  */\n tSCC zLimits_IfndefsList[] =\n-  \"|limits.h|sys/limits.h|\";\n+  \"|sys/limits.h|limits.h|\";\n /*\n  *  Machine/OS name selection pattern\n  */\n@@ -2715,7 +2715,7 @@ tSCC zNested_MotorolaName[] =\n  *  File name selection pattern\n  */\n tSCC zNested_MotorolaList[] =\n-  \"|limits.h|sys/limits.h|\";\n+  \"|sys/limits.h|limits.h|\";\n /*\n  *  Machine/OS name selection pattern\n  */\n@@ -4529,7 +4529,7 @@ tSCC zUltrix_Math_IfdefName[] =\n  *  File name selection pattern\n  */\n tSCC zUltrix_Math_IfdefList[] =\n-  \"|float.h|math.h|sys/limits.h|\";\n+  \"|sys/limits.h|float.h|math.h|\";\n /*\n  *  Machine/OS name selection pattern\n  */\n@@ -4539,7 +4539,7 @@ tSCC zUltrix_Math_IfdefList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zUltrix_Math_IfdefSelect0[] =\n-       \"^#if.*\\\\|\\\\|[ \\t]+CC\\\\$[a-z]+\";\n+       \"^(#if.*)\\\\|\\\\|[ \\t]+CC\\\\$[a-z]+\";\n \n #define    ULTRIX_MATH_IFDEF_TEST_CT  1\n tTestDesc aUltrix_Math_IfdefTests[] = {\n@@ -4548,8 +4548,9 @@ tTestDesc aUltrix_Math_IfdefTests[] = {\n /*\n  *  Fix Command Arguments for Ultrix_Math_Ifdef\n  */\n-const char* apzUltrix_Math_IfdefPatch[] = { \"sed\",\n-    \"-e\", \"/^#if/s/||[ \\t][ \\t]*CC$[a-z][a-z]*//\",\n+const char* apzUltrix_Math_IfdefPatch[] = {\n+    \"format\",\n+    \"%1\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -5100,26 +5101,33 @@ tSCC zX11_ClassList[] =\n  */\n #define apzX11_ClassMachs (const char**)NULL\n \n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zX11_ClassSelect0[] =\n+       \"^([ \\t]*char \\\\*)class;(.*)\";\n+\n /*\n  *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zX11_ClassBypass0[] =\n        \"__cplusplus\";\n \n-#define    X11_CLASS_TEST_CT  1\n+#define    X11_CLASS_TEST_CT  2\n tTestDesc aX11_ClassTests[] = {\n-  { TT_NEGREP,   zX11_ClassBypass0, (regex_t*)NULL }, };\n+  { TT_NEGREP,   zX11_ClassBypass0, (regex_t*)NULL },\n+  { TT_EGREP,    zX11_ClassSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for X11_Class\n  */\n-const char* apzX11_ClassPatch[] = { \"sed\",\n-    \"-e\", \"/char \\\\*class;/i\\\\\\n\\\n-#ifdef __cplusplus\\\\\\n\\\n-\\tchar *c_class;\\\\\\n\\\n-#else\\n\",\n-    \"-e\", \"/char \\\\*class;/a\\\\\\n\\\n-#endif\\n\",\n+const char* apzX11_ClassPatch[] = {\n+    \"format\",\n+    \"#ifdef __cplusplus\\n\\\n+%1c_class;%2\\n\\\n+#else\\n\\\n+%1class;%2\\n\\\n+#endif\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -5249,7 +5257,7 @@ const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          129\n+#define REGEX_COUNT          130\n #define MACH_LIST_SIZE_LIMIT 279\n #define FIX_COUNT            130\n \n@@ -5816,7 +5824,7 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zUltrix_Math_IfdefName,    zUltrix_Math_IfdefList,\n      apzUltrix_Math_IfdefMachs,\n-     ULTRIX_MATH_IFDEF_TEST_CT, FD_MACH_ONLY,\n+     ULTRIX_MATH_IFDEF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aUltrix_Math_IfdefTests,   apzUltrix_Math_IfdefPatch },\n \n   {  zUltrix_Nested_IoctlName,    zUltrix_Nested_IoctlList,\n@@ -5886,7 +5894,7 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zX11_ClassName,    zX11_ClassList,\n      apzX11_ClassMachs,\n-     X11_CLASS_TEST_CT, FD_MACH_ONLY,\n+     X11_CLASS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aX11_ClassTests,   apzX11_ClassPatch },\n \n   {  zX11_Class_UsageName,    zX11_Class_UsageList,"}, {"sha": "7ede690621cc9eef2b52e97152a283f1681cc34e", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1fd153eb85c624834e1a6ed14116705b3a8866e/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1fd153eb85c624834e1a6ed14116705b3a8866e/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=c1fd153eb85c624834e1a6ed14116705b3a8866e", "patch": "@@ -1305,8 +1305,8 @@ fix = {\n  */\n fix = {\n     hackname = limits_ifndefs;\n-    files  = \"limits.h\";\n     files  = \"sys/limits.h\";\n+    files  = \"limits.h\";\n     bypass = \"ifndef[ \\t]+FLT_MIN\";\n \n     c_fix     = format;\n@@ -1520,8 +1520,8 @@ fix = {\n fix = {\n     hackname = nested_motorola;\n     mach     = \"m68k-motorola-sysv*\";\n-    files    = limits.h;\n     files    = sys/limits.h;\n+    files    = limits.h;\n     sed = \"s@^\\\\(#undef[ \\t][ \\t]*PIPE_BUF[ \\t]*\"\n                    \"/\\\\* max # bytes atomic in write to a\\\\)$@\\\\1 */@\";\n     sed = \"s@\\\\(/\\\\*#define\\tHUGE_VAL\\t3.[0-9e+]* \\\\)\"\n@@ -2761,12 +2761,14 @@ fix = {\n  * Strip \"|| CC$gfloat\" from Ultrix math headers.\n  */\n fix = {\n-    hackname = ultrix_math_ifdef;\n-    files = float.h;\n-    files = math.h;\n-    files = sys/limits.h;\n-    select = \"^#if.*\\\\|\\\\|[ \\t]+CC\\\\$[a-z]+\";\n-    sed = \"/^#if/s/||[ \\t][ \\t]*CC$[a-z][a-z]*//\";\n+    hackname  = ultrix_math_ifdef;\n+    files     = sys/limits.h;\n+    files     = float.h;\n+    files     = math.h;\n+    select    = \"^(#if.*)\\\\|\\\\|[ \\t]+CC\\\\$[a-z]+\";\n+    c_fix     = format;\n+    c_fix_arg = \"%1\";\n+\n     test_text = '#if     defined(__GFLOAT) || CC\\$gfloat';\n };\n \n@@ -3037,15 +3039,13 @@ fix = {\n  *  we find __cplusplus in the file.  These were found on the RS/6000.\n  */\n fix = {\n-    hackname = x11_class;\n-    files    = X11/ShellP.h;\n-    bypass   = __cplusplus;\n-    sed      = \"/char \\\\*class;/i\\\\\\n\"\n-                   \"#ifdef __cplusplus\\\\\\n\"\n-                   \"\\tchar *c_class;\\\\\\n\"\n-                   \"#else\\n\";\n-    sed      = \"/char \\\\*class;/a\\\\\\n\"\n-                   \"#endif\\n\";\n+    hackname  = x11_class;\n+    files     = X11/ShellP.h;\n+    bypass    = __cplusplus;\n+    select    = \"^([ \\t]*char \\\\*)class;(.*)\";\n+    c_fix     = format;\n+    c_fix_arg = \"#ifdef __cplusplus\\n%1c_class;%2\\n\"\n+                \"#else\\n%1class;%2\\n#endif\";\n     test_text =\n     \"struct {\\n\"\n     \"   char *class;\\n\""}]}