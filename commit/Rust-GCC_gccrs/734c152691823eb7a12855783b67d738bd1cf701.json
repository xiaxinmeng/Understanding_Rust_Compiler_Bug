{"sha": "734c152691823eb7a12855783b67d738bd1cf701", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM0YzE1MjY5MTgyM2ViN2ExMjg1NTc4M2I2N2Q3MzhiZDFjZjcwMQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-05-06T14:26:23Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-05-06T14:26:23Z"}, "message": "Fix memory leak in tree-if-conv.c\n\n\t* tree-if-conv.c (ifcvt_split_critical_edges): Use auto_vec\n\tinstead of vec as the vector is local to the function.\n\nFrom-SVN: r235974", "tree": {"sha": "040340d59b50ec6295923f5b990bb7878e8ae455", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/040340d59b50ec6295923f5b990bb7878e8ae455"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/734c152691823eb7a12855783b67d738bd1cf701", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/734c152691823eb7a12855783b67d738bd1cf701", "html_url": "https://github.com/Rust-GCC/gccrs/commit/734c152691823eb7a12855783b67d738bd1cf701", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/734c152691823eb7a12855783b67d738bd1cf701/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9bdf001b7a2232753e4a92582218bb4f24c8d809", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bdf001b7a2232753e4a92582218bb4f24c8d809", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bdf001b7a2232753e4a92582218bb4f24c8d809"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "6593023843efa8b5d7b23622d64056449aa0c9e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/734c152691823eb7a12855783b67d738bd1cf701/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/734c152691823eb7a12855783b67d738bd1cf701/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=734c152691823eb7a12855783b67d738bd1cf701", "patch": "@@ -1,3 +1,8 @@\n+2016-05-06  Martin Liska  <mliska@suse.cz>\n+\n+\t* tree-if-conv.c (ifcvt_split_critical_edges): Use auto_vec\n+\tinstead of vec as the vector is local to the function.\n+\n 2016-05-06  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/sse.md (*<code>v8hi3, *<code>v16qi3): Add"}, {"sha": "3ad8e8701ed7b7d7b2f74688e3a4a67d76aa81c6", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/734c152691823eb7a12855783b67d738bd1cf701/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/734c152691823eb7a12855783b67d738bd1cf701/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=734c152691823eb7a12855783b67d738bd1cf701", "patch": "@@ -2361,7 +2361,7 @@ ifcvt_split_critical_edges (struct loop *loop, bool aggressive_if_conv)\n   gimple *stmt;\n   edge e;\n   edge_iterator ei;\n-  vec<edge> critical_edges = vNULL;\n+  auto_vec<edge> critical_edges;\n \n   /* Loop is not well formed.  */\n   if (num <= 2 || loop->inner || !single_exit (loop))\n@@ -2381,7 +2381,6 @@ ifcvt_split_critical_edges (struct loop *loop, bool aggressive_if_conv)\n \t\t     bb->index, MAX_PHI_ARG_NUM);\n \n \t  free (body);\n-\t  critical_edges.release ();\n \t  return false;\n \t}\n       if (bb == loop->latch || bb_with_exit_edge_p (loop, bb))"}]}