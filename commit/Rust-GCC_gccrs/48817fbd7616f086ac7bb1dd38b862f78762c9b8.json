{"sha": "48817fbd7616f086ac7bb1dd38b862f78762c9b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg4MTdmYmQ3NjE2ZjA4NmFjN2JiMWRkMzhiODYyZjc4NzYyYzliOA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-03-25T20:33:08Z"}, "committer": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-03-25T20:33:08Z"}, "message": "    Fix vector-compare-1 regressions on sh4/sh4eb caused by pattern clobbering T reg without expressing that in its RTL.\n\n            PR rtl-optimization/90275\n            * config/sh/sh.md (mov_neg_si_t): Clobber the T register in the\n            pattern.", "tree": {"sha": "4fd94bd2eccb10ceebfff48a606f4b3931140d1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fd94bd2eccb10ceebfff48a606f4b3931140d1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48817fbd7616f086ac7bb1dd38b862f78762c9b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48817fbd7616f086ac7bb1dd38b862f78762c9b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48817fbd7616f086ac7bb1dd38b862f78762c9b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48817fbd7616f086ac7bb1dd38b862f78762c9b8/comments", "author": null, "committer": null, "parents": [{"sha": "eeb0c7c07133634eb5e98ba0348392684a763c95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeb0c7c07133634eb5e98ba0348392684a763c95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeb0c7c07133634eb5e98ba0348392684a763c95"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "fc80278a395bef5e742a52446e8c8905fca0ba33", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48817fbd7616f086ac7bb1dd38b862f78762c9b8/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48817fbd7616f086ac7bb1dd38b862f78762c9b8/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=48817fbd7616f086ac7bb1dd38b862f78762c9b8", "patch": "@@ -8395,9 +8395,15 @@\n ;; Store (negated) T bit as all zeros or ones in a reg.\n ;;\tsubc\tRn,Rn\t! Rn = Rn - Rn - T; T = T\n ;;\tnot\tRn,Rn\t! Rn = 0 - Rn\n+;;\n+;; Note the call to sh_split_treg_set_expr may clobber\n+;; the T reg.  We must express this, even though it's\n+;; not immediately obvious this pattern changes the\n+;; T register.\n (define_insn_and_split \"mov_neg_si_t\"\n   [(set (match_operand:SI 0 \"arith_reg_dest\" \"=r\")\n-\t(neg:SI (match_operand 1 \"treg_set_expr\")))]\n+\t(neg:SI (match_operand 1 \"treg_set_expr\")))\n+   (clobber (reg:SI T_REG))]\n   \"TARGET_SH1\"\n {\n   gcc_assert (t_reg_operand (operands[1], VOIDmode));"}]}