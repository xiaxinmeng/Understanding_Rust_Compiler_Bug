{"sha": "54ce9cc22770a28a7381f56c959c02e28f7b9a05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRjZTljYzIyNzcwYTI4YTczODFmNTZjOTU5YzAyZTI4ZjdiOWEwNQ==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2008-07-30T15:30:59Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2008-07-30T15:30:59Z"}, "message": "re PR target/35866 (Vector load/store from a packed struct does not work (without -mstrict-align))\n\n\tPR target/35866\n\n\t* config/rs6000/rs6000.h (SLOW_UNALIGNED_ACCESS): Add clause for\n\tvector modes.\n\nFrom-SVN: r138316", "tree": {"sha": "4cb41c14ec0cf6ccbf741868d7a9cb7fce5b183a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cb41c14ec0cf6ccbf741868d7a9cb7fce5b183a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54ce9cc22770a28a7381f56c959c02e28f7b9a05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54ce9cc22770a28a7381f56c959c02e28f7b9a05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54ce9cc22770a28a7381f56c959c02e28f7b9a05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54ce9cc22770a28a7381f56c959c02e28f7b9a05/comments", "author": null, "committer": null, "parents": [{"sha": "efd417141c38938b2e61689c8703af94b8a9e340", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efd417141c38938b2e61689c8703af94b8a9e340", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efd417141c38938b2e61689c8703af94b8a9e340"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "4b8f2d6bb8b461698f2501fdee94c18475e1cea6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ce9cc22770a28a7381f56c959c02e28f7b9a05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ce9cc22770a28a7381f56c959c02e28f7b9a05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=54ce9cc22770a28a7381f56c959c02e28f7b9a05", "patch": "@@ -1,3 +1,10 @@\n+2008-07-30  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\tPR target/35866\n+\n+\t* config/rs6000/rs6000.h (SLOW_UNALIGNED_ACCESS): Add clause for\n+\tvector modes.\n+\n 2008-07-30  Rafael Avila de Espindola  <espindola@google.com>\n \n        * final.c (call_from_call_insn): New."}, {"sha": "def3b53ab952c599ebaf241f4d259cef37cbe12d", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ce9cc22770a28a7381f56c959c02e28f7b9a05/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ce9cc22770a28a7381f56c959c02e28f7b9a05/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=54ce9cc22770a28a7381f56c959c02e28f7b9a05", "patch": "@@ -644,12 +644,15 @@ extern enum rs6000_nop_insertion rs6000_sched_insert_nops;\n /* Define this macro to be the value 1 if unaligned accesses have a cost\n    many times greater than aligned accesses, for example if they are\n    emulated in a trap handler.  */\n+/* Altivec vector memory instructions simply ignore the low bits; SPE\n+   vector memory instructions trap on unaligned accesses.  */\n #define SLOW_UNALIGNED_ACCESS(MODE, ALIGN)\t\t\t\t\\\n   (STRICT_ALIGNMENT\t\t\t\t\t\t\t\\\n    || (((MODE) == SFmode || (MODE) == DFmode || (MODE) == TFmode\t\\\n \t|| (MODE) == SDmode || (MODE) == DDmode || (MODE) == TDmode\t\\\n \t|| (MODE) == DImode)\t\t\t\t\t\t\\\n-       && (ALIGN) < 32))\n+       && (ALIGN) < 32)\t\t\t\t\t\t\t\\\n+   || (VECTOR_MODE_P ((MODE)) && (ALIGN) < GET_MODE_BITSIZE ((MODE))))\n \f\n /* Standard register usage.  */\n "}]}