{"sha": "fba70f605e759144eeebfaabcf12756906578d59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJhNzBmNjA1ZTc1OTE0NGVlZWJmYWFiY2YxMjc1NjkwNjU3OGQ1OQ==", "commit": {"author": {"name": "Cherry Zhang", "email": "cherryyz@google.com", "date": "2019-02-15T23:22:29Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-02-15T23:22:29Z"}, "message": "compiler,runtime: use __builtin_dwarf_cfa for getcallersp\n    \n    Currently, the compiler lowers runtime.getcallersp to\n    __builtin_frame_address(1). In the C side of the runtime,\n    getcallersp is defined as __builtin_frame_address(0). They don't\n    match. Further, neither of them actually returns the caller's SP.\n    On AMD64, __builtin_frame_address(0) just returns the frame\n    pointer. __builtin_frame_address(1) returns the memory content\n    where the frame pointer points to, which is typically the\n    caller's frame pointer but can also be garbage if the frame\n    pointer is not enabled.\n    \n    This CL changes it to use __builtin_dwarf_cfa(), which returns\n    the caller's SP at the call site. This matches the SP we get\n    from unwinding the stack.\n    \n    Currently getcallersp is not used for anything real. It will be\n    used for precise stack scan (a new version of CL 159098).\n    \n    Reviewed-on: https://go-review.googlesource.com/c/162905\n\n\t* go-gcc.cc (Gcc_backend::Gcc_backend): Define __builtin_dwarf_cfa\n\tinstead of __builtin_frame_address.\n\nFrom-SVN: r268952", "tree": {"sha": "edf18f3e7cae2f28d16b5bc522be03d23f734de5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edf18f3e7cae2f28d16b5bc522be03d23f734de5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fba70f605e759144eeebfaabcf12756906578d59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fba70f605e759144eeebfaabcf12756906578d59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fba70f605e759144eeebfaabcf12756906578d59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fba70f605e759144eeebfaabcf12756906578d59/comments", "author": {"login": "cherrymui", "id": 14119929, "node_id": "MDQ6VXNlcjE0MTE5OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/14119929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cherrymui", "html_url": "https://github.com/cherrymui", "followers_url": "https://api.github.com/users/cherrymui/followers", "following_url": "https://api.github.com/users/cherrymui/following{/other_user}", "gists_url": "https://api.github.com/users/cherrymui/gists{/gist_id}", "starred_url": "https://api.github.com/users/cherrymui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cherrymui/subscriptions", "organizations_url": "https://api.github.com/users/cherrymui/orgs", "repos_url": "https://api.github.com/users/cherrymui/repos", "events_url": "https://api.github.com/users/cherrymui/events{/privacy}", "received_events_url": "https://api.github.com/users/cherrymui/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9695618899f4f85d1e9fdbe7728d0e238b99511c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9695618899f4f85d1e9fdbe7728d0e238b99511c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9695618899f4f85d1e9fdbe7728d0e238b99511c"}], "stats": {"total": 57, "additions": 35, "deletions": 22}, "files": [{"sha": "e1efc14359cfde914f40cdf0450706db488ad146", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba70f605e759144eeebfaabcf12756906578d59/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba70f605e759144eeebfaabcf12756906578d59/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=fba70f605e759144eeebfaabcf12756906578d59", "patch": "@@ -1,3 +1,8 @@\n+2019-02-15  Cherry Zhang  <cherryyz@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::Gcc_backend): Define __builtin_dwarf_cfa\n+\tinstead of __builtin_frame_address.\n+\n 2019-02-14  Ian Lance Taylor  <iant@golang.org>\n \n \t* go-backend.c (go_imported_unsafe): Update"}, {"sha": "daa1ab2af49f52d94d89b49b00ffb8ddb12fafcb", "filename": "gcc/go/go-gcc.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba70f605e759144eeebfaabcf12756906578d59/gcc%2Fgo%2Fgo-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba70f605e759144eeebfaabcf12756906578d59/gcc%2Fgo%2Fgo-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-gcc.cc?ref=fba70f605e759144eeebfaabcf12756906578d59", "patch": "@@ -735,8 +735,9 @@ Gcc_backend::Gcc_backend()\n   this->define_builtin(BUILT_IN_RETURN_ADDRESS, \"__builtin_return_address\",\n \t\t       NULL, t, false, false);\n \n-  // The runtime calls __builtin_frame_address for runtime.getcallersp.\n-  this->define_builtin(BUILT_IN_FRAME_ADDRESS, \"__builtin_frame_address\",\n+  // The runtime calls __builtin_dwarf_cfa for runtime.getcallersp.\n+  t = build_function_type_list(ptr_type_node, NULL_TREE);\n+  this->define_builtin(BUILT_IN_DWARF_CFA, \"__builtin_dwarf_cfa\",\n \t\t       NULL, t, false, false);\n \n   // The runtime calls __builtin_extract_return_addr when recording"}, {"sha": "d9ee0bad8693e1803fbbc46012629581270d99e6", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba70f605e759144eeebfaabcf12756906578d59/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba70f605e759144eeebfaabcf12756906578d59/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=fba70f605e759144eeebfaabcf12756906578d59", "patch": "@@ -1,4 +1,4 @@\n-1a74b8a22b2ff7f430729aa87ecb8cea7b5cdd70\n+9605c2efd99aa9c744652a9153e208e0653b8596\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "1576613c42396ed32b34714c9f77256e34d19dd7", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba70f605e759144eeebfaabcf12756906578d59/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba70f605e759144eeebfaabcf12756906578d59/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=fba70f605e759144eeebfaabcf12756906578d59", "patch": "@@ -9903,17 +9903,18 @@ Call_expression::do_lower(Gogo* gogo, Named_object* function,\n \t      && n == \"getcallerpc\")\n \t    {\n \t      static Named_object* builtin_return_address;\n+              int arg = 0;\n \t      return this->lower_to_builtin(&builtin_return_address,\n \t\t\t\t\t    \"__builtin_return_address\",\n-\t\t\t\t\t    0);\n+\t\t\t\t\t    &arg);\n \t    }\n \t  else if ((this->args_ == NULL || this->args_->size() == 0)\n \t\t   && n == \"getcallersp\")\n \t    {\n-\t      static Named_object* builtin_frame_address;\n-\t      return this->lower_to_builtin(&builtin_frame_address,\n-\t\t\t\t\t    \"__builtin_frame_address\",\n-\t\t\t\t\t    1);\n+\t      static Named_object* builtin_dwarf_cfa;\n+\t      return this->lower_to_builtin(&builtin_dwarf_cfa,\n+\t\t\t\t\t    \"__builtin_dwarf_cfa\",\n+\t\t\t\t\t    NULL);\n \t    }\n \t}\n     }\n@@ -10031,21 +10032,24 @@ Call_expression::lower_varargs(Gogo* gogo, Named_object* function,\n   this->varargs_are_lowered_ = true;\n }\n \n-// Return a call to __builtin_return_address or __builtin_frame_address.\n+// Return a call to __builtin_return_address or __builtin_dwarf_cfa.\n \n Expression*\n Call_expression::lower_to_builtin(Named_object** pno, const char* name,\n-\t\t\t\t  int arg)\n+\t\t\t\t  int* arg)\n {\n   if (*pno == NULL)\n-    *pno = Gogo::declare_builtin_rf_address(name);\n+    *pno = Gogo::declare_builtin_rf_address(name, arg != NULL);\n \n   Location loc = this->location();\n \n   Expression* fn = Expression::make_func_reference(*pno, NULL, loc);\n-  Expression* a = Expression::make_integer_ul(arg, NULL, loc);\n   Expression_list *args = new Expression_list();\n-  args->push_back(a);\n+  if (arg != NULL)\n+    {\n+      Expression* a = Expression::make_integer_ul(*arg, NULL, loc);\n+      args->push_back(a);\n+    }\n   Expression* call = Expression::make_call(fn, args, false, loc);\n \n   // The builtin functions return void*, but the Go functions return uintptr."}, {"sha": "86d950bc880514e649ce03e840508025708e6840", "filename": "gcc/go/gofrontend/expressions.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba70f605e759144eeebfaabcf12756906578d59/gcc%2Fgo%2Fgofrontend%2Fexpressions.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba70f605e759144eeebfaabcf12756906578d59/gcc%2Fgo%2Fgofrontend%2Fexpressions.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.h?ref=fba70f605e759144eeebfaabcf12756906578d59", "patch": "@@ -2356,7 +2356,7 @@ class Call_expression : public Expression\n   check_argument_type(int, const Type*, const Type*, Location, bool);\n \n   Expression*\n-  lower_to_builtin(Named_object**, const char*, int);\n+  lower_to_builtin(Named_object**, const char*, int*);\n \n   Expression*\n   interface_method_function(Interface_field_reference_expression*,"}, {"sha": "757758e14fa42bb71ac5bf38656e701847c1d006", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba70f605e759144eeebfaabcf12756906578d59/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba70f605e759144eeebfaabcf12756906578d59/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=fba70f605e759144eeebfaabcf12756906578d59", "patch": "@@ -4511,7 +4511,7 @@ Build_recover_thunks::can_recover_arg(Location location)\n   static Named_object* builtin_return_address;\n   if (builtin_return_address == NULL)\n     builtin_return_address =\n-      Gogo::declare_builtin_rf_address(\"__builtin_return_address\");\n+      Gogo::declare_builtin_rf_address(\"__builtin_return_address\", true);\n \n   Type* uintptr_type = Type::lookup_integer_type(\"uintptr\");\n   static Named_object* can_recover;\n@@ -4565,16 +4565,19 @@ Gogo::build_recover_thunks()\n }\n \n // Return a declaration for __builtin_return_address or\n-// __builtin_frame_address.\n+// __builtin_dwarf_cfa.\n \n Named_object*\n-Gogo::declare_builtin_rf_address(const char* name)\n+Gogo::declare_builtin_rf_address(const char* name, bool hasarg)\n {\n   const Location bloc = Linemap::predeclared_location();\n \n   Typed_identifier_list* param_types = new Typed_identifier_list();\n-  Type* uint32_type = Type::lookup_integer_type(\"uint32\");\n-  param_types->push_back(Typed_identifier(\"l\", uint32_type, bloc));\n+  if (hasarg)\n+    {\n+      Type* uint32_type = Type::lookup_integer_type(\"uint32\");\n+      param_types->push_back(Typed_identifier(\"l\", uint32_type, bloc));\n+    }\n \n   Typed_identifier_list* return_types = new Typed_identifier_list();\n   Type* voidptr_type = Type::make_pointer_type(Type::make_void_type());"}, {"sha": "b850ceabe9b8a993fb652292875ac36e86038578", "filename": "gcc/go/gofrontend/gogo.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba70f605e759144eeebfaabcf12756906578d59/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba70f605e759144eeebfaabcf12756906578d59/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.h?ref=fba70f605e759144eeebfaabcf12756906578d59", "patch": "@@ -737,9 +737,9 @@ class Gogo\n   build_recover_thunks();\n \n   // Return a declaration for __builtin_return_address or\n-  // __builtin_frame_address.\n+  // __builtin_dwarf_cfa.\n   static Named_object*\n-  declare_builtin_rf_address(const char* name);\n+  declare_builtin_rf_address(const char* name, bool hasarg);\n \n   // Simplify statements which might use thunks: go and defer\n   // statements."}, {"sha": "97b1f114c5688b2cef31b8ae1411daf8b3948823", "filename": "libgo/runtime/runtime.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba70f605e759144eeebfaabcf12756906578d59/libgo%2Fruntime%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba70f605e759144eeebfaabcf12756906578d59/libgo%2Fruntime%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fruntime.h?ref=fba70f605e759144eeebfaabcf12756906578d59", "patch": "@@ -268,7 +268,7 @@ void*\truntime_sysAlloc(uintptr, uint64*)\n void\truntime_sysFree(void*, uintptr, uint64*)\n   __asm__ (GOSYM_PREFIX \"runtime.sysFree\");\n void\truntime_mprofinit(void);\n-#define runtime_getcallersp() __builtin_frame_address(0)\n+#define runtime_getcallersp() __builtin_dwarf_cfa()\n void\truntime_mcall(FuncVal*)\n   __asm__ (GOSYM_PREFIX \"runtime.mcall\");\n int32\truntime_timediv(int64, int32, int32*)"}]}