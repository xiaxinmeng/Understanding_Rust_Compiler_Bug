{"sha": "04600a47224b1ff85c6fb870218b51969cceff21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ2MDBhNDcyMjRiMWZmODVjNmZiODcwMjE4YjUxOTY5Y2NlZmYyMQ==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-07-28T12:30:02Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-07-28T12:32:38Z"}, "message": "Return undefined on edges which are not executed.\n\nWhen a branch has been folded, mark any range requests on the unexecutable edge as\nUNDEFINED.\n\n\t* gimple-range-gori.cc (gori_compute::outgoing_edge_range_p): Check for\n\tcond_false and cond_true on branches.", "tree": {"sha": "646473f2570d2573ee2f6572876e4d2b8bde1c8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/646473f2570d2573ee2f6572876e4d2b8bde1c8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04600a47224b1ff85c6fb870218b51969cceff21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04600a47224b1ff85c6fb870218b51969cceff21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04600a47224b1ff85c6fb870218b51969cceff21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04600a47224b1ff85c6fb870218b51969cceff21/comments", "author": null, "committer": null, "parents": [{"sha": "31534ac26e0ec1deeb648b2548dbbe17574ea78c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31534ac26e0ec1deeb648b2548dbbe17574ea78c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31534ac26e0ec1deeb648b2548dbbe17574ea78c"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "c124b3c1ce495d491df55ca5cbea7aae12953732", "filename": "gcc/gimple-range-gori.cc", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04600a47224b1ff85c6fb870218b51969cceff21/gcc%2Fgimple-range-gori.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04600a47224b1ff85c6fb870218b51969cceff21/gcc%2Fgimple-range-gori.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-gori.cc?ref=04600a47224b1ff85c6fb870218b51969cceff21", "patch": "@@ -1104,6 +1104,21 @@ gori_compute::outgoing_edge_range_p (irange &r, edge e, tree name,\n \n   fur_stmt src (stmt, &q);\n \n+  // If this edge is never taken, return undefined.\n+  gcond *gc = dyn_cast<gcond *> (stmt);\n+  if (gc)\n+    {\n+      if (((e->flags & EDGE_TRUE_VALUE) && gimple_cond_false_p (gc))\n+\t  || ((e->flags & EDGE_FALSE_VALUE) && gimple_cond_true_p (gc)))\n+\t{\n+\t  r.set_undefined ();\n+\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t      fprintf (dump_file, \"Outgoing edge %d->%d unexecutable.\\n\",\n+\t\t       e->src->index, e->dest->index);\n+\t  return true;\n+\t}\n+    }\n+\n   // If NAME can be calculated on the edge, use that.\n   if (is_export_p (name, e->src))\n     {"}]}