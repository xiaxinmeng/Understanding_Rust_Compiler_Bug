{"sha": "a04df2babb16c70ba02f1f44bc92bd723d84a11f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA0ZGYyYmFiYjE2YzcwYmEwMmYxZjQ0YmM5MmJkNzIzZDg0YTExZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-10-19T11:57:22Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-10-19T11:57:22Z"}, "message": "Test experimental::shared_ptr construction from other smart pointers\n\n\t* testsuite/experimental/memory/shared_ptr/cons/unique_ptr_ctor.cc:\n\tAdd tests for valid and invalid conversions.\n\t* testsuite/experimental/memory/shared_ptr/cons/weak_ptr_ctor.cc:\n\tLikewise.\n\nFrom-SVN: r241340", "tree": {"sha": "cdef18b5a8cd98c02f64c305e37b24cdc38da4db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdef18b5a8cd98c02f64c305e37b24cdc38da4db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a04df2babb16c70ba02f1f44bc92bd723d84a11f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a04df2babb16c70ba02f1f44bc92bd723d84a11f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a04df2babb16c70ba02f1f44bc92bd723d84a11f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a04df2babb16c70ba02f1f44bc92bd723d84a11f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbb22e6143e5a2c47bf2006312173c19594c12dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbb22e6143e5a2c47bf2006312173c19594c12dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbb22e6143e5a2c47bf2006312173c19594c12dc"}], "stats": {"total": 71, "additions": 66, "deletions": 5}, "files": [{"sha": "565b32cbeaef951a9f7619dce2c996bc57598e95", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04df2babb16c70ba02f1f44bc92bd723d84a11f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04df2babb16c70ba02f1f44bc92bd723d84a11f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a04df2babb16c70ba02f1f44bc92bd723d84a11f", "patch": "@@ -1,5 +1,10 @@\n 2016-10-19  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* testsuite/experimental/memory/shared_ptr/cons/unique_ptr_ctor.cc:\n+\tAdd tests for valid and invalid conversions.\n+\t* testsuite/experimental/memory/shared_ptr/cons/weak_ptr_ctor.cc:\n+\tLikewise.\n+\n \t* testsuite/20_util/unique_ptr/cons/cv_qual.cc: Move negative tests\n \tto new file.\n \t* testsuite/20_util/unique_ptr/cons/cv_qual_neg.cc: New file.  Fix"}, {"sha": "0e61a3c662adaf06cb939a7c3ce392774dd220f9", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/cons/unique_ptr_ctor.cc", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04df2babb16c70ba02f1f44bc92bd723d84a11f/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Funique_ptr_ctor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04df2babb16c70ba02f1f44bc92bd723d84a11f/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Funique_ptr_ctor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Funique_ptr_ctor.cc?ref=a04df2babb16c70ba02f1f44bc92bd723d84a11f", "patch": "@@ -29,10 +29,35 @@ struct A : std::experimental::enable_shared_from_this<A>\n   ~A() { ++destroyed; }\n };\n \n+struct B : A { };\n+\n // 8.2.1.1 shared_ptr constructors [memory.smartptr.shared.const]\n \n // Construction from unique_ptr<A[]>\n \n+template<typename From, typename To>\n+constexpr bool constructible()\n+{\n+  using std::experimental::shared_ptr;\n+  using std::experimental::is_constructible_v;\n+  using std::unique_ptr;\n+  return is_constructible_v<shared_ptr<To>, unique_ptr<From>>;\n+}\n+\n+static_assert(  constructible< A,    A    >(), \"A -> A compatible\" );\n+static_assert( !constructible< A,    A[]  >(), \"A -> A[] not compatible\" );\n+static_assert( !constructible< A,    A[1] >(), \"A -> A[1] not compatible\" );\n+static_assert( !constructible< A[],  A    >(), \"A[] -> A not compatible\" );\n+static_assert(  constructible< A[],  A[]  >(), \"A[] -> A[] compatible\" );\n+static_assert( !constructible< A[],  A[1] >(), \"A[] -> A[1] not compatible\" );\n+\n+static_assert(  constructible< B,    A    >(), \"B -> A compatible\" );\n+static_assert( !constructible< B,    A[]  >(), \"B -> A[] not compatible\" );\n+static_assert( !constructible< B,    A[1] >(), \"B -> A[1] not compatible\" );\n+static_assert( !constructible< B[],  A    >(), \"B[] -> A not compatible\" );\n+static_assert( !constructible< B[],  A[]  >(), \"B[] -> A[] not compatible\" );\n+static_assert( !constructible< B[],  A[1] >(), \"B[2] -> A[1] not compatible\" );\n+\n void\n test01()\n {"}, {"sha": "3436c01eea169fdf6d518e96818e4816347b4bcc", "filename": "libstdc++-v3/testsuite/experimental/memory/shared_ptr/cons/weak_ptr_ctor.cc", "status": "modified", "additions": 36, "deletions": 5, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04df2babb16c70ba02f1f44bc92bd723d84a11f/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fweak_ptr_ctor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04df2babb16c70ba02f1f44bc92bd723d84a11f/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fweak_ptr_ctor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmemory%2Fshared_ptr%2Fcons%2Fweak_ptr_ctor.cc?ref=a04df2babb16c70ba02f1f44bc92bd723d84a11f", "patch": "@@ -23,11 +23,46 @@\n #include <testsuite_hooks.h>\n \n struct A { };\n+struct B : A { };\n \n // 8.2.1.1 shared_ptr constructors [memory.smartptr.shared.const]\n \n+template<typename From, typename To>\n+constexpr bool constructible()\n+{\n+  using std::experimental::shared_ptr;\n+  using std::experimental::weak_ptr;\n+  using std::experimental::is_constructible_v;\n+  return is_constructible_v<shared_ptr<To>, weak_ptr<From>>\n+    && is_constructible_v<shared_ptr<To>, const weak_ptr<From>&>;\n+}\n+\n+static_assert(  constructible< A,    A    >(), \"A -> A compatible\" );\n+static_assert( !constructible< A,    A[]  >(), \"A -> A[] not compatible\" );\n+static_assert( !constructible< A,    A[1] >(), \"A -> A[1] not compatible\" );\n+static_assert( !constructible< A[],  A    >(), \"A[] -> A not compatible\" );\n+static_assert(  constructible< A[],  A[]  >(), \"A[] -> A[] compatible\" );\n+static_assert( !constructible< A[],  A[1] >(), \"A[] -> A[1] not compatible\" );\n+static_assert( !constructible< A[1], A    >(), \"A[1] -> A not compatible\" );\n+static_assert(  constructible< A[1], A[]  >(), \"A[1] -> A[] compatible\" );\n+static_assert(  constructible< A[1], A[1] >(), \"A[1] -> A[1] compatible\" );\n+static_assert( !constructible< A[2], A[1] >(), \"A[2] -> A[1] not compatible\" );\n+\n+static_assert(  constructible< B,    A    >(), \"B -> A compatible\" );\n+static_assert( !constructible< B,    A[]  >(), \"B -> A[] not compatible\" );\n+static_assert( !constructible< B,    A[1] >(), \"B -> A[1] not compatible\" );\n+static_assert( !constructible< B[],  A    >(), \"B[] -> A not compatible\" );\n+static_assert( !constructible< B[],  A[]  >(), \"B[] -> A[] not compatible\" );\n+static_assert( !constructible< B[],  A[1] >(), \"B[] -> A[1] not compatible\" );\n+static_assert( !constructible< B[1], A    >(), \"B[] -> A not compatible\" );\n+static_assert( !constructible< B[1], A[]  >(), \"B[] -> A[] not compatible\" );\n+static_assert( !constructible< B[1], A[1] >(), \"B[] -> A[1] not compatible\" );\n+static_assert( !constructible< B[2], A[1] >(), \"B[2] -> A[1] not compatible\" );\n+\n+\n+\n // Construction from weak_ptr\n-int\n+void\n test01()\n {\n   A * a = new A[5];\n@@ -39,14 +74,10 @@ test01()\n   VERIFY( a3.get() == a );\n   VERIFY( a2.use_count() == wa.use_count() );\n   VERIFY( a3.use_count() == wa.use_count() );\n-\n-  return 0;\n }\n \n-\n int\n main()\n {\n   test01();\n-  return 0;\n }"}]}