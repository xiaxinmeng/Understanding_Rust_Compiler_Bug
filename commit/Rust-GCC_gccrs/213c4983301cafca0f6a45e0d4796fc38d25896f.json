{"sha": "213c4983301cafca0f6a45e0d4796fc38d25896f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEzYzQ5ODMzMDFjYWZjYTBmNmE0NWUwZDQ3OTZmYzM4ZDI1ODk2Zg==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1998-12-13T00:59:38Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-12-13T00:59:38Z"}, "message": "rtl.h (recompute_reg_usage): Add second argument.\n\n\t* rtl.h (recompute_reg_usage): Add second argument.\n\t* flow.c (recompute_reg_usage): Likewise.\n\t* toplev.c (rest_of_compilation): Supply second argument to\n\trecompute_reg_usage.\n\nFrom-SVN: r24291", "tree": {"sha": "6c128ab8626189788357d57002b58c1f70149579", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c128ab8626189788357d57002b58c1f70149579"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/213c4983301cafca0f6a45e0d4796fc38d25896f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/213c4983301cafca0f6a45e0d4796fc38d25896f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/213c4983301cafca0f6a45e0d4796fc38d25896f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/213c4983301cafca0f6a45e0d4796fc38d25896f/comments", "author": null, "committer": null, "parents": [{"sha": "867cbbbe72ca5023755298073104de13f53625af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867cbbbe72ca5023755298073104de13f53625af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/867cbbbe72ca5023755298073104de13f53625af"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "977d242533ac4460595105714ec25db5281ea27f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/213c4983301cafca0f6a45e0d4796fc38d25896f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/213c4983301cafca0f6a45e0d4796fc38d25896f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=213c4983301cafca0f6a45e0d4796fc38d25896f", "patch": "@@ -4,6 +4,11 @@\n \n Sun Dec 13 00:24:14 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n+\t* rtl.h (recompute_reg_usage): Add second argument.\n+\t* flow.c (recompute_reg_usage): Likewise.\n+\t* toplev.c (rest_of_compilation): Supply second argument to\n+\trecompute_reg_usage.\n+\n \t* reload1.c (compute_use_by_pseudos): Allow reg_renumber[regno] < 0\n \tafter reload.\n "}, {"sha": "0a47c0e013a276068a1c10539fdc98a7147dcc04", "filename": "gcc/flow.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/213c4983301cafca0f6a45e0d4796fc38d25896f/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/213c4983301cafca0f6a45e0d4796fc38d25896f/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=213c4983301cafca0f6a45e0d4796fc38d25896f", "patch": "@@ -4267,12 +4267,18 @@ count_reg_references (x)\n    register allocators to prioritize pseudos for allocation to hard regs.\n    More accurate reference counts generally lead to better register allocation.\n \n+   F is the first insn to be scanned.\n+   LOOP_STEP denotes how much loop_depth should be incremented per\n+   loop nesting level in order to increase the ref count more for references\n+   in a loop.\n+\n    It might be worthwhile to update REG_LIVE_LENGTH, REG_BASIC_BLOCK and\n    possibly other information which is used by the register allocators.  */\n \n void\n-recompute_reg_usage (f)\n+recompute_reg_usage (f, loop_step)\n      rtx f;\n+     int loop_step;\n {\n   rtx insn;\n   int i, max_reg;\n@@ -4295,9 +4301,9 @@ recompute_reg_usage (f)\n \t{\n \t  /* Look for loop boundaries.  */\n \t  if (NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_END)\n-\t    loop_depth--;\n+\t    loop_depth -= loop_step;\n \t  else if (NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_BEG)\n-\t    loop_depth++;\n+\t    loop_depth += loop_step;\n \n \t  /* If we have LOOP_DEPTH == 0, there has been a bookkeeping error. \n \t     Abort now rather than setting register status incorrectly.  */"}, {"sha": "e29767fe4815bba3fb471cc78a029740ff0ecef9", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/213c4983301cafca0f6a45e0d4796fc38d25896f/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/213c4983301cafca0f6a45e0d4796fc38d25896f/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=213c4983301cafca0f6a45e0d4796fc38d25896f", "patch": "@@ -1394,7 +1394,7 @@ extern void stupid_life_analysis\tPROTO ((rtx, int, FILE *));\n \n /* In flow.c */\n extern void allocate_for_life_analysis\tPROTO ((void));\n-extern void recompute_reg_usage\t\tPROTO ((rtx));\n+extern void recompute_reg_usage\t\tPROTO ((rtx, int));\n #ifdef BUFSIZ\n extern void dump_flow_info\t\tPROTO ((FILE *));\n #endif"}, {"sha": "6af4c82b8004c2a84f771ec4dbcf73ecda46b85a", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/213c4983301cafca0f6a45e0d4796fc38d25896f/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/213c4983301cafca0f6a45e0d4796fc38d25896f/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=213c4983301cafca0f6a45e0d4796fc38d25896f", "patch": "@@ -3929,7 +3929,7 @@ rest_of_compilation (decl)\n   if (!obey_regdecls)\n     TIMEVAR (local_alloc_time,\n \t     {\n-\t       recompute_reg_usage (insns);\n+\t       recompute_reg_usage (insns, ! optimize_size);\n \t       regclass (insns, max_reg_num ());\n \t       local_alloc ();\n \t     });"}]}