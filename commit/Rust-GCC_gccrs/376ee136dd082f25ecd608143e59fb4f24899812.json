{"sha": "376ee136dd082f25ecd608143e59fb4f24899812", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc2ZWUxMzZkZDA4MmYyNWVjZDYwODE0M2U1OWZiNGYyNDg5OTgxMg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2015-05-19T14:47:11Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2015-05-19T14:47:11Z"}, "message": "recog: Increase max number of alternatives.\n\nWith the vector facility support z13 mov patterns have more than 30\nalternatives.\n\ngcc/\n\t* recog.h: Increase MAX_RECOG_ALTERNATIVES.\n\tChange type of alternative_mask to uint64_t.\n\nFrom-SVN: r223367", "tree": {"sha": "f5bc915b7d88619d990196c95017282de549068c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5bc915b7d88619d990196c95017282de549068c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/376ee136dd082f25ecd608143e59fb4f24899812", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/376ee136dd082f25ecd608143e59fb4f24899812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/376ee136dd082f25ecd608143e59fb4f24899812", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/376ee136dd082f25ecd608143e59fb4f24899812/comments", "author": null, "committer": null, "parents": [{"sha": "a60c51fe4803ad63d909c819642490630d893152", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a60c51fe4803ad63d909c819642490630d893152", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a60c51fe4803ad63d909c819642490630d893152"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "2f3b2303c39f922238c14aed1a38f303624d75b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/376ee136dd082f25ecd608143e59fb4f24899812/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/376ee136dd082f25ecd608143e59fb4f24899812/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=376ee136dd082f25ecd608143e59fb4f24899812", "patch": "@@ -1,3 +1,8 @@\n+2015-05-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* recog.h: Increase MAX_RECOG_ALTERNATIVES.  Change type of\n+\talternative_mask to uint64_t.\n+\n 2015-05-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/66187"}, {"sha": "3a0930494e2adaa70267a323bd6a37e39f9f5e31", "filename": "gcc/recog.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/376ee136dd082f25ecd608143e59fb4f24899812/gcc%2Frecog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/376ee136dd082f25ecd608143e59fb4f24899812/gcc%2Frecog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.h?ref=376ee136dd082f25ecd608143e59fb4f24899812", "patch": "@@ -23,8 +23,8 @@ along with GCC; see the file COPYING3.  If not see\n /* Random number that should be large enough for all purposes.  Also define\n    a type that has at least MAX_RECOG_ALTERNATIVES + 1 bits, with the extra\n    bit giving an invalid value that can be used to mean \"uninitialized\".  */\n-#define MAX_RECOG_ALTERNATIVES 30\n-typedef unsigned int alternative_mask;\n+#define MAX_RECOG_ALTERNATIVES 35\n+typedef uint64_t alternative_mask;\n \n /* A mask of all alternatives.  */\n #define ALL_ALTERNATIVES ((alternative_mask) -1)"}]}