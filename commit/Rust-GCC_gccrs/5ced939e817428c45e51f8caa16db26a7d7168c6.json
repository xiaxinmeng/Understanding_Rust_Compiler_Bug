{"sha": "5ced939e817428c45e51f8caa16db26a7d7168c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNlZDkzOWU4MTc0MjhjNDVlNTFmOGNhYTE2ZGIyNmE3ZDcxNjhjNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-05-10T14:17:30Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-05-10T14:17:30Z"}, "message": "re PR c++/55149 (capturing VLA in lambda)\n\n\tPR c++/55149\n\t* semantics.c (add_capture): Error rather than abort on copy\n\tcapture of VLA.\n\t* typeck.c (maybe_warn_about_returning_address_of_local): Don't\n\twarn about capture proxy.\n\nFrom-SVN: r198776", "tree": {"sha": "2ac5e103ad1302783fb5637466fda43a9c36c25d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ac5e103ad1302783fb5637466fda43a9c36c25d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ced939e817428c45e51f8caa16db26a7d7168c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ced939e817428c45e51f8caa16db26a7d7168c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ced939e817428c45e51f8caa16db26a7d7168c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ced939e817428c45e51f8caa16db26a7d7168c6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "29554d294af507fa469dbcbe3687007ea9fd0bc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29554d294af507fa469dbcbe3687007ea9fd0bc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29554d294af507fa469dbcbe3687007ea9fd0bc7"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "ad7235a6e75257e7cb141185ef7f5138c011f32f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ced939e817428c45e51f8caa16db26a7d7168c6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ced939e817428c45e51f8caa16db26a7d7168c6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5ced939e817428c45e51f8caa16db26a7d7168c6", "patch": "@@ -1,3 +1,11 @@\n+2013-05-10  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/55149\n+\t* semantics.c (add_capture): Error rather than abort on copy\n+\tcapture of VLA.\n+\t* typeck.c (maybe_warn_about_returning_address_of_local): Don't\n+\twarn about capture proxy.\n+\n 2013-05-09  Jason Merrill  <jason@redhat.com>\n \n \t* decl.c (cp_finish_decl): Only check VLA bound in C++1y mode."}, {"sha": "d0db10a03b70d8ce16f36a5a0a12e8294352ee18", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ced939e817428c45e51f8caa16db26a7d7168c6/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ced939e817428c45e51f8caa16db26a7d7168c6/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=5ced939e817428c45e51f8caa16db26a7d7168c6", "patch": "@@ -9463,9 +9463,12 @@ add_capture (tree lambda, tree id, tree initializer, bool by_reference_p,\n   type = lambda_capture_field_type (initializer, explicit_init_p);\n   if (array_of_runtime_bound_p (type))\n     {\n+      if (!by_reference_p)\n+\terror (\"array of runtime bound cannot be captured by copy, \"\n+\t       \"only by reference\");\n+\n       /* For a VLA, we capture the address of the first element and the\n \t maximum index, and then reconstruct the VLA for the proxy.  */\n-      gcc_assert (by_reference_p);\n       tree elt = cp_build_array_ref (input_location, initializer,\n \t\t\t\t     integer_zero_node, tf_warning_or_error);\n       tree ctype = vla_capture_type (type);"}, {"sha": "b8ea5551353bfcb6944317e74ec416c6614f65da", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ced939e817428c45e51f8caa16db26a7d7168c6/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ced939e817428c45e51f8caa16db26a7d7168c6/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=5ced939e817428c45e51f8caa16db26a7d7168c6", "patch": "@@ -8140,6 +8140,7 @@ maybe_warn_about_returning_address_of_local (tree retval)\n   if (DECL_P (whats_returned)\n       && DECL_NAME (whats_returned)\n       && DECL_FUNCTION_SCOPE_P (whats_returned)\n+      && !is_capture_proxy (whats_returned)\n       && !(TREE_STATIC (whats_returned)\n \t   || TREE_PUBLIC (whats_returned)))\n     {"}, {"sha": "1f6da2904870bf6969df8901248da1fa19373973", "filename": "gcc/testsuite/g++.dg/cpp1y/vla5.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ced939e817428c45e51f8caa16db26a7d7168c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvla5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ced939e817428c45e51f8caa16db26a7d7168c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvla5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvla5.C?ref=5ced939e817428c45e51f8caa16db26a7d7168c6", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/55149\n+// { dg-options -std=c++1y }\n+\n+void test(int n) {\n+  int r[n];\n+  [&r]() { return r + 0; };\n+  [r]() { return r + 0; };\t// { dg-error \"captured by copy\" }\n+}"}]}