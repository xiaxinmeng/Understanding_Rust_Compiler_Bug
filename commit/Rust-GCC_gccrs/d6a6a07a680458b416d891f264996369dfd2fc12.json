{"sha": "d6a6a07a680458b416d891f264996369dfd2fc12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZhNmEwN2E2ODA0NThiNDE2ZDg5MWYyNjQ5OTYzNjlkZmQyZmMxMg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-05-30T08:52:36Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-05-30T08:52:36Z"}, "message": "explow.c (probe_stack_range): Restore simple control flow and stop again when...\n\n\t* explow.c (probe_stack_range): Restore simple control flow and stop\n\tagain when the probe cannot be generated if HAVE_check_stack.\n\nFrom-SVN: r188003", "tree": {"sha": "53d15625dc76c77fcaca046c5f6f60de15ec7657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53d15625dc76c77fcaca046c5f6f60de15ec7657"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6a6a07a680458b416d891f264996369dfd2fc12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6a6a07a680458b416d891f264996369dfd2fc12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6a6a07a680458b416d891f264996369dfd2fc12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6a6a07a680458b416d891f264996369dfd2fc12/comments", "author": null, "committer": null, "parents": [{"sha": "667c517b378a6e09c4790aa2111492c9609996ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/667c517b378a6e09c4790aa2111492c9609996ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/667c517b378a6e09c4790aa2111492c9609996ba"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "0df8c162c0fe775a493790348cb4ffda0e00617e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a6a07a680458b416d891f264996369dfd2fc12/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a6a07a680458b416d891f264996369dfd2fc12/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6a6a07a680458b416d891f264996369dfd2fc12", "patch": "@@ -1,3 +1,8 @@\n+2012-05-30  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* explow.c (probe_stack_range): Restore simple control flow and stop\n+\tagain when the probe cannot be generated if HAVE_check_stack.\n+\n 2012-05-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/53519"}, {"sha": "be8bf3e1f0e25a2aa52f70115bf4e272a9e46062", "filename": "gcc/explow.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a6a07a680458b416d891f264996369dfd2fc12/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a6a07a680458b416d891f264996369dfd2fc12/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=d6a6a07a680458b416d891f264996369dfd2fc12", "patch": "@@ -1579,23 +1579,22 @@ probe_stack_range (HOST_WIDE_INT first, rtx size)\n \t\t\t\t\t\t\t\tsize, first)));\n       emit_library_call (stack_check_libfunc, LCT_NORMAL, VOIDmode, 1, addr,\n \t\t\t Pmode);\n-      return;\n     }\n \n   /* Next see if we have an insn to check the stack.  */\n #ifdef HAVE_check_stack\n-  if (HAVE_check_stack)\n+  else if (HAVE_check_stack)\n     {\n       struct expand_operand ops[1];\n       rtx addr = memory_address (Pmode,\n \t\t\t\t gen_rtx_fmt_ee (STACK_GROW_OP, Pmode,\n \t\t\t\t\t         stack_pointer_rtx,\n \t\t\t\t\t         plus_constant (Pmode,\n \t\t\t\t\t\t\t\tsize, first)));\n-\n+      bool success;\n       create_input_operand (&ops[0], addr, Pmode);\n-      if (maybe_expand_insn (CODE_FOR_check_stack, 1, ops))\n-\treturn;\n+      success = maybe_expand_insn (CODE_FOR_check_stack, 1, ops);\n+      gcc_assert (success);\n     }\n #endif\n "}]}