{"sha": "12d3f34b33bc41f5f3d010435fa7eb03fb344c5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJkM2YzNGIzM2JjNDFmNWYzZDAxMDQzNWZhN2ViMDNmYjM0NGM1Zg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-10-17T14:39:23Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-10-17T14:39:23Z"}, "message": "PR77994 Convert std::sample size argument to suitable type\n\n\tPR libstdc++/77994\n\t* include/bits/stl_algo.h (sample): Convert size argument to iterator\n\tdifference type.\n\t* include/experimental/algorithm (experimental::sample): Likewise.\n\t* testsuite/25_algorithms/sample/2.cc: New test.\n\nFrom-SVN: r241245", "tree": {"sha": "cc81988e0f78640dac228a761d506e38dc166b87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc81988e0f78640dac228a761d506e38dc166b87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12d3f34b33bc41f5f3d010435fa7eb03fb344c5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12d3f34b33bc41f5f3d010435fa7eb03fb344c5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12d3f34b33bc41f5f3d010435fa7eb03fb344c5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12d3f34b33bc41f5f3d010435fa7eb03fb344c5f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44b00dbca0929cbed83b1f326b5f96e3d0bc3f2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44b00dbca0929cbed83b1f326b5f96e3d0bc3f2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44b00dbca0929cbed83b1f326b5f96e3d0bc3f2d"}], "stats": {"total": 79, "additions": 77, "deletions": 2}, "files": [{"sha": "37ecc9c63928c562a204f26043391430cb0a13e1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12d3f34b33bc41f5f3d010435fa7eb03fb344c5f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12d3f34b33bc41f5f3d010435fa7eb03fb344c5f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=12d3f34b33bc41f5f3d010435fa7eb03fb344c5f", "patch": "@@ -1,3 +1,11 @@\n+2016-10-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/77994\n+\t* include/bits/stl_algo.h (sample): Convert size argument to iterator\n+\tdifference type.\n+\t* include/experimental/algorithm (experimental::sample): Likewise.\n+\t* testsuite/25_algorithms/sample/2.cc: New test.\n+\n 2016-10-17  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/unordered_map/insert/57619.C: Rename to 57619.cc."}, {"sha": "6c771bb323aedbd58fa8421f90afc5f8b991a478", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12d3f34b33bc41f5f3d010435fa7eb03fb344c5f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12d3f34b33bc41f5f3d010435fa7eb03fb344c5f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=12d3f34b33bc41f5f3d010435fa7eb03fb344c5f", "patch": "@@ -5730,8 +5730,9 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n       static_assert(is_integral<_Distance>::value,\n \t\t    \"sample size must be an integer type\");\n \n+      typename iterator_traits<_PopulationIterator>::difference_type __d = __n;\n       return std::__sample(__first, __last, __pop_cat{}, __out, __samp_cat{},\n-\t\t\t   __n, std::forward<_UniformRandomBitGenerator>(__g));\n+\t\t\t   __d, std::forward<_UniformRandomBitGenerator>(__g));\n     }\n #endif // C++17\n #endif // C++14"}, {"sha": "ff66b434bca501f9f3db99f5fbf453a9c68bcdca", "filename": "libstdc++-v3/include/experimental/algorithm", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12d3f34b33bc41f5f3d010435fa7eb03fb344c5f/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Falgorithm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12d3f34b33bc41f5f3d010435fa7eb03fb344c5f/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Falgorithm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Falgorithm?ref=12d3f34b33bc41f5f3d010435fa7eb03fb344c5f", "patch": "@@ -76,8 +76,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       static_assert(is_integral<_Distance>::value,\n \t\t    \"sample size must be an integer type\");\n \n+      typename iterator_traits<_PopulationIterator>::difference_type __d = __n;\n       return std::__sample(__first, __last, __pop_cat{}, __out, __samp_cat{},\n-\t\t\t   __n,\n+\t\t\t   __d,\n \t\t\t   std::forward<_UniformRandomNumberGenerator>(__g));\n     }\n "}, {"sha": "8865e18f728c41fe413f550068297c581163cc8f", "filename": "libstdc++-v3/testsuite/25_algorithms/sample/2.cc", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12d3f34b33bc41f5f3d010435fa7eb03fb344c5f/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsample%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12d3f34b33bc41f5f3d010435fa7eb03fb344c5f/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsample%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsample%2F2.cc?ref=12d3f34b33bc41f5f3d010435fa7eb03fb344c5f", "patch": "@@ -0,0 +1,65 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++1z } }\n+\n+#ifndef _GLIBCXX_ASSERTIONS\n+// Make std::uniform_int_distribution check its parameters\n+# define _GLIBCXX_ASSERTIONS\n+#endif\n+\n+#include <algorithm>\n+#include <random>\n+#include <climits>\n+#include <testsuite_hooks.h>\n+#include <testsuite_iterators.h>\n+\n+std::mt19937 rng;\n+\n+using std::sample;\n+using __gnu_test::test_container;\n+using __gnu_test::output_iterator_wrapper;\n+\n+void\n+test01()\n+{\n+  int pop[UCHAR_MAX]  = { };\n+  for (int i = SCHAR_MAX; i < UCHAR_MAX; ++i)\n+    pop[i] = 1;\n+  const signed char sample_size = SCHAR_MAX; // PR libstdc++/77994\n+  int out[sample_size] = { };\n+\n+  // random access iterators for both population and result\n+  // (uses reservoir sampling)\n+  auto it = sample(std::begin(pop), std::end(pop), out, sample_size, rng);\n+  auto sum = std::accumulate(out, it, 0);\n+  VERIFY( sum != 0 ); // exceedingly unlikely!\n+\n+  // random access iterator for population and output iterator for result\n+  // (uses selection sampling)\n+  test_container<int, output_iterator_wrapper> samp2(out);\n+  sample(std::begin(pop), std::end(pop), samp2.begin(), sample_size, rng);\n+  sum = std::accumulate(std::begin(out), std::end(out), 0);\n+  VERIFY( sum != 0 );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}