{"sha": "6bc6094fa3ffedd7a66776908783f901cadccf24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJjNjA5NGZhM2ZmZWRkN2E2Njc3NjkwODc4M2Y5MDFjYWRjY2YyNA==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-01-19T19:58:35Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-01-19T23:50:29Z"}, "message": "testsuite: aix testsuite adjustments\n\nThis patch re-enables the DWARF5 tests that seem to be functioning again.\nIt adds a comment to pr41445-7.c that any changes in lines need to be\nreflected in the expected output.\n\nThe patch also allows for additional failures in ucs.c and reflects that\nbuiltin-sprintf-warn-20.c requires 4 byte wide char support.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/cpp/ucs.c: Expect Invalid warning for 2byte wchar.\n\t* gcc.dg/debug/dwarf2/inline6.c: Remove skip AIX.\n\t* gcc.dg/debug/dwarf2/lang-c11.c: Remove skip AIX.\n\t* gcc.dg/debug/dwarf2/pr41445-7.c: Remove skip AIX.\n\t* gcc.dg/debug/dwarf2/pr41445-8.c: Remove skip AIX.\n\t* gcc.dg/tree-ssa/builtin-sprintf-warn-20.c: Require 4byte wchar.", "tree": {"sha": "3df7bb3a0a94a703ad8bb1d5f5765ed9e0bfd6f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3df7bb3a0a94a703ad8bb1d5f5765ed9e0bfd6f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bc6094fa3ffedd7a66776908783f901cadccf24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bc6094fa3ffedd7a66776908783f901cadccf24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bc6094fa3ffedd7a66776908783f901cadccf24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bc6094fa3ffedd7a66776908783f901cadccf24/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a311dfaf92c1ecb446ad3ca338cdd2d3ea0d3271", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a311dfaf92c1ecb446ad3ca338cdd2d3ea0d3271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a311dfaf92c1ecb446ad3ca338cdd2d3ea0d3271"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "0fdd23bffb54c3f9587b8f06e1df7aeccc3c763d", "filename": "gcc/testsuite/gcc.dg/cpp/ucs.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bc6094fa3ffedd7a66776908783f901cadccf24/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bc6094fa3ffedd7a66776908783f901cadccf24/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucs.c?ref=6bc6094fa3ffedd7a66776908783f901cadccf24", "patch": "@@ -43,7 +43,7 @@\n #endif\n \n #if WCHAR_MAX >= 0x7ffffff\n-# if L'\\U1234abcd' != 0x1234abcd /* { dg-warning \"outside\" \"\" } */\n+# if L'\\U1234abcd' != 0x1234abcd /* { dg-warning \"outside\" \"\" { xfail powerpc-ibm-aix* } } */\n #  error bad long ucs\t/* { dg-bogus \"bad\" \"bad U1234abcd evaluation\" } */\n # endif\n #endif\n@@ -69,5 +69,5 @@ void foo ()\n   c = L\"\\uD800\"[0];\t/* { dg-error \"not a valid\" \"D800 invalid UCN\" } */\n   c = L'\\U0000DFFF';\t/* { dg-error \"not a valid\" \"DFFF invalid UCN\" } */\n \n-  c = L'\\U00110000';\t/* { dg-warning \"outside\" \"110000 outside UCS\" } */\n+  c = L'\\U00110000';\t/* { dg-warning \"outside|Invalid\" \"110000 outside UCS\" } */\n }"}, {"sha": "fde8c27820da60aa42a24f20b8c7b84189c3b101", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/inline6.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bc6094fa3ffedd7a66776908783f901cadccf24/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Finline6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bc6094fa3ffedd7a66776908783f901cadccf24/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Finline6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Finline6.c?ref=6bc6094fa3ffedd7a66776908783f901cadccf24", "patch": "@@ -17,7 +17,6 @@\n /* Explicitly use dwarf-5 which uses DW_FORM_implicit_const.  */\n /* { dg-do compile } */\n /* { dg-options \"-O -g3 -gdwarf-5 -dA -fgnu89-inline\" } */\n-/* { dg-skip-if \"AIX DWARF5\" { powerpc-ibm-aix* } } */\n \n /* There are 6 inlined subroutines:\n    - One for each subroutine inlined into main, that's 3."}, {"sha": "f14c49fd3d336fa7ca01df19e3b9a9cddf10c927", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/lang-c11.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bc6094fa3ffedd7a66776908783f901cadccf24/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Flang-c11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bc6094fa3ffedd7a66776908783f901cadccf24/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Flang-c11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Flang-c11.c?ref=6bc6094fa3ffedd7a66776908783f901cadccf24", "patch": "@@ -1,6 +1,5 @@\n // { dg-do compile }\n // { dg-options \"-O -std=c11 -gdwarf-5 -dA\" }\n-// { dg-skip-if \"AIX DWARF5\" { powerpc-ibm-aix* } }\n // DW_LANG_C11 = 0x001d\n // { dg-final { scan-assembler \"0x1d.*DW_AT_language\" } } */\n "}, {"sha": "1aa600560a92839891825113197ec8391fbb9e64", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/pr41445-7.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bc6094fa3ffedd7a66776908783f901cadccf24/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fpr41445-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bc6094fa3ffedd7a66776908783f901cadccf24/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fpr41445-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fpr41445-7.c?ref=6bc6094fa3ffedd7a66776908783f901cadccf24", "patch": "@@ -1,9 +1,9 @@\n /* PR preprocessor/41445 DWARF5 variant */\n /* Test that token after multi-line function-like macro use\n-   gets correct locus even when preprocessing separately.  */\n+   gets correct locus even when preprocessing separately.\n+   If lines are inserted, the expected line number must be updated.  */\n /* { dg-do compile } */\n /* { dg-options \"-save-temps -gdwarf-5 -O0 -dA -fno-merge-debug-strings\" } */\n-/* { dg-skip-if \"AIX DWARF5\" { powerpc-ibm-aix* } } */\n \n #define A(x) vari x\n #define vari(x)"}, {"sha": "3a6eeb530968ee0e0e7c7ca34551ee2b2d61827d", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/pr41445-8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bc6094fa3ffedd7a66776908783f901cadccf24/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fpr41445-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bc6094fa3ffedd7a66776908783f901cadccf24/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fpr41445-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fpr41445-8.c?ref=6bc6094fa3ffedd7a66776908783f901cadccf24", "patch": "@@ -1,7 +1,6 @@\n /* PR preprocessor/41445 DWARF5 variant*/\n /* { dg-do compile } */\n /* { dg-options \"-gdwarf-5 -O0 -dA -fno-merge-debug-strings\" } */\n-/* { dg-skip-if \"AIX DWARF5\" { powerpc-ibm-aix* } } */\n \n #include \"pr41445-5.c\"\n "}, {"sha": "ec14057f6d67f43b4d453cf1ffbb19c5e0b329b0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-sprintf-warn-20.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bc6094fa3ffedd7a66776908783f901cadccf24/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bc6094fa3ffedd7a66776908783f901cadccf24/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-20.c?ref=6bc6094fa3ffedd7a66776908783f901cadccf24", "patch": "@@ -1,7 +1,8 @@\n /* PR tree-optimization/87034 - missing -Wformat-overflow on a sprintf\n-   %s with a wide string\n-   { dg-do compile }\n-   { dg-options \"-O2 -Wall -Wformat-overflow -ftrack-macro-expansion=0\" } */\n+   %s with a wide string.  */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target 4byte_wchar_t } */\n+/* { dg-options \"-O2 -Wall -Wformat-overflow -ftrack-macro-expansion=0\" } */\n \n typedef __WCHAR_TYPE__ wchar_t;\n "}]}