{"sha": "bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNhMjNjYTIwYzY3ZDdhNmE1YjdiNGY4MGM0OWU0OTBmNGI3MzVmOQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-07-02T07:51:40Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-07-02T07:51:40Z"}, "message": "pt.c (convert_template_argument): Use inform instead of error in three places.\n\n/cp\n2014-07-02  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* pt.c (convert_template_argument): Use inform instead of error in\n\tthree places.\n\n/testsuite\n2014-07-02  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* g++.dg/cpp0x/variadic-ex10.C: Adjust for inform instead of error.\n\t* g++.dg/cpp0x/variadic-ex14.C: Likewise.\n\t* g++.dg/parse/error11.C: Likewise.\n\t* g++.old-deja/g++.brendan/template17.C: Likewise.\n\nFrom-SVN: r212223", "tree": {"sha": "91d22524cf3c9a0b520a42fa14fc4fd6c4dee098", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91d22524cf3c9a0b520a42fa14fc4fd6c4dee098"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9/comments", "author": null, "committer": null, "parents": [{"sha": "d570d364e65622ce12e1153a5a71e5086ae52bff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d570d364e65622ce12e1153a5a71e5086ae52bff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d570d364e65622ce12e1153a5a71e5086ae52bff"}], "stats": {"total": 48, "additions": 33, "deletions": 15}, "files": [{"sha": "dd6279af49c8c2b411ce34b695176471fb2c60be", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9", "patch": "@@ -1,3 +1,8 @@\n+2014-07-02  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* pt.c (convert_template_argument): Use inform instead of error in\n+\tthree places.\n+\n 2014-06-30  Edward Smith-Rowland  <3dw4rd@verizon.net>\n \n \tPR c++/58781"}, {"sha": "7bbbf0301ff606ecc3d4e271701f2bd8caeff969", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9", "patch": "@@ -6468,13 +6468,16 @@ convert_template_argument (tree parm,\n \t\t     \"parameter list for %qD\",\n \t\t     i + 1, in_decl);\n \t      if (is_type)\n-\t\terror (\"  expected a constant of type %qT, got %qT\",\n-\t\t       TREE_TYPE (parm),\n-\t\t       (DECL_P (arg) ? DECL_NAME (arg) : orig_arg));\n+\t\tinform (input_location,\n+\t\t\t\"  expected a constant of type %qT, got %qT\",\n+\t\t\tTREE_TYPE (parm),\n+\t\t\t(DECL_P (arg) ? DECL_NAME (arg) : orig_arg));\n \t      else if (requires_tmpl_type)\n-\t\terror (\"  expected a class template, got %qE\", orig_arg);\n+\t\tinform (input_location,\n+\t\t\t\"  expected a class template, got %qE\", orig_arg);\n \t      else\n-\t\terror (\"  expected a type, got %qE\", orig_arg);\n+\t\tinform (input_location,\n+\t\t\t\"  expected a type, got %qE\", orig_arg);\n \t    }\n \t}\n       return error_mark_node;\n@@ -6487,9 +6490,11 @@ convert_template_argument (tree parm,\n \t\t \"parameter list for %qD\",\n \t\t i + 1, in_decl);\n \t  if (is_tmpl_type)\n-\t    error (\"  expected a type, got %qT\", DECL_NAME (arg));\n+\t    inform (input_location,\n+\t\t    \"  expected a type, got %qT\", DECL_NAME (arg));\n \t  else\n-\t    error (\"  expected a class template, got %qT\", orig_arg);\n+\t    inform (input_location,\n+\t\t    \"  expected a class template, got %qT\", orig_arg);\n \t}\n       return error_mark_node;\n     }\n@@ -6537,8 +6542,9 @@ convert_template_argument (tree parm,\n \t\t      error (\"type/value mismatch at argument %d in \"\n \t\t\t     \"template parameter list for %qD\",\n \t\t\t     i + 1, in_decl);\n-\t\t      error (\"  expected a template of type %qD, got %qT\",\n-\t\t\t     parm, orig_arg);\n+\t\t      inform (input_location,\n+\t\t\t      \"  expected a template of type %qD, got %qT\",\n+\t\t\t      parm, orig_arg);\n \t\t    }\n \n \t\t  val = error_mark_node;"}, {"sha": "2947c76e312808430308c751820b526ec6e88049", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9", "patch": "@@ -1,3 +1,10 @@\n+2014-07-02  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* g++.dg/cpp0x/variadic-ex10.C: Adjust for inform instead of error.\n+\t* g++.dg/cpp0x/variadic-ex14.C: Likewise.\n+\t* g++.dg/parse/error11.C: Likewise.\n+\t* g++.old-deja/g++.brendan/template17.C: Likewise.\n+\n 2014-07-02  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/coarray/get_array.f90: Add missing SYNC ALL."}, {"sha": "740a45e5127edf93d19433a9865882f3f78ecd3d", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-ex10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex10.C?ref=bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9", "patch": "@@ -5,5 +5,5 @@ Tuple<> t0; // Types contains no arguments\n Tuple<int> t1; // Types contains one argument: int\n Tuple<int, float> t2; // Types contains two arguments: int and float\n Tuple<0> error; // { dg-error \"mismatch\" \"mismatch\" }\n-// { dg-error \"expected a type\" \"expected a type\" { target *-*-* } 7 }\n+// { dg-message \"expected a type\" \"expected a type\" { target *-*-* } 7 }\n // { dg-error \"in declaration\" \"in declaration\" { target *-*-* } 7 }"}, {"sha": "88c714e153dba76df2b15205008b681ac0b2dfcc", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-ex14.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex14.C?ref=bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9", "patch": "@@ -9,10 +9,10 @@ template<template<class...> class Q> class Y { /* ... */ };\n \n X<A> xA; // okay\n X<B> xB; // { dg-error \"mismatch\" \"mismatch\" }\n-// { dg-error \"expected a template\" \"expected\" { target *-*-* } 11 }\n+// { dg-message \"expected a template\" \"expected\" { target *-*-* } 11 }\n // { dg-error \"invalid type\" \"invalid\" { target *-*-* } 11 }\n X<C> xC; // { dg-error \"mismatch\" \"mismatch\" }\n-// { dg-error \"expected a template\" \"expected\" { target *-*-* } 14 }\n+// { dg-message \"expected a template\" \"expected\" { target *-*-* } 14 }\n // { dg-error \"invalid type\" \"invalid\" { target *-*-* } 14 }\n Y<A> yA;\n Y<B> yB;"}, {"sha": "846e676c9c0933c0496d6510b76ef2808e933f9b", "filename": "gcc/testsuite/g++.dg/parse/error11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror11.C?ref=bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9", "patch": "@@ -33,7 +33,7 @@ template <int N> struct Foo2 {};\n template struct Foo2<::B>;  // { dg-error \"21:'<::' cannot begin\" \"begin\" { target { ! c++11 } } }\n // { dg-message \"21:'<:' is an alternate\" \"alt\" { target { ! c++11 } } 33 }\n // { dg-message \"25:type/value mismatch\" \"mismatch\" { target *-*-* } 33 }\n-// { dg-error \"25:expected a constant\" \"const\" { target *-*-* } 33 }\n+// { dg-message \"25:expected a constant\" \"const\" { target *-*-* } 33 }\n \n int value = 0;\n "}, {"sha": "94eaf3d0da2f25ff4583f98f7b13279b19d73927", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/template17.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ftemplate17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ftemplate17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ftemplate17.C?ref=bca23ca20c67d7a6a5b7b4f80c49e490f4b735f9", "patch": "@@ -9,7 +9,7 @@ public:\n };\n \n const Regex NDAMName<'L'>::pattern(\"^[Ll](.*)$\",   1);// { dg-error \"type/value mismatch\" \"mismatch\" }\n-// { dg-error \"expected a type\" \"expected\" { target *-*-* } 11 }\n+// { dg-message \"expected a type\" \"expected\" { target *-*-* } 11 }\n // { dg-warning \"deprecated\" \"depr\" { target *-*-* } 11 }\n unsigned NDAMName<'L'>::sequence_number = 0;// { dg-error \"type/value mismatch\" \"mismatch\" }\n-// { dg-error \"expected a type\" \"exp\" { target *-*-* } 14 }\n+// { dg-message \"expected a type\" \"exp\" { target *-*-* } 14 }"}]}