{"sha": "1af21224e417d96b363e2b7dec0cbb0e3ed78f99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFmMjEyMjRlNDE3ZDk2YjM2M2UyYjdkZWMwY2JiMGUzZWQ3OGY5OQ==", "commit": {"author": {"name": "Matthew Wahab", "email": "matthew.wahab@arm.com", "date": "2016-06-29T12:37:00Z"}, "committer": {"name": "Matthew Wahab", "email": "mwahab@gcc.gnu.org", "date": "2016-06-29T12:37:00Z"}, "message": "[ARM] Fix, add tests for FP16 aapcs.\n\ntestsuite/\n\t* gcc.target/arm/aapcs/neon-vect10.c: Require\n\t-mfloat-ab=hard.  Replace arm_neon_fp16_ok with arm_neon_fp16_hw.\n\t* gcc.target/arm/aapcs/neon-vect9.c: Likewise.\n\t* gcc.target/arm/aapcs/vfp18.c: Likewise.\n\t* gcc.target/arm/aapcs/vfp19.c: Likewise.\n\t* gcc.target/arm/aapcs/vfp20.c: Likewise.\n\t* gcc.target/arm/aapcs/vfp21.c: Likewise.\n\t* gcc.target/arm/fp16-aapcs-1.c: Require\n\t-mfloat-ab=hard.  Also simplify the test.\n\t* gcc.target/arm/fp16-aapcs-2.c: New.\n\nFrom-SVN: r237849", "tree": {"sha": "f1f974a7ba08bd4973c2bf54f30ba7cfdd209b4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1f974a7ba08bd4973c2bf54f30ba7cfdd209b4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1af21224e417d96b363e2b7dec0cbb0e3ed78f99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1af21224e417d96b363e2b7dec0cbb0e3ed78f99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1af21224e417d96b363e2b7dec0cbb0e3ed78f99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/comments", "author": null, "committer": null, "parents": [{"sha": "abb67622cf2b192afc1956a6482f103d1a76f721", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abb67622cf2b192afc1956a6482f103d1a76f721", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abb67622cf2b192afc1956a6482f103d1a76f721"}], "stats": {"total": 98, "additions": 71, "deletions": 27}, "files": [{"sha": "c8f96a9873224e9e10b8d9662f87c94e3fdd40ce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1af21224e417d96b363e2b7dec0cbb0e3ed78f99", "patch": "@@ -1,3 +1,16 @@\n+2016-06-29  Matthew Wahab  <matthew.wahab@arm.com>\n+\n+\t* gcc.target/arm/aapcs/neon-vect10.c: Require\n+\t-mfloat-ab=hard.  Replace arm_neon_fp16_ok with arm_neon_fp16_hw.\n+\t* gcc.target/arm/aapcs/neon-vect9.c: Likewise.\n+\t* gcc.target/arm/aapcs/vfp18.c: Likewise.\n+\t* gcc.target/arm/aapcs/vfp19.c: Likewise.\n+\t* gcc.target/arm/aapcs/vfp20.c: Likewise.\n+\t* gcc.target/arm/aapcs/vfp21.c: Likewise.\n+\t* gcc.target/arm/fp16-aapcs-1.c: Require\n+\t-mfloat-ab=hard.  Also simplify the test.\n+\t* gcc.target/arm/fp16-aapcs-2.c: New.\n+\n 2016-06-29  Matthew Wahab  <matthew.wahab@arm.com>\n \n \t* lib/target-supports.exp (add_options_for_arm_fp16): Reword"}, {"sha": "788079bc104f927592199899407369940c28aae3", "filename": "gcc/testsuite/gcc.target/arm/aapcs/neon-vect10.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Faapcs%2Fneon-vect10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Faapcs%2Fneon-vect10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Faapcs%2Fneon-vect10.c?ref=1af21224e417d96b363e2b7dec0cbb0e3ed78f99", "patch": "@@ -1,7 +1,8 @@\n /* Test AAPCS layout (VFP variant for Neon types) */\n \n /* { dg-do run { target arm_eabi } } */\n-/* { dg-require-effective-target arm_neon_fp16_ok } */\n+/* { dg-require-effective-target arm_hard_vfp_ok }  */\n+/* { dg-require-effective-target arm_neon_fp16_hw } */\n /* { dg-add-options arm_neon_fp16 } */\n \n #ifndef IN_FRAMEWORK"}, {"sha": "b42fdd23926c286a0edfa8897b97c0283a2de630", "filename": "gcc/testsuite/gcc.target/arm/aapcs/neon-vect9.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Faapcs%2Fneon-vect9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Faapcs%2Fneon-vect9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Faapcs%2Fneon-vect9.c?ref=1af21224e417d96b363e2b7dec0cbb0e3ed78f99", "patch": "@@ -1,7 +1,8 @@\n /* Test AAPCS layout (VFP variant for Neon types) */\n \n /* { dg-do run { target arm_eabi } } */\n-/* { dg-require-effective-target arm_neon_fp16_ok } */\n+/* { dg-require-effective-target arm_hard_vfp_ok }  */\n+/* { dg-require-effective-target arm_neon_fp16_hw } */\n /* { dg-add-options arm_neon_fp16 } */\n \n #ifndef IN_FRAMEWORK"}, {"sha": "0745a82f5e835147ddda46c8ae1e905294ff2714", "filename": "gcc/testsuite/gcc.target/arm/aapcs/vfp18.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Faapcs%2Fvfp18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Faapcs%2Fvfp18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Faapcs%2Fvfp18.c?ref=1af21224e417d96b363e2b7dec0cbb0e3ed78f99", "patch": "@@ -1,8 +1,9 @@\n-/* Test AAPCS layout (VFP variant) */\n+/* Test AAPCS layout (VFP variant)  */\n \n /* { dg-do run { target arm_eabi } }  */\n-/* { dg-require-effective-target arm_neon_fp16_ok } */\n-/* { dg-options \"-O -mfpu=vfp -mfloat-abi=hard -mfp16-format=ieee\" } */\n+/* { dg-require-effective-target arm_hard_vfp_ok }  */\n+/* { dg-require-effective-target arm_fp16_hw }  */\n+/* { dg-add-options arm_fp16_ieee }  */\n \n #ifndef IN_FRAMEWORK\n #define VFP"}, {"sha": "950c1f6a6d41dff0ebd91fc945dc2c3ff11503fb", "filename": "gcc/testsuite/gcc.target/arm/aapcs/vfp19.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Faapcs%2Fvfp19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Faapcs%2Fvfp19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Faapcs%2Fvfp19.c?ref=1af21224e417d96b363e2b7dec0cbb0e3ed78f99", "patch": "@@ -1,8 +1,9 @@\n-/* Test AAPCS layout (VFP variant) */\n+/* Test AAPCS layout (VFP variant)  */\n \n-/* { dg-do run { target arm_eabi } } */\n-/* { dg-require-effective-target arm_neon_fp16_ok } */\n-/* { dg-options \"-O -mfpu=vfp -mfloat-abi=hard -mfp16-format=ieee\" } */\n+/* { dg-do run { target arm_eabi } }  */\n+/* { dg-require-effective-target arm_hard_vfp_ok }  */\n+/* { dg-require-effective-target arm_fp16_hw }  */\n+/* { dg-add-options arm_fp16_ieee }  */\n \n #ifndef IN_FRAMEWORK\n #define VFP"}, {"sha": "f898d4cebd700dbc18c7f8792b950a420639f47f", "filename": "gcc/testsuite/gcc.target/arm/aapcs/vfp20.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Faapcs%2Fvfp20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Faapcs%2Fvfp20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Faapcs%2Fvfp20.c?ref=1af21224e417d96b363e2b7dec0cbb0e3ed78f99", "patch": "@@ -1,8 +1,9 @@\n-/* Test AAPCS layout (VFP variant) */\n+/* Test AAPCS layout (VFP variant)  */\n \n-/* { dg-do run { target arm_eabi } } */\n-/* { dg-require-effective-target arm_neon_fp16_ok } */\n-/* { dg-options \"-O -mfpu=vfp -mfloat-abi=hard -mfp16-format=ieee\" } */\n+/* { dg-do run { target arm_eabi } }  */\n+/* { dg-require-effective-target arm_hard_vfp_ok }  */\n+/* { dg-require-effective-target arm_fp16_hw }  */\n+/* { dg-add-options arm_fp16_ieee }  */\n \n #ifndef IN_FRAMEWORK\n #define VFP"}, {"sha": "48bb59856e0ad6e48b842a7f35c4e599106704cd", "filename": "gcc/testsuite/gcc.target/arm/aapcs/vfp21.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Faapcs%2Fvfp21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Faapcs%2Fvfp21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Faapcs%2Fvfp21.c?ref=1af21224e417d96b363e2b7dec0cbb0e3ed78f99", "patch": "@@ -1,8 +1,9 @@\n-/* Test AAPCS layout (VFP variant) */\n+/* Test AAPCS layout (VFP variant)  */\n \n-/* { dg-do run { target arm_eabi } } */\n-/* { dg-require-effective-target arm_neon_fp16_ok } */\n-/* { dg-options \"-O -mfpu=vfp -mfloat-abi=hard -mfp16-format=ieee\" } */\n+/* { dg-do run { target arm_eabi } }  */\n+/* { dg-require-effective-target arm_hard_vfp_ok }  */\n+/* { dg-require-effective-target arm_fp16_hw }  */\n+/* { dg-add-options arm_fp16_ieee }  */\n \n #ifndef IN_FRAMEWORK\n #define VFP"}, {"sha": "9bf3fc07e7fad008940987bb2a80e6ddd6a2650c", "filename": "gcc/testsuite/gcc.target/arm/fp16-aapcs-1.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-aapcs-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-aapcs-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-aapcs-1.c?ref=1af21224e417d96b363e2b7dec0cbb0e3ed78f99", "patch": "@@ -1,17 +1,21 @@\n /* { dg-do compile }  */\n+/* { dg-require-effective-target arm_hard_vfp_ok }  */\n /* { dg-require-effective-target arm_fp16_ok } */\n-/* { dg-options \"-mfp16-format=ieee -O2\" }  */\n-/* { dg-add-options arm_fp16 } */\n+/* { dg-options \"-O2\" }  */\n+/* { dg-add-options arm_fp16_ieee } */\n \n-/* Test __fp16 arguments and return value in registers.  */\n+/* Test __fp16 arguments and return value in registers (hard-float).  */\n \n-__fp16 F (__fp16 a, __fp16 b, __fp16 c)\n+void\n+swap (__fp16, __fp16);\n+\n+__fp16\n+F (__fp16 a, __fp16 b, __fp16 c)\n {\n-  if (a == b)\n-    return c;\n-  return a;\n+  swap (b, a);\n+  return c;\n }\n \n-/* { dg-final { scan-assembler-times {vcvtb\\.f32\\.f16\\ts[0-9]+, s0} 1 } }  */\n-/* { dg-final { scan-assembler-times {vcvtb\\.f32\\.f16\\ts[0-9]+, s1} 1 } }  */\n-/* { dg-final { scan-assembler-times {vmov\\ts0, r[0-9]+} 1 } }  */\n+/* { dg-final { scan-assembler-times {vmov\\tr[0-9]+, s[0-2]} 2 } }  */\n+/* { dg-final { scan-assembler-times {vmov.f32\\ts1, s0} 1 } }  */\n+/* { dg-final { scan-assembler-times {vmov\\ts0, r[0-9]+} 2 } }  */"}, {"sha": "4753e364a226a618239a8fa14fc6fdf21a9730ef", "filename": "gcc/testsuite/gcc.target/arm/fp16-aapcs-2.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-aapcs-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1af21224e417d96b363e2b7dec0cbb0e3ed78f99/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-aapcs-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-aapcs-2.c?ref=1af21224e417d96b363e2b7dec0cbb0e3ed78f99", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile }  */\n+/* { dg-require-effective-target arm_fp16_ok } */\n+/* { dg-options \"-mfloat-abi=softfp -O2\" }  */\n+/* { dg-add-options arm_fp16_ieee } */\n+/* { dg-skip-if \"incompatible float-abi\" { arm*-*-* } { \"-mfloat-abi=hard\" } } */\n+\n+/* Test __fp16 arguments and return value in registers (softfp).  */\n+\n+void\n+swap (__fp16, __fp16);\n+\n+__fp16\n+F (__fp16 a, __fp16 b, __fp16 c)\n+{\n+  swap (b, a);\n+  return c;\n+}\n+\n+/* { dg-final { scan-assembler-times {mov\\tr[0-9]+, r[0-2]} 3 } }  */\n+/* { dg-final { scan-assembler-times {mov\\tr1, r0} 1 } }  */\n+/* { dg-final { scan-assembler-times {mov\\tr0, r[0-9]+} 2 } }  */"}]}