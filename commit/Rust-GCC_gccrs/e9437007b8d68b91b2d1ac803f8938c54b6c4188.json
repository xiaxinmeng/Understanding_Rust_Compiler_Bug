{"sha": "e9437007b8d68b91b2d1ac803f8938c54b6c4188", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk0MzcwMDdiOGQ2OGI5MWIyZDFhYzgwM2Y4OTM4YzU0YjZjNDE4OA==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2005-06-16T08:42:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T08:42:20Z"}, "message": "lib-load.ads, [...] (Load_Unit): Addition of a new parameter that indicates if...\n\n2005-06-14  Javier Miranda  <miranda@adacore.com>\n\t    Jose Ruiz  <ruiz@adacore.com>\n\t    Robert Dewar  <dewar@adacore.com>\n\t    Ed Schonberg  <schonberg@adacore.com>\n\n\t* lib-load.ads, lib-load.adb (Load_Unit): Addition of a new parameter\n\tthat indicates if we are parsing a compilation unit found in a\n\tlimited-with clause.\n\tIt is use to avoid the circularity check.\n\n\t* par.ads, par.adb (Par): Addition of a new parameter to indicate if\n\twe are parsing a compilation unit found in a limited-with clause. This\n\tis use to avoid the circularity check.\n\n\t* par-load.adb (Load): Indicate Lib.Load_Unit if we are loading the\n\tunit as a consequence of parsing a limited-with clause. This is used\n\tto avoid the circularity check.\n\n\t* sem_ch10.adb: Suppress Ada 2005 unit warning if -gnatwY used\n\t(Analyze_Context): Limited-with clauses are now allowed\n\tin more compilation units.\n\t(Analyze_Subunit_Context, Check_Parent): Protect the frontend\n\tagaints previously reported critical errors in context clauses\n\t(Install_Limited_Withed_Unit): Code cleanup plus static detection\n\tof two further errors: renamed subprograms and renamed packages\n\tare not allowed in limited with clauses.\n\t(Install_Siblings): Do not install private_with_clauses on the package\n\tdeclaration for a non-private child unit.\n\t(Re_Install_Parents): When a parent of the subunit is reinstalled,\n\treset visibility of child units properly.\n\t(Install_Withed_Unit): When a child unit appears in a with_clause of its\n\tparent, it is immediately visible.\n\nFrom-SVN: r101045", "tree": {"sha": "394b0f483b526345d7b13eec1043d26e3b4ee815", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/394b0f483b526345d7b13eec1043d26e3b4ee815"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9437007b8d68b91b2d1ac803f8938c54b6c4188", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9437007b8d68b91b2d1ac803f8938c54b6c4188", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9437007b8d68b91b2d1ac803f8938c54b6c4188", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9437007b8d68b91b2d1ac803f8938c54b6c4188/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d37209bffbef004f2de1040b938ae0d1eeb493aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d37209bffbef004f2de1040b938ae0d1eeb493aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d37209bffbef004f2de1040b938ae0d1eeb493aa"}], "stats": {"total": 220, "additions": 154, "deletions": 66}, "files": [{"sha": "16d610aae0c283b96ff8928532958f48b5327902", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 27, "deletions": 10, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9437007b8d68b91b2d1ac803f8938c54b6c4188/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9437007b8d68b91b2d1ac803f8938c54b6c4188/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=e9437007b8d68b91b2d1ac803f8938c54b6c4188", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,6 +38,7 @@ with Osint;    use Osint;\n with Osint.C;  use Osint.C;\n with Output;   use Output;\n with Par;\n+with Restrict; use Restrict;\n with Scn;      use Scn;\n with Sinfo;    use Sinfo;\n with Sinput;   use Sinput;\n@@ -236,12 +237,13 @@ package body Lib.Load is\n    ---------------\n \n    function Load_Unit\n-     (Load_Name  : Unit_Name_Type;\n-      Required   : Boolean;\n-      Error_Node : Node_Id;\n-      Subunit    : Boolean;\n-      Corr_Body  : Unit_Number_Type := No_Unit;\n-      Renamings  : Boolean          := False) return Unit_Number_Type\n+     (Load_Name         : Unit_Name_Type;\n+      Required          : Boolean;\n+      Error_Node        : Node_Id;\n+      Subunit           : Boolean;\n+      Corr_Body         : Unit_Number_Type := No_Unit;\n+      Renamings         : Boolean          := False;\n+      From_Limited_With : Boolean          := False) return Unit_Number_Type\n    is\n       Calling_Unit : Unit_Number_Type;\n       Uname_Actual : Unit_Name_Type;\n@@ -487,7 +489,7 @@ package body Lib.Load is\n                        or else Acts_As_Spec (Units.Table (Unum).Cunit))\n            and then (Nkind (Error_Node) /= N_With_Clause\n                        or else not Limited_Present (Error_Node))\n-\n+           and then not From_Limited_With\n          then\n             if Debug_Flag_L then\n                Write_Str (\"  circular dependency encountered\");\n@@ -561,7 +563,8 @@ package body Lib.Load is\n                Multiple_Unit_Index := Get_Unit_Index (Uname_Actual);\n                Units.Table (Unum).Munit_Index := Multiple_Unit_Index;\n                Initialize_Scanner (Unum, Source_Index (Unum));\n-               Discard_List (Par (Configuration_Pragmas => False));\n+               Discard_List (Par (Configuration_Pragmas => False,\n+                                  From_Limited_With     => From_Limited_With));\n                Multiple_Unit_Index := Save_Index;\n                Set_Loading (Unum, False);\n             end;\n@@ -606,8 +609,22 @@ package body Lib.Load is\n             --  Generate message if unit required\n \n             if Required and then Present (Error_Node) then\n-\n                if Is_Predefined_File_Name (Fname) then\n+\n+                  --  This is a predefined library unit which is not present\n+                  --  in the run time. If a predefined unit is not available\n+                  --  it may very likely be the case that there is also pragma\n+                  --  Restriction forbidding its usage. This is typically the\n+                  --  case when building a configurable run time, where the\n+                  --  usage of certain run-time units units is restricted by\n+                  --  means of both the corresponding pragma Restriction (such\n+                  --  as No_Calendar), and by not including the unit. Hence,\n+                  --  we check whether this predefined unit is forbidden, so\n+                  --  that the message about the restriction violation is\n+                  --  generated, if needed.\n+\n+                  Check_Restricted_Unit (Load_Name, Error_Node);\n+\n                   Error_Msg_Name_1 := Uname_Actual;\n                   Error_Msg\n                     (\"% is not a predefined library unit\", Load_Msg_Sloc);"}, {"sha": "afc8f38be70c6609de88eed3414c43d99f463ec3", "filename": "gcc/ada/lib-load.ads", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9437007b8d68b91b2d1ac803f8938c54b6c4188/gcc%2Fada%2Flib-load.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9437007b8d68b91b2d1ac803f8938c54b6c4188/gcc%2Fada%2Flib-load.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.ads?ref=e9437007b8d68b91b2d1ac803f8938c54b6c4188", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -104,12 +104,13 @@ package Lib.Load is\n    --  and then closed on return.\n \n    function Load_Unit\n-     (Load_Name  : Unit_Name_Type;\n-      Required   : Boolean;\n-      Error_Node : Node_Id;\n-      Subunit    : Boolean;\n-      Corr_Body  : Unit_Number_Type := No_Unit;\n-      Renamings  : Boolean          := False) return Unit_Number_Type;\n+     (Load_Name         : Unit_Name_Type;\n+      Required          : Boolean;\n+      Error_Node        : Node_Id;\n+      Subunit           : Boolean;\n+      Corr_Body         : Unit_Number_Type := No_Unit;\n+      Renamings         : Boolean          := False;\n+      From_Limited_With : Boolean          := False) return Unit_Number_Type;\n    --  This function loads and parses the unit specified by Load_Name (or\n    --  returns the unit number for the previously constructed units table\n    --  entry if this is not the first call for this unit). Required indicates\n@@ -147,6 +148,10 @@ package Lib.Load is\n    --  described in the documentation of this unit. If this parameter is\n    --  set to True, then Load_Name may not be the real unit name and it\n    --  is necessary to load parents to find the real name.\n+   --\n+   --  From_Limited_With is True if we are loading a unit X found in a\n+   --  limited-with clause, or some unit in the context of X. It is used to\n+   --  avoid the check on circular dependency (Ada 2005, AI-50217)\n \n    function Create_Dummy_Package_Unit\n      (With_Node : Node_Id;"}, {"sha": "4ed8b89838f29832952eb7d24217b58d96b4f06b", "filename": "gcc/ada/par-load.adb", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9437007b8d68b91b2d1ac803f8938c54b6c4188/gcc%2Fada%2Fpar-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9437007b8d68b91b2d1ac803f8938c54b6c4188/gcc%2Fada%2Fpar-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-load.adb?ref=e9437007b8d68b91b2d1ac803f8938c54b6c4188", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -360,11 +360,14 @@ begin\n \n          Unum :=\n            Load_Unit\n-             (Load_Name  => Spec_Name,\n-              Required   => False,\n-              Subunit    => False,\n-              Error_Node => With_Node,\n-              Renamings  => True);\n+             (Load_Name         => Spec_Name,\n+              Required          => False,\n+              Subunit           => False,\n+              Error_Node        => With_Node,\n+              Renamings         => True,\n+              From_Limited_With => From_Limited_With\n+                                     or else\n+                                   Limited_Present (Context_Node));\n \n          --  If we find the unit, then set spec pointer in the N_With_Clause\n          --  to point to the compilation unit for the spec. Remember that"}, {"sha": "02ef4b0497dff94530c4e79134a458000254fd72", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9437007b8d68b91b2d1ac803f8938c54b6c4188/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9437007b8d68b91b2d1ac803f8938c54b6c4188/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=e9437007b8d68b91b2d1ac803f8938c54b6c4188", "patch": "@@ -50,8 +50,10 @@ with Tbuild;   use Tbuild;\n -- Par --\n ---------\n \n-function Par (Configuration_Pragmas : Boolean) return List_Id is\n-\n+function Par\n+  (Configuration_Pragmas : Boolean;\n+   From_Limited_With     : Boolean := False) return List_Id\n+is\n    Num_Library_Units : Natural := 0;\n    --  Count number of units parsed (relevant only in syntax check only mode,\n    --  since in semantics check mode only a single unit is permitted anyway)"}, {"sha": "97ba2090c29f214867b8451cee4f859cc947e111", "filename": "gcc/ada/par.ads", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9437007b8d68b91b2d1ac803f8938c54b6c4188/gcc%2Fada%2Fpar.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9437007b8d68b91b2d1ac803f8938c54b6c4188/gcc%2Fada%2Fpar.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.ads?ref=e9437007b8d68b91b2d1ac803f8938c54b6c4188", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---     Copyright (C) 1992,1993,1994,1995 Free Software Foundation, Inc.     --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,14 +29,18 @@\n \n with Types; use Types;\n \n-function Par (Configuration_Pragmas : Boolean) return List_Id;\n+function Par\n+  (Configuration_Pragmas : Boolean;\n+   From_Limited_With     : Boolean := False) return List_Id;\n --  Top level parsing routine. There are two cases:\n --\n --  If Configuration_Pragmas is False, Par parses a compilation unit in the\n --  current source file and sets the Cunit, Cunit_Entity and Unit_Name fields\n --  of the units table entry for Current_Source_Unit. On return the parse tree\n --  is complete, and decorated with any required implicit label declarations.\n---  The value returned in this case is always No_List.\n+--  The value returned in this case is always No_List. If From_Limited_With is\n+--  True, we are parsing a compilation unit found in a limited-with clause (Ada\n+--  2005, AI-50217)\n --\n --  If Configuration_Pragmas is True, Par parses a list of configuration\n --  pragmas from the current source file, and returns the list of pragmas."}, {"sha": "bb90be32e6995bb5b710042502e59e92e317f884", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 95, "deletions": 38, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9437007b8d68b91b2d1ac803f8938c54b6c4188/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9437007b8d68b91b2d1ac803f8938c54b6c4188/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=e9437007b8d68b91b2d1ac803f8938c54b6c4188", "patch": "@@ -803,6 +803,7 @@ package body Sem_Ch10 is\n    ---------------------\n \n    procedure Analyze_Context (N : Node_Id) is\n+      Ukind : constant Node_Kind := Nkind (Unit (N));\n       Item  : Node_Id;\n \n    begin\n@@ -872,10 +873,22 @@ package body Sem_Ch10 is\n          if Nkind (Item) = N_With_Clause\n            and then Limited_Present (Item)\n          then\n-\n-            if Nkind (Unit (N)) /= N_Package_Declaration then\n-               Error_Msg_N (\"limited with_clause only allowed in\"\n-                            & \" package specification\", Item);\n+            --  Check the compilation unit containing the limited-with\n+            --  clause\n+\n+            if Ukind /= N_Package_Declaration\n+              and then Ukind /= N_Subprogram_Declaration\n+              and then Ukind /= N_Subprogram_Renaming_Declaration\n+              and then Ukind /= N_Generic_Package_Declaration\n+              and then Ukind /= N_Generic_Package_Renaming_Declaration\n+              and then Ukind /= N_Generic_Subprogram_Declaration\n+              and then Ukind /= N_Generic_Procedure_Renaming_Declaration\n+              and then Ukind /= N_Package_Instantiation\n+              and then Ukind /= N_Package_Renaming_Declaration\n+              and then Ukind /= N_Procedure_Instantiation\n+            then\n+               Error_Msg_N\n+                 (\"limited with_clause not allowed here\", Item);\n             end if;\n \n             --  Skip analyzing with clause if no unit, see above\n@@ -1337,16 +1350,21 @@ package body Sem_Ch10 is\n          while Present (Item) loop\n \n             if Nkind (Item) = N_With_Clause then\n-               Unit_Name := Entity (Name (Item));\n+               --  Protect the frontend against previous errors\n+               --  in context clauses\n \n-               while Is_Child_Unit (Unit_Name) loop\n-                  Set_Is_Visible_Child_Unit (Unit_Name);\n-                  Unit_Name := Scope (Unit_Name);\n-               end loop;\n+               if Nkind (Name (Item)) /= N_Selected_Component then\n+                  Unit_Name := Entity (Name (Item));\n \n-               if not Is_Immediately_Visible (Unit_Name) then\n-                  Set_Is_Immediately_Visible (Unit_Name);\n-                  Set_Context_Installed (Item);\n+                  while Is_Child_Unit (Unit_Name) loop\n+                     Set_Is_Visible_Child_Unit (Unit_Name);\n+                     Unit_Name := Scope (Unit_Name);\n+                  end loop;\n+\n+                  if not Is_Immediately_Visible (Unit_Name) then\n+                     Set_Is_Immediately_Visible (Unit_Name);\n+                     Set_Context_Installed (Item);\n+                  end if;\n                end if;\n \n             elsif Nkind (Item) = N_Use_Package_Clause then\n@@ -1376,7 +1394,13 @@ package body Sem_Ch10 is\n \n          while Present (Item) loop\n \n-            if Nkind (Item) = N_With_Clause then\n+            if Nkind (Item) = N_With_Clause\n+\n+               --  Protect the frontend against previous errors in context\n+               --  clauses\n+\n+              and then Nkind (Name (Item)) /= N_Selected_Component\n+            then\n                Unit_Name := Entity (Name (Item));\n \n                while Is_Child_Unit (Unit_Name) loop\n@@ -1424,8 +1448,16 @@ package body Sem_Ch10 is\n \n          E := First_Entity (Current_Scope);\n \n+         --  Make entities in scope visible again. For child units, restore\n+         --  visibility only if they are actually in context.\n+\n          while Present (E) loop\n-            Set_Is_Immediately_Visible (E);\n+            if not Is_Child_Unit (E)\n+              or else Is_Visible_Child_Unit (E)\n+            then\n+               Set_Is_Immediately_Visible (E);\n+            end if;\n+\n             Next_Entity (E);\n          end loop;\n \n@@ -1708,7 +1740,10 @@ package body Sem_Ch10 is\n                      \"and version-dependent?\",\n                      Name (N));\n \n-               elsif U_Kind = Ada_05_Unit and then Ada_Version = Ada_95 then\n+               elsif U_Kind = Ada_05_Unit\n+                 and then Ada_Version < Ada_05\n+                 and then Warn_On_Ada_2005_Compatibility\n+               then\n                   Error_Msg_N (\"& is an Ada 2005 unit?\", Name (N));\n                end if;\n             end;\n@@ -2180,7 +2215,7 @@ package body Sem_Ch10 is\n                 From_With_Type (Scope (Entity (Selector_Name (Name (Item)))))\n             then\n                Error_Msg_Sloc := Sloc (Item);\n-               Error_Msg_N (\"Missing With_Clause for With_Type_Clause#\", N);\n+               Error_Msg_N (\"missing With_Clause for With_Type_Clause#\", N);\n             end if;\n \n             Next (Item);\n@@ -2934,6 +2969,19 @@ package body Sem_Ch10 is\n       begin\n          pragma Assert (Nkind (W) = N_With_Clause);\n \n+         --  Protect the frontend against previous critical errors\n+\n+         case Nkind (Unit (Library_Unit (W))) is\n+            when N_Subprogram_Declaration         |\n+                 N_Package_Declaration            |\n+                 N_Generic_Subprogram_Declaration |\n+                 N_Generic_Package_Declaration    =>\n+               null;\n+\n+            when others =>\n+               return;\n+         end case;\n+\n          --  Step 1: Check if the unlimited view is installed in the parent\n \n          Item := First (Context_Items (P));\n@@ -3275,10 +3323,18 @@ package body Sem_Ch10 is\n       --  scope of each entity is an ancestor of the current unit.\n \n       Item := First (Context_Items (N));\n+\n+      --  Do not install private_with_clauses if the unit is a package\n+      --  declaration, unless it is itself a private child unit.\n+\n       while Present (Item) loop\n          if Nkind (Item) = N_With_Clause\n            and then not Implicit_With (Item)\n            and then not Limited_Present (Item)\n+           and then\n+              (not Private_Present (Item)\n+                or else Nkind (Unit (N)) /= N_Package_Declaration\n+                or else Private_Present (N))\n          then\n             Id := Entity (Name (Item));\n \n@@ -3373,28 +3429,12 @@ package body Sem_Ch10 is\n \n    begin\n       --  In case of limited with_clause on subprograms, generics, instances,\n-      --  or generic renamings, the corresponding error was previously posted\n-      --  and we have nothing to do here.\n-\n-      case Nkind (P_Unit) is\n-\n-         when N_Package_Declaration =>\n-            null;\n+      --  or renamings, the corresponding error was previously posted and we\n+      --  have nothing to do here.\n \n-         when N_Subprogram_Declaration                 |\n-              N_Generic_Package_Declaration            |\n-              N_Generic_Subprogram_Declaration         |\n-              N_Package_Instantiation                  |\n-              N_Function_Instantiation                 |\n-              N_Procedure_Instantiation                |\n-              N_Generic_Package_Renaming_Declaration   |\n-              N_Generic_Procedure_Renaming_Declaration |\n-              N_Generic_Function_Renaming_Declaration =>\n-            return;\n-\n-         when others =>\n-            raise Program_Error;\n-      end case;\n+      if Nkind (P_Unit) /= N_Package_Declaration then\n+         return;\n+      end if;\n \n       P := Defining_Unit_Name (Specification (P_Unit));\n \n@@ -3578,7 +3618,7 @@ package body Sem_Ch10 is\n       --  analyzing the private part of the package).\n \n       if Private_Present (With_Clause)\n-        and then Nkind (Cunit (Current_Sem_Unit)) = N_Package_Declaration\n+        and then Nkind (Unit (Parent (With_Clause))) = N_Package_Declaration\n         and then not (Private_With_OK)\n       then\n          return;\n@@ -3623,6 +3663,13 @@ package body Sem_Ch10 is\n          elsif not Is_Visible_Child_Unit (Uname) then\n             Set_Is_Visible_Child_Unit (Uname);\n \n+            --  If the child unit appears in the context of its parent, it\n+            --  is immediately visible.\n+\n+            if In_Open_Scopes (Scope (Uname)) then\n+               Set_Is_Immediately_Visible (Uname);\n+            end if;\n+\n             if Is_Generic_Instance (Uname)\n               and then Ekind (Uname) in Subprogram_Kind\n             then\n@@ -4112,6 +4159,16 @@ package body Sem_Ch10 is\n                          & \"limited with_clauses\", N);\n             return;\n \n+         when N_Subprogram_Renaming_Declaration =>\n+            Error_Msg_N (\"renamed subprograms not allowed in \"\n+                         & \"limited with_clauses\", N);\n+            return;\n+\n+         when N_Package_Renaming_Declaration =>\n+            Error_Msg_N (\"renamed packages not allowed in \"\n+                         & \"limited with_clauses\", N);\n+            return;\n+\n          when others =>\n             raise Program_Error;\n       end case;"}]}