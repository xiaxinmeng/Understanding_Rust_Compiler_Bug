{"sha": "a8d2b75275a7a3619e61843adc86152b623ebf9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThkMmI3NTI3NWE3YTM2MTllNjE4NDNhZGM4NjE1MmI2MjNlYmY5Yg==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-06-15T07:50:13Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-06-15T07:50:13Z"}, "message": "sparc.md (cpu): New attribute.\n\n\t* sparc/sparc.md (cpu): New attribute.\n\t(type attribute): New value cmove (conditional moves).\n\t(cmpdi): New pattern for v9.\n\t(seq*, sne*): Add v9 support.\n\t(sgt,slt,sge,sle): Explicitly restrict operand 0 to the integer\n\tregisters.  Try emitting a conditional move for v9.\n\t(sgtu,sltu,sgeu,sleu): Likewise.\n\t(comparison insns): Add v9 versions.\n\t(scc insns): Add DImode versions for v9.\n\t(beq, bne, bgt, blt, bge, ble): If comparing DImode with 0 on v9,\n\tuse brxx insns.  Use emit_jump_insn, not emit_insn, as the latter\n\tmishandles brxx insns.\n\t(branch insns): Update calls to output_cbranch.\n\tAdd v9 versions to support multiple floating point condition code regs.\n\tAdd v9 versions to support brxx insns.\n\t(lo_sum, high, pic): Add v9 support.\n\t(symbolic move patterns): Disable for v9.\n\t(DImode, DFmode, TFmode moves): Add v9 support.\n\t(conditional move insns): Define for v9.\n\t(zero_extendqidi2, extendqidi2, zero_extendhidi2, extendhidi2,\n\tzero_extendsidi2, extendsidi2, floatdisf2, floatdidf2, floatditf2,\n\tfix_truncsfdi2, fix_truncdfdi2, fix_trunctfdi2, muldi3, divdi3,\n\tudivdi3, ashldi3, ashrdi3, lshrdi3, ffsdi2): New patterns for v9.\n\t(bitfield compare insn): Add DImode version for v9.\n\t(adddi3, subdi3, negdi2, anddi3, iordi3, xordi3, one_cmpldi2,\n\tmixed mode fp mult insns, negdf2, negtf2, absdf2, abstf2, tablejump,\n\tcall, call_value, untyped_call, untyped_return, indirect_jump,\n\tflush_register_windows, flush): Add v9 support.\n\t(ldd peep holes): Disable for v9.\n\t(set/compare peep hole): Define DImode version for v9.\n\t(sign extend/compare peep hole): Likewise.\n\t(return peep holes): Add v9 support.\n\t(call/jump peep holes): Add v9 support.\n\nFrom-SVN: r7487", "tree": {"sha": "5d258ac977a83f06318d701ea1ca4a4a9c044932", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d258ac977a83f06318d701ea1ca4a4a9c044932"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8d2b75275a7a3619e61843adc86152b623ebf9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8d2b75275a7a3619e61843adc86152b623ebf9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8d2b75275a7a3619e61843adc86152b623ebf9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8d2b75275a7a3619e61843adc86152b623ebf9b/comments", "author": null, "committer": null, "parents": [{"sha": "61a55e8b0937a3c1c97c0e99c14473a2a614c225", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61a55e8b0937a3c1c97c0e99c14473a2a614c225", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61a55e8b0937a3c1c97c0e99c14473a2a614c225"}], "stats": {"total": 2667, "additions": 2297, "deletions": 370}, "files": [{"sha": "656881df220e6733b08bebaed26560b36745996a", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 2297, "deletions": 370, "changes": 2667, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8d2b75275a7a3619e61843adc86152b623ebf9b/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8d2b75275a7a3619e61843adc86152b623ebf9b/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=a8d2b75275a7a3619e61843adc86152b623ebf9b"}]}