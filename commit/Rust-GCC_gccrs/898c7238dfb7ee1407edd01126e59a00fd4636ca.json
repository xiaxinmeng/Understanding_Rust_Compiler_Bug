{"sha": "898c7238dfb7ee1407edd01126e59a00fd4636ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk4YzcyMzhkZmI3ZWUxNDA3ZWRkMDExMjZlNTlhMDBmZDQ2MzZjYQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-09-01T00:47:19Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-09-01T00:47:19Z"}, "message": "backport: ltcf-c.sh: Use $objext, not $ac_objext.\n\nMerged from gcc-3_0-branch:\n2001-07-30  Jeff Sturm  <jsturm@one-pont.com>\n* ltcf-c.sh: Use $objext, not $ac_objext.\n2001-07-27  Mark Kettenis  <kettenis@gnu.org>\n* ltcf-cxx.sh: Add support for GNU.\n2001-07-22  Timothy Wall  <twall@redhat.com>\n* ltcf-c.sh: Don't disable shared libraries for AIX5/IA64.  Preserve\ndefault settings if using GNU tools with that configuration.\n* ltcf-cxx.sh: Ditto.\n* ltcf-gcj.sh: Ditto.\n2001-07-21  Michael Chastain  <chastain@redhat.com>\n* ltconfig: Set max_cmd_len to a maximum of 512Kb, as it seems some\nHPUX 11.0 systems have trouble with 1MB.  Mark as gcc-local.\n* ltmain.sh: Mark as gcc-local.\n\nFrom-SVN: r45341", "tree": {"sha": "bc2984bfb2b1b54d4c65f4a379d660688e3ec249", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc2984bfb2b1b54d4c65f4a379d660688e3ec249"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/898c7238dfb7ee1407edd01126e59a00fd4636ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/898c7238dfb7ee1407edd01126e59a00fd4636ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/898c7238dfb7ee1407edd01126e59a00fd4636ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/898c7238dfb7ee1407edd01126e59a00fd4636ca/comments", "author": null, "committer": null, "parents": [{"sha": "4049df424c16c609ac256d5e98ac743a71547f10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4049df424c16c609ac256d5e98ac743a71547f10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4049df424c16c609ac256d5e98ac743a71547f10"}], "stats": {"total": 94, "additions": 65, "deletions": 29}, "files": [{"sha": "e504ba73cbfa6e675c3b211a389d7c8f05ffe7f8", "filename": "ChangeLog", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898c7238dfb7ee1407edd01126e59a00fd4636ca/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898c7238dfb7ee1407edd01126e59a00fd4636ca/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=898c7238dfb7ee1407edd01126e59a00fd4636ca", "patch": "@@ -1,11 +1,27 @@\n+2001-08-31  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tMerged from gcc-3_0-branch:\n+\t2001-07-30  Jeff Sturm  <jsturm@one-pont.com>\n+\t* ltcf-c.sh: Use $objext, not $ac_objext.\n+\t2001-07-27  Mark Kettenis  <kettenis@gnu.org>\n+\t* ltcf-cxx.sh: Add support for GNU.\n+\t2001-07-22  Timothy Wall  <twall@redhat.com>\n+\t* ltcf-c.sh: Don't disable shared libraries for AIX5/IA64.  Preserve\n+\tdefault settings if using GNU tools with that configuration.\n+\t* ltcf-cxx.sh: Ditto.\n+\t* ltcf-gcj.sh: Ditto.\n+\t2001-07-21  Michael Chastain  <chastain@redhat.com>\n+\t* ltconfig: Set max_cmd_len to a maximum of 512Kb, as it seems some\n+\tHPUX 11.0 systems have trouble with 1MB.  Mark as gcc-local.\n+\t* ltmain.sh: Mark as gcc-local.\n+\n 2001-08-30  Eric Christopher  <echristo@redhat.com>\n \t    Jason Eckhardt  <jle@redhat.com>\n \n \t* config.guess: Merge from master sources.\n \t* config.sub: Merge from master sources, add support for mipsisa32.\n \n 2001-08-25  Geoffrey Keating  <geoffk@redhat.com>\n-\n \t* config.sub: Merge from master sources, rev 1.219.\n \t* MAINTAINERS: Add self as contact for stormy16 port.\n "}, {"sha": "f11a0cfdd1158a5cb62b5a96a265262e808581de", "filename": "ltcf-c.sh", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898c7238dfb7ee1407edd01126e59a00fd4636ca/ltcf-c.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898c7238dfb7ee1407edd01126e59a00fd4636ca/ltcf-c.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltcf-c.sh?ref=898c7238dfb7ee1407edd01126e59a00fd4636ca", "patch": "@@ -58,9 +58,10 @@ if test \"$with_gnu_ld\" = yes; then\n   # See if GNU ld supports shared libraries.\n   case $host_os in\n   aix3* | aix4* | aix5*)\n-    # On AIX, the GNU linker is very broken\n-    ld_shlibs=no\n-    cat <<EOF 1>&2\n+    # On AIX/PPC, the GNU linker is very broken\n+    if test \"$host_cpu\" != ia64; then\n+      ld_shlibs=no\n+      cat <<EOF 1>&2\n \n *** Warning: the GNU linker, at least up to release 2.9.1, is reported\n *** to be unable to reliably create shared libraries on AIX.\n@@ -69,6 +70,7 @@ if test \"$with_gnu_ld\" = yes; then\n *** so that a non-GNU linker is found, and then restart.\n \n EOF\n+    fi\n     ;;\n \n   amigaos*)\n@@ -311,8 +313,10 @@ else\n       # On IA64, the linker does run time linking by default, so we don't\n       # have to do anything special.\n       aix_use_runtimelinking=no\n-      exp_sym_flag='-Bexport'\n-      no_entry_flag=\"\"\n+      if test $with_gnu_ld = no; then\n+        exp_sym_flag='-Bexport'\n+        no_entry_flag=\"\"\n+      fi\n     else\n       # Test if we are trying to use run time linking, or normal AIX style linking.\n       # If -brtl is somewhere in LDFLAGS, we need to do run time linking.\n@@ -336,9 +340,11 @@ else\n       archive_expsym_cmds=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs $compiler_flags ${allow_undefined_flag} '\"\\${wl}$no_entry_flag \\${wl}$exp_sym_flag:\\$export_symbols\"\n     else\n       if test \"$host_cpu\" = ia64; then\n-        hardcode_libdir_flag_spec='${wl}-R $libdir:/usr/lib:/lib'\n-        allow_undefined_flag=\"-z nodefs\"\n-        archive_expsym_cmds=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$no_entry_flag \\${wl}$exp_sym_flag:\\$export_symbols\"\n+        if test $with_gnu_ld = no; then\n+          hardcode_libdir_flag_spec='${wl}-R $libdir:/usr/lib:/lib'\n+          allow_undefined_flag=\"-z nodefs\"\n+          archive_expsym_cmds=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$no_entry_flag \\${wl}$exp_sym_flag:\\$export_symbols\"\n+        fi\n       else\n         allow_undefined_flag=' ${wl}-berok'\n         # -bexpall does not export symbols beginning with underscore (_)\n@@ -783,7 +789,7 @@ if test \"$enable_shared\" = yes && test \"$with_gcc\" = yes; then\n \tcat conftest.err 1>&5\n \tsoname=conftest\n \tlib=conftest\n-\tlibobjs=conftest.$ac_objext\n+\tlibobjs=conftest.$objext\n \tdeplibs=\n \twl=$ac_cv_prog_cc_wl\n \tcompiler_flags=-v"}, {"sha": "22875d06f187b5b242cf563884a970a41fab68b4", "filename": "ltcf-cxx.sh", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898c7238dfb7ee1407edd01126e59a00fd4636ca/ltcf-cxx.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898c7238dfb7ee1407edd01126e59a00fd4636ca/ltcf-cxx.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltcf-cxx.sh?ref=898c7238dfb7ee1407edd01126e59a00fd4636ca", "patch": "@@ -165,8 +165,10 @@ case $host_os in\n       # On IA64, the linker does run time linking by default, so we don't\n       # have to do anything special.\n       aix_use_runtimelinking=no\n-      exp_sym_flag='-Bexport'\n-      no_entry_flag=\"\"\n+      if test $with_gnu_ld = no; then\n+        exp_sym_flag='-Bexport'\n+        no_entry_flag=\"\"\n+      fi\n     else\n       # Test if we are trying to use run time linking, or normal AIX style linking.\n       # If -brtl is somewhere in LDFLAGS, we need to do run time linking.\n@@ -189,9 +191,11 @@ case $host_os in\n       archive_expsym_cmds=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs $compiler_flags ${allow_undefined_flag} '\"\\${wl}$no_entry_flag \\${wl}-brtl \\${wl}$exp_sym_flag:\\$export_symbols\"\n      else\n       if test \"$host_cpu\" = ia64; then\n-        hardcode_libdir_flag_spec='${wl}-R $libdir:/usr/lib:/lib'\n-        allow_undefined_flag=\"-z nodefs\"\n-        archive_expsym_cmds=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$no_entry_flag \\${wl}$exp_sym_flag:\\$export_symbols\"\n+        if test $with_gnu_ld = no; then\n+          hardcode_libdir_flag_spec='${wl}-R $libdir:/usr/lib:/lib'\n+          allow_undefined_flag=\"-z nodefs\"\n+          archive_expsym_cmds=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$no_entry_flag \\${wl}$exp_sym_flag:\\$export_symbols\"\n+        fi\n       else\n         hardcode_libdir_flag_spec='${wl}-blibpath:$libdir:/usr/lib:/lib'\n         # Warning - without using the other run time loading flags, -berok will\n@@ -242,6 +246,8 @@ case $host_os in\n     # conventions\n     ld_shlibs=yes\n     ;;\n+  gnu*)\n+    ;;\n   hpux*)\n     if test $with_gnu_ld = no; then\n       hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'\n@@ -740,6 +746,8 @@ else\n     freebsd*)\n       # FreeBSD uses GNU C++\n       ;;\n+    gnu*)\n+      ;;\n     hpux9* | hpux10* | hpux11*)\n       case $cc_basename in\n         CC)"}, {"sha": "7be87123642ab4878c9527a4ab83a6839d130b19", "filename": "ltcf-gcj.sh", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898c7238dfb7ee1407edd01126e59a00fd4636ca/ltcf-gcj.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898c7238dfb7ee1407edd01126e59a00fd4636ca/ltcf-gcj.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltcf-gcj.sh?ref=898c7238dfb7ee1407edd01126e59a00fd4636ca", "patch": "@@ -60,10 +60,11 @@ if test \"$with_gnu_ld\" = yes; then\n \n   # See if GNU ld supports shared libraries.\n   case $host_os in\n-  aix3* | aix4*)\n-    # On AIX, the GNU linker is very broken\n-    ld_shlibs=no\n-    cat <<EOF 1>&2\n+  aix3* | aix4* | aix5*)\n+    # On AIX/PPC, the GNU linker is very broken\n+    if test \"$host_cpu\" != ia64; then\n+      ld_shlibs=no\n+      cat <<EOF 1>&2\n \n *** Warning: the GNU linker, at least up to release 2.9.1, is reported\n *** to be unable to reliably create shared libraries on AIX.\n@@ -72,6 +73,7 @@ if test \"$with_gnu_ld\" = yes; then\n *** so that a non-GNU linker is found, and then restart.\n \n EOF\n+    fi\n     ;;\n \n   amigaos*)\n@@ -304,8 +306,10 @@ else\n       # On IA64, the linker does run time linking by default, so we don't\n       # have to do anything special.\n       aix_use_runtimelinking=no\n-      exp_sym_flag='-Bexport'\n-      no_entry_flag=\"\"\n+      if test $with_gnu_ld = no; then\n+        exp_sym_flag='-Bexport'\n+        no_entry_flag=\"\"\n+      fi\n     else\n       # Test if we are trying to use run time linking, or normal AIX style linking.\n       # If -brtl is somewhere in LDFLAGS, we need to do run time linking.\n@@ -329,9 +333,11 @@ else\n       archive_expsym_cmds=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs $compiler_flags ${allow_undefined_flag} '\"\\${wl}$no_entry_flag \\${wl}$exp_sym_flag:\\$export_symbols\"\n     else\n       if test \"$host_cpu\" = ia64; then\n-        hardcode_libdir_flag_spec='${wl}-R $libdir:/usr/lib:/lib'\n-        allow_undefined_flag=\"-z nodefs\"\n-        archive_expsym_cmds=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$no_entry_flag \\${wl}$exp_sym_flag:\\$export_symbols\"\n+        if test $with_gnu_ld = no; then\n+          hardcode_libdir_flag_spec='${wl}-R $libdir:/usr/lib:/lib'\n+          allow_undefined_flag=\"-z nodefs\"\n+          archive_expsym_cmds=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$no_entry_flag \\${wl}$exp_sym_flag:\\$export_symbols\"\n+        fi\n       else\n         allow_undefined_flag=' ${wl}-berok'\n         # -bexpall does not export symbols beginning with underscore (_)"}, {"sha": "746e15b932df3cb92b3d9e9ab609de40a29f9088", "filename": "ltconfig", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898c7238dfb7ee1407edd01126e59a00fd4636ca/ltconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898c7238dfb7ee1407edd01126e59a00fd4636ca/ltconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltconfig?ref=898c7238dfb7ee1407edd01126e59a00fd4636ca", "patch": "@@ -181,8 +181,8 @@ progname=`$echo \"X$0\" | $Xsed -e 's%^.*/%%'`\n # Constants:\n PROGRAM=ltconfig\n PACKAGE=libtool\n-VERSION=1.4a\n-TIMESTAMP=\" (1.641.2.256 2001/05/28 20:09:07)\"\n+VERSION=1.4a-GCC3.0\n+TIMESTAMP=\" (1.641.2.256 2001/05/28 20:09:07 with GCC-local changes)\"\n ac_compile='${CC-cc} -c $CFLAGS $CPPFLAGS conftest.$ac_ext 1>&5'\n ac_link='${CC-cc} -o conftest $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'\n rm=\"rm -f\"\n@@ -791,7 +791,7 @@ else\n              = \"XX$testring\" &&\n           new_result=`expr \"X$testring\" : \".*\" 2>&1` &&\n           lt_cv_sys_max_cmd_len=$new_result &&\n-          test $i != 18 # 1 MB should be enough\n+          test $i != 17 # 1/2 MB should be enough\n   do\n     i=`expr $i + 1`\n     testring=$testring$testring"}, {"sha": "bd76cfb4da08af7b119bc6f0ff8afcc4fd62f0c4", "filename": "ltmain.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898c7238dfb7ee1407edd01126e59a00fd4636ca/ltmain.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898c7238dfb7ee1407edd01126e59a00fd4636ca/ltmain.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltmain.sh?ref=898c7238dfb7ee1407edd01126e59a00fd4636ca", "patch": "@@ -55,8 +55,8 @@ modename=\"$progname\"\n # Constants.\n PROGRAM=ltmain.sh\n PACKAGE=libtool\n-VERSION=1.4a\n-TIMESTAMP=\" (1.641.2.256 2001/05/28 20:09:07)\"\n+VERSION=1.4a-GCC3.0\n+TIMESTAMP=\" (1.641.2.256 2001/05/28 20:09:07 with GCC-local changes)\"\n \n default_mode=\n help=\"Try \\`$progname --help' for more information.\""}]}