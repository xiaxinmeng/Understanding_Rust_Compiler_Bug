{"sha": "5349080dd3851ea98ac1c9c8bf24279a7cd3ca97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM0OTA4MGRkMzg1MWVhOThhYzFjOWM4YmYyNDI3OWE3Y2QzY2E5Nw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-07-05T12:51:51Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-07-05T12:51:51Z"}, "message": "re PR fortran/32359 (incorrect error: Threadprivate isn't SAVEd (implicit save attribute undefined))\n\ngcc/fortran/\n2007-07-05  Daniel Franke  <franke.daniel@gmail.com>\n\t    Tobias Burnus  <burnus@net-b.de>\n\n\tPR fortran/32359\n\t* gfortran.h (symbol_attribute): Change save attribute into an enum.\n\t* decl.c (add_init_expr_to_sym): Set it to SAVE_IMPLICIT.\n\t* symbol.c (gfc_add_save): Check for SAVE_EXPLICIT.\n\t* resolve.c (resolve_fl_variable): Check for SAVE_EXPLICIT.\n\t(resolve_symbol): Allow OMP threadprivate with\n\tinitialization SAVEd and save_all variable.\n\t* trans-decl.c (gfc_finish_var_decl): Remove obsolete sym->value check.\n\n\nlibgomp/\n2007-07-05  Tobias Burnus  <burnus@net-b.de>\n\n\tPR fortran/32359\n\t* testsuite/libgomp.fortran/pr32359.f90: New.\n\ngcc/testsuite/\n2007-07-05  Tobias Burnus  <burnus@net-b.de>\n\n\tPR fortran/32359\n\t* gfortran.dg/module_md5_1.f90: Update MD5 number.\n\nFrom-SVN: r126366", "tree": {"sha": "1281d63a921c00f8d91cb684061e182b7c459e18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1281d63a921c00f8d91cb684061e182b7c459e18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/comments", "author": null, "committer": null, "parents": [{"sha": "7e08fa357c2b918c28599f7d11dfc65165117de3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e08fa357c2b918c28599f7d11dfc65165117de3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e08fa357c2b918c28599f7d11dfc65165117de3"}], "stats": {"total": 80, "additions": 73, "deletions": 7}, "files": [{"sha": "0173eb3d7ca9bc50215a6e2a13a81a073e447b07", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5349080dd3851ea98ac1c9c8bf24279a7cd3ca97", "patch": "@@ -1,3 +1,15 @@\n+2007-07-05  Daniel Franke  <franke.daniel@gmail.com>\n+\t    Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/32359\n+\t* gfortran.h (symbol_attribute): Change save attribute into an enum.\n+\t* decl.c (add_init_expr_to_sym): Set it to SAVE_IMPLICIT.\n+\t* symbol.c (gfc_add_save): Check for SAVE_EXPLICIT.\n+\t* resolve.c (resolve_fl_variable): Check for SAVE_EXPLICIT.\n+\t(resolve_symbol): Allow OMP threadprivate with\n+\tinitialization SAVEd and save_all variable.\n+\t* trans-decl.c (gfc_finish_var_decl): Remove obsolete sym->value check.\n+\n 2007-07-05  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/32526"}, {"sha": "2c828bab08b866497a26e68610fc493d0dc3886c", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=5349080dd3851ea98ac1c9c8bf24279a7cd3ca97", "patch": "@@ -1232,6 +1232,7 @@ add_init_expr_to_sym (const char *name, gfc_expr **initp, locus *var_locus)\n \t}\n \n       sym->value = init;\n+      sym->attr.save = SAVE_IMPLICIT;\n       *initp = NULL;\n     }\n "}, {"sha": "3c15c61a02e0d508ce43a6578970e6eb06c58980", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=5349080dd3851ea98ac1c9c8bf24279a7cd3ca97", "patch": "@@ -297,6 +297,12 @@ typedef enum ifsrc\n }\n ifsrc;\n \n+/* Whether a SAVE attribute was set explicitly or implictly.  */\n+typedef enum save_state\n+{ SAVE_NONE = 0, SAVE_EXPLICIT, SAVE_IMPLICIT\n+}\n+save_state;\n+\n /* Strings for all symbol attributes.  We use these for dumping the\n    parse tree, in error messages, and also when reading and writing\n    modules.  In symbol.c.  */\n@@ -620,10 +626,12 @@ typedef struct\n {\n   /* Variable attributes.  */\n   unsigned allocatable:1, dimension:1, external:1, intrinsic:1,\n-    optional:1, pointer:1, save:1, target:1, value:1, volatile_:1,\n+    optional:1, pointer:1, target:1, value:1, volatile_:1,\n     dummy:1, result:1, assign:1, threadprivate:1, not_always_present:1,\n     implied_index:1;\n \n+  ENUM_BITFIELD (save_state) save:2;\n+\n   unsigned data:1,\t\t/* Symbol is named in a DATA statement.  */\n     protected:1,\t\t/* Symbol has been marked as protected.  */\n     use_assoc:1,\t\t/* Symbol has been use-associated.  */"}, {"sha": "299d4307a62278c003bf26d373e4b5910092690b", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=5349080dd3851ea98ac1c9c8bf24279a7cd3ca97", "patch": "@@ -6508,8 +6508,9 @@ resolve_fl_variable (gfc_symbol *sym, int mp_flag)\n \t    }\n \t}\n \n-      /* Also, they must not have the SAVE attribute.  */\n-      if (flag && sym->attr.save)\n+      /* Also, they must not have the SAVE attribute.\n+\t SAVE_IMPLICIT is checked below.  */\n+      if (flag && sym->attr.save == SAVE_EXPLICIT)\n \t{\n \t  gfc_error (auto_save_msg, sym->name, &sym->declared_at);\n \t  return FAILURE;\n@@ -7287,7 +7288,7 @@ resolve_symbol (gfc_symbol *sym)\n     gfc_resolve (sym->formal_ns);\n \n   /* Check threadprivate restrictions.  */\n-  if (sym->attr.threadprivate && !sym->attr.save\n+  if (sym->attr.threadprivate && !sym->attr.save && !sym->ns->save_all\n       && (!sym->attr.in_common\n \t  && sym->module == NULL\n \t  && (sym->ns->proc_name == NULL"}, {"sha": "42f7776dff63c0a84bca93cc96391f0bdf8d43b9", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=5349080dd3851ea98ac1c9c8bf24279a7cd3ca97", "patch": "@@ -925,7 +925,7 @@ gfc_add_save (symbol_attribute *attr, const char *name, locus *where)\n       return FAILURE;\n     }\n \n-  if (attr->save)\n+  if (attr->save == SAVE_EXPLICIT)\n     {\n \tif (gfc_notify_std (GFC_STD_LEGACY, \n \t\t\t    \"Duplicate SAVE attribute specified at %L\",\n@@ -934,7 +934,7 @@ gfc_add_save (symbol_attribute *attr, const char *name, locus *where)\n \t  return FAILURE;\n     }\n \n-  attr->save = 1;\n+  attr->save = SAVE_EXPLICIT;\n   return check_conflict (attr, name, where);\n }\n "}, {"sha": "e7888e1d2c1c3b717115c4b4249d50c00d7c77fc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5349080dd3851ea98ac1c9c8bf24279a7cd3ca97", "patch": "@@ -1,3 +1,8 @@\n+2007-07-05  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/32359\n+\t* gfortran.dg/module_md5_1.f90: Update MD5 number.\n+\n 2007-07-05  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/32526"}, {"sha": "6382df1eb3215f8c50d18f138e56e9c3e180fb1e", "filename": "gcc/testsuite/gfortran.dg/module_md5_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_md5_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_md5_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_md5_1.f90?ref=5349080dd3851ea98ac1c9c8bf24279a7cd3ca97", "patch": "@@ -10,5 +10,5 @@ program test\n   use foo\n   print *, pi\n end program test\n-! { dg-final { scan-module \"foo\" \"MD5:10e58dd12566bfc60412da6f8f8f7a07\" } }\n+! { dg-final { scan-module \"foo\" \"MD5:6d026a84bb779a7b6789854d85d4f01f\" } }\n ! { dg-final { cleanup-modules \"foo\" } }"}, {"sha": "c8c1247ada5525baf2de5be52ae7c375ec236c9c", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=5349080dd3851ea98ac1c9c8bf24279a7cd3ca97", "patch": "@@ -1,3 +1,8 @@\n+2007-07-05  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/32359\n+\t* testsuite/libgomp.fortran/pr32359.f90: New.\n+\n 2007-07-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libgomp/32468"}, {"sha": "e48a8a704062f34940fffea9afc5b40013949213", "filename": "libgomp/testsuite/libgomp.fortran/pr32359.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr32359.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5349080dd3851ea98ac1c9c8bf24279a7cd3ca97/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr32359.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr32359.f90?ref=5349080dd3851ea98ac1c9c8bf24279a7cd3ca97", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do compile }\n+!\n+! PR fortran/32359\n+! Contributed by Bill Long <longb@cray.com>\n+\n+subroutine test\n+      use omp_lib\n+      implicit none\n+      integer, parameter :: NT = 4\n+      integer :: a\n+      save\n+!$omp threadprivate(a)\n+      a = 1\n+\n+!$    call omp_set_num_threads(NT)\n+!$omp parallel\n+      print *, omp_get_thread_num(), a\n+!$omp end parallel\n+\n+end subroutine test\n+\n+! Derived from OpenMP test omp1/F2_6_2_8_5i.f90\n+      use omp_lib\n+      implicit none\n+      integer, parameter :: NT = 4\n+      integer :: a = 1\n+!$omp threadprivate(a)\n+\n+!$    call omp_set_num_threads(NT)\n+!$omp parallel\n+      print *, omp_get_thread_num(), a\n+!$omp end parallel\n+\n+      END"}]}