{"sha": "d326f2eeb75a092397a9db5e92c65a803f088a0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMyNmYyZWViNzVhMDkyMzk3YTlkYjVlOTJjNjVhODAzZjA4OGEwYQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-01-18T11:12:06Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-01-18T11:12:06Z"}, "message": "unique_ptr.h (default_delete<>::default_delete()): Declare defaulted per DR 1517.\n\n2011-01-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/unique_ptr.h (default_delete<>::default_delete()):\n\tDeclare defaulted per DR 1517.\n\t* testsuite/util/testsuite_common_types.h\n\t(constexpr_defaulted_default_constructible): Add.\n\t* testsuite/20_util/default_delete/cons/constexpr.cc: Use it.\n\nFrom-SVN: r168947", "tree": {"sha": "1435069bc01bf0d34dc5d14d13756271323ad477", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1435069bc01bf0d34dc5d14d13756271323ad477"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d326f2eeb75a092397a9db5e92c65a803f088a0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d326f2eeb75a092397a9db5e92c65a803f088a0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d326f2eeb75a092397a9db5e92c65a803f088a0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d326f2eeb75a092397a9db5e92c65a803f088a0a/comments", "author": null, "committer": null, "parents": [{"sha": "e7ef91dc8eb398de7b6c780b00f1360dafd84798", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7ef91dc8eb398de7b6c780b00f1360dafd84798", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7ef91dc8eb398de7b6c780b00f1360dafd84798"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "856f10738e460097f1ea4e3ca8f3fe71e0e02e28", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d326f2eeb75a092397a9db5e92c65a803f088a0a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d326f2eeb75a092397a9db5e92c65a803f088a0a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d326f2eeb75a092397a9db5e92c65a803f088a0a", "patch": "@@ -1,3 +1,11 @@\n+2011-01-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/unique_ptr.h (default_delete<>::default_delete()):\n+\tDeclare defaulted per DR 1517.\n+\t* testsuite/util/testsuite_common_types.h\n+\t(constexpr_defaulted_default_constructible): Add.\n+\t* testsuite/20_util/default_delete/cons/constexpr.cc: Use it.\n+\n 2011-01-17  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/stl_queue.h (queue<>::swap, priority_queue<>::swap):"}, {"sha": "12ced5cb537b63ffc4f61dc19c5593c163c9567c", "filename": "libstdc++-v3/include/bits/unique_ptr.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d326f2eeb75a092397a9db5e92c65a803f088a0a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d326f2eeb75a092397a9db5e92c65a803f088a0a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h?ref=d326f2eeb75a092397a9db5e92c65a803f088a0a", "patch": "@@ -47,7 +47,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   template<typename _Tp>\n     struct default_delete\n     {\n-      constexpr default_delete() { }\n+      constexpr default_delete() = default;\n \n       template<typename _Up, typename = typename\n \t       std::enable_if<std::is_convertible<_Up*, _Tp*>::value>::type>\n@@ -68,7 +68,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   template<typename _Tp>\n     struct default_delete<_Tp[]>\n     {\n-      constexpr default_delete() { }\n+      constexpr default_delete() = default;\n \n       void\n       operator()(_Tp* __ptr) const"}, {"sha": "01fb284761e22151c79874b7cd2dd0d0c4e85174", "filename": "libstdc++-v3/testsuite/20_util/default_delete/cons/constexpr.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d326f2eeb75a092397a9db5e92c65a803f088a0a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdefault_delete%2Fcons%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d326f2eeb75a092397a9db5e92c65a803f088a0a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdefault_delete%2Fcons%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdefault_delete%2Fcons%2Fconstexpr.cc?ref=d326f2eeb75a092397a9db5e92c65a803f088a0a", "patch": "@@ -23,7 +23,7 @@\n \n int main()\n {\n-  __gnu_test::constexpr_default_constructible test;\n+  __gnu_test::constexpr_defaulted_default_constructible test;\n   test.operator()<std::default_delete<int>>();\n   return 0;\n }"}, {"sha": "f597da2f0d7437441b53fef76ffe57b6337474a1", "filename": "libstdc++-v3/testsuite/util/testsuite_common_types.h", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d326f2eeb75a092397a9db5e92c65a803f088a0a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d326f2eeb75a092397a9db5e92c65a803f088a0a/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h?ref=d326f2eeb75a092397a9db5e92c65a803f088a0a", "patch": "@@ -644,7 +644,7 @@ namespace __gnu_test\n     template<typename _Tp, bool _IsLitp = std::is_literal_type<_Tp>::value>\n       struct _Concept;\n \n-    // NB: _Tp must be a literal type. \n+    // NB: _Tp must be a literal type.\n     // Have to have user-defined default ctor for this to work.\n     template<typename _Tp>\n       struct _Concept<_Tp, true>\n@@ -671,6 +671,24 @@ namespace __gnu_test\n       }\n   };\n \n+  // Generator to test defaulted default constructor.\n+  struct constexpr_defaulted_default_constructible\n+  {\n+    template<typename _Tp>\n+      void\n+      operator()()\n+      {\n+\tstruct _Concept\n+\t{\n+\t  void __constraint()\n+\t  { constexpr _Tp __v __attribute__((unused)) { }; }\n+\t};\n+\n+\tvoid (_Concept::*__x)() __attribute__((unused))\n+\t  = &_Concept::__constraint;\n+      }\n+  };\n+\n   struct constexpr_single_value_constructible\n   {\n     template<typename _Ttesttype, typename _Tvaluetype, "}]}