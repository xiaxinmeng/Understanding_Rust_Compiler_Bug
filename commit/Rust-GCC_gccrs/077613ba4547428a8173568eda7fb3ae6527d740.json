{"sha": "077613ba4547428a8173568eda7fb3ae6527d740", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc3NjEzYmE0NTQ3NDI4YTgxNzM1NjhlZGE3ZmIzYWU2NTI3ZDc0MA==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "1999-01-15T15:46:01Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "1999-01-15T15:46:01Z"}, "message": "c4x.md (not_repeat_reg): Allow ldp instruction in delay slot of RPTBD.\n\n\t* config/c4x/c4x.md (not_repeat_reg): Allow ldp instruction\n\tin delay slot of RPTBD.\n\nFrom-SVN: r24682", "tree": {"sha": "ac9741e191a7a3810ff5d9da0639521096de38a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac9741e191a7a3810ff5d9da0639521096de38a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/077613ba4547428a8173568eda7fb3ae6527d740", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/077613ba4547428a8173568eda7fb3ae6527d740", "html_url": "https://github.com/Rust-GCC/gccrs/commit/077613ba4547428a8173568eda7fb3ae6527d740", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/077613ba4547428a8173568eda7fb3ae6527d740/comments", "author": null, "committer": null, "parents": [{"sha": "cce88d8642ab0293eb36de9594c46666241440fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cce88d8642ab0293eb36de9594c46666241440fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cce88d8642ab0293eb36de9594c46666241440fd"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "bb0b57c693d308ebb2839c50ba824b4a761217dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/077613ba4547428a8173568eda7fb3ae6527d740/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/077613ba4547428a8173568eda7fb3ae6527d740/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=077613ba4547428a8173568eda7fb3ae6527d740", "patch": "@@ -1,3 +1,13 @@\n+Sat Jan 16 12:47:15 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/c4x.md (not_repeat_reg): Allow ldp instruction\n+\tin delay slot of RPTBD.\n+\n+Sat Jan 16 12:26:40 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/libgcc.S (___divhi3, ___modhi3): Fix long long\n+\tdivide and modulo sign problem.\n+\n Fri Jan 15 11:02:31 1999   Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* unroll.c (loop_iterations): Return 0 if the last loop insn"}, {"sha": "7d858547a790871252086f5745b07da1891dd6ad", "filename": "gcc/config/c4x/c4x.md", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/077613ba4547428a8173568eda7fb3ae6527d740/gcc%2Fconfig%2Fc4x%2Fc4x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/077613ba4547428a8173568eda7fb3ae6527d740/gcc%2Fconfig%2Fc4x%2Fc4x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.md?ref=077613ba4547428a8173568eda7fb3ae6527d740", "patch": "@@ -342,7 +342,7 @@\n              (const_string \"false\")))\n \n (define_attr \"not_repeat_reg\" \"false,true\"\n-       (cond [(eq_attr \"type\" \"unary,unarycc,compare,lda,store\")\n+       (cond [(eq_attr \"type\" \"unary,unarycc,compare,lda,ldp,store\")\n                        (if_then_else (and (match_operand 0 \"not_rc_reg\" \"\")\n                                           (match_operand 1 \"not_rc_reg\" \"\"))\n                                      (const_string \"true\") (const_string \"false\"))\n@@ -353,6 +353,9 @@\n                                      (const_string \"true\") (const_string \"false\"))]\n              (const_string \"false\")))\n \n+/* Disable compare because the c4x contains a bug. The cmpi insn sets the CC\n+   in the read phase of the pipeline instead of the execution phase when\n+   two registers are compared.  */\n (define_attr \"in_annul_slot_1\" \"false,true\"\n   (if_then_else (and (and (eq_attr \"cpu\" \"c4x\")\n \t\t          (eq_attr \"type\" \"!jump,call,rets,jmpc,compare,db,dbc,repeat,repeat_top,laj,push,pop,lda,ldp,multi\"))"}]}