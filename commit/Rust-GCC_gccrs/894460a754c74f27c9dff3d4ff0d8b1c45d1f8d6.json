{"sha": "894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk0NDYwYTc1NGM3NGYyN2M5ZGZmM2Q0ZmYwZDhiMWM0NWQxZjhkNg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-06-07T15:05:47Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-06-07T15:05:47Z"}, "message": "re PR fortran/57549 (Bogus error with array constructor with derived-type typespec)\n\n2013-06-07  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57549\n        * array.c (gfc_match_array_constructor): Call\n        gfc_match_type_spec instead of gfc_match_decl_type_spec.\n        * match.c (gfc_match_type_spec): Renamed from match_type_spec.\n        (gfc_match_type_is, gfc_match_allocate): Update call.\n        * match.h (gfc_match_type_spec): Add prototype.\n\n2013-06-07  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57549\n        * gfortran.dg/array_constructor_48.f90: New.\n        * gfortran.dg/array_constructor_type_14.f03: Correct test case.\n        * gfortran.dg/array_constructor_type_15.f03: Ditto.\n\nFrom-SVN: r199820", "tree": {"sha": "aabfb60b1fa8644cbc213b22b8baf303b5d8ba45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aabfb60b1fa8644cbc213b22b8baf303b5d8ba45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b5e0425c7c222004d535313f6c9344099556d1f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5e0425c7c222004d535313f6c9344099556d1f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5e0425c7c222004d535313f6c9344099556d1f1"}], "stats": {"total": 49, "additions": 42, "deletions": 7}, "files": [{"sha": "9e577d8163ebc116b3341d26fb6b2b46fb115279", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6", "patch": "@@ -1,3 +1,12 @@\n+2013-06-07  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57549\n+\t* array.c (gfc_match_array_constructor): Call\n+\tgfc_match_type_spec instead of gfc_match_decl_type_spec.\n+\t* match.c (gfc_match_type_spec): Renamed from match_type_spec.\n+\t(gfc_match_type_is, gfc_match_allocate): Update call.\n+\t* match.h (gfc_match_type_spec): Add prototype.\n+\n 2013-06-07  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/57556"}, {"sha": "c6b8eb9f96a7b6a9693a155e97a11b3966bd3075", "filename": "gcc/fortran/array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6/gcc%2Ffortran%2Farray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6/gcc%2Ffortran%2Farray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farray.c?ref=894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6", "patch": "@@ -1073,7 +1073,7 @@ gfc_match_array_constructor (gfc_expr **result)\n   /* Try to match an optional \"type-spec ::\"  */\n   gfc_clear_ts (&ts);\n   gfc_new_undo_checkpoint (changed_syms);\n-  if (gfc_match_decl_type_spec (&ts, 0) == MATCH_YES)\n+  if (gfc_match_type_spec (&ts) == MATCH_YES)\n     {\n       seen_ts = (gfc_match (\" ::\") == MATCH_YES);\n "}, {"sha": "2533584246b6a599186da4dc74d27df404a92014", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6", "patch": "@@ -1937,8 +1937,8 @@ match_derived_type_spec (gfc_typespec *ts)\n    the implicit_flag is not needed, so it was removed. Derived types are\n    identified by their name alone.  */\n \n-static match\n-match_type_spec (gfc_typespec *ts)\n+match\n+gfc_match_type_spec (gfc_typespec *ts)\n {\n   match m;\n   locus old_locus;\n@@ -3426,7 +3426,7 @@ gfc_match_allocate (void)\n \n   /* Match an optional type-spec.  */\n   old_locus = gfc_current_locus;\n-  m = match_type_spec (&ts);\n+  m = gfc_match_type_spec (&ts);\n   if (m == MATCH_ERROR)\n     goto cleanup;\n   else if (m == MATCH_NO)\n@@ -5502,7 +5502,7 @@ gfc_match_type_is (void)\n   c = gfc_get_case ();\n   c->where = gfc_current_locus;\n \n-  if (match_type_spec (&c->ts) == MATCH_ERROR)\n+  if (gfc_match_type_spec (&c->ts) == MATCH_ERROR)\n     goto cleanup;\n \n   if (gfc_match_char (')') != MATCH_YES)"}, {"sha": "1a701f04f39ead3f39678d6ca40a58682f2df6d2", "filename": "gcc/fortran/match.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6/gcc%2Ffortran%2Fmatch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6/gcc%2Ffortran%2Fmatch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.h?ref=894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6", "patch": "@@ -59,6 +59,8 @@ match gfc_match_char (char);\n match gfc_match (const char *, ...);\n match gfc_match_iterator (gfc_iterator *, int);\n match gfc_match_parens (void);\n+match gfc_match_type_spec (gfc_typespec *);\n+\n \n /* Statement matchers.  */\n match gfc_match_program (void);"}, {"sha": "5838061f20e3a49f60a38d1cd0f8e50cef58f94a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6", "patch": "@@ -1,3 +1,10 @@\n+2013-06-07  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57549\n+\t* gfortran.dg/array_constructor_48.f90: New.\n+\t* gfortran.dg/array_constructor_type_14.f03: Correct test case.\n+\t* gfortran.dg/array_constructor_type_15.f03: Ditto.\n+\n 2013-06-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/56315"}, {"sha": "5916eddf838bfc5ff287973bc51d847f9f5f378f", "filename": "gcc/testsuite/gfortran.dg/array_constructor_48.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_48.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_48.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_48.f90?ref=894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do compile }\n+!\n+! PR fortran/57549\n+!\n+! Contributed by Vladimir Fuka\n+!\n+ type t\n+ end type\n+ type(t),allocatable :: a(:)\n+ a = [t::t()]\n+ print *, [ integer :: ]\n+end\n+\n+subroutine invalid()\n+    print *, [ type(integer) :: ] ! { dg-error \"Syntax error in array constructor\" }\n+    print *, [ type(tt) :: ]      ! { dg-error \"Syntax error in array constructor\" }\n+end subroutine invalid"}, {"sha": "0e24334dcfc8640eb752b5bb67ca02109fdc6be3", "filename": "gcc/testsuite/gfortran.dg/array_constructor_type_14.f03", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_type_14.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_type_14.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_type_14.f03?ref=894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6", "patch": "@@ -16,7 +16,7 @@ PROGRAM test\n \n   TYPE(foo), DIMENSION(2) :: arr\n \n-  arr = (/ TYPE(foo) :: x, foo(0, 1.) /)\n+  arr = (/ foo :: x, foo(0, 1.) /)\n   IF (arr(1)%i /= 42 .OR. arr(1)%x /= 42. .OR. &\n       arr(2)%i /= 0 .OR. arr(2)%x /= 1.) THEN\n     CALL abort()"}, {"sha": "a94655562e95cdcf730fa6557fd5bc050446952b", "filename": "gcc/testsuite/gfortran.dg/array_constructor_type_15.f03", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_type_15.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_type_15.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_type_15.f03?ref=894460a754c74f27c9dff3d4ff0d8b1c45d1f8d6", "patch": "@@ -18,5 +18,5 @@ PROGRAM test\n \n   TYPE(foo), PARAMETER :: x = foo(42, 42.)\n \n-  WRITE (*,*) (/ TYPE(foo) :: x, foo(0, 1.), bar(.TRUE.) /) ! { dg-error \"convert TYPE\" }\n+  WRITE (*,*) (/ foo :: x, foo(0, 1.), bar(.TRUE.) /) ! { dg-error \"convert TYPE\" }\n END PROGRAM test"}]}