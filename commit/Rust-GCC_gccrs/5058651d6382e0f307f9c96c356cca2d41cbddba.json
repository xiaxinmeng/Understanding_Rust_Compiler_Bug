{"sha": "5058651d6382e0f307f9c96c356cca2d41cbddba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA1ODY1MWQ2MzgyZTBmMzA3ZjljOTZjMzU2Y2NhMmQ0MWNiZGRiYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-12-15T21:55:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-12-15T21:55:31Z"}, "message": "re PR c++/51458 (Accepts invalid designated initializers)\n\n\tPR c++/51458\n\t* decl.c (has_designator_problem): New.\n\t(reshape_init_r): Check for improper use of\n\tdesignated initializers.\n\nFrom-SVN: r182391", "tree": {"sha": "cdb27440974c05499b5c3eb2792073f1815c77a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdb27440974c05499b5c3eb2792073f1815c77a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5058651d6382e0f307f9c96c356cca2d41cbddba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5058651d6382e0f307f9c96c356cca2d41cbddba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5058651d6382e0f307f9c96c356cca2d41cbddba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5058651d6382e0f307f9c96c356cca2d41cbddba/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "794f3386b6ef7070fed482fcbfd113af5121bd7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/794f3386b6ef7070fed482fcbfd113af5121bd7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/794f3386b6ef7070fed482fcbfd113af5121bd7a"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "59538669fdeff2a741e7f6f3a923951d96baca2a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5058651d6382e0f307f9c96c356cca2d41cbddba/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5058651d6382e0f307f9c96c356cca2d41cbddba/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5058651d6382e0f307f9c96c356cca2d41cbddba", "patch": "@@ -1,3 +1,10 @@\n+2011-12-15  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51458\n+\t* decl.c (has_designator_problem): New.\n+\t(reshape_init_r): Check for improper use of\n+\tdesignated initializers.\n+\n 2011-12-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/51463"}, {"sha": "919e2355d88d6b5fd9b2ecd207994e43d77ab819", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5058651d6382e0f307f9c96c356cca2d41cbddba/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5058651d6382e0f307f9c96c356cca2d41cbddba/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=5058651d6382e0f307f9c96c356cca2d41cbddba", "patch": "@@ -5128,6 +5128,24 @@ reshape_init_class (tree type, reshape_iter *d, bool first_initializer_p,\n   return new_init;\n }\n \n+/* Subroutine of reshape_init_r.  We're in a context where C99 initializer\n+   designators are not valid; either complain or return true to indicate\n+   that reshape_init_r should return error_mark_node.  */\n+\n+static bool\n+has_designator_problem (reshape_iter *d, tsubst_flags_t complain)\n+{\n+  if (d->cur->index)\n+    {\n+      if (complain & tf_error)\n+\terror (\"C99 designator %qE outside aggregate initializer\",\n+\t       d->cur->index);\n+      else\n+\treturn true;\n+    }\n+  return false;\n+}\n+\n /* Subroutine of reshape_init, which processes a single initializer (part of\n    a CONSTRUCTOR). TYPE is the type of the variable being initialized, D is the\n    iterator within the CONSTRUCTOR which points to the initializer to process.\n@@ -5143,6 +5161,10 @@ reshape_init_r (tree type, reshape_iter *d, bool first_initializer_p,\n   if (error_operand_p (init))\n     return error_mark_node;\n \n+  if (first_initializer_p && !CP_AGGREGATE_TYPE_P (type)\n+      && has_designator_problem (d, complain))\n+    return error_mark_node;\n+\n   if (TREE_CODE (type) == COMPLEX_TYPE)\n     {\n       /* A complex type can be initialized from one or two initializers,\n@@ -5163,6 +5185,8 @@ reshape_init_r (tree type, reshape_iter *d, bool first_initializer_p,\n \t  VEC(constructor_elt, gc) *v = 0;\n \t  CONSTRUCTOR_APPEND_ELT (v, NULL_TREE, init);\n \t  CONSTRUCTOR_APPEND_ELT (v, NULL_TREE, d->cur->value);\n+\t  if (has_designator_problem (d, complain))\n+\t    return error_mark_node;\n \t  d->cur++;\n \t  init = build_constructor (init_list_type_node, v);\n \t}\n@@ -5242,6 +5266,8 @@ reshape_init_r (tree type, reshape_iter *d, bool first_initializer_p,\n \t array types (one value per array element).  */\n       if (TREE_CODE (str_init) == STRING_CST)\n \t{\n+\t  if (has_designator_problem (d, complain))\n+\t    return error_mark_node;\n \t  d->cur++;\n \t  return str_init;\n \t}"}, {"sha": "c38491bb737bb7a8fd4251e8a398a2df4c9810c5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5058651d6382e0f307f9c96c356cca2d41cbddba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5058651d6382e0f307f9c96c356cca2d41cbddba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5058651d6382e0f307f9c96c356cca2d41cbddba", "patch": "@@ -1,3 +1,8 @@\n+2011-12-15  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51458\n+\t* g++.dg/ext/desig4.C: New.\n+\n 2011-12-15  Paul Thomas  <pault@gcc.gnu.org>\n \n \t* gfortran.dg/class_array_3.f03: Remove explicit indexing of"}, {"sha": "48d629a943f29b32e766c683592cedad7b519274", "filename": "gcc/testsuite/g++.dg/ext/desig4.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5058651d6382e0f307f9c96c356cca2d41cbddba/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdesig4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5058651d6382e0f307f9c96c356cca2d41cbddba/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdesig4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdesig4.C?ref=5058651d6382e0f307f9c96c356cca2d41cbddba", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/51458\n+// { dg-options \"\" }\n+\n+char g[] = { [7] = \"abcd\" };\t     // { dg-error \"designator\" }\n+int a = { .foo = 6 };\t\t     // { dg-error \"designator\" }\n+int b = { [0] = 1 };\t\t     // { dg-error \"designator\" }\n+_Complex float c = { .foo = 0,  1 }; // { dg-error \"designator\" }\n+_Complex float d = { [0] = 0,  1 };  // { dg-error \"designator\" }\n+_Complex float e = { 0, .foo = 1 };  // { dg-error \"designator\" }\n+_Complex float f = { 0, [0] = 1 };   // { dg-error \"designator\" }"}]}