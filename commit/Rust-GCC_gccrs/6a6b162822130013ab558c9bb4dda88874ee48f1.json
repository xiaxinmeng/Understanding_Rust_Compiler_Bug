{"sha": "6a6b162822130013ab558c9bb4dda88874ee48f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE2YjE2MjgyMjEzMDAxM2FiNTU4YzliYjRkZGE4ODg3NGVlNDhmMQ==", "commit": {"author": {"name": "Neil Booth", "email": "neilb@earthling.net", "date": "2000-11-27T19:08:36Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2000-11-27T19:08:36Z"}, "message": "cppinit.c (cpp_reader_init): Remove handling of warn_paste command line options.\n\n        * cppinit.c (cpp_reader_init): Remove handling of warn_paste\n        command line options.\n        (cpp_handle_option): Similarly.\n        * cpplib.h (struct cpp_options): Remove warn_paste.\n        * cppmacro.c (paste_tokens): Apart from assembler, make\n        unpasteable token warning mandatory.\n\nFrom-SVN: r37804", "tree": {"sha": "376dab862876e9b09630f6d229b81ba1eeb2fa61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/376dab862876e9b09630f6d229b81ba1eeb2fa61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a6b162822130013ab558c9bb4dda88874ee48f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a6b162822130013ab558c9bb4dda88874ee48f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a6b162822130013ab558c9bb4dda88874ee48f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a6b162822130013ab558c9bb4dda88874ee48f1/comments", "author": null, "committer": null, "parents": [{"sha": "fb6a7b08a80113867aaeaa3d4dc6bcade0a57699", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb6a7b08a80113867aaeaa3d4dc6bcade0a57699", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb6a7b08a80113867aaeaa3d4dc6bcade0a57699"}], "stats": {"total": 35, "additions": 17, "deletions": 18}, "files": [{"sha": "904bc6be12962dd7a34f2c00bfc3d55b927cdb9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a6b162822130013ab558c9bb4dda88874ee48f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a6b162822130013ab558c9bb4dda88874ee48f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a6b162822130013ab558c9bb4dda88874ee48f1", "patch": "@@ -1,3 +1,12 @@\n+2000-11-27  Neil Booth  <neilb@earthling.net>\n+\n+        * cppinit.c (cpp_reader_init): Remove handling of warn_paste   \n+        command line options.\n+        (cpp_handle_option): Similarly.\n+        * cpplib.h (struct cpp_options): Remove warn_paste.\n+        * cppmacro.c (paste_tokens): Apart from assembler, make\n+        unpasteable token warning mandatory.\n+\n 2000-11-27  Neil Booth  <neilb@earthling.net>\n \n         * tradcpp.c (enum pending_dir_t, struct pending_dir): New."}, {"sha": "daa8a87840dcae20c9440a884697c024ca1e480b", "filename": "gcc/cppinit.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a6b162822130013ab558c9bb4dda88874ee48f1/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a6b162822130013ab558c9bb4dda88874ee48f1/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=6a6b162822130013ab558c9bb4dda88874ee48f1", "patch": "@@ -536,7 +536,6 @@ cpp_reader_init (pfile, lang)\n     }\n \n   CPP_OPTION (pfile, warn_import) = 1;\n-  CPP_OPTION (pfile, warn_paste) = 1;\n   CPP_OPTION (pfile, discard_comments) = 1;\n   CPP_OPTION (pfile, show_column) = 1;\n   CPP_OPTION (pfile, tabstop) = 8;\n@@ -972,10 +971,6 @@ cpp_start_read (pfile, fname)\n   if (CPP_OPTION (pfile, cplusplus))\n     CPP_OPTION (pfile, warn_traditional) = 0;\n \n-  /* Do not warn about invalid token pasting if -lang-asm.  */\n-  if (CPP_OPTION (pfile, lang) == CLK_ASM)\n-    CPP_OPTION (pfile, warn_paste) = 0;\n-\n   /* Set this if it hasn't been set already. */\n   if (CPP_OPTION (pfile, user_label_prefix) == NULL)\n     CPP_OPTION (pfile, user_label_prefix) = USER_LABEL_PREFIX;\n@@ -1690,8 +1685,6 @@ cpp_handle_option (pfile, argc, argv)\n \t    CPP_OPTION (pfile, warn_undef) = 1;\n \t  else if (!strcmp (argv[i], \"-Wimport\"))\n \t    CPP_OPTION (pfile, warn_import) = 1;\n-\t  else if (!strcmp (argv[i], \"-Wpaste\"))\n-\t    CPP_OPTION (pfile, warn_paste) = 1;\n \t  else if (!strcmp (argv[i], \"-Werror\"))\n \t    CPP_OPTION (pfile, warnings_are_errors) = 1;\n \t  else if (!strcmp (argv[i], \"-Wsystem-headers\"))\n@@ -1708,8 +1701,6 @@ cpp_handle_option (pfile, argc, argv)\n \t    CPP_OPTION (pfile, warn_undef) = 0;\n \t  else if (!strcmp (argv[i], \"-Wno-import\"))\n \t    CPP_OPTION (pfile, warn_import) = 0;\n-\t  else if (!strcmp (argv[i], \"-Wno-paste\"))\n-\t    CPP_OPTION (pfile, warn_paste) = 0;\n \t  else if (!strcmp (argv[i], \"-Wno-error\"))\n \t    CPP_OPTION (pfile, warnings_are_errors) = 0;\n \t  else if (!strcmp (argv[i], \"-Wno-system-headers\"))"}, {"sha": "b75e9ac19aa461332b5b6396a9d59b39b97ba489", "filename": "gcc/cpplib.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a6b162822130013ab558c9bb4dda88874ee48f1/gcc%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a6b162822130013ab558c9bb4dda88874ee48f1/gcc%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.h?ref=6a6b162822130013ab558c9bb4dda88874ee48f1", "patch": "@@ -367,10 +367,6 @@ struct cpp_options\n      traditional C.  */\n   unsigned char warn_traditional;\n \n-  /* Nonzero means warn if ## is applied to two tokens that cannot be\n-     pasted together.  */\n-  unsigned char warn_paste;\n-\n   /* Nonzero means turn warnings into errors.  */\n   unsigned char warnings_are_errors;\n "}, {"sha": "f9291bcdc40d6759a678a78827f68e1153ced7a1", "filename": "gcc/cppmacro.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a6b162822130013ab558c9bb4dda88874ee48f1/gcc%2Fcppmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a6b162822130013ab558c9bb4dda88874ee48f1/gcc%2Fcppmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppmacro.c?ref=6a6b162822130013ab558c9bb4dda88874ee48f1", "patch": "@@ -379,17 +379,20 @@ paste_tokens (pfile, lhs, rhs)\n   \n   if (type == CPP_EOF)\n     {\n-      if (CPP_OPTION (pfile, warn_paste))\n+      /* Mandatory warning for all apart from assembler.  */\n+      if (CPP_OPTION (pfile, lang) != CLK_ASM)\n \tcpp_warning (pfile,\n \t \"pasting \\\"%s\\\" and \\\"%s\\\" does not give a valid preprocessing token\",\n \t\t     cpp_token_as_text (pfile, lhs),\n \t\t     cpp_token_as_text (pfile, rhs));\n \n       /* The standard states that behaviour is undefined.  By the\n-\t principle of least surpise, we step back before the RHS, and\n-\t mark it to prevent macro expansion.  Tests in the testsuite\n-\t rely on clearing PREV_WHITE here, though you could argue we\n-\t should actually set it.  */\n+         principle of least surpise, we step back before the RHS, and\n+         mark it to prevent macro expansion.  Tests in the testsuite\n+         rely on clearing PREV_WHITE here, though you could argue we\n+         should actually set it.  Assembler can have '.' in labels and\n+         so requires that we don't insert spaces there.  Maybe we should\n+\t change this to put out a space unless it's assembler.  */\n       rhs->flags &= ~PREV_WHITE;\n       rhs->flags |= NO_EXPAND;\n       return 1;"}]}