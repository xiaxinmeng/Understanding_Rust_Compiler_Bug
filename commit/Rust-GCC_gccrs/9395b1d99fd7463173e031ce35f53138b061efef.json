{"sha": "9395b1d99fd7463173e031ce35f53138b061efef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM5NWIxZDk5ZmQ3NDYzMTczZTAzMWNlMzVmNTMxMzhiMDYxZWZlZg==", "commit": {"author": {"name": "Kelvin Nilsen", "email": "kelvin@gcc.gnu.org", "date": "2018-06-22T22:28:49Z"}, "committer": {"name": "Kelvin Nilsen", "email": "kelvin@gcc.gnu.org", "date": "2018-06-22T22:28:49Z"}, "message": "rs6000-c.c (altivec_overloaded_builtins): Change behavior of vec_pack (vector double...\n\ngcc/ChangeLog:\n\n2018-06-22  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n\n\t* config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Change\n\tbehavior of vec_pack (vector double, vector double) to match\n\tbehavior of vec_float2 (vector double, vector double).\n\ngcc/testsuite/ChangeLog:\n\n2018-06-22  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n\n\t* gcc.target/powerpc/builtins-3-p8.c (test_pack_float): Remove\n\tthis test.\n\t* gcc.target/powerpc/builtins-9.c: New test.\n\t* gcc.target/powerpc/fold-vec-pack-double.c: Modify dg directives\n\tto expect different code generation on big-endian vs.\n\tlittle-endian targets.\n\nFrom-SVN: r261974", "tree": {"sha": "017462dce7a11c3989488d16aeb0af2478a949fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/017462dce7a11c3989488d16aeb0af2478a949fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9395b1d99fd7463173e031ce35f53138b061efef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9395b1d99fd7463173e031ce35f53138b061efef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9395b1d99fd7463173e031ce35f53138b061efef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9395b1d99fd7463173e031ce35f53138b061efef/comments", "author": null, "committer": null, "parents": [{"sha": "e56f662950ce31be414d64699b369ad9a5aca556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56f662950ce31be414d64699b369ad9a5aca556", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e56f662950ce31be414d64699b369ad9a5aca556"}], "stats": {"total": 48, "additions": 38, "deletions": 10}, "files": [{"sha": "f9dc07c5b6b35f9b485c68736ee8f84df482c93e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9395b1d99fd7463173e031ce35f53138b061efef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9395b1d99fd7463173e031ce35f53138b061efef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9395b1d99fd7463173e031ce35f53138b061efef", "patch": "@@ -1,3 +1,9 @@\n+2018-06-22  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n+\n+\t* config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Change\n+\tbehavior of vec_pack (vector double, vector double) to match\n+\tbehavior of vec_float2 (vector double, vector double).\n+\n 2018-06-22  Olivier Hainque  <hainque@adacore.com>\n \n \t* gimplify.c (gimplify_function_tree): Prevent creation"}, {"sha": "f4b1bf7c4660cb2fca3d039e9e3f1283584c769e", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9395b1d99fd7463173e031ce35f53138b061efef/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9395b1d99fd7463173e031ce35f53138b061efef/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=9395b1d99fd7463173e031ce35f53138b061efef", "patch": "@@ -2425,7 +2425,7 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_unsigned_V4SI, RS6000_BTI_unsigned_V2DI, RS6000_BTI_unsigned_V2DI, 0 },\n   { ALTIVEC_BUILTIN_VEC_PACK, P8V_BUILTIN_VPKUDUM,\n     RS6000_BTI_bool_V4SI, RS6000_BTI_bool_V2DI, RS6000_BTI_bool_V2DI, 0 },\n-  { ALTIVEC_BUILTIN_VEC_PACK, P8V_BUILTIN_VPKUDUM,\n+  { ALTIVEC_BUILTIN_VEC_PACK, P8V_BUILTIN_FLOAT2_V2DF,\n     RS6000_BTI_V4SF, RS6000_BTI_V2DF, RS6000_BTI_V2DF, 0 },\n \n   { P8V_BUILTIN_VEC_NEG, P8V_BUILTIN_NEG_V16QI,"}, {"sha": "018fdf05682e41068d939d5bf3465de0325c7252", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9395b1d99fd7463173e031ce35f53138b061efef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9395b1d99fd7463173e031ce35f53138b061efef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9395b1d99fd7463173e031ce35f53138b061efef", "patch": "@@ -1,3 +1,12 @@\n+2018-06-22  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n+\n+\t* gcc.target/powerpc/builtins-3-p8.c (test_pack_float): Remove\n+\tthis test.\n+\t* gcc.target/powerpc/builtins-9.c: New test.\n+\t* gcc.target/powerpc/fold-vec-pack-double.c: Modify dg directives\n+\tto expect different code generation on big-endian vs.\n+\tlittle-endian targets.\n+\n 2018-06-22  Tom de Vries  <tdevries@suse.de>\n \n \t* g++.dg/guality/guality.exp (guality_gdb_name): Default to"}, {"sha": "e0233325a84d2e12fee813a5e36e6ad12cb8a5ec", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-3-p8.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9395b1d99fd7463173e031ce35f53138b061efef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9395b1d99fd7463173e031ce35f53138b061efef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p8.c?ref=9395b1d99fd7463173e031ce35f53138b061efef", "patch": "@@ -11,12 +11,6 @@ test_eq_long_long (vector bool long long x, vector bool long long y)\n \treturn vec_cmpeq (x, y);\n }\n \n-vector float\n-test_pack_float (vector double x, vector double y)\n-{\n-  return vec_pack (x, y);\n-}\n-\n vector unsigned char\n test_vsi_packs_vusi_vusi (vector unsigned short x,\n                           vector unsigned short y)\n@@ -214,7 +208,6 @@ test_neg_double (vector double x)\n /* Expected test results:\n \n      test_eq_long_long                         1 vcmpequd inst\n-     test_pack_float                           1 vpkudum inst\n      test_vsi_packs_vsll_vsll                  1 vpksdss\n      test_vui_packs_vull_vull                  1 vpkudus\n      test_vui_packs_vssi_vssi                  1 vpkshss\n@@ -241,7 +234,6 @@ test_neg_double (vector double x)\n  */\n \n /* { dg-final { scan-assembler-times \"vcmpequd\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vpkudum\"  1 } } */\n /* { dg-final { scan-assembler-times \"vpksdss\"  1 } } */\n /* { dg-final { scan-assembler-times \"vpkudus\"  2 } } */  \n /* { dg-final { scan-assembler-times \"vpkuhus\"  2 } } */"}, {"sha": "d8d895dcdc71c9570351d0709e2d080822086866", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-9.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9395b1d99fd7463173e031ce35f53138b061efef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9395b1d99fd7463173e031ce35f53138b061efef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-9.c?ref=9395b1d99fd7463173e031ce35f53138b061efef", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_p8vector_ok } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n+/* { dg-options \"-maltivec -mcpu=power8 -O3\" } */\n+\n+#include <altivec.h>\n+\n+vector float\n+test_pack_float (vector double x, vector double y)\n+{\n+  return vec_pack (x, y);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmrgew\" 1 { target be } } } */\n+/* { dg-final { scan-assembler-times \"vmrgow\"  1 { target le } } } */\n+\n+/* { dg-final { scan-assembler-times \"xvcvdpsp\"  2 } } */\n+/* { dg-final { scan-assembler-times \"xxpermdi\"  2 } } */\n+"}, {"sha": "46cfef0ec2244245710a6324f39d55ffdb47e315", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-pack-double.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9395b1d99fd7463173e031ce35f53138b061efef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-pack-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9395b1d99fd7463173e031ce35f53138b061efef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-pack-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-pack-double.c?ref=9395b1d99fd7463173e031ce35f53138b061efef", "patch": "@@ -3,6 +3,7 @@\n \n /* { dg-do compile } */\n /* { dg-require-effective-target powerpc_p8vector_ok } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n /* { dg-options \"-mvsx -mpower8-vector -O2\" } */\n \n #include <altivec.h>\n@@ -15,4 +16,5 @@ test_pack (vector double vd2, vector double vd3)\n   return vec_pack (vd2, vd3);\n }\n \n-/* { dg-final { scan-assembler-times \"vpkudum\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmrgew\" 1 { target be } } } */\n+/* { dg-final { scan-assembler-times \"vmrgow\"  1 { target le } } } */"}]}