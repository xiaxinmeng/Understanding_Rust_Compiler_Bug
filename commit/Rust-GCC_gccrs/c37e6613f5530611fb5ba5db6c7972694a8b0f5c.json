{"sha": "c37e6613f5530611fb5ba5db6c7972694a8b0f5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM3ZTY2MTNmNTUzMDYxMWZiNWJhNWRiNmM3OTcyNjk0YThiMGY1Yw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2016-04-20T09:17:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-20T09:17:15Z"}, "message": "sem_util.adb, [...]: Minor reformatting.\n\n2016-04-20  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_util.adb, contracts.adb, ghost.adb, exp_ch6.adb: Minor\n\treformatting.\n\nFrom-SVN: r235246", "tree": {"sha": "b9ac6d0581bc24a3dfdd229fd979a25e4fdf5711", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9ac6d0581bc24a3dfdd229fd979a25e4fdf5711"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c37e6613f5530611fb5ba5db6c7972694a8b0f5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c37e6613f5530611fb5ba5db6c7972694a8b0f5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c37e6613f5530611fb5ba5db6c7972694a8b0f5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c37e6613f5530611fb5ba5db6c7972694a8b0f5c/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7f5e1dee7c70db3fd4e4dab5f205a30b8373a8de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5e1dee7c70db3fd4e4dab5f205a30b8373a8de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f5e1dee7c70db3fd4e4dab5f205a30b8373a8de"}], "stats": {"total": 123, "additions": 60, "deletions": 63}, "files": [{"sha": "2a459eca52af50533c91eca3681dde3c717c899d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37e6613f5530611fb5ba5db6c7972694a8b0f5c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37e6613f5530611fb5ba5db6c7972694a8b0f5c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c37e6613f5530611fb5ba5db6c7972694a8b0f5c", "patch": "@@ -1,3 +1,8 @@\n+2016-04-20  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_util.adb, contracts.adb, ghost.adb, exp_ch6.adb: Minor\n+\treformatting.\n+\n 2016-04-20  Javier Miranda  <miranda@adacore.com>\n \n \t* contracts.adb (Build_Postconditions_Procedure): Code cleanup."}, {"sha": "8aa8502dc2ed9cb32612468d53e5bbbac187b477", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 40, "deletions": 46, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37e6613f5530611fb5ba5db6c7972694a8b0f5c/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37e6613f5530611fb5ba5db6c7972694a8b0f5c/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=c37e6613f5530611fb5ba5db6c7972694a8b0f5c", "patch": "@@ -1734,10 +1734,12 @@ package body Contracts is\n \n          --  Local variables\n \n-         Loc      : constant Source_Ptr := Sloc (Body_Decl);\n-         Params   : List_Id := No_List;\n-         Proc_Bod : Node_Id;\n-         Proc_Id  : Entity_Id;\n+         Loc       : constant Source_Ptr := Sloc (Body_Decl);\n+         Params    : List_Id := No_List;\n+         Proc_Bod  : Node_Id;\n+         Proc_Decl : Node_Id;\n+         Proc_Id   : Entity_Id;\n+         Proc_Spec : Node_Id;\n \n       --  Start of processing for Build_Postconditions_Procedure\n \n@@ -1749,7 +1751,19 @@ package body Contracts is\n          end if;\n \n          Proc_Id := Make_Defining_Identifier (Loc, Name_uPostconditions);\n-         Set_Debug_Info_Needed (Proc_Id);\n+         Set_Debug_Info_Needed   (Proc_Id);\n+         Set_Postconditions_Proc (Subp_Id, Proc_Id);\n+\n+         --  Force the front-end inlining of _Postconditions when generating C\n+         --  code, since its body may have references to itypes defined in the\n+         --  enclosing subprogram, which would cause problems for unnesting\n+         --  routines in the absence of inlining.\n+\n+         if Generate_C_Code then\n+            Set_Has_Pragma_Inline        (Proc_Id);\n+            Set_Has_Pragma_Inline_Always (Proc_Id);\n+            Set_Is_Inlined               (Proc_Id);\n+         end if;\n \n          --  The related subprogram is a function: create the specification of\n          --  parameter _Result.\n@@ -1762,6 +1776,13 @@ package body Contracts is\n                   New_Occurrence_Of (Etype (Result), Loc)));\n          end if;\n \n+         Proc_Spec :=\n+           Make_Procedure_Specification (Loc,\n+             Defining_Unit_Name       => Proc_Id,\n+             Parameter_Specifications => Params);\n+\n+         Proc_Decl := Make_Subprogram_Declaration (Loc, Proc_Spec);\n+\n          --  Insert _Postconditions before the first source declaration of the\n          --  body. This ensures that the body will not cause any premature\n          --  freezing, as it may mention types:\n@@ -1780,52 +1801,25 @@ package body Contracts is\n          --  order reference. The body of _Postconditions must be placed after\n          --  the declaration of Temp to preserve correct visibility.\n \n+         Insert_Before_First_Source_Declaration (Proc_Decl);\n+         Analyze (Proc_Decl);\n+\n          --  Set an explicit End_Label to override the sloc of the implicit\n          --  RETURN statement, and prevent it from inheriting the sloc of one\n          --  the postconditions: this would cause confusing debug info to be\n          --  produced, interfering with coverage-analysis tools.\n \n-         declare\n-            Proc_Decl    : Node_Id;\n-            Proc_Decl_Id : Entity_Id;\n-            Proc_Spec    : Node_Id;\n-         begin\n-            Proc_Spec :=\n-               Make_Procedure_Specification (Loc,\n-                 Defining_Unit_Name       => Proc_Id,\n-                 Parameter_Specifications => Params);\n-\n-            Proc_Decl := Make_Subprogram_Declaration (Loc, Proc_Spec);\n-            Proc_Decl_Id := Defining_Entity (Specification (Proc_Decl));\n-            Set_Postconditions_Proc (Subp_Id, Proc_Decl_Id);\n-\n-            --  Force the front end inlining of _PostConditions when generating\n-            --  C code since its body may have references to itypes defined in\n-            --  the enclosing subprogram, thus causing problems to unnesting\n-            --  routines.\n-\n-            if Generate_C_Code then\n-               Set_Has_Pragma_Inline (Proc_Decl_Id);\n-               Set_Has_Pragma_Inline_Always (Proc_Decl_Id);\n-               Set_Is_Inlined (Proc_Decl_Id);\n-            end if;\n-\n-            Insert_Before_First_Source_Declaration (Proc_Decl);\n-            Analyze (Proc_Decl);\n-\n-            Proc_Bod :=\n-              Make_Subprogram_Body (Loc,\n-                Specification              =>\n-                  Copy_Subprogram_Spec (Proc_Spec),\n-                Declarations               => Empty_List,\n-                Handled_Statement_Sequence =>\n-                  Make_Handled_Sequence_Of_Statements (Loc,\n-                    Statements => Stmts,\n-                    End_Label  => Make_Identifier (Loc, Chars (Proc_Id))));\n-\n-            Insert_Before_First_Source_Declaration (Proc_Bod);\n-            Analyze (Proc_Bod);\n-         end;\n+         Proc_Bod :=\n+           Make_Subprogram_Body (Loc,\n+             Specification              =>\n+               Copy_Subprogram_Spec (Proc_Spec),\n+             Declarations               => Empty_List,\n+             Handled_Statement_Sequence =>\n+               Make_Handled_Sequence_Of_Statements (Loc,\n+                 Statements => Stmts,\n+                 End_Label  => Make_Identifier (Loc, Chars (Proc_Id))));\n+\n+         Insert_After_And_Analyze (Proc_Decl, Proc_Bod);\n       end Build_Postconditions_Procedure;\n \n       ----------------------------"}, {"sha": "ea8bed4289c99b15db4fcb5eeee3ed49ba03939b", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37e6613f5530611fb5ba5db6c7972694a8b0f5c/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37e6613f5530611fb5ba5db6c7972694a8b0f5c/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=c37e6613f5530611fb5ba5db6c7972694a8b0f5c", "patch": "@@ -5522,6 +5522,7 @@ package body Exp_Ch6 is\n \n    procedure Expand_N_Subprogram_Body_Stub (N : Node_Id) is\n       Bod : Node_Id;\n+\n    begin\n       if Present (Corresponding_Body (N)) then\n          Bod := Unit_Declaration_Node (Corresponding_Body (N));"}, {"sha": "8bd10310704c1aa97ae2713274fbb67148adbfe6", "filename": "gcc/ada/ghost.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37e6613f5530611fb5ba5db6c7972694a8b0f5c/gcc%2Fada%2Fghost.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37e6613f5530611fb5ba5db6c7972694a8b0f5c/gcc%2Fada%2Fghost.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fghost.adb?ref=c37e6613f5530611fb5ba5db6c7972694a8b0f5c", "patch": "@@ -256,9 +256,9 @@ package body Ghost is\n \n                if Present (Subp_Id) then\n \n-                  --  The context is the internally built _postconditions\n-                  --  subprogram, which it is OK because the real check was\n-                  --  done before expansion activities.\n+                  --  The context is the internally built _Postconditions\n+                  --  procedure, which is OK because the real check was done\n+                  --  before expansion activities.\n \n                   if Chars (Subp_Id) = Name_uPostconditions then\n                      return True;"}, {"sha": "da7d00a5b65fd6a4f936d136cf7710981826b9da", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37e6613f5530611fb5ba5db6c7972694a8b0f5c/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37e6613f5530611fb5ba5db6c7972694a8b0f5c/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=c37e6613f5530611fb5ba5db6c7972694a8b0f5c", "patch": "@@ -14282,28 +14282,25 @@ package body Sem_Util is\n    --------------------------------------\n \n    function Is_Unchecked_Conversion_Instance (Id : Entity_Id) return Boolean is\n-      Par     : Node_Id;\n-      Gen_Par : Entity_Id;\n+      Par : Node_Id;\n \n    begin\n       --  Look for a function whose generic parent is the predefined intrinsic\n       --  function Unchecked_Conversion.\n \n       if Ekind (Id) = E_Function then\n-         Par     := Parent (Id);\n+         Par := Parent (Id);\n \n-         if Nkind (Par) /= N_Function_Specification then\n-            return False;\n-         end if;\n+         if Nkind (Par) = N_Function_Specification then\n+            Par := Generic_Parent (Par);\n \n-         Gen_Par := Generic_Parent (Par);\n-\n-         return\n-           Present (Gen_Par)\n-             and then Chars (Gen_Par) = Name_Unchecked_Conversion\n-             and then Is_Intrinsic_Subprogram (Gen_Par)\n-             and then Is_Predefined_File_Name\n-                        (Unit_File_Name (Get_Source_Unit (Gen_Par)));\n+            return\n+              Present (Par)\n+                and then Chars (Par) = Name_Unchecked_Conversion\n+                and then Is_Intrinsic_Subprogram (Par)\n+                and then Is_Predefined_File_Name\n+                           (Unit_File_Name (Get_Source_Unit (Par)));\n+         end if;\n       end if;\n \n       return False;"}]}