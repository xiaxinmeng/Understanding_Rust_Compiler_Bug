{"sha": "15ea09a082e6964a4abbc49a6834cf5ab705813a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVlYTA5YTA4MmU2OTY0YTRhYmJjNDlhNjgzNGNmNWFiNzA1ODEzYQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-03-27T16:40:24Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-03-27T16:40:24Z"}, "message": "Improve error about indirecting an unsafe.Pointer type.\n\nFrom-SVN: r171574", "tree": {"sha": "03766c118bbae97b5e8fb4e1fa4138f3c7fc1a39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03766c118bbae97b5e8fb4e1fa4138f3c7fc1a39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15ea09a082e6964a4abbc49a6834cf5ab705813a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ea09a082e6964a4abbc49a6834cf5ab705813a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15ea09a082e6964a4abbc49a6834cf5ab705813a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ea09a082e6964a4abbc49a6834cf5ab705813a/comments", "author": null, "committer": null, "parents": [{"sha": "fbe185d3de9e35bdb5b734da7f6bd84987b50dab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbe185d3de9e35bdb5b734da7f6bd84987b50dab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbe185d3de9e35bdb5b734da7f6bd84987b50dab"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "3a6005138cdb3e72acb5febd44ffc7046c233325", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ea09a082e6964a4abbc49a6834cf5ab705813a/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ea09a082e6964a4abbc49a6834cf5ab705813a/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=15ea09a082e6964a4abbc49a6834cf5ab705813a", "patch": "@@ -3669,6 +3669,14 @@ Unary_expression::do_lower(Gogo*, Named_object*, int)\n \t}\n     }\n \n+  // Catching an invalid indirection of unsafe.Pointer here avoid\n+  // having to deal with TYPE_VOID in other places.\n+  if (op == OPERATOR_MULT && expr->type()->is_unsafe_pointer_type())\n+    {\n+      error_at(this->location(), \"invalid indirect of %<unsafe.Pointer%>\");\n+      return Expression::make_error(this->location());\n+    }\n+\n   if (op == OPERATOR_PLUS || op == OPERATOR_MINUS\n       || op == OPERATOR_NOT || op == OPERATOR_XOR)\n     {"}]}