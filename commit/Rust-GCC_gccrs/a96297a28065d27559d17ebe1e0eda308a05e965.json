{"sha": "a96297a28065d27559d17ebe1e0eda308a05e965", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk2Mjk3YTI4MDY1ZDI3NTU5ZDE3ZWJlMWUwZWRhMzA4YTA1ZTk2NQ==", "commit": {"author": {"name": "Matthew Wahab", "email": "matthew.wahab@arm.com", "date": "2015-06-29T16:09:10Z"}, "committer": {"name": "Matthew Wahab", "email": "mwahab@gcc.gnu.org", "date": "2015-06-29T16:09:10Z"}, "message": "re PR target/65697 (__atomic memory barriers not strong enough for __sync builtins)\n\n2015-06-29  Matthew Wahab  <matthew.wahab@arm.com>\n\n\tPR target/65697\n\t* config/armc/arm.c (arm_split_compare_and_swap): For ARMv8, replace an\n\tinitial acquire barrier with final barrier.\n\nFrom-SVN: r225133", "tree": {"sha": "ba985053b0b3b9227d73b42b5e23999ab1849044", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba985053b0b3b9227d73b42b5e23999ab1849044"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a96297a28065d27559d17ebe1e0eda308a05e965", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a96297a28065d27559d17ebe1e0eda308a05e965", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a96297a28065d27559d17ebe1e0eda308a05e965", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a96297a28065d27559d17ebe1e0eda308a05e965/comments", "author": null, "committer": null, "parents": [{"sha": "6b3a1ce9f4f8b780f5fab81cddb81f517a036532", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b3a1ce9f4f8b780f5fab81cddb81f517a036532", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b3a1ce9f4f8b780f5fab81cddb81f517a036532"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "6ecc469a8141ef272676616199eedaffdce0c102", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96297a28065d27559d17ebe1e0eda308a05e965/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96297a28065d27559d17ebe1e0eda308a05e965/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a96297a28065d27559d17ebe1e0eda308a05e965", "patch": "@@ -1,3 +1,9 @@\n+2015-06-29  Matthew Wahab  <matthew.wahab@arm.com>\n+\n+\tPR target/65697\n+\t* config/armc/arm.c (arm_split_compare_and_swap): For ARMv8, replace an\n+\tinitial acquire barrier with final barrier.\n+\n 2015-06-29  Matthew Wahab  <matthew.wahab@arm.com>\n \n \tPR target/65697"}, {"sha": "c2dce95e611e29c31f95d1b02acceb34e0dbe29d", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96297a28065d27559d17ebe1e0eda308a05e965/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96297a28065d27559d17ebe1e0eda308a05e965/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=a96297a28065d27559d17ebe1e0eda308a05e965", "patch": "@@ -27614,6 +27614,8 @@ arm_split_compare_and_swap (rtx operands[])\n   scratch = operands[7];\n   mode = GET_MODE (mem);\n \n+  bool is_armv8_sync = arm_arch8 && is_mm_sync (mod_s);\n+\n   bool use_acquire = TARGET_HAVE_LDACQ\n                      && !(is_mm_relaxed (mod_s) || is_mm_consume (mod_s)\n \t\t\t  || is_mm_release (mod_s));\n@@ -27622,6 +27624,11 @@ arm_split_compare_and_swap (rtx operands[])\n                      && !(is_mm_relaxed (mod_s) || is_mm_consume (mod_s)\n \t\t\t  || is_mm_acquire (mod_s));\n \n+  /* For ARMv8, the load-acquire is too weak for __sync memory orders.  Instead,\n+     a full barrier is emitted after the store-release.  */\n+  if (is_armv8_sync)\n+    use_acquire = false;\n+\n   /* Checks whether a barrier is needed and emits one accordingly.  */\n   if (!(use_acquire || use_release))\n     arm_pre_atomic_barrier (mod_s);\n@@ -27662,7 +27669,8 @@ arm_split_compare_and_swap (rtx operands[])\n     emit_label (label2);\n \n   /* Checks whether a barrier is needed and emits one accordingly.  */\n-  if (!(use_acquire || use_release))\n+  if (is_armv8_sync\n+      || !(use_acquire || use_release))\n     arm_post_atomic_barrier (mod_s);\n \n   if (is_mm_relaxed (mod_f))"}]}