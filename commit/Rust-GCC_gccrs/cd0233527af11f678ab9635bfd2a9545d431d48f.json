{"sha": "cd0233527af11f678ab9635bfd2a9545d431d48f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QwMjMzNTI3YWYxMWY2NzhhYjk2MzViZmQyYTk1NDVkNDMxZDQ4Zg==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2020-08-29T01:05:58Z"}, "committer": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2020-08-29T01:05:58Z"}, "message": "rs6000: Remove ALTIVEC_BUILTIN_MASK_FOR_STORE\n\nIt turns out that the target hook that this is supposed to satisfy\ndisappeared in 2004.  Probably time to retire it.\n\n2020-08-28  Bill Schmidt  <wschmidt@linux.ibm.com>\n\ngcc/\n\t* config/rs6000/rs6000-builtin.def (MASK_FOR_STORE): Remove.\n\t* config/rs6000/rs6000-call.c (rs6000_expand_builtin): Remove\n\tall logic for ALTIVEC_BUILTIN_MASK_FOR_STORE.", "tree": {"sha": "b2dacadc77cf9e74e0d2c8e3188323d431bc8639", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2dacadc77cf9e74e0d2c8e3188323d431bc8639"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd0233527af11f678ab9635bfd2a9545d431d48f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd0233527af11f678ab9635bfd2a9545d431d48f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd0233527af11f678ab9635bfd2a9545d431d48f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd0233527af11f678ab9635bfd2a9545d431d48f/comments", "author": null, "committer": null, "parents": [{"sha": "8f7ea26ae325f796c4873089acdfd2b1f1d2520f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f7ea26ae325f796c4873089acdfd2b1f1d2520f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f7ea26ae325f796c4873089acdfd2b1f1d2520f"}], "stats": {"total": 13, "additions": 3, "deletions": 10}, "files": [{"sha": "e91a48ddf5fee83c03a1d4e862bf13c258532785", "filename": "gcc/config/rs6000/rs6000-builtin.def", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd0233527af11f678ab9635bfd2a9545d431d48f/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd0233527af11f678ab9635bfd2a9545d431d48f/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def?ref=cd0233527af11f678ab9635bfd2a9545d431d48f", "patch": "@@ -1515,7 +1515,6 @@ BU_ALTIVEC_C (STVLXL,\t\t\"stvlxl\",\t    MEM)\n BU_ALTIVEC_C (STVRX,\t\t\"stvrx\",\t    MEM)\n BU_ALTIVEC_C (STVRXL,\t\t\"stvrxl\",\t    MEM)\n BU_ALTIVEC_X (MASK_FOR_LOAD,\t\"mask_for_load\",    MISC)\n-BU_ALTIVEC_X (MASK_FOR_STORE,\t\"mask_for_store\",   MISC)\n BU_ALTIVEC_X (VEC_INIT_V4SI,\t\"vec_init_v4si\",    CONST)\n BU_ALTIVEC_X (VEC_INIT_V8HI,\t\"vec_init_v8hi\",    CONST)\n BU_ALTIVEC_X (VEC_INIT_V16QI,\t\"vec_init_v16qi\",   CONST)"}, {"sha": "26388762c5fd91f7191d018b122a242e6abe93ff", "filename": "gcc/config/rs6000/rs6000-call.c", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd0233527af11f678ab9635bfd2a9545d431d48f/gcc%2Fconfig%2Frs6000%2Frs6000-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd0233527af11f678ab9635bfd2a9545d431d48f/gcc%2Fconfig%2Frs6000%2Frs6000-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-call.c?ref=cd0233527af11f678ab9635bfd2a9545d431d48f", "patch": "@@ -12643,7 +12643,6 @@ rs6000_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n       }\n \n     case ALTIVEC_BUILTIN_MASK_FOR_LOAD:\n-    case ALTIVEC_BUILTIN_MASK_FOR_STORE:\n       {\n \tint icode2 = (BYTES_BIG_ENDIAN ? (int) CODE_FOR_altivec_lvsr_direct\n \t\t     : (int) CODE_FOR_altivec_lvsl_direct);\n@@ -12658,14 +12657,9 @@ rs6000_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n \tgcc_assert (POINTER_TYPE_P (TREE_TYPE (arg)));\n \top = expand_expr (arg, NULL_RTX, Pmode, EXPAND_NORMAL);\n \taddr = memory_address (mode, op);\n-\tif (fcode == ALTIVEC_BUILTIN_MASK_FOR_STORE)\n-\t  op = addr;\n-\telse\n-\t  {\n-\t    /* For the load case need to negate the address.  */\n-\t    op = gen_reg_rtx (GET_MODE (addr));\n-\t    emit_insn (gen_rtx_SET (op, gen_rtx_NEG (GET_MODE (addr), addr)));\n-\t  }\n+\t/* We need to negate the address.  */\n+\top = gen_reg_rtx (GET_MODE (addr));\n+\temit_insn (gen_rtx_SET (op, gen_rtx_NEG (GET_MODE (addr), addr)));\n \top = gen_rtx_MEM (mode, op);\n \n \tif (target == 0"}]}