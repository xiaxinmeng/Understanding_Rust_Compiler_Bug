{"sha": "1d79dcb813b30ba64c111c2157e06deeac5fb691", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ3OWRjYjgxM2IzMGJhNjRjMTExYzIxNTdlMDZkZWVhYzVmYjY5MQ==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2017-07-04T14:05:31Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2017-07-04T14:05:31Z"}, "message": "[Patch ARM] Add initial tuning for Cortex-A55 and Cortex-A75\n\nMuch like my AArch64 patch a few weeks ago, this patch adds support\nfor the ARM Cortex-A75 and Cortex-A55 processors through the\n-mcpu/-mtune values cortex-a55 and cortex-a75, and an\nARM DynamIQ big.LITTLE configuration of these two processors through\nthe -mcpu/-mtune value cortex-a75.cortex-a55\n\nBoth Cortex-A55 and Cortex-A75 support ARMv8-A with the ARM8.1-A and\nARMv8.2-A extensions. This is reflected in the patch, -mcpu=cortex-a75 is\ntreated as equivalent to passing -mtune=cortex-a75 -march=armv8.2-a+fp16\n\ngcc/\n\n2017-07-04  James Greenhalgh  <james.greenhalgh@arm.com>\n\n\t* config/arm/arm-cpus.in (cortex-a55): New.\n\t(cortex-a75): Likewise.\n\t(cortex-a75.cortex-a55): Likewise.\n\t* config/arm/driver-arm.c (arm_cpu_table): Add cortex-a55 and\n\tcortex-a75.\n\t* doc/invoke.texi (-mcpu): Document cortex-a55 and cortex-a75.\n\n\t* config/arm/arm-cpu-cdata.h: Regenerate.\n\t* config/arm/arm-cpu-data.h: Regenerate.\n\t* config/arm/arm-cpu.h: Regenerate.\n\t* config/arm/arm-tables.opt: Regenerate.\n\t* config/arm/arm-tune.md: Regenerate.\n\nFrom-SVN: r249970", "tree": {"sha": "1851df342512cd27a2b4a5494401146092ba7b94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1851df342512cd27a2b4a5494401146092ba7b94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d79dcb813b30ba64c111c2157e06deeac5fb691", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d79dcb813b30ba64c111c2157e06deeac5fb691", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d79dcb813b30ba64c111c2157e06deeac5fb691", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d79dcb813b30ba64c111c2157e06deeac5fb691/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cea768b0caa43d0957d752933bb43f3d73bfed69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cea768b0caa43d0957d752933bb43f3d73bfed69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cea768b0caa43d0957d752933bb43f3d73bfed69"}], "stats": {"total": 162, "additions": 154, "deletions": 8}, "files": [{"sha": "866c7ffbff66095ef4de7f7b39c09f553d45f08b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d79dcb813b30ba64c111c2157e06deeac5fb691", "patch": "@@ -1,3 +1,17 @@\n+2017-07-04  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/arm/arm-cpus.in (cortex-a55): New.\n+\t(cortex-a75): Likewise.\n+\t(cortex-a75.cortex-a55): Likewise.\n+\t* config/arm/driver-arm.c (arm_cpu_table): Add cortex-a55 and\n+\tcortex-a75.\n+\t* doc/invoke.texi (-mcpu): Document cortex-a55 and cortex-a75.\n+\t* config/arm/arm-cpu-cdata.h: Regenerate.\n+\t* config/arm/arm-cpu-data.h: Regenerate.\n+\t* config/arm/arm-cpu.h: Regenerate.\n+\t* config/arm/arm-tables.opt: Regenerate.\n+\t* config/arm/arm-tune.md: Regenerate.\n+\n 2017-07-04  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* haifa-sched.c (sched_create_recovery_edges): Update profile."}, {"sha": "acd36d44a2cc4c8851cec8c48807ca0d0b0e13d5", "filename": "gcc/config/arm/arm-cpu-cdata.h", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Farm-cpu-cdata.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Farm-cpu-cdata.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpu-cdata.h?ref=1d79dcb813b30ba64c111c2157e06deeac5fb691", "patch": "@@ -388,6 +388,34 @@ static const cpu_arch_extension cpu_opttab_cortexa73cortexa53[] = {\n   { NULL, false, false, {isa_nobit}}\n };\n \n+static const cpu_arch_extension cpu_opttab_cortexa55[] = {\n+  {\n+    \"crypto\", false, false,\n+    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n+  },\n+  {\n+    \"nofp\", true, false,\n+    { ISA_ALL_FP, isa_nobit }\n+  },\n+  { NULL, false, false, {isa_nobit}}\n+};\n+\n+static const cpu_arch_extension cpu_opttab_cortexa75[] = {\n+  {\n+    \"crypto\", false, false,\n+    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n+  },\n+  { NULL, false, false, {isa_nobit}}\n+};\n+\n+static const cpu_arch_extension cpu_opttab_cortexa75cortexa55[] = {\n+  {\n+    \"crypto\", false, false,\n+    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n+  },\n+  { NULL, false, false, {isa_nobit}}\n+};\n+\n static const cpu_arch_extension cpu_opttab_cortexm33[] = {\n   {\n     \"nofp\", true, false,\n@@ -1622,6 +1650,45 @@ const cpu_option all_cores[] =\n     },\n     TARGET_ARCH_armv8_a\n   },\n+  {\n+    {\n+      \"cortex-a55\",\n+      cpu_opttab_cortexa55,\n+      {\n+        ISA_ARMv8_2a,\n+        isa_bit_fp16,ISA_FP_ARMv8,ISA_NEON,\n+        ISA_FP_ARMv8,ISA_NEON,\n+        isa_nobit\n+      }\n+    },\n+    TARGET_ARCH_armv8_2_a\n+  },\n+  {\n+    {\n+      \"cortex-a75\",\n+      cpu_opttab_cortexa75,\n+      {\n+        ISA_ARMv8_2a,\n+        isa_bit_fp16,ISA_FP_ARMv8,ISA_NEON,\n+        ISA_FP_ARMv8,ISA_NEON,\n+        isa_nobit\n+      }\n+    },\n+    TARGET_ARCH_armv8_2_a\n+  },\n+  {\n+    {\n+      \"cortex-a75.cortex-a55\",\n+      cpu_opttab_cortexa75cortexa55,\n+      {\n+        ISA_ARMv8_2a,\n+        isa_bit_fp16,ISA_FP_ARMv8,ISA_NEON,\n+        ISA_FP_ARMv8,ISA_NEON,\n+        isa_nobit\n+      }\n+    },\n+    TARGET_ARCH_armv8_2_a\n+  },\n   {\n     {\n       \"cortex-m23\","}, {"sha": "1e0552245cfb454a90f4eb77a3cc8884a56dcf2c", "filename": "gcc/config/arm/arm-cpu-data.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Farm-cpu-data.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Farm-cpu-data.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpu-data.h?ref=1d79dcb813b30ba64c111c2157e06deeac5fb691", "patch": "@@ -552,6 +552,21 @@ static const cpu_tune all_tunes[] =\n     (TF_LDSCHED),\n     &arm_cortex_a73_tune\n   },\n+  { /* cortex-a55.  */\n+    TARGET_CPU_cortexa53,\n+    (TF_LDSCHED),\n+    &arm_cortex_a53_tune\n+  },\n+  { /* cortex-a75.  */\n+    TARGET_CPU_cortexa57,\n+    (TF_LDSCHED),\n+    &arm_cortex_a73_tune\n+  },\n+  { /* cortex-a75.cortex-a55.  */\n+    TARGET_CPU_cortexa53,\n+    (TF_LDSCHED),\n+    &arm_cortex_a73_tune\n+  },\n   { /* cortex-m23.  */\n     TARGET_CPU_cortexm23,\n     (TF_LDSCHED),"}, {"sha": "8fda7174dc26aa17e1603ef6b628f9edcd1c6243", "filename": "gcc/config/arm/arm-cpu.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Farm-cpu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Farm-cpu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpu.h?ref=1d79dcb813b30ba64c111c2157e06deeac5fb691", "patch": "@@ -128,6 +128,9 @@ enum processor_type\n   TARGET_CPU_cortexa72cortexa53,\n   TARGET_CPU_cortexa73cortexa35,\n   TARGET_CPU_cortexa73cortexa53,\n+  TARGET_CPU_cortexa55,\n+  TARGET_CPU_cortexa75,\n+  TARGET_CPU_cortexa75cortexa55,\n   TARGET_CPU_cortexm23,\n   TARGET_CPU_cortexm33,\n   TARGET_CPU_arm_none"}, {"sha": "946d543ebb29416da9b4928161607cccacaa78a7", "filename": "gcc/config/arm/arm-cpus.in", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Farm-cpus.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Farm-cpus.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpus.in?ref=1d79dcb813b30ba64c111c2157e06deeac5fb691", "patch": "@@ -1206,7 +1206,6 @@ begin cpu xgene1\n  costs xgene1\n end cpu xgene1\n \n-\n # V8 A-profile big.LITTLE implementations\n begin cpu cortex-a57.cortex-a53\n  cname cortexa57cortexa53\n@@ -1249,6 +1248,40 @@ begin cpu cortex-a73.cortex-a53\n end cpu cortex-a73.cortex-a53\n \n \n+# ARMv8.2 A-profile Architecture Processors\n+begin cpu cortex-a55\n+ cname cortexa55\n+ tune for cortex-a53\n+ tune flags LDSCHED\n+ architecture armv8.2-a+fp16\n+ fpu neon-fp-armv8\n+ option crypto add FP_ARMv8 CRYPTO\n+ option nofp remove ALL_FP\n+ costs cortex_a53\n+end cpu cortex-a55\n+\n+begin cpu cortex-a75\n+ cname cortexa75\n+ tune for cortex-a57\n+ tune flags LDSCHED\n+ architecture armv8.2-a+fp16\n+ fpu neon-fp-armv8\n+ option crypto add FP_ARMv8 CRYPTO\n+ costs cortex_a73\n+end cpu cortex-a75\n+\n+\n+# ARMv8.2 A-profile ARM DynamIQ big.LITTLE implementations\n+begin cpu cortex-a75.cortex-a55\n+ cname cortexa75cortexa55\n+ tune for cortex-a53\n+ tune flags LDSCHED\n+ architecture armv8.2-a+fp16\n+ fpu neon-fp-armv8\n+ option crypto add FP_ARMv8 CRYPTO\n+ costs cortex_a73\n+end cpu cortex-a75.cortex-a55\n+\n # V8 M-profile implementations.\n begin cpu cortex-m23\n  cname cortexm23"}, {"sha": "5e2df9dd0716293fb551b6582a8c9c2c46fdaa90", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=1d79dcb813b30ba64c111c2157e06deeac5fb691", "patch": "@@ -342,6 +342,15 @@ Enum(processor_type) String(cortex-a73.cortex-a35) Value( TARGET_CPU_cortexa73co\n EnumValue\n Enum(processor_type) String(cortex-a73.cortex-a53) Value( TARGET_CPU_cortexa73cortexa53)\n \n+EnumValue\n+Enum(processor_type) String(cortex-a55) Value( TARGET_CPU_cortexa55)\n+\n+EnumValue\n+Enum(processor_type) String(cortex-a75) Value( TARGET_CPU_cortexa75)\n+\n+EnumValue\n+Enum(processor_type) String(cortex-a75.cortex-a55) Value( TARGET_CPU_cortexa75cortexa55)\n+\n EnumValue\n Enum(processor_type) String(cortex-m23) Value( TARGET_CPU_cortexm23)\n "}, {"sha": "ba2c7d8ecfdbf6966ebf04b680d587a0e057b161", "filename": "gcc/config/arm/arm-tune.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Farm-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Farm-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tune.md?ref=1d79dcb813b30ba64c111c2157e06deeac5fb691", "patch": "@@ -56,5 +56,6 @@\n \tcortexa53,cortexa57,cortexa72,\n \tcortexa73,exynosm1,xgene1,\n \tcortexa57cortexa53,cortexa72cortexa53,cortexa73cortexa35,\n-\tcortexa73cortexa53,cortexm23,cortexm33\"\n+\tcortexa73cortexa53,cortexa55,cortexa75,\n+\tcortexa75cortexa55,cortexm23,cortexm33\"\n \t(const (symbol_ref \"((enum attr_tune) arm_tune)\")))"}, {"sha": "ab6879e36b011b28d65ca7d5c0e3acdd0c6d720f", "filename": "gcc/config/arm/driver-arm.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Fdriver-arm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Fdriver-arm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fdriver-arm.c?ref=1d79dcb813b30ba64c111c2157e06deeac5fb691", "patch": "@@ -52,6 +52,8 @@ static struct vendor_cpu arm_cpu_table[] = {\n     {\"0xd07\", \"armv8-a+crc\", \"cortex-a57\"},\n     {\"0xd08\", \"armv8-a+crc\", \"cortex-a72\"},\n     {\"0xd09\", \"armv8-a+crc\", \"cortex-a73\"},\n+    {\"0xd05\", \"armv8.2-a+fp16\", \"cortex-a55\"},\n+    {\"0xd0a\", \"armv8.2-a+fp16\", \"cortex-a75\"},\n     {\"0xc14\", \"armv7-r\", \"cortex-r4\"},\n     {\"0xc15\", \"armv7-r\", \"cortex-r5\"},\n     {\"0xc20\", \"armv6-m\", \"cortex-m0\"},"}, {"sha": "3e5cee8649ef9452e2a7e5a8603318ce11e2baff", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1d79dcb813b30ba64c111c2157e06deeac5fb691", "patch": "@@ -15519,9 +15519,10 @@ Permissible names are: @samp{arm2}, @samp{arm250},\n @samp{arm1156t2-s}, @samp{arm1156t2f-s}, @samp{arm1176jz-s}, @samp{arm1176jzf-s},\n @samp{generic-armv7-a}, @samp{cortex-a5}, @samp{cortex-a7}, @samp{cortex-a8},\n @samp{cortex-a9}, @samp{cortex-a12}, @samp{cortex-a15}, @samp{cortex-a17},\n-@samp{cortex-a32}, @samp{cortex-a35}, @samp{cortex-a53}, @samp{cortex-a57},\n-@samp{cortex-a72}, @samp{cortex-a73}, @samp{cortex-r4},\n-@samp{cortex-r4f}, @samp{cortex-r5}, @samp{cortex-r7}, @samp{cortex-r8},\n+@samp{cortex-a32}, @samp{cortex-a35}, @samp{cortex-a53}, @samp{cortex-a55},\n+@samp{cortex-a57}, @samp{cortex-a72}, @samp{cortex-a73}, @samp{cortex-a75},\n+@samp{cortex-r4}, @samp{cortex-r4f}, @samp{cortex-r5}, @samp{cortex-r7},\n+@samp{cortex-r8},\n @samp{cortex-m33},\n @samp{cortex-m23},\n @samp{cortex-m7},\n@@ -15544,7 +15545,8 @@ Additionally, this option can specify that GCC should tune the performance\n of the code for a big.LITTLE system.  Permissible names are:\n @samp{cortex-a15.cortex-a7}, @samp{cortex-a17.cortex-a7},\n @samp{cortex-a57.cortex-a53}, @samp{cortex-a72.cortex-a53},\n-@samp{cortex-a72.cortex-a35}, @samp{cortex-a73.cortex-a53}.\n+@samp{cortex-a72.cortex-a35}, @samp{cortex-a73.cortex-a53},\n+@samp{cortex-a75.cortex-a55}.\n \n @option{-mtune=generic-@var{arch}} specifies that GCC should tune the\n performance for a blend of processors within architecture @var{arch}.\n@@ -15605,8 +15607,8 @@ Disables the floating-point and SIMD instructions on\n @samp{generic-armv7-a}, @samp{cortex-a5}, @samp{cortex-a7},\n @samp{cortex-a8}, @samp{cortex-a9}, @samp{cortex-a12},\n @samp{cortex-a15}, @samp{cortex-a17}, @samp{cortex-a15.cortex-a7},\n-@samp{cortex-a17.cortex-a7}, @samp{cortex-a32}, @samp{cortex-a35}\n-and @samp{cortex-a53}.\n+@samp{cortex-a17.cortex-a7}, @samp{cortex-a32}, @samp{cortex-a35},\n+@samp{cortex-a53} and @samp{cortex-a55}.\n \n @item +nofp.dp\n Disables the double-precision component of the floating-point instructions"}]}