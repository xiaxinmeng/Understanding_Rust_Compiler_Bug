{"sha": "d1f453b76449578cac4b2c09fb574d85550e94ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFmNDUzYjc2NDQ5NTc4Y2FjNGIyYzA5ZmI1NzRkODU1NTBlOTRhYg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-04-24T13:14:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-24T13:14:22Z"}, "message": "einfo.adb (OK_To_Rename): New flag\n\n2009-04-24  Robert Dewar  <dewar@adacore.com>\n\n\t* einfo.adb (OK_To_Rename): New flag\n\n\t* einfo.ads (OK_To_Rename): New flag\n\n\t* exp_ch3.adb (Expand_N_Object_Declaration): Rewrite as renames if\n\tOK_To_Rename set.\n\n\t* exp_ch4.adb (Expand_Concatenate): Mark temp variable OK_To_Rename\n\n\t* sem_ch7.adb (Uninstall_Declarations): Allow for renames from\n\tOK_To_Rename.\n\nFrom-SVN: r146714", "tree": {"sha": "fae838193d6d95f860215a3cb43697786366724c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fae838193d6d95f860215a3cb43697786366724c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1f453b76449578cac4b2c09fb574d85550e94ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1f453b76449578cac4b2c09fb574d85550e94ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1f453b76449578cac4b2c09fb574d85550e94ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1f453b76449578cac4b2c09fb574d85550e94ab/comments", "author": null, "committer": null, "parents": [{"sha": "ce72fe6cf0447b114c9cb60fd9c21bedfaad3fbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce72fe6cf0447b114c9cb60fd9c21bedfaad3fbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce72fe6cf0447b114c9cb60fd9c21bedfaad3fbe"}], "stats": {"total": 134, "additions": 122, "deletions": 12}, "files": [{"sha": "7290aa3abcbf6069b3069a0e5ffebef07ce539f1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1f453b76449578cac4b2c09fb574d85550e94ab/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1f453b76449578cac4b2c09fb574d85550e94ab/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d1f453b76449578cac4b2c09fb574d85550e94ab", "patch": "@@ -1,3 +1,17 @@\n+2009-04-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* einfo.adb (OK_To_Rename): New flag\n+\n+\t* einfo.ads (OK_To_Rename): New flag\n+\n+\t* exp_ch3.adb (Expand_N_Object_Declaration): Rewrite as renames if\n+\tOK_To_Rename set.\n+\n+\t* exp_ch4.adb (Expand_Concatenate): Mark temp variable OK_To_Rename\n+\n+\t* sem_ch7.adb (Uninstall_Declarations): Allow for renames from\n+\tOK_To_Rename.\n+\n 2009-04-24  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj-proc.adb, make.adb, mlib-prj.adb, prj.adb, prj.ads, makeutl.adb,"}, {"sha": "3791792f1ee3f1b079a50e733a1c60fda12f0806", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1f453b76449578cac4b2c09fb574d85550e94ab/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1f453b76449578cac4b2c09fb574d85550e94ab/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=d1f453b76449578cac4b2c09fb574d85550e94ab", "patch": "@@ -507,8 +507,7 @@ package body Einfo is\n    --    Is_RACW_Stub_Type               Flag244\n    --    Is_Private_Primitive            Flag245\n    --    Is_Underlying_Record_View       Flag246\n-\n-   --    (unused)                        Flag247\n+   --    OK_To_Rename                    Flag247\n \n    -----------------------\n    -- Local subprograms --\n@@ -2292,6 +2291,12 @@ package body Einfo is\n       return Uint10 (Id);\n    end Normalized_Position_Max;\n \n+   function OK_To_Rename (Id : E) return B is\n+   begin\n+      pragma Assert (Ekind (Id) = E_Variable);\n+      return Flag247 (Id);\n+   end OK_To_Rename;\n+\n    function OK_To_Reorder_Components (Id : E) return B is\n    begin\n       pragma Assert (Is_Record_Type (Id));\n@@ -4777,6 +4782,12 @@ package body Einfo is\n       Set_Uint10 (Id, V);\n    end Set_Normalized_Position_Max;\n \n+   procedure Set_OK_To_Rename (Id : E; V : B := True) is\n+   begin\n+      pragma Assert (Ekind (Id) = E_Variable);\n+      Set_Flag247 (Id, V);\n+   end Set_OK_To_Rename;\n+\n    procedure Set_OK_To_Reorder_Components (Id : E; V : B := True) is\n    begin\n       pragma Assert\n@@ -7008,6 +7019,7 @@ package body Einfo is\n       W (\"No_Strict_Aliasing\",              Flag136 (Id));\n       W (\"Non_Binary_Modulus\",              Flag58  (Id));\n       W (\"Nonzero_Is_True\",                 Flag162 (Id));\n+      W (\"OK_To_Rename\",                    Flag247 (Id));\n       W (\"OK_To_Reorder_Components\",        Flag239 (Id));\n       W (\"Optimize_Alignment_Space\",        Flag241 (Id));\n       W (\"Optimize_Alignment_Time\",         Flag242 (Id));"}, {"sha": "546763ffeae35838af964ffd3f323c4f5996515b", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1f453b76449578cac4b2c09fb574d85550e94ab/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1f453b76449578cac4b2c09fb574d85550e94ab/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=d1f453b76449578cac4b2c09fb574d85550e94ab", "patch": "@@ -3009,6 +3009,23 @@ package Einfo is\n --       Applies to subprograms and subprogram types. Yields the number of\n --       formals as a value of type Pos.\n \n+--    OK_To_Rename (Flag247)\n+--       Present only in entities for variables. If this flag is set, it\n+--       means that if the entity is used as the initial value of an object\n+--       declaration, the object declaration can be safely converted into a\n+--       renaming to avoid an extra copy. This is set for variables which are\n+--       generated by the expander to hold the result of evaluating some\n+--       expression. Most notably, the local variables used to store the result\n+--       of concatenations are so marked (see Exp_Ch4.Expand_Concatenate). It\n+--       is only worth setting this flag for composites, since for primitive\n+--       types, it is cheaper to do the copy.\n+\n+--    OK_To_Reorder_Components (Flag239) [base type only]\n+--       Present in record types. Set if the back end is permitted to reorder\n+--       the components. If not set, the record must be layed out in the order\n+--       in which the components are declared textually. Currently this flag\n+--       can only be set by debug switches.\n+\n --    Optimize_Alignment_Space (Flag241)\n --       A flag present in type, subtype, variable, and constant entities. This\n --       flag records that the type or object is to be layed out in a manner\n@@ -3032,12 +3049,6 @@ package Einfo is\n --       points to the original array type for which this is the packed\n --       array implementation type.\n \n---    OK_To_Reorder_Components (Flag239) [base type only]\n---       Present in record types. Set if the back end is permitted to reorder\n---       the components. If not set, the record must be layed out in the order\n---       in which the components are declared textually. Currently this flag\n---       can only be set by debug switches.\n-\n --    Original_Record_Component (Node22)\n --       Present in components, including discriminants. The usage depends\n --       on whether the record is a base type and whether it is tagged.\n@@ -5397,6 +5408,7 @@ package Einfo is\n    --    Is_True_Constant                    (Flag163)\n    --    Is_Volatile                         (Flag16)\n    --    Is_Return_Object                    (Flag209)\n+   --    OK_To_Rename                        (Flag247)\n    --    Optimize_Alignment_Space            (Flag241)\n    --    Optimize_Alignment_Time             (Flag242)\n    --    Treat_As_Volatile                   (Flag41)\n@@ -5927,6 +5939,7 @@ package Einfo is\n    function Normalized_First_Bit                (Id : E) return U;\n    function Normalized_Position                 (Id : E) return U;\n    function Normalized_Position_Max             (Id : E) return U;\n+   function OK_To_Rename                        (Id : E) return B;\n    function OK_To_Reorder_Components            (Id : E) return B;\n    function Optimize_Alignment_Space            (Id : E) return B;\n    function Optimize_Alignment_Time             (Id : E) return B;\n@@ -6480,6 +6493,7 @@ package Einfo is\n    procedure Set_Normalized_First_Bit            (Id : E; V : U);\n    procedure Set_Normalized_Position             (Id : E; V : U);\n    procedure Set_Normalized_Position_Max         (Id : E; V : U);\n+   procedure Set_OK_To_Rename                    (Id : E; V : B := True);\n    procedure Set_OK_To_Reorder_Components        (Id : E; V : B := True);\n    procedure Set_Optimize_Alignment_Space        (Id : E; V : B := True);\n    procedure Set_Optimize_Alignment_Time         (Id : E; V : B := True);\n@@ -7173,6 +7187,7 @@ package Einfo is\n    pragma Inline (Normalized_First_Bit);\n    pragma Inline (Normalized_Position);\n    pragma Inline (Normalized_Position_Max);\n+   pragma Inline (OK_To_Rename);\n    pragma Inline (OK_To_Reorder_Components);\n    pragma Inline (Optimize_Alignment_Space);\n    pragma Inline (Optimize_Alignment_Time);\n@@ -7562,6 +7577,7 @@ package Einfo is\n    pragma Inline (Set_Normalized_Position);\n    pragma Inline (Set_Normalized_Position_Max);\n    pragma Inline (Set_OK_To_Reorder_Components);\n+   pragma Inline (Set_OK_To_Rename);\n    pragma Inline (Set_Optimize_Alignment_Space);\n    pragma Inline (Set_Optimize_Alignment_Time);\n    pragma Inline (Set_Original_Array_Type);"}, {"sha": "8ffb6e0cead8e36e440c3b5394ba7fe2f1408428", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1f453b76449578cac4b2c09fb574d85550e94ab/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1f453b76449578cac4b2c09fb574d85550e94ab/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=d1f453b76449578cac4b2c09fb574d85550e94ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -4688,6 +4688,40 @@ package body Exp_Ch3 is\n                Insert_After_And_Analyze (Init_After, Stat);\n             end;\n          end if;\n+\n+         --  Final transformation, if the initializing expression is an entity\n+         --  for a variable with OK_To_Rename set, then we transform:\n+\n+         --     X : typ := expr;\n+\n+         --  into\n+\n+         --     X : typ renames expr\n+\n+         --  provided that X is not aliased. The aliased case has to be\n+         --  excluded in general because expr will not be aliased in general.\n+\n+         if not Aliased_Present (N)\n+           and then Is_Entity_Name (Expr_Q)\n+           and then Ekind (Entity (Expr_Q)) = E_Variable\n+           and then OK_To_Rename (Entity (Expr_Q))\n+           and then Is_Entity_Name (Object_Definition (N))\n+         then\n+            Rewrite (N,\n+              Make_Object_Renaming_Declaration (Loc,\n+                Defining_Identifier => Defining_Identifier (N),\n+                Subtype_Mark        => Object_Definition (N),\n+                Name                => Expr_Q));\n+\n+            --  We do not analyze this renaming declaration, because all its\n+            --  components have already been analyzed, and if we were to go\n+            --  ahead and analyze it, we would in effect be trying to generate\n+            --  another declaration of X, which won't do!\n+\n+            Set_Renamed_Object (Defining_Identifier (N), Expr_Q);\n+            Set_Analyzed (N);\n+         end if;\n+\n       end if;\n \n    exception"}, {"sha": "5a7d713eaf57ecb0b7a1e1f0de40ebfba1f86855", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1f453b76449578cac4b2c09fb574d85550e94ab/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1f453b76449578cac4b2c09fb574d85550e94ab/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=d1f453b76449578cac4b2c09fb574d85550e94ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2805,6 +2805,12 @@ package body Exp_Ch4 is\n                       High_Bound => High_Bound))))),\n         Suppress => All_Checks);\n \n+      --  If the result of the concatenation appears as the initializing\n+      --  expression of an object declaration, we can just rename the\n+      --  result, rather than copying it.\n+\n+      Set_OK_To_Rename (Ent);\n+\n       --  Catch the static out of range case now\n \n       if Raises_Constraint_Error (High_Bound) then"}, {"sha": "c3a1fb39713a84db4221f10ca9135f35f7797159", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1f453b76449578cac4b2c09fb574d85550e94ab/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1f453b76449578cac4b2c09fb574d85550e94ab/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=d1f453b76449578cac4b2c09fb574d85550e94ab", "patch": "@@ -2137,13 +2137,38 @@ package body Sem_Ch7 is\n                  (\"missing full declaration for private extension\", Id);\n             end if;\n \n+         --  Case of constant, check for deferred constant declaration with\n+         --  no full view. Likely just a matter of a missing expression, or\n+         --  accidental use of the keyword constant.\n+\n          elsif Ekind (Id) = E_Constant\n+\n+           --  OK if constant value present\n+\n            and then No (Constant_Value (Id))\n+\n+           --  OK if full view present\n+\n            and then No (Full_View (Id))\n+\n+           --  OK if imported, since that provides the completion\n+\n            and then not Is_Imported (Id)\n-           and then (Nkind (Parent (Id)) /= N_Object_Declaration\n-                      or else not No_Initialization (Parent (Id)))\n+\n+           --  OK if object declaration replaced by renaming declaration as\n+           --  a result of OK_To_Rename processing (e.g. for concatenation)\n+\n+           and then Nkind (Parent (Id)) /= N_Object_Renaming_Declaration\n+\n+           --  OK if object declaration with the No_Initialization flag set\n+\n+           and then not (Nkind (Parent (Id)) = N_Object_Declaration\n+                           and then No_Initialization (Parent (Id)))\n          then\n+            --  If no private declaration is present, we assume the user did\n+            --  not intend a deferred constant declaration and the problem\n+            --  is simply that the initializing expression is missing.\n+\n             if not Has_Private_Declaration (Etype (Id)) then\n \n                --  We assume that the user did not intend a deferred constant\n@@ -2159,6 +2184,9 @@ package body Sem_Ch7 is\n                     Parent (Id));\n                end if;\n \n+            --  Otherwise if a private declaration is present, then we are\n+            --  missing the full declaration for the deferred constant.\n+\n             else\n                Error_Msg_N\n                   (\"missing full declaration for deferred constant (RM 7.4)\","}]}