{"sha": "f4f3b9d396227387fbf6ad25e49dd886aa13321f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRmM2I5ZDM5NjIyNzM4N2ZiZjZhZDI1ZTQ5ZGQ4ODZhYTEzMzIxZg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-02-01T14:29:28Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-02-01T14:29:28Z"}, "message": "compiler: Permit a general expression in case x := <-c.\n\nFrom-SVN: r183802", "tree": {"sha": "12f2097fd1db27f5eb51d087f9e43c82120bf5cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12f2097fd1db27f5eb51d087f9e43c82120bf5cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4f3b9d396227387fbf6ad25e49dd886aa13321f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f3b9d396227387fbf6ad25e49dd886aa13321f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4f3b9d396227387fbf6ad25e49dd886aa13321f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f3b9d396227387fbf6ad25e49dd886aa13321f/comments", "author": null, "committer": null, "parents": [{"sha": "c2453253e725d72661385827a0d1e67b31f31c6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2453253e725d72661385827a0d1e67b31f31c6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2453253e725d72661385827a0d1e67b31f31c6a"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "1359f4cca1836b4329b82123af6449de77dbc346", "filename": "gcc/go/gofrontend/parse.cc", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f3b9d396227387fbf6ad25e49dd886aa13321f/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f3b9d396227387fbf6ad25e49dd886aa13321f/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.cc?ref=f4f3b9d396227387fbf6ad25e49dd886aa13321f", "patch": "@@ -4640,9 +4640,14 @@ Parse::send_or_recv_stmt(bool* is_send, Expression** channel, Expression** val,\n       if (token->is_op(OPERATOR_COLONEQ))\n \t{\n \t  // case rv := <-c:\n-\t  if (!this->advance_token()->is_op(OPERATOR_CHANOP))\n+\t  this->advance_token();\n+\t  Expression* e = this->expression(PRECEDENCE_NORMAL, false, false,\n+\t\t\t\t\t   NULL);\n+\t  Receive_expression* re = e->receive_expression();\n+\t  if (re == NULL)\n \t    {\n-\t      error_at(this->location(), \"expected %<<-%>\");\n+\t      if (!e->is_error_expression())\n+\t\terror_at(this->location(), \"expected receive expression\");\n \t      return false;\n \t    }\n \t  if (recv_var == \"_\")\n@@ -4653,8 +4658,7 @@ Parse::send_or_recv_stmt(bool* is_send, Expression** channel, Expression** val,\n \t    }\n \t  *is_send = false;\n \t  *varname = gogo->pack_hidden_name(recv_var, is_rv_exported);\n-\t  this->advance_token();\n-\t  *channel = this->expression(PRECEDENCE_NORMAL, false, true, NULL);\n+\t  *channel = re->channel();\n \t  return true;\n \t}\n       else if (token->is_op(OPERATOR_COMMA))\n@@ -4671,9 +4675,15 @@ Parse::send_or_recv_stmt(bool* is_send, Expression** channel, Expression** val,\n \t      if (token->is_op(OPERATOR_COLONEQ))\n \t\t{\n \t\t  // case rv, rc := <-c:\n-\t\t  if (!this->advance_token()->is_op(OPERATOR_CHANOP))\n+\t\t  this->advance_token();\n+\t\t  Expression* e = this->expression(PRECEDENCE_NORMAL, false,\n+\t\t\t\t\t\t   false, NULL);\n+\t\t  Receive_expression* re = e->receive_expression();\n+\t\t  if (re == NULL)\n \t\t    {\n-\t\t      error_at(this->location(), \"expected %<<-%>\");\n+\t\t      if (!e->is_error_expression())\n+\t\t\terror_at(this->location(),\n+\t\t\t\t \"expected receive expression\");\n \t\t      return false;\n \t\t    }\n \t\t  if (recv_var == \"_\" && recv_closed == \"_\")\n@@ -4689,9 +4699,7 @@ Parse::send_or_recv_stmt(bool* is_send, Expression** channel, Expression** val,\n \t\t  if (recv_closed != \"_\")\n \t\t    *closedname = gogo->pack_hidden_name(recv_closed,\n \t\t\t\t\t\t\t is_rc_exported);\n-\t\t  this->advance_token();\n-\t\t  *channel = this->expression(PRECEDENCE_NORMAL, false, true,\n-\t\t\t\t\t      NULL);\n+\t\t  *channel = re->channel();\n \t\t  return true;\n \t\t}\n "}]}