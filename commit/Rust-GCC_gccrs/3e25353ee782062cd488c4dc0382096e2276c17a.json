{"sha": "3e25353ee782062cd488c4dc0382096e2276c17a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UyNTM1M2VlNzgyMDYyY2Q0ODhjNGRjMDM4MjA5NmUyMjc2YzE3YQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2002-12-10T16:35:37Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2002-12-10T16:35:37Z"}, "message": "cse.c (cse_insn): Don't cse past a basic block boundary.\n\n2002-12-10  Andrew Haley  <aph@redhat.com>\n\n\t* cse.c (cse_insn): Don't cse past a basic block boundary.\n\nFrom-SVN: r60000", "tree": {"sha": "d3256387303f49f996553760d5175845fdb61ac3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3256387303f49f996553760d5175845fdb61ac3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e25353ee782062cd488c4dc0382096e2276c17a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e25353ee782062cd488c4dc0382096e2276c17a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e25353ee782062cd488c4dc0382096e2276c17a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e25353ee782062cd488c4dc0382096e2276c17a/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4fe1edca4d160e9161fe232dbfe74dd65b80edfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fe1edca4d160e9161fe232dbfe74dd65b80edfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fe1edca4d160e9161fe232dbfe74dd65b80edfe"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "d3ed606e61d2853919031438172b3802b3b87b96", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e25353ee782062cd488c4dc0382096e2276c17a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e25353ee782062cd488c4dc0382096e2276c17a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e25353ee782062cd488c4dc0382096e2276c17a", "patch": "@@ -1,3 +1,7 @@\n+2002-12-10  Andrew Haley  <aph@redhat.com>\n+\n+\t* cse.c (cse_insn): Don't cse past a basic block boundary.\n+\n 2002-12-10  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/linux.h (LIB_SPEC): If -pthread, add -lpthread even if"}, {"sha": "1d606b60c1302e6b52dd890d40ece90815b2cf74", "filename": "gcc/cse.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e25353ee782062cd488c4dc0382096e2276c17a/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e25353ee782062cd488c4dc0382096e2276c17a/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=3e25353ee782062cd488c4dc0382096e2276c17a", "patch": "@@ -6316,8 +6316,16 @@ cse_insn (insn, libcall_insn)\n       if ((src_ent->first_reg == REGNO (SET_DEST (sets[0].rtl)))\n \t  && ! find_reg_note (insn, REG_RETVAL, NULL_RTX))\n \t{\n-\t  rtx prev = prev_nonnote_insn (insn);\n-\n+\t  rtx prev = insn;\n+\t  /* Scan for the previous nonnote insn, but stop at a basic\n+\t     block boundary.  */\n+\t  do\n+\t    {\n+\t      prev = PREV_INSN (prev);\n+\t    }\n+\t  while (prev && GET_CODE (prev) == NOTE\n+\t\t && NOTE_LINE_NUMBER (prev) != NOTE_INSN_BASIC_BLOCK);\n+\t    \n \t  /* Do not swap the registers around if the previous instruction\n \t     attaches a REG_EQUIV note to REG1.\n "}]}