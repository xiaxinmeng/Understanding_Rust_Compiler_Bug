{"sha": "afb2d80bc57bddd52bb04869861bf40503a3e89d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZiMmQ4MGJjNTdiZGRkNTJiYjA0ODY5ODYxYmY0MDUwM2EzZTg5ZA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-07-17T14:07:53Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-07-17T14:07:53Z"}, "message": "mkoffload.c (process): Constify target data.\n\n\tgcc/\n\t* config/nvptx/mkoffload.c (process): Constify target data.\n\t* config/i386/intelmic-mkoffload.c (generate_target_descr_file):\n\tConstify target data.\n\t(generate_target_offloadend_file): Likewise.\n\n\tlibgomp/\n\t* libgomp.h (gomp_device_descr): Constify target data arguments.\n\t* target.c (struct offload_image_descr): Constify target_data.\n\t(gomp_offload_image_to_device): Likewise.\n\t(GOMP_offload_register): Likewise.\n\t(GOMP_offload_unrefister): Likewise.\n\t* plugin/plugin-host.c (GOMP_OFFLOAD_load_image,\n\tGOMP_OFFLOAD_unload_image): Constify target data.\n\t* plugin/plugin-nvptx.c (struct ptx_image_data): Constify target data.\n\t(GOMP_OFFLOAD_load_image, GOMP_OFFLOAD_unload_image): Likewise.\n\n\tliboffloadmic/\n\t* plugin/libgomp-plugin-intelmic.cpp (ImgDevAddrMap): Constify.\n\t(offload_image, GOMP_OFFLOAD_load_image,\n\tOMP_OFFLOAD_unload_image): Constify target data.\n\nFrom-SVN: r225936", "tree": {"sha": "3a591547ebc3f82173daf445721700e8d3d79d4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a591547ebc3f82173daf445721700e8d3d79d4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afb2d80bc57bddd52bb04869861bf40503a3e89d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afb2d80bc57bddd52bb04869861bf40503a3e89d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afb2d80bc57bddd52bb04869861bf40503a3e89d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afb2d80bc57bddd52bb04869861bf40503a3e89d/comments", "author": null, "committer": null, "parents": [{"sha": "996d027a36c646fbb0098e96c83dbb4c0ea5133d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/996d027a36c646fbb0098e96c83dbb4c0ea5133d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/996d027a36c646fbb0098e96c83dbb4c0ea5133d"}], "stats": {"total": 91, "additions": 60, "deletions": 31}, "files": [{"sha": "d36d6b57b7ba817a5fdbecec08b8a4b30ae3ee99", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb2d80bc57bddd52bb04869861bf40503a3e89d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb2d80bc57bddd52bb04869861bf40503a3e89d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=afb2d80bc57bddd52bb04869861bf40503a3e89d", "patch": "@@ -1,3 +1,10 @@\n+2015-07-17  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* config/nvptx/mkoffload.c (process): Constify target data.\n+\t* config/i386/intelmic-mkoffload.c (generate_target_descr_file):\n+\tConstify target data.\n+\t(generate_target_offloadend_file): Likewise.\n+\n 2015-07-17  Yuri Rumyantsev  <ysrumyan@gmail.com>\n \n \t* tree-vect-loop-manip.c (rename_variables_in_bb): Add argument"}, {"sha": "a3b0a5cc1ace30e8234810566040ddf4ebc7f372", "filename": "gcc/config/i386/intelmic-mkoffload.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb2d80bc57bddd52bb04869861bf40503a3e89d/gcc%2Fconfig%2Fi386%2Fintelmic-mkoffload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb2d80bc57bddd52bb04869861bf40503a3e89d/gcc%2Fconfig%2Fi386%2Fintelmic-mkoffload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fintelmic-mkoffload.c?ref=afb2d80bc57bddd52bb04869861bf40503a3e89d", "patch": "@@ -241,18 +241,18 @@ generate_target_descr_file (const char *target_compiler)\n     fatal_error (input_location, \"cannot open '%s'\", src_filename);\n \n   fprintf (src_file,\n-\t   \"extern void *__offload_funcs_end[];\\n\"\n-\t   \"extern void *__offload_vars_end[];\\n\\n\"\n+\t   \"extern const void *const __offload_funcs_end[];\\n\"\n+\t   \"extern const void *const __offload_vars_end[];\\n\\n\"\n \n-\t   \"void *__offload_func_table[0]\\n\"\n+\t   \"const void *const __offload_func_table[0]\\n\"\n \t   \"__attribute__ ((__used__, visibility (\\\"hidden\\\"),\\n\"\n \t   \"section (\\\".gnu.offload_funcs\\\"))) = { };\\n\\n\"\n \n-\t   \"void *__offload_var_table[0]\\n\"\n+\t   \"const void *const __offload_var_table[0]\\n\"\n \t   \"__attribute__ ((__used__, visibility (\\\"hidden\\\"),\\n\"\n \t   \"section (\\\".gnu.offload_vars\\\"))) = { };\\n\\n\"\n \n-\t   \"void *__OFFLOAD_TARGET_TABLE__[]\\n\"\n+\t   \"const void *const __OFFLOAD_TARGET_TABLE__[]\\n\"\n \t   \"__attribute__ ((__used__, visibility (\\\"hidden\\\"))) = {\\n\"\n \t   \"  &__offload_func_table, &__offload_funcs_end,\\n\"\n \t   \"  &__offload_var_table, &__offload_vars_end\\n\"\n@@ -301,11 +301,11 @@ generate_target_offloadend_file (const char *target_compiler)\n     fatal_error (input_location, \"cannot open '%s'\", src_filename);\n \n   fprintf (src_file,\n-\t   \"void *__offload_funcs_end[0]\\n\"\n+\t   \"const void *const __offload_funcs_end[0]\\n\"\n \t   \"__attribute__ ((__used__, visibility (\\\"hidden\\\"),\\n\"\n \t   \"section (\\\".gnu.offload_funcs\\\"))) = { };\\n\\n\"\n \n-\t   \"void *__offload_vars_end[0]\\n\"\n+\t   \"const void *const __offload_vars_end[0]\\n\"\n \t   \"__attribute__ ((__used__, visibility (\\\"hidden\\\"),\\n\"\n \t   \"section (\\\".gnu.offload_vars\\\"))) = { };\\n\");\n   fclose (src_file);\n@@ -339,22 +339,22 @@ generate_host_descr_file (const char *host_compiler)\n \n   fprintf (src_file,\n \t   \"extern void *__OFFLOAD_TABLE__;\\n\"\n-\t   \"extern void *__offload_image_intelmic_start;\\n\"\n-\t   \"extern void *__offload_image_intelmic_end;\\n\\n\"\n+\t   \"extern const void *const __offload_image_intelmic_start;\\n\"\n+\t   \"extern const void *const __offload_image_intelmic_end;\\n\\n\"\n \n-\t   \"static const void *__offload_target_data[] = {\\n\"\n+\t   \"static const void *const __offload_target_data[] = {\\n\"\n \t   \"  &__offload_image_intelmic_start, &__offload_image_intelmic_end\\n\"\n \t   \"};\\n\\n\");\n \n   fprintf (src_file,\n \t   \"#ifdef __cplusplus\\n\"\n \t   \"extern \\\"C\\\"\\n\"\n \t   \"#endif\\n\"\n-\t   \"void GOMP_offload_register (void *, int, void *);\\n\"\n+\t   \"void GOMP_offload_register (void *, int, const void *);\\n\"\n \t   \"#ifdef __cplusplus\\n\"\n \t   \"extern \\\"C\\\"\\n\"\n \t   \"#endif\\n\"\n-\t   \"void GOMP_offload_unregister (void *, int, void *);\\n\\n\"\n+\t   \"void GOMP_offload_unregister (void *, int, const void *);\\n\\n\"\n \n \t   \"__attribute__((constructor))\\n\"\n \t   \"static void\\n\""}, {"sha": "52f8bd911449bd23d958234404c33a9312fa4292", "filename": "gcc/config/nvptx/mkoffload.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb2d80bc57bddd52bb04869861bf40503a3e89d/gcc%2Fconfig%2Fnvptx%2Fmkoffload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb2d80bc57bddd52bb04869861bf40503a3e89d/gcc%2Fconfig%2Fnvptx%2Fmkoffload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fmkoffload.c?ref=afb2d80bc57bddd52bb04869861bf40503a3e89d", "patch": "@@ -863,7 +863,7 @@ process (FILE *in, FILE *out)\n   fprintf (out, \"};\\n\\n\");\n \n   fprintf (out,\n-\t   \"static struct nvptx_tdata {\\n\"\n+\t   \"static const struct nvptx_tdata {\\n\"\n \t   \"  const char *ptx_src;\\n\"\n \t   \"  const char *const *var_names;\\n\"\n \t   \"  __SIZE_TYPE__ var_num;\\n\"\n@@ -880,7 +880,8 @@ process (FILE *in, FILE *out)\n   fprintf (out, \"#ifdef __cplusplus\\n\"\n \t   \"extern \\\"C\\\" {\\n\"\n \t   \"#endif\\n\");\n-  fprintf (out, \"extern void GOMP_offload_register (void *, int, void *);\\n\");\n+  fprintf (out, \"extern void GOMP_offload_register\"\n+\t   \" (void *, int, const void *);\\n\");\n   fprintf (out, \"#ifdef __cplusplus\\n\"\n \t   \"}\\n\"\n \t   \"#endif\\n\");"}, {"sha": "129e78b7df9405b256d54b9a58d0831768765c4e", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb2d80bc57bddd52bb04869861bf40503a3e89d/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb2d80bc57bddd52bb04869861bf40503a3e89d/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=afb2d80bc57bddd52bb04869861bf40503a3e89d", "patch": "@@ -1,3 +1,15 @@\n+2015-07-17  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* libgomp.h (gomp_device_descr): Constify target data arguments.\n+\t* target.c (struct offload_image_descr): Constify target_data.\n+\t(gomp_offload_image_to_device): Likewise.\n+\t(GOMP_offload_register): Likewise.\n+\t(GOMP_offload_unrefister): Likewise.\n+\t* plugin/plugin-host.c (GOMP_OFFLOAD_load_image,\n+\tGOMP_OFFLOAD_unload_image): Constify target data.\n+\t* plugin/plugin-nvptx.c (struct ptx_image_data): Constify target data.\n+\t(GOMP_OFFLOAD_load_image, GOMP_OFFLOAD_unload_image): Likewise.\n+\n 2015-07-16  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* plugin/plugin-nvptx.c (link_ptx): Constify string argument."}, {"sha": "420ac83e9e74a8497f291b03236d99f8431416c2", "filename": "libgomp/libgomp.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb2d80bc57bddd52bb04869861bf40503a3e89d/libgomp%2Flibgomp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb2d80bc57bddd52bb04869861bf40503a3e89d/libgomp%2Flibgomp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.h?ref=afb2d80bc57bddd52bb04869861bf40503a3e89d", "patch": "@@ -748,8 +748,8 @@ struct gomp_device_descr\n   int (*get_num_devices_func) (void);\n   void (*init_device_func) (int);\n   void (*fini_device_func) (int);\n-  int (*load_image_func) (int, void *, struct addr_pair **);\n-  void (*unload_image_func) (int, void *);\n+  int (*load_image_func) (int, const void *, struct addr_pair **);\n+  void (*unload_image_func) (int, const void *);\n   void *(*alloc_func) (int, size_t);\n   void (*free_func) (int, void *);\n   void *(*dev2host_func) (int, void *, const void *, size_t);"}, {"sha": "da3c5f4cdb74b1243b4d35b3b5fc0fbfafc6a7e2", "filename": "libgomp/plugin/plugin-host.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb2d80bc57bddd52bb04869861bf40503a3e89d/libgomp%2Fplugin%2Fplugin-host.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb2d80bc57bddd52bb04869861bf40503a3e89d/libgomp%2Fplugin%2Fplugin-host.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-host.c?ref=afb2d80bc57bddd52bb04869861bf40503a3e89d", "patch": "@@ -111,15 +111,15 @@ GOMP_OFFLOAD_fini_device (int n __attribute__ ((unused)))\n \n STATIC int\n GOMP_OFFLOAD_load_image (int n __attribute__ ((unused)),\n-\t\t\t void *i __attribute__ ((unused)),\n+\t\t\t const void *t __attribute__ ((unused)),\n \t\t\t struct addr_pair **r __attribute__ ((unused)))\n {\n   return 0;\n }\n \n STATIC void\n GOMP_OFFLOAD_unload_image (int n __attribute__ ((unused)),\n-\t\t\t   void *i __attribute__ ((unused)))\n+\t\t\t   const void *t __attribute__ ((unused)))\n {\n }\n "}, {"sha": "ba6bf0111f38853818c01c2e17716c4b06500aac", "filename": "libgomp/plugin/plugin-nvptx.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb2d80bc57bddd52bb04869861bf40503a3e89d/libgomp%2Fplugin%2Fplugin-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb2d80bc57bddd52bb04869861bf40503a3e89d/libgomp%2Fplugin%2Fplugin-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-nvptx.c?ref=afb2d80bc57bddd52bb04869861bf40503a3e89d", "patch": "@@ -334,7 +334,7 @@ struct ptx_event\n \n struct ptx_image_data\n {\n-  void *target_data;\n+  const void *target_data;\n   CUmodule module;\n   struct ptx_image_data *next;\n };\n@@ -1633,15 +1633,15 @@ typedef struct nvptx_tdata\n } nvptx_tdata_t;\n \n int\n-GOMP_OFFLOAD_load_image (int ord, void *target_data,\n+GOMP_OFFLOAD_load_image (int ord, const void *target_data,\n \t\t\t struct addr_pair **target_table)\n {\n   CUmodule module;\n   const char *const *fn_names, *const *var_names;\n   unsigned int fn_entries, var_entries, i, j;\n   CUresult r;\n   struct targ_fn_descriptor *targ_fns;\n-  nvptx_tdata_t const *img_header = (nvptx_tdata_t const *) target_data;\n+  const nvptx_tdata_t *img_header = (const nvptx_tdata_t *) target_data;\n   struct ptx_image_data *new_image;\n \n   GOMP_OFFLOAD_init_device (ord);\n@@ -1704,9 +1704,10 @@ GOMP_OFFLOAD_load_image (int ord, void *target_data,\n }\n \n void\n-GOMP_OFFLOAD_unload_image (int tid __attribute__((unused)), void *target_data)\n+GOMP_OFFLOAD_unload_image (int tid __attribute__((unused)),\n+\t\t\t   const void *target_data)\n {\n-  void **img_header = (void **) target_data;\n+  const void *const *img_header = (const void *const *) target_data;\n   struct targ_fn_descriptor *targ_fns\n     = (struct targ_fn_descriptor *) img_header[0];\n   struct ptx_image_data *image, *prev = NULL, *newhd = NULL;"}, {"sha": "b11c4f2fa6c515aa0ffd766857f5a36f2fda5c00", "filename": "libgomp/target.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb2d80bc57bddd52bb04869861bf40503a3e89d/libgomp%2Ftarget.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb2d80bc57bddd52bb04869861bf40503a3e89d/libgomp%2Ftarget.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftarget.c?ref=afb2d80bc57bddd52bb04869861bf40503a3e89d", "patch": "@@ -58,7 +58,7 @@ static gomp_mutex_t register_lock;\n struct offload_image_descr {\n   enum offload_target_type type;\n   void *host_table;\n-  void *target_data;\n+  const void *target_data;\n };\n \n /* Array of descriptors of offload images.  */\n@@ -642,7 +642,7 @@ gomp_update (struct gomp_device_descr *devicep, size_t mapnum, void **hostaddrs,\n \n static void\n gomp_offload_image_to_device (struct gomp_device_descr *devicep,\n-\t\t\t      void *host_table, void *target_data,\n+\t\t\t      void *host_table, const void *target_data,\n \t\t\t      bool is_register_lock)\n {\n   void **host_func_table = ((void ***) host_table)[0];\n@@ -731,7 +731,7 @@ gomp_offload_image_to_device (struct gomp_device_descr *devicep,\n \n void\n GOMP_offload_register (void *host_table, enum offload_target_type target_type,\n-\t\t       void *target_data)\n+\t\t       const void *target_data)\n {\n   int i;\n   gomp_mutex_lock (&register_lock);\n@@ -765,7 +765,7 @@ GOMP_offload_register (void *host_table, enum offload_target_type target_type,\n \n void\n GOMP_offload_unregister (void *host_table, enum offload_target_type target_type,\n-\t\t\t void *target_data)\n+\t\t\t const void *target_data)\n {\n   void **host_func_table = ((void ***) host_table)[0];\n   void **host_funcs_end  = ((void ***) host_table)[1];"}, {"sha": "a641dd39db89d38190651f1d77a1af4155115594", "filename": "liboffloadmic/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb2d80bc57bddd52bb04869861bf40503a3e89d/liboffloadmic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb2d80bc57bddd52bb04869861bf40503a3e89d/liboffloadmic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2FChangeLog?ref=afb2d80bc57bddd52bb04869861bf40503a3e89d", "patch": "@@ -1,3 +1,10 @@\n+2015-07-17  Nathan Sidwell  <nathan@acm.org>\n+\tIlya Verbin <iverbin@gmail.com>\n+\n+\t* plugin/libgomp-plugin-intelmic.cpp (ImgDevAddrMap): Constify.\n+\t(offload_image, GOMP_OFFLOAD_load_image,\n+\tOMP_OFFLOAD_unload_image): Constify target data.\n+\n 2015-07-08  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* plugin/Makefile.am (main_target_image.h): Change type of data"}, {"sha": "a6e5e1c775698edbfc190fcea5002c215ec903c2", "filename": "liboffloadmic/plugin/libgomp-plugin-intelmic.cpp", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afb2d80bc57bddd52bb04869861bf40503a3e89d/liboffloadmic%2Fplugin%2Flibgomp-plugin-intelmic.cpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afb2d80bc57bddd52bb04869861bf40503a3e89d/liboffloadmic%2Fplugin%2Flibgomp-plugin-intelmic.cpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2Fplugin%2Flibgomp-plugin-intelmic.cpp?ref=afb2d80bc57bddd52bb04869861bf40503a3e89d", "patch": "@@ -61,7 +61,7 @@ typedef std::vector<addr_pair> AddrVect;\n typedef std::vector<AddrVect> DevAddrVect;\n \n /* Addresses for all images and all devices.  */\n-typedef std::map<void *, DevAddrVect> ImgDevAddrMap;\n+typedef std::map<const void *, DevAddrVect> ImgDevAddrMap;\n \n \n /* Total number of available devices.  */\n@@ -255,7 +255,7 @@ get_target_table (int device, int &num_funcs, int &num_vars, void **&table)\n    corresponding target addresses.  */\n \n static void\n-offload_image (void *target_image)\n+offload_image (const void *target_image)\n {\n   struct TargetImage {\n     int64_t size;\n@@ -328,7 +328,8 @@ offload_image (void *target_image)\n }\n \n extern \"C\" int\n-GOMP_OFFLOAD_load_image (int device, void *target_image, addr_pair **result)\n+GOMP_OFFLOAD_load_image (int device, const void *target_image,\n+\t\t\t addr_pair **result)\n {\n   TRACE (\"(device = %d, target_image = %p)\", device, target_image);\n \n@@ -352,7 +353,7 @@ GOMP_OFFLOAD_load_image (int device, void *target_image, addr_pair **result)\n }\n \n extern \"C\" void\n-GOMP_OFFLOAD_unload_image (int device, void *target_image)\n+GOMP_OFFLOAD_unload_image (int device, const void *target_image)\n {\n   TRACE (\"(device = %d, target_image = %p)\", device, target_image);\n "}]}