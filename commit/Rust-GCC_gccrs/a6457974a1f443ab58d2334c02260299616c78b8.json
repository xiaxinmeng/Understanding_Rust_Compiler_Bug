{"sha": "a6457974a1f443ab58d2334c02260299616c78b8", "node_id": "C_kwDOANBUbNoAKGE2NDU3OTc0YTFmNDQzYWI1OGQyMzM0YzAyMjYwMjk5NjE2Yzc4Yjg", "commit": {"author": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2023-03-09T13:41:09Z"}, "committer": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2023-03-09T13:45:04Z"}, "message": "LRA: For clobbered regs use operand mode instead of the biggest mode\n\nLRA is too conservative in calculation of conflicts with clobbered regs by\nusing the biggest access mode.  This results in failure of possible reg\ncoalescing and worse code.  This patch solves the problem.\n\n        PR rtl-optimization/108999\n\ngcc/ChangeLog:\n\n\t* lra-constraints.cc (process_alt_operands): Use operand modes for\n\tclobbered regs instead of the biggest access mode.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/aarch64/pr108999.c: New.", "tree": {"sha": "fedf12457c84e0a14552be2793f694b192961855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fedf12457c84e0a14552be2793f694b192961855"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6457974a1f443ab58d2334c02260299616c78b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6457974a1f443ab58d2334c02260299616c78b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6457974a1f443ab58d2334c02260299616c78b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6457974a1f443ab58d2334c02260299616c78b8/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ace65db9215882b95e2ead1bb0dc8c54c2ea69be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace65db9215882b95e2ead1bb0dc8c54c2ea69be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ace65db9215882b95e2ead1bb0dc8c54c2ea69be"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "c38566a7451d6587b042d23bc9e672ca49f82cf6", "filename": "gcc/lra-constraints.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6457974a1f443ab58d2334c02260299616c78b8/gcc%2Flra-constraints.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6457974a1f443ab58d2334c02260299616c78b8/gcc%2Flra-constraints.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.cc?ref=a6457974a1f443ab58d2334c02260299616c78b8", "patch": "@@ -3108,7 +3108,8 @@ process_alt_operands (int only_alternative)\n \t  lra_assert (operand_reg[i] != NULL_RTX);\n \t  clobbered_hard_regno = hard_regno[i];\n \t  CLEAR_HARD_REG_SET (temp_set);\n-\t  add_to_hard_reg_set (&temp_set, biggest_mode[i], clobbered_hard_regno);\n+\t  add_to_hard_reg_set (&temp_set, GET_MODE (*curr_id->operand_loc[i]),\n+\t\t\t       clobbered_hard_regno);\n \t  first_conflict_j = last_conflict_j = -1;\n \t  for (j = 0; j < n_operands; j++)\n \t    if (j == i"}, {"sha": "a34db85be832081629b83cd25d98b56b9380ae9a", "filename": "gcc/testsuite/gcc.target/aarch64/pr108999.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6457974a1f443ab58d2334c02260299616c78b8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr108999.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6457974a1f443ab58d2334c02260299616c78b8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr108999.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr108999.c?ref=a6457974a1f443ab58d2334c02260299616c78b8", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=armv8.2-a+sve\" } */\n+#include <arm_sve.h>\n+\n+void subreg_coalesce5 (\n+    svbool_t pg, int64_t* base, int n,\n+    int64_t *in1, int64_t *in2, int64_t*out\n+)\n+{\n+    svint64x2_t result = svld2_s64 (pg, base);\n+\n+    for (int i = 0; i < n; i += 1) {\n+        svint64_t v18 = svld1_s64(pg, in1 + i);\n+        svint64_t v19 = svld1_s64(pg, in2 + i);\n+        result.__val[0] = svmad_s64_z(pg, v18, v19, result.__val[0]);\n+        result.__val[1] = svmad_s64_z(pg, v18, v19, result.__val[1]);\n+    }\n+    svst2_s64(pg, out, result);\n+}\n+\n+/* { dg-final { scan-assembler-not {[ \\t]*mov[ \\t]*z[0-9]+\\.d} } } */"}]}