{"sha": "1c2a3aeee7dce83a9068f741162a6126a808de1d", "node_id": "C_kwDOANBUbNoAKDFjMmEzYWVlZTdkY2U4M2E5MDY4Zjc0MTE2MmE2MTI2YTgwOGRlMWQ", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-03-22T12:31:03Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-03-22T12:39:31Z"}, "message": "i386: update error message format.\n\nUse '%qs' instead of '(%qs)'.\n\n\tPR target/104898\n\ngcc/ChangeLog:\n\n\t* config/i386/i386-options.cc (ix86_option_override_internal):\n\t  Use '%qs' instead of '(%qs)'.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/pr99753.c: Update test.\n\t* gcc.target/i386/spellcheck-options-1.c: Likewise.\n\t* gcc.target/i386/spellcheck-options-2.c: Likewise.\n\t* gcc.target/i386/spellcheck-options-4.c: Likewise.", "tree": {"sha": "faa88fe139b1e346f65ad4821d88603f0a00fd53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faa88fe139b1e346f65ad4821d88603f0a00fd53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c2a3aeee7dce83a9068f741162a6126a808de1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c2a3aeee7dce83a9068f741162a6126a808de1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c2a3aeee7dce83a9068f741162a6126a808de1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c2a3aeee7dce83a9068f741162a6126a808de1d/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6e75a4a353fe36920bac34b66fca4bfb71f7d91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6e75a4a353fe36920bac34b66fca4bfb71f7d91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6e75a4a353fe36920bac34b66fca4bfb71f7d91"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "32cc58a764b37ca99394246ac0844b7fe17e36c1", "filename": "gcc/config/i386/i386-options.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c2a3aeee7dce83a9068f741162a6126a808de1d/gcc%2Fconfig%2Fi386%2Fi386-options.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c2a3aeee7dce83a9068f741162a6126a808de1d/gcc%2Fconfig%2Fi386%2Fi386-options.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-options.cc?ref=1c2a3aeee7dce83a9068f741162a6126a808de1d", "patch": "@@ -2212,8 +2212,8 @@ ix86_option_override_internal (bool main_args_p,\n   if (i == pta_size)\n     {\n       error (main_args_p\n-\t     ? G_(\"bad value (%qs) for %<-march=%> switch\")\n-\t     : G_(\"bad value (%qs) for %<target(\\\"arch=\\\")%> attribute\"),\n+\t     ? G_(\"bad value %qs for %<-march=%> switch\")\n+\t     : G_(\"bad value %qs for %<target(\\\"arch=\\\")%> attribute\"),\n \t     opts->x_ix86_arch_string);\n \n       auto_vec <const char *> candidates;\n@@ -2292,8 +2292,8 @@ ix86_option_override_internal (bool main_args_p,\n   if (ix86_tune_specified && i == pta_size)\n     {\n       error (main_args_p\n-\t     ? G_(\"bad value (%qs) for %<-mtune=%> switch\")\n-\t     : G_(\"bad value (%qs) for %<target(\\\"tune=\\\")%> attribute\"),\n+\t     ? G_(\"bad value %qs for %<-mtune=%> switch\")\n+\t     : G_(\"bad value %qs for %<target(\\\"tune=\\\")%> attribute\"),\n \t     opts->x_ix86_tune_string);\n \n       auto_vec <const char *> candidates;"}, {"sha": "1b000bd56b69b078228f5c31f236cd884b016617", "filename": "gcc/testsuite/gcc.target/i386/pr99753.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c2a3aeee7dce83a9068f741162a6126a808de1d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr99753.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c2a3aeee7dce83a9068f741162a6126a808de1d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr99753.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr99753.c?ref=1c2a3aeee7dce83a9068f741162a6126a808de1d", "patch": "@@ -2,4 +2,4 @@\n \n /* { dg-do compile } */\n /* { dg-options \"-march=amd -m32\" } */\n-/* { dg-error \"bad value .'amd'. for '-march=' switch\"  \"\" { target *-*-* } 0 } */\n+/* { dg-error \"bad value 'amd' for '-march=' switch\"  \"\" { target *-*-* } 0 } */"}, {"sha": "a775545887ec5416a47c9b6e72e6d5fc3bcf1f39", "filename": "gcc/testsuite/gcc.target/i386/spellcheck-options-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c2a3aeee7dce83a9068f741162a6126a808de1d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fspellcheck-options-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c2a3aeee7dce83a9068f741162a6126a808de1d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fspellcheck-options-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fspellcheck-options-1.c?ref=1c2a3aeee7dce83a9068f741162a6126a808de1d", "patch": "@@ -3,5 +3,5 @@\n \n /* { dg-do compile } */\n /* { dg-options \"-march=hasvel\" } */\n-/* { dg-error \"bad value .'hasvel'. for '-march=' switch\"  \"\" { target *-*-* } 0 } */\n+/* { dg-error \"bad value 'hasvel' for '-march=' switch\"  \"\" { target *-*-* } 0 } */\n /* { dg-message \"valid arguments to '-march=' switch are: \\[^\\n\\r]*; did you mean 'haswell'?\"  \"\" { target *-*-* } 0 } */"}, {"sha": "91ddfe2cad255c777c61e31239714caf21fc60a5", "filename": "gcc/testsuite/gcc.target/i386/spellcheck-options-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c2a3aeee7dce83a9068f741162a6126a808de1d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fspellcheck-options-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c2a3aeee7dce83a9068f741162a6126a808de1d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fspellcheck-options-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fspellcheck-options-2.c?ref=1c2a3aeee7dce83a9068f741162a6126a808de1d", "patch": "@@ -3,5 +3,5 @@\n \n /* { dg-do compile } */\n /* { dg-options \"-mtune=hasvel\" } */\n-/* { dg-error \"bad value .'hasvel'. for '-mtune=' switch\"  \"\" { target *-*-* } 0 } */\n+/* { dg-error \"bad value 'hasvel' for '-mtune=' switch\"  \"\" { target *-*-* } 0 } */\n /* { dg-message \"valid arguments to '-mtune=' switch are: \\[^\\n\\r]*; did you mean 'haswell'?\"  \"\" { target *-*-* } 0 } */"}, {"sha": "71804a3d9b88eeb5ec60f0baf2130000166de985", "filename": "gcc/testsuite/gcc.target/i386/spellcheck-options-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c2a3aeee7dce83a9068f741162a6126a808de1d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fspellcheck-options-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c2a3aeee7dce83a9068f741162a6126a808de1d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fspellcheck-options-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fspellcheck-options-4.c?ref=1c2a3aeee7dce83a9068f741162a6126a808de1d", "patch": "@@ -3,5 +3,5 @@\n \n /* { dg-do compile } */\n \n-__attribute__((target (\"arch=hasvel\"))) void foo (void) {} /* { dg-error \"bad value .'hasvel'. for 'target..arch=..' attribute\" } */\n+__attribute__((target (\"arch=hasvel\"))) void foo (void) {} /* { dg-error \"bad value 'hasvel' for 'target..arch=..' attribute\" } */\n /* { dg-message \"valid arguments to 'target..arch=..' attribute are: \\[^\\n\\r]*; did you mean 'haswell'?\"  \"\" { target *-*-* } .-1 } */"}]}