{"sha": "d259ab15761de2d938c24abfba9cdcd2fef91655", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI1OWFiMTU3NjFkZTJkOTM4YzI0YWJmYmE5Y2RjZDJmZWY5MTY1NQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-03-04T07:18:31Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-03-04T07:20:01Z"}, "message": "Fortran: Fix -freal-{4,8}-real* handling [PR99355]\n\nAvoid chain kind conversion for, e.g., -freal-4-real-8 -freal-8-real-10.\nNote that gfc_default_double_kind/gfc_default_double_kind already\nhonors the -freal flags.\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/99355\n\t* decl.c (gfc_match_old_kind_spec, gfc_match_kind_spec): Avoid\n\tredoing kind conversions.\n\t* primary.c (match_real_constant): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/99355\n\t* gfortran.dg/real4-10-real8-10.f90: New test.\n\t* gfortran.dg/real4-10-real8-16.f90: New test.\n\t* gfortran.dg/real4-10-real8-4.f90: New test.\n\t* gfortran.dg/real4-10.f90: New test.\n\t* gfortran.dg/real4-16-real8-10.f90: New test.\n\t* gfortran.dg/real4-16-real8-16.f90: New test.\n\t* gfortran.dg/real4-16-real8-4.f90: New test.\n\t* gfortran.dg/real4-16.f90: New test.\n\t* gfortran.dg/real4-8-real8-10.f90: New test.\n\t* gfortran.dg/real4-8-real8-16.f90: New test.\n\t* gfortran.dg/real4-8-real8-4.f90: New test.\n\t* gfortran.dg/real4-8.f90: New test.\n\t* gfortran.dg/real8-10.f90: New test.\n\t* gfortran.dg/real8-16.f90: New test.\n\t* gfortran.dg/real8-4.f90: New test.", "tree": {"sha": "b7588bb778d9ae68580c5884ea1e8c2cbf128da8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7588bb778d9ae68580c5884ea1e8c2cbf128da8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d259ab15761de2d938c24abfba9cdcd2fef91655", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d259ab15761de2d938c24abfba9cdcd2fef91655", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d259ab15761de2d938c24abfba9cdcd2fef91655", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d259ab15761de2d938c24abfba9cdcd2fef91655/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3641ac70eb0ae9f8983b7ddb1660c92439565de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3641ac70eb0ae9f8983b7ddb1660c92439565de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3641ac70eb0ae9f8983b7ddb1660c92439565de"}], "stats": {"total": 398, "additions": 354, "deletions": 44}, "files": [{"sha": "947e4f868a177827aaf314085dc40792a9f99a6c", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=d259ab15761de2d938c24abfba9cdcd2fef91655", "patch": "@@ -3066,8 +3066,7 @@ gfc_match_old_kind_spec (gfc_typespec *ts)\n \t  if (flag_real4_kind == 16)\n \t    ts->kind = 16;\n \t}\n-\n-      if (ts->kind == 8)\n+      else if (ts->kind == 8)\n \t{\n \t  if (flag_real8_kind == 4)\n \t    ts->kind = 4;\n@@ -3246,8 +3245,7 @@ gfc_match_kind_spec (gfc_typespec *ts, bool kind_expr_only)\n \t  if (flag_real4_kind == 16)\n \t    ts->kind = 16;\n \t}\n-\n-      if (ts->kind == 8)\n+      else if (ts->kind == 8)\n \t{\n \t  if (flag_real8_kind == 4)\n \t    ts->kind = 4;"}, {"sha": "9dd1a86f2750f00aec849ec740cad75b05b34dd9", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=d259ab15761de2d938c24abfba9cdcd2fef91655", "patch": "@@ -676,26 +676,6 @@ match_real_constant (gfc_expr **result, int signflag)\n \t  goto cleanup;\n \t}\n       kind = gfc_default_double_kind;\n-\n-      if (kind == 4)\n-\t{\n-\t  if (flag_real4_kind == 8)\n-\t    kind = 8;\n-\t  if (flag_real4_kind == 10)\n-\t    kind = 10;\n-\t  if (flag_real4_kind == 16)\n-\t    kind = 16;\n-\t}\n-\n-      if (kind == 8)\n-\t{\n-\t  if (flag_real8_kind == 4)\n-\t    kind = 4;\n-\t  if (flag_real8_kind == 10)\n-\t    kind = 10;\n-\t  if (flag_real8_kind == 16)\n-\t    kind = 16;\n-\t}\n       break;\n \n     case 'q':\n@@ -726,26 +706,6 @@ match_real_constant (gfc_expr **result, int signflag)\n       if (kind == -2)\n \tkind = gfc_default_real_kind;\n \n-      if (kind == 4)\n-\t{\n-\t  if (flag_real4_kind == 8)\n-\t    kind = 8;\n-\t  if (flag_real4_kind == 10)\n-\t    kind = 10;\n-\t  if (flag_real4_kind == 16)\n-\t    kind = 16;\n-\t}\n-\n-      if (kind == 8)\n-\t{\n-\t  if (flag_real8_kind == 4)\n-\t    kind = 4;\n-\t  if (flag_real8_kind == 10)\n-\t    kind = 10;\n-\t  if (flag_real8_kind == 16)\n-\t    kind = 16;\n-\t}\n-\n       if (gfc_validate_kind (BT_REAL, kind, true) < 0)\n \t{\n \t  gfc_error (\"Invalid real kind %d at %C\", kind);"}, {"sha": "af4f1b2b4e62e6a45e242ea9810262761e5a15b5", "filename": "gcc/testsuite/gfortran.dg/real4-10-real8-10.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10-real8-10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10-real8-10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10-real8-10.f90?ref=d259ab15761de2d938c24abfba9cdcd2fef91655", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do run { target i?86-*-* x86_64-*-* } }\n+! { dg-additional-options \"-w -freal-4-real-10 -freal-8-real-10\" }\n+!\n+! PR fortran/99355\n+!\n+\n+program test\n+  real :: r1\n+  real*4:: r2\n+  real(4) :: r3\n+  real(selected_real_kind(p=6)) :: r4\n+\n+  double precision :: d1\n+  real*8 :: d2\n+  real(8) :: d3\n+  real(kind(1.d0)) :: d4\n+  real(selected_real_kind(p=15)) :: d5\n+\n+  !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n+  !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n+  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 10)) stop 1\n+  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 10)) stop 2\n+end program test"}, {"sha": "408d3475499a64401f94528bf2ff76cc3f935758", "filename": "gcc/testsuite/gfortran.dg/real4-10-real8-16.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10-real8-16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10-real8-16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10-real8-16.f90?ref=d259ab15761de2d938c24abfba9cdcd2fef91655", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do run { target i?86-*-* x86_64-*-* } }\n+! { dg-additional-options \"-w -freal-4-real-10 -freal-8-real-16\" }\n+! { dg-require-effective-target fortran_real_16 }\n+!\n+! PR fortran/99355\n+!\n+\n+program test\n+  real :: r1\n+  real*4:: r2\n+  real(4) :: r3\n+  real(selected_real_kind(p=6)) :: r4\n+\n+  double precision :: d1\n+  real*8 :: d2\n+  real(8) :: d3\n+  real(kind(1.d0)) :: d4\n+  real(selected_real_kind(p=15)) :: d5\n+\n+  !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n+  !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n+  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 10)) stop 1\n+  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 16)) stop 2\n+end program test"}, {"sha": "7e52cdb0ac1c24f121d73d5a424d0349cc9eeb40", "filename": "gcc/testsuite/gfortran.dg/real4-10-real8-4.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10-real8-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10-real8-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10-real8-4.f90?ref=d259ab15761de2d938c24abfba9cdcd2fef91655", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do run { target i?86-*-* x86_64-*-* } }\n+! { dg-additional-options \"-w -freal-4-real-10 -freal-8-real-4\" }\n+!\n+! PR fortran/99355\n+!\n+\n+program test\n+  real :: r1\n+  real*4:: r2\n+  real(4) :: r3\n+  real(selected_real_kind(p=6)) :: r4\n+\n+  double precision :: d1\n+  real*8 :: d2\n+  real(8) :: d3\n+  real(kind(1.d0)) :: d4 ! << this is ambiguous: kind=8 \u2192 4 \u2192 10 or 8 \u2192 4; thus,excluded below\n+  real(selected_real_kind(p=15)) :: d5\n+\n+  !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n+  !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n+  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 10)) stop 1\n+  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d5)] /= 4)) stop 2\n+end program test"}, {"sha": "44fcd83a002b93819aa540e83b5ae0f6f023dc70", "filename": "gcc/testsuite/gfortran.dg/real4-10.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10.f90?ref=d259ab15761de2d938c24abfba9cdcd2fef91655", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do run { target i?86-*-* x86_64-*-* } }\n+! { dg-additional-options \"-w -freal-4-real-10\" }\n+!\n+! PR fortran/99355\n+!\n+\n+program test\n+  real :: r1\n+  real*4:: r2\n+  real(4) :: r3\n+  real(selected_real_kind(p=6)) :: r4\n+\n+  double precision :: d1\n+  real*8 :: d2\n+  real(8) :: d3\n+  real(kind(1.d0)) :: d4\n+  real(selected_real_kind(p=15)) :: d5\n+\n+  !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n+  !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n+  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 10)) stop 1\n+  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 8)) stop 2\n+end program test"}, {"sha": "d080a1004c07e93b490a9c0c52a9897f6846e9a4", "filename": "gcc/testsuite/gfortran.dg/real4-16-real8-10.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16-real8-10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16-real8-10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16-real8-10.f90?ref=d259ab15761de2d938c24abfba9cdcd2fef91655", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do run { target i?86-*-* x86_64-*-* } }\n+! { dg-additional-options \"-w -freal-4-real-16 -freal-8-real-10\" }\n+! { dg-require-effective-target fortran_real_16 }\n+!\n+! PR fortran/99355\n+!\n+\n+program test\n+  real :: r1\n+  real*4:: r2\n+  real(4) :: r3\n+  real(selected_real_kind(p=6)) :: r4\n+\n+  double precision :: d1\n+  real*8 :: d2\n+  real(8) :: d3\n+  real(kind(1.d0)) :: d4\n+  real(selected_real_kind(p=15)) :: d5\n+\n+  !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n+  !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n+  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 16)) stop 1\n+  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 10)) stop 2\n+end program test"}, {"sha": "d525c6014aa5cbe98b9875531416a91e7f2bc117", "filename": "gcc/testsuite/gfortran.dg/real4-16-real8-16.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16-real8-16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16-real8-16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16-real8-16.f90?ref=d259ab15761de2d938c24abfba9cdcd2fef91655", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do run }\n+! { dg-additional-options \"-w -freal-4-real-16 -freal-8-real-16\" }\n+! { dg-require-effective-target fortran_real_16 }\n+!\n+! PR fortran/99355\n+!\n+\n+program test\n+  real :: r1\n+  real*4:: r2\n+  real(4) :: r3\n+  real(selected_real_kind(p=6)) :: r4\n+\n+  double precision :: d1\n+  real*8 :: d2\n+  real(8) :: d3\n+  real(kind(1.d0)) :: d4\n+  real(selected_real_kind(p=15)) :: d5\n+\n+  !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n+  !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n+  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 16)) stop 1\n+  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 16)) stop 2\n+end program test"}, {"sha": "e508819350e37049989a0c481764ad6059319a81", "filename": "gcc/testsuite/gfortran.dg/real4-16-real8-4.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16-real8-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16-real8-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16-real8-4.f90?ref=d259ab15761de2d938c24abfba9cdcd2fef91655", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do run }\n+! { dg-additional-options \"-w -freal-4-real-16 -freal-8-real-4\" }\n+! { dg-require-effective-target fortran_real_16 }\n+!\n+! PR fortran/99355\n+!\n+\n+program test\n+  real :: r1\n+  real*4:: r2\n+  real(4) :: r3\n+  real(selected_real_kind(p=6)) :: r4\n+\n+  double precision :: d1\n+  real*8 :: d2\n+  real(8) :: d3\n+  real(kind(1.d0)) :: d4 ! << this is ambiguous: kind=8 \u2192 4 \u2192 16 or 8 \u2192 4; thus,excluded below\n+  real(selected_real_kind(p=15)) :: d5\n+\n+  !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n+  !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n+  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 16)) stop 1\n+  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d5)] /= 4)) stop 2\n+end program test"}, {"sha": "5cd2f1f4822e035c4534158e71d5aa5158f69dcc", "filename": "gcc/testsuite/gfortran.dg/real4-16.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16.f90?ref=d259ab15761de2d938c24abfba9cdcd2fef91655", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do run }\n+! { dg-additional-options \"-w -freal-4-real-16\" }\n+! { dg-require-effective-target fortran_real_16 }\n+!\n+! PR fortran/99355\n+!\n+\n+program test\n+  real :: r1\n+  real*4:: r2\n+  real(4) :: r3\n+  real(selected_real_kind(p=6)) :: r4\n+\n+  double precision :: d1\n+  real*8 :: d2\n+  real(8) :: d3\n+  real(kind(1.d0)) :: d4\n+  real(selected_real_kind(p=15)) :: d5\n+\n+  !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n+  !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n+  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 16)) stop 1\n+  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 8)) stop 2\n+end program test"}, {"sha": "742d35248271483ecc72057a70b87455eb6fe46b", "filename": "gcc/testsuite/gfortran.dg/real4-8-real8-10.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8-real8-10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8-real8-10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8-real8-10.f90?ref=d259ab15761de2d938c24abfba9cdcd2fef91655", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do run { target i?86-*-* x86_64-*-* } }\n+! { dg-additional-options \"-w -freal-4-real-8 -freal-8-real-10\" }\n+!\n+! PR fortran/99355\n+!\n+\n+program test\n+  real :: r1\n+  real*4:: r2\n+  real(4) :: r3\n+  real(selected_real_kind(p=6)) :: r4\n+\n+  double precision :: d1\n+  real*8 :: d2\n+  real(8) :: d3\n+  real(kind(1.d0)) :: d4\n+  real(selected_real_kind(p=15)) :: d5\n+\n+  print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n+  print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n+  if (any ([kind(r1), kind(r2), kind(r3), kind(r4)] /= 8)) stop 1\n+  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 10)) stop 2\n+end program test"}, {"sha": "3733c343d2a97bdc13cc633119ba8f87de3b6e17", "filename": "gcc/testsuite/gfortran.dg/real4-8-real8-16.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8-real8-16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8-real8-16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8-real8-16.f90?ref=d259ab15761de2d938c24abfba9cdcd2fef91655", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do run }\n+! { dg-additional-options \"-w -freal-4-real-8 -freal-8-real-16\" }\n+! { dg-require-effective-target fortran_real_16 }\n+!\n+! PR fortran/99355\n+!\n+\n+program test\n+  real :: r1\n+  real*4:: r2\n+  real(4) :: r3\n+  real(selected_real_kind(p=6)) :: r4\n+\n+  double precision :: d1\n+  real*8 :: d2\n+  real(8) :: d3\n+  real(kind(1.d0)) :: d4\n+  real(selected_real_kind(p=15)) :: d5\n+\n+  !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n+  !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n+  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 8)) stop 1\n+  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 16)) stop 2\n+end program test"}, {"sha": "b83b2438a58494d234b0f31b6767332531feb48e", "filename": "gcc/testsuite/gfortran.dg/real4-8-real8-4.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8-real8-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8-real8-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8-real8-4.f90?ref=d259ab15761de2d938c24abfba9cdcd2fef91655", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do run }\n+! { dg-additional-options \"-w -freal-4-real-8 -freal-8-real-4\" }\n+!\n+! PR fortran/99355\n+!\n+\n+program test\n+  real :: r1\n+  real*4:: r2\n+  real(4) :: r3\n+  real(selected_real_kind(p=6)) :: r4\n+\n+  double precision :: d1\n+  real*8 :: d2\n+  real(8) :: d3\n+  real(kind(1.d0)) :: d4 ! << this is ambiguous: kind=8 \u2192 4 \u2192 8 or 8 \u2192 4; thus,excluded below\n+  real(selected_real_kind(p=15)) :: d5\n+\n+  print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n+  print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n+  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 8)) stop 1\n+  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d5)] /= 4)) stop 2\n+end program test"}, {"sha": "50577dd5fa85dd3cb9a74159bf0cec915355a029", "filename": "gcc/testsuite/gfortran.dg/real4-8.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8.f90?ref=d259ab15761de2d938c24abfba9cdcd2fef91655", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do run }\n+! { dg-additional-options \"-w -freal-4-real-8\" }\n+!\n+! PR fortran/99355\n+!\n+\n+program test\n+  real :: r1\n+  real*4:: r2\n+  real(4) :: r3\n+  real(selected_real_kind(p=6)) :: r4\n+\n+  double precision :: d1\n+  real*8 :: d2\n+  real(8) :: d3\n+  real(kind(1.d0)) :: d4\n+  real(selected_real_kind(p=15)) :: d5\n+\n+  !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n+  !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n+  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 8)) stop 1\n+  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 8)) stop 2\n+end program test"}, {"sha": "68f6bc46bce0957c7730fb505dc746932d3adaec", "filename": "gcc/testsuite/gfortran.dg/real8-10.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal8-10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal8-10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal8-10.f90?ref=d259ab15761de2d938c24abfba9cdcd2fef91655", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do run { target i?86-*-* x86_64-*-* } }\n+! { dg-additional-options \"-w -freal-8-real-10\" }\n+!\n+! PR fortran/99355\n+!\n+\n+program test\n+  real :: r1\n+  real*4:: r2\n+  real(4) :: r3\n+  real(selected_real_kind(p=6)) :: r4\n+\n+  double precision :: d1\n+  real*8 :: d2\n+  real(8) :: d3\n+  real(kind(1.d0)) :: d4\n+  real(selected_real_kind(p=15)) :: d5\n+\n+  !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n+  !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n+  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 4)) stop 1\n+  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 10)) stop 2\n+end program test"}, {"sha": "5ddd9e17bb68c9d2f12cd11508609355455bfc5e", "filename": "gcc/testsuite/gfortran.dg/real8-16.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal8-16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal8-16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal8-16.f90?ref=d259ab15761de2d938c24abfba9cdcd2fef91655", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do run }\n+! { dg-additional-options \"-w -freal-8-real-16\" }\n+! { dg-require-effective-target fortran_real_16 }\n+!\n+! PR fortran/99355\n+!\n+\n+program test\n+  real :: r1\n+  real*4:: r2\n+  real(4) :: r3\n+  real(selected_real_kind(p=6)) :: r4\n+\n+  double precision :: d1\n+  real*8 :: d2\n+  real(8) :: d3\n+  real(kind(1.d0)) :: d4\n+  real(selected_real_kind(p=15)) :: d5\n+\n+  !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n+  !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n+  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 4)) stop 1\n+  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 16)) stop 2\n+end program test"}, {"sha": "a68559a26adaf310218e05b5a4dd8da1302f1610", "filename": "gcc/testsuite/gfortran.dg/real8-4.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal8-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d259ab15761de2d938c24abfba9cdcd2fef91655/gcc%2Ftestsuite%2Fgfortran.dg%2Freal8-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal8-4.f90?ref=d259ab15761de2d938c24abfba9cdcd2fef91655", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do run }\n+! { dg-additional-options \"-w -freal-8-real-4\" }\n+!\n+! PR fortran/99355\n+!\n+\n+program test\n+  real :: r1\n+  real*4:: r2\n+  real(4) :: r3\n+  real(selected_real_kind(p=6)) :: r4\n+\n+  double precision :: d1\n+  real*8 :: d2\n+  real(8) :: d3\n+  real(kind(1.d0)) :: d4\n+  real(selected_real_kind(p=15)) :: d5\n+\n+  !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n+  !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n+  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 4)) stop 1\n+  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 4)) stop 2\n+end program test"}]}