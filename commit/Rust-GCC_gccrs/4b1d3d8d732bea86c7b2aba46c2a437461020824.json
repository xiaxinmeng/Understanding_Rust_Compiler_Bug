{"sha": "4b1d3d8d732bea86c7b2aba46c2a437461020824", "node_id": "C_kwDOANBUbNoAKDRiMWQzZDhkNzMyYmVhODZjN2IyYWJhNDZjMmE0Mzc0NjEwMjA4MjQ", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-11-19T19:22:10Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-11-23T20:02:08Z"}, "message": "c++: -Wuninitialized for mem-inits and empty classes [PR19808]\n\nThis fixes a bogus -Wuninitialized warning: there's nothing to initialize\nin empty classes, so don't add them into our uninitialized set.\n\n\tPR c++/19808\n\ngcc/cp/ChangeLog:\n\n\t* init.c (emit_mem_initializers): Don't add is_really_empty_class\n\tmembers into uninitialized.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/warn/Wuninitialized-28.C: Make a class nonempty.\n\t* g++.dg/warn/Wuninitialized-29.C: Likewise.\n\t* g++.dg/warn/Wuninitialized-31.C: New test.", "tree": {"sha": "4c71c291334d11e645f9a42f24b90b7d572c36a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c71c291334d11e645f9a42f24b90b7d572c36a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b1d3d8d732bea86c7b2aba46c2a437461020824", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b1d3d8d732bea86c7b2aba46c2a437461020824", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b1d3d8d732bea86c7b2aba46c2a437461020824", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b1d3d8d732bea86c7b2aba46c2a437461020824/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b7318faf7987ae17806a8c84fbaccaf255e7cbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b7318faf7987ae17806a8c84fbaccaf255e7cbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b7318faf7987ae17806a8c84fbaccaf255e7cbf"}], "stats": {"total": 78, "additions": 77, "deletions": 1}, "files": [{"sha": "2a4512e462a97ba9db809a8ea5f31d38a4f07530", "filename": "gcc/cp/init.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1d3d8d732bea86c7b2aba46c2a437461020824/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1d3d8d732bea86c7b2aba46c2a437461020824/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=4b1d3d8d732bea86c7b2aba46c2a437461020824", "patch": "@@ -1470,7 +1470,8 @@ emit_mem_initializers (tree mem_inits)\n     for (tree f = next_initializable_field (TYPE_FIELDS (current_class_type));\n \t f != NULL_TREE;\n \t f = next_initializable_field (DECL_CHAIN (f)))\n-      if (!DECL_ARTIFICIAL (f))\n+      if (!DECL_ARTIFICIAL (f)\n+\t  && !is_really_empty_class (TREE_TYPE (f), /*ignore_vptr*/false))\n \tuninitialized.add (f);\n \n   if (mem_inits"}, {"sha": "816249c2b9c85535814401cdc1cd529640f1c100", "filename": "gcc/testsuite/g++.dg/warn/Wuninitialized-28.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1d3d8d732bea86c7b2aba46c2a437461020824/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1d3d8d732bea86c7b2aba46c2a437461020824/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-28.C?ref=4b1d3d8d732bea86c7b2aba46c2a437461020824", "patch": "@@ -47,6 +47,7 @@ struct F {\n };\n \n struct bar {\n+  int a;\n   bar() {}\n   bar(bar&) {}\n };"}, {"sha": "da81abf07c9301f0fc1d2b45e3ad9a930ff2e785", "filename": "gcc/testsuite/g++.dg/warn/Wuninitialized-29.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1d3d8d732bea86c7b2aba46c2a437461020824/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1d3d8d732bea86c7b2aba46c2a437461020824/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-29.C?ref=4b1d3d8d732bea86c7b2aba46c2a437461020824", "patch": "@@ -47,6 +47,7 @@ struct F {\n };\n \n struct bar {\n+  int a;\n   bar() {}\n   bar(bar&) {}\n };"}, {"sha": "e22b150db467a5cb1f7fb5b6ce86b551f9eeb810", "filename": "gcc/testsuite/g++.dg/warn/Wuninitialized-31.C", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1d3d8d732bea86c7b2aba46c2a437461020824/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1d3d8d732bea86c7b2aba46c2a437461020824/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-31.C?ref=4b1d3d8d732bea86c7b2aba46c2a437461020824", "patch": "@@ -0,0 +1,73 @@\n+// PR c++/19808\n+// { dg-do compile }\n+// { dg-options \"-Wuninitialized\" }\n+\n+class AllocatorWithCleanup {\n+public:\n+  int *allocate(int);\n+};\n+class SecBlock {\n+  SecBlock() : m_ptr(m_alloc.allocate(0)) {} // { dg-bogus \"uninitialized\" }\n+  AllocatorWithCleanup m_alloc;\n+  int *m_ptr;\n+};\n+\n+struct A {\n+  int *allocate(int);\n+};\n+\n+struct B {\n+  int : 0;\n+  int *allocate(int);\n+};\n+\n+struct C : B {\n+};\n+\n+struct D {\n+  char arr[0];\n+  int *allocate(int);\n+};\n+\n+struct E { };\n+\n+struct F {\n+  E arr[10];\n+  int *allocate(int);\n+};\n+\n+struct G {\n+  E e;\n+  int *allocate(int);\n+};\n+\n+struct H {\n+  virtual void foo ();\n+  int *allocate(int);\n+};\n+\n+template<typename T>\n+struct X {\n+  X() : m_ptr(t.allocate(0)) {} // { dg-bogus \"uninitialized\" }\n+  T t;\n+  int *m_ptr;\n+};\n+\n+struct V {\n+  int a;\n+  int *allocate(int);\n+};\n+\n+struct Z {\n+  Z() : m_ptr(v.allocate(0)) {} // { dg-warning \"uninitialized\" }\n+  V v;\n+  int *m_ptr;\n+};\n+\n+X<A> x1;\n+X<B> x2;\n+X<C> x3;\n+X<D> x4;\n+X<F> x5;\n+X<G> x6;\n+X<H> x7;"}]}