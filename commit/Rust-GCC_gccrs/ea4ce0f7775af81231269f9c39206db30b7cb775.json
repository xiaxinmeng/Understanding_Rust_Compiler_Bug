{"sha": "ea4ce0f7775af81231269f9c39206db30b7cb775", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE0Y2UwZjc3NzVhZjgxMjMxMjY5ZjljMzkyMDZkYjMwYjdjYjc3NQ==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2010-10-04T13:27:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-04T13:27:57Z"}, "message": "frontend.adb: Set Lib.Parsing_Main_Extended_Source to True before loading the main source...\n\n2010-10-04  Vincent Celier  <celier@adacore.com>\n\n\t* frontend.adb: Set Lib.Parsing_Main_Extended_Source to True before\n\tloading the main source, so that if it is preprocessed and -gnateG is\n\tused, the preprocessed file is written.\n\t* lib.ads (Analysing_Subunit_Of_Main): New global variable to indicate\n\tif a subunit is from the main unit when it is loaded.\n\t* sem_ch10.adb (Analyze_Proper_Body): Set Lib.Analysing_Subunit_Of_Main\n\tto True before loading a subunit.\n\t* sem_ch12.adb (Copy_Generic_Node): Set Lib.Analysing_Subunit_Of_Main\n\tto True when the main is a generic unit before loading one of its\n\tsubunits.\n\t* sinput-l.adb (Load_File): If -gnateG is used, write the preprocessed\n\tfile only for the main unit (spec, body and subunits).\n\nFrom-SVN: r164934", "tree": {"sha": "762cf5586088eb7449e204245ad71d64685bca32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/762cf5586088eb7449e204245ad71d64685bca32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea4ce0f7775af81231269f9c39206db30b7cb775", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea4ce0f7775af81231269f9c39206db30b7cb775", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea4ce0f7775af81231269f9c39206db30b7cb775", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea4ce0f7775af81231269f9c39206db30b7cb775/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1366997bf20c36a7d0701a4f4e09b7d8b523e828", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1366997bf20c36a7d0701a4f4e09b7d8b523e828", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1366997bf20c36a7d0701a4f4e09b7d8b523e828"}], "stats": {"total": 67, "additions": 54, "deletions": 13}, "files": [{"sha": "0c292b9e5d102e21761ee46b09d39d3915b75487", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea4ce0f7775af81231269f9c39206db30b7cb775/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea4ce0f7775af81231269f9c39206db30b7cb775/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ea4ce0f7775af81231269f9c39206db30b7cb775", "patch": "@@ -1,3 +1,18 @@\n+2010-10-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* frontend.adb: Set Lib.Parsing_Main_Extended_Source to True before\n+\tloading the main source, so that if it is preprocessed and -gnateG is\n+\tused, the preprocessed file is written.\n+\t* lib.ads (Analysing_Subunit_Of_Main): New global variable to indicate\n+\tif a subunit is from the main unit when it is loaded.\n+\t* sem_ch10.adb (Analyze_Proper_Body): Set Lib.Analysing_Subunit_Of_Main\n+\tto True before loading a subunit.\n+\t* sem_ch12.adb (Copy_Generic_Node): Set Lib.Analysing_Subunit_Of_Main\n+\tto True when the main is a generic unit before loading one of its\n+\tsubunits.\n+\t* sinput-l.adb (Load_File): If -gnateG is used, write the preprocessed\n+\tfile only for the main unit (spec, body and subunits).\n+\n 2010-10-04  Vincent Celier  <celier@adacore.com>\n \n \t* sinput-l.adb (Load_File): Do not fail when switch -gnateG is"}, {"sha": "fd83b5d5b5c802228d89ff4c69fe4196d3991290", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea4ce0f7775af81231269f9c39206db30b7cb775/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea4ce0f7775af81231269f9c39206db30b7cb775/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=ea4ce0f7775af81231269f9c39206db30b7cb775", "patch": "@@ -116,6 +116,11 @@ begin\n       Prepcomp.Check_Symbols;\n    end if;\n \n+   --  We set Parsing_Main_Extended_Source true here to cover processing of all\n+   --  the configuration pragma files, as well as the main source unit itself.\n+\n+   Parsing_Main_Extended_Source := True;\n+\n    --  Now that the preprocessing situation is established, we are able to\n    --  load the main source (this is no longer done by Lib.Load.Initialize).\n \n@@ -127,11 +132,6 @@ begin\n       return;\n    end if;\n \n-   --  We set Parsing_Main_Extended_Source true here to cover processing of all\n-   --  the configuration pragma files, as well as the main source unit itself.\n-\n-   Parsing_Main_Extended_Source := True;\n-\n    --  Read and process configuration pragma files if present\n \n    declare"}, {"sha": "28e2ec064cdcc27a1a7eebbf16de8beebcdfe853", "filename": "gcc/ada/lib.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea4ce0f7775af81231269f9c39206db30b7cb775/gcc%2Fada%2Flib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea4ce0f7775af81231269f9c39206db30b7cb775/gcc%2Fada%2Flib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.ads?ref=ea4ce0f7775af81231269f9c39206db30b7cb775", "patch": "@@ -49,6 +49,11 @@ package Lib is\n    --  extended source (the main unit, its spec, or one of its subunits). This\n    --  flag to implement In_Extended_Main_Source_Unit.\n \n+   Analysing_Subunit_Of_Main : Boolean := False;\n+   --  Set to True when analyzing a subunit of the main source. When True, if\n+   --  the subunit is preprocessed and -gnateG is specified, then the\n+   --  preprocessed file (.prep) is written.\n+\n    --------------------------------------------\n    -- General Approach to Library Management --\n    --------------------------------------------"}, {"sha": "f38503d00dac9cc46d48e5d4d405d116ccc60402", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea4ce0f7775af81231269f9c39206db30b7cb775/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea4ce0f7775af81231269f9c39206db30b7cb775/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=ea4ce0f7775af81231269f9c39206db30b7cb775", "patch": "@@ -1739,12 +1739,17 @@ package body Sem_Ch10 is\n          --  Otherwise we must load the subunit and link to it\n \n          else\n+            --  Make sure that, if the subunit is preprocessed and -gnateG is\n+            --  specified, the preprocessed file will be written.\n+\n+            Lib.Analysing_Subunit_Of_Main := True;\n             Unum :=\n               Load_Unit\n                 (Load_Name  => Subunit_Name,\n                  Required   => False,\n                  Subunit    => True,\n                  Error_Node => N);\n+            Lib.Analysing_Subunit_Of_Main := False;\n \n             --  Give message if we did not get the unit Emit warning even if\n             --  missing subunit is not within main unit, to simplify debugging.\n@@ -1822,11 +1827,11 @@ package body Sem_Ch10 is\n             end if;\n          end if;\n \n-         --  The remaining case is when the subunit is not already loaded and\n-         --  we are not generating code. In this case we are just performing\n-         --  semantic analysis on the parent, and we are not interested in\n-         --  the subunit. For subprograms, analyze the stub as a body. For\n-         --  other entities the stub has already been marked as completed.\n+      --  The remaining case is when the subunit is not already loaded and we\n+      --  are not generating code. In this case we are just performing semantic\n+      --  analysis on the parent, and we are not interested in the subunit. For\n+      --  subprograms, analyze the stub as a body. For other entities the stub\n+      --  has already been marked as completed.\n \n       else\n          Optional_Subunit;"}, {"sha": "5f258f23d681ba2b8504a2cd8751ec00624b53a0", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea4ce0f7775af81231269f9c39206db30b7cb775/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea4ce0f7775af81231269f9c39206db30b7cb775/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=ea4ce0f7775af81231269f9c39206db30b7cb775", "patch": "@@ -5906,12 +5906,19 @@ package body Sem_Ch12 is\n                New_Body     : Node_Id;\n \n             begin\n+               --  Make sure that, if it is a subunit of the main unit that is\n+               --  preprocessed and if -gnateG is specified, the preprocessed\n+               --  file will be written.\n+\n+               Lib.Analysing_Subunit_Of_Main :=\n+                 Lib.In_Extended_Main_Source_Unit (N);\n                Unum :=\n                  Load_Unit\n                    (Load_Name  => Subunit_Name,\n                     Required   => False,\n                     Subunit    => True,\n                     Error_Node => N);\n+               Lib.Analysing_Subunit_Of_Main := False;\n \n                --  If the proper body is not found, a warning message will be\n                --  emitted when analyzing the stub, or later at the point"}, {"sha": "8d952b2cd04246c76f6256a54f9165325907800c", "filename": "gcc/ada/sinput-l.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea4ce0f7775af81231269f9c39206db30b7cb775/gcc%2Fada%2Fsinput-l.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea4ce0f7775af81231269f9c39206db30b7cb775/gcc%2Fada%2Fsinput-l.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.adb?ref=ea4ce0f7775af81231269f9c39206db30b7cb775", "patch": "@@ -30,6 +30,7 @@ with Einfo;    use Einfo;\n with Errout;   use Errout;\n with Fname;    use Fname;\n with Hostparm;\n+with Lib;      use Lib;\n with Opt;      use Opt;\n with Osint;    use Osint;\n with Output;   use Output;\n@@ -552,9 +553,17 @@ package body Sinput.L is\n \n                else\n                   --  Output the result of the preprocessing, if requested and\n-                  --  the source has been modified by the preprocessing.\n-\n-                  if Generate_Processed_File and then Modified then\n+                  --  the source has been modified by the preprocessing. Only\n+                  --  do that for the main unit (spec, body and subunits).\n+\n+                  if Generate_Processed_File and then\n+                     Modified and then\n+                     ((Compiler_State = Parsing\n+                       and then Parsing_Main_Extended_Source)\n+                      or else\n+                       (Compiler_State = Analyzing\n+                        and then Analysing_Subunit_Of_Main))\n+                  then\n                      declare\n                         FD     : File_Descriptor;\n                         NB     : Integer;"}]}