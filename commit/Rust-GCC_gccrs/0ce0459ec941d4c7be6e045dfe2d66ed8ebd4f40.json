{"sha": "0ce0459ec941d4c7be6e045dfe2d66ed8ebd4f40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNlMDQ1OWVjOTQxZDRjN2JlNmUwNDVkZmUyZDY2ZWQ4ZWJkNGY0MA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-07-22T12:33:51Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-07-22T12:33:51Z"}, "message": "[AArch64] Implement vbsl_f64 arm_neon.h intrinsic.\n\n[gcc/]\n\t* config/aarch64/arm_neon.h (vbsl_f64): New intrinsic.\n\n[testsuite/]\n\t* gcc.target/aarch64/simd/vbsl_f64_1.c: New test.\n\nFrom-SVN: r212910", "tree": {"sha": "39786929815cfd43e40f5df34be78be18c18e84f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39786929815cfd43e40f5df34be78be18c18e84f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ce0459ec941d4c7be6e045dfe2d66ed8ebd4f40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ce0459ec941d4c7be6e045dfe2d66ed8ebd4f40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ce0459ec941d4c7be6e045dfe2d66ed8ebd4f40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ce0459ec941d4c7be6e045dfe2d66ed8ebd4f40/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "317db6f80fc10e9017241503b0fc9c2e3ff4ce3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/317db6f80fc10e9017241503b0fc9c2e3ff4ce3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/317db6f80fc10e9017241503b0fc9c2e3ff4ce3f"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "2d7f1e0168def9f2d55a6b0254324c38d8dc95c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce0459ec941d4c7be6e045dfe2d66ed8ebd4f40/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce0459ec941d4c7be6e045dfe2d66ed8ebd4f40/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ce0459ec941d4c7be6e045dfe2d66ed8ebd4f40", "patch": "@@ -1,3 +1,7 @@\n+2014-07-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/arm_neon.h (vbsl_f64): New intrinsic.\n+\n 2014-07-22  Roman Gareev  <gareevroman@gmail.com>\n \n \t* graphite-isl-ast-to-gimple.c:"}, {"sha": "66968e8d198f11ea9667f689924618e1b389c2c1", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce0459ec941d4c7be6e045dfe2d66ed8ebd4f40/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce0459ec941d4c7be6e045dfe2d66ed8ebd4f40/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=0ce0459ec941d4c7be6e045dfe2d66ed8ebd4f40", "patch": "@@ -13657,6 +13657,13 @@ vbsl_f32 (uint32x2_t __a, float32x2_t __b, float32x2_t __c)\n   return __builtin_aarch64_simd_bslv2sf_suss (__a, __b, __c);\n }\n \n+__extension__ static __inline float64x1_t __attribute__ ((__always_inline__))\n+vbsl_f64 (uint64x1_t __a, float64x1_t __b, float64x1_t __c)\n+{\n+  return (float64x1_t)\n+    { __builtin_aarch64_simd_bsldf_suss (__a[0], __b[0], __c[0]) };\n+}\n+\n __extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n vbsl_p8 (uint8x8_t __a, poly8x8_t __b, poly8x8_t __c)\n {"}, {"sha": "14af70506d0d94a24426dcce9af71606e80c2c68", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce0459ec941d4c7be6e045dfe2d66ed8ebd4f40/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce0459ec941d4c7be6e045dfe2d66ed8ebd4f40/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ce0459ec941d4c7be6e045dfe2d66ed8ebd4f40", "patch": "@@ -1,3 +1,7 @@\n+2014-07-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/aarch64/simd/vbsl_f64_1.c: New test.\n+\n 2014-07-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/fuse-caller-save-xmm.c (dg-options): Use"}, {"sha": "537c5bde5c64119f412452ad746fb5e7bdb4201f", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vbsl_f64_1.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce0459ec941d4c7be6e045dfe2d66ed8ebd4f40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvbsl_f64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce0459ec941d4c7be6e045dfe2d66ed8ebd4f40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvbsl_f64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvbsl_f64_1.c?ref=0ce0459ec941d4c7be6e045dfe2d66ed8ebd4f40", "patch": "@@ -0,0 +1,32 @@\n+/* Test the vbsl_f64 AArch64 SIMD intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O3\" } */\n+\n+#include \"arm_neon.h\"\n+\n+extern void abort (void);\n+\n+int\n+main (void)\n+{\n+  float64x1_t expected, actual;\n+  float64_t expected_scalar, actual_scalar;\n+  float64x1_t arg1, arg2;\n+  uint64_t mask = 0xf0fc00fbf000fa0fULL;\n+  uint64_t arg1_uint = 0xdeadbeefbada9832ULL;\n+  uint64_t arg2_uint = 0xcafe3254deed7111ULL;\n+\n+  arg1 = vcreate_f64 (arg1_uint);\n+  arg2 = vcreate_f64 (arg2_uint);\n+  expected = vcreate_f64 ((arg1_uint & mask) | (arg2_uint & ~mask));\n+  actual = vbsl_f64 (vcreate_u64 (mask), arg1, arg2);\n+\n+  expected_scalar = vget_lane_f64 (expected, 0);\n+  actual_scalar = vget_lane_f64 (actual, 0);\n+\n+  if (expected_scalar != actual_scalar)\n+    abort ();\n+\n+  return 0;\n+}"}]}