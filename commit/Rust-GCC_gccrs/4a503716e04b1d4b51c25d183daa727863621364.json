{"sha": "4a503716e04b1d4b51c25d183daa727863621364", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE1MDM3MTZlMDRiMWQ0YjUxYzI1ZDE4M2RhYTcyNzg2MzYyMTM2NA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-09-10T17:39:20Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-09-10T17:39:20Z"}, "message": "DatagramSocket.java, [...]: Use gnu.java.net.Plain*SocketImpl instead of java.net.PlainSocketImpl.\n\n2003-09-10  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/DatagramSocket.java,\n\tjava/net/MulticastSocket.java,\n\tjava/net/ServerSocket.java,\n\tjava/net/Socket.java:\n\tUse gnu.java.net.Plain*SocketImpl instead of\n\tjava.net.PlainSocketImpl.\n\t* java/net/PlainDatagramSocketImpl.java,\n\tjava/net/PlainSocketImpl.java,\n\tjava/net/SocketInputStream.java,\n\tjava/net/SocketOutputStream.java,\n\tjava/net/natPlainDatagramSocketImplNoNet.cc,\n\tjava/net/natPlainDatagramSocketImplPosix.cc,\n\tjava/net/natPlainDatagramSocketImplWin32.cc,\n\tjava/net/natPlainSocketImplNoNet.cc,\n\tjava/net/natPlainSocketImplPosix.cc,\n\tjava/net/natPlainSocketImplWin32.cc:\n\tRemoved.\n\t* gnu/java/net/PlainDatagramSocketImpl.java,\n\tgnu/java/net/PlainSocketImpl.java,\n\tgnu/java/net/SocketInputStream.java,\n\tgnu/java/net/SocketOutputStream.java,\n\tgnu/java/net/natPlainDatagramSocketImplNoNet.cc,\n\tgnu/java/net/natPlainDatagramSocketImplPosix.cc,\n\tgnu/java/net/natPlainDatagramSocketImplWin32.cc,\n\tgnu/java/net/natPlainSocketImplNoNet.cc,\n\tgnu/java/net/natPlainSocketImplPosix.cc,\n\tgnu/java/net/natPlainSocketImplWin32.cc:\n\tNew files (moved from java/net).\n\t* configure.in: Create links for gnu/java/net/natPlain*SocketImpl.cc\n\tinstead of java/net/natPlain*SocketImpl.cc.\n\t* configure: Regenerated.\n\t* Makefile.am: Moved files from java/net to gnu/java/net.\n\t* Makefile.in: Regenerated.\n\nFrom-SVN: r71274", "tree": {"sha": "2319d2c672eccbf9eea831feae05f2fe985c4987", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2319d2c672eccbf9eea831feae05f2fe985c4987"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a503716e04b1d4b51c25d183daa727863621364", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a503716e04b1d4b51c25d183daa727863621364", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a503716e04b1d4b51c25d183daa727863621364", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a503716e04b1d4b51c25d183daa727863621364/comments", "author": null, "committer": null, "parents": [{"sha": "520abf693092a8244aa99ec41eaa76bafa0f9e20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/520abf693092a8244aa99ec41eaa76bafa0f9e20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/520abf693092a8244aa99ec41eaa76bafa0f9e20"}], "stats": {"total": 1852, "additions": 955, "deletions": 897}, "files": [{"sha": "9c3f9c1d9d6a0921976c8cd682842f571eb56237", "filename": "libjava/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -1,3 +1,39 @@\n+2003-09-10  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/DatagramSocket.java,\n+\tjava/net/MulticastSocket.java,\n+\tjava/net/ServerSocket.java,\n+\tjava/net/Socket.java:\n+\tUse gnu.java.net.Plain*SocketImpl instead of\n+\tjava.net.PlainSocketImpl.\n+\t* java/net/PlainDatagramSocketImpl.java,\n+\tjava/net/PlainSocketImpl.java,\n+\tjava/net/SocketInputStream.java,\n+\tjava/net/SocketOutputStream.java,\n+\tjava/net/natPlainDatagramSocketImplNoNet.cc,\n+\tjava/net/natPlainDatagramSocketImplPosix.cc,\n+\tjava/net/natPlainDatagramSocketImplWin32.cc,\n+\tjava/net/natPlainSocketImplNoNet.cc,\n+\tjava/net/natPlainSocketImplPosix.cc,\n+\tjava/net/natPlainSocketImplWin32.cc:\n+\tRemoved.\n+\t* gnu/java/net/PlainDatagramSocketImpl.java,\n+\tgnu/java/net/PlainSocketImpl.java,\n+\tgnu/java/net/SocketInputStream.java,\n+\tgnu/java/net/SocketOutputStream.java,\n+\tgnu/java/net/natPlainDatagramSocketImplNoNet.cc,\n+\tgnu/java/net/natPlainDatagramSocketImplPosix.cc,\n+\tgnu/java/net/natPlainDatagramSocketImplWin32.cc,\n+\tgnu/java/net/natPlainSocketImplNoNet.cc,\n+\tgnu/java/net/natPlainSocketImplPosix.cc,\n+\tgnu/java/net/natPlainSocketImplWin32.cc:\n+\tNew files (moved from java/net).\n+\t* configure.in: Create links for gnu/java/net/natPlain*SocketImpl.cc\n+\tinstead of java/net/natPlain*SocketImpl.cc.\n+\t* configure: Regenerated.\n+\t* Makefile.am: Moved files from java/net to gnu/java/net.\n+\t* Makefile.in: Regenerated.\n+\n 2003-09-09  Alan Modra  <amodra@bigpond.net.au>\n \n \t* configure: Regenerate."}, {"sha": "5658ee32c375dc5752351e9cf49ef53c3bb23b27", "filename": "libjava/Makefile.am", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -2136,6 +2136,8 @@ gnu/java/locale/LocaleInformation_zh_HK.java \\\n gnu/java/locale/LocaleInformation_zh_SG.java \\\n gnu/java/locale/LocaleInformation_zh_TW.java \\\n gnu/java/math/MPN.java \\\n+gnu/java/net/PlainDatagramSocketImpl.java \\\n+gnu/java/net/PlainSocketImpl.java \\\n gnu/java/nio/DatagramChannelImpl.java \\\n gnu/java/nio/FileLockImpl.java \\\n gnu/java/nio/PipeImpl.java \\\n@@ -2232,8 +2234,6 @@ java/net/NetPermission.java \\\n java/net/NetworkInterface.java \\\n java/net/NoRouteToHostException.java \\\n java/net/PasswordAuthentication.java \\\n-java/net/PlainDatagramSocketImpl.java \\\n-java/net/PlainSocketImpl.java \\\n java/net/PortUnreachableException.java \\\n java/net/ProtocolException.java\t\\\n java/net/ServerSocket.java \\\n@@ -2604,6 +2604,8 @@ gnu/gcj/runtime/natStackTrace.cc \\\n gnu/gcj/runtime/natStringBuffer.cc \\\n gnu/gcj/runtime/natVMClassLoader.cc \\\n gnu/java/awt/natEmbeddedWindow.cc \\\n+gnu/java/net/natPlainDatagramSocketImpl.cc \\\n+gnu/java/net/natPlainSocketImpl.cc \\\n gnu/java/nio/natFileLockImpl.cc \\\n gnu/java/nio/natSelectorImpl.cc \\\n java/io/natFile.cc \\\n@@ -2632,8 +2634,6 @@ java/lang/reflect/natMethod.cc \\\n java/lang/reflect/natProxy.cc \\\n java/net/natNetworkInterface.cc \\\n java/net/natInetAddress.cc \\\n-java/net/natPlainDatagramSocketImpl.cc \\\n-java/net/natPlainSocketImpl.cc \\\n java/nio/natDirectByteBufferImpl.cc \\\n java/nio/channels/natFileChannelImpl.cc \\\n java/text/natCollator.cc \\"}, {"sha": "60e9358b2f7cbad302af18507cbb0c81ba41ffd1", "filename": "libjava/Makefile.in", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -1891,6 +1891,8 @@ gnu/java/locale/LocaleInformation_zh_HK.java \\\n gnu/java/locale/LocaleInformation_zh_SG.java \\\n gnu/java/locale/LocaleInformation_zh_TW.java \\\n gnu/java/math/MPN.java \\\n+gnu/java/net/PlainDatagramSocketImpl.java \\\n+gnu/java/net/PlainSocketImpl.java \\\n gnu/java/nio/DatagramChannelImpl.java \\\n gnu/java/nio/FileLockImpl.java \\\n gnu/java/nio/PipeImpl.java \\\n@@ -1987,8 +1989,6 @@ java/net/NetPermission.java \\\n java/net/NetworkInterface.java \\\n java/net/NoRouteToHostException.java \\\n java/net/PasswordAuthentication.java \\\n-java/net/PlainDatagramSocketImpl.java \\\n-java/net/PlainSocketImpl.java \\\n java/net/PortUnreachableException.java \\\n java/net/ProtocolException.java\t\\\n java/net/ServerSocket.java \\\n@@ -2358,6 +2358,8 @@ gnu/gcj/runtime/natStackTrace.cc \\\n gnu/gcj/runtime/natStringBuffer.cc \\\n gnu/gcj/runtime/natVMClassLoader.cc \\\n gnu/java/awt/natEmbeddedWindow.cc \\\n+gnu/java/net/natPlainDatagramSocketImpl.cc \\\n+gnu/java/net/natPlainSocketImpl.cc \\\n gnu/java/nio/natFileLockImpl.cc \\\n gnu/java/nio/natSelectorImpl.cc \\\n java/io/natFile.cc \\\n@@ -2386,8 +2388,6 @@ java/lang/reflect/natMethod.cc \\\n java/lang/reflect/natProxy.cc \\\n java/net/natNetworkInterface.cc \\\n java/net/natInetAddress.cc \\\n-java/net/natPlainDatagramSocketImpl.cc \\\n-java/net/natPlainSocketImpl.cc \\\n java/nio/natDirectByteBufferImpl.cc \\\n java/nio/channels/natFileChannelImpl.cc \\\n java/text/natCollator.cc \\\n@@ -2535,20 +2535,21 @@ gnu/gcj/runtime/natFinalizerThread.lo gnu/gcj/runtime/natFirstThread.lo \\\n gnu/gcj/runtime/natNameFinder.lo gnu/gcj/runtime/natSharedLibLoader.lo \\\n gnu/gcj/runtime/natStackTrace.lo gnu/gcj/runtime/natStringBuffer.lo \\\n gnu/gcj/runtime/natVMClassLoader.lo gnu/java/awt/natEmbeddedWindow.lo \\\n-gnu/java/nio/natFileLockImpl.lo gnu/java/nio/natSelectorImpl.lo \\\n-java/io/natFile.lo java/io/natFileDescriptor.lo \\\n-java/io/natObjectInputStream.lo java/io/natVMObjectStreamClass.lo \\\n-java/lang/natCharacter.lo java/lang/natClass.lo \\\n-java/lang/natClassLoader.lo java/lang/natConcreteProcess.lo \\\n-java/lang/natDouble.lo java/lang/natFloat.lo java/lang/natMath.lo \\\n-java/lang/natObject.lo java/lang/natRuntime.lo java/lang/natString.lo \\\n+gnu/java/net/natPlainDatagramSocketImpl.lo \\\n+gnu/java/net/natPlainSocketImpl.lo gnu/java/nio/natFileLockImpl.lo \\\n+gnu/java/nio/natSelectorImpl.lo java/io/natFile.lo \\\n+java/io/natFileDescriptor.lo java/io/natObjectInputStream.lo \\\n+java/io/natVMObjectStreamClass.lo java/lang/natCharacter.lo \\\n+java/lang/natClass.lo java/lang/natClassLoader.lo \\\n+java/lang/natConcreteProcess.lo java/lang/natDouble.lo \\\n+java/lang/natFloat.lo java/lang/natMath.lo java/lang/natObject.lo \\\n+java/lang/natRuntime.lo java/lang/natString.lo \\\n java/lang/natStringBuffer.lo java/lang/natSystem.lo \\\n java/lang/natThread.lo java/lang/natVMSecurityManager.lo \\\n java/lang/ref/natReference.lo java/lang/reflect/natArray.lo \\\n java/lang/reflect/natConstructor.lo java/lang/reflect/natField.lo \\\n java/lang/reflect/natMethod.lo java/lang/reflect/natProxy.lo \\\n java/net/natNetworkInterface.lo java/net/natInetAddress.lo \\\n-java/net/natPlainDatagramSocketImpl.lo java/net/natPlainSocketImpl.lo \\\n java/nio/natDirectByteBufferImpl.lo \\\n java/nio/channels/natFileChannelImpl.lo java/text/natCollator.lo \\\n java/util/natResourceBundle.lo java/util/natTimeZone.lo \\\n@@ -3008,7 +3009,11 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/java/locale/LocaleInformation_zh_HK.P \\\n .deps/gnu/java/locale/LocaleInformation_zh_SG.P \\\n .deps/gnu/java/locale/LocaleInformation_zh_TW.P \\\n-.deps/gnu/java/math/MPN.P .deps/gnu/java/nio/DatagramChannelImpl.P \\\n+.deps/gnu/java/math/MPN.P .deps/gnu/java/net/PlainDatagramSocketImpl.P \\\n+.deps/gnu/java/net/PlainSocketImpl.P \\\n+.deps/gnu/java/net/natPlainDatagramSocketImpl.P \\\n+.deps/gnu/java/net/natPlainSocketImpl.P \\\n+.deps/gnu/java/nio/DatagramChannelImpl.P \\\n .deps/gnu/java/nio/FileLockImpl.P .deps/gnu/java/nio/PipeImpl.P \\\n .deps/gnu/java/nio/SelectionKeyImpl.P .deps/gnu/java/nio/SelectorImpl.P \\\n .deps/gnu/java/nio/SelectorProviderImpl.P \\\n@@ -3508,8 +3513,6 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/net/NetPermission.P .deps/java/net/NetworkInterface.P \\\n .deps/java/net/NoRouteToHostException.P \\\n .deps/java/net/PasswordAuthentication.P \\\n-.deps/java/net/PlainDatagramSocketImpl.P \\\n-.deps/java/net/PlainSocketImpl.P \\\n .deps/java/net/PortUnreachableException.P \\\n .deps/java/net/ProtocolException.P .deps/java/net/ServerSocket.P \\\n .deps/java/net/Socket.P .deps/java/net/SocketAddress.P \\\n@@ -3525,9 +3528,7 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/net/UnknownHostException.P \\\n .deps/java/net/UnknownServiceException.P \\\n .deps/java/net/natInetAddress.P .deps/java/net/natNetworkInterface.P \\\n-.deps/java/net/natPlainDatagramSocketImpl.P \\\n-.deps/java/net/natPlainSocketImpl.P .deps/java/nio/Buffer.P \\\n-.deps/java/nio/BufferOverflowException.P \\\n+.deps/java/nio/Buffer.P .deps/java/nio/BufferOverflowException.P \\\n .deps/java/nio/BufferUnderflowException.P .deps/java/nio/ByteBuffer.P \\\n .deps/java/nio/ByteBufferImpl.P .deps/java/nio/ByteOrder.P \\\n .deps/java/nio/CharBuffer.P .deps/java/nio/CharBufferImpl.P \\"}, {"sha": "e4884e58b86af005b3f84b0bbe85c8aea1bdd1ec", "filename": "libjava/configure", "status": "modified", "additions": 274, "deletions": 271, "changes": 545, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -1631,7 +1631,7 @@ else\n   if { (eval echo configure:1632: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; }; then\n     for file in conftest.*; do\n       case $file in\n-      *.c | *.o | *.obj) ;;\n+      *.$ac_ext | *.c | *.o | *.obj) ;;\n       *) ac_cv_exeext=`echo $file | sed -e s/conftest//` ;;\n       esac\n     done\n@@ -3182,6 +3182,9 @@ test -d java/net || mkdir java/net\n \n \n \n+test -d gnu/java || mkdir gnu/java\n+test -d gnu/java/net || mkdir gnu/java/net\n+\n \n \n case \"${host}\" in\n@@ -3213,7 +3216,7 @@ ZLIBTESTSPEC=\n # Uses ac_ vars as temps to allow command line to override cache and checks.\n # --without-x overrides everything else, but does not touch the cache.\n echo $ac_n \"checking for X\"\"... $ac_c\" 1>&6\n-echo \"configure:3217: checking for X\" >&5\n+echo \"configure:3220: checking for X\" >&5\n \n # Check whether --with-x or --without-x was given.\n if test \"${with_x+set}\" = set; then\n@@ -3275,12 +3278,12 @@ if test \"$ac_x_includes\" = NO; then\n \n   # First, try using that file with no special directory specified.\n cat > conftest.$ac_ext <<EOF\n-#line 3279 \"configure\"\n+#line 3282 \"configure\"\n #include \"confdefs.h\"\n #include <$x_direct_test_include>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:3284: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:3287: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -3349,14 +3352,14 @@ if test \"$ac_x_libraries\" = NO; then\n   ac_save_LIBS=\"$LIBS\"\n   LIBS=\"-l$x_direct_test_library $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 3353 \"configure\"\n+#line 3356 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n ${x_direct_test_function}()\n ; return 0; }\n EOF\n-if { (eval echo configure:3360: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3363: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   LIBS=\"$ac_save_LIBS\"\n # We can link X programs with no special library path.\n@@ -3462,17 +3465,17 @@ else\n     case \"`(uname -sr) 2>/dev/null`\" in\n     \"SunOS 5\"*)\n       echo $ac_n \"checking whether -R must be followed by a space\"\"... $ac_c\" 1>&6\n-echo \"configure:3466: checking whether -R must be followed by a space\" >&5\n+echo \"configure:3469: checking whether -R must be followed by a space\" >&5\n       ac_xsave_LIBS=\"$LIBS\"; LIBS=\"$LIBS -R$x_libraries\"\n       cat > conftest.$ac_ext <<EOF\n-#line 3469 \"configure\"\n+#line 3472 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3476: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3479: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_R_nospace=yes\n else\n@@ -3488,14 +3491,14 @@ rm -f conftest*\n       else\n \tLIBS=\"$ac_xsave_LIBS -R $x_libraries\"\n \tcat > conftest.$ac_ext <<EOF\n-#line 3492 \"configure\"\n+#line 3495 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3499: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3502: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_R_space=yes\n else\n@@ -3527,15 +3530,15 @@ rm -f conftest*\n     # libraries were built with DECnet support.  And karl@cs.umb.edu says\n     # the Alpha needs dnet_stub (dnet does not exist).\n     echo $ac_n \"checking for dnet_ntoa in -ldnet\"\"... $ac_c\" 1>&6\n-echo \"configure:3531: checking for dnet_ntoa in -ldnet\" >&5\n+echo \"configure:3534: checking for dnet_ntoa in -ldnet\" >&5\n ac_lib_var=`echo dnet'_'dnet_ntoa | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-ldnet  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 3539 \"configure\"\n+#line 3542 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -3546,7 +3549,7 @@ int main() {\n dnet_ntoa()\n ; return 0; }\n EOF\n-if { (eval echo configure:3550: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3553: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -3568,15 +3571,15 @@ fi\n \n     if test $ac_cv_lib_dnet_dnet_ntoa = no; then\n       echo $ac_n \"checking for dnet_ntoa in -ldnet_stub\"\"... $ac_c\" 1>&6\n-echo \"configure:3572: checking for dnet_ntoa in -ldnet_stub\" >&5\n+echo \"configure:3575: checking for dnet_ntoa in -ldnet_stub\" >&5\n ac_lib_var=`echo dnet_stub'_'dnet_ntoa | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-ldnet_stub  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 3580 \"configure\"\n+#line 3583 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -3587,7 +3590,7 @@ int main() {\n dnet_ntoa()\n ; return 0; }\n EOF\n-if { (eval echo configure:3591: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3594: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -3616,12 +3619,12 @@ fi\n     # The nsl library prevents programs from opening the X display\n     # on Irix 5.2, according to dickey@clark.net.\n     echo $ac_n \"checking for gethostbyname\"\"... $ac_c\" 1>&6\n-echo \"configure:3620: checking for gethostbyname\" >&5\n+echo \"configure:3623: checking for gethostbyname\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_gethostbyname'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3625 \"configure\"\n+#line 3628 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char gethostbyname(); below.  */\n@@ -3644,7 +3647,7 @@ gethostbyname();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3648: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3651: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_gethostbyname=yes\"\n else\n@@ -3665,15 +3668,15 @@ fi\n \n     if test $ac_cv_func_gethostbyname = no; then\n       echo $ac_n \"checking for gethostbyname in -lnsl\"\"... $ac_c\" 1>&6\n-echo \"configure:3669: checking for gethostbyname in -lnsl\" >&5\n+echo \"configure:3672: checking for gethostbyname in -lnsl\" >&5\n ac_lib_var=`echo nsl'_'gethostbyname | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lnsl  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 3677 \"configure\"\n+#line 3680 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -3684,7 +3687,7 @@ int main() {\n gethostbyname()\n ; return 0; }\n EOF\n-if { (eval echo configure:3688: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3691: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -3714,12 +3717,12 @@ fi\n     # -lsocket must be given before -lnsl if both are needed.\n     # We assume that if connect needs -lnsl, so does gethostbyname.\n     echo $ac_n \"checking for connect\"\"... $ac_c\" 1>&6\n-echo \"configure:3718: checking for connect\" >&5\n+echo \"configure:3721: checking for connect\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_connect'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3723 \"configure\"\n+#line 3726 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char connect(); below.  */\n@@ -3742,7 +3745,7 @@ connect();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3746: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3749: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_connect=yes\"\n else\n@@ -3763,15 +3766,15 @@ fi\n \n     if test $ac_cv_func_connect = no; then\n       echo $ac_n \"checking for connect in -lsocket\"\"... $ac_c\" 1>&6\n-echo \"configure:3767: checking for connect in -lsocket\" >&5\n+echo \"configure:3770: checking for connect in -lsocket\" >&5\n ac_lib_var=`echo socket'_'connect | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lsocket $X_EXTRA_LIBS $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 3775 \"configure\"\n+#line 3778 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -3782,7 +3785,7 @@ int main() {\n connect()\n ; return 0; }\n EOF\n-if { (eval echo configure:3786: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3789: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -3806,12 +3809,12 @@ fi\n \n     # gomez@mi.uni-erlangen.de says -lposix is necessary on A/UX.\n     echo $ac_n \"checking for remove\"\"... $ac_c\" 1>&6\n-echo \"configure:3810: checking for remove\" >&5\n+echo \"configure:3813: checking for remove\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_remove'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3815 \"configure\"\n+#line 3818 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char remove(); below.  */\n@@ -3834,7 +3837,7 @@ remove();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3838: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3841: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_remove=yes\"\n else\n@@ -3855,15 +3858,15 @@ fi\n \n     if test $ac_cv_func_remove = no; then\n       echo $ac_n \"checking for remove in -lposix\"\"... $ac_c\" 1>&6\n-echo \"configure:3859: checking for remove in -lposix\" >&5\n+echo \"configure:3862: checking for remove in -lposix\" >&5\n ac_lib_var=`echo posix'_'remove | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lposix  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 3867 \"configure\"\n+#line 3870 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -3874,7 +3877,7 @@ int main() {\n remove()\n ; return 0; }\n EOF\n-if { (eval echo configure:3878: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3881: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -3898,12 +3901,12 @@ fi\n \n     # BSDI BSD/OS 2.1 needs -lipc for XOpenDisplay.\n     echo $ac_n \"checking for shmat\"\"... $ac_c\" 1>&6\n-echo \"configure:3902: checking for shmat\" >&5\n+echo \"configure:3905: checking for shmat\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_shmat'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3907 \"configure\"\n+#line 3910 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char shmat(); below.  */\n@@ -3926,7 +3929,7 @@ shmat();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3930: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3933: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_shmat=yes\"\n else\n@@ -3947,15 +3950,15 @@ fi\n \n     if test $ac_cv_func_shmat = no; then\n       echo $ac_n \"checking for shmat in -lipc\"\"... $ac_c\" 1>&6\n-echo \"configure:3951: checking for shmat in -lipc\" >&5\n+echo \"configure:3954: checking for shmat in -lipc\" >&5\n ac_lib_var=`echo ipc'_'shmat | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lipc  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 3959 \"configure\"\n+#line 3962 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -3966,7 +3969,7 @@ int main() {\n shmat()\n ; return 0; }\n EOF\n-if { (eval echo configure:3970: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3973: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -3999,15 +4002,15 @@ fi\n   # libraries we check for below, so use a different variable.\n   #  --interran@uluru.Stanford.EDU, kb@cs.umb.edu.\n   echo $ac_n \"checking for IceConnectionNumber in -lICE\"\"... $ac_c\" 1>&6\n-echo \"configure:4003: checking for IceConnectionNumber in -lICE\" >&5\n+echo \"configure:4006: checking for IceConnectionNumber in -lICE\" >&5\n ac_lib_var=`echo ICE'_'IceConnectionNumber | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lICE $X_EXTRA_LIBS $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 4011 \"configure\"\n+#line 4014 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -4018,7 +4021,7 @@ int main() {\n IceConnectionNumber()\n ; return 0; }\n EOF\n-if { (eval echo configure:4022: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4025: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -4116,7 +4119,7 @@ fi\n libsubdir=.libs\n \n echo $ac_n \"checking for garbage collector to use\"\"... $ac_c\" 1>&6\n-echo \"configure:4120: checking for garbage collector to use\" >&5\n+echo \"configure:4123: checking for garbage collector to use\" >&5\n # Check whether --enable-java-gc or --disable-java-gc was given.\n if test \"${enable_java_gc+set}\" = set; then\n   enableval=\"$enable_java_gc\"\n@@ -4168,7 +4171,7 @@ esac\n \n \n echo $ac_n \"checking for thread model used by GCC\"\"... $ac_c\" 1>&6\n-echo \"configure:4172: checking for thread model used by GCC\" >&5\n+echo \"configure:4175: checking for thread model used by GCC\" >&5\n THREADS=`$CC -v 2>&1 | sed -n 's/^Thread model: //p'`\n echo \"$ac_t\"\"$THREADS\" 1>&6\n \n@@ -4375,12 +4378,12 @@ else\n    for ac_func in strerror ioctl select fstat open fsync sleep opendir\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:4379: checking for $ac_func\" >&5\n+echo \"configure:4382: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4384 \"configure\"\n+#line 4387 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -4403,7 +4406,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:4407: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4410: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -4430,12 +4433,12 @@ done\n    for ac_func in gmtime_r localtime_r readdir_r getpwuid_r getcwd\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:4434: checking for $ac_func\" >&5\n+echo \"configure:4437: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4439 \"configure\"\n+#line 4442 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -4458,7 +4461,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:4462: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4465: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -4485,12 +4488,12 @@ done\n    for ac_func in access stat mkdir rename rmdir unlink realpath utime chmod\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:4489: checking for $ac_func\" >&5\n+echo \"configure:4492: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4494 \"configure\"\n+#line 4497 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -4513,7 +4516,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:4517: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4520: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -4540,12 +4543,12 @@ done\n    for ac_func in nl_langinfo setlocale\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:4544: checking for $ac_func\" >&5\n+echo \"configure:4547: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4549 \"configure\"\n+#line 4552 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -4568,7 +4571,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:4572: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4575: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -4595,12 +4598,12 @@ done\n    for ac_func in inet_aton inet_addr\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:4599: checking for $ac_func\" >&5\n+echo \"configure:4602: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4604 \"configure\"\n+#line 4607 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -4623,7 +4626,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:4627: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4630: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -4650,12 +4653,12 @@ done\n    for ac_func in inet_pton uname inet_ntoa\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:4654: checking for $ac_func\" >&5\n+echo \"configure:4657: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4659 \"configure\"\n+#line 4662 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -4678,7 +4681,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:4682: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4685: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -4705,12 +4708,12 @@ done\n    for ac_func in fork execvp pipe sigaction ftruncate\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:4709: checking for $ac_func\" >&5\n+echo \"configure:4712: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4714 \"configure\"\n+#line 4717 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -4733,7 +4736,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:4737: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4740: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -4761,17 +4764,17 @@ done\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:4765: checking for $ac_hdr\" >&5\n+echo \"configure:4768: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4770 \"configure\"\n+#line 4773 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:4775: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:4778: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -4798,12 +4801,12 @@ fi\n done\n  \n    echo $ac_n \"checking for backtrace\"\"... $ac_c\" 1>&6\n-echo \"configure:4802: checking for backtrace\" >&5\n+echo \"configure:4805: checking for backtrace\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_backtrace'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4807 \"configure\"\n+#line 4810 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char backtrace(); below.  */\n@@ -4826,7 +4829,7 @@ backtrace();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:4830: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4833: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_backtrace=yes\"\n else\n@@ -4870,15 +4873,15 @@ fi\n \n \n    echo $ac_n \"checking for dladdr in -ldl\"\"... $ac_c\" 1>&6\n-echo \"configure:4874: checking for dladdr in -ldl\" >&5\n+echo \"configure:4877: checking for dladdr in -ldl\" >&5\n ac_lib_var=`echo dl'_'dladdr | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-ldl  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 4882 \"configure\"\n+#line 4885 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -4889,7 +4892,7 @@ int main() {\n dladdr()\n ; return 0; }\n EOF\n-if { (eval echo configure:4893: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4896: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -4919,7 +4922,7 @@ do\n \n ac_safe=`echo \"$ac_file\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_file\"\"... $ac_c\" 1>&6\n-echo \"configure:4923: checking for $ac_file\" >&5\n+echo \"configure:4926: checking for $ac_file\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_file_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -4977,15 +4980,15 @@ fi\n \n \n   echo $ac_n \"checking for iconv\"\"... $ac_c\" 1>&6\n-echo \"configure:4981: checking for iconv\" >&5\n+echo \"configure:4984: checking for iconv\" >&5\n if eval \"test \\\"`echo '$''{'am_cv_func_iconv'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   \n     am_cv_func_iconv=\"no, consider installing GNU libiconv\"\n     am_cv_lib_iconv=no\n     cat > conftest.$ac_ext <<EOF\n-#line 4989 \"configure\"\n+#line 4992 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n #include <iconv.h>\n@@ -4995,7 +4998,7 @@ iconv_t cd = iconv_open(\"\",\"\");\n        iconv_close(cd);\n ; return 0; }\n EOF\n-if { (eval echo configure:4999: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5002: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   am_cv_func_iconv=yes\n else\n@@ -5007,7 +5010,7 @@ rm -f conftest*\n       am_save_LIBS=\"$LIBS\"\n       LIBS=\"$LIBS $am_cv_libiconv_ldpath -liconv\"\n       cat > conftest.$ac_ext <<EOF\n-#line 5011 \"configure\"\n+#line 5014 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n #include <iconv.h>\n@@ -5017,7 +5020,7 @@ iconv_t cd = iconv_open(\"\",\"\");\n          iconv_close(cd);\n ; return 0; }\n EOF\n-if { (eval echo configure:5021: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5024: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   am_cv_lib_iconv=yes\n         am_cv_func_iconv=yes\n@@ -5038,13 +5041,13 @@ echo \"$ac_t\"\"$am_cv_func_iconv\" 1>&6\n EOF\n \n     echo $ac_n \"checking for iconv declaration\"\"... $ac_c\" 1>&6\n-echo \"configure:5042: checking for iconv declaration\" >&5\n+echo \"configure:5045: checking for iconv declaration\" >&5\n     if eval \"test \\\"`echo '$''{'am_cv_proto_iconv'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   \n       cat > conftest.$ac_ext <<EOF\n-#line 5048 \"configure\"\n+#line 5051 \"configure\"\n #include \"confdefs.h\"\n \n #include <stdlib.h>\n@@ -5063,7 +5066,7 @@ int main() {\n \n ; return 0; }\n EOF\n-if { (eval echo configure:5067: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:5070: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   am_cv_proto_iconv_arg1=\"\"\n else\n@@ -5092,19 +5095,19 @@ EOF\n \n    if test $ac_cv_header_locale_h = yes; then\n     echo $ac_n \"checking for LC_MESSAGES\"\"... $ac_c\" 1>&6\n-echo \"configure:5096: checking for LC_MESSAGES\" >&5\n+echo \"configure:5099: checking for LC_MESSAGES\" >&5\n if eval \"test \\\"`echo '$''{'am_cv_val_LC_MESSAGES'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5101 \"configure\"\n+#line 5104 \"configure\"\n #include \"confdefs.h\"\n #include <locale.h>\n int main() {\n return LC_MESSAGES\n ; return 0; }\n EOF\n-if { (eval echo configure:5108: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5111: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   am_cv_val_LC_MESSAGES=yes\n else\n@@ -5125,20 +5128,20 @@ EOF\n     fi\n   fi\n    echo $ac_n \"checking whether struct tm is in sys/time.h or time.h\"\"... $ac_c\" 1>&6\n-echo \"configure:5129: checking whether struct tm is in sys/time.h or time.h\" >&5\n+echo \"configure:5132: checking whether struct tm is in sys/time.h or time.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_struct_tm'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5134 \"configure\"\n+#line 5137 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <time.h>\n int main() {\n struct tm *tp; tp->tm_sec;\n ; return 0; }\n EOF\n-if { (eval echo configure:5142: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:5145: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_struct_tm=time.h\n else\n@@ -5159,20 +5162,20 @@ EOF\n fi\n \n echo $ac_n \"checking for tm_zone in struct tm\"\"... $ac_c\" 1>&6\n-echo \"configure:5163: checking for tm_zone in struct tm\" >&5\n+echo \"configure:5166: checking for tm_zone in struct tm\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_struct_tm_zone'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5168 \"configure\"\n+#line 5171 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <$ac_cv_struct_tm>\n int main() {\n struct tm tm; tm.tm_zone;\n ; return 0; }\n EOF\n-if { (eval echo configure:5176: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:5179: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_struct_tm_zone=yes\n else\n@@ -5192,12 +5195,12 @@ EOF\n \n else\n   echo $ac_n \"checking for tzname\"\"... $ac_c\" 1>&6\n-echo \"configure:5196: checking for tzname\" >&5\n+echo \"configure:5199: checking for tzname\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_var_tzname'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5201 \"configure\"\n+#line 5204 \"configure\"\n #include \"confdefs.h\"\n #include <time.h>\n #ifndef tzname /* For SGI.  */\n@@ -5207,7 +5210,7 @@ int main() {\n atoi(*tzname);\n ; return 0; }\n EOF\n-if { (eval echo configure:5211: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5214: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_var_tzname=yes\n else\n@@ -5232,12 +5235,12 @@ fi\n    for ac_func in gethostbyname_r\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:5236: checking for $ac_func\" >&5\n+echo \"configure:5239: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5241 \"configure\"\n+#line 5244 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -5260,7 +5263,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:5264: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5267: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -5287,7 +5290,7 @@ EOF\n      # We look for the one that returns `int'.\n      # Hopefully this check is robust enough.\n      cat > conftest.$ac_ext <<EOF\n-#line 5291 \"configure\"\n+#line 5294 \"configure\"\n #include \"confdefs.h\"\n #include <netdb.h>\n EOF\n@@ -5307,7 +5310,7 @@ rm -f conftest*\n      *\" -D_REENTRANT \"*) ;;\n      *)\n \t\techo $ac_n \"checking whether gethostbyname_r declaration requires -D_REENTRANT\"\"... $ac_c\" 1>&6\n-echo \"configure:5311: checking whether gethostbyname_r declaration requires -D_REENTRANT\" >&5\n+echo \"configure:5314: checking whether gethostbyname_r declaration requires -D_REENTRANT\" >&5\n if eval \"test \\\"`echo '$''{'libjava_cv_gethostbyname_r_needs_reentrant'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -5320,14 +5323,14 @@ ac_link='${CXX-g++} -o conftest${ac_exeext} $CXXFLAGS $CPPFLAGS $LDFLAGS conftes\n cross_compiling=$ac_cv_prog_cxx_cross\n \n \t  cat > conftest.$ac_ext <<EOF\n-#line 5324 \"configure\"\n+#line 5327 \"configure\"\n #include \"confdefs.h\"\n #include <netdb.h>\n int main() {\n gethostbyname_r(\"\", 0, 0);\n ; return 0; }\n EOF\n-if { (eval echo configure:5331: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:5334: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   libjava_cv_gethostbyname_r_needs_reentrant=no\n else\n@@ -5337,14 +5340,14 @@ else\n   \t\tCPPFLAGS_SAVE=\"$CPPFLAGS\"\n \t\tCPPFLAGS=\"$CPPFLAGS -D_REENTRANT\"\n \t\tcat > conftest.$ac_ext <<EOF\n-#line 5341 \"configure\"\n+#line 5344 \"configure\"\n #include \"confdefs.h\"\n #include <netdb.h>\n int main() {\n gethostbyname_r(\"\", 0, 0);\n ; return 0; }\n EOF\n-if { (eval echo configure:5348: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:5351: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   libjava_cv_gethostbyname_r_needs_reentrant=yes\n else\n@@ -5379,12 +5382,12 @@ EOF\n      esac\n \n      echo $ac_n \"checking for struct hostent_data\"\"... $ac_c\" 1>&6\n-echo \"configure:5383: checking for struct hostent_data\" >&5\n+echo \"configure:5386: checking for struct hostent_data\" >&5\n if eval \"test \\\"`echo '$''{'libjava_cv_struct_hostent_data'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   \tcat > conftest.$ac_ext <<EOF\n-#line 5388 \"configure\"\n+#line 5391 \"configure\"\n #include \"confdefs.h\"\n \n #if GETHOSTBYNAME_R_NEEDS_REENTRANT && !defined(_REENTRANT)\n@@ -5395,7 +5398,7 @@ int main() {\n struct hostent_data data;\n ; return 0; }\n EOF\n-if { (eval echo configure:5399: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:5402: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   libjava_cv_struct_hostent_data=yes\n else\n@@ -5427,7 +5430,7 @@ done\n    # to exist where expected.  (The root issue: AC_CHECK_FUNCS assumes C\n    # linkage check is enough, yet C++ code requires proper prototypes.)\n    cat > conftest.$ac_ext <<EOF\n-#line 5431 \"configure\"\n+#line 5434 \"configure\"\n #include \"confdefs.h\"\n #include <netdb.h>\n EOF\n@@ -5438,12 +5441,12 @@ if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n    for ac_func in gethostbyaddr_r\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:5442: checking for $ac_func\" >&5\n+echo \"configure:5445: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5447 \"configure\"\n+#line 5450 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -5466,7 +5469,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:5470: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5473: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -5493,7 +5496,7 @@ EOF\n      # We look for the one that returns `int'.\n      # Hopefully this check is robust enough.\n      cat > conftest.$ac_ext <<EOF\n-#line 5497 \"configure\"\n+#line 5500 \"configure\"\n #include \"confdefs.h\"\n #include <netdb.h>\n EOF\n@@ -5520,12 +5523,12 @@ rm -f conftest*\n    for ac_func in gethostname\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:5524: checking for $ac_func\" >&5\n+echo \"configure:5527: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5529 \"configure\"\n+#line 5532 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -5548,7 +5551,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:5552: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5555: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -5572,7 +5575,7 @@ EOF\n EOF\n \n      cat > conftest.$ac_ext <<EOF\n-#line 5576 \"configure\"\n+#line 5579 \"configure\"\n #include \"confdefs.h\"\n #include <unistd.h>\n EOF\n@@ -5596,12 +5599,12 @@ done\n    for ac_func in usleep\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:5600: checking for $ac_func\" >&5\n+echo \"configure:5603: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5605 \"configure\"\n+#line 5608 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -5624,7 +5627,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:5628: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5631: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -5644,7 +5647,7 @@ if eval \"test \\\"`echo '$ac_cv_func_'$ac_func`\\\" = yes\"; then\n EOF\n  \n      cat > conftest.$ac_ext <<EOF\n-#line 5648 \"configure\"\n+#line 5651 \"configure\"\n #include \"confdefs.h\"\n #include <unistd.h>\n EOF\n@@ -5675,12 +5678,12 @@ done\n       for ac_func in pthread_mutexattr_settype pthread_mutexattr_setkind_np\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:5679: checking for $ac_func\" >&5\n+echo \"configure:5682: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5684 \"configure\"\n+#line 5687 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -5703,7 +5706,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:5707: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5710: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -5733,12 +5736,12 @@ done\n       for ac_func in sched_yield\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:5737: checking for $ac_func\" >&5\n+echo \"configure:5740: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5742 \"configure\"\n+#line 5745 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -5761,7 +5764,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:5765: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5768: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -5783,15 +5786,15 @@ EOF\n else\n   echo \"$ac_t\"\"no\" 1>&6\n echo $ac_n \"checking for sched_yield in -lrt\"\"... $ac_c\" 1>&6\n-echo \"configure:5787: checking for sched_yield in -lrt\" >&5\n+echo \"configure:5790: checking for sched_yield in -lrt\" >&5\n ac_lib_var=`echo rt'_'sched_yield | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lrt  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 5795 \"configure\"\n+#line 5798 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -5802,7 +5805,7 @@ int main() {\n sched_yield()\n ; return 0; }\n EOF\n-if { (eval echo configure:5806: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5809: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -5828,15 +5831,15 @@ else\n   echo \"$ac_t\"\"no\" 1>&6\n \n \t  echo $ac_n \"checking for sched_yield in -lposix4\"\"... $ac_c\" 1>&6\n-echo \"configure:5832: checking for sched_yield in -lposix4\" >&5\n+echo \"configure:5835: checking for sched_yield in -lposix4\" >&5\n ac_lib_var=`echo posix4'_'sched_yield | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lposix4  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 5840 \"configure\"\n+#line 5843 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -5847,7 +5850,7 @@ int main() {\n sched_yield()\n ; return 0; }\n EOF\n-if { (eval echo configure:5851: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5854: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -5883,7 +5886,7 @@ done\n       # We can save a little space at runtime if the mutex has m_count\n       # or __m_count.  This is a nice hack for Linux.\n       cat > conftest.$ac_ext <<EOF\n-#line 5887 \"configure\"\n+#line 5890 \"configure\"\n #include \"confdefs.h\"\n #include <pthread.h>\n int main() {\n@@ -5892,7 +5895,7 @@ int main() {\n         \n ; return 0; }\n EOF\n-if { (eval echo configure:5896: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:5899: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   cat >> confdefs.h <<\\EOF\n #define PTHREAD_MUTEX_HAVE_M_COUNT 1\n@@ -5904,7 +5907,7 @@ else\n   rm -rf conftest*\n   \n \tcat > conftest.$ac_ext <<EOF\n-#line 5908 \"configure\"\n+#line 5911 \"configure\"\n #include \"confdefs.h\"\n #include <pthread.h>\n int main() {\n@@ -5913,7 +5916,7 @@ int main() {\n \t  \n ; return 0; }\n EOF\n-if { (eval echo configure:5917: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:5920: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   cat >> confdefs.h <<\\EOF\n #define PTHREAD_MUTEX_HAVE___M_COUNT 1\n@@ -5933,12 +5936,12 @@ rm -f conftest*\n    for ac_func in gettimeofday time ftime\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:5937: checking for $ac_func\" >&5\n+echo \"configure:5940: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5942 \"configure\"\n+#line 5945 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -5961,7 +5964,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:5965: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5968: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -5992,12 +5995,12 @@ done\n    for ac_func in memmove\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:5996: checking for $ac_func\" >&5\n+echo \"configure:5999: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6001 \"configure\"\n+#line 6004 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -6020,7 +6023,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:6024: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6027: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -6050,12 +6053,12 @@ done\n    for ac_func in memcpy\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:6054: checking for $ac_func\" >&5\n+echo \"configure:6057: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6059 \"configure\"\n+#line 6062 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -6078,7 +6081,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:6082: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6085: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -6107,15 +6110,15 @@ done\n    fi\n \n    echo $ac_n \"checking for dlopen in -ldl\"\"... $ac_c\" 1>&6\n-echo \"configure:6111: checking for dlopen in -ldl\" >&5\n+echo \"configure:6114: checking for dlopen in -ldl\" >&5\n ac_lib_var=`echo dl'_'dlopen | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-ldl  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 6119 \"configure\"\n+#line 6122 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -6126,7 +6129,7 @@ int main() {\n dlopen()\n ; return 0; }\n EOF\n-if { (eval echo configure:6130: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6133: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -6171,20 +6174,20 @@ fi\n    #--------------------------------------------------------------------\n \n    echo $ac_n \"checking for socket libraries\"\"... $ac_c\" 1>&6\n-echo \"configure:6175: checking for socket libraries\" >&5\n+echo \"configure:6178: checking for socket libraries\" >&5\n if eval \"test \\\"`echo '$''{'gcj_cv_lib_sockets'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   gcj_cv_lib_sockets=\n      gcj_checkBoth=0\n      unset ac_cv_func_connect\n      echo $ac_n \"checking for connect\"\"... $ac_c\" 1>&6\n-echo \"configure:6183: checking for connect\" >&5\n+echo \"configure:6186: checking for connect\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_connect'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6188 \"configure\"\n+#line 6191 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char connect(); below.  */\n@@ -6207,7 +6210,7 @@ connect();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:6211: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6214: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_connect=yes\"\n else\n@@ -6230,22 +6233,22 @@ fi\n      if test \"$gcj_checkSocket\" = 1; then\n \t unset ac_cv_func_connect\n \t echo $ac_n \"checking for main in -lsocket\"\"... $ac_c\" 1>&6\n-echo \"configure:6234: checking for main in -lsocket\" >&5\n+echo \"configure:6237: checking for main in -lsocket\" >&5\n ac_lib_var=`echo socket'_'main | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lsocket  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 6242 \"configure\"\n+#line 6245 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n main()\n ; return 0; }\n EOF\n-if { (eval echo configure:6249: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6252: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -6272,12 +6275,12 @@ fi\n \t LIBS=\"$LIBS -lsocket -lnsl\"\n \t unset ac_cv_func_accept\n \t echo $ac_n \"checking for accept\"\"... $ac_c\" 1>&6\n-echo \"configure:6276: checking for accept\" >&5\n+echo \"configure:6279: checking for accept\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_accept'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6281 \"configure\"\n+#line 6284 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char accept(); below.  */\n@@ -6300,7 +6303,7 @@ accept();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:6304: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6307: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_accept=yes\"\n else\n@@ -6327,12 +6330,12 @@ fi\n      gcj_oldLibs=$LIBS\n      LIBS=\"$LIBS $gcj_cv_lib_sockets\"\n      echo $ac_n \"checking for gethostbyname\"\"... $ac_c\" 1>&6\n-echo \"configure:6331: checking for gethostbyname\" >&5\n+echo \"configure:6334: checking for gethostbyname\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_gethostbyname'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6336 \"configure\"\n+#line 6339 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char gethostbyname(); below.  */\n@@ -6355,7 +6358,7 @@ gethostbyname();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:6359: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6362: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_gethostbyname=yes\"\n else\n@@ -6373,22 +6376,22 @@ if eval \"test \\\"`echo '$ac_cv_func_'gethostbyname`\\\" = yes\"; then\n else\n   echo \"$ac_t\"\"no\" 1>&6\n echo $ac_n \"checking for main in -lnsl\"\"... $ac_c\" 1>&6\n-echo \"configure:6377: checking for main in -lnsl\" >&5\n+echo \"configure:6380: checking for main in -lnsl\" >&5\n ac_lib_var=`echo nsl'_'main | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lnsl  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 6385 \"configure\"\n+#line 6388 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n main()\n ; return 0; }\n EOF\n-if { (eval echo configure:6392: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6395: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -6420,15 +6423,15 @@ echo \"$ac_t\"\"$gcj_cv_lib_sockets\" 1>&6\n \n    if test \"$with_system_zlib\" = yes; then\n       echo $ac_n \"checking for deflate in -lz\"\"... $ac_c\" 1>&6\n-echo \"configure:6424: checking for deflate in -lz\" >&5\n+echo \"configure:6427: checking for deflate in -lz\" >&5\n ac_lib_var=`echo z'_'deflate | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lz  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 6432 \"configure\"\n+#line 6435 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -6439,7 +6442,7 @@ int main() {\n deflate()\n ; return 0; }\n EOF\n-if { (eval echo configure:6443: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6446: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -6488,7 +6491,7 @@ fi\n   # Extract the first word of \"pkg-config\", so it can be a program name with args.\n set dummy pkg-config; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:6492: checking for $ac_word\" >&5\n+echo \"configure:6495: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_PKG_CONFIG'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6536,7 +6539,7 @@ fi\n \n   min_gtk_version=2.0.0\n   echo $ac_n \"checking for GTK+ - version >= $min_gtk_version\"\"... $ac_c\" 1>&6\n-echo \"configure:6540: checking for GTK+ - version >= $min_gtk_version\" >&5\n+echo \"configure:6543: checking for GTK+ - version >= $min_gtk_version\" >&5\n \n   if test x$PKG_CONFIG != xno ; then\n     ## don't try to run the test against uninstalled libtool libs\n@@ -6571,7 +6574,7 @@ echo \"configure:6540: checking for GTK+ - version >= $min_gtk_version\" >&5\n   echo $ac_n \"cross compiling; assumed OK... $ac_c\"\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6575 \"configure\"\n+#line 6578 \"configure\"\n #include \"confdefs.h\"\n \n #include <gtk/gtk.h>\n@@ -6646,7 +6649,7 @@ main ()\n }\n \n EOF\n-if { (eval echo configure:6650: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:6653: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   :\n else\n@@ -6680,7 +6683,7 @@ fi\n           CFLAGS=\"$CFLAGS $GTK_CFLAGS\"\n           LIBS=\"$LIBS $GTK_LIBS\"\n           cat > conftest.$ac_ext <<EOF\n-#line 6684 \"configure\"\n+#line 6687 \"configure\"\n #include \"confdefs.h\"\n \n #include <gtk/gtk.h>\n@@ -6690,7 +6693,7 @@ int main() {\n  return ((gtk_major_version) || (gtk_minor_version) || (gtk_micro_version)); \n ; return 0; }\n EOF\n-if { (eval echo configure:6694: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6697: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n    echo \"*** The test program compiled, but did not run. This usually means\"\n           echo \"*** that the run-time linker is not finding GTK+ or finding the wrong\"\n@@ -6749,7 +6752,7 @@ fi\n   # Extract the first word of \"pkg-config\", so it can be a program name with args.\n set dummy pkg-config; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:6753: checking for $ac_word\" >&5\n+echo \"configure:6756: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_PKG_CONFIG'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6799,7 +6802,7 @@ fi\n \n   min_glib_version=2.0.0\n   echo $ac_n \"checking for GLIB - version >= $min_glib_version\"\"... $ac_c\" 1>&6\n-echo \"configure:6803: checking for GLIB - version >= $min_glib_version\" >&5\n+echo \"configure:6806: checking for GLIB - version >= $min_glib_version\" >&5\n \n   if test x$PKG_CONFIG != xno ; then\n     ## don't try to run the test against uninstalled libtool libs\n@@ -6838,7 +6841,7 @@ echo \"configure:6803: checking for GLIB - version >= $min_glib_version\" >&5\n   echo $ac_n \"cross compiling; assumed OK... $ac_c\"\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6842 \"configure\"\n+#line 6845 \"configure\"\n #include \"confdefs.h\"\n \n #include <glib.h>\n@@ -6913,7 +6916,7 @@ main ()\n }\n \n EOF\n-if { (eval echo configure:6917: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:6920: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   :\n else\n@@ -6947,7 +6950,7 @@ fi\n           CFLAGS=\"$CFLAGS $GLIB_CFLAGS\"\n           LIBS=\"$LIBS $GLIB_LIBS\"\n           cat > conftest.$ac_ext <<EOF\n-#line 6951 \"configure\"\n+#line 6954 \"configure\"\n #include \"confdefs.h\"\n \n #include <glib.h>\n@@ -6957,7 +6960,7 @@ int main() {\n  return ((glib_major_version) || (glib_minor_version) || (glib_micro_version)); \n ; return 0; }\n EOF\n-if { (eval echo configure:6961: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6964: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n    echo \"*** The test program compiled, but did not run. This usually means\"\n           echo \"*** that the run-time linker is not finding GLIB or finding the wrong\"\n@@ -7036,7 +7039,7 @@ fi\n   # Extract the first word of \"libart2-config\", so it can be a program name with args.\n set dummy libart2-config; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:7040: checking for $ac_word\" >&5\n+echo \"configure:7043: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_LIBART_CONFIG'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7073,7 +7076,7 @@ fi\n     # Extract the first word of \"libart-config\", so it can be a program name with args.\n set dummy libart-config; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:7077: checking for $ac_word\" >&5\n+echo \"configure:7080: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_LIBART_CONFIG'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7109,7 +7112,7 @@ fi\n   fi\n   min_libart_version=2.1.0\n   echo $ac_n \"checking for LIBART - version >= $min_libart_version\"\"... $ac_c\" 1>&6\n-echo \"configure:7113: checking for LIBART - version >= $min_libart_version\" >&5\n+echo \"configure:7116: checking for LIBART - version >= $min_libart_version\" >&5\n   no_libart=\"\"\n   if test \"$LIBART_CONFIG\" = \"no\" ; then\n     no_libart=yes\n@@ -7133,7 +7136,7 @@ echo \"configure:7113: checking for LIBART - version >= $min_libart_version\" >&5\n   echo $ac_n \"cross compiling; assumed OK... $ac_c\"\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7137 \"configure\"\n+#line 7140 \"configure\"\n #include \"confdefs.h\"\n \n #include <stdio.h>\n@@ -7191,7 +7194,7 @@ int main ()\n \n \n EOF\n-if { (eval echo configure:7195: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:7198: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   :\n else\n@@ -7225,7 +7228,7 @@ fi\n           CFLAGS=\"$CFLAGS $LIBART_CFLAGS\"\n           LIBS=\"$LIBS $LIBART_LIBS\"\n           cat > conftest.$ac_ext <<EOF\n-#line 7229 \"configure\"\n+#line 7232 \"configure\"\n #include \"confdefs.h\"\n \n #include <stdio.h>\n@@ -7235,7 +7238,7 @@ int main() {\n  return 0; \n ; return 0; }\n EOF\n-if { (eval echo configure:7239: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7242: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n    echo \"*** The test program compiled, but did not run. This usually means\"\n           echo \"*** that the run-time linker is not finding LIBART or finding the wrong\"\n@@ -7274,22 +7277,22 @@ rm -f conftest*\n    # requires -ldl.\n    if test \"$GC\" = boehm; then\n       echo $ac_n \"checking for main in -ldl\"\"... $ac_c\" 1>&6\n-echo \"configure:7278: checking for main in -ldl\" >&5\n+echo \"configure:7281: checking for main in -ldl\" >&5\n ac_lib_var=`echo dl'_'main | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-ldl  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 7286 \"configure\"\n+#line 7289 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n main()\n ; return 0; }\n EOF\n-if { (eval echo configure:7293: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7296: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -7410,7 +7413,7 @@ fi\n # Extract the first word of \"${ac_tool_prefix}gcj\", so it can be a program name with args.\n set dummy ${ac_tool_prefix}gcj; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:7414: checking for $ac_word\" >&5\n+echo \"configure:7417: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_GCJ'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7442,7 +7445,7 @@ if test -n \"$ac_tool_prefix\"; then\n   # Extract the first word of \"gcj\", so it can be a program name with args.\n set dummy gcj; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:7446: checking for $ac_word\" >&5\n+echo \"configure:7449: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_GCJ'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7504,13 +7507,13 @@ exec 5>>./config.log\n CPPFLAGS=$GCJ_SAVE_CPPFLAGS\n \n echo $ac_n \"checking size of void *\"\"... $ac_c\" 1>&6\n-echo \"configure:7508: checking size of void *\" >&5\n+echo \"configure:7511: checking size of void *\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_void_p'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n   cat > conftest.$ac_ext <<EOF\n-#line 7514 \"configure\"\n+#line 7517 \"configure\"\n #include \"confdefs.h\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n@@ -7520,7 +7523,7 @@ int main() {\n switch (0) case 0: case (sizeof (void *) == $ac_size):;\n ; return 0; }\n EOF\n-if { (eval echo configure:7524: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:7527: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_sizeof_void_p=$ac_size\n else\n@@ -7630,18 +7633,18 @@ EOF\n \n \n echo $ac_n \"checking for g++ -ffloat-store bug\"\"... $ac_c\" 1>&6\n-echo \"configure:7634: checking for g++ -ffloat-store bug\" >&5\n+echo \"configure:7637: checking for g++ -ffloat-store bug\" >&5\n save_CFLAGS=\"$CFLAGS\"\n CFLAGS=\"-x c++ -O2 -ffloat-store\"\n cat > conftest.$ac_ext <<EOF\n-#line 7638 \"configure\"\n+#line 7641 \"configure\"\n #include \"confdefs.h\"\n #include <math.h>\n int main() {\n \n ; return 0; }\n EOF\n-if { (eval echo configure:7645: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:7648: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   echo \"$ac_t\"\"no\" 1>&6\n else\n@@ -7661,17 +7664,17 @@ for ac_hdr in unistd.h bstring.h sys/time.h sys/types.h fcntl.h sys/ioctl.h sys/\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:7665: checking for $ac_hdr\" >&5\n+echo \"configure:7668: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7670 \"configure\"\n+#line 7673 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:7675: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:7678: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -7701,17 +7704,17 @@ for ac_hdr in dirent.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:7705: checking for $ac_hdr\" >&5\n+echo \"configure:7708: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7710 \"configure\"\n+#line 7713 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:7715: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:7718: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -7741,17 +7744,17 @@ for ac_hdr in inttypes.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:7745: checking for $ac_hdr\" >&5\n+echo \"configure:7748: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7750 \"configure\"\n+#line 7753 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:7755: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:7758: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -7787,12 +7790,12 @@ fi\n done\n \n echo $ac_n \"checking for sys/wait.h that is POSIX.1 compatible\"\"... $ac_c\" 1>&6\n-echo \"configure:7791: checking for sys/wait.h that is POSIX.1 compatible\" >&5\n+echo \"configure:7794: checking for sys/wait.h that is POSIX.1 compatible\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_sys_wait_h'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7796 \"configure\"\n+#line 7799 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <sys/wait.h>\n@@ -7808,7 +7811,7 @@ wait (&s);\n s = WIFEXITED (s) ? WEXITSTATUS (s) : 1;\n ; return 0; }\n EOF\n-if { (eval echo configure:7812: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:7815: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_header_sys_wait_h=yes\n else\n@@ -7830,20 +7833,20 @@ fi\n \n \n echo $ac_n \"checking for ANSI C header files\"\"... $ac_c\" 1>&6\n-echo \"configure:7834: checking for ANSI C header files\" >&5\n+echo \"configure:7837: checking for ANSI C header files\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_stdc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7839 \"configure\"\n+#line 7842 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n #include <stdarg.h>\n #include <string.h>\n #include <float.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:7847: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:7850: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -7860,7 +7863,7 @@ rm -f conftest*\n if test $ac_cv_header_stdc = yes; then\n   # SunOS 4.x string.h does not declare mem*, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 7864 \"configure\"\n+#line 7867 \"configure\"\n #include \"confdefs.h\"\n #include <string.h>\n EOF\n@@ -7878,7 +7881,7 @@ fi\n if test $ac_cv_header_stdc = yes; then\n   # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 7882 \"configure\"\n+#line 7885 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n EOF\n@@ -7899,7 +7902,7 @@ if test \"$cross_compiling\" = yes; then\n   :\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7903 \"configure\"\n+#line 7906 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n #define ISLOWER(c) ('a' <= (c) && (c) <= 'z')\n@@ -7910,7 +7913,7 @@ if (XOR (islower (i), ISLOWER (i)) || toupper (i) != TOUPPER (i)) exit(2);\n exit (0); }\n \n EOF\n-if { (eval echo configure:7914: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:7917: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   :\n else\n@@ -7934,12 +7937,12 @@ EOF\n fi\n \n echo $ac_n \"checking for ssize_t\"\"... $ac_c\" 1>&6\n-echo \"configure:7938: checking for ssize_t\" >&5\n+echo \"configure:7941: checking for ssize_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_ssize_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7943 \"configure\"\n+#line 7946 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -7968,9 +7971,9 @@ fi\n \n \n echo $ac_n \"checking for in_addr_t\"\"... $ac_c\" 1>&6\n-echo \"configure:7972: checking for in_addr_t\" >&5\n+echo \"configure:7975: checking for in_addr_t\" >&5\n cat > conftest.$ac_ext <<EOF\n-#line 7974 \"configure\"\n+#line 7977 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -7984,7 +7987,7 @@ int main() {\n in_addr_t foo;\n ; return 0; }\n EOF\n-if { (eval echo configure:7988: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:7991: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   cat >> confdefs.h <<\\EOF\n #define HAVE_IN_ADDR_T 1\n@@ -8000,16 +8003,16 @@ fi\n rm -f conftest*\n \n echo $ac_n \"checking whether struct ip_mreq is in netinet/in.h\"\"... $ac_c\" 1>&6\n-echo \"configure:8004: checking whether struct ip_mreq is in netinet/in.h\" >&5\n+echo \"configure:8007: checking whether struct ip_mreq is in netinet/in.h\" >&5\n cat > conftest.$ac_ext <<EOF\n-#line 8006 \"configure\"\n+#line 8009 \"configure\"\n #include \"confdefs.h\"\n #include <netinet/in.h>\n int main() {\n struct ip_mreq mreq;\n ; return 0; }\n EOF\n-if { (eval echo configure:8013: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:8016: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   cat >> confdefs.h <<\\EOF\n #define HAVE_STRUCT_IP_MREQ 1\n@@ -8025,16 +8028,16 @@ fi\n rm -f conftest*\n \n echo $ac_n \"checking whether struct ipv6_mreq is in netinet/in.h\"\"... $ac_c\" 1>&6\n-echo \"configure:8029: checking whether struct ipv6_mreq is in netinet/in.h\" >&5\n+echo \"configure:8032: checking whether struct ipv6_mreq is in netinet/in.h\" >&5\n cat > conftest.$ac_ext <<EOF\n-#line 8031 \"configure\"\n+#line 8034 \"configure\"\n #include \"confdefs.h\"\n #include <netinet/in.h>\n int main() {\n struct ipv6_mreq mreq6;\n ; return 0; }\n EOF\n-if { (eval echo configure:8038: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:8041: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   cat >> confdefs.h <<\\EOF\n #define HAVE_STRUCT_IPV6_MREQ 1\n@@ -8050,16 +8053,16 @@ fi\n rm -f conftest*\n \n echo $ac_n \"checking whether struct sockaddr_in6 is in netinet/in.h\"\"... $ac_c\" 1>&6\n-echo \"configure:8054: checking whether struct sockaddr_in6 is in netinet/in.h\" >&5\n+echo \"configure:8057: checking whether struct sockaddr_in6 is in netinet/in.h\" >&5\n cat > conftest.$ac_ext <<EOF\n-#line 8056 \"configure\"\n+#line 8059 \"configure\"\n #include \"confdefs.h\"\n #include <netinet/in.h>\n int main() {\n struct sockaddr_in6 addr6;\n ; return 0; }\n EOF\n-if { (eval echo configure:8063: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:8066: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   cat >> confdefs.h <<\\EOF\n #define HAVE_INET6 1\n@@ -8075,9 +8078,9 @@ fi\n rm -f conftest*\n \n echo $ac_n \"checking for socklen_t in sys/socket.h\"\"... $ac_c\" 1>&6\n-echo \"configure:8079: checking for socklen_t in sys/socket.h\" >&5\n+echo \"configure:8082: checking for socklen_t in sys/socket.h\" >&5\n cat > conftest.$ac_ext <<EOF\n-#line 8081 \"configure\"\n+#line 8084 \"configure\"\n #include \"confdefs.h\"\n #define _POSIX_PII_SOCKET\n #include <sys/types.h>\n@@ -8086,7 +8089,7 @@ int main() {\n socklen_t x = 5;\n ; return 0; }\n EOF\n-if { (eval echo configure:8090: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:8093: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   cat >> confdefs.h <<\\EOF\n #define HAVE_SOCKLEN_T 1\n@@ -8102,16 +8105,16 @@ fi\n rm -f conftest*\n \n echo $ac_n \"checking for tm_gmtoff in struct tm\"\"... $ac_c\" 1>&6\n-echo \"configure:8106: checking for tm_gmtoff in struct tm\" >&5\n+echo \"configure:8109: checking for tm_gmtoff in struct tm\" >&5\n cat > conftest.$ac_ext <<EOF\n-#line 8108 \"configure\"\n+#line 8111 \"configure\"\n #include \"confdefs.h\"\n #include <time.h>\n int main() {\n struct tm tim; tim.tm_gmtoff = 0;\n ; return 0; }\n EOF\n-if { (eval echo configure:8115: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:8118: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   cat >> confdefs.h <<\\EOF\n #define STRUCT_TM_HAS_GMTOFF 1\n@@ -8124,16 +8127,16 @@ else\n   rm -rf conftest*\n   echo \"$ac_t\"\"no\" 1>&6\n    echo $ac_n \"checking for global timezone variable\"\"... $ac_c\" 1>&6\n-echo \"configure:8128: checking for global timezone variable\" >&5\n+echo \"configure:8131: checking for global timezone variable\" >&5\n                cat > conftest.$ac_ext <<EOF\n-#line 8130 \"configure\"\n+#line 8133 \"configure\"\n #include \"confdefs.h\"\n #include <time.h>\n int main() {\n void i(){long z2 = 2*timezone;}\n ; return 0; }\n EOF\n-if { (eval echo configure:8137: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:8140: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   cat >> confdefs.h <<\\EOF\n #define HAVE_TIMEZONE 1\n@@ -8146,16 +8149,16 @@ else\n   rm -rf conftest*\n   echo \"$ac_t\"\"no\" 1>&6\n        echo $ac_n \"checking for global _timezone variable\"\"... $ac_c\" 1>&6\n-echo \"configure:8150: checking for global _timezone variable\" >&5\n+echo \"configure:8153: checking for global _timezone variable\" >&5\n               cat > conftest.$ac_ext <<EOF\n-#line 8152 \"configure\"\n+#line 8155 \"configure\"\n #include \"confdefs.h\"\n #include <time.h>\n int main() {\n long z2 = _timezone;\n ; return 0; }\n EOF\n-if { (eval echo configure:8159: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:8162: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   cat >> confdefs.h <<\\EOF\n #define HAVE_UNDERSCORE_TIMEZONE 1\n@@ -8177,19 +8180,19 @@ rm -f conftest*\n # The Ultrix 4.2 mips builtin alloca declared by alloca.h only works\n # for constant arguments.  Useless!\n echo $ac_n \"checking for working alloca.h\"\"... $ac_c\" 1>&6\n-echo \"configure:8181: checking for working alloca.h\" >&5\n+echo \"configure:8184: checking for working alloca.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_alloca_h'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 8186 \"configure\"\n+#line 8189 \"configure\"\n #include \"confdefs.h\"\n #include <alloca.h>\n int main() {\n char *p = alloca(2 * sizeof(int));\n ; return 0; }\n EOF\n-if { (eval echo configure:8193: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:8196: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_header_alloca_h=yes\n else\n@@ -8210,12 +8213,12 @@ EOF\n fi\n \n echo $ac_n \"checking for alloca\"\"... $ac_c\" 1>&6\n-echo \"configure:8214: checking for alloca\" >&5\n+echo \"configure:8217: checking for alloca\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_alloca_works'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 8219 \"configure\"\n+#line 8222 \"configure\"\n #include \"confdefs.h\"\n \n #ifdef __GNUC__\n@@ -8243,7 +8246,7 @@ int main() {\n char *p = (char *) alloca(1);\n ; return 0; }\n EOF\n-if { (eval echo configure:8247: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:8250: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_func_alloca_works=yes\n else\n@@ -8275,12 +8278,12 @@ EOF\n \n \n echo $ac_n \"checking whether alloca needs Cray hooks\"\"... $ac_c\" 1>&6\n-echo \"configure:8279: checking whether alloca needs Cray hooks\" >&5\n+echo \"configure:8282: checking whether alloca needs Cray hooks\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_os_cray'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 8284 \"configure\"\n+#line 8287 \"configure\"\n #include \"confdefs.h\"\n #if defined(CRAY) && ! defined(CRAY2)\n webecray\n@@ -8305,12 +8308,12 @@ echo \"$ac_t\"\"$ac_cv_os_cray\" 1>&6\n if test $ac_cv_os_cray = yes; then\n for ac_func in _getb67 GETB67 getb67; do\n   echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:8309: checking for $ac_func\" >&5\n+echo \"configure:8312: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 8314 \"configure\"\n+#line 8317 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -8333,7 +8336,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:8337: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:8340: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -8360,15 +8363,15 @@ done\n fi\n \n echo $ac_n \"checking stack direction for C alloca\"\"... $ac_c\" 1>&6\n-echo \"configure:8364: checking stack direction for C alloca\" >&5\n+echo \"configure:8367: checking stack direction for C alloca\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_stack_direction'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_c_stack_direction=0\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 8372 \"configure\"\n+#line 8375 \"configure\"\n #include \"confdefs.h\"\n find_stack_direction ()\n {\n@@ -8387,7 +8390,7 @@ main ()\n   exit (find_stack_direction() < 0);\n }\n EOF\n-if { (eval echo configure:8391: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:8394: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_c_stack_direction=1\n else\n@@ -8412,17 +8415,17 @@ for ac_hdr in unistd.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:8416: checking for $ac_hdr\" >&5\n+echo \"configure:8419: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 8421 \"configure\"\n+#line 8424 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:8426: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:8429: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -8451,12 +8454,12 @@ done\n for ac_func in getpagesize\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:8455: checking for $ac_func\" >&5\n+echo \"configure:8458: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 8460 \"configure\"\n+#line 8463 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -8479,7 +8482,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:8483: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:8486: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -8504,15 +8507,15 @@ fi\n done\n \n echo $ac_n \"checking for working mmap\"\"... $ac_c\" 1>&6\n-echo \"configure:8508: checking for working mmap\" >&5\n+echo \"configure:8511: checking for working mmap\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_mmap_fixed_mapped'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_func_mmap_fixed_mapped=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 8516 \"configure\"\n+#line 8519 \"configure\"\n #include \"confdefs.h\"\n \n /* Thanks to Mike Haertel and Jim Avera for this test.\n@@ -8652,7 +8655,7 @@ main()\n }\n \n EOF\n-if { (eval echo configure:8656: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:8659: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_mmap_fixed_mapped=yes\n else\n@@ -8680,7 +8683,7 @@ do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:8684: checking for $ac_word\" >&5\n+echo \"configure:8687: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_PERL'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -9258,8 +9261,8 @@ fi; done\n EOF\n \n cat >> $CONFIG_STATUS <<EOF\n-ac_sources=\"include/$PLATFORMH java/io/natFile${FILE-${PLATFORM}}.cc java/io/natFileDescriptor${FILE-${PLATFORM}}.cc java/lang/${PLATFORM}Process.java java/lang/nat${PLATFORM}Process.cc java/net/natInetAddress${PLATFORMNET}.cc java/net/natNetworkInterface${PLATFORMNET}.cc java/net/natPlainSocketImpl${PLATFORMNET}.cc java/net/natPlainDatagramSocketImpl${PLATFORMNET}.cc include/$GCHDR include/$THREADH sysdep/$sysdeps_dir/locks.h $SIGNAL_HANDLER\"\n-ac_dests=\"include/platform.h java/io/natFile.cc java/io/natFileDescriptor.cc java/lang/ConcreteProcess.java java/lang/natConcreteProcess.cc java/net/natInetAddress.cc java/net/natNetworkInterface.cc java/net/natPlainSocketImpl.cc java/net/natPlainDatagramSocketImpl.cc include/java-gc.h include/java-threads.h sysdep/locks.h include/java-signal.h\"\n+ac_sources=\"include/$PLATFORMH java/io/natFile${FILE-${PLATFORM}}.cc java/io/natFileDescriptor${FILE-${PLATFORM}}.cc java/lang/${PLATFORM}Process.java java/lang/nat${PLATFORM}Process.cc java/net/natInetAddress${PLATFORMNET}.cc java/net/natNetworkInterface${PLATFORMNET}.cc gnu/java/net/natPlainSocketImpl${PLATFORMNET}.cc gnu/java/net/natPlainDatagramSocketImpl${PLATFORMNET}.cc include/$GCHDR include/$THREADH sysdep/$sysdeps_dir/locks.h $SIGNAL_HANDLER\"\n+ac_dests=\"include/platform.h java/io/natFile.cc java/io/natFileDescriptor.cc java/lang/ConcreteProcess.java java/lang/natConcreteProcess.cc java/net/natInetAddress.cc java/net/natNetworkInterface.cc gnu/java/net/natPlainSocketImpl.cc gnu/java/net/natPlainDatagramSocketImpl.cc include/java-gc.h include/java-threads.h sysdep/locks.h include/java-signal.h\"\n EOF\n \n cat >> $CONFIG_STATUS <<\\EOF\n@@ -9453,7 +9456,7 @@ if test \"$no_recursion\" != yes; then\n       fi\n     fi\n \n-    cd $ac_popdir\n+    cd \"$ac_popdir\"\n   done\n fi\n "}, {"sha": "d787120154797e6cd4863ef8ca5066ea541fb728", "filename": "libjava/configure.in", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.in?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -272,13 +272,16 @@ test -d java/lang || mkdir java/lang\n AC_LINK_FILES(java/lang/${PLATFORM}Process.java, java/lang/ConcreteProcess.java)\n AC_LINK_FILES(java/lang/nat${PLATFORM}Process.cc, java/lang/natConcreteProcess.cc)\n \n-dnl Likewise for natInetAddress.cc, natNetworkInterface.cc, natPlainSocketImpl.cc\n-dnl and natPlainDatagramSocketImpl.cc\n+dnl Likewise for natInetAddress.cc and natNetworkInterface.cc.\n test -d java/net || mkdir java/net\n AC_LINK_FILES(java/net/natInetAddress${PLATFORMNET}.cc, java/net/natInetAddress.cc)\n AC_LINK_FILES(java/net/natNetworkInterface${PLATFORMNET}.cc, java/net/natNetworkInterface.cc)\n-AC_LINK_FILES(java/net/natPlainSocketImpl${PLATFORMNET}.cc, java/net/natPlainSocketImpl.cc)\n-AC_LINK_FILES(java/net/natPlainDatagramSocketImpl${PLATFORMNET}.cc, java/net/natPlainDatagramSocketImpl.cc)\n+\n+dnl Likewise for natPlainSocketImpl.cc and natPlainDatagramSocketImpl.ca.c\n+test -d gnu/java || mkdir gnu/java\n+test -d gnu/java/net || mkdir gnu/java/net\n+AC_LINK_FILES(gnu/java/net/natPlainSocketImpl${PLATFORMNET}.cc, gnu/java/net/natPlainSocketImpl.cc)\n+AC_LINK_FILES(gnu/java/net/natPlainDatagramSocketImpl${PLATFORMNET}.cc, gnu/java/net/natPlainDatagramSocketImpl.cc)\n \n case \"${host}\" in\n     *mingw*)"}, {"sha": "a0785dbc303f7c9d119b7438babc00ec27e64e5e", "filename": "libjava/gnu/java/net/PlainDatagramSocketImpl.java", "status": "renamed", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FPlainDatagramSocketImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FPlainDatagramSocketImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FPlainDatagramSocketImpl.java?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -1,5 +1,5 @@\n /* PlainDatagramSocketImpl.java -- Default DatagramSocket implementation\n-   Copyright (C) 1998, 1999, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -36,9 +36,17 @@\n exception statement from your version. */\n \n \n-package java.net;\n+package gnu.java.net;\n \n import java.io.IOException;\n+import java.net.DatagramPacket;\n+import java.net.DatagramSocketImpl;\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.net.NetworkInterface;\n+import java.net.SocketAddress;\n+import java.net.SocketOptions;\n+import java.net.SocketException;\n import gnu.classpath.Configuration;\n \n /**\n@@ -55,7 +63,7 @@\n  * @author Aaron M. Renn <arenn@urbanophile.com>\n  * @author Warren Levy <warrenl@cygnus.com>\n  */\n-class PlainDatagramSocketImpl extends DatagramSocketImpl\n+public final class PlainDatagramSocketImpl extends DatagramSocketImpl\n {\n   // Static initializer to load native library\n   static", "previous_filename": "libjava/java/net/PlainDatagramSocketImpl.java"}, {"sha": "182f357f55fdae324be568755c6d6ec948f35147", "filename": "libjava/gnu/java/net/PlainSocketImpl.java", "status": "renamed", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FPlainSocketImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FPlainSocketImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FPlainSocketImpl.java?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -1,5 +1,5 @@\n /* PlainSocketImpl.java -- Default socket implementation\n-   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -36,11 +36,17 @@\n exception statement from your version. */\n \n \n-package java.net;\n+package gnu.java.net;\n \n import java.io.InputStream;\n import java.io.IOException;\n import java.io.OutputStream;\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.net.SocketAddress;\n+import java.net.SocketException;\n+import java.net.SocketImpl;\n+import java.net.SocketOptions;\n import gnu.classpath.Configuration;\n \n /**\n@@ -59,7 +65,7 @@\n  * @author Nic Ferrier <nferrier@tapsellferrier.co.uk>\n  * @author Aaron M. Renn <arenn@urbanophile.com>\n  */\n-class PlainSocketImpl extends SocketImpl\n+public final class PlainSocketImpl extends SocketImpl\n {\n   // Static initializer to load native library.\n   static", "previous_filename": "libjava/java/net/PlainSocketImpl.java"}, {"sha": "90d703bf35c354acf8849532fe9060286a244c50", "filename": "libjava/gnu/java/net/SocketInputStream.java", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FSocketInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FSocketInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FSocketInputStream.java?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -36,7 +36,7 @@\n exception statement from your version. */\n \n \n-package java.net;\n+package gnu.java.net;\n \n import java.io.InputStream;\n import java.io.IOException;", "previous_filename": "libjava/java/net/SocketInputStream.java"}, {"sha": "4d68e3c7570e4350954d81ccaeb91ed6ef82da82", "filename": "libjava/gnu/java/net/SocketOutputStream.java", "status": "renamed", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FSocketOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FSocketOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FSocketOutputStream.java?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -35,7 +35,8 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package java.net;\n+\n+package gnu.java.net;\n \n import java.io.OutputStream;\n import java.io.IOException;", "previous_filename": "libjava/java/net/SocketOutputStream.java"}, {"sha": "7cb5a2e068b68fd9198ae5b2674fc2ec43e5ca0d", "filename": "libjava/gnu/java/net/natPlainDatagramSocketImplNoNet.cc", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplNoNet.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplNoNet.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplNoNet.cc?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -0,0 +1,119 @@\n+/* Copyright (C) 2003  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+#include <config.h>\n+#include <platform.h>\n+\n+#include <gnu/java/net/PlainDatagramSocketImpl.h>\n+#include <java/io/IOException.h>\n+#include <java/lang/Object.h>\n+#include <java/net/BindException.h>\n+#include <java/net/DatagramPacket.h>\n+#include <java/net/InetAddress.h>\n+#include <java/net/NetworkInterface.h>\n+#include <java/net/SocketException.h>\n+\n+void\n+gnu::java::net::PlainDatagramSocketImpl::create ()\n+{\n+  throw new ::java::net::SocketException (\n+    JvNewStringLatin1 (\"DatagramSocketImpl.create: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainDatagramSocketImpl::bind (jint, ::java::net::InetAddress *)\n+{\n+  throw new ::java::net::BindException (\n+    JvNewStringLatin1 (\"DatagramSocketImpl.bind: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainDatagramSocketImpl::connect (::java::net::InetAddress *, jint)\n+{\n+  throw new ::java::net::SocketException (\n+    JvNewStringLatin1 (\"DatagramSocketImpl.connect: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainDatagramSocketImpl::disconnect ()\n+{\n+  throw new ::java::net::SocketException (\n+    JvNewStringLatin1 (\"DatagramSocketImpl.disconnect: unimplemented\"));\n+}\n+\n+jint\n+gnu::java::net::PlainDatagramSocketImpl::peek (::java::net::InetAddress *)\n+{\n+  throw new ::java::io::IOException (\n+    JvNewStringLatin1 (\"DatagramSocketImpl.peek: unimplemented\"));\n+}\n+\n+jint\n+gnu::java::net::PlainDatagramSocketImpl::peekData (::java::net::DatagramPacket *)\n+{\n+  throw new ::java::io::IOException (\n+    JvNewStringLatin1 (\"DatagramSocketImpl.peekData: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainDatagramSocketImpl::close ()\n+{\n+  throw new ::java::io::IOException (\n+    JvNewStringLatin1 (\"DatagramSocketImpl.close: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainDatagramSocketImpl::send (::java::net::DatagramPacket *)\n+{\n+  throw new ::java::io::IOException (\n+    JvNewStringLatin1 (\"DatagramSocketImpl.send: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainDatagramSocketImpl::receive (::java::net::DatagramPacket *)\n+{\n+  throw new ::java::io::IOException (\n+    JvNewStringLatin1 (\"DatagramSocketImpl.receive: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainDatagramSocketImpl::setTimeToLive (jint)\n+{\n+  throw new ::java::io::IOException (\n+    JvNewStringLatin1 (\"DatagramSocketImpl.setTimeToLive: unimplemented\"));\n+}\n+\n+jint\n+gnu::java::net::PlainDatagramSocketImpl::getTimeToLive ()\n+{\n+  throw new ::java::io::IOException (\n+    JvNewStringLatin1 (\"DatagramSocketImpl.getTimeToLive: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainDatagramSocketImpl::mcastGrp (::java::net::InetAddress *,\n+                                              ::java::net::NetworkInterface *,\n+\t\t\t\t\t      jboolean)\n+{\n+  throw new ::java::io::IOException (\n+    JvNewStringLatin1 (\"DatagramSocketImpl.mcastGrp: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainDatagramSocketImpl::setOption (jint, ::java::lang::Object *)\n+{\n+  throw new ::java::net::SocketException (\n+    JvNewStringLatin1 (\"DatagramSocketImpl.setOption: unimplemented\"));\n+}\n+\n+::java::lang::Object *\n+gnu::java::net::PlainDatagramSocketImpl::getOption (jint)\n+{\n+  throw new ::java::net::SocketException (\n+    JvNewStringLatin1 (\"DatagramSocketImpl.getOption: unimplemented\"));\n+}"}, {"sha": "f1897b789d98c951b7378f0305fa3a45a5280e1b", "filename": "libjava/gnu/java/net/natPlainDatagramSocketImplPosix.cc", "status": "renamed", "additions": 80, "deletions": 80, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplPosix.cc?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -24,11 +24,11 @@ details.  */\n #endif\n \n #include <gcj/cni.h>\n+#include <gnu/java/net/PlainDatagramSocketImpl.h>\n #include <java/io/IOException.h>\n #include <java/io/InterruptedIOException.h>\n #include <java/net/BindException.h>\n #include <java/net/SocketException.h>\n-#include <java/net/PlainDatagramSocketImpl.h>\n #include <java/net/InetAddress.h>\n #include <java/net/NetworkInterface.h>\n #include <java/net/DatagramPacket.h>\n@@ -69,14 +69,14 @@ union InAddr\n // NoRouteToHostException; also consider UnknownHostException, ConnectException.\n \n void\n-java::net::PlainDatagramSocketImpl::create ()\n+gnu::java::net::PlainDatagramSocketImpl::create ()\n {\n   int sock = _Jv_socket (AF_INET, SOCK_DGRAM, 0);\n \n   if (sock < 0)\n     {\n       char* strerr = strerror (errno);\n-      throw new java::net::SocketException (JvNewStringUTF (strerr));\n+      throw new ::java::net::SocketException (JvNewStringUTF (strerr));\n     }\n \n   _Jv_platform_close_on_exec (sock);\n@@ -87,8 +87,8 @@ java::net::PlainDatagramSocketImpl::create ()\n }\n \n void\n-java::net::PlainDatagramSocketImpl::bind (jint lport,\n-\t\t\t\t\t  java::net::InetAddress *host)\n+gnu::java::net::PlainDatagramSocketImpl::bind (jint lport,\n+                                               ::java::net::InetAddress *host)\n {\n   union SockAddr u;\n   struct sockaddr *ptr = (struct sockaddr *) &u.address;\n@@ -119,7 +119,7 @@ java::net::PlainDatagramSocketImpl::bind (jint lport,\n     }\n #endif\n   else\n-    throw new java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n \n   if (_Jv_bind (fnum, ptr, len) == 0)\n     {\n@@ -143,25 +143,25 @@ java::net::PlainDatagramSocketImpl::bind (jint lport,\n \n  error:\n   char* strerr = strerror (errno);\n-  throw new java::net::BindException (JvNewStringUTF (strerr));\n+  throw new ::java::net::BindException (JvNewStringUTF (strerr));\n }\n \n void\n-java::net::PlainDatagramSocketImpl::connect (java::net::InetAddress *, jint)\n+gnu::java::net::PlainDatagramSocketImpl::connect (::java::net::InetAddress *, jint)\n { \n   throw new ::java::lang::InternalError (JvNewStringLatin1 (\n \t    \"PlainDatagramSocketImpl::connect: not implemented yet\"));\n }\n \n void\n-java::net::PlainDatagramSocketImpl::disconnect ()\n+gnu::java::net::PlainDatagramSocketImpl::disconnect ()\n {\n   throw new ::java::lang::InternalError (JvNewStringLatin1 (\n \t    \"PlainDatagramSocketImpl::disconnect: not implemented yet\"));\n }\n \n jint\n-java::net::PlainDatagramSocketImpl::peek (java::net::InetAddress *i)\n+gnu::java::net::PlainDatagramSocketImpl::peek (::java::net::InetAddress *i)\n {\n   // FIXME: Deal with Multicast and if the socket is connected.\n   union SockAddr u;\n@@ -189,21 +189,21 @@ java::net::PlainDatagramSocketImpl::peek (java::net::InetAddress *i)\n     }\n #endif\n   else\n-    throw new java::net::SocketException (JvNewStringUTF (\"invalid family\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"invalid family\"));\n \n   i->addr = raddr;\n   return rport;\n  error:\n   char* strerr = strerror (errno);\n \n   if (errno == ECONNREFUSED)\n-    throw new PortUnreachableException (JvNewStringUTF (strerr));\n+    throw new ::java::net::PortUnreachableException (JvNewStringUTF (strerr));\n \n-  throw new java::io::IOException (JvNewStringUTF (strerr));\n+  throw new ::java::io::IOException (JvNewStringUTF (strerr));\n }\n \n jint\n-java::net::PlainDatagramSocketImpl::peekData(java::net::DatagramPacket *p)\n+gnu::java::net::PlainDatagramSocketImpl::peekData (::java::net::DatagramPacket *p)\n {\n   // FIXME: Deal with Multicast and if the socket is connected.\n   union SockAddr u;\n@@ -224,7 +224,7 @@ java::net::PlainDatagramSocketImpl::peekData(java::net::DatagramPacket *p)\n       if ((retval = _Jv_select (fnum + 1, &rset, NULL, NULL, &tv)) < 0)\n         goto error;\n       else if (retval == 0)\n-        throw new java::io::InterruptedIOException ();\n+        throw new ::java::io::InterruptedIOException ();\n     }\n \n   retlen =\n@@ -250,9 +250,9 @@ java::net::PlainDatagramSocketImpl::peekData(java::net::DatagramPacket *p)\n     }\n #endif\n   else\n-    throw new java::net::SocketException (JvNewStringUTF (\"invalid family\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"invalid family\"));\n \n-  p->setAddress (new InetAddress (raddr, NULL));\n+  p->setAddress (new ::java::net::InetAddress (raddr, NULL));\n   p->setPort (rport);\n   p->setLength ((jint) retlen);\n   return rport;\n@@ -261,14 +261,14 @@ java::net::PlainDatagramSocketImpl::peekData(java::net::DatagramPacket *p)\n   char* strerr = strerror (errno);\n \n   if (errno == ECONNREFUSED)\n-    throw new PortUnreachableException (JvNewStringUTF (strerr));\n+    throw new ::java::net::PortUnreachableException (JvNewStringUTF (strerr));\n \n-  throw new java::io::IOException (JvNewStringUTF (strerr));\n+  throw new ::java::io::IOException (JvNewStringUTF (strerr));\n }\n \n // Close(shutdown) the socket.\n void\n-java::net::PlainDatagramSocketImpl::close ()\n+gnu::java::net::PlainDatagramSocketImpl::close ()\n {\n   // Avoid races from asynchronous finalization.\n   JvSynchronize sync (this);\n@@ -281,7 +281,7 @@ java::net::PlainDatagramSocketImpl::close ()\n }\n \n void\n-java::net::PlainDatagramSocketImpl::send (java::net::DatagramPacket *p)\n+gnu::java::net::PlainDatagramSocketImpl::send (::java::net::DatagramPacket *p)\n {\n   // FIXME: Deal with Multicast and if the socket is connected.\n   jint rport = p->getPort();\n@@ -308,21 +308,21 @@ java::net::PlainDatagramSocketImpl::send (java::net::DatagramPacket *p)\n     }\n #endif\n   else\n-    throw new java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n \n   if (::sendto (fnum, (char *) dbytes, p->getLength(), 0, ptr, len) >= 0)\n     return;\n \n   char* strerr = strerror (errno);\n \n   if (errno == ECONNREFUSED)\n-    throw new PortUnreachableException (JvNewStringUTF (strerr));\n+    throw new ::java::net::PortUnreachableException (JvNewStringUTF (strerr));\n \n-  throw new java::io::IOException (JvNewStringUTF (strerr));\n+  throw new ::java::io::IOException (JvNewStringUTF (strerr));\n }\n \n void\n-java::net::PlainDatagramSocketImpl::receive (java::net::DatagramPacket *p)\n+gnu::java::net::PlainDatagramSocketImpl::receive (::java::net::DatagramPacket *p)\n {\n   // FIXME: Deal with Multicast and if the socket is connected.\n   union SockAddr u;\n@@ -343,7 +343,7 @@ java::net::PlainDatagramSocketImpl::receive (java::net::DatagramPacket *p)\n       if ((retval = _Jv_select (fnum + 1, &rset, NULL, NULL, &tv)) < 0)\n         goto error;\n       else if (retval == 0)\n-        throw new java::io::InterruptedIOException ();\n+        throw new ::java::io::InterruptedIOException ();\n     }\n \n   retlen =\n@@ -369,9 +369,9 @@ java::net::PlainDatagramSocketImpl::receive (java::net::DatagramPacket *p)\n     }\n #endif\n   else\n-    throw new java::net::SocketException (JvNewStringUTF (\"invalid family\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"invalid family\"));\n \n-  p->setAddress (new InetAddress (raddr, NULL));\n+  p->setAddress (new ::java::net::InetAddress (raddr, NULL));\n   p->setPort (rport);\n   p->setLength ((jint) retlen);\n   return;\n@@ -380,13 +380,13 @@ java::net::PlainDatagramSocketImpl::receive (java::net::DatagramPacket *p)\n   char* strerr = strerror (errno);\n \n   if (errno == ECONNREFUSED)\n-    throw new PortUnreachableException (JvNewStringUTF (strerr));\n+    throw new ::java::net::PortUnreachableException (JvNewStringUTF (strerr));\n \n-  throw new java::io::IOException (JvNewStringUTF (strerr));\n+  throw new ::java::io::IOException (JvNewStringUTF (strerr));\n }\n \n void\n-java::net::PlainDatagramSocketImpl::setTimeToLive (jint ttl)\n+gnu::java::net::PlainDatagramSocketImpl::setTimeToLive (jint ttl)\n {\n   // Assumes IPPROTO_IP rather than IPPROTO_IPV6 since socket created is IPv4.\n   char val = (char) ttl;\n@@ -396,11 +396,11 @@ java::net::PlainDatagramSocketImpl::setTimeToLive (jint ttl)\n     return;\n \n   char* strerr = strerror (errno);\n-  throw new java::io::IOException (JvNewStringUTF (strerr));\n+  throw new ::java::io::IOException (JvNewStringUTF (strerr));\n }\n \n jint\n-java::net::PlainDatagramSocketImpl::getTimeToLive ()\n+gnu::java::net::PlainDatagramSocketImpl::getTimeToLive ()\n {\n   // Assumes IPPROTO_IP rather than IPPROTO_IPV6 since socket created is IPv4.\n   char val;\n@@ -410,13 +410,13 @@ java::net::PlainDatagramSocketImpl::getTimeToLive ()\n     return ((int) val) & 0xFF;\n \n   char* strerr = strerror (errno);\n-  throw new java::io::IOException (JvNewStringUTF (strerr));\n+  throw new ::java::io::IOException (JvNewStringUTF (strerr));\n }\n \n void\n-java::net::PlainDatagramSocketImpl::mcastGrp (java::net::InetAddress *inetaddr,\n-                                              java::net::NetworkInterface *,\n-\t\t\t\t\t      jboolean join)\n+gnu::java::net::PlainDatagramSocketImpl::mcastGrp (::java::net::InetAddress *inetaddr,\n+                                                   ::java::net::NetworkInterface *,\n+                                                   jboolean join)\n {\n   // FIXME: implement use of NetworkInterface\n \n@@ -464,51 +464,51 @@ java::net::PlainDatagramSocketImpl::mcastGrp (java::net::InetAddress *inetaddr,\n     }\n #endif\n   else\n-    throw new java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n \n   if (::setsockopt (fnum, level, opname, ptr, len) == 0)\n     return;\n \n   char* strerr = strerror (errno);\n-  throw new java::io::IOException (JvNewStringUTF (strerr));\n+  throw new ::java::io::IOException (JvNewStringUTF (strerr));\n }\n \n void\n-java::net::PlainDatagramSocketImpl::setOption (jint optID,\n-\t\t\t\t\t       java::lang::Object *value)\n+gnu::java::net::PlainDatagramSocketImpl::setOption (jint optID,\n+                                                    ::java::lang::Object *value)\n {\n   int val;\n   socklen_t val_len = sizeof (val);\n \n   if (fnum < 0)\n-    throw new java::net::SocketException (JvNewStringUTF (\"Socket closed\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"Socket closed\"));\n \n-  if (_Jv_IsInstanceOf (value, &java::lang::Boolean::class$))\n+  if (_Jv_IsInstanceOf (value, &::java::lang::Boolean::class$))\n     {\n-      java::lang::Boolean *boolobj = \n-        static_cast<java::lang::Boolean *> (value);\n+      ::java::lang::Boolean *boolobj = \n+        static_cast< ::java::lang::Boolean *> (value);\n       val = boolobj->booleanValue() ? 1 : 0;\n     }\n-  else if (_Jv_IsInstanceOf (value, &java::lang::Integer::class$))\n+  else if (_Jv_IsInstanceOf (value, &::java::lang::Integer::class$))\n     {\n-      java::lang::Integer *intobj = \n-        static_cast<java::lang::Integer *> (value);          \n+      ::java::lang::Integer *intobj = \n+        static_cast< ::java::lang::Integer *> (value);          \n       val = (int) intobj->intValue();\n     }\n   // Else assume value to be an InetAddress for use with IP_MULTICAST_IF.\n \n   switch (optID) \n     {\n       case _Jv_TCP_NODELAY_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"TCP_NODELAY not valid for UDP\"));\n         return;\n       case _Jv_SO_LINGER_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_LINGER not valid for UDP\"));\n         return;\n       case _Jv_SO_KEEPALIVE_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_KEEPALIVE not valid for UDP\"));\n         return;\n \n@@ -519,7 +519,7 @@ java::net::PlainDatagramSocketImpl::setOption (jint optID,\n \tbreak;\n \t\n       case _Jv_SO_OOBINLINE_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_OOBINLINE: not valid for UDP\"));\n         break;\n \t\n@@ -531,7 +531,7 @@ java::net::PlainDatagramSocketImpl::setOption (jint optID,\n         if (::setsockopt (fnum, SOL_SOCKET, opt, (char *) &val, val_len) != 0)\n \t  goto error;    \n #else\n-        throw new java::lang::InternalError (\n+        throw new ::java::lang::InternalError (\n           JvNewStringUTF (\"SO_RCVBUF/SO_SNDBUF not supported\"));\n #endif \n         return;\n@@ -541,12 +541,12 @@ java::net::PlainDatagramSocketImpl::setOption (jint optID,\n \t    val_len) != 0)\n \t  goto error;\n #else\n-        throw new java::lang::InternalError (\n+        throw new ::java::lang::InternalError (\n           JvNewStringUTF (\"SO_REUSEADDR not supported\"));\n #endif \n \treturn;\n       case _Jv_SO_BINDADDR_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_BINDADDR: read only option\"));\n         return;\n       case _Jv_IP_MULTICAST_IF_ :\n@@ -557,7 +557,7 @@ java::net::PlainDatagramSocketImpl::setOption (jint optID,\n \tint level, opname;\n \tconst char *ptr;\n \n-\thaddress = ((java::net::InetAddress *) value)->addr;\n+\thaddress = ((::java::net::InetAddress *) value)->addr;\n \tbytes = elements (haddress);\n \tlen = haddress->length;\n \tif (len == 4)\n@@ -581,19 +581,19 @@ java::net::PlainDatagramSocketImpl::setOption (jint optID,\n #endif\n \telse\n \t  throw\n-\t    new java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n+\t    new ::java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n \n \tif (::setsockopt (fnum, level, opname, ptr, len) != 0)\n \t  goto error;\n         return;\n \t\n       case _Jv_IP_MULTICAST_IF2_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"IP_MULTICAST_IF2: not yet implemented\"));\n         break;\n \t\n       case _Jv_IP_MULTICAST_LOOP_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"IP_MULTICAST_LOOP: not yet implemented\"));\n         break;\n \t\n@@ -612,11 +612,11 @@ java::net::PlainDatagramSocketImpl::setOption (jint optID,\n \n  error:\n   char* strerr = strerror (errno);\n-  throw new java::net::SocketException (JvNewStringUTF (strerr));\n+  throw new ::java::net::SocketException (JvNewStringUTF (strerr));\n }\n \n-java::lang::Object *\n-java::net::PlainDatagramSocketImpl::getOption (jint optID)\n+::java::lang::Object *\n+gnu::java::net::PlainDatagramSocketImpl::getOption (jint optID)\n {\n   int val;\n   socklen_t val_len = sizeof(val);\n@@ -626,26 +626,26 @@ java::net::PlainDatagramSocketImpl::getOption (jint optID)\n   switch (optID)\n     {\n       case _Jv_TCP_NODELAY_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"TCP_NODELAY not valid for UDP\"));\n         break;\n       case _Jv_SO_LINGER_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_LINGER not valid for UDP\"));\n         break;    \n       case _Jv_SO_KEEPALIVE_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_KEEPALIVE not valid for UDP\"));\n         break;\n \t\n       case _Jv_SO_BROADCAST_ :\n \tif (::getsockopt (fnum, SOL_SOCKET, SO_BROADCAST, (char *) &val,\n \t    &val_len) != 0)\n \t  goto error;\n-\treturn new java::lang::Boolean (val != 0);\n+\treturn new ::java::lang::Boolean (val != 0);\n \t\n       case _Jv_SO_OOBINLINE_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_OOBINLINE not valid for UDP\"));\n         break;\n       \n@@ -657,9 +657,9 @@ java::net::PlainDatagramSocketImpl::getOption (jint optID)\n         if (::getsockopt (fnum, SOL_SOCKET, opt, (char *) &val, &val_len) != 0)\n \t  goto error;    \n         else\n-\t  return new java::lang::Integer (val);\n+\t  return new ::java::lang::Integer (val);\n #else\n-        throw new java::lang::InternalError (\n+        throw new ::java::lang::InternalError (\n           JvNewStringUTF (\"SO_RCVBUF/SO_SNDBUF not supported\"));\n #endif    \n \tbreak;\n@@ -683,9 +683,9 @@ java::net::PlainDatagramSocketImpl::getOption (jint optID)\n \t      }\n #endif\n \t    else\n-\t      throw new java::net::SocketException (\n+\t      throw new ::java::net::SocketException (\n \t\t\t      JvNewStringUTF (\"invalid family\"));\n-\t    localAddress = new java::net::InetAddress (laddr, NULL);\n+\t    localAddress = new ::java::net::InetAddress (laddr, NULL);\n \t  }\n \treturn localAddress;  \n \tbreak;\n@@ -694,9 +694,9 @@ java::net::PlainDatagramSocketImpl::getOption (jint optID)\n \tif (::getsockopt (fnum, SOL_SOCKET, SO_REUSEADDR, (char *) &val,\n \t    &val_len) != 0)\n \t  goto error;\n-\treturn new java::lang::Boolean (val != 0);\n+\treturn new ::java::lang::Boolean (val != 0);\n #else\n-        throw new java::lang::InternalError (\n+        throw new ::java::lang::InternalError (\n           JvNewStringUTF (\"SO_REUSEADDR not supported\"));\n #endif \n \tbreak;\n@@ -713,38 +713,38 @@ java::net::PlainDatagramSocketImpl::getOption (jint optID)\n \n \tbytes = inet_ntoa (inaddr);\n \n-\treturn java::net::InetAddress::getByName (JvNewStringLatin1 (bytes));\n+\treturn ::java::net::InetAddress::getByName (JvNewStringLatin1 (bytes));\n #else\n-\tthrow new java::net::SocketException (\n+\tthrow new ::java::net::SocketException (\n \t  JvNewStringUTF (\"IP_MULTICAST_IF: not available - no inet_ntoa()\"));\n #endif\n \tbreak;\n       case _Jv_SO_TIMEOUT_ :\n-\treturn new java::lang::Integer (timeout);\n+\treturn new ::java::lang::Integer (timeout);\n \tbreak;\n \t\n       case _Jv_IP_MULTICAST_IF2_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"IP_MULTICAST_IF2: not yet implemented\"));\n         break;\n \t\n       case _Jv_IP_MULTICAST_LOOP_ :\n \tif (::getsockopt (fnum, SOL_SOCKET, IP_MULTICAST_LOOP, (char *) &val,\n \t    &val_len) != 0)\n \t  goto error;\n-\treturn new java::lang::Boolean (val != 0);\n+\treturn new ::java::lang::Boolean (val != 0);\n \t\n       case _Jv_IP_TOS_ :\n         if (::getsockopt (fnum, SOL_SOCKET, IP_TOS, (char *) &val,\n            &val_len) != 0)\n           goto error;\n-        return new java::lang::Integer (val);\n+        return new ::java::lang::Integer (val);\n \t\n       default :\n \terrno = ENOPROTOOPT;\n     }\n \n  error:\n   char* strerr = strerror (errno);\n-  throw new java::net::SocketException (JvNewStringUTF (strerr));\n+  throw new ::java::net::SocketException (JvNewStringUTF (strerr));\n }", "previous_filename": "libjava/java/net/natPlainDatagramSocketImplPosix.cc"}, {"sha": "ae4b0925c59621d0e80275c93910e302fe0a3952", "filename": "libjava/gnu/java/net/natPlainDatagramSocketImplWin32.cc", "status": "renamed", "additions": 69, "deletions": 69, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplWin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplWin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplWin32.cc?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -15,11 +15,11 @@ details.  */\n #include <bstring.h>\n #endif\n \n+#include <gnu/java/net/PlainDatagramSocketImpl.h>\n #include <java/io/IOException.h>\n #include <java/io/InterruptedIOException.h>\n #include <java/net/BindException.h>\n #include <java/net/SocketException.h>\n-#include <java/net/PlainDatagramSocketImpl.h>\n #include <java/net/InetAddress.h>\n #include <java/net/NetworkInterface.h>\n #include <java/net/DatagramPacket.h>\n@@ -60,7 +60,7 @@ union InAddr\n // NoRouteToHostException; also consider UnknownHostException, ConnectException.\n \n void\n-java::net::PlainDatagramSocketImpl::create ()\n+gnu::java::net::PlainDatagramSocketImpl::create ()\n {\n   SOCKET sock = ::socket (AF_INET, SOCK_DGRAM, 0);\n \n@@ -77,8 +77,8 @@ java::net::PlainDatagramSocketImpl::create ()\n }\n \n void\n-java::net::PlainDatagramSocketImpl::bind (jint lport,\n-            java::net::InetAddress *host)\n+gnu::java::net::PlainDatagramSocketImpl::bind (jint lport,\n+\t\t\t\t\t  ::java::net::InetAddress *host)\n {\n   union SockAddr u;\n   struct sockaddr *ptr = (struct sockaddr *) &u.address;\n@@ -109,7 +109,7 @@ java::net::PlainDatagramSocketImpl::bind (jint lport,\n     }\n #endif\n   else\n-    throw new java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n \n   if (::bind (fnum, ptr, len) == 0)\n     {\n@@ -133,25 +133,25 @@ java::net::PlainDatagramSocketImpl::bind (jint lport,\n \n error:\n   DWORD dwErrorCode = WSAGetLastError ();\n-  throw new java::net::BindException (_Jv_WinStrError (dwErrorCode));\n+  throw new ::java::net::BindException (_Jv_WinStrError (dwErrorCode));\n }\n \n void\n-java::net::PlainDatagramSocketImpl::connect (java::net::InetAddress *, jint)\n-{\n+gnu::java::net::PlainDatagramSocketImpl::connect (::java::net::InetAddress *, jint)\n+{ \n   throw new ::java::lang::InternalError (JvNewStringLatin1 (\n       \"PlainDatagramSocketImpl::connect: not implemented yet\"));\n }\n \n void\n-java::net::PlainDatagramSocketImpl::disconnect ()\n+gnu::java::net::PlainDatagramSocketImpl::disconnect ()\n {\n   throw new ::java::lang::InternalError (JvNewStringLatin1 (\n       \"PlainDatagramSocketImpl::disconnect: not implemented yet\"));\n }\n \n jint\n-java::net::PlainDatagramSocketImpl::peek (java::net::InetAddress *i)\n+gnu::java::net::PlainDatagramSocketImpl::peek (::java::net::InetAddress *i)\n {\n   // FIXME: Deal with Multicast and if the socket is connected.\n   union SockAddr u;\n@@ -179,22 +179,22 @@ java::net::PlainDatagramSocketImpl::peek (java::net::InetAddress *i)\n     }\n #endif\n   else\n-    throw new java::net::SocketException (JvNewStringUTF (\"invalid family\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"invalid family\"));\n \n   i->addr = raddr;\n   return rport;\n error:\n   DWORD dwErrorCode = WSAGetLastError ();\n   if (dwErrorCode == WSAECONNRESET)\n-    throw new PortUnreachableException (_Jv_WinStrError (dwErrorCode));\n+    throw new ::java::net::PortUnreachableException (_Jv_WinStrError (dwErrorCode));\n \n   _Jv_ThrowIOException ();\n   return -1;\n     // we should never get here\n }\n \n jint\n-java::net::PlainDatagramSocketImpl::peekData(java::net::DatagramPacket *p)\n+gnu::java::net::PlainDatagramSocketImpl::peekData(::java::net::DatagramPacket *p)\n {\n   // FIXME: Deal with Multicast and if the socket is connected.\n   union SockAddr u;\n@@ -233,7 +233,7 @@ java::net::PlainDatagramSocketImpl::peekData(java::net::DatagramPacket *p)\n     }\n #endif\n   else\n-    throw new java::net::SocketException (JvNewStringUTF (\"invalid family\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"invalid family\"));\n \n   p->setAddress (new InetAddress (raddr, NULL));\n   p->setPort (rport);\n@@ -243,9 +243,9 @@ java::net::PlainDatagramSocketImpl::peekData(java::net::DatagramPacket *p)\n error:\n   DWORD dwErrorCode = WSAGetLastError ();\n   if (dwErrorCode == WSAECONNRESET)\n-    throw new PortUnreachableException (_Jv_WinStrError (dwErrorCode));\n+    throw new ::java::net::PortUnreachableException (_Jv_WinStrError (dwErrorCode));\n   else if (dwErrorCode == WSAETIMEDOUT)\n-    throw new java::net::SocketTimeoutException (_Jv_WinStrError (dwErrorCode));\n+    throw new ::java::net::SocketTimeoutException (_Jv_WinStrError (dwErrorCode));\n   else\n     _Jv_ThrowIOException ();\n \n@@ -255,7 +255,7 @@ java::net::PlainDatagramSocketImpl::peekData(java::net::DatagramPacket *p)\n \n // Close(shutdown) the socket.\n void\n-java::net::PlainDatagramSocketImpl::close ()\n+gnu::java::net::PlainDatagramSocketImpl::close ()\n {\n   // Avoid races from asynchronous finalization.\n   JvSynchronize sync (this);\n@@ -268,7 +268,7 @@ java::net::PlainDatagramSocketImpl::close ()\n }\n \n void\n-java::net::PlainDatagramSocketImpl::send (java::net::DatagramPacket *p)\n+gnu::java::net::PlainDatagramSocketImpl::send (::java::net::DatagramPacket *p)\n {\n   // FIXME: Deal with Multicast and if the socket is connected.\n   jint rport = p->getPort();\n@@ -295,20 +295,20 @@ java::net::PlainDatagramSocketImpl::send (java::net::DatagramPacket *p)\n     }\n #endif\n   else\n-    throw new java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n \n   if (::sendto (fnum, (char *) dbytes, p->getLength(), 0, ptr, len) >= 0)\n     return;\n \n   DWORD dwErrorCode = WSAGetLastError ();\n   if (dwErrorCode == WSAECONNRESET)\n-    throw new PortUnreachableException (_Jv_WinStrError (dwErrorCode));\n+    throw new ::java::net::PortUnreachableException (_Jv_WinStrError (dwErrorCode));\n \n   _Jv_ThrowIOException ();\n }\n \n void\n-java::net::PlainDatagramSocketImpl::receive (java::net::DatagramPacket *p)\n+gnu::java::net::PlainDatagramSocketImpl::receive (::java::net::DatagramPacket *p)\n {\n   // FIXME: Deal with Multicast and if the socket is connected.\n   union SockAddr u;\n@@ -350,25 +350,25 @@ java::net::PlainDatagramSocketImpl::receive (java::net::DatagramPacket *p)\n     }\n #endif\n   else\n-    throw new java::net::SocketException (JvNewStringUTF (\"invalid family\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"invalid family\"));\n \n-  p->setAddress (new InetAddress (raddr, NULL));\n+  p->setAddress (new ::java::net::InetAddress (raddr, NULL));\n   p->setPort (rport);\n   p->setLength ((jint) retlen);\n   return;\n \n  error:\n   DWORD dwErrorCode = WSAGetLastError();\n   if (dwErrorCode == WSAECONNRESET)\n-    throw new PortUnreachableException (_Jv_WinStrError (dwErrorCode));\n+    throw new ::java::net::PortUnreachableException (_Jv_WinStrError (dwErrorCode));\n   else if (dwErrorCode == WSAETIMEDOUT)\n-    throw new java::net::SocketTimeoutException (_Jv_WinStrError (dwErrorCode));\n+    throw new ::java::net::SocketTimeoutException (_Jv_WinStrError (dwErrorCode));\n   else\n-    throw new java::io::IOException (_Jv_WinStrError (dwErrorCode));\n+    throw new ::java::io::IOException (_Jv_WinStrError (dwErrorCode));\n }\n \n void\n-java::net::PlainDatagramSocketImpl::setTimeToLive (jint ttl)\n+gnu::java::net::PlainDatagramSocketImpl::setTimeToLive (jint ttl)\n {\n   // Assumes IPPROTO_IP rather than IPPROTO_IPV6 since socket created is IPv4.\n   char val = (char) ttl;\n@@ -381,7 +381,7 @@ java::net::PlainDatagramSocketImpl::setTimeToLive (jint ttl)\n }\n \n jint\n-java::net::PlainDatagramSocketImpl::getTimeToLive ()\n+gnu::java::net::PlainDatagramSocketImpl::getTimeToLive ()\n {\n   // Assumes IPPROTO_IP rather than IPPROTO_IPV6 since socket created is IPv4.\n   char val;\n@@ -397,9 +397,9 @@ java::net::PlainDatagramSocketImpl::getTimeToLive ()\n }\n \n void\n-java::net::PlainDatagramSocketImpl::mcastGrp (java::net::InetAddress *inetaddr,\n-                                              java::net::NetworkInterface *,\n-                jboolean)\n+gnu::java::net::PlainDatagramSocketImpl::mcastGrp (::java::net::InetAddress *inetaddr,\n+                                              ::java::net::NetworkInterface *,\n+\t\t\t\t\t      jboolean join)\n {\n   // FIXME: implement use of NetworkInterface\n   jbyteArray haddress = inetaddr->addr;\n@@ -444,7 +444,7 @@ java::net::PlainDatagramSocketImpl::mcastGrp (java::net::InetAddress *inetaddr,\n     }\n #endif\n   else\n-    throw new java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n \n   if (::setsockopt (fnum, level, opname, ptr, len) == 0)\n     return;\n@@ -453,41 +453,41 @@ java::net::PlainDatagramSocketImpl::mcastGrp (java::net::InetAddress *inetaddr,\n }\n \n void\n-java::net::PlainDatagramSocketImpl::setOption (jint optID,\n-                 java::lang::Object *value)\n+gnu::java::net::PlainDatagramSocketImpl::setOption (jint optID,\n+\t\t\t\t\t       ::java::lang::Object *value)\n {\n   int val;\n   socklen_t val_len = sizeof (val);\n \n   if (fnum < 0)\n-    throw new java::net::SocketException (JvNewStringUTF (\"Socket closed\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"Socket closed\"));\n \n-  if (_Jv_IsInstanceOf (value, &java::lang::Boolean::class$))\n+  if (_Jv_IsInstanceOf (value, &::java::lang::Boolean::class$))\n     {\n-      java::lang::Boolean *boolobj =\n-        static_cast<java::lang::Boolean *> (value);\n+      ::java::lang::Boolean *boolobj = \n+        static_cast< ::java::lang::Boolean *> (value);\n       val = boolobj->booleanValue() ? 1 : 0;\n     }\n-  else if (_Jv_IsInstanceOf (value, &java::lang::Integer::class$))\n+  else if (_Jv_IsInstanceOf (value, &::java::lang::Integer::class$))\n     {\n-      java::lang::Integer *intobj =\n-        static_cast<java::lang::Integer *> (value);\n+      ::java::lang::Integer *intobj = \n+        static_cast< ::java::lang::Integer *> (value);          \n       val = (int) intobj->intValue();\n     }\n   // Else assume value to be an InetAddress for use with IP_MULTICAST_IF.\n \n   switch (optID)\n     {\n       case _Jv_TCP_NODELAY_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"TCP_NODELAY not valid for UDP\"));\n         return;\n       case _Jv_SO_LINGER_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_LINGER not valid for UDP\"));\n         return;\n       case _Jv_SO_KEEPALIVE_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_KEEPALIVE not valid for UDP\"));\n         return;\n \n@@ -498,7 +498,7 @@ java::net::PlainDatagramSocketImpl::setOption (jint optID,\n   break;\n \n       case _Jv_SO_OOBINLINE_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_OOBINLINE: not valid for UDP\"));\n         break;\n \n@@ -515,7 +515,7 @@ java::net::PlainDatagramSocketImpl::setOption (jint optID,\n     goto error;\n   return;\n       case _Jv_SO_BINDADDR_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_BINDADDR: read only option\"));\n         return;\n       case _Jv_IP_MULTICAST_IF_ :\n@@ -526,7 +526,7 @@ java::net::PlainDatagramSocketImpl::setOption (jint optID,\n   int level, opname;\n   const char *ptr;\n \n-  haddress = ((java::net::InetAddress *) value)->addr;\n+  haddress = ((::java::net::InetAddress *) value)->addr;\n   bytes = elements (haddress);\n   len = haddress->length;\n   if (len == 4)\n@@ -550,19 +550,19 @@ java::net::PlainDatagramSocketImpl::setOption (jint optID,\n #endif\n   else\n     throw\n-      new java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n+      new ::java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n \n   if (::setsockopt (fnum, level, opname, ptr, len) != 0)\n     goto error;\n         return;\n \n       case _Jv_IP_MULTICAST_IF2_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"IP_MULTICAST_IF2: not yet implemented\"));\n         break;\n \n       case _Jv_IP_MULTICAST_LOOP_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"IP_MULTICAST_LOOP: not yet implemented\"));\n         break;\n \n@@ -583,8 +583,8 @@ java::net::PlainDatagramSocketImpl::setOption (jint optID,\n   _Jv_ThrowSocketException ();\n }\n \n-java::lang::Object *\n-java::net::PlainDatagramSocketImpl::getOption (jint optID)\n+::java::lang::Object *\n+gnu::java::net::PlainDatagramSocketImpl::getOption (jint optID)\n {\n   int val;\n   socklen_t val_len = sizeof(val);\n@@ -594,26 +594,26 @@ java::net::PlainDatagramSocketImpl::getOption (jint optID)\n   switch (optID)\n     {\n       case _Jv_TCP_NODELAY_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"TCP_NODELAY not valid for UDP\"));\n         break;\n       case _Jv_SO_LINGER_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_LINGER not valid for UDP\"));\n         break;\n       case _Jv_SO_KEEPALIVE_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_KEEPALIVE not valid for UDP\"));\n         break;\n \n       case _Jv_SO_BROADCAST_ :\n   if (::getsockopt (fnum, SOL_SOCKET, SO_BROADCAST, (char *) &val,\n       &val_len) != 0)\n     goto error;\n-  return new java::lang::Boolean (val != 0);\n+  return new ::java::lang::Boolean (val != 0);\n \n       case _Jv_SO_OOBINLINE_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_OOBINLINE not valid for UDP\"));\n         break;\n \n@@ -624,7 +624,7 @@ java::net::PlainDatagramSocketImpl::getOption (jint optID)\n         if (::getsockopt (fnum, SOL_SOCKET, opt, (char *) &val, &val_len) != 0)\n     goto error;\n         else\n-    return new java::lang::Integer (val);\n+    return new ::java::lang::Integer (val);\n   break;\n       case _Jv_SO_BINDADDR_:\n   // cache the local address\n@@ -646,17 +646,17 @@ java::net::PlainDatagramSocketImpl::getOption (jint optID)\n         }\n #endif\n       else\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n             JvNewStringUTF (\"invalid family\"));\n-      localAddress = new java::net::InetAddress (laddr, NULL);\n+      localAddress = new ::java::net::InetAddress (laddr, NULL);\n     }\n   return localAddress;\n   break;\n       case _Jv_SO_REUSEADDR_ :\n   if (::getsockopt (fnum, SOL_SOCKET, SO_REUSEADDR, (char *) &val,\n       &val_len) != 0)\n     goto error;\n-  return new java::lang::Boolean (val != 0);\n+  return new ::java::lang::Boolean (val != 0);\n   break;\n       case _Jv_IP_MULTICAST_IF_ :\n   struct in_addr inaddr;\n@@ -670,29 +670,29 @@ java::net::PlainDatagramSocketImpl::getOption (jint optID)\n \n   bytes = inet_ntoa (inaddr);\n \n-  return java::net::InetAddress::getByName (JvNewStringLatin1 (bytes));\n+  return ::java::net::InetAddress::getByName (JvNewStringLatin1 (bytes));\n   break;\n       case _Jv_SO_TIMEOUT_ :\n-  return new java::lang::Integer (timeout);\n-  break;\n-\n+\treturn new ::java::lang::Integer (timeout);\n+\tbreak;\n+\t\n       case _Jv_IP_MULTICAST_IF2_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"IP_MULTICAST_IF2: not yet implemented\"));\n         break;\n \n       case _Jv_IP_MULTICAST_LOOP_ :\n   if (::getsockopt (fnum, SOL_SOCKET, IP_MULTICAST_LOOP, (char *) &val,\n       &val_len) != 0)\n     goto error;\n-  return new java::lang::Boolean (val != 0);\n+  return new ::java::lang::Boolean (val != 0);\n \n       case _Jv_IP_TOS_ :\n         if (::getsockopt (fnum, SOL_SOCKET, IP_TOS, (char *) &val,\n            &val_len) != 0)\n           goto error;\n-        return new java::lang::Integer (val);\n-\n+        return new ::java::lang::Integer (val);\n+\t\n       default :\n         WSASetLastError (WSAENOPROTOOPT);\n     }", "previous_filename": "libjava/java/net/natPlainDatagramSocketImplWin32.cc"}, {"sha": "7465d6315026eab0a79ba08c828befe16ffb00a4", "filename": "libjava/gnu/java/net/natPlainSocketImplNoNet.cc", "status": "added", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainSocketImplNoNet.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainSocketImplNoNet.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainSocketImplNoNet.cc?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -0,0 +1,128 @@\n+/* Copyright (C) 2003 Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+#include <config.h>\n+#include <platform.h>\n+\n+#include <gnu/java/net/PlainSocketImpl.h>\n+#include <java/io/IOException.h>\n+#include <java/net/BindException.h>\n+#include <java/net/ConnectException.h>\n+#include <java/net/SocketException.h>\n+\n+void\n+gnu::java::net::PlainSocketImpl::create (jboolean)\n+{\n+  throw new ::java::io::IOException (\n+    JvNewStringLatin1 (\"SocketImpl.create: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainSocketImpl::bind (::java::net::InetAddress *, jint)\n+{\n+  throw new ::java::net::BindException (\n+    JvNewStringLatin1 (\"SocketImpl.bind: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainSocketImpl::connect (::java::net::SocketAddress *, jint)\n+{\n+  throw new ::java::net::ConnectException (\n+    JvNewStringLatin1 (\"SocketImpl.connect: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainSocketImpl::listen (jint)\n+{\n+  throw new ::java::io::IOException (\n+    JvNewStringLatin1 (\"SocketImpl.listen: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainSocketImpl::accept (gnu::java::net::PlainSocketImpl *)\n+{\n+  throw new ::java::io::IOException (\n+    JvNewStringLatin1 (\"SocketImpl.accept: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainSocketImpl::setOption (jint, ::java::lang::Object *)\n+{\n+  throw new ::java::net::SocketException (\n+    JvNewStringLatin1 (\"SocketImpl.setOption: unimplemented\"));\n+}\n+\n+::java::lang::Object *\n+gnu::java::net::PlainSocketImpl::getOption (jint)\n+{\n+  throw new ::java::net::SocketException (\n+    JvNewStringLatin1 (\"SocketImpl.getOption: unimplemented\"));\n+}\n+\n+jint\n+gnu::java::net::PlainSocketImpl::read(void)\n+{\n+  throw new ::java::net::SocketException (\n+    JvNewStringLatin1 (\"SocketImpl.read: unimplemented\"));\n+}\n+\n+jint\n+gnu::java::net::PlainSocketImpl::read(jbyteArray buffer, jint offset, jint count)\n+{\n+  throw new ::java::net::SocketException (\n+    JvNewStringLatin1 (\"SocketImpl.read: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainSocketImpl::write(jint b)\n+{\n+  throw new ::java::net::SocketException (\n+    JvNewStringLatin1 (\"SocketImpl.write: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainSocketImpl::write(jbyteArray b, jint offset, jint len)\n+{\n+  throw new ::java::net::SocketException (\n+    JvNewStringLatin1 (\"SocketImpl.write: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainSocketImpl::sendUrgentData(jint data)\n+{\n+  throw new ::java::net::SocketException (\n+    JvNewStringLatin1 (\"SocketImpl.sendUrgentData: unimplemented\"));\n+}\n+\n+jint\n+gnu::java::net::PlainSocketImpl::available(void)\n+{\n+  throw new ::java::net::SocketException (\n+    JvNewStringLatin1 (\"SocketImpl.available: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainSocketImpl::close(void)\n+{\n+  throw new ::java::net::SocketException (\n+    JvNewStringLatin1 (\"SocketImpl.close: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainSocketImpl::shutdownInput (void)\n+{\n+  throw new ::java::net::SocketException (\n+    JvNewStringLatin1 (\"SocketImpl.shutdownInput: unimplemented\"));\n+}\n+\n+void\n+gnu::java::net::PlainSocketImpl::shutdownOutput (void)\n+{\n+  throw new ::java::net::SocketException (\n+    JvNewStringLatin1 (\"SocketImpl.shutdownOutput: unimplemented\"));\n+}"}, {"sha": "0b0bb1d8c703c7b63f7c175fddc045606849f453", "filename": "libjava/gnu/java/net/natPlainSocketImplPosix.cc", "status": "renamed", "additions": 98, "deletions": 98, "changes": 196, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainSocketImplPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainSocketImplPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainSocketImplPosix.cc?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -31,11 +31,11 @@ details.  */\n \n #include <gcj/cni.h>\n #include <gcj/javaprims.h>\n+#include <gnu/java/net/PlainSocketImpl.h>\n #include <java/io/IOException.h>\n #include <java/io/InterruptedIOException.h>\n #include <java/net/BindException.h>\n #include <java/net/ConnectException.h>\n-#include <java/net/PlainSocketImpl.h>\n #include <java/net/InetAddress.h>\n #include <java/net/InetSocketAddress.h>\n #include <java/net/SocketException.h>\n@@ -59,14 +59,14 @@ union SockAddr\n };\n \n void\n-java::net::PlainSocketImpl::create (jboolean stream)\n+gnu::java::net::PlainSocketImpl::create (jboolean stream)\n {\n   int sock = _Jv_socket (AF_INET, stream ? SOCK_STREAM : SOCK_DGRAM, 0);\n \n   if (sock < 0)\n     {\n       char* strerr = strerror (errno);\n-      throw new java::io::IOException (JvNewStringUTF (strerr));\n+      throw new ::java::io::IOException (JvNewStringUTF (strerr));\n     }\n \n   _Jv_platform_close_on_exec (sock);\n@@ -77,7 +77,7 @@ java::net::PlainSocketImpl::create (jboolean stream)\n }\n \n void\n-java::net::PlainSocketImpl::bind (java::net::InetAddress *host, jint lport)\n+gnu::java::net::PlainSocketImpl::bind (::java::net::InetAddress *host, jint lport)\n {\n   union SockAddr u;\n   struct sockaddr *ptr = (struct sockaddr *) &u.address;\n@@ -108,7 +108,7 @@ java::net::PlainSocketImpl::bind (java::net::InetAddress *host, jint lport)\n     }\n #endif\n   else\n-    throw new java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n \n   // Enable SO_REUSEADDR, so that servers can reuse ports left in TIME_WAIT.\n   ::setsockopt(fnum, SOL_SOCKET, SO_REUSEADDR, (char *) &i, sizeof(i));\n@@ -130,15 +130,15 @@ java::net::PlainSocketImpl::bind (java::net::InetAddress *host, jint lport)\n \n  error:\n   char* strerr = strerror (errno);\n-  throw new java::net::BindException (JvNewStringUTF (strerr));\n+  throw new ::java::net::BindException (JvNewStringUTF (strerr));\n }\n \n void\n-java::net::PlainSocketImpl::connect (java::net::SocketAddress *addr,\n+gnu::java::net::PlainSocketImpl::connect (::java::net::SocketAddress *addr,\n                                      jint timeout)\n {\n-  java::net::InetSocketAddress *tmp = (java::net::InetSocketAddress*) addr;\n-  java::net::InetAddress *host = tmp->getAddress();\n+  ::java::net::InetSocketAddress *tmp = (::java::net::InetSocketAddress*) addr;\n+  ::java::net::InetAddress *host = tmp->getAddress();\n   jint rport = tmp->getPort();\n \t\n   union SockAddr u;\n@@ -164,7 +164,7 @@ java::net::PlainSocketImpl::connect (java::net::SocketAddress *addr,\n     }\n #endif\n   else\n-    throw new java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n \n   if (timeout > 0)\n     {\n@@ -185,7 +185,7 @@ java::net::PlainSocketImpl::connect (java::net::SocketAddress *addr,\n       if ((retval = _Jv_select (fnum + 1, &fset, &fset, NULL, &tv)) < 0)\n         goto error;\n       else if (retval == 0)\n-        throw new java::net::SocketTimeoutException\n+        throw new ::java::net::SocketTimeoutException\n           (JvNewStringUTF (\"Connect timed out\"));\n        // Set the socket back into a blocking state.\n        ::fcntl (fnum, F_SETFL, flags);\n@@ -212,21 +212,21 @@ java::net::PlainSocketImpl::connect (java::net::SocketAddress *addr,\n \n  error:\n   char* strerr = strerror (errno);\n-  throw new java::net::ConnectException (JvNewStringUTF (strerr));\n+  throw new ::java::net::ConnectException (JvNewStringUTF (strerr));\n }\n \n void\n-java::net::PlainSocketImpl::listen (jint backlog)\n+gnu::java::net::PlainSocketImpl::listen (jint backlog)\n {\n   if (::listen (fnum, backlog) != 0)\n     {\n       char* strerr = strerror (errno);\n-      throw new java::io::IOException (JvNewStringUTF (strerr));\n+      throw new ::java::io::IOException (JvNewStringUTF (strerr));\n     }\n }\n \n void\n-java::net::PlainSocketImpl::accept (java::net::PlainSocketImpl *s)\n+gnu::java::net::PlainSocketImpl::accept (gnu::java::net::PlainSocketImpl *s)\n {\n   union SockAddr u;\n   socklen_t addrlen = sizeof(u);\n@@ -245,7 +245,7 @@ java::net::PlainSocketImpl::accept (java::net::PlainSocketImpl *s)\n       if ((retval = _Jv_select (fnum + 1, &fset, &fset, NULL, &tv)) < 0)\n         goto error;\n       else if (retval == 0)\n-        throw new java::net::SocketTimeoutException (\n+        throw new ::java::net::SocketTimeoutException (\n \t                                  JvNewStringUTF(\"Accept timed out\"));\n     }\n \n@@ -273,22 +273,22 @@ java::net::PlainSocketImpl::accept (java::net::PlainSocketImpl *s)\n     }\n #endif\n   else\n-    throw new java::net::SocketException (JvNewStringUTF (\"invalid family\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"invalid family\"));\n \n   s->fnum = new_socket;\n   s->localport = localport;\n-  s->address = new InetAddress (raddr, NULL);\n+  s->address = new ::java::net::InetAddress (raddr, NULL);\n   s->port = rport;\n   return;\n \n  error:\n   char* strerr = strerror (errno);\n-  throw new java::io::IOException (JvNewStringUTF (strerr));\n+  throw new ::java::io::IOException (JvNewStringUTF (strerr));\n }\n \n // Close(shutdown) the socket.\n void\n-java::net::PlainSocketImpl::close()\n+gnu::java::net::PlainSocketImpl::close()\n {\n   // Avoid races from asynchronous finalization.\n   JvSynchronize sync (this);\n@@ -301,7 +301,7 @@ java::net::PlainSocketImpl::close()\n       // These three errors are not errors according to tests performed\n       // on the reference implementation.\n       if (errno != ENOTCONN && errno != ECONNRESET && errno != EBADF)\n-        throw new java::io::IOException  (JvNewStringUTF (strerror (errno)));\n+        throw new ::java::io::IOException  (JvNewStringUTF (strerror (errno)));\n     }\n   // Safe place to reset the file pointer.\n   fnum = -1;\n@@ -310,7 +310,7 @@ java::net::PlainSocketImpl::close()\n \n // Write a byte to the socket.\n void\n-java::net::PlainSocketImpl::write(jint b)\n+gnu::java::net::PlainSocketImpl::write(jint b)\n {\n   jbyte d =(jbyte) b;\n   int r = 0;\n@@ -320,30 +320,30 @@ java::net::PlainSocketImpl::write(jint b)\n       r = _Jv_write (fnum, &d, 1);\n       if (r == -1)\n         {\n-          if (java::lang::Thread::interrupted())\n+          if (::java::lang::Thread::interrupted())\n             {\n-              java::io::InterruptedIOException *iioe\n-                = new java::io::InterruptedIOException \n+              ::java::io::InterruptedIOException *iioe\n+                = new ::java::io::InterruptedIOException \n                 (JvNewStringLatin1 (strerror (errno)));\n               iioe->bytesTransferred = 0;\n               throw iioe;\n             }\n           // Some errors should not cause exceptions.\n           if (errno != ENOTCONN && errno != ECONNRESET && errno != EBADF)\n-            throw new java::io::IOException (JvNewStringUTF (strerror (errno)));\n+            throw new ::java::io::IOException (JvNewStringUTF (strerror (errno)));\n           break;\n         }\n     }\n }\n \n // Write some bytes to the socket.\n void\n-java::net::PlainSocketImpl::write(jbyteArray b, jint offset, jint len)\n+gnu::java::net::PlainSocketImpl::write(jbyteArray b, jint offset, jint len)\n {\n   if (! b)\n-    throw new java::lang::NullPointerException;\n+    throw new ::java::lang::NullPointerException;\n   if (offset < 0 || len < 0 || offset + len > JvGetArrayLength (b))\n-    throw new java::lang::ArrayIndexOutOfBoundsException;\n+    throw new ::java::lang::ArrayIndexOutOfBoundsException;\n \n   jbyte *bytes = elements (b) + offset;\n   int written = 0;\n@@ -354,17 +354,17 @@ java::net::PlainSocketImpl::write(jbyteArray b, jint offset, jint len)\n \n       if (r == -1)\n         {\n-          if (java::lang::Thread::interrupted())\n+          if (::java::lang::Thread::interrupted())\n             {\n-              java::io::InterruptedIOException *iioe\n-                = new java::io::InterruptedIOException\n+              ::java::io::InterruptedIOException *iioe\n+                = new ::java::io::InterruptedIOException\n                 (JvNewStringLatin1 (strerror (errno)));\n               iioe->bytesTransferred = written;\n               throw iioe;\n             }\n           // Some errors should not cause exceptions.\n           if (errno != ENOTCONN && errno != ECONNRESET && errno != EBADF)\n-            throw new java::io::IOException (JvNewStringUTF (strerror (errno)));\n+            throw new ::java::io::IOException (JvNewStringUTF (strerror (errno)));\n           break;\n         }\n \n@@ -375,15 +375,15 @@ java::net::PlainSocketImpl::write(jbyteArray b, jint offset, jint len)\n }\n \n void\n-java::net::PlainSocketImpl::sendUrgentData (jint)\n+gnu::java::net::PlainSocketImpl::sendUrgentData (jint)\n {\n-  throw new SocketException (JvNewStringLatin1 (\n+  throw new ::java::net::SocketException (JvNewStringLatin1 (\n     \"PlainSocketImpl: sending of urgent data not supported by this socket\"));\n }\n \n // Read a single byte from the socket.\n jint\n-java::net::PlainSocketImpl::read(void)\n+gnu::java::net::PlainSocketImpl::read(void)\n {\n   jbyte b;\n \n@@ -404,7 +404,7 @@ java::net::PlainSocketImpl::read(void)\n       // If select returns 0 we've waited without getting data...\n       // that means we've timed out.\n       if (sel_retval == 0)\n-        throw new java::net::SocketTimeoutException\n+        throw new ::java::net::SocketTimeoutException\n           (JvNewStringUTF (\"read timed out\") );\n       // If select returns ok we know we either got signalled or read some data...\n       // either way we need to try to read.\n@@ -415,10 +415,10 @@ java::net::PlainSocketImpl::read(void)\n   if (r == 0)\n     return -1;\n \n-  if (java::lang::Thread::interrupted())\n+  if (::java::lang::Thread::interrupted())\n     {\n-      java::io::InterruptedIOException *iioe =\n-        new java::io::InterruptedIOException\n+      ::java::io::InterruptedIOException *iioe =\n+        new ::java::io::InterruptedIOException\n         (JvNewStringUTF(\"read interrupted\"));\n       iioe->bytesTransferred = r == -1 ? 0 : r;\n       throw iioe;\n@@ -430,23 +430,23 @@ java::net::PlainSocketImpl::read(void)\n         return -1;\n \n       // Other errors need to be signalled.\n-      throw new java::io::IOException (JvNewStringUTF (strerror (errno)));\n+      throw new ::java::io::IOException (JvNewStringUTF (strerror (errno)));\n     }\n \n   return b & 0xFF;\n }\n \n // Read count bytes into the buffer, starting at offset.\n jint\n-java::net::PlainSocketImpl::read(jbyteArray buffer, jint offset, jint count)\n+gnu::java::net::PlainSocketImpl::read(jbyteArray buffer, jint offset, jint count)\n {\n   if (! buffer)\n-    throw new java::lang::NullPointerException;\n+    throw new ::java::lang::NullPointerException;\n \n   jsize bsize = JvGetArrayLength (buffer);\n \n   if (offset < 0 || count < 0 || offset + count > bsize)\n-    throw new java::lang::ArrayIndexOutOfBoundsException;\n+    throw new ::java::lang::ArrayIndexOutOfBoundsException;\n \n   jbyte *bytes = elements (buffer) + offset;\n \n@@ -469,10 +469,10 @@ java::net::PlainSocketImpl::read(jbyteArray buffer, jint offset, jint count)\n       // the socket to see what happened.\n       if (sel_retval == 0)\n         {\n-          java::net::SocketTimeoutException *timeoutException =\n-            new java::net::SocketTimeoutException\n+          ::java::net::SocketTimeoutException *timeoutException =\n+            new ::java::net::SocketTimeoutException\n             (JvNewStringUTF (\"read timed out\"));\n-          throw timeoutException;\n+\t  throw timeoutException;\n         }\n     }\n \n@@ -482,10 +482,10 @@ java::net::PlainSocketImpl::read(jbyteArray buffer, jint offset, jint count)\n   if (r == 0)\n     return -1;\n \n-  if (java::lang::Thread::interrupted())\n+  if (::java::lang::Thread::interrupted())\n     {\n-      java::io::InterruptedIOException *iioe =\n-        new java::io::InterruptedIOException\n+      ::java::io::InterruptedIOException *iioe =\n+        new ::java::io::InterruptedIOException\n         (JvNewStringUTF (\"read interrupted\"));\n       iioe->bytesTransferred = r == -1 ? 0 : r;\n       throw iioe;\n@@ -497,15 +497,15 @@ java::net::PlainSocketImpl::read(jbyteArray buffer, jint offset, jint count)\n         return -1;\n \n       // Other errors need to be signalled.\n-      throw new java::io::IOException (JvNewStringUTF (strerror (errno)));\n+      throw new ::java::io::IOException (JvNewStringUTF (strerror (errno)));\n     }\n \n   return r;\n }\n \n // How many bytes are available?\n jint\n-java::net::PlainSocketImpl::available(void)\n+gnu::java::net::PlainSocketImpl::available(void)\n {\n #if defined(FIONREAD) || defined(HAVE_SELECT)\n   long num = 0;\n@@ -534,7 +534,7 @@ java::net::PlainSocketImpl::available(void)\n   if (r == -1)\n     {\n     posix_error:\n-      throw new java::io::IOException(JvNewStringUTF(strerror(errno)));\n+      throw new ::java::io::IOException(JvNewStringUTF(strerror(errno)));\n     }\n \n   // If we didn't get anything we can use select.\n@@ -558,23 +558,23 @@ java::net::PlainSocketImpl::available(void)\n \n   return (jint) num;\n #else\n-  throw new java::io::IOException (JvNewStringUTF (\"unimplemented\"));\n+  throw new ::java::io::IOException (JvNewStringUTF (\"unimplemented\"));\n #endif\n }\n \n void\n-java::net::PlainSocketImpl::setOption (jint optID, java::lang::Object *value)\n+gnu::java::net::PlainSocketImpl::setOption (jint optID, ::java::lang::Object *value)\n {\n   int val;\n   socklen_t val_len = sizeof (val);\n \n   if (fnum < 0)\n-    throw new java::net::SocketException (JvNewStringUTF (\"Socket closed\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"Socket closed\"));\n \n-  if (_Jv_IsInstanceOf (value, &java::lang::Boolean::class$))\n+  if (_Jv_IsInstanceOf (value, &::java::lang::Boolean::class$))\n     {\n-      java::lang::Boolean *boolobj = \n-        static_cast<java::lang::Boolean *> (value);\n+      ::java::lang::Boolean *boolobj = \n+        static_cast< ::java::lang::Boolean *> (value);\n       if (boolobj->booleanValue())\n         val = 1; \n       else \n@@ -585,15 +585,15 @@ java::net::PlainSocketImpl::setOption (jint optID, java::lang::Object *value)\n             val = 0;\n         }\n     }\n-  else if (_Jv_IsInstanceOf (value, &java::lang::Integer::class$))\n+  else if (_Jv_IsInstanceOf (value, &::java::lang::Integer::class$))\n     {\n-      java::lang::Integer *intobj = \n-        static_cast<java::lang::Integer *> (value);          \n+      ::java::lang::Integer *intobj = \n+        static_cast< ::java::lang::Integer *> (value);          \n       val = (int) intobj->intValue();\n     }\n   else\n     {\n-      throw new java::lang::IllegalArgumentException (\n+      throw new ::java::lang::IllegalArgumentException (\n         JvNewStringLatin1 (\"`value' must be Boolean or Integer\"));\n     }\n \n@@ -605,7 +605,7 @@ java::net::PlainSocketImpl::setOption (jint optID, java::lang::Object *value)\n                           val_len) != 0)\n           goto error;\n #else\n-        throw new java::lang::InternalError\n+        throw new ::java::lang::InternalError\n           (JvNewStringUTF (\"TCP_NODELAY not supported\"));\n #endif /* TCP_NODELAY */\n         return;\n@@ -617,7 +617,7 @@ java::net::PlainSocketImpl::setOption (jint optID, java::lang::Object *value)\n         break;\n       \n       case _Jv_SO_BROADCAST_ :\n-        throw new java::net::SocketException\n+        throw new ::java::net::SocketException\n           (JvNewStringUTF (\"SO_BROADCAST not valid for TCP\"));\n         break;\n \t\n@@ -637,7 +637,7 @@ java::net::PlainSocketImpl::setOption (jint optID, java::lang::Object *value)\n                           sizeof(l_val)) != 0)\n           goto error;    \n #else\n-        throw new java::lang::InternalError (\n+        throw new ::java::lang::InternalError (\n           JvNewStringUTF (\"SO_LINGER not supported\"));\n #endif /* SO_LINGER */\n         return;\n@@ -650,28 +650,28 @@ java::net::PlainSocketImpl::setOption (jint optID, java::lang::Object *value)\n         if (::setsockopt (fnum, SOL_SOCKET, opt, (char *) &val, val_len) != 0)\n           goto error;    \n #else\n-        throw new java::lang::InternalError (\n+        throw new ::java::lang::InternalError (\n           JvNewStringUTF (\"SO_RCVBUF/SO_SNDBUF not supported\"));\n #endif \n         return;\n \n       case _Jv_SO_BINDADDR_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_BINDADDR: read only option\"));\n         return;\n \n       case _Jv_IP_MULTICAST_IF_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"IP_MULTICAST_IF: not valid for TCP\"));\n         return;\n \t\n       case _Jv_IP_MULTICAST_IF2_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"IP_MULTICAST_IF2: not valid for TCP\"));\n         break;\n \t\n       case _Jv_IP_MULTICAST_LOOP_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"IP_MULTICAST_LOOP: not valid for TCP\"));\n         break;\n \t\n@@ -682,7 +682,7 @@ java::net::PlainSocketImpl::setOption (jint optID, java::lang::Object *value)\n         break;\n \t\n       case _Jv_SO_REUSEADDR_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_REUSEADDR: not valid for TCP\"));\n         return;\n \n@@ -696,11 +696,11 @@ java::net::PlainSocketImpl::setOption (jint optID, java::lang::Object *value)\n \n  error:\n   char* strerr = strerror (errno);\n-  throw new java::net::SocketException (JvNewStringUTF (strerr));\n+  throw new ::java::net::SocketException (JvNewStringUTF (strerr));\n }\n \n-java::lang::Object *\n-java::net::PlainSocketImpl::getOption (jint optID)\n+::java::lang::Object *\n+gnu::java::net::PlainSocketImpl::getOption (jint optID)\n {\n   int val;\n   socklen_t val_len = sizeof(val);\n@@ -717,9 +717,9 @@ java::net::PlainSocketImpl::getOption (jint optID)\n                         &val_len) != 0)\n         goto error;\n       else\n-        return new java::lang::Boolean (val != 0);\n+        return new ::java::lang::Boolean (val != 0);\n #else\n-      throw new java::lang::InternalError\n+      throw new ::java::lang::InternalError\n         (JvNewStringUTF (\"TCP_NODELAY not supported\"));\n #endif       \n       break;\n@@ -731,11 +731,11 @@ java::net::PlainSocketImpl::getOption (jint optID)\n         goto error;    \n  \n       if (l_val.l_onoff)\n-        return new java::lang::Integer (l_val.l_linger);\n+        return new ::java::lang::Integer (l_val.l_linger);\n       else\n-        return new java::lang::Boolean ((jboolean)false);\n+        return new ::java::lang::Boolean ((jboolean)false);\n #else\n-      throw new java::lang::InternalError\n+      throw new ::java::lang::InternalError\n         (JvNewStringUTF (\"SO_LINGER not supported\"));\n #endif\n       break;    \n@@ -745,19 +745,19 @@ java::net::PlainSocketImpl::getOption (jint optID)\n                         &val_len) != 0)\n         goto error;\n       else\n-        return new java::lang::Boolean (val != 0);\n+        return new ::java::lang::Boolean (val != 0);\n \n     case _Jv_SO_BROADCAST_ :\n       if (::getsockopt (fnum, SOL_SOCKET, SO_BROADCAST, (char *) &val,\n                         &val_len) != 0)\n         goto error;    \n-      return new java::lang::Boolean ((jboolean)val);\n+      return new ::java::lang::Boolean ((jboolean)val);\n \t\n     case _Jv_SO_OOBINLINE_ :\n       if (::getsockopt (fnum, SOL_SOCKET, SO_OOBINLINE, (char *) &val,\n                         &val_len) != 0)\n         goto error;    \n-      return new java::lang::Boolean ((jboolean)val);\n+      return new ::java::lang::Boolean ((jboolean)val);\n \t\n     case _Jv_SO_RCVBUF_ :\n     case _Jv_SO_SNDBUF_ :\n@@ -767,9 +767,9 @@ java::net::PlainSocketImpl::getOption (jint optID)\n       if (::getsockopt (fnum, SOL_SOCKET, opt, (char *) &val, &val_len) != 0)\n         goto error;    \n       else\n-        return new java::lang::Integer (val);\n+        return new ::java::lang::Integer (val);\n #else\n-      throw new java::lang::InternalError\n+      throw new ::java::lang::InternalError\n         (JvNewStringUTF (\"SO_RCVBUF/SO_SNDBUF not supported\"));\n #endif    \n       break;\n@@ -795,42 +795,42 @@ java::net::PlainSocketImpl::getOption (jint optID)\n             }\n #endif\n           else\n-            throw new java::net::SocketException\n+            throw new ::java::net::SocketException\n               (JvNewStringUTF (\"invalid family\"));\n-          localAddress = new java::net::InetAddress (laddr, NULL);\n+          localAddress = new ::java::net::InetAddress (laddr, NULL);\n         }\n \n       return localAddress;\n       break;\n     case _Jv_IP_MULTICAST_IF_ :\n-      throw new java::net::SocketException\n+      throw new ::java::net::SocketException\n         (JvNewStringUTF (\"IP_MULTICAST_IF: not valid for TCP\"));\n       break;\n \t\n     case _Jv_IP_MULTICAST_IF2_ :\n-      throw new java::net::SocketException\n+      throw new ::java::net::SocketException\n         (JvNewStringUTF (\"IP_MULTICAST_IF2: not valid for TCP\"));\n       break;\n \t\n     case _Jv_IP_MULTICAST_LOOP_ :\n-      throw new java::net::SocketException\n+      throw new ::java::net::SocketException\n         (JvNewStringUTF (\"IP_MULTICAST_LOOP: not valid for TCP\"));\n       break;\n \t\n     case _Jv_IP_TOS_ :\n       if (::getsockopt (fnum, SOL_SOCKET, IP_TOS, (char *) &val,\n                         &val_len) != 0)\n         goto error;\n-      return new java::lang::Integer (val);\n+      return new ::java::lang::Integer (val);\n       break;\n \t\n     case _Jv_SO_REUSEADDR_ :\n-      throw new java::net::SocketException\n+      throw new ::java::net::SocketException\n         (JvNewStringUTF (\"SO_REUSEADDR: not valid for TCP\"));\n       break;\n \n     case _Jv_SO_TIMEOUT_ :\n-      return new java::lang::Integer (timeout);\n+      return new ::java::lang::Integer (timeout);\n       break;\n \n     default :\n@@ -839,19 +839,19 @@ java::net::PlainSocketImpl::getOption (jint optID)\n \n  error:\n   char* strerr = strerror (errno);\n-  throw new java::net::SocketException (JvNewStringUTF (strerr));\n+  throw new ::java::net::SocketException (JvNewStringUTF (strerr));\n }\n \n void\n-java::net::PlainSocketImpl::shutdownInput (void)\n+gnu::java::net::PlainSocketImpl::shutdownInput (void)\n {\n   if (::shutdown (fnum, 0))\n-    throw new SocketException (JvNewStringUTF (strerror (errno)));\n+    throw new ::java::net::SocketException (JvNewStringUTF (strerror (errno)));\n }\n \n void\n-java::net::PlainSocketImpl::shutdownOutput (void)\n+gnu::java::net::PlainSocketImpl::shutdownOutput (void)\n {\n   if (::shutdown (fnum, 1))\n-    throw new SocketException (JvNewStringUTF (strerror (errno)));\n+    throw new ::java::net::SocketException (JvNewStringUTF (strerror (errno)));\n }", "previous_filename": "libjava/java/net/natPlainSocketImplPosix.cc"}, {"sha": "e4837ed4f71682fd3c3df2d4af5bbc24d73e16c5", "filename": "libjava/gnu/java/net/natPlainSocketImplWin32.cc", "status": "renamed", "additions": 71, "deletions": 71, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainSocketImplWin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainSocketImplWin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainSocketImplWin32.cc?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -13,11 +13,11 @@ details.  */\n #undef MAX_PRIORITY\n #undef MIN_PRIORITY\n \n+#include <gnu/java/net/PlainSocketImpl.h>\n #include <java/io/IOException.h>\n #include <java/io/InterruptedIOException.h>\n #include <java/net/BindException.h>\n #include <java/net/ConnectException.h>\n-#include <java/net/PlainSocketImpl.h>\n #include <java/net/InetAddress.h>\n #include <java/net/InetSocketAddress.h>\n #include <java/net/SocketException.h>\n@@ -41,7 +41,7 @@ union SockAddr\n };\n \n void\n-java::net::PlainSocketImpl::create (jboolean stream)\n+gnu::java::net::PlainSocketImpl::create (jboolean stream)\n {\n   int sock = ::socket (AF_INET, stream ? SOCK_STREAM : SOCK_DGRAM, 0);\n \n@@ -58,7 +58,7 @@ java::net::PlainSocketImpl::create (jboolean stream)\n }\n \n void\n-java::net::PlainSocketImpl::bind (java::net::InetAddress *host, jint lport)\n+gnu::java::net::PlainSocketImpl::bind (::java::net::InetAddress *host, jint lport)\n {\n   union SockAddr u;\n   struct sockaddr *ptr = (struct sockaddr *) &u.address;\n@@ -89,7 +89,7 @@ java::net::PlainSocketImpl::bind (java::net::InetAddress *host, jint lport)\n     }\n #endif\n   else\n-    throw new java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n \n   // Enable SO_REUSEADDR, so that servers can reuse ports left in TIME_WAIT.\n   ::setsockopt(fnum, SOL_SOCKET, SO_REUSEADDR, (char *) &i, sizeof(i));\n@@ -111,13 +111,13 @@ java::net::PlainSocketImpl::bind (java::net::InetAddress *host, jint lport)\n \n error:\n   DWORD dwErrorCode = WSAGetLastError ();\n-  throw new java::net::BindException (_Jv_WinStrError (dwErrorCode));\n+  throw new ::java::net::BindException (_Jv_WinStrError (dwErrorCode));\n }\n \n static void\n throwConnectException (DWORD dwErrorCode)\n {\n-  throw new java::net::ConnectException (_Jv_WinStrError (dwErrorCode));\n+  throw new ::java::net::ConnectException (_Jv_WinStrError (dwErrorCode));\n }\n \n static void\n@@ -127,11 +127,11 @@ throwConnectException ()\n }\n \n void\n-java::net::PlainSocketImpl::connect (java::net::SocketAddress *addr,\n+gnu::java::net::PlainSocketImpl::connect (::java::net::SocketAddress *addr,\n                                      jint timeout)\n {\n-  java::net::InetSocketAddress *tmp = (java::net::InetSocketAddress*) addr;\n-  java::net::InetAddress *host = tmp->getAddress();\n+  ::java::net::InetSocketAddress *tmp = (::java::net::InetSocketAddress*) addr;\n+  ::java::net::InetAddress *host = tmp->getAddress();\n   jint rport = tmp->getPort();\n \n   union SockAddr u;\n@@ -158,7 +158,7 @@ java::net::PlainSocketImpl::connect (java::net::SocketAddress *addr,\n     }\n #endif\n   else\n-    throw new java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n \n   if (timeout > 0)\n     {\n@@ -180,7 +180,7 @@ java::net::PlainSocketImpl::connect (java::net::SocketAddress *addr,\n           throwConnectException ();\n         \n         else if (dwRet == WSA_WAIT_TIMEOUT)\n-          throw new java::net::SocketTimeoutException\n+          throw new ::java::net::SocketTimeoutException\n             (JvNewStringUTF (\"connect timed out\"));\n             \n         // If we get here, we still need to check whether the actual\n@@ -219,7 +219,7 @@ java::net::PlainSocketImpl::connect (java::net::SocketAddress *addr,\n }\n \n void\n-java::net::PlainSocketImpl::listen (jint backlog)\n+gnu::java::net::PlainSocketImpl::listen (jint backlog)\n {\n   if (::listen (fnum, backlog) == SOCKET_ERROR)\n     {\n@@ -228,7 +228,7 @@ java::net::PlainSocketImpl::listen (jint backlog)\n }\n \n void\n-java::net::PlainSocketImpl::accept (java::net::PlainSocketImpl *s)\n+gnu::java::net::PlainSocketImpl::accept (::java::net::PlainSocketImpl *s)\n {\n   union SockAddr u;\n   socklen_t addrlen = sizeof(u);\n@@ -277,7 +277,7 @@ java::net::PlainSocketImpl::accept (java::net::PlainSocketImpl *s)\n         if (dwRet == WSA_WAIT_FAILED)\n           goto error;\n         else if (dwRet == WSA_WAIT_TIMEOUT)\n-          throw new java::net::SocketTimeoutException\n+          throw new ::java::net::SocketTimeoutException\n             (JvNewStringUTF (\"accept timed out\"));\n       }\n     }\n@@ -308,7 +308,7 @@ java::net::PlainSocketImpl::accept (java::net::PlainSocketImpl *s)\n     }\n #endif\n   else\n-    throw new java::net::SocketException (JvNewStringUTF (\"invalid family\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"invalid family\"));\n \n   s->fnum = new_socket;\n   s->localport = localport;\n@@ -322,7 +322,7 @@ java::net::PlainSocketImpl::accept (java::net::PlainSocketImpl *s)\n \n // Close(shutdown) the socket.\n void\n-java::net::PlainSocketImpl::close()\n+gnu::java::net::PlainSocketImpl::close()\n {\n   // Avoid races from asynchronous finalization.\n   JvSynchronize sync (this);\n@@ -346,7 +346,7 @@ java::net::PlainSocketImpl::close()\n \n // Write a byte to the socket.\n void\n-java::net::PlainSocketImpl::write(jint b)\n+gnu::java::net::PlainSocketImpl::write(jint b)\n {\n   jbyte d =(jbyte) b;\n   int r = 0;\n@@ -357,10 +357,10 @@ java::net::PlainSocketImpl::write(jint b)\n       if (r == -1)\n         {\n           DWORD dwErr = WSAGetLastError();\n-          if (java::lang::Thread::interrupted())\n+          if (::java::lang::Thread::interrupted())\n             {\n-              java::io::InterruptedIOException *iioe\n-                = new java::io::InterruptedIOException\n+              ::java::io::InterruptedIOException *iioe\n+                = new ::java::io::InterruptedIOException\n                 (_Jv_WinStrError (dwErr));\n               iioe->bytesTransferred = 0;\n               throw iioe;\n@@ -376,12 +376,12 @@ java::net::PlainSocketImpl::write(jint b)\n \n // Write some bytes to the socket.\n void\n-java::net::PlainSocketImpl::write(jbyteArray b, jint offset, jint len)\n+gnu::java::net::PlainSocketImpl::write(jbyteArray b, jint offset, jint len)\n {\n   if (! b)\n-    throw new java::lang::NullPointerException;\n+    throw new ::java::lang::NullPointerException;\n   if (offset < 0 || len < 0 || offset + len > JvGetArrayLength (b))\n-    throw new java::lang::ArrayIndexOutOfBoundsException;\n+    throw new ::java::lang::ArrayIndexOutOfBoundsException;\n \n   jbyte *bytes = elements (b) + offset;\n   int written = 0;\n@@ -392,10 +392,10 @@ java::net::PlainSocketImpl::write(jbyteArray b, jint offset, jint len)\n       if (r == -1)\n         {\n           DWORD dwErr = WSAGetLastError();\n-          if (java::lang::Thread::interrupted())\n+          if (::java::lang::Thread::interrupted())\n             {\n-              java::io::InterruptedIOException *iioe\n-                = new java::io::InterruptedIOException\n+              ::java::io::InterruptedIOException *iioe\n+                = new ::java::io::InterruptedIOException\n                 (_Jv_WinStrError (dwErr));\n               iioe->bytesTransferred = written;\n               throw iioe;\n@@ -414,9 +414,9 @@ java::net::PlainSocketImpl::write(jbyteArray b, jint offset, jint len)\n }\n \n void\n-java::net::PlainSocketImpl::sendUrgentData (jint)\n+gnu::java::net::PlainSocketImpl::sendUrgentData (jint)\n {\n-  throw new SocketException (JvNewStringLatin1 (\n+  throw new ::java::net::SocketException (JvNewStringLatin1 (\n     \"PlainSocketImpl: sending of urgent data not supported by this socket\"));\n }\n \n@@ -451,10 +451,10 @@ doRead(int fnum, void* buf, int count, int timeout)\n   dwErrorCode = WSAGetLastError ();\n     // save WSAGetLastError() before calling Thread.interrupted()\n   \n-  if (java::lang::Thread::interrupted())\n+  if (::java::lang::Thread::interrupted())\n     {\n-      java::io::InterruptedIOException *iioe =\n-        new java::io::InterruptedIOException\n+      ::java::io::InterruptedIOException *iioe =\n+        new ::java::io::InterruptedIOException\n         (JvNewStringUTF(\"read interrupted\"));\n       iioe->bytesTransferred = r == -1 ? 0 : r;\n       throw iioe;\n@@ -468,7 +468,7 @@ doRead(int fnum, void* buf, int count, int timeout)\n \n       // Other errors need to be signalled.\n       if (dwErrorCode == WSAETIMEDOUT)\n-        throw new java::net::SocketTimeoutException\n+        throw new ::java::net::SocketTimeoutException\n           (JvNewStringUTF (\"read timed out\") );\n       else\n         _Jv_ThrowIOException (dwErrorCode);\n@@ -479,7 +479,7 @@ doRead(int fnum, void* buf, int count, int timeout)\n \n // Read a single byte from the socket.\n jint\n-java::net::PlainSocketImpl::read(void)\n+gnu::java::net::PlainSocketImpl::read(void)\n {\n   jbyte b;\n   doRead(fnum, &b, 1, timeout);\n@@ -488,15 +488,15 @@ java::net::PlainSocketImpl::read(void)\n \n // Read count bytes into the buffer, starting at offset.\n jint\n-java::net::PlainSocketImpl::read(jbyteArray buffer, jint offset, jint count)\n+gnu::java::net::PlainSocketImpl::read(jbyteArray buffer, jint offset, jint count)\n {\n   if (! buffer)\n-    throw new java::lang::NullPointerException;\n+    throw new ::java::lang::NullPointerException;\n \n   jsize bsize = JvGetArrayLength (buffer);\n \n   if (offset < 0 || count < 0 || offset + count > bsize)\n-    throw new java::lang::ArrayIndexOutOfBoundsException;\n+    throw new ::java::lang::ArrayIndexOutOfBoundsException;\n \n   jbyte *bytes = elements (buffer) + offset;\n \n@@ -506,7 +506,7 @@ java::net::PlainSocketImpl::read(jbyteArray buffer, jint offset, jint count)\n \n // How many bytes are available?\n jint\n-java::net::PlainSocketImpl::available(void)\n+gnu::java::net::PlainSocketImpl::available(void)\n {\n   unsigned long num = 0;\n \n@@ -517,18 +517,18 @@ java::net::PlainSocketImpl::available(void)\n }\n \n void\n-java::net::PlainSocketImpl::setOption (jint optID, java::lang::Object *value)\n+gnu::java::net::PlainSocketImpl::setOption (jint optID, ::java::lang::Object *value)\n {\n   int val;\n   socklen_t val_len = sizeof (val);\n \n   if (fnum < 0)\n-    throw new java::net::SocketException (JvNewStringUTF (\"Socket closed\"));\n+    throw new ::java::net::SocketException (JvNewStringUTF (\"Socket closed\"));\n \n-  if (_Jv_IsInstanceOf (value, &java::lang::Boolean::class$))\n+  if (_Jv_IsInstanceOf (value, &::java::lang::Boolean::class$))\n     {\n-      java::lang::Boolean *boolobj =\n-        static_cast<java::lang::Boolean *> (value);\n+      ::java::lang::Boolean *boolobj =\n+        static_cast< ::java::lang::Boolean *> (value);\n       if (boolobj->booleanValue())\n         val = 1;\n       else\n@@ -539,15 +539,15 @@ java::net::PlainSocketImpl::setOption (jint optID, java::lang::Object *value)\n             val = 0;\n         }\n     }\n-  else if (_Jv_IsInstanceOf (value, &java::lang::Integer::class$))\n+  else if (_Jv_IsInstanceOf (value, &::java::lang::Integer::class$))\n     {\n-      java::lang::Integer *intobj =\n-        static_cast<java::lang::Integer *> (value);\n+      ::java::lang::Integer *intobj =\n+        static_cast< ::java::lang::Integer *> (value);\n       val = (int) intobj->intValue();\n     }\n   else\n     {\n-      throw new java::lang::IllegalArgumentException (\n+      throw new ::java::lang::IllegalArgumentException (\n         JvNewStringLatin1 (\"`value' must be Boolean or Integer\"));\n     }\n \n@@ -566,7 +566,7 @@ java::net::PlainSocketImpl::setOption (jint optID, java::lang::Object *value)\n         break;\n \n       case _Jv_SO_BROADCAST_ :\n-        throw new java::net::SocketException\n+        throw new ::java::net::SocketException\n           (JvNewStringUTF (\"SO_BROADCAST not valid for TCP\"));\n         break;\n \n@@ -596,22 +596,22 @@ java::net::PlainSocketImpl::setOption (jint optID, java::lang::Object *value)\n         return;\n \n       case _Jv_SO_BINDADDR_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_BINDADDR: read only option\"));\n         return;\n \n       case _Jv_IP_MULTICAST_IF_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"IP_MULTICAST_IF: not valid for TCP\"));\n         return;\n \n       case _Jv_IP_MULTICAST_IF2_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"IP_MULTICAST_IF2: not valid for TCP\"));\n         break;\n \n       case _Jv_IP_MULTICAST_LOOP_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"IP_MULTICAST_LOOP: not valid for TCP\"));\n         break;\n \n@@ -622,7 +622,7 @@ java::net::PlainSocketImpl::setOption (jint optID, java::lang::Object *value)\n         break;\n \n       case _Jv_SO_REUSEADDR_ :\n-        throw new java::net::SocketException (\n+        throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_REUSEADDR: not valid for TCP\"));\n         return;\n \n@@ -638,8 +638,8 @@ java::net::PlainSocketImpl::setOption (jint optID, java::lang::Object *value)\n   _Jv_ThrowSocketException ();\n }\n \n-java::lang::Object *\n-java::net::PlainSocketImpl::getOption (jint optID)\n+::java::lang::Object *\n+gnu::java::net::PlainSocketImpl::getOption (jint optID)\n {\n   int val;\n   socklen_t val_len = sizeof(val);\n@@ -655,7 +655,7 @@ java::net::PlainSocketImpl::getOption (jint optID)\n                         &val_len) == SOCKET_ERROR)\n         goto error;\n       else\n-        return new java::lang::Boolean (val != 0);\n+        return new ::java::lang::Boolean (val != 0);\n       break;\n \n     case _Jv_SO_LINGER_ :\n@@ -664,29 +664,29 @@ java::net::PlainSocketImpl::getOption (jint optID)\n         goto error;\n \n       if (l_val.l_onoff)\n-        return new java::lang::Integer (l_val.l_linger);\n+        return new ::java::lang::Integer (l_val.l_linger);\n       else\n-        return new java::lang::Boolean ((jboolean)false);\n+        return new ::java::lang::Boolean ((jboolean)false);\n       break;\n \n     case _Jv_SO_KEEPALIVE_ :\n       if (::getsockopt (fnum, SOL_SOCKET, SO_KEEPALIVE, (char *) &val,\n                         &val_len) == SOCKET_ERROR)\n         goto error;\n       else\n-        return new java::lang::Boolean (val != 0);\n+        return new ::java::lang::Boolean (val != 0);\n \n     case _Jv_SO_BROADCAST_ :\n       if (::getsockopt (fnum, SOL_SOCKET, SO_BROADCAST, (char *) &val,\n                         &val_len) == SOCKET_ERROR)\n         goto error;\n-      return new java::lang::Boolean ((jboolean)val);\n+      return new ::java::lang::Boolean ((jboolean)val);\n \n     case _Jv_SO_OOBINLINE_ :\n       if (::getsockopt (fnum, SOL_SOCKET, SO_OOBINLINE, (char *) &val,\n                         &val_len) == SOCKET_ERROR)\n         goto error;\n-      return new java::lang::Boolean ((jboolean)val);\n+      return new ::java::lang::Boolean ((jboolean)val);\n \n     case _Jv_SO_RCVBUF_ :\n     case _Jv_SO_SNDBUF_ :\n@@ -696,7 +696,7 @@ java::net::PlainSocketImpl::getOption (jint optID)\n                         &val_len) == SOCKET_ERROR)\n         goto error;\n       else\n-        return new java::lang::Integer (val);\n+        return new ::java::lang::Integer (val);\n       break;\n     case _Jv_SO_BINDADDR_:\n       // cache the local address\n@@ -721,42 +721,42 @@ java::net::PlainSocketImpl::getOption (jint optID)\n             }\n #endif\n           else\n-            throw new java::net::SocketException\n+            throw new ::java::net::SocketException\n               (JvNewStringUTF (\"invalid family\"));\n-          localAddress = new java::net::InetAddress (laddr, NULL);\n+          localAddress = new ::java::net::InetAddress (laddr, NULL);\n         }\n \n       return localAddress;\n       break;\n     case _Jv_IP_MULTICAST_IF_ :\n-      throw new java::net::SocketException\n+      throw new ::java::net::SocketException\n         (JvNewStringUTF (\"IP_MULTICAST_IF: not valid for TCP\"));\n       break;\n \n     case _Jv_IP_MULTICAST_IF2_ :\n-      throw new java::net::SocketException\n+      throw new ::java::net::SocketException\n         (JvNewStringUTF (\"IP_MULTICAST_IF2: not valid for TCP\"));\n       break;\n \n     case _Jv_IP_MULTICAST_LOOP_ :\n-      throw new java::net::SocketException\n+      throw new ::java::net::SocketException\n         (JvNewStringUTF (\"IP_MULTICAST_LOOP: not valid for TCP\"));\n       break;\n \n     case _Jv_IP_TOS_ :\n       if (::getsockopt (fnum, SOL_SOCKET, IP_TOS, (char *) &val,\n                         &val_len) == SOCKET_ERROR)\n         goto error;\n-      return new java::lang::Integer (val);\n+      return new ::java::lang::Integer (val);\n       break;\n \n     case _Jv_SO_REUSEADDR_ :\n-      throw new java::net::SocketException\n+      throw new ::java::net::SocketException\n         (JvNewStringUTF (\"SO_REUSEADDR: not valid for TCP\"));\n       break;\n \n     case _Jv_SO_TIMEOUT_ :\n-      return new java::lang::Integer (timeout);\n+      return new ::java::lang::Integer (timeout);\n       break;\n \n     default :\n@@ -770,14 +770,14 @@ java::net::PlainSocketImpl::getOption (jint optID)\n }\n \n void\n-java::net::PlainSocketImpl::shutdownInput (void)\n+gnu::java::net::PlainSocketImpl::shutdownInput (void)\n {\n   if (::shutdown (fnum, 0))\n     _Jv_ThrowSocketException ();\n }\n \n void\n-java::net::PlainSocketImpl::shutdownOutput (void)\n+gnu::java::net::PlainSocketImpl::shutdownOutput (void)\n {\n   if (::shutdown (fnum, 1))\n     _Jv_ThrowSocketException ();", "previous_filename": "libjava/java/net/natPlainSocketImplWin32.cc"}, {"sha": "401bcb82697d5c620da7743b1a7945fb71ac2c1f", "filename": "libjava/java/net/DatagramSocket.java", "status": "modified", "additions": 19, "deletions": 25, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fjava%2Fnet%2FDatagramSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fjava%2Fnet%2FDatagramSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FDatagramSocket.java?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -35,8 +35,10 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package java.net;\n \n+import gnu.java.net.PlainDatagramSocketImpl;\n import java.io.IOException;\n import java.nio.channels.DatagramChannel;\n import java.nio.channels.IllegalBlockingModeException;\n@@ -266,38 +268,30 @@ public int getPort()\n    */\n   public InetAddress getLocalAddress()\n   {\n-    // FIXME: JCL p. 510 says this should call checkConnect.  But what\n-    // string should be used as the hostname?  Maybe this is just a side\n-    // effect of calling InetAddress.getLocalHost.\n-    //\n-    // And is getOption with SO_BINDADDR the right way to get the address?\n-    // Doesn't seem to be since this method doesn't throw a SocketException\n-    // and SO_BINADDR can throw one.\n-    //\n-    // Also see RETURNS section in JCL p. 510 about returning any local\n-    // addr \"if the current execution context is not allowed to connect to\n-    // the network interface that is actually bound to this datagram socket.\"\n-    // How is that done?  via InetAddress.getLocalHost?  But that throws\n-    // an UnknownHostException and this method doesn't.\n-    //\n-    // if (s != null)\n-    //   s.checkConnect(\"localhost\", -1);\n+    if (impl == null\n+\t|| closed)\n+      return null;\n+    \n+    InetAddress result;\n+    \n     try\n       {\n-        return (InetAddress)impl.getOption(SocketOptions.SO_BINDADDR);\n-      }\n-    catch (SocketException ex)\n-      {\n-      }\n+        result = (InetAddress) impl.getOption (SocketOptions.SO_BINDADDR);\n \n-    try\n+\tSecurityManager s = System.getSecurityManager();\n+\tif (s != null)\n+\t  s.checkConnect (result.getHostName(), -1);\n+      }\n+    catch (SecurityException e)\n       {\n-        return InetAddress.getLocalHost();\n+\tresult = InetAddress.ANY_IF;\n       }\n-    catch (UnknownHostException ex)\n+    catch (SocketException e)\n       {\n-        return null;\n+\tresult = InetAddress.ANY_IF;\n       }\n+\n+    return result;\n   }\n \n   /**"}, {"sha": "cedd9c6573897b5a00df48d0530aedef8434332c", "filename": "libjava/java/net/MulticastSocket.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fjava%2Fnet%2FMulticastSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fjava%2Fnet%2FMulticastSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FMulticastSocket.java?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -36,8 +36,10 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package java.net;\n \n+import gnu.java.net.PlainDatagramSocketImpl;\n import java.io.IOException;\n import java.util.Enumeration;\n "}, {"sha": "4e6d7092dec3c076090421ddc18f05f7a22e4e81", "filename": "libjava/java/net/ServerSocket.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fjava%2Fnet%2FServerSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fjava%2Fnet%2FServerSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FServerSocket.java?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -1,5 +1,5 @@\n /* ServerSocket.java -- Class for implementing server side sockets\n-   Copyright (C) 1998, 1999, 2000, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -35,8 +35,10 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package java.net;\n \n+import gnu.java.net.PlainSocketImpl;\n import java.io.IOException;\n import java.nio.channels.IllegalBlockingModeException;\n import java.nio.channels.ServerSocketChannel;"}, {"sha": "90dfac2676333fc1ead7a8b061d0278984920611", "filename": "libjava/java/net/Socket.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fjava%2Fnet%2FSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a503716e04b1d4b51c25d183daa727863621364/libjava%2Fjava%2Fnet%2FSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FSocket.java?ref=4a503716e04b1d4b51c25d183daa727863621364", "patch": "@@ -1,5 +1,5 @@\n /* Socket.java -- Client socket implementation\n-   Copyright (C) 1998, 1999, 2000, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -35,8 +35,10 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package java.net;\n \n+import gnu.java.net.PlainSocketImpl;\n import java.io.InputStream;\n import java.io.IOException;\n import java.io.OutputStream;"}, {"sha": "a2a08d719c44dcefe6fb7c8695d20bd5e6e0ef49", "filename": "libjava/java/net/natPlainDatagramSocketImplNoNet.cc", "status": "removed", "additions": 0, "deletions": 119, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/520abf693092a8244aa99ec41eaa76bafa0f9e20/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImplNoNet.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/520abf693092a8244aa99ec41eaa76bafa0f9e20/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImplNoNet.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImplNoNet.cc?ref=520abf693092a8244aa99ec41eaa76bafa0f9e20", "patch": "@@ -1,119 +0,0 @@\n-/* Copyright (C) 2003  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n-\n-#include <config.h>\n-#include <platform.h>\n-\n-#include <java/io/IOException.h>\n-#include <java/lang/Object.h>\n-#include <java/net/BindException.h>\n-#include <java/net/DatagramPacket.h>\n-#include <java/net/InetAddress.h>\n-#include <java/net/NetworkInterface.h>\n-#include <java/net/PlainDatagramSocketImpl.h>\n-#include <java/net/SocketException.h>\n-\n-void\n-java::net::PlainDatagramSocketImpl::create ()\n-{\n-  throw new SocketException (\n-    JvNewStringLatin1 (\"DatagramSocketImpl.create: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainDatagramSocketImpl::bind (jint, java::net::InetAddress *)\n-{\n-  throw new BindException (\n-    JvNewStringLatin1 (\"DatagramSocketImpl.bind: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainDatagramSocketImpl::connect (java::net::InetAddress *, jint)\n-{\n-  throw new SocketException (\n-    JvNewStringLatin1 (\"DatagramSocketImpl.connect: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainDatagramSocketImpl::disconnect ()\n-{\n-  throw new SocketException (\n-    JvNewStringLatin1 (\"DatagramSocketImpl.disconnect: unimplemented\"));\n-}\n-\n-jint\n-java::net::PlainDatagramSocketImpl::peek (java::net::InetAddress *)\n-{\n-  throw new java::io::IOException (\n-    JvNewStringLatin1 (\"DatagramSocketImpl.peek: unimplemented\"));\n-}\n-\n-jint\n-java::net::PlainDatagramSocketImpl::peekData(java::net::DatagramPacket *)\n-{\n-  throw new java::io::IOException (\n-    JvNewStringLatin1 (\"DatagramSocketImpl.peekData: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainDatagramSocketImpl::close ()\n-{\n-  throw new java::io::IOException (\n-    JvNewStringLatin1 (\"DatagramSocketImpl.close: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainDatagramSocketImpl::send (java::net::DatagramPacket *)\n-{\n-  throw new java::io::IOException (\n-    JvNewStringLatin1 (\"DatagramSocketImpl.send: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainDatagramSocketImpl::receive (java::net::DatagramPacket *)\n-{\n-  throw new java::io::IOException (\n-    JvNewStringLatin1 (\"DatagramSocketImpl.receive: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainDatagramSocketImpl::setTimeToLive (jint)\n-{\n-  throw new java::io::IOException (\n-    JvNewStringLatin1 (\"DatagramSocketImpl.setTimeToLive: unimplemented\"));\n-}\n-\n-jint\n-java::net::PlainDatagramSocketImpl::getTimeToLive ()\n-{\n-  throw new java::io::IOException (\n-    JvNewStringLatin1 (\"DatagramSocketImpl.getTimeToLive: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainDatagramSocketImpl::mcastGrp (java::net::InetAddress *,\n-                                              java::net::NetworkInterface *,\n-\t\t\t\t\t      jboolean)\n-{\n-  throw new java::io::IOException (\n-    JvNewStringLatin1 (\"DatagramSocketImpl.mcastGrp: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainDatagramSocketImpl::setOption (jint, java::lang::Object *)\n-{\n-  throw new SocketException (\n-    JvNewStringLatin1 (\"DatagramSocketImpl.setOption: unimplemented\"));\n-}\n-\n-java::lang::Object *\n-java::net::PlainDatagramSocketImpl::getOption (jint)\n-{\n-  throw new SocketException (\n-    JvNewStringLatin1 (\"DatagramSocketImpl.getOption: unimplemented\"));\n-}"}, {"sha": "e65438ef1d5904f470f999810de4140119a0f901", "filename": "libjava/java/net/natPlainSocketImplNoNet.cc", "status": "removed", "additions": 0, "deletions": 128, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/520abf693092a8244aa99ec41eaa76bafa0f9e20/libjava%2Fjava%2Fnet%2FnatPlainSocketImplNoNet.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/520abf693092a8244aa99ec41eaa76bafa0f9e20/libjava%2Fjava%2Fnet%2FnatPlainSocketImplNoNet.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatPlainSocketImplNoNet.cc?ref=520abf693092a8244aa99ec41eaa76bafa0f9e20", "patch": "@@ -1,128 +0,0 @@\n-/* Copyright (C) 2003 Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n-\n-#include <config.h>\n-#include <platform.h>\n-\n-#include <java/io/IOException.h>\n-#include <java/net/BindException.h>\n-#include <java/net/ConnectException.h>\n-#include <java/net/PlainSocketImpl.h>\n-#include <java/net/SocketException.h>\n-\n-void\n-java::net::PlainSocketImpl::create (jboolean)\n-{\n-  throw new java::io::IOException (\n-    JvNewStringLatin1 (\"SocketImpl.create: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainSocketImpl::bind (java::net::InetAddress *, jint)\n-{\n-  throw new BindException (\n-    JvNewStringLatin1 (\"SocketImpl.bind: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainSocketImpl::connect (java::net::SocketAddress *, jint)\n-{\n-  throw new ConnectException (\n-    JvNewStringLatin1 (\"SocketImpl.connect: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainSocketImpl::listen (jint)\n-{\n-  throw new java::io::IOException (\n-    JvNewStringLatin1 (\"SocketImpl.listen: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainSocketImpl::accept (java::net::PlainSocketImpl *)\n-{\n-  throw new java::io::IOException (\n-    JvNewStringLatin1 (\"SocketImpl.accept: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainSocketImpl::setOption (jint, java::lang::Object *)\n-{\n-  throw new SocketException (\n-    JvNewStringLatin1 (\"SocketImpl.setOption: unimplemented\"));\n-}\n-\n-java::lang::Object *\n-java::net::PlainSocketImpl::getOption (jint)\n-{\n-  throw new SocketException (\n-    JvNewStringLatin1 (\"SocketImpl.getOption: unimplemented\"));\n-}\n-\n-jint\n-java::net::PlainSocketImpl::read(void)\n-{\n-  throw new SocketException (\n-    JvNewStringLatin1 (\"SocketImpl.read: unimplemented\"));\n-}\n-\n-jint\n-java::net::PlainSocketImpl::read(jbyteArray buffer, jint offset, jint count)\n-{\n-  throw new SocketException (\n-    JvNewStringLatin1 (\"SocketImpl.read: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainSocketImpl::write(jint b)\n-{\n-  throw new SocketException (\n-    JvNewStringLatin1 (\"SocketImpl.write: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainSocketImpl::write(jbyteArray b, jint offset, jint len)\n-{\n-  throw new SocketException (\n-    JvNewStringLatin1 (\"SocketImpl.write: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainSocketImpl::sendUrgentData(jint data)\n-{\n-  throw new SocketException (\n-    JvNewStringLatin1 (\"SocketImpl.sendUrgentData: unimplemented\"));\n-}\n-\n-jint\n-java::net::PlainSocketImpl::available(void)\n-{\n-  throw new SocketException (\n-    JvNewStringLatin1 (\"SocketImpl.available: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainSocketImpl::close(void)\n-{\n-  throw new SocketException (\n-    JvNewStringLatin1 (\"SocketImpl.close: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainSocketImpl::shutdownInput (void)\n-{\n-  throw new SocketException (\n-    JvNewStringLatin1 (\"SocketImpl.shutdownInput: unimplemented\"));\n-}\n-\n-void\n-java::net::PlainSocketImpl::shutdownOutput (void)\n-{\n-  throw new SocketException (\n-    JvNewStringLatin1 (\"SocketImpl.shutdownOutput: unimplemented\"));\n-}"}]}