{"sha": "5f96750d14e28200c13fb15d88edc77ecc8cbafc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY5Njc1MGQxNGUyODIwMGMxM2ZiMTVkODhlZGM3N2VjYzhjYmFmYw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-28T20:15:51Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-28T20:15:51Z"}, "message": "(can_combine_p): Don't don't substitute an expression\ncontaining a register that will be clobbered in I3.\n\nFrom-SVN: r2631", "tree": {"sha": "73c88455d61388bd6fb9a840e9bc39fbdaafcccf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73c88455d61388bd6fb9a840e9bc39fbdaafcccf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f96750d14e28200c13fb15d88edc77ecc8cbafc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f96750d14e28200c13fb15d88edc77ecc8cbafc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f96750d14e28200c13fb15d88edc77ecc8cbafc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f96750d14e28200c13fb15d88edc77ecc8cbafc/comments", "author": null, "committer": null, "parents": [{"sha": "dc4e989cc8d778764e96577061efc48770bc17fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc4e989cc8d778764e96577061efc48770bc17fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc4e989cc8d778764e96577061efc48770bc17fd"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "89383a46ce671a76dcee38bd048366c1d60bee06", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f96750d14e28200c13fb15d88edc77ecc8cbafc/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f96750d14e28200c13fb15d88edc77ecc8cbafc/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=5f96750d14e28200c13fb15d88edc77ecc8cbafc", "patch": "@@ -776,11 +776,15 @@ can_combine_p (insn, i3, pred, succ, pdest, psrc)\n   else if (GET_CODE (dest) != CC0)\n     return 0;\n \n-  /* Don't substitute for a register intended as a clobberable operand.  */\n+  /* Don't substitute for a register intended as a clobberable operand.\n+     Similarly, don't substitute an expression containing a register that\n+     will be clobbered in I3.  */\n   if (GET_CODE (PATTERN (i3)) == PARALLEL)\n     for (i = XVECLEN (PATTERN (i3), 0) - 1; i >= 0; i--)\n       if (GET_CODE (XVECEXP (PATTERN (i3), 0, i)) == CLOBBER\n-\t  && rtx_equal_p (XEXP (XVECEXP (PATTERN (i3), 0, i), 0), dest))\n+\t  && (reg_overlap_mentioned_p (XEXP (XVECEXP (PATTERN (i3), 0, i), 0),\n+\t\t\t\t       src)\n+\t      || rtx_equal_p (XEXP (XVECEXP (PATTERN (i3), 0, i), 0), dest)))\n \treturn 0;\n \n   /* If INSN contains anything volatile, or is an `asm' (whether volatile"}]}