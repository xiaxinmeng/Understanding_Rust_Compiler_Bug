{"sha": "4e2fb7de2d62d73c3ef7967933af331aa3888f0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUyZmI3ZGUyZDYyZDczYzNlZjc5Njc5MzNhZjMzMWFhMzg4OGYwYQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-11-11T23:13:12Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-11-11T23:13:12Z"}, "message": "c-typeck.c (c_size_in_bytes, [...]): Make them static.\n\n\t* c-typeck.c (c_size_in_bytes, record_maybe_used_decl):\n\tMake them static.\n\t* c-tree.h: Remove the corresponding prototypes.\n\nFrom-SVN: r90504", "tree": {"sha": "ec0ba20c291af19d0c5c23430ec5353db447b8c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec0ba20c291af19d0c5c23430ec5353db447b8c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e2fb7de2d62d73c3ef7967933af331aa3888f0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e2fb7de2d62d73c3ef7967933af331aa3888f0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e2fb7de2d62d73c3ef7967933af331aa3888f0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e2fb7de2d62d73c3ef7967933af331aa3888f0a/comments", "author": null, "committer": null, "parents": [{"sha": "25a6c68bca08d059334543675bd5a6045008ff9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25a6c68bca08d059334543675bd5a6045008ff9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25a6c68bca08d059334543675bd5a6045008ff9b"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "14be8abc857a83c5fbe95931c7259c2aa845bdbc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2fb7de2d62d73c3ef7967933af331aa3888f0a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2fb7de2d62d73c3ef7967933af331aa3888f0a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e2fb7de2d62d73c3ef7967933af331aa3888f0a", "patch": "@@ -14,6 +14,10 @@\n \tunloop): Make them static.\n \t* cfgloop.h: Remove the corresponding prototypes.\n \n+\t* c-typeck.c (c_size_in_bytes, record_maybe_used_decl):\n+\tMake them static.\n+\t* c-tree.h: Remove the corresponding prototypes.\n+\n 2004-11-11  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* function.c (expand_function_end): Remove an \"if\" statement"}, {"sha": "5db3c091a50f3b821926c706515ce3cdd7a9f12a", "filename": "gcc/c-tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2fb7de2d62d73c3ef7967933af331aa3888f0a/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2fb7de2d62d73c3ef7967933af331aa3888f0a/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=4e2fb7de2d62d73c3ef7967933af331aa3888f0a", "patch": "@@ -452,7 +452,6 @@ extern struct c_switch *c_switch_stack;\n extern tree require_complete_type (tree);\n extern int same_translation_unit_p (tree, tree);\n extern int comptypes (tree, tree);\n-extern tree c_size_in_bytes (tree);\n extern bool c_mark_addressable (tree);\n extern void c_incomplete_type_error (tree, tree);\n extern tree c_type_promotes_to (tree);\n@@ -461,7 +460,6 @@ extern tree build_component_ref (tree, tree);\n extern tree build_indirect_ref (tree, const char *);\n extern tree build_array_ref (tree, tree);\n extern tree build_external_ref (tree, int);\n-extern void record_maybe_used_decl (tree);\n extern void pop_maybe_used (bool);\n extern struct c_expr c_expr_sizeof_expr (struct c_expr);\n extern struct c_expr c_expr_sizeof_type (struct c_type_name *);"}, {"sha": "6be4d6b0000677cef2bd58ff5b5735bcc5f6bb6d", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2fb7de2d62d73c3ef7967933af331aa3888f0a/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2fb7de2d62d73c3ef7967933af331aa3888f0a/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=4e2fb7de2d62d73c3ef7967933af331aa3888f0a", "patch": "@@ -111,6 +111,7 @@ static void set_nonincremental_init_from_string (tree);\n static tree find_init_member (tree);\n static int lvalue_or_else (tree, enum lvalue_use);\n static void readonly_error (tree, enum lvalue_use);\n+static void record_maybe_used_decl (tree);\n \f\n /* Do `exp = require_complete_type (exp);' to make sure exp\n    does not have an incomplete type.  (That includes void types.)  */\n@@ -1126,7 +1127,7 @@ type_lists_compatible_p (tree args1, tree args2)\n \f\n /* Compute the size to increment a pointer by.  */\n \n-tree\n+static tree\n c_size_in_bytes (tree type)\n {\n   enum tree_code code = TREE_CODE (type);\n@@ -1807,7 +1808,7 @@ static struct maybe_used_decl *maybe_used_decls;\n    a VLA type or the operand of typeof is a variably modified\n    type.  */\n \n-void\n+static void\n record_maybe_used_decl (tree decl)\n {\n   struct maybe_used_decl *t = XOBNEW (&parser_obstack, struct maybe_used_decl);"}]}