{"sha": "be30fc4ce085ef786f104c6a407ccd44e554cd54", "node_id": "C_kwDOANBUbNoAKGJlMzBmYzRjZTA4NWVmNzg2ZjEwNGM2YTQwN2NjZDQ0ZTU1NGNkNTQ", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-30T16:07:21Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-30T23:10:04Z"}, "message": "libstdc++: Fix tests that fail with fully-dynamic-string\n\nFix some tests that assume that a moved-from string is empty, or that\ndefault constructing a string doesn't allocate.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/21_strings/basic_string/cons/char/moveable.cc: Allow\n\tmoved-from string to be non-empty.\n\t* testsuite/21_strings/basic_string/cons/char/moveable2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/cons/char/moveable2_c++17.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/moveable.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/moveable2.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/moveable2_c++17.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/modifiers/assign/char/87749.cc:\n\tConstruct empty string before setting oom flag.\n\t* testsuite/21_strings/basic_string/modifiers/assign/wchar_t/87749.cc:\n\tLikewise.", "tree": {"sha": "f58975af9d412e48c8c7c08dfa89669557e9ad32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f58975af9d412e48c8c7c08dfa89669557e9ad32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be30fc4ce085ef786f104c6a407ccd44e554cd54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be30fc4ce085ef786f104c6a407ccd44e554cd54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be30fc4ce085ef786f104c6a407ccd44e554cd54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be30fc4ce085ef786f104c6a407ccd44e554cd54/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "675afa21244d58640876da3287d303e376a3b59a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/675afa21244d58640876da3287d303e376a3b59a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/675afa21244d58640876da3287d303e376a3b59a"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "3ba39ec432d62f0a0afb346dc64e536684242a1e", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/moveable.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be30fc4ce085ef786f104c6a407ccd44e554cd54/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be30fc4ce085ef786f104c6a407ccd44e554cd54/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fmoveable.cc?ref=be30fc4ce085ef786f104c6a407ccd44e554cd54", "patch": "@@ -35,7 +35,9 @@ void test01()\n \n   std::string c(std::move(b));\n   VERIFY( c.size() == 1 && c[0] == '1' );\n-  VERIFY( b.size() == 0 );\n+#if ! _GLIBCXX_FULLY_DYNAMIC_STRING\n+  VERIFY( b.size() == 0 ); // not guaranteed by the standard\n+#endif\n }\n \n int main()"}, {"sha": "5804ccb6bf883e495de5e1016d9c2926e9fd9e99", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/moveable2.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be30fc4ce085ef786f104c6a407ccd44e554cd54/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fmoveable2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be30fc4ce085ef786f104c6a407ccd44e554cd54/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fmoveable2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fmoveable2.cc?ref=be30fc4ce085ef786f104c6a407ccd44e554cd54", "patch": "@@ -44,7 +44,9 @@ void test01()\n \n   tstring c(std::move(b));\n   VERIFY( c.size() == 1 && c[0] == '1' );\n-  VERIFY( b.size() == 0 );\n+#if ! _GLIBCXX_FULLY_DYNAMIC_STRING\n+  VERIFY( b.size() == 0 ); // not guaranteed by the standard\n+#endif\n }\n \n int main()"}, {"sha": "59d1d775134f480607292b483d834899a07688d6", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/moveable2_c++17.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be30fc4ce085ef786f104c6a407ccd44e554cd54/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fmoveable2_c%2B%2B17.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be30fc4ce085ef786f104c6a407ccd44e554cd54/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fmoveable2_c%2B%2B17.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fmoveable2_c%2B%2B17.cc?ref=be30fc4ce085ef786f104c6a407ccd44e554cd54", "patch": "@@ -42,7 +42,9 @@ void test01()\n \n   tstring c(std::move(b));\n   VERIFY( c.size() == 1 && c[0] == '1' );\n-  VERIFY( b.size() == 0 );\n+#if ! _GLIBCXX_FULLY_DYNAMIC_STRING\n+  VERIFY( b.size() == 0 ); // not guaranteed by the standard\n+#endif\n }\n \n int main()"}, {"sha": "67e25de2916b92064a600767425d3af46aea937e", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/moveable.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be30fc4ce085ef786f104c6a407ccd44e554cd54/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be30fc4ce085ef786f104c6a407ccd44e554cd54/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fmoveable.cc?ref=be30fc4ce085ef786f104c6a407ccd44e554cd54", "patch": "@@ -35,7 +35,9 @@ void test01()\n \n   std::wstring c(std::move(b));\n   VERIFY( c.size() == 1 && c[0] == L'1' );\n-  VERIFY( b.size() == 0 );\n+#if ! _GLIBCXX_FULLY_DYNAMIC_STRING\n+  VERIFY( b.size() == 0 ); // not guaranteed by the standard\n+#endif\n }\n \n int main()"}, {"sha": "c72eb9bfddbb8895305279f00802c2b10912cd28", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/moveable2.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be30fc4ce085ef786f104c6a407ccd44e554cd54/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fmoveable2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be30fc4ce085ef786f104c6a407ccd44e554cd54/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fmoveable2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fmoveable2.cc?ref=be30fc4ce085ef786f104c6a407ccd44e554cd54", "patch": "@@ -44,7 +44,9 @@ void test01()\n \n   twstring c(std::move(b));\n   VERIFY( c.size() == 1 && c[0] == L'1' );\n-  VERIFY( b.size() == 0 );\n+#if ! _GLIBCXX_FULLY_DYNAMIC_STRING\n+  VERIFY( b.size() == 0 ); // not guaranteed by the standard\n+#endif\n }\n \n int main()"}, {"sha": "6a2bc2714b5240d2baa0b840273b94ec1ac5988a", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/moveable2_c++17.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be30fc4ce085ef786f104c6a407ccd44e554cd54/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fmoveable2_c%2B%2B17.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be30fc4ce085ef786f104c6a407ccd44e554cd54/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fmoveable2_c%2B%2B17.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fmoveable2_c%2B%2B17.cc?ref=be30fc4ce085ef786f104c6a407ccd44e554cd54", "patch": "@@ -42,7 +42,9 @@ void test01()\n \n   tstring c(std::move(b));\n   VERIFY( c.size() == 1 && c[0] == L'1' );\n-  VERIFY( b.size() == 0 );\n+#if ! _GLIBCXX_FULLY_DYNAMIC_STRING\n+  VERIFY( b.size() == 0 ); // not guaranteed by the standard\n+#endif\n }\n \n int main()"}, {"sha": "6a3ed55f5572803d64c39038fa00c0c6b08b9ba3", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/modifiers/assign/char/87749.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be30fc4ce085ef786f104c6a407ccd44e554cd54/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fmodifiers%2Fassign%2Fchar%2F87749.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be30fc4ce085ef786f104c6a407ccd44e554cd54/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fmodifiers%2Fassign%2Fchar%2F87749.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fmodifiers%2Fassign%2Fchar%2F87749.cc?ref=be30fc4ce085ef786f104c6a407ccd44e554cd54", "patch": "@@ -71,8 +71,8 @@ int main()\n \n   string s = \"PR libstdc++/87749 a string that is longer than a short string\";\n   const auto ptr = s.c_str();\n-  oom = true;\n   string ss;\n+  oom = true;\n   ss = std::move(s); // allocators are equal, should not allocate new storage\n   VERIFY( ss.c_str() == ptr );\n }"}, {"sha": "536ca6153d325fa6550e96beb26f341e37555e6d", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/modifiers/assign/wchar_t/87749.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be30fc4ce085ef786f104c6a407ccd44e554cd54/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fmodifiers%2Fassign%2Fwchar_t%2F87749.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be30fc4ce085ef786f104c6a407ccd44e554cd54/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fmodifiers%2Fassign%2Fwchar_t%2F87749.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fmodifiers%2Fassign%2Fwchar_t%2F87749.cc?ref=be30fc4ce085ef786f104c6a407ccd44e554cd54", "patch": "@@ -72,8 +72,8 @@ int main()\n \n   string s = L\"PR libstdc++/87749 a string that is longer than a short string\";\n   const auto ptr = s.c_str();\n-  oom = true;\n   string ss;\n+  oom = true;\n   ss = std::move(s); // allocators are equal, should not allocate new storage\n   VERIFY( ss.c_str() == ptr );\n }"}]}