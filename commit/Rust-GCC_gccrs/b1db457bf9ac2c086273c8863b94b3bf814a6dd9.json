{"sha": "b1db457bf9ac2c086273c8863b94b3bf814a6dd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFkYjQ1N2JmOWFjMmMwODYyNzNjODg2M2I5NGIzYmY4MTRhNmRkOQ==", "commit": {"author": {"name": "Torvald Riegel", "email": "triegel@redhat.com", "date": "2013-06-20T16:40:38Z"}, "committer": {"name": "Torvald Riegel", "email": "torvald@gcc.gnu.org", "date": "2013-06-20T16:40:38Z"}, "message": "libitm: Fix handling of reentrancy in the HTM fastpath.\n\n\tPR libitm/57643\n\t* beginend.cc (gtm_thread::begin_transaction): Handle reentrancy in\n\tthe HTM fastpath.\n\nFrom-SVN: r200250", "tree": {"sha": "8928a26da25237053ba123d609fec2b28f64361d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8928a26da25237053ba123d609fec2b28f64361d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1db457bf9ac2c086273c8863b94b3bf814a6dd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1db457bf9ac2c086273c8863b94b3bf814a6dd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1db457bf9ac2c086273c8863b94b3bf814a6dd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1db457bf9ac2c086273c8863b94b3bf814a6dd9/comments", "author": {"login": "triegelrh", "id": 62400967, "node_id": "MDQ6VXNlcjYyNDAwOTY3", "avatar_url": "https://avatars.githubusercontent.com/u/62400967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/triegelrh", "html_url": "https://github.com/triegelrh", "followers_url": "https://api.github.com/users/triegelrh/followers", "following_url": "https://api.github.com/users/triegelrh/following{/other_user}", "gists_url": "https://api.github.com/users/triegelrh/gists{/gist_id}", "starred_url": "https://api.github.com/users/triegelrh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/triegelrh/subscriptions", "organizations_url": "https://api.github.com/users/triegelrh/orgs", "repos_url": "https://api.github.com/users/triegelrh/repos", "events_url": "https://api.github.com/users/triegelrh/events{/privacy}", "received_events_url": "https://api.github.com/users/triegelrh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dcef09b5d11f5c12d6e42a93bbf99d5b7b413080", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcef09b5d11f5c12d6e42a93bbf99d5b7b413080", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcef09b5d11f5c12d6e42a93bbf99d5b7b413080"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "26001b670bd5e89817a49ff27336c0b4aded8a8a", "filename": "libitm/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1db457bf9ac2c086273c8863b94b3bf814a6dd9/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1db457bf9ac2c086273c8863b94b3bf814a6dd9/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=b1db457bf9ac2c086273c8863b94b3bf814a6dd9", "patch": "@@ -1,3 +1,9 @@\n+2013-06-20  Torvald Riegel  <triegel@redhat.com>\n+\n+\tPR libitm/57643\n+\t* beginend.cc (gtm_thread::begin_transaction): Handle reentrancy in\n+\tthe HTM fastpath.\n+\n 2013-03-31  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \tPR bootstrap/56714"}, {"sha": "a3bf5492153bac5532cdd99409fc0525f36d92dd", "filename": "libitm/beginend.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1db457bf9ac2c086273c8863b94b3bf814a6dd9/libitm%2Fbeginend.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1db457bf9ac2c086273c8863b94b3bf814a6dd9/libitm%2Fbeginend.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fbeginend.cc?ref=b1db457bf9ac2c086273c8863b94b3bf814a6dd9", "patch": "@@ -197,6 +197,8 @@ GTM::gtm_thread::begin_transaction (uint32_t prop, const gtm_jmpbuf *jb)\n \t      // We are executing a transaction now.\n \t      // Monitor the writer flag in the serial-mode lock, and abort\n \t      // if there is an active or waiting serial-mode transaction.\n+\t      // Note that this can also happen due to an enclosing\n+\t      // serial-mode transaction; we handle this case below.\n \t      if (unlikely(serial_lock.is_write_locked()))\n \t\thtm_abort();\n \t      else\n@@ -219,6 +221,14 @@ GTM::gtm_thread::begin_transaction (uint32_t prop, const gtm_jmpbuf *jb)\n \t          tx = new gtm_thread();\n \t          set_gtm_thr(tx);\n \t        }\n+\t      // Check whether there is an enclosing serial-mode transaction;\n+\t      // if so, we just continue as a nested transaction and don't\n+\t      // try to use the HTM fastpath.  This case can happen when an\n+\t      // outermost relaxed transaction calls unsafe code that starts\n+\t      // a transaction.\n+\t      if (tx->nesting > 0)\n+\t\tbreak;\n+\t      // Another thread is running a serial-mode transaction.  Wait.\n \t      serial_lock.read_lock(tx);\n \t      serial_lock.read_unlock(tx);\n \t      // TODO We should probably reset the retry count t here, unless"}]}