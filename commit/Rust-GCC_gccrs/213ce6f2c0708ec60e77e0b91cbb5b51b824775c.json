{"sha": "213ce6f2c0708ec60e77e0b91cbb5b51b824775c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEzY2U2ZjJjMDcwOGVjNjBlNzdlMGI5MWNiYjViNTFiODI0Nzc1Yw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-10-19T09:17:17Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-10-19T09:17:17Z"}, "message": "mips.c (mips_canonicalize_comparison): Check mips_relational_operand_ok_p before trying to rewrite the test.\n\ngcc/\n\t* config/mips/mips.c (mips_canonicalize_comparison):  Check\n\tmips_relational_operand_ok_p before trying to rewrite the test.\n\tOnly calculate PLUS_ONE if needed.\n\t(mips_emit_int_relational): Don't call mips_relational_operand_ok_p\n\there.\n\nFrom-SVN: r129483", "tree": {"sha": "0efc2df8f4f9a1aaa64a0ab8542de8bd3d752679", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0efc2df8f4f9a1aaa64a0ab8542de8bd3d752679"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/213ce6f2c0708ec60e77e0b91cbb5b51b824775c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/213ce6f2c0708ec60e77e0b91cbb5b51b824775c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/213ce6f2c0708ec60e77e0b91cbb5b51b824775c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/213ce6f2c0708ec60e77e0b91cbb5b51b824775c/comments", "author": null, "committer": null, "parents": [{"sha": "b87bc4e835ac462427c9185ea2ad120f1338dd7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b87bc4e835ac462427c9185ea2ad120f1338dd7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b87bc4e835ac462427c9185ea2ad120f1338dd7e"}], "stats": {"total": 78, "additions": 40, "deletions": 38}, "files": [{"sha": "f7454c50c817eca2a1692154389f7f55683325e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/213ce6f2c0708ec60e77e0b91cbb5b51b824775c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/213ce6f2c0708ec60e77e0b91cbb5b51b824775c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=213ce6f2c0708ec60e77e0b91cbb5b51b824775c", "patch": "@@ -1,3 +1,11 @@\n+2007-10-19  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* config/mips/mips.c (mips_canonicalize_comparison):  Check\n+\tmips_relational_operand_ok_p before trying to rewrite the test.\n+\tOnly calculate PLUS_ONE if needed.\n+\t(mips_emit_int_relational): Don't call mips_relational_operand_ok_p\n+\there.\n+\n 2007-10-19  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* config/mips/mips.c (mips16e_build_save_restore): Fix *OFFSET_PTR"}, {"sha": "8c45369ba7888b876dae2eed60bf3664d59cbeab", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 32, "deletions": 38, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/213ce6f2c0708ec60e77e0b91cbb5b51b824775c/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/213ce6f2c0708ec60e77e0b91cbb5b51b824775c/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=213ce6f2c0708ec60e77e0b91cbb5b51b824775c", "patch": "@@ -3678,40 +3678,38 @@ static bool\n mips_canonicalize_comparison (enum rtx_code *code, rtx *cmp1,\n \t\t\t      enum machine_mode mode)\n {\n-  HOST_WIDE_INT original, plus_one;\n+  HOST_WIDE_INT plus_one;\n \n-  if (GET_CODE (*cmp1) != CONST_INT)\n-    return false;\n-\n-  original = INTVAL (*cmp1);\n-  plus_one = trunc_int_for_mode ((unsigned HOST_WIDE_INT) original + 1, mode);\n-\n-  switch (*code)\n-    {\n-    case LE:\n-      if (original < plus_one)\n-\t{\n-\t  *code = LT;\n-\t  *cmp1 = force_reg (mode, GEN_INT (plus_one));\n-\t  return true;\n-\t}\n-      break;\n+  if (mips_relational_operand_ok_p (*code, *cmp1))\n+    return true;\n \n-    case LEU:\n-      if (plus_one != 0)\n-\t{\n-\t  *code = LTU;\n-\t  *cmp1 = force_reg (mode, GEN_INT (plus_one));\n-\t  return true;\n-\t}\n-      break;\n+  if (GET_CODE (*cmp1) == CONST_INT)\n+    switch (*code)\n+      {\n+      case LE:\n+\tplus_one = trunc_int_for_mode (UINTVAL (*cmp1) + 1, mode);\n+\tif (INTVAL (*cmp1) < plus_one)\n+\t  {\n+\t    *code = LT;\n+\t    *cmp1 = force_reg (mode, GEN_INT (plus_one));\n+\t    return true;\n+\t  }\n+\tbreak;\n \n-    default:\n-      return false;\n-   }\n+      case LEU:\n+\tplus_one = trunc_int_for_mode (UINTVAL (*cmp1) + 1, mode);\n+\tif (plus_one != 0)\n+\t  {\n+\t    *code = LTU;\n+\t    *cmp1 = force_reg (mode, GEN_INT (plus_one));\n+\t    return true;\n+\t  }\n+\tbreak;\n \n+      default:\n+\tbreak;\n+      }\n   return false;\n-\n }\n \n /* Compare CMP0 and CMP1 using relational operator CODE and store the\n@@ -3723,19 +3721,15 @@ static void\n mips_emit_int_relational (enum rtx_code code, bool *invert_ptr,\n \t\t\t  rtx target, rtx cmp0, rtx cmp1)\n {\n-  /* First see if there is a MIPS instruction that can do this operation\n-     with CMP1 in its current form. If not, try to canonicalize the\n-     comparison to LT. If that fails, try doing the same for the\n-     inverse operation.  If that also fails, force CMP1 into a register\n-     and try again.  */\n-  if (mips_relational_operand_ok_p (code, cmp1))\n-    mips_emit_binary (code, target, cmp0, cmp1);\n-  else if (mips_canonicalize_comparison (&code, &cmp1, GET_MODE (target)))\n+  /* First see if there is a MIPS instruction that can do this operation.\n+     If not, try doing the same for the inverse operation.  If that also\n+     fails, force CMP1 into a register and try again.  */\n+  if (mips_canonicalize_comparison (&code, &cmp1, GET_MODE (target)))\n     mips_emit_binary (code, target, cmp0, cmp1);\n   else\n     {\n       enum rtx_code inv_code = reverse_condition (code);\n-      if (!mips_relational_operand_ok_p (inv_code, cmp1))\n+      if (!mips_canonicalize_comparison (&inv_code, &cmp1, GET_MODE (target)))\n \t{\n \t  cmp1 = force_reg (GET_MODE (cmp0), cmp1);\n \t  mips_emit_int_relational (code, invert_ptr, target, cmp0, cmp1);"}]}