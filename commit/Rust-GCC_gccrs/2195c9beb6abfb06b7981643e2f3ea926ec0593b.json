{"sha": "2195c9beb6abfb06b7981643e2f3ea926ec0593b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE5NWM5YmViNmFiZmIwNmI3OTgxNjQzZTJmM2VhOTI2ZWMwNTkzYg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "Andreas.Krebbel@de.ibm.com", "date": "2011-11-22T19:52:34Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2011-11-22T19:52:34Z"}, "message": "postreload.c (reload_combine): Mark reg_state as invalid at volatile insns if there has been a use already.\n\n2011-11-22  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* postreload.c (reload_combine): Mark reg_state as invalid at\n\tvolatile insns if there has been a use already.\n\nFrom-SVN: r181631", "tree": {"sha": "ddf0e6a9a37ef629ed736da96036b927d492ddaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddf0e6a9a37ef629ed736da96036b927d492ddaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2195c9beb6abfb06b7981643e2f3ea926ec0593b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2195c9beb6abfb06b7981643e2f3ea926ec0593b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2195c9beb6abfb06b7981643e2f3ea926ec0593b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2195c9beb6abfb06b7981643e2f3ea926ec0593b/comments", "author": null, "committer": null, "parents": [{"sha": "57ac2606c472c30be27975f137f36b81d0824af8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57ac2606c472c30be27975f137f36b81d0824af8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57ac2606c472c30be27975f137f36b81d0824af8"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "700e833677b65e67dbaa2d5d786896d540e06a9d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2195c9beb6abfb06b7981643e2f3ea926ec0593b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2195c9beb6abfb06b7981643e2f3ea926ec0593b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2195c9beb6abfb06b7981643e2f3ea926ec0593b", "patch": "@@ -1,3 +1,8 @@\n+2011-11-22  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* postreload.c (reload_combine): Mark reg_state as invalid at\n+\tvolatile insns if there has been a use already.\n+\n 2011-11-21  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* opts.c (finish_options): Do not fail for -fgnu-tm."}, {"sha": "5c1891294458959877a4ddbf59e85a93a4746b1a", "filename": "gcc/postreload.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2195c9beb6abfb06b7981643e2f3ea926ec0593b/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2195c9beb6abfb06b7981643e2f3ea926ec0593b/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=2195c9beb6abfb06b7981643e2f3ea926ec0593b", "patch": "@@ -1312,11 +1312,21 @@ reload_combine (void)\n \t is and then later disable any optimization that would cross it.  */\n       if (LABEL_P (insn))\n \tlast_label_ruid = reload_combine_ruid;\n-      else if (BARRIER_P (insn)\n-\t       || (INSN_P (insn) && volatile_insn_p (PATTERN (insn))))\n-\tfor (r = 0; r < FIRST_PSEUDO_REGISTER; r++)\n-\t  if (! fixed_regs[r])\n+      else if (BARRIER_P (insn))\n+\t{\n+\t  /* Crossing a barrier resets all the use information.  */\n+\t  for (r = 0; r < FIRST_PSEUDO_REGISTER; r++)\n+\t    if (! fixed_regs[r])\n \t      reg_state[r].use_index = RELOAD_COMBINE_MAX_USES;\n+\t}\n+      else if (INSN_P (insn) && volatile_insn_p (PATTERN (insn)))\n+\t/* Optimizations across insns being marked as volatile must be\n+\t   prevented.  All the usage information is invalidated\n+\t   here.  */\n+\tfor (r = 0; r < FIRST_PSEUDO_REGISTER; r++)\n+\t  if (! fixed_regs[r]\n+\t      && reg_state[r].use_index != RELOAD_COMBINE_MAX_USES)\n+\t    reg_state[r].use_index = -1;\n \n       if (! NONDEBUG_INSN_P (insn))\n \tcontinue;"}]}