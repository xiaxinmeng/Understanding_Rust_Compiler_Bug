{"sha": "ae27ce51e4860388d2b4129e2a80cc7f292368b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUyN2NlNTFlNDg2MDM4OGQyYjQxMjllMmE4MGNjN2YyOTIzNjhiNQ==", "commit": {"author": {"name": "Qian Jianhua", "email": "qianjh@cn.fujitsu.com", "date": "2020-12-22T18:54:34Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-12-22T18:54:34Z"}, "message": "arm&aarch64: subdivide the type attribute \"alu_shfit_imm\"\n\nThe type attribute \"alu_shfit_imm\" is subdivided into\n\"alu_shift_imm_lsl_1to4\" and \"alu_shift_imm_other\", to accommodate\noptimazations of some microarchitectures.\n\nHere is the detailed discussion.\nhttps://gcc.gnu.org/pipermail/gcc/2020-September/233594.html\n\ngcc/\n\t* config/arm/types.md (define_attr \"autodetect_type\"): New.\n\t(define_attr \"type\"): Subdivide alu_shift_imm.\n\t* config/arm/common.md: New file.\n\t* config/aarch64/predicates.md:Include common.md.\n\t* config/arm/predicates.md:Include common.md.\n\t* config/aarch64/aarch64.md (*add_<shift>_<mode>): Set autodetect_type.\n\t(*add_<shift>_si_uxtw): Likewise.\n\t(*sub_<shift>_<mode>): Likewise.\n\t(*sub_<shift>_si_uxtw): Likewise.\n\t(*neg_<shift>_<mode>2): Likewise.\n\t(*neg_<shift>_si2_uxtw): Likewise.\n\t* config/arm/arm.md (*addsi3_carryin_shift): Likewise.\n\t(add_not_shift_cin): Likewise.\n\t(*subsi3_carryin_shift): Likewise.\n\t(*subsi3_carryin_shift_alt): Likewise.\n\t(*rsbsi3_carryin_shift): Likewise.\n\t(*rsbsi3_carryin_shift_alt): Likewise.\n\t(*arm_shiftsi3): Likewise.\n\t(*<arith_shift_insn>_multsi): Likewise.\n\t(*<arith_shift_insn>_shiftsi): Likewise.\n\t(subsi3_carryin): Set new type.\n\t(*if_arith_move): Set new type.\n\t(*if_move_arith): Set new type.\n\t(define_attr \"core_cycles\"): Use new type.\n\t* config/arm/arm-fixed.md (arm_ssatsihi_shift): Set autodetect_type.\n\t* config/arm/thumb2.md (*orsi_not_shiftsi_si): Likewise.\n\t(*thumb2_shiftsi3_short): Set new type.\n\t* config/aarch64/falkor.md (falkor_alu_1_xyz): Use new type.\n\t* config/aarch64/saphira.md (saphira_alu_1_xyz): Likewise.\n\t* config/aarch64/thunderx.md (thunderx_arith_shift): Likewise.\n\t* config/aarch64/thunderx2t99.md (thunderx2t99_alu_shift): Likewise.\n\t* config/aarch64/thunderx3t110.md (thunderx3t110_alu_shift): Likewise.\n\t(thunderx3t110_alu_shift1): Likewise.\n\t* config/aarch64/tsv110.md (tsv110_alu_shift): Likewise.\n\t* config/arm/arm1020e.md (1020alu_shift_op): Likewise.\n\t* config/arm/arm1026ejs.md (alu_shift_op): Likewise.\n\t* config/arm/arm1136jfs.md (11_alu_shift_op): Likewise.\n\t* config/arm/arm926ejs.md (9_alu_op): Likewise.\n\t* config/arm/cortex-a15.md (cortex_a15_alu_shift): Likewise.\n\t* config/arm/cortex-a17.md (cortex_a17_alu_shiftimm): Likewise.\n\t* config/arm/cortex-a5.md (cortex_a5_alu_shift): Likewise.\n\t* config/arm/cortex-a53.md (cortex_a53_alu_shift): Likewise.\n\t* config/arm/cortex-a57.md (cortex_a57_alu_shift): Likewise.\n\t* config/arm/cortex-a7.md (cortex_a7_alu_shift): Likewise.\n\t* config/arm/cortex-a8.md (cortex_a8_alu_shift): Likewise.\n\t* config/arm/cortex-a9.md (cortex_a9_dp_shift): Likewise.\n\t* config/arm/cortex-m4.md (cortex_m4_alu): Likewise.\n\t* config/arm/cortex-m7.md (cortex_m7_alu_shift): Likewise.\n\t* config/arm/cortex-r4.md (cortex_r4_alu_shift): Likewise.\n\t* config/arm/exynos-m1.md (exynos_m1_alu_shift): Likewise.\n\t* config/arm/fa526.md (526_alu_shift_op): Likewise.\n\t* config/arm/fa606te.md (606te_alu_op): Likewise.\n\t* config/arm/fa626te.md (626te_alu_shift_op): Likewise.\n\t* config/arm/fa726te.md (726te_alu_shift_op): Likewise.\n\t* config/arm/fmp626.md (mp626_alu_shift_op): Likewise.\n\t* config/arm/marvell-pj4.md (pj4_shift): Likewise.\n\t(pj4_shift_conds): Likewise.\n\t(pj4_alu_shift): Likewise.\n\t(pj4_alu_shift_conds): Likewise.\n\t* config/arm/xgene1.md (xgene1_alu): Likewise.\n\t* config/arm/arm.c (xscale_sched_adjust_cost): Likewise.", "tree": {"sha": "ae66dffe72c63db424747fbd78a6c17a96242bae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae66dffe72c63db424747fbd78a6c17a96242bae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae27ce51e4860388d2b4129e2a80cc7f292368b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae27ce51e4860388d2b4129e2a80cc7f292368b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae27ce51e4860388d2b4129e2a80cc7f292368b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae27ce51e4860388d2b4129e2a80cc7f292368b5/comments", "author": null, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "337ed0eb490b14899f4049bc4c8922eb1d8a2e67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/337ed0eb490b14899f4049bc4c8922eb1d8a2e67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/337ed0eb490b14899f4049bc4c8922eb1d8a2e67"}], "stats": {"total": 232, "additions": 170, "deletions": 62}, "files": [{"sha": "751ef0d626661d487a504358c30b2b138219941b", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -2474,7 +2474,7 @@\n \t\t  (match_operand:GPI 3 \"register_operand\" \"r\")))]\n   \"\"\n   \"add\\\\t%<w>0, %<w>3, %<w>1, <shift> %2\"\n-  [(set_attr \"type\" \"alu_shift_imm\")]\n+  [(set_attr \"autodetect_type\" \"alu_shift_<shift>_op2\")]\n )\n \n ;; zero_extend version of above\n@@ -2486,7 +2486,7 @@\n \t\t  (match_operand:SI 3 \"register_operand\" \"r\"))))]\n   \"\"\n   \"add\\\\t%w0, %w3, %w1, <shift> %2\"\n-  [(set_attr \"type\" \"alu_shift_imm\")]\n+  [(set_attr \"autodetect_type\" \"alu_shift_<shift>_op2\")]\n )\n \n (define_insn \"*add_<optab><ALLX:mode>_<GPI:mode>\"\n@@ -3121,7 +3121,7 @@\n \t\t    (match_operand:QI 2 \"aarch64_shift_imm_<mode>\" \"n\"))))]\n   \"\"\n   \"sub\\\\t%<w>0, %<w>3, %<w>1, <shift> %2\"\n-  [(set_attr \"type\" \"alu_shift_imm\")]\n+  [(set_attr \"autodetect_type\" \"alu_shift_<shift>_op2\")]\n )\n \n ;; zero_extend version of above\n@@ -3134,7 +3134,7 @@\n \t\t    (match_operand:QI 2 \"aarch64_shift_imm_si\" \"n\")))))]\n   \"\"\n   \"sub\\\\t%w0, %w3, %w1, <shift> %2\"\n-  [(set_attr \"type\" \"alu_shift_imm\")]\n+  [(set_attr \"autodetect_type\" \"alu_shift_<shift>_op2\")]\n )\n \n (define_insn \"*sub_<optab><ALLX:mode>_<GPI:mode>\"\n@@ -3535,7 +3535,7 @@\n \t\t  (match_operand:QI 2 \"aarch64_shift_imm_<mode>\" \"n\"))))]\n   \"\"\n   \"neg\\\\t%<w>0, %<w>1, <shift> %2\"\n-  [(set_attr \"type\" \"alu_shift_imm\")]\n+  [(set_attr \"autodetect_type\" \"alu_shift_<shift>_op2\")]\n )\n \n ;; zero_extend version of above\n@@ -3547,7 +3547,7 @@\n \t\t  (match_operand:QI 2 \"aarch64_shift_imm_si\" \"n\")))))]\n   \"\"\n   \"neg\\\\t%w0, %w1, <shift> %2\"\n-  [(set_attr \"type\" \"alu_shift_imm\")]\n+  [(set_attr \"autodetect_type\" \"alu_shift_<shift>_op2\")]\n )\n \n (define_insn \"mul<mode>3\""}, {"sha": "ecfe4d4791becff2a43d655e8c51aafce9038ade", "filename": "gcc/config/aarch64/falkor.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Faarch64%2Ffalkor.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Faarch64%2Ffalkor.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Ffalkor.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -302,7 +302,7 @@\n \n (define_insn_reservation \"falkor_alu_1_xyz\" 1\n   (and (eq_attr \"tune\" \"falkor\")\n-       (eq_attr \"type\" \"alus_sreg,alus_imm,alus_shift_imm,csel,adc_reg,alu_imm,alu_sreg,alu_shift_imm,alu_ext,alus_ext,logic_imm,logic_reg,logic_shift_imm,logics_imm,logics_reg,logics_shift_imm,mov_reg\"))\n+       (eq_attr \"type\" \"alus_sreg,alus_imm,alus_shift_imm,csel,adc_reg,alu_imm,alu_sreg,alu_shift_imm_lsl_1to4,alu_shift_imm_other,alu_ext,alus_ext,logic_imm,logic_reg,logic_shift_imm,logics_imm,logics_reg,logics_shift_imm,mov_reg\"))\n   \"falkor_xyz\")\n \n ;; SIMD Miscellaneous Instructions"}, {"sha": "4f074a25a4a9b523518686b9acefb19c4494add2", "filename": "gcc/config/aarch64/predicates.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Faarch64%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Faarch64%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fpredicates.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -18,6 +18,8 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n \n+(include \"../arm/common.md\")\n+\n (define_special_predicate \"cc_register\"\n   (and (match_code \"reg\")\n        (and (match_test \"REGNO (op) == CC_REGNUM\")"}, {"sha": "6e623c4a33dc492348c6c6bcbcb09ff24f1460e4", "filename": "gcc/config/aarch64/saphira.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Faarch64%2Fsaphira.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Faarch64%2Fsaphira.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fsaphira.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -224,7 +224,7 @@\n \n (define_insn_reservation \"saphira_alu_1_xyz\" 1\n   (and (eq_attr \"tune\" \"saphira\")\n-       (eq_attr \"type\" \"alus_sreg,alus_imm,alus_shift_imm,csel,adc_reg,alu_imm,alu_sreg,alu_shift_imm,alu_ext,alus_ext,logic_imm,logic_reg,logic_shift_imm,logics_imm,logics_reg,logics_shift_imm,mov_reg\"))\n+       (eq_attr \"type\" \"alus_sreg,alus_imm,alus_shift_imm,csel,adc_reg,alu_imm,alu_sreg,alu_shift_imm_lsl_1to4,alu_shift_imm_other,alu_ext,alus_ext,logic_imm,logic_reg,logic_shift_imm,logics_imm,logics_reg,logics_shift_imm,mov_reg\"))\n   \"saphira_xyzb\")\n \n ;; SIMD Miscellaneous Instructions"}, {"sha": "c8c9f5cbd7a945d0e7bfe025f9e50f52ccb8b573", "filename": "gcc/config/aarch64/thunderx.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Faarch64%2Fthunderx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Faarch64%2Fthunderx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fthunderx.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -51,7 +51,7 @@\n \n (define_insn_reservation \"thunderx_arith_shift\" 2\n   (and (eq_attr \"tune\" \"thunderx\")\n-       (eq_attr \"type\" \"alu_ext,alu_shift_imm,alu_shift_reg,alus_ext,logic_shift_imm,logic_shift_reg,logics_shift_imm,logics_shift_reg,alus_shift_imm\"))\n+       (eq_attr \"type\" \"alu_ext,alu_shift_imm_lsl_1to4,alu_shift_imm_other,alu_shift_reg,alus_ext,logic_shift_imm,logic_shift_reg,logics_shift_imm,logics_shift_reg,alus_shift_imm\"))\n   \"thunderx_pipe0 | thunderx_pipe1\")\n \n (define_insn_reservation \"thunderx_csel\" 2"}, {"sha": "d9da80dcee7451956c73c5cf2282f477cf08840b", "filename": "gcc/config/aarch64/thunderx2t99.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Faarch64%2Fthunderx2t99.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Faarch64%2Fthunderx2t99.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fthunderx2t99.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -109,7 +109,7 @@\n \n (define_insn_reservation \"thunderx2t99_alu_shift\" 2\n   (and (eq_attr \"tune\" \"thunderx2t99\")\n-       (eq_attr \"type\" \"alu_shift_imm,alu_ext,\\\n+       (eq_attr \"type\" \"alu_shift_imm_lsl_1to4,alu_shift_imm_other,alu_ext,\\\n \t\t\talus_shift_imm,alus_ext,\\\n \t\t\tlogic_shift_imm,logics_shift_imm\"))\n   \"thunderx2t99_i012,thunderx2t99_i012\")"}, {"sha": "ee1dd96272fe03bf3a9938dd518429ab4a1b7924", "filename": "gcc/config/aarch64/thunderx3t110.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Faarch64%2Fthunderx3t110.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Faarch64%2Fthunderx3t110.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fthunderx3t110.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -126,14 +126,14 @@\n ; is it actually 1,1/2,{i0,i1} vs 2,1/4,{i0,i1,i2,i3}\n (define_insn_reservation \"thunderx3t110_alu_shift\" 2\n   (and (eq_attr \"tune\" \"thunderx3t110\")\n-       (eq_attr \"type\" \"alu_shift_imm,alu_ext,\\\n+       (eq_attr \"type\" \"alu_shift_imm_lsl_1to4,alu_shift_imm_other,alu_ext,\\\n \t\t\talus_shift_imm,alus_ext,\\\n \t\t\tlogic_shift_imm,logics_shift_imm\"))\n   \"thunderx3t110_i0123\")\n \n (define_insn_reservation \"thunderx3t110_alu_shift1\" 1\n   (and (eq_attr \"tune\" \"thunderx3t110\")\n-       (eq_attr \"type\" \"alu_shift_imm,alu_ext,\\\n+       (eq_attr \"type\" \"alu_shift_imm_lsl_1to4,alu_shift_imm_other,alu_ext,\\\n \t\t\talus_shift_imm,alus_ext,\\\n \t\t\tlogic_shift_imm,logics_shift_imm\"))\n   \"thunderx3t110_i01\")"}, {"sha": "b35ff2d0779e19c35fc8106018ef8809b7ced487", "filename": "gcc/config/aarch64/tsv110.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Faarch64%2Ftsv110.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Faarch64%2Ftsv110.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Ftsv110.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -295,7 +295,7 @@\n (define_insn_reservation \"tsv110_alu_shift\" 2\n   (and (eq_attr \"tune\" \"tsv110\")\n        (eq_attr \"type\" \"extend,\\\n-\t\t\talu_shift_imm,alu_shift_reg,\\\n+\t\t\talu_shift_imm_lsl_1to4,alu_shift_imm_other,alu_shift_reg,\\\n \t\t\tcrc,logic_shift_imm,logic_shift_reg,\\\n \t\t\tmov_shift,mvn_shift,\\\n \t\t\tmov_shift_reg,mvn_shift_reg\"))"}, {"sha": "ee18eeea239ee4b963d57e81c05d69b18d9ab483", "filename": "gcc/config/arm/arm-fixed.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Farm-fixed.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Farm-fixed.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-fixed.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -482,7 +482,7 @@\n   \"ssat%?\\\\t%0, #16, %2%S1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"shift\" \"1\")\n-   (set_attr \"type\" \"alu_shift_imm\")])\n+   (set_attr \"autodetect_type\" \"alu_shift_operator1\")])\n \n (define_insn \"arm_usatsihi\"\n   [(set (match_operand:HI 0 \"s_register_operand\" \"=r\")"}, {"sha": "11bec2a11591201fae551e601765610114184736", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -11889,7 +11889,8 @@ xscale_sched_adjust_cost (rtx_insn *insn, int dep_type, rtx_insn *dep,\n \t instruction we depend on is another ALU instruction, then we may\n \t have to account for an additional stall.  */\n       if (shift_opnum != 0\n-\t  && (attr_type == TYPE_ALU_SHIFT_IMM\n+\t  && (attr_type == TYPE_ALU_SHIFT_IMM_LSL_1TO4\n+\t      || attr_type == TYPE_ALU_SHIFT_IMM_OTHER\n \t      || attr_type == TYPE_ALUS_SHIFT_IMM\n \t      || attr_type == TYPE_LOGIC_SHIFT_IMM\n \t      || attr_type == TYPE_LOGICS_SHIFT_IMM"}, {"sha": "13b09c3b7805eb50f55d063d4921030b81eada6b", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -336,7 +336,8 @@\n (define_attr \"core_cycles\" \"single,multi\"\n   (if_then_else (eq_attr \"type\"\n     \"adc_imm, adc_reg, adcs_imm, adcs_reg, adr, alu_ext, alu_imm, alu_sreg,\\\n-    alu_shift_imm, alu_shift_reg, alu_dsp_reg, alus_ext, alus_imm, alus_sreg,\\\n+    alu_shift_imm_lsl_1to4, alu_shift_imm_other, alu_shift_reg, alu_dsp_reg,\\\n+    alus_ext, alus_imm, alus_sreg,\\\n     alus_shift_imm, alus_shift_reg, bfm, csel, rev, logic_imm, logic_reg,\\\n     logic_shift_imm, logic_shift_reg, logics_imm, logics_reg,\\\n     logics_shift_imm, logics_shift_reg, extend, shift_imm, float, fcsel,\\\n@@ -1370,7 +1371,7 @@\n    (set_attr \"arch\" \"32,a\")\n    (set_attr \"shift\" \"3\")\n    (set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"alu_shift_imm,alu_shift_reg\")]\n+   (set_attr \"autodetect_type\" \"alu_shift_operator2\")] \n )\n \n (define_insn \"*addsi3_carryin_clobercc\"\n@@ -1679,7 +1680,7 @@\n   [(set_attr \"conds\" \"use\")\n    (set_attr \"arch\" \"*,a,t2\")\n    (set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"adc_reg,adc_imm,alu_shift_imm\")]\n+   (set_attr \"type\" \"adc_reg,adc_imm,alu_shift_imm_lsl_1to4\")]\n )\n \n ;; Special canonicalization of the above when operand1 == (const_int 1):\n@@ -1727,7 +1728,7 @@\n   \"rsc%?\\\\t%0, %4, %1%S3\"\n   [(set_attr \"conds\" \"use\")\n    (set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"alu_shift_imm,alu_shift_reg\")]\n+   (set_attr \"autodetect_type\" \"alu_shift_operator3\")]\n )\n \n (define_insn \"cmpsi3_carryin_<CC_EXTEND>out\"\n@@ -1811,7 +1812,7 @@\n    (set_attr \"arch\" \"32,a\")\n    (set_attr \"shift\" \"3\")\n    (set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"alu_shift_imm,alu_shift_reg\")]\n+   (set_attr \"autodetect_type\" \"alu_shift_operator2\")]\n )\n \n (define_insn \"*subsi3_carryin_shift_alt\"\n@@ -1828,7 +1829,7 @@\n    (set_attr \"arch\" \"32,a\")\n    (set_attr \"shift\" \"3\")\n    (set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"alu_shift_imm,alu_shift_reg\")]\n+   (set_attr \"autodetect_type\" \"alu_shift_operator2\")]\n )\n \n ;; No RSC in Thumb2\n@@ -1844,7 +1845,7 @@\n   \"rsc%?\\\\t%0, %1, %3%S2\"\n   [(set_attr \"conds\" \"use\")\n    (set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"alu_shift_imm,alu_shift_reg\")]\n+   (set_attr \"autodetect_type\" \"alu_shift_operator2\")]\n )\n \n (define_insn \"*rsbsi3_carryin_shift_alt\"\n@@ -1859,7 +1860,7 @@\n   \"rsc%?\\\\t%0, %1, %3%S2\"\n   [(set_attr \"conds\" \"use\")\n    (set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"alu_shift_imm,alu_shift_reg\")]\n+   (set_attr \"autodetect_type\" \"alu_shift_operator2\")]\n )\n \n ; transform ((x << y) - 1) to ~(~(x-1) << y)  Where X is a constant.\n@@ -4646,7 +4647,7 @@\n    (set_attr \"predicable_short_it\" \"yes,yes,no,no\")\n    (set_attr \"length\" \"4\")\n    (set_attr \"shift\" \"1\")\n-   (set_attr \"type\" \"alu_shift_reg,alu_shift_imm,alu_shift_imm,alu_shift_reg\")]\n+   (set_attr \"autodetect_type\" \"alu_shift_operator3\")]\n )\n \n (define_insn \"*shiftsi3_compare0\"\n@@ -9503,7 +9504,7 @@\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"shift\" \"2\")\n    (set_attr \"arch\" \"a,t2\")\n-   (set_attr \"type\" \"alu_shift_imm\")])\n+   (set_attr \"autodetect_type\" \"alu_shift_mul_op3\")])\n \n (define_insn \"*<arith_shift_insn>_shiftsi\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r,r,r\")\n@@ -9517,7 +9518,7 @@\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"shift\" \"3\")\n    (set_attr \"arch\" \"a,t2,a\")\n-   (set_attr \"type\" \"alu_shift_imm,alu_shift_imm,alu_shift_reg\")])\n+   (set_attr \"autodetect_type\" \"alu_shift_operator2\")])\n \n (define_split\n   [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n@@ -10856,7 +10857,9 @@\n    (set_attr \"length\" \"4,8\")\n    (set_attr_alternative \"type\"\n                          [(if_then_else (match_operand 3 \"const_int_operand\" \"\")\n-                                        (const_string \"alu_shift_imm\" )\n+                                (if_then_else (match_operand 5 \"alu_shift_operator_lsl_1_to_4\")\n+                                              (const_string \"alu_shift_imm_lsl_1to4\")\n+                                              (const_string \"alu_shift_imm_other\"))\n                                         (const_string \"alu_shift_reg\"))\n                           (const_string \"multiple\")])]\n )\n@@ -10921,7 +10924,9 @@\n    (set_attr \"length\" \"4,8\")\n    (set_attr_alternative \"type\"\n                          [(if_then_else (match_operand 3 \"const_int_operand\" \"\")\n-                                        (const_string \"alu_shift_imm\" )\n+                                (if_then_else (match_operand 5 \"alu_shift_operator_lsl_1_to_4\")\n+                                              (const_string \"alu_shift_imm_lsl_1to4\")\n+                                              (const_string \"alu_shift_imm_other\"))\n                                         (const_string \"alu_shift_reg\"))\n                           (const_string \"multiple\")])]\n )"}, {"sha": "16fbd88b2e8a965fa60407db551d7a232f83f9c4", "filename": "gcc/config/arm/arm1020e.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Farm1020e.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Farm1020e.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1020e.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -78,7 +78,7 @@\n ;; ALU operations with a shift-by-constant operand\n (define_insn_reservation \"1020alu_shift_op\" 1 \n  (and (eq_attr \"tune\" \"arm10e\")\n-      (eq_attr \"type\" \"alu_shift_imm,alus_shift_imm,\\\n+      (eq_attr \"type\" \"alu_shift_imm_lsl_1to4,alu_shift_imm_other,alus_shift_imm,\\\n                        logic_shift_imm,logics_shift_imm,\\\n                        extend,mov_shift,mvn_shift\"))\n  \"1020a_e,1020a_m,1020a_w\")"}, {"sha": "ae8c03fd193d0d953e220646cba6976e51544310", "filename": "gcc/config/arm/arm1026ejs.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Farm1026ejs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Farm1026ejs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1026ejs.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -78,7 +78,7 @@\n ;; ALU operations with a shift-by-constant operand\n (define_insn_reservation \"alu_shift_op\" 1 \n  (and (eq_attr \"tune\" \"arm1026ejs\")\n-      (eq_attr \"type\" \"alu_shift_imm,alus_shift_imm,\\\n+      (eq_attr \"type\" \"alu_shift_imm_lsl_1to4,alu_shift_imm_other,alus_shift_imm,\\\n                        logic_shift_imm,logics_shift_imm,\\\n                        extend,mov_shift,mvn_shift\"))\n  \"a_e,a_m,a_w\")"}, {"sha": "7968d9d5973cfed8e35b5ccecdbe02f5b838dfae", "filename": "gcc/config/arm/arm1136jfs.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Farm1136jfs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Farm1136jfs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1136jfs.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -87,7 +87,7 @@\n ;; ALU operations with a shift-by-constant operand\n (define_insn_reservation \"11_alu_shift_op\" 2\n  (and (eq_attr \"tune\" \"arm1136js,arm1136jfs\")\n-      (eq_attr \"type\" \"alu_shift_imm,alus_shift_imm,\\\n+      (eq_attr \"type\" \"alu_shift_imm_lsl_1to4,alu_shift_imm_other,alus_shift_imm,\\\n                        logic_shift_imm,logics_shift_imm,\\\n                        extend,mov_shift,mvn_shift\"))\n  \"e_1,e_2,e_3,e_wb\")"}, {"sha": "34da6be2e0301cac8c80e715fb8fc5639f2ab323", "filename": "gcc/config/arm/arm926ejs.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Farm926ejs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Farm926ejs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm926ejs.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -62,7 +62,7 @@\n                        alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n                        adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n                        adr,bfm,rev,\\\n-                       alu_shift_imm,alus_shift_imm,\\\n+                       alu_shift_imm_lsl_1to4,alu_shift_imm_other,alus_shift_imm,\\\n                        logic_shift_imm,logics_shift_imm,\\\n                        shift_imm,shift_reg,extend,\\\n                        mov_imm,mov_reg,mov_shift,\\"}, {"sha": "df601f46d250a4ef0ae0c4c0d9fa1c70e394324a", "filename": "gcc/config/arm/common.md", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcommon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcommon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcommon.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -0,0 +1,41 @@\n+;; Common predicate definitions for ARM, Thumb and AArch64\n+;; Copyright (C) 2020 Free Software Foundation, Inc.\n+;; Contributed by Fujitsu Ltd.\n+\n+;; This file is part of GCC.\n+\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 3, or (at your\n+;; option) any later version.\n+\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+;; Return true if constant is CONST_INT >= 1 and <= 4\n+(define_predicate \"const_1_to_4_operand\"\n+  (and (match_code \"const_int\")\n+       (match_test \"IN_RANGE (INTVAL (op), 1, 4)\")))\n+\n+;; Return true if constant is 2 or 4 or 8 or 16\n+(define_predicate \"const_2_4_8_16_operand\"\n+  (and (match_code \"const_int\")\n+       (match_test (\"   INTVAL (op) == 2\n+                     || INTVAL (op) == 4\n+                     || INTVAL (op) == 8\n+                     || INTVAL (op) == 16 \"))))\n+\n+;; Return true if shift type is lsl and amount is in[1,4].\n+(define_predicate \"alu_shift_operator_lsl_1_to_4\"\n+  (and (match_code \"ashift\")\n+       (match_test \"const_1_to_4_operand (XEXP (op, 1), mode)\")))\n+\n+;; Return true if the operand is register.\n+(define_predicate \"alu_shift_reg_p\"\n+  (match_test \"register_operand (XEXP (op, 1), mode)\"))"}, {"sha": "3d22eb3bb562fd8e00128697431305d64988ce17", "filename": "gcc/config/arm/cortex-a15.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-a15.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-a15.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a15.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -78,7 +78,7 @@\n (define_insn_reservation \"cortex_a15_alu_shift\" 3\n   (and (eq_attr \"tune\" \"cortexa15\")\n        (eq_attr \"type\" \"extend,\\\n-                        alu_shift_imm,alus_shift_imm,\\\n+                        alu_shift_imm_lsl_1to4,alu_shift_imm_other,alus_shift_imm,\\\n                         crc,logic_shift_imm,logics_shift_imm,\\\n                         mov_shift,mvn_shift\"))\n   \"ca15_issue1,(ca15_sx1,ca15_sx1+ca15_sx1_shf,ca15_sx1_alu)\\"}, {"sha": "dfd0343e8c73d93bb5f7de7c15a4a2bd4e3d33d6", "filename": "gcc/config/arm/cortex-a17.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-a17.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-a17.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a17.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -47,7 +47,7 @@\n \n (define_insn_reservation \"cortex_a17_alu_shiftimm\" 2\n   (and (eq_attr \"tune\" \"cortexa17\")\n-       (eq_attr \"type\" \"bfm,clz,rev,rbit, alu_shift_imm, alus_shift_imm,\n+       (eq_attr \"type\" \"bfm,clz,rev,rbit, alu_shift_imm_lsl_1to4,alu_shift_imm_other, alus_shift_imm,\n                         logic_shift_imm,alu_dsp_reg, logics_shift_imm,shift_imm,\\\n                         shift_reg, mov_shift,mvn_shift\"))\n   \"ca17_alu\")"}, {"sha": "e9ee730d6b2e260e4645f46c2b4caa3aa2638462", "filename": "gcc/config/arm/cortex-a5.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-a5.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-a5.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a5.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -70,7 +70,7 @@\n (define_insn_reservation \"cortex_a5_alu_shift\" 2\n   (and (eq_attr \"tune\" \"cortexa5\")\n        (eq_attr \"type\" \"extend,\\\n-                        alu_shift_imm,alus_shift_imm,\\\n+                        alu_shift_imm_lsl_1to4,alu_shift_imm_other,alus_shift_imm,\\\n                         logic_shift_imm,logics_shift_imm,\\\n                         alu_shift_reg,alus_shift_reg,\\\n                         logic_shift_reg,logics_shift_reg,\\"}, {"sha": "a7c8666fbd27c5332135fc50034138d9801f0091", "filename": "gcc/config/arm/cortex-a53.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-a53.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-a53.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a53.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -91,7 +91,7 @@\n \n (define_insn_reservation \"cortex_a53_alu_shift\" 3\n   (and (eq_attr \"tune\" \"cortexa53\")\n-       (eq_attr \"type\" \"alu_shift_imm,alus_shift_imm,\n+       (eq_attr \"type\" \"alu_shift_imm_lsl_1to4,alu_shift_imm_other,alus_shift_imm,\n \t\t\tcrc,logic_shift_imm,logics_shift_imm,\n \t\t\talu_ext,alus_ext,bfm,bfx,extend,mvn_shift\"))\n   \"cortex_a53_slot_any\")"}, {"sha": "ac5876f228aee761bce241ecc0b9357b050ed290", "filename": "gcc/config/arm/cortex-a57.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-a57.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-a57.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a57.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -313,7 +313,7 @@\n (define_insn_reservation \"cortex_a57_alu_shift\" 3\n   (and (eq_attr \"tune\" \"cortexa57\")\n        (eq_attr \"type\" \"bfm,\\\n-\t\t\talu_shift_imm,alus_shift_imm,\\\n+\t\t\talu_shift_imm_lsl_1to4,alu_shift_imm_other,alus_shift_imm,\\\n \t\t\tcrc,logic_shift_imm,logics_shift_imm,\\\n \t\t\tmov_shift,mvn_shift\"))\n   \"ca57_mx\")"}, {"sha": "254b2cc6eec7be1b1c74f8b7602039b49dff2faf", "filename": "gcc/config/arm/cortex-a7.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-a7.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-a7.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a7.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -143,7 +143,7 @@\n \n (define_insn_reservation \"cortex_a7_alu_shift\" 2\n   (and (eq_attr \"tune\" \"cortexa7\")\n-       (eq_attr \"type\" \"alu_shift_imm,alus_shift_imm,\\\n+       (eq_attr \"type\" \"alu_shift_imm_lsl_1to4,alu_shift_imm_other,alus_shift_imm,\\\n                         logic_shift_imm,logics_shift_imm,\\\n                         alu_shift_reg,alus_shift_reg,\\\n                         logic_shift_reg,logics_shift_reg,\\"}, {"sha": "23c617d8aadbe0832c1f9ebbd2a11133aa37f8a1", "filename": "gcc/config/arm/cortex-a8.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-a8.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-a8.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a8.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -95,7 +95,7 @@\n \n (define_insn_reservation \"cortex_a8_alu_shift\" 2\n   (and (eq_attr \"tune\" \"cortexa8\")\n-       (eq_attr \"type\" \"alu_shift_imm,alus_shift_imm,\\\n+       (eq_attr \"type\" \"alu_shift_imm_lsl_1to4,alu_shift_imm_other,alus_shift_imm,\\\n                         logic_shift_imm,logics_shift_imm,\\\n                         extend\"))\n   \"cortex_a8_default\")"}, {"sha": "6ddc1203e18fa5bd7b7f7186a321ea160191db81", "filename": "gcc/config/arm/cortex-a9.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-a9.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-a9.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a9.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -93,7 +93,7 @@ cortex_a9_p1_e2 + cortex_a9_p0_e1 + cortex_a9_p1_e1\")\n ;; An instruction using the shifter will go down E1.\n (define_insn_reservation \"cortex_a9_dp_shift\" 3\n    (and (eq_attr \"tune\" \"cortexa9\")\n-        (eq_attr \"type\" \"alu_shift_imm,alus_shift_imm,\\\n+        (eq_attr \"type\" \"alu_shift_imm_lsl_1to4,alu_shift_imm_other,alus_shift_imm,\\\n                          logic_shift_imm,logics_shift_imm,\\\n                          alu_shift_reg,alus_shift_reg,\\\n                          logic_shift_reg,logics_shift_reg,\\"}, {"sha": "4367b76231c786e2bafffd0cc81979a32c9ee2bf", "filename": "gcc/config/arm/cortex-m4.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-m4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-m4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-m4.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -36,7 +36,7 @@\n                              adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n                              adr,bfm,clz,rbit,rev,alu_dsp_reg,\\\n                              shift_imm,shift_reg,extend,\\\n-                             alu_shift_imm,alus_shift_imm,\\\n+                             alu_shift_imm_lsl_1to4,alu_shift_imm_other,alus_shift_imm,\\\n                              logic_shift_imm,logics_shift_imm,\\\n                              alu_shift_reg,alus_shift_reg,\\\n                              logic_shift_reg,logics_shift_reg,\\"}, {"sha": "df03e06cae26bcde8feda392c1f1b8bb38a0577e", "filename": "gcc/config/arm/cortex-m7.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-m7.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-m7.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-m7.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -54,7 +54,7 @@\n ;; Simple alu with inline shift operation.\n (define_insn_reservation \"cortex_m7_alu_shift\" 2\n    (and (eq_attr \"tune\" \"cortexm7\")\n-\t(eq_attr \"type\" \"alu_shift_imm,alus_shift_imm\"))\n+\t(eq_attr \"type\" \"alu_shift_imm_lsl_1to4,alu_shift_imm_other,alus_shift_imm\"))\n    \"cm7_i0|cm7_i1,(cm7_a0|cm7_a1)+cm7_shf+cm7_branch\")\n \n ;; Only one ALU can be used for DSP instructions."}, {"sha": "9be4b4c7d47da6fb9332a00520e85160f438eff1", "filename": "gcc/config/arm/cortex-r4.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-r4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fcortex-r4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-r4.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -92,7 +92,7 @@\n \n (define_insn_reservation \"cortex_r4_alu_shift\" 2\n   (and (eq_attr \"tune_cortexr4\" \"yes\")\n-       (eq_attr \"type\" \"alu_shift_imm,alus_shift_imm,\\\n+       (eq_attr \"type\" \"alu_shift_imm_lsl_1to4,alu_shift_imm_other,alus_shift_imm,\\\n                         logic_shift_imm,logics_shift_imm,\\\n                         extend,mov_shift,mvn_shift\"))\n   \"cortex_r4_alu\")"}, {"sha": "c31c8504fbd7aaf160e8ffb2f07400b06735f3c2", "filename": "gcc/config/arm/exynos-m1.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fexynos-m1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fexynos-m1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fexynos-m1.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -386,7 +386,7 @@\n (define_insn_reservation \"exynos_m1_alu_shift\" 2\n   (and (eq_attr \"tune\" \"exynosm1\")\n        (eq_attr \"type\" \"alu_ext, alus_ext,\\\n-\t\t\talu_shift_imm, alus_shift_imm,\\\n+\t\t\talu_shift_imm_lsl_1to4,alu_shift_imm_other, alus_shift_imm,\\\n \t\t\tlogic_shift_imm, logics_shift_imm,\\\n \t\t\tmov_shift, mvn_shift\"))\n   \"(em1_alu)\")"}, {"sha": "c8a2311ebf9751bbdc53d36858f9cc476e45ec98", "filename": "gcc/config/arm/fa526.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Ffa526.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Ffa526.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa526.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -74,7 +74,7 @@\n (define_insn_reservation \"526_alu_shift_op\" 2\n  (and (eq_attr \"tune\" \"fa526\")\n       (eq_attr \"type\" \"extend,\\\n-                       alu_shift_imm,alus_shift_imm,\\\n+                       alu_shift_imm_lsl_1to4,alu_shift_imm_other,alus_shift_imm,\\\n                        logic_shift_imm,logics_shift_imm,\\\n                        alu_shift_reg,alus_shift_reg,\\\n                        logic_shift_reg,logics_shift_reg,\\"}, {"sha": "11e1484d8308471df271ac3594a782ab029424e6", "filename": "gcc/config/arm/fa606te.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Ffa606te.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Ffa606te.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa606te.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -67,7 +67,7 @@\n                        adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n                        adr,bfm,rev,\\\n                        shift_imm,shift_reg,extend,\\\n-                       alu_shift_imm,alus_shift_imm,\\\n+                       alu_shift_imm_lsl_1to4,alu_shift_imm_other,alus_shift_imm,\\\n                        logic_shift_imm,logics_shift_imm,\\\n                        alu_shift_reg,alus_shift_reg,\\\n                        logic_shift_reg,logics_shift_reg,\\"}, {"sha": "00cf7f6d83db62d3a05cd4323b40a8b2a6ac97d5", "filename": "gcc/config/arm/fa626te.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Ffa626te.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Ffa626te.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa626te.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -80,7 +80,7 @@\n (define_insn_reservation \"626te_alu_shift_op\" 2\n  (and (eq_attr \"tune\" \"fa626,fa626te\")\n       (eq_attr \"type\" \"extend,\\\n-                       alu_shift_imm,alus_shift_imm,\\\n+                       alu_shift_imm_lsl_1to4,alu_shift_imm_other,alus_shift_imm,\\\n                        logic_shift_imm,logics_shift_imm,\\\n                        alu_shift_reg,alus_shift_reg,\\\n                        logic_shift_reg,logics_shift_reg,\\"}, {"sha": "2fc54a8f7c6cc0dc3eb82ad5a105e6ea064473ff", "filename": "gcc/config/arm/fa726te.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Ffa726te.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Ffa726te.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa726te.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -100,7 +100,7 @@\n ;; it takes 3 cycles.\n (define_insn_reservation \"726te_alu_shift_op\" 3\n  (and (eq_attr \"tune\" \"fa726te\")\n-      (eq_attr \"type\" \"extend,alu_shift_imm,alus_shift_imm,\\\n+      (eq_attr \"type\" \"extend,alu_shift_imm_lsl_1to4,alu_shift_imm_other,alus_shift_imm,\\\n                        logic_shift_imm,logics_shift_imm\"))\n   \"fa726te_issue+(fa726te_alu0_pipe|fa726te_alu1_pipe)\")\n "}, {"sha": "b0f96ac7478ee8d461b9abe9cec370cd7bb15c50", "filename": "gcc/config/arm/fmp626.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Ffmp626.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Ffmp626.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffmp626.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -73,7 +73,7 @@\n \n (define_insn_reservation \"mp626_alu_shift_op\" 2\n  (and (eq_attr \"tune\" \"fmp626\")\n-      (eq_attr \"type\" \"alu_shift_imm,logic_shift_imm,alus_shift_imm,logics_shift_imm,\\\n+      (eq_attr \"type\" \"alu_shift_imm_lsl_1to4,alu_shift_imm_other,logic_shift_imm,alus_shift_imm,logics_shift_imm,\\\n                        alu_shift_reg,logic_shift_reg,alus_shift_reg,logics_shift_reg,\\\n                        extend,\\\n                        mov_shift,mov_shift_reg,\\"}, {"sha": "0255810f633ddebbfc817ac8112cbb54bc790464", "filename": "gcc/config/arm/marvell-pj4.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fmarvell-pj4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fmarvell-pj4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmarvell-pj4.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -73,7 +73,7 @@\n \n (define_insn_reservation \"pj4_shift\" 1\n   (and (eq_attr \"tune\" \"marvell_pj4\")\n-       (eq_attr \"type\" \"alu_shift_imm,logic_shift_imm,\\\n+       (eq_attr \"type\" \"alu_shift_imm_lsl_1to4,alu_shift_imm_other,logic_shift_imm,\\\n                         alus_shift_imm,logics_shift_imm,\\\n                         alu_shift_reg,logic_shift_reg,\\\n                         alus_shift_reg,logics_shift_reg,\\\n@@ -84,7 +84,7 @@\n \n (define_insn_reservation \"pj4_shift_conds\" 4\n   (and (eq_attr \"tune\" \"marvell_pj4\")\n-       (eq_attr \"type\" \"alu_shift_imm,logic_shift_imm,\\\n+       (eq_attr \"type\" \"alu_shift_imm_lsl_1to4,alu_shift_imm_other,logic_shift_imm,\\\n                         alus_shift_imm,logics_shift_imm,\\\n                         alu_shift_reg,logic_shift_reg,\\\n                         alus_shift_reg,logics_shift_reg,\\\n@@ -96,7 +96,7 @@\n (define_insn_reservation \"pj4_alu_shift\" 1\n   (and (eq_attr \"tune\" \"marvell_pj4\")\n        (not (eq_attr \"conds\" \"set\"))\n-       (eq_attr \"type\" \"alu_shift_imm,logic_shift_imm,\\\n+       (eq_attr \"type\" \"alu_shift_imm_lsl_1to4,alu_shift_imm_other,logic_shift_imm,\\\n                         alus_shift_imm,logics_shift_imm,\\\n                         alu_shift_reg,logic_shift_reg,\\\n                         alus_shift_reg,logics_shift_reg,\\\n@@ -107,7 +107,7 @@\n (define_insn_reservation \"pj4_alu_shift_conds\" 4\n   (and (eq_attr \"tune\" \"marvell_pj4\")\n        (eq_attr \"conds\" \"set\")\n-       (eq_attr \"type\" \"alu_shift_imm,logic_shift_imm,alus_shift_imm,logics_shift_imm,\\\n+       (eq_attr \"type\" \"alu_shift_imm_lsl_1to4,alu_shift_imm_other,logic_shift_imm,alus_shift_imm,logics_shift_imm,\\\n                         alu_shift_reg,logic_shift_reg,alus_shift_reg,logics_shift_reg,\\\n                         extend,\\\n                         mov_shift,mvn_shift,mov_shift_reg,mvn_shift_reg\"))"}, {"sha": "a24cdb764858cf47c6c0abe91bbc1d9af1df6664", "filename": "gcc/config/arm/predicates.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpredicates.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -18,6 +18,8 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n \n+(include \"common.md\")\n+\n (define_predicate \"s_register_operand\"\n   (match_code \"reg,subreg\")\n {"}, {"sha": "d502db4eba34be8ddde28af570f960f2e119a888", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -1261,7 +1261,9 @@\n    (set_attr \"shift\" \"1\")\n    (set_attr \"length\" \"2\")\n    (set (attr \"type\") (if_then_else (match_operand 2 \"const_int_operand\" \"\")\n-\t\t      (const_string \"alu_shift_imm\")\n+                        (if_then_else (match_operand 3 \"alu_shift_operator_lsl_1_to_4\")\n+                          (const_string \"alu_shift_imm_lsl_1to4\")\n+                          (const_string \"alu_shift_imm_other\"))\n \t\t      (const_string \"alu_shift_reg\")))]\n )\n \n@@ -1530,7 +1532,7 @@\n   \"orn%?\\\\t%0, %1, %2%S4\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"shift\" \"2\")\n-   (set_attr \"type\" \"alu_shift_imm\")]\n+   (set_attr \"autodetect_type\" \"alu_shift_operator4\")]\n )\n \n (define_peephole2"}, {"sha": "3cf2cadc10f24065435110a86d7a9b248b4cf347", "filename": "gcc/config/arm/types.md", "status": "modified", "additions": 61, "deletions": 6, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Ftypes.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Ftypes.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ftypes.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -19,6 +19,19 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n \n+; The insn need to autodetect for specific type attribute\n+(define_attr \"autodetect_type\"\n+    \"none,\n+    alu_shift_lsl_op2,\n+    alu_shift_lsr_op2,\n+    alu_shift_asr_op2,\n+    alu_shift_mul_op3,\n+    alu_shift_operator1,\n+    alu_shift_operator2,\n+    alu_shift_operator3,\n+    alu_shift_operator4\"\n+    (const_string \"none\"))\n+\n ; TYPE attribute is used to classify instructions for use in scheduling.\n ;\n ; Instruction classification:\n@@ -39,16 +52,21 @@\n ;                    or an immediate operand.  This excludes\n ;                    MOV and MVN but includes MOVT.  This also excludes\n ;                    DSP-kind instructions.  This is also the default.\n-; alu_shift_imm      any arithmetic instruction that has a source operand\n-;                    shifted by a constant.  This excludes simple shifts.\n-; alu_shift_reg      as alu_shift_imm, with the shift amount specified in a\n+; alu_shift_imm_lsl_1to4\n+;                    any arithmetic instruction that has a source operand\n+;                    shifted left by a constant in range 1 to 4.  This\n+;                    excludes simple shifts.\n+; alu_shift_imm_other\n+;                    as alu_shift_imm_lsl_1to4, with the shift type is LSR or\n+;                    ASR, or the shift amount is greater than or equal 5.\n+; alu_shift_reg      as alu_shift_imm_*, with the shift amount specified in a\n ;                    register.\n ; alu_dsp_reg        any DSP-kind instruction like QSUB8.\n ; alus_ext           From ARMv8-A: as alu_ext, setting condition flags.\n ;                    AArch64 Only.\n ; alus_imm           as alu_imm, setting condition flags.\n ; alus_sreg          as alu_sreg, setting condition flags.\n-; alus_shift_imm     as alu_shift_imm, setting condition flags.\n+; alus_shift_imm     as alu_shift_imm_*, setting condition flags.\n ; alus_shift_reg     as alu_shift_reg, setting condition flags.\n ; bfm                bitfield move operation.\n ; bfx                bitfield extract operation.\n@@ -565,7 +583,8 @@\n   alu_ext,\\\n   alu_imm,\\\n   alu_sreg,\\\n-  alu_shift_imm,\\\n+  alu_shift_imm_lsl_1to4,\\\n+  alu_shift_imm_other,\\\n   alu_shift_reg,\\\n   alu_dsp_reg,\\\n   alus_ext,\\\n@@ -1106,7 +1125,43 @@\n   mve_move,\\\n   mve_store,\\\n   mve_load\"\n-   (const_string \"untyped\"))\n+   (cond [(eq_attr \"autodetect_type\" \"alu_shift_lsr_op2,alu_shift_asr_op2\")\n+            (const_string \"alu_shift_imm_other\")\n+          (eq_attr \"autodetect_type\" \"alu_shift_lsl_op2\")\n+            (if_then_else (match_operand 2 \"const_1_to_4_operand\")\n+                          (const_string \"alu_shift_imm_lsl_1to4\")\n+                          (const_string \"alu_shift_imm_other\"))\n+          (eq_attr \"autodetect_type\" \"alu_shift_mul_op3\")\n+            (if_then_else (match_operand 3 \"const_2_4_8_16_operand\")\n+                          (const_string \"alu_shift_imm_lsl_1to4\")\n+                          (const_string \"alu_shift_imm_other\"))\n+          (eq_attr \"autodetect_type\" \"alu_shift_operator1\")\n+            (if_then_else (match_operand 1 \"alu_shift_reg_p\")\n+               (const_string \"alu_shift_reg\")\n+               (if_then_else (match_operand 1 \"alu_shift_operator_lsl_1_to_4\")\n+                             (const_string \"alu_shift_imm_lsl_1to4\")\n+                             (const_string \"alu_shift_imm_other\")))\n+          (eq_attr \"autodetect_type\" \"alu_shift_operator2\")\n+            (if_then_else (match_operand 2 \"alu_shift_reg_p\")\n+               (const_string \"alu_shift_reg\")\n+               (if_then_else (match_operand 2 \"alu_shift_operator_lsl_1_to_4\")\n+                             (const_string \"alu_shift_imm_lsl_1to4\")\n+                             (const_string \"alu_shift_imm_other\")))\n+          (eq_attr \"autodetect_type\" \"alu_shift_operator3\")\n+            (if_then_else (match_operand 3 \"alu_shift_reg_p\")\n+               (const_string \"alu_shift_reg\")\n+               (if_then_else (match_operand 3 \"alu_shift_operator_lsl_1_to_4\")\n+                             (const_string \"alu_shift_imm_lsl_1to4\")\n+                             (const_string \"alu_shift_imm_other\")))\n+          (eq_attr \"autodetect_type\" \"alu_shift_operator4\")\n+            (if_then_else (match_operand 4 \"alu_shift_reg_p\")\n+               (const_string \"alu_shift_reg\")\n+               (if_then_else (match_operand 4 \"alu_shift_operator_lsl_1_to_4\")\n+                             (const_string \"alu_shift_imm_lsl_1to4\")\n+                             (const_string \"alu_shift_imm_other\")))\n+         ]\n+         (const_string \"untyped\")))\n+\n \n ; Is this an (integer side) multiply with a 32-bit (or smaller) result?\n (define_attr \"mul32\" \"no,yes\""}, {"sha": "5860adc0448df0f6a32e1195cee6b964fd9eeda7", "filename": "gcc/config/arm/xgene1.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fxgene1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae27ce51e4860388d2b4129e2a80cc7f292368b5/gcc%2Fconfig%2Farm%2Fxgene1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fxgene1.md?ref=ae27ce51e4860388d2b4129e2a80cc7f292368b5", "patch": "@@ -132,7 +132,7 @@\n \n (define_insn_reservation \"xgene1_alu\" 1\n   (and (eq_attr \"tune\" \"xgene1\")\n-       (eq_attr \"type\" \"alu_imm,alu_sreg,alu_shift_imm,\\\n+       (eq_attr \"type\" \"alu_imm,alu_sreg,alu_shift_imm_lsl_1to4,alu_shift_imm_other,\\\n                         alu_ext,adc_reg,logic_imm,\\\n                         logic_reg,logic_shift_imm,clz,\\\n                         rbit,adr,mov_reg,shift_imm,\\"}]}