{"sha": "92e8e53a31939ed5c4697c5e0a0b16af4a357bc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJlOGU1M2EzMTkzOWVkNWM0Njk3YzVlMGEwYjE2YWY0YTM1N2JjMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-02-10T15:02:56Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-02-10T15:02:56Z"}, "message": "re PR debug/43010 (ICE with -femit-struct-debug-baseonly)\n\n\tPR debug/43010\n\t* dwarf2out.c (retry_incomplete_types): Don't call gen_type_die\n\tif no debug info should be emitted for it.\n\n\t* g++.dg/debug/pr43010.C: New test.\n\nFrom-SVN: r156657", "tree": {"sha": "83110c2ee4348a278895f6c6eec8dae6fb85df5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83110c2ee4348a278895f6c6eec8dae6fb85df5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92e8e53a31939ed5c4697c5e0a0b16af4a357bc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92e8e53a31939ed5c4697c5e0a0b16af4a357bc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92e8e53a31939ed5c4697c5e0a0b16af4a357bc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92e8e53a31939ed5c4697c5e0a0b16af4a357bc3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd55b817bf00684b9e40208055a036fbbe041912", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd55b817bf00684b9e40208055a036fbbe041912", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd55b817bf00684b9e40208055a036fbbe041912"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "6ef99e6e170578f7cc620bf2e4795ceb664a5c50", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e8e53a31939ed5c4697c5e0a0b16af4a357bc3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e8e53a31939ed5c4697c5e0a0b16af4a357bc3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=92e8e53a31939ed5c4697c5e0a0b16af4a357bc3", "patch": "@@ -1,3 +1,9 @@\n+2010-02-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/43010\n+\t* dwarf2out.c (retry_incomplete_types): Don't call gen_type_die\n+\tif no debug info should be emitted for it.\n+\n 2010-02-10  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/sh.c (find_barrier): Skip call insn with a REG_EH_REGION"}, {"sha": "96b0c9fb56b5e1a957215d80ea41771ea775f517", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e8e53a31939ed5c4697c5e0a0b16af4a357bc3/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e8e53a31939ed5c4697c5e0a0b16af4a357bc3/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=92e8e53a31939ed5c4697c5e0a0b16af4a357bc3", "patch": "@@ -17162,7 +17162,9 @@ retry_incomplete_types (void)\n   int i;\n \n   for (i = VEC_length (tree, incomplete_types) - 1; i >= 0; i--)\n-    gen_type_die (VEC_index (tree, incomplete_types, i), comp_unit_die);\n+    if (should_emit_struct_debug (VEC_index (tree, incomplete_types, i),\n+\t\t\t\t  DINFO_USAGE_DIR_USE))\n+      gen_type_die (VEC_index (tree, incomplete_types, i), comp_unit_die);\n }\n \n /* Determine what tag to use for a record type.  */"}, {"sha": "08299247a71bf772b3502fcae55c5cddc11f0568", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e8e53a31939ed5c4697c5e0a0b16af4a357bc3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e8e53a31939ed5c4697c5e0a0b16af4a357bc3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=92e8e53a31939ed5c4697c5e0a0b16af4a357bc3", "patch": "@@ -1,3 +1,8 @@\n+2010-02-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/43010\n+\t* g++.dg/debug/pr43010.C: New test.\n+\n 2010-02-10  Richard Guenther  <rguenther@suse.de>\n \n \tPR c/43007"}, {"sha": "24b5b2713746e74878ee7cc44653676e4ce6fd6a", "filename": "gcc/testsuite/g++.dg/debug/pr43010.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e8e53a31939ed5c4697c5e0a0b16af4a357bc3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr43010.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e8e53a31939ed5c4697c5e0a0b16af4a357bc3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr43010.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr43010.C?ref=92e8e53a31939ed5c4697c5e0a0b16af4a357bc3", "patch": "@@ -0,0 +1,8 @@\n+// PR debug/43010\n+// { dg-do compile }\n+// { dg-options \"-g -femit-struct-debug-baseonly\" }\n+# 1 \"foo.C\"\n+# 1 \"bar.h\" 1\n+typedef struct { int i; } S __attribute__((aligned));\n+typedef struct { struct { int i; } j; } T __attribute__((aligned));\n+# 1 \"foo.C\" 2"}]}