{"sha": "6401bf9cad029c264ff65db946c8e31ce998db13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQwMWJmOWNhZDAyOWMyNjRmZjY1ZGI5NDZjOGUzMWNlOTk4ZGIxMw==", "commit": {"author": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2008-05-14T21:36:26Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2008-05-14T21:36:26Z"}, "message": "re PR fortran/36186 (Wrong handling of BOZ in CMPLX)\n\n\tPR fortran/36186\n\n\t* simplify.c (only_convert_cmplx_boz): New function.\n\t(gfc_simplify_cmplx, gfc_simplify_complex, gfc_simplify_dcmplx):\n\tCall only_convert_cmplx_boz.\n\n\t* gfortran.dg/boz_11.f90: New test.\n\t* gfortran.dg/boz_12.f90: New test.\n\nFrom-SVN: r135308", "tree": {"sha": "df80bd35e852b8a95650c6aa6011baacf3b5d0b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df80bd35e852b8a95650c6aa6011baacf3b5d0b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6401bf9cad029c264ff65db946c8e31ce998db13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6401bf9cad029c264ff65db946c8e31ce998db13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6401bf9cad029c264ff65db946c8e31ce998db13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6401bf9cad029c264ff65db946c8e31ce998db13/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16f2a7a4a53554e454d5373e6ef689da8fc84ef4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16f2a7a4a53554e454d5373e6ef689da8fc84ef4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16f2a7a4a53554e454d5373e6ef689da8fc84ef4"}], "stats": {"total": 112, "additions": 98, "deletions": 14}, "files": [{"sha": "c38717cda56cf3ebf40980af8b50cb3408d9e7e6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6401bf9cad029c264ff65db946c8e31ce998db13/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6401bf9cad029c264ff65db946c8e31ce998db13/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6401bf9cad029c264ff65db946c8e31ce998db13", "patch": "@@ -1,8 +1,15 @@\n+2008-05-14  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/36186\n+\t* simplify.c (only_convert_cmplx_boz): New function.\n+\t(gfc_simplify_cmplx, gfc_simplify_complex, gfc_simplify_dcmplx):\n+\tCall only_convert_cmplx_boz.\n+\n 2008-05-14  Paul Thomas  <pault@gcc.gnu.org>\n \n-       PR fortran/36233\n-       * interface.c (compare_actual_formal): Do not check sizes if the\n-       actual is BT_PROCEDURE.\n+\tPR fortran/36233\n+\t* interface.c (compare_actual_formal): Do not check sizes if the\n+\tactual is BT_PROCEDURE.\n \n 2008-05-14  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n "}, {"sha": "066bf283767e2d6fa881ef18f4e92031cc379c70", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 39, "deletions": 9, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6401bf9cad029c264ff65db946c8e31ce998db13/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6401bf9cad029c264ff65db946c8e31ce998db13/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=6401bf9cad029c264ff65db946c8e31ce998db13", "patch": "@@ -928,19 +928,49 @@ simplify_cmplx (const char *name, gfc_expr *x, gfc_expr *y, int kind)\n }\n \n \n+/* Function called when we won't simplify an expression like CMPLX (or\n+   COMPLEX or DCMPLX) but still want to convert BOZ arguments.  */\n+\n+static gfc_expr *\n+only_convert_cmplx_boz (gfc_expr *x, gfc_expr *y, int kind)\n+{\n+  if (x->is_boz)\n+    {\n+      gfc_typespec ts;\n+      gfc_clear_ts (&ts);\n+      ts.type = BT_REAL;\n+      ts.kind = kind;\n+      if (!gfc_convert_boz (x, &ts))\n+\treturn &gfc_bad_expr;\n+    }\n+\n+  if (y && y->is_boz)\n+    {\n+      gfc_typespec ts;\n+      gfc_clear_ts (&ts);\n+      ts.type = BT_REAL;\n+      ts.kind = kind;\n+      if (!gfc_convert_boz (y, &ts))\n+\treturn &gfc_bad_expr;\n+    }\n+\n+  return NULL;\n+}\n+\n+\n gfc_expr *\n gfc_simplify_cmplx (gfc_expr *x, gfc_expr *y, gfc_expr *k)\n {\n   int kind;\n \n-  if (x->expr_type != EXPR_CONSTANT\n-      || (y != NULL && y->expr_type != EXPR_CONSTANT))\n-    return NULL;\n-\n   kind = get_kind (BT_REAL, k, \"CMPLX\", gfc_default_real_kind);\n   if (kind == -1)\n     return &gfc_bad_expr;\n \n+  if (x->expr_type != EXPR_CONSTANT\n+      || (y != NULL && y->expr_type != EXPR_CONSTANT))\n+    return only_convert_cmplx_boz (x, y, kind);\n+\n   return simplify_cmplx (\"CMPLX\", x, y, kind);\n }\n \n@@ -950,10 +980,6 @@ gfc_simplify_complex (gfc_expr *x, gfc_expr *y)\n {\n   int kind;\n \n-  if (x->expr_type != EXPR_CONSTANT\n-      || (y != NULL && y->expr_type != EXPR_CONSTANT))\n-    return NULL;\n-\n   if (x->ts.type == BT_INTEGER)\n     {\n       if (y->ts.type == BT_INTEGER)\n@@ -969,6 +995,10 @@ gfc_simplify_complex (gfc_expr *x, gfc_expr *y)\n \tkind = x->ts.kind;\n     }\n \n+  if (x->expr_type != EXPR_CONSTANT\n+      || (y != NULL && y->expr_type != EXPR_CONSTANT))\n+    return only_convert_cmplx_boz (x, y, kind);\n+\n   return simplify_cmplx (\"COMPLEX\", x, y, kind);\n }\n \n@@ -1052,7 +1082,7 @@ gfc_simplify_dcmplx (gfc_expr *x, gfc_expr *y)\n \n   if (x->expr_type != EXPR_CONSTANT\n       || (y != NULL && y->expr_type != EXPR_CONSTANT))\n-    return NULL;\n+    return only_convert_cmplx_boz (x, y, gfc_default_double_kind);\n \n   return simplify_cmplx (\"DCMPLX\", x, y, gfc_default_double_kind);\n }"}, {"sha": "9abe367154db5f48706df8d75225480e41ef036d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6401bf9cad029c264ff65db946c8e31ce998db13/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6401bf9cad029c264ff65db946c8e31ce998db13/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6401bf9cad029c264ff65db946c8e31ce998db13", "patch": "@@ -1,7 +1,13 @@\n+2008-05-14  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/36186\n+\t* gfortran.dg/boz_11.f90: New test.\n+\t* gfortran.dg/boz_12.f90: New test.\n+\n 2008-05-14  Paul Thomas  <pault@gcc.gnu.org>\n \n-       PR fortran/36233\n-       * gfortran.dg/actual_procedure_1.f90: New test\n+\tPR fortran/36233\n+\t* gfortran.dg/actual_procedure_1.f90: New test\n \n 2008-05-14  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n "}, {"sha": "2bbf0221995ddd3853a52f81839ef0eb68a64b94", "filename": "gcc/testsuite/gfortran.dg/boz_11.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6401bf9cad029c264ff65db946c8e31ce998db13/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6401bf9cad029c264ff65db946c8e31ce998db13/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_11.f90?ref=6401bf9cad029c264ff65db946c8e31ce998db13", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do run }\n+!\n+program test0\n+   implicit none\n+   real, parameter :: &\n+     r = transfer(int(b'01000000001010010101001111111101',kind=4),0.)\n+   complex, parameter :: z = r * (0, 1.)\n+   real(kind=8), parameter :: rd = dble(b'00000000000000000000000000000000&\n+                                         &01000000001010010101001111111101')\n+   complex(kind=8), parameter :: zd = (0._8, 1._8) * rd\n+   integer :: x = 0\n+\n+   if (cmplx(b'01000000001010010101001111111101',x,4) /= r) call abort\n+   if (cmplx(x,b'01000000001010010101001111111101',4) /= z) call abort\n+   if (complex(b'01000000001010010101001111111101',0) /= r) call abort\n+   if (complex(0,b'01000000001010010101001111111101') /= z) call abort\n+\n+   !if (cmplx(b'00000000000000000000000000000000&\n+   !           &01000000001010010101001111111101',x,8) /= rd) call abort\n+   !if (cmplx(x,b'00000000000000000000000000000000&\n+   !             &01000000001010010101001111111101',8) /= zd) call abort\n+   !if (dcmplx(b'00000000000000000000000000000000&\n+   !            &01000000001010010101001111111101',x) /= rd) call abort\n+   !if (dcmplx(x,b'00000000000000000000000000000000&\n+   !              &01000000001010010101001111111101') /= zd) call abort\n+\n+end program test0"}, {"sha": "4c5c750d5942282f44d109173f469873c94eb3c2", "filename": "gcc/testsuite/gfortran.dg/boz_12.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6401bf9cad029c264ff65db946c8e31ce998db13/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_12.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6401bf9cad029c264ff65db946c8e31ce998db13/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_12.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_12.f90?ref=6401bf9cad029c264ff65db946c8e31ce998db13", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+! \n+program test\n+  implicit none\n+  real x4\n+  double precision x8\n+\n+  x4 = 1.7\n+  x8 = 1.7\n+  write(*,*) complex(x4,z'1FFFFFFFF') ! { dg-error \"too\" }\n+  write(*,*) cmplx(x8,z'1FFFFFFFFFFFFFFFF') ! { dg-error \"too\" }\n+  write(*,*) complex(x8,z'1FFFFFFFFFFFFFFFF') ! { dg-error \"too\" }\n+  write(*,*) dcmplx(x8,z'1FFFFFFFFFFFFFFFF') ! { dg-error \"too\" }\n+end program test"}]}