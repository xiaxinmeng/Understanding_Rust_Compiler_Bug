{"sha": "b4904956fad37473e178ef573049536ba87c4462", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ5MDQ5NTZmYWQzNzQ3M2UxNzhlZjU3MzA0OTUzNmJhODdjNDQ2Mg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-03-17T18:27:52Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-03-17T18:27:52Z"}, "message": "re PR libstdc++/55979 ([C++11] std::list range construction imposes unnecessary conversion constraints)\n\n2013-03-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/55979\n\t* include/bits/stl_list.h (_M_initialize_dispatch(_InputIterator,\n\t_InputIterator, __false_type)): Use emplace_back.\n\t* testsuite/23_containers/list/cons/55979.cc: New.\n\t* testsuite/23_containers/list/modifiers/1.h: Adjust.\n\t* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:\n\tAdjust dg-error line number.\n\nFrom-SVN: r196755", "tree": {"sha": "bb338242bd139b637ef0753eea81d49714bbc18e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb338242bd139b637ef0753eea81d49714bbc18e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4904956fad37473e178ef573049536ba87c4462", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4904956fad37473e178ef573049536ba87c4462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4904956fad37473e178ef573049536ba87c4462", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4904956fad37473e178ef573049536ba87c4462/comments", "author": null, "committer": null, "parents": [{"sha": "9f4f1735d8b1200b5dbdb86e574c62aa5540cf11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f4f1735d8b1200b5dbdb86e574c62aa5540cf11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f4f1735d8b1200b5dbdb86e574c62aa5540cf11"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "36c45b5125e252541d901e7c517a0bddf9a695b8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4904956fad37473e178ef573049536ba87c4462/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4904956fad37473e178ef573049536ba87c4462/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b4904956fad37473e178ef573049536ba87c4462", "patch": "@@ -1,3 +1,13 @@\n+2013-03-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/55979\n+\t* include/bits/stl_list.h (_M_initialize_dispatch(_InputIterator,\n+\t_InputIterator, __false_type)): Use emplace_back.\n+\t* testsuite/23_containers/list/cons/55979.cc: New.\n+\t* testsuite/23_containers/list/modifiers/1.h: Adjust.\n+\t* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:\n+\tAdjust dg-error line number.\n+\n 2013-03-16  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/55017"}, {"sha": "596760c2152426b4030be21ef8c188524a704688", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4904956fad37473e178ef573049536ba87c4462/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4904956fad37473e178ef573049536ba87c4462/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=b4904956fad37473e178ef573049536ba87c4462", "patch": "@@ -1487,7 +1487,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \t\t\t       __false_type)\n         {\n \t  for (; __first != __last; ++__first)\n+#if __cplusplus >= 201103L\n+\t    emplace_back(*__first);\n+#else\n \t    push_back(*__first);\n+#endif\n \t}\n \n       // Called by list(n,v,a), and the range constructor when it turns out"}, {"sha": "6a069bfd7e3b5f07d34e8bdc5e1f0e23f3407d2b", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/55979.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4904956fad37473e178ef573049536ba87c4462/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F55979.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4904956fad37473e178ef573049536ba87c4462/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F55979.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F55979.cc?ref=b4904956fad37473e178ef573049536ba87c4462", "patch": "@@ -0,0 +1,34 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++11\" }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <list>\n+\n+struct A\n+{\n+  A(int) { }\n+  A(const A&) = delete;\n+  A& operator=(const A&) = delete;\n+};\n+\n+void foo()\n+{\n+  int i[] = {1, 2};\n+  std::list<A> li(i, i + 2);\n+}"}, {"sha": "1e7767b4beebbf93b265d1d3b2303209f3064405", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/1.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4904956fad37473e178ef573049536ba87c4462/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4904956fad37473e178ef573049536ba87c4462/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F1.h?ref=b4904956fad37473e178ef573049536ba87c4462", "patch": "@@ -89,22 +89,34 @@ modifiers1()\n   b = list0301.begin();\n   list0301.insert(b, A, A + N); // should be [321 322 333 13 13]\n   VERIFY(list0301.size() == 5);\n+#if __cplusplus >= 201103L\n+  VERIFY(copy_constructor::count() == 0);\n+#else\n   VERIFY(copy_constructor::count() == 3);\n+#endif\n   VERIFY(m->id() == 13);\n \n   // range fill at end\n   value_type::reset();\n   list0301.insert(e, A, A + N); // should be [321 322 333 13 13 321 322 333]\n   VERIFY(list0301.size() == 8);\n+#if __cplusplus >= 201103L\n+  VERIFY(copy_constructor::count() == 0);\n+#else\n   VERIFY(copy_constructor::count() == 3);\n+#endif\n   VERIFY(e == list0301.end());\n   VERIFY(m->id() == 13);\n \n   // range fill in middle\n   value_type::reset();\n   list0301.insert(m, A, A + N);\n   VERIFY(list0301.size() == 11);\n+#if __cplusplus >= 201103L\n+  VERIFY(copy_constructor::count() == 0);\n+#else\n   VERIFY(copy_constructor::count() == 3);\n+#endif\n   VERIFY(e == list0301.end());\n   VERIFY(m->id() == 13);\n "}, {"sha": "63216cb01c87c1b3154e9251cea99f0fd9fcfe54", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4904956fad37473e178ef573049536ba87c4462/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4904956fad37473e178ef573049536ba87c4462/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=b4904956fad37473e178ef573049536ba87c4462", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1525 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1529 }\n \n #include <list>\n "}]}