{"sha": "9c763d1957c4c86fb0d299c71c44f70962959a15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM3NjNkMTk1N2M0Yzg2ZmIwZDI5OWM3MWM0NGY3MDk2Mjk1OWExNQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-09-16T14:16:42Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-09-16T14:16:42Z"}, "message": "* search.c: Follow spelling conventions.\n\nFrom-SVN: r87600", "tree": {"sha": "d5bd05c2fd7a4b7caec5afa6f67ff2ad5ef72f9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5bd05c2fd7a4b7caec5afa6f67ff2ad5ef72f9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c763d1957c4c86fb0d299c71c44f70962959a15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c763d1957c4c86fb0d299c71c44f70962959a15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c763d1957c4c86fb0d299c71c44f70962959a15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c763d1957c4c86fb0d299c71c44f70962959a15/comments", "author": null, "committer": null, "parents": [{"sha": "8210e4c42d6283b2ed06c6861c91ca8235825a24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8210e4c42d6283b2ed06c6861c91ca8235825a24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8210e4c42d6283b2ed06c6861c91ca8235825a24"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "f940577450211fdb51d8be0492cc366266c9585d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c763d1957c4c86fb0d299c71c44f70962959a15/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c763d1957c4c86fb0d299c71c44f70962959a15/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9c763d1957c4c86fb0d299c71c44f70962959a15", "patch": "@@ -1,3 +1,7 @@\n+2004-09-16  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* search.c: Follow spelling conventions.\n+\n 2004-09-15  Mark Mitchell  <mark@codesourcery.com>\n \n \t* cp-objcp-common.h (LANG_HOOKS_COMDAT_GROUP): Define."}, {"sha": "42adbec324ca78033dcefdf42fb5fcdcacc85a7a", "filename": "gcc/cp/search.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c763d1957c4c86fb0d299c71c44f70962959a15/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c763d1957c4c86fb0d299c71c44f70962959a15/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=9c763d1957c4c86fb0d299c71c44f70962959a15", "patch": "@@ -2042,15 +2042,15 @@ reinit_search_statistics (void)\n }\n \n /* Helper for lookup_conversions_r.  TO_TYPE is the type converted to\n-   by a conversion op in base BINFO.  VIRTUAL_DEPTH is non-zero if\n-   BINFO is morally virtual, and VIRTUALNESS is non-zero if virtual\n+   by a conversion op in base BINFO.  VIRTUAL_DEPTH is nonzero if\n+   BINFO is morally virtual, and VIRTUALNESS is nonzero if virtual\n    bases have been encountered already in the tree walk.  PARENT_CONVS\n    is the list of lists of conversion functions that could hide CONV\n    and OTHER_CONVS is the list of lists of conversion functions that\n    could hide or be hidden by CONV, should virtualness be involved in\n    the hierarchy.  Merely checking the conversion op's name is not\n    enough because two conversion operators to the same type can have\n-   different names.  Return non-zero if we are visible.  */\n+   different names.  Return nonzero if we are visible.  */\n \n static int\n check_hidden_convs (tree binfo, int virtual_depth, int virtualness,\n@@ -2154,13 +2154,13 @@ split_conversions (tree my_convs, tree parent_convs,\n }\n \n /* Worker for lookup_conversions.  Lookup conversion functions in\n-   BINFO and its children.  VIRTUAL_DEPTH is non-zero, if BINFO is in\n-   a morally virtual base, and VIRTUALNESS is non-zero, if we've\n+   BINFO and its children.  VIRTUAL_DEPTH is nonzero, if BINFO is in\n+   a morally virtual base, and VIRTUALNESS is nonzero, if we've\n    encountered virtual bases already in the tree walk.  PARENT_CONVS &\n    PARENT_TPL_CONVS are lists of list of conversions within parent\n    binfos.  OTHER_CONVS and OTHER_TPL_CONVS are conversions found\n    elsewhere in the tree.  Return the conversions found within this\n-   portion of the graph in CONVS and TPL_CONVS.  Return non-zero is we\n+   portion of the graph in CONVS and TPL_CONVS.  Return nonzero is we\n    encountered virtualness.  We keep template and non-template\n    conversions separate, to avoid unnecessary type comparisons.\n "}]}