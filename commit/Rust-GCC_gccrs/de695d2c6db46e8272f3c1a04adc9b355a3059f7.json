{"sha": "de695d2c6db46e8272f3c1a04adc9b355a3059f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU2OTVkMmM2ZGI0NmU4MjcyZjNjMWEwNGFkYzliMzU1YTMwNTlmNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-06-03T02:07:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-06-03T02:07:51Z"}, "message": "new\n\nFrom-SVN: r34374", "tree": {"sha": "79ca53adb8ea4b09171d455d688caf367deb2d57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79ca53adb8ea4b09171d455d688caf367deb2d57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de695d2c6db46e8272f3c1a04adc9b355a3059f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de695d2c6db46e8272f3c1a04adc9b355a3059f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de695d2c6db46e8272f3c1a04adc9b355a3059f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de695d2c6db46e8272f3c1a04adc9b355a3059f7/comments", "author": null, "committer": null, "parents": [{"sha": "2bf105ab5ba3b1b12f4efd828434c39030cdb6fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bf105ab5ba3b1b12f4efd828434c39030cdb6fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bf105ab5ba3b1b12f4efd828434c39030cdb6fe"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "56f61efe0cdd43a020a8ce20801d87232ba9d0d8", "filename": "gcc/testsuite/g++.old-deja/g++.eh/rethrow6.C", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de695d2c6db46e8272f3c1a04adc9b355a3059f7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Frethrow6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de695d2c6db46e8272f3c1a04adc9b355a3059f7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Frethrow6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Frethrow6.C?ref=de695d2c6db46e8272f3c1a04adc9b355a3059f7", "patch": "@@ -0,0 +1,75 @@\n+// Testcase for proper handling of rethrow.\n+\n+#include <stdio.h>\n+\n+int c, d;\n+int wrong;\n+\n+struct A\n+{\n+  int i;\n+  A () { i = c++; printf (\"A() %d\\n\", i); }\n+  A (const A&) { i = c++; printf (\"A(const A&) %d\\n\", i); }\n+  ~A() { printf (\"~A() %d\\n\", i); ++d; }\n+};\n+\n+struct B\n+{\n+  ~B () {\n+    try\n+      {\n+\tprintf (\"Rethrowing III...\\n\");\n+\tthrow;\n+      }\n+    catch (A& a)\n+      {\n+\tprintf (\"Caught III %d...\\n\", a.i);\n+\tif (a.i != 1)\n+\t  {\n+\t    printf (\"** rethrew uncaught exception **\\n\");\n+\t    wrong = 1;\n+\t  }\n+      }\n+    printf (\"continuing to unwind II...\\n\");\n+  }\n+};\n+\n+int\n+main ()\n+{\n+  {\n+    A a;\n+\n+    try\n+      {\n+\ttry\n+\t  {\n+\t    printf (\"Throwing I...\\n\");\n+\t    throw a;\n+\t  }\n+\tcatch (A& a)\n+\t  {\n+\t    printf (\"Caught I %d...\\n\", a.i);\n+\t    try\n+\t      {\n+\t\tB b;\n+\t\tprintf (\"Throwing II...\\n\");\n+\t\tthrow a;\n+\t      }\n+\t    catch (A& a)\n+\t      {\n+\t\tprintf (\"Caught II %d...\\n\", a.i);\n+\t\tprintf (\"Throwing IV...\\n\");\n+\t\tthrow;\n+\t      }\n+\t  }\n+      }\n+    catch (A& a)\n+      {\n+\tprintf (\"Caught IV %d.\\n\", a.i);\n+      }\n+  }\n+\n+  printf (\"c == %d, d == %d\\n\", c, d);\n+  return c != d || wrong;\n+}"}]}