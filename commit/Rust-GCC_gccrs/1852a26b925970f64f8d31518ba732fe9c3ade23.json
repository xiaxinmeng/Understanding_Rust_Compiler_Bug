{"sha": "1852a26b925970f64f8d31518ba732fe9c3ade23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg1MmEyNmI5MjU5NzBmNjRmOGQzMTUxOGJhNzMyZmU5YzNhZGUyMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-05-27T19:46:49Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-05-27T19:46:49Z"}, "message": "i386: Fix V2SF horizontal add/subtract insns\n\nPFPNACC insn is incorrectly modelled to perform addition and subtraction\nof two operands, but in reality it performs horizontal addition and\nsubtraction:\n\nInstruction: PFPNACC dest,src\n\nDescription:\ndest[31:0] <- dest[31:0] - dest[63:32];\ndest[63:32] <- src[31:0] + src[63:32];\n\nAlso, it is not possible to directly replace PFACC with HADDPS and PFNACC\nwith HSUBPS, because operands in the second word do not match.\n\nPFACC does:\n\ndest[31..0] <- dest[31..0] + dest[63..32];\ndest[63..32] <- src[31..0] + src [63..32];\n\nwhile HADDPS does:\n\ndest[31..0] <-  dest[31..0]  +  dest[63..32];\ndest[63..32] <- dest[127..96] + dest[95..64];\ndest[95..64] <- src [31..0]  +  src [64..32];\ndest[127:96] <- src [127..96] + src [95..64];\n\n2020-05-27  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/ChangeLog:\n\t* config/i386/mmx.md (*mmx_haddv2sf3): Remove SSE alternatives.\n\t(mmx_hsubv2sf3): Ditto.\n\t(mmx_haddsubv2sf3): New expander.\n\t(*mmx_haddsubv2sf3): Rename from mmx_addsubv2sf3. Correct\n\tRTL template to model horizontal subtraction and addition.\n\t* config/i386/i386-builtin.def (IX86_BUILTIN_PFPNACC):\n\tUpdate for rename.", "tree": {"sha": "fab03c36683cb5d424488e73cfa1be1d5a3ee39f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fab03c36683cb5d424488e73cfa1be1d5a3ee39f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1852a26b925970f64f8d31518ba732fe9c3ade23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1852a26b925970f64f8d31518ba732fe9c3ade23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1852a26b925970f64f8d31518ba732fe9c3ade23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1852a26b925970f64f8d31518ba732fe9c3ade23/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c949ec9c4e88d2ff6dbd5b179abddf3703129577", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c949ec9c4e88d2ff6dbd5b179abddf3703129577", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c949ec9c4e88d2ff6dbd5b179abddf3703129577"}], "stats": {"total": 79, "additions": 46, "deletions": 33}, "files": [{"sha": "134981a798f4a1503853516476983900a0f97830", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1852a26b925970f64f8d31518ba732fe9c3ade23/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1852a26b925970f64f8d31518ba732fe9c3ade23/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=1852a26b925970f64f8d31518ba732fe9c3ade23", "patch": "@@ -555,7 +555,7 @@ BDESC (OPTION_MASK_ISA_3DNOW_A, 0, CODE_FOR_mmx_pi2fw, \"__builtin_ia32_pi2fw\", I\n BDESC (OPTION_MASK_ISA_3DNOW_A, 0, CODE_FOR_mmx_pswapdv2si2, \"__builtin_ia32_pswapdsi\", IX86_BUILTIN_PSWAPDSI, UNKNOWN, (int) V2SI_FTYPE_V2SI)\n BDESC (OPTION_MASK_ISA_3DNOW_A, 0, CODE_FOR_mmx_pswapdv2sf2, \"__builtin_ia32_pswapdsf\", IX86_BUILTIN_PSWAPDSF, UNKNOWN, (int) V2SF_FTYPE_V2SF)\n BDESC (OPTION_MASK_ISA_3DNOW_A, 0, CODE_FOR_mmx_hsubv2sf3, \"__builtin_ia32_pfnacc\", IX86_BUILTIN_PFNACC, UNKNOWN, (int) V2SF_FTYPE_V2SF_V2SF)\n-BDESC (OPTION_MASK_ISA_3DNOW_A, 0, CODE_FOR_mmx_addsubv2sf3, \"__builtin_ia32_pfpnacc\", IX86_BUILTIN_PFPNACC, UNKNOWN, (int) V2SF_FTYPE_V2SF_V2SF)\n+BDESC (OPTION_MASK_ISA_3DNOW_A, 0, CODE_FOR_mmx_haddsubv2sf3, \"__builtin_ia32_pfpnacc\", IX86_BUILTIN_PFPNACC, UNKNOWN, (int) V2SF_FTYPE_V2SF_V2SF)\n \n /* SSE */\n BDESC (OPTION_MASK_ISA_SSE, 0, CODE_FOR_sse_movmskps, \"__builtin_ia32_movmskps\", IX86_BUILTIN_MOVMSKPS, UNKNOWN, (int) INT_FTYPE_V4SF)"}, {"sha": "7c9640d4f9f56bd67903f1e8367448e5b562c8d8", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 45, "deletions": 32, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1852a26b925970f64f8d31518ba732fe9c3ade23/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1852a26b925970f64f8d31518ba732fe9c3ade23/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=1852a26b925970f64f8d31518ba732fe9c3ade23", "patch": "@@ -552,32 +552,27 @@\n   \"TARGET_3DNOW\")\n \n (define_insn \"*mmx_haddv2sf3\"\n-  [(set (match_operand:V2SF 0 \"register_operand\" \"=y,x,x\")\n+  [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n \t(vec_concat:V2SF\n \t  (plus:SF\n \t    (vec_select:SF\n-\t      (match_operand:V2SF 1 \"register_operand\" \"0,0,x\")\n+\t      (match_operand:V2SF 1 \"register_operand\" \"0\")\n \t      (parallel [(match_operand:SI 3 \"const_0_to_1_operand\")]))\n \t    (vec_select:SF (match_dup 1)\n \t    (parallel [(match_operand:SI 4 \"const_0_to_1_operand\")])))\n \t  (plus:SF\n             (vec_select:SF\n-\t      (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym,x,x\")\n+\t      (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")\n \t      (parallel [(match_operand:SI 5 \"const_0_to_1_operand\")]))\n \t    (vec_select:SF (match_dup 2)\n \t    (parallel [(match_operand:SI 6 \"const_0_to_1_operand\")])))))]\n   \"TARGET_3DNOW\n    && INTVAL (operands[3]) != INTVAL (operands[4])\n    && INTVAL (operands[5]) != INTVAL (operands[6])\"\n-  \"@\n-   pfacc\\t{%2, %0|%0, %2}\n-   haddps\\t{%2, %0|%0, %2}\n-   vhaddps\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"isa\" \"*,sse3_noavx,avx\")\n-   (set_attr \"type\" \"mmxadd,sseadd,sseadd\")\n-   (set_attr \"prefix_extra\" \"1,*,*\")\n-   (set_attr \"prefix\" \"*,orig,vex\")\n-   (set_attr \"mode\" \"V2SF,V4SF,V4SF\")])\n+  \"pfacc\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"mmxadd\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"mode\" \"V2SF\")])\n \n (define_insn \"*mmx_haddv2sf3_low\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=x,x\")\n@@ -599,28 +594,23 @@\n    (set_attr \"mode\" \"V4SF\")])\n \n (define_insn \"mmx_hsubv2sf3\"\n-  [(set (match_operand:V2SF 0 \"register_operand\" \"=y,x,x\")\n+  [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n \t(vec_concat:V2SF\n \t  (minus:SF\n \t    (vec_select:SF\n-\t      (match_operand:V2SF 1 \"register_operand\" \"0,0,x\")\n+\t      (match_operand:V2SF 1 \"register_operand\" \"0\")\n \t      (parallel [(const_int  0)]))\n \t    (vec_select:SF (match_dup 1) (parallel [(const_int 1)])))\n \t  (minus:SF\n             (vec_select:SF\n-\t      (match_operand:V2SF 2 \"register_mmxmem_operand\" \"ym,x,x\")\n+\t      (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")\n \t      (parallel [(const_int  0)]))\n \t    (vec_select:SF (match_dup 2) (parallel [(const_int 1)])))))]\n   \"TARGET_3DNOW_A\"\n-  \"@\n-   pfnacc\\t{%2, %0|%0, %2}\n-   hsubps\\t{%2, %0|%0, %2}\n-   vhsubps\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"isa\" \"*,sse3_noavx,avx\")\n-   (set_attr \"type\" \"mmxadd,sseadd,sseadd\")\n-   (set_attr \"prefix_extra\" \"1,*,*\")\n-   (set_attr \"prefix\" \"*,orig,vex\")\n-   (set_attr \"mode\" \"V2SF,V4SF,V4SF\")])\n+  \"pfnacc\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"mmxadd\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"mode\" \"V2SF\")])\n \n (define_insn \"*mmx_hsubv2sf3_low\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=x,x\")\n@@ -640,15 +630,38 @@\n    (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"V4SF\")])\n \n-(define_insn \"mmx_addsubv2sf3\"\n+(define_expand \"mmx_haddsubv2sf3\"\n+  [(set (match_operand:V2SF 0 \"register_operand\")\n+\t(vec_concat:V2SF\n+\t  (minus:SF\n+\t    (vec_select:SF\n+\t      (match_operand:V2SF 1 \"register_operand\")\n+\t      (parallel [(const_int 0)]))\n+\t    (vec_select:SF (match_dup 1) (parallel [(const_int 1)])))\n+\t  (plus:SF\n+\t    (vec_select:SF\n+\t      (match_operand:V2SF 2 \"nonimmediate_operand\")\n+\t      (parallel [(const_int 0)]))\n+\t    (vec_select:SF (match_dup 2) (parallel [(const_int 1)])))))]\n+  \"TARGET_3DNOW_A\")\n+\n+(define_insn \"*mmx_haddsubv2sf3\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n-        (vec_merge:V2SF\n-          (plus:V2SF\n-            (match_operand:V2SF 1 \"register_operand\" \"0\")\n-            (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\"))\n-          (minus:V2SF (match_dup 1) (match_dup 2))\n-          (const_int 1)))]\n-  \"TARGET_3DNOW_A\"\n+\t(vec_concat:V2SF\n+\t  (minus:SF\n+\t    (vec_select:SF\n+\t      (match_operand:V2SF 1 \"register_operand\" \"0\")\n+\t      (parallel [(const_int  0)]))\n+\t    (vec_select:SF (match_dup 1) (parallel [(const_int 1)])))\n+\t  (plus:SF\n+            (vec_select:SF\n+\t      (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")\n+\t      (parallel [(match_operand:SI 3 \"const_0_to_1_operand\")]))\n+\t    (vec_select:SF\n+\t      (match_dup 2)\n+\t      (parallel [(match_operand:SI 4 \"const_0_to_1_operand\")])))))]\n+  \"TARGET_3DNOW_A\n+   && INTVAL (operands[3]) != INTVAL (operands[4])\"\n   \"pfpnacc\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"prefix_extra\" \"1\")"}]}