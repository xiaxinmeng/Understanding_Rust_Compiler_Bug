{"sha": "1f8e46828a49664e245a474f5c0c4ebd5c7bc213", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY4ZTQ2ODI4YTQ5NjY0ZTI0NWE0NzRmNWMwYzRlYmQ1YzdiYzIxMw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-06-09T02:12:21Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-06-09T02:12:21Z"}, "message": "genautomata.c: Don't include ctype.h or limits.h.\n\n\t* genautomata.c: Don't include ctype.h or limits.h.  Use ISSPACE,\n\tnot isspace.\n\t* gengtype-lex.l: Don't include ctype.h and use ISSPACE/ISIDNUM in\n\tlieu of isspace/IDchar.\n\t* gengtype.c: Likewise for ctype.h and ISALNUM vs isalnum.\n\t* read-rtl.c: Likewise for ctype.h.  Don't define ISDIGIT or\n\tISSPACE.\n\nFrom-SVN: r54392", "tree": {"sha": "170774d1e0ee75302e10ef8351ebd90910123e80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/170774d1e0ee75302e10ef8351ebd90910123e80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f8e46828a49664e245a474f5c0c4ebd5c7bc213", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f8e46828a49664e245a474f5c0c4ebd5c7bc213", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f8e46828a49664e245a474f5c0c4ebd5c7bc213", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f8e46828a49664e245a474f5c0c4ebd5c7bc213/comments", "author": null, "committer": null, "parents": [{"sha": "f210d2390da5b25abee4bd86e4263e3d3bc5395f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f210d2390da5b25abee4bd86e4263e3d3bc5395f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f210d2390da5b25abee4bd86e4263e3d3bc5395f"}], "stats": {"total": 66, "additions": 31, "deletions": 35}, "files": [{"sha": "0598383b62cd5f1fe56963f5cd7940c594da74af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8e46828a49664e245a474f5c0c4ebd5c7bc213/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8e46828a49664e245a474f5c0c4ebd5c7bc213/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f8e46828a49664e245a474f5c0c4ebd5c7bc213", "patch": "@@ -1,3 +1,13 @@\n+2002-06-08  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* genautomata.c: Don't include ctype.h or limits.h.  Use ISSPACE,\n+\tnot isspace.\n+\t* gengtype-lex.l: Don't include ctype.h and use ISSPACE/ISIDNUM in\n+\tlieu of isspace/IDchar.\n+\t* gengtype.c: Likewise for ctype.h and ISALNUM vs isalnum.\n+\t* read-rtl.c: Likewise for ctype.h.  Don't define ISDIGIT or\n+\tISSPACE.\n+\n 2002-06-08  Zack Weinberg  <zack@codesourcery.com>\n \n \t* Makefile.in (LIBCPP_OBJS): Take out version.o."}, {"sha": "f2235f368ff5591c585bb0b553293503385fc7e6", "filename": "gcc/genautomata.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8e46828a49664e245a474f5c0c4ebd5c7bc213/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8e46828a49664e245a474f5c0c4ebd5c7bc213/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=1f8e46828a49664e245a474f5c0c4ebd5c7bc213", "patch": "@@ -106,18 +106,13 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"obstack.h\"\n #include \"errors.h\"\n \n-#include <ctype.h>\n #include <math.h>\n #include \"hashtab.h\"\n #include \"varray.h\"\n \n-#ifdef HAVE_LIMITS_H\n-#include <limits.h>\n-#else\n #ifndef CHAR_BIT\n #define CHAR_BIT 8\n #endif\n-#endif\n \n #include \"genattrtab.h\"\n \n@@ -1301,7 +1296,7 @@ next_sep_el (pstr, sep, par_flag)\n   int n_spaces;\n \n   /* Remove leading whitespaces.  */\n-  while (isspace ((int) **pstr))\n+  while (ISSPACE ((int) **pstr))\n     (*pstr)++;\n \n   if (**pstr == '\\0')\n@@ -1316,7 +1311,7 @@ next_sep_el (pstr, sep, par_flag)\n \tpars_num--;\n       else if (pars_num == 0 && *p == sep)\n \tbreak;\n-      if (pars_num == 0 && isspace ((int) *p))\n+      if (pars_num == 0 && ISSPACE ((int) *p))\n \tn_spaces++;\n       else\n \t{"}, {"sha": "c6383760197d4987febda5a427793748d002541d", "filename": "gcc/gengtype-lex.l", "status": "modified", "additions": 17, "deletions": 19, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8e46828a49664e245a474f5c0c4ebd5c7bc213/gcc%2Fgengtype-lex.l", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8e46828a49664e245a474f5c0c4ebd5c7bc213/gcc%2Fgengtype-lex.l", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype-lex.l?ref=1f8e46828a49664e245a474f5c0c4ebd5c7bc213", "patch": "@@ -25,7 +25,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"hconfig.h\"\n #include \"system.h\"\n-#include <ctype.h>\n #include \"gengtype.h\"\n #include \"gengtype-yacc.h\"\n \n@@ -44,7 +43,6 @@ update_lineno (l, len)\n       lexer_line.line++;\n }\n \n-#define IDchar(c) (isalnum(c) || (c) == '_')\n %}\n \n ID\t[[:alpha:]][[:alnum:]_]*\n@@ -67,20 +65,20 @@ ITYPE\t{IWORD}({WS}{IWORD})*\n   int union_p;\n \n   tagstart = yytext + strlen (\" typedef \");\n-  while (isspace (*tagstart))\n+  while (ISSPACE (*tagstart))\n     tagstart++;\n   union_p = tagstart[0] == 'u';\n   tagstart += strlen (\"union \");\n-  while (isspace (*tagstart))\n+  while (ISSPACE (*tagstart))\n     tagstart++;\n-  for (taglen = 1; IDchar (tagstart[taglen]); taglen++)\n+  for (taglen = 1; ISIDNUM (tagstart[taglen]); taglen++)\n     ;\n   for (namestart = tagstart + taglen; \n-       ! IDchar (*namestart);\n+       ! ISIDNUM (*namestart);\n        namestart++)\n     if (*namestart == '*')\n       is_pointer = 1;\n-  for (namelen = 1; IDchar (namestart[namelen]); namelen++)\n+  for (namelen = 1; ISIDNUM (namestart[namelen]); namelen++)\n     ;\n   t = find_structure (xmemdup (tagstart, taglen, taglen+1), union_p);\n   if (is_pointer)\n@@ -97,17 +95,17 @@ ITYPE\t{IWORD}({WS}{IWORD})*\n   char *typestart;\n   size_t typelen;\n \n-  for (namestart = yytext + yyleng - 2; isspace (*namestart); namestart--)\n+  for (namestart = yytext + yyleng - 2; ISSPACE (*namestart); namestart--)\n     ;\n-  for (namelen = 1; !isspace (namestart[-namelen]); namelen++)\n+  for (namelen = 1; !ISSPACE (namestart[-namelen]); namelen++)\n     ;\n   namestart -= namelen - 1;\n   for (typestart = yytext + strlen (\" typedef \"); \n-       isspace(*typestart);\n+       ISSPACE(*typestart);\n        typestart++)\n     ;\n   for (typelen = namestart - typestart; \n-       isspace(typestart[typelen-1]); \n+       ISSPACE(typestart[typelen-1]); \n        typelen--)\n     ;\n \n@@ -121,9 +119,9 @@ ITYPE\t{IWORD}({WS}{IWORD})*\n   size_t namelen;\n   struct type *t;\n \n-  for (namestart = yytext + yyleng - 7; isspace (*namestart); namestart--)\n+  for (namestart = yytext + yyleng - 7; ISSPACE (*namestart); namestart--)\n     ;\n-  for (namelen = 1; !isspace (namestart[-namelen]); namelen++)\n+  for (namelen = 1; !ISSPACE (namestart[-namelen]); namelen++)\n     ;\n   namestart -= namelen - 1;\n \n@@ -136,9 +134,9 @@ ITYPE\t{IWORD}({WS}{IWORD})*\n   size_t namelen;\n   struct type *t;\n \n-  for (namestart = yytext + yyleng - 7; !IDchar (*namestart); namestart--)\n+  for (namestart = yytext + yyleng - 7; !ISIDNUM (*namestart); namestart--)\n     ;\n-  for (namelen = 1; IDchar (namestart[-namelen]); namelen++)\n+  for (namelen = 1; ISIDNUM (namestart[-namelen]); namelen++)\n     ;\n   namestart -= namelen - 1;\n \n@@ -156,17 +154,17 @@ ITYPE\t{IWORD}({WS}{IWORD})*\n   typedef_p = yytext[1] == 't';\n   if (typedef_p)\n     for (tagstart = yytext + strlen (\" typedef \"); \n-\t isspace(*tagstart);\n+\t ISSPACE(*tagstart);\n \t tagstart++)\n       ;\n   else\n     tagstart = yytext + 1;\n \n   union_p = tagstart[0] == 'u';\n   tagstart += strlen (\"union \");\n-  while (isspace (*tagstart))\n+  while (ISSPACE (*tagstart))\n     tagstart++;\n-  for (taglen = 1; IDchar (tagstart[taglen]); taglen++)\n+  for (taglen = 1; ISIDNUM (tagstart[taglen]); taglen++)\n     ;\n \n   yylval.t = find_structure (xmemdup (tagstart, taglen, taglen + 1), union_p);\n@@ -209,7 +207,7 @@ ITYPE\t{IWORD}({WS}{IWORD})*\n \"ENUM_BITFIELD\"{WS}?\"(\"{WS}?{ID}{WS}?\")\"\t{\n   size_t len;\n \n-  for (len = yyleng; isspace (yytext[len-1]); len--)\n+  for (len = yyleng; ISSPACE (yytext[len-1]); len--)\n     ;\n \n   yylval.t = create_scalar_type (yytext, len);"}, {"sha": "5e910df382f668f1f41cc69fe72c9a82d6579b5b", "filename": "gcc/gengtype.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8e46828a49664e245a474f5c0c4ebd5c7bc213/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8e46828a49664e245a474f5c0c4ebd5c7bc213/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=1f8e46828a49664e245a474f5c0c4ebd5c7bc213", "patch": "@@ -20,7 +20,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"hconfig.h\"\n #include \"system.h\"\n-#include <ctype.h>\n #include \"gengtype.h\"\n \n /* Nonzero iff an error has occurred.  */\n@@ -687,7 +686,7 @@ get_output_file_with_visibility (input_file)\n       fm->output_name = s = xmalloc (sizeof (\"gt-\") + len);\n       sprintf (s, \"gt-%s\", basename);\n       for (; *s != '.'; s++)\n-\tif (! isalnum (*s) && *s != '-')\n+\tif (! ISALNUM (*s) && *s != '-')\n \t  *s = '-';\n       memcpy (s, \".h\", sizeof (\".h\"));\n     }\n@@ -1435,7 +1434,7 @@ put_mangled_filename (f, fn)\n {\n   const char *name = get_output_file_name (fn);\n   for (; *name != 0; name++)\n-    if (isalnum (*name))\n+    if (ISALNUM (*name))\n       fputc (*name, f);\n     else\n       fputc ('_', f);"}, {"sha": "03b0f7d4b0dd4d765cf2671b7c65a9a640227597", "filename": "gcc/read-rtl.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8e46828a49664e245a474f5c0c4ebd5c7bc213/gcc%2Fread-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8e46828a49664e245a474f5c0c4ebd5c7bc213/gcc%2Fread-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-rtl.c?ref=1f8e46828a49664e245a474f5c0c4ebd5c7bc213", "patch": "@@ -25,12 +25,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"obstack.h\"\n #include \"hashtab.h\"\n \n-#ifndef ISDIGIT\n-#include <ctype.h>\n-#define ISDIGIT isdigit\n-#define ISSPACE isspace\n-#endif\n-\n #define\tobstack_chunk_alloc\txmalloc\n #define\tobstack_chunk_free\tfree\n "}]}