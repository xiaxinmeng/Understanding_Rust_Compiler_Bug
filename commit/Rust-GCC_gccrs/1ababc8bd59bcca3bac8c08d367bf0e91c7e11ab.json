{"sha": "1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFiYWJjOGJkNTliY2NhM2JhYzhjMDhkMzY3YmYwZTkxYzdlMTFhYg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-05-02T15:46:29Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-05-02T15:46:29Z"}, "message": "Improve docs for Library Fundamentals TS\n\n\t* doc/doxygen/doxygroups.cc: Move description of experimental group\n\there.\n\t* include/experimental/algorithm: Add to libfund-ts doc group.\n\t* include/experimental/any: Likewise. Do not document implementation\n\tdetails.\n\t* include/experimental/array: Add to libfund-ts doc group.\n\t* include/experimental/bits/lfts_config.h: Define libfund-ts doc group\n\tfor Library Fundamentals.\n\t* include/experimental/chrono: Add to libfund-ts doc group.\n\t* include/experimental/deque: Likewise.\n\t* include/experimental/forward_list: Likewise.\n\t* include/experimental/functional: Likewise.\n\t* include/experimental/iterator: Likewise.\n\t* include/experimental/list: Likewise.\n\t* include/experimental/map: Likewise.\n\t* include/experimental/memory: Likewise.\n\t* include/experimental/memory_resource: Likewise. Improve docs.\n\tdetails.\n\t* include/experimental/numeric: Add to libfund-ts doc group.\n\t* include/experimental/optional: Likewise.\n\t* include/experimental/propagate_const: Likewise.\n\t* include/experimental/random: Likewise.\n\t* include/experimental/ratio: Likewise.\n\t* include/experimental/regex: Likewise.\n\t* include/experimental/set: Likewise.\n\t* include/experimental/source_location: Likewise.\n\t* include/experimental/string: Likewise.\n\t* include/experimental/string_view: Likewise.\n\t* include/experimental/system_error: Likewise.\n\t* include/experimental/tuple: Likewise.\n\t* include/experimental/type_traits: Likewise.\n\t* include/experimental/unordered_map: Likewise.\n\t* include/experimental/unordered_set: Likewise.\n\t* include/experimental/utility: Likewise.\n\t* include/experimental/vector: Likewise.\n\t* testsuite/experimental/any/misc/any_cast_neg.cc: Adjust dg-error.\n\t* testsuite/experimental/array/neg.cc: Adjust dg-error.\n\t* testsuite/experimental/propagate_const/assignment/move_neg.cc:\n\tLikewise.\n\t* testsuite/experimental/propagate_const/cons/move_neg.cc: Likewise.\n\t* testsuite/experimental/propagate_const/requirements2.cc: Likewise.\n\t* testsuite/experimental/propagate_const/requirements3.cc: Likewise.\n\t* testsuite/experimental/propagate_const/requirements4.cc: Likewise.\n\t* testsuite/experimental/propagate_const/requirements5.cc: Likewise.\n\nFrom-SVN: r270809", "tree": {"sha": "d539c852a72adce490ecd471a7d78b5f231b8b55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d539c852a72adce490ecd471a7d78b5f231b8b55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "caace30081bdd0843f77fa57e336a42e40978b49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caace30081bdd0843f77fa57e336a42e40978b49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caace30081bdd0843f77fa57e336a42e40978b49"}], "stats": {"total": 174, "additions": 134, "deletions": 40}, "files": [{"sha": "f5f6e74ce9223d7e4e80e48c10555e83e43880ce", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -1,5 +1,50 @@\n 2019-05-02  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* doc/doxygen/doxygroups.cc: Move description of experimental group\n+\there.\n+\t* include/experimental/algorithm: Add to libfund-ts doc group.\n+\t* include/experimental/any: Likewise. Do not document implementation\n+\tdetails.\n+\t* include/experimental/array: Add to libfund-ts doc group.\n+\t* include/experimental/bits/lfts_config.h: Define libfund-ts doc group\n+\tfor Library Fundamentals.\n+\t* include/experimental/chrono: Add to libfund-ts doc group.\n+\t* include/experimental/deque: Likewise.\n+\t* include/experimental/forward_list: Likewise.\n+\t* include/experimental/functional: Likewise.\n+\t* include/experimental/iterator: Likewise.\n+\t* include/experimental/list: Likewise.\n+\t* include/experimental/map: Likewise.\n+\t* include/experimental/memory: Likewise.\n+\t* include/experimental/memory_resource: Likewise. Improve docs.\n+\tdetails.\n+\t* include/experimental/numeric: Add to libfund-ts doc group.\n+\t* include/experimental/optional: Likewise.\n+\t* include/experimental/propagate_const: Likewise.\n+\t* include/experimental/random: Likewise.\n+\t* include/experimental/ratio: Likewise.\n+\t* include/experimental/regex: Likewise.\n+\t* include/experimental/set: Likewise.\n+\t* include/experimental/source_location: Likewise.\n+\t* include/experimental/string: Likewise.\n+\t* include/experimental/string_view: Likewise.\n+\t* include/experimental/system_error: Likewise.\n+\t* include/experimental/tuple: Likewise.\n+\t* include/experimental/type_traits: Likewise.\n+\t* include/experimental/unordered_map: Likewise.\n+\t* include/experimental/unordered_set: Likewise.\n+\t* include/experimental/utility: Likewise.\n+\t* include/experimental/vector: Likewise.\n+\t* testsuite/experimental/any/misc/any_cast_neg.cc: Adjust dg-error.\n+\t* testsuite/experimental/array/neg.cc: Adjust dg-error.\n+\t* testsuite/experimental/propagate_const/assignment/move_neg.cc:\n+\tLikewise.\n+\t* testsuite/experimental/propagate_const/cons/move_neg.cc: Likewise.\n+\t* testsuite/experimental/propagate_const/requirements2.cc: Likewise.\n+\t* testsuite/experimental/propagate_const/requirements3.cc: Likewise.\n+\t* testsuite/experimental/propagate_const/requirements4.cc: Likewise.\n+\t* testsuite/experimental/propagate_const/requirements5.cc: Likewise.\n+\n \t* include/experimental/bits/fs_dir.h: Fix Doxygen markup.\n \t* include/experimental/bits/fs_fwd.h: Improve docs.\n \t* include/experimental/bits/fs_ops.h: fix Doxygen markup."}, {"sha": "630e02296edc2b9633968e331e4bd16e55ad1513", "filename": "libstdc++-v3/doc/doxygen/doxygroups.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fdoxygroups.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fdoxygroups.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fdoxygroups.cc?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -160,3 +160,15 @@ summarized in <a href=\"tables.html\">tables</a>.  */\n  * Components for concurrent operations, including threads, mutexes,\n  * and condition variables.\n  */\n+\n+/**\n+ * @defgroup experimental Technical Specifications\n+ *\n+ * Components specified by various Technical Specifications.\n+ *\n+ * As indicated by the std::experimental namespace and the header paths,\n+ * the contents of these Technical Specifications are experimental and not\n+ * part of the C++ standard. As such the interfaces and implementations may\n+ * change in the future, and there is <STRONG> no guarantee of compatibility\n+ * between different GCC releases </STRONG> for these features.\n+ */"}, {"sha": "8ba212c5132f743c8e44c5df8eef3ef258544302", "filename": "libstdc++-v3/include/experimental/algorithm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Falgorithm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Falgorithm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Falgorithm?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/algorithm\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_ALGORITHM"}, {"sha": "a6e0fc683d9ecd5356d44a07baa94d0dc25f01df", "filename": "libstdc++-v3/include/experimental/any", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/any\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_ANY\n@@ -49,7 +50,7 @@ inline namespace fundamentals_v1\n {\n   /**\n    * @defgroup any Type-safe container of any type\n-   * @ingroup experimental\n+   * @ingroup libfund-ts\n    *\n    * A type-safe container for single values of value types, as\n    * described in n3804 \"Any Library Proposal (Revision 3)\".\n@@ -69,6 +70,7 @@ inline namespace fundamentals_v1\n     virtual const char* what() const noexcept { return \"bad any_cast\"; }\n   };\n \n+  /// @cond undocumented\n   [[gnu::noreturn]] inline void __throw_bad_any_cast()\n   {\n #if __cpp_exceptions\n@@ -77,6 +79,7 @@ inline namespace fundamentals_v1\n     __builtin_abort();\n #endif\n   }\n+  /// @endcond\n \n   /**\n    *  @brief A type-safe container of any type.\n@@ -410,6 +413,7 @@ inline namespace fundamentals_v1\n     }\n   // @}\n \n+  /// @cond undocumented\n   template<typename _Tp>\n     void* __any_caster(const any* __any)\n     {\n@@ -422,6 +426,7 @@ inline namespace fundamentals_v1\n       __any->_M_manager(any::_Op_access, __any, &__arg);\n       return __arg._M_obj;\n     }\n+  /// @endcond\n \n   /**\n    * @brief Access the contained object."}, {"sha": "5a35fd499d89916a8282a5d3a499639accb3fa1e", "filename": "libstdc++-v3/include/experimental/array", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Farray?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/array\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_ARRAY\n@@ -47,7 +48,7 @@ inline namespace fundamentals_v2\n #define __cpp_lib_experimental_make_array 201505\n   /**\n    * @defgroup make_array Array creation functions\n-   * @ingroup experimental\n+   * @ingroup libfund-ts\n    *\n    * Array creation functions as described in N4529,\n    * Working Draft, C++ Extensions for Library Fundamentals, Version 2\n@@ -78,6 +79,7 @@ template<typename... _Types>\n                   \"any of the arguments is a reference_wrapper\");\n   };\n \n+/// Create a std::array from a variable-length list of arguments.\n template <typename _Dest = void, typename... _Types>\n   constexpr\n   array<typename __make_array_elem<_Dest, _Types...>::type, sizeof...(_Types)>\n@@ -93,6 +95,7 @@ template <typename _Tp, size_t _Nm, size_t... _Idx>\n     return {{__a[_Idx]...}};\n   }\n \n+/// Create a std::array from an array.\n template <typename _Tp, size_t _Nm>\n   constexpr array<remove_cv_t<_Tp>, _Nm>\n   to_array(_Tp (&__a)[_Nm])"}, {"sha": "8fc67054c5536815610f358de78d16686968a27f", "filename": "libstdc++-v3/include/experimental/bits/lfts_config.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Flfts_config.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Flfts_config.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Flfts_config.h?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -30,6 +30,17 @@\n #if __cplusplus >= 201402L\n #include <bits/c++config.h>\n \n+  /** @defgroup libfund-ts Library Fundamentals TS\n+   *  @ingroup experimental\n+   *\n+   * Components defined by the _C++ Extensions for Library Fundamentals_\n+   * Technical Specification, versions 1 and 2.\n+   *\n+   * ISO/IEC TS 19568:2015 C++ Extensions for Library Fundamentals\n+   *\n+   * ISO/IEC TS 19568:2017 C++ Extensions for Library Fundamentals, Version 2\n+   */\n+\n #if _GLIBCXX_INLINE_VERSION\n namespace std _GLIBCXX_VISIBILITY(default)\n {"}, {"sha": "0e41321cc27e3fdd02ac9c286a195bcf2293bb95", "filename": "libstdc++-v3/include/experimental/chrono", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fchrono", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fchrono", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fchrono?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/chrono\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n //"}, {"sha": "3a2be39e58f818d272564054a15fb48b944287b8", "filename": "libstdc++-v3/include/experimental/deque", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fdeque?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/deque\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_DEQUE"}, {"sha": "3cee24d2429feb0afac12e0a0d1c2ec72596ce73", "filename": "libstdc++-v3/include/experimental/forward_list", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fforward_list", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fforward_list", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fforward_list?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/forward_list\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_FORWARD_LIST"}, {"sha": "28a5708f37794c5c38a16a4507f9dae669cedb6a", "filename": "libstdc++-v3/include/experimental/functional", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffunctional?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/functional\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_FUNCTIONAL"}, {"sha": "ff367955bc61987156e2999829e1172255c969cf", "filename": "libstdc++-v3/include/experimental/iterator", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fiterator", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fiterator", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fiterator?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/iterator\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n //"}, {"sha": "ae9269922ac148a87c66425ef5c91205c361f612", "filename": "libstdc++-v3/include/experimental/list", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Flist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Flist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Flist?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/list\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_LIST"}, {"sha": "82bc493af44f0a05ce42b8d05cae79195dc5976d", "filename": "libstdc++-v3/include/experimental/map", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fmap", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fmap", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fmap?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/map\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_MAP"}, {"sha": "a59394b358361633db4562828a9a00cb163284ba", "filename": "libstdc++-v3/include/experimental/memory", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fmemory", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fmemory", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fmemory?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/memory\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n //"}, {"sha": "a0b3063215451e0cc123d63f8b50de3ed2bb18ec", "filename": "libstdc++-v3/include/experimental/memory_resource", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fmemory_resource", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fmemory_resource", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fmemory_resource?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/memory_resource\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_MEMORY_RESOURCE\n@@ -37,12 +38,14 @@\n #include <ext/new_allocator.h>\n #include <debug/assertions.h>\n \n+/// @cond\n namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _Tp> class malloc_allocator;\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace __gnu_cxx\n+/// @endcond\n \n namespace std {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n@@ -259,6 +262,7 @@ namespace pmr {\n     { return !(__a == __b); }\n \n \n+  /// @cond undocumented\n   class __resource_adaptor_common\n   {\n     template<typename, typename> friend class __resource_adaptor_imp;\n@@ -372,6 +376,7 @@ namespace pmr {\n       : std::alignment_of<std::max_align_t>::type { };\n #endif\n   };\n+  /// @endcond\n \n   // 8.7.1 __resource_adaptor_imp\n   template<typename _Alloc, typename _Resource>\n@@ -501,6 +506,7 @@ namespace pmr {\n \n   // The default memory resource\n \n+  /// @cond undocumented\n   inline std::atomic<memory_resource*>&\n   __get_default_resource()\n   {\n@@ -509,11 +515,14 @@ namespace pmr {\n     static type* __r = new(__buf) type(new_delete_resource());\n     return *__r;\n   }\n+  /// @endcond\n \n+  /// Get the current default resource.\n   inline memory_resource*\n   get_default_resource() noexcept\n   { return __get_default_resource().load(); }\n \n+  /// Change the default resource and return the previous one.\n   inline memory_resource*\n   set_default_resource(memory_resource* __r) noexcept\n   {"}, {"sha": "aa5ba7ffbe16d5c9c66e5e22e7b69c48560416a4", "filename": "libstdc++-v3/include/experimental/numeric", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fnumeric", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fnumeric", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fnumeric?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/numeric\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n //"}, {"sha": "9a0112de854155195e61cb64f00eb61a7890b2aa", "filename": "libstdc++-v3/include/experimental/optional", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Foptional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Foptional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Foptional?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,23 +24,12 @@\n \n /** @file experimental/optional\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_OPTIONAL\n #define _GLIBCXX_EXPERIMENTAL_OPTIONAL 1\n \n-/**\n- * @defgroup experimental Experimental\n- *\n- * Components specified by various Technical Specifications.\n- *\n- * As indicated by the std::experimental namespace and the  header paths,\n- * the contents of these Technical Specifications are experimental and not\n- * part of the C++ standard. As such the interfaces and implementations may\n- * change in the future, and there is <STRONG> no guarantee of compatibility\n- * between different GCC releases </STRONG> for these features.\n- */\n-\n #if __cplusplus >= 201402L\n \n #include <utility>\n@@ -63,7 +52,7 @@ inline namespace fundamentals_v1\n {\n   /**\n    * @defgroup optional Optional values\n-   * @ingroup experimental\n+   * @ingroup libfund-ts\n    *\n    * Class template for optional values and surrounding facilities, as\n    * described in n3793 \"A proposal to add a utility class to represent"}, {"sha": "dcdfca46fed66cc509ae45faf578aa8ebff6ca95", "filename": "libstdc++-v3/include/experimental/propagate_const", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fpropagate_const", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fpropagate_const", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fpropagate_const?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/propagate_const\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_PROPAGATE_CONST\n@@ -49,7 +50,7 @@ inline namespace fundamentals_v2\n {\n   /**\n    * @defgroup propagate_const Const-propagating wrapper\n-   * @ingroup experimental\n+   * @ingroup libfund-ts\n    *\n    * A const-propagating wrapper that propagates const to pointer-like members,\n    * as described in n4388 \"A Proposal to Add a Const-Propagating Wrapper\n@@ -58,7 +59,7 @@ inline namespace fundamentals_v2\n    * @{\n    */\n \n-/// Const-propagating wrapper.\n+  /// Const-propagating wrapper.\n   template <typename _Tp>\n     class propagate_const\n     {"}, {"sha": "2d4b83df6257ad49b22c133aba5958da09f95c41", "filename": "libstdc++-v3/include/experimental/random", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Frandom", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Frandom", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Frandom?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/random\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_RANDOM"}, {"sha": "3e12af51463c62c0c4887f04b730fb9ef9351e22", "filename": "libstdc++-v3/include/experimental/ratio", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fratio", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fratio", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fratio?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/ratio\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n //"}, {"sha": "71f0ab9c4de6728f56c7911a3a6c6de645e03a3f", "filename": "libstdc++-v3/include/experimental/regex", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fregex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fregex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fregex?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/regex\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_REGEX"}, {"sha": "e55922e7e6f9804192028af62f856cc14c6d77b5", "filename": "libstdc++-v3/include/experimental/set", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fset?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/set\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_SET"}, {"sha": "801a1c948a7aebc07cb461d1be6c826b2ba58220", "filename": "libstdc++-v3/include/experimental/source_location", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fsource_location", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fsource_location", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fsource_location?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/source_location\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_SRCLOC"}, {"sha": "838af850b5254f8624210550a143476f7046f4eb", "filename": "libstdc++-v3/include/experimental/string", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/string\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_STRING"}, {"sha": "9449869367c4d752db8124debaf3551926a0c08d", "filename": "libstdc++-v3/include/experimental/string_view", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/string_view\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n //\n@@ -57,7 +58,7 @@ inline namespace fundamentals_v1\n    *\n    *  @ingroup strings\n    *  @ingroup sequences\n-   *  @ingroup experimental\n+   *  @ingroup libfund-ts\n    *\n    *  @tparam _CharT  Type of character\n    *  @tparam _Traits  Traits for character type, defaults to"}, {"sha": "ac91c9a4b1799439c5bd6ac19524a5850b58c85c", "filename": "libstdc++-v3/include/experimental/system_error", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fsystem_error", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fsystem_error", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fsystem_error?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/system_error\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n //"}, {"sha": "8a56fbc6732b1faeceb3d720a0614c1bbead0e3d", "filename": "libstdc++-v3/include/experimental/tuple", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftuple?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/tuple\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_TUPLE"}, {"sha": "09743c5e92be35fd07e817fd82468d67dc96f1d5", "filename": "libstdc++-v3/include/experimental/type_traits", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftype_traits?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/type_traits\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n //"}, {"sha": "7807959995737e0548c6f919d5eee0d1dacbc60f", "filename": "libstdc++-v3/include/experimental/unordered_map", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Funordered_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Funordered_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Funordered_map?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/unordered_map\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_UNORDERED_MAP"}, {"sha": "53e6d24c7354dd5fa3afe8f47feaba1e06088a98", "filename": "libstdc++-v3/include/experimental/unordered_set", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Funordered_set", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Funordered_set", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Funordered_set?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/unordered_set\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_UNORDERED_SET"}, {"sha": "635bffa1c6e20a707a10f0cee905d679d6f596f0", "filename": "libstdc++-v3/include/experimental/utility", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Futility", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Futility", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Futility?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/utility\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_UTILITY"}, {"sha": "df107d5bab6e788ee69cca69a9bc421179c025cc", "filename": "libstdc++-v3/include/experimental/vector", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fvector?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,6 +24,7 @@\n \n /** @file experimental/vector\n  *  This is a TS C++ Library header.\n+ *  @ingroup libfund-ts\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_VECTOR"}, {"sha": "8498c74002920682bc43d591325ca646cb6e4270", "filename": "libstdc++-v3/testsuite/experimental/any/misc/any_cast_neg.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fmisc%2Fany_cast_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fmisc%2Fany_cast_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fmisc%2Fany_cast_neg.cc?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -25,5 +25,6 @@ void test01()\n   using std::experimental::any_cast;\n \n   const any y(1);\n-  any_cast<int&>(y); // { dg-error \"qualifiers\" \"\" { target { *-*-* } } 357 }\n+  any_cast<int&>(y); // { dg-error \"here\" }\n+  // { dg-error \"discards qualifiers\" \"\" { target { *-*-* } } 0 }\n }"}, {"sha": "a602dc8ef4e4cb4c662903683f690e000720285e", "filename": "libstdc++-v3/testsuite/experimental/array/neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fneg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fneg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fneg.cc?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -24,5 +24,5 @@ int main()\n {\n   int dummy;\n   auto bad = std::experimental::make_array(std::ref(dummy));\n-  // { dg-error \"explicit target type\" \"\" { target *-*-* } 76 }\n+  // { dg-error \"explicit target type\" \"\" { target *-*-* } 0 }\n }"}, {"sha": "84e8baae26d1d1c01564cdfe257428da0b851f8a", "filename": "libstdc++-v3/testsuite/experimental/propagate_const/assignment/move_neg.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Fassignment%2Fmove_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Fassignment%2Fmove_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Fassignment%2Fmove_neg.cc?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -25,8 +25,6 @@\n using std::experimental::propagate_const;\n using std::unique_ptr;\n \n-// { dg-error \"no type\" \"\" { target *-*-* } 160 }\n-\n int main()\n {\n   propagate_const<unique_ptr<const int>> test5;\n@@ -35,3 +33,4 @@ int main()\n   propagate_const<unique_ptr<const int>> test6;\n   test6 = dummy2; // { dg-error \"no match\" }\n }\n+// { dg-prune-output \"no type\" }"}, {"sha": "d4bd4dd34eaaae8fa486e66708a69a6a2a2d346f", "filename": "libstdc++-v3/testsuite/experimental/propagate_const/cons/move_neg.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Fcons%2Fmove_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Fcons%2Fmove_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Fcons%2Fmove_neg.cc?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -25,11 +25,6 @@\n using std::experimental::propagate_const;\n using std::unique_ptr;\n \n-// { dg-error \"no type\" \"\" { target *-*-* } 118 }\n-// { dg-error \"no type\" \"\" { target *-*-* } 125 }\n-// { dg-error \"no type\" \"\" { target *-*-* } 134 }\n-// { dg-error \"no type\" \"\" { target *-*-* } 143 }\n-\n int main()\n {\n   const int dummy{42};\n@@ -39,3 +34,4 @@ int main()\n   propagate_const<unique_ptr<const int>> test4 = &dummy; // { dg-error \"conversion\" }\n   propagate_const<unique_ptr<const int>> test5 = std::move(test1); // { dg-error \"conversion\" }\n }\n+// { dg-prune-output \"no type\" }"}, {"sha": "11d6bfd1b68a9c7763e39236dffe704529929026", "filename": "libstdc++-v3/testsuite/experimental/propagate_const/requirements2.cc", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements2.cc?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -21,9 +21,8 @@\n \n using std::experimental::propagate_const;\n \n-// { dg-error \"requires a class or a pointer to an object type\" \"\" { target *-*-* } 107 }\n-// { dg-error \"not a pointer-to-object type\" \"\" { target *-*-* } 66 }\n-// { dg-error \"forming pointer to reference type\" \"\" { target *-*-* } 187 }\n-// { dg-error \"forming pointer to reference type\" \"\" { target *-*-* } 213 }\n-\n propagate_const<void*> test1;\n+\n+// { dg-error \"requires a class or a pointer to an object type\" \"\" { target *-*-* } 0 }\n+// { dg-prune-output \"forming pointer to reference type\" }\n+// { dg-prune-output \"not a pointer-to-object type\" }"}, {"sha": "88753bf2fea2084e348c8d5fbad8ff22d9bd4f21", "filename": "libstdc++-v3/testsuite/experimental/propagate_const/requirements3.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements3.cc?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -21,6 +21,6 @@\n \n using std::experimental::propagate_const;\n \n-// { dg-error \"requires a class or a pointer to an object type\" \"\" { target *-*-* } 107 }\n-\n propagate_const<void (*)()> test1;\n+\n+// { dg-error \"requires a class or a pointer to an object type\" \"\" { target *-*-* } 0 }"}, {"sha": "84770257e7c0bfd03f69869097ecbd4df84363ad", "filename": "libstdc++-v3/testsuite/experimental/propagate_const/requirements4.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements4.cc?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -21,8 +21,8 @@\n \n using std::experimental::propagate_const;\n \n-// { dg-error \"requires a class or a pointer to an object type\" \"\" { target *-*-* } 107 }\n-// { dg-error \"invalid type\" \"\" { target *-*-* } 66 }\n-// { dg-error \"uninitialized reference member\" \"\" { target *-*-* } 112 }\n-\n propagate_const<int&> test1; // { dg-error \"use of deleted function\" }\n+\n+// { dg-error \"requires a class or a pointer to an object type\" \"\" { target *-*-* } 0 }\n+// { dg-prune-output \"invalid type\" }\n+// { dg-prune-output \"uninitialized reference member\" }"}, {"sha": "85a7c7b531ce928dba148d8ad307025abbd70672", "filename": "libstdc++-v3/testsuite/experimental/propagate_const/requirements5.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fpropagate_const%2Frequirements5.cc?ref=1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab", "patch": "@@ -21,6 +21,6 @@\n \n using std::experimental::propagate_const;\n \n-// { dg-error \"requires a class or a pointer to an object type\" \"\" { target *-*-* } 107 }\n-\n propagate_const<int[1]> test1;\n+\n+// { dg-error \"requires a class or a pointer to an object type\" \"\" { target *-*-* } 0 }"}]}