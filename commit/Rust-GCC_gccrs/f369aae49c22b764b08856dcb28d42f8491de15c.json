{"sha": "f369aae49c22b764b08856dcb28d42f8491de15c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM2OWFhZTQ5YzIyYjc2NGIwODg1NmRjYjI4ZDQyZjg0OTFkZTE1Yw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-07-26T19:31:30Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-07-26T19:31:30Z"}, "message": "* cfns.h: Rebuilt.\n\nFrom-SVN: r69833", "tree": {"sha": "9536e14713959cbc5c28965ae31dfc9500afa32c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9536e14713959cbc5c28965ae31dfc9500afa32c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f369aae49c22b764b08856dcb28d42f8491de15c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f369aae49c22b764b08856dcb28d42f8491de15c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f369aae49c22b764b08856dcb28d42f8491de15c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f369aae49c22b764b08856dcb28d42f8491de15c/comments", "author": null, "committer": null, "parents": [{"sha": "079167d393c2a6a5d7cc9afc70e6c25582968e9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/079167d393c2a6a5d7cc9afc70e6c25582968e9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/079167d393c2a6a5d7cc9afc70e6c25582968e9e"}], "stats": {"total": 484, "additions": 242, "deletions": 242}, "files": [{"sha": "4ac3accc00b3462571078690f7eb1c3b7473843d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f369aae49c22b764b08856dcb28d42f8491de15c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f369aae49c22b764b08856dcb28d42f8491de15c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f369aae49c22b764b08856dcb28d42f8491de15c", "patch": "@@ -1,5 +1,7 @@\n 2003-07-26  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\t* cfns.h: Rebuilt.\n+\n \t* cp-tree.h (begin_init_stmts, finish_init_stmts): Remove.\n \t(begin_global_stmt_expr, finish_global_stmt_expr): Remove.\n \t* init.c (begin_init_stmts): Make static. Return is_global"}, {"sha": "5dc71ce46cbf1842fd91d00bed2aefd63f3984fb", "filename": "gcc/cp/cfns.h", "status": "modified", "additions": 240, "deletions": 242, "changes": 482, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f369aae49c22b764b08856dcb28d42f8491de15c/gcc%2Fcp%2Fcfns.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f369aae49c22b764b08856dcb28d42f8491de15c/gcc%2Fcp%2Fcfns.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcfns.h?ref=f369aae49c22b764b08856dcb28d42f8491de15c", "patch": "@@ -1,5 +1,35 @@\n-/* ANSI-C code produced by gperf version 2.7.2 */\n-/* Command-line: gperf -o -L ANSI-C -C -E -k '1-6,$' -j1 -D -N libc_name_p -L ANSI-C cp/cfns.gperf  */\n+/* ANSI-C code produced by gperf version 3.0.1 */\n+/* Command-line: gperf -o -C -E -k '1-6,$' -j1 -D -N libc_name_p -L ANSI-C ../../gcc/gcc/cp/cfns.gperf  */\n+\n+#if !((' ' == 32) && ('!' == 33) && ('\"' == 34) && ('#' == 35) \\\n+      && ('%' == 37) && ('&' == 38) && ('\\'' == 39) && ('(' == 40) \\\n+      && (')' == 41) && ('*' == 42) && ('+' == 43) && (',' == 44) \\\n+      && ('-' == 45) && ('.' == 46) && ('/' == 47) && ('0' == 48) \\\n+      && ('1' == 49) && ('2' == 50) && ('3' == 51) && ('4' == 52) \\\n+      && ('5' == 53) && ('6' == 54) && ('7' == 55) && ('8' == 56) \\\n+      && ('9' == 57) && (':' == 58) && (';' == 59) && ('<' == 60) \\\n+      && ('=' == 61) && ('>' == 62) && ('?' == 63) && ('A' == 65) \\\n+      && ('B' == 66) && ('C' == 67) && ('D' == 68) && ('E' == 69) \\\n+      && ('F' == 70) && ('G' == 71) && ('H' == 72) && ('I' == 73) \\\n+      && ('J' == 74) && ('K' == 75) && ('L' == 76) && ('M' == 77) \\\n+      && ('N' == 78) && ('O' == 79) && ('P' == 80) && ('Q' == 81) \\\n+      && ('R' == 82) && ('S' == 83) && ('T' == 84) && ('U' == 85) \\\n+      && ('V' == 86) && ('W' == 87) && ('X' == 88) && ('Y' == 89) \\\n+      && ('Z' == 90) && ('[' == 91) && ('\\\\' == 92) && (']' == 93) \\\n+      && ('^' == 94) && ('_' == 95) && ('a' == 97) && ('b' == 98) \\\n+      && ('c' == 99) && ('d' == 100) && ('e' == 101) && ('f' == 102) \\\n+      && ('g' == 103) && ('h' == 104) && ('i' == 105) && ('j' == 106) \\\n+      && ('k' == 107) && ('l' == 108) && ('m' == 109) && ('n' == 110) \\\n+      && ('o' == 111) && ('p' == 112) && ('q' == 113) && ('r' == 114) \\\n+      && ('s' == 115) && ('t' == 116) && ('u' == 117) && ('v' == 118) \\\n+      && ('w' == 119) && ('x' == 120) && ('y' == 121) && ('z' == 122) \\\n+      && ('{' == 123) && ('|' == 124) && ('}' == 125) && ('~' == 126))\n+/* The character set is not based on ISO-646.  */\n+#error \"gperf generated tables don't work with this execution character set. Please report a bug to <bug-gnu-gperf@gnu.org>.\"\n+#endif\n+\n+#line 1 \"../../gcc/gcc/cp/cfns.gperf\"\n+\n #ifdef __GNUC__\n __inline\n #endif\n@@ -8,7 +38,7 @@ static unsigned int hash (const char *, unsigned int);\n __inline\n #endif\n const char * libc_name_p (const char *, unsigned int);\n-/* maximum key range = 480, duplicates = 1 */\n+/* maximum key range = 391, duplicates = 0 */\n \n #ifdef __GNUC__\n __inline\n@@ -22,48 +52,52 @@ hash (register const char *str, register unsigned int len)\n {\n   static const unsigned short asso_values[] =\n     {\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483,   0,   0,\n-        1, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 106,  76,   0,\n-       21,   0,   0,  11,  43,  26,   0,  66, 106,  17,\n-      121,   0,  17,   0,   7,   0,   3,  19,  49,   1,\n-        3,  41, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483, 483, 483, 483, 483,\n-      483, 483, 483, 483, 483, 483\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400,   0,   0,\n+        1, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400,  28,  90,   0,\n+       95,   0,  51,  93, 114,  26, 109, 124,   5,   1,\n+        6,  13,  37, 128,   3,   0,   0,  49,  38,   0,\n+      104,  45,   0, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400, 400, 400, 400,\n+      400, 400, 400, 400, 400, 400, 400\n     };\n   register int hval = len;\n \n   switch (hval)\n     {\n       default:\n-      case 6:\n-        hval += asso_values[(unsigned char)str[5]];\n+        hval += asso_values[(unsigned char)str[5]+1];\n+      /*FALLTHROUGH*/\n       case 5:\n         hval += asso_values[(unsigned char)str[4]];\n+      /*FALLTHROUGH*/\n       case 4:\n         hval += asso_values[(unsigned char)str[3]];\n+      /*FALLTHROUGH*/\n       case 3:\n         hval += asso_values[(unsigned char)str[2]];\n+      /*FALLTHROUGH*/\n       case 2:\n         hval += asso_values[(unsigned char)str[1]];\n+      /*FALLTHROUGH*/\n       case 1:\n         hval += asso_values[(unsigned char)str[0]];\n         break;\n@@ -82,233 +116,212 @@ libc_name_p (register const char *str, register unsigned int len)\n       TOTAL_KEYWORDS = 156,\n       MIN_WORD_LENGTH = 3,\n       MAX_WORD_LENGTH = 10,\n-      MIN_HASH_VALUE = 3,\n-      MAX_HASH_VALUE = 482\n+      MIN_HASH_VALUE = 9,\n+      MAX_HASH_VALUE = 399\n     };\n \n   static const char * const wordlist[] =\n     {\n+      \"wcsstr\",\n+      \"strstr\",\n       \"cos\",\n-      \"feof\",\n-      \"free\",\n-      \"sqrt\",\n-      \"wcsrtombs\",\n-      \"pow\",\n       \"towctrans\",\n-      \"wcsstr\",\n+      \"memmove\",\n+      \"wcstol\",\n+      \"wcscoll\",\n       \"wcstombs\",\n-      \"strstr\",\n-      \"ferror\",\n-      \"wcsxfrm\",\n-      \"wcsftime\",\n-      \"exit\",\n-      \"exp\",\n-      \"modf\",\n-      \"strxfrm\",\n-      \"wmemset\",\n-      \"memset\",\n-      \"strftime\",\n-      \"frexp\",\n+      \"strtol\",\n+      \"strcoll\",\n+      \"wcslen\",\n       \"time\",\n       \"ctime\",\n-      \"wcstod\",\n-      \"fwide\",\n-      \"wcscmp\",\n-      \"wmemmove\",\n-      \"strtod\",\n-      \"fmod\",\n-      \"wcschr\",\n+      \"strlen\",\n+      \"iswctype\",\n+      \"wmemchr\",\n       \"wcsrchr\",\n-      \"strcmp\",\n-      \"wctype\",\n-      \"toupper\",\n-      \"towupper\",\n-      \"strchr\",\n+      \"ceil\",\n+      \"sin\",\n       \"strrchr\",\n+      \"tan\",\n+      \"iscntrl\",\n+      \"acos\",\n+      \"wmemmove\",\n+      \"wcsrtombs\",\n+      \"wctrans\",\n       \"wmemcmp\",\n-      \"iswctype\",\n-      \"gmtime\",\n-      \"difftime\",\n-      \"btowc\",\n-      \"iswprint\",\n-      \"iswxdigit\",\n-      \"cosh\",\n-      \"memcmp\",\n-      \"wmemchr\",\n-      \"isupper\",\n-      \"iswupper\",\n-      \"iswdigit\",\n-      \"memchr\",\n-      \"isxdigit\",\n-      \"wmemcpy\",\n-      \"mbtowc\",\n-      \"setbuf\",\n-      \"mbstowcs\",\n+      \"pow\",\n+      \"atol\",\n+      \"wcsncmp\",\n+      \"memset\",\n+      \"free\",\n+      \"strncmp\",\n+      \"wmemset\",\n+      \"wcsspn\",\n+      \"wcstoul\",\n+      \"strspn\",\n+      \"strtoul\",\n+      \"asctime\",\n+      \"atan2\",\n+      \"asin\",\n+      \"atan\",\n+      \"ferror\",\n+      \"iswalnum\",\n+      \"wcscat\",\n+      \"realloc\",\n+      \"strcat\",\n       \"wcscpy\",\n-      \"memmove\",\n-      \"vswprintf\",\n-      \"acos\",\n-      \"mbrtowc\",\n-      \"wcrtomb\",\n-      \"mbsrtowcs\",\n-      \"atof\",\n+      \"memcpy\",\n       \"strcpy\",\n-      \"setlocale\",\n-      \"wcscat\",\n-      \"isdigit\",\n-      \"log10\",\n       \"tolower\",\n       \"floor\",\n+      \"iswcntrl\",\n+      \"atoi\",\n+      \"clearerr\",\n+      \"swscanf\",\n+      \"wcsncat\",\n+      \"islower\",\n+      \"strncat\",\n+      \"btowc\",\n+      \"localtime\",\n+      \"wctomb\",\n+      \"isalnum\",\n+      \"isprint\",\n+      \"mblen\",\n+      \"wcstod\",\n+      \"log10\",\n+      \"strtod\",\n+      \"wcrtomb\",\n+      \"abs\",\n+      \"setlocale\",\n+      \"wcschr\",\n+      \"mbrlen\",\n+      \"memchr\",\n+      \"strchr\",\n+      \"labs\",\n+      \"iswpunct\",\n+      \"exit\",\n+      \"sqrt\",\n+      \"swprintf\",\n+      \"wctype\",\n+      \"mbsrtowcs\",\n+      \"wcscspn\",\n+      \"getenv\",\n+      \"strcspn\",\n       \"towlower\",\n-      \"strcat\",\n-      \"log\",\n-      \"mktime\",\n-      \"wcstoul\",\n-      \"fseek\",\n-      \"memcpy\",\n+      \"atof\",\n       \"wcstok\",\n-      \"strtoul\",\n-      \"wcscspn\",\n-      \"islower\",\n-      \"div\",\n-      \"iswlower\",\n-      \"atexit\",\n+      \"localeconv\",\n       \"strtok\",\n-      \"setvbuf\",\n-      \"strcspn\",\n-      \"isspace\",\n+      \"calloc\",\n+      \"malloc\",\n+      \"isalpha\",\n+      \"iswlower\",\n       \"iswspace\",\n-      \"asctime\",\n-      \"wctob\",\n-      \"wcsncmp\",\n-      \"atoi\",\n-      \"ldexp\",\n-      \"strncmp\",\n-      \"wcspbrk\",\n-      \"wctomb\",\n-      \"swprintf\",\n-      \"sprintf\",\n-      \"strpbrk\",\n-      \"abs\",\n+      \"wcsxfrm\",\n+      \"signal\",\n+      \"strxfrm\",\n+      \"wcsftime\",\n+      \"feof\",\n+      \"strftime\",\n+      \"wcscmp\",\n       \"fabs\",\n-      \"wcsncpy\",\n-      \"ispunct\",\n-      \"iswpunct\",\n-      \"strncpy\",\n-      \"iswgraph\",\n-      \"isprint\",\n-      \"isgraph\",\n-      \"wcscoll\",\n-      \"wcstol\",\n+      \"memcmp\",\n+      \"strcmp\",\n       \"vsprintf\",\n-      \"strcoll\",\n-      \"strtol\",\n+      \"fwide\",\n+      \"gmtime\",\n+      \"sprintf\",\n+      \"exp\",\n+      \"wmemcpy\",\n+      \"iswprint\",\n       \"sscanf\",\n-      \"clearerr\",\n-      \"swscanf\",\n-      \"sinh\",\n-      \"wcsncat\",\n-      \"getenv\",\n-      \"ceil\",\n-      \"clock\",\n-      \"wctrans\",\n-      \"strncat\",\n+      \"wcsncpy\",\n+      \"strncpy\",\n+      \"isspace\",\n+      \"toupper\",\n+      \"wctob\",\n+      \"div\",\n+      \"mbtowc\",\n       \"ldiv\",\n-      \"iswcntrl\",\n-      \"wcsspn\",\n-      \"iscntrl\",\n-      \"sin\",\n-      \"strspn\",\n-      \"mbsinit\",\n-      \"longjmp\",\n+      \"log\",\n+      \"mktime\",\n+      \"isupper\",\n+      \"atexit\",\n+      \"modf\",\n+      \"mbstowcs\",\n+      \"mbrtowc\",\n+      \"ispunct\",\n+      \"iswalpha\",\n+      \"setvbuf\",\n       \"rand\",\n       \"srand\",\n-      \"labs\",\n+      \"frexp\",\n+      \"towupper\",\n+      \"mbsinit\",\n+      \"cosh\",\n+      \"vswprintf\",\n+      \"iswupper\",\n+      \"wcspbrk\",\n+      \"fmod\",\n+      \"strpbrk\",\n+      \"sinh\",\n       \"tanh\",\n-      \"calloc\",\n-      \"atol\",\n-      \"localtime\",\n-      \"realloc\",\n-      \"malloc\",\n-      \"atan2\",\n-      \"tan\",\n-      \"wcslen\",\n-      \"strlen\",\n-      \"iswalpha\",\n-      \"localeconv\",\n-      \"asin\",\n-      \"iswalnum\",\n-      \"isalnum\",\n-      \"isalpha\",\n-      \"mblen\",\n-      \"mbrlen\",\n-      \"atan\",\n-      \"signal\"\n+      \"iswdigit\",\n+      \"clock\",\n+      \"longjmp\",\n+      \"ldexp\",\n+      \"setbuf\",\n+      \"fseek\",\n+      \"iswgraph\",\n+      \"difftime\",\n+      \"iswxdigit\",\n+      \"isdigit\",\n+      \"isxdigit\",\n+      \"isgraph\"\n     };\n \n   static const short lookup[] =\n     {\n-        -1,   -1,   -1,    0,    1,   -1,   -1,   -1,\n-        -1,   -1,   -1,    2,   -1,   -1,   -1,   -1,\n-        -1,    3,   -1,   -1,    4,   -1,    5,    6,\n-         7,   -1,   -1,   -1,   -1,    8,   -1,   -1,\n-        -1,    9,   10,   11,   -1,   -1,   12,   13,\n-        14,   -1,   15,   -1,   16,   17,   18,   19,\n-        -1,   20,   21,   22,   23,   24,   -1,   -1,\n-        -1,   -1,   25,   -1,   26,   27,   -1,   28,\n-        29,   30,   -1,   31,   32,   -1,   33,   -1,\n-        34,   35,   36,   -1,   37,   -1,   -1,   38,\n-        39,   -1,   -1,   -1,   40,   41,   -1,   -1,\n-        42,   43,   44,   45,   46,   47,   -1,   48,\n-        49,   50,   51,   -1,   52,   -1,   -1,   53,\n-        54,   55,   56,   57,   -1,   58,   59, -273,\n-        62,   63,   -1,   64,  -96,   -2,   65,   66,\n-        67,   -1,   68,   -1,   69,   70,   71,   -1,\n-        72,   -1,   -1,   73,   -1,   -1,   -1,   74,\n-        75,   76,   -1,   77,   -1,   -1,   78,   -1,\n-        -1,   79,   80,   81,   82,   83,   84,   85,\n-        -1,   -1,   86,   87,   88,   -1,   89,   90,\n-        -1,   91,   -1,   92,   -1,   93,   -1,   -1,\n-        -1,   94,   -1,   -1,   95,   -1,   96,   -1,\n-        -1,   -1,   -1,   97,   98,   99,   -1,  100,\n-        -1,  101,  102,  103,   -1,   -1,   -1,   -1,\n-        -1,  104,   -1,  105,  106,   -1,   -1,   -1,\n-        -1,   -1,  107,   -1,   -1,   -1,   -1,  108,\n-        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n-        -1,  109,   -1,   -1,  110,   -1,  111,   -1,\n-        -1,   -1,   -1,   -1,  112,  113,   -1,  114,\n-        -1,  115,  116,  117,   -1,  118,  119,  120,\n-        -1,   -1,  121,  122,   -1,  123,   -1,  124,\n-        -1,   -1,   -1,   -1,   -1,   -1,   -1,  125,\n-        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n-        -1,  126,  127,   -1,   -1,   -1,  128,  129,\n-        -1,   -1,   -1,  130,  131,   -1,   -1,  132,\n-       133,  134,   -1,   -1,   -1,   -1,   -1,   -1,\n-        -1,   -1,   -1,   -1,  135,   -1,   -1,   -1,\n-        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n-        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n-        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n-       136,   -1,   -1,   -1,  137,  138,   -1,   -1,\n-        -1,   -1,  139,   -1,  140,   -1,   -1,   -1,\n-        -1,   -1,   -1,   -1,   -1,  141,   -1,  142,\n-        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n-        -1,   -1,  143,  144,   -1,   -1,   -1,   -1,\n-        -1,   -1,   -1,   -1,  145,   -1,   -1,   -1,\n-        -1,   -1,  146,   -1,   -1,   -1,   -1,   -1,\n-        -1,  147,  148,   -1,   -1,   -1,   -1,   -1,\n-        -1,  149,   -1,   -1,   -1,   -1,   -1,   -1,\n-        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n-        -1,   -1,  150,   -1,   -1,   -1,   -1,   -1,\n-        -1,   -1,   -1,  151,   -1,   -1,   -1,   -1,\n-        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n-        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n-        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n-        -1,   -1,   -1,   -1,   -1,   -1,  152,   -1,\n-        -1,   -1,   -1,   -1,   -1,   -1,  153,   -1,\n-        -1,   -1,   -1,   -1,   -1,  154,   -1,   -1,\n-        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n-        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n-        -1,   -1,  155\n+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,   0,\n+       -1,  -1,   1,  -1,  -1,  -1,   2,  -1,  -1,  -1,\n+       -1,  -1,   3,   4,  -1,   5,   6,   7,   8,   9,\n+       10,  11,  12,  13,  14,  -1,  -1,  -1,  15,  16,\n+       17,  18,  19,  20,  21,  22,  -1,  -1,  23,  24,\n+       -1,  25,  26,  27,  -1,  28,  29,  30,  31,  32,\n+       33,  -1,  34,  35,  -1,  36,  37,  38,  -1,  39,\n+       40,  -1,  41,  -1,  -1,  -1,  -1,  -1,  -1,  42,\n+       -1,  43,  -1,  44,  -1,  45,  46,  -1,  47,  -1,\n+       48,  49,  50,  51,  52,  -1,  -1,  53,  54,  55,\n+       -1,  -1,  -1,  56,  -1,  57,  58,  -1,  59,  60,\n+       61,  62,  63,  64,  65,  -1,  66,  67,  -1,  68,\n+       -1,  69,  70,  71,  72,  73,  74,  75,  -1,  -1,\n+       -1,  -1,  -1,  76,  77,  78,  -1,  -1,  79,  80,\n+       81,  82,  -1,  83,  84,  -1,  85,  86,  87,  -1,\n+       88,  89,  90,  91,  -1,  -1,  -1,  92,  -1,  93,\n+       -1,  94,  -1,  95,  -1,  96,  97,  -1,  98,  -1,\n+       99, 100, 101, 102, 103, 104, 105, 106, 107, 108,\n+       -1, 109, 110, 111, 112,  -1, 113,  -1,  -1, 114,\n+       -1,  -1,  -1, 115,  -1,  -1,  -1, 116, 117,  -1,\n+      118,  -1,  -1,  -1,  -1, 119, 120, 121,  -1, 122,\n+      123,  -1,  -1, 124,  -1, 125, 126,  -1, 127,  -1,\n+      128,  -1,  -1, 129, 130,  -1,  -1,  -1,  -1,  -1,\n+       -1, 131, 132,  -1,  -1,  -1,  -1, 133, 134, 135,\n+       -1,  -1,  -1,  -1,  -1, 136,  -1, 137,  -1,  -1,\n+       -1, 138,  -1,  -1,  -1,  -1,  -1,  -1, 139, 140,\n+       -1, 141,  -1,  -1, 142,  -1, 143,  -1,  -1, 144,\n+       -1, 145,  -1,  -1,  -1,  -1, 146,  -1,  -1,  -1,\n+       -1,  -1,  -1, 147,  -1,  -1,  -1,  -1,  -1, 148,\n+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,\n+       -1,  -1,  -1,  -1, 149,  -1,  -1,  -1,  -1,  -1,\n+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,\n+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,\n+       -1,  -1,  -1,  -1, 150,  -1,  -1,  -1,  -1,  -1,\n+      151,  -1,  -1, 152,  -1,  -1,  -1,  -1,  -1,  -1,\n+       -1,  -1,  -1,  -1,  -1,  -1, 153,  -1,  -1,  -1,\n+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,\n+       -1,  -1,  -1, 154,  -1,  -1,  -1,  -1,  -1,  -1,\n+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,\n+       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 155\n     };\n \n   if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)\n@@ -326,21 +339,6 @@ libc_name_p (register const char *str, register unsigned int len)\n               if (*str == *s && !strcmp (str + 1, s + 1))\n                 return s;\n             }\n-          else if (index < -TOTAL_KEYWORDS)\n-            {\n-              register int offset = - 1 - TOTAL_KEYWORDS - index;\n-              register const char * const *wordptr = &wordlist[TOTAL_KEYWORDS + lookup[offset]];\n-              register const char * const *wordendptr = wordptr + -lookup[offset + 1];\n-\n-              while (wordptr < wordendptr)\n-                {\n-                  register const char *s = *wordptr;\n-\n-                  if (*str == *s && !strcmp (str + 1, s + 1))\n-                    return s;\n-                  wordptr++;\n-                }\n-            }\n         }\n     }\n   return 0;"}]}