{"sha": "c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZhYmU5NGRjMTJlNGY3ZTU2YjU0MzlhMDgxZTBiMTFjNjk1MGQ5Mg==", "commit": {"author": {"name": "Thomas Koenig", "email": "Thomas.Koenig@online.de", "date": "2005-04-12T22:57:10Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2005-04-12T22:57:10Z"}, "message": "re PR libfortran/19106 ([4.0 only] segfault in executable for print *,sum(a,dim=2,mask=a>0))\n\n2005-04-13  Thomas Koenig  <Thomas.Koenig@online.de>\n\n        PR libfortran/19106\n        * m4/iforeach.c (name`'rtype_qual`_'atype_code):  Add TODO\n        that setting correct strides is a front end job.\n        (`m'name`'rtype_qual`_'atype_code):  Likewise.  If mask has\n        a lowest stride of 0, adjust to 1.\n        * m4/ifunction.c (name`'rtype_qual`_'atype_code):  Add TODO\n        that setting correct strides is a front end job.\n        (`m'name`'rtype_qual`_'atype_code):  Likewise.  If mask has\n        a lowest stride of 0, adjust to 1.\n        * maxloc0_4_i4.c: Regenerated\n        * maxloc0_4_i8.c: Regenerated\n        * maxloc0_4_r4.c: Regenerated\n        * maxloc0_4_r8.c: Regenerated\n        * maxloc0_8_i4.c: Regenerated\n        * maxloc0_8_i8.c: Regenerated\n        * maxloc0_8_r4.c: Regenerated\n        * maxloc0_8_r8.c: Regenerated\n        * maxloc1_4_i4.c: Regenerated\n        * maxloc1_4_i8.c: Regenerated\n        * maxloc1_4_r4.c: Regenerated\n        * maxloc1_4_r8.c: Regenerated\n        * maxloc1_8_i4.c: Regenerated\n        * maxloc1_8_i8.c: Regenerated\n        * maxloc1_8_r4.c: Regenerated\n        * maxloc1_8_r8.c: Regenerated\n        * maxval_i4.c: Regenerated\n        * maxval_i8.c: Regenerated\n        * maxval_r4.c: Regenerated\n        * maxval_r8.c: Regenerated\n        * minloc0_4_i4.c: Regenerated\n        * minloc0_4_i8.c: Regenerated\n        * minloc0_4_r4.c: Regenerated\n        * minloc0_4_r8.c: Regenerated\n        * minloc0_8_i4.c: Regenerated\n        * minloc0_8_i8.c: Regenerated\n        * minloc0_8_r4.c: Regenerated\n        * minloc0_8_r8.c: Regenerated\n        * minloc1_4_i4.c: Regenerated\n        * minloc1_4_i8.c: Regenerated\n        * minloc1_4_r4.c: Regenerated\n        * minloc1_4_r8.c: Regenerated\n        * minloc1_8_i4.c: Regenerated\n        * minloc1_8_i8.c: Regenerated\n        * minloc1_8_r4.c: Regenerated\n        * minloc1_8_r8.c: Regenerated\n        * minval_i4.c: Regenerated\n        * minval_i8.c: Regenerated\n        * minval_r4.c: Regenerated\n        * minval_r8.c: Regenerated\n        * product_c4.c: Regenerated\n        * product_c8.c: Regenerated\n        * product_i4.c: Regenerated\n        * product_i8.c: Regenerated\n        * product_r4.c: Regenerated\n        * product_r8.c: Regenerated\n        * sum_c4.c: Regenerated\n        * sum_c8.c: Regenerated\n        * sum_i4.c: Regenerated\n        * sum_i8.c: Regenerated\n        * sum_r4.c: Regenerated\n        * sum_r8.c: Regenerated\n\n2005-04-13  Thomas Koenig  <Thomas.Koenig@online.de>\n\n        PR libfortran/19016\n        * gfortran.fortran-torture/execute/intrinsic_mmloc.f90:\n        Add tests with mask generated by expression.\n        * gfortran.fortran-torture/execute/intrinsic_mmval.f90:  Likewise.\n        * gfortran.fortran-torture/execute/intrinsic_product.f90:  Likewise.\n        * gfortran.fortran-torture/execute/intrinsic_sum.f90:  Likewise.\n\nFrom-SVN: r98052", "tree": {"sha": "58dbc9e3155db4ae6e94c97d110b72a66746c386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58dbc9e3155db4ae6e94c97d110b72a66746c386"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/comments", "author": null, "committer": null, "parents": [{"sha": "b3b51ded80e74bced9ece3be87ff3bfc05bc7b70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3b51ded80e74bced9ece3be87ff3bfc05bc7b70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3b51ded80e74bced9ece3be87ff3bfc05bc7b70"}], "stats": {"total": 292, "additions": 287, "deletions": 5}, "files": [{"sha": "6c1d8c4b54533b53a7ee4d126905b7ca671ae7b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -1,3 +1,12 @@\n+2005-04-13  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR libfortran/19016\n+\t* gfortran.fortran-torture/execute/intrinsic_mmloc.f90:\n+\tAdd tests with mask generated by expression.\n+\t* gfortran.fortran-torture/execute/intrinsic_mmval.f90:  Likewise.\n+\t* gfortran.fortran-torture/execute/intrinsic_product.f90:  Likewise.\n+\t* gfortran.fortran-torture/execute/intrinsic_sum.f90:  Likewise.\n+\n 2005-04-12  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \tPR middle-end/20917"}, {"sha": "03273e1b22c415a61bb21c8ec71cf6fe3b9d8bf5", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/intrinsic_mmloc.f90", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_mmloc.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_mmloc.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_mmloc.f90?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -3,11 +3,12 @@ program testmmloc\n    implicit none\n    integer, dimension (3, 3) :: a\n    integer, dimension (3) :: b\n-   logical, dimension (3, 3) :: m\n+   logical, dimension (3, 3) :: m, tr\n    integer i\n    character(len=10) line\n \n    a = reshape ((/1, 2, 3, 5, 4, 6, 9, 8, 7/), (/3, 3/));\n+   tr = .true.\n \n    b = minloc (a, 1)\n    if (b(1) .ne. 1) call abort\n@@ -27,6 +28,10 @@ program testmmloc\n    if (b(1) .ne. 2) call abort\n    if (b(2) .ne. 2) call abort\n    if (b(3) .ne. 3) call abort\n+   b = minloc (a, 1, m .and. tr)\n+   if (b(1) .ne. 2) call abort\n+   if (b(2) .ne. 2) call abort\n+   if (b(3) .ne. 3) call abort\n    b = -1\n    write (line, 9000) minloc(a, 1, m)\n    read (line, 9000) b\n@@ -47,6 +52,9 @@ program testmmloc\n    b(1:2) = minloc(a, mask=m)\n    if (b(1) .ne. 2) call abort\n    if (b(2) .ne. 1) call abort\n+   b(1:2) = minloc(a, mask=m .and. tr)\n+   if (b(1) .ne. 2) call abort\n+   if (b(2) .ne. 1) call abort\n    b = -1\n    write (line, 9000) minloc(a, mask=m)\n    read (line, 9000) b\n@@ -72,6 +80,10 @@ program testmmloc\n    if (b(1) .ne. 3) call abort\n    if (b(2) .ne. 3) call abort\n    if (b(3) .ne. 2) call abort\n+   b = maxloc (a, 1, m .and. tr)\n+   if (b(1) .ne. 3) call abort\n+   if (b(2) .ne. 3) call abort\n+   if (b(3) .ne. 2) call abort\n    b = -1\n    write (line, 9000) maxloc(a, 1, m)\n    read (line, 9000) b\n@@ -91,6 +103,9 @@ program testmmloc\n    b(1:2) = maxloc(a, mask=m)\n    if (b(1) .ne. 2) call abort\n    if (b(2) .ne. 3) call abort\n+   b(1:2) = maxloc(a, mask=m .and. tr)\n+   if (b(1) .ne. 2) call abort\n+   if (b(2) .ne. 3) call abort\n    b = -1\n    write (line, 9000) maxloc(a, mask=m)\n    read (line, 9000) b"}, {"sha": "cfd1a5b2d743085297d7666f9bc0f74d10974962", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/intrinsic_mmval.f90", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_mmval.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_mmval.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_mmval.f90?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -3,12 +3,14 @@ program testmmval\n    implicit none\n    integer, dimension (3, 3) :: a\n    integer, dimension (3) :: b\n-   logical, dimension (3, 3) :: m\n+   logical, dimension (3, 3) :: m, tr\n    integer i\n    character (len=9) line\n \n    a = reshape ((/1, 2, 3, 5, 4, 6, 9, 8, 7/), (/3, 3/));\n \n+   tr = .true.\n+\n    b = minval (a, 1)\n    if (any(b .ne. (/1, 4, 7/))) call abort\n    write (line, 9000) minval (a, 1)\n@@ -19,6 +21,8 @@ program testmmval\n    m(1, 2) = .false.\n    b = minval (a, 1, m)\n    if (any(b .ne. (/2, 4, 7/))) call abort\n+   b = minval (a, 1, m .and. tr)\n+   if (any(b .ne. (/2, 4, 7/))) call abort\n    write (line, 9000) minval(a, 1, m)\n    if (line .ne. '  2  4  7') call abort\n \n@@ -32,6 +36,8 @@ program testmmval\n    m(1, 3) = .false.\n    b = maxval (a, 1, m)\n    if (any(b .ne. (/3, 6, 8/))) call abort\n+   b = maxval (a, 1, m .and. tr)\n+   if (any(b .ne. (/3, 6, 8/))) call abort\n    write (line, 9000) maxval(a, 1, m)\n    if (line .ne. '  3  6  8') call abort\n "}, {"sha": "6ada0a4219181d9c1c78af5a432d4ef95e772352", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/intrinsic_product.f90", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_product.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_product.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_product.f90?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -3,13 +3,15 @@ program testproduct\n    implicit none\n    integer, dimension (3, 3) :: a\n    integer, dimension (3) :: b\n-   logical, dimension (3, 3) :: m\n+   logical, dimension (3, 3) :: m, tr\n    character(len=12) line\n \n    a = reshape ((/1, 2, 3, 4, 5, 6, 7, 8, 9/), (/3, 3/));\n \n    b = product (a, 1)\n \n+   tr = .true.\n+\n    if (any(b .ne. (/6, 120, 504/))) call abort\n \n    write (line, 9000) product(a,1)\n@@ -23,15 +25,20 @@ program testproduct\n    m = .true.\n    m(1, 1) = .false.\n    m(2, 1) = .false.\n+\n    b = product (a, 2, m)\n+   if (any(b .ne. (/28, 40, 162/))) call abort\n \n+   b = product (a, 2, m .and. tr)\n    if (any(b .ne. (/28, 40, 162/))) call abort\n \n    write (line, 9000) product(a, 2, m)\n    if (line .ne. '  28  40 162') call abort\n \n    if (product (a, mask=m) .ne. 181440) call abort\n \n+   if (product (a, mask=m .and. tr) .ne. 181440) call abort\n+\n    write (line, 9010) product(a, mask=m)\n    if (line .ne. '181440') call abort\n "}, {"sha": "879fa0320dd13e86390b2e5a62092eb3522eca78", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/intrinsic_sum.f90", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_sum.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_sum.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_sum.f90?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -3,12 +3,14 @@ program testforall\n    implicit none\n    integer, dimension (3, 3) :: a\n    integer, dimension (3) :: b\n-   logical, dimension (3, 3) :: m\n+   logical, dimension (3, 3) :: m, tr\n    integer i\n    character(len=9) line\n \n    a = reshape ((/1, 2, 3, 4, 5, 6, 7, 8, 9/), (/3, 3/));\n \n+   tr = .true.\n+\n    if (sum(a) .ne. 45) call abort\n    write (line, 9000) sum(a)\n    if (line .ne. ' 45      ') call abort\n@@ -24,6 +26,7 @@ program testforall\n    m(2, 1) = .false.\n \n    if (sum (a, mask=m) .ne. 42) call abort\n+   if (sum (a, mask=m .and. tr) .ne. 42) call abort\n \n    write(line, 9000) sum (a, mask=m)\n    if (line .ne. ' 42      ') call abort\n@@ -32,6 +35,11 @@ program testforall\n    if (b(1) .ne. 11) call abort\n    if (b(2) .ne. 13) call abort\n    if (b(3) .ne. 18) call abort\n+\n+   b = sum (a, 2, m .and. tr)\n+   if (b(1) .ne. 11) call abort\n+   if (b(2) .ne. 13) call abort\n+   if (b(3) .ne. 18) call abort\n    write (line, 9000) sum (a, 2, m)\n    if (line .ne. ' 11 13 18') call abort\n "}, {"sha": "327d42d6f227161ace93f821c07bed02ee93825a", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -1,3 +1,67 @@\n+2005-04-13  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR libfortran/19106\n+\t* m4/iforeach.c (name`'rtype_qual`_'atype_code):  Add TODO\n+\tthat setting correct strides is a front end job.\n+\t(`m'name`'rtype_qual`_'atype_code):  Likewise.  If mask has\n+\ta lowest stride of 0, adjust to 1.\n+\t* m4/ifunction.c (name`'rtype_qual`_'atype_code):  Add TODO\n+\tthat setting correct strides is a front end job.\n+\t(`m'name`'rtype_qual`_'atype_code):  Likewise.  If mask has\n+\ta lowest stride of 0, adjust to 1.\n+\t* maxloc0_4_i4.c: Regenerated\n+\t* maxloc0_4_i8.c: Regenerated\n+\t* maxloc0_4_r4.c: Regenerated\n+\t* maxloc0_4_r8.c: Regenerated\n+\t* maxloc0_8_i4.c: Regenerated\n+\t* maxloc0_8_i8.c: Regenerated\n+\t* maxloc0_8_r4.c: Regenerated\n+\t* maxloc0_8_r8.c: Regenerated\n+\t* maxloc1_4_i4.c: Regenerated\n+\t* maxloc1_4_i8.c: Regenerated\n+\t* maxloc1_4_r4.c: Regenerated\n+\t* maxloc1_4_r8.c: Regenerated\n+\t* maxloc1_8_i4.c: Regenerated\n+\t* maxloc1_8_i8.c: Regenerated\n+\t* maxloc1_8_r4.c: Regenerated\n+\t* maxloc1_8_r8.c: Regenerated\n+\t* maxval_i4.c: Regenerated\n+\t* maxval_i8.c: Regenerated\n+\t* maxval_r4.c: Regenerated\n+\t* maxval_r8.c: Regenerated\n+\t* minloc0_4_i4.c: Regenerated\n+\t* minloc0_4_i8.c: Regenerated\n+\t* minloc0_4_r4.c: Regenerated\n+\t* minloc0_4_r8.c: Regenerated\n+\t* minloc0_8_i4.c: Regenerated\n+\t* minloc0_8_i8.c: Regenerated\n+\t* minloc0_8_r4.c: Regenerated\n+\t* minloc0_8_r8.c: Regenerated\n+\t* minloc1_4_i4.c: Regenerated\n+\t* minloc1_4_i8.c: Regenerated\n+\t* minloc1_4_r4.c: Regenerated\n+\t* minloc1_4_r8.c: Regenerated\n+\t* minloc1_8_i4.c: Regenerated\n+\t* minloc1_8_i8.c: Regenerated\n+\t* minloc1_8_r4.c: Regenerated\n+\t* minloc1_8_r8.c: Regenerated\n+\t* minval_i4.c: Regenerated\n+\t* minval_i8.c: Regenerated\n+\t* minval_r4.c: Regenerated\n+\t* minval_r8.c: Regenerated\n+\t* product_c4.c: Regenerated\n+\t* product_c8.c: Regenerated\n+\t* product_i4.c: Regenerated\n+\t* product_i8.c: Regenerated\n+\t* product_r4.c: Regenerated\n+\t* product_r8.c: Regenerated\n+\t* sum_c4.c: Regenerated\n+\t* sum_c8.c: Regenerated\n+\t* sum_i4.c: Regenerated\n+\t* sum_i8.c: Regenerated\n+\t* sum_r4.c: Regenerated\n+\t* sum_r8.c: Regenerated\n+\n 2005-04-10  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR libfortran/20788"}, {"sha": "94e2ec554bfb5389ae3e3ec69f47db195957b1a3", "filename": "libgfortran/generated/maxloc0_4_i4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -195,6 +195,9 @@ mmaxloc0_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   dstride = retarray->dim[0].stride;\n   dest = retarray->data;\n   for (n = 0; n < rank; n++)"}, {"sha": "85e0ea5c73e49cb8bd4d6e27ee757519a6e9629a", "filename": "libgfortran/generated/maxloc0_4_i8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -195,6 +195,9 @@ mmaxloc0_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 *array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   dstride = retarray->dim[0].stride;\n   dest = retarray->data;\n   for (n = 0; n < rank; n++)"}, {"sha": "14f64e4d9bf050d19584c9cc285f1731ec1c7725", "filename": "libgfortran/generated/maxloc0_4_r4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -195,6 +195,9 @@ mmaxloc0_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 *array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   dstride = retarray->dim[0].stride;\n   dest = retarray->data;\n   for (n = 0; n < rank; n++)"}, {"sha": "caa3388e490fbc19f0851d515cd1bfc58b449275", "filename": "libgfortran/generated/maxloc0_4_r8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -195,6 +195,9 @@ mmaxloc0_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 *array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   dstride = retarray->dim[0].stride;\n   dest = retarray->data;\n   for (n = 0; n < rank; n++)"}, {"sha": "6999ffab0f5e1818b2d0da1d3d693b65b7232488", "filename": "libgfortran/generated/maxloc0_8_i4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -195,6 +195,9 @@ mmaxloc0_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 *array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   dstride = retarray->dim[0].stride;\n   dest = retarray->data;\n   for (n = 0; n < rank; n++)"}, {"sha": "614e6dfcd4f512b42babe9616415e3ae6e409c91", "filename": "libgfortran/generated/maxloc0_8_i8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -195,6 +195,9 @@ mmaxloc0_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   dstride = retarray->dim[0].stride;\n   dest = retarray->data;\n   for (n = 0; n < rank; n++)"}, {"sha": "b9e19501572de5556617ee6e17307f34048c010f", "filename": "libgfortran/generated/maxloc0_8_r4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -195,6 +195,9 @@ mmaxloc0_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 *array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   dstride = retarray->dim[0].stride;\n   dest = retarray->data;\n   for (n = 0; n < rank; n++)"}, {"sha": "b7e216b8452a4afdf77991a00acf82df91161a58", "filename": "libgfortran/generated/maxloc0_8_r8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -195,6 +195,9 @@ mmaxloc0_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 *array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   dstride = retarray->dim[0].stride;\n   dest = retarray->data;\n   for (n = 0; n < rank; n++)"}, {"sha": "deeb06382e0e01dac9eb6ab6dd713921d317ee9d", "filename": "libgfortran/generated/maxloc1_4_i4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -200,6 +200,9 @@ mmaxloc1_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "80555e817f829d6d9b77be89ab9130c1698a41ec", "filename": "libgfortran/generated/maxloc1_4_i8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -200,6 +200,9 @@ mmaxloc1_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "55d52291a9b9edfd89b3bfa4d7c23f87633ed94f", "filename": "libgfortran/generated/maxloc1_4_r4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -200,6 +200,9 @@ mmaxloc1_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "aab24a16834013b2e370a08251a4ff8399f44012", "filename": "libgfortran/generated/maxloc1_4_r8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -200,6 +200,9 @@ mmaxloc1_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "807be639840e6ec9f894a0c4c38d15032b658cd6", "filename": "libgfortran/generated/maxloc1_8_i4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -200,6 +200,9 @@ mmaxloc1_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "e86cd089031ace7104ac9721a97e3ce27e79ce03", "filename": "libgfortran/generated/maxloc1_8_i8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -200,6 +200,9 @@ mmaxloc1_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "584bfb4a61160b8df1debe76844422d16f92335f", "filename": "libgfortran/generated/maxloc1_8_r4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -200,6 +200,9 @@ mmaxloc1_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "60c8c3d3ce6237d47385e75c174076128902a27c", "filename": "libgfortran/generated/maxloc1_8_r8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -200,6 +200,9 @@ mmaxloc1_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "0bf088f044ec002158c9c94a500aa1226e62ca19", "filename": "libgfortran/generated/maxval_i4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -194,6 +194,9 @@ mmaxval_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "2acdef9b09e0d9c5a8ea12e0ec00e984a0a0ba73", "filename": "libgfortran/generated/maxval_i8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -194,6 +194,9 @@ mmaxval_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "46948b960907676f9a7d48f8f95abf953d54a15a", "filename": "libgfortran/generated/maxval_r4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxval_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxval_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -194,6 +194,9 @@ mmaxval_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "b7bb89ce42c0c1db37440abe87b58cdec24b4df0", "filename": "libgfortran/generated/maxval_r8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxval_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fmaxval_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -194,6 +194,9 @@ mmaxval_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "4bb7a5a058d2e23d7dce064366667f1055ef2103", "filename": "libgfortran/generated/minloc0_4_i4.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -195,6 +195,9 @@ mminloc0_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   dstride = retarray->dim[0].stride;\n   dest = retarray->data;\n   for (n = 0; n < rank; n++)\n@@ -238,7 +241,7 @@ mminloc0_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array,\n     {\n       {\n         /* Implementation start.  */\n-\n+  printf(\"mbase = %p, *mbase = %d, *base=%d\\n\");\n   if (*mbase && *base < minval)\n     {\n       minval = *base;"}, {"sha": "9d7a1a4c599e4b6c5ee4586a7db92b9f9eeeb31d", "filename": "libgfortran/generated/minloc0_4_i8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -195,6 +195,9 @@ mminloc0_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 *array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   dstride = retarray->dim[0].stride;\n   dest = retarray->data;\n   for (n = 0; n < rank; n++)"}, {"sha": "3b54a3ba35aa252a82ea8d4ca3d70c3bfbf3f93d", "filename": "libgfortran/generated/minloc0_4_r4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc0_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc0_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -195,6 +195,9 @@ mminloc0_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 *array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   dstride = retarray->dim[0].stride;\n   dest = retarray->data;\n   for (n = 0; n < rank; n++)"}, {"sha": "9866538a54cf37e9db42d76b626cb5d648c013b3", "filename": "libgfortran/generated/minloc0_4_r8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc0_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc0_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -195,6 +195,9 @@ mminloc0_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 *array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   dstride = retarray->dim[0].stride;\n   dest = retarray->data;\n   for (n = 0; n < rank; n++)"}, {"sha": "4440a9b5306bd75876fdc5a205982d335308ccc5", "filename": "libgfortran/generated/minloc0_8_i4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -195,6 +195,9 @@ mminloc0_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 *array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   dstride = retarray->dim[0].stride;\n   dest = retarray->data;\n   for (n = 0; n < rank; n++)"}, {"sha": "f2ee93ca5441f31e51444c90f5da820db8ecbdb6", "filename": "libgfortran/generated/minloc0_8_i8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -195,6 +195,9 @@ mminloc0_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   dstride = retarray->dim[0].stride;\n   dest = retarray->data;\n   for (n = 0; n < rank; n++)"}, {"sha": "1f38c912aa66044980849b3ddb154fa0f418eb0b", "filename": "libgfortran/generated/minloc0_8_r4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc0_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc0_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -195,6 +195,9 @@ mminloc0_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 *array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   dstride = retarray->dim[0].stride;\n   dest = retarray->data;\n   for (n = 0; n < rank; n++)"}, {"sha": "773ab48ee29e336033ddea884b66bdd4b8b08596", "filename": "libgfortran/generated/minloc0_8_r8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc0_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc0_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -195,6 +195,9 @@ mminloc0_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 *array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   dstride = retarray->dim[0].stride;\n   dest = retarray->data;\n   for (n = 0; n < rank; n++)"}, {"sha": "8c99d8391b2a5595dac5b1037e644b06c5059f73", "filename": "libgfortran/generated/minloc1_4_i4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -200,6 +200,9 @@ mminloc1_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "48596a61001384eafebb1e99f69b905c9f905872", "filename": "libgfortran/generated/minloc1_4_i8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -200,6 +200,9 @@ mminloc1_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "0b9d15c1fa8d76d71d4471ee6446b46d56abeb68", "filename": "libgfortran/generated/minloc1_4_r4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -200,6 +200,9 @@ mminloc1_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "25d366a94394fed8fd98744375a64e1b9086b1b6", "filename": "libgfortran/generated/minloc1_4_r8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -200,6 +200,9 @@ mminloc1_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "a57efe6ffc765d48e9ba9e3a2df86883c59e0a7f", "filename": "libgfortran/generated/minloc1_8_i4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -200,6 +200,9 @@ mminloc1_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "5e1603a3a1b31856e449c527f0abfc9795d189ea", "filename": "libgfortran/generated/minloc1_8_i8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -200,6 +200,9 @@ mminloc1_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "643765a48813f56e93ae93fc3974f7bcc84f9fcd", "filename": "libgfortran/generated/minloc1_8_r4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -200,6 +200,9 @@ mminloc1_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "7d2dc4175a6260f4ebc1d75e34418acfe7dcc5a5", "filename": "libgfortran/generated/minloc1_8_r8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -200,6 +200,9 @@ mminloc1_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "d0a8a5ea4ad77b7fc55b7af0d32e47f36efadaf8", "filename": "libgfortran/generated/minval_i4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -194,6 +194,9 @@ mminval_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "9d44514c4c618c8cdce8f30566f2f3afd3670786", "filename": "libgfortran/generated/minval_i8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -194,6 +194,9 @@ mminval_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "4220d8755ebd5b2ea8a85acf32c28990f35c2f47", "filename": "libgfortran/generated/minval_r4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminval_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminval_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -194,6 +194,9 @@ mminval_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "d6c5b000eea1fe454ec82e1e2d3bdfe3dbdddb30", "filename": "libgfortran/generated/minval_r8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminval_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fminval_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -194,6 +194,9 @@ mminval_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "d20ad9b8440afe31bbc1149bb71600f96cf42418", "filename": "libgfortran/generated/product_c4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fproduct_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fproduct_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -192,6 +192,9 @@ mproduct_c4 (gfc_array_c4 * retarray, gfc_array_c4 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "706e9737de8f26a7b9550c59f37ecf0a4fcad64d", "filename": "libgfortran/generated/product_c8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fproduct_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fproduct_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -192,6 +192,9 @@ mproduct_c8 (gfc_array_c8 * retarray, gfc_array_c8 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "f8f86d6ca82dbd0ddb6615649aafc3fd935e2a08", "filename": "libgfortran/generated/product_i4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fproduct_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fproduct_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -192,6 +192,9 @@ mproduct_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "00ae28bd1bf6c1cc75a993153f121bf94d9fa518", "filename": "libgfortran/generated/product_i8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fproduct_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fproduct_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -192,6 +192,9 @@ mproduct_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "ea377bbdcbbdd06b0fa569df6e4de2e452ceb695", "filename": "libgfortran/generated/product_r4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fproduct_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fproduct_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -192,6 +192,9 @@ mproduct_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "58d22cfb5bea079a8899a22439df58c69ba1e37f", "filename": "libgfortran/generated/product_r8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fproduct_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fproduct_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -192,6 +192,9 @@ mproduct_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "d9b36d8201f979e9bc22fb597540f038730eb37a", "filename": "libgfortran/generated/sum_c4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fsum_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fsum_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -192,6 +192,9 @@ msum_c4 (gfc_array_c4 * retarray, gfc_array_c4 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "a5c44cdcf0380fbcca1a12dcef4a2dac52f674e7", "filename": "libgfortran/generated/sum_c8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fsum_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fsum_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -192,6 +192,9 @@ msum_c8 (gfc_array_c8 * retarray, gfc_array_c8 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "b10798f847c00a5c0f77e4144954ab8a868cf237", "filename": "libgfortran/generated/sum_i4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fsum_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fsum_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -192,6 +192,9 @@ msum_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "0d3e1913ac440d7148e59fe40af47607d95c2561", "filename": "libgfortran/generated/sum_i8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fsum_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fsum_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -192,6 +192,9 @@ msum_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "c0a81d5cb0a19d2b4c27c605e3936f3ee024d784", "filename": "libgfortran/generated/sum_r4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fsum_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fsum_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r4.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -192,6 +192,9 @@ msum_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "190cabbc22d8e33c6ecbb10106154a26aeb8cb3e", "filename": "libgfortran/generated/sum_r8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fsum_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fgenerated%2Fsum_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r8.c?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -192,6 +192,9 @@ msum_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}, {"sha": "39af3afef0936825ed6d9c7ca7cc2ad4a9cd9847", "filename": "libgfortran/m4/iforeach.m4", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fm4%2Fiforeach.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fm4%2Fiforeach.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fiforeach.m4?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -43,6 +43,9 @@ name`'rtype_qual`_'atype_code (rtype * retarray, atype *array)\n       if (retarray->dim[0].stride == 0)\n \tretarray->dim[0].stride = 1;\n     }\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -151,9 +154,14 @@ void\n \tretarray->dim[0].stride = 1;\n     }\n \n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   dstride = retarray->dim[0].stride;\n   dest = retarray->data;\n   for (n = 0; n < rank; n++)"}, {"sha": "82a74ef80b44040c5985d703f9e1ef9ce68da1a6", "filename": "libgfortran/m4/ifunction.m4", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fm4%2Fifunction.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6abe94dc12e4f7e56b5439a081e0b11c6950d92/libgfortran%2Fm4%2Fifunction.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fifunction.m4?ref=c6abe94dc12e4f7e56b5439a081e0b11c6950d92", "patch": "@@ -40,6 +40,9 @@ name`'rtype_qual`_'atype_code (rtype *retarray, atype *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -174,9 +177,15 @@ void\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n+  if (mask->dim[0].stride == 0)\n+    mask->dim[0].stride = 1;\n+\n   len = array->dim[dim].ubound + 1 - array->dim[dim].lbound;\n   if (len <= 0)\n     return;"}]}