{"sha": "8e38461c76dc3c71f494d41b3b78cf42160f41fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUzODQ2MWM3NmRjM2M3MWY0OTRkNDFiM2I3OGNmNDIxNjBmNDFmZA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-01-12T14:29:14Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-01-12T14:29:14Z"}, "message": "config.gcc (arm*-*-linux*, [...]): Use gnu-user.h before linux.h.\n\n\t* config.gcc (arm*-*-linux*, bfin*-uclinux*, bfin*-linux-uclibc*,\n\tcrisv32-*-linux* | cris-*-linux*, frv-*-*linux*, moxie-*-uclinux*,\n\thppa*64*-*-linux*, hppa*-*-linux*, i[34567]86-*-linux* |\n\ti[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu |\n\ti[34567]86-*-gnu* | i[34567]86-*-kopensolaris*-gnu,\n\tx86_64-*-linux* | x86_64-*-kfreebsd*-gnu | x86_64-*-knetbsd*-gnu,\n\tia64*-*-linux*, lm32-*-uclinux*, m32r-*-linux*, m32rle-*-linux*,\n\tm68k-*-uclinux*, m68k-*-linux*, microblaze*-linux*,\n\tmips64*-*-linux* | mipsisa64*-*-linux*, mips*-*-linux*,\n\ts390-*-linux*, s390x-*-linux*, sh*-*-linux*, sparc-*-linux*,\n\tsparc64-*-linux*, vax-*-linux*, xtensa*-*-linux*,\n\tam33_2.0-*-linux*): Use gnu-user.h before linux.h.\n\t* config/gnu-user.h: New.  Copied from linux.h.\n\t(LINUX_TARGET_STARTFILE_SPEC): Rename to\n\tGNU_USER_TARGET_STARTFILE_SPEC.\n\t(LINUX_TARGET_ENDFILE_SPEC): Rename to\n\tGNU_USER_TARGET_ENDFILE_SPEC.\n\t(LINUX_TARGET_CC1_SPEC): Rename to GNU_USER_TARGET_CC1_SPEC.\n\t(LINUX_TARGET_LIB_SPEC): Rename to GNU_USER_TARGET_LIB_SPEC.\n\t(OPTION_GLIBC, OPTION_UCLIBC, OPTION_BIONIC,\n\tLINUX_TARGET_OS_CPP_BUILTINS, CHOOSE_DYNAMIC_LINKER1,\n\tCHOOSE_DYNAMIC_LINKER, UCLIBC_DYNAMIC_LINKER,\n\tUCLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER64,\n\tBIONIC_DYNAMIC_LINKER, BIONIC_DYNAMIC_LINKER32,\n\tBIONIC_DYNAMIC_LINKER64, LINUX_DYNAMIC_LINKER,\n\tLINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64,\n\tTARGET_C99_FUNCTIONS, TARGET_HAS_SINCOS): Remove.\n\t* config/arm/linux-eabi.h (CC1_SPEC): Use\n\tGNU_USER_TARGET_CC1_SPEC.\n\t(LIB_SPEC): Use GNU_USER_TARGET_LIB_SPEC.\n\t(STARTFILE_SPEC): Use GNU_USER_TARGET_STARTFILE_SPEC.\n\t(ENDFILE_SPEC): Use GNU_USER_TARGET_ENDFILE_SPEC\n\t* config/linux.h (NO_IMPLICIT_EXTERN_C, ASM_APP_ON, ASM_APP_OFF,\n\tLINUX_TARGET_STARTFILE_SPEC, STARTFILE_SPEC,\n\tLINUX_TARGET_ENDFILE_SPEC, ENDFILE_SPEC, LINUX_TARGET_CC1_SPEC,\n\tCC1_SPEC, CPLUSPLUS_CPP_SPEC, LINUX_TARGET_LIB_SPEC, LIB_SPEC,\n\tLINK_EH_SPEC, LINK_GCC_C_SEQUENCE_SPEC, USE_LD_AS_NEEDED): Remove.\n\nFrom-SVN: r168711", "tree": {"sha": "ff08d18c3d28c2afe4a515b7f6be1be610e755a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff08d18c3d28c2afe4a515b7f6be1be610e755a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e38461c76dc3c71f494d41b3b78cf42160f41fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e38461c76dc3c71f494d41b3b78cf42160f41fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e38461c76dc3c71f494d41b3b78cf42160f41fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e38461c76dc3c71f494d41b3b78cf42160f41fd/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a570fc16fa805652971e658e332fdbdb0f4fb935", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a570fc16fa805652971e658e332fdbdb0f4fb935", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a570fc16fa805652971e658e332fdbdb0f4fb935"}], "stats": {"total": 285, "additions": 178, "deletions": 107}, "files": [{"sha": "7181f961241eabbfe1bad7b3a7a1c93d658e40e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e38461c76dc3c71f494d41b3b78cf42160f41fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e38461c76dc3c71f494d41b3b78cf42160f41fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e38461c76dc3c71f494d41b3b78cf42160f41fd", "patch": "@@ -1,3 +1,43 @@\n+2011-01-12  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config.gcc (arm*-*-linux*, bfin*-uclinux*, bfin*-linux-uclibc*,\n+\tcrisv32-*-linux* | cris-*-linux*, frv-*-*linux*, moxie-*-uclinux*,\n+\thppa*64*-*-linux*, hppa*-*-linux*, i[34567]86-*-linux* |\n+\ti[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu |\n+\ti[34567]86-*-gnu* | i[34567]86-*-kopensolaris*-gnu,\n+\tx86_64-*-linux* | x86_64-*-kfreebsd*-gnu | x86_64-*-knetbsd*-gnu,\n+\tia64*-*-linux*, lm32-*-uclinux*, m32r-*-linux*, m32rle-*-linux*,\n+\tm68k-*-uclinux*, m68k-*-linux*, microblaze*-linux*,\n+\tmips64*-*-linux* | mipsisa64*-*-linux*, mips*-*-linux*,\n+\ts390-*-linux*, s390x-*-linux*, sh*-*-linux*, sparc-*-linux*,\n+\tsparc64-*-linux*, vax-*-linux*, xtensa*-*-linux*,\n+\tam33_2.0-*-linux*): Use gnu-user.h before linux.h.\n+\t* config/gnu-user.h: New.  Copied from linux.h.\n+\t(LINUX_TARGET_STARTFILE_SPEC): Rename to\n+\tGNU_USER_TARGET_STARTFILE_SPEC.\n+\t(LINUX_TARGET_ENDFILE_SPEC): Rename to\n+\tGNU_USER_TARGET_ENDFILE_SPEC.\n+\t(LINUX_TARGET_CC1_SPEC): Rename to GNU_USER_TARGET_CC1_SPEC.\n+\t(LINUX_TARGET_LIB_SPEC): Rename to GNU_USER_TARGET_LIB_SPEC.\n+\t(OPTION_GLIBC, OPTION_UCLIBC, OPTION_BIONIC,\n+\tLINUX_TARGET_OS_CPP_BUILTINS, CHOOSE_DYNAMIC_LINKER1,\n+\tCHOOSE_DYNAMIC_LINKER, UCLIBC_DYNAMIC_LINKER,\n+\tUCLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER64,\n+\tBIONIC_DYNAMIC_LINKER, BIONIC_DYNAMIC_LINKER32,\n+\tBIONIC_DYNAMIC_LINKER64, LINUX_DYNAMIC_LINKER,\n+\tLINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64,\n+\tTARGET_C99_FUNCTIONS, TARGET_HAS_SINCOS): Remove.\n+\t* config/arm/linux-eabi.h (CC1_SPEC): Use\n+\tGNU_USER_TARGET_CC1_SPEC.\n+\t(LIB_SPEC): Use GNU_USER_TARGET_LIB_SPEC.\n+\t(STARTFILE_SPEC): Use GNU_USER_TARGET_STARTFILE_SPEC.\n+\t(ENDFILE_SPEC): Use GNU_USER_TARGET_ENDFILE_SPEC\n+\t* config/linux.h (NO_IMPLICIT_EXTERN_C, ASM_APP_ON, ASM_APP_OFF,\n+\tLINUX_TARGET_STARTFILE_SPEC, STARTFILE_SPEC,\n+\tLINUX_TARGET_ENDFILE_SPEC, ENDFILE_SPEC, LINUX_TARGET_CC1_SPEC,\n+\tCC1_SPEC, CPLUSPLUS_CPP_SPEC, LINUX_TARGET_LIB_SPEC, LIB_SPEC,\n+\tLINK_EH_SPEC, LINK_GCC_C_SEQUENCE_SPEC, USE_LD_AS_NEEDED): Remove.\n+\n 2011-01-12  Richard Guenther  <rguenther@suse.de>\n \n \tPR other/46946"}, {"sha": "0f6aae17717d661e3a51eb6312fd601f2e8b5a72", "filename": "gcc/config.gcc", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e38461c76dc3c71f494d41b3b78cf42160f41fd/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e38461c76dc3c71f494d41b3b78cf42160f41fd/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=8e38461c76dc3c71f494d41b3b78cf42160f41fd", "patch": "@@ -789,7 +789,7 @@ arm*-*-netbsd*)\n \tuse_collect2=yes\n \t;;\n arm*-*-linux*)\t\t\t# ARM GNU/Linux with ELF\n-\ttm_file=\"dbxelf.h elfos.h linux.h linux-android.h glibc-stdint.h arm/elf.h arm/linux-gas.h arm/linux-elf.h\"\n+\ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h arm/elf.h arm/linux-gas.h arm/linux-elf.h\"\n \tcase $target in\n \tarm*b-*)\n \t\ttm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=1\"\n@@ -910,12 +910,12 @@ bfin*-elf*)\n \tuse_collect2=no\n \t;;\n bfin*-uclinux*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h bfin/elf.h linux.h glibc-stdint.h bfin/uclinux.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h bfin/elf.h gnu-user.h linux.h glibc-stdint.h bfin/uclinux.h\"\n \ttmake_file=bfin/t-bfin-uclinux\n \tuse_collect2=no\n \t;;\n bfin*-linux-uclibc*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h bfin/elf.h linux.h glibc-stdint.h bfin/linux.h ./linux-sysroot-suffix.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h bfin/elf.h gnu-user.h linux.h glibc-stdint.h bfin/linux.h ./linux-sysroot-suffix.h\"\n \ttmake_file=\"t-slibgcc-elf-ver bfin/t-bfin-linux\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \tuse_collect2=no\n@@ -946,7 +946,7 @@ cris-*-elf | cris-*-none)\n \tuse_gcc_stdint=wrap\n \t;;\n crisv32-*-linux* | cris-*-linux*)\n-\ttm_file=\"dbxelf.h elfos.h ${tm_file} linux.h glibc-stdint.h cris/linux.h\"\n+\ttm_file=\"dbxelf.h elfos.h ${tm_file} gnu-user.h linux.h glibc-stdint.h cris/linux.h\"\n \t# We need to avoid using t-linux, so override default tmake_file\n \ttmake_file=\"cris/t-cris t-slibgcc-elf-ver cris/t-linux\"\n \textra_options=\"${extra_options} cris/linux.opt\"\n@@ -976,7 +976,7 @@ frv-*-elf)\n \t;;\n frv-*-*linux*)\n \ttm_file=\"dbxelf.h elfos.h ${tm_file} \\\n-\t         linux.h glibc-stdint.h frv/linux.h\"\n+\t         gnu-user.h linux.h glibc-stdint.h frv/linux.h\"\n \ttm_file=\"${tm_file} ../../libgcc/config/frv/frv-abi.h\"\n \ttmake_file=\"${tmake_file} frv/t-frv frv/t-linux\"\n \t;;\n@@ -990,7 +990,7 @@ moxie-*-elf)\n moxie-*-uclinux*)\n \tgas=yes\n \tgnu_ld=yes\n-\ttm_file=\"dbxelf.h elfos.h ${tm_file} linux.h glibc-stdint.h moxie/uclinux.h\"\n+\ttm_file=\"dbxelf.h elfos.h ${tm_file} gnu-user.h linux.h glibc-stdint.h moxie/uclinux.h\"\n \textra_parts=\"crti.o crtn.o crtbegin.o crtend.o\"\n \ttmake_file=\"${tmake_file} moxie/t-moxie moxie/t-moxie-softfp soft-fp/t-softfp\"\n \t;;\n@@ -1008,7 +1008,7 @@ h8300-*-elf*)\n \t;;\n hppa*64*-*-linux*)\n \ttarget_cpu_default=\"MASK_PA_11|MASK_PA_20\"\n-\ttm_file=\"pa/pa64-start.h ${tm_file} dbxelf.h elfos.h linux.h \\\n+\ttm_file=\"pa/pa64-start.h ${tm_file} dbxelf.h elfos.h gnu-user.h linux.h \\\n \t\t glibc-stdint.h pa/pa-linux.h pa/pa64-regs.h pa/pa-64.h \\\n \t\t pa/pa64-linux.h\"\n \ttmake_file=\"${tmake_file} pa/t-linux64\"\n@@ -1017,7 +1017,7 @@ hppa*64*-*-linux*)\n \t;;\n hppa*-*-linux*)\n \ttarget_cpu_default=\"MASK_PA_11|MASK_NO_SPACE_REGS\"\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h linux.h glibc-stdint.h pa/pa-linux.h \\\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h pa/pa-linux.h \\\n \t\t pa/pa32-regs.h pa/pa32-linux.h\"\n \ttmake_file=\"${tmake_file} pa/t-linux t-slibgcc-libgcc\"\n \t# Set the libgcc version number\n@@ -1225,7 +1225,7 @@ i[34567]86-*-openbsd*)\n i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu | i[34567]86-*-gnu* | i[34567]86-*-kopensolaris*-gnu)\n \t\t\t# Intel 80386's running GNU/*\n \t\t\t# with ELF format using glibc 2\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h linux.h glibc-stdint.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h\"\n \tcase ${target} in\n \ti[34567]86-*-linux*)\n \t\t# Assume modern glibc\n@@ -1262,7 +1262,7 @@ i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu | i\n \ttmake_file=\"${tmake_file} i386/t-crtstuff i386/t-crtpc i386/t-crtfm t-dfprules\"\n \t;;\n x86_64-*-linux* | x86_64-*-kfreebsd*-gnu | x86_64-*-knetbsd*-gnu)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h linux.h glibc-stdint.h \\\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h \\\n \t\t i386/x86-64.h i386/linux64.h\"\n \tcase ${target} in\n \tx86_64-*-linux*)\n@@ -1560,7 +1560,7 @@ ia64*-*-freebsd*)\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o crtfastmath.o\"\n \t;;\n ia64*-*-linux*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h linux.h glibc-stdint.h ia64/sysv4.h ia64/linux.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h ia64/sysv4.h ia64/linux.h\"\n \ttmake_file=\"${tmake_file} ia64/t-ia64 t-libunwind ia64/t-glibc\"\n \tif test x$with_system_libunwind != xyes ; then\n \t\ttmake_file=\"${tmake_file} t-libunwind-elf ia64/t-glibc-libunwind\"\n@@ -1614,7 +1614,7 @@ lm32-*-rtems*)\n \ttmake_file=\"${tmake_file} t-rtems\"\n          ;;\n lm32-*-uclinux*)\n-        tm_file=\"dbxelf.h elfos.h ${tm_file} linux.h lm32/uclinux-elf.h\"\n+        tm_file=\"dbxelf.h elfos.h ${tm_file} gnu-user.h linux.h lm32/uclinux-elf.h\"\n \ttmake_file=\"${tmake_file} lm32/t-lm32 lm32/t-fprules-softfp soft-fp/t-softfp\"\n         ;;\n m32r-*-elf*)\n@@ -1631,7 +1631,7 @@ m32r-*-rtems*)\n \textra_parts=\"crtinit.o crtfini.o\"\n  \t;;\n m32r-*-linux*)\n-\ttm_file=\"dbxelf.h elfos.h linux.h glibc-stdint.h ${tm_file} m32r/linux.h\"\n+\ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h ${tm_file} m32r/linux.h\"\n \t# We override the tmake_file for linux -- why?\n \ttmake_file=\"t-slibgcc-elf-ver m32r/t-linux\"\n \tgnu_ld=yes\n@@ -1640,7 +1640,7 @@ m32r-*-linux*)\n \tfi\n  \t;;\n m32rle-*-linux*)\n-\ttm_file=\"dbxelf.h elfos.h linux.h glibc-stdint.h m32r/little.h ${tm_file} m32r/linux.h\"\n+\ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h m32r/little.h ${tm_file} m32r/linux.h\"\n \t# We override the tmake_file for linux -- why?\n \ttmake_file=\"t-slibgcc-elf-ver m32r/t-linux\"\n \tgnu_ld=yes\n@@ -1730,7 +1730,7 @@ m68k-*-uclinux*)\t\t# Motorola m68k/ColdFire running uClinux\n \t\t\t\t# ABI.\n \tdefault_m68k_cpu=68020\n \tdefault_cf_cpu=5206\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h linux.h glibc-stdint.h flat.h m68k/linux.h m68k/uclinux.h ./sysroot-suffix.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h flat.h m68k/linux.h m68k/uclinux.h ./sysroot-suffix.h\"\n  \ttm_defines=\"${tm_defines} MOTOROLA=1\"\n \ttmake_file=\"m68k/t-floatlib m68k/t-uclinux m68k/t-mlibs\"\n \t;;\n@@ -1740,7 +1740,7 @@ m68k-*-linux*)\t\t# Motorola m68k's running GNU/Linux\n \tdefault_m68k_cpu=68020\n \tdefault_cf_cpu=5475\n \twith_arch=${with_arch:-m68k}\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h linux.h glibc-stdint.h m68k/linux.h ./sysroot-suffix.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h m68k/linux.h ./sysroot-suffix.h\"\n \textra_options=\"${extra_options} m68k/ieee.opt\"\n \ttm_defines=\"${tm_defines} MOTOROLA=1\"\n \ttmake_file=\"${tmake_file} m68k/t-floatlib m68k/t-linux m68k/t-mlibs\"\n@@ -1782,7 +1782,7 @@ mep-*-*)\n \tuse_gcc_stdint=wrap\n \t;;\n microblaze*-linux*)\n-\ttm_file=\"${tm_file} dbxelf.h linux.h microblaze/linux.h\"\n+\ttm_file=\"${tm_file} dbxelf.h gnu-user.h linux.h microblaze/linux.h\"\n \tc_target_objs=\"${c_target_objs} microblaze-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} microblaze-c.o\"\n \ttmake_file=\"${tmake_file} t-slibgcc-elf-ver t-slibgcc-nolc-override t-linux microblaze/t-microblaze\"\n@@ -1820,7 +1820,7 @@ mips*-*-netbsd*)\t\t\t# NetBSD/mips, either endian.\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \t;;\n mips64*-*-linux* | mipsisa64*-*-linux*)\n-\ttm_file=\"dbxelf.h elfos.h linux.h glibc-stdint.h ${tm_file} mips/linux.h mips/linux64.h\"\n+\ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h ${tm_file} mips/linux.h mips/linux64.h\"\n \ttmake_file=\"${tmake_file} mips/t-linux64 mips/t-libgcc-mips16\"\n \ttm_defines=\"${tm_defines} MIPS_ABI_DEFAULT=ABI_N32\"\n \tcase ${target} in\n@@ -1842,7 +1842,7 @@ mips64*-*-linux* | mipsisa64*-*-linux*)\n \ttest x$with_llsc != x || with_llsc=yes\n \t;;\n mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n-        tm_file=\"dbxelf.h elfos.h linux.h glibc-stdint.h ${tm_file} mips/linux.h\"\n+        tm_file=\"dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h ${tm_file} mips/linux.h\"\n \ttmake_file=\"${tmake_file} mips/t-libgcc-mips16\"\n \tcase ${target} in\n         mipsisa32r2*)\n@@ -2244,10 +2244,10 @@ rx-*-elf*)\n \ttmake_file=\"${tmake_file} rx/t-rx\"\n \t;;\n s390-*-linux*)\n-\ttm_file=\"s390/s390.h dbxelf.h elfos.h linux.h glibc-stdint.h s390/linux.h\"\n+\ttm_file=\"s390/s390.h dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h s390/linux.h\"\n \t;;\n s390x-*-linux*)\n-\ttm_file=\"s390/s390x.h s390/s390.h dbxelf.h elfos.h linux.h glibc-stdint.h s390/linux.h\"\n+\ttm_file=\"s390/s390x.h s390/s390.h dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h s390/linux.h\"\n \ttm_p_file=s390/s390-protos.h\n \tmd_file=s390/s390.md\n \textra_modes=s390/s390-modes.def\n@@ -2302,7 +2302,7 @@ sh-*-symbianelf* | sh[12346l]*-*-symbianelf* | \\\n \ttm_file=\"${tm_file} dbxelf.h elfos.h sh/elf.h\"\n \tcase ${target} in\n \tsh*-*-linux*)\ttmake_file=\"${tmake_file} sh/t-linux\"\n-\t\t\ttm_file=\"${tm_file} linux.h glibc-stdint.h sh/linux.h\" ;;\n+\t\t\ttm_file=\"${tm_file} gnu-user.h linux.h glibc-stdint.h sh/linux.h\" ;;\n \tsh*-*-netbsd*)\n \t\t\ttm_file=\"${tm_file} netbsd.h netbsd-elf.h sh/netbsd-elf.h\"\n \t\t\textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n@@ -2485,7 +2485,7 @@ sparc-*-rtems*)\n \textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n sparc-*-linux*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h sparc/sysv4.h linux.h glibc-stdint.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h sparc/sysv4.h gnu-user.h linux.h glibc-stdint.h\"\n \textra_options=\"${extra_options} sparc/long-double-switch.opt\"\n \tcase ${target} in\n \t    *-leon-*)\n@@ -2579,7 +2579,7 @@ sparc64-*-rtems*)\n \textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n sparc64-*-linux*)\n-\ttm_file=\"sparc/biarch64.h ${tm_file} dbxelf.h elfos.h sparc/sysv4.h linux.h glibc-stdint.h sparc/linux64.h\"\n+\ttm_file=\"sparc/biarch64.h ${tm_file} dbxelf.h elfos.h sparc/sysv4.h gnu-user.h linux.h glibc-stdint.h sparc/linux64.h\"\n \textra_options=\"${extra_options} sparc/long-double-switch.opt\"\n \ttmake_file=\"${tmake_file} sparc/t-linux sparc/t-linux64 sparc/t-crtfm\"\n \t;;\n@@ -2666,7 +2666,7 @@ v850-*-*)\n \tuse_gcc_stdint=wrap\n \t;;\n vax-*-linux*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h linux.h vax/elf.h vax/linux.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h vax/elf.h vax/linux.h\"\n \ttmake_file=\"${tmake_file} vax/t-linux\"\n \t;;\n vax-*-netbsdelf*)\n@@ -2700,11 +2700,11 @@ xtensa*-*-elf*)\n \ttmake_file=\"xtensa/t-xtensa xtensa/t-elf\"\n \t;;\n xtensa*-*-linux*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h linux.h glibc-stdint.h xtensa/linux.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h xtensa/linux.h\"\n \ttmake_file=\"${tmake_file} xtensa/t-xtensa xtensa/t-linux\"\n \t;;\n am33_2.0-*-linux*)\n-\ttm_file=\"mn10300/mn10300.h dbxelf.h elfos.h linux.h glibc-stdint.h mn10300/linux.h\"\n+\ttm_file=\"mn10300/mn10300.h dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h mn10300/linux.h\"\n \ttmake_file=\"${tmake_file} mn10300/t-linux\"\n \tgas=yes gnu_ld=yes\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o\""}, {"sha": "8330052844ff33c8c2088672186b79b75cfa7b54", "filename": "gcc/config/arm/linux-eabi.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e38461c76dc3c71f494d41b3b78cf42160f41fd/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e38461c76dc3c71f494d41b3b78cf42160f41fd/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-eabi.h?ref=8e38461c76dc3c71f494d41b3b78cf42160f41fd", "patch": "@@ -1,5 +1,5 @@\n /* Configuration file for ARM GNU/Linux EABI targets.\n-   Copyright (C) 2004, 2005, 2006, 2007, 2010\n+   Copyright (C) 2004, 2005, 2006, 2007, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by CodeSourcery, LLC   \n \n@@ -72,25 +72,25 @@\n \t\t       LINUX_TARGET_LINK_SPEC \" \" ANDROID_LINK_SPEC)\n \n #undef  CC1_SPEC\n-#define CC1_SPEC\t\t\t\t\t\t\\\n-  LINUX_OR_ANDROID_CC (LINUX_TARGET_CC1_SPEC,\t\t\t\\\n-\t\t       LINUX_TARGET_CC1_SPEC \" \" ANDROID_CC1_SPEC)\n+#define CC1_SPEC\t\t\t\t\t\t\t\\\n+  LINUX_OR_ANDROID_CC (GNU_USER_TARGET_CC1_SPEC,\t\t\t\\\n+\t\t       GNU_USER_TARGET_CC1_SPEC \" \" ANDROID_CC1_SPEC)\n \n #define CC1PLUS_SPEC \\\n   LINUX_OR_ANDROID_CC (\"\", ANDROID_CC1PLUS_SPEC)\n \n #undef  LIB_SPEC\n-#define LIB_SPEC\t\t\t\t\t\t\\\n-  LINUX_OR_ANDROID_LD (LINUX_TARGET_LIB_SPEC,\t\t\t\\\n-\t\t       LINUX_TARGET_LIB_SPEC \" \" ANDROID_LIB_SPEC)\n+#define LIB_SPEC\t\t\t\t\t\t\t\\\n+  LINUX_OR_ANDROID_LD (GNU_USER_TARGET_LIB_SPEC,\t\t\t\\\n+\t\t       GNU_USER_TARGET_LIB_SPEC \" \" ANDROID_LIB_SPEC)\n \n #undef\tSTARTFILE_SPEC\n #define STARTFILE_SPEC \\\n-  LINUX_OR_ANDROID_LD (LINUX_TARGET_STARTFILE_SPEC, ANDROID_STARTFILE_SPEC)\n+  LINUX_OR_ANDROID_LD (GNU_USER_TARGET_STARTFILE_SPEC, ANDROID_STARTFILE_SPEC)\n \n #undef\tENDFILE_SPEC\n #define ENDFILE_SPEC \\\n-  LINUX_OR_ANDROID_LD (LINUX_TARGET_ENDFILE_SPEC, ANDROID_ENDFILE_SPEC)\n+  LINUX_OR_ANDROID_LD (GNU_USER_TARGET_ENDFILE_SPEC, ANDROID_ENDFILE_SPEC)\n \n /* Use the default LIBGCC_SPEC, not the version in linux-elf.h, as we\n    do not use -lfloat.  */"}, {"sha": "1c4e71d1bb449b92c5b21374173520bd0baf80be", "filename": "gcc/config/gnu-user.h", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e38461c76dc3c71f494d41b3b78cf42160f41fd/gcc%2Fconfig%2Fgnu-user.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e38461c76dc3c71f494d41b3b78cf42160f41fd/gcc%2Fconfig%2Fgnu-user.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgnu-user.h?ref=8e38461c76dc3c71f494d41b3b78cf42160f41fd", "patch": "@@ -0,0 +1,97 @@\n+/* Definitions for systems using, at least optionally, a GNU\n+   (glibc-based) userspace or other userspace with libc derived from\n+   glibc (e.g. uClibc) or for which similar specs are appropriate.\n+   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2003, 2004, 2005, 2006,\n+   2007, 2009, 2010, 2011 Free Software Foundation, Inc.\n+   Contributed by Eric Youngdale.\n+   Modified for stabs-in-ELF by H.J. Lu (hjl@lucon.org).\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+Under Section 7 of GPL version 3, you are granted additional\n+permissions described in the GCC Runtime Library Exception, version\n+3.1, as published by the Free Software Foundation.\n+\n+You should have received a copy of the GNU General Public License and\n+a copy of the GCC Runtime Library Exception along with this program;\n+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+<http://www.gnu.org/licenses/>.  */\n+\n+/* Don't assume anything about the header files.  */\n+#define NO_IMPLICIT_EXTERN_C\n+\n+#undef ASM_APP_ON\n+#define ASM_APP_ON \"#APP\\n\"\n+\n+#undef ASM_APP_OFF\n+#define ASM_APP_OFF \"#NO_APP\\n\"\n+\n+/* Provide a STARTFILE_SPEC appropriate for GNU userspace.  Here we add\n+   the GNU userspace magical crtbegin.o file (see crtstuff.c) which\n+   provides part of the support for getting C++ file-scope static\n+   object constructed before entering `main'.  */\n+   \n+#if defined HAVE_LD_PIE\n+#define GNU_USER_TARGET_STARTFILE_SPEC \\\n+  \"%{!shared: %{pg|p|profile:gcrt1.o%s;pie:Scrt1.o%s;:crt1.o%s}} \\\n+   crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s}\"\n+#else\n+#define GNU_USER_TARGET_STARTFILE_SPEC \\\n+  \"%{!shared: %{pg|p|profile:gcrt1.o%s;:crt1.o%s}} \\\n+   crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s}\"\n+#endif\n+#undef  STARTFILE_SPEC\n+#define STARTFILE_SPEC GNU_USER_TARGET_STARTFILE_SPEC\n+\n+/* Provide a ENDFILE_SPEC appropriate for GNU userspace.  Here we tack on\n+   the GNU userspace magical crtend.o file (see crtstuff.c) which\n+   provides part of the support for getting C++ file-scope static\n+   object constructed before entering `main', followed by a normal\n+   GNU userspace \"finalizer\" file, `crtn.o'.  */\n+\n+#define GNU_USER_TARGET_ENDFILE_SPEC \\\n+  \"%{shared|pie:crtendS.o%s;:crtend.o%s} crtn.o%s\"\n+#undef  ENDFILE_SPEC\n+#define ENDFILE_SPEC GNU_USER_TARGET_ENDFILE_SPEC\n+\n+/* This is for -profile to use -lc_p instead of -lc.  */\n+#define GNU_USER_TARGET_CC1_SPEC \"%{profile:-p}\"\n+#ifndef CC1_SPEC\n+#define CC1_SPEC GNU_USER_TARGET_CC1_SPEC\n+#endif\n+\n+/* The GNU C++ standard library requires that these macros be defined.  */\n+#undef CPLUSPLUS_CPP_SPEC\n+#define CPLUSPLUS_CPP_SPEC \"-D_GNU_SOURCE %(cpp)\"\n+\n+#define GNU_USER_TARGET_LIB_SPEC \\\n+  \"%{pthread:-lpthread} \\\n+   %{shared:-lc} \\\n+   %{!shared:%{mieee-fp:-lieee} %{profile:-lc_p}%{!profile:-lc}}\"\n+#undef  LIB_SPEC\n+#define LIB_SPEC GNU_USER_TARGET_LIB_SPEC\n+\n+#if defined(HAVE_LD_EH_FRAME_HDR)\n+#define LINK_EH_SPEC \"%{!static:--eh-frame-hdr} \"\n+#endif\n+\n+#undef LINK_GCC_C_SEQUENCE_SPEC\n+#define LINK_GCC_C_SEQUENCE_SPEC \\\n+  \"%{static:--start-group} %G %L %{static:--end-group}%{!static:%G}\"\n+\n+/* Use --as-needed -lgcc_s for eh support.  */\n+#ifdef HAVE_LD_AS_NEEDED\n+#define USE_LD_AS_NEEDED 1\n+#endif\n+\n+#define TARGET_POSIX_IO"}, {"sha": "00b4f1c1cd5dd6382b51e2ac5980403eee20059c", "filename": "gcc/config/linux.h", "status": "modified", "additions": 5, "deletions": 71, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e38461c76dc3c71f494d41b3b78cf42160f41fd/gcc%2Fconfig%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e38461c76dc3c71f494d41b3b78cf42160f41fd/gcc%2Fconfig%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux.h?ref=8e38461c76dc3c71f494d41b3b78cf42160f41fd", "patch": "@@ -1,6 +1,9 @@\n-/* Definitions for Linux-based GNU systems with ELF format\n+/* Definitions for systems using the Linux kernel, with or without\n+   MMU, using ELF at the compiler level but possibly FLT for final\n+   linked executables and shared libraries in some no-MMU cases, and\n+   possibly with a choice of libc implementations.\n    Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2003, 2004, 2005, 2006,\n-   2007, 2009, 2010 Free Software Foundation, Inc.\n+   2007, 2009, 2010, 2011 Free Software Foundation, Inc.\n    Contributed by Eric Youngdale.\n    Modified for stabs-in-ELF by H.J. Lu (hjl@lucon.org).\n \n@@ -25,60 +28,6 @@ a copy of the GCC Runtime Library Exception along with this program;\n see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n-/* Don't assume anything about the header files.  */\n-#define NO_IMPLICIT_EXTERN_C\n-\n-#undef ASM_APP_ON\n-#define ASM_APP_ON \"#APP\\n\"\n-\n-#undef ASM_APP_OFF\n-#define ASM_APP_OFF \"#NO_APP\\n\"\n-\n-/* Provide a STARTFILE_SPEC appropriate for GNU/Linux.  Here we add\n-   the GNU/Linux magical crtbegin.o file (see crtstuff.c) which\n-   provides part of the support for getting C++ file-scope static\n-   object constructed before entering `main'.  */\n-   \n-#if defined HAVE_LD_PIE\n-#define LINUX_TARGET_STARTFILE_SPEC \\\n-  \"%{!shared: %{pg|p|profile:gcrt1.o%s;pie:Scrt1.o%s;:crt1.o%s}} \\\n-   crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s}\"\n-#else\n-#define LINUX_TARGET_STARTFILE_SPEC \\\n-  \"%{!shared: %{pg|p|profile:gcrt1.o%s;:crt1.o%s}} \\\n-   crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s}\"\n-#endif\n-#undef  STARTFILE_SPEC\n-#define STARTFILE_SPEC LINUX_TARGET_STARTFILE_SPEC\n-\n-/* Provide a ENDFILE_SPEC appropriate for GNU/Linux.  Here we tack on\n-   the GNU/Linux magical crtend.o file (see crtstuff.c) which\n-   provides part of the support for getting C++ file-scope static\n-   object constructed before entering `main', followed by a normal\n-   GNU/Linux \"finalizer\" file, `crtn.o'.  */\n-\n-#define LINUX_TARGET_ENDFILE_SPEC \\\n-  \"%{shared|pie:crtendS.o%s;:crtend.o%s} crtn.o%s\"\n-#undef  ENDFILE_SPEC\n-#define ENDFILE_SPEC LINUX_TARGET_ENDFILE_SPEC\n-\n-/* This is for -profile to use -lc_p instead of -lc.  */\n-#define LINUX_TARGET_CC1_SPEC \"%{profile:-p}\"\n-#ifndef CC1_SPEC\n-#define CC1_SPEC LINUX_TARGET_CC1_SPEC\n-#endif\n-\n-/* The GNU C++ standard library requires that these macros be defined.  */\n-#undef CPLUSPLUS_CPP_SPEC\n-#define CPLUSPLUS_CPP_SPEC \"-D_GNU_SOURCE %(cpp)\"\n-\n-#define LINUX_TARGET_LIB_SPEC \\\n-  \"%{pthread:-lpthread} \\\n-   %{shared:-lc} \\\n-   %{!shared:%{mieee-fp:-lieee} %{profile:-lc_p}%{!profile:-lc}}\"\n-#undef  LIB_SPEC\n-#define LIB_SPEC LINUX_TARGET_LIB_SPEC\n-\n /* C libraries supported on Linux.  */\n #ifdef SINGLE_LIBC\n #define OPTION_GLIBC  (DEFAULT_LIBC == LIBC_GLIBC)\n@@ -101,19 +50,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \tbuiltin_assert (\"system=posix\");\t\t\t\\\n     } while (0)\n \n-#if defined(HAVE_LD_EH_FRAME_HDR)\n-#define LINK_EH_SPEC \"%{!static:--eh-frame-hdr} \"\n-#endif\n-\n-#undef LINK_GCC_C_SEQUENCE_SPEC\n-#define LINK_GCC_C_SEQUENCE_SPEC \\\n-  \"%{static:--start-group} %G %L %{static:--end-group}%{!static:%G}\"\n-\n-/* Use --as-needed -lgcc_s for eh support.  */\n-#ifdef HAVE_LD_AS_NEEDED\n-#define USE_LD_AS_NEEDED 1\n-#endif\n-\n /* Determine which dynamic linker to use depending on whether GLIBC or\n    uClibc or Bionic is the default C library and whether\n    -muclibc or -mglibc or -mbionic has been passed to change the default.  */\n@@ -161,5 +97,3 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n /* Whether we have sincos that follows the GNU extension.  */\n #define TARGET_HAS_SINCOS (OPTION_GLIBC || OPTION_BIONIC)\n-\n-#define TARGET_POSIX_IO"}]}