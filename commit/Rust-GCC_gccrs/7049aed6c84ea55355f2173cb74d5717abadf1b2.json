{"sha": "7049aed6c84ea55355f2173cb74d5717abadf1b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA0OWFlZDZjODRlYTU1MzU1ZjIxNzNjYjc0ZDU3MTdhYmFkZjFiMg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-06-16T20:45:25Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-06-16T20:45:25Z"}, "message": "i386.c (decide_alg): Correctly handle maximum size of stringop algorithm.\n\n\t* config/i386/i386.c (decide_alg): Correctly handle\n\tmaximum size of stringop algorithm.\n\nFrom-SVN: r211714", "tree": {"sha": "600297ba5e05c6243f0431610c893cf0b80f82c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/600297ba5e05c6243f0431610c893cf0b80f82c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7049aed6c84ea55355f2173cb74d5717abadf1b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7049aed6c84ea55355f2173cb74d5717abadf1b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7049aed6c84ea55355f2173cb74d5717abadf1b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7049aed6c84ea55355f2173cb74d5717abadf1b2/comments", "author": null, "committer": null, "parents": [{"sha": "241e298a555017bd712757e14ef3488024493374", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/241e298a555017bd712757e14ef3488024493374", "html_url": "https://github.com/Rust-GCC/gccrs/commit/241e298a555017bd712757e14ef3488024493374"}], "stats": {"total": 83, "additions": 41, "deletions": 42}, "files": [{"sha": "f6485e16e0b35a73fae4eebefa0e508e45bd8225", "filename": "gcc/ChangeLog", "status": "modified", "additions": 38, "deletions": 39, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7049aed6c84ea55355f2173cb74d5717abadf1b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7049aed6c84ea55355f2173cb74d5717abadf1b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7049aed6c84ea55355f2173cb74d5717abadf1b2", "patch": "@@ -1,12 +1,16 @@\n+2014-06-16  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (decide_alg): Correctly handle\n+\tmaximum size of stringop algorithm.\n+\n 2014-06-16  Yury Gribov  <y.gribov@samsung.com>\n \n \t* asan.c (build_check_stmt): Fix maybe-uninitialized warning.\n \n 2014-06-16  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/61522\n-\t* lra-assigns.c (assign_by_spills): Check null\n-\ttargetm.spill_class.\n+\t* lra-assigns.c (assign_by_spills): Check null targetm.spill_class.\n \n 2014-06-16  Jan Hubicka  <hubicka@ucw.cz>\n \n@@ -57,12 +61,10 @@\n \t(build_check_stmt): Allow non-integer lengths; add support\n \tfor new parameter.\n \t(asan_instrument): Likewise.\n-\t(instrument_mem_region_access): Moved code to\n-\tbuild_check_stmt.\n+\t(instrument_mem_region_access): Moved code to build_check_stmt.\n \t(instrument_derefs): Likewise.\n \t(instrument_strlen_call): Likewise.\n-\t* cfgcleanup.c (old_insns_match_p): Add support for new\n-\tfunctions.\n+\t* cfgcleanup.c (old_insns_match_p): Add support for new functions.\n \t* doc/invoke.texi: Describe new parameter.\n \t* params.def: Define new parameter.\n \t* params.h: Likewise.\n@@ -87,7 +89,8 @@\n \n 2014-06-15  Jan Hubicka  <hubicka@ucw.cz>\n \n-\t* c-family/c-common.c (handle_tls_model_attribute): Use set_decl_tls_model.\n+\t* c-family/c-common.c (handle_tls_model_attribute): Use\n+\tset_decl_tls_model.\n \t* c-family/c-common.c (handle_tls_model_attribute): Use\n \tset_decl_tls_model.\n \t* cgraph.h (struct varpool_node): Add tls_model.\n@@ -323,8 +326,7 @@\n \t(eliminate): Generalize stmt removal handling, remove in\n \treverse dominator order to support proper debug stmt\n \tgeneration.  Update stmts before removing stmts.\n-\t* tree-ssa-propagate.c (propagate_tree_value): Remove\n-\tbogus assert.\n+\t* tree-ssa-propagate.c (propagate_tree_value): Remove bogus assert.\n \n 2014-06-13  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n@@ -346,7 +348,8 @@\n \t* ipa-visiblity.c (cgraph_externally_visible_p): Cleanup.\n \t(update_visibility_by_resolution_info): Consider UNDEF; fix checking;\n \treset sections of symbols dragged out of the comdats.\n-\t(function_and_variable_visibility): Reset sections of localized symbols.\n+\t(function_and_variable_visibility): Reset sections of\n+\tlocalized symbols.\n \n 2014-06-12  Jan Hubicka  <hubicka@ucw.cz>\n \n@@ -389,8 +392,8 @@\n \tvcgt_p8, vcgtq_p8, vcgtz_p8, vcgtz_u8, vcgtz_u16, vcgtz_u32, vcgtz_u64,\n \tvcgtzq_p8, vcgtzq_u8, vcgtzq_u16, vcgtzq_u32, vcgtzq_u64, vcgtzd_u64,\n \tvcle_p8, vcleq_p8, vclez_p8, vclez_u64, vclezq_p8, vclezd_u64, vclt_p8,\n-\tvcltq_p8, vcltz_p8, vcltzq_p8, vcltzd_u64): Remove functions as they are\n-\tnot in the spec.\n+\tvcltq_p8, vcltz_p8, vcltzq_p8, vcltzd_u64): Remove functions as they\n+\tare not in the spec.\n \n 2014-06-10  Alan Lawrence  <alan.lawrence@arm.com>\n \n@@ -436,9 +439,9 @@\n \t* sdbout.c (sdbout_one_type): Update.\n \t* tree-vect-data-refs.c (vect_can_force_dr_alignment_p): Update.\n \t* varasm.c (IN_NAMED_SECTION, get_named_section, resolve_unique_section,\n-\thot_function_section, get_named_text_section, USE_SELECT_SECTION_FOR_FUNCTIONS,\n-\tdefault_function_rodata_section, make_decl_rtl, default_unique_section):\n-\tUpdate.\n+\thot_function_section, get_named_text_section,\n+\tUSE_SELECT_SECTION_FOR_FUNCTIONS, default_function_rodata_section,\n+\tmake_decl_rtl, default_unique_section): Update.\n \t* config/c6x/c6x.c (c6x_in_small_data_p): Update.\n \t(c6x_elf_unique_section): Update.\n \t* config/nios2/nios2.c (nios2_in_small_data_p): Update.\n@@ -464,7 +467,8 @@\n \t(bfin_handle_l1_data_attribute): Update.\n \t(bfin_handle_l2_attribute): Update.\n \t* config/mep/mep.c (mep_unique_section): Update.\n-\t* config/microblaze/microblaze.c (microblaze_elf_in_small_data_p): Update.\n+\t* config/microblaze/microblaze.c (microblaze_elf_in_small_data_p):\n+\tUpdate.\n \t* config/h8300/h8300.c (h8300_handle_eightbit_data_attribute): Update.\n \t(h8300_handle_tiny_data_attribute): Update.\n \t* config/m32r/m32r.c (m32r_in_small_data_p): Update.\n@@ -771,9 +775,8 @@\n \n 2014-06-11  Jan Hubicka  <hubicka@ucw.cz>\n \n-\t* ipa-visibility.c (function_and_variable_visibility): Disable\n-\tvirtual table rewriting temporarily on targets not supporting\n-\tONE_ONLY.\n+\t* ipa-visibility.c (function_and_variable_visibility): Disable virtual\n+\ttable rewriting temporarily on targets not supporting ONE_ONLY.\n \n 2014-06-11  Richard Biener  <rguenther@suse.de>\n \n@@ -907,8 +910,8 @@\n \n 2014-06-10  Jan Hubicka  <hubicka@ucw.cz>\n \n-\t* ipa-reference.c (is_proper_for_analysis): Exclude addressable and public\n-\tvars.\n+\t* ipa-reference.c (is_proper_for_analysis): Exclude addressable\n+\tand public vars.\n \t(intersect_static_var_sets): Remove.\n \t(propagate): Do not prune local statics.\n \n@@ -954,13 +957,13 @@\n \tPR target/61062\n \t* config/arm/arm_neon.h (vtrn_s8, vtrn_s16, vtrn_u8, vtrn_u16, vtrn_p8,\n \tvtrn_p16, vtrn_s32, vtrn_f32, vtrn_u32, vtrnq_s8, vtrnq_s16, vtrnq_s32,\n-\tvtrnq_f32, vtrnq_u8, vtrnq_u16, vtrnq_u32, vtrnq_p8, vtrnq_p16, vzip_s8,\n-\tvzip_s16, vzip_u8, vzip_u16, vzip_p8, vzip_p16, vzip_s32, vzip_f32,\n-\tvzip_u32, vzipq_s8, vzipq_s16, vzipq_s32, vzipq_f32, vzipq_u8,\n-\tvzipq_u16, vzipq_u32, vzipq_p8, vzipq_p16, vuzp_s8, vuzp_s16, vuzp_s32,\n-\tvuzp_f32, vuzp_u8, vuzp_u16, vuzp_u32, vuzp_p8, vuzp_p16, vuzpq_s8,\n-\tvuzpq_s16, vuzpq_s32, vuzpq_f32, vuzpq_u8, vuzpq_u16, vuzpq_u32,\n-\tvuzpq_p8, vuzpq_p16): Correct mask for bigendian.\n+\tvtrnq_f32, vtrnq_u8, vtrnq_u16, vtrnq_u32, vtrnq_p8, vtrnq_p16,\n+\tvzip_s8, vzip_s16, vzip_u8, vzip_u16, vzip_p8, vzip_p16, vzip_s32,\n+\tvzip_f32, vzip_u32, vzipq_s8, vzipq_s16, vzipq_s32, vzipq_f32,\n+\tvzipq_u8, vzipq_u16, vzipq_u32, vzipq_p8, vzipq_p16, vuzp_s8, vuzp_s16,\n+\tvuzp_s32, vuzp_f32, vuzp_u8, vuzp_u16, vuzp_u32, vuzp_p8, vuzp_p16,\n+\tvuzpq_s8, vuzpq_s16, vuzpq_s32, vuzpq_f32, vuzpq_u8, vuzpq_u16,\n+\tvuzpq_u32, vuzpq_p8, vuzpq_p16): Correct mask for bigendian.\n \n 2014-06-09  Jan Hubicka  <hubicka@ucw.cz>\n \n@@ -982,21 +985,18 @@\n \t* tree.c (decl_comdat_group, decl_comdat_group_id): Constify argument.\n \t(decl_section_name, set_decl_section_name): New accessors.\n \t(find_decls_types_r): Do not walk section name\n-\t* tree.h (DECL_SECTION_NAME): Implement using\n-\tdecl_section_name.\n+\t* tree.h (DECL_SECTION_NAME): Implement using decl_section_name.\n \t(decl_comdat_group, decl_comdat_group_id): Constify.\n \t(decl_section_name, set_decl_section_name): Update.\n-\t* varpool.c (varpool_finalize_named_section_flags): Use\n-\tget_section.\n+\t* varpool.c (varpool_finalize_named_section_flags): Use get_section.\n \t* cgraph.c (cgraph_add_thunk): Reset node instead of rebuilding.\n \t(cgraph_make_node_local_1): Clear section and comdat group.\n \t* cgraph.h (set_comdat_group): Sanity check.\n \t(get_section, set_section): New.\n \t* ipa-comdats.c (ipa_comdats): Use get_section.\n \t* ipa.c (ipa_discover_readonly_nonaddressable_var): Likewise.\n \t* lto-streamer-out.c: Do not follow section names.\n-\t* c-family/c-common.c (handle_section_attribute):\n-\tUpdate.\n+\t* c-family/c-common.c (handle_section_attribute): Update.\n \t* lto-cgraph.c (lto_output_node): Output section.\n \t(lto_output_varpool_node): Likewise.\n \t(read_comdat_group): Rename to ...\n@@ -1005,8 +1005,7 @@\n \t(input_node, input_varpool_node): Input section names.\n \t* tree-emutls.c (get_emutls_init_templ_addr): Update.\n \t(new_emutls_decl): Update.\n-\t(secname_for_decl): Check section names only of static\n-\tvars.\n+\t(secname_for_decl): Check section names only of static vars.\n \t* config/mep/mep.c (mep_unique_section): Use set_decl_section_name.\n \t* config/i386/winnt.c (i386_pe_unique_section): Likewise.\n \t* config/i386/i386.c (x86_64_elf_unique_section): Likewise.\n@@ -1015,7 +1014,7 @@\n \t* config/mcore/mcore.c (mcore_unique_section): Likewise.\n \t* config/mips/mips.c (mips16_build_function_stub): Likewise.\n \t* config/v850/v850.c (v850_insert_attributes): Likewise.\n-\t* config/h8300/h8300.c: (h8300_handle_eightbit_data_attribute):\n+\t* config/h8300/h8300.c (h8300_handle_eightbit_data_attribute):\n \tLikewise.\n \t(h8300_handle_tiny_data_attribute): Likewise.\n \t* config/bfin/bfin.c (bfin_handle_l1_text_attribute): Likewise.\n@@ -1028,8 +1027,8 @@\n \n 2014-06-07  Jan Hubicka  <hubicka@ucw.cz>\n \n-\t* varasm.c (use_blocks_for_decl_p): Check symbol table instead of alias\n-\tattribute.\n+\t* varasm.c (use_blocks_for_decl_p): Check symbol table\n+\tinstead of alias attribute.\n \t(place_block_symbol): Recurse on aliases.\n \n 2014-06-07  Jan Hubicka  <hubicka@ucw.cz>"}, {"sha": "77d54e5bcb72363c12f752caec064aebdcdfadeb", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7049aed6c84ea55355f2173cb74d5717abadf1b2/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7049aed6c84ea55355f2173cb74d5717abadf1b2/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=7049aed6c84ea55355f2173cb74d5717abadf1b2", "patch": "@@ -23832,7 +23832,7 @@ decide_alg (HOST_WIDE_INT count, HOST_WIDE_INT expected_size,\n {\n   const struct stringop_algs * algs;\n   bool optimize_for_speed;\n-  int max = -1;\n+  int max = 0;\n   const struct processor_costs *cost;\n   int i;\n   bool any_alg_usable_p = false;\n@@ -23870,7 +23870,7 @@ decide_alg (HOST_WIDE_INT count, HOST_WIDE_INT expected_size,\n   /* If expected size is not known but max size is small enough\n      so inline version is a win, set expected size into\n      the range.  */\n-  if (max > 1 && (unsigned HOST_WIDE_INT) max >= max_size\n+  if (((max > 1 && (unsigned HOST_WIDE_INT) max >= max_size) || max == -1)\n       && expected_size == -1)\n     expected_size = min_size / 2 + max_size / 2;\n \n@@ -23959,7 +23959,7 @@ decide_alg (HOST_WIDE_INT count, HOST_WIDE_INT expected_size,\n             *dynamic_check = 128;\n           return loop_1_byte;\n         }\n-      if (max == -1)\n+      if (max <= 0)\n \tmax = 4096;\n       alg = decide_alg (count, max / 2, min_size, max_size, memset,\n \t\t\tzero_memset, dynamic_check, noalign);"}]}