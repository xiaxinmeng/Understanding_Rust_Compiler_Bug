{"sha": "31ee20ba67b2020f64f5068444f2b0409d128881", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFlZTIwYmE2N2IyMDIwZjY0ZjUwNjg0NDRmMmIwNDA5ZDEyODg4MQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-06-18T14:14:00Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-06-18T14:14:00Z"}, "message": "Makefile.in (cgraphunit.o): Add $(CFGLOOP_H) dependency.\n\n2013-06-18  Richard Biener  <rguenther@suse.de>\n\n\t* Makefile.in (cgraphunit.o): Add $(CFGLOOP_H) dependency.\n\t* cgraphunit.c: Include cfgloop.h.\n\t(init_lowered_empty_function): Initialize the loop tree.\n\t(assemble_thunk): Insert new BBs into loops.\n\nFrom-SVN: r200169", "tree": {"sha": "4c5453344740133739cf76909604ad591cc0c77f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c5453344740133739cf76909604ad591cc0c77f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31ee20ba67b2020f64f5068444f2b0409d128881", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31ee20ba67b2020f64f5068444f2b0409d128881", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31ee20ba67b2020f64f5068444f2b0409d128881", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31ee20ba67b2020f64f5068444f2b0409d128881/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac0511f2335deb48bc4c53b4305b1720e2cd7b73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac0511f2335deb48bc4c53b4305b1720e2cd7b73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac0511f2335deb48bc4c53b4305b1720e2cd7b73"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "4f0abd314cb176f80b10d47bde9676576846a856", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31ee20ba67b2020f64f5068444f2b0409d128881/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31ee20ba67b2020f64f5068444f2b0409d128881/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31ee20ba67b2020f64f5068444f2b0409d128881", "patch": "@@ -1,3 +1,10 @@\n+2013-06-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* Makefile.in (cgraphunit.o): Add $(CFGLOOP_H) dependency.\n+\t* cgraphunit.c: Include cfgloop.h.\n+\t(init_lowered_empty_function): Initialize the loop tree.\n+\t(assemble_thunk): Insert new BBs into loops.\n+\n 2013-06-18  Richard Biener  <rguenther@suse.de>\n \n \t* tree-streamer.h (streamer_tree_cache_create): Adjust prototype."}, {"sha": "ea18292907bf309cf0f277288ae8ab873511d625", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31ee20ba67b2020f64f5068444f2b0409d128881/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31ee20ba67b2020f64f5068444f2b0409d128881/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=31ee20ba67b2020f64f5068444f2b0409d128881", "patch": "@@ -2903,7 +2903,7 @@ cgraphunit.o : cgraphunit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) debug.h $(DIAGNOSTIC_H) \\\n    $(FIBHEAP_H) output.h $(PARAMS_H) $(RTL_H) $(IPA_PROP_H) \\\n    gt-cgraphunit.h tree-iterator.h $(COVERAGE_H) $(TREE_DUMP_H) \\\n-   $(GIMPLE_PRETTY_PRINT_H) $(IPA_INLINE_H) $(IPA_UTILS_H) \\\n+   $(GIMPLE_PRETTY_PRINT_H) $(IPA_INLINE_H) $(IPA_UTILS_H) $(CFGLOOP_H) \\\n    $(LTO_STREAMER_H) output.h $(REGSET_H) $(EXCEPT_H) $(GCC_PLUGIN_H) plugin.h\n cgraphclones.o : cgraphclones.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(TREE_INLINE_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) \\"}, {"sha": "51365eb167fcd5b4ef7b54b8f793183c2b903ecc", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31ee20ba67b2020f64f5068444f2b0409d128881/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31ee20ba67b2020f64f5068444f2b0409d128881/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=31ee20ba67b2020f64f5068444f2b0409d128881", "patch": "@@ -192,6 +192,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ipa-utils.h\"\n #include \"lto-streamer.h\"\n #include \"except.h\"\n+#include \"cfgloop.h\"\n #include \"regset.h\"     /* FIXME: For reg_obstack.  */\n \n /* Queue of cgraph nodes scheduled to be added into cgraph.  This is a\n@@ -1196,18 +1197,24 @@ init_lowered_empty_function (tree decl, bool in_ssa)\n       init_tree_ssa (cfun);\n       init_ssa_operands (cfun);\n       cfun->gimple_df->in_ssa_p = true;\n+      cfun->curr_properties |= PROP_ssa;\n     }\n \n   DECL_INITIAL (decl) = make_node (BLOCK);\n \n   DECL_SAVED_TREE (decl) = error_mark_node;\n-  cfun->curr_properties |=\n-    (PROP_gimple_lcf | PROP_gimple_leh | PROP_cfg | PROP_ssa | PROP_gimple_any);\n+  cfun->curr_properties |= (PROP_gimple_lcf | PROP_gimple_leh | PROP_gimple_any\n+\t\t\t    | PROP_cfg | PROP_loops);\n+\n+  set_loops_for_fn (cfun, ggc_alloc_cleared_loops ());\n+  init_loops_structure (cfun, loops_for_fn (cfun), 1);\n+  loops_for_fn (cfun)->state |= LOOPS_MAY_HAVE_MULTIPLE_LATCHES;\n \n   /* Create BB for body of the function and connect it properly.  */\n   bb = create_basic_block (NULL, (void *) 0, ENTRY_BLOCK_PTR);\n-  make_edge (ENTRY_BLOCK_PTR, bb, 0);\n+  make_edge (ENTRY_BLOCK_PTR, bb, EDGE_FALLTHRU);\n   make_edge (bb, EXIT_BLOCK_PTR, 0);\n+  add_bb_to_loop (bb, ENTRY_BLOCK_PTR->loop_father);\n \n   return bb;\n }\n@@ -1452,6 +1459,9 @@ assemble_thunk (struct cgraph_node *node)\n \t      then_bb = create_basic_block (NULL, (void *) 0, bb);\n \t      return_bb = create_basic_block (NULL, (void *) 0, then_bb);\n \t      else_bb = create_basic_block (NULL, (void *) 0, else_bb);\n+\t      add_bb_to_loop (then_bb, bb->loop_father);\n+\t      add_bb_to_loop (return_bb, bb->loop_father);\n+\t      add_bb_to_loop (else_bb, bb->loop_father);\n \t      remove_edge (single_succ_edge (bb));\n \t      true_label = gimple_block_label (then_bb);\n \t      stmt = gimple_build_cond (NE_EXPR, restmp,"}]}