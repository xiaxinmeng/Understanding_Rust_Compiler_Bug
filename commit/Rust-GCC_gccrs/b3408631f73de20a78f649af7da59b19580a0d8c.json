{"sha": "b3408631f73de20a78f649af7da59b19580a0d8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM0MDg2MzFmNzNkZTIwYTc4ZjY0OWFmN2RhNTliMTk1ODBhMGQ4Yw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2012-07-16T10:49:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-16T10:49:46Z"}, "message": "exp_pakd.adb, [...]: Minor reformatting.\n\n2012-07-16  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_pakd.adb, freeze.adb, sem_util.adb, vms_data.ads: Minor\n\treformatting.\n\nFrom-SVN: r189516", "tree": {"sha": "59bf343805c5796867dd24861bcced22dd664c28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59bf343805c5796867dd24861bcced22dd664c28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3408631f73de20a78f649af7da59b19580a0d8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3408631f73de20a78f649af7da59b19580a0d8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3408631f73de20a78f649af7da59b19580a0d8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3408631f73de20a78f649af7da59b19580a0d8c/comments", "author": null, "committer": null, "parents": [{"sha": "8bae3cefebfc940f629c0353ca345252844c0865", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bae3cefebfc940f629c0353ca345252844c0865", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bae3cefebfc940f629c0353ca345252844c0865"}], "stats": {"total": 56, "additions": 32, "deletions": 24}, "files": [{"sha": "0ce604e82fa23866f019f8f7643396fd12ee98b5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3408631f73de20a78f649af7da59b19580a0d8c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3408631f73de20a78f649af7da59b19580a0d8c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b3408631f73de20a78f649af7da59b19580a0d8c", "patch": "@@ -1,3 +1,8 @@\n+2012-07-16  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_pakd.adb, freeze.adb, sem_util.adb, vms_data.ads: Minor\n+\treformatting.\n+\n 2012-07-12  Vasiliy Fofanov  <fofanov@adacore.com>\n \n \t* vms_data.ads: Add VMS qualifiers for -gnatn1/2 switches."}, {"sha": "0d9ed4ee19d9b99880310009be4ba058aebcc8b8", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3408631f73de20a78f649af7da59b19580a0d8c/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3408631f73de20a78f649af7da59b19580a0d8c/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=b3408631f73de20a78f649af7da59b19580a0d8c", "patch": "@@ -570,13 +570,12 @@ package body Exp_Pakd is\n \n       Swap_F := RTE (Swap_RE);\n \n-      return Unchecked_Convert_To\n-               (T,\n-                Make_Function_Call (Loc,\n-                  Name                   =>\n-                    New_Occurrence_Of (Swap_F, Loc),\n-                  Parameter_Associations =>\n-                    New_List (Unchecked_Convert_To (Etype (Swap_F), N))));\n+      return\n+        Unchecked_Convert_To (T,\n+          Make_Function_Call (Loc,\n+            Name                   => New_Occurrence_Of (Swap_F, Loc),\n+            Parameter_Associations =>\n+              New_List (Unchecked_Convert_To (Etype (Swap_F), N))));\n    end Byte_Swap;\n \n    ------------------------------\n@@ -1534,8 +1533,8 @@ package body Exp_Pakd is\n             Set_Etype (New_Rhs, T);\n \n             if Reverse_Storage_Order (Base_Type (Atyp))\n-                 and then Esize (T) > 8\n-                 and then not In_Reverse_Storage_Order_Object (Obj)\n+              and then Esize (T) > 8\n+              and then not In_Reverse_Storage_Order_Object (Obj)\n             then\n                Require_Byte_Swapping := True;\n                New_Rhs := Byte_Swap (New_Rhs);\n@@ -2042,8 +2041,8 @@ package body Exp_Pakd is\n          --  in Expand_Bit_Packed_Element_Set).\n \n          if Reverse_Storage_Order (Atyp)\n-              and then Esize (Atyp) > 8\n-              and then not In_Reverse_Storage_Order_Object (Obj)\n+           and then Esize (Atyp) > 8\n+           and then not In_Reverse_Storage_Order_Object (Obj)\n          then\n             Obj := Byte_Swap (Obj);\n          end if;"}, {"sha": "7b5ecd9b9be927e04eb7a2f0f3cbab8445037f5b", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3408631f73de20a78f649af7da59b19580a0d8c/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3408631f73de20a78f649af7da59b19580a0d8c/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=b3408631f73de20a78f649af7da59b19580a0d8c", "patch": "@@ -1046,9 +1046,8 @@ package body Freeze is\n                         (Type_Definition (Declaration_Node (Encl_Type)));\n       end if;\n \n-      --  Note: the Reverse_Storage_Order flag is set on the base type,\n-      --  but the attribute definition clause is attached to the first\n-      --  subtype.\n+      --  Note: the Reverse_Storage_Order flag is set on the base type, but\n+      --  the attribute definition clause is attached to the first subtype.\n \n       Comp_Type := Base_Type (Comp_Type);\n       ADC := Get_Attribute_Definition_Clause\n@@ -1057,16 +1056,17 @@ package body Freeze is\n \n       if (Is_Record_Type (Comp_Type) or else Is_Array_Type (Comp_Type))\n            and then\n-         (No (ADC) or else Reverse_Storage_Order (Encl_Type)\n-                        /= Reverse_Storage_Order (Etype (Comp_Type)))\n+             (No (ADC) or else Reverse_Storage_Order (Encl_Type) /=\n+                               Reverse_Storage_Order (Etype (Comp_Type)))\n       then\n          Error_Msg_N\n            (\"component type must have same scalar storage order as \"\n             & \"enclosing composite\", Err_Node);\n \n       elsif Aliased_Present (Comp_Def) then\n-         Error_Msg_N (\"aliased component not permitted for type with \"\n-                      & \"explicit Scalar_Storage_Order\", Err_Node);\n+         Error_Msg_N\n+           (\"aliased component not permitted for type with \"\n+            & \"explicit Scalar_Storage_Order\", Err_Node);\n       end if;\n    end Check_Component_Storage_Order;\n \n@@ -3746,7 +3746,7 @@ package body Freeze is\n                   --  Check for scalar storage order\n \n                   if Present (Get_Attribute_Definition_Clause\n-                               (E, Attribute_Scalar_Storage_Order))\n+                                (E, Attribute_Scalar_Storage_Order))\n                   then\n                      Check_Component_Storage_Order (E, Empty);\n                   end if;"}, {"sha": "bd53144c7eb1bcaad3ee872f411c9649a56b99b9", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3408631f73de20a78f649af7da59b19580a0d8c/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3408631f73de20a78f649af7da59b19580a0d8c/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=b3408631f73de20a78f649af7da59b19580a0d8c", "patch": "@@ -6312,11 +6312,11 @@ package body Sem_Util is\n    function In_Reverse_Storage_Order_Object (N : Node_Id) return Boolean is\n       Pref : Node_Id;\n       Btyp : Entity_Id := Empty;\n-   begin\n-      Pref := N;\n \n+   begin\n       --  Climb up indexed components\n \n+      Pref := N;\n       loop\n          case Nkind (Pref) is\n             when N_Selected_Component =>\n@@ -6336,9 +6336,10 @@ package body Sem_Util is\n          Btyp := Base_Type (Etype (Pref));\n       end if;\n \n-      return Present (Btyp)\n-               and then (Is_Record_Type (Btyp) or else Is_Array_Type (Btyp))\n-               and then Reverse_Storage_Order (Btyp);\n+      return\n+        Present (Btyp)\n+          and then (Is_Record_Type (Btyp) or else Is_Array_Type (Btyp))\n+          and then Reverse_Storage_Order (Btyp);\n    end In_Reverse_Storage_Order_Object;\n \n    --------------------------------------"}, {"sha": "e7d93fffd8c5e50da7fe0750ff6caea4f5223089", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3408631f73de20a78f649af7da59b19580a0d8c/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3408631f73de20a78f649af7da59b19580a0d8c/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=b3408631f73de20a78f649af7da59b19580a0d8c", "patch": "@@ -1826,6 +1826,9 @@ package VMS_Data is\n    --                    (/OPTIMIZE=SOME) or higher (/OPTIMIZE=UNROLL_LOOPS)\n    --                    levels of optimization.\n    --\n+   --        PRAGMA_LEVEL_1/2 not documented ???\n+   --\n+   --\n    --        FULL        Front end inlining. The front end inlining activated\n    --                    by this switch is generally more extensive, and quite\n    --                    often more effective than the standard PRAGMA inlining"}]}