{"sha": "fd6e874db015a3ad5ea8fa7187db271701a4bf29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ2ZTg3NGRiMDE1YTNhZDVlYThmYTcxODdkYjI3MTcwMWE0YmYyOQ==", "commit": {"author": {"name": "Marcin Dalecki", "email": "martin@dalecki.de", "date": "2005-03-28T18:14:00Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-03-28T18:14:00Z"}, "message": "jartool.c (main): Indentation fixlet.\n\n2005-03-28  Marcin Dalecki  <martin@dalecki.de>\n\n\t* jartool.c (main): Indentation fixlet.\n\t(add_entry): Likewise.\n\t(init_args): Don't use K&R style.\n\t(jt_strdup): Likewise.\n\t(get_next_arg): Add explicit '(void)'.\n\t(init_headers): Likewise.\n\t(version): Likewise.\n\nFrom-SVN: r97135", "tree": {"sha": "8931c05388b35a6649f32b57c2ae33ba33536901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8931c05388b35a6649f32b57c2ae33ba33536901"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd6e874db015a3ad5ea8fa7187db271701a4bf29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd6e874db015a3ad5ea8fa7187db271701a4bf29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd6e874db015a3ad5ea8fa7187db271701a4bf29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd6e874db015a3ad5ea8fa7187db271701a4bf29/comments", "author": {"login": "rosomak", "id": 2399361, "node_id": "MDQ6VXNlcjIzOTkzNjE=", "avatar_url": "https://avatars.githubusercontent.com/u/2399361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rosomak", "html_url": "https://github.com/rosomak", "followers_url": "https://api.github.com/users/rosomak/followers", "following_url": "https://api.github.com/users/rosomak/following{/other_user}", "gists_url": "https://api.github.com/users/rosomak/gists{/gist_id}", "starred_url": "https://api.github.com/users/rosomak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rosomak/subscriptions", "organizations_url": "https://api.github.com/users/rosomak/orgs", "repos_url": "https://api.github.com/users/rosomak/repos", "events_url": "https://api.github.com/users/rosomak/events{/privacy}", "received_events_url": "https://api.github.com/users/rosomak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "93764b5b0aa887d89262a7f3ae0e4ac80c7e363f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93764b5b0aa887d89262a7f3ae0e4ac80c7e363f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93764b5b0aa887d89262a7f3ae0e4ac80c7e363f"}], "stats": {"total": 35, "additions": 23, "deletions": 12}, "files": [{"sha": "bd3c4ca270b8debcb4759065c55818ea4f3bf15b", "filename": "fastjar/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd6e874db015a3ad5ea8fa7187db271701a4bf29/fastjar%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd6e874db015a3ad5ea8fa7187db271701a4bf29/fastjar%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2FChangeLog?ref=fd6e874db015a3ad5ea8fa7187db271701a4bf29", "patch": "@@ -1,3 +1,13 @@\n+2005-03-28  Marcin Dalecki  <martin@dalecki.de>\n+\n+\t* jartool.c (main): Indentation fixlet.\n+\t(add_entry): Likewise.\n+\t(init_args): Don't use K&R style.\n+\t(jt_strdup): Likewise.\n+\t(get_next_arg): Add explicit '(void)'.\n+\t(init_headers): Likewise.\n+\t(version): Likewise.\n+\n 2005-03-15  Zack Weinberg  <zack@codesourcery.com>\n \n \t* Makefile.am (fastjar_TEXINFOS): Add gcc-vers.texi."}, {"sha": "09f5dbcb78733c8083e33c6f34fca2e97daabe9e", "filename": "fastjar/jartool.c", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd6e874db015a3ad5ea8fa7187db271701a4bf29/fastjar%2Fjartool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd6e874db015a3ad5ea8fa7187db271701a4bf29/fastjar%2Fjartool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2Fjartool.c?ref=fd6e874db015a3ad5ea8fa7187db271701a4bf29", "patch": "@@ -1,6 +1,6 @@\n /*\n   jartool.c - main functions for fastjar utility\n-  Copyright (C) 2002, 2004  Free Software Foundation\n+  Copyright (C) 2002, 2004, 2005  Free Software Foundation\n   Copyright (C) 1999, 2000, 2001  Bryan Burns\n   \n   This program is free software; you can redistribute it and/or\n@@ -335,7 +335,8 @@ static const struct option options[] =\n   { NULL, no_argument, NULL, 0 }\n };\n \n-int main(int argc, char **argv){\n+int main(int argc, char **argv)\n+{\n \n   char *mfile = NULL;\n   \n@@ -602,9 +603,7 @@ static int args_current_g;\n static char **args_g;\n \n static void \n-init_args(args, current)\n-     char **args;\n-     int current;\n+init_args(char **args, int current)\n {\n   if(!read_names_from_stdin)\n     {\n@@ -614,7 +613,7 @@ init_args(args, current)\n }\n \n static char *\n-get_next_arg ()\n+get_next_arg (void)\n {\n   static int reached_end = 0;\n \n@@ -674,7 +673,8 @@ get_next_arg ()\n     }\n }\n \n-void init_headers(){\n+void init_headers(void)\n+{\n   /* packing file header */\n   /* magic number */\n   file_header[0] = 0x50;\n@@ -725,7 +725,8 @@ void init_headers(){\n   \n }\n \n-void add_entry(struct zipentry *ze){\n+void add_entry(struct zipentry *ze)\n+{\n \n   if(ziplist == NULL){\n     ziplist = ze;\n@@ -906,7 +907,8 @@ int read_entries (int fd)\n   return 0;\n }\n \n-int make_manifest(int jfd, const char *mf_name, int updating){\n+int make_manifest(int jfd, const char *mf_name, int updating)\n+{\n   time_t current_time;\n   int nlen;   /* length of file name */\n   int mod_time; /* file modification time */\n@@ -2212,7 +2214,7 @@ void usage(const char *filename){\n   exit (1);\n }\n \n-void version ()\n+void version (void)\n {\n   printf(\"jar (%s) %s\\n\\n\", PACKAGE, VERSION);\n   printf(\"Copyright 1999, 2000, 2001  Bryan Burns\\n\");\n@@ -2264,8 +2266,7 @@ Example 2: use an existing manifest file 'mymanifest' and archive all the\\n\\\n }\n \n static char *\n-jt_strdup(s)\n-     char *s;\n+jt_strdup(char *s)\n {\n   char *result = (char*)malloc(strlen(s) + 1);\n   if (result == (char*)0)"}]}