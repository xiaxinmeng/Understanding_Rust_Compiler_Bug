{"sha": "690e11b8f57616d1a3d176d869412d8183d65fe9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkwZTExYjhmNTc2MTZkMWEzZDE3NmQ4Njk0MTJkODE4M2Q2NWZlOQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-11-12T19:43:57Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-11-12T19:43:57Z"}, "message": "re PR testsuite/14264 (testsuite should set LC_ALL/LANG to C)\n\n2004-11-12  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR other/14264\n        * lib/g++.exp: Set LC_ALL and LANG to C.\n        * lib/gcc-dg.exp: Likewise.\n        * lib/gfortran.exp: Likewise.\n        * lib/objc.exp: Likewise.\n        * lib/treelang.exp: Likewise.\n2004-11-12  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR other/14264\n        * testsuite/lib/libstdc++.exp: Set LC_ALL and LANG to C.\n2004-11-12  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR other/14264\n        * testsuite/lib/libjava.exp: Set LC_ALL and LANG to C.\n\nFrom-SVN: r90539", "tree": {"sha": "aa4f122c96b75d9da588cdbe5cd148ebe442e5d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa4f122c96b75d9da588cdbe5cd148ebe442e5d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/690e11b8f57616d1a3d176d869412d8183d65fe9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/690e11b8f57616d1a3d176d869412d8183d65fe9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/690e11b8f57616d1a3d176d869412d8183d65fe9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/690e11b8f57616d1a3d176d869412d8183d65fe9/comments", "author": null, "committer": null, "parents": [{"sha": "2941ddc40c965ec17dd12f4af234b09aa053966c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2941ddc40c965ec17dd12f4af234b09aa053966c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2941ddc40c965ec17dd12f4af234b09aa053966c"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "853cd4a6a4821d463e3242e01f5d75480d3f9a77", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690e11b8f57616d1a3d176d869412d8183d65fe9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690e11b8f57616d1a3d176d869412d8183d65fe9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=690e11b8f57616d1a3d176d869412d8183d65fe9", "patch": "@@ -1,3 +1,12 @@\n+2004-11-12  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR other/14264\n+\t* lib/g++.exp: Set LC_ALL and LANG to C.\n+\t* lib/gcc-dg.exp: Likewise.\n+\t* lib/gfortran.exp: Likewise.\n+\t* lib/objc.exp: Likewise.\n+\t* lib/treelang.exp: Likewise.\n+\n 2004-11-12  Andreas Schwab  <schwab@suse.de>\n \n \t* gcc.dg/pr16286.c: Fix last change."}, {"sha": "d591238f1394042e09cadb17f7e9a6b110f5863a", "filename": "gcc/testsuite/lib/g++.exp", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690e11b8f57616d1a3d176d869412d8183d65fe9/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690e11b8f57616d1a3d176d869412d8183d65fe9/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp?ref=690e11b8f57616d1a3d176d869412d8183d65fe9", "patch": "@@ -218,6 +218,10 @@ proc g++_init { args } {\n     global TESTING_IN_BUILD_TREE\n     global target_triplet\n \n+    # We set LC_ALL and LANG to C so that we get the same error messages as expected.\n+    setenv LC_ALL C\n+    setenv LANG C\n+\n     if ![info exists GXX_UNDER_TEST] then {\n \tif [info exists TOOL_EXECUTABLE] {\n \t    set GXX_UNDER_TEST $TOOL_EXECUTABLE;"}, {"sha": "848526b32b9e06c934287123408478a5fe029911", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690e11b8f57616d1a3d176d869412d8183d65fe9/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690e11b8f57616d1a3d176d869412d8183d65fe9/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=690e11b8f57616d1a3d176d869412d8183d65fe9", "patch": "@@ -22,6 +22,10 @@ load_lib scantree.exp\n load_lib prune.exp\n load_lib libgloss.exp\n \n+# We set LC_ALL and LANG to C so that we get the same error messages as expected.\n+setenv LC_ALL C\n+setenv LANG C\n+\n if ![info exists TORTURE_OPTIONS] {\n     # It is theoretically beneficial to group all of the O2/O3 options together,\n     # as in many cases the compiler will generate identical executables for"}, {"sha": "1207d2b572bf64ac6bd8b7722c581b85e18a46e2", "filename": "gcc/testsuite/lib/gfortran.exp", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690e11b8f57616d1a3d176d869412d8183d65fe9/gcc%2Ftestsuite%2Flib%2Fgfortran.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690e11b8f57616d1a3d176d869412d8183d65fe9/gcc%2Ftestsuite%2Flib%2Fgfortran.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgfortran.exp?ref=690e11b8f57616d1a3d176d869412d8183d65fe9", "patch": "@@ -161,6 +161,10 @@ proc gfortran_init { args } {\n     global GFORTRAN_UNDER_TEST\n     global TESTING_IN_BUILD_TREE\n \n+    # We set LC_ALL and LANG to C so that we get the same error messages as expected.\n+    setenv LC_ALL C\n+    setenv LANG C\n+\n     if ![info exists GFORTRAN_UNDER_TEST] then {\n \tif [info exists TOOL_EXECUTABLE] {\n \t    set GFORTRAN_UNDER_TEST $TOOL_EXECUTABLE;"}, {"sha": "6cba354cfc92a9eedf7fb232edd64be9f190ed81", "filename": "gcc/testsuite/lib/objc.exp", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690e11b8f57616d1a3d176d869412d8183d65fe9/gcc%2Ftestsuite%2Flib%2Fobjc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690e11b8f57616d1a3d176d869412d8183d65fe9/gcc%2Ftestsuite%2Flib%2Fobjc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fobjc.exp?ref=690e11b8f57616d1a3d176d869412d8183d65fe9", "patch": "@@ -94,6 +94,10 @@ proc objc_init { args } {\n     global TOOL_EXECUTABLE\n     global objc_libgcc_s_path\n \n+    # We set LC_ALL and LANG to C so that we get the same error messages as expected.\n+    setenv LC_ALL C\n+    setenv LANG C\n+\n     if { $objc_initialized == 1 } { return; }\n \n     if ![info exists OBJC_UNDER_TEST] then {"}, {"sha": "6d3777382bf21a866caf961a7e892dfe558cd216", "filename": "gcc/testsuite/lib/treelang.exp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690e11b8f57616d1a3d176d869412d8183d65fe9/gcc%2Ftestsuite%2Flib%2Ftreelang.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690e11b8f57616d1a3d176d869412d8183d65fe9/gcc%2Ftestsuite%2Flib%2Ftreelang.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftreelang.exp?ref=690e11b8f57616d1a3d176d869412d8183d65fe9", "patch": "@@ -91,6 +91,12 @@ proc treelang_init { args } {\n     global TOOL_EXECUTABLE\n     global treelang_libgcc_s_path\n \n+\n+    # We set LC_ALL and LANG to C so that we get the same error messages as expected.\n+    setenv LC_ALL C\n+    setenv LANG C\n+\n+\n     if { $treelang_initialized == 1 } { return; }\n \n     if ![info exists TREELANG_UNDER_TEST] then {"}, {"sha": "1e9a691317b23375c1aa9d75904e1e2631bf3136", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690e11b8f57616d1a3d176d869412d8183d65fe9/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690e11b8f57616d1a3d176d869412d8183d65fe9/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=690e11b8f57616d1a3d176d869412d8183d65fe9", "patch": "@@ -1,3 +1,8 @@\n+2004-11-12  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR other/14264\n+\t* testsuite/lib/libjava.exp: Set LC_ALL and LANG to C.\n+\n 2004-11-11  Casey Marshall  <csm@gnu.org>\n \n \t* gnu/java/nio/FileLock.java (isValid): locks are valid if the"}, {"sha": "3e960a9545f8b95a0a6b8a1c67c1df423a99a561", "filename": "libjava/testsuite/lib/libjava.exp", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690e11b8f57616d1a3d176d869412d8183d65fe9/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690e11b8f57616d1a3d176d869412d8183d65fe9/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flib%2Flibjava.exp?ref=690e11b8f57616d1a3d176d869412d8183d65fe9", "patch": "@@ -140,6 +140,10 @@ proc libjava_init { args } {\n     global libjava_libgcc_s_path\n     global target_triplet\n \n+    # We set LC_ALL and LANG to C so that we get the same error messages as expected.\n+    setenv LC_ALL C\n+    setenv LANG C\n+\n     if { $libjava_initialized == 1 } { return; }\n \n     if ![info exists GCJ_UNDER_TEST] {"}, {"sha": "ff93b2df6a9b64fcd76c6b62d7a440fd5e853c98", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690e11b8f57616d1a3d176d869412d8183d65fe9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690e11b8f57616d1a3d176d869412d8183d65fe9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=690e11b8f57616d1a3d176d869412d8183d65fe9", "patch": "@@ -1,3 +1,8 @@\n+2004-11-12  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR other/14264\n+\t* testsuite/lib/libstdc++.exp: Set LC_ALL and LANG to C.\n+\n 2004-11-09  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/locale_facets.tcc (time_get<>::do_get_weekday,"}, {"sha": "c570eae132d6df5ec0f2c339cdeb6249c917a965", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690e11b8f57616d1a3d176d869412d8183d65fe9/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690e11b8f57616d1a3d176d869412d8183d65fe9/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=690e11b8f57616d1a3d176d869412d8183d65fe9", "patch": "@@ -84,6 +84,10 @@ proc libstdc++_init { testfile } {\n     global original_ld_library_path\n     global target_triplet\n \n+    # We set LC_ALL and LANG to C so that we get the same error messages as expected.\n+    setenv LC_ALL C\n+    setenv LANG C\n+\n     set blddir [lookfor_file [get_multilibs] libstdc++-v3]\n     set flags_file \"${blddir}/scripts/testsuite_flags\"\n     v3track flags_file 2"}]}