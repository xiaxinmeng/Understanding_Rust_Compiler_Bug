{"sha": "6d5093dad6a4927d23a914300605e76dd00c7a15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ1MDkzZGFkNmE0OTI3ZDIzYTkxNDMwMDYwNWU3NmRkMDBjN2ExNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-09-11T08:33:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-09-11T08:33:55Z"}, "message": "re PR middle-end/91725 (ICE in get_nonzero_bits starting with r275587)\n\n\tPR middle-end/91725\n\t* match.pd ((A / (1 << B)) -> (A >> B)): Call tree_nonzero_bits instead\n\tof get_nonzero_bits, only call it for integral types.\n\n\t* gcc.c-torture/compile/pr91725.c: New test.\n\nFrom-SVN: r275633", "tree": {"sha": "2a3c8464e7a84791fc7d67aaa5319e7c48c8ca68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a3c8464e7a84791fc7d67aaa5319e7c48c8ca68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d5093dad6a4927d23a914300605e76dd00c7a15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d5093dad6a4927d23a914300605e76dd00c7a15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d5093dad6a4927d23a914300605e76dd00c7a15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d5093dad6a4927d23a914300605e76dd00c7a15/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dc5b11916a2e318bd15d60f6cfd01d1e306ffbfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc5b11916a2e318bd15d60f6cfd01d1e306ffbfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc5b11916a2e318bd15d60f6cfd01d1e306ffbfb"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "360e606f47e3685624c858364c54a4f79954c0ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d5093dad6a4927d23a914300605e76dd00c7a15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d5093dad6a4927d23a914300605e76dd00c7a15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d5093dad6a4927d23a914300605e76dd00c7a15", "patch": "@@ -1,3 +1,9 @@\n+2019-09-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/91725\n+\t* match.pd ((A / (1 << B)) -> (A >> B)): Call tree_nonzero_bits instead\n+\tof get_nonzero_bits, only call it for integral types.\n+\n 2019-09-11  Richard Biener  <rguenther@suse.de>\n \n \tRevert"}, {"sha": "5690cf3d34905feaba1a7ba62d70db905163e29f", "filename": "gcc/match.pd", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d5093dad6a4927d23a914300605e76dd00c7a15/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d5093dad6a4927d23a914300605e76dd00c7a15/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=6d5093dad6a4927d23a914300605e76dd00c7a15", "patch": "@@ -325,9 +325,11 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n \t      && (TYPE_UNSIGNED (TREE_TYPE (@1))\n \t\t  || (element_precision (type)\n \t\t      == element_precision (TREE_TYPE (@1)))\n-\t\t  || (get_nonzero_bits (@0)\n-\t\t      & wi::mask (element_precision (TREE_TYPE (@1)) - 1, true,\n-\t\t\t\t  element_precision (type))) == 0))))\n+\t\t  || (INTEGRAL_TYPE_P (type)\n+\t\t      && (tree_nonzero_bits (@0)\n+\t\t\t  & wi::mask (element_precision (TREE_TYPE (@1)) - 1,\n+\t\t\t\t      true,\n+\t\t\t\t      element_precision (type))) == 0)))))\n   (rshift @0 @2)))\n \n /* Preserve explicit divisions by 0: the C++ front-end wants to detect"}, {"sha": "8ef80620c08a62de545bf7fc1830a0133be2c89e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d5093dad6a4927d23a914300605e76dd00c7a15/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d5093dad6a4927d23a914300605e76dd00c7a15/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d5093dad6a4927d23a914300605e76dd00c7a15", "patch": "@@ -1,3 +1,8 @@\n+2019-09-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/91725\n+\t* gcc.c-torture/compile/pr91725.c: New test.\n+\n 2019-09-11  Richard Biener  <rguenther@suse.de>\n \n \tRevert"}, {"sha": "f614a1c5e323d5afa3a48c921fc87927e9458d09", "filename": "gcc/testsuite/gcc.c-torture/compile/pr91725.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d5093dad6a4927d23a914300605e76dd00c7a15/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr91725.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d5093dad6a4927d23a914300605e76dd00c7a15/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr91725.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr91725.c?ref=6d5093dad6a4927d23a914300605e76dd00c7a15", "patch": "@@ -0,0 +1,7 @@\n+/* PR middle-end/91725 */\n+\n+unsigned long long\n+foo (unsigned long long x, unsigned long long y, int z)\n+{\n+  return (x + y) / (1 << z);\n+}"}]}