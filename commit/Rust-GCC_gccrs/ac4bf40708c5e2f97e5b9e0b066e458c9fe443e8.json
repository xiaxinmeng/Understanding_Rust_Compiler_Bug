{"sha": "ac4bf40708c5e2f97e5b9e0b066e458c9fe443e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM0YmY0MDcwOGM1ZTJmOTdlNWI5ZTBiMDY2ZTQ1OGM5ZmU0NDNlOA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-02-17T13:39:30Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-02-17T13:39:30Z"}, "message": "[ARM] PR target/69161: Don't ignore mode when matching comparison operator in cstore-like patterns\n\n\tPR target/69161\n\t* config/arm/predicates.md (arm_comparison_operator_mode):\n\tNew predicate.\n\t* config/arm/arm.md (*mov_scc): Use arm_comparison_operator_mode\n\tinstead of arm_comparison_operator.\n\t(*mov_negscc): Likewise.\n\t(*mov_notscc): Likewise.\n\t* config/arm/thumb2.md (*thumb2_mov_scc): Likewise.\n\t(*thumb2_mov_negscc): Likewise.\n\t(*thumb2_mov_negscc_strict_it): Likewise.\n\t(*thumb2_mov_notscc): Likewise.\n\t(*thumb2_mov_notscc_strict_it): Likewise.\n\nFrom-SVN: r233495", "tree": {"sha": "e71c03feb17b974d093577917ea659dc7bf2d1bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e71c03feb17b974d093577917ea659dc7bf2d1bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac4bf40708c5e2f97e5b9e0b066e458c9fe443e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac4bf40708c5e2f97e5b9e0b066e458c9fe443e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac4bf40708c5e2f97e5b9e0b066e458c9fe443e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac4bf40708c5e2f97e5b9e0b066e458c9fe443e8/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ffacd7263e1106d7ce54fff91138801e2fe10fb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffacd7263e1106d7ce54fff91138801e2fe10fb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffacd7263e1106d7ce54fff91138801e2fe10fb2"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "5f4bd78259578c2ef860f95d8ab9d16ab87008a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4bf40708c5e2f97e5b9e0b066e458c9fe443e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4bf40708c5e2f97e5b9e0b066e458c9fe443e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac4bf40708c5e2f97e5b9e0b066e458c9fe443e8", "patch": "@@ -1,3 +1,18 @@\n+2016-02-17  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/69161\n+\t* config/arm/predicates.md (arm_comparison_operator_mode):\n+\tNew predicate.\n+\t* config/arm/arm.md (*mov_scc): Use arm_comparison_operator_mode\n+\tinstead of arm_comparison_operator.\n+\t(*mov_negscc): Likewise.\n+\t(*mov_notscc): Likewise.\n+\t* config/arm/thumb2.md (*thumb2_mov_scc): Likewise.\n+\t(*thumb2_mov_negscc): Likewise.\n+\t(*thumb2_mov_negscc_strict_it): Likewise.\n+\t(*thumb2_mov_notscc): Likewise.\n+\t(*thumb2_mov_notscc_strict_it): Likewise.\n+\n 2016-02-17  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_internal_mov_immediate):"}, {"sha": "e67239deb6de88710fd6589311ef407dc6836a83", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4bf40708c5e2f97e5b9e0b066e458c9fe443e8/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4bf40708c5e2f97e5b9e0b066e458c9fe443e8/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=ac4bf40708c5e2f97e5b9e0b066e458c9fe443e8", "patch": "@@ -7175,7 +7175,7 @@\n \n (define_insn_and_split \"*mov_scc\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n-\t(match_operator:SI 1 \"arm_comparison_operator\"\n+\t(match_operator:SI 1 \"arm_comparison_operator_mode\"\n \t [(match_operand 2 \"cc_register\" \"\") (const_int 0)]))]\n   \"TARGET_ARM\"\n   \"#\"   ; \"mov%D1\\\\t%0, #0\\;mov%d1\\\\t%0, #1\"\n@@ -7192,7 +7192,7 @@\n \n (define_insn_and_split \"*mov_negscc\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n-\t(neg:SI (match_operator:SI 1 \"arm_comparison_operator\"\n+\t(neg:SI (match_operator:SI 1 \"arm_comparison_operator_mode\"\n \t\t [(match_operand 2 \"cc_register\" \"\") (const_int 0)])))]\n   \"TARGET_ARM\"\n   \"#\"   ; \"mov%D1\\\\t%0, #0\\;mvn%d1\\\\t%0, #0\""}, {"sha": "b1cd556211a200a73487c5947fcab08886ae749e", "filename": "gcc/config/arm/predicates.md", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4bf40708c5e2f97e5b9e0b066e458c9fe443e8/gcc%2Fconfig%2Farm%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4bf40708c5e2f97e5b9e0b066e458c9fe443e8/gcc%2Fconfig%2Farm%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpredicates.md?ref=ac4bf40708c5e2f97e5b9e0b066e458c9fe443e8", "patch": "@@ -333,6 +333,13 @@\n   (and (match_operand 0 \"expandable_comparison_operator\")\n        (match_test \"maybe_get_arm_condition_code (op) != ARM_NV\")))\n \n+;; Likewise, but don't ignore the mode.\n+;; RTL SET operations require their operands source and destination have\n+;; the same modes, so we can't ignore the modes there.  See PR target/69161.\n+(define_predicate \"arm_comparison_operator_mode\"\n+  (and (match_operand 0 \"expandable_comparison_operator\")\n+       (match_test \"maybe_get_arm_condition_code (op) != ARM_NV\")))\n+\n (define_special_predicate \"lt_ge_comparison_operator\"\n   (match_code \"lt,ge\"))\n "}, {"sha": "992536593d6c0a8b8fe5a324f32e279c69746157", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4bf40708c5e2f97e5b9e0b066e458c9fe443e8/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4bf40708c5e2f97e5b9e0b066e458c9fe443e8/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=ac4bf40708c5e2f97e5b9e0b066e458c9fe443e8", "patch": "@@ -370,7 +370,7 @@\n \n (define_insn_and_split \"*thumb2_mov_scc\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=l,r\")\n-\t(match_operator:SI 1 \"arm_comparison_operator\"\n+\t(match_operator:SI 1 \"arm_comparison_operator_mode\"\n \t [(match_operand 2 \"cc_register\" \"\") (const_int 0)]))]\n   \"TARGET_THUMB2\"\n   \"#\"   ; \"ite\\\\t%D1\\;mov%D1\\\\t%0, #0\\;mov%d1\\\\t%0, #1\"\n@@ -388,7 +388,7 @@\n \n (define_insn_and_split \"*thumb2_mov_negscc\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n-\t(neg:SI (match_operator:SI 1 \"arm_comparison_operator\"\n+\t(neg:SI (match_operator:SI 1 \"arm_comparison_operator_mode\"\n \t\t [(match_operand 2 \"cc_register\" \"\") (const_int 0)])))]\n   \"TARGET_THUMB2 && !arm_restrict_it\"\n   \"#\"   ; \"ite\\\\t%D1\\;mov%D1\\\\t%0, #0\\;mvn%d1\\\\t%0, #0\"\n@@ -407,7 +407,7 @@\n \n (define_insn_and_split \"*thumb2_mov_negscc_strict_it\"\n   [(set (match_operand:SI 0 \"low_register_operand\" \"=l\")\n-\t(neg:SI (match_operator:SI 1 \"arm_comparison_operator\"\n+\t(neg:SI (match_operator:SI 1 \"arm_comparison_operator_mode\"\n \t\t [(match_operand 2 \"cc_register\" \"\") (const_int 0)])))]\n   \"TARGET_THUMB2 && arm_restrict_it\"\n   \"#\"   ; \";mvn\\\\t%0, #0 ;it\\\\t%D1\\;mov%D1\\\\t%0, #0\\\"\n@@ -436,7 +436,7 @@\n \n (define_insn_and_split \"*thumb2_mov_notscc\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n-\t(not:SI (match_operator:SI 1 \"arm_comparison_operator\"\n+\t(not:SI (match_operator:SI 1 \"arm_comparison_operator_mode\"\n \t\t [(match_operand 2 \"cc_register\" \"\") (const_int 0)])))]\n   \"TARGET_THUMB2 && !arm_restrict_it\"\n   \"#\"   ; \"ite\\\\t%D1\\;mvn%D1\\\\t%0, #0\\;mvn%d1\\\\t%0, #1\"\n@@ -456,7 +456,7 @@\n \n (define_insn_and_split \"*thumb2_mov_notscc_strict_it\"\n   [(set (match_operand:SI 0 \"low_register_operand\" \"=l\")\n-        (not:SI (match_operator:SI 1 \"arm_comparison_operator\"\n+\t(not:SI (match_operator:SI 1 \"arm_comparison_operator_mode\"\n                  [(match_operand 2 \"cc_register\" \"\") (const_int 0)])))]\n   \"TARGET_THUMB2 && arm_restrict_it\"\n   \"#\"   ; \"mvn %0, #0 ; it%d1 ; lsl%d1 %0, %0, #1\""}]}