{"sha": "49bfcf43817fb7d36f168ef2ba992b652747e0b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDliZmNmNDM4MTdmYjdkMzZmMTY4ZWYyYmE5OTJiNjUyNzQ3ZTBiMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T09:43:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T09:43:16Z"}, "message": "[multiple changes]\n\n2011-08-03  Pascal Obry  <obry@adacore.com>\n\n\t* makeutl.adb: Minor reformatting.\n\n2011-08-03  Vincent Celier  <celier@adacore.com>\n\n\t* fname-uf.adb\n\t(Get_File_Name) If the file cannot be found when there are no config\n\tpragmas file and May_Fail is True, return No_File instead of the file\n\tname, to be consistent.\n\n2011-08-03  Pascal Obry  <obry@adacore.com>\n\n\t* adaint.c (__gnat_is_executable_file_attr): Avoid access\n\tto null pointer.\n\n2011-08-03  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch13.adb\n\t(Same_Representation): In VM targets the representation of arrays with\n\taliased components differs from arrays with non-aliased components.\n\nFrom-SVN: r177251", "tree": {"sha": "14bc2c85a3df74963dc24d3e23e51dbb300a8275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14bc2c85a3df74963dc24d3e23e51dbb300a8275"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49bfcf43817fb7d36f168ef2ba992b652747e0b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49bfcf43817fb7d36f168ef2ba992b652747e0b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49bfcf43817fb7d36f168ef2ba992b652747e0b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49bfcf43817fb7d36f168ef2ba992b652747e0b2/comments", "author": null, "committer": null, "parents": [{"sha": "3479844114fb9da80145e748af1ba33c93127f6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3479844114fb9da80145e748af1ba33c93127f6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3479844114fb9da80145e748af1ba33c93127f6d"}], "stats": {"total": 75, "additions": 56, "deletions": 19}, "files": [{"sha": "180fd82ec5ccadf900336fc37db95adbcc9ef040", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49bfcf43817fb7d36f168ef2ba992b652747e0b2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49bfcf43817fb7d36f168ef2ba992b652747e0b2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=49bfcf43817fb7d36f168ef2ba992b652747e0b2", "patch": "@@ -1,3 +1,25 @@\n+2011-08-03  Pascal Obry  <obry@adacore.com>\n+\n+\t* makeutl.adb: Minor reformatting.\n+\n+2011-08-03  Vincent Celier  <celier@adacore.com>\n+\n+\t* fname-uf.adb\n+\t(Get_File_Name) If the file cannot be found when there are no config\n+\tpragmas file and May_Fail is True, return No_File instead of the file\n+\tname, to be consistent.\n+\n+2011-08-03  Pascal Obry  <obry@adacore.com>\n+\n+\t* adaint.c (__gnat_is_executable_file_attr): Avoid access\n+\tto null pointer.\n+\n+2011-08-03  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch13.adb\n+\t(Same_Representation): In VM targets the representation of arrays with\n+\taliased components differs from arrays with non-aliased components.\n+\n 2011-08-03  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj-proc.adb, prj-attr.adb, prj-attr.ads (Get_Attribute_Index): do"}, {"sha": "3d4c50a979cbae5385f49917ca4b4d235d83a0c7", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49bfcf43817fb7d36f168ef2ba992b652747e0b2/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49bfcf43817fb7d36f168ef2ba992b652747e0b2/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=49bfcf43817fb7d36f168ef2ba992b652747e0b2", "patch": "@@ -2149,7 +2149,8 @@ __gnat_is_executable_file_attr (char* name, struct file_attributes* attr)\n \t TCHAR *l, *last = _tcsstr(wname, _T(\".exe\"));\n \n \t /* look for last .exe */\n-\t while (l = _tcsstr(last+1, _T(\".exe\"))) last = l;\n+\t if (last)\n+\t   while (l = _tcsstr(last+1, _T(\".exe\"))) last = l;\n \n \t attr->executable = GetFileAttributes (wname) != INVALID_FILE_ATTRIBUTES\n \t   && last - wname == (int) (_tcslen (wname) - 4);"}, {"sha": "1e550c1d45e7d648a7aa21f05b1efce5d681cea1", "filename": "gcc/ada/fname-uf.adb", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49bfcf43817fb7d36f168ef2ba992b652747e0b2/gcc%2Fada%2Ffname-uf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49bfcf43817fb7d36f168ef2ba992b652747e0b2/gcc%2Fada%2Ffname-uf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-uf.adb?ref=49bfcf43817fb7d36f168ef2ba992b652747e0b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -469,10 +469,15 @@ package body Fname.UF is\n                      --  the default GNAT naming scheme. The file does\n                      --  not exist, but there is no point doing the\n                      --  second search, because we will end up with the\n-                     --  same file name. Just return the file name.\n+                     --  same file name. Just return the file name, or No_File\n+                     --  if May_Fail is True.\n \n                      elsif SFN_Patterns.Last = 2 then\n-                        return Fnam;\n+                        if May_Fail then\n+                           return No_File;\n+                        else\n+                           return Fnam;\n+                        end if;\n \n                      --  The file does not exist, but there may be other\n                      --  naming scheme. Keep on searching."}, {"sha": "743ea6d492e6c7d9c7997a26ba105b109ec95d86", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49bfcf43817fb7d36f168ef2ba992b652747e0b2/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49bfcf43817fb7d36f168ef2ba992b652747e0b2/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=49bfcf43817fb7d36f168ef2ba992b652747e0b2", "patch": "@@ -23,6 +23,12 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Ada.Command_Line;          use Ada.Command_Line;\n+\n+with GNAT.Case_Util;            use GNAT.Case_Util;\n+with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n+with GNAT.HTable;\n+\n with ALI;      use ALI;\n with Debug;\n with Fname;\n@@ -36,12 +42,6 @@ with Snames;   use Snames;\n with Table;\n with Tempdir;\n \n-with Ada.Command_Line;  use Ada.Command_Line;\n-\n-with GNAT.Case_Util;            use GNAT.Case_Util;\n-with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n-with GNAT.HTable;\n-\n package body Makeutl is\n \n    type Mark_Key is record\n@@ -687,13 +687,13 @@ package body Makeutl is\n       Value        : out Variable_Value;\n       Is_Default   : out Boolean)\n    is\n-      Project       : constant Project_Id :=\n-        Ultimate_Extending_Project_Of (Source_Prj);\n-      Pkg : constant Package_Id :=\n-        Prj.Util.Value_Of\n-          (Name        => Pkg_Name,\n-           In_Packages => Project.Decl.Packages,\n-           In_Tree     => Project_Tree);\n+      Project : constant Project_Id :=\n+                  Ultimate_Extending_Project_Of (Source_Prj);\n+      Pkg     : constant Package_Id :=\n+                  Prj.Util.Value_Of\n+                    (Name        => Pkg_Name,\n+                     In_Packages => Project.Decl.Packages,\n+                     In_Tree     => Project_Tree);\n    begin\n       Is_Default := False;\n "}, {"sha": "8e240de9c55d9f238dfeff962b6727d0593760bd", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49bfcf43817fb7d36f168ef2ba992b652747e0b2/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49bfcf43817fb7d36f168ef2ba992b652747e0b2/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=49bfcf43817fb7d36f168ef2ba992b652747e0b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -7292,7 +7292,16 @@ package body Sem_Ch13 is\n            and then Known_Component_Size (T2)\n            and then Component_Size (T1) = Component_Size (T2)\n          then\n-            return True;\n+            if VM_Target = No_VM then\n+               return True;\n+\n+            --  In VM targets the representation of arrays with aliased\n+            --  components differs from arrays with non-aliased components\n+\n+            else\n+               return Has_Aliased_Components (Base_Type (T1))\n+                 = Has_Aliased_Components (Base_Type (T2));\n+            end if;\n          end if;\n       end if;\n "}]}