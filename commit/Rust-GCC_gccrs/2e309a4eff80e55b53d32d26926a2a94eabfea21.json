{"sha": "2e309a4eff80e55b53d32d26926a2a94eabfea21", "node_id": "C_kwDOANBUbNoAKDJlMzA5YTRlZmY4MGU1NWI1M2QzMmQyNjkyNmEyYTk0ZWFiZmVhMjE", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-04-06T08:39:56Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-05-11T12:24:21Z"}, "message": "libgomp testsuite: Don't amend 'LD_LIBRARY_PATH' for system-provided HSA Runtime library\n\nThis is only active if GCC is 'configure'd with '--with-hsa-runtime=[...]' or\n'--with-hsa-runtime-lib=[...]' -- which nobody really is doing, as far as I can\ntell.\n\n'libgomp/testsuite/lib/libgomp.exp:libgomp_init' states:\n\n    # For build-tree testing, also consider the library paths used for builing.\n    # For installed testing, we assume all that to be provided in the sysroot.\n    if { $blddir != \"\" } {\n        [...]\n        global hsa_runtime_lib\n        if { $hsa_runtime_lib != \"\" } {\n            append always_ld_library_path \":$hsa_runtime_lib\"\n        }\n    }\n\nHowever, the libgomp GCN plugin is unconditionally built against the\nGCC-shipped 'include/hsa*.h' header files, and at run time does\n'dlopen(\"libhsa-runtime64.so.1\")', so there is no system-provided HSA Runtime\nlibrary \"used for builing\".  It thus doesn't make sense to amend\n'LD_LIBRARY_PATH' for system-provided HSA Runtime library.\n\n\tlibgomp/\n\t* testsuite/lib/libgomp.exp (libgomp_init): Don't\n\t'append always_ld_library_path \":$hsa_runtime_lib\"'.\n\t* testsuite/libgomp-test-support.exp.in (hsa_runtime_lib): Don't set.", "tree": {"sha": "0c05f284b58dcea83b4e6603443b74edce003823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c05f284b58dcea83b4e6603443b74edce003823"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e309a4eff80e55b53d32d26926a2a94eabfea21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e309a4eff80e55b53d32d26926a2a94eabfea21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e309a4eff80e55b53d32d26926a2a94eabfea21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e309a4eff80e55b53d32d26926a2a94eabfea21/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fa689767a8a55c889683d178ae3a003ec689927", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fa689767a8a55c889683d178ae3a003ec689927", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fa689767a8a55c889683d178ae3a003ec689927"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "0aaa58f19c55ff1fcf17c7bf0a25e0531798bf9c", "filename": "libgomp/testsuite/lib/libgomp.exp", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e309a4eff80e55b53d32d26926a2a94eabfea21/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e309a4eff80e55b53d32d26926a2a94eabfea21/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp?ref=2e309a4eff80e55b53d32d26926a2a94eabfea21", "patch": "@@ -202,10 +202,6 @@ proc libgomp_init { args } {\n \t    lappend ALWAYS_CFLAGS \"additional_flags=-L$cuda_driver_lib\"\n \t    append always_ld_library_path \":$cuda_driver_lib\"\n \t}\n-\tglobal hsa_runtime_lib\n-\tif { $hsa_runtime_lib != \"\" } {\n-\t    append always_ld_library_path \":$hsa_runtime_lib\"\n-\t}\n     }\n \n     # We use atomic operations in the testcases to validate results."}, {"sha": "3c88d1d5a6216a381f5cd6c3fe6d3b244ebc7900", "filename": "libgomp/testsuite/libgomp-test-support.exp.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e309a4eff80e55b53d32d26926a2a94eabfea21/libgomp%2Ftestsuite%2Flibgomp-test-support.exp.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e309a4eff80e55b53d32d26926a2a94eabfea21/libgomp%2Ftestsuite%2Flibgomp-test-support.exp.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp-test-support.exp.in?ref=2e309a4eff80e55b53d32d26926a2a94eabfea21", "patch": "@@ -1,6 +1,5 @@\n set cuda_driver_include \"@CUDA_DRIVER_INCLUDE@\"\n set cuda_driver_lib \"@CUDA_DRIVER_LIB@\"\n-set hsa_runtime_lib \"@HSA_RUNTIME_LIB@\"\n \n set offload_plugins \"@offload_plugins@\"\n set offload_targets \"@offload_targets@\""}]}