{"sha": "544eb21ead5b54b95b4ef853da71095415891b97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ0ZWIyMWVhZDViNTRiOTViNGVmODUzZGE3MTA5NTQxNTg5MWI5Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-06-09T19:19:18Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-06-09T19:19:18Z"}, "message": "Comment out lines containing just formfeeds.\n\nFrom-SVN: r14185", "tree": {"sha": "56d2b8a66c5e44f7f005db0d587a0c45515764e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56d2b8a66c5e44f7f005db0d587a0c45515764e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/544eb21ead5b54b95b4ef853da71095415891b97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/544eb21ead5b54b95b4ef853da71095415891b97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/544eb21ead5b54b95b4ef853da71095415891b97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/544eb21ead5b54b95b4ef853da71095415891b97/comments", "author": null, "committer": null, "parents": [{"sha": "83488369f977a0b11ad4cfd580b2d9d661cee043", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83488369f977a0b11ad4cfd580b2d9d661cee043", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83488369f977a0b11ad4cfd580b2d9d661cee043"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "cee9e72a44b973075d688b633bab0076c4d773c0", "filename": "gcc/Makefile.in", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544eb21ead5b54b95b4ef853da71095415891b97/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544eb21ead5b54b95b4ef853da71095415891b97/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=544eb21ead5b54b95b4ef853da71095415891b97", "patch": "@@ -431,7 +431,7 @@ all: all.indirect\n \n ####build overrides\n @build_overrides@\n-\f\n+#\f\n # Now figure out from those variables how to compile and link.\n \n all.indirect: $(ALL)\n@@ -488,7 +488,7 @@ INCLUDES = -I. -I$(srcdir) -I$(srcdir)/config\n # This tells GNU make version 3 not to export all the variables\n # defined in this file into the environment.\n .NOEXPORT:\n-\f\n+#\f\n # Support for additional languages (other than c and objc).\n # ??? objc can be supported this way too (leave for later).\n \n@@ -529,7 +529,7 @@ FLAGS_TO_PASS = \\\n \t\"tooldir=$(tooldir)\" \\\n \t\"bindir=$(bindir)\" \\\n \t\"libsubdir=$(libsubdir)\"\n-\f\n+#\f\n # Lists of files for various purposes.\n \n # Language-specific object files for C.\n@@ -624,7 +624,7 @@ BYTECODE_H = bytecode.h bc-emit.h bc-optab.h\n \n # \"t\" or nothing, for building multilibbed versions of, say, crtbegin.o.\n T =\n-\f\n+#\f\n # Language makefile fragments.\n \n # The following targets define the interface between us and the languages.\n@@ -648,7 +648,7 @@ T =\n @language_fragments@\n \n # End of language makefile fragments.\n-\f\n+#\f\n # Avoid a lot of time thinking about remaking Makefile.in and *.def.\n .SUFFIXES: .in .def\n \n@@ -779,7 +779,7 @@ xlimits.h: glimits.h limitx.h limity.h\n \t  cat $(srcdir)/glimits.h > tmp-xlimits.h; \\\n \tfi\n \tmv tmp-xlimits.h xlimits.h\n-\f\n+#\f\n # Build libgcc.a.\n # This is done in two parts because some functions, in libgcc1.c,\n # must be compiled with something other than GCC,\n@@ -1136,7 +1136,7 @@ stamp-crt0:\t$(CRT0_S) $(MCRT0_S) $(GCC_PASSES) $(CONFIG_H)\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(CRT0STUFF_T_CFLAGS) \\\n \t  -o mcrt0.o -c $(MCRT0_S)\n \ttouch stamp-crt0\n-\f\n+#\f\n # Compiling object files from source files.\n \n # Note that dependencies on obstack.h are not written\n@@ -1384,7 +1384,7 @@ alloca.o:\talloca.c\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(ALLOCA_FLAGS) \\\n \t  -c `echo $(srcdir)/alloca.c | sed 's,^\\./,,'`\n \t$(ALLOCA_FINISH)\n-\f\n+#\f\n # Generate header and source files from the machine description, \n # and compile them.\n \n@@ -1509,7 +1509,7 @@ stamp-output : $(md_file) genoutput $(srcdir)/move-if-change\n \t./genoutput $(md_file) > tmp-output.c\n \t$(srcdir)/move-if-change tmp-output.c insn-output.c\n \ttouch stamp-output\n-\f\n+#\f\n # Compile the programs that generate insn-* from the machine description.\n # They are compiled with $(HOST_CC), and associated libraries,\n # since they need to run on this machine\n@@ -1602,7 +1602,7 @@ genoutput : genoutput.o $(HOST_RTL) $(HOST_LIBDEPS)\n \n genoutput.o : genoutput.c $(RTL_H) $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genoutput.c\n-\f\n+#\f\n # Compile the libraries to be used by gen*.\n # If we are not cross-building, gen* use the same .o's that cc1 will use,\n # and HOST_PREFIX_1 is `foobar', just to ensure these rules don't conflict\n@@ -1641,7 +1641,7 @@ $(HOST_PREFIX_1)malloc.o: malloc.c\n # that does not need to compile alloca, malloc or whatever.\n $(HOST_PREFIX_1): \n \ttouch $(HOST_PREFIX_1)\n-\f\n+#\f\n # Remake bytecode files.\n BI_OBJ=bi-parser.o bi-lexer.o bi-reverse.o\n \n@@ -1710,7 +1710,7 @@ bytecode.distclean bytecode.clean:\tbytecode.mostlyclean\n bytecode.maintainer-clean: bytecode.clean\n \t-rm -f bi-parser.c bi-parser.h\n \n-\f\n+#\f\n # Remake cpp and protoize.\n \n # Making the preprocessor\n@@ -1846,7 +1846,7 @@ gcov.o: gcov.c gcov-io.h\n \n gcov: gcov.o $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) gcov.o $(LIBS) -o $@\n-\f\n+#\f\n # Build the include directory.  The stamp files are stmp-* rather than\n # stamp-* so that mostlyclean does not force the include directory to\n # be rebuilt.\n@@ -1984,7 +1984,7 @@ stmp-fixproto: fixhdr.ready fixproto stmp-headers\n \t  touch include/fixed; \\\n \tfi\n \ttouch stmp-fixproto\n-\f\n+#\f\n # Remake the info files.\n \n doc: info\n@@ -2011,7 +2011,7 @@ $(srcdir)/cpp.dvi: cpp.texi\n $(srcdir)/INSTALL: install1.texi install.texi\n \t$(MAKEINFO) -D INSTALLONLY --no-header --no-split \\\n \t  `echo $(srcdir)/install1.texi | sed 's,^\\./,,'`\n-\f\n+#\f\n # Deletion of files made during compilation.\n # There are four levels of this:\n #   `mostlyclean', `clean', `distclean' and `maintainer-clean'.\n@@ -2139,7 +2139,7 @@ maintainer-clean:\n \t-rm -f cexp.c cexp.output TAGS \n \t-rm -f cpp.info* cpp.??s cpp.*aux\n \t-rm -f gcc.info* gcc.??s gcc.*aux\n-\f\n+#\f\n # Entry points `install' and `uninstall'.\n # Also use `install-collect2' to install collect2 when the config files don't.\n \n@@ -2396,7 +2396,7 @@ uninstall: lang.uninstall\n \t-rm -rf $(mandir)/cccp$(manext)\n \t-rm -rf $(mandir)/protoize$(manext)\n \t-rm -rf $(mandir)/unprotoize$(manext)\n-\f\n+#\f\n # These exist for maintenance purposes.\n \n # Update the tags table."}]}