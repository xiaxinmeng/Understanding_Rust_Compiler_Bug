{"sha": "002ff5bc3ea7c58a574c64e4d45d58ff60c6171b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAyZmY1YmMzZWE3YzU4YTU3NGM2NGU0ZDQ1ZDU4ZmY2MGM2MTcxYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-05-29T20:29:21Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-05-29T20:29:21Z"}, "message": "i386.c (ix86_compute_frame_layout): Do add bottom alignment for alloca.\n\n        * config/i386/i386.c (ix86_compute_frame_layout): Do add bottom\n        alignment for alloca.\n\n\t* gcc.c-torture/execute/alloca-1.c: New.\n\nFrom-SVN: r54018", "tree": {"sha": "0a9bd5d94ab8f9e568b01c40c442821c3c32f51e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a9bd5d94ab8f9e568b01c40c442821c3c32f51e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/002ff5bc3ea7c58a574c64e4d45d58ff60c6171b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/002ff5bc3ea7c58a574c64e4d45d58ff60c6171b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/002ff5bc3ea7c58a574c64e4d45d58ff60c6171b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/002ff5bc3ea7c58a574c64e4d45d58ff60c6171b/comments", "author": null, "committer": null, "parents": [{"sha": "edfe859577f8230c1dc6ff13fcbcf5f93bdbcf14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edfe859577f8230c1dc6ff13fcbcf5f93bdbcf14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edfe859577f8230c1dc6ff13fcbcf5f93bdbcf14"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "14069a7f6b16227c55dfa3ee1b9cf3aa0c633ef8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/002ff5bc3ea7c58a574c64e4d45d58ff60c6171b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/002ff5bc3ea7c58a574c64e4d45d58ff60c6171b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=002ff5bc3ea7c58a574c64e4d45d58ff60c6171b", "patch": "@@ -1,3 +1,8 @@\n+2002-05-29  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/i386.c (ix86_compute_frame_layout): Do add bottom\n+\talignment for alloca.\n+\n 2002-05-29  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.c (output_pic_addr_const): Lowercase rip."}, {"sha": "877f3554ffbec789eb977eccd9cc41f37fd053dc", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/002ff5bc3ea7c58a574c64e4d45d58ff60c6171b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/002ff5bc3ea7c58a574c64e4d45d58ff60c6171b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=002ff5bc3ea7c58a574c64e4d45d58ff60c6171b", "patch": "@@ -4148,8 +4148,9 @@ ix86_compute_frame_layout (frame)\n   else\n     frame->outgoing_arguments_size = 0;\n \n-  /* Align stack boundary.  Only needed if we're calling another function.  */\n-  if (!current_function_is_leaf)\n+  /* Align stack boundary.  Only needed if we're calling another function\n+     or using alloca.  */\n+  if (!current_function_is_leaf || current_function_calls_alloca)\n     frame->padding2 = ((offset + preferred_alignment - 1)\n \t\t       & -preferred_alignment) - offset;\n   else"}, {"sha": "a8d1384c6ecebb1029153a52a7df56741cbd4dde", "filename": "gcc/testsuite/gcc.c-torture/execute/alloca-1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/002ff5bc3ea7c58a574c64e4d45d58ff60c6171b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Falloca-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/002ff5bc3ea7c58a574c64e4d45d58ff60c6171b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Falloca-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Falloca-1.c?ref=002ff5bc3ea7c58a574c64e4d45d58ff60c6171b", "patch": "@@ -0,0 +1,21 @@\n+/* Verify that alloca storage is sufficiently aligned.  */\n+/* ??? May fail if BIGGEST_ALIGNMENT > STACK_BOUNDARY.  Which, I guess\n+   can only happen on !STRICT_ALIGNMENT targets.  */\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+struct dummy { int x __attribute__((aligned)); };\n+#define BIGGEST_ALIGNMENT __alignof__(struct dummy)\n+\n+_Bool foo(void)\n+{\n+  char *p = __builtin_alloca(32);\n+  return ((size_t)p & (BIGGEST_ALIGNMENT - 1)) == 0;\n+}\n+\n+int main()\n+{\n+  if (!foo())\n+    abort ();\n+  return 0;\n+}"}]}