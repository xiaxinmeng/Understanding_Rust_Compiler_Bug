{"sha": "8c2e1d6ca5497c08ec72abe9da93e4a7869e0f0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMyZTFkNmNhNTQ5N2MwOGVjNzJhYmU5ZGE5M2U0YTc4NjllMGYwZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-05-01T14:08:44Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-05-01T14:08:44Z"}, "message": "re PR go/85429 (Several gotools tests FAIL with Solaris as)\n\n\tPR go/85429\n    cmd/go: support more Solaris assembler syntaxes\n    \n    Patch by Rainer Orth.\n    \n    Reviewed-on: https://go-review.googlesource.com/110563\n\nFrom-SVN: r259797", "tree": {"sha": "618443c6ea7d062014803691e7ac05c766aee430", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/618443c6ea7d062014803691e7ac05c766aee430"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c2e1d6ca5497c08ec72abe9da93e4a7869e0f0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c2e1d6ca5497c08ec72abe9da93e4a7869e0f0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c2e1d6ca5497c08ec72abe9da93e4a7869e0f0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c2e1d6ca5497c08ec72abe9da93e4a7869e0f0e/comments", "author": null, "committer": null, "parents": [{"sha": "38dff92114f41914541fded07bee54c48b817ee2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38dff92114f41914541fded07bee54c48b817ee2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38dff92114f41914541fded07bee54c48b817ee2"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "61a5bc2206b760ebc97ab720ff805cc905ff03c1", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c2e1d6ca5497c08ec72abe9da93e4a7869e0f0e/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c2e1d6ca5497c08ec72abe9da93e4a7869e0f0e/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=8c2e1d6ca5497c08ec72abe9da93e4a7869e0f0e", "patch": "@@ -1,4 +1,4 @@\n-32861fd0acb0f3232f66be4791388b27e71c9990\n+380527c032f02446438c71b0ac0026bcab416be5\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "2636128b1a7ec25e2dcdbd7fa956796776ab1e3b", "filename": "libgo/go/cmd/go/internal/work/buildid.go", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c2e1d6ca5497c08ec72abe9da93e4a7869e0f0e/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fwork%2Fbuildid.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c2e1d6ca5497c08ec72abe9da93e4a7869e0f0e/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fwork%2Fbuildid.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fwork%2Fbuildid.go?ref=8c2e1d6ca5497c08ec72abe9da93e4a7869e0f0e", "patch": "@@ -303,16 +303,35 @@ func (b *Builder) gccgoToolID(name, language string) (string, error) {\n \treturn id, nil\n }\n \n+// Check if assembler used by gccgo is GNU as.\n+func assemblerIsGas() bool {\n+\tcmd := exec.Command(BuildToolchain.compiler(), \"-print-prog-name=as\")\n+\tassembler, err := cmd.Output()\n+\tif err == nil {\n+\t\tcmd := exec.Command(strings.TrimSpace(string(assembler)), \"--version\")\n+\t\tout, err := cmd.Output()\n+\t\tif err == nil && strings.Contains(string(out), \"GNU\") {\n+\t\t\treturn true\n+\t\t} else {\n+\t\t\treturn false\n+\t\t}\n+\t} else {\n+\t\treturn false\n+\t}\n+}\n+\n // gccgoBuildIDELFFile creates an assembler file that records the\n // action's build ID in an SHF_EXCLUDE section.\n func (b *Builder) gccgoBuildIDELFFile(a *Action) (string, error) {\n \tsfile := a.Objdir + \"_buildid.s\"\n \n \tvar buf bytes.Buffer\n-\tif cfg.Goos != \"solaris\" {\n+\tif cfg.Goos != \"solaris\" || assemblerIsGas() {\n \t\tfmt.Fprintf(&buf, \"\\t\"+`.section .go.buildid,\"e\"`+\"\\n\")\n-\t} else {\n+\t} else if cfg.Goarch == \"sparc\" || cfg.Goarch == \"sparc64\" {\n \t\tfmt.Fprintf(&buf, \"\\t\"+`.section \".go.buildid\",#exclude`+\"\\n\")\n+\t} else { // cfg.Goarch == \"386\" || cfg.Goarch == \"amd64\"\n+\t\tfmt.Fprintf(&buf, \"\\t\"+`.section .go.buildid,#exclude`+\"\\n\")\n \t}\n \tfmt.Fprintf(&buf, \"\\t.byte \")\n \tfor i := 0; i < len(a.buildID); i++ {"}]}