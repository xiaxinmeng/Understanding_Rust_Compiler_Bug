{"sha": "56a65d12a85d590fa513a56ea034e9e6eb69ce8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZhNjVkMTJhODVkNTkwZmE1MTNhNTZlYTAzNGU5ZTZlYjY5Y2U4YQ==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1993-01-31T18:07:14Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1993-01-31T18:07:14Z"}, "message": "(zvdep32): Handle 5 bit immediates for operand 1.\n\n(ashlsi3): Likewise.\n(and + ashift): New combine pattern.\n\nFrom-SVN: r3396", "tree": {"sha": "f0306537e9bcca9188f11243a0a7871fdfed14ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0306537e9bcca9188f11243a0a7871fdfed14ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56a65d12a85d590fa513a56ea034e9e6eb69ce8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56a65d12a85d590fa513a56ea034e9e6eb69ce8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56a65d12a85d590fa513a56ea034e9e6eb69ce8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56a65d12a85d590fa513a56ea034e9e6eb69ce8a/comments", "author": null, "committer": null, "parents": [{"sha": "32d2858d9bb916d436dee58605552d504fca5d5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32d2858d9bb916d436dee58605552d504fca5d5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32d2858d9bb916d436dee58605552d504fca5d5b"}], "stats": {"total": 66, "additions": 43, "deletions": 23}, "files": [{"sha": "15e7854227ce880c9b84f3f2abde0b260dd03c27", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 43, "deletions": 23, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56a65d12a85d590fa513a56ea034e9e6eb69ce8a/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56a65d12a85d590fa513a56ea034e9e6eb69ce8a/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=56a65d12a85d590fa513a56ea034e9e6eb69ce8a", "patch": "@@ -2214,7 +2214,7 @@\n \n (define_expand \"ashlsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(ashift:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t(ashift:SI (match_operand:SI 1 \"arith5_operand\" \"\")\n \t\t   (match_operand:SI 2 \"arith32_operand\" \"\")))]\n   \"\"\n   \"\n@@ -2226,14 +2226,17 @@\n       emit_insn (gen_zvdep32 (operands[0], operands[1], temp));\n       DONE;\n     }\n+  /* Make sure both inputs are not constants, \n+     the recognizer can't handle that.  */\n+  operands[1] = force_reg (SImode, operands[1]);\n }\")\n \n (define_insn \"\"\n- [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-       (ashift:SI (match_operand:SI 1 \"register_operand\" \"r\")\n-\t\t  (match_operand:SI 2 \"const_int_operand\" \"n\")))]\n- \"\"\n- \"*\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(ashift:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t   (match_operand:SI 2 \"const_int_operand\" \"n\")))]\n+  \"\"\n+  \"*\n {\n   rtx xoperands[4];\n   xoperands[0] = operands[0];\n@@ -2245,12 +2248,14 @@\n }\")\n \n (define_insn \"zvdep32\"\n- [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-       (ashift:SI (match_operand:SI 1 \"register_operand\" \"r\")\n-\t\t  (minus:SI (const_int 31)\n-\t\t\t    (match_operand:SI 2 \"register_operand\" \"q\"))))]\n- \"\"\n- \"zvdep %1,32,%0\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n+\t(ashift:SI (match_operand:SI 1 \"arith5_operand\" \"r,L\")\n+\t\t   (minus:SI (const_int 31)\n+\t\t\t     (match_operand:SI 2 \"register_operand\" \"q,q\"))))]\n+  \"\"\n+  \"@\n+   zvdep %1,32,%0\n+   zvdepi %1,32,%0\")\n \n (define_expand \"ashrsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n@@ -2269,11 +2274,11 @@\n }\")\n \n (define_insn \"\"\n- [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-       (ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"r\")\n-\t\t    (match_operand:SI 2 \"const_int_operand\" \"n\")))]\n- \"\"\n- \"*\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t     (match_operand:SI 2 \"const_int_operand\" \"n\")))]\n+  \"\"\n+  \"*\n {\n   rtx xoperands[4];\n   xoperands[0] = operands[0];\n@@ -2285,12 +2290,12 @@\n }\")\n \n (define_insn \"vextrs32\"\n- [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-       (ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"r\")\n-\t\t    (minus:SI (const_int 31)\n-\t\t\t      (match_operand:SI 2 \"register_operand\" \"q\"))))]\n- \"\"\n- \"vextrs %1,32,%0\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t     (minus:SI (const_int 31)\n+\t\t\t       (match_operand:SI 2 \"register_operand\" \"q\"))))]\n+  \"\"\n+  \"vextrs %1,32,%0\")\n \n (define_insn \"lshrsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n@@ -2356,6 +2361,21 @@\n   \"shd %1,%2,%4,%0\"\n   [(set_attr \"type\" \"binary\")\n    (set_attr \"length\" \"1\")])\n+\n+(define_insn \"\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(and:SI (ashift:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t\t   (match_operand:SI 2 \"const_int_operand\" \"\"))\n+\t\t(match_operand:SI 3 \"const_int_operand\" \"\")))]\n+  \"exact_log2 (1 + (INTVAL (operands[3]) >> (INTVAL (operands[2]) & 31))) >= 0\"\n+  \"*\n+{\n+  int cnt = INTVAL (operands[2]) & 31;\n+  operands[3] = GEN_INT (exact_log2 (1 + (INTVAL (operands[3]) >> cnt)));\n+  operands[2] = GEN_INT (31 - cnt);\n+  return \\\"zdep %1,%2,%3,%0\\\";\n+}\")\n+\n \f\n ;; Unconditional and other jump instructions.\n "}]}