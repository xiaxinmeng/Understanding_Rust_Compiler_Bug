{"sha": "6e7bdfacf2a5fe99a2d5eb31a860eb2ba681554b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU3YmRmYWNmMmE1ZmU5OWEyZDVlYjMxYTg2MGViMmJhNjgxNTU0Yg==", "commit": {"author": {"name": "Yury Gribov", "email": "y.gribov@samsung.com", "date": "2015-01-12T08:40:16Z"}, "committer": {"name": "Yury Gribov", "email": "ygribov@gcc.gnu.org", "date": "2015-01-12T08:40:16Z"}, "message": "check_GNU_style.sh: Support patches coming from stdin.\n\n2015-01-12  Yury Gribov  <y.gribov@samsung.com>\n\n\t* check_GNU_style.sh: Support patches coming from stdin.\n\tCheck that spaces are converted to tabs.\n\tMake double-space-after-dot check more precice.\n\nFrom-SVN: r219447", "tree": {"sha": "a6e909f2ac0bf4d38ebc1ba1e0bb2434f7511827", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6e909f2ac0bf4d38ebc1ba1e0bb2434f7511827"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e7bdfacf2a5fe99a2d5eb31a860eb2ba681554b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e7bdfacf2a5fe99a2d5eb31a860eb2ba681554b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e7bdfacf2a5fe99a2d5eb31a860eb2ba681554b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e7bdfacf2a5fe99a2d5eb31a860eb2ba681554b/comments", "author": null, "committer": null, "parents": [{"sha": "bc5a0a9c3b373edb101c057d90c34e071393ca11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc5a0a9c3b373edb101c057d90c34e071393ca11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc5a0a9c3b373edb101c057d90c34e071393ca11"}], "stats": {"total": 55, "additions": 31, "deletions": 24}, "files": [{"sha": "1f02d959496450da1c25455966fc27e9d8790980", "filename": "contrib/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7bdfacf2a5fe99a2d5eb31a860eb2ba681554b/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7bdfacf2a5fe99a2d5eb31a860eb2ba681554b/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=6e7bdfacf2a5fe99a2d5eb31a860eb2ba681554b", "patch": "@@ -1,3 +1,9 @@\n+2015-01-12  Yury Gribov  <y.gribov@samsung.com>\n+\n+\t* check_GNU_style.sh: Support patches coming from stdin.\n+\tCheck that spaces are converted to tabs.\n+\tMake double-space-after-dot check more precice.\n+\n 2015-01-06  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config-list.mk (LIST): Add visium-elf."}, {"sha": "e8d5dcaf7bc15a89d866f027e7145f2e920f6aed", "filename": "contrib/check_GNU_style.sh", "status": "modified", "additions": 25, "deletions": 24, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7bdfacf2a5fe99a2d5eb31a860eb2ba681554b/contrib%2Fcheck_GNU_style.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7bdfacf2a5fe99a2d5eb31a860eb2ba681554b/contrib%2Fcheck_GNU_style.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck_GNU_style.sh?ref=6e7bdfacf2a5fe99a2d5eb31a860eb2ba681554b", "patch": "@@ -23,6 +23,8 @@ usage() {\n check_GNU_style.sh [patch]...\n \n     Checks the patches for some of the GNU style formatting problems.\n+    When FILE is -, read standard input.\n+\n     Please note that these checks are not always accurate, and\n     complete.  The reference documentation of the GNU Coding Standards\n     can be found here: http://www.gnu.org/prep/standards_toc.html\n@@ -35,19 +37,22 @@ EOF\n \n test $# -eq 0 && usage\n \n+inp=check_GNU_style.inp\n tmp=check_GNU_style.tmp\n \n # Remove $tmp on exit and various signals.\n-trap \"rm -f $tmp\" 0\n-trap \"rm -f $tmp ; exit 1\" 1 2 3 5 9 13 15\n+trap \"rm -f $inp $tmp\" 0\n+trap \"rm -f $inp $tmp ; exit 1\" 1 2 3 5 9 13 15\n+\n+grep -nH '^+' $* \\\n+\t| grep -v ':+++' \\\n+\t> $inp\n \n # Grep\n g (){\n     msg=\"$1\"\n     arg=\"$2\"\n-    shift 2\n-    grep -nH '^+' $* \\\n-\t| grep -v ':+++' \\\n+    cat $inp \\\n \t| egrep --color=always -- \"$arg\" \\\n \t> $tmp && printf \"\\n$msg\\n\"\n     cat $tmp\n@@ -58,9 +63,7 @@ ag (){\n     msg=\"$1\"\n     arg1=\"$2\"\n     arg2=\"$3\"\n-    shift 3\n-    grep -nH '^+' $* \\\n-\t| grep -v ':+++' \\\n+    cat $inp \\\n \t| egrep --color=always -- \"$arg1\" \\\n \t| egrep --color=always -- \"$arg2\" \\\n \t> $tmp && printf \"\\n$msg\\n\"\n@@ -72,9 +75,7 @@ vg (){\n     msg=\"$1\"\n     varg=\"$2\"\n     arg=\"$3\"\n-    shift 3\n-    grep -nH '^+' $* \\\n-\t| grep -v ':+++' \\\n+    cat $inp \\\n \t| egrep -v -- \"$varg\" \\\n \t| egrep --color=always -- \"$arg\" \\\n \t> $tmp && printf \"\\n$msg\\n\"\n@@ -83,9 +84,7 @@ vg (){\n \n col (){\n     msg=\"$1\"\n-    shift 1\n-    grep -nH '^+' $* \\\n-\t| grep -v ':+++' \\\n+    cat $inp \\\n \t| awk -F':\\\\+' '{ if (length($2) > 80) print $0}' \\\n \t> $tmp\n     if [ -s $tmp ]; then\n@@ -94,30 +93,32 @@ col (){\n     fi\n }\n \n-col 'Lines should not exceed 80 characters.' $*\n+col 'Lines should not exceed 80 characters.'\n+\n+g 'Blocks of 8 spaces should be replaced with tabs.' \\\n+    ' {8}'\n \n g 'Trailing whitespace.' \\\n-    '[[:space:]]$' $*\n+    '[[:space:]]$'\n \n g 'Space before dot.' \\\n-    '[[:alnum:]][[:blank:]]+\\.' $*\n+    '[[:alnum:]][[:blank:]]+\\.'\n \n g 'Dot, space, space, new sentence.' \\\n-    '[[:alnum:]]\\.([[:blank:]]|[[:blank:]]{3,})[[:alnum:]]' $*\n+    '[[:alnum:]]\\.([[:blank:]]|[[:blank:]]{3,})[A-Z0-9]'\n \n g 'Dot, space, space, end of comment.' \\\n-    '[[:alnum:]]\\.([[:blank:]]{0,1}|[[:blank:]]{3,})\\*/' $*\n+    '[[:alnum:]]\\.([[:blank:]]{0,1}|[[:blank:]]{3,})\\*/'\n \n g 'Sentences should end with a dot.  Dot, space, space, end of the comment.' \\\n-    '[[:alnum:]][[:blank:]]*\\*/' $*\n+    '[[:alnum:]][[:blank:]]*\\*/'\n \n vg 'There should be exactly one space between function name and parentheses.' \\\n-    '\\#define' '[[:alnum:]]([[:blank:]]{2,})?\\(' $*\n+    '\\#define' '[[:alnum:]]([[:blank:]]{2,})?\\('\n \n g 'There should be no space before closing parentheses.' \\\n-    '[[:graph:]][[:blank:]]+\\)' $*\n+    '[[:graph:]][[:blank:]]+\\)'\n \n ag 'Braces should be on a separate line.' \\\n-    '\\{' 'if[[:blank:]]\\(|while[[:blank:]]\\(|switch[[:blank:]]\\(' $*\n-\n+    '\\{' 'if[[:blank:]]\\(|while[[:blank:]]\\(|switch[[:blank:]]\\('\n "}]}