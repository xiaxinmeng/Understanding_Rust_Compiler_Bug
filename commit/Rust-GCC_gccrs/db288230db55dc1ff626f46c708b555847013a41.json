{"sha": "db288230db55dc1ff626f46c708b555847013a41", "node_id": "C_kwDOANBUbNoAKGRiMjg4MjMwZGI1NWRjMWZmNjI2ZjQ2YzcwOGI1NTU4NDcwMTNhNDE", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2022-09-27T23:19:11Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2022-09-28T18:15:31Z"}, "message": "i386: Mark XMM4-XMM6 as clobbered by encodekey128/encodekey256\n\nencodekey128 and encodekey256 operations clear XMM4-XMM6.  But it is\ndocumented that XMM4-XMM6 are reserved for future usages and software\nshould not rely upon them being zeroed.  Change encodekey128 and\nencodekey256 to clobber XMM4-XMM6.\n\ngcc/\n\n\tPR target/107061\n\t* config/i386/predicates.md (encodekey128_operation): Check\n\tXMM4-XMM6 as clobbered.\n\t(encodekey256_operation): Likewise.\n\t* config/i386/sse.md (encodekey128u32): Clobber XMM4-XMM6.\n\t(encodekey256u32): Likewise.\n\ngcc/testsuite/\n\n\tPR target/107061\n\t* gcc.target/i386/keylocker-encodekey128.c: Don't check\n\tXMM4-XMM6.\n\t* gcc.target/i386/keylocker-encodekey256.c: Likewise.", "tree": {"sha": "cc3ea109bf96e4167e54f044375142779fa7bf38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc3ea109bf96e4167e54f044375142779fa7bf38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db288230db55dc1ff626f46c708b555847013a41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db288230db55dc1ff626f46c708b555847013a41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db288230db55dc1ff626f46c708b555847013a41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db288230db55dc1ff626f46c708b555847013a41/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03f3365742a9341992f0c8fc751e2d143e49f95d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03f3365742a9341992f0c8fc751e2d143e49f95d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03f3365742a9341992f0c8fc751e2d143e49f95d"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "c4141a9673558899b6a0c583fb3bb445efaa4c5e", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db288230db55dc1ff626f46c708b555847013a41/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db288230db55dc1ff626f46c708b555847013a41/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=db288230db55dc1ff626f46c708b555847013a41", "patch": "@@ -2107,11 +2107,11 @@\n   for(i = 4; i < 7; i++)\n     {\n       elt = XVECEXP (op, 0, i);\n-      if (GET_CODE (elt) != SET\n-\t  || GET_CODE (SET_DEST (elt)) != REG\n-\t  || GET_MODE (SET_DEST (elt)) != V2DImode\n-\t  || REGNO (SET_DEST (elt)) != GET_SSE_REGNO (i)\n-\t  || SET_SRC (elt) != CONST0_RTX (V2DImode))\n+      if (GET_CODE (elt) != CLOBBER\n+\t  || GET_MODE (elt) != VOIDmode\n+\t  || GET_CODE (XEXP (elt, 0)) != REG\n+\t  || GET_MODE (XEXP (elt, 0)) != V2DImode\n+\t  || REGNO (XEXP (elt, 0)) != GET_SSE_REGNO (i))\n \treturn false;\n     }\n \n@@ -2157,11 +2157,11 @@\n   for(i = 4; i < 7; i++)\n     {\n       elt = XVECEXP (op, 0, i + 1);\n-      if (GET_CODE (elt) != SET\n-\t  || GET_CODE (SET_DEST (elt)) != REG\n-\t  || GET_MODE (SET_DEST (elt)) != V2DImode\n-\t  || REGNO (SET_DEST (elt)) != GET_SSE_REGNO (i)\n-\t  || SET_SRC (elt) != CONST0_RTX (V2DImode))\n+      if (GET_CODE (elt) != CLOBBER\n+\t  || GET_MODE (elt) != VOIDmode\n+\t  || GET_CODE (XEXP (elt, 0)) != REG\n+\t  || GET_MODE (XEXP (elt, 0)) != V2DImode\n+\t  || REGNO (XEXP (elt, 0)) != GET_SSE_REGNO (i))\n \treturn false;\n     }\n "}, {"sha": "076064f97e641069ca2afca25dcf40bb7d1ca377", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db288230db55dc1ff626f46c708b555847013a41/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db288230db55dc1ff626f46c708b555847013a41/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=db288230db55dc1ff626f46c708b555847013a41", "patch": "@@ -29015,7 +29015,7 @@\n \n   for (i = 4; i < 7; i++)\n     XVECEXP (operands[2], 0, i)\n-      = gen_rtx_SET (xmm_regs[i], CONST0_RTX (V2DImode));\n+      = gen_rtx_CLOBBER (VOIDmode, xmm_regs[i]);\n \n   XVECEXP (operands[2], 0, 7)\n     = gen_rtx_CLOBBER (VOIDmode, gen_rtx_REG (CCmode, FLAGS_REG));\n@@ -29072,7 +29072,7 @@\n \n   for (i = 4; i < 7; i++)\n     XVECEXP (operands[2], 0, i + 1)\n-      = gen_rtx_SET (xmm_regs[i], CONST0_RTX (V2DImode));\n+      = gen_rtx_CLOBBER (VOIDmode, xmm_regs[i]);\n \n   XVECEXP (operands[2], 0, 8)\n     = gen_rtx_CLOBBER (VOIDmode, gen_rtx_REG (CCmode, FLAGS_REG));"}, {"sha": "57fa9bdc831d689dd4841d46aee7357508d04aef", "filename": "gcc/testsuite/gcc.target/i386/keylocker-encodekey128.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db288230db55dc1ff626f46c708b555847013a41/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fkeylocker-encodekey128.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db288230db55dc1ff626f46c708b555847013a41/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fkeylocker-encodekey128.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fkeylocker-encodekey128.c?ref=db288230db55dc1ff626f46c708b555847013a41", "patch": "@@ -6,7 +6,6 @@\n /* { dg-final { scan-assembler \"(?:movdqu|movups)\\[ \\\\t\\]+\\[^\\\\n\\]*%xmm0,\\[^\\\\n\\\\r\\]*\" } } */\n /* { dg-final { scan-assembler \"(?:movdqu|movups)\\[ \\\\t\\]+\\[^\\\\n\\]*%xmm1,\\[^\\\\n\\\\r\\]*16\\[^\\\\n\\\\r\\]*\" } } */\n /* { dg-final { scan-assembler \"(?:movdqu|movups)\\[ \\\\t\\]+\\[^\\\\n\\]*%xmm2,\\[^\\\\n\\\\r\\]*32\\[^\\\\n\\\\r\\]*\" } } */\n-/* { dg-final { scan-assembler \"(?:movdqa|movaps)\\[ \\\\t\\]+\\[^\\\\n\\]*%xmm\\[4-6\\],\\[^\\\\n\\\\r\\]*\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "a9398b4e7a2256b69ac8454981b754e99a7b43ad", "filename": "gcc/testsuite/gcc.target/i386/keylocker-encodekey256.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db288230db55dc1ff626f46c708b555847013a41/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fkeylocker-encodekey256.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db288230db55dc1ff626f46c708b555847013a41/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fkeylocker-encodekey256.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fkeylocker-encodekey256.c?ref=db288230db55dc1ff626f46c708b555847013a41", "patch": "@@ -8,7 +8,6 @@\n /* { dg-final { scan-assembler \"(?:movdqu|movups)\\[ \\\\t\\]+\\[^\\\\n\\]*%xmm1,\\[^\\\\n\\\\r\\]*16\\[^\\\\n\\\\r\\]*\" } } */\n /* { dg-final { scan-assembler \"(?:movdqu|movups)\\[ \\\\t\\]+\\[^\\\\n\\]*%xmm2,\\[^\\\\n\\\\r\\]*32\\[^\\\\n\\\\r\\]*\" } } */\n /* { dg-final { scan-assembler \"(?:movdqu|movups)\\[ \\\\t\\]+\\[^\\\\n\\]*%xmm3,\\[^\\\\n\\\\r\\]*48\\[^\\\\n\\\\r\\]*\" } } */\n-/* { dg-final { scan-assembler \"(?:movdqa|movaps)\\[ \\\\t\\]+\\[^\\\\n\\]*%xmm\\[4-6\\],\\[^\\\\n\\\\r\\]*\" } } */\n \n #include <immintrin.h>\n "}]}