{"sha": "6e3ae7e6f5699430cdedd1ca2a7b5cfa020171aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUzYWU3ZTZmNTY5OTQzMGNkZWRkMWNhMmE3YjVjZmEwMjAxNzFhYQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2016-11-04T18:58:53Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2016-11-04T18:58:53Z"}, "message": "re PR c++/67980 (left shift count is negative [-Wshift-count-negative] generated for unreachable code)\n\n/cp\n2016-11-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/67980\n\t* pt.c (tsubst_expr, case IF_STMT): Use fold_non_dependent_expr\n\tto suppress unwanted warnings.\n\n/testsuite\n2016-11-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/67980\n\t* g++.dg/cpp1y/pr67980.C: New.\n\nFrom-SVN: r241858", "tree": {"sha": "bb6be5027945eeab60910722852a70025d9c6d43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb6be5027945eeab60910722852a70025d9c6d43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e3ae7e6f5699430cdedd1ca2a7b5cfa020171aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e3ae7e6f5699430cdedd1ca2a7b5cfa020171aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e3ae7e6f5699430cdedd1ca2a7b5cfa020171aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e3ae7e6f5699430cdedd1ca2a7b5cfa020171aa/comments", "author": null, "committer": null, "parents": [{"sha": "fff6ed28b29e9fff2026ee79446f2e565ef63806", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fff6ed28b29e9fff2026ee79446f2e565ef63806", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fff6ed28b29e9fff2026ee79446f2e565ef63806"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "e567fefd6275496ecaed16a0b5d447ffd947e891", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e3ae7e6f5699430cdedd1ca2a7b5cfa020171aa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e3ae7e6f5699430cdedd1ca2a7b5cfa020171aa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6e3ae7e6f5699430cdedd1ca2a7b5cfa020171aa", "patch": "@@ -1,3 +1,9 @@\n+2016-11-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/67980\n+\t* pt.c (tsubst_expr, case IF_STMT): Use fold_non_dependent_expr\n+\tto suppress unwanted warnings.\n+\n 2016-11-03  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/78198"}, {"sha": "c8d4a066c5df52e65d7cd03a104c21daab4f3a5f", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e3ae7e6f5699430cdedd1ca2a7b5cfa020171aa/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e3ae7e6f5699430cdedd1ca2a7b5cfa020171aa/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=6e3ae7e6f5699430cdedd1ca2a7b5cfa020171aa", "patch": "@@ -15437,15 +15437,27 @@ tsubst_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl,\n       if (IF_STMT_CONSTEXPR_P (t) && integer_zerop (tmp))\n \t/* Don't instantiate the THEN_CLAUSE. */;\n       else\n-\tRECUR (THEN_CLAUSE (t));\n+\t{\n+\t  bool inhibit = integer_zerop (fold_non_dependent_expr (tmp));\n+\t  if (inhibit)\n+\t    ++c_inhibit_evaluation_warnings;\n+\t  RECUR (THEN_CLAUSE (t));\n+\t  if (inhibit)\n+\t    --c_inhibit_evaluation_warnings;\n+\t}\n       finish_then_clause (stmt);\n \n       if (IF_STMT_CONSTEXPR_P (t) && integer_nonzerop (tmp))\n \t/* Don't instantiate the ELSE_CLAUSE. */;\n       else if (ELSE_CLAUSE (t))\n \t{\n+\t  bool inhibit = integer_nonzerop (fold_non_dependent_expr (tmp));\n \t  begin_else_clause (stmt);\n+\t  if (inhibit)\n+\t    ++c_inhibit_evaluation_warnings;\n \t  RECUR (ELSE_CLAUSE (t));\n+\t  if (inhibit)\n+\t    --c_inhibit_evaluation_warnings;\n \t  finish_else_clause (stmt);\n \t}\n "}, {"sha": "eae75f1c453438362b8d9c3cbcad8a66a528184b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e3ae7e6f5699430cdedd1ca2a7b5cfa020171aa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e3ae7e6f5699430cdedd1ca2a7b5cfa020171aa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6e3ae7e6f5699430cdedd1ca2a7b5cfa020171aa", "patch": "@@ -1,3 +1,8 @@\n+2016-11-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/67980\n+\t* g++.dg/cpp1y/pr67980.C: New.\n+\n 2016-11-04  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/fold-vec-add-1.c: New."}, {"sha": "1b8154538fc51c4b05a948076566b0900163f24b", "filename": "gcc/testsuite/g++.dg/cpp1y/pr67980.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e3ae7e6f5699430cdedd1ca2a7b5cfa020171aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr67980.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e3ae7e6f5699430cdedd1ca2a7b5cfa020171aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr67980.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr67980.C?ref=6e3ae7e6f5699430cdedd1ca2a7b5cfa020171aa", "patch": "@@ -0,0 +1,23 @@\n+// { dg-do compile { target c++14 } }\n+\n+template <int Y, class T>\n+constexpr T cpp14_constexpr_then(T value) {\n+  if (Y < 0)\n+    return (value << -Y);\n+  else\n+    return 0;\n+}\n+\n+template <int Y, class T>\n+constexpr T cpp14_constexpr_else(T value) {\n+  if (Y > 0)\n+    return 0;\n+  else\n+    return (value << -Y);\n+}\n+\n+int main()\n+{\n+  cpp14_constexpr_then<1>(0);\n+  cpp14_constexpr_else<1>(0);\n+}"}]}