{"sha": "5b2abab835bee5248adb9d6c65f41517840f595a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIyYWJhYjgzNWJlZTUyNDhhZGI5ZDZjNjVmNDE1MTc4NDBmNTk1YQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-06-06T21:54:54Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-06-06T21:54:54Z"}, "message": "c-common.h (c_language_kind): New type.\n\n\t* c-common.h (c_language_kind): New type.\n\t(c_language): New variab.e\n\t* c-common.c (lang_get_alias_set): Don't put structures in\n\tnon-zero alias sets in C++.\n\t* c-decl.c (c_language): Define it.\n\t* c-lex.c (doing_objc_thang): Remove.\n\t* c-tree.h (doing_objc_thang): Make it a macro.\n\t* objc/objc-act.c (lang_decode_option): Set c_language, not\n\tdoing_objc_thang.\n\n\t* decl2.c (c_language): Define.\n\nFrom-SVN: r34439", "tree": {"sha": "30c9ccd88478f3817c3e70015622f50c36432661", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30c9ccd88478f3817c3e70015622f50c36432661"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b2abab835bee5248adb9d6c65f41517840f595a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b2abab835bee5248adb9d6c65f41517840f595a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b2abab835bee5248adb9d6c65f41517840f595a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b2abab835bee5248adb9d6c65f41517840f595a/comments", "author": null, "committer": null, "parents": [{"sha": "f4381d6204dfb3dcb2e70b88e4fe83542a741004", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4381d6204dfb3dcb2e70b88e4fe83542a741004", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4381d6204dfb3dcb2e70b88e4fe83542a741004"}], "stats": {"total": 50, "additions": 44, "deletions": 6}, "files": [{"sha": "5c76f0d6e28ea28cad3a9f031f360c60a1485268", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b2abab835bee5248adb9d6c65f41517840f595a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b2abab835bee5248adb9d6c65f41517840f595a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b2abab835bee5248adb9d6c65f41517840f595a", "patch": "@@ -1,3 +1,15 @@\n+2000-06-06  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* c-common.h (c_language_kind): New type.\n+\t(c_language): New variab.e\n+\t* c-common.c (lang_get_alias_set): Don't put structures in\n+\tnon-zero alias sets in C++.\n+\t* c-decl.c (c_language): Define it.\n+\t* c-lex.c (doing_objc_thang): Remove.\n+\t* c-tree.h (doing_objc_thang): Make it a macro.\n+\t* objc/objc-act.c (lang_decode_option): Set c_language, not\n+\tdoing_objc_thang. \n+\t\n 2000-06-06  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* diagnostic.c (output_maximum_width): Remove."}, {"sha": "b025215e7e163576d6e75d39969ff064b86edb5c", "filename": "gcc/c-common.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b2abab835bee5248adb9d6c65f41517840f595a/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b2abab835bee5248adb9d6c65f41517840f595a/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=5b2abab835bee5248adb9d6c65f41517840f595a", "patch": "@@ -3338,6 +3338,10 @@ lang_get_alias_set (t)\n       if (t1 != t)\n \treturn get_alias_set (t1);\n     }\n+  /* It's not yet safe to use alias sets for classes in C++ because\n+     the TYPE_FIELDs list for a class doesn't mention base classes.  */\n+  else if (c_language == clk_cplusplus && AGGREGATE_TYPE_P (t));\n+    return 0;\n \n   return -1;\n }"}, {"sha": "8953d7037ec1ad2266e0a0db4e754b158a860f49", "filename": "gcc/c-common.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b2abab835bee5248adb9d6c65f41517840f595a/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b2abab835bee5248adb9d6c65f41517840f595a/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=5b2abab835bee5248adb9d6c65f41517840f595a", "patch": "@@ -56,6 +56,19 @@ enum c_tree_index\n \n extern tree c_global_trees[CTI_MAX];\n \n+typedef enum c_language_kind\n+{\n+  clk_c,           /* A dialect of C: K&R C, ANSI/ISO C89, C2000,\n+\t\t       etc. */\n+  clk_cplusplus,   /* ANSI/ISO C++ */\n+  clk_objective_c  /* Objective C */\n+} \n+c_language_kind;\n+\n+/* The variant of the C language being processed.  Each C language\n+   front-end defines this variable.  */\n+extern c_language_kind c_language;\n+\n #define wchar_type_node\t\t\tc_global_trees[CTI_WCHAR_TYPE]\n #define signed_wchar_type_node\t\tc_global_trees[CTI_SIGNED_WCHAR_TYPE]\n #define unsigned_wchar_type_node\tc_global_trees[CTI_UNSIGNED_WCHAR_TYPE]"}, {"sha": "ba1b3c6a009d580f186cfb45f8f5c22698d3a846", "filename": "gcc/c-decl.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b2abab835bee5248adb9d6c65f41517840f595a/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b2abab835bee5248adb9d6c65f41517840f595a/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=5b2abab835bee5248adb9d6c65f41517840f595a", "patch": "@@ -454,6 +454,10 @@ int warn_float_equal = 0;\n \n int warn_multichar = 1;\n \n+/* The variant of the C language being processed.  */\n+\n+c_language_kind c_language = clk_c;\n+\n /* Nonzero means `$' can be in an identifier.  */\n \n #ifndef DOLLARS_IN_IDENTIFIERS"}, {"sha": "beda889d5896991c46458950a98b545a0fefac47", "filename": "gcc/c-lex.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b2abab835bee5248adb9d6c65f41517840f595a/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b2abab835bee5248adb9d6c65f41517840f595a/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=5b2abab835bee5248adb9d6c65f41517840f595a", "patch": "@@ -132,10 +132,6 @@ int linemode;\n    used in a context which makes it a reference to a variable.  */\n tree lastiddecl;\n \n-/* Nonzero enables objc features.  */\n-\n-int doing_objc_thang;\n-\n extern int yydebug;\n \n /* File used for outputting assembler code.  */"}, {"sha": "ae27e61d6d9494685bee1699ff8f6a37ac608c2e", "filename": "gcc/c-tree.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b2abab835bee5248adb9d6c65f41517840f595a/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b2abab835bee5248adb9d6c65f41517840f595a/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=5b2abab835bee5248adb9d6c65f41517840f595a", "patch": "@@ -446,7 +446,8 @@ extern int system_header_p;\n \n /* Nonzero enables objc features.  */\n \n-extern int doing_objc_thang;\n+#define doing_objc_thang \\\n+  (c_language == clk_objective_c)\n \n /* In c-decl.c */\n extern void finish_incomplete_decl PARAMS ((tree));"}, {"sha": "d549fc6732841ed5d963da79c4d8b31aa90206ed", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b2abab835bee5248adb9d6c65f41517840f595a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b2abab835bee5248adb9d6c65f41517840f595a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5b2abab835bee5248adb9d6c65f41517840f595a", "patch": "@@ -1,3 +1,7 @@\n+2000-06-06  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* decl2.c (c_language): Define.\n+\n 2000-06-06  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* lex.c (lang_init_options): Tweak."}, {"sha": "6fc7bb5b98efba83d8b708cce3f6b3da64ba0dd5", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b2abab835bee5248adb9d6c65f41517840f595a/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b2abab835bee5248adb9d6c65f41517840f595a/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=5b2abab835bee5248adb9d6c65f41517840f595a", "patch": "@@ -501,6 +501,10 @@ int flag_enforce_eh_specs = 1;\n \n void (*back_end_hook) PARAMS ((tree));\n \n+/* The variant of the C language being processed.  */\n+\n+c_language_kind c_language = clk_cplusplus;\n+\n /* Table of language-dependent -f options.\n    STRING is the option name.  VARIABLE is the address of the variable.\n    ON_VALUE is the value to store in VARIABLE"}, {"sha": "e1b9cd3ebaeade5e28fb569c88a3cf0f3538ce95", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b2abab835bee5248adb9d6c65f41517840f595a/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b2abab835bee5248adb9d6c65f41517840f595a/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=5b2abab835bee5248adb9d6c65f41517840f595a", "patch": "@@ -798,7 +798,7 @@ lang_decode_option (argc, argv)\n {\n   const char *p = argv[0];\n   if (!strcmp (p, \"-lang-objc\"))\n-    doing_objc_thang = 1;\n+    c_language = clk_objective_c;\n   else if (!strcmp (p, \"-gen-decls\"))\n     flag_gen_declaration = 1;\n   else if (!strcmp (p, \"-Wselector\"))"}]}