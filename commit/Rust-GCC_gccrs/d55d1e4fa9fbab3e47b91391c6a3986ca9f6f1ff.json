{"sha": "d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU1ZDFlNGZhOWZiYWIzZTQ3YjkxMzkxYzZhMzk4NmNhOWY2ZjFmZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2018-01-23T12:18:50Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2018-01-23T12:18:50Z"}, "message": "[C++ PATCH] Deprecate ARM-era for scopes\n\nhttps://gcc.gnu.org/ml/gcc-patches/2018-01/msg01940.html\n\tgcc/cp/\n\tDeprecate ARM-era for scope handling\n\t* decl.c (poplevel): Flag_new_for_scope is a boolean-like.\n\t(cxx_init_decl_processing): Deprecate flag_new_for_scope being\n\tcleared.\n\t* name-lookup.c (check_for_out_of_scope_variable): Deprecate and\n\tcleanup handling.\n\t* semantics.c (begin_for_scope): Flag_new_for_scope is\n\tboolean-like.\n\t(finish_for_stmt, begin_range_for_stmt): Likewise.\n\n\tgcc/\n\t* doc/invoke.texi (ffor-scope): Deprecate.\n\n\tgcc/cp/\n\t* g++.dg/cpp0x/range-for10.C: Adjust.\n\t* g++.dg/ext/forscope1.C: Adjust.\n\t* g++.dg/ext/forscope2.C: Adjust.\n\t* g++.dg/template/for1.C: Adjust.\n\nFrom-SVN: r256981", "tree": {"sha": "b20dd1b9623a16c511ca0aafb15e4a1cbf191e36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b20dd1b9623a16c511ca0aafb15e4a1cbf191e36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9972bbbcbf149667143513e82fb38dffc34aa8f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9972bbbcbf149667143513e82fb38dffc34aa8f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9972bbbcbf149667143513e82fb38dffc34aa8f3"}], "stats": {"total": 95, "additions": 60, "deletions": 35}, "files": [{"sha": "9cda2944ff7e9d113b0941aadfb638b358fc405b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff", "patch": "@@ -1,3 +1,7 @@\n+2018-01-23  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* doc/invoke.texi (ffor-scope): Deprecate.\n+\n 2018-01-23  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR tree-optimization/83510"}, {"sha": "bd15f4c045a97dd8538da777ccfa8f79022c0f7a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff", "patch": "@@ -1,3 +1,15 @@\n+2018-01-23  Nathan Sidwell  <nathan@acm.org>\n+\n+\tDeprecate ARM-era for scope handling\n+\t* decl.c (poplevel): Flag_new_for_scope is a boolean-like.\n+\t(cxx_init_decl_processing): Deprecate flag_new_for_scope being\n+\tcleared.\n+\t* name-lookup.c (check_for_out_of_scope_variable): Deprecate and\n+\tcleanup handling.\n+\t* semantics.c (begin_for_scope): Flag_new_for_scope is\n+\tboolean-like.\n+\t(finish_for_stmt, begin_range_for_stmt): Likewise.\n+\n 2018-01-22  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/83720"}, {"sha": "f6fab422d17a6eb6d944b5d86f14970437cf956a", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff", "patch": "@@ -644,7 +644,7 @@ poplevel (int keep, int reverse, int functionbody)\n      in a init statement were in scope after the for-statement ended.\n      We only use the new rules if flag_new_for_scope is nonzero.  */\n   leaving_for_scope\n-    = current_binding_level->kind == sk_for && flag_new_for_scope == 1;\n+    = current_binding_level->kind == sk_for && flag_new_for_scope;\n \n   /* Before we remove the declarations first check for unused variables.  */\n   if ((warn_unused_variable || warn_unused_but_set_variable)\n@@ -4094,6 +4094,8 @@ cxx_init_decl_processing (void)\n   pop_namespace ();\n \n   flag_noexcept_type = (cxx_dialect >= cxx17);\n+  if (!flag_new_for_scope)\n+    warning (OPT_Wdeprecated, \"%<-fno-for-scope%> is deprecated\");\n \n   c_common_nodes_and_builtins ();\n "}, {"sha": "c37e52283e4cfa1938de694fa020042b6f6ce851", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 24, "deletions": 23, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff", "patch": "@@ -3231,7 +3231,9 @@ push_local_binding (tree id, tree decl, bool is_using)\n    standard.  If so, issue an error message.  If name lookup would\n    work in both cases, but return a different result, this function\n    returns the result of ANSI/ISO lookup.  Otherwise, it returns\n-   DECL.  */\n+   DECL.\n+\n+   FIXME: Scheduled for removal after GCC-8 is done.  */\n \n tree\n check_for_out_of_scope_variable (tree decl)\n@@ -3252,16 +3254,16 @@ check_for_out_of_scope_variable (tree decl)\n     shadowed = find_namespace_value (current_namespace, DECL_NAME (decl));\n   if (shadowed)\n     {\n-      if (!DECL_ERROR_REPORTED (decl))\n+      if (!DECL_ERROR_REPORTED (decl)\n+\t  && flag_permissive\n+\t  && warning (0, \"name lookup of %qD changed\", DECL_NAME (decl)))\n \t{\n-\t  warning (0, \"name lookup of %qD changed\", DECL_NAME (decl));\n-\t  warning_at (DECL_SOURCE_LOCATION (shadowed), 0,\n-\t\t      \"  matches this %qD under ISO standard rules\",\n-\t\t      shadowed);\n-\t  warning_at (DECL_SOURCE_LOCATION (decl), 0,\n-\t\t      \"  matches this %qD under old rules\", decl);\n-\t  DECL_ERROR_REPORTED (decl) = 1;\n+\t  inform (DECL_SOURCE_LOCATION (shadowed),\n+\t\t  \"matches this %qD under ISO standard rules\", shadowed);\n+\t  inform (DECL_SOURCE_LOCATION (decl),\n+\t\t  \"  matches this %qD under old rules\", decl);\n \t}\n+      DECL_ERROR_REPORTED (decl) = 1;\n       return shadowed;\n     }\n \n@@ -3279,26 +3281,25 @@ check_for_out_of_scope_variable (tree decl)\n     {\n       error (\"name lookup of %qD changed for ISO %<for%> scoping\",\n \t     DECL_NAME (decl));\n-      error (\"  cannot use obsolete binding at %q+D because \"\n-\t     \"it has a destructor\", decl);\n+      inform (DECL_SOURCE_LOCATION (decl),\n+\t      \"cannot use obsolete binding %qD because it has a destructor\",\n+\t      decl);\n       return error_mark_node;\n     }\n   else\n     {\n-      permerror (input_location, \"name lookup of %qD changed for ISO %<for%> scoping\",\n+      permerror (input_location,\n+\t\t \"name lookup of %qD changed for ISO %<for%> scoping\",\n \t         DECL_NAME (decl));\n       if (flag_permissive)\n-        permerror (DECL_SOURCE_LOCATION (decl),\n-\t\t   \"  using obsolete binding at %qD\", decl);\n-      else\n-\t{\n-\t  static bool hint;\n-\t  if (!hint)\n-\t    {\n-\t      inform (input_location, \"(if you use %<-fpermissive%> G++ will accept your code)\");\n-\t      hint = true;\n-\t    }\n-\t}\n+        inform (DECL_SOURCE_LOCATION (decl),\n+\t\t\"using obsolete binding %qD\", decl);\n+      static bool hint;\n+      if (!hint)\n+\tinform (input_location, flag_permissive\n+\t\t? \"this flexibility is deprecated and will be removed\"\n+\t\t: \"if you use %<-fpermissive%> G++ will accept your code\");\n+      hint = true;\n     }\n \n   return decl;"}, {"sha": "b758051965e5fd8a1b3b0006a21e72e3d68ff9e3", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff", "patch": "@@ -931,7 +931,7 @@ tree\n begin_for_scope (tree *init)\n {\n   tree scope = NULL_TREE;\n-  if (flag_new_for_scope > 0)\n+  if (flag_new_for_scope)\n     scope = do_pushlevel (sk_for);\n \n   if (processing_template_decl)\n@@ -956,7 +956,7 @@ begin_for_stmt (tree scope, tree init)\n \n   if (scope == NULL_TREE)\n     {\n-      gcc_assert (!init || !(flag_new_for_scope > 0));\n+      gcc_assert (!init || !flag_new_for_scope);\n       if (!init)\n \tscope = begin_for_scope (&init);\n     }\n@@ -1053,7 +1053,7 @@ finish_for_stmt (tree for_stmt)\n     FOR_BODY (for_stmt) = do_poplevel (FOR_BODY (for_stmt));\n \n   /* Pop the scope for the body of the loop.  */\n-  if (flag_new_for_scope > 0)\n+  if (flag_new_for_scope)\n     {\n       tree scope;\n       tree *scope_ptr = (TREE_CODE (for_stmt) == RANGE_FOR_STMT\n@@ -1082,7 +1082,7 @@ begin_range_for_stmt (tree scope, tree init)\n \n   if (scope == NULL_TREE)\n     {\n-      gcc_assert (!init || !(flag_new_for_scope > 0));\n+      gcc_assert (!init || !flag_new_for_scope);\n       if (!init)\n \tscope = begin_for_scope (&init);\n     }"}, {"sha": "891de733160db226959215b35b4aa98e47d2eb4f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff", "patch": "@@ -2467,9 +2467,8 @@ a @i{for-init-statement} extends to the end of the enclosing scope,\n as was the case in old versions of G++, and other (traditional)\n implementations of C++.\n \n-If neither flag is given, the default is to follow the standard,\n-but to allow and give a warning for old-style code that would\n-otherwise be invalid, or have different behavior.\n+This option is deprecated and the associated non-standard\n+functionality will be removed.\n \n @item -fno-gnu-keywords\n @opindex fno-gnu-keywords"}, {"sha": "bcbaa4c60034958cf55cef21477e765831ec6d7f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff", "patch": "@@ -1,3 +1,10 @@\n+2018-01-23  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* g++.dg/cpp0x/range-for10.C: Adjust.\n+\t* g++.dg/ext/forscope1.C: Adjust.\n+\t* g++.dg/ext/forscope2.C: Adjust.\n+\t* g++.dg/template/for1.C: Adjust.\n+\n 2018-01-23  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR tree-optimization/83510"}, {"sha": "7288a3b8b0c7cfae19553ae38e085bee5e03981a", "filename": "gcc/testsuite/g++.dg/cpp0x/range-for10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for10.C?ref=d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff", "patch": "@@ -1,6 +1,6 @@\n // PR c++/47388\n // { dg-do compile { target c++11 } }\n-// { dg-options \"-fno-for-scope\" }\n+// { dg-options \"-fno-for-scope -Wno-deprecated\" }\n \n template <int>\n void"}, {"sha": "cf0cb2c5c9b13c6acec3bfe771427ab14da1b198", "filename": "gcc/testsuite/g++.dg/ext/forscope1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fforscope1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fforscope1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fforscope1.C?ref=d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile }\n-// { dg-options -fno-for-scope }\n+// { dg-options \"-fno-for-scope -Wno-deprecated\" }\n \n // Copyright (C) 2001 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 4 Sept 2001 <nathan@codesourcery.com>"}, {"sha": "3490d3f285c4c69642262a6025ec91ac8bf4e7a4", "filename": "gcc/testsuite/g++.dg/ext/forscope2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fforscope2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fforscope2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fforscope2.C?ref=d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff", "patch": "@@ -16,7 +16,7 @@ struct A\n \n void Go( )\n {\n-  for (int i = 1;;)\t// { dg-warning \"using obsolete binding\" }\n+  for (int i = 1;;)\t// { dg-message \"using obsolete binding\" }\n     {\n       switch (1) {\n       default: {}"}, {"sha": "ebb444531e63b662697d45907bff28c4853448e0", "filename": "gcc/testsuite/g++.dg/template/for1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffor1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffor1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffor1.C?ref=d55d1e4fa9fbab3e47b91391c6a3986ca9f6f1ff", "patch": "@@ -1,6 +1,6 @@\n // PR c++/47388\n // { dg-do compile }\n-// { dg-options \"-fno-for-scope\" }\n+// { dg-options \"-fno-for-scope -Wno-deprecated\" }\n \n template <int>\n void"}]}