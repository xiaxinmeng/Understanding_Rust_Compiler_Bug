{"sha": "f8dc212b5deccabd4f3f32beb4459ba944cfca98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhkYzIxMmI1ZGVjY2FiZDRmM2YzMmJlYjQ0NTliYTk0NGNmY2E5OA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2003-02-24T18:52:51Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2003-02-24T18:52:51Z"}, "message": "re PR c/5059 (Compiling s/w containing the use of DIR.H fails on other stat-calls)\n\n\t* config/alpha/osf.h (TARGET_OS_CPP_BUILTINS): Rename\n\t__EXTERN_PREFIX to __PRAGMA_EXTERN_PREFIX.\n\t* doc/extend.texi (Tru64 Pragmas): Reflect this.\n\n\t* fixinc/inclhack.def (alpha___extern_prefix): Indicate #pragma\n\textern_prefix support for Tru64 UNIX V5 <sys/stat.h>.\n\t* fixinc/fixincl.x: Regenerate.\n\t* fixinc/tests/base/sys/stat.h [ALPHA___EXTERN_PREFIX_CHECK]: New\n\ttestcase.\n\tFixes PR c/5059, c/6126, other/9671.\n\n\ttestsuite:\n\t* g++.dg/other/pragma-ep-1.C: Test for __PRAGMA_EXTERN_PREFIX.\n\t* gcc.dg/pragma-ep-1.c: Likewise.\n\nFrom-SVN: r63370", "tree": {"sha": "b75b02a1b40335aa83b4aaebc6fdb4ed8f808707", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b75b02a1b40335aa83b4aaebc6fdb4ed8f808707"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8dc212b5deccabd4f3f32beb4459ba944cfca98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8dc212b5deccabd4f3f32beb4459ba944cfca98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8dc212b5deccabd4f3f32beb4459ba944cfca98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8dc212b5deccabd4f3f32beb4459ba944cfca98/comments", "author": null, "committer": null, "parents": [{"sha": "391cd0955eb2a5018af9fb791ffeeac171ebb9b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/391cd0955eb2a5018af9fb791ffeeac171ebb9b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/391cd0955eb2a5018af9fb791ffeeac171ebb9b9"}], "stats": {"total": 116, "additions": 97, "deletions": 19}, "files": [{"sha": "0869b47c6daa92d597ca72351461eca581b0ae8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8dc212b5deccabd4f3f32beb4459ba944cfca98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8dc212b5deccabd4f3f32beb4459ba944cfca98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8dc212b5deccabd4f3f32beb4459ba944cfca98", "patch": "@@ -1,3 +1,16 @@\n+2003-02-24  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* config/alpha/osf.h (TARGET_OS_CPP_BUILTINS): Rename\n+\t__EXTERN_PREFIX to __PRAGMA_EXTERN_PREFIX.\n+\t* doc/extend.texi (Tru64 Pragmas): Reflect this.\n+\n+\t* fixinc/inclhack.def (alpha___extern_prefix): Indicate #pragma\n+\textern_prefix support for Tru64 UNIX V5 <sys/stat.h>. \n+\t* fixinc/fixincl.x: Regenerate.\n+\t* fixinc/tests/base/sys/stat.h [ALPHA___EXTERN_PREFIX_CHECK]: New\n+\ttestcase.\n+\tFixes PR c/5059, c/6126, other/9671.\n+\t\n 2003-02-24  Roger Sayle  <roger@eyesopen.com>\n \n \t* gcc.c (do_spec_1) ['{']:  Handle pending argument upon return"}, {"sha": "871f078ea9940b90c3feab988f86a7519a89af4d", "filename": "gcc/config/alpha/osf.h", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8dc212b5deccabd4f3f32beb4459ba944cfca98/gcc%2Fconfig%2Falpha%2Fosf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8dc212b5deccabd4f3f32beb4459ba944cfca98/gcc%2Fconfig%2Falpha%2Fosf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fosf.h?ref=f8dc212b5deccabd4f3f32beb4459ba944cfca98", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for DEC Alpha on OSF/1.\n-   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2001\n+   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2001, 2002, 2003\n    Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n@@ -32,21 +32,21 @@ Boston, MA 02111-1307, USA.  */\n \n /* Names to predefine in the preprocessor for this target machine.  */\n \n-#define TARGET_OS_CPP_BUILTINS()\t\t\\\n-    do {\t\t\t\t\t\\\n-\tbuiltin_define_std (\"unix\");\t\t\\\n-\tbuiltin_define_std (\"SYSTYPE_BSD\");\t\\\n-\tbuiltin_define (\"_SYSTYPE_BSD\");\t\\\n-\tbuiltin_define (\"__osf__\");\t\t\\\n-\tbuiltin_define (\"_LONGLONG\");\t\t\\\n-\tbuiltin_define (\"__EXTERN_PREFIX\");\t\\\n-\tbuiltin_assert (\"system=unix\");\t\t\\\n-\tbuiltin_assert (\"system=xpg4\");\t\t\\\n-\t/* Tru64 UNIX V5 has a 16 byte long\t\\\n-\t   double type and requires __X_FLOAT\t\\\n-\t   to be defined for <math.h>.  */\t\\\n-        if (LONG_DOUBLE_TYPE_SIZE == 128)\t\\\n-          builtin_define (\"__X_FLOAT\");\t\t\\\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n+    do {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"unix\");\t\t\t\\\n+\tbuiltin_define_std (\"SYSTYPE_BSD\");\t\t\\\n+\tbuiltin_define (\"_SYSTYPE_BSD\");\t\t\\\n+\tbuiltin_define (\"__osf__\");\t\t\t\\\n+\tbuiltin_define (\"_LONGLONG\");\t\t\t\\\n+\tbuiltin_define (\"__PRAGMA_EXTERN_PREFIX\");\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\t\\\n+\tbuiltin_assert (\"system=xpg4\");\t\t\t\\\n+\t/* Tru64 UNIX V5 has a 16 byte long\t\t\\\n+\t   double type and requires __X_FLOAT\t\t\\\n+\t   to be defined for <math.h>.  */\t\t\\\n+        if (LONG_DOUBLE_TYPE_SIZE == 128)\t\t\\\n+          builtin_define (\"__X_FLOAT\");\t\t\t\\\n     } while (0)\n \n /* Accept DEC C flags for multithreaded programs.  We use _PTHREAD_USE_D4"}, {"sha": "75475266d8700833953dd11c95c10118602d5043", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8dc212b5deccabd4f3f32beb4459ba944cfca98/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8dc212b5deccabd4f3f32beb4459ba944cfca98/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=f8dc212b5deccabd4f3f32beb4459ba944cfca98", "patch": "@@ -6588,7 +6588,8 @@ empty string.\n This pragma is similar in intent to to the asm labels extension\n (@pxref{Asm Labels}) in that the system programmer wants to change\n the assembly-level ABI without changing the source-level API.  The\n-preprocessor defines @code{__EXTERN_PREFIX} if the pragma is available.\n+preprocessor defines @code{__PRAGMA_EXTERN_PREFIX} if the pragma is\n+available.\n @end table\n \n @node Unnamed Fields"}, {"sha": "2f712c7ddd527ea8ac4b837fb4b4d7c6794d70df", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8dc212b5deccabd4f3f32beb4459ba944cfca98/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8dc212b5deccabd4f3f32beb4459ba944cfca98/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=f8dc212b5deccabd4f3f32beb4459ba944cfca98", "patch": "@@ -709,6 +709,43 @@ static const char* apzAlpha___AssertPatch[] = {\n     \"__assert(const char *, const char *, int)\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Alpha___Extern_Prefix fix\n+ */\n+tSCC zAlpha___Extern_PrefixName[] =\n+     \"alpha___extern_prefix\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAlpha___Extern_PrefixList[] =\n+  \"|sys/stat.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAlpha___Extern_PrefixMachs[] = {\n+        \"alpha*-dec-osf5*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAlpha___Extern_PrefixSelect0[] =\n+       \"#[ \\t]*if[ \\t]*defined\\\\(__DECC\\\\)\";\n+\n+#define    ALPHA___EXTERN_PREFIX_TEST_CT  1\n+static tTestDesc aAlpha___Extern_PrefixTests[] = {\n+  { TT_EGREP,    zAlpha___Extern_PrefixSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Alpha___Extern_Prefix\n+ */\n+static const char* apzAlpha___Extern_PrefixPatch[] = {\n+    \"format\",\n+    \"%0 || defined(__PRAGMA_EXTERN_PREFIX)\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Alpha_Assert fix\n@@ -5788,6 +5825,7 @@ typedef enum {\n     AIX_SYSWAIT_FIXIDX,\n     AIX_VOLATILE_FIXIDX,\n     ALPHA___ASSERT_FIXIDX,\n+    ALPHA___EXTERN_PREFIX_FIXIDX,\n     ALPHA_ASSERT_FIXIDX,\n     ALPHA_GETOPT_FIXIDX,\n     ALPHA_PARENS_FIXIDX,\n@@ -5993,6 +6031,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ALPHA___ASSERT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAlpha___AssertTests,   apzAlpha___AssertPatch, 0 },\n \n+  {  zAlpha___Extern_PrefixName,    zAlpha___Extern_PrefixList,\n+     apzAlpha___Extern_PrefixMachs,\n+     ALPHA___EXTERN_PREFIX_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAlpha___Extern_PrefixTests,   apzAlpha___Extern_PrefixPatch, 0 },\n+\n   {  zAlpha_AssertName,    zAlpha_AssertList,\n      apzAlpha_AssertMachs,\n      ALPHA_ASSERT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "619f6965809a56fde18b4d98ec07a2c6b68ec994", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8dc212b5deccabd4f3f32beb4459ba944cfca98/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8dc212b5deccabd4f3f32beb4459ba944cfca98/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=f8dc212b5deccabd4f3f32beb4459ba944cfca98", "patch": "@@ -522,6 +522,22 @@ fix = {\n };\n \n \n+/*\n+ *  Obey __PRAGMA_EXTERN_PREFIX for Tru64 UNIX V5 <sys/stat.h>.\n+ */\n+fix = {\n+    hackname  = alpha___extern_prefix;\n+    files     = sys/stat.h;\n+    select    = \"#[ \\t]*if[ \\t]*defined\\\\(__DECC\\\\)\";\n+\n+    mach      = \"alpha*-dec-osf5*\";\n+    c_fix     = format;\n+    c_fix_arg = \"%0 || defined(__PRAGMA_EXTERN_PREFIX)\";\n+\n+    test_text = \"#   if defined(__DECC)\";\n+};\n+\n+\n /*\n  *  Fix assert macro in assert.h on Alpha OSF/1.\n  *  The superfluous int cast breaks C++."}, {"sha": "91d515109e8b8b8a6ad43c08ce809aa23c5f88bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8dc212b5deccabd4f3f32beb4459ba944cfca98/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8dc212b5deccabd4f3f32beb4459ba944cfca98/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f8dc212b5deccabd4f3f32beb4459ba944cfca98", "patch": "@@ -1,3 +1,8 @@\n+2003-02-24  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* g++.dg/other/pragma-ep-1.C: Test for __PRAGMA_EXTERN_PREFIX.\n+\t* gcc.dg/pragma-ep-1.c: Likewise.\n+\n 2003-02-24  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/9602"}, {"sha": "151003cb1539fb9fa521f30c5219e6ed300be697", "filename": "gcc/testsuite/g++.dg/other/pragma-ep-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8dc212b5deccabd4f3f32beb4459ba944cfca98/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpragma-ep-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8dc212b5deccabd4f3f32beb4459ba944cfca98/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpragma-ep-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpragma-ep-1.C?ref=f8dc212b5deccabd4f3f32beb4459ba944cfca98", "patch": "@@ -5,7 +5,7 @@\n /* { dg-final { scan-assembler \"four\" } } */\n /* { dg-final { scan-assembler-not \"_four\" } } */\n \n-#ifndef __EXTERN_PREFIX\n+#ifndef __PRAGMA_EXTERN_PREFIX\n #error\n #endif\n "}, {"sha": "e110ff900041db5650e3d9d7b86772b0f7772b85", "filename": "gcc/testsuite/gcc.dg/pragma-ep-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8dc212b5deccabd4f3f32beb4459ba944cfca98/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-ep-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8dc212b5deccabd4f3f32beb4459ba944cfca98/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-ep-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-ep-1.c?ref=f8dc212b5deccabd4f3f32beb4459ba944cfca98", "patch": "@@ -5,7 +5,7 @@\n /* { dg-final { scan-assembler \"four\" } } */\n /* { dg-final { scan-assembler-not \"_four\" } } */\n \n-#ifndef __EXTERN_PREFIX\n+#ifndef __PRAGMA_EXTERN_PREFIX\n #error\n #endif\n "}]}