{"sha": "eb4d554e37b3ba7f6c1c67f25f199ccbac0da977", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI0ZDU1NGUzN2IzYmE3ZjZjMWM2N2YyNWYxOTljY2JhYzBkYTk3Nw==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@redhat.com", "date": "2001-07-19T19:45:24Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2001-07-19T19:45:24Z"}, "message": "reload1.c (choose_reload_regs): Don't inherit a reload that crosses multiple registers if...\n\n\t* reload1.c (choose_reload_regs): Don't inherit a reload\n\tthat crosses multiple registers if registers past the first\n\tdon't fit in the desired class.\n\nFrom-SVN: r44160", "tree": {"sha": "d7d7c872b1eee3a4247a3f4aa15367fdfcf1debe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7d7c872b1eee3a4247a3f4aa15367fdfcf1debe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb4d554e37b3ba7f6c1c67f25f199ccbac0da977", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb4d554e37b3ba7f6c1c67f25f199ccbac0da977", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb4d554e37b3ba7f6c1c67f25f199ccbac0da977", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb4d554e37b3ba7f6c1c67f25f199ccbac0da977/comments", "author": null, "committer": null, "parents": [{"sha": "8d3216f82da82f921fd4f684661b5597fde436c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d3216f82da82f921fd4f684661b5597fde436c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d3216f82da82f921fd4f684661b5597fde436c6"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "f8f9e2fb57b95370f3f09e27587219966275d4bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4d554e37b3ba7f6c1c67f25f199ccbac0da977/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4d554e37b3ba7f6c1c67f25f199ccbac0da977/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb4d554e37b3ba7f6c1c67f25f199ccbac0da977", "patch": "@@ -1,5 +1,9 @@\n 2001-07-19  Geoffrey Keating  <geoffk@redhat.com>\n \n+\t* reload1.c (choose_reload_regs): Don't inherit a reload\n+\tthat crosses multiple registers if registers past the first\n+\tdon't fit in the desired class.\n+\n \t* ifcvt.c (noce_try_store_flag_constants): Use trunc_int_for_mode\n \twhen negating constants.\n "}, {"sha": "94eccfe1974a5d3e94102381d2e0376104cdd49c", "filename": "gcc/reload1.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4d554e37b3ba7f6c1c67f25f199ccbac0da977/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4d554e37b3ba7f6c1c67f25f199ccbac0da977/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=eb4d554e37b3ba7f6c1c67f25f199ccbac0da977", "patch": "@@ -5508,10 +5508,16 @@ choose_reload_regs (chain)\n \t\t      if (k == nr)\n \t\t\t{\n \t\t\t  int i1;\n+\t\t\t  int bad_for_class;\n \n \t\t\t  last_reg = (GET_MODE (last_reg) == mode\n \t\t\t\t      ? last_reg : gen_rtx_REG (mode, i));\n \n+\t\t\t  bad_for_class = 0;\n+\t\t\t  for (k = 0; k < nr; k++)\n+\t\t\t    bad_for_class |= ! TEST_HARD_REG_BIT (reg_class_contents[(int) rld[r].class],\n+\t\t\t\t\t\t\t\t  i+k);\n+\n \t\t\t  /* We found a register that contains the\n \t\t\t     value we need.  If this register is the\n \t\t\t     same as an `earlyclobber' operand of the\n@@ -5541,8 +5547,7 @@ choose_reload_regs (chain)\n \t\t\t\t if we need it wider than we've got it.  */\n \t\t\t      || (GET_MODE_SIZE (rld[r].mode)\n \t\t\t\t  > GET_MODE_SIZE (mode))\n-\t\t\t      || ! TEST_HARD_REG_BIT (reg_class_contents[(int) rld[r].class],\n-\t\t\t\t\t\t      i)\n+\t\t\t      || bad_for_class\n \n \t\t\t      /* If find_reloads chose reload_out as reload\n \t\t\t\t register, stay with it - that leaves the"}]}