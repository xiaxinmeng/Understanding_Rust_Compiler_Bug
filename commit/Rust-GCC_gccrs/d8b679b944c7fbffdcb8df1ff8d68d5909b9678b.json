{"sha": "d8b679b944c7fbffdcb8df1ff8d68d5909b9678b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhiNjc5Yjk0NGM3ZmJmZmRjYjhkZjFmZjhkNjhkNTkwOWI5Njc4Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-25T23:10:10Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-25T23:10:10Z"}, "message": "(untyped_call): Make it return a complex double.\n\nFrom-SVN: r9464", "tree": {"sha": "ab7029db879b4c16f29bdf2e057b24b3045de871", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab7029db879b4c16f29bdf2e057b24b3045de871"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8b679b944c7fbffdcb8df1ff8d68d5909b9678b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8b679b944c7fbffdcb8df1ff8d68d5909b9678b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8b679b944c7fbffdcb8df1ff8d68d5909b9678b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8b679b944c7fbffdcb8df1ff8d68d5909b9678b/comments", "author": null, "committer": null, "parents": [{"sha": "3e4a14ef2edd79e6d00aecb83871f01d5c5a61e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e4a14ef2edd79e6d00aecb83871f01d5c5a61e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e4a14ef2edd79e6d00aecb83871f01d5c5a61e3"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "2d91e767cdd4718ba47ed50477d5e21f909daeea", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b679b944c7fbffdcb8df1ff8d68d5909b9678b/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b679b944c7fbffdcb8df1ff8d68d5909b9678b/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=d8b679b944c7fbffdcb8df1ff8d68d5909b9678b", "patch": "@@ -5236,7 +5236,14 @@\n {\n   int i;\n \n-  emit_call_insn (gen_call (operands[0], const0_rtx, NULL, const0_rtx));\n+  /* In order to give reg-stack an easier job in validating two\n+     coprocessor registers as containing a possible return value,\n+     simply pretend the untyped call returns a complex long double\n+     value.  */\n+  emit_call_insn (TARGET_80387\n+                  ? gen_call_value (gen_rtx (REG, XCmode, FIRST_FLOAT_REG),\n+\t\t                  operands[0], const0_rtx)\n+                  : gen_call (operands[0], const0_rtx));\n \n   for (i = 0; i < XVECLEN (operands[2], 0); i++)\n     {"}]}