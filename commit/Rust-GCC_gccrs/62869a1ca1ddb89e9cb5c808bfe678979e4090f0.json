{"sha": "62869a1ca1ddb89e9cb5c808bfe678979e4090f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI4NjlhMWNhMWRkYjg5ZTljYjVjODA4YmZlNjc4OTc5ZTQwOTBmMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-10-18T07:49:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-10-18T07:49:32Z"}, "message": "tree-ssa-propagate.h (substitute_and_fold): Adjust prototype.\n\n2016-10-18  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-propagate.h (substitute_and_fold): Adjust prototype.\n\t* tree-ssa-propagate.c (ssa_prop_fini): Remove final BB_VISITED\n\tclearing.\n\t(substitute_and_fold_dom_walker): Adjust constructor.\n\t(substitute_and_fold_dom_walker::before_dom_children): Remove\n\tdo_dce flag and handling (always true).\n\t(substitute_and_fold): Likewise.\n\t* tree-vrp.c (vrp_finalize): Adjust.\n\t(execute_early_vrp): Remove final BB_VISITED clearing.\n\t* tree-ssa-ccp.c (ccp_finalize): Adjust.\n\t* tree-ssa-copy.c (fini_copy_prop): Likewise.\n\t* ira.c (ira): Call clear_bb_flags.\n\nFrom-SVN: r241296", "tree": {"sha": "9b48433a7fd86a899ee37dcf25707c8d19d7b3db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b48433a7fd86a899ee37dcf25707c8d19d7b3db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62869a1ca1ddb89e9cb5c808bfe678979e4090f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62869a1ca1ddb89e9cb5c808bfe678979e4090f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62869a1ca1ddb89e9cb5c808bfe678979e4090f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62869a1ca1ddb89e9cb5c808bfe678979e4090f0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "699acd5b64b6dd9908f968d4fac14c61ae038afc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/699acd5b64b6dd9908f968d4fac14c61ae038afc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/699acd5b64b6dd9908f968d4fac14c61ae038afc"}], "stats": {"total": 50, "additions": 27, "deletions": 23}, "files": [{"sha": "77fef0623550ec8cacd07224b3f4d23ebcdaf0cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62869a1ca1ddb89e9cb5c808bfe678979e4090f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62869a1ca1ddb89e9cb5c808bfe678979e4090f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62869a1ca1ddb89e9cb5c808bfe678979e4090f0", "patch": "@@ -1,3 +1,18 @@\n+2016-10-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-propagate.h (substitute_and_fold): Adjust prototype.\n+\t* tree-ssa-propagate.c (ssa_prop_fini): Remove final BB_VISITED\n+\tclearing.\n+\t(substitute_and_fold_dom_walker): Adjust constructor.\n+\t(substitute_and_fold_dom_walker::before_dom_children): Remove\n+\tdo_dce flag and handling (always true).\n+\t(substitute_and_fold): Likewise.\n+\t* tree-vrp.c (vrp_finalize): Adjust.\n+\t(execute_early_vrp): Remove final BB_VISITED clearing.\n+\t* tree-ssa-ccp.c (ccp_finalize): Adjust.\n+\t* tree-ssa-copy.c (fini_copy_prop): Likewise.\n+\t* ira.c (ira): Call clear_bb_flags.\n+\n 2016-10-18  Richard Biener  <rguenther@suse.de>\n \n \t* genmatch.c (dt_operand::gen_gimple_expr): Use get_name to"}, {"sha": "cd640fce589faf018ec26cca45cf2c23633d46ae", "filename": "gcc/ira.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62869a1ca1ddb89e9cb5c808bfe678979e4090f0/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62869a1ca1ddb89e9cb5c808bfe678979e4090f0/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=62869a1ca1ddb89e9cb5c808bfe678979e4090f0", "patch": "@@ -5065,6 +5065,8 @@ ira (FILE *f)\n   bool saved_flag_caller_saves = flag_caller_saves;\n   enum ira_region saved_flag_ira_region = flag_ira_region;\n \n+  clear_bb_flags ();\n+\n   /* Perform target specific PIC register initialization.  */\n   targetm.init_pic_reg ();\n "}, {"sha": "167598f6eec4df60d656019dfb1c2851907b873a", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62869a1ca1ddb89e9cb5c808bfe678979e4090f0/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62869a1ca1ddb89e9cb5c808bfe678979e4090f0/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=62869a1ca1ddb89e9cb5c808bfe678979e4090f0", "patch": "@@ -953,8 +953,7 @@ ccp_finalize (bool nonzero_p)\n     }\n \n   /* Perform substitutions based on the known constant values.  */\n-  something_changed = substitute_and_fold (get_constant_value,\n-\t\t\t\t\t   ccp_fold_stmt, true);\n+  something_changed = substitute_and_fold (get_constant_value, ccp_fold_stmt);\n \n   free (const_val);\n   const_val = NULL;"}, {"sha": "abc620535713eaa77a4944383a72124d1db556fb", "filename": "gcc/tree-ssa-copy.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62869a1ca1ddb89e9cb5c808bfe678979e4090f0/gcc%2Ftree-ssa-copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62869a1ca1ddb89e9cb5c808bfe678979e4090f0/gcc%2Ftree-ssa-copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copy.c?ref=62869a1ca1ddb89e9cb5c808bfe678979e4090f0", "patch": "@@ -550,7 +550,7 @@ fini_copy_prop (void)\n \t}\n     }\n \n-  bool changed = substitute_and_fold (get_value, NULL, true);\n+  bool changed = substitute_and_fold (get_value, NULL);\n   if (changed)\n     {\n       free_numbers_of_iterations_estimates (cfun);"}, {"sha": "fbe7e13f84ef6756f063495111260496c3b87d2b", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62869a1ca1ddb89e9cb5c808bfe678979e4090f0/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62869a1ca1ddb89e9cb5c808bfe678979e4090f0/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=62869a1ca1ddb89e9cb5c808bfe678979e4090f0", "patch": "@@ -479,9 +479,6 @@ ssa_prop_fini (void)\n   free (cfg_order_to_bb);\n   BITMAP_FREE (ssa_edge_worklist);\n   uid_to_stmt.release ();\n-  basic_block bb;\n-  FOR_BB_BETWEEN (bb, ENTRY_BLOCK_PTR_FOR_FN (cfun), NULL, next_bb)\n-    bb->flags &= ~BB_VISITED;\n }\n \n \n@@ -972,10 +969,9 @@ class substitute_and_fold_dom_walker : public dom_walker\n public:\n     substitute_and_fold_dom_walker (cdi_direction direction,\n \t\t\t\t    ssa_prop_get_value_fn get_value_fn_,\n-\t\t\t\t    ssa_prop_fold_stmt_fn fold_fn_,\n-\t\t\t\t    bool do_dce_)\n+\t\t\t\t    ssa_prop_fold_stmt_fn fold_fn_)\n \t: dom_walker (direction), get_value_fn (get_value_fn_),\n-      fold_fn (fold_fn_), do_dce (do_dce_), something_changed (false)\n+      fold_fn (fold_fn_), something_changed (false)\n     {\n       stmts_to_remove.create (0);\n       stmts_to_fixup.create (0);\n@@ -993,7 +989,6 @@ class substitute_and_fold_dom_walker : public dom_walker\n \n     ssa_prop_get_value_fn get_value_fn;\n     ssa_prop_fold_stmt_fn fold_fn;\n-    bool do_dce;\n     bool something_changed;\n     vec<gimple *> stmts_to_remove;\n     vec<gimple *> stmts_to_fixup;\n@@ -1012,8 +1007,7 @@ substitute_and_fold_dom_walker::before_dom_children (basic_block bb)\n       tree res = gimple_phi_result (phi);\n       if (virtual_operand_p (res))\n \tcontinue;\n-      if (do_dce\n-\t  && res && TREE_CODE (res) == SSA_NAME)\n+      if (res && TREE_CODE (res) == SSA_NAME)\n \t{\n \t  tree sprime = get_value_fn (res);\n \t  if (sprime\n@@ -1039,8 +1033,7 @@ substitute_and_fold_dom_walker::before_dom_children (basic_block bb)\n       /* No point propagating into a stmt we have a value for we\n          can propagate into all uses.  Mark it for removal instead.  */\n       tree lhs = gimple_get_lhs (stmt);\n-      if (do_dce\n-\t  && lhs && TREE_CODE (lhs) == SSA_NAME)\n+      if (lhs && TREE_CODE (lhs) == SSA_NAME)\n \t{\n \t  tree sprime = get_value_fn (lhs);\n \t  if (sprime\n@@ -1180,8 +1173,7 @@ substitute_and_fold_dom_walker::before_dom_children (basic_block bb)\n \n bool\n substitute_and_fold (ssa_prop_get_value_fn get_value_fn,\n-\t\t     ssa_prop_fold_stmt_fn fold_fn,\n-\t\t     bool do_dce)\n+\t\t     ssa_prop_fold_stmt_fn fold_fn)\n {\n   gcc_assert (get_value_fn);\n \n@@ -1192,7 +1184,7 @@ substitute_and_fold (ssa_prop_get_value_fn get_value_fn,\n \n   calculate_dominance_info (CDI_DOMINATORS);\n   substitute_and_fold_dom_walker walker(CDI_DOMINATORS,\n-\t\t\t\t\tget_value_fn, fold_fn, do_dce);\n+\t\t\t\t\tget_value_fn, fold_fn);\n   walker.walk (ENTRY_BLOCK_PTR_FOR_FN (cfun));\n \n   /* We cannot remove stmts during the BB walk, especially not release"}, {"sha": "2729bc7dff9982185a7b5b4ce1b4e20ae4c52cdb", "filename": "gcc/tree-ssa-propagate.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62869a1ca1ddb89e9cb5c808bfe678979e4090f0/gcc%2Ftree-ssa-propagate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62869a1ca1ddb89e9cb5c808bfe678979e4090f0/gcc%2Ftree-ssa-propagate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.h?ref=62869a1ca1ddb89e9cb5c808bfe678979e4090f0", "patch": "@@ -75,8 +75,7 @@ extern bool update_gimple_call (gimple_stmt_iterator *, tree, int, ...);\n extern bool update_call_from_tree (gimple_stmt_iterator *, tree);\n extern void ssa_propagate (ssa_prop_visit_stmt_fn, ssa_prop_visit_phi_fn);\n extern bool stmt_makes_single_store (gimple *);\n-extern bool substitute_and_fold (ssa_prop_get_value_fn, ssa_prop_fold_stmt_fn,\n-\t\t\t\t bool);\n+extern bool substitute_and_fold (ssa_prop_get_value_fn, ssa_prop_fold_stmt_fn);\n extern bool may_propagate_copy (tree, tree);\n extern bool may_propagate_copy_into_stmt (gimple *, tree);\n extern bool may_propagate_copy_into_asm (tree);"}, {"sha": "31f4f25cced9cafd48c9f0f173d03c2b2000c220", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62869a1ca1ddb89e9cb5c808bfe678979e4090f0/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62869a1ca1ddb89e9cb5c808bfe678979e4090f0/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=62869a1ca1ddb89e9cb5c808bfe678979e4090f0", "patch": "@@ -10622,8 +10622,7 @@ vrp_finalize (bool warn_array_bounds_p)\n \t\t\t  vr_value[i]->max);\n       }\n \n-  substitute_and_fold (op_with_constant_singleton_value_range,\n-\t\t       vrp_fold_stmt, true);\n+  substitute_and_fold (op_with_constant_singleton_value_range, vrp_fold_stmt);\n \n   if (warn_array_bounds && warn_array_bounds_p)\n     check_all_array_refs ();\n@@ -10954,8 +10953,6 @@ execute_early_vrp ()\n   vrp_free_lattice ();\n   scev_finalize ();\n   loop_optimizer_finalize ();\n-  FOR_EACH_BB_FN (bb, cfun)\n-    bb->flags &= ~BB_VISITED;\n   return 0;\n }\n "}]}