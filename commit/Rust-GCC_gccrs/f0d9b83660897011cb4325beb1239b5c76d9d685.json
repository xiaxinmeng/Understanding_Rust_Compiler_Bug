{"sha": "f0d9b83660897011cb4325beb1239b5c76d9d685", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBkOWI4MzY2MDg5NzAxMWNiNDMyNWJlYjEyMzliNWM3NmQ5ZDY4NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-08-19T17:24:19Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-08-19T17:24:19Z"}, "message": "call.c (reference_related_p): Check for error_mark_node.\n\n\t* call.c (reference_related_p): Check for error_mark_node.\n\t(add_function_candidate): Check it instead of\n\tsame_type_ignoring_top_level_qualifiers_p.\n\nFrom-SVN: r163382", "tree": {"sha": "24bdaba937cbecb19a81055302bee50d7670cad1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24bdaba937cbecb19a81055302bee50d7670cad1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0d9b83660897011cb4325beb1239b5c76d9d685", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0d9b83660897011cb4325beb1239b5c76d9d685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0d9b83660897011cb4325beb1239b5c76d9d685", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0d9b83660897011cb4325beb1239b5c76d9d685/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95d7bdaae984895c2b436fbc445eb47d7c9555b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95d7bdaae984895c2b436fbc445eb47d7c9555b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95d7bdaae984895c2b436fbc445eb47d7c9555b0"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "82c8299990bccc663c6c49801222002c3d815bb8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0d9b83660897011cb4325beb1239b5c76d9d685/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0d9b83660897011cb4325beb1239b5c76d9d685/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f0d9b83660897011cb4325beb1239b5c76d9d685", "patch": "@@ -1,5 +1,9 @@\n 2010-08-19  Jason Merrill  <jason@redhat.com>\n \n+\t* call.c (reference_related_p): Check for error_mark_node.\n+\t(add_function_candidate): Check it instead of\n+\tsame_type_ignoring_top_level_qualifiers_p.\n+\n \tPR c++/45315\n \t* init.c (build_new_1): Don't use build_value_init in a template.\n \t(build_value_init): Make sure we don't."}, {"sha": "adcf9847587315220c855247707fef8dfb6db2da", "filename": "gcc/cp/call.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0d9b83660897011cb4325beb1239b5c76d9d685/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0d9b83660897011cb4325beb1239b5c76d9d685/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=f0d9b83660897011cb4325beb1239b5c76d9d685", "patch": "@@ -999,6 +999,9 @@ standard_conversion (tree to, tree from, tree expr, bool c_cast_p,\n bool\n reference_related_p (tree t1, tree t2)\n {\n+  if (t1 == error_mark_node || t2 == error_mark_node)\n+    return false;\n+\n   t1 = TYPE_MAIN_VARIANT (t1);\n   t2 = TYPE_MAIN_VARIANT (t2);\n \n@@ -1598,8 +1601,10 @@ add_function_candidate (struct z_candidate **candidates,\n \n   /* Kludge: When looking for a function from a subobject while generating\n      an implicit copy/move constructor/operator=, don't consider anything\n-     that takes (a reference to) a different type.  See c++/44909.  */\n-  else if (flags & LOOKUP_SPECULATIVE)\n+     that takes (a reference to) an unrelated type.  See c++/44909.  */\n+  else if ((flags & LOOKUP_SPECULATIVE)\n+\t   || (current_function_decl\n+\t       && DECL_DEFAULTED_FN (current_function_decl)))\n     {\n       if (DECL_CONSTRUCTOR_P (fn))\n \ti = 1;\n@@ -1611,8 +1616,8 @@ add_function_candidate (struct z_candidate **candidates,\n       if (i && len == i)\n \t{\n \t  parmnode = chain_index (i-1, parmlist);\n-\t  if (!(same_type_ignoring_top_level_qualifiers_p\n-\t\t(non_reference (TREE_VALUE (parmnode)), ctype)))\n+\t  if (!reference_related_p (non_reference (TREE_VALUE (parmnode)),\n+\t\t\t\t    ctype))\n \t    viable = 0;\n \t}\n     }"}, {"sha": "e8bbfc1e3b5c9f3659a3af0e5750f2b1e5e5b2d1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0d9b83660897011cb4325beb1239b5c76d9d685/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0d9b83660897011cb4325beb1239b5c76d9d685/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f0d9b83660897011cb4325beb1239b5c76d9d685", "patch": "@@ -1,5 +1,7 @@\n 2010-08-19  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/init/synth3.C: New.\n+\n \t* g++.dg/init/value8.C: New.\n \n \t* g++.dg/tree-ssa/empty-2.C: New."}, {"sha": "d656ddb2e05ffb793a509e8b0ad17069378b8367", "filename": "gcc/testsuite/g++.dg/init/synth3.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0d9b83660897011cb4325beb1239b5c76d9d685/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fsynth3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0d9b83660897011cb4325beb1239b5c76d9d685/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fsynth3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fsynth3.C?ref=f0d9b83660897011cb4325beb1239b5c76d9d685", "patch": "@@ -0,0 +1,21 @@\n+// Test that synthesizing the C copy constructor doesn't require B<int> to\n+// be complete.\n+\n+template <class T>\n+struct B\n+{\n+  typename T::NT nt;\n+};\n+\n+struct A\n+{\n+  A ();\n+  A (const A&);\n+  A (const B<int>&);\n+};\n+\n+struct C: A { };\n+\n+C c;\n+C c2(c);\n+"}]}