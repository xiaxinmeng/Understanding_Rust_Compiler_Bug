{"sha": "148597b92e4ddb95ddcd53cbfad000845f831474", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ4NTk3YjkyZTRkZGI5NWRkY2Q1M2NiZmFkMDAwODQ1ZjgzMTQ3NA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-04T16:43:42Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-04T16:43:42Z"}, "message": "(macroexpand): Treat `foo ( )' as 0 args if foo wants 0 args.\n\nFrom-SVN: r4323", "tree": {"sha": "e4676af80d53f23536969e003d5b2c48dfafbfd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4676af80d53f23536969e003d5b2c48dfafbfd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/148597b92e4ddb95ddcd53cbfad000845f831474", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/148597b92e4ddb95ddcd53cbfad000845f831474", "html_url": "https://github.com/Rust-GCC/gccrs/commit/148597b92e4ddb95ddcd53cbfad000845f831474", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/148597b92e4ddb95ddcd53cbfad000845f831474/comments", "author": null, "committer": null, "parents": [{"sha": "77cb83306cc03794a739dcf191e23b7fb55d36aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77cb83306cc03794a739dcf191e23b7fb55d36aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77cb83306cc03794a739dcf191e23b7fb55d36aa"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "48e3bf45f8c06b3fe7d073702162e29407404c39", "filename": "gcc/cccp.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/148597b92e4ddb95ddcd53cbfad000845f831474/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/148597b92e4ddb95ddcd53cbfad000845f831474/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=148597b92e4ddb95ddcd53cbfad000845f831474", "patch": "@@ -7067,7 +7067,10 @@ macroexpand (hp, op)\n     if (i == 1) {\n       register U_CHAR *bp = args[0].raw;\n       register U_CHAR *lim = bp + args[0].raw_length;\n-      while (bp != lim && is_space[*bp]) bp++;\n+      /* cpp.texi says for foo ( ) we provide one argument.\n+\t However, if foo wants just 0 arguments, treat this as 0.  */\n+      if (nargs == 0)\n+\twhile (bp != lim && is_space[*bp]) bp++;\n       if (bp == lim)\n \ti = 0;\n     }"}]}