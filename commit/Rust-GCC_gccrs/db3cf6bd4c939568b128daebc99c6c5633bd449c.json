{"sha": "db3cf6bd4c939568b128daebc99c6c5633bd449c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIzY2Y2YmQ0YzkzOTU2OGIxMjhkYWViYzk5YzZjNTYzM2JkNDQ5Yw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-12-05T15:42:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-12-05T15:42:54Z"}, "message": "i386.c (ix86_builtin_vectorized_function): Declare.\n\n2006-12-05  Richard Guenther  <rguenther@suse.de>\n\n\t* config/i386/i386.c (ix86_builtin_vectorized_function): Declare.\n\t(TARGET_VECTORIZE_BUILTIN_VECTORIZED_FUNCTION): Define.\n\t(ix86_builtin_vectorized_function): New function to vectorize\n\tsqrt.\n\n\t* gcc.dg/vect/vect.exp: Add support for -fno-math-errno tests.\n\t* gcc.dg/vect/vect-pow-2.c: Rename to ...\n\t* gcc.dg/vect/no-math-errno-vect-pow-1.c: ... this.  Require\n\tvect_double, xfail for spu*-*-*.\n\nFrom-SVN: r119542", "tree": {"sha": "865bc35f1b4093688f743a1e2cf5b1b182c558fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/865bc35f1b4093688f743a1e2cf5b1b182c558fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db3cf6bd4c939568b128daebc99c6c5633bd449c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db3cf6bd4c939568b128daebc99c6c5633bd449c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db3cf6bd4c939568b128daebc99c6c5633bd449c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db3cf6bd4c939568b128daebc99c6c5633bd449c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "928341b20854c6c73ae57a888e7c0dfe23efe354", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/928341b20854c6c73ae57a888e7c0dfe23efe354", "html_url": "https://github.com/Rust-GCC/gccrs/commit/928341b20854c6c73ae57a888e7c0dfe23efe354"}], "stats": {"total": 62, "additions": 60, "deletions": 2}, "files": [{"sha": "a9ef3fab670fc56fb149e5ca22850ef06a18d282", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db3cf6bd4c939568b128daebc99c6c5633bd449c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db3cf6bd4c939568b128daebc99c6c5633bd449c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db3cf6bd4c939568b128daebc99c6c5633bd449c", "patch": "@@ -1,3 +1,10 @@\n+2006-12-05  Richard Guenther  <rguenther@suse.de>\n+\n+\t* config/i386/i386.c (ix86_builtin_vectorized_function): Declare.\n+\t(TARGET_VECTORIZE_BUILTIN_VECTORIZED_FUNCTION): Define.\n+\t(ix86_builtin_vectorized_function): New function to vectorize\n+\tsqrt.\n+\n 2006-12-05  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* config/bfin/bfin.c (output_file_start): Fix comment which referred to"}, {"sha": "40d96a04543236f49e925e7733504a10fd198a24", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db3cf6bd4c939568b128daebc99c6c5633bd449c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db3cf6bd4c939568b128daebc99c6c5633bd449c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=db3cf6bd4c939568b128daebc99c6c5633bd449c", "patch": "@@ -1354,6 +1354,7 @@ static bool ix86_pass_by_reference (CUMULATIVE_ARGS *, enum machine_mode,\n \t\t\t\t    tree, bool);\n static void ix86_init_builtins (void);\n static rtx ix86_expand_builtin (tree, rtx, rtx, enum machine_mode, int);\n+static tree ix86_builtin_vectorized_function (enum built_in_function, tree);\n static const char *ix86_mangle_fundamental_type (tree);\n static tree ix86_stack_protect_fail (void);\n static rtx ix86_internal_arg_pointer (void);\n@@ -1418,6 +1419,8 @@ static section *x86_64_elf_select_section (tree decl, int reloc,\n #define TARGET_INIT_BUILTINS ix86_init_builtins\n #undef TARGET_EXPAND_BUILTIN\n #define TARGET_EXPAND_BUILTIN ix86_expand_builtin\n+#undef TARGET_VECTORIZE_BUILTIN_VECTORIZED_FUNCTION\n+#define TARGET_VECTORIZE_BUILTIN_VECTORIZED_FUNCTION ix86_builtin_vectorized_function\n \n #undef TARGET_ASM_FUNCTION_EPILOGUE\n #define TARGET_ASM_FUNCTION_EPILOGUE ix86_output_function_epilogue\n@@ -17639,6 +17642,41 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n   gcc_unreachable ();\n }\n \n+/* Returns a function decl for a vectorized version of the builtin function\n+   with builtin function code FN and the result vector type TYPE, or NULL_TREE\n+   if it is not available.  */\n+\n+static tree\n+ix86_builtin_vectorized_function (enum built_in_function fn, tree type)\n+{\n+  enum machine_mode el_mode;\n+  int n;\n+\n+  if (TREE_CODE (type) != VECTOR_TYPE)\n+    return NULL_TREE;\n+\n+  el_mode = TYPE_MODE (TREE_TYPE (type));\n+  n = TYPE_VECTOR_SUBPARTS (type);\n+\n+  switch (fn)\n+    {\n+    case BUILT_IN_SQRT:\n+      if (el_mode == DFmode && n == 2)\n+\treturn ix86_builtins[IX86_BUILTIN_SQRTPD];\n+      return NULL_TREE;\n+\n+    case BUILT_IN_SQRTF:\n+      if (el_mode == SFmode && n == 4)\n+\treturn ix86_builtins[IX86_BUILTIN_SQRTPS];\n+      return NULL_TREE;\n+\n+    default:\n+      ;\n+    }\n+\n+  return NULL_TREE;\n+}\n+\n /* Store OPERAND to the memory after reload is completed.  This means\n    that we can't easily use assign_stack_local.  */\n rtx"}, {"sha": "0d6d814490245ae34ed6ad01ca582ded9774f0c7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db3cf6bd4c939568b128daebc99c6c5633bd449c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db3cf6bd4c939568b128daebc99c6c5633bd449c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=db3cf6bd4c939568b128daebc99c6c5633bd449c", "patch": "@@ -1,3 +1,10 @@\n+2006-12-05  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/vect/vect.exp: Add support for -fno-math-errno tests.\n+\t* gcc.dg/vect/vect-pow-2.c: Rename to ...\n+\t* gcc.dg/vect/no-math-errno-vect-pow-1.c: ... this.  Require\n+\tvect_double, xfail for spu*-*-*.\n+\n 2006-12-04  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/29962"}, {"sha": "03de93bf46c6165002016eee230592113cbc3856", "filename": "gcc/testsuite/gcc.dg/vect/no-math-errno-vect-pow-1.c", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db3cf6bd4c939568b128daebc99c6c5633bd449c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-math-errno-vect-pow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db3cf6bd4c939568b128daebc99c6c5633bd449c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-math-errno-vect-pow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-math-errno-vect-pow-1.c?ref=db3cf6bd4c939568b128daebc99c6c5633bd449c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -ftree-vectorize -fno-math-errno -fdump-tree-vect-details\" } */\n+/* { dg-require-effective-target vect_double } */\n \n double x[256];\n \n@@ -10,5 +10,5 @@ void foo(void)\n     x[i] = __builtin_pow (x[i], 0.5);\n }\n \n-/* { dg-final { scan-tree-dump \"pattern recognized\" \"vect\" } } */\n+/* { dg-final { scan-tree-dump \"pattern recognized\" \"vect\" { xfail spu*-*-* } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */", "previous_filename": "gcc/testsuite/gcc.dg/vect/vect-pow-2.c"}, {"sha": "ed5693f0964a404d264e5ff896e3ada327f09535", "filename": "gcc/testsuite/gcc.dg/vect/vect.exp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db3cf6bd4c939568b128daebc99c6c5633bd449c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db3cf6bd4c939568b128daebc99c6c5633bd449c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp?ref=db3cf6bd4c939568b128daebc99c6c5633bd449c", "patch": "@@ -102,6 +102,12 @@ lappend DEFAULT_VECTCFLAGS \"-ffast-math\"\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/fast-math-vect*.\\[cS\\]]]  \\\n \t\"\" $DEFAULT_VECTCFLAGS\n \n+# -fno-math-errno tests\n+set DEFAULT_VECTCFLAGS $SAVED_DEFAULT_VECTCFLAGS\n+lappend DEFAULT_VECTCFLAGS \"-fno-math-errno\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/no-math-errno-vect*.\\[cS\\]]]  \\\n+\t\"\" $DEFAULT_VECTCFLAGS\n+\n # -fwrapv tests\n set DEFAULT_VECTCFLAGS $SAVED_DEFAULT_VECTCFLAGS\n lappend DEFAULT_VECTCFLAGS \"-fwrapv\""}]}