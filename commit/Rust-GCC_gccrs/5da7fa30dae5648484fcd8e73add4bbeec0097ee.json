{"sha": "5da7fa30dae5648484fcd8e73add4bbeec0097ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRhN2ZhMzBkYWU1NjQ4NDg0ZmNkOGU3M2FkZDRiYmVlYzAwOTdlZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-09-02T10:28:36Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-09-02T10:28:36Z"}, "message": "re PR libstdc++/50268 ([C++0x] bitset doesn't sanitize input)\n\n2011-09-02  Paolo Carlini  <paolo.carlini@oracle.com>\n\t    Marc Glisse  <marc.glisse@normalesup.org>\n\n\tPR libstdc++/50268\n\t* include/std/bitset (struct _Sanitize_val): Add.\n\t(bitset<>::bitset(unsigned long long)): Fix.\n\t* testsuite/23_containers/bitset/cons/50268.cc: New.\n\nCo-Authored-By: Marc Glisse <marc.glisse@normalesup.org>\n\nFrom-SVN: r178463", "tree": {"sha": "2385a4a4b5ced97f93fce5652c1b6ebb73402ac0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2385a4a4b5ced97f93fce5652c1b6ebb73402ac0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5da7fa30dae5648484fcd8e73add4bbeec0097ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da7fa30dae5648484fcd8e73add4bbeec0097ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5da7fa30dae5648484fcd8e73add4bbeec0097ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da7fa30dae5648484fcd8e73add4bbeec0097ee/comments", "author": null, "committer": null, "parents": [{"sha": "bd38b43159413df75de165990b82bc32ae677e07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd38b43159413df75de165990b82bc32ae677e07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd38b43159413df75de165990b82bc32ae677e07"}], "stats": {"total": 117, "additions": 115, "deletions": 2}, "files": [{"sha": "bd9850cd43b9f52a1e2ec6d2cd9d7ed8cee66fc2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da7fa30dae5648484fcd8e73add4bbeec0097ee/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da7fa30dae5648484fcd8e73add4bbeec0097ee/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5da7fa30dae5648484fcd8e73add4bbeec0097ee", "patch": "@@ -1,3 +1,11 @@\n+2011-09-02  Paolo Carlini  <paolo.carlini@oracle.com>\n+\t    Marc Glisse  <marc.glisse@normalesup.org>\n+\n+\tPR libstdc++/50268\n+\t* include/std/bitset (struct _Sanitize_val): Add.\n+\t(bitset<>::bitset(unsigned long long)): Fix.\n+\t* testsuite/23_containers/bitset/cons/50268.cc: New.\n+\n 2011-09-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/hashtable.h (_Hashtable<>::_Hashtable(_Hashtable&&)):"}, {"sha": "648d7ab5fe8edb4ddeb0679d6a6874540dfcf231", "filename": "libstdc++-v3/include/std/bitset", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da7fa30dae5648484fcd8e73add4bbeec0097ee/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da7fa30dae5648484fcd8e73add4bbeec0097ee/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset?ref=5da7fa30dae5648484fcd8e73add4bbeec0097ee", "patch": "@@ -52,11 +52,13 @@\n #include <iosfwd>\n #include <bits/cxxabi_forced.h>\n \n-#define _GLIBCXX_BITSET_BITS_PER_WORD  (__CHAR_BIT__ * sizeof(unsigned long))\n+#define _GLIBCXX_BITSET_BITS_PER_WORD  (__CHAR_BIT__ * __SIZEOF_LONG__)\n #define _GLIBCXX_BITSET_WORDS(__n) \\\n   ((__n) / _GLIBCXX_BITSET_BITS_PER_WORD + \\\n    ((__n) % _GLIBCXX_BITSET_BITS_PER_WORD == 0 ? 0 : 1))\n \n+#define _GLIBCXX_BITSET_BITS_PER_ULL (__CHAR_BIT__ * __SIZEOF_LONG_LONG__)\n+\n namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n@@ -657,6 +659,24 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       _S_do_sanitize(_WordT) _GLIBCXX_NOEXCEPT { } \n     };\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+  template<size_t _Nb, bool = _Nb < _GLIBCXX_BITSET_BITS_PER_ULL>\n+    struct _Sanitize_val\n+    {\n+      static constexpr unsigned long long\n+      _S_do_sanitize_val(unsigned long long __val)\n+      { return __val; }\n+    };\n+\n+  template<size_t _Nb>\n+    struct _Sanitize_val<_Nb, true>\n+    {\n+      static constexpr unsigned long long\n+      _S_do_sanitize_val(unsigned long long __val)\n+      { return __val & ~((~static_cast<unsigned long long>(0)) << _Nb); }\n+    };\n+#endif\n+\n   /**\n    *  @brief  The %bitset class represents a @e fixed-size sequence of bits.\n    *\n@@ -822,7 +842,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       /// Initial bits bitwise-copied from a single word (others set to zero).\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       constexpr bitset(unsigned long long __val) noexcept\n-      : _Base(__val) { }\n+      : _Base(_Sanitize_val<_Nb>::_S_do_sanitize_val(__val)) { }\n #else\n       bitset(unsigned long __val)\n       : _Base(__val)\n@@ -1513,6 +1533,7 @@ _GLIBCXX_END_NAMESPACE_CONTAINER\n \n #undef _GLIBCXX_BITSET_WORDS\n #undef _GLIBCXX_BITSET_BITS_PER_WORD\n+#undef _GLIBCXX_BITSET_BITS_PER_ULL\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n "}, {"sha": "6a61d7e2f13c34801383808ffc33062f7cce1ee9", "filename": "libstdc++-v3/testsuite/23_containers/bitset/cons/50268.cc", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da7fa30dae5648484fcd8e73add4bbeec0097ee/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F50268.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da7fa30dae5648484fcd8e73add4bbeec0097ee/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F50268.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F50268.cc?ref=5da7fa30dae5648484fcd8e73add4bbeec0097ee", "patch": "@@ -0,0 +1,84 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <bitset>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/50268\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::bitset<1> b1(3ULL);\n+  VERIFY( b1.count() == 1ULL );\n+\n+  std::bitset<3> b2(30ULL);\n+  VERIFY( b2.count() == 2ULL );\n+\n+  std::bitset<6> b3(300ULL);\n+  VERIFY( b3.count() == 3ULL );\n+\n+  std::bitset<9> b4(3000ULL);\n+  VERIFY( b4.count() == 5ULL );\n+\n+  std::bitset<16> b5(300000ULL);\n+  VERIFY( b5.count() == 7ULL );\n+\n+  std::bitset<24> b6(30000000ULL);\n+  VERIFY( b6.count() == 9ULL );\n+\n+  std::bitset<32> b7(30000000000ULL);\n+  VERIFY( b7.count() == 13ULL );\n+\n+  std::bitset<37> b8(3000000000000ULL);\n+  VERIFY( b8.count() == 18ULL );\n+\n+  std::bitset<40> b9(30000000000000ULL);\n+  VERIFY( b9.count() == 16ULL );\n+\n+  std::bitset<45> b10(30000000000000ULL);\n+  VERIFY( b10.count() == 20ULL );\n+\n+  std::bitset<64> b11(30000000000000ULL);\n+  VERIFY( b11.count() == 20ULL );\n+\n+  std::bitset<100> b12(30000000000000ULL);\n+  VERIFY( b12.count() == 20ULL );\n+\n+  std::bitset<200> b13(30000000000000ULL);\n+  VERIFY( b13.count() == 20ULL );\n+\n+  std::bitset<45> b14(18446744073709551615ULL);\n+  VERIFY( b14.count() == 45ULL );\n+\n+  std::bitset<64> b15(18446744073709551615ULL);\n+  VERIFY( b15.count() == 64ULL );\n+\n+  std::bitset<100> b16(18446744073709551615ULL);\n+  VERIFY( b16.count() == 64ULL );\n+\n+  std::bitset<200> b17(18446744073709551615ULL);\n+  VERIFY( b17.count() == 64ULL );  \n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}