{"sha": "5f1b2f8bfb566db880a546c5f8d8fc5777f9706f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYxYjJmOGJmYjU2NmRiODgwYTU0NmM1ZjhkOGZjNTc3N2Y5NzA2Zg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2013-11-18T09:28:17Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2013-11-18T09:28:17Z"}, "message": "aarch-cost-tables.h (cortexa53_extra_costs): New table.\n\n\n\t* config/arm/aarch-cost-tables.h (cortexa53_extra_costs): New table.\n\t* config/arm/arm.c (arm_cortex_a53_tune): New.\n\t* config/arm/arm-cores.def (cortex-a53): Use cortex_a53 tuning struct.\n\nFrom-SVN: r204941", "tree": {"sha": "6a179cc3a86ba1fbb8245b54f64bf59050134983", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a179cc3a86ba1fbb8245b54f64bf59050134983"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f1b2f8bfb566db880a546c5f8d8fc5777f9706f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f1b2f8bfb566db880a546c5f8d8fc5777f9706f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f1b2f8bfb566db880a546c5f8d8fc5777f9706f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f1b2f8bfb566db880a546c5f8d8fc5777f9706f/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "74bc175e84798c823fd446be84f1713fe27f3dd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74bc175e84798c823fd446be84f1713fe27f3dd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74bc175e84798c823fd446be84f1713fe27f3dd8"}], "stats": {"total": 125, "additions": 124, "deletions": 1}, "files": [{"sha": "095eaf96613400a2803647079d085e223af0b1a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f1b2f8bfb566db880a546c5f8d8fc5777f9706f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f1b2f8bfb566db880a546c5f8d8fc5777f9706f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f1b2f8bfb566db880a546c5f8d8fc5777f9706f", "patch": "@@ -1,3 +1,9 @@\n+2013-11-18  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/aarch-cost-tables.h (cortexa53_extra_costs): New table.\n+\t* config/arm/arm.c (arm_cortex_a53_tune): New.\n+\t* config/arm/arm-cores.def (cortex-a53): Use cortex_a53 tuning struct.\n+\n 2013-11-12 Ganesh Gopalasubramanian  <Ganesh.Gopalasubramanian@amd.com>\n \n \t* config.gcc (i[34567]86-*-linux* | ...): Add bdver4."}, {"sha": "d3e7dd2d7997fa275c07b6ae038c5c8f8159ed71", "filename": "gcc/config/arm/aarch-cost-tables.h", "status": "modified", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f1b2f8bfb566db880a546c5f8d8fc5777f9706f/gcc%2Fconfig%2Farm%2Faarch-cost-tables.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f1b2f8bfb566db880a546c5f8d8fc5777f9706f/gcc%2Fconfig%2Farm%2Faarch-cost-tables.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faarch-cost-tables.h?ref=5f1b2f8bfb566db880a546c5f8d8fc5777f9706f", "patch": "@@ -122,5 +122,106 @@ const struct cpu_cost_table generic_extra_costs =\n   }\n };\n \n+const struct cpu_cost_table cortexa53_extra_costs =\n+{\n+  /* ALU */\n+  {\n+    0,\t\t\t/* Arith.  */\n+    0,\t\t\t/* Logical.  */\n+    COSTS_N_INSNS (1),\t/* Shift.  */\n+    COSTS_N_INSNS (2),\t/* Shift_reg.  */\n+    COSTS_N_INSNS (1),\t/* Arith_shift.  */\n+    COSTS_N_INSNS (2),\t/* Arith_shift_reg.  */\n+    COSTS_N_INSNS (1),\t/* Log_shift.  */\n+    COSTS_N_INSNS (2),\t/* Log_shift_reg.  */\n+    0,\t\t\t/* Extend.  */\n+    COSTS_N_INSNS (1),\t/* Extend_arith.  */\n+    COSTS_N_INSNS (1),\t/* Bfi.  */\n+    COSTS_N_INSNS (1),\t/* Bfx.  */\n+    0,\t\t\t/* Clz.  */\n+    0,\t\t\t/* non_exec.  */\n+    true\t\t/* non_exec_costs_exec.  */\n+  },\n+  {\n+    /* MULT SImode */\n+    {\n+      COSTS_N_INSNS (1),\t/* Simple.  */\n+      COSTS_N_INSNS (2),\t/* Flag_setting.  */\n+      COSTS_N_INSNS (1),\t/* Extend.  */\n+      COSTS_N_INSNS (1),\t/* Add.  */\n+      COSTS_N_INSNS (1),\t/* Extend_add.  */\n+      COSTS_N_INSNS (7)\t\t/* Idiv.  */\n+    },\n+    /* MULT DImode */\n+    {\n+      COSTS_N_INSNS (2),\t/* Simple.  */\n+      0,\t\t\t/* Flag_setting (N/A).  */\n+      COSTS_N_INSNS (2),\t/* Extend.  */\n+      COSTS_N_INSNS (2),\t/* Add.  */\n+      COSTS_N_INSNS (2),\t/* Extend_add.  */\n+      COSTS_N_INSNS (15)\t/* Idiv.  */\n+    }\n+  },\n+  /* LD/ST */\n+  {\n+    COSTS_N_INSNS (1),\t\t/* Load.  */\n+    COSTS_N_INSNS (1),\t\t/* Load_sign_extend.  */\n+    COSTS_N_INSNS (1),\t\t/* Ldrd.  */\n+    COSTS_N_INSNS (1),\t\t/* Ldm_1st.  */\n+    1,\t\t\t\t/* Ldm_regs_per_insn_1st.  */\n+    2,\t\t\t\t/* Ldm_regs_per_insn_subsequent.  */\n+    COSTS_N_INSNS (1),\t\t/* Loadf.  */\n+    COSTS_N_INSNS (1),\t\t/* Loadd.  */\n+    COSTS_N_INSNS (1),\t\t/* Load_unaligned.  */\n+    0,\t\t\t\t/* Store.  */\n+    0,\t\t\t\t/* Strd.  */\n+    0,\t\t\t\t/* Stm_1st.  */\n+    1,\t\t\t\t/* Stm_regs_per_insn_1st.  */\n+    2,\t\t\t\t/* Stm_regs_per_insn_subsequent.  */\n+    0,\t\t\t\t/* Storef.  */\n+    0,\t\t\t\t/* Stored.  */\n+    COSTS_N_INSNS (1)\t\t/* Store_unaligned.  */\n+  },\n+  {\n+    /* FP SFmode */\n+    {\n+      COSTS_N_INSNS (15),\t/* Div.  */\n+      COSTS_N_INSNS (3),\t/* Mult.  */\n+      COSTS_N_INSNS (7),\t/* Mult_addsub. */\n+      COSTS_N_INSNS (7),\t/* Fma.  */\n+      COSTS_N_INSNS (3),\t/* Addsub.  */\n+      COSTS_N_INSNS (1),\t/* Fpconst. */\n+      COSTS_N_INSNS (2),\t/* Neg.  */\n+      COSTS_N_INSNS (1),\t/* Compare.  */\n+      COSTS_N_INSNS (3),\t/* Widen.  */\n+      COSTS_N_INSNS (3),\t/* Narrow.  */\n+      COSTS_N_INSNS (3),\t/* Toint.  */\n+      COSTS_N_INSNS (3),\t/* Fromint.  */\n+      COSTS_N_INSNS (3)\t\t/* Roundint.  */\n+    },\n+    /* FP DFmode */\n+    {\n+      COSTS_N_INSNS (30),\t/* Div.  */\n+      COSTS_N_INSNS (3),\t/* Mult.  */\n+      COSTS_N_INSNS (7),\t/* Mult_addsub.  */\n+      COSTS_N_INSNS (7),\t/* Fma.  */\n+      COSTS_N_INSNS (3),\t/* Addsub.  */\n+      COSTS_N_INSNS (1),\t/* Fpconst.  */\n+      COSTS_N_INSNS (2),\t/* Neg.  */\n+      COSTS_N_INSNS (1),\t/* Compare.  */\n+      COSTS_N_INSNS (3),\t/* Widen.  */\n+      COSTS_N_INSNS (3),\t/* Narrow.  */\n+      COSTS_N_INSNS (3),\t/* Toint.  */\n+      COSTS_N_INSNS (3),\t/* Fromint.  */\n+      COSTS_N_INSNS (3)\t\t/* Roundint.  */\n+    }\n+  },\n+  /* Vector */\n+  {\n+    COSTS_N_INSNS (1)\t/* Alu.  */\n+  }\n+};\n+\n+\n #endif /* GCC_AARCH_COST_TABLES_H */\n "}, {"sha": "119dc336fe1bf0a573d936f3fd09259dae76e357", "filename": "gcc/config/arm/arm-cores.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f1b2f8bfb566db880a546c5f8d8fc5777f9706f/gcc%2Fconfig%2Farm%2Farm-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f1b2f8bfb566db880a546c5f8d8fc5777f9706f/gcc%2Fconfig%2Farm%2Farm-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cores.def?ref=5f1b2f8bfb566db880a546c5f8d8fc5777f9706f", "patch": "@@ -129,7 +129,7 @@ ARM_CORE(\"cortex-a7\",\t  cortexa7,\t7A,\t\t\t\t FL_LDSCHED | FL_THUMB_DIV | FL_ARM_DIV\n ARM_CORE(\"cortex-a8\",\t  cortexa8,\t7A,\t\t\t\t FL_LDSCHED, cortex)\n ARM_CORE(\"cortex-a9\",\t  cortexa9,\t7A,\t\t\t\t FL_LDSCHED, cortex_a9)\n ARM_CORE(\"cortex-a15\",\t  cortexa15,\t7A,\t\t\t\t FL_LDSCHED | FL_THUMB_DIV | FL_ARM_DIV, cortex_a15)\n-ARM_CORE(\"cortex-a53\",\t  cortexa53,\t8A,\t\t\t\t FL_LDSCHED, cortex)\n+ARM_CORE(\"cortex-a53\",\t  cortexa53,\t8A,\t\t\t\t FL_LDSCHED, cortex_a53)\n ARM_CORE(\"cortex-r4\",\t  cortexr4,\t7R,\t\t\t\t FL_LDSCHED, cortex)\n ARM_CORE(\"cortex-r4f\",\t  cortexr4f,\t7R,\t\t\t\t FL_LDSCHED, cortex)\n ARM_CORE(\"cortex-r5\",\t  cortexr5,\t7R,\t\t\t\t FL_LDSCHED | FL_ARM_DIV, cortex)"}, {"sha": "948070d6274a1494fcb994b7b5f6332ae9408dfe", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f1b2f8bfb566db880a546c5f8d8fc5777f9706f/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f1b2f8bfb566db880a546c5f8d8fc5777f9706f/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=5f1b2f8bfb566db880a546c5f8d8fc5777f9706f", "patch": "@@ -1405,6 +1405,22 @@ const struct tune_params arm_cortex_a15_tune =\n   false                                         /* Prefer Neon for 64-bits bitops.  */\n };\n \n+const struct tune_params arm_cortex_a53_tune =\n+{\n+  arm_9e_rtx_costs,\n+  &cortexa53_extra_costs,\n+  NULL,\t\t\t\t\t\t/* Scheduler cost adjustment.  */\n+  1,\t\t\t\t\t\t/* Constant limit.  */\n+  5,\t\t\t\t\t\t/* Max cond insns.  */\n+  ARM_PREFETCH_NOT_BENEFICIAL,\n+  false,\t\t\t\t\t/* Prefer constant pool.  */\n+  arm_default_branch_cost,\n+  false,\t\t\t\t\t/* Prefer LDRD/STRD.  */\n+  {true, true},\t\t\t\t\t/* Prefer non short circuit.  */\n+  &arm_default_vec_cost,\t\t\t/* Vectorizer costs.  */\n+  false\t\t\t\t\t\t/* Prefer Neon for 64-bits bitops.  */\n+};\n+\n /* Branches can be dual-issued on Cortex-A5, so conditional execution is\n    less appealing.  Set max_insns_skipped to a low value.  */\n "}]}