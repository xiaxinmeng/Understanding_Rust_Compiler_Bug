{"sha": "98a3dad4119055bb5be8e66372b4fcf89235e660", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThhM2RhZDQxMTkwNTViYjViZThlNjYzNzJiNGZjZjg5MjM1ZTY2MA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2005-04-24T22:11:55Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2005-04-24T22:11:55Z"}, "message": "collect2.c (main): Unlock the stdio streams.\n\n\t* collect2.c (main): Unlock the stdio streams.\n\t* gcc.c (main): Likewise.\n\t* gcov-dump.c (main): Likewise.\n\t* gcov.c (main): Likewise.\n\t* gen-protos.c (main): Likewise.\n\t* gensupport.c (init_md_reader_args_cb): Likewise.\n\t* protoize.c (main): Likewise.\n\t* toplev.c (general_init): Likewise.\n\njava:\n\t* gjavah.c (main): Unlock the stdio streams.\n\t* jcf-dump.c (main): Likewise.\n\t* jv-scan.c (main): Likewise.\n\t* jvgenmain.c (main): Likewise.\n\nFrom-SVN: r98676", "tree": {"sha": "1640c77c957668249b6d37b75f4d8ce1eca24af2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1640c77c957668249b6d37b75f4d8ce1eca24af2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98a3dad4119055bb5be8e66372b4fcf89235e660", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98a3dad4119055bb5be8e66372b4fcf89235e660", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98a3dad4119055bb5be8e66372b4fcf89235e660", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98a3dad4119055bb5be8e66372b4fcf89235e660/comments", "author": null, "committer": null, "parents": [{"sha": "8634c649cb1ea6d85a53f1fab3bd28af869b934f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8634c649cb1ea6d85a53f1fab3bd28af869b934f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8634c649cb1ea6d85a53f1fab3bd28af869b934f"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "0c4c36faf96b8dd44abd11ac3bdd7d945f4d8e1c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98a3dad4119055bb5be8e66372b4fcf89235e660", "patch": "@@ -1,3 +1,14 @@\n+2005-04-24  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* collect2.c (main): Unlock the stdio streams.\n+\t* gcc.c (main): Likewise.\n+\t* gcov-dump.c (main): Likewise.\n+\t* gcov.c (main): Likewise.\n+\t* gen-protos.c (main): Likewise.\n+\t* gensupport.c (init_md_reader_args_cb): Likewise.\n+\t* protoize.c (main): Likewise.\n+\t* toplev.c (general_init): Likewise.\n+\n 2005-04-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/20991"}, {"sha": "9dfaf62c9eda27282691886a4bf9a7ef59aeb5b4", "filename": "gcc/collect2.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=98a3dad4119055bb5be8e66372b4fcf89235e660", "patch": "@@ -831,6 +831,11 @@ main (int argc, char **argv)\n   signal (SIGCHLD, SIG_DFL);\n #endif\n \n+  /* Unlock the stdio streams.  */\n+  unlock_stream (stdin);\n+  unlock_stream (stdout);\n+  unlock_stream (stderr);\n+\n   gcc_init_libintl ();\n \n   /* Do not invoke xcalloc before this point, since locale needs to be"}, {"sha": "d3a0ecff05db4263e82e7a2962b7d9e0f015ed9f", "filename": "gcc/gcc.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=98a3dad4119055bb5be8e66372b4fcf89235e660", "patch": "@@ -5995,6 +5995,11 @@ main (int argc, const char **argv)\n   GCC_DRIVER_HOST_INITIALIZATION;\n #endif\n \n+  /* Unlock the stdio streams.  */\n+  unlock_stream (stdin);\n+  unlock_stream (stdout);\n+  unlock_stream (stderr);\n+\n   gcc_init_libintl ();\n \n   if (signal (SIGINT, SIG_IGN) != SIG_IGN)"}, {"sha": "514004e771a832653baf8d0e0acdcf442b97c884", "filename": "gcc/gcov-dump.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fgcov-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fgcov-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-dump.c?ref=98a3dad4119055bb5be8e66372b4fcf89235e660", "patch": "@@ -77,6 +77,11 @@ main (int argc ATTRIBUTE_UNUSED, char **argv)\n {\n   int opt;\n \n+  /* Unlock the stdio streams.  */\n+  unlock_stream (stdin);\n+  unlock_stream (stdout);\n+  unlock_stream (stderr);\n+\n   while ((opt = getopt_long (argc, argv, \"hlpv\", options, NULL)) != -1)\n     {\n       switch (opt)"}, {"sha": "6b8f3370c39519725246c976453b23e4cefc19f0", "filename": "gcc/gcov.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=98a3dad4119055bb5be8e66372b4fcf89235e660", "patch": "@@ -347,6 +347,11 @@ main (int argc, char **argv)\n {\n   int argno;\n \n+  /* Unlock the stdio streams.  */\n+  unlock_stream (stdin);\n+  unlock_stream (stdout);\n+  unlock_stream (stderr);\n+\n   gcc_init_libintl ();\n \n   argno = process_args (argc, argv);"}, {"sha": "d60a2098d06245b2c765c18cc501ed5a5834d1c0", "filename": "gcc/gen-protos.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fgen-protos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fgen-protos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgen-protos.c?ref=98a3dad4119055bb5be8e66372b4fcf89235e660", "patch": "@@ -139,6 +139,11 @@ main (int argc ATTRIBUTE_UNUSED, char **argv)\n   while (i > 0 && argv[0][i-1] != '/') --i;\n   progname = &argv[0][i];\n \n+  /* Unlock the stdio streams.  */\n+  unlock_stream (stdin);\n+  unlock_stream (stdout);\n+  unlock_stream (stderr);\n+\n   INIT_SSTRING (&linebuf);\n \n   fprintf (outf, \"struct fn_decl std_protos[] = {\\n\");"}, {"sha": "8c65a3e7a14e1849a9a02e37df13621317bec323", "filename": "gcc/gensupport.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fgensupport.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fgensupport.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgensupport.c?ref=98a3dad4119055bb5be8e66372b4fcf89235e660", "patch": "@@ -906,6 +906,11 @@ init_md_reader_args_cb (int argc, char **argv, bool (*parse_opt)(const char *))\n   char *lastsl;\n   rtx desc;\n \n+  /* Unlock the stdio streams.  */\n+  unlock_stream (stdin);\n+  unlock_stream (stdout);\n+  unlock_stream (stderr);\n+\n   for (i = 1; i < argc; i++)\n     {\n       if (argv[i][0] != '-')"}, {"sha": "6a719d4c6aabd0aa13a2342134d07ef05b32f157", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=98a3dad4119055bb5be8e66372b4fcf89235e660", "patch": "@@ -1,3 +1,10 @@\n+2005-04-24  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gjavah.c (main): Unlock the stdio streams.\n+\t* jcf-dump.c (main): Likewise.\n+\t* jv-scan.c (main): Likewise.\n+\t* jvgenmain.c (main): Likewise.\n+\n 2005-04-23  DJ Delorie  <dj@redhat.com>\n \n \t* class.c, decl.c, expr.c, jcf-io.c, jcf-parse.c, jv-scan.c,"}, {"sha": "98d20355ed10b8900aa76ee562184fd1424c1c71", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=98a3dad4119055bb5be8e66372b4fcf89235e660", "patch": "@@ -2388,6 +2388,11 @@ main (int argc, char** argv)\n   int emit_dependencies = 0, suppress_output = 0;\n   int opt;\n \n+  /* Unlock the stdio streams.  */\n+  unlock_stream (stdin);\n+  unlock_stream (stdout);\n+  unlock_stream (stderr);\n+\n   gcc_init_libintl ();\n \n   if (argc <= 1)"}, {"sha": "cd6f709fbb03114d7e94e1fcceb1c8529661846c", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=98a3dad4119055bb5be8e66372b4fcf89235e660", "patch": "@@ -940,6 +940,11 @@ main (int argc, char** argv)\n   JCF jcf[1];\n   int argi, opt;\n \n+  /* Unlock the stdio streams.  */\n+  unlock_stream (stdin);\n+  unlock_stream (stdout);\n+  unlock_stream (stderr);\n+\n   gcc_init_libintl ();\n \n   if (argc <= 1)"}, {"sha": "a7522840589a11aff6f83304a2206cb8e4cae8b3", "filename": "gcc/java/jv-scan.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fjava%2Fjv-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fjava%2Fjv-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjv-scan.c?ref=98a3dad4119055bb5be8e66372b4fcf89235e660", "patch": "@@ -147,6 +147,11 @@ main (int argc, char **argv)\n   /* Default for output */\n   out = stdout;\n \n+  /* Unlock the stdio streams.  */\n+  unlock_stream (stdin);\n+  unlock_stream (stdout);\n+  unlock_stream (stderr);\n+\n   gcc_init_libintl ();\n \n   /* Process options first.  We use getopt_long and not"}, {"sha": "5c651b4164acc224dc450775c498506e306b4f02", "filename": "gcc/java/jvgenmain.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fjava%2Fjvgenmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fjava%2Fjvgenmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvgenmain.c?ref=98a3dad4119055bb5be8e66372b4fcf89235e660", "patch": "@@ -58,6 +58,11 @@ main (int argc, char **argv)\n   const char *mangled_classname;\n   int i, last_arg;\n \n+  /* Unlock the stdio streams.  */\n+  unlock_stream (stdin);\n+  unlock_stream (stdout);\n+  unlock_stream (stderr);\n+\n   gcc_init_libintl ();\n \n   if (argc < 2)"}, {"sha": "bb0420138fb17c13c638e479bee8641a2754eb4f", "filename": "gcc/protoize.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=98a3dad4119055bb5be8e66372b4fcf89235e660", "patch": "@@ -4391,6 +4391,11 @@ main (int argc, char **const argv)\n   signal (SIGCHLD, SIG_DFL);\n #endif\n \n+  /* Unlock the stdio streams.  */\n+  unlock_stream (stdin);\n+  unlock_stream (stdout);\n+  unlock_stream (stderr);\n+\n   gcc_init_libintl ();\n \n   cwd_buffer = getpwd ();"}, {"sha": "cea3bb470f33a0bae30f5da840f78226f848f1fa", "filename": "gcc/toplev.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98a3dad4119055bb5be8e66372b4fcf89235e660/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=98a3dad4119055bb5be8e66372b4fcf89235e660", "patch": "@@ -1618,6 +1618,11 @@ general_init (const char *argv0)\n \n   hex_init ();\n \n+  /* Unlock the stdio streams.  */\n+  unlock_stream (stdin);\n+  unlock_stream (stdout);\n+  unlock_stream (stderr);\n+\n   gcc_init_libintl ();\n \n   /* Initialize the diagnostics reporting machinery, so option parsing"}]}