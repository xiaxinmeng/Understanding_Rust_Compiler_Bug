{"sha": "0177de873717bfea42604efef6f45d1265c2e36c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE3N2RlODczNzE3YmZlYTQyNjA0ZWZlZjZmNDVkMTI2NWMyZTM2Yw==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@cygnus.com", "date": "1998-12-09T06:15:20Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "1998-12-09T06:15:20Z"}, "message": "except.h (struct handler_info): Add handler_number field\n\n\t* except.h (struct handler_info): Add handler_number field\n\t* except.c (gen_exception_label): EH labels no longer need to be\n\ton the permanent obstack.\n\t(get_new_handler): Set the label number field.\n\t(output_exception_table_entry): Regenerate handler label reference\n\tfrom the label number field.\n\t(init_eh): Remove a blank line\n\t* integrate.c (get_label_from_map): Labels no longer need to be\n\ton the permanent obstack.\n\nFrom-SVN: r24203", "tree": {"sha": "0a262ac524c0c187ae000525eec494381a63ee7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a262ac524c0c187ae000525eec494381a63ee7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0177de873717bfea42604efef6f45d1265c2e36c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0177de873717bfea42604efef6f45d1265c2e36c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0177de873717bfea42604efef6f45d1265c2e36c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0177de873717bfea42604efef6f45d1265c2e36c/comments", "author": null, "committer": null, "parents": [{"sha": "a91d8b9534d0e0a6a741971001ccc1128ec2d76a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a91d8b9534d0e0a6a741971001ccc1128ec2d76a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a91d8b9534d0e0a6a741971001ccc1128ec2d76a"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "332e22c6f7b42aff830908a2477ca8ebf32afd64", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0177de873717bfea42604efef6f45d1265c2e36c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0177de873717bfea42604efef6f45d1265c2e36c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0177de873717bfea42604efef6f45d1265c2e36c", "patch": "@@ -1,3 +1,15 @@\n+Wed Dec  9 09:12:40 EST 1998  Andrew MacLeod  <amacleod@cygnus.com>\n+\n+\t* except.h (struct handler_info): Add handler_number field.\n+\t* except.c (gen_exception_label): EH labels no longer need to be\n+\ton the permanent obstack.\n+\t(get_new_handler): Set the label number field.\n+\t(output_exception_table_entry): Regenerate handler label reference \n+\tfrom the label number field.\n+\t(init_eh): Remove a blank line.\n+\t* integrate.c (get_label_from_map): Labels no longer need to be\n+\ton the permanent obstack.\n+\n Tue Dec  8 22:04:33 1998  Jim Wilson  <wilson@cygnus.com>\n \n \t* i960/i960.h (CONST_COSTS, case CONST_INT): Accept power2_operand"}, {"sha": "c7cf3eddce12cbc49417f4cd78f6fcaabbdf1061", "filename": "gcc/except.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0177de873717bfea42604efef6f45d1265c2e36c/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0177de873717bfea42604efef6f45d1265c2e36c/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=0177de873717bfea42604efef6f45d1265c2e36c", "patch": "@@ -616,11 +616,7 @@ rtx\n gen_exception_label ()\n {\n   rtx lab;\n-\n-  push_obstacks_nochange ();\n-  end_temporary_allocation ();\n   lab = gen_label_rtx ();\n-  pop_obstacks ();\n   return lab;\n }\n \n@@ -924,6 +920,7 @@ get_new_handler (handler, typeinfo)\n   struct handler_info* ptr;\n   ptr = (struct handler_info *) malloc (sizeof (struct handler_info));\n   ptr->handler_label = handler;\n+  ptr->handler_number = CODE_LABEL_NUMBER (handler);\n   ptr->type_info = typeinfo;\n   ptr->next = NULL;\n \n@@ -2147,8 +2144,11 @@ output_exception_table_entry (file, n)\n       if (handler == NULL)\n         assemble_integer (GEN_INT (0), POINTER_SIZE / BITS_PER_UNIT, 1);\n       else\n-        assemble_integer (handler->handler_label, \n-                          POINTER_SIZE / BITS_PER_UNIT, 1);\n+        {\n+          ASM_GENERATE_INTERNAL_LABEL (buf, \"L\", handler->handler_number);\n+          sym = gen_rtx_SYMBOL_REF (Pmode, buf);\n+          assemble_integer (sym, POINTER_SIZE / BITS_PER_UNIT, 1);\n+        }\n \n       if (flag_new_exceptions)\n         {\n@@ -2394,7 +2394,6 @@ check_exception_handler_labels ()\n void\n init_eh ()\n {\n-  \n   first_rethrow_symbol = create_rethrow_ref (0);\n   final_rethrow = gen_exception_label ();\n   last_rethrow_symbol = create_rethrow_ref (CODE_LABEL_NUMBER (final_rethrow));"}, {"sha": "62796fefb3a54b13ea2263ca4969b5a268e826e1", "filename": "gcc/except.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0177de873717bfea42604efef6f45d1265c2e36c/gcc%2Fexcept.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0177de873717bfea42604efef6f45d1265c2e36c/gcc%2Fexcept.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.h?ref=0177de873717bfea42604efef6f45d1265c2e36c", "patch": "@@ -172,7 +172,8 @@ void set_exception_version_code                 PROTO((int));\n \n typedef struct handler_info \n {\n-  rtx  handler_label;\n+  rtx handler_label;\n+  int handler_number;\n   void *type_info;\n   struct handler_info *next;\n } handler_info;"}, {"sha": "4c1464cb644dc8de8021b08072086b743559af73", "filename": "gcc/integrate.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0177de873717bfea42604efef6f45d1265c2e36c/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0177de873717bfea42604efef6f45d1265c2e36c/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=0177de873717bfea42604efef6f45d1265c2e36c", "patch": "@@ -99,12 +99,7 @@ get_label_from_map (map, i)\n   rtx x = map->label_map[i];\n \n   if (x == NULL_RTX)\n-    {                     \n-      push_obstacks_nochange ();\n-      end_temporary_allocation ();\n-      x = map->label_map[i] = gen_label_rtx();\n-      pop_obstacks ();\n-    }\n+    x = map->label_map[i] = gen_label_rtx();\n \n   return x;\n }"}]}