{"sha": "32bd96ffafd17f35b2e654691aaa7b7d71bca5c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJiZDk2ZmZhZmQxN2YzNWIyZTY1NDY5MWFhYTdiN2Q3MWJjYTVjOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-06-19T22:38:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-06-19T22:38:51Z"}, "message": "svr4.h (ASM_GENERATE_INTERNAL_LABEL): Cast arg to unsigned.\n\n\t* svr4.h (ASM_GENERATE_INTERNAL_LABEL): Cast arg to unsigned.\n\t* dwarf2out.c (ASM_OUTPUT_DWARF_DATA1): Likewise.\n\tAdd parens to various macros.\n\nFrom-SVN: r20619", "tree": {"sha": "4c3c5d0ad1e286bab855f159cb29c249ba1ddc97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c3c5d0ad1e286bab855f159cb29c249ba1ddc97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32bd96ffafd17f35b2e654691aaa7b7d71bca5c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32bd96ffafd17f35b2e654691aaa7b7d71bca5c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32bd96ffafd17f35b2e654691aaa7b7d71bca5c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32bd96ffafd17f35b2e654691aaa7b7d71bca5c8/comments", "author": null, "committer": null, "parents": [{"sha": "24e75411051c3f388638d4cedf5b53ae36b5020e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24e75411051c3f388638d4cedf5b53ae36b5020e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24e75411051c3f388638d4cedf5b53ae36b5020e"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "681e182f0d15a14b705d96854e377e9d5a196a5d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bd96ffafd17f35b2e654691aaa7b7d71bca5c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bd96ffafd17f35b2e654691aaa7b7d71bca5c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=32bd96ffafd17f35b2e654691aaa7b7d71bca5c8", "patch": "@@ -1,3 +1,9 @@\n+Fri Jun 19 22:37:51 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* svr4.h (ASM_GENERATE_INTERNAL_LABEL): Cast arg to unsigned.\n+\t* dwarf2out.c (ASM_OUTPUT_DWARF_DATA1): Likewise.\n+\tAdd parens to various macros.\n+\n Fri Jun 19 23:22:42 1998  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>\n \n \t* c-typeck.c (pop_init_level): Warn about implicit zero initialization"}, {"sha": "47376974358bb36c6aed147eb87499fdfb54eaa3", "filename": "gcc/config/svr4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bd96ffafd17f35b2e654691aaa7b7d71bca5c8/gcc%2Fconfig%2Fsvr4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bd96ffafd17f35b2e654691aaa7b7d71bca5c8/gcc%2Fconfig%2Fsvr4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsvr4.h?ref=32bd96ffafd17f35b2e654691aaa7b7d71bca5c8", "patch": "@@ -414,7 +414,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef ASM_GENERATE_INTERNAL_LABEL\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM)\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n-  sprintf (LABEL, \"*.%s%d\", PREFIX, NUM);\t\t\t\t\\\n+  sprintf (LABEL, \"*.%s%d\", PREFIX, (unsigned) (NUM));\t\t\t\\\n } while (0)\n \n /* Output the label which precedes a jumptable.  Note that for all svr4"}, {"sha": "6610e91187196fab950c65b50bf904b9531ea422", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bd96ffafd17f35b2e654691aaa7b7d71bca5c8/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bd96ffafd17f35b2e654691aaa7b7d71bca5c8/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=32bd96ffafd17f35b2e654691aaa7b7d71bca5c8", "patch": "@@ -275,7 +275,7 @@ static void dwarf2out_stack_adjust\tPROTO((rtx));\n \n #ifndef ASM_OUTPUT_DWARF_DATA1\n #define ASM_OUTPUT_DWARF_DATA1(FILE,VALUE) \\\n-  fprintf ((FILE), \"\\t%s\\t0x%x\", ASM_BYTE_OP, VALUE)\n+  fprintf ((FILE), \"\\t%s\\t0x%x\", ASM_BYTE_OP, (unsigned) (VALUE))\n #endif\n \n #ifndef ASM_OUTPUT_DWARF_DELTA1\n@@ -363,38 +363,38 @@ static void dwarf2out_stack_adjust\tPROTO((rtx));\n \n #ifndef ASM_OUTPUT_DWARF_DATA2\n #define ASM_OUTPUT_DWARF_DATA2(FILE,VALUE) \\\n-  fprintf ((FILE), \"\\t%s\\t0x%x\", UNALIGNED_SHORT_ASM_OP, (unsigned) VALUE)\n+  fprintf ((FILE), \"\\t%s\\t0x%x\", UNALIGNED_SHORT_ASM_OP, (unsigned) (VALUE))\n #endif\n \n #ifndef ASM_OUTPUT_DWARF_DATA4\n #define ASM_OUTPUT_DWARF_DATA4(FILE,VALUE) \\\n-  fprintf ((FILE), \"\\t%s\\t0x%x\", UNALIGNED_INT_ASM_OP, (unsigned) VALUE)\n+  fprintf ((FILE), \"\\t%s\\t0x%x\", UNALIGNED_INT_ASM_OP, (unsigned) (VALUE))\n #endif\n \n #ifndef ASM_OUTPUT_DWARF_DATA\n #define ASM_OUTPUT_DWARF_DATA(FILE,VALUE) \\\n   fprintf ((FILE), \"\\t%s\\t0x%lx\", UNALIGNED_OFFSET_ASM_OP, \\\n-\t   (unsigned long) VALUE)\n+\t   (unsigned long) (VALUE))\n #endif\n \n #ifndef ASM_OUTPUT_DWARF_ADDR_DATA\n #define ASM_OUTPUT_DWARF_ADDR_DATA(FILE,VALUE) \\\n   fprintf ((FILE), \"\\t%s\\t0x%lx\", UNALIGNED_WORD_ASM_OP, \\\n-\t   (unsigned long) VALUE)\n+\t   (unsigned long) (VALUE))\n #endif\n \n #ifndef ASM_OUTPUT_DWARF_DATA8\n #define ASM_OUTPUT_DWARF_DATA8(FILE,HIGH_VALUE,LOW_VALUE)\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     if (WORDS_BIG_ENDIAN)\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n-\tfprintf ((FILE), \"\\t%s\\t0x%lx\\n\", UNALIGNED_INT_ASM_OP, HIGH_VALUE); \\\n-\tfprintf ((FILE), \"\\t%s\\t0x%lx\", UNALIGNED_INT_ASM_OP, LOW_VALUE);\\\n+\tfprintf ((FILE), \"\\t%s\\t0x%lx\\n\", UNALIGNED_INT_ASM_OP, (HIGH_VALUE));\\\n+\tfprintf ((FILE), \"\\t%s\\t0x%lx\", UNALIGNED_INT_ASM_OP, (LOW_VALUE));\\\n       }\t\t\t\t\t\t\t\t\t\\\n     else\t\t\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n-\tfprintf ((FILE), \"\\t%s\\t0x%lx\\n\", UNALIGNED_INT_ASM_OP, LOW_VALUE);\\\n-\tfprintf ((FILE), \"\\t%s\\t0x%lx\", UNALIGNED_INT_ASM_OP, HIGH_VALUE); \\\n+\tfprintf ((FILE), \"\\t%s\\t0x%lx\\n\", UNALIGNED_INT_ASM_OP, (LOW_VALUE)); \\\n+\tfprintf ((FILE), \"\\t%s\\t0x%lx\", UNALIGNED_INT_ASM_OP, (HIGH_VALUE)); \\\n       }\t\t\t\t\t\t\t\t\t\\\n   } while (0)\n #endif"}]}