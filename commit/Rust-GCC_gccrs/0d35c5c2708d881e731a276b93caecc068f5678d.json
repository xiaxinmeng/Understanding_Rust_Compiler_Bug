{"sha": "0d35c5c2708d881e731a276b93caecc068f5678d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQzNWM1YzI3MDhkODgxZTczMWEyNzZiOTNjYWVjYzA2OGY1Njc4ZA==", "commit": {"author": {"name": "Vidya Praveen", "email": "vidyapraveen@arm.com", "date": "2014-04-22T11:34:52Z"}, "committer": {"name": "Vidya Praveen", "email": "vp@gcc.gnu.org", "date": "2014-04-22T11:34:52Z"}, "message": "aarch64.md (float<GPI:mode><GPF:mode>2): Remove.\n\ngcc/ChangeLog:\n\n2014-04-22  Vidya Praveen  <vidyapraveen@arm.com>\n\n\t* aarch64.md (float<GPI:mode><GPF:mode>2): Remove.\n\t(floatuns<GPI:mode><GPF:mode>2): Remove.\n\t(<optab><fcvt_target><GPF:mode>2): New pattern for equal width float\n\tand floatuns conversions.\n\t(<optab><fcvt_iesize><GPF:mode>2): New pattern for inequal width float\n\tand floatuns conversions.\n\t* iterators.md (fcvt_target, FCVT_TARGET): Support SF and DF modes.\n\t(w1,w2): New mode attributes for inequal width conversions.\n\ngcc/testsuite/ChangeLog:\n\n2014-04-22  Vidya Praveen  <vidyapraveen@arm.com>\n\n\t* gcc.target/aarch64/vect_cvtf_1.c: New.\n\nFrom-SVN: r209620", "tree": {"sha": "884304e54e1b9489b97c7f4486f9df1fc1ab3ed8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/884304e54e1b9489b97c7f4486f9df1fc1ab3ed8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d35c5c2708d881e731a276b93caecc068f5678d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d35c5c2708d881e731a276b93caecc068f5678d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d35c5c2708d881e731a276b93caecc068f5678d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d35c5c2708d881e731a276b93caecc068f5678d/comments", "author": {"login": "vparm", "id": 63807973, "node_id": "MDQ6VXNlcjYzODA3OTcz", "avatar_url": "https://avatars.githubusercontent.com/u/63807973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vparm", "html_url": "https://github.com/vparm", "followers_url": "https://api.github.com/users/vparm/followers", "following_url": "https://api.github.com/users/vparm/following{/other_user}", "gists_url": "https://api.github.com/users/vparm/gists{/gist_id}", "starred_url": "https://api.github.com/users/vparm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vparm/subscriptions", "organizations_url": "https://api.github.com/users/vparm/orgs", "repos_url": "https://api.github.com/users/vparm/repos", "events_url": "https://api.github.com/users/vparm/events{/privacy}", "received_events_url": "https://api.github.com/users/vparm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16a3246f05465d048eaa3c70bfdb517325a517d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16a3246f05465d048eaa3c70bfdb517325a517d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16a3246f05465d048eaa3c70bfdb517325a517d6"}], "stats": {"total": 146, "additions": 134, "deletions": 12}, "files": [{"sha": "931f8a1eccbd23db82cb94a39cfbf47b021af6f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d35c5c2708d881e731a276b93caecc068f5678d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d35c5c2708d881e731a276b93caecc068f5678d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d35c5c2708d881e731a276b93caecc068f5678d", "patch": "@@ -1,3 +1,14 @@\n+2014-04-22  Vidya Praveen  <vidyapraveen@arm.com>\n+\n+\t* aarch64.md (float<GPI:mode><GPF:mode>2): Remove.\n+\t(floatuns<GPI:mode><GPF:mode>2): Remove.\n+\t(<optab><fcvt_target><GPF:mode>2): New pattern for equal width float\n+\tand floatuns conversions.\n+\t(<optab><fcvt_iesize><GPF:mode>2): New pattern for inequal width float\n+\tand floatuns conversions.\n+\t* iterators.md (fcvt_target, FCVT_TARGET): Support SF and DF modes.\n+\t(w1,w2): New mode attributes for inequal width conversions.\n+\n 2014-04-22  Renlin Li  <Renlin.Li@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_print_operand_address): Adjust"}, {"sha": "98a03e4dd352873a4a2e07dd8e86c4fc0d65e8bf", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d35c5c2708d881e731a276b93caecc068f5678d/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d35c5c2708d881e731a276b93caecc068f5678d/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=0d35c5c2708d881e731a276b93caecc068f5678d", "patch": "@@ -3299,20 +3299,24 @@\n   [(set_attr \"type\" \"f_cvtf2i\")]\n )\n \n-(define_insn \"float<GPI:mode><GPF:mode>2\"\n-  [(set (match_operand:GPF 0 \"register_operand\" \"=w\")\n-        (float:GPF (match_operand:GPI 1 \"register_operand\" \"r\")))]\n-  \"TARGET_FLOAT\"\n-  \"scvtf\\\\t%<GPF:s>0, %<GPI:w>1\"\n-  [(set_attr \"type\" \"f_cvti2f\")]\n+(define_insn \"<optab><fcvt_target><GPF:mode>2\"\n+  [(set (match_operand:GPF 0 \"register_operand\" \"=w,w\")\n+        (FLOATUORS:GPF (match_operand:<FCVT_TARGET> 1 \"register_operand\" \"w,r\")))]\n+  \"\"\n+  \"@\n+   <su_optab>cvtf\\t%<GPF:s>0, %<s>1\n+   <su_optab>cvtf\\t%<GPF:s>0, %<w1>1\"\n+  [(set_attr \"simd\" \"yes,no\")\n+   (set_attr \"fp\" \"no,yes\")\n+   (set_attr \"type\" \"neon_int_to_fp_<Vetype>,f_cvti2f\")]\n )\n \n-(define_insn \"floatuns<GPI:mode><GPF:mode>2\"\n+(define_insn \"<optab><fcvt_iesize><GPF:mode>2\"\n   [(set (match_operand:GPF 0 \"register_operand\" \"=w\")\n-        (unsigned_float:GPF (match_operand:GPI 1 \"register_operand\" \"r\")))]\n+        (FLOATUORS:GPF (match_operand:<FCVT_IESIZE> 1 \"register_operand\" \"r\")))]\n   \"TARGET_FLOAT\"\n-  \"ucvtf\\\\t%<GPF:s>0, %<GPI:w>1\"\n-  [(set_attr \"type\" \"f_cvt\")]\n+  \"<su_optab>cvtf\\t%<GPF:s>0, %<w2>1\"\n+  [(set_attr \"type\" \"f_cvti2f\")]\n )\n \n ;; -------------------------------------------------------------------"}, {"sha": "03b1889af4602eba1cc955bc693764006d1e5081", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d35c5c2708d881e731a276b93caecc068f5678d/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d35c5c2708d881e731a276b93caecc068f5678d/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=0d35c5c2708d881e731a276b93caecc068f5678d", "patch": "@@ -293,6 +293,10 @@\n ;; 32-bit version and \"%x0\" in the 64-bit version.\n (define_mode_attr w [(QI \"w\") (HI \"w\") (SI \"w\") (DI \"x\") (SF \"s\") (DF \"d\")])\n \n+;; For inequal width int to float conversion\n+(define_mode_attr w1 [(SF \"w\") (DF \"x\")])\n+(define_mode_attr w2 [(SF \"x\") (DF \"w\")])\n+\n ;; For constraints used in scalar immediate vector moves\n (define_mode_attr hq [(HI \"h\") (QI \"q\")])\n \n@@ -558,8 +562,12 @@\n (define_mode_attr atomic_sfx\n   [(QI \"b\") (HI \"h\") (SI \"\") (DI \"\")])\n \n-(define_mode_attr fcvt_target [(V2DF \"v2di\") (V4SF \"v4si\") (V2SF \"v2si\")])\n-(define_mode_attr FCVT_TARGET [(V2DF \"V2DI\") (V4SF \"V4SI\") (V2SF \"V2SI\")])\n+(define_mode_attr fcvt_target [(V2DF \"v2di\") (V4SF \"v4si\") (V2SF \"v2si\") (SF \"si\") (DF \"di\")])\n+(define_mode_attr FCVT_TARGET [(V2DF \"V2DI\") (V4SF \"V4SI\") (V2SF \"V2SI\") (SF \"SI\") (DF \"DI\")])\n+\n+;; for the inequal width integer to fp conversions\n+(define_mode_attr fcvt_iesize [(SF \"di\") (DF \"si\")])\n+(define_mode_attr FCVT_IESIZE [(SF \"DI\") (DF \"SI\")])\n \n (define_mode_attr VSWAP_WIDTH [(V8QI \"V16QI\") (V16QI \"V8QI\")\n \t\t\t\t(V4HI \"V8HI\") (V8HI  \"V4HI\")"}, {"sha": "6d5dd4f36730a3d28f2a692eda29a5c44537287e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d35c5c2708d881e731a276b93caecc068f5678d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d35c5c2708d881e731a276b93caecc068f5678d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0d35c5c2708d881e731a276b93caecc068f5678d", "patch": "@@ -1,3 +1,7 @@\n+2014-04-22  Vidya Praveen  <vidyapraveen@arm.com>\n+\n+\t* gcc.target/aarch64/vect_cvtf_1.c: New.\n+\n 2014-04-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/60823"}, {"sha": "80ab9a5bb34416eebe1db49d99c6e00ce058224e", "filename": "gcc/testsuite/gcc.target/aarch64/cvtf_1.c", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d35c5c2708d881e731a276b93caecc068f5678d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcvtf_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d35c5c2708d881e731a276b93caecc068f5678d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcvtf_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcvtf_1.c?ref=0d35c5c2708d881e731a276b93caecc068f5678d", "patch": "@@ -0,0 +1,95 @@\n+/* { dg-do run } */\n+/* { dg-options \"-save-temps -fno-inline -O1\" } */\n+\n+#define FCVTDEF(ftype,itype) \\\n+void \\\n+cvt_##itype##_to_##ftype (itype a, ftype b)\\\n+{\\\n+  ftype c;\\\n+  c = (ftype) a;\\\n+  if ( (c - b) > 0.00001) abort();\\\n+}\n+\n+#define force_simd_for_float(v) asm volatile (\"mov %s0, %1.s[0]\" :\"=w\" (v) :\"w\" (v) :)\n+#define force_simd_for_double(v) asm volatile (\"mov %d0, %1.d[0]\" :\"=w\" (v) :\"w\" (v) :)\n+\n+#define FCVTDEF_SISD(ftype,itype) \\\n+void \\\n+cvt_##itype##_to_##ftype##_sisd (itype a, ftype b)\\\n+{\\\n+  ftype c;\\\n+  force_simd_for_##ftype(a);\\\n+  c = (ftype) a;\\\n+  if ( (c - b) > 0.00001) abort();\\\n+}\n+\n+#define FCVT(ftype,itype,ival,fval) cvt_##itype##_to_##ftype (ival, fval);\n+#define FCVT_SISD(ftype,itype,ival,fval) cvt_##itype##_to_##ftype##_sisd (ival, fval);\n+\n+typedef int int32_t;\n+typedef unsigned int uint32_t;\n+typedef long long int int64_t;\n+typedef unsigned long long int uint64_t;\n+\n+extern void abort();\n+\n+FCVTDEF (float, int32_t)\n+/* { dg-final { scan-assembler \"scvtf\\ts\\[0-9\\]+,\\ w\\[0-9\\]+\" } } */\n+FCVTDEF (float, uint32_t)\n+/* { dg-final { scan-assembler \"ucvtf\\ts\\[0-9\\]+,\\ w\\[0-9\\]+\" } } */\n+FCVTDEF (double, int32_t)\n+/* \"scvtf\\td\\[0-9\\]+,\\ w\\[0-9\\]+\" */\n+FCVTDEF (double, uint32_t)\n+/* \"ucvtf\\td\\[0-9\\]+,\\ w\\[0-9\\]+\" */\n+FCVTDEF (float, int64_t)\n+/* \"scvtf\\ts\\[0-9\\]+,\\ x\\[0-9\\]+\" */\n+FCVTDEF (float, uint64_t)\n+/* \"ucvtf\\ts\\[0-9\\]+,\\ x\\[0-9\\]+\" */\n+FCVTDEF (double, int64_t)\n+/* { dg-final { scan-assembler \"scvtf\\td\\[0-9\\]+,\\ x\\[0-9\\]+\" } } */\n+FCVTDEF (double, uint64_t)\n+/* { dg-final { scan-assembler \"ucvtf\\td\\[0-9\\]+,\\ x\\[0-9\\]+\" } } */\n+FCVTDEF_SISD (float, int32_t)\n+/* { dg-final { scan-assembler \"scvtf\\ts\\[0-9\\]+,\\ s\\[0-9\\]+\" } } */\n+FCVTDEF_SISD (double, int64_t)\n+/* { dg-final { scan-assembler \"scvtf\\td\\[0-9\\]+,\\ d\\[0-9\\]+\" } } */\n+FCVTDEF_SISD (float, uint32_t)\n+/* { dg-final { scan-assembler \"ucvtf\\ts\\[0-9\\]+,\\ s\\[0-9\\]+\" } } */\n+FCVTDEF_SISD (double, uint64_t)\n+/* { dg-final { scan-assembler \"ucvtf\\td\\[0-9\\]+,\\ d\\[0-9\\]+\" } } */\n+FCVTDEF_SISD (float, int64_t)\n+/* { dg-final { scan-assembler-times \"scvtf\\ts\\[0-9\\]+,\\ x\\[0-9\\]+\" 2 } } */\n+FCVTDEF_SISD (float, uint64_t)\n+/* { dg-final { scan-assembler-times \"ucvtf\\ts\\[0-9\\]+,\\ x\\[0-9\\]+\" 2 } } */\n+FCVTDEF_SISD (double, int32_t)\n+/* { dg-final { scan-assembler-times \"scvtf\\td\\[0-9\\]+,\\ w\\[0-9\\]+\" 2 } } */\n+FCVTDEF_SISD (double, uint32_t)\n+/* { dg-final { scan-assembler-times \"ucvtf\\td\\[0-9\\]+,\\ w\\[0-9\\]+\" 2 } } */\n+\n+int32_t ival = -1234;\n+int64_t llival = -13031303L;\n+uint32_t uival = 1234;\n+uint64_t ullival = 13031303L;\n+\n+int main ()\n+{\n+  float x;\n+  double y;\n+\n+  FCVT (float, int32_t, ival, -1234.0);\n+  FCVT (float, uint32_t, uival, 1234.0);\n+  FCVT (float, int64_t, llival, -13031303.0);\n+  FCVT (float, uint64_t, ullival, 13031303.0);\n+  FCVT (double, int32_t, ival, -1234.0);\n+  FCVT (double, uint32_t, uival, 1234.0);\n+  FCVT (double, int64_t, llival, -13031303.0);\n+  FCVT (double, uint64_t, ullival, 13031303.0);\n+  FCVT_SISD (float, int32_t, ival, -1234.0);\n+  FCVT_SISD (double, int64_t, llival, -13031303.0);\n+  FCVT_SISD (float, uint32_t, uival, 1234.0);\n+  FCVT_SISD (double, uint64_t, ullival, 13031303.0);\n+\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-saved-temps } } */"}]}