{"sha": "7d300a99e34ca15b333e18a1dbc8836c9a72241b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QzMDBhOTllMzRjYTE1YjMzM2UxOGExZGJjODgzNmM5YTcyMjQxYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-07-04T13:59:49Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-07-04T13:59:49Z"}, "message": "resync\n\nFrom-SVN: r101599", "tree": {"sha": "134f893878a12d8819d097f45581026f38885a7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/134f893878a12d8819d097f45581026f38885a7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d300a99e34ca15b333e18a1dbc8836c9a72241b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d300a99e34ca15b333e18a1dbc8836c9a72241b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d300a99e34ca15b333e18a1dbc8836c9a72241b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d300a99e34ca15b333e18a1dbc8836c9a72241b/comments", "author": null, "committer": null, "parents": [{"sha": "4edb2be07d34b23142292f14941501bda0614951", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4edb2be07d34b23142292f14941501bda0614951", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4edb2be07d34b23142292f14941501bda0614951"}], "stats": {"total": 303, "additions": 303, "deletions": 0}, "files": [{"sha": "46fe1a125ab5ed6e7874ed7abf8e5081837671a4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 303, "deletions": 0, "changes": 303, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d300a99e34ca15b333e18a1dbc8836c9a72241b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d300a99e34ca15b333e18a1dbc8836c9a72241b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7d300a99e34ca15b333e18a1dbc8836c9a72241b", "patch": "@@ -1,3 +1,306 @@\n+2005-07-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-expect-vms.adb, g-expect.ads, g-expect.adb\n+\t(Get_Command_Output): New subprogram to launch a process and get its\n+\tstandard output as a string.\n+\n+2005-07-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* s-mastop-tru64.adb (Pop_Frame): Use exc_lookup_function_entry to\n+\tfetch a code-range descriptor associated with the machine state. On\n+\tfailure set the machine state's PC to 0; on success, pass the\n+\tdescriptor to exc_virtual_unwind.\n+\n+\t* init.c (Tru64 section): New function __gnat_set_code_loc.\n+\n+2005-07-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* mlib-tgt-tru64.adb, mlib-tgt-aix.adb, mlib-tgt-irix.adb, \n+\tmlib-tgt-hpux.adb, mlib-tgt-linux.adb, mlib-tgt-solaris.adb, \n+\tmlib-tgt-mingw.adb, mlib-tgt-darwin.adb (Build_Dynamic_Library):\n+\tRemove all auto-initialization code, as this is now done through the\n+\tconstructor mechanism.\n+\n+\t* adaint.h, adaint.c (__gnat_binder_supports_auto_init,\n+\t__gnat_sals_init_using_constructors): New functions.\n+\n+\t* bindgen.adb (Gen_Output_File_Ada): Generate pragmas\n+\tLinker_Constructor and Linker_Destructor when switch -a is used.\n+\n+\t* bindusg.adb: Add line for new switch -a\n+\n+\t* gnatbind.adb (Gnatbind_Supports_Auto_Init): New Boolean function\n+\t(Gnatbind): When switch -a is used, check if it is allowed\n+\n+\t* switch-b.adb (Scan_Binder_Switches): Process new switch -a\n+\n+2005-07-04  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* a-tags.adb (Type_Specific_Data): Define Tags_Table as a small array.\n+\tThis prevents us from hitting a limitation during the debug info\n+\tgeneration when using stabs.\n+\t(Prims_Ptr): Likewise.\n+\n+2005-07-04  Gary Dismukes  <dismukes@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\t    Javier Miranda  <miranda@adacore.com>\n+\n+\t* checks.adb (Null_Exclusion_Static_Checks): In the case of\n+\tN_Object_Declaration, only perform the checks if the Object_Definition\n+\tis not an Access_Definition.\n+\n+        * sem_ch3.adb (Access_Subprogram_Declaration): Add test for the case\n+        where the parent of an the access definition is an N_Object_Declaration\n+        when determining the Associated_Node_For_Itype and scope of an\n+        anonymous access-to-subprogram type.\n+\n+\t* exp_ch6.adb (Expand_N_Subprogram_Declaration): Set the\n+\tCorresponding_Spec on the body created for a null procedure. Add ???\n+\tcomment. Remove New_Copy_Tree call on body argument to\n+\tSet_Body_To_Inline.\n+\n+\t* exp_ch6.adb (Add_Simple_Call_By_Copy_Code): For an out parameter with\n+\tdiscriminants, use the type of the actual as well, because the\n+\tdiscriminants may be read by the called subprogram.\n+\n+\t* sem_ch3.adb (Access_Type_Declaration): If the designated type is an\n+\taccess type we do not need to handle non-limited views.\n+\t(Build_Derived_Record_Type): Additional check to check that in case of\n+\tprivate types, interfaces are only allowed in private extensions.\n+\n+2005-07-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* decl.c (prepend_attributes) <Pragma_Linker_Constructor>: New case.\n+\t<Pragma_Linker_Destructor>: Likewise.\n+\n+\t* einfo.ads (Has_Gigi_Rep_Item): Document Pragma_Linker_Constructor and\n+\tPragma_Linker_Destructor.\n+\n+\t* gigi.h (attr_type): Add ATTR_LINK_CONSTRUCTOR and\n+\tATTR_LINK_DESTRUCTOR.\n+\t(static_ctors, static_dtors): New variables.\n+\n+\t* misc.c (gnat_expand_body): Output current function as constructor\n+\tand destructor if requested.\n+\n+\t* par-prag.adb: Add processing for pragma Linker_Constructor and\n+\tLinker_Destructor.\n+\n+\t* sem_prag.adb (Find_Unique_Parameterless_Procedure): New function\n+\textracted from Check_Interrupt_Or_Attach_Handler.\n+\t(Check_Interrupt_Or_Attach_Handler): Invoke it.\n+\tImplement pragma Linker_Constructor and Linker_Destructor with the\n+\thelp of Find_Unique_Parameterless_Procedure.\n+\tReplace Name_Alias with Name_Target for pragma Linker_Alias.\n+\n+\t* snames.h, snames.ads, snames.adb: \n+\tAdd Name_Linker_Constructor and Name_Linker_Destructor.\n+\tAdd Pragma_Linker_Constructor and Pragma_Linker_Destructor.\n+\t* snames.adb: Remove Name_Alias.\n+\n+\t* trans.c: Include cgraph.h.\n+\t(build_global_cdtor): New function.\n+\t(Compilation_Unit_to_gnu): Build global constructor and destructor if\n+\tneeded.\n+\t(tree_transform) <N_Identifier>: Substitute renaming of view-conversions\n+\tof objects too.\n+\t(addressable_p) <COMPONENT_REF>: Unconditionally test\n+\tDECL_NONADDRESSABLE_P on STRICT_ALIGNMENT platforms.\n+\n+\t* utils.c (process_attributes) <ATTR_LINK_ALIAS>: Do not assemble the\n+\tvariable if it is external.\n+\n+\t(static_ctors, static_dtors): New global variables.\n+\t(process_attributes) <ATTR_LINK_CONSTRUCTOR>: New case.\n+\t<ATTR_LINK_DESTRUCTOR>: Likewise.\n+\t(end_subprog_body): Chain function as constructor and destructor\n+\tif requested.\n+\n+\t* exp_util.adb (Force_Evaluation): Unconditionally invoke\n+\tRemove_Side_Effects with Variable_Ref set to true.\n+\t(Remove_Side_Effects): Handle scalar types first. Use a renaming\n+\tfor non-scalar types even if Variable_Ref is true and for class-wide\n+\texpressions.\n+\n+2005-07-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_attr.adb (Mod): Evaluate condition expression with checks off,\n+\tto prevent spurious warnings.\n+\n+2005-07-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_dist.adb (Build_TypeCode_Call): Remove incorrect processing for\n+\tItypes. Itypes are really unexpected there.\n+\t(Build_TypeCode_Function): Generalise special processing for Itypes to\n+\thandle the case of numeric implicit base types as well as enumerated\n+\tones.\n+\n+2005-07-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_intr.adb (Expand_Unc_Deallocation): If the designated type is\n+\tcontrolled, indicate the expected type of the dereference that is\n+\tcreated for the call to Deep_Finalize, to prevent spurious errors when\n+\tthe designated type is private and completed with a derivation from\n+\tanother private type.\n+\n+2005-07-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Change_To_Object_Directory): When unable to change the\n+\tcurrent dir to the object directory, output the full path of the\n+\tdirectory.\n+\n+2005-07-04  Matthew Gingell  <gingell@adacore.com>\n+\n+\t* Makefile.in: Replace indepsw-linux.adb by indepsw-gnu.adb\n+\n+\t* indepsw-linux.adb: Replace by...\n+\n+\t* indepsw-gnu.adb: ...this new file\n+\n+2005-07-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* mlib-prj.adb (Auto_Initialize): New constant String\n+\t(SALs_Use_Constructors): New Boolean function\n+\t(Build_Library): Call gnatbind with Auto_Initialize switch when\n+\tSALs_Use_Constructors returns True.\n+\n+\t* mlib-tgt.ads: Minor reformatting\n+\n+\t* mlib-utl.ads: Minor reformatting\n+\n+\t* opt.ads: (Use_Pragma_Linker_Constructor): New Boolean flag\n+\n+2005-07-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* par-ch9.adb (P_Task, P_Protected): Indicate that single task and\n+\tsingle protected declarations can have an interface list.\n+\t(P_Entry_Declaration): Add handler for Error_Resync, which can be raised\n+\twith seriously malformed entry declarations, and lead to compilation\n+\tabandoned messages.\n+\n+2005-07-04  Javier Miranda  <miranda@adacore.com>\n+\n+\t* par-load.adb: Load the context items in two rounds.\n+\n+2005-07-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* scng.adb: Do not consider Mod used as an attribute to be a keyword\n+\n+2005-07-04  Ed Schonberg  <schonberg@adacore.com>\n+\t    Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch10.adb (Build_Limited_Views): A type declared with a private\n+\ttype extension needs a limited view.\n+\tRemove previous restriction on private types available through the\n+\tlimited-view (only tagged private types were previously allowed).\n+\t(Install_Withed_Unit): In the code that implements the\n+\tlegality rule given in AI-377, exclude a child unit with the name\n+\tStandard, because it is a homonym of the Standard environment package.\n+\n+2005-07-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch4.adb (Transform_Object_Operation): For an actual that is an\n+\toverloaded function call, carry interpretations from the original tree\n+\tto the copy.\n+\n+2005-07-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Conforming_Types): If the types are anonymous access\n+\ttypes check whether some designated type is a limited view, and use\n+\tthe non-limited view if available.\n+\n+2005-07-04  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_eval.adb (Subtypes_Statically_Match): Use the discriminant\n+\tconstraint of full view of a private view T1 if present, when T2 is a\n+\tdiscriminated full view.\n+\n+2005-07-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Actuals): Do not resolve the expression of an\n+\tactual that is a view conversion of a bit packed array reference.\n+\n+2005-07-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_type.adb (Covers): Verify that Corresponding_Record_Type is\n+\tpresent before checking whether an interface type covers a synchronized\n+\ttype.\n+\n+2005-07-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.adb (Is_Object_Reference): An indexed or selected component\n+\twhose prefix is an implicit dereference is an object reference. Removes\n+\tspurious errors when compiling with -gnatc.\n+\n+2005-07-04  Robert Dewar  <dewar@adacore.com>\n+\n+\tPR ada/22039\n+\n+\t* s-sopco3.ads, s-sopco4.ads, s-sopco5.ads: Minor documentation fix\n+\n+2005-07-04  Matthew Gingell  <gingell@adacore.com>\n+\n+\t* tracebak.c: Enable tracebacks on ia64 platforms\n+\n+2005-07-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* vms_conv.adb (Initialize): Allow multiple ALI files to be given to\n+\tthe GNAT BIND command, as gnatbind accepts multiples ALI files with\n+\tthe -L or -n switches.\n+\n+2005-07-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* makegpr.adb (Build_Global_Archive): Make sure the list of sources is\n+\tcorrectly computed and the main project data is not modified while\n+\tdoing so.\n+\t(Add_C_Plus_Plus_Link_For_Gnatmake): Always link with the C++ compiler\n+\t(Choose_C_Plus_Plus_Link_Process): Do not generate shell script\n+\tc++linker as this does not work on some platforms.\n+\n+2005-07-04  Matthew Heaney  <heaney@adacore.com>\n+\n+\t* a-convec.ads, a-coinve.ads: Declaration of subtype Extended_Index\n+\twas changed.\n+\t* a-coinve.adb: Perform constraint checks explicitly.\n+\n+2005-07-04  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\t    Thomas Quinot  <quinot@adacore.com>\n+\n+\t* Make-lang.in: (ada/targtyps.o): Add missing TREE_H dependency.\n+\tnew target gen-soccon.\n+\n+2005-07-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-mastop-irix.adb, s-mastop-vms.adb: Minor reformatting\n+\n+2005-07-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-socket.ads (Check_Selector): Minor rewording of comment.\n+\n+2005-07-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* vms_data.ads: Add VMS qualifiers for new gnatpp switch --eol=\n+\n+2005-07-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* gen-soccon.c: Add constants SO_SNDTIMEO and SO_RCVTIMEO.\n+\n+2005-07-04  Sergey Rybin  <rybin@adacore.com>\n+\n+        * gnat_ugn.texi: Add description of --eol gnatpp option\n+\n+2005-07-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\t    Thomas Quinot  <quinot@adacore.com>\n+\n+        * gnat_rm.texi: Add a note that pragma Unreferenced is not appropriate\n+\tif the user wants all calls of a subprogram to be flagged,\n+\tindependently of whether they are made from within the same unit or\n+\tanother unit.\n+        Mention restriction for pragma Linker_Alias on some platforms.\n+        Document pragma Linker_Constructor and Linker_Destructor.\n+        Rewrite documentation of Weak_External, Linker_Section and\n+        Linker_Alias pragmas.\n+\n 2005-07-04  Arnaud Charlet  <charlet@adacore.com>\n \n \t* s-stausa.ads, s-stausa.adb: New files."}]}