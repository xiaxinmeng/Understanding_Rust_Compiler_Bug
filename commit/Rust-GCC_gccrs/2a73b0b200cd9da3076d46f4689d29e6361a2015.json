{"sha": "2a73b0b200cd9da3076d46f4689d29e6361a2015", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE3M2IwYjIwMGNkOWRhMzA3NmQ0NmY0Njg5ZDI5ZTYzNjFhMjAxNQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-05T21:16:10Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-05T21:16:10Z"}, "message": "(encode_type_qualifiers): Add casts to enums in indices.\n\nFrom-SVN: r4844", "tree": {"sha": "1a40111c5b7574777b99bd2c818b79279d3b6641", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a40111c5b7574777b99bd2c818b79279d3b6641"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a73b0b200cd9da3076d46f4689d29e6361a2015", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a73b0b200cd9da3076d46f4689d29e6361a2015", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a73b0b200cd9da3076d46f4689d29e6361a2015", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a73b0b200cd9da3076d46f4689d29e6361a2015/comments", "author": null, "committer": null, "parents": [{"sha": "b583eed8656cc4762bf15a3c9fe470b53802a39b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b583eed8656cc4762bf15a3c9fe470b53802a39b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b583eed8656cc4762bf15a3c9fe470b53802a39b"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "45d31c0ce145ff95b68fe43e9d426133f0a2c089", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a73b0b200cd9da3076d46f4689d29e6361a2015/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a73b0b200cd9da3076d46f4689d29e6361a2015/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=2a73b0b200cd9da3076d46f4689d29e6361a2015", "patch": "@@ -5794,17 +5794,17 @@ encode_type_qualifiers (declspecs)\n \n   for (spec = declspecs; spec; spec = TREE_CHAIN (spec))\n     {\n-      if (ridpointers[RID_CONST] == TREE_VALUE (spec))\n+      if (ridpointers[(int) RID_CONST] == TREE_VALUE (spec))\n \tobstack_1grow (&util_obstack, 'r');\n-      else if (ridpointers[RID_IN] == TREE_VALUE (spec))\n+      else if (ridpointers[(int) RID_IN] == TREE_VALUE (spec))\n \tobstack_1grow (&util_obstack, 'n');\n-      else if (ridpointers[RID_INOUT] == TREE_VALUE (spec))\n+      else if (ridpointers[(int) RID_INOUT] == TREE_VALUE (spec))\n \tobstack_1grow (&util_obstack, 'N');\n-      else if (ridpointers[RID_OUT] == TREE_VALUE (spec))\n+      else if (ridpointers[(int) RID_OUT] == TREE_VALUE (spec))\n \tobstack_1grow (&util_obstack, 'o');\n-      else if (ridpointers[RID_BYCOPY] == TREE_VALUE (spec))\n+      else if (ridpointers[(int) RID_BYCOPY] == TREE_VALUE (spec))\n \tobstack_1grow (&util_obstack, 'O');\n-      else if (ridpointers[RID_ONEWAY] == TREE_VALUE (spec))\n+      else if (ridpointers[(int) RID_ONEWAY] == TREE_VALUE (spec))\n \tobstack_1grow (&util_obstack, 'V');\n     }\n }"}]}