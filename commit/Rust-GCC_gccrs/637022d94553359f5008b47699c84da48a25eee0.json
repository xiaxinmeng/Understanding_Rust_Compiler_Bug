{"sha": "637022d94553359f5008b47699c84da48a25eee0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM3MDIyZDk0NTUzMzU5ZjUwMDhiNDc2OTljODRkYTQ4YTI1ZWVlMA==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2004-11-06T00:32:18Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2004-11-06T00:32:18Z"}, "message": "struct-layout-1_generate.c (main): Generate a call to fflush(stdout) before abort.\n\n2004-11-05  Danny Smith  <dannysmith@users.sourceforge.net>\n\n\t* gcc.dg/compat/struct-layout-1_generate.c (main): Generate a\n\tcall to fflush(stdout) before abort.\n\t(my_ffsll): New function.\n\t(generate_fields): Use it.\n\nFrom-SVN: r90155", "tree": {"sha": "cea11bd772c8a58d601b69f28609c8bfd05b8409", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cea11bd772c8a58d601b69f28609c8bfd05b8409"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/637022d94553359f5008b47699c84da48a25eee0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/637022d94553359f5008b47699c84da48a25eee0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/637022d94553359f5008b47699c84da48a25eee0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/637022d94553359f5008b47699c84da48a25eee0/comments", "author": null, "committer": null, "parents": [{"sha": "bc54e9de0cb96964dc0be8da3ec929e4e615d0c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc54e9de0cb96964dc0be8da3ec929e4e615d0c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc54e9de0cb96964dc0be8da3ec929e4e615d0c1"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "826c3c0bdddc856a199bfef4c825b6c31eec265b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637022d94553359f5008b47699c84da48a25eee0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637022d94553359f5008b47699c84da48a25eee0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=637022d94553359f5008b47699c84da48a25eee0", "patch": "@@ -1,3 +1,10 @@\n+2004-11-05  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\t* gcc.dg/compat/struct-layout-1_generate.c (main): Generate a\n+\tcall to fflush(stdout) before abort.\n+\t(my_ffsll): New function.\n+\t(generate_fields): Use it.\n+\n 2004-11-05  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/init-undef-1.c: New test."}, {"sha": "dab24966db66d2711835a700d6148fefbe362621", "filename": "gcc/testsuite/gcc.dg/compat/struct-layout-1_generate.c", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637022d94553359f5008b47699c84da48a25eee0/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-layout-1_generate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637022d94553359f5008b47699c84da48a25eee0/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-layout-1_generate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-layout-1_generate.c?ref=637022d94553359f5008b47699c84da48a25eee0", "patch": "@@ -563,7 +563,10 @@ int main (void)\\n\\\n #include \\\"t%03d_test.h\\\"\\n\\\n #undef TX\\n\\\n   if (fails)\\n\\\n-    abort ();\\n\\\n+    {\\n\\\n+      fflush (stdout);\\n\\\n+      abort ();\\n\\\n+    }\\n\\\n   exit (0);\\n\\\n }\\n\", srcdir, srcdir, filecnt, filecnt);\n   fclose (outfile);\n@@ -1198,6 +1201,20 @@ choose_type (enum FEATURE features, struct entry *e, int r)\n     abort ();\n }\n \n+/* This is from gcc.c-torture/execute/builtin-bitops-1.c.  */\n+static int\n+my_ffsll (unsigned long long x)\n+{\n+  int i;\n+  if (x == 0)\n+    return 0;\n+  /* We've tested LLONG_MAX for 64 bits so this should be safe.  */\n+  for (i = 0; i < 64; i++)\n+    if (x & (1ULL << i))\n+      break;\n+  return i + 1;\n+}\n+\n void\n generate_fields (enum FEATURE features, struct entry *e, struct entry *parent,\n \t\t int len)\n@@ -1310,9 +1327,9 @@ generate_fields (enum FEATURE features, struct entry *e, struct entry *parent,\n \t        case 'B': ma = 1; break;\n \t        case ' ':\n \t\t  if (e[j].type->type == TYPE_UENUM)\n-\t\t    mi = ffsll (e[j].type->maxval + 1) - 1;\n+\t\t    mi = my_ffsll (e[j].type->maxval + 1) - 1;\n \t\t  else if (e[j].type->type == TYPE_SENUM)\n-\t\t    mi = ffsll (e[j].type->maxval + 1);\n+\t\t    mi = my_ffsll (e[j].type->maxval + 1);\n \t\t  else\n \t\t    abort ();\n \t\t  if (!mi)"}]}