{"sha": "9517e33332fedbeb98a80a96b4ee434c4bca1023", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUxN2UzMzMzMmZlZGJlYjk4YTgwYTk2YjRlZTQzNGM0YmNhMTAyMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-02-22T19:12:09Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-02-22T19:12:09Z"}, "message": "re PR target/52330 (pr50305.c: valgrind problem on invalid asm)\n\n\tPR target/52330\n\t* config/i386/i386.c (ix86_print_operand) <case 'H'>: Error out if x\n\tis not offsettable memory reference.\n\ntestsuite/ChangeLog:\n\n\tPR target/52330\n\t* gcc.target/i386/pr52330.c: New test.\n\nFrom-SVN: r184488", "tree": {"sha": "f58ba8937095628d3d124a39c24ef2956e014e94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f58ba8937095628d3d124a39c24ef2956e014e94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9517e33332fedbeb98a80a96b4ee434c4bca1023", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9517e33332fedbeb98a80a96b4ee434c4bca1023", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9517e33332fedbeb98a80a96b4ee434c4bca1023", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9517e33332fedbeb98a80a96b4ee434c4bca1023/comments", "author": null, "committer": null, "parents": [{"sha": "4ff89fcbf2b77347a477f4f0725e1a11894eaf6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ff89fcbf2b77347a477f4f0725e1a11894eaf6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ff89fcbf2b77347a477f4f0725e1a11894eaf6d"}], "stats": {"total": 63, "additions": 41, "deletions": 22}, "files": [{"sha": "48488afcf01a81c178b1c3a3361dbe55be3942e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9517e33332fedbeb98a80a96b4ee434c4bca1023/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9517e33332fedbeb98a80a96b4ee434c4bca1023/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9517e33332fedbeb98a80a96b4ee434c4bca1023", "patch": "@@ -1,3 +1,9 @@\n+2012-02-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/52330\n+\t* config/i386/i386.c (ix86_print_operand) <case 'H'>: Error out if x\n+\tis not offsettable memory reference.\n+\n 2012-02-22  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/18145\n@@ -7,7 +13,7 @@\n 2012-02-22  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/avr.h (avr_accumulate_outgoing_args): Return int.\n-\t* config/avr/avr.c (avr_accumulate_outgoing_args): Return int.\t\n+\t* config/avr/avr.c (avr_accumulate_outgoing_args): Return int.\n \n 2012-02-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n@@ -422,8 +428,7 @@\n 2012-02-14  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* haifa-sched.c (prune_ready_list): Ensure that if there is a\n-\tsched-group insn, it either remains alone or the entire list is\n-\tpruned.\n+\tsched-group insn, it either remains alone or the entire list is pruned.\n \n 2012-02-14  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n@@ -543,8 +548,8 @@\n \t* gcc.c (LINK_COMMAND_SPEC): Deal with -fgnu-tm.\n \t(GTM_SELF_SPECS): Define if not already defined.\n \t(driver_self_specs): Add GTM_SELF_SPECS.\n-        * config/darwin.h (LINK_COMMAND_SPEC_A): Deal with -fgnu-tm.\n-        (GTM_SELF_SPECS): Define.\n+\t* config/darwin.h (LINK_COMMAND_SPEC_A): Deal with -fgnu-tm.\n+\t(GTM_SELF_SPECS): Define.\n \t* config/i386/cygwin.h (GTM_SELF_SPECS): Likewise.\n \t* config/i386/mingw32.h (GTM_SELF_SPECS): Likewise.\n \n@@ -553,13 +558,11 @@\n \t* cselib.c (expand_loc): Return sp, fp, hfp or cfa base reg right\n \taway if seen.\n \n-\t* cselib.c (dump_cselib_val): Don't assume l->setting_insn is\n-\tnon-NULL.\n+\t* cselib.c (dump_cselib_val): Don't assume l->setting_insn is non-NULL.\n \n \tPR middle-end/52230\n-\t* omp-low.c (expand_omp_for): If a static schedule without\n-\tchunk size has NULL region->cont, force fd.chunk_size to be\n-\tinteger_zero_node.\n+\t* omp-low.c (expand_omp_for): If a static schedule without chunk size\n+\thas NULL region->cont, force fd.chunk_size to be integer_zero_node.\n \n 2012-02-13  Andrew MacLeod  <amacleod@redhat.com>\n \n@@ -583,7 +586,7 @@\n \tdisallow changes from SFmode to mode with different size in FP regs.\n \n 2012-02-12  Robert Millan  <rmh@gnu.org>\n-            Gerald Pfeifer <gerald@pfeifer.com>\n+\t    Gerald Pfeifer <gerald@pfeifer.com>\n \n \t* ginclude/stddef.h [__FreeBSD_kernel__] (__size_t): Do not define.\n \tTweak comment.\n@@ -607,8 +610,7 @@\n 2012-02-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/52132\n-\t* reg-stack.c (subst_stack_regs_in_debug_insn): Don't use\n-\tget_true_reg.\n+\t* reg-stack.c (subst_stack_regs_in_debug_insn): Don't use get_true_reg.\n \n 2012-02-11  Uros Bizjak  <ubizjak@gmail.com>\n \n@@ -969,8 +971,8 @@\n \t* config/mips/mips-dspr2.md (mips_prepend): Mask operand 3 rather\n \tthan operand 2.\n \n-2012-02-02 Jan Hubicka  <jh@suse.cz>\n-\t   Tom de Vries  <tom@codesourcery.com>\n+2012-02-02  Jan Hubicka  <jh@suse.cz>\n+\t    Tom de Vries  <tom@codesourcery.com>\n \n \tPR middle-end/51998\n \t* cgraphunit.c (cgraph_analyze_function): Break cyclic aliases."}, {"sha": "24dbc492e8470c793b918b905df56c1a48905e2c", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9517e33332fedbeb98a80a96b4ee434c4bca1023/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9517e33332fedbeb98a80a96b4ee434c4bca1023/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9517e33332fedbeb98a80a96b4ee434c4bca1023", "patch": "@@ -14091,6 +14091,13 @@ ix86_print_operand (FILE *file, rtx x, int code)\n \t  return;\n \n \tcase 'H':\n+\t  if (!offsettable_memref_p (x))\n+\t    {\n+\t      output_operand_lossage (\"operand is not an offsettable memory \"\n+\t\t\t\t      \"reference, invalid operand \"\n+\t\t\t\t      \"code 'H'\");\n+\t      return;\n+\t    }\n \t  /* It doesn't actually matter what mode we use here, as we're\n \t     only going to use this for printing.  */\n \t  x = adjust_address_nv (x, DImode, 8);"}, {"sha": "9134d73d439b9f6f2f68b074f23d71ce5b1679af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9517e33332fedbeb98a80a96b4ee434c4bca1023/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9517e33332fedbeb98a80a96b4ee434c4bca1023/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9517e33332fedbeb98a80a96b4ee434c4bca1023", "patch": "@@ -1,3 +1,8 @@\n+2012-02-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/52330\n+\t* gcc.target/i386/pr52330.c: New test.\n+\n 2012-02-22  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/52335\n@@ -10,8 +15,7 @@\n \n 2012-02-21  Kai Tietz  <ktietz@redhat.com>\n \n-\t* gcc.dg/bf-ms-layout-3.c: Mark char typed bitfield\n-\tas extension.\n+\t* gcc.dg/bf-ms-layout-3.c: Mark char typed bitfield as extension.\n \n 2012-02-21  Richard Guenther  <rguenther@suse.de>\n \n@@ -154,10 +158,9 @@\n \n 2012-02-14  Hans-Peter Nilsson  <hp@axis.com>\n \n-\t* lib/target-supports.exp (check_effective_target_fgnu_tm): New\n-\tproc.\n+\t* lib/target-supports.exp (check_effective_target_fgnu_tm): New proc.\n \t* gfortran.dg/trans-mem-skel.f90: Gate test on effective_target\n-\tfgnu_tm. \n+\tfgnu_tm.\n \t* gcc.dg/lto/trans-mem-1_0.c, gcc.dg/lto/trans-mem-2_0.c,\n \tgcc.dg/lto/trans-mem-3_0.c, gcc.dg/lto/trans-mem-4_0.c: Ditto.\n \t* gcc.dg/tm/tm.exp: Gate the whole of gcc.dg/tm on\n@@ -531,8 +534,8 @@\n \n \t* gcc.target/mips/mips-prepend-1.c: New test.\n \n-2012-02-02 Jan Hubicka  <jh@suse.cz>\n-\t   Tom de Vries  <tom@codesourcery.com>\n+2012-02-02  Jan Hubicka  <jh@suse.cz>\n+\t    Tom de Vries  <tom@codesourcery.com>\n \n \tPR middle-end/51998\n \t* testsuite/gcc.dg/alias-12.c: New testcase."}, {"sha": "22ba0b21aeda1fe9ade176f9c25d64d72f69ede2", "filename": "gcc/testsuite/gcc.target/i386/pr52330.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9517e33332fedbeb98a80a96b4ee434c4bca1023/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr52330.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9517e33332fedbeb98a80a96b4ee434c4bca1023/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr52330.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr52330.c?ref=9517e33332fedbeb98a80a96b4ee434c4bca1023", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O0\" } */\n+\n+void foo (int a)\n+{\n+  asm volatile (\"# %H0\" : : \"r\" (a));  /* { dg-error \"not an offsettable\" } */\n+}"}]}