{"sha": "92e092fe12129926b31d00afa6bb42cc5cb7100b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJlMDkyZmUxMjEyOTkyNmIzMWQwMGFmYTZiYjQyY2M1Y2I3MTAwYg==", "commit": {"author": {"name": "Neil Booth", "email": "neilb@earthling.net", "date": "2000-12-01T22:03:57Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2000-12-01T22:03:57Z"}, "message": "20000720-1.S: Remove duplicate testcase.\n\n        * gcc.dg/cpp/20000720-1.S: Remove duplicate testcase.\n        * gcc.dg/cpp/poison.c: Update.\n        * gcc.dg/cpp/spacing1.c: New testcase for all spacing issues.\n\nFrom-SVN: r37928", "tree": {"sha": "a7a80266d5563ef09b817b50077173cf2de6cf9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7a80266d5563ef09b817b50077173cf2de6cf9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92e092fe12129926b31d00afa6bb42cc5cb7100b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92e092fe12129926b31d00afa6bb42cc5cb7100b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92e092fe12129926b31d00afa6bb42cc5cb7100b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92e092fe12129926b31d00afa6bb42cc5cb7100b/comments", "author": null, "committer": null, "parents": [{"sha": "8d9e9a083d629324aec2cab9aacfd37b47fa9b48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d9e9a083d629324aec2cab9aacfd37b47fa9b48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d9e9a083d629324aec2cab9aacfd37b47fa9b48"}], "stats": {"total": 65, "additions": 49, "deletions": 16}, "files": [{"sha": "53cbfc0f377b35f0d40ec4acefa65e05e94c2c9d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e092fe12129926b31d00afa6bb42cc5cb7100b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e092fe12129926b31d00afa6bb42cc5cb7100b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=92e092fe12129926b31d00afa6bb42cc5cb7100b", "patch": "@@ -1,3 +1,9 @@\n+2000-12-01  Neil Booth  <neilb@earthling.net>\n+\n+        * gcc.dg/cpp/20000720-1.S: Remove duplicate testcase.\n+        * gcc.dg/cpp/poison.c: Update.\n+        * gcc.dg/cpp/spacing1.c: New testcase for all spacing issues.\n+\n 2000-12-01  Toon Moene  <toon@moene.indiv.nluug.nl>\n \n \t* g77.f-torture/execute/20001201.f: New test."}, {"sha": "82e9a84b7fcb0745f07c2d96332cbbeb6d7f5234", "filename": "gcc/testsuite/gcc.dg/cpp/20000720-1.S", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d9e9a083d629324aec2cab9aacfd37b47fa9b48/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F20000720-1.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d9e9a083d629324aec2cab9aacfd37b47fa9b48/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F20000720-1.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F20000720-1.S?ref=8d9e9a083d629324aec2cab9aacfd37b47fa9b48", "patch": "@@ -1,14 +0,0 @@\n-/* { dg-do preprocess } */\n-\n-#define nop()\t\tfoobar\n-\t nop\n-\tcall b\n-\n-/*\n-   { dg-final { if ![file exists 20000720-1.i] { return }         } }\n-   { dg-final { if \\{ [grep 20000720-1.i \"nop.*call\"] != \"\" \\} \\{ } }\n-   { dg-final {     fail \"20000720-1.S: new-line preservation\"    } }\n-   { dg-final { \\} else \\{                                        } }\n-   { dg-final {     pass \"20000720-1.S: new-line preservation\"    } }\n-   { dg-final { \\}                                                } }\n-*/"}, {"sha": "3670a76fa8965d95785044d61bb277b768e8c141", "filename": "gcc/testsuite/gcc.dg/cpp/poison.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e092fe12129926b31d00afa6bb42cc5cb7100b/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpoison.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e092fe12129926b31d00afa6bb42cc5cb7100b/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpoison.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpoison.c?ref=92e092fe12129926b31d00afa6bb42cc5cb7100b", "patch": "@@ -15,10 +15,10 @@ foo5\t\t\t/* { dg-error \"foo5\" \"use of foo5\" } */\n #define foo6 345\t/* { dg-error \"foo6\" \"def of foo6\" } */\n #define foo6 456\t/* { dg-error \"foo6\" \"redef of foo6\" } */\n #ifdef foo6\t\t/* { dg-error \"foo6\" \"#ifdef foo6\" } */\n-#error hey!  foo6 poisoned!\n+#error hey!  foo6 poisoned! /* { dg-error \"foo6\" \"poisoned identifiers\" } */\n #endif\n #if defined(foo6)\t/* { dg-error \"foo6\" \"#if defined foo6\" } */\n-#error no, foo6 still poisoned!\n+#error foo6 still poisoned! /* { dg-error \"foo6\" \"poisoned identifiers\" } */\n #else\n foo6\t\t\t/* { dg-error \"foo6\" \"use of foo6\" } */\n #endif"}, {"sha": "55a8f967c818d220448e29758bd22449f284c162", "filename": "gcc/testsuite/gcc.dg/cpp/spacing1.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e092fe12129926b31d00afa6bb42cc5cb7100b/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fspacing1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e092fe12129926b31d00afa6bb42cc5cb7100b/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fspacing1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fspacing1.c?ref=92e092fe12129926b31d00afa6bb42cc5cb7100b", "patch": "@@ -0,0 +1,41 @@\n+/* Copyright (C) 2000 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+\n+/* This tests correct spacing of macro expansion output, as well as\n+   the line it falls on.  This is quite subtle; it involves newlines\n+   within macro arguments becoming spaces, but not if it turns out to\n+   not be a macro invocation.  Also, multiple macro invocations spread\n+   across many lines.\n+\n+   Neil Booth, 1 Dec 2000.  */\n+\n+#define str(x) #x\n+#define f(x) x\n+\n+/* The correct output is shown here.  Note the spaces, and the way\n+   everything after the invocation of f appears on the same line.\n+\n+f\n+bar\n+g \"1 2\" bam baz\n+\n+*/\n+\n+f\n+bar\n+f (g) str\n+(\n+1\n+2\n+) f\n+(bam) baz\n+\n+/*\n+   { dg-final { if ![file exists spacing1.i] { return }                   } }\n+   { dg-final { if \\{ [grep spacing1.i \"f.*bar\"] == \"\" \\} \\{              } }\n+   { dg-final { if \\{ [grep spacing1.i \"^bar\"] != \"\" \\}   \\{              } }\n+   { dg-final { if \\{ [grep spacing1.i \"g \\\"1 2\\\" bam baz\"] != \"\" \\} \\{   } }\n+   { dg-final { return \\} \\} \\}                                           } }\n+   { dg-final { fail \"spacing1.c: spacing and new-line preservation\"      } }\n+*/"}]}