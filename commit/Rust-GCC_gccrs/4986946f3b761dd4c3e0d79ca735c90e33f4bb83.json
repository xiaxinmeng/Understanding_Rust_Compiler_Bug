{"sha": "4986946f3b761dd4c3e0d79ca735c90e33f4bb83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk4Njk0NmYzYjc2MWRkNGMzZTBkNzljYTczNWM5MGUzM2Y0YmI4Mw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-06-14T18:56:18Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-06-14T18:57:11Z"}, "message": "i386: Split V2HImode *punpckwd to SSE instruction [PR101058]\n\nV2HImode *punpckwd should not be split to the insn that depends on\nTARGET_MMX_WITH_SSE, since the later is disabled on 32bit targets.\n\nAlso return true early from ix86_vectorize_vec_perm_const when testing\nwith V2HI mode.  *punpckwd can be used to implement all permutations.\n\n2021-06-14  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/\n\tPR target/101058\n\t* config/i386/i386-expand.c (ix86_vectorize_vec_perm_const):\n\tReturn true early when testing with V2HImode.\n\t* config/i386/mmx.md (*punpckwd): Split to sse2_pshuflw_1.\n\ngcc/testsuite/\n\n\tPR target/101058\n\t* gcc.target/i386/pr101058.c: New test.", "tree": {"sha": "5eb905e4f2360921f7c74b695a422b82f86deade", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5eb905e4f2360921f7c74b695a422b82f86deade"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4986946f3b761dd4c3e0d79ca735c90e33f4bb83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4986946f3b761dd4c3e0d79ca735c90e33f4bb83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4986946f3b761dd4c3e0d79ca735c90e33f4bb83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4986946f3b761dd4c3e0d79ca735c90e33f4bb83/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93bfadf3a1db7d73e9ca4a4a3d40f7f81ea16d39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93bfadf3a1db7d73e9ca4a4a3d40f7f81ea16d39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93bfadf3a1db7d73e9ca4a4a3d40f7f81ea16d39"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "dee3df2e3a012676ed97f29e829e7c2f954cb9ab", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4986946f3b761dd4c3e0d79ca735c90e33f4bb83/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4986946f3b761dd4c3e0d79ca735c90e33f4bb83/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=4986946f3b761dd4c3e0d79ca735c90e33f4bb83", "patch": "@@ -20446,9 +20446,12 @@ ix86_vectorize_vec_perm_const (machine_mode vmode, rtx target, rtx op0,\n \treturn false;\n       break;\n     case E_V2HImode:\n-\tif (!TARGET_SSE2)\n-\t  return false;\n-\tbreak;\n+      if (!TARGET_SSE2)\n+\treturn false;\n+      /* All implementable with *punpckwd.  */\n+      if (d.testing_p)\n+\treturn true;\n+      break;\n     case E_V2DImode:\n     case E_V2DFmode:\n       if (!TARGET_SSE)"}, {"sha": "1a9e7b024dd91c6ff61459e426db3a0c70c5c0d1", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4986946f3b761dd4c3e0d79ca735c90e33f4bb83/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4986946f3b761dd4c3e0d79ca735c90e33f4bb83/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=4986946f3b761dd4c3e0d79ca735c90e33f4bb83", "patch": "@@ -3368,16 +3368,18 @@\n \t  (vec_concat:V4HI\n \t    (match_operand:V2HI 1 \"register_operand\" \"0,Yw\")\n \t    (match_operand:V2HI 2 \"register_operand\" \"x,Yw\"))\n-          (parallel [(match_operand 3 \"const_0_to_3_operand\")\n-                     (match_operand 4 \"const_0_to_3_operand\")])))]\n+\t  (parallel [(match_operand 3 \"const_0_to_3_operand\")\n+\t\t     (match_operand 4 \"const_0_to_3_operand\")])))]\n   \"TARGET_SSE2\"\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 5)\n-        (vec_select:V4HI\n+\t(vec_select:V8HI\n \t  (match_dup 5)\n           (parallel [(match_dup 3) (match_dup 4)\n-                     (const_int 0) (const_int 0)])))]\n+                     (const_int 2) (const_int 3)\n+                     (const_int 4) (const_int 5)\n+                     (const_int 6) (const_int 7)])))]\n {\n   rtx dest = lowpart_subreg (V8HImode, operands[0], V2HImode);\n   rtx op1 = lowpart_subreg (V8HImode, operands[1], V2HImode);\n@@ -3395,8 +3397,7 @@\n \n   operands[3] = GEN_INT (sel0);\n   operands[4] = GEN_INT (sel1);\n-\n-  operands[5] = lowpart_subreg (V4HImode, dest, V8HImode);\n+  operands[5] = dest;\n }\n   [(set_attr \"isa\" \"noavx,avx\")\n    (set_attr \"type\" \"sselog\")"}, {"sha": "a2b251ce07d2642a7e1cf01d8e36b8ff4053bc45", "filename": "gcc/testsuite/gcc.target/i386/pr101058.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4986946f3b761dd4c3e0d79ca735c90e33f4bb83/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101058.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4986946f3b761dd4c3e0d79ca735c90e33f4bb83/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101058.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101058.c?ref=4986946f3b761dd4c3e0d79ca735c90e33f4bb83", "patch": "@@ -0,0 +1,12 @@\n+/* PR target/101058 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -msse2 -mno-mmx\" } */\n+\n+short add90Hybrid_a_1;\n+short *add90Hybrid_b, *add90Hybrid_c, *add90Hybrid_d;\n+void add90Hybrid() {\n+  for (int i; i < 200; i += 2) {\n+    add90Hybrid_c[i] = add90Hybrid_b[i];\n+    add90Hybrid_d[i] = add90Hybrid_a_1 - add90Hybrid_b[i + 1];\n+  }\n+}"}]}