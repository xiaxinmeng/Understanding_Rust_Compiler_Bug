{"sha": "550c5f8a7e3e2487b06ddbe9da3dc65c5c7e00f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUwYzVmOGE3ZTNlMjQ4N2IwNmRkYmU5ZGEzZGM2NWM1YzdlMDBmMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-01-08T16:01:17Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-01-08T16:01:17Z"}, "message": "constexpr.c (cxx_eval_call_expression): Remove convert_to_void workaround.\n\n\t* constexpr.c (cxx_eval_call_expression): Remove convert_to_void\n\tworkaround.\n\nFrom-SVN: r232168", "tree": {"sha": "40c5edf0c17fc24836425311875e6b9717cbba4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40c5edf0c17fc24836425311875e6b9717cbba4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/550c5f8a7e3e2487b06ddbe9da3dc65c5c7e00f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/550c5f8a7e3e2487b06ddbe9da3dc65c5c7e00f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/550c5f8a7e3e2487b06ddbe9da3dc65c5c7e00f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/550c5f8a7e3e2487b06ddbe9da3dc65c5c7e00f1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "451773378f6808ce2b1e1d4eaed40b164ad590da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/451773378f6808ce2b1e1d4eaed40b164ad590da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/451773378f6808ce2b1e1d4eaed40b164ad590da"}], "stats": {"total": 13, "additions": 3, "deletions": 10}, "files": [{"sha": "6b0eae6325edfffb6057190f18459d985b25cd9a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/550c5f8a7e3e2487b06ddbe9da3dc65c5c7e00f1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/550c5f8a7e3e2487b06ddbe9da3dc65c5c7e00f1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=550c5f8a7e3e2487b06ddbe9da3dc65c5c7e00f1", "patch": "@@ -1,5 +1,8 @@\n 2016-01-08  Jason Merrill  <jason@redhat.com>\n \n+\t* constexpr.c (cxx_eval_call_expression): Remove convert_to_void\n+\tworkaround.\n+\n \tPR c++/68983\n \tPR c++/67557\n \t* cvt.c (convert_to_void): Don't strip a TARGET_EXPR of"}, {"sha": "c6c34671ccd1ef1021f2f0977f2817dbb496de56", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/550c5f8a7e3e2487b06ddbe9da3dc65c5c7e00f1/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/550c5f8a7e3e2487b06ddbe9da3dc65c5c7e00f1/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=550c5f8a7e3e2487b06ddbe9da3dc65c5c7e00f1", "patch": "@@ -1285,16 +1285,6 @@ cxx_eval_call_expression (const constexpr_ctx *ctx, tree t,\n       ctx->values->put (new_ctx.object, ctor);\n       ctx = &new_ctx;\n     }\n-  else if (DECL_BY_REFERENCE (DECL_RESULT (fun))\n-\t   && TREE_CODE (t) != AGGR_INIT_EXPR)\n-    {\n-      /* convert_to_void stripped our AGGR_INIT_EXPR, in which case we don't\n-\t care about a constant value.  ??? we could still optimize away the\n-\t call.  */\n-      gcc_assert (ctx->quiet && !ctx->object);\n-      *non_constant_p = true;\n-      return t;\n-    }\n \n   bool non_constant_args = false;\n   cxx_bind_parameters_in_call (ctx, t, &new_call,"}]}