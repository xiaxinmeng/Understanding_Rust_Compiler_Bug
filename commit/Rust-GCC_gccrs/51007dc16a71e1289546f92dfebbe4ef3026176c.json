{"sha": "51007dc16a71e1289546f92dfebbe4ef3026176c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEwMDdkYzE2YTcxZTEyODk1NDZmOTJkZmViYmU0ZWYzMDI2MTc2Yw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-08-01T17:16:48Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2019-08-01T17:16:48Z"}, "message": "domwalk: use gcc_sort_r\n\n2019-08-01  Richard Biener  <rguenther@suse.de>\n\n\t* domwalk.c (bb_postorder): Remove static variable.\n\t(cmp_bb_postorder): Adjust.\n\t(sort_bbs_postorder): Adjust and use gcc_sort_r.\n\t(dom_walker::walk): Adjust.\n\nFrom-SVN: r273978", "tree": {"sha": "a25014d6b09ce6cc182aa8a51642201e04aaa246", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a25014d6b09ce6cc182aa8a51642201e04aaa246"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51007dc16a71e1289546f92dfebbe4ef3026176c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51007dc16a71e1289546f92dfebbe4ef3026176c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51007dc16a71e1289546f92dfebbe4ef3026176c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51007dc16a71e1289546f92dfebbe4ef3026176c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce0454d9419dbcd73e65dae2a3eba15eeddbe338", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce0454d9419dbcd73e65dae2a3eba15eeddbe338", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce0454d9419dbcd73e65dae2a3eba15eeddbe338"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "212fd93abb9d6ddeceee0bb51a3cd08f4d194475", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51007dc16a71e1289546f92dfebbe4ef3026176c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51007dc16a71e1289546f92dfebbe4ef3026176c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51007dc16a71e1289546f92dfebbe4ef3026176c", "patch": "@@ -1,3 +1,10 @@\n+2019-08-01  Richard Biener  <rguenther@suse.de>\n+\n+\t* domwalk.c (bb_postorder): Remove static variable.\n+\t(cmp_bb_postorder): Adjust.\n+\t(sort_bbs_postorder): Adjust and use gcc_sort_r.\n+\t(dom_walker::walk): Adjust.\n+\n 2019-08-01  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* sort.cc (sort_r_ctx): New struct."}, {"sha": "42c5127695b8cdf25dac88bc3f4379ac5d38e161", "filename": "gcc/domwalk.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51007dc16a71e1289546f92dfebbe4ef3026176c/gcc%2Fdomwalk.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51007dc16a71e1289546f92dfebbe4ef3026176c/gcc%2Fdomwalk.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdomwalk.c?ref=51007dc16a71e1289546f92dfebbe4ef3026176c", "patch": "@@ -128,14 +128,12 @@ along with GCC; see the file COPYING3.  If not see\n     which is currently an abstraction over walking tree statements.  Thus\n     the dominator walker is currently only useful for trees.  */\n \n-/* Reverse postorder index of each basic block.  */\n-static int *bb_postorder;\n-\n static int\n-cmp_bb_postorder (const void *a, const void *b)\n+cmp_bb_postorder (const void *a, const void *b, void *data)\n {\n   basic_block bb1 = *(const basic_block *)(a);\n   basic_block bb2 = *(const basic_block *)(b);\n+  int *bb_postorder = (int *)data;\n   /* Place higher completion number first (pop off lower number first).  */\n   return bb_postorder[bb2->index] - bb_postorder[bb1->index];\n }\n@@ -144,7 +142,7 @@ cmp_bb_postorder (const void *a, const void *b)\n    i.e. by descending number in BB_POSTORDER array.  */\n \n static void\n-sort_bbs_postorder (basic_block *bbs, int n)\n+sort_bbs_postorder (basic_block *bbs, int n, int *bb_postorder)\n {\n   if (__builtin_expect (n == 2, true))\n     {\n@@ -166,7 +164,7 @@ sort_bbs_postorder (basic_block *bbs, int n)\n       bbs[0] = bb0, bbs[1] = bb1, bbs[2] = bb2;\n     }\n   else\n-    qsort (bbs, n, sizeof *bbs, cmp_bb_postorder);\n+    gcc_sort_r (bbs, n, sizeof *bbs, cmp_bb_postorder, bb_postorder);\n }\n \n /* Set EDGE_EXECUTABLE on every edge within FN's CFG.  */\n@@ -294,7 +292,6 @@ dom_walker::walk (basic_block bb)\n   basic_block *worklist = XNEWVEC (basic_block,\n \t\t\t\t   n_basic_blocks_for_fn (cfun) * 2);\n   int sp = 0;\n-  bb_postorder = m_bb_to_rpo;\n \n   while (true)\n     {\n@@ -339,7 +336,8 @@ dom_walker::walk (basic_block bb)\n \t      if (sp - saved_sp > 1\n \t\t  && m_dom_direction == CDI_DOMINATORS\n \t\t  && m_bb_to_rpo)\n-\t\tsort_bbs_postorder (&worklist[saved_sp], sp - saved_sp);\n+\t\tsort_bbs_postorder (&worklist[saved_sp], sp - saved_sp,\n+\t\t\t\t    m_bb_to_rpo);\n \t    }\n \t}\n       /* NULL is used to mark pop operations in the recursion stack.  */\n@@ -360,6 +358,5 @@ dom_walker::walk (basic_block bb)\n       else\n \tbreak;\n     }\n-  bb_postorder = NULL;\n   free (worklist);\n }"}]}