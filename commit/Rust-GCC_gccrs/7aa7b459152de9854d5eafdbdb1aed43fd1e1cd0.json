{"sha": "7aa7b459152de9854d5eafdbdb1aed43fd1e1cd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FhN2I0NTkxNTJkZTk4NTRkNWVhZmRiZGIxYWVkNDNmZDFlMWNkMA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2009-09-02T14:58:50Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2009-09-02T14:58:50Z"}, "message": "re PR libfortran/41169 (libgfortran fails to build on Solaris 10+: '_Imaginary_I' undeclared)\n\n\tPR libfortran/41169\n\t* inclhack.def (irix_complex): New fix.\n\t(solaris_complex): Likewise.\n\t* fixincl.x: Regenerate.\n\t* tests/base/complex.h [IRIX_COMPLEX_CHECK, SOLARIS_COMPLEX_CHECK]:\n\tNew tests.\n\nFrom-SVN: r151331", "tree": {"sha": "758176b80c80b9947972eac0d941bbeaac2cf8e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/758176b80c80b9947972eac0d941bbeaac2cf8e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7aa7b459152de9854d5eafdbdb1aed43fd1e1cd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aa7b459152de9854d5eafdbdb1aed43fd1e1cd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7aa7b459152de9854d5eafdbdb1aed43fd1e1cd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aa7b459152de9854d5eafdbdb1aed43fd1e1cd0/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e123d1967f95f1066d44f7aeca2ada21a5f4628f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e123d1967f95f1066d44f7aeca2ada21a5f4628f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e123d1967f95f1066d44f7aeca2ada21a5f4628f"}], "stats": {"total": 170, "additions": 165, "deletions": 5}, "files": [{"sha": "2bf7bf9055525bd664dc84f5ce2cdd345a3d32e2", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aa7b459152de9854d5eafdbdb1aed43fd1e1cd0/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aa7b459152de9854d5eafdbdb1aed43fd1e1cd0/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=7aa7b459152de9854d5eafdbdb1aed43fd1e1cd0", "patch": "@@ -1,3 +1,12 @@\n+2009-09-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR libfortran/41169\n+\t* inclhack.def (irix_complex): New fix.\n+\t(solaris_complex): Likewise.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/complex.h [IRIX_COMPLEX_CHECK, SOLARIS_COMPLEX_CHECK]:\n+\tNew tests.\n+\n 2009-08-28   Bruce Korb <bkorb@gnu.org>\n \t     Steve Ellcey  <sje@cup.hp.com>\n "}, {"sha": "d9c194f217b3a60c935fe5fa74a548d013a9ec4e", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 95, "deletions": 5, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aa7b459152de9854d5eafdbdb1aed43fd1e1cd0/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aa7b459152de9854d5eafdbdb1aed43fd1e1cd0/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=7aa7b459152de9854d5eafdbdb1aed43fd1e1cd0", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Friday August 28, 2009 at 10:55:38 AM PDT\n+ * It has been AutoGen-ed  Wednesday September  2, 2009 at 04:57:56 PM MEST\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Fri Aug 28 10:55:38 PDT 2009\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Sep  2 16:57:56 MEST 2009\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 204 fixup descriptions.\n+ * This file contains 206 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -4569,6 +4569,45 @@ static const char* apzIrix_Asm_ApostrophePatch[] = {\n     \"^([ \\t]*#.*[Ww]e)'re\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Irix_Complex fix\n+ */\n+tSCC zIrix_ComplexName[] =\n+     \"irix_complex\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zIrix_ComplexList[] =\n+  \"complex.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzIrix_ComplexMachs[] = {\n+        \"mips-sgi-irix6.5\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zIrix_ComplexSelect0[] =\n+       \"#define[ \\t]_Complex_I[ \\t]\\\\(\\\\(float[ \\t]_Complex\\\\)[ \\t]\\\\(__I__\\\\)\\\\)\";\n+\n+#define    IRIX_COMPLEX_TEST_CT  1\n+static tTestDesc aIrix_ComplexTests[] = {\n+  { TT_EGREP,    zIrix_ComplexSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Irix_Complex\n+ */\n+static const char* apzIrix_ComplexPatch[] = { sed_cmd_z,\n+    \"-e\", \"s/#define[ \\t]_Complex_I[ \\t]((float[ \\t]_Complex)[ \\t](__I__))/#define _Complex_I (__extension__ 1.0iF)/\",\n+    \"-e\", \"/#define[ \\t]imaginary[ \\t]_Imaginary/d\",\n+    \"-e\", \"/#define[ \\t]_Imaginary_I/d\",\n+    \"-e\", \"s/#define[ \\t]I[ \\t]_Imaginary_I/#define I _Complex_I/\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Irix_Limits_Const fix\n@@ -6137,6 +6176,45 @@ static const char* apzSco_MathPatch[] = { sed_cmd_z,\n #endif /* ! __GNUC__ */\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Solaris_Complex fix\n+ */\n+tSCC zSolaris_ComplexName[] =\n+     \"solaris_complex\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zSolaris_ComplexList[] =\n+  \"complex.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzSolaris_ComplexMachs[] = {\n+        \"*-*-solaris2.*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zSolaris_ComplexSelect0[] =\n+       \"#define[ \\t]_Complex_I[ \\t]_Complex_I\";\n+\n+#define    SOLARIS_COMPLEX_TEST_CT  1\n+static tTestDesc aSolaris_ComplexTests[] = {\n+  { TT_EGREP,    zSolaris_ComplexSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Solaris_Complex\n+ */\n+static const char* apzSolaris_ComplexPatch[] = { sed_cmd_z,\n+    \"-e\", \"s/#define[ \\t]_Complex_I[ \\t]_Complex_I/#define\\t_Complex_I\\t\\\\(__extension__ 1.0iF\\\\)/\",\n+    \"-e\", \"/#define[ \\t]_Imaginary_I[ \\t]_Imaginary_I/d\",\n+    \"-e\", \"/#define[ \\t]imaginary[ \\t]_Imaginary/d\",\n+    \"-e\", \"s/#define[ \\t]I[ \\t]\\\\+_Imaginary_I/#define\\tI\\t\\t_Complex_I/\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Solaris_Math_1 fix\n@@ -8302,9 +8380,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          247\n+#define REGEX_COUNT          249\n #define MACH_LIST_SIZE_LIMIT 181\n-#define FIX_COUNT            204\n+#define FIX_COUNT            206\n \n /*\n  *  Enumerate the fixes\n@@ -8421,6 +8499,7 @@ typedef enum {\n     IRIX___GENERIC1_FIXIDX,\n     IRIX___GENERIC2_FIXIDX,\n     IRIX_ASM_APOSTROPHE_FIXIDX,\n+    IRIX_COMPLEX_FIXIDX,\n     IRIX_LIMITS_CONST_FIXIDX,\n     IRIX_SOCKLEN_T_FIXIDX,\n     IRIX_STDINT_C99_FIXIDX,\n@@ -8461,6 +8540,7 @@ typedef enum {\n     RS6000_FCHMOD_FIXIDX,\n     RS6000_PARAM_FIXIDX,\n     SCO_MATH_FIXIDX,\n+    SOLARIS_COMPLEX_FIXIDX,\n     SOLARIS_MATH_1_FIXIDX,\n     SOLARIS_MATH_2_FIXIDX,\n     SOLARIS_MATH_3_FIXIDX,\n@@ -9072,6 +9152,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      IRIX_ASM_APOSTROPHE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aIrix_Asm_ApostropheTests,   apzIrix_Asm_ApostrophePatch, 0 },\n \n+  {  zIrix_ComplexName,    zIrix_ComplexList,\n+     apzIrix_ComplexMachs,\n+     IRIX_COMPLEX_TEST_CT, FD_MACH_ONLY,\n+     aIrix_ComplexTests,   apzIrix_ComplexPatch, 0 },\n+\n   {  zIrix_Limits_ConstName,    zIrix_Limits_ConstList,\n      apzIrix_Limits_ConstMachs,\n      IRIX_LIMITS_CONST_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -9272,6 +9357,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      SCO_MATH_TEST_CT, FD_MACH_ONLY,\n      aSco_MathTests,   apzSco_MathPatch, 0 },\n \n+  {  zSolaris_ComplexName,    zSolaris_ComplexList,\n+     apzSolaris_ComplexMachs,\n+     SOLARIS_COMPLEX_TEST_CT, FD_MACH_ONLY,\n+     aSolaris_ComplexTests,   apzSolaris_ComplexPatch, 0 },\n+\n   {  zSolaris_Math_1Name,    zSolaris_Math_1List,\n      apzSolaris_Math_1Machs,\n      SOLARIS_MATH_1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "f7ad8773e2a05b4d26fb5a2c25a09a74ead28783", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aa7b459152de9854d5eafdbdb1aed43fd1e1cd0/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aa7b459152de9854d5eafdbdb1aed43fd1e1cd0/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=7aa7b459152de9854d5eafdbdb1aed43fd1e1cd0", "patch": "@@ -2436,6 +2436,29 @@ fix = {\n };\n \n \n+/*\n+ * IRIX 6.5 complex.h defines _Complex_I and _Imaginary_I in terms of __I__,\n+ * which is a MIPSpro compiler builtin.  Remove _Imaginary_I and imaginary\n+ * definitions which are not supported by GCC. \n+ */\n+fix = {\n+    hackname  = irix_complex;\n+    mach      = \"mips-sgi-irix6.5\";\n+    files     = complex.h;\n+    select    = \"#define[ \\t]_Complex_I[ \\t]\\\\(\\\\(float[ \\t]_Complex\\\\)[ \\t]\\\\(__I__\\\\)\\\\)\";\n+    sed\t      = \"s/#define[ \\t]_Complex_I[ \\t]((float[ \\t]_Complex)[ \\t](__I__))/\"\n+\t\t\"#define _Complex_I (__extension__ 1.0iF)/\";\n+    sed\t      = \"/#define[ \\t]imaginary[ \\t]_Imaginary/d\";\n+    sed\t      = \"/#define[ \\t]_Imaginary_I/d\";\n+    sed       = \"s/#define[ \\t]I[ \\t]_Imaginary_I/#define I _Complex_I/\";\n+    test_text = \"#define _Complex_I ((float _Complex) (__I__))\\n\"\n+\t\t\"#define imaginary _Imaginary\\n\"\n+\t\t\"// #define _Imaginary_I ((float _Imaginary) 1)\\n\"\n+\t\t\"#define _Imaginary_I __I__\\n\"\n+\t\t\"#define I _Imaginary_I\";\n+};\n+\n+\n /*\n  *  Non-traditional \"const\" declaration in Irix's limits.h.\n  */\n@@ -3219,6 +3242,30 @@ fix = {\n };\n \n \n+/*\n+ * Solaris 10+ complex.h defines _Complex_I and _Imaginary_I in terms of\n+ * themselves, which are Sun Studio compiler intrinsics.  Remove _Imaginary_I\n+ * and imaginary definitions which are not supported by GCC.\n+ */\n+fix = {\n+    hackname  = solaris_complex;\n+    mach      = \"*-*-solaris2.*\";\n+    files     = complex.h;\n+    select    = \"#define[ \\t]_Complex_I[ \\t]_Complex_I\";\n+    sed\t      = \"s/#define[ \\t]_Complex_I[ \\t]_Complex_I/\"\n+\t\t\"#define\\t_Complex_I\\t\\\\(__extension__ 1.0iF\\\\)/\";\n+    sed\t      = \"/#define[ \\t]_Imaginary_I[ \\t]_Imaginary_I/d\";\n+    sed\t      = \"/#define[ \\t]imaginary[ \\t]_Imaginary/d\";\n+    sed       = \"s/#define[ \\t]I[ \\t]\\\\+_Imaginary_I/#define\\tI\\t\\t_Complex_I/\";\n+    test_text = \"#define\t_Complex_I\t_Complex_I\\n\"\n+    \t\t\"#define\tcomplex\t\t_Complex\\n\"\n+\t\t\"#define\t_Imaginary_I\t_Imaginary_I\\n\"\n+\t\t\"#define\timaginary\t_Imaginary\\n\"\n+\t\t\"#undef\tI\\n\"\n+\t\t\"#define\tI\t\t_Imaginary_I\";\n+};\n+\n+\n /*\n  * Sun Solaris 10 defines several C99 math macros in terms of\n  * builtins specific to the Studio compiler, in particular not"}, {"sha": "9a54e8c0bda65669a866e99f70885d78db1637e4", "filename": "fixincludes/tests/base/complex.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aa7b459152de9854d5eafdbdb1aed43fd1e1cd0/fixincludes%2Ftests%2Fbase%2Fcomplex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aa7b459152de9854d5eafdbdb1aed43fd1e1cd0/fixincludes%2Ftests%2Fbase%2Fcomplex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fcomplex.h?ref=7aa7b459152de9854d5eafdbdb1aed43fd1e1cd0", "patch": "@@ -19,3 +19,17 @@\n #define _Complex_I (__extension__ 1.0iF)\n \n #endif  /* HPUX_IMAGINARY_I_CHECK */\n+\n+\n+#if defined( IRIX_COMPLEX_CHECK )\n+#define _Complex_I (__extension__ 1.0iF)\n+#define I _Complex_I\n+#endif  /* IRIX_COMPLEX_CHECK */\n+\n+\n+#if defined( SOLARIS_COMPLEX_CHECK )\n+#define _Complex_I (__extension__ 1.0iF)\n+#define\tcomplex\t\t_Complex\n+#undef\tI\n+#define\tI\t\t_Complex_I\n+#endif  /* SOLARIS_COMPLEX_CHECK */"}]}