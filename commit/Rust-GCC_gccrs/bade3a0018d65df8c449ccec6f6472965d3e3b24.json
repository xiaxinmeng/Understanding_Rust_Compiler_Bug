{"sha": "bade3a0018d65df8c449ccec6f6472965d3e3b24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFkZTNhMDAxOGQ2NWRmOGM0NDljY2VjNmY2NDcyOTY1ZDNlM2IyNA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2004-04-22T21:46:48Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2004-04-22T21:46:48Z"}, "message": "cfgloopmanip.c (scale_bbs_frequencies): Use RDIV macro\n\n      * cfgloopmanip.c (scale_bbs_frequencies): Use RDIV macro\n      * cfgloopanal.c (expected_loop_iterations): Change the return value\n\nFrom-SVN: r81058", "tree": {"sha": "ff2786de6067078df56240e0b8d6d340cb186aac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff2786de6067078df56240e0b8d6d340cb186aac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bade3a0018d65df8c449ccec6f6472965d3e3b24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bade3a0018d65df8c449ccec6f6472965d3e3b24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bade3a0018d65df8c449ccec6f6472965d3e3b24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bade3a0018d65df8c449ccec6f6472965d3e3b24/comments", "author": null, "committer": null, "parents": [{"sha": "eddc836e8a4466e25bb52c6b1eef2824ee896009", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eddc836e8a4466e25bb52c6b1eef2824ee896009", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eddc836e8a4466e25bb52c6b1eef2824ee896009"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "b13dc2352316067ba7916f3ffaaf4efb3dc5ad48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bade3a0018d65df8c449ccec6f6472965d3e3b24/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bade3a0018d65df8c449ccec6f6472965d3e3b24/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bade3a0018d65df8c449ccec6f6472965d3e3b24", "patch": "@@ -1,3 +1,8 @@\n+2004-04-22  Jan Hubicka  <jh@suse.cz>\n+\n+      * cfgloopmanip.c (scale_bbs_frequencies): Use RDIV macro\n+      * cfgloopanal.c (expected_loop_iterations): Change the return value\n+\n 2004-04-22  Jakub Jelinek  <jakub@redhat.com>\n \n \t* cselib.h (struct elt_loc_list): Remove canon_loc field."}, {"sha": "358bfa765b82fb015fbe0dae15ee0a95309327cb", "filename": "gcc/cfgloopanal.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bade3a0018d65df8c449ccec6f6472965d3e3b24/gcc%2Fcfgloopanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bade3a0018d65df8c449ccec6f6472965d3e3b24/gcc%2Fcfgloopanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopanal.c?ref=bade3a0018d65df8c449ccec6f6472965d3e3b24", "patch": "@@ -431,9 +431,9 @@ expected_loop_iterations (const struct loop *loop)\n \t  count_in += e->count;\n \n       if (count_in == 0)\n-\treturn 0;\n-\n-      expected = (count_latch + count_in - 1) / count_in;\n+        expected = count_latch * 2;\n+      else\n+        expected = (count_latch + count_in - 1) / count_in;\n \n       /* Avoid overflows.  */\n       return (expected > REG_BR_PROB_BASE ? REG_BR_PROB_BASE : expected);\n@@ -452,7 +452,7 @@ expected_loop_iterations (const struct loop *loop)\n \t  freq_in += EDGE_FREQUENCY (e);\n \n       if (freq_in == 0)\n-\treturn 0;\n+\treturn freq_latch * 2;\n \n       return (freq_latch + freq_in - 1) / freq_in;\n     }"}, {"sha": "59ae4a1ed7a2caaf56f77d9cbf54939749669cdf", "filename": "gcc/cfgloopmanip.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bade3a0018d65df8c449ccec6f6472965d3e3b24/gcc%2Fcfgloopmanip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bade3a0018d65df8c449ccec6f6472965d3e3b24/gcc%2Fcfgloopmanip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopmanip.c?ref=bade3a0018d65df8c449ccec6f6472965d3e3b24", "patch": "@@ -50,6 +50,8 @@ static void scale_bbs_frequencies (basic_block *, int, int, int);\n static basic_block create_preheader (struct loop *, int);\n static void fix_irreducible_loops (basic_block);\n \n+#define RDIV(X,Y) (((X) + (Y) / 2) / (Y))\n+\n /* Splits basic block BB after INSN, returns created edge.  Updates loops\n    and dominators.  */\n edge\n@@ -458,7 +460,7 @@ scale_bbs_frequencies (basic_block *bbs, int nbbs, int num, int den)\n   for (i = 0; i < nbbs; i++)\n     {\n       bbs[i]->frequency = (bbs[i]->frequency * num) / den;\n-      bbs[i]->count = (bbs[i]->count * num) / den;\n+      bbs[i]->count = RDIV (bbs[i]->count * num, den);\n       for (e = bbs[i]->succ; e; e = e->succ_next)\n \te->count = (e->count * num) /den;\n     }\n@@ -812,7 +814,6 @@ can_duplicate_loop_p (struct loop *loop)\n   return ret;\n }\n \n-#define RDIV(X,Y) (((X) + (Y) / 2) / (Y))\n \n /* Duplicates body of LOOP to given edge E NDUPL times.  Takes care of updating\n    LOOPS structure and dominators.  E's destination must be LOOP header for"}]}