{"sha": "9072f0698d42b378d15906853349780d6564a76b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA3MmYwNjk4ZDQyYjM3OGQxNTkwNjg1MzM0OTc4MGQ2NTY0YTc2Yg==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2013-10-17T13:52:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-17T13:52:37Z"}, "message": "sem_ch13.adb (Analyze_Aspect_Specifications): Flag aspect Refined_Pre as not supported.\n\n2013-10-17  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): Flag aspect\n\tRefined_Pre as not supported.\n\t* sem_prag.adb (Analyze_Pragma): Ignore pragma Refined_Pre.\n\nFrom-SVN: r203761", "tree": {"sha": "84cbcf8a81016a8b4bce0db51f29b24c8dde0eaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84cbcf8a81016a8b4bce0db51f29b24c8dde0eaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9072f0698d42b378d15906853349780d6564a76b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9072f0698d42b378d15906853349780d6564a76b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9072f0698d42b378d15906853349780d6564a76b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9072f0698d42b378d15906853349780d6564a76b/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7c821effc4714595e7923fb466946abb38055edc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c821effc4714595e7923fb466946abb38055edc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c821effc4714595e7923fb466946abb38055edc"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "9f55cad97531c286cff422c503167b6fd236e49c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9072f0698d42b378d15906853349780d6564a76b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9072f0698d42b378d15906853349780d6564a76b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9072f0698d42b378d15906853349780d6564a76b", "patch": "@@ -1,3 +1,9 @@\n+2013-10-17  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): Flag aspect\n+\tRefined_Pre as not supported.\n+\t* sem_prag.adb (Analyze_Pragma): Ignore pragma Refined_Pre.\n+\n 2013-10-17  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch12.adb (Validated_Access_Subprogram_Instance): According\n@@ -21,7 +27,7 @@\n \t* sem_prag.adb (Analyze_Constituent): Move the check\n \tconcerning option Part_Of to routine Check_Matching_Constituent.\n \t(Check_Matching_Constituent): Verify that an abstract state\n-\tthat acts as a constituent has the prope Part_Op option in\n+\tthat acts as a constituent has the proper Part_Of option in\n \tits aspect/pragma Abstract_State.  Account for the case when a\n \tconstituent comes from a private child or private sibling.\n \t* sem_util.ads, sem_util.adb (Is_Child_Or_Sibling): New routine."}, {"sha": "6aef3843016d4917444667c814902a79bc81213f", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9072f0698d42b378d15906853349780d6564a76b/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9072f0698d42b378d15906853349780d6564a76b/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=9072f0698d42b378d15906853349780d6564a76b", "patch": "@@ -2186,12 +2186,12 @@ package body Sem_Ch13 is\n \n                --  Refined_Pre\n \n+               --  Disable the support for aspect Refined_Pre as its static and\n+               --  runtime semantics are still under heavy design.\n+\n                when Aspect_Refined_Pre =>\n-                  Make_Aitem_Pragma\n-                    (Pragma_Argument_Associations => New_List (\n-                       Make_Pragma_Argument_Association (Loc,\n-                         Expression => Relocate_Node (Expr))),\n-                     Pragma_Name                  => Name_Refined_Pre);\n+                  Error_Msg_NE (\"aspect & is not supported\", Aspect, Id);\n+                  goto Continue;\n \n                --  Refined_State\n "}, {"sha": "1193a9cc349eb79a7f19e19b17113b190278e828", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9072f0698d42b378d15906853349780d6564a76b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9072f0698d42b378d15906853349780d6564a76b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=9072f0698d42b378d15906853349780d6564a76b", "patch": "@@ -17219,11 +17219,11 @@ package body Sem_Prag is\n \n          begin\n             --  Disable the support for pragma Refined_Pre as its static and\n-            --  runtime semantics are still under heavy design.\n+            --  runtime semantics are still under heavy design. The pragma is\n+            --  silently ignored.\n \n             if Pname = Name_Refined_Pre then\n-               Error_Pragma (\"pragma % is not supported\");\n-               return;\n+               Set_Is_Ignored (N);\n             end if;\n \n             Analyze_Refined_Pragma (Spec_Id, Body_Id, Legal);"}]}