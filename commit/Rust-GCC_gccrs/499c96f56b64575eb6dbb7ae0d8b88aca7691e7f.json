{"sha": "499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk5Yzk2ZjU2YjY0NTc1ZWI2ZGJiN2FlMGQ4Yjg4YWNhNzY5MWU3Zg==", "commit": {"author": {"name": "Douglas Gregor", "email": "doug.gregor@gmail.com", "date": "2006-10-16T19:08:22Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2006-10-16T19:08:22Z"}, "message": "Makefile.am (tr1_headers): Add new tuple_defs.h.\n\n2006-10-16  Douglas Gregor  <doug.gregor@gmail.com>\n\n\t* include/Makefile.am (tr1_headers): Add new tuple_defs.h.\n\t* include/Makefile.in (tr1_headers): Regenerate.\n\t* include/tr1/tuple (tuple): Move declaration to tuple_defs.h.\n\t(get): Ditto.\n\t(operator==): Ditto.\n\t(operator<): Ditto.\n\t(operator!=): Ditto.\n\t(operator>): Ditto.\n\t(operator<=): Ditto.\n\t(operator>=): Ditto.\n\t(__stripped_tuple_type): Ditto.\n\tInclude tuple.defs.h\n\t* include/tr1/tuple_iterate.h (tuple): Use\n\t_GLIBCXX_TUPLE_ALL_TEMPLATE_PARAMS_UNNAMED macro instead of 10\n\t\"typename\"s.\n\t(tuple_element): Use _GLIBCXX_TUPLE_ALL_TEMPLATE_PARAMS and\n\t_GLIBCXX_TYPLE_ALL_TEMPLATE_ARGS instead of 10\n\tparameters/arguments.\n\t* include/tr1/tuple_defs.h: New header, contains declarations and\n\tdefinitions for the tuple template with all arguments.\n\t* include/tr1/repeat.h (_GLIBCXX_TUPLE_ALL_TEMPLATE_PARAMS): New.\n\t(_GLIBCXX_TUPLE_ALL_TEMPLATE_PARAMS_UNNAMED): New.\n\t(_GLIBCXX_TUPLE_ALL_TEMPLATE_ARGS): New.\n\t(_GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS): New.\n\t(_GLIBCXX_TEMPLATE_ARGS_STRIPPED): New.\n\t* scripts/gen_includers.pl: Update.\n\t* scripts/gen_includers2.pl: New.\n\nFrom-SVN: r117790", "tree": {"sha": "97aa987e97c9fa8875bbd7caafc23bdc6db11927", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97aa987e97c9fa8875bbd7caafc23bdc6db11927"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/comments", "author": {"login": "DougGregor", "id": 989428, "node_id": "MDQ6VXNlcjk4OTQyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/989428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DougGregor", "html_url": "https://github.com/DougGregor", "followers_url": "https://api.github.com/users/DougGregor/followers", "following_url": "https://api.github.com/users/DougGregor/following{/other_user}", "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}", "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions", "organizations_url": "https://api.github.com/users/DougGregor/orgs", "repos_url": "https://api.github.com/users/DougGregor/repos", "events_url": "https://api.github.com/users/DougGregor/events{/privacy}", "received_events_url": "https://api.github.com/users/DougGregor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5f90c88f61f38c8b08a7d3883ed0b1943b8e2dc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f90c88f61f38c8b08a7d3883ed0b1943b8e2dc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f90c88f61f38c8b08a7d3883ed0b1943b8e2dc2"}], "stats": {"total": 437, "additions": 277, "deletions": 160}, "files": [{"sha": "0bac304ba150b20c0415a0ac34c34cf24eb77fd8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "patch": "@@ -1,3 +1,33 @@\n+2006-10-16  Douglas Gregor  <doug.gregor@gmail.com>\n+\n+\t* include/Makefile.am (tr1_headers): Add new tuple_defs.h.\n+\t* include/Makefile.in (tr1_headers): Regenerate.\n+\t* include/tr1/tuple (tuple): Move declaration to tuple_defs.h.\n+\t(get): Ditto.\n+\t(operator==): Ditto.\n+\t(operator<): Ditto.\n+\t(operator!=): Ditto.\n+\t(operator>): Ditto.\n+\t(operator<=): Ditto.\n+\t(operator>=): Ditto.\n+\t(__stripped_tuple_type): Ditto.\n+\tInclude tuple.defs.h\n+\t* include/tr1/tuple_iterate.h (tuple): Use\n+\t_GLIBCXX_TUPLE_ALL_TEMPLATE_PARAMS_UNNAMED macro instead of 10\n+\t\"typename\"s.\n+\t(tuple_element): Use _GLIBCXX_TUPLE_ALL_TEMPLATE_PARAMS and\n+\t_GLIBCXX_TYPLE_ALL_TEMPLATE_ARGS instead of 10\n+\tparameters/arguments.\n+\t* include/tr1/tuple_defs.h: New header, contains declarations and\n+\tdefinitions for the tuple template with all arguments.\n+\t* include/tr1/repeat.h (_GLIBCXX_TUPLE_ALL_TEMPLATE_PARAMS): New.\n+\t(_GLIBCXX_TUPLE_ALL_TEMPLATE_PARAMS_UNNAMED): New.\n+\t(_GLIBCXX_TUPLE_ALL_TEMPLATE_ARGS): New.\n+\t(_GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS): New.\n+\t(_GLIBCXX_TEMPLATE_ARGS_STRIPPED): New.\n+\t* scripts/gen_includers.pl: Update.\n+\t* scripts/gen_includers2.pl: New.\t\n+\n 2006-10-16  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/29095 continued"}, {"sha": "9339af44cddceb5e09816edaa841f1c4fa7af3ea", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "patch": "@@ -47,6 +47,7 @@ subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n+\t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/crossconfig.m4 \\"}, {"sha": "9fbc81fcdccf7258e9281327c933cfe65d41337e", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "patch": "@@ -599,6 +599,7 @@ tr1_headers = \\\n \t${tr1_srcdir}/stdlib.h \\\n \t${tr1_srcdir}/tgmath.h \\\n \t${tr1_srcdir}/tuple \\\n+\t${tr1_srcdir}/tuple_defs.h \\\n \t${tr1_srcdir}/tuple_iterate.h \\\n \t${tr1_srcdir}/type_traits \\\n \t${tr1_srcdir}/type_traits_fwd.h \\"}, {"sha": "9f9c29912d407811f9c7d73eb7a56250455ba14e", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "patch": "@@ -42,6 +42,7 @@ subdir = include\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n+\t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/crossconfig.m4 \\\n@@ -819,6 +820,7 @@ tr1_headers = \\\n \t${tr1_srcdir}/stdlib.h \\\n \t${tr1_srcdir}/tgmath.h \\\n \t${tr1_srcdir}/tuple \\\n+\t${tr1_srcdir}/tuple_defs.h \\\n \t${tr1_srcdir}/tuple_iterate.h \\\n \t${tr1_srcdir}/type_traits \\\n \t${tr1_srcdir}/type_traits_fwd.h \\"}, {"sha": "ba24f29f861010e328bcb2947cf1b3a17676c3f8", "filename": "libstdc++-v3/include/tr1/repeat.h", "status": "modified", "additions": 50, "deletions": 9, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frepeat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frepeat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frepeat.h?ref=499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "patch": "@@ -37,6 +37,12 @@\n #  error Internal error: _GLIBCXX_REPEAT_HEADER must be set\n #endif /* _GLIBCXX_REPEAT_HEADER */\n \n+#ifndef _GLIBCXX_TUPLE_ALL_TEMPLATE_PARAMS\n+#  define _GLIBCXX_TUPLE_ALL_TEMPLATE_PARAMS typename _T1, typename _T2, typename _T3, typename _T4, typename _T5, typename _T6, typename _T7, typename _T8, typename _T9, typename _T10\n+#  define _GLIBCXX_TUPLE_ALL_TEMPLATE_PARAMS_UNNAMED typename, typename, typename, typename, typename, typename, typename, typename, typename, typename\n+#  define _GLIBCXX_TUPLE_ALL_TEMPLATE_ARGS _T1, _T2, _T3, _T4, _T5, _T6, _T7, _T8, _T9, _T10\n+#endif\n+\n #define _GLIBCXX_NUM_ARGS 0\n #define _GLIBCXX_COMMA\n #define _GLIBCXX_TEMPLATE_PARAMS\n@@ -57,6 +63,8 @@\n #define _GLIBCXX_TUPLE_ADD_CREF\n #define _GLIBCXX_TUPLE_COPY_INIT\n #define _GLIBCXX_TUPLE_ASSIGN\n+#define _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS\n+#define _GLIBCXX_TEMPLATE_ARGS_STRIPPED\n #define _GLIBCXX_TEMPLATE_PARAMS_U\n #define _GLIBCXX_TEMPLATE_ARGS_U\n #define _GLIBCXX_REF_WRAP_PARAMS\n@@ -70,6 +78,8 @@\n #undef _GLIBCXX_REF_WRAP_PARAMS\n #undef _GLIBCXX_TEMPLATE_ARGS_U\n #undef _GLIBCXX_TEMPLATE_PARAMS_U\n+#undef _GLIBCXX_TEMPLATE_ARGS_STRIPPED\n+#undef _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS\n #undef _GLIBCXX_TUPLE_ASSIGN\n #undef _GLIBCXX_TUPLE_COPY_INIT\n #undef _GLIBCXX_TUPLE_ADD_CREF\n@@ -111,6 +121,8 @@\n #define _GLIBCXX_TUPLE_ADD_CREF typename __add_c_ref<_T1>::type __a1\n #define _GLIBCXX_TUPLE_COPY_INIT _M_arg1(__in._M_arg1)\n #define _GLIBCXX_TUPLE_ASSIGN _M_arg1 = __in._M_arg1;\n+#define _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS typename _T1 = _NullClass\n+#define _GLIBCXX_TEMPLATE_ARGS_STRIPPED typename __strip_reference_wrapper<_T1>::__type\n #define _GLIBCXX_TEMPLATE_PARAMS_U typename _U1\n #define _GLIBCXX_TEMPLATE_ARGS_U _U1\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1)\n@@ -124,6 +136,8 @@\n #undef _GLIBCXX_REF_WRAP_PARAMS\n #undef _GLIBCXX_TEMPLATE_ARGS_U\n #undef _GLIBCXX_TEMPLATE_PARAMS_U\n+#undef _GLIBCXX_TEMPLATE_ARGS_STRIPPED\n+#undef _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS\n #undef _GLIBCXX_TUPLE_ASSIGN\n #undef _GLIBCXX_TUPLE_COPY_INIT\n #undef _GLIBCXX_TUPLE_ADD_CREF\n@@ -165,6 +179,8 @@\n #define _GLIBCXX_TUPLE_ADD_CREF typename __add_c_ref<_T1>::type __a1, typename __add_c_ref<_T2>::type __a2\n #define _GLIBCXX_TUPLE_COPY_INIT _M_arg1(__in._M_arg1), _M_arg2(__in._M_arg2)\n #define _GLIBCXX_TUPLE_ASSIGN _M_arg1 = __in._M_arg1; _M_arg2 = __in._M_arg2;\n+#define _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS typename _T1 = _NullClass, typename _T2 = _NullClass\n+#define _GLIBCXX_TEMPLATE_ARGS_STRIPPED typename __strip_reference_wrapper<_T1>::__type, typename __strip_reference_wrapper<_T2>::__type\n #define _GLIBCXX_TEMPLATE_PARAMS_U typename _U1, typename _U2\n #define _GLIBCXX_TEMPLATE_ARGS_U _U1, _U2\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1), ref(__a2)\n@@ -178,6 +194,8 @@\n #undef _GLIBCXX_REF_WRAP_PARAMS\n #undef _GLIBCXX_TEMPLATE_ARGS_U\n #undef _GLIBCXX_TEMPLATE_PARAMS_U\n+#undef _GLIBCXX_TEMPLATE_ARGS_STRIPPED\n+#undef _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS\n #undef _GLIBCXX_TUPLE_ASSIGN\n #undef _GLIBCXX_TUPLE_COPY_INIT\n #undef _GLIBCXX_TUPLE_ADD_CREF\n@@ -198,7 +216,6 @@\n #undef _GLIBCXX_TEMPLATE_PARAMS\n #undef _GLIBCXX_COMMA\n #undef _GLIBCXX_NUM_ARGS\n-\n #define _GLIBCXX_NUM_ARGS 3\n #define _GLIBCXX_COMMA ,\n #define _GLIBCXX_TEMPLATE_PARAMS typename _T1, typename _T2, typename _T3\n@@ -219,6 +236,8 @@\n #define _GLIBCXX_TUPLE_ADD_CREF typename __add_c_ref<_T1>::type __a1, typename __add_c_ref<_T2>::type __a2, typename __add_c_ref<_T3>::type __a3\n #define _GLIBCXX_TUPLE_COPY_INIT _M_arg1(__in._M_arg1), _M_arg2(__in._M_arg2), _M_arg3(__in._M_arg3)\n #define _GLIBCXX_TUPLE_ASSIGN _M_arg1 = __in._M_arg1; _M_arg2 = __in._M_arg2; _M_arg3 = __in._M_arg3;\n+#define _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS typename _T1 = _NullClass, typename _T2 = _NullClass, typename _T3 = _NullClass\n+#define _GLIBCXX_TEMPLATE_ARGS_STRIPPED typename __strip_reference_wrapper<_T1>::__type, typename __strip_reference_wrapper<_T2>::__type, typename __strip_reference_wrapper<_T3>::__type\n #define _GLIBCXX_TEMPLATE_PARAMS_U typename _U1, typename _U2, typename _U3\n #define _GLIBCXX_TEMPLATE_ARGS_U _U1, _U2, _U3\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1), ref(__a2), ref(__a3)\n@@ -232,6 +251,8 @@\n #undef _GLIBCXX_REF_WRAP_PARAMS\n #undef _GLIBCXX_TEMPLATE_ARGS_U\n #undef _GLIBCXX_TEMPLATE_PARAMS_U\n+#undef _GLIBCXX_TEMPLATE_ARGS_STRIPPED\n+#undef _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS\n #undef _GLIBCXX_TUPLE_ASSIGN\n #undef _GLIBCXX_TUPLE_COPY_INIT\n #undef _GLIBCXX_TUPLE_ADD_CREF\n@@ -252,7 +273,6 @@\n #undef _GLIBCXX_TEMPLATE_PARAMS\n #undef _GLIBCXX_COMMA\n #undef _GLIBCXX_NUM_ARGS\n-\n #define _GLIBCXX_NUM_ARGS 4\n #define _GLIBCXX_COMMA ,\n #define _GLIBCXX_TEMPLATE_PARAMS typename _T1, typename _T2, typename _T3, typename _T4\n@@ -273,6 +293,8 @@\n #define _GLIBCXX_TUPLE_ADD_CREF typename __add_c_ref<_T1>::type __a1, typename __add_c_ref<_T2>::type __a2, typename __add_c_ref<_T3>::type __a3, typename __add_c_ref<_T4>::type __a4\n #define _GLIBCXX_TUPLE_COPY_INIT _M_arg1(__in._M_arg1), _M_arg2(__in._M_arg2), _M_arg3(__in._M_arg3), _M_arg4(__in._M_arg4)\n #define _GLIBCXX_TUPLE_ASSIGN _M_arg1 = __in._M_arg1; _M_arg2 = __in._M_arg2; _M_arg3 = __in._M_arg3; _M_arg4 = __in._M_arg4;\n+#define _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS typename _T1 = _NullClass, typename _T2 = _NullClass, typename _T3 = _NullClass, typename _T4 = _NullClass\n+#define _GLIBCXX_TEMPLATE_ARGS_STRIPPED typename __strip_reference_wrapper<_T1>::__type, typename __strip_reference_wrapper<_T2>::__type, typename __strip_reference_wrapper<_T3>::__type, typename __strip_reference_wrapper<_T4>::__type\n #define _GLIBCXX_TEMPLATE_PARAMS_U typename _U1, typename _U2, typename _U3, typename _U4\n #define _GLIBCXX_TEMPLATE_ARGS_U _U1, _U2, _U3, _U4\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1), ref(__a2), ref(__a3), ref(__a4)\n@@ -286,6 +308,8 @@\n #undef _GLIBCXX_REF_WRAP_PARAMS\n #undef _GLIBCXX_TEMPLATE_ARGS_U\n #undef _GLIBCXX_TEMPLATE_PARAMS_U\n+#undef _GLIBCXX_TEMPLATE_ARGS_STRIPPED\n+#undef _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS\n #undef _GLIBCXX_TUPLE_ASSIGN\n #undef _GLIBCXX_TUPLE_COPY_INIT\n #undef _GLIBCXX_TUPLE_ADD_CREF\n@@ -306,7 +330,6 @@\n #undef _GLIBCXX_TEMPLATE_PARAMS\n #undef _GLIBCXX_COMMA\n #undef _GLIBCXX_NUM_ARGS\n-\n #define _GLIBCXX_NUM_ARGS 5\n #define _GLIBCXX_COMMA ,\n #define _GLIBCXX_TEMPLATE_PARAMS typename _T1, typename _T2, typename _T3, typename _T4, typename _T5\n@@ -327,6 +350,8 @@\n #define _GLIBCXX_TUPLE_ADD_CREF typename __add_c_ref<_T1>::type __a1, typename __add_c_ref<_T2>::type __a2, typename __add_c_ref<_T3>::type __a3, typename __add_c_ref<_T4>::type __a4, typename __add_c_ref<_T5>::type __a5\n #define _GLIBCXX_TUPLE_COPY_INIT _M_arg1(__in._M_arg1), _M_arg2(__in._M_arg2), _M_arg3(__in._M_arg3), _M_arg4(__in._M_arg4), _M_arg5(__in._M_arg5)\n #define _GLIBCXX_TUPLE_ASSIGN _M_arg1 = __in._M_arg1; _M_arg2 = __in._M_arg2; _M_arg3 = __in._M_arg3; _M_arg4 = __in._M_arg4; _M_arg5 = __in._M_arg5;\n+#define _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS typename _T1 = _NullClass, typename _T2 = _NullClass, typename _T3 = _NullClass, typename _T4 = _NullClass, typename _T5 = _NullClass\n+#define _GLIBCXX_TEMPLATE_ARGS_STRIPPED typename __strip_reference_wrapper<_T1>::__type, typename __strip_reference_wrapper<_T2>::__type, typename __strip_reference_wrapper<_T3>::__type, typename __strip_reference_wrapper<_T4>::__type, typename __strip_reference_wrapper<_T5>::__type\n #define _GLIBCXX_TEMPLATE_PARAMS_U typename _U1, typename _U2, typename _U3, typename _U4, typename _U5\n #define _GLIBCXX_TEMPLATE_ARGS_U _U1, _U2, _U3, _U4, _U5\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1), ref(__a2), ref(__a3), ref(__a4), ref(__a5)\n@@ -340,6 +365,8 @@\n #undef _GLIBCXX_REF_WRAP_PARAMS\n #undef _GLIBCXX_TEMPLATE_ARGS_U\n #undef _GLIBCXX_TEMPLATE_PARAMS_U\n+#undef _GLIBCXX_TEMPLATE_ARGS_STRIPPED\n+#undef _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS\n #undef _GLIBCXX_TUPLE_ASSIGN\n #undef _GLIBCXX_TUPLE_COPY_INIT\n #undef _GLIBCXX_TUPLE_ADD_CREF\n@@ -360,7 +387,6 @@\n #undef _GLIBCXX_TEMPLATE_PARAMS\n #undef _GLIBCXX_COMMA\n #undef _GLIBCXX_NUM_ARGS\n-\n #define _GLIBCXX_NUM_ARGS 6\n #define _GLIBCXX_COMMA ,\n #define _GLIBCXX_TEMPLATE_PARAMS typename _T1, typename _T2, typename _T3, typename _T4, typename _T5, typename _T6\n@@ -381,6 +407,8 @@\n #define _GLIBCXX_TUPLE_ADD_CREF typename __add_c_ref<_T1>::type __a1, typename __add_c_ref<_T2>::type __a2, typename __add_c_ref<_T3>::type __a3, typename __add_c_ref<_T4>::type __a4, typename __add_c_ref<_T5>::type __a5, typename __add_c_ref<_T6>::type __a6\n #define _GLIBCXX_TUPLE_COPY_INIT _M_arg1(__in._M_arg1), _M_arg2(__in._M_arg2), _M_arg3(__in._M_arg3), _M_arg4(__in._M_arg4), _M_arg5(__in._M_arg5), _M_arg6(__in._M_arg6)\n #define _GLIBCXX_TUPLE_ASSIGN _M_arg1 = __in._M_arg1; _M_arg2 = __in._M_arg2; _M_arg3 = __in._M_arg3; _M_arg4 = __in._M_arg4; _M_arg5 = __in._M_arg5; _M_arg6 = __in._M_arg6;\n+#define _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS typename _T1 = _NullClass, typename _T2 = _NullClass, typename _T3 = _NullClass, typename _T4 = _NullClass, typename _T5 = _NullClass, typename _T6 = _NullClass\n+#define _GLIBCXX_TEMPLATE_ARGS_STRIPPED typename __strip_reference_wrapper<_T1>::__type, typename __strip_reference_wrapper<_T2>::__type, typename __strip_reference_wrapper<_T3>::__type, typename __strip_reference_wrapper<_T4>::__type, typename __strip_reference_wrapper<_T5>::__type, typename __strip_reference_wrapper<_T6>::__type\n #define _GLIBCXX_TEMPLATE_PARAMS_U typename _U1, typename _U2, typename _U3, typename _U4, typename _U5, typename _U6\n #define _GLIBCXX_TEMPLATE_ARGS_U _U1, _U2, _U3, _U4, _U5, _U6\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1), ref(__a2), ref(__a3), ref(__a4), ref(__a5), ref(__a6)\n@@ -394,6 +422,8 @@\n #undef _GLIBCXX_REF_WRAP_PARAMS\n #undef _GLIBCXX_TEMPLATE_ARGS_U\n #undef _GLIBCXX_TEMPLATE_PARAMS_U\n+#undef _GLIBCXX_TEMPLATE_ARGS_STRIPPED\n+#undef _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS\n #undef _GLIBCXX_TUPLE_ASSIGN\n #undef _GLIBCXX_TUPLE_COPY_INIT\n #undef _GLIBCXX_TUPLE_ADD_CREF\n@@ -414,7 +444,6 @@\n #undef _GLIBCXX_TEMPLATE_PARAMS\n #undef _GLIBCXX_COMMA\n #undef _GLIBCXX_NUM_ARGS\n-\n #define _GLIBCXX_NUM_ARGS 7\n #define _GLIBCXX_COMMA ,\n #define _GLIBCXX_TEMPLATE_PARAMS typename _T1, typename _T2, typename _T3, typename _T4, typename _T5, typename _T6, typename _T7\n@@ -435,6 +464,8 @@\n #define _GLIBCXX_TUPLE_ADD_CREF typename __add_c_ref<_T1>::type __a1, typename __add_c_ref<_T2>::type __a2, typename __add_c_ref<_T3>::type __a3, typename __add_c_ref<_T4>::type __a4, typename __add_c_ref<_T5>::type __a5, typename __add_c_ref<_T6>::type __a6, typename __add_c_ref<_T7>::type __a7\n #define _GLIBCXX_TUPLE_COPY_INIT _M_arg1(__in._M_arg1), _M_arg2(__in._M_arg2), _M_arg3(__in._M_arg3), _M_arg4(__in._M_arg4), _M_arg5(__in._M_arg5), _M_arg6(__in._M_arg6), _M_arg7(__in._M_arg7)\n #define _GLIBCXX_TUPLE_ASSIGN _M_arg1 = __in._M_arg1; _M_arg2 = __in._M_arg2; _M_arg3 = __in._M_arg3; _M_arg4 = __in._M_arg4; _M_arg5 = __in._M_arg5; _M_arg6 = __in._M_arg6; _M_arg7 = __in._M_arg7;\n+#define _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS typename _T1 = _NullClass, typename _T2 = _NullClass, typename _T3 = _NullClass, typename _T4 = _NullClass, typename _T5 = _NullClass, typename _T6 = _NullClass, typename _T7 = _NullClass\n+#define _GLIBCXX_TEMPLATE_ARGS_STRIPPED typename __strip_reference_wrapper<_T1>::__type, typename __strip_reference_wrapper<_T2>::__type, typename __strip_reference_wrapper<_T3>::__type, typename __strip_reference_wrapper<_T4>::__type, typename __strip_reference_wrapper<_T5>::__type, typename __strip_reference_wrapper<_T6>::__type, typename __strip_reference_wrapper<_T7>::__type\n #define _GLIBCXX_TEMPLATE_PARAMS_U typename _U1, typename _U2, typename _U3, typename _U4, typename _U5, typename _U6, typename _U7\n #define _GLIBCXX_TEMPLATE_ARGS_U _U1, _U2, _U3, _U4, _U5, _U6, _U7\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1), ref(__a2), ref(__a3), ref(__a4), ref(__a5), ref(__a6), ref(__a7)\n@@ -448,6 +479,8 @@\n #undef _GLIBCXX_REF_WRAP_PARAMS\n #undef _GLIBCXX_TEMPLATE_ARGS_U\n #undef _GLIBCXX_TEMPLATE_PARAMS_U\n+#undef _GLIBCXX_TEMPLATE_ARGS_STRIPPED\n+#undef _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS\n #undef _GLIBCXX_TUPLE_ASSIGN\n #undef _GLIBCXX_TUPLE_COPY_INIT\n #undef _GLIBCXX_TUPLE_ADD_CREF\n@@ -468,7 +501,6 @@\n #undef _GLIBCXX_TEMPLATE_PARAMS\n #undef _GLIBCXX_COMMA\n #undef _GLIBCXX_NUM_ARGS\n-\n #define _GLIBCXX_NUM_ARGS 8\n #define _GLIBCXX_COMMA ,\n #define _GLIBCXX_TEMPLATE_PARAMS typename _T1, typename _T2, typename _T3, typename _T4, typename _T5, typename _T6, typename _T7, typename _T8\n@@ -489,6 +521,8 @@\n #define _GLIBCXX_TUPLE_ADD_CREF typename __add_c_ref<_T1>::type __a1, typename __add_c_ref<_T2>::type __a2, typename __add_c_ref<_T3>::type __a3, typename __add_c_ref<_T4>::type __a4, typename __add_c_ref<_T5>::type __a5, typename __add_c_ref<_T6>::type __a6, typename __add_c_ref<_T7>::type __a7, typename __add_c_ref<_T8>::type __a8\n #define _GLIBCXX_TUPLE_COPY_INIT _M_arg1(__in._M_arg1), _M_arg2(__in._M_arg2), _M_arg3(__in._M_arg3), _M_arg4(__in._M_arg4), _M_arg5(__in._M_arg5), _M_arg6(__in._M_arg6), _M_arg7(__in._M_arg7), _M_arg8(__in._M_arg8)\n #define _GLIBCXX_TUPLE_ASSIGN _M_arg1 = __in._M_arg1; _M_arg2 = __in._M_arg2; _M_arg3 = __in._M_arg3; _M_arg4 = __in._M_arg4; _M_arg5 = __in._M_arg5; _M_arg6 = __in._M_arg6; _M_arg7 = __in._M_arg7; _M_arg8 = __in._M_arg8;\n+#define _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS typename _T1 = _NullClass, typename _T2 = _NullClass, typename _T3 = _NullClass, typename _T4 = _NullClass, typename _T5 = _NullClass, typename _T6 = _NullClass, typename _T7 = _NullClass, typename _T8 = _NullClass\n+#define _GLIBCXX_TEMPLATE_ARGS_STRIPPED typename __strip_reference_wrapper<_T1>::__type, typename __strip_reference_wrapper<_T2>::__type, typename __strip_reference_wrapper<_T3>::__type, typename __strip_reference_wrapper<_T4>::__type, typename __strip_reference_wrapper<_T5>::__type, typename __strip_reference_wrapper<_T6>::__type, typename __strip_reference_wrapper<_T7>::__type, typename __strip_reference_wrapper<_T8>::__type\n #define _GLIBCXX_TEMPLATE_PARAMS_U typename _U1, typename _U2, typename _U3, typename _U4, typename _U5, typename _U6, typename _U7, typename _U8\n #define _GLIBCXX_TEMPLATE_ARGS_U _U1, _U2, _U3, _U4, _U5, _U6, _U7, _U8\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1), ref(__a2), ref(__a3), ref(__a4), ref(__a5), ref(__a6), ref(__a7), ref(__a8)\n@@ -502,6 +536,8 @@\n #undef _GLIBCXX_REF_WRAP_PARAMS\n #undef _GLIBCXX_TEMPLATE_ARGS_U\n #undef _GLIBCXX_TEMPLATE_PARAMS_U\n+#undef _GLIBCXX_TEMPLATE_ARGS_STRIPPED\n+#undef _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS\n #undef _GLIBCXX_TUPLE_ASSIGN\n #undef _GLIBCXX_TUPLE_COPY_INIT\n #undef _GLIBCXX_TUPLE_ADD_CREF\n@@ -522,7 +558,6 @@\n #undef _GLIBCXX_TEMPLATE_PARAMS\n #undef _GLIBCXX_COMMA\n #undef _GLIBCXX_NUM_ARGS\n-\n #define _GLIBCXX_NUM_ARGS 9\n #define _GLIBCXX_COMMA ,\n #define _GLIBCXX_TEMPLATE_PARAMS typename _T1, typename _T2, typename _T3, typename _T4, typename _T5, typename _T6, typename _T7, typename _T8, typename _T9\n@@ -543,6 +578,8 @@\n #define _GLIBCXX_TUPLE_ADD_CREF typename __add_c_ref<_T1>::type __a1, typename __add_c_ref<_T2>::type __a2, typename __add_c_ref<_T3>::type __a3, typename __add_c_ref<_T4>::type __a4, typename __add_c_ref<_T5>::type __a5, typename __add_c_ref<_T6>::type __a6, typename __add_c_ref<_T7>::type __a7, typename __add_c_ref<_T8>::type __a8, typename __add_c_ref<_T9>::type __a9\n #define _GLIBCXX_TUPLE_COPY_INIT _M_arg1(__in._M_arg1), _M_arg2(__in._M_arg2), _M_arg3(__in._M_arg3), _M_arg4(__in._M_arg4), _M_arg5(__in._M_arg5), _M_arg6(__in._M_arg6), _M_arg7(__in._M_arg7), _M_arg8(__in._M_arg8), _M_arg9(__in._M_arg9)\n #define _GLIBCXX_TUPLE_ASSIGN _M_arg1 = __in._M_arg1; _M_arg2 = __in._M_arg2; _M_arg3 = __in._M_arg3; _M_arg4 = __in._M_arg4; _M_arg5 = __in._M_arg5; _M_arg6 = __in._M_arg6; _M_arg7 = __in._M_arg7; _M_arg8 = __in._M_arg8; _M_arg9 = __in._M_arg9;\n+#define _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS typename _T1 = _NullClass, typename _T2 = _NullClass, typename _T3 = _NullClass, typename _T4 = _NullClass, typename _T5 = _NullClass, typename _T6 = _NullClass, typename _T7 = _NullClass, typename _T8 = _NullClass, typename _T9 = _NullClass\n+#define _GLIBCXX_TEMPLATE_ARGS_STRIPPED typename __strip_reference_wrapper<_T1>::__type, typename __strip_reference_wrapper<_T2>::__type, typename __strip_reference_wrapper<_T3>::__type, typename __strip_reference_wrapper<_T4>::__type, typename __strip_reference_wrapper<_T5>::__type, typename __strip_reference_wrapper<_T6>::__type, typename __strip_reference_wrapper<_T7>::__type, typename __strip_reference_wrapper<_T8>::__type, typename __strip_reference_wrapper<_T9>::__type\n #define _GLIBCXX_TEMPLATE_PARAMS_U typename _U1, typename _U2, typename _U3, typename _U4, typename _U5, typename _U6, typename _U7, typename _U8, typename _U9\n #define _GLIBCXX_TEMPLATE_ARGS_U _U1, _U2, _U3, _U4, _U5, _U6, _U7, _U8, _U9\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1), ref(__a2), ref(__a3), ref(__a4), ref(__a5), ref(__a6), ref(__a7), ref(__a8), ref(__a9)\n@@ -556,6 +593,8 @@\n #undef _GLIBCXX_REF_WRAP_PARAMS\n #undef _GLIBCXX_TEMPLATE_ARGS_U\n #undef _GLIBCXX_TEMPLATE_PARAMS_U\n+#undef _GLIBCXX_TEMPLATE_ARGS_STRIPPED\n+#undef _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS\n #undef _GLIBCXX_TUPLE_ASSIGN\n #undef _GLIBCXX_TUPLE_COPY_INIT\n #undef _GLIBCXX_TUPLE_ADD_CREF\n@@ -576,7 +615,6 @@\n #undef _GLIBCXX_TEMPLATE_PARAMS\n #undef _GLIBCXX_COMMA\n #undef _GLIBCXX_NUM_ARGS\n-\n #define _GLIBCXX_LAST_INCLUDE\n #define _GLIBCXX_NUM_ARGS 10\n #define _GLIBCXX_COMMA ,\n@@ -598,6 +636,8 @@\n #define _GLIBCXX_TUPLE_ADD_CREF typename __add_c_ref<_T1>::type __a1, typename __add_c_ref<_T2>::type __a2, typename __add_c_ref<_T3>::type __a3, typename __add_c_ref<_T4>::type __a4, typename __add_c_ref<_T5>::type __a5, typename __add_c_ref<_T6>::type __a6, typename __add_c_ref<_T7>::type __a7, typename __add_c_ref<_T8>::type __a8, typename __add_c_ref<_T9>::type __a9, typename __add_c_ref<_T10>::type __a10\n #define _GLIBCXX_TUPLE_COPY_INIT _M_arg1(__in._M_arg1), _M_arg2(__in._M_arg2), _M_arg3(__in._M_arg3), _M_arg4(__in._M_arg4), _M_arg5(__in._M_arg5), _M_arg6(__in._M_arg6), _M_arg7(__in._M_arg7), _M_arg8(__in._M_arg8), _M_arg9(__in._M_arg9), _M_arg10(__in._M_arg10)\n #define _GLIBCXX_TUPLE_ASSIGN _M_arg1 = __in._M_arg1; _M_arg2 = __in._M_arg2; _M_arg3 = __in._M_arg3; _M_arg4 = __in._M_arg4; _M_arg5 = __in._M_arg5; _M_arg6 = __in._M_arg6; _M_arg7 = __in._M_arg7; _M_arg8 = __in._M_arg8; _M_arg9 = __in._M_arg9; _M_arg10 = __in._M_arg10;\n+#define _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS typename _T1 = _NullClass, typename _T2 = _NullClass, typename _T3 = _NullClass, typename _T4 = _NullClass, typename _T5 = _NullClass, typename _T6 = _NullClass, typename _T7 = _NullClass, typename _T8 = _NullClass, typename _T9 = _NullClass, typename _T10 = _NullClass\n+#define _GLIBCXX_TEMPLATE_ARGS_STRIPPED typename __strip_reference_wrapper<_T1>::__type, typename __strip_reference_wrapper<_T2>::__type, typename __strip_reference_wrapper<_T3>::__type, typename __strip_reference_wrapper<_T4>::__type, typename __strip_reference_wrapper<_T5>::__type, typename __strip_reference_wrapper<_T6>::__type, typename __strip_reference_wrapper<_T7>::__type, typename __strip_reference_wrapper<_T8>::__type, typename __strip_reference_wrapper<_T9>::__type, typename __strip_reference_wrapper<_T10>::__type\n #define _GLIBCXX_TEMPLATE_PARAMS_U typename _U1, typename _U2, typename _U3, typename _U4, typename _U5, typename _U6, typename _U7, typename _U8, typename _U9, typename _U10\n #define _GLIBCXX_TEMPLATE_ARGS_U _U1, _U2, _U3, _U4, _U5, _U6, _U7, _U8, _U9, _U10\n #define _GLIBCXX_REF_WRAP_PARAMS ref(__a1), ref(__a2), ref(__a3), ref(__a4), ref(__a5), ref(__a6), ref(__a7), ref(__a8), ref(__a9), ref(__a10)\n@@ -611,6 +651,8 @@\n #undef _GLIBCXX_REF_WRAP_PARAMS\n #undef _GLIBCXX_TEMPLATE_ARGS_U\n #undef _GLIBCXX_TEMPLATE_PARAMS_U\n+#undef _GLIBCXX_TEMPLATE_ARGS_STRIPPED\n+#undef _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS\n #undef _GLIBCXX_TUPLE_ASSIGN\n #undef _GLIBCXX_TUPLE_COPY_INIT\n #undef _GLIBCXX_TUPLE_ADD_CREF\n@@ -631,6 +673,5 @@\n #undef _GLIBCXX_TEMPLATE_PARAMS\n #undef _GLIBCXX_COMMA\n #undef _GLIBCXX_NUM_ARGS\n-\n #undef _GLIBCXX_LAST_INCLUDE\n "}, {"sha": "4ec88bd92143df66ff265bac369e00291956015f", "filename": "libstdc++-v3/include/tr1/tuple", "status": "modified", "additions": 21, "deletions": 136, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple?ref=499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "patch": "@@ -47,13 +47,6 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n  // when the tuple is not maximum possible size.\n  struct _NullClass { };\n \n- template<typename _Tp0 = _NullClass, typename _Tp1 = _NullClass,\n-          typename _Tp2 = _NullClass, typename _Tp3 = _NullClass,\n-          typename _Tp4 = _NullClass, typename _Tp5 = _NullClass,\n-          typename _Tp6 = _NullClass, typename _Tp7 = _NullClass,\n-          typename _Tp8 = _NullClass, typename _Tp9 = _NullClass>\n-   class tuple;\n-\n  /// Gives the type of the ith element of a given tuple type.\n  template<int __i, typename _Tp>\n    struct tuple_element;\n@@ -86,38 +79,32 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n  // Returns a const reference to the ith element of a tuple.\n  // Any const or non-const ref elements are returned with their original type.\n-   template<int __i, typename _Tp0, typename _Tp1, typename _Tp2, typename _Tp3,\n-                   typename _Tp4, typename _Tp5, typename _Tp6, typename _Tp7,\n-                   typename _Tp8, typename _Tp9>\n-   typename __add_ref<typename tuple_element<__i, tuple<_Tp0, _Tp1, _Tp2,\n-                                                        _Tp3, _Tp4, _Tp5,\n-                                                        _Tp6, _Tp7, _Tp8,\n-                                                        _Tp9> >::type>::type\n-   get(tuple<_Tp0, _Tp1, _Tp2, _Tp3, _Tp4, _Tp5, _Tp6, _Tp7, _Tp8,\n-             _Tp9>& __t)\n-   {\n-     return __get_helper<__i, tuple<_Tp0, _Tp1, _Tp2, _Tp3, _Tp4, _Tp5, _Tp6,\n-                                    _Tp7, _Tp8, _Tp9> >::get_value(__t);\n-   }\n-\n- template<int __i, typename _Tp0, typename _Tp1, typename _Tp2, typename _Tp3,\n-                   typename _Tp4, typename _Tp5, typename _Tp6, typename _Tp7,\n-                   typename _Tp8, typename _Tp9>\n-   typename __add_c_ref<typename tuple_element<__i, tuple<_Tp0, _Tp1, _Tp2,\n-                                                          _Tp3, _Tp4, _Tp5,\n-                                                          _Tp6, _Tp7, _Tp8,\n-                                                          _Tp9> >::type>::type\n-   get(const tuple<_Tp0, _Tp1, _Tp2, _Tp3, _Tp4, _Tp5, _Tp6, _Tp7, _Tp8,\n-                   _Tp9>& __t)\n-   {\n-     return __get_helper<__i, tuple<_Tp0, _Tp1, _Tp2, _Tp3, _Tp4, _Tp5, _Tp6,\n-                                    _Tp7, _Tp8, _Tp9> >::get_value(__t);\n-   }\n \n  // This class helps construct the various comparison operations on tuples\n  template<int __check_equal_size, int __i, int __j, typename _Tp, typename _Up>\n    struct __tuple_compare;\n \n+ // Helper which adds a reference to a type when given a reference_wrapper\n+ template<typename _Tp>\n+   struct __strip_reference_wrapper\n+   {\n+       typedef _Tp __type;\n+   };\n+\n+ template<typename _Tp>\n+   struct __strip_reference_wrapper<reference_wrapper<_Tp> >\n+   {\n+     typedef _Tp& __type;\n+   };\n+\n+ template<typename _Tp>\n+   struct __strip_reference_wrapper<const reference_wrapper<_Tp> >\n+   {\n+       typedef _Tp& __type;\n+   };\n+\n+  #include \"tuple_defs.h\"\n+\n  template<int __i, int __j, typename _Tp, typename _Up>\n    struct __tuple_compare<0, __i, __j, _Tp, _Up>\n    {\n@@ -142,108 +129,6 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n      { return false; }\n    };\n \n- template<typename _T1, typename _T2, typename _T3, typename _T4, typename _T5,\n-          typename _T6, typename _T7, typename _T8, typename _T9, typename _T10,\n-          typename _U1, typename _U2, typename _U3, typename _U4, typename _U5,\n-          typename _U6, typename _U7, typename _U8, typename _U9, typename _U10>\n- bool\n- operator==(const tuple<_T1, _T2, _T3, _T4, _T5, _T6, _T7, _T8, _T9, _T10>& __t,\n-            const tuple<_U1, _U2, _U3, _U4, _U5, _U6, _U7, _U8, _U9, _U10>& __u)\n- {\n-   typedef tuple<_T1, _T2, _T3, _T4, _T5, _T6, _T7, _T8, _T9, _T10> _Tp;\n-   typedef tuple<_U1, _U2, _U3, _U4, _U5, _U6, _U7, _U8,_U9, _U10> _Up;\n-   return __tuple_compare<tuple_size<_Tp>::value - tuple_size<_Tp>::value, 0,\n-                          tuple_size<_Tp>::value, _Tp, _Up>::__eq(__t, __u);\n- }\n-\n- template<typename _T1, typename _T2, typename _T3, typename _T4, typename _T5,\n-          typename _T6, typename _T7, typename _T8, typename _T9, typename _T10,\n-          typename _U1, typename _U2, typename _U3, typename _U4, typename _U5,\n-          typename _U6, typename _U7, typename _U8, typename _U9, typename _U10>\n- bool\n- operator<(const tuple<_T1, _T2, _T3, _T4, _T5, _T6, _T7, _T8, _T9, _T10>& __t,\n-           const tuple<_U1, _U2, _U3, _U4, _U5, _U6, _U7, _U8, _U9, _U10>& __u)\n- {\n-   typedef tuple<_T1, _T2, _T3, _T4, _T5, _T6, _T7, _T8, _T9, _T10> _Tp;\n-   typedef tuple<_U1, _U2, _U3, _U4, _U5, _U6, _U7, _U8,_U9, _U10> _Up;\n-   return __tuple_compare<tuple_size<_Tp>::value - tuple_size<_Tp>::value, 0,\n-                          tuple_size<_Tp>::value, _Tp, _Up>::__less(__t, __u);\n- }\n-\n- template<typename _T1, typename _T2, typename _T3, typename _T4, typename _T5,\n-          typename _T6, typename _T7, typename _T8, typename _T9, typename _T10,\n-          typename _U1, typename _U2, typename _U3, typename _U4, typename _U5,\n-          typename _U6, typename _U7, typename _U8, typename _U9, typename _U10>\n- bool\n- operator!=(const tuple<_T1, _T2, _T3, _T4, _T5, _T6, _T7, _T8, _T9, _T10>& __t,\n-            const tuple<_U1, _U2, _U3, _U4, _U5, _U6, _U7, _U8, _U9, _U10>& __u)\n- { return !(__t == __u); }\n-\n- template<typename _T1, typename _T2, typename _T3, typename _T4, typename _T5,\n-          typename _T6, typename _T7, typename _T8, typename _T9, typename _T10,\n-          typename _U1, typename _U2, typename _U3, typename _U4, typename _U5,\n-          typename _U6, typename _U7, typename _U8, typename _U9, typename _U10>\n- bool\n- operator>(const tuple<_T1, _T2, _T3, _T4, _T5, _T6, _T7, _T8, _T9, _T10>& __t,\n-           const tuple<_U1, _U2, _U3, _U4, _U5, _U6, _U7, _U8, _U9, _U10>& __u)\n- { return __u < __t; }\n-\n- template<typename _T1, typename _T2, typename _T3, typename _T4, typename _T5,\n-          typename _T6, typename _T7, typename _T8, typename _T9, typename _T10,\n-          typename _U1, typename _U2, typename _U3, typename _U4, typename _U5,\n-          typename _U6, typename _U7, typename _U8, typename _U9, typename _U10>\n- bool\n- operator<=(const tuple<_T1, _T2, _T3, _T4, _T5, _T6, _T7, _T8, _T9, _T10>& __t,\n-            const tuple<_U1, _U2, _U3, _U4, _U5, _U6, _U7, _U8, _U9, _U10>& __u)\n- { return !(__u < __t); }\n-\n- template<typename _T1, typename _T2, typename _T3, typename _T4, typename _T5,\n-          typename _T6, typename _T7, typename _T8, typename _T9, typename _T10,\n-          typename _U1, typename _U2, typename _U3, typename _U4, typename _U5,\n-          typename _U6, typename _U7, typename _U8, typename _U9, typename _U10>\n- bool\n- operator>=(const tuple<_T1, _T2, _T3, _T4, _T5, _T6, _T7, _T8, _T9, _T10>& __t,\n-            const tuple<_U1, _U2, _U3, _U4, _U5, _U6, _U7, _U8, _U9, _U10>& __u)\n- { return !(__t < __u); }\n-\n- // Helper which adds a reference to a type when given a reference_wrapper\n- template<typename _Tp>\n-   struct __strip_reference_wrapper\n-   {\n-       typedef _Tp __type;\n-   };\n-\n- template<typename _Tp>\n-   struct __strip_reference_wrapper<reference_wrapper<_Tp> >\n-   {\n-     typedef _Tp& __type;\n-   };\n-\n- template<typename _Tp>\n-   struct __strip_reference_wrapper<const reference_wrapper<_Tp> >\n-   {\n-       typedef _Tp& __type;\n-   };\n-\n- template<typename _Tp0 = _NullClass, typename _Tp1 = _NullClass,\n-          typename _Tp2 = _NullClass, typename _Tp3 = _NullClass,\n-          typename _Tp4 = _NullClass, typename _Tp5 = _NullClass,\n-          typename _Tp6 = _NullClass, typename _Tp7 = _NullClass,\n-          typename _Tp8 = _NullClass, typename _Tp9 = _NullClass>\n-   struct __stripped_tuple_type\n-   {\n-     typedef tuple<typename __strip_reference_wrapper<_Tp0>::__type,\n-                   typename __strip_reference_wrapper<_Tp1>::__type,\n-                   typename __strip_reference_wrapper<_Tp2>::__type,\n-                   typename __strip_reference_wrapper<_Tp3>::__type,\n-                   typename __strip_reference_wrapper<_Tp4>::__type,\n-                   typename __strip_reference_wrapper<_Tp5>::__type,\n-                   typename __strip_reference_wrapper<_Tp6>::__type,\n-                   typename __strip_reference_wrapper<_Tp7>::__type,\n-                   typename __strip_reference_wrapper<_Tp8>::__type,\n-                   typename __strip_reference_wrapper<_Tp9>::__type>      __type;\n-   };\n-\n  // A class (and instance) which can be used in 'tie' when an element\n  // of a tuple is not required\n  struct swallow_assign"}, {"sha": "35a739ee4f89c27b111dd74b4a13983b9142e3ee", "filename": "libstdc++-v3/include/tr1/tuple_defs.h", "status": "added", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple_defs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple_defs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple_defs.h?ref=499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "patch": "@@ -0,0 +1,108 @@\n+// class template tuple -*- C++ -*-\n+\n+// Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+#ifndef _GLIBCXX_REPEAT_HEADER\n+#  define _GLIBCXX_REPEAT_HEADER \"tuple_defs.h\"\n+#  include \"repeat.h\"\n+#  undef _GLIBCXX_REPEAT_HEADER\n+#endif\n+\n+#ifdef _GLIBCXX_LAST_INCLUDE\n+// Chris Jefferson <chris@bubblescope.net>\n+   template<_GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS> class tuple;\n+\n+   // Returns a const reference to the ith element of a tuple.\n+   // Any const or non-const ref elements are returned with their original type.\n+   template<int __i, _GLIBCXX_TEMPLATE_PARAMS>\n+   typename __add_ref<typename tuple_element<__i, tuple<_GLIBCXX_TEMPLATE_ARGS> >::type>::type\n+   get(tuple<_GLIBCXX_TEMPLATE_ARGS>& __t)\n+   {\n+     return __get_helper<__i, tuple<_GLIBCXX_TEMPLATE_ARGS> >::get_value(__t);\n+   }\n+\n+   template<int __i, _GLIBCXX_TEMPLATE_PARAMS>\n+   typename __add_c_ref<typename tuple_element<__i, tuple<_GLIBCXX_TEMPLATE_ARGS> >::type>::type\n+   get(const tuple<_GLIBCXX_TEMPLATE_ARGS>& __t)\n+   {\n+     return __get_helper<__i, tuple<_GLIBCXX_TEMPLATE_ARGS> >::get_value(__t);\n+   }\n+\n+ template<_GLIBCXX_TEMPLATE_PARAMS, _GLIBCXX_TEMPLATE_PARAMS_U>\n+ bool\n+ operator==(const tuple<_GLIBCXX_TEMPLATE_ARGS>& __t,\n+            const tuple<_GLIBCXX_TEMPLATE_ARGS_U>& __u)\n+ {\n+   typedef tuple<_GLIBCXX_TEMPLATE_ARGS> _Tp;\n+   typedef tuple<_GLIBCXX_TEMPLATE_ARGS_U> _Up;\n+   return __tuple_compare<tuple_size<_Tp>::value - tuple_size<_Tp>::value, 0,\n+                          tuple_size<_Tp>::value, _Tp, _Up>::__eq(__t, __u);\n+ }\n+\n+ template<_GLIBCXX_TEMPLATE_PARAMS, _GLIBCXX_TEMPLATE_PARAMS_U>\n+ bool\n+ operator<(const tuple<_GLIBCXX_TEMPLATE_ARGS>& __t,\n+           const tuple<_GLIBCXX_TEMPLATE_ARGS_U>& __u)\n+ {\n+   typedef tuple<_GLIBCXX_TEMPLATE_ARGS> _Tp;\n+   typedef tuple<_GLIBCXX_TEMPLATE_ARGS_U> _Up;\n+   return __tuple_compare<tuple_size<_Tp>::value - tuple_size<_Tp>::value, 0,\n+                          tuple_size<_Tp>::value, _Tp, _Up>::__less(__t, __u);\n+ }\n+\n+ template<_GLIBCXX_TEMPLATE_PARAMS, _GLIBCXX_TEMPLATE_PARAMS_U>\n+ bool\n+ operator!=(const tuple<_GLIBCXX_TEMPLATE_ARGS>& __t,\n+            const tuple<_GLIBCXX_TEMPLATE_ARGS_U>& __u)\n+ { return !(__t == __u); }\n+\n+ template<_GLIBCXX_TEMPLATE_PARAMS, _GLIBCXX_TEMPLATE_PARAMS_U>\n+ bool\n+ operator>(const tuple<_GLIBCXX_TEMPLATE_ARGS>& __t,\n+           const tuple<_GLIBCXX_TEMPLATE_ARGS_U>& __u)\n+ { return __u < __t; }\n+\n+ template<_GLIBCXX_TEMPLATE_PARAMS, _GLIBCXX_TEMPLATE_PARAMS_U>\n+ bool\n+ operator<=(const tuple<_GLIBCXX_TEMPLATE_ARGS>& __t,\n+            const tuple<_GLIBCXX_TEMPLATE_ARGS_U>& __u)\n+ { return !(__u < __t); }\n+\n+ template<_GLIBCXX_TEMPLATE_PARAMS, _GLIBCXX_TEMPLATE_PARAMS_U>\n+ bool\n+ operator>=(const tuple<_GLIBCXX_TEMPLATE_ARGS>& __t,\n+            const tuple<_GLIBCXX_TEMPLATE_ARGS_U>& __u)\n+ { return !(__t < __u); }\n+\n+ template<_GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS>\n+   struct __stripped_tuple_type\n+   {\n+     typedef tuple<_GLIBCXX_TEMPLATE_ARGS_STRIPPED>      __type;\n+   };\n+\n+#endif\n+"}, {"sha": "8d5757658182e62540a108c1ac6e30c2d850d662", "filename": "libstdc++-v3/include/tr1/tuple_iterate.h", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple_iterate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple_iterate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple_iterate.h?ref=499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "patch": "@@ -108,8 +108,7 @@ template<_GLIBCXX_TEMPLATE_PARAMS>\n     template<int __i, typename __Type>\n       friend class __get_helper;\n \n-    template<typename, typename, typename, typename, typename,\n-             typename, typename, typename, typename, typename>\n+    template<_GLIBCXX_TUPLE_ALL_TEMPLATE_PARAMS_UNNAMED>\n       friend class tuple;\n   };\n \n@@ -130,12 +129,8 @@ template<typename _Tp>\n     };\n \n /// @brief class tuple_element\n-template<typename _T1, typename _T2, typename _T3, typename _T4,\n-         typename _T5, typename _T6, typename _T7, typename _T8,\n-         typename _T9, typename _T10>\n-   struct tuple_element<_GLIBCXX_NUM_ARGS, tuple<_T1, _T2, _T3, _T4,\n-                                                _T5, _T6, _T7, _T8, _T9,\n-                                                _T10> >\n+template<_GLIBCXX_TUPLE_ALL_TEMPLATE_PARAMS>\n+   struct tuple_element<_GLIBCXX_NUM_ARGS, tuple<_GLIBCXX_TUPLE_ALL_TEMPLATE_ARGS> >\n   { typedef _GLIBCXX_T_NUM_ARGS_PLUS_1 type; };\n \n #endif"}, {"sha": "799720c425b74d14dee5aa3733547b980880df40", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "patch": "@@ -42,6 +42,7 @@ DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n+\t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/crossconfig.m4 \\"}, {"sha": "9b2a0611ffc391e8f574125d31739322f6be72b5", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "patch": "@@ -44,6 +44,7 @@ subdir = libsupc++\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n+\t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/crossconfig.m4 \\"}, {"sha": "bb30735dceb65e7690165b54e313e88354c64763", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "patch": "@@ -42,6 +42,7 @@ subdir = po\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n+\t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/crossconfig.m4 \\"}, {"sha": "477f028408fe999806a306fb2a9c57516d570f2d", "filename": "libstdc++-v3/scripts/gen_includers.pl", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Fscripts%2Fgen_includers.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Fscripts%2Fgen_includers.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fscripts%2Fgen_includers.pl?ref=499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "patch": "@@ -4,6 +4,7 @@\n $max = shift @ARGV;\n \n $template_params = \"typename _T1\";\n+$template_params_unnamed = \"typename\";\n $template_args = \"_T1\";\n $params = \"_T1 __a1\";\n $ref_params = \"_T1& __a1\";\n@@ -16,6 +17,8 @@\n $tuple_add_cref = \"typename __add_c_ref<_T1>::type __a1\";\n $tuple_copy_init = \"_M_arg1(__in._M_arg1)\";\n $tuple_assign = \"_M_arg1 = __in._M_arg1;\";\n+$template_params_null_class = \"typename _T1 = _NullClass\";\n+$template_args_stripped = \"typename __strip_reference_wrapper<_T1>::__type\";\n $template_params_u = \"typename _U1\";\n $template_args_u = \"_U1\";\n $ref_wrap_params = \"ref(__a1)\";\n@@ -28,6 +31,7 @@\n   $params_shifted = $params;\n   $args_shifted = $args;\n   $template_params .= \", typename _T$num_args\";\n+  $template_params_unnamed .= \", typename\";\n   $template_args .= \", _T$num_args\";\n   $params .= \", _T$num_args __a$num_args\";\n   $ref_params .=\", _T$num_args& __a$num_args\";\n@@ -40,11 +44,16 @@\n   $tuple_add_cref .= \", typename __add_c_ref<_T$num_args>::type __a$num_args\";\n   $tuple_copy_init .= \", _M_arg$num_args(__in._M_arg$num_args)\";\n   $tuple_assign .= \" _M_arg$num_args = __in._M_arg$num_args;\";\n+  $template_params_null_class .= \", typename _T$num_args = _NullClass\";\n+  $template_args_stripped .= \", typename __strip_reference_wrapper<_T$num_args>::__type\";\n   $template_params_u .= \", typename _U$num_args\";\n   $template_args_u .= \", _U$num_args\";\n   $ref_wrap_params .= \", ref(__a$num_args)\";\n   $ref_template_args .= \", _T$num_args&\";\n \n+  if ($num_args == $max) {\n+    print \"#define _GLIBCXX_LAST_INCLUDE\\n\"\n+  }\n   print \"#define _GLIBCXX_NUM_ARGS $num_args\\n\";\n   print \"#define _GLIBCXX_COMMA ,\\n\";\n   print \"#define _GLIBCXX_TEMPLATE_PARAMS $template_params\\n\";\n@@ -65,25 +74,23 @@\n   print \"#define _GLIBCXX_TUPLE_ADD_CREF $tuple_add_cref\\n\";\n   print \"#define _GLIBCXX_TUPLE_COPY_INIT $tuple_copy_init\\n\";\n   print \"#define _GLIBCXX_TUPLE_ASSIGN $tuple_assign\\n\";\n+  print \"#define _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS $template_params_null_class\\n\";\n+  print \"#define _GLIBCXX_TEMPLATE_ARGS_STRIPPED $template_args_stripped\\n\";\n   print \"#define _GLIBCXX_TEMPLATE_PARAMS_U $template_params_u\\n\";\n   print \"#define _GLIBCXX_TEMPLATE_ARGS_U $template_args_u\\n\";\n   print \"#define _GLIBCXX_REF_WRAP_PARAMS $ref_wrap_params\\n\";\n   print \"#define _GLIBCXX_REF_TEMPLATE_ARGS $ref_template_args\\n\";\n   print \"#define _GLIBCXX_NUM_ARGS_PLUS_1 $next_args\\n\";\n   print \"#define _GLIBCXX_T_NUM_ARGS_PLUS_1 _T$next_args\\n\";\n-  if ($num_args == $max) {\n-    print \"#define _GLIBCXX_LAST_INCLUDE\\n\"\n-  }\n   print \"#include _GLIBCXX_REPEAT_HEADER\\n\";\n-  if ($num_args == $max) {\n-    print \"#undef _GLIBCXX_LAST_INCLUDE\\n\"\n-  }\n   print \"#undef _GLIBCXX_T_NUM_ARGS_PLUS_1\\n\";\n   print \"#undef _GLIBCXX_NUM_ARGS_PLUS_1\\n\";\n   print \"#undef _GLIBCXX_REF_TEMPLATE_ARGS\\n\";\n   print \"#undef _GLIBCXX_REF_WRAP_PARAMS\\n\";\n   print \"#undef _GLIBCXX_TEMPLATE_ARGS_U\\n\";\n   print \"#undef _GLIBCXX_TEMPLATE_PARAMS_U\\n\";\n+  print \"#undef _GLIBCXX_TEMPLATE_ARGS_STRIPPED\\n\";\n+  print \"#undef _GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS\\n\";\n   print \"#undef _GLIBCXX_TUPLE_ASSIGN\\n\";\n   print \"#undef _GLIBCXX_TUPLE_COPY_INIT\\n\";\n   print \"#undef _GLIBCXX_TUPLE_ADD_CREF\\n\";\n@@ -104,5 +111,16 @@\n   print \"#undef _GLIBCXX_TEMPLATE_PARAMS\\n\";\n   print \"#undef _GLIBCXX_COMMA\\n\";\n   print \"#undef _GLIBCXX_NUM_ARGS\\n\";\n-  print \"\\n\";\n+  if ($num_args == $max) {\n+    print \"#undef _GLIBCXX_LAST_INCLUDE\\n\"\n+  }\n }\n+\n+print \"\\n\";\n+print \"#ifndef _GLIBCXX_TUPLE_ALL_TEMPLATE_PARAMS\\n\";\n+print \"#  define _GLIBCXX_TUPLE_ALL_TEMPLATE_PARAMS $template_params\\n\";\n+print \"#  define _GLIBCXX_TUPLE_ALL_TEMPLATE_PARAMS_UNNAMED $template_params_unnamed\\n\";\n+print \"#  define _GLIBCXX_TUPLE_ALL_TEMPLATE_ARGS $template_args\\n\";\n+print \"#endif\\n\";\n+print \"\\n\";\n+"}, {"sha": "88e9becd1a47e7523bc613f2aedf8fa946d7d21b", "filename": "libstdc++-v3/scripts/gen_includers2.pl", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Fscripts%2Fgen_includers2.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Fscripts%2Fgen_includers2.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fscripts%2Fgen_includers2.pl?ref=499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "patch": "@@ -0,0 +1,31 @@\n+#!/usr/bin/perl -w\n+use English;\n+\n+$max = shift @ARGV;\n+\n+$template_params = \"typename _U1\";\n+$template_args = \"_U1\";\n+$params = \"_U1& __u1\";\n+$args = \"__u1\";\n+\n+for ($num_args = 2; $num_args <= $max; ++$num_args) {\n+  $template_params .= \", typename _U$num_args\";\n+  $template_args .= \", _U$num_args\";\n+  $params .= \", _U$num_args& __u$num_args\";\n+  $args .= \", __u$num_args\";\n+  print \"#define _GLIBCXX_BIND_NUM_ARGS $num_args\\n\";\n+  print \"#define _GLIBCXX_BIND_COMMA ,\\n\";\n+  print \"#define _GLIBCXX_BIND_TEMPLATE_PARAMS $template_params\\n\";\n+  print \"#define _GLIBCXX_BIND_TEMPLATE_ARGS $template_args\\n\";\n+  print \"#define _GLIBCXX_BIND_PARAMS $params\\n\";\n+  print \"#define _GLIBCXX_BIND_ARGS $args\\n\";\n+  print \"#include _GLIBCXX_BIND_REPEAT_HEADER\\n\";\n+  print \"#undef _GLIBCXX_BIND_ARGS\\n\";\n+  print \"#undef _GLIBCXX_BIND_PARAMS\\n\";\n+  print \"#undef _GLIBCXX_BIND_TEMPLATE_ARGS\\n\";\n+  print \"#undef _GLIBCXX_BIND_TEMPLATE_PARAMS\\n\";\n+  print \"#undef _GLIBCXX_BIND_COMMA\\n\";\n+  print \"#undef _GLIBCXX_BIND_NUM_ARGS\\n\";\n+  print \"\\n\";\n+}\n+"}, {"sha": "6000d2167fad012414c23aa833687aa8a78f4c95", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "patch": "@@ -42,6 +42,7 @@ subdir = src\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n+\t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/crossconfig.m4 \\"}, {"sha": "6f443ec1745476668a6895c6409fbca80fe4f40d", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c96f56b64575eb6dbb7ae0d8b88aca7691e7f/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=499c96f56b64575eb6dbb7ae0d8b88aca7691e7f", "patch": "@@ -42,6 +42,7 @@ subdir = testsuite\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n+\t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/crossconfig.m4 \\"}]}