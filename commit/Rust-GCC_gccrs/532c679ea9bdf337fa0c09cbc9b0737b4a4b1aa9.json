{"sha": "532c679ea9bdf337fa0c09cbc9b0737b4a4b1aa9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMyYzY3OWVhOWJkZjMzN2ZhMGMwOWNiYzliMDczN2I0YTRiMWFhOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-16T20:15:37Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-16T20:15:37Z"}, "message": "Core 1148\n\n\tCore 1148\n\t* typeck.c (check_return_expr): Fix conditions for setting\n\tLOOKUP_PREFER_RVALUE.\n\nFrom-SVN: r171071", "tree": {"sha": "66c253d5d159933f9c7c3b6e5800ded9fa34c036", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66c253d5d159933f9c7c3b6e5800ded9fa34c036"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/532c679ea9bdf337fa0c09cbc9b0737b4a4b1aa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/532c679ea9bdf337fa0c09cbc9b0737b4a4b1aa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/532c679ea9bdf337fa0c09cbc9b0737b4a4b1aa9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/532c679ea9bdf337fa0c09cbc9b0737b4a4b1aa9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e676810ed18f44d6b183f7608b3d68b1c5284897", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e676810ed18f44d6b183f7608b3d68b1c5284897", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e676810ed18f44d6b183f7608b3d68b1c5284897"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "fe169832d2a74aeb127188a7811d972cad7e0ca2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/532c679ea9bdf337fa0c09cbc9b0737b4a4b1aa9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/532c679ea9bdf337fa0c09cbc9b0737b4a4b1aa9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=532c679ea9bdf337fa0c09cbc9b0737b4a4b1aa9", "patch": "@@ -1,5 +1,9 @@\n 2011-03-16  Jason Merrill  <jason@redhat.com>\n \n+\tCore 1148\n+\t* typeck.c (check_return_expr): Fix conditions for setting\n+\tLOOKUP_PREFER_RVALUE.\n+\n \t* call.c (build_over_call): Remove require_complete_type_sfinae call.\n \n \tPR c++/48132"}, {"sha": "03aa49ee178f65eedb60f8189db9866d9358a647", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/532c679ea9bdf337fa0c09cbc9b0737b4a4b1aa9/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/532c679ea9bdf337fa0c09cbc9b0737b4a4b1aa9/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=532c679ea9bdf337fa0c09cbc9b0737b4a4b1aa9", "patch": "@@ -7760,12 +7760,19 @@ check_return_expr (tree retval, bool *no_warning)\n \n       /* Under C++0x [12.8/16 class.copy], a returned lvalue is sometimes\n \t treated as an rvalue for the purposes of overload resolution to\n-\t favor move constructors over copy constructors.  */\n-      if ((cxx_dialect != cxx98) \n-          && named_return_value_okay_p\n-          /* The variable must not have the `volatile' qualifier.  */\n-\t  && !CP_TYPE_VOLATILE_P (TREE_TYPE (retval))\n-\t  /* The return type must be a class type.  */\n+\t favor move constructors over copy constructors.\n+\n+         Note that these conditions are similar to, but not as strict as,\n+\t the conditions for the named return value optimization.  */\n+      if ((cxx_dialect != cxx98)\n+          && (TREE_CODE (retval) == VAR_DECL\n+\t      || TREE_CODE (retval) == PARM_DECL)\n+\t  && DECL_CONTEXT (retval) == current_function_decl\n+\t  && !TREE_STATIC (retval)\n+\t  && same_type_p ((TYPE_MAIN_VARIANT (TREE_TYPE (retval))),\n+\t\t\t  (TYPE_MAIN_VARIANT\n+\t\t\t   (TREE_TYPE (TREE_TYPE (current_function_decl)))))\n+\t  /* This is only interesting for class type.  */\n \t  && CLASS_TYPE_P (TREE_TYPE (TREE_TYPE (current_function_decl))))\n \tflags = flags | LOOKUP_PREFER_RVALUE;\n "}, {"sha": "5685b45576c93eb7cbf9d0aa852fb29d796025c0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/532c679ea9bdf337fa0c09cbc9b0737b4a4b1aa9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/532c679ea9bdf337fa0c09cbc9b0737b4a4b1aa9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=532c679ea9bdf337fa0c09cbc9b0737b4a4b1aa9", "patch": "@@ -1,5 +1,7 @@\n 2011-03-16  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/elision2.C: New.\n+\n \t* g++.dg/cpp0x/constexpr-array3.C: New.\n \n 2011-03-16  Jason Merrill  <jason@redhat.com>"}, {"sha": "216b1b59d16f246bde45236cb098e51c7bf92d74", "filename": "gcc/testsuite/g++.dg/cpp0x/elision2.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/532c679ea9bdf337fa0c09cbc9b0737b4a4b1aa9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Felision2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/532c679ea9bdf337fa0c09cbc9b0737b4a4b1aa9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Felision2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Felision2.C?ref=532c679ea9bdf337fa0c09cbc9b0737b4a4b1aa9", "patch": "@@ -0,0 +1,13 @@\n+// Core 1148: should be able to move from value parameter on return\n+// { dg-options -std=c++0x }\n+\n+struct A\n+{\n+  A(const A&) = delete;\n+  A(A&&);\n+};\n+\n+A f (A a)\n+{\n+  return a;\n+}"}]}