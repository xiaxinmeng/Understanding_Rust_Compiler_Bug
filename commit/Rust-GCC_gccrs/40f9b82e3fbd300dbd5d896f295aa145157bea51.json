{"sha": "40f9b82e3fbd300dbd5d896f295aa145157bea51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBmOWI4MmUzZmJkMzAwZGJkNWQ4OTZmMjk1YWExNDUxNTdiZWE1MQ==", "commit": {"author": {"name": "Andy Hutchinson", "email": "hutchinsonandy@aim.com", "date": "2008-06-02T22:23:57Z"}, "committer": {"name": "Andy Hutchinson", "email": "hutchinsonandy@gcc.gnu.org", "date": "2008-06-02T22:23:57Z"}, "message": "pr18241-1.c: Use long on small int target.\n\n* gcc.dg/pr18241-1.c: Use long on small int target.\n* gcc.dg/pr32912-2.c: Ditto.\n* gcc.dg/pr35065.c: Ditto.\n* gcc.dg/pr36300-1.c: Ditto.\n* gcc.dg/pr36300-2.c: Ditto.\n* gcc.dg/pr27639.c: Reduce array size for small int target.\n* gcc.dg/pr28755.c: Skip test if pointers are smaller than 32 bits.\n* gcc.dg/pr36194.c: Reduce constant on small int target.\n* gcc.dg/torture/builtin-frexp-1.c: Ditto.\n\nFrom-SVN: r136302", "tree": {"sha": "87125fd4840275bed874d9a29ddd7c602d39db43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87125fd4840275bed874d9a29ddd7c602d39db43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40f9b82e3fbd300dbd5d896f295aa145157bea51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40f9b82e3fbd300dbd5d896f295aa145157bea51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40f9b82e3fbd300dbd5d896f295aa145157bea51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40f9b82e3fbd300dbd5d896f295aa145157bea51/comments", "author": null, "committer": null, "parents": [{"sha": "cc5134398067049620b781d6c9b36fdd2765dbaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc5134398067049620b781d6c9b36fdd2765dbaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc5134398067049620b781d6c9b36fdd2765dbaf"}], "stats": {"total": 59, "additions": 50, "deletions": 9}, "files": [{"sha": "f87b7e3a28f5119f0b255082c35ed937083f5d6d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=40f9b82e3fbd300dbd5d896f295aa145157bea51", "patch": "@@ -1,3 +1,15 @@\n+2008-06-02  Andy Hutchinson  <hutchinsonandy@aim.com>\n+\n+\t* gcc.dg/pr18241-1.c: Use long on small int target.\n+\t* gcc.dg/pr32912-2.c: Ditto.\n+\t* gcc.dg/pr35065.c: Ditto.\n+\t* gcc.dg/pr36300-1.c: Ditto.\n+\t* gcc.dg/pr36300-2.c: Ditto.\n+\t* gcc.dg/pr27639.c: Reduce array size for small int target.\n+\t* gcc.dg/pr28755.c: Skip test if pointers are smaller than 32 bits.\n+\t* gcc.dg/pr36194.c: Reduce constant on small int target.\n+\t* gcc.dg/torture/builtin-frexp-1.c: Ditto.\n+\n 2008-06-02  Andy Hutchinson  <hutchinsonandy@aim.com>\n \n \t* gcc.dg/torture/pr34330.c: Skip test for targets without pthread."}, {"sha": "a37e77dac64d197174722b41bbddfa40319ad705", "filename": "gcc/testsuite/gcc.dg/pr18241-1.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18241-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18241-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18241-1.c?ref=40f9b82e3fbd300dbd5d896f295aa145157bea51", "patch": "@@ -27,7 +27,11 @@ static inline void tag_clear(struct radix_tree_node *node, int tag, int offset)\n {\n \tint nr;\n \tvolatile unsigned long *addr;\n+#if(__SIZEOF_INT__ >= 4)\t\n \tint mask;\n+#else\n+\tlong mask;\n+#endif\n \t\n \tnr = offset;\n \taddr = &node->tags[tag][0];"}, {"sha": "cb7b1429d4d489b59cd4b5deb8c67ae830118333", "filename": "gcc/testsuite/gcc.dg/pr27639.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27639.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27639.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27639.c?ref=40f9b82e3fbd300dbd5d896f295aa145157bea51", "patch": "@@ -1,8 +1,10 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -std=c99\" } */\n-\n+#if(__SIZEOF_INT__ >= 4)\n char heap[50000];\n-\n+#else\n+char heap[32000];\n+#endif\n int\n main ()\n {"}, {"sha": "9cd1330d1dd725319456f45c6a6d21e710f82c71", "filename": "gcc/testsuite/gcc.dg/pr28755.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28755.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28755.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28755.c?ref=40f9b82e3fbd300dbd5d896f295aa145157bea51", "patch": "@@ -1,5 +1,6 @@\n /* PR middle-end/28755 */\n /* { dg-do compile } */\n+/* { dg-require-effective-target ptr32plus } */\n /* { dg-options \"-Os\" } */\n /* { dg-final { scan-assembler-times \"2112543726\\|7deadbee\" 2 } } */\n "}, {"sha": "f3c754cc346f2743a41d141a3a0f834aadb1fa10", "filename": "gcc/testsuite/gcc.dg/pr32912-2.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32912-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32912-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32912-2.c?ref=40f9b82e3fbd300dbd5d896f295aa145157bea51", "patch": "@@ -3,8 +3,11 @@\n \n extern void abort (void);\n \n+#if(__SIZEOF_INT__ >= 4)\n typedef int __m128i __attribute__ ((__vector_size__ (16)));\n-\n+#else\n+typedef long __m128i __attribute__ ((__vector_size__ (16)));\n+#endif\n __m128i\n foo (void)\n {\n@@ -22,7 +25,11 @@ bar (void)\n int\n main (void)\n {\n+#if(__SIZEOF_INT__ >= 4)\n   union { __m128i v; int i[sizeof (__m128i) / sizeof (int)]; } u, v;\n+#else\n+  union { __m128i v; long i[sizeof (__m128i) / sizeof (long)]; } u, v;\n+#endif\n   int i;\n \n   u.v = foo ();"}, {"sha": "e5984ab0f827d81929db91984a8a2441e26b5ba4", "filename": "gcc/testsuite/gcc.dg/pr35065.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35065.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35065.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35065.c?ref=40f9b82e3fbd300dbd5d896f295aa145157bea51", "patch": "@@ -5,7 +5,11 @@ typedef int vlc_bool_t;\n typedef __SIZE_TYPE__ size_t;\n typedef struct vlc_object_t vlc_object_t;\n typedef long long int64_t;\n+#if(__SIZEOF_INT__ >= 4)\n typedef unsigned int uint32_t;\n+#else\n+typedef unsigned long uint32_t;\n+#endif\n typedef unsigned char uint8_t;\n typedef int64_t mtime_t;\n typedef uint32_t vlc_fourcc_t;"}, {"sha": "070a944e97f535e9979946cca431d76f897b5d80", "filename": "gcc/testsuite/gcc.dg/pr36194.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36194.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36194.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36194.c?ref=40f9b82e3fbd300dbd5d896f295aa145157bea51", "patch": "@@ -6,7 +6,11 @@ void abort (void);\n __attribute__ ((noinline)) void\n f (int i)\n {\n+#if(__SIZEOF_INT__ >= 4)\n   if (i != 0x87654321)\n+#else\n+  if (i != 0x4321)\n+#endif\n     abort ();\n   asm (\"\");\n }"}, {"sha": "e737ab7ff0ced9f3a7012a12a56b431df278309d", "filename": "gcc/testsuite/gcc.dg/pr36300-1.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36300-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36300-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36300-1.c?ref=40f9b82e3fbd300dbd5d896f295aa145157bea51", "patch": "@@ -7,10 +7,13 @@ extern void abort (void);\n \n int main(void)\n {\n-  int U1;\n   long long Y, Y2;\n+#if(__SIZEOF_INT__ >= 4)\n+  int U1;\n+#else\n+  long U1;\n+#endif\n   int t;\n-\n   U1 = -2147483647-1;\n \n   Y = ((long long)(VALUE * VALUE) * 3);"}, {"sha": "9543332683ea48027fdab29db6375b447fe6b3ec", "filename": "gcc/testsuite/gcc.dg/pr36300-2.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36300-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36300-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36300-2.c?ref=40f9b82e3fbd300dbd5d896f295aa145157bea51", "patch": "@@ -7,8 +7,12 @@ extern void abort (void);\n \n int main(void)\n {\n-  int U1;\n   long long Y, Y2;\n+#if(__SIZEOF_INT__ >= 4)\n+  int U1;\n+#else\n+  long U1;\n+#endif\n   unsigned int t;\n \n   U1 = -2147483647-1;"}, {"sha": "2225f825b8288c6f326caa67f07f3a2b4c295312", "filename": "gcc/testsuite/gcc.dg/torture/builtin-frexp-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-frexp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40f9b82e3fbd300dbd5d896f295aa145157bea51/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-frexp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-frexp-1.c?ref=40f9b82e3fbd300dbd5d896f295aa145157bea51", "patch": "@@ -34,17 +34,17 @@ extern void link_error(int);\n /* Test that frexp(ARG,&i) == RES && i == EXP.  Check the sign in\n    case we get -0.0.  */\n #define TESTIT_FREXP(ARG,RES,EXP) do { \\\n-  int i = 123456; \\\n+  int i = 12345; \\\n   if (__builtin_frexpf(ARG##f,&i) != RES##f \\\n       || CKEXP(i,EXP) \\\n       || CKSGN_F(__builtin_frexpf(ARG##f,&i),RES##f)) \\\n     link_error(__LINE__); \\\n-  i = 123456; \\\n+  i = 12345; \\\n   if (__builtin_frexp(ARG,&i) != RES \\\n       || CKEXP(i,EXP) \\\n       || CKSGN(__builtin_frexp(ARG,&i),RES)) \\\n     link_error(__LINE__); \\\n-  i = 123456; \\\n+  i = 12345; \\\n   if (__builtin_frexpl(ARG##l,&i) != RES##l \\\n       || CKEXP(i,EXP) \\\n       || CKSGN_L(__builtin_frexpl(ARG##l,&i),RES##l)) \\"}]}