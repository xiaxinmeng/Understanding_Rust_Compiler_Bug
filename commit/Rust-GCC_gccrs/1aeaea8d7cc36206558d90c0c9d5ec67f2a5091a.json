{"sha": "1aeaea8d7cc36206558d90c0c9d5ec67f2a5091a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFlYWVhOGQ3Y2MzNjIwNjU1OGQ5MGMwYzlkNWVjNjdmMmE1MDkxYQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2004-10-27T02:48:26Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2004-10-27T02:48:26Z"}, "message": "btest-gcc.sh (TESTLOGS): Examine regressions in libstdc++, libffi, and libjava.\n\n\t* btest-gcc.sh (TESTLOGS): Examine regressions in libstdc++,\n\tlibffi, and libjava.\n\nFrom-SVN: r89629", "tree": {"sha": "d100bb7e95a21b2cb3709796759b4468c324a1be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d100bb7e95a21b2cb3709796759b4468c324a1be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1aeaea8d7cc36206558d90c0c9d5ec67f2a5091a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aeaea8d7cc36206558d90c0c9d5ec67f2a5091a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1aeaea8d7cc36206558d90c0c9d5ec67f2a5091a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aeaea8d7cc36206558d90c0c9d5ec67f2a5091a/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "349e19d4e873c113b0287b68cbae1f27ba669db2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/349e19d4e873c113b0287b68cbae1f27ba669db2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/349e19d4e873c113b0287b68cbae1f27ba669db2"}], "stats": {"total": 74, "additions": 41, "deletions": 33}, "files": [{"sha": "7535b4c5e7cc92cf2410096cc14aef4149cf618b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aeaea8d7cc36206558d90c0c9d5ec67f2a5091a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aeaea8d7cc36206558d90c0c9d5ec67f2a5091a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1aeaea8d7cc36206558d90c0c9d5ec67f2a5091a", "patch": "@@ -1,3 +1,8 @@\n+2004-10-26  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* builtins.c (fold_builtin_unordered_cmp): Always bring both\n+\toperands to the same type.\n+\n 2004-10-26  James E Wilson  <wilson@specifixinc.com>\n \n \tPR target/18010"}, {"sha": "4c1d3a4f6fc5a5c69e04d331b5a23657862df697", "filename": "gcc/builtins.c", "status": "modified", "additions": 27, "deletions": 33, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aeaea8d7cc36206558d90c0c9d5ec67f2a5091a/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aeaea8d7cc36206558d90c0c9d5ec67f2a5091a/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=1aeaea8d7cc36206558d90c0c9d5ec67f2a5091a", "patch": "@@ -7602,13 +7602,12 @@ fold_builtin_unordered_cmp (tree exp,\n   tree type = TREE_TYPE (TREE_TYPE (fndecl));\n   enum tree_code code;\n   tree arg0, arg1;\n+  tree type0, type1;\n+  enum tree_code code0, code1;\n+  tree cmp_type = NULL_TREE;\n \n   if (!validate_arglist (arglist, REAL_TYPE, REAL_TYPE, VOID_TYPE))\n     {\n-      enum tree_code code0, code1;\n-      tree type0, type1;\n-      tree cmp_type = 0;\n-\n       /* Check that we have exactly two arguments.  */\n       if (arglist == 0 || TREE_CHAIN (arglist) == 0)\n \t{\n@@ -7622,39 +7621,34 @@ fold_builtin_unordered_cmp (tree exp,\n \t\t IDENTIFIER_POINTER (DECL_NAME (fndecl)));\n \t  return error_mark_node;\n \t}\n-\n-      arg0 = TREE_VALUE (arglist);\n-      arg1 = TREE_VALUE (TREE_CHAIN (arglist));\n-\n-      type0 = TREE_TYPE (arg0);\n-      type1 = TREE_TYPE (arg1);\n-\n-      code0 = TREE_CODE (type0);\n-      code1 = TREE_CODE (type1);\n-\n-      if (code0 == REAL_TYPE && code1 == REAL_TYPE)\n-\t/* Choose the wider of two real types.  */\n-        cmp_type = TYPE_PRECISION (type0) >= TYPE_PRECISION (type1)\n-\t\t   ? type0 : type1;\n-      else if (code0 == REAL_TYPE && code1 == INTEGER_TYPE)\n-\tcmp_type = type0;\n-      else if (code0 == INTEGER_TYPE && code1 == REAL_TYPE)\n-\tcmp_type = type1;\n-      else\n-\t{\n-\t  error (\"non-floating-point argument to function %qs\",\n-\t\t IDENTIFIER_POINTER (DECL_NAME (fndecl)));\n-\t  return error_mark_node;\n-\t}\n-\n-      arg0 = fold_convert (cmp_type, arg0);\n-      arg1 = fold_convert (cmp_type, arg1);\n     }\n+\n+  arg0 = TREE_VALUE (arglist);\n+  arg1 = TREE_VALUE (TREE_CHAIN (arglist));\n+  \n+  type0 = TREE_TYPE (arg0);\n+  type1 = TREE_TYPE (arg1);\n+  \n+  code0 = TREE_CODE (type0);\n+  code1 = TREE_CODE (type1);\n+  \n+  if (code0 == REAL_TYPE && code1 == REAL_TYPE)\n+    /* Choose the wider of two real types.  */\n+    cmp_type = TYPE_PRECISION (type0) >= TYPE_PRECISION (type1)\n+      ? type0 : type1;\n+  else if (code0 == REAL_TYPE && code1 == INTEGER_TYPE)\n+    cmp_type = type0;\n+  else if (code0 == INTEGER_TYPE && code1 == REAL_TYPE)\n+    cmp_type = type1;\n   else\n     {\n-      arg0 = TREE_VALUE (arglist);\n-      arg1 = TREE_VALUE (TREE_CHAIN (arglist));\n+      error (\"non-floating-point argument to function %qs\",\n+\t\t IDENTIFIER_POINTER (DECL_NAME (fndecl)));\n+      return error_mark_node;\n     }\n+  \n+  arg0 = fold_convert (cmp_type, arg0);\n+  arg1 = fold_convert (cmp_type, arg1);\n \n   if (unordered_code == UNORDERED_EXPR)\n     {"}, {"sha": "22d8fa79b53e8a0fdd5d18389671d3add7650333", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aeaea8d7cc36206558d90c0c9d5ec67f2a5091a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aeaea8d7cc36206558d90c0c9d5ec67f2a5091a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1aeaea8d7cc36206558d90c0c9d5ec67f2a5091a", "patch": "@@ -1,3 +1,7 @@\n+2004-10-26  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* gcc.c-torture/compile/20041026-1.c: New.\n+\n 2004-10-26  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/18093"}, {"sha": "3d6ae8fcd4a114aa5ef918cb3afa9ef152103d38", "filename": "gcc/testsuite/gcc.c-torture/compile/20041026-1.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aeaea8d7cc36206558d90c0c9d5ec67f2a5091a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20041026-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aeaea8d7cc36206558d90c0c9d5ec67f2a5091a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20041026-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20041026-1.c?ref=1aeaea8d7cc36206558d90c0c9d5ec67f2a5091a", "patch": "@@ -0,0 +1,5 @@\n+int\n+foo (double x, long double y)\n+{\n+  return __builtin_isgreater (x, y);\n+}"}]}