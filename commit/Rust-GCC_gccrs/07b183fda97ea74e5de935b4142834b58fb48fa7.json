{"sha": "07b183fda97ea74e5de935b4142834b58fb48fa7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdiMTgzZmRhOTdlYTc0ZTVkZTkzNWI0MTQyODM0YjU4ZmI0OGZhNw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-11-13T23:28:25Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-11-13T23:28:25Z"}, "message": "rtti.c (get_pseudo_ti_init): Ensure that the offset field of the base type info initializer has the correct type.\n\n\n\t* rtti.c (get_pseudo_ti_init): Ensure that the offset field of the\n\tbase type info initializer has the correct type.\n\nFrom-SVN: r118785", "tree": {"sha": "b2ff19cb54880cca1336dae1fe4c53e1edebf3c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2ff19cb54880cca1336dae1fe4c53e1edebf3c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07b183fda97ea74e5de935b4142834b58fb48fa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b183fda97ea74e5de935b4142834b58fb48fa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07b183fda97ea74e5de935b4142834b58fb48fa7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b183fda97ea74e5de935b4142834b58fb48fa7/comments", "author": null, "committer": null, "parents": [{"sha": "cb3d3842bb742467251c01f4b5d2a522becd2380", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb3d3842bb742467251c01f4b5d2a522becd2380", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb3d3842bb742467251c01f4b5d2a522becd2380"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "25e444cc921f424d847ed2f47065100a53b9cb87", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b183fda97ea74e5de935b4142834b58fb48fa7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b183fda97ea74e5de935b4142834b58fb48fa7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=07b183fda97ea74e5de935b4142834b58fb48fa7", "patch": "@@ -1,3 +1,8 @@\n+2006-11-13  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* rtti.c (get_pseudo_ti_init): Ensure that the offset field of the\n+\tbase type info initializer has the correct type.\n+\n 2006-11-13  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/29518"}, {"sha": "02272e84ee3ba0ca59ef80fa60b492ba24932e94", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b183fda97ea74e5de935b4142834b58fb48fa7/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b183fda97ea74e5de935b4142834b58fb48fa7/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=07b183fda97ea74e5de935b4142834b58fb48fa7", "patch": "@@ -1037,6 +1037,7 @@ get_pseudo_ti_init (tree type, unsigned tk_index)\n \ttree binfo = TYPE_BINFO (type);\n \tint nbases = BINFO_N_BASE_BINFOS (binfo);\n \tVEC(tree,gc) *base_accesses = BINFO_BASE_ACCESSES (binfo);\n+\ttree offset_type = integer_types[itk_long];\n \ttree base_inits = NULL_TREE;\n \tint ix;\n \n@@ -1059,17 +1060,17 @@ get_pseudo_ti_init (tree type, unsigned tk_index)\n \t\t/* We store the vtable offset at which the virtual\n \t\t   base offset can be found.  */\n \t\toffset = BINFO_VPTR_FIELD (base_binfo);\n-\t\toffset = convert (sizetype, offset);\n \t\tflags |= 1;\n \t      }\n \t    else\n \t      offset = BINFO_OFFSET (base_binfo);\n \n \t    /* Combine offset and flags into one field.  */\n-\t    offset = cp_build_binary_op (LSHIFT_EXPR, offset,\n-\t\t\t\t\t build_int_cst (NULL_TREE, 8));\n-\t    offset = cp_build_binary_op (BIT_IOR_EXPR, offset,\n-\t\t\t\t\t build_int_cst (NULL_TREE, flags));\n+\t    offset = fold_convert (offset_type, offset);\n+\t    offset = fold_build2 (LSHIFT_EXPR, offset_type, offset,\n+\t\t\t\t  build_int_cst (offset_type, 8));\n+\t    offset = fold_build2 (BIT_IOR_EXPR, offset_type, offset,\n+\t\t\t\t  build_int_cst (offset_type, flags));\n \t    base_init = tree_cons (NULL_TREE, offset, base_init);\n \t    base_init = tree_cons (NULL_TREE, tinfo, base_init);\n \t    base_init = build_constructor_from_list (NULL_TREE, base_init);"}]}