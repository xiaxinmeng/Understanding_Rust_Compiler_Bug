{"sha": "fd6daec9735879205ee5a3902af19a58dfde0b81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ2ZGFlYzk3MzU4NzkyMDVlZTVhMzkwMmFmMTlhNThkZmRlMGI4MQ==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-09-13T16:53:25Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-09-13T16:53:25Z"}, "message": "dse.c: remove some typedefs that hide pointerness\n\ngcc/ChangeLog:\n\n2015-09-13  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* dse.c (store_info_t): Remove typedef.\n\t(group_info_t): Likewise.\n\t(const_group_info_t): Likewise.\n\t(deferred_change_t): Likewise.\n\t(get_group_info): Adjust.\n\t(free_store_info): Likewise.\n\t(canon_address): Likewise.\n\t(clear_rhs_from_active_local_stores): Likewise.\n\t(record_store): Likewise.\n\t(replace_read): Likewise.\n\t(check_mem_read_rtx): Likewise.\n\t(scan_insn): Likewise.\n\t(remove_useless_values): Likewise.\n\t(dse_step1): Likewise.\n\t(dse_step2_init): Likewise.\n\t(dse_step2_nospill): Likewise.\n\t(scan_stores_nospill): Likewise.\n\t(scan_reads_nospill): Likewise.\n\t(dse_step3_exit_block_scan): Likewise.\n\t(dse_step3): Likewise.\n\t(dse_step5_nospill): Likewise.\n\t(dse_step6): Likewise.\n\nFrom-SVN: r227719", "tree": {"sha": "093632f8f5d3102e6e4247275eaa4355732359b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/093632f8f5d3102e6e4247275eaa4355732359b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd6daec9735879205ee5a3902af19a58dfde0b81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd6daec9735879205ee5a3902af19a58dfde0b81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd6daec9735879205ee5a3902af19a58dfde0b81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd6daec9735879205ee5a3902af19a58dfde0b81/comments", "author": null, "committer": null, "parents": [{"sha": "02ced9576494c0671ce2bc3f5bb2c01a906a5f23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ced9576494c0671ce2bc3f5bb2c01a906a5f23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02ced9576494c0671ce2bc3f5bb2c01a906a5f23"}], "stats": {"total": 140, "additions": 80, "deletions": 60}, "files": [{"sha": "35c8b86b225e9a4f525aa47b56fb9aeb20d70f10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd6daec9735879205ee5a3902af19a58dfde0b81/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd6daec9735879205ee5a3902af19a58dfde0b81/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd6daec9735879205ee5a3902af19a58dfde0b81", "patch": "@@ -1,3 +1,28 @@\n+2015-09-13  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* dse.c (store_info_t): Remove typedef.\n+\t(group_info_t): Likewise.\n+\t(const_group_info_t): Likewise.\n+\t(deferred_change_t): Likewise.\n+\t(get_group_info): Adjust.\n+\t(free_store_info): Likewise.\n+\t(canon_address): Likewise.\n+\t(clear_rhs_from_active_local_stores): Likewise.\n+\t(record_store): Likewise.\n+\t(replace_read): Likewise.\n+\t(check_mem_read_rtx): Likewise.\n+\t(scan_insn): Likewise.\n+\t(remove_useless_values): Likewise.\n+\t(dse_step1): Likewise.\n+\t(dse_step2_init): Likewise.\n+\t(dse_step2_nospill): Likewise.\n+\t(scan_stores_nospill): Likewise.\n+\t(scan_reads_nospill): Likewise.\n+\t(dse_step3_exit_block_scan): Likewise.\n+\t(dse_step3): Likewise.\n+\t(dse_step5_nospill): Likewise.\n+\t(dse_step6): Likewise.\n+\n 2015-09-13  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* alias.c (alias_set_entry_d): Rename to alias_set_entry."}, {"sha": "0634d9db930c8e5aa6c792e87cc6b843ce5b56b6", "filename": "gcc/dse.c", "status": "modified", "additions": 55, "deletions": 60, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd6daec9735879205ee5a3902af19a58dfde0b81/gcc%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd6daec9735879205ee5a3902af19a58dfde0b81/gcc%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.c?ref=fd6daec9735879205ee5a3902af19a58dfde0b81", "patch": "@@ -307,7 +307,6 @@ lowpart_bitmask (int n)\n   return mask >> (HOST_BITS_PER_WIDE_INT - n);\n }\n \n-typedef struct store_info *store_info_t;\n static object_allocator<store_info> cse_store_info_pool (\"cse_store_info_pool\",\n \t\t\t\t\t\t       100);\n \n@@ -400,7 +399,7 @@ struct insn_info_type\n      But it could also contain clobbers.  Insns that contain more than\n      one mem set are not deletable, but each of those mems are here in\n      order to provide info to delete other insns.  */\n-  store_info_t store_rec;\n+  store_info *store_rec;\n \n   /* The linked list of mem uses in this insn.  Only the reads from\n      rtx bases are listed here.  The reads to cselib bases are\n@@ -564,8 +563,6 @@ struct group_info\n   int *offset_map_n, *offset_map_p;\n   int offset_map_size_n, offset_map_size_p;\n };\n-typedef struct group_info *group_info_t;\n-typedef const struct group_info *const_group_info_t;\n \n static object_allocator<group_info> group_info_pool\n   (\"rtx_group_info_pool\", 100);\n@@ -574,7 +571,7 @@ static object_allocator<group_info> group_info_pool\n static int rtx_group_next_id;\n \n \n-static vec<group_info_t> rtx_group_vec;\n+static vec<group_info *> rtx_group_vec;\n \n \n /* This structure holds the set of changes that are being deferred\n@@ -591,15 +588,13 @@ struct deferred_change\n   struct deferred_change *next;\n };\n \n-typedef struct deferred_change *deferred_change_t;\n-\n static object_allocator<deferred_change> deferred_change_pool\n   (\"deferred_change_pool\", 10);\n \n-static deferred_change_t deferred_change_list = NULL;\n+static deferred_change *deferred_change_list = NULL;\n \n /* The group that holds all of the clear_alias_sets.  */\n-static group_info_t clear_alias_group;\n+static group_info *clear_alias_group;\n \n /* The modes of the clear_alias_sets.  */\n static htab_t clear_alias_mode_table;\n@@ -680,11 +675,11 @@ static hash_table<invariant_group_base_hasher> *rtx_group_table;\n \n /* Get the GROUP for BASE.  Add a new group if it is not there.  */\n \n-static group_info_t\n+static group_info *\n get_group_info (rtx base)\n {\n   struct group_info tmp_gi;\n-  group_info_t gi;\n+  group_info *gi;\n   group_info **slot;\n \n   if (base)\n@@ -693,7 +688,7 @@ get_group_info (rtx base)\n \t if necessary.  */\n       tmp_gi.rtx_base = base;\n       slot = rtx_group_table->find_slot (&tmp_gi, INSERT);\n-      gi = (group_info_t) *slot;\n+      gi = *slot;\n     }\n   else\n     {\n@@ -790,17 +785,17 @@ dse_step0 (void)\n static void\n free_store_info (insn_info_t insn_info)\n {\n-  store_info_t store_info = insn_info->store_rec;\n-  while (store_info)\n+  store_info *cur = insn_info->store_rec;\n+  while (cur)\n     {\n-      store_info_t next = store_info->next;\n-      if (store_info->is_large)\n-\tBITMAP_FREE (store_info->positions_needed.large.bmap);\n-      if (store_info->cse_base)\n-\tcse_store_info_pool.remove (store_info);\n+      store_info *next = cur->next;\n+      if (cur->is_large)\n+\tBITMAP_FREE (cur->positions_needed.large.bmap);\n+      if (cur->cse_base)\n+\tcse_store_info_pool.remove (cur);\n       else\n-\trtx_store_info_pool.remove (store_info);\n-      store_info = next;\n+\trtx_store_info_pool.remove (cur);\n+      cur = next;\n     }\n \n   insn_info->cannot_delete = true;\n@@ -1015,7 +1010,7 @@ can_escape (tree expr)\n    OFFSET and WIDTH.  */\n \n static void\n-set_usage_bits (group_info_t group, HOST_WIDE_INT offset, HOST_WIDE_INT width,\n+set_usage_bits (group_info *group, HOST_WIDE_INT offset, HOST_WIDE_INT width,\n                 tree expr)\n {\n   HOST_WIDE_INT i;\n@@ -1240,7 +1235,7 @@ canon_address (rtx mem,\n       if (ADDR_SPACE_GENERIC_P (MEM_ADDR_SPACE (mem))\n \t  && const_or_frame_p (address))\n \t{\n-\t  group_info_t group = get_group_info (address);\n+\t  group_info *group = get_group_info (address);\n \n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t    fprintf (dump_file, \"  gid=%d offset=%d \\n\",\n@@ -1276,7 +1271,7 @@ clear_rhs_from_active_local_stores (void)\n \n   while (ptr)\n     {\n-      store_info_t store_info = ptr->store_rec;\n+      store_info *store_info = ptr->store_rec;\n       /* Skip the clobbers.  */\n       while (!store_info->is_set)\n \tstore_info = store_info->next;\n@@ -1292,7 +1287,7 @@ clear_rhs_from_active_local_stores (void)\n /* Mark byte POS bytes from the beginning of store S_INFO as unneeded.  */\n \n static inline void\n-set_position_unneeded (store_info_t s_info, int pos)\n+set_position_unneeded (store_info *s_info, int pos)\n {\n   if (__builtin_expect (s_info->is_large, false))\n     {\n@@ -1307,7 +1302,7 @@ set_position_unneeded (store_info_t s_info, int pos)\n /* Mark the whole store S_INFO as unneeded.  */\n \n static inline void\n-set_all_positions_unneeded (store_info_t s_info)\n+set_all_positions_unneeded (store_info *s_info)\n {\n   if (__builtin_expect (s_info->is_large, false))\n     {\n@@ -1323,7 +1318,7 @@ set_all_positions_unneeded (store_info_t s_info)\n /* Return TRUE if any bytes from S_INFO store are needed.  */\n \n static inline bool\n-any_positions_needed_p (store_info_t s_info)\n+any_positions_needed_p (store_info *s_info)\n {\n   if (__builtin_expect (s_info->is_large, false))\n     return (s_info->positions_needed.large.count\n@@ -1337,7 +1332,7 @@ any_positions_needed_p (store_info_t s_info)\n    store are needed.  */\n \n static inline bool\n-all_positions_needed_p (store_info_t s_info, int start, int width)\n+all_positions_needed_p (store_info *s_info, int start, int width)\n {\n   if (__builtin_expect (s_info->is_large, false))\n     {\n@@ -1355,7 +1350,7 @@ all_positions_needed_p (store_info_t s_info, int start, int width)\n }\n \n \n-static rtx get_stored_val (store_info_t, machine_mode, HOST_WIDE_INT,\n+static rtx get_stored_val (store_info *, machine_mode, HOST_WIDE_INT,\n \t\t\t   HOST_WIDE_INT, basic_block, bool);\n \n \n@@ -1371,7 +1366,7 @@ record_store (rtx body, bb_info_t bb_info)\n   HOST_WIDE_INT width = 0;\n   alias_set_type spill_alias_set;\n   insn_info_t insn_info = bb_info->last_insn;\n-  store_info_t store_info = NULL;\n+  store_info *store_info = NULL;\n   int group_id;\n   cselib_val *base = NULL;\n   insn_info_t ptr, last, redundant_reason;\n@@ -1467,7 +1462,7 @@ record_store (rtx body, bb_info_t bb_info)\n       /* In the restrictive case where the base is a constant or the\n \t frame pointer we can do global analysis.  */\n \n-      group_info_t group\n+      group_info *group\n \t= rtx_group_vec[group_id];\n       tree expr = MEM_EXPR (mem);\n \n@@ -1537,7 +1532,7 @@ record_store (rtx body, bb_info_t bb_info)\n \tmem_addr = base->val_rtx;\n       else\n \t{\n-\t  group_info_t group\n+\t  group_info *group\n \t    = rtx_group_vec[group_id];\n \t  mem_addr = group->canon_base_addr;\n \t}\n@@ -1552,7 +1547,7 @@ record_store (rtx body, bb_info_t bb_info)\n   while (ptr)\n     {\n       insn_info_t next = ptr->next_local_store;\n-      store_info_t s_info = ptr->store_rec;\n+      struct store_info *s_info = ptr->store_rec;\n       bool del = true;\n \n       /* Skip the clobbers. We delete the active insn if this insn\n@@ -1722,7 +1717,7 @@ dump_insn_info (const char * start, insn_info_t insn_info)\n \n static rtx\n find_shift_sequence (int access_size,\n-\t\t     store_info_t store_info,\n+\t\t     store_info *store_info,\n \t\t     machine_mode read_mode,\n \t\t     int shift, bool speed, bool require_cst)\n {\n@@ -1854,7 +1849,7 @@ look_for_hardregs (rtx x, const_rtx pat ATTRIBUTE_UNUSED, void *data)\n    if not successful.  If REQUIRE_CST is true, return always constant.  */\n \n static rtx\n-get_stored_val (store_info_t store_info, machine_mode read_mode,\n+get_stored_val (store_info *store_info, machine_mode read_mode,\n \t\tHOST_WIDE_INT read_begin, HOST_WIDE_INT read_end,\n \t\tbasic_block bb, bool require_cst)\n {\n@@ -1954,7 +1949,7 @@ get_stored_val (store_info_t store_info, machine_mode read_mode,\n    went ok.  */\n \n static bool\n-replace_read (store_info_t store_info, insn_info_t store_insn,\n+replace_read (store_info *store_info, insn_info_t store_insn,\n \t      read_info_t read_info, insn_info_t read_insn, rtx *loc,\n \t      bitmap regs_live)\n {\n@@ -2029,7 +2024,7 @@ replace_read (store_info_t store_info, insn_info_t store_insn,\n \n   if (validate_change (read_insn->insn, loc, read_reg, 0))\n     {\n-      deferred_change_t change = deferred_change_pool.allocate ();\n+      deferred_change *change = deferred_change_pool.allocate ();\n \n       /* Insert this right before the store insn where it will be safe\n \t from later insns that might change it before the read.  */\n@@ -2150,7 +2145,7 @@ check_mem_read_rtx (rtx *loc, bb_info_t bb_info)\n \tmem_addr = base->val_rtx;\n       else\n \t{\n-\t  group_info_t group\n+\t  group_info *group\n \t    = rtx_group_vec[group_id];\n \t  mem_addr = group->canon_base_addr;\n \t}\n@@ -2176,7 +2171,7 @@ check_mem_read_rtx (rtx *loc, bb_info_t bb_info)\n \n       while (i_ptr)\n \t{\n-\t  store_info_t store_info = i_ptr->store_rec;\n+\t  store_info *store_info = i_ptr->store_rec;\n \n \t  /* Skip the clobbers.  */\n \t  while (!store_info->is_set)\n@@ -2218,7 +2213,7 @@ check_mem_read_rtx (rtx *loc, bb_info_t bb_info)\n       while (i_ptr)\n \t{\n \t  bool remove = false;\n-\t  store_info_t store_info = i_ptr->store_rec;\n+\t  store_info *store_info = i_ptr->store_rec;\n \n \t  /* Skip the clobbers.  */\n \t  while (!store_info->is_set)\n@@ -2302,7 +2297,7 @@ check_mem_read_rtx (rtx *loc, bb_info_t bb_info)\n       while (i_ptr)\n \t{\n \t  bool remove = false;\n-\t  store_info_t store_info = i_ptr->store_rec;\n+\t  store_info *store_info = i_ptr->store_rec;\n \n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t    fprintf (dump_file, \" processing cselib load against insn %d\\n\",\n@@ -2532,7 +2527,7 @@ scan_insn (bb_info_t bb_info, rtx_insn *insn)\n \t      /* If the frame is read, the frame related stores are killed.  */\n \t      else if (insn_info->frame_read)\n \t\t{\n-\t\t  store_info_t store_info = i_ptr->store_rec;\n+\t\t  store_info *store_info = i_ptr->store_rec;\n \n \t\t  /* Skip the clobbers.  */\n \t\t  while (!store_info->is_set)\n@@ -2659,7 +2654,7 @@ remove_useless_values (cselib_val *base)\n \n   while (insn_info)\n     {\n-      store_info_t store_info = insn_info->store_rec;\n+      store_info *store_info = insn_info->store_rec;\n       bool del = false;\n \n       /* If ANY of the store_infos match the cselib group that is\n@@ -2756,7 +2751,7 @@ dse_step1 (void)\n \t      insn_info_t i_ptr = active_local_stores;\n \t      while (i_ptr)\n \t\t{\n-\t\t  store_info_t store_info = i_ptr->store_rec;\n+\t\t  store_info *store_info = i_ptr->store_rec;\n \n \t\t  /* Skip the clobbers.  */\n \t\t  while (!store_info->is_set)\n@@ -2766,7 +2761,7 @@ dse_step1 (void)\n \t\t  else\n \t\t    if (store_info->group_id >= 0)\n \t\t      {\n-\t\t\tgroup_info_t group\n+\t\t\tgroup_info *group\n \t\t\t  = rtx_group_vec[store_info->group_id];\n \t\t\tif (group->frame_related && !i_ptr->cannot_delete)\n \t\t\t  delete_dead_store_insn (i_ptr);\n@@ -2780,7 +2775,7 @@ dse_step1 (void)\n \t     replace_read.  Cselib is finished with this block.  */\n \t  while (deferred_change_list)\n \t    {\n-\t      deferred_change_t next = deferred_change_list->next;\n+\t      deferred_change *next = deferred_change_list->next;\n \n \t      /* There is no reason to validate this change.  That was\n \t\t done earlier.  */\n@@ -2797,7 +2792,7 @@ dse_step1 (void)\n \t    {\n \t      if (ptr->contains_cselib_groups)\n \t\t{\n-\t\t  store_info_t s_info = ptr->store_rec;\n+\t\t  store_info *s_info = ptr->store_rec;\n \t\t  while (s_info && !s_info->is_set)\n \t\t    s_info = s_info->next;\n \t\t  if (s_info\n@@ -2818,7 +2813,7 @@ dse_step1 (void)\n \t\t}\n \t      else\n \t\t{\n-\t\t  store_info_t s_info;\n+\t\t  store_info *s_info;\n \n \t\t  /* Free at least positions_needed bitmaps.  */\n \t\t  for (s_info = ptr->store_rec; s_info; s_info = s_info->next)\n@@ -2854,7 +2849,7 @@ static void\n dse_step2_init (void)\n {\n   unsigned int i;\n-  group_info_t group;\n+  group_info *group;\n \n   FOR_EACH_VEC_ELT (rtx_group_vec, i, group)\n     {\n@@ -2905,7 +2900,7 @@ static bool\n dse_step2_nospill (void)\n {\n   unsigned int i;\n-  group_info_t group;\n+  group_info *group;\n   /* Position 0 is unused because 0 is used in the maps to mean\n      unused.  */\n   current_position = 1;\n@@ -2954,7 +2949,7 @@ dse_step2_nospill (void)\n    there, return 0.  */\n \n static int\n-get_bitmap_index (group_info_t group_info, HOST_WIDE_INT offset)\n+get_bitmap_index (group_info *group_info, HOST_WIDE_INT offset)\n {\n   if (offset < 0)\n     {\n@@ -2976,12 +2971,12 @@ get_bitmap_index (group_info_t group_info, HOST_WIDE_INT offset)\n    may be NULL. */\n \n static void\n-scan_stores_nospill (store_info_t store_info, bitmap gen, bitmap kill)\n+scan_stores_nospill (store_info *store_info, bitmap gen, bitmap kill)\n {\n   while (store_info)\n     {\n       HOST_WIDE_INT i;\n-      group_info_t group_info\n+      group_info *group_info\n \t= rtx_group_vec[store_info->group_id];\n       if (group_info->process_globally)\n \tfor (i = store_info->begin; i < store_info->end; i++)\n@@ -3003,7 +2998,7 @@ scan_stores_nospill (store_info_t store_info, bitmap gen, bitmap kill)\n    may be NULL. */\n \n static void\n-scan_stores_spill (store_info_t store_info, bitmap gen, bitmap kill)\n+scan_stores_spill (store_info *store_info, bitmap gen, bitmap kill)\n {\n   while (store_info)\n     {\n@@ -3031,7 +3026,7 @@ scan_reads_nospill (insn_info_t insn_info, bitmap gen, bitmap kill)\n {\n   read_info_t read_info = insn_info->read_rec;\n   int i;\n-  group_info_t group;\n+  group_info *group;\n \n   /* If this insn reads the frame, kill all the frame related stores.  */\n   if (insn_info->frame_read)\n@@ -3239,7 +3234,7 @@ dse_step3_exit_block_scan (bb_info_t bb_info)\n   if (stores_off_frame_dead_at_return)\n     {\n       unsigned int i;\n-      group_info_t group;\n+      group_info *group;\n \n       FOR_EACH_VEC_ELT (rtx_group_vec, i, group)\n \t{\n@@ -3320,7 +3315,7 @@ dse_step3 (bool for_spills)\n \t  if (!all_ones)\n \t    {\n \t      unsigned int j;\n-\t      group_info_t group;\n+\t      group_info *group;\n \n \t      all_ones = BITMAP_ALLOC (&dse_bitmap_obstack);\n \t      FOR_EACH_VEC_ELT (rtx_group_vec, j, group)\n@@ -3524,7 +3519,7 @@ dse_step5_nospill (void)\n \t      && (!insn_info->cannot_delete)\n \t      && (!bitmap_empty_p (v)))\n \t    {\n-\t      store_info_t store_info = insn_info->store_rec;\n+\t      store_info *store_info = insn_info->store_rec;\n \n \t      /* Try to delete the current insn.  */\n \t      deleted = true;\n@@ -3538,7 +3533,7 @@ dse_step5_nospill (void)\n \t      else\n \t\t{\n \t\t  HOST_WIDE_INT i;\n-\t\t  group_info_t group_info\n+\t\t  group_info *group_info\n \t\t    = rtx_group_vec[store_info->group_id];\n \n \t\t  for (i = store_info->begin; i < store_info->end; i++)\n@@ -3624,7 +3619,7 @@ dse_step6 (void)\n \t      && INSN_P (insn_info->insn)\n \t      && !insn_info->cannot_delete)\n \t    {\n-\t      store_info_t s_info = insn_info->store_rec;\n+\t      store_info *s_info = insn_info->store_rec;\n \n \t      while (s_info && !s_info->is_set)\n \t\ts_info = s_info->next;"}]}