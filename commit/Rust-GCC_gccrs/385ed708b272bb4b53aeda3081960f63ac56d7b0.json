{"sha": "385ed708b272bb4b53aeda3081960f63ac56d7b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg1ZWQ3MDhiMjcyYmI0YjUzYWVkYTMwODE5NjBmNjNhYzU2ZDdiMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-08-11T15:59:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-08-11T15:59:53Z"}, "message": "re PR c++/72868 (Constexpr expressions mistreat case ranges)\n\n\tPR c++/72868\n\t* constexpr.c (label_matches): Handle case range expressions.\n\n\t* g++.dg/cpp1y/constexpr-switch4.C: New test.\n\nFrom-SVN: r239379", "tree": {"sha": "027726bc499da9489020e6e7087cd82393284aff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/027726bc499da9489020e6e7087cd82393284aff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/385ed708b272bb4b53aeda3081960f63ac56d7b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/385ed708b272bb4b53aeda3081960f63ac56d7b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/385ed708b272bb4b53aeda3081960f63ac56d7b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/385ed708b272bb4b53aeda3081960f63ac56d7b0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "df7ec09f1209a33b35af3b798e6ff6ead5de8570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df7ec09f1209a33b35af3b798e6ff6ead5de8570", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df7ec09f1209a33b35af3b798e6ff6ead5de8570"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "c0d246060856a7e66ee0b43fc4114a573114835f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/385ed708b272bb4b53aeda3081960f63ac56d7b0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/385ed708b272bb4b53aeda3081960f63ac56d7b0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=385ed708b272bb4b53aeda3081960f63ac56d7b0", "patch": "@@ -1,3 +1,8 @@\n+2016-08-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/72868\n+\t* constexpr.c (label_matches): Handle case range expressions.\n+\n 2016-08-11  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/73456"}, {"sha": "cb0fdeebb08644fea9a6d9afdc62a178f22d52e2", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/385ed708b272bb4b53aeda3081960f63ac56d7b0/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/385ed708b272bb4b53aeda3081960f63ac56d7b0/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=385ed708b272bb4b53aeda3081960f63ac56d7b0", "patch": "@@ -3448,6 +3448,12 @@ label_matches (tree *jump_target, tree_stmt_iterator i,\n \t{\n \t  if (!CASE_LOW (stmt))\n \t    default_label = i;\n+\t  else if (CASE_HIGH (stmt))\n+\t    {\n+\t      if (tree_int_cst_le (CASE_LOW (stmt), *jump_target)\n+\t\t  && tree_int_cst_le (*jump_target, CASE_HIGH (stmt)))\n+\t\treturn true;\n+\t    }\n \t  else if (tree_int_cst_equal (*jump_target, CASE_LOW (stmt)))\n \t    return true;\n \t}"}, {"sha": "bb47f76359eb8ff4d8052770e16212e802e4701d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/385ed708b272bb4b53aeda3081960f63ac56d7b0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/385ed708b272bb4b53aeda3081960f63ac56d7b0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=385ed708b272bb4b53aeda3081960f63ac56d7b0", "patch": "@@ -1,3 +1,8 @@\n+2016-08-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/72868\n+\t* g++.dg/cpp1y/constexpr-switch4.C: New test.\n+\n 2015-08-11  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.target/i386/pieces-memcpy-1.c: New test."}, {"sha": "383bde934be8113eeae8ad3c8bea640d98fe9d43", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-switch4.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/385ed708b272bb4b53aeda3081960f63ac56d7b0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-switch4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/385ed708b272bb4b53aeda3081960f63ac56d7b0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-switch4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-switch4.C?ref=385ed708b272bb4b53aeda3081960f63ac56d7b0", "patch": "@@ -0,0 +1,27 @@\n+// PR c++/72868\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++14\" }\n+\n+constexpr int\n+foo (int i)\n+{\n+  switch (i)\n+    {\n+    case 11 ... 12:\n+      return 4;\n+    case 0 ... 9:\n+      return 3;\n+    default:\n+      return 7;\n+    }\n+}\n+\n+#define SA(X) static_assert((X),#X)\n+SA (foo (-1) == 7);\n+SA (foo (0) == 3);\n+SA (foo (3) == 3);\n+SA (foo (9) == 3);\n+SA (foo (10) == 7);\n+SA (foo (11) == 4);\n+SA (foo (12) == 4);\n+SA (foo (13) == 7);"}]}