{"sha": "a36a291399fbcf24d5ea237850b862921ebdec95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM2YTI5MTM5OWZiY2YyNGQ1ZWEyMzc4NTBiODYyOTIxZWJkZWM5NQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-11-20T20:29:13Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-12-14T15:51:53Z"}, "message": "[Ada] Fix internal error on bit-packed array in Volatile_Full_Access record\n\ngcc/ada/\n\n\t* exp_pakd.adb (Expand_Bit_Packed_Element_Set): Fix again packed\n\tarray type in complex cases where array is Volatile.\n\t* exp_util.adb (Remove_Side_Effects): Do not force a renaming to\n\tbe handled by the back-end.", "tree": {"sha": "2c5b62aaba688b4e73a79b5100831f8bcd2ce4af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c5b62aaba688b4e73a79b5100831f8bcd2ce4af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a36a291399fbcf24d5ea237850b862921ebdec95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a36a291399fbcf24d5ea237850b862921ebdec95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a36a291399fbcf24d5ea237850b862921ebdec95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a36a291399fbcf24d5ea237850b862921ebdec95/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77c44637af3c9f5b974cf02cb80d1abb3b2ce210", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77c44637af3c9f5b974cf02cb80d1abb3b2ce210", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77c44637af3c9f5b974cf02cb80d1abb3b2ce210"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "c90409b5d35e22bbe169c2c230fb6fdcbc203a1c", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a36a291399fbcf24d5ea237850b862921ebdec95/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a36a291399fbcf24d5ea237850b862921ebdec95/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=a36a291399fbcf24d5ea237850b862921ebdec95", "patch": "@@ -1256,8 +1256,15 @@ package body Exp_Pakd is\n          --  array type on Obj to get lost. So we save the type of Obj, and\n          --  make sure it is reset properly.\n \n-         New_Lhs := Duplicate_Subexpr (Obj, Name_Req => True);\n-         New_Rhs := Duplicate_Subexpr_No_Checks (Obj);\n+         declare\n+            T : constant Entity_Id := Etype (Obj);\n+         begin\n+            New_Lhs := Duplicate_Subexpr (Obj, Name_Req => True);\n+            New_Rhs := Duplicate_Subexpr_No_Checks (Obj);\n+            Set_Etype (Obj, T);\n+            Set_Etype (New_Lhs, T);\n+            Set_Etype (New_Rhs, T);\n+         end;\n \n          --  First we deal with the \"and\"\n "}, {"sha": "86e46ea0f1f5c02607dfca95ab9cd809eaa8874c", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a36a291399fbcf24d5ea237850b862921ebdec95/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a36a291399fbcf24d5ea237850b862921ebdec95/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=a36a291399fbcf24d5ea237850b862921ebdec95", "patch": "@@ -11798,8 +11798,8 @@ package body Exp_Util is\n       --  If this is a packed array component or a selected component with a\n       --  nonstandard representation, we cannot generate a reference because\n       --  the component may be unaligned, so we must use a renaming and this\n-      --  renaming must be handled by the front end, as the back end may balk\n-      --  at the nonstandard representation (see Exp_Ch2.Expand_Renaming).\n+      --  renaming is handled by the front end, as the back end may balk at\n+      --  the nonstandard representation (see Evaluation_Required in Exp_Ch8).\n \n       elsif Nkind (Exp) in N_Indexed_Component | N_Selected_Component\n         and then Has_Non_Standard_Rep (Etype (Prefix (Exp)))\n@@ -11813,8 +11813,7 @@ package body Exp_Util is\n              Subtype_Mark        => New_Occurrence_Of (Exp_Type, Loc),\n              Name                => Relocate_Node (Exp)));\n \n-      --  For an expression that denotes a name, we can use a renaming scheme\n-      --  that is handled by the back end, instead of the front end as above.\n+      --  For an expression that denotes a name, we can use a renaming scheme.\n       --  This is needed for correctness in the case of a volatile object of\n       --  a nonvolatile type because the Make_Reference call of the \"default\"\n       --  approach would generate an illegal access value (an access value\n@@ -11837,8 +11836,6 @@ package body Exp_Util is\n              Subtype_Mark        => New_Occurrence_Of (Exp_Type, Loc),\n              Name                => Relocate_Node (Exp)));\n \n-         Set_Is_Renaming_Of_Object (Def_Id, False);\n-\n       --  Avoid generating a variable-sized temporary, by generating the\n       --  reference just for the function call. The transformation could be\n       --  refined to apply only when the array component is constrained by a"}]}