{"sha": "977e30bc45295e5c53967dc1a291fb93fe817a2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc3ZTMwYmM0NTI5NWU1YzUzOTY3ZGMxYTI5MWZiOTNmZTgxN2EyYQ==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-10-20T09:08:57Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-10-20T09:08:57Z"}, "message": "In gcc/: 2010-10-20 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/:\n2010-10-20  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        * c-decl.c (c_write_global_declarations): Call\n        objc_write_global_declarations when compiling Objective-C.\n        * c-lang.c (finish_file): Removed.\n\nIn gcc/c-family/:\n2010-10-20  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        * c-common.h (finish_file): Removed.\n        (objc_write_global_declarations): New.\n        * c-opts.c (c_common_parse_file): Do not call finish_file.\n        * stub-objc.c (objc_write_global_declarations): New.\n\nIn gcc/cp/:\n2010-10-20  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        * cp-lang.c (finish_file): Removed.\n        * decl2.c (cp_write_global_declarations): Call\n        objc_write_global_declarations when compiling Objective-C++.\n\nIn gcc/objc/:\n2010-10-20  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        * objc-lang.c (finish_file): Removed.\n        * objc-act.c (objc_finish_file): Renamed to\n        objc_write_global_declarations.  Do not try to instantiate C++\n        templates when compiling Objective-C++ as this is now\n        automatically done before this function is called.  Do not check\n        for syntax-only run or PCH generation as this is done by the\n        callers.\n        * objc-act.h (objc_finish_file): Removed.\n\nIn gcc/objcp/:\n2010-10-20  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        * objcp-lang.c (finish_file): Removed.\n\nIn gcc/testsuite/:\n2010-10-20  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        Merge from 'apple/trunk' branch on FSF servers.  Test adapted to\n        not require Foundation and run with the GNU runtime as well.\n\n        2006-03-13  Fariborz Jahanian <fjahanian@apple.com>\n\n        Radar 4439126\n        * obj-c++.dg/template-8.mm: New.\n\nFrom-SVN: r165714", "tree": {"sha": "77a27cf850b61490643a0ebe4d3a9737add96fa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77a27cf850b61490643a0ebe4d3a9737add96fa6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/977e30bc45295e5c53967dc1a291fb93fe817a2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/977e30bc45295e5c53967dc1a291fb93fe817a2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/977e30bc45295e5c53967dc1a291fb93fe817a2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/977e30bc45295e5c53967dc1a291fb93fe817a2a/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b170a7784c23c155f668bbe1c89cb81311a82e4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b170a7784c23c155f668bbe1c89cb81311a82e4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b170a7784c23c155f668bbe1c89cb81311a82e4a"}], "stats": {"total": 159, "additions": 118, "deletions": 41}, "files": [{"sha": "d1241cbb82c6d6ea93cf2c947849519ce0f76ed2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=977e30bc45295e5c53967dc1a291fb93fe817a2a", "patch": "@@ -1,3 +1,9 @@\n+2010-10-20  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* c-decl.c (c_write_global_declarations): Call\n+\tobjc_write_global_declarations when compiling Objective-C.\n+\t* c-lang.c (finish_file): Removed.\n+\n 2010-10-19  DJ Delorie  <dj@redhat.com>\n \n \t* doc/tm.texi.in (TARGET_ASM_JUMP_ALIGN_MAX_SKIP): New."}, {"sha": "a06d073b98ab065eef686d95975141c36d07d5ec", "filename": "gcc/c-decl.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=977e30bc45295e5c53967dc1a291fb93fe817a2a", "patch": "@@ -9782,6 +9782,12 @@ c_write_global_declarations (void)\n   if (pch_file)\n     return;\n \n+  /* Do the Objective-C stuff.  This is where all the Objective-C\n+     module stuff gets generated (symtab, class/protocol/selector\n+     lists etc).  */\n+  if (c_dialect_objc ())\n+    objc_write_global_declarations ();\n+\n   /* Close the external scope.  */\n   ext_block = pop_scope ();\n   external_scope = 0;"}, {"sha": "97d5b28b82c8df6bbedd13dad17d0cc2ea5a5a0b", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=977e30bc45295e5c53967dc1a291fb93fe817a2a", "patch": "@@ -1,3 +1,10 @@\n+2010-10-20  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* c-common.h (finish_file): Removed.\n+\t(objc_write_global_declarations): New.\n+\t* c-opts.c (c_common_parse_file): Do not call finish_file.\n+\t* stub-objc.c (objc_write_global_declarations): New.\n+\t\n 2010-10-18  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tImplemented parsing @synthesize and @dynamic for"}, {"sha": "854693e00f98cbaa66dba10fddf5b9e1b7267a9e", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=977e30bc45295e5c53967dc1a291fb93fe817a2a", "patch": "@@ -788,8 +788,6 @@ extern HOST_WIDE_INT c_common_to_target_charset (HOST_WIDE_INT);\n \n /* This is the basic parsing function.  */\n extern void c_parse_file (void);\n-/* This is misnamed, it actually performs end-of-compilation processing.  */\n-extern void finish_file\t(void);\n \n extern void warn_for_omitted_condop (location_t, tree);\n \n@@ -981,6 +979,7 @@ extern void c_parse_error (const char *, enum cpp_ttype, tree, unsigned char);\n \n /* The following ObjC/ObjC++ functions are called by the C and/or C++\n    front-ends; they all must have corresponding stubs in stub-objc.c.  */\n+extern void objc_write_global_declarations (void);\n extern tree objc_is_class_name (tree);\n extern tree objc_is_object_ptr (tree);\n extern void objc_check_decl (tree);"}, {"sha": "8f60834aa48411dc2fde228c1a74c488745bc91c", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=977e30bc45295e5c53967dc1a291fb93fe817a2a", "patch": "@@ -1160,7 +1160,6 @@ c_common_parse_file (int set_yydebug)\n       pch_init ();\n       push_file_scope ();\n       c_parse_file ();\n-      finish_file ();\n       pop_file_scope ();\n       /* And end the main input file, if the debug writer wants it  */\n       if (debug_hooks->start_end_main_source_file)"}, {"sha": "3356d0bf0bffb1e654e06bf5ca0eb8a19f0e34ef", "filename": "gcc/c-family/stub-objc.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fc-family%2Fstub-objc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fc-family%2Fstub-objc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fstub-objc.c?ref=977e30bc45295e5c53967dc1a291fb93fe817a2a", "patch": "@@ -416,3 +416,8 @@ objc_finish_foreach_loop (location_t ARG_UNUSED (location), tree ARG_UNUSED (obj\n {\n   return;\n }\n+\n+void\n+objc_write_global_declarations (void)\n+{\n+}"}, {"sha": "0ca2e7cab92b36e12ed6697bf5d60f5517ff5ab9", "filename": "gcc/c-lang.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=977e30bc45295e5c53967dc1a291fb93fe817a2a", "patch": "@@ -47,11 +47,4 @@ enum c_language_kind c_language = clk_c;\n /* Each front end provides its own lang hook initializer.  */\n struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n \n-/* Final processing of file-scope data.  The Objective-C version of\n-   this function still does something.  */\n-void\n-finish_file (void)\n-{\n-}\n-\n #include \"gtype-c.h\""}, {"sha": "7343b2d4cc6d586e0dd7c1ac5c8868a36fe7ac00", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=977e30bc45295e5c53967dc1a291fb93fe817a2a", "patch": "@@ -1,3 +1,9 @@\n+2010-10-20  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* cp-lang.c (finish_file): Removed.\n+\t* decl2.c (cp_write_global_declarations): Call\n+\tobjc_write_global_declarations when compiling Objective-C++.\n+\t\n 2010-10-19  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/46046"}, {"sha": "f274d31c085c97508564dd17e984ff09508f23f5", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=977e30bc45295e5c53967dc1a291fb93fe817a2a", "patch": "@@ -154,11 +154,6 @@ cp_classify_record (tree type)\n   return RECORD_IS_STRUCT;\n }\n \n-void\n-finish_file (void)\n-{\n-}\n-\n static GTY(()) tree cp_eh_personality_decl;\n \n static tree"}, {"sha": "f27e7d60856f81bb20fb80ebde5b2139c964c74c", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=977e30bc45295e5c53967dc1a291fb93fe817a2a", "patch": "@@ -3896,6 +3896,14 @@ cp_write_global_declarations (void)\n     if (!decl_defined_p (decl))\n       no_linkage_error (decl);\n \n+  /* Then, do the Objective-C stuff.  This is where all the\n+     Objective-C module stuff gets generated (symtab,\n+     class/protocol/selector lists etc).  This must be done after C++\n+     templates, destructors etc. so that selectors used in C++\n+     templates are properly allocated.  */\n+  if (c_dialect_objc ())\n+    objc_write_global_declarations ();\n+\n   /* We give C linkage to static constructors and destructors.  */\n   push_lang_context (lang_name_c);\n "}, {"sha": "b3881ae86e21410aa61c16a8dbbc1fa8e89d5809", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=977e30bc45295e5c53967dc1a291fb93fe817a2a", "patch": "@@ -1,3 +1,14 @@\n+2010-10-20  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc-lang.c (finish_file): Removed.\n+\t* objc-act.c (objc_finish_file): Renamed to\n+\tobjc_write_global_declarations.  Do not try to instantiate C++\n+\ttemplates when compiling Objective-C++ as this is now\n+\tautomatically done before this function is called.  Do not check\n+\tfor syntax-only run or PCH generation as this is done by the\n+\tcallers.\n+\t* objc-act.h (objc_finish_file): Removed.\n+\t\n 2010-10-18  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tImplemented parsing @synthesize and @dynamic for"}, {"sha": "2d5a90585c0dd55510ebc08a6f6df4ac0cf94530", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=977e30bc45295e5c53967dc1a291fb93fe817a2a", "patch": "@@ -624,22 +624,15 @@ objc_init (void)\n   return true;\n }\n \n+/* This is called automatically (at the very end of compilation) by\n+   c_write_global_declarations and cp_write_global_declarations.  */\n void\n-objc_finish_file (void)\n+objc_write_global_declarations (void)\n {\n   mark_referenced_methods ();\n \n-#ifdef OBJCPLUS\n-  /* We need to instantiate templates _before_ we emit ObjC metadata;\n-     if we do not, some metadata (such as selectors) may go missing.  */\n-  at_eof = 1;\n-  instantiate_pending_templates (0);\n-#endif\n-\n-  /* Finalize Objective-C runtime data.  No need to generate tables\n-     and code if only checking syntax, or if generating a PCH file.  */\n-  if (!flag_syntax_only && !pch_file)\n-    finish_objc ();\n+  /* Finalize Objective-C runtime data.  */\n+  finish_objc ();\n \n   if (gen_declaration_file)\n     fclose (gen_declaration_file);"}, {"sha": "b7bb6f23d35a38139292e1b413a495b131dc932b", "filename": "gcc/objc/objc-act.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fobjc%2Fobjc-act.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fobjc%2Fobjc-act.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.h?ref=977e30bc45295e5c53967dc1a291fb93fe817a2a", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n \n bool objc_init (void);\n const char *objc_printable_name (tree, int);\n-void objc_finish_file (void);\n tree objc_fold_obj_type_ref (tree, tree);\n int objc_gimplify_expr (tree *, gimple_seq *, gimple_seq *);\n tree objc_eh_runtime_type (tree);"}, {"sha": "839db5dea06a3f5b670ea28f873ba27dc21f2e04", "filename": "gcc/objc/objc-lang.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fobjc%2Fobjc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fobjc%2Fobjc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-lang.c?ref=977e30bc45295e5c53967dc1a291fb93fe817a2a", "patch": "@@ -92,10 +92,4 @@ objc_init_ts (void)\n   tree_contains_struct[PROPERTY_DECL][TS_DECL_COMMON] = 1;\n }\n \n-void\n-finish_file (void)\n-{\n-  objc_finish_file ();\n-}\n-\n #include \"gtype-objc.h\""}, {"sha": "7141dd82a0c39607b06f41d2717eb32643161ca4", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=977e30bc45295e5c53967dc1a291fb93fe817a2a", "patch": "@@ -1,3 +1,7 @@\n+2010-10-20  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objcp-lang.c (finish_file): Removed.\n+\n 2010-10-14  Iain Sandoe  <iains@gcc.gnu.org>\n \n \tmerge from FSF apple 'trunk' branch. "}, {"sha": "e35302181738a2152254996f0a117433bfeb4346", "filename": "gcc/objcp/objcp-lang.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fobjcp%2Fobjcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Fobjcp%2Fobjcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2Fobjcp-lang.c?ref=977e30bc45295e5c53967dc1a291fb93fe817a2a", "patch": "@@ -156,11 +156,4 @@ objcxx_eh_personality (void)\n   return objcp_eh_personality_decl;\n }\n \n-\n-void\n-finish_file (void)\n-{\n-  objc_finish_file ();\n-}\n-\n #include \"gtype-objcp.h\""}, {"sha": "f777c3f157e48280d5a014a120e4d548dee8c36d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=977e30bc45295e5c53967dc1a291fb93fe817a2a", "patch": "@@ -1,3 +1,13 @@\n+2010-10-20  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\t\n+\tMerge from 'apple/trunk' branch on FSF servers.  Test adapted to\n+\tnot require Foundation and run with the GNU runtime as well.\n+\n+\t2006-03-13  Fariborz Jahanian <fjahanian@apple.com>\n+\n+        Radar 4439126\n+\t* obj-c++.dg/template-8.mm: New.\t\n+\n 2010-10-20  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tPR objc/23709"}, {"sha": "eb01aa8471011b3f2df91188e241ae9a0fe7ff14", "filename": "gcc/testsuite/obj-c++.dg/template-8.mm", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftemplate-8.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977e30bc45295e5c53967dc1a291fb93fe817a2a/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftemplate-8.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftemplate-8.mm?ref=977e30bc45295e5c53967dc1a291fb93fe817a2a", "patch": "@@ -0,0 +1,49 @@\n+/* Test that all pending instantiations have taken place before meta-data\n+   generation. */\t\n+/* Author: Fariborz Jahanian <fjahanian@apple.com> */\n+/* Adapted by Nicola Pero <nicola.pero@meta-innovation.com> */\n+/* { dg-do run } */\n+\n+#include <objc/objc.h>\n+#include <objc/runtime.h>\n+\n+@interface MyRootClass\n+{ Class isa; }\n++ alloc;\n+- init;\n+- doSomething;\n+@end\n+\n+@implementation MyRootClass\n++ alloc { return class_createInstance (self, 0); }\n+- init  { return self; }\n+- doSomething { return self; }\n+@end\n+\n+class Base\n+{\n+public:\n+\tBase() { }\n+\tvirtual ~Base() { }\n+\t\n+\tvoid destroy() { delete this; }\n+};\n+\n+template<class T>\n+class Subclass : public T\n+{\n+public:\n+\tSubclass() { }\n+\t\n+\tvirtual ~Subclass()\n+\t{\n+\t\t[[[MyRootClass alloc] init] doSomething];\n+\t}\n+};\n+\n+int main(int argc, const char * argv[])\n+{\n+    Subclass<Base>* theSubclass = new Subclass<Base>();\n+    theSubclass->destroy();\n+    return 0;\n+}"}]}