{"sha": "2f401a8f1888e889386aecdf7eca6e0e31196626", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY0MDFhOGYxODg4ZTg4OTM4NmFlY2RmN2VjYTZlMGUzMTE5NjYyNg==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2015-12-10T01:08:13Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2015-12-10T01:08:13Z"}, "message": "PR 68115/libfortran\n\n\tPR 68115/libfortran\n\t* configure.ac: Set libbacktrace_cv_sys_sync to no on hppa*-*-hpux*.\n\t* configure: Regenerate.\n\t* elf.c (backtrace_initialize): Cast __sync_bool_compare_and_swap call\n\tto void.\n\nFrom-SVN: r231485", "tree": {"sha": "e90635f949eb2668185ec1ca8a99d76fb8594369", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e90635f949eb2668185ec1ca8a99d76fb8594369"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f401a8f1888e889386aecdf7eca6e0e31196626", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f401a8f1888e889386aecdf7eca6e0e31196626", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f401a8f1888e889386aecdf7eca6e0e31196626", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f401a8f1888e889386aecdf7eca6e0e31196626/comments", "author": null, "committer": null, "parents": [{"sha": "512e4ace54f4f67ae5e9e785ea7a747b3c62758e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/512e4ace54f4f67ae5e9e785ea7a747b3c62758e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/512e4ace54f4f67ae5e9e785ea7a747b3c62758e"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "23f3da1bbdc92384e2e2732961535d55e4b6dc0b", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f401a8f1888e889386aecdf7eca6e0e31196626/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f401a8f1888e889386aecdf7eca6e0e31196626/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=2f401a8f1888e889386aecdf7eca6e0e31196626", "patch": "@@ -1,3 +1,11 @@\n+2015-12-09  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\tPR 68115/libfortran\n+\t* configure.ac: Set libbacktrace_cv_sys_sync to no on hppa*-*-hpux*.\n+\t* configure: Regenerate.\n+\t* elf.c (backtrace_initialize): Cast __sync_bool_compare_and_swap call\n+\tto void.\n+\n 2015-09-17  Ian Lance Taylor  <iant@google.com>\n \n \t* posix.c (backtrace_open): Cast second argument of open() to int."}, {"sha": "8d0146ac378e39191588419a2ac0570856d51def", "filename": "libbacktrace/configure", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f401a8f1888e889386aecdf7eca6e0e31196626/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f401a8f1888e889386aecdf7eca6e0e31196626/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=2f401a8f1888e889386aecdf7eca6e0e31196626", "patch": "@@ -9103,7 +9103,7 @@ _LT_EOF\n \tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n \t  export_symbols_cmds='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n \telse\n-\t  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n+\t  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"L\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n \tfi\n \taix_use_runtimelinking=no\n \n@@ -11726,7 +11726,10 @@ if test \"${libbacktrace_cv_sys_sync+set}\" = set; then :\n   $as_echo_n \"(cached) \" >&6\n else\n   if test -n \"${with_target_subdir}\"; then\n-   libbacktrace_cv_sys_sync=yes\n+   case \"${host}\" in\n+   hppa*-*-hpux*) libbacktrace_cv_sys_sync=no ;;\n+   *) libbacktrace_cv_sys_sync=yes ;;\n+   esac\n  else\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */"}, {"sha": "db4a291dea9edc3129413d1c6c4a73a08850d4d2", "filename": "libbacktrace/configure.ac", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f401a8f1888e889386aecdf7eca6e0e31196626/libbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f401a8f1888e889386aecdf7eca6e0e31196626/libbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure.ac?ref=2f401a8f1888e889386aecdf7eca6e0e31196626", "patch": "@@ -172,7 +172,10 @@ AC_SUBST(PIC_FLAG)\n AC_CACHE_CHECK([__sync extensions],\n [libbacktrace_cv_sys_sync],\n [if test -n \"${with_target_subdir}\"; then\n-   libbacktrace_cv_sys_sync=yes\n+   case \"${host}\" in\n+   hppa*-*-hpux*) libbacktrace_cv_sys_sync=no ;;\n+   *) libbacktrace_cv_sys_sync=yes ;;\n+   esac\n  else\n    AC_LINK_IFELSE(\n      [AC_LANG_PROGRAM([int i;],"}, {"sha": "71ad340c0058219fef4950e4a2e466c85475eaf2", "filename": "libbacktrace/elf.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f401a8f1888e889386aecdf7eca6e0e31196626/libbacktrace%2Felf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f401a8f1888e889386aecdf7eca6e0e31196626/libbacktrace%2Felf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Felf.c?ref=2f401a8f1888e889386aecdf7eca6e0e31196626", "patch": "@@ -955,7 +955,8 @@ backtrace_initialize (struct backtrace_state *state, int descriptor,\n       if (found_sym)\n \tbacktrace_atomic_store_pointer (&state->syminfo_fn, elf_syminfo);\n       else\n-\t__sync_bool_compare_and_swap (&state->syminfo_fn, NULL, elf_nosyms);\n+\t(void) __sync_bool_compare_and_swap (&state->syminfo_fn, NULL,\n+\t\t\t\t\t     elf_nosyms);\n     }\n \n   if (!state->threaded)"}]}