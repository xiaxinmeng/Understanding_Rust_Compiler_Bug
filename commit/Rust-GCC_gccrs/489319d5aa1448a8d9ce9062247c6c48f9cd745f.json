{"sha": "489319d5aa1448a8d9ce9062247c6c48f9cd745f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg5MzE5ZDVhYTE0NDhhOGQ5Y2U5MDYyMjQ3YzZjNDhmOWNkNzQ1Zg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-07-07T18:11:18Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-07-07T18:11:18Z"}, "message": "Add ia32 and x32 effective targets.\n\n2011-07-07  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* lib/target-supports.exp (check_effective_target_ia32): New.\n\t(check_effective_target_x32): Likewise.\n\t(check_effective_target_vect_cmdline_needed): Also check x32.\n\nFrom-SVN: r176000", "tree": {"sha": "10e9d816d0ca6eedab7fbb23baeef0ff78b74cd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10e9d816d0ca6eedab7fbb23baeef0ff78b74cd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/489319d5aa1448a8d9ce9062247c6c48f9cd745f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/489319d5aa1448a8d9ce9062247c6c48f9cd745f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/489319d5aa1448a8d9ce9062247c6c48f9cd745f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/489319d5aa1448a8d9ce9062247c6c48f9cd745f/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b5cfeea5f2654cae1eba6988727ed15d2388da3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b5cfeea5f2654cae1eba6988727ed15d2388da3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b5cfeea5f2654cae1eba6988727ed15d2388da3"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "ff76bb04342f7b818f9ed3c72581b75c8a5185dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489319d5aa1448a8d9ce9062247c6c48f9cd745f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489319d5aa1448a8d9ce9062247c6c48f9cd745f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=489319d5aa1448a8d9ce9062247c6c48f9cd745f", "patch": "@@ -1,3 +1,9 @@\n+2011-07-07  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_ia32): New.\n+\t(check_effective_target_x32): Likewise.\n+\t(check_effective_target_vect_cmdline_needed): Also check x32.\n+\n 2011-07-07  Janis Johnson  <janisjo@codesourcery.com>\n \n \t* gcc.target/arm/pr40657-2.c: Remove -march option and unneeded"}, {"sha": "8b9c386f7a883a745a5b7d0bf28693d3ddbd4e7f", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489319d5aa1448a8d9ce9062247c6c48f9cd745f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489319d5aa1448a8d9ce9062247c6c48f9cd745f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=489319d5aa1448a8d9ce9062247c6c48f9cd745f", "patch": "@@ -1512,6 +1512,28 @@ proc check_effective_target_ilp32 { } {\n     }]\n }\n \n+# Return 1 if we're generating ia32 code using default options, 0\n+# otherwise.\n+\n+proc check_effective_target_ia32 { } {\n+    return [check_no_compiler_messages ia32 object {\n+\tint dummy[sizeof (int) == 4\n+\t\t  && sizeof (void *) == 4\n+\t\t  && sizeof (long) == 4 ? 1 : -1] = { __i386__ };\n+    }]\n+}\n+\n+# Return 1 if we're generating x32 code using default options, 0\n+# otherwise.\n+\n+proc check_effective_target_x32 { } {\n+    return [check_no_compiler_messages x32 object {\n+\tint dummy[sizeof (int) == 4\n+\t\t  && sizeof (void *) == 4\n+\t\t  && sizeof (long) == 4 ? 1 : -1] = { __x86_64__ };\n+    }]\n+}\n+\n # Return 1 if we're generating 32-bit or larger integers using default\n # options, 0 otherwise.\n \n@@ -1713,7 +1735,8 @@ proc check_effective_target_vect_cmdline_needed { } {\n \tif { [istarget alpha*-*-*]\n \t     || [istarget ia64-*-*]\n \t     || (([istarget x86_64-*-*] || [istarget i?86-*-*])\n-\t\t && [check_effective_target_lp64])\n+\t\t && ([check_effective_target_x32]\n+\t\t     || [check_effective_target_lp64]))\n \t     || ([istarget powerpc*-*-*]\n \t\t && ([check_effective_target_powerpc_spe]\n \t\t     || [check_effective_target_powerpc_altivec]))"}]}