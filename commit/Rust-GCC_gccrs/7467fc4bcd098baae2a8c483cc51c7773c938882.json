{"sha": "7467fc4bcd098baae2a8c483cc51c7773c938882", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ2N2ZjNGJjZDA5OGJhYWUyYThjNDgzY2M1MWM3NzczYzkzODg4Mg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-31T23:43:49Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-31T23:43:49Z"}, "message": "libgo/Makefile.am: Simplify build to avoid unnecessary .a files.\n\nFrom-SVN: r169456", "tree": {"sha": "be9e97f59e4db4be7d413aa3bede5b44336c59b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be9e97f59e4db4be7d413aa3bede5b44336c59b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7467fc4bcd098baae2a8c483cc51c7773c938882", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7467fc4bcd098baae2a8c483cc51c7773c938882", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7467fc4bcd098baae2a8c483cc51c7773c938882", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7467fc4bcd098baae2a8c483cc51c7773c938882/comments", "author": null, "committer": null, "parents": [{"sha": "463ec8224b9fc5661646c4f8c9242c92ebb08f72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/463ec8224b9fc5661646c4f8c9242c92ebb08f72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/463ec8224b9fc5661646c4f8c9242c92ebb08f72"}], "stats": {"total": 2522, "additions": 1384, "deletions": 1138}, "files": [{"sha": "b6beb1e2fb381951f5e03478bf573d4b2a6f2145", "filename": "libgo/Makefile.am", "status": "modified", "additions": 692, "deletions": 569, "changes": 1261, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7467fc4bcd098baae2a8c483cc51c7773c938882/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7467fc4bcd098baae2a8c483cc51c7773c938882/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=7467fc4bcd098baae2a8c483cc51c7773c938882", "patch": "@@ -1364,19 +1364,17 @@ LTGOCOMPILE = $(LIBTOOL) --tag GO --mode=compile $(GOC) $(INCLUDES) \\\n GOLINK = $(LIBTOOL) --tag GO --mode-link $(GOC) \\\n \t$(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_GOCFLAGS) $(LTLDFLAGS) -o $@\n \n-# Build a package.\n-BUILDARCHIVE = \\\n+# Build a package.  This builds a .o and a .lo.\n+BUILDPACKAGE = \\\n \trm -f `echo $@ | sed -e 's|/lib|/|' -e 's/\\.a/.gox/'`; \\\n \ttest -d $(@D) || $(MKDIR_P) $(@D); \\\n \trm -f $@; \\\n \tfiles=`echo $^ | sed -e 's/[^ ]*\\.gox//g'`; \\\n-\tif $(LTGOCOMPILE) -I . -c -fgo-prefix=\"libgo_$(@D)\" -o $@.$(OBJEXT) $$files; then \\\n-\t  $(AR) rc $@ $@.$(OBJEXT); \\\n-\telse exit 1; fi\n+\t$(LTGOCOMPILE) -I . -c -fgo-prefix=\"libgo_$(@D)\" -o $@ $$files\n \n-# Build a .la file from a .a file.\n-.a.la:\n-\t$(LINK) $<.lo\n+# Build a .la file from a .lo file.\n+.lo.la:\n+\t$(LINK) $<\n \n if LIBGO_IS_RTEMS\n use_dejagnu = yes\n@@ -1427,995 +1425,1119 @@ CHECK_DEPS = libgo.la libgobegin.a \\\n \t$(toolexeclibruntime_DATA) \\\n \t$(toolexeclibtesting_DATA)\n \n-asn1/libasn1.a: $(go_asn1_files) bytes.gox fmt.gox io.gox os.gox reflect.gox \\\n-\t\tstrconv.gox strings.gox time.gox\n-\t$(BUILDARCHIVE)\n-asn1/libasn1.la: asn1/libasn1.a\n+asn1/libasn1.$(OBJEXT): $(go_asn1_files) bytes.gox fmt.gox io.gox os.gox \\\n+\t\treflect.gox strconv.gox strings.gox time.gox\n+\t$(BUILDPACKAGE)\n+asn1/libasn1.lo: asn1/libasn1.$(OBJEXT)\n+asn1/libasn1.la: asn1/libasn1.lo\n asn1/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: asn1/check\n \n-big/libbig.a: $(go_big_files) fmt.gox rand.gox strings.gox\n-\t$(BUILDARCHIVE)\n-big/libbig.la: big/libbig.a\n+big/libbig.$(OBJEXT): $(go_big_files) fmt.gox rand.gox strings.gox\n+\t$(BUILDPACKAGE)\n+big/libbig.lo: big/libbig.$(OBJEXT)\n+big/libbig.la: big/libbig.lo\n big/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: big/check\n \n-bufio/libbufio.a: $(go_bufio_files) bytes.gox io.gox os.gox strconv.gox \\\n-\t\tutf8.gox\n-\t$(BUILDARCHIVE)\n-bufio/libbufio.la: bufio/libbufio.a\n+bufio/libbufio.$(OBJEXT): $(go_bufio_files) bytes.gox io.gox os.gox \\\n+\t\tstrconv.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+bufio/libbufio.lo: bufio/libbufio.$(OBJEXT)\n+bufio/libbufio.la: bufio/libbufio.lo\n bufio/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: bufio/check\n \n-bytes/libbytes.a: $(go_bytes_files) $(go_bytes_c_files) io.gox os.gox \\\n+bytes/bytes.$(OBJEXT): $(go_bytes_files) $(go_bytes_c_files) io.gox os.gox \\\n \t\tunicode.gox utf8.gox\n \ttest -d bytes || $(MKDIR_P) bytes\n \t$(LTGOCOMPILE) -I . -c -o bytes/bytes.$(OBJEXT) -fgo-prefix=libgo_bytes $(srcdir)/go/bytes/buffer.go $(srcdir)/go/bytes/bytes.go $(srcdir)/go/bytes/bytes_decl.go\n+bytes/index.$(OBJEXT): go/bytes/indexbyte.c bytes/bytes.$(OBJEXT)\n \t$(LTCOMPILE) -c -o bytes/index.$(OBJEXT) $(srcdir)/go/bytes/indexbyte.c\n-\trm -f $@\n-\t$(AR) rc $@ bytes/bytes.$(OBJEXT) bytes/index.$(OBJEXT)\n-bytes/libbytes.la: bytes/libbytes.a\n+bytes/libbytes.la: bytes/bytes.$(OBJEXT) bytes/index.$(OBJEXT)\n \t$(LINK) bytes/bytes.lo bytes/index.lo\n bytes/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: bytes/check\n \n-cmath/libcmath.a: $(go_cmath_files) math.gox\n-\t$(BUILDARCHIVE)\n-cmath/libcmath.la: cmath/libcmath.a\n+cmath/libcmath.$(OBJEXT): $(go_cmath_files) math.gox\n+\t$(BUILDPACKAGE)\n+cmath/libcmath.lo: cmath/libcmath.$(OBJEXT)\n+cmath/libcmath.la: cmath/libcmath.lo\n cmath/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: cmath/check\n \n-ebnf/libebnf.a: $(go_ebnf_files) container/vector.gox go/scanner.gox \\\n+ebnf/libebnf.$(OBJEXT): $(go_ebnf_files) container/vector.gox go/scanner.gox \\\n \t\tgo/token.gox os.gox strconv.gox unicode.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-ebnf/libebnf.la: ebnf/libebnf.a\n+\t$(BUILDPACKAGE)\n+ebnf/libebnf.lo: ebnf/libebnf.$(OBJEXT)\n+ebnf/libebnf.la: ebnf/libebnf.lo\n ebnf/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: ebnf/check\n \n-exec/libexec.a: $(go_exec_files) os.gox strings.gox\n-\t$(BUILDARCHIVE)\n-exec/libexec.la: exec/libexec.a\n+exec/libexec.$(OBJEXT): $(go_exec_files) os.gox strings.gox\n+\t$(BUILDPACKAGE)\n+exec/libexec.lo: exec/libexec.$(OBJEXT)\n+exec/libexec.la: exec/libexec.lo\n exec/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: exec/check\n \n-expvar/libexpvar.a: $(go_expvar_files) bytes.gox fmt.gox http.gox json.gox \\\n-\t\tlog.gox os.gox runtime.gox strconv.gox sync.gox\n-\t$(BUILDARCHIVE)\n-expvar/libexpvar.la: expvar/libexpvar.a\n+expvar/libexpvar.$(OBJEXT): $(go_expvar_files) bytes.gox fmt.gox http.gox \\\n+\t\tjson.gox log.gox os.gox runtime.gox strconv.gox sync.gox\n+\t$(BUILDPACKAGE)\n+expvar/libexpvar.lo: expvar/libexpvar.$(OBJEXT)\n+expvar/libexpvar.la: expvar/libexpvar.lo\n expvar/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: expvar/check\n \n-flag/libflag.a: $(go_flag_files) fmt.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-flag/libflag.la: flag/libflag.a\n+flag/libflag.$(OBJEXT): $(go_flag_files) fmt.gox os.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+flag/libflag.lo: flag/libflag.$(OBJEXT)\n+flag/libflag.la: flag/libflag.lo\n flag/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: flag/check\n \n-fmt/libfmt.a: $(go_fmt_files) bytes.gox io.gox os.gox reflect.gox strconv.gox \\\n-\t\tstrings.gox unicode.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-fmt/libfmt.la: fmt/libfmt.a\n+fmt/libfmt.$(OBJEXT): $(go_fmt_files) bytes.gox io.gox os.gox reflect.gox \\\n+\t\tstrconv.gox strings.gox unicode.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+fmt/libfmt.lo: fmt/libfmt.$(OBJEXT)\n+fmt/libfmt.la: fmt/libfmt.lo\n fmt/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: fmt/check\n \n-gob/libgob.a: $(go_gob_files) bytes.gox fmt.gox io.gox math.gox os.gox \\\n-\t\treflect.gox runtime.gox strings.gox sync.gox unicode.gox \\\n-\t\tutf8.gox\n-\t$(BUILDARCHIVE)\n-gob/libgob.la: gob/libgob.a\n+gob/libgob.$(OBJEXT): $(go_gob_files) bytes.gox fmt.gox io.gox math.gox \\\n+\t\tos.gox reflect.gox runtime.gox strings.gox sync.gox \\\n+\t\tunicode.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+gob/libgob.lo: gob/libgob.$(OBJEXT)\n+gob/libgob.la: gob/libgob.lo\n gob/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: gob/check\n \n-hash/libhash.a: $(go_hash_files) io.gox\n-\t$(BUILDARCHIVE)\n-hash/libhash.la: hash/libhash.a\n+hash/libhash.$(OBJEXT): $(go_hash_files) io.gox\n+\t$(BUILDPACKAGE)\n+hash/libhash.lo: hash/libhash.$(OBJEXT)\n+hash/libhash.la: hash/libhash.lo\n hash/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: hash/check\n \n-html/libhtml.a: $(go_html_files) bytes.gox io.gox os.gox strconv.gox \\\n+html/libhtml.$(OBJEXT): $(go_html_files) bytes.gox io.gox os.gox strconv.gox \\\n \t\tstrings.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-html/libhtml.la: html/libhtml.a\n+\t$(BUILDPACKAGE)\n+html/libhtml.lo: html/libhtml.$(OBJEXT)\n+html/libhtml.la: html/libhtml.lo\n html/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: html/check\n \n-http/libhttp.a: $(go_http_files) bufio.gox bytes.gox container/list.gox \\\n-\t\tcontainer/vector.gox crypto/rand.gox crypto/tls.gox \\\n-\t\tencoding/base64.gox fmt.gox io.gox io/ioutil.gox log.gox \\\n-\t\tmime.gox mime/multipart.gox net.gox os.gox path.gox sort.gox \\\n-\t\tstrconv.gox strings.gox sync.gox time.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-http/libhttp.la: http/libhttp.a\n+http/libhttp.$(OBJEXT): $(go_http_files) bufio.gox bytes.gox \\\n+\t\tcontainer/list.gox container/vector.gox crypto/rand.gox \\\n+\t\tcrypto/tls.gox encoding/base64.gox fmt.gox io.gox \\\n+\t\tio/ioutil.gox log.gox mime.gox mime/multipart.gox net.gox \\\n+\t\tos.gox path.gox sort.gox strconv.gox strings.gox sync.gox \\\n+\t\ttime.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+http/libhttp.lo: http/libhttp.$(OBJEXT)\n+http/libhttp.la: http/libhttp.lo\n http/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: http/check\n \n-image/libimage.a: $(go_image_files) bufio.gox io.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-image/libimage.la: image/libimage.a\n+image/libimage.$(OBJEXT): $(go_image_files) bufio.gox io.gox os.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+image/libimage.lo: image/libimage.$(OBJEXT)\n+image/libimage.la: image/libimage.lo\n image/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: image/check\n \n-io/libio.a: $(go_io_files) os.gox runtime.gox sync.gox\n-\t$(BUILDARCHIVE)\n-io/libio.la: io/libio.a\n+io/libio.$(OBJEXT): $(go_io_files) os.gox runtime.gox sync.gox\n+\t$(BUILDPACKAGE)\n+io/libio.lo: io/libio.$(OBJEXT)\n+io/libio.la: io/libio.lo\n io/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: io/check\n \n-json/libjson.a: $(go_json_files) bytes.gox container/vector.gox fmt.gox \\\n-\t\tio.gox math.gox os.gox reflect.gox runtime.gox strconv.gox \\\n-\t\tstrings.gox unicode.gox utf16.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-json/libjson.la: json/libjson.a\n+json/libjson.$(OBJEXT): $(go_json_files) bytes.gox container/vector.gox \\\n+\t\tfmt.gox io.gox math.gox os.gox reflect.gox runtime.gox \\\n+\t\tstrconv.gox strings.gox unicode.gox utf16.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+json/libjson.lo: json/libjson.$(OBJEXT)\n+json/libjson.la: json/libjson.lo\n json/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: json/check\n \n-log/liblog.a: $(go_log_files) bytes.gox fmt.gox io.gox runtime.gox os.gox \\\n-\t\tsync.gox time.gox\n-\t$(BUILDARCHIVE)\n-log/liblog.la: log/liblog.a\n+log/liblog.$(OBJEXT): $(go_log_files) bytes.gox fmt.gox io.gox runtime.gox \\\n+\t\tos.gox sync.gox time.gox\n+\t$(BUILDPACKAGE)\n+log/liblog.lo: log/liblog.$(OBJEXT)\n+log/liblog.la: log/liblog.lo\n log/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: log/check\n \n-math/libmath.a: $(go_math_files)\n-\t$(BUILDARCHIVE)\n-math/libmath.la: math/libmath.a\n+math/libmath.$(OBJEXT): $(go_math_files)\n+\t$(BUILDPACKAGE)\n+math/libmath.lo: math/libmath.$(OBJEXT)\n+math/libmath.la: math/libmath.lo\n math/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: math/check\n \n-mime/libmime.a: $(go_mime_files) bufio.gox bytes.gox os.gox strings.gox \\\n-\t\tsync.gox unicode.gox\n-\t$(BUILDARCHIVE)\n-mime/libmime.la: mime/libmime.a\n+mime/libmime.$(OBJEXT): $(go_mime_files) bufio.gox bytes.gox os.gox \\\n+\t\tstrings.gox sync.gox unicode.gox\n+\t$(BUILDPACKAGE)\n+mime/libmime.lo: mime/libmime.$(OBJEXT)\n+mime/libmime.la: mime/libmime.lo\n mime/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: mime/check\n \n-net/libnet.a: $(go_net_files) bytes.gox fmt.gox io.gox os.gox reflect.gox \\\n-\t\tstrconv.gox strings.gox sync.gox syscall.gox\n-\t$(BUILDARCHIVE)\n-net/libnet.la: net/libnet.a\n+net/libnet.$(OBJEXT): $(go_net_files) bytes.gox fmt.gox io.gox os.gox \\\n+\t\treflect.gox strconv.gox strings.gox sync.gox syscall.gox\n+\t$(BUILDPACKAGE)\n+net/libnet.lo: net/libnet.$(OBJEXT)\n+net/libnet.la: net/libnet.lo\n net/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: net/check\n \n-netchan/libnetchan.a: $(go_netchan_files) gob.gox log.gox net.gox os.gox \\\n-\t\treflect.gox strconv.gox sync.gox time.gox\n-\t$(BUILDARCHIVE)\n-netchan/libnetchan.la: netchan/libnetchan.a\n+netchan/libnetchan.$(OBJEXT): $(go_netchan_files) gob.gox log.gox net.gox \\\n+\t\tos.gox reflect.gox strconv.gox sync.gox time.gox\n+\t$(BUILDPACKAGE)\n+netchan/libnetchan.lo: netchan/libnetchan.$(OBJEXT)\n+netchan/libnetchan.la: netchan/libnetchan.lo\n netchan/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: netchan/check\n \n-os/libos.a: $(go_os_files) sync.gox syscall.gox\n-\t$(BUILDARCHIVE)\n-os/libos.la: os/libos.a\n+os/libos.$(OBJEXT): $(go_os_files) sync.gox syscall.gox\n+\t$(BUILDPACKAGE)\n+os/libos.lo: os/libos.$(OBJEXT)\n+os/libos.la: os/libos.lo\n os/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: os/check\n \n-patch/libpatch.a: $(go_patch_files) bytes.gox compress/zlib.gox \\\n+patch/libpatch.$(OBJEXT): $(go_patch_files) bytes.gox compress/zlib.gox \\\n \t\tcrypto/sha1.gox encoding/git85.gox fmt.gox io.gox os.gox \\\n \t\tpath.gox strings.gox\n-\t$(BUILDARCHIVE)\n-patch/libpatch.la: patch/libpatch.a\n+\t$(BUILDPACKAGE)\n+patch/libpatch.lo: patch/libpatch.$(OBJEXT)\n+patch/libpatch.la: patch/libpatch.lo\n patch/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: patch/check\n \n-path/libpath.a: $(go_path_files) io/ioutil.gox os.gox sort.gox strings.gox \\\n-\t\tutf8.gox\n-\t$(BUILDARCHIVE)\n-path/libpath.la: path/libpath.a\n+path/libpath.$(OBJEXT): $(go_path_files) io/ioutil.gox os.gox sort.gox \\\n+\t\tstrings.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+path/libpath.lo: path/libpath.$(OBJEXT)\n+path/libpath.la: path/libpath.lo\n path/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: path/check\n \n-rand/librand.a: $(go_rand_files) math.gox sync.gox\n-\t$(BUILDARCHIVE)\n-rand/librand.la: rand/librand.a\n+rand/librand.$(OBJEXT): $(go_rand_files) math.gox sync.gox\n+\t$(BUILDPACKAGE)\n+rand/librand.lo: rand/librand.$(OBJEXT)\n+rand/librand.la: rand/librand.lo\n rand/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: rand/check\n \n-reflect/libreflect.a: $(go_reflect_files) math.gox runtime.gox strconv.gox \\\n-\t\tsync.gox\n-\t$(BUILDARCHIVE)\n-reflect/libreflect.la: reflect/libreflect.a\n+reflect/libreflect.$(OBJEXT): $(go_reflect_files) math.gox runtime.gox \\\n+\t\tstrconv.gox sync.gox\n+\t$(BUILDPACKAGE)\n+reflect/libreflect.lo: reflect/libreflect.$(OBJEXT)\n+reflect/libreflect.la: reflect/libreflect.lo\n reflect/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: reflect/check\n \n-regexp/libregexp.a: $(go_regexp_files) bytes.gox io.gox os.gox strings.gox \\\n-\t\tutf8.gox\n-\t$(BUILDARCHIVE)\n-regexp/libregexp.la: regexp/libregexp.a\n+regexp/libregexp.$(OBJEXT): $(go_regexp_files) bytes.gox io.gox os.gox \\\n+\t\tstrings.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+regexp/libregexp.lo: regexp/libregexp.$(OBJEXT)\n+regexp/libregexp.la: regexp/libregexp.lo\n regexp/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: regexp/check\n \n-rpc/librpc.a: $(go_rpc_files) bufio.gox fmt.gox gob.gox http.gox io.gox \\\n-\t\tlog.gox net.gox os.gox reflect.gox sort.gox strings.gox \\\n-\t\tstrconv.gox sync.gox template.gox unicode.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-rpc/librpc.la: rpc/librpc.a\n+rpc/librpc.$(OBJEXT): $(go_rpc_files) bufio.gox fmt.gox gob.gox http.gox \\\n+\t\tio.gox log.gox net.gox os.gox reflect.gox sort.gox \\\n+\t\tstrings.gox strconv.gox sync.gox template.gox unicode.gox \\\n+\t\tutf8.gox\n+\t$(BUILDPACKAGE)\n+rpc/librpc.lo: rpc/librpc.$(OBJEXT)\n+rpc/librpc.la: rpc/librpc.lo\n rpc/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: rpc/check\n \n-runtime/libruntime.a: $(go_runtime_files)\n-\t$(BUILDARCHIVE)\n-runtime/libruntime.la: runtime/libruntime.a\n+runtime/libruntime.$(OBJEXT): $(go_runtime_files)\n+\t$(BUILDPACKAGE)\n+runtime/libruntime.lo: runtime/libruntime.$(OBJEXT)\n+runtime/libruntime.la: runtime/libruntime.lo\n runtime/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: runtime/check\n \n-scanner/libscanner.a: $(go_scanner_files) bytes.gox fmt.gox io.gox os.gox \\\n-\t\tunicode.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-scanner/libscanner.la: scanner/libscanner.a\n+scanner/libscanner.$(OBJEXT): $(go_scanner_files) bytes.gox fmt.gox io.gox \\\n+\t\tos.gox unicode.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+scanner/libscanner.lo: scanner/libscanner.$(OBJEXT)\n+scanner/libscanner.la: scanner/libscanner.lo\n scanner/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: scanner/check\n \n-smtp/libsmtp.a: $(go_smtp_files) crypto/tls.gox encoding/base64.gox io.gox \\\n-\t\tnet.gox net/textproto.gox os.gox strings.gox\n-\t$(BUILDARCHIVE)\n-smtp/libsmtp.la: smtp/libsmtp.a\n+smtp/libsmtp.$(OBJEXT): $(go_smtp_files) crypto/tls.gox encoding/base64.gox \\\n+\t\tio.gox net.gox net/textproto.gox os.gox strings.gox\n+\t$(BUILDPACKAGE)\n+smtp/libsmtp.lo: smtp/libsmtp.$(OBJEXT)\n+smtp/libsmtp.la: smtp/libsmtp.lo\n smtp/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: smtp/check\n \n-sort/libsort.a: $(go_sort_files)\n-\t$(BUILDARCHIVE)\n-sort/libsort.la: sort/libsort.a\n+sort/libsort.$(OBJEXT): $(go_sort_files)\n+\t$(BUILDPACKAGE)\n+sort/libsort.lo: sort/libsort.$(OBJEXT)\n+sort/libsort.la: sort/libsort.lo\n sort/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: sort/check\n \n-strconv/libstrconv.a: $(go_strconv_files) bytes.gox math.gox os.gox \\\n+strconv/libstrconv.$(OBJEXT): $(go_strconv_files) bytes.gox math.gox os.gox \\\n \t\tstrings.gox unicode.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-strconv/libstrconv.la: strconv/libstrconv.a\n+\t$(BUILDPACKAGE)\n+strconv/libstrconv.lo: strconv/libstrconv.$(OBJEXT)\n+strconv/libstrconv.la: strconv/libstrconv.lo\n strconv/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: strconv/check\n \n-strings/libstrings.a: $(go_strings_files) os.gox unicode.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-strings/libstrings.la: strings/libstrings.a\n+strings/libstrings.$(OBJEXT): $(go_strings_files) os.gox unicode.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+strings/libstrings.lo: strings/libstrings.$(OBJEXT)\n+strings/libstrings.la: strings/libstrings.lo\n strings/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: strings/check\n \n-sync/libsync.a: $(go_sync_files) $(go_sync_c_files) runtime.gox\n+sync/mutex.$(OBJEXT): $(go_sync_files) $(go_sync_c_files) runtime.gox\n \ttest -d sync || $(MKDIR_P) sync\n \t$(LTGOCOMPILE) -I . -c -o sync/mutex.$(OBJEXT) -fgo-prefix=libgo_sync $(srcdir)/go/sync/mutex.go $(srcdir)/go/sync/once.go $(srcdir)/go/sync/rwmutex.go\n+sync/cas.$(OBJEXT): $(srcdir)/go/sync/cas.c sync/mutex.$(OBJEXT)\n \t$(LTCOMPILE) -c -o sync/cas.$(OBJEXT) $(srcdir)/go/sync/cas.c\n-\trm -f $@\n-\t$(AR) rc $@ sync/mutex.$(OBJEXT) sync/cas.$(OBJEXT)\n-sync/libsync.la: sync/libsync.a\n+sync/libsync.la: sync/mutex.$(OBJEXT) sync/cas.$(OBJEXT)\n \t$(LINK) sync/mutex.lo sync/cas.lo\n sync/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: sync/check\n \n-syslog/libsyslog.a: $(go_syslog_files) fmt.gox log.gox net.gox os.gox\n-\t$(BUILDARCHIVE)\n-syslog/libsyslog.la: syslog/libsyslog.a\n+syslog/libsyslog.$(OBJEXT): $(go_syslog_files) fmt.gox log.gox net.gox os.gox\n+\t$(BUILDPACKAGE)\n+syslog/libsyslog.lo: syslog/libsyslog.$(OBJEXT)\n+syslog/libsyslog.la: syslog/libsyslog.lo\n syslog/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: syslog/check\n \n-tabwriter/libtabwriter.a: $(go_tabwriter_files) bytes.gox io.gox os.gox \\\n-\t\tutf8.gox\n-\t$(BUILDARCHIVE)\n-tabwriter/libtabwriter.la: tabwriter/libtabwriter.a\n+tabwriter/libtabwriter.$(OBJEXT): $(go_tabwriter_files) bytes.gox io.gox \\\n+\t\tos.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+tabwriter/libtabwriter.lo: tabwriter/libtabwriter.$(OBJEXT)\n+tabwriter/libtabwriter.la: tabwriter/libtabwriter.lo\n tabwriter/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: tabwriter/check\n \n-template/libtemplate.a: $(go_template_files) bytes.gox fmt.gox io.gox os.gox \\\n-\t\treflect.gox runtime.gox strings.gox container/vector.gox\n-\t$(BUILDARCHIVE)\n-template/libtemplate.la: template/libtemplate.a\n+template/libtemplate.$(OBJEXT): $(go_template_files) bytes.gox fmt.gox io.gox \\\n+\t\tos.gox reflect.gox runtime.gox strings.gox container/vector.gox\n+\t$(BUILDPACKAGE)\n+template/libtemplate.lo: template/libtemplate.$(OBJEXT)\n+template/libtemplate.la: template/libtemplate.lo\n template/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: template/check\n \n-testing/libtesting.a: $(go_testing_files) flag.gox fmt.gox os.gox regexp.gox \\\n-\t\truntime.gox time.gox\n-\t$(BUILDARCHIVE)\n-testing/libtesting.la: testing/libtesting.a\n+testing/libtesting.$(OBJEXT): $(go_testing_files) flag.gox fmt.gox os.gox \\\n+\t\tregexp.gox runtime.gox time.gox\n+\t$(BUILDPACKAGE)\n+testing/libtesting.lo: testing/libtesting.$(OBJEXT)\n+testing/libtesting.la: testing/libtesting.lo\n testing/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: testing/check\n \n-time/libtime.a: $(go_time_files) bytes.gox container/heap.gox io/ioutil.gox \\\n-\t\tos.gox strconv.gox sync.gox syscall.gox\n-\t$(BUILDARCHIVE)\n-time/libtime.la: time/libtime.a\n+time/libtime.$(OBJEXT): $(go_time_files) bytes.gox container/heap.gox \\\n+\t\tio/ioutil.gox os.gox strconv.gox sync.gox syscall.gox\n+\t$(BUILDPACKAGE)\n+time/libtime.lo: time/libtime.$(OBJEXT)\n+time/libtime.la: time/libtime.lo\n time/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: time/check\n \n-try/libtry.a: $(go_try_files) fmt.gox io.gox os.gox reflect.gox unicode.gox\n-\t$(BUILDARCHIVE)\n-try/libtry.la: try/libtry.a\n+try/libtry.$(OBJEXT): $(go_try_files) fmt.gox io.gox os.gox reflect.gox \\\n+\t\tunicode.gox\n+\t$(BUILDPACKAGE)\n+try/libtry.lo: try/libtry.$(OBJEXT)\n+try/libtry.la: try/libtry.lo\n try/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: try/check\n \n-unicode/libunicode.a: $(go_unicode_files)\n-\t$(BUILDARCHIVE)\n-unicode/libunicode.la: unicode/libunicode.a\n+unicode/libunicode.$(OBJEXT): $(go_unicode_files)\n+\t$(BUILDPACKAGE)\n+unicode/libunicode.lo: unicode/libunicode.$(OBJEXT)\n+unicode/libunicode.la: unicode/libunicode.lo\n unicode/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: unicode/check\n \n-utf16/libutf16.a: $(go_utf16_files) unicode.gox\n-\t$(BUILDARCHIVE)\n-utf16/libutf16.la: utf16/libutf16.a\n+utf16/libutf16.$(OBJEXT): $(go_utf16_files) unicode.gox\n+\t$(BUILDPACKAGE)\n+utf16/libutf16.lo: utf16/libutf16.$(OBJEXT)\n+utf16/libutf16.la: utf16/libutf16.lo\n utf16/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: utf16/check\n \n-utf8/libutf8.a: $(go_utf8_files) unicode.gox\n-\t$(BUILDARCHIVE)\n-utf8/libutf8.la: utf8/libutf8.a\n+utf8/libutf8.$(OBJEXT): $(go_utf8_files) unicode.gox\n+\t$(BUILDPACKAGE)\n+utf8/libutf8.lo: utf8/libutf8.$(OBJEXT)\n+utf8/libutf8.la: utf8/libutf8.lo\n utf8/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: utf8/check\n \n-websocket/libwebsocket.a: $(go_websocket_files) bufio.gox bytes.gox \\\n+websocket/libwebsocket.$(OBJEXT): $(go_websocket_files) bufio.gox bytes.gox \\\n \t\tcontainer/vector.gox crypto/md5.gox crypto/tls.gox \\\n \t\tencoding/binary.gox fmt.gox http.gox io.gox net.gox os.gox \\\n \t\trand.gox strings.gox\n-\t$(BUILDARCHIVE)\n-websocket/libwebsocket.la: websocket/libwebsocket.a\n+\t$(BUILDPACKAGE)\n+websocket/libwebsocket.lo: websocket/libwebsocket.$(OBJEXT)\n+websocket/libwebsocket.la: websocket/libwebsocket.lo\n websocket/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: websocket/check\n \n-xml/libxml.a: $(go_xml_files) bufio.gox bytes.gox fmt.gox io.gox os.gox \\\n-\t\treflect.gox strconv.gox strings.gox unicode.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-xml/libxml.la: xml/libxml.a\n+xml/libxml.$(OBJEXT): $(go_xml_files) bufio.gox bytes.gox fmt.gox io.gox \\\n+\t\tos.gox reflect.gox strconv.gox strings.gox unicode.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+xml/libxml.lo: xml/libxml.$(OBJEXT)\n+xml/libxml.la: xml/libxml.lo\n xml/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: xml/check\n \n-archive/libtar.a: $(go_archive_tar_files) bytes.gox io.gox os.gox strconv.gox \\\n-\t\tstrings.gox\n-\t$(BUILDARCHIVE)\n-archive/libtar.la: archive/libtar.a\n+archive/libtar.$(OBJEXT): $(go_archive_tar_files) bytes.gox io.gox os.gox \\\n+\t\tstrconv.gox strings.gox\n+\t$(BUILDPACKAGE)\n+archive/libtar.lo: archive/libtar.$(OBJEXT)\n+archive/libtar.la: archive/libtar.lo\n archive/tar/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) archive/tar\n \t$(CHECK)\n .PHONY: archive/tar/check\n \n-archive/libzip.a: $(go_archive_zip_files) bufio.gox bytes.gox \\\n+archive/libzip.$(OBJEXT): $(go_archive_zip_files) bufio.gox bytes.gox \\\n \t\tcompress/flate.gox hash.gox hash/crc32.gox \\\n \t\tencoding/binary.gox io.gox os.gox\n-\t$(BUILDARCHIVE)\n-archive/libzip.la: archive/libzip.a\n+\t$(BUILDPACKAGE)\n+archive/libzip.lo: archive/libzip.$(OBJEXT)\n+archive/libzip.la: archive/libzip.lo\n archive/zip/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) archive/zip\n \t$(CHECK)\n .PHONY: archive/zip/check\n \n-compress/libflate.a: $(go_compress_flate_files) bufio.gox io.gox math.gox \\\n-\t\tos.gox sort.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-compress/libflate.la: compress/libflate.a\n+compress/libflate.$(OBJEXT): $(go_compress_flate_files) bufio.gox io.gox \\\n+\t\tmath.gox os.gox sort.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+compress/libflate.lo: compress/libflate.$(OBJEXT)\n+compress/libflate.la: compress/libflate.lo\n compress/flate/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/flate\n \t$(CHECK)\n .PHONY: compress/flate/check\n \n-compress/libgzip.a: $(go_compress_gzip_files) bufio.gox compress/flate.gox \\\n-\t\thash.gox hash/crc32.gox io.gox os.gox\n-\t$(BUILDARCHIVE)\n-compress/libgzip.la: compress/libgzip.a\n+compress/libgzip.$(OBJEXT): $(go_compress_gzip_files) bufio.gox \\\n+\t\tcompress/flate.gox hash.gox hash/crc32.gox io.gox os.gox\n+\t$(BUILDPACKAGE)\n+compress/libgzip.lo: compress/libgzip.$(OBJEXT)\n+compress/libgzip.la: compress/libgzip.lo\n compress/gzip/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/gzip\n \t$(CHECK)\n .PHONY: compress/gzip/check\n \n-compress/libzlib.a: $(go_compress_zlib_files) bufio.gox compress/flate.gox \\\n-\t\thash.gox hash/adler32.gox io.gox os.gox\n-\t$(BUILDARCHIVE)\n-compress/libzlib.la: compress/libzlib.a\n+compress/libzlib.$(OBJEXT): $(go_compress_zlib_files) bufio.gox \\\n+\t\tcompress/flate.gox hash.gox hash/adler32.gox io.gox os.gox\n+\t$(BUILDPACKAGE)\n+compress/libzlib.lo: compress/libzlib.$(OBJEXT)\n+compress/libzlib.la: compress/libzlib.lo\n compress/zlib/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/zlib\n \t$(CHECK)\n .PHONY: compress/zlib/check\n \n-container/libheap.a: $(go_container_heap_files) sort.gox\n-\t$(BUILDARCHIVE)\n-container/libheap.la: container/libheap.a\n+container/libheap.$(OBJEXT): $(go_container_heap_files) sort.gox\n+\t$(BUILDPACKAGE)\n+container/libheap.lo: container/libheap.$(OBJEXT)\n+container/libheap.la: container/libheap.lo\n container/heap/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/heap\n \t$(CHECK)\n .PHONY: container/heap/check\n \n-container/liblist.a: $(go_container_list_files)\n-\t$(BUILDARCHIVE)\n-container/liblist.la: container/liblist.a\n+container/liblist.$(OBJEXT): $(go_container_list_files)\n+\t$(BUILDPACKAGE)\n+container/liblist.lo: container/liblist.$(OBJEXT)\n+container/liblist.la: container/liblist.lo\n container/list/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/list\n \t$(CHECK)\n .PHONY: container/list/check\n \n-container/libring.a: $(go_container_ring_files)\n-\t$(BUILDARCHIVE)\n-container/libring.la: container/libring.a\n+container/libring.$(OBJEXT): $(go_container_ring_files)\n+\t$(BUILDPACKAGE)\n+container/libring.lo: container/libring.$(OBJEXT)\n+container/libring.la: container/libring.lo\n container/ring/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/ring\n \t$(CHECK)\n .PHONY: container/ring/check\n \n-container/libvector.a: $(go_container_vector_files)\n-\t$(BUILDARCHIVE)\n-container/libvector.la: container/libvector.a\n+container/libvector.$(OBJEXT): $(go_container_vector_files)\n+\t$(BUILDPACKAGE)\n+container/libvector.lo: container/libvector.$(OBJEXT)\n+container/libvector.la: container/libvector.lo\n container/vector/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/vector\n \t$(CHECK)\n .PHONY: container/vector/check\n \n-crypto/libaes.a: $(go_crypto_aes_files) os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-crypto/libaes.la: crypto/libaes.a\n+crypto/libaes.$(OBJEXT): $(go_crypto_aes_files) os.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+crypto/libaes.lo: crypto/libaes.$(OBJEXT)\n+crypto/libaes.la: crypto/libaes.lo\n crypto/aes/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/aes\n \t$(CHECK)\n .PHONY: crypto/aes/check\n \n-crypto/libblock.a: $(go_crypto_block_files) fmt.gox io.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-crypto/libblock.la: crypto/libblock.a\n+crypto/libblock.$(OBJEXT): $(go_crypto_block_files) fmt.gox io.gox os.gox \\\n+\t\tstrconv.gox\n+\t$(BUILDPACKAGE)\n+crypto/libblock.lo: crypto/libblock.$(OBJEXT)\n+crypto/libblock.la: crypto/libblock.lo\n crypto/block/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/block\n \t$(CHECK)\n .PHONY: crypto/block/check\n \n-crypto/libblowfish.a: $(go_crypto_blowfish_files) os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-crypto/libblowfish.la: crypto/libblowfish.a\n+crypto/libblowfish.$(OBJEXT): $(go_crypto_blowfish_files) os.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+crypto/libblowfish.lo: crypto/libblowfish.$(OBJEXT)\n+crypto/libblowfish.la: crypto/libblowfish.lo\n crypto/blowfish/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/blowfish\n \t$(CHECK)\n .PHONY: crypto/blowfish/check\n \n-crypto/libcast5.a: $(go_crypto_cast5_files) os.gox\n-\t$(BUILDARCHIVE)\n-crypto/libcast5.la: crypto/libcast5.a\n+crypto/libcast5.$(OBJEXT): $(go_crypto_cast5_files) os.gox\n+\t$(BUILDPACKAGE)\n+crypto/libcast5.lo: crypto/libcast5.$(OBJEXT)\n+crypto/libcast5.la: crypto/libcast5.lo\n crypt/cast5/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/cast5\n \t$(CHECK)\n .PHONY: crypto/cast5/check\n \n-crypto/libcipher.a: $(go_crypto_cipher_files) io.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/libcipher.la: crypto/libcipher.a\n+crypto/libcipher.$(OBJEXT): $(go_crypto_cipher_files) io.gox os.gox\n+\t$(BUILDPACKAGE)\n+crypto/libcipher.lo: crypto/libcipher.$(OBJEXT)\n+crypto/libcipher.la: crypto/libcipher.lo\n crypto/cipher/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/cipher\n \t$(CHECK)\n .PHONY: crypto/cipher/check\n \n-crypto/libelliptic.a: $(go_crypto_elliptic_files) big.gox io.gox os.gox \\\n-\t\tsync.gox\n-\t$(BUILDARCHIVE)\n-crypto/libelliptic.la: crypto/libelliptic.a\n+crypto/libelliptic.$(OBJEXT): $(go_crypto_elliptic_files) big.gox io.gox \\\n+\t\tos.gox sync.gox\n+\t$(BUILDPACKAGE)\n+crypto/libelliptic.lo: crypto/libelliptic.$(OBJEXT)\n+crypto/libelliptic.la: crypto/libelliptic.lo\n crypto/elliptic/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/elliptic\n \t$(CHECK)\n .PHONY: crypto/elliptic/check\n \n-crypto/libhmac.a: $(go_crypto_hmac_files) crypto/md5.gox crypto/sha1.gox \\\n-\t\tcrypto/sha256.gox hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/libhmac.la: crypto/libhmac.a\n+crypto/libhmac.$(OBJEXT): $(go_crypto_hmac_files) crypto/md5.gox \\\n+\t\tcrypto/sha1.gox crypto/sha256.gox hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+crypto/libhmac.lo: crypto/libhmac.$(OBJEXT)\n+crypto/libhmac.la: crypto/libhmac.lo\n crypto/hmac/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/hmac\n \t$(CHECK)\n .PHONY: crypto/hmac/check\n \n-crypto/libmd4.a: $(go_crypto_md4_files) hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/libmd4.la: crypto/libmd4.a\n+crypto/libmd4.$(OBJEXT): $(go_crypto_md4_files) hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+crypto/libmd4.lo: crypto/libmd4.$(OBJEXT)\n+crypto/libmd4.la: crypto/libmd4.lo\n crypto/md4/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/md4\n \t$(CHECK)\n .PHONY: crypto/md4/check\n \n-crypto/libmd5.a: $(go_crypto_md5_files) hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/libmd5.la: crypto/libmd5.a\n+crypto/libmd5.$(OBJEXT): $(go_crypto_md5_files) hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+crypto/libmd5.lo: crypto/libmd5.$(OBJEXT)\n+crypto/libmd5.la: crypto/libmd5.lo\n crypto/md5/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/md5\n \t$(CHECK)\n .PHONY: crypto/md5/check\n \n-crypto/libocsp.a: $(go_crypto_ocsp_files) asn1.gox crypto/rsa.gox \\\n+crypto/libocsp.$(OBJEXT): $(go_crypto_ocsp_files) asn1.gox crypto/rsa.gox \\\n \t\tcrypto/sha1.gox crypto/x509.gox os.gox time.gox\n-\t$(BUILDARCHIVE)\n-crypto/libocsp.la: crypto/libocsp.a\n+\t$(BUILDPACKAGE)\n+crypto/libocsp.lo: crypto/libocsp.$(OBJEXT)\n+crypto/libocsp.la: crypto/libocsp.lo\n crypto/ocsp/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ocsp\n \t$(CHECK)\n .PHONY: crypto/ocsp/check\n \n-crypto/librand.a: $(go_crypto_rand_files) crypto/aes.gox io.gox os.gox \\\n+crypto/librand.$(OBJEXT): $(go_crypto_rand_files) crypto/aes.gox io.gox os.gox \\\n \t\tsync.gox time.gox\n-\t$(BUILDARCHIVE)\n-crypto/librand.la: crypto/librand.a\n+\t$(BUILDPACKAGE)\n+crypto/librand.lo: crypto/librand.$(OBJEXT)\n+crypto/librand.la: crypto/librand.lo\n crypto/rand/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rand\n \t$(CHECK)\n .PHONY: crypto/rand/check\n \n-crypto/librc4.a: $(go_crypto_rc4_files) os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-crypto/librc4.la: crypto/librc4.a\n+crypto/librc4.$(OBJEXT): $(go_crypto_rc4_files) os.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+crypto/librc4.lo: crypto/librc4.$(OBJEXT)\n+crypto/librc4.la: crypto/librc4.lo\n crypto/rc4/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rc4\n \t$(CHECK)\n .PHONY: crypto/rc4/check\n \n-crypto/libripemd160.a: $(go_crypto_ripemd160_files) hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/libripemd160.la: crypto/libripemd160.a\n+crypto/libripemd160.$(OBJEXT): $(go_crypto_ripemd160_files) hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+crypto/libripemd160.lo: crypto/libripemd160.$(OBJEXT)\n+crypto/libripemd160.la: crypto/libripemd160.lo\n crypto/ripemd160/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ripemd160\n \t$(CHECK)\n .PHONY: crypto/ripemd160/check\n \n-crypto/librsa.a: $(go_crypto_rsa_files) big.gox crypto/sha1.gox \\\n+crypto/librsa.$(OBJEXT): $(go_crypto_rsa_files) big.gox crypto/sha1.gox \\\n \t\tcrypto/subtle.gox encoding/hex.gox hash.gox io.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/librsa.la: crypto/librsa.a\n+\t$(BUILDPACKAGE)\n+crypto/librsa.lo: crypto/librsa.$(OBJEXT)\n+crypto/librsa.la: crypto/librsa.lo\n crypto/rsa/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rsa\n \t$(CHECK)\n .PHONY: crypto/rsa/check\n \n-crypto/libsha1.a: $(go_crypto_sha1_files) hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/libsha1.la: crypto/libsha1.a\n+crypto/libsha1.$(OBJEXT): $(go_crypto_sha1_files) hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+crypto/libsha1.lo: crypto/libsha1.$(OBJEXT)\n+crypto/libsha1.la: crypto/libsha1.lo\n crypto/sha1/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha1\n \t$(CHECK)\n .PHONY: crypto/sha1/check\n \n-crypto/libsha256.a: $(go_crypto_sha256_files) hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/libsha256.la: crypto/libsha256.a\n+crypto/libsha256.$(OBJEXT): $(go_crypto_sha256_files) hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+crypto/libsha256.lo: crypto/libsha256.$(OBJEXT)\n+crypto/libsha256.la: crypto/libsha256.lo\n crypto/sha256/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha256\n \t$(CHECK)\n .PHONY: crypto/sha256/check\n \n-crypto/libsha512.a: $(go_crypto_sha512_files) hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/libsha512.la: crypto/libsha512.a\n+crypto/libsha512.$(OBJEXT): $(go_crypto_sha512_files) hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+crypto/libsha512.lo: crypto/libsha512.$(OBJEXT)\n+crypto/libsha512.la: crypto/libsha512.lo\n crypto/sha512/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha512\n \t$(CHECK)\n .PHONY: crypto/sha512/check\n \n-crypto/libsubtle.a: $(go_crypto_subtle_files)\n-\t$(BUILDARCHIVE)\n-crypto/libsubtle.la: crypto/libsubtle.a\n+crypto/libsubtle.$(OBJEXT): $(go_crypto_subtle_files)\n+\t$(BUILDPACKAGE)\n+crypto/libsubtle.lo: crypto/libsubtle.$(OBJEXT)\n+crypto/libsubtle.la: crypto/libsubtle.lo\n crypto/subtle/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/subtle\n \t$(CHECK)\n .PHONY: crypto/subtle/check\n \n-crypto/libtls.a: $(go_crypto_tls_files) big.gox bufio.gox bytes.gox \\\n+crypto/libtls.$(OBJEXT): $(go_crypto_tls_files) big.gox bufio.gox bytes.gox \\\n \t\tcontainer/list.gox crypto/aes.gox crypto/cipher.gox \\\n \t\tcrypto/elliptic.gox crypto/hmac.gox crypto/md5.gox \\\n \t\tcrypto/rc4.gox crypto/rand.gox crypto/rsa.gox crypto/sha1.gox \\\n \t\tcrypto/subtle.gox crypto/rsa.gox crypto/sha1.gox \\\n \t\tcrypto/x509.gox encoding/pem.gox fmt.gox hash.gox io.gox \\\n \t\tio/ioutil.gox net.gox os.gox strings.gox sync.gox time.gox\n-\t$(BUILDARCHIVE)\n-crypto/libtls.la: crypto/libtls.a\n+\t$(BUILDPACKAGE)\n+crypto/libtls.lo: crypto/libtls.$(OBJEXT)\n+crypto/libtls.la: crypto/libtls.lo\n crypto/tls/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/tls\n \t$(CHECK)\n .PHONY: crypto/tls/check\n \n-crypto/libtwofish.a: $(go_crypto_twofish_files) os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-crypto/libtwofish.la: crypto/libtwofish.a\n+crypto/libtwofish.$(OBJEXT): $(go_crypto_twofish_files) os.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+crypto/libtwofish.lo: crypto/libtwofish.$(OBJEXT)\n+crypto/libtwofish.la: crypto/libtwofish.lo\n crypto/twofish/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/twofish\n \t$(CHECK)\n .PHONY: crypto/twofish/check\n \n-crypto/libx509.a: $(go_crypto_x509_files) asn1.gox big.gox \\\n+crypto/libx509.$(OBJEXT): $(go_crypto_x509_files) asn1.gox big.gox \\\n \t\tcontainer/vector.gox crypto/rsa.gox crypto/sha1.gox hash.gox \\\n \t\tos.gox strings.gox time.gox\n-\t$(BUILDARCHIVE)\n-crypto/libx509.la: crypto/libx509.a\n+\t$(BUILDPACKAGE)\n+crypto/libx509.lo: crypto/libx509.$(OBJEXT)\n+crypto/libx509.la: crypto/libx509.lo\n crypto/x509/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/x509\n \t$(CHECK)\n .PHONY: crypto/x509/check\n \n-crypto/libxtea.a: $(go_crypto_xtea_files) os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-crypto/libxtea.la: crypto/libxtea.a\n+crypto/libxtea.$(OBJEXT): $(go_crypto_xtea_files) os.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+crypto/libxtea.lo: crypto/libxtea.$(OBJEXT)\n+crypto/libxtea.la: crypto/libxtea.lo\n crypto/xtea/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/xtea\n \t$(CHECK)\n .PHONY: crypto/xtea/check\n \n-crypto/openpgp/libarmor.a: $(go_crypto_openpgp_armor_files) bytes.gox \\\n+crypto/openpgp/libarmor.$(OBJEXT): $(go_crypto_openpgp_armor_files) bytes.gox \\\n \t\tcrypto/openpgp/error.gox encoding/base64.gox \\\n \t\tencoding/line.gox io.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/openpgp/libarmor.la: crypto/openpgp/libarmor.a\n+\t$(BUILDPACKAGE)\n+crypto/openpgp/libarmor.lo: crypto/openpgp/libarmor.$(OBJEXT)\n+crypto/openpgp/libarmor.la: crypto/openpgp/libarmor.lo\n crypto/openpgp/armor/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/armor\n \t$(CHECK)\n .PHONY: crypto/openpgp/armor/check\n \n-crypto/openpgp/liberror.a: $(go_crypto_openpgp_error_files)\n-\t$(BUILDARCHIVE)\n-crypto/openpgp/liberror.la: crypto/openpgp/liberror.a\n+crypto/openpgp/liberror.$(OBJEXT): $(go_crypto_openpgp_error_files)\n+\t$(BUILDPACKAGE)\n+crypto/openpgp/liberror.lo: crypto/openpgp/liberror.$(OBJEXT)\n+crypto/openpgp/liberror.la: crypto/openpgp/liberror.lo\n crypto/openpgp/error/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/error\n \t$(CHECK)\n .PHONY: crypto/openpgp/error/check\n \n-crypto/openpgp/libs2k.a: $(go_crypto_openpgp_s2k_files) crypto/md5.gox \\\n+crypto/openpgp/libs2k.$(OBJEXT): $(go_crypto_openpgp_s2k_files) crypto/md5.gox \\\n \t\tcrypto/openpgp/error.gox crypto/ripemd160.gox crypto/sha1.gox \\\n \t\tcrypto/sha256.gox crypto/sha512.gox hash.gox io.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/openpgp/libs2k.la: crypto/openpgp/libs2k.a\n+\t$(BUILDPACKAGE)\n+crypto/openpgp/libs2k.lo: crypto/openpgp/libs2k.$(OBJEXT)\n+crypto/openpgp/libs2k.la: crypto/openpgp/libs2k.lo\n crypto/openpgp/s2k/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/s2k\n \t$(CHECK)\n .PHONY: crypto/openpgp/s2k/check\n \n-debug/libdwarf.a: $(go_debug_dwarf_files) encoding/binary.gox os.gox \\\n+debug/libdwarf.$(OBJEXT): $(go_debug_dwarf_files) encoding/binary.gox os.gox \\\n \t\tstrconv.gox\n-\t$(BUILDARCHIVE)\n-debug/libdwarf.la: debug/libdwarf.a\n+\t$(BUILDPACKAGE)\n+debug/libdwarf.lo: debug/libdwarf.$(OBJEXT)\n+debug/libdwarf.la: debug/libdwarf.lo\n debug/dwarf/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/dwarf\n \t$(CHECK)\n .PHONY: debug/dwarf/check\n \n-debug/libelf.a: $(go_debug_elf_files) bytes.gox debug/dwarf.gox \\\n+debug/libelf.$(OBJEXT): $(go_debug_elf_files) bytes.gox debug/dwarf.gox \\\n \t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-debug/libelf.la: debug/libelf.a\n+\t$(BUILDPACKAGE)\n+debug/libelf.lo: debug/libelf.$(OBJEXT)\n+debug/libelf.la: debug/libelf.lo\n debug/elf/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/elf\n \t$(CHECK)\n .PHONY: debug/elf/check\n \n-debug/libgosym.a: $(go_debug_gosym_files) encoding/binary.gox fmt.gox os.gox \\\n-\t\tstrconv.gox strings.gox\n-\t$(BUILDARCHIVE)\n-debug/libgosym.la: debug/libgosym.a\n+debug/libgosym.$(OBJEXT): $(go_debug_gosym_files) encoding/binary.gox fmt.gox \\\n+\t\tos.gox strconv.gox strings.gox\n+\t$(BUILDPACKAGE)\n+debug/libgosym.lo: debug/libgosym.$(OBJEXT)\n+debug/libgosym.la: debug/libgosym.lo\n debug/gosym/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/gosym\n \t$(CHECK)\n .PHONY: debug/gosym/check\n \n-debug/libmacho.a: $(go_debug_macho_files) bytes.gox debug/dwarf.gox \\\n+debug/libmacho.$(OBJEXT): $(go_debug_macho_files) bytes.gox debug/dwarf.gox \\\n \t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-debug/libmacho.la: debug/libmacho.a\n+\t$(BUILDPACKAGE)\n+debug/libmacho.lo: debug/libmacho.$(OBJEXT)\n+debug/libmacho.la: debug/libmacho.lo\n debug/macho/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/macho\n \t$(CHECK)\n .PHONY: debug/macho/check\n \n-debug/libpe.a: $(go_debug_pe_files) debug/dwarf.gox encoding/binary.gox \\\n-\t\tfmt.gox io.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-debug/libpe.la: debug/libpe.a\n+debug/libpe.$(OBJEXT): $(go_debug_pe_files) debug/dwarf.gox \\\n+\t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+debug/libpe.lo: debug/libpe.$(OBJEXT)\n+debug/libpe.la: debug/libpe.lo\n debug/pe/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/pe\n \t$(CHECK)\n .PHONY: debug/pe/check\n \n-debug/libproc.a: $(go_debug_proc_files) container/vector.gox fmt.gox \\\n+debug/libproc.$(OBJEXT): $(go_debug_proc_files) container/vector.gox fmt.gox \\\n \t\tio/ioutil.gox os.gox runtime.gox strconv.gox strings.gox \\\n \t\tsync.gox syscall.gox\n-\t$(BUILDARCHIVE)\n-debug/libproc.la: debug/libproc.a\n+\t$(BUILDPACKAGE)\n+debug/libproc.lo: debug/libproc.$(OBJEXT)\n+debug/libproc.la: debug/libproc.lo\n debug/proc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/proc\n \t$(CHECK)\n .PHONY: debug/proc/check\n \n-encoding/libascii85.a: $(go_encoding_ascii85_files) io.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-encoding/libascii85.la: encoding/libascii85.a\n+encoding/libascii85.$(OBJEXT): $(go_encoding_ascii85_files) io.gox os.gox \\\n+\t\tstrconv.gox\n+\t$(BUILDPACKAGE)\n+encoding/libascii85.lo: encoding/libascii85.$(OBJEXT)\n+encoding/libascii85.la: encoding/libascii85.lo\n encoding/ascii85/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/ascii85\n \t$(CHECK)\n .PHONY: encoding/ascii85/check\n \n-encoding/libbase32.a: $(go_encoding_base32_files) io.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-encoding/libbase32.la: encoding/libbase32.a\n+encoding/libbase32.$(OBJEXT): $(go_encoding_base32_files) io.gox os.gox \\\n+\t\tstrconv.gox\n+\t$(BUILDPACKAGE)\n+encoding/libbase32.lo: encoding/libbase32.$(OBJEXT)\n+encoding/libbase32.la: encoding/libbase32.lo\n encoding/base32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/base32\n \t$(CHECK)\n .PHONY: encoding/base32/check\n \n-encoding/libbase64.a: $(go_encoding_base64_files) io.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-encoding/libbase64.la: encoding/libbase64.a\n+encoding/libbase64.$(OBJEXT): $(go_encoding_base64_files) io.gox os.gox \\\n+\t\tstrconv.gox\n+\t$(BUILDPACKAGE)\n+encoding/libbase64.lo: encoding/libbase64.$(OBJEXT)\n+encoding/libbase64.la: encoding/libbase64.lo\n encoding/base64/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/base64\n \t$(CHECK)\n .PHONY: encoding/base64/check\n \n-encoding/libbinary.a: $(go_encoding_binary_files) io.gox math.gox os.gox \\\n-\t\treflect.gox\n-\t$(BUILDARCHIVE)\n-encoding/libbinary.la: encoding/libbinary.a\n+encoding/libbinary.$(OBJEXT): $(go_encoding_binary_files) io.gox math.gox \\\n+\t\tos.gox reflect.gox\n+\t$(BUILDPACKAGE)\n+encoding/libbinary.lo: encoding/libbinary.$(OBJEXT)\n+encoding/libbinary.la: encoding/libbinary.lo\n encoding/binary/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/binary\n \t$(CHECK)\n .PHONY: encoding/binary/check\n \n-encoding/libgit85.a: $(go_encoding_git85_files) bytes.gox io.gox os.gox \\\n-\t\tstrconv.gox\n-\t$(BUILDARCHIVE)\n-encoding/libgit85.la: encoding/libgit85.a\n+encoding/libgit85.$(OBJEXT): $(go_encoding_git85_files) bytes.gox io.gox \\\n+\t\tos.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+encoding/libgit85.lo: encoding/libgit85.$(OBJEXT)\n+encoding/libgit85.la: encoding/libgit85.lo\n encoding/git85/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/git85\n \t$(CHECK)\n .PHONY: encoding/git85/check\n \n-encoding/libhex.a: $(go_encoding_hex_files) os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-encoding/libhex.la: encoding/libhex.a\n+encoding/libhex.$(OBJEXT): $(go_encoding_hex_files) os.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+encoding/libhex.lo: encoding/libhex.$(OBJEXT)\n+encoding/libhex.la: encoding/libhex.lo\n encoding/hex/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/hex\n \t$(CHECK)\n .PHONY: encoding/hex/check\n \n-encoding/libline.a: $(go_encoding_line_files) io.gox os.gox\n-\t$(BUILDARCHIVE)\n-encoding/libline.la: encoding/libline.a\n+encoding/libline.$(OBJEXT): $(go_encoding_line_files) io.gox os.gox\n+\t$(BUILDPACKAGE)\n+encoding/libline.lo: encoding/libline.$(OBJEXT)\n+encoding/libline.la: encoding/libline.lo\n encoding/line/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/line\n \t$(CHECK)\n .PHONY: encoding/line/check\n \n-encoding/libpem.a: $(go_encoding_pem_files) bytes.gox encoding/base64.gox\n-\t$(BUILDARCHIVE)\n-encoding/libpem.la: encoding/libpem.a\n+encoding/libpem.$(OBJEXT): $(go_encoding_pem_files) bytes.gox \\\n+\t\tencoding/base64.gox\n+\t$(BUILDPACKAGE)\n+encoding/libpem.lo: encoding/libpem.$(OBJEXT)\n+encoding/libpem.la: encoding/libpem.lo\n encoding/pem/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/pem\n \t$(CHECK)\n .PHONY: encoding/pem/check\n \n-exp/libdatafmt.a: $(go_exp_datafmt_files) bytes.gox container/vector.gox \\\n-\t\tfmt.gox go/scanner.gox go/token.gox io.gox os.gox reflect.gox \\\n-\t\truntime.gox strconv.gox strings.gox\n-\t$(BUILDARCHIVE)\n-exp/libdatafmt.la: exp/libdatafmt.a\n+exp/libdatafmt.$(OBJEXT): $(go_exp_datafmt_files) bytes.gox \\\n+\t\tcontainer/vector.gox fmt.gox go/scanner.gox go/token.gox \\\n+\t\tio.gox os.gox reflect.gox runtime.gox strconv.gox strings.gox\n+\t$(BUILDPACKAGE)\n+exp/libdatafmt.lo: exp/libdatafmt.$(OBJEXT)\n+exp/libdatafmt.la: exp/libdatafmt.lo\n exp/datafmt/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/datafmt\n \t$(CHECK)\n .PHONY: exp/datafmt/check\n \n-exp/libdraw.a: $(go_exp_draw_files) image.gox os.gox\n-\t$(BUILDARCHIVE)\n-exp/libdraw.la: exp/libdraw.a\n+exp/libdraw.$(OBJEXT): $(go_exp_draw_files) image.gox os.gox\n+\t$(BUILDPACKAGE)\n+exp/libdraw.lo: exp/libdraw.$(OBJEXT)\n+exp/libdraw.la: exp/libdraw.lo\n exp/draw/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/draw\n \t$(CHECK)\n .PHONY: exp/draw/check\n \n-exp/libeval.a: $(go_exp_eval_files) big.gox go/ast.gox go/parser.gox \\\n+exp/libeval.$(OBJEXT): $(go_exp_eval_files) big.gox go/ast.gox go/parser.gox \\\n \t\tgo/scanner.gox go/token.gox fmt.gox log.gox strconv.gox \\\n \t\tstrings.gox os.gox reflect.gox runtime.gox sort.gox template.gox\n-\t$(BUILDARCHIVE)\n-exp/libeval.la: exp/libeval.a\n+\t$(BUILDPACKAGE)\n+exp/libeval.lo: exp/libeval.$(OBJEXT)\n+exp/libeval.la: exp/libeval.lo\n exp/eval/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/eval\n \t$(CHECK)\n .PHONY: exp/eval/check\n \n-go/libast.a: $(go_go_ast_files) fmt.gox go/token.gox io.gox os.gox \\\n+go/libast.$(OBJEXT): $(go_go_ast_files) fmt.gox go/token.gox io.gox os.gox \\\n \t\treflect.gox unicode.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-go/libast.la: go/libast.a\n+\t$(BUILDPACKAGE)\n+go/libast.lo: go/libast.$(OBJEXT)\n+go/libast.la: go/libast.lo\n go/ast/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/ast\n \t$(CHECK)\n .PHONY: go/ast/check\n \n-go/libdoc.a: $(go_go_doc_files) go/ast.gox go/token.gox io.gox regexp.gox \\\n-\t\tsort.gox strings.gox template.gox\n-\t$(BUILDARCHIVE)\n-go/libdoc.la: go/libdoc.a\n+go/libdoc.$(OBJEXT): $(go_go_doc_files) go/ast.gox go/token.gox io.gox \\\n+\t\tregexp.gox sort.gox strings.gox template.gox\n+\t$(BUILDPACKAGE)\n+go/libdoc.lo: go/libdoc.$(OBJEXT)\n+go/libdoc.la: go/libdoc.lo\n go/doc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/doc\n \t$(CHECK)\n .PHONY: go/doc/check\n \n-go/libparser.a: $(go_go_parser_files) bytes.gox fmt.gox go/ast.gox \\\n+go/libparser.$(OBJEXT): $(go_go_parser_files) bytes.gox fmt.gox go/ast.gox \\\n \t\tgo/scanner.gox go/token.gox io.gox io/ioutil.gox os.gox \\\n \t\tpath.gox strings.gox\n-\t$(BUILDARCHIVE)\n-go/libparser.la: go/libparser.a\n+\t$(BUILDPACKAGE)\n+go/libparser.lo: go/libparser.$(OBJEXT)\n+go/libparser.la: go/libparser.lo\n go/parser/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/parser\n \t$(CHECK)\n .PHONY: go/parser/check\n \n-go/libprinter.a: $(go_go_printer_files) bytes.gox fmt.gox go/ast.gox \\\n+go/libprinter.$(OBJEXT): $(go_go_printer_files) bytes.gox fmt.gox go/ast.gox \\\n \t\tgo/token.gox io.gox os.gox reflect.gox runtime.gox \\\n \t\tstrings.gox tabwriter.gox\n-\t$(BUILDARCHIVE)\n-go/libprinter.la: go/libprinter.a\n+\t$(BUILDPACKAGE)\n+go/libprinter.lo: go/libprinter.$(OBJEXT)\n+go/libprinter.la: go/libprinter.lo\n go/printer/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/printer\n \t$(CHECK)\n .PHONY: go/printer/check\n \n-go/libscanner.a: $(go_go_scanner_files) bytes.gox container/vector.gox fmt.gox \\\n-\t\tgo/token.gox io.gox os.gox path.gox sort.gox strconv.gox \\\n-\t\tunicode.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-go/libscanner.la: go/libscanner.a\n+go/libscanner.$(OBJEXT): $(go_go_scanner_files) bytes.gox \\\n+\t\tcontainer/vector.gox fmt.gox go/token.gox io.gox os.gox \\\n+\t\tpath.gox sort.gox strconv.gox unicode.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+go/libscanner.lo: go/libscanner.$(OBJEXT)\n+go/libscanner.la: go/libscanner.lo\n go/scanner/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/scanner\n \t$(CHECK)\n .PHONY: go/scanner/check\n \n-go/libtoken.a: $(go_go_token_files) fmt.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-go/libtoken.la: go/libtoken.a\n+go/libtoken.$(OBJEXT): $(go_go_token_files) fmt.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+go/libtoken.lo: go/libtoken.$(OBJEXT)\n+go/libtoken.la: go/libtoken.lo\n go/token/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/token\n \t$(CHECK)\n .PHONY: go/token/check\n \n-go/libtypechecker.a: $(go_go_typechecker_files) fmt.gox go/ast.gox \\\n+go/libtypechecker.$(OBJEXT): $(go_go_typechecker_files) fmt.gox go/ast.gox \\\n \t\tgo/token.gox go/scanner.gox os.gox\n-\t$(BUILDARCHIVE)\n-go/libtypechecker.la: go/libtypechecker.a\n+\t$(BUILDPACKAGE)\n+go/libtypechecker.lo: go/libtypechecker.$(OBJEXT)\n+go/libtypechecker.la: go/libtypechecker.lo\n go/typechecker/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/typechecker\n \t$(CHECK)\n .PHONY: go/typechecker/check\n \n-hash/libadler32.a: $(go_hash_adler32_files) hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-hash/libadler32.la: hash/libadler32.a\n+hash/libadler32.$(OBJEXT): $(go_hash_adler32_files) hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+hash/libadler32.lo: hash/libadler32.$(OBJEXT)\n+hash/libadler32.la: hash/libadler32.lo\n hash/adler32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/adler32\n \t$(CHECK)\n .PHONY: hash/adler32/check\n \n-hash/libcrc32.a: $(go_hash_crc32_files) hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-hash/libcrc32.la: hash/libcrc32.a\n+hash/libcrc32.$(OBJEXT): $(go_hash_crc32_files) hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+hash/libcrc32.lo: hash/libcrc32.$(OBJEXT)\n+hash/libcrc32.la: hash/libcrc32.lo\n hash/crc32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/crc32\n \t$(CHECK)\n .PHONY: hash/crc32/check\n \n-hash/libcrc64.a: $(go_hash_crc64_files) hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-hash/libcrc64.la: hash/libcrc64.a\n+hash/libcrc64.$(OBJEXT): $(go_hash_crc64_files) hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+hash/libcrc64.lo: hash/libcrc64.$(OBJEXT)\n+hash/libcrc64.la: hash/libcrc64.lo\n hash/crc64/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/crc64\n \t$(CHECK)\n .PHONY: hash/crc64/check\n \n-http/libpprof.a: $(go_http_pprof_files) bufio.gox fmt.gox http.gox os.gox \\\n-\t\truntime.gox runtime/pprof.gox strconv.gox strings.gox\n-\t$(BUILDARCHIVE)\n-http/libpprof.la: http/libpprof.a\n+http/libpprof.$(OBJEXT): $(go_http_pprof_files) bufio.gox fmt.gox http.gox \\\n+\t\tos.gox runtime.gox runtime/pprof.gox strconv.gox strings.gox\n+\t$(BUILDPACKAGE)\n+http/libpprof.lo: http/libpprof.$(OBJEXT)\n+http/libpprof.la: http/libpprof.lo\n http/pprof/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) http/pprof\n \t$(CHECK)\n .PHONY: http/pprof/check\n \n-image/libjpeg.a: $(go_image_jpeg_files) bufio.gox image.gox io.gox os.gox\n-\t$(BUILDARCHIVE)\n-image/libjpeg.la: image/libjpeg.a\n+image/libjpeg.$(OBJEXT): $(go_image_jpeg_files) bufio.gox image.gox io.gox \\\n+\t\tos.gox\n+\t$(BUILDPACKAGE)\n+image/libjpeg.lo: image/libjpeg.$(OBJEXT)\n+image/libjpeg.la: image/libjpeg.lo\n image/jpeg/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/jpeg\n \t$(CHECK)\n .PHONY: image/jpeg/check\n \n-image/libpng.a: $(go_image_png_files) bufio.gox compress/zlib.gox fmt.gox \\\n-\t\thash.gox hash/crc32.gox image.gox io.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-image/libpng.la: image/libpng.a\n+image/libpng.$(OBJEXT): $(go_image_png_files) bufio.gox compress/zlib.gox \\\n+\t\tfmt.gox hash.gox hash/crc32.gox image.gox io.gox os.gox \\\n+\t\tstrconv.gox\n+\t$(BUILDPACKAGE)\n+image/libpng.lo: image/libpng.$(OBJEXT)\n+image/libpng.la: image/libpng.lo\n image/png/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/png\n \t$(CHECK)\n .PHONY: image/png/check\n \n-index/libsuffixarray.a: $(go_index_suffixarray_files) bytes.gox regexp.gox \\\n-\t\tsort.gox\n-\t$(BUILDARCHIVE)\n-index/libsuffixarray.la: index/libsuffixarray.a\n+index/libsuffixarray.$(OBJEXT): $(go_index_suffixarray_files) bytes.gox \\\n+\t\tregexp.gox sort.gox\n+\t$(BUILDPACKAGE)\n+index/libsuffixarray.lo: index/libsuffixarray.$(OBJEXT)\n+index/libsuffixarray.la: index/libsuffixarray.lo\n index/suffixarray/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) index/suffixarray\n \t$(CHECK)\n .PHONY: index/suffixarray/check\n \n-io/libioutil.a: $(go_io_ioutil_files) bytes.gox io.gox os.gox sort.gox \\\n+io/libioutil.$(OBJEXT): $(go_io_ioutil_files) bytes.gox io.gox os.gox sort.gox \\\n \t\tstrconv.gox\n-\t$(BUILDARCHIVE)\n-io/libioutil.la: io/libioutil.a\n+\t$(BUILDPACKAGE)\n+io/libioutil.lo: io/libioutil.$(OBJEXT)\n+io/libioutil.la: io/libioutil.lo\n io/ioutil/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) io/ioutil\n \t$(CHECK)\n .PHONY: io/ioutil/check\n \n-mime/libmultipart.a: $(go_mime_multipart_files) bufio.gox bytes.gox io.gox \\\n-\t\tmime.gox os.gox regexp.gox strings.gox\n-\t$(BUILDARCHIVE)\n-mime/libmultipart.la: mime/libmultipart.a\n+mime/libmultipart.$(OBJEXT): $(go_mime_multipart_files) bufio.gox bytes.gox \\\n+\t\tio.gox mime.gox os.gox regexp.gox strings.gox\n+\t$(BUILDPACKAGE)\n+mime/libmultipart.lo: mime/libmultipart.$(OBJEXT)\n+mime/libmultipart.la: mime/libmultipart.lo\n mime/multipart/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) mime/multipart\n \t$(CHECK)\n .PHONY: mime/multipart/check\n \n-net/libdict.a: $(go_net_dict_files) container/vector.gox net/textproto.gox \\\n-\t\tos.gox strconv.gox strings.gox\n-\t$(BUILDARCHIVE)\n-net/libdict.la: net/libdict.a\n+net/libdict.$(OBJEXT): $(go_net_dict_files) container/vector.gox \\\n+\t\tnet/textproto.gox os.gox strconv.gox strings.gox\n+\t$(BUILDPACKAGE)\n+net/libdict.lo: net/libdict.$(OBJEXT)\n+net/libdict.la: net/libdict.lo\n \n-net/libtextproto.a: $(go_net_textproto_files) bufio.gox bytes.gox \\\n+net/libtextproto.$(OBJEXT): $(go_net_textproto_files) bufio.gox bytes.gox \\\n \t\tcontainer/vector.gox fmt.gox io.gox io/ioutil.gox net.gox \\\n \t\tos.gox strconv.gox sync.gox\n-\t$(BUILDARCHIVE)\n-net/libtextproto.la: net/libtextproto.a\n+\t$(BUILDPACKAGE)\n+net/libtextproto.lo: net/libtextproto.$(OBJEXT)\n+net/libtextproto.la: net/libtextproto.lo\n net/textproto/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) net/textproto\n \t$(CHECK)\n .PHONY: net/textproto/check\n \n-os/libinotify.a: $(go_os_inotify_files) fmt.gox os.gox strings.gox \\\n+os/libinotify.$(OBJEXT): $(go_os_inotify_files) fmt.gox os.gox strings.gox \\\n \t\tsyscall.gox\n-\t$(BUILDARCHIVE)\n-os/libinotify.la: os/libinotify.a\n+\t$(BUILDPACKAGE)\n+os/libinotify.lo: os/libinotify.$(OBJEXT)\n+os/libinotify.la: os/libinotify.lo\n os/inotify/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) os/inotify\n \t$(CHECK)\n .PHONY: os/inotify/check\n \n-os/libsignal.a: $(go_os_signal_files) runtime.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-os/libsignal.la: os/libsignal.a\n+os/libsignal.$(OBJEXT): $(go_os_signal_files) runtime.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+os/libsignal.lo: os/libsignal.$(OBJEXT)\n+os/libsignal.la: os/libsignal.lo\n os/signal/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) os/signal\n \t$(CHECK)\n@@ -2425,54 +2547,60 @@ unix.go: $(srcdir)/go/os/signal/mkunix.sh sysinfo.go\n \t$(SHELL) $(srcdir)/go/os/signal/mkunix.sh sysinfo.go > $@.tmp\n \tmv -f $@.tmp $@\n \n-rpc/libjsonrpc.a: $(go_rpc_jsonrpc_files) fmt.gox io.gox json.gox net.gox \\\n-\t\tos.gox rpc.gox sync.gox\n-\t$(BUILDARCHIVE)\n-rpc/libjsonrpc.la: rpc/libjsonrpc.a\n+rpc/libjsonrpc.$(OBJEXT): $(go_rpc_jsonrpc_files) fmt.gox io.gox json.gox \\\n+\t\tnet.gox os.gox rpc.gox sync.gox\n+\t$(BUILDPACKAGE)\n+rpc/libjsonrpc.lo: rpc/libjsonrpc.$(OBJEXT)\n+rpc/libjsonrpc.la: rpc/libjsonrpc.lo\n rpc/jsonrpc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) rpc/jsonrpc\n \t$(CHECK)\n .PHONY: rpc/jsonrpc/check\n \n-runtime/libdebug.a: $(go_runtime_debug_files) bytes.gox fmt.gox io/ioutil.gox \\\n-\t\tos.gox runtime.gox\n-\t$(BUILDARCHIVE)\n-runtime/libdebug.la: runtime/libdebug.a\n+runtime/libdebug.$(OBJEXT): $(go_runtime_debug_files) bytes.gox fmt.gox \\\n+\t\tio/ioutil.gox os.gox runtime.gox\n+\t$(BUILDPACKAGE)\n+runtime/libdebug.lo: runtime/libdebug.$(OBJEXT)\n+runtime/libdebug.la: runtime/libdebug.lo\n runtime/debug/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) runtime/debug\n \t$(CHECK)\n .PHONY: runtime/debug/check\n \n-runtime/libpprof.a: $(go_runtime_pprof_files) bufio.gox fmt.gox io.gox os.gox \\\n-\t\truntime.gox\n-\t$(BUILDARCHIVE)\n-runtime/libpprof.la: runtime/libpprof.a\n+runtime/libpprof.$(OBJEXT): $(go_runtime_pprof_files) bufio.gox fmt.gox \\\n+\t\tio.gox os.gox runtime.gox\n+\t$(BUILDPACKAGE)\n+runtime/libpprof.lo: runtime/libpprof.$(OBJEXT)\n+runtime/libpprof.la: runtime/libpprof.lo\n runtime/pprof/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) runtime/pprof\n \t$(CHECK)\n .PHONY: runtime/pprof/check\n \n-testing/libiotest.a: $(go_testing_iotest_files) io.gox log.gox os.gox\n-\t$(BUILDARCHIVE)\n-testing/libiotest.la: testing/libiotest.a\n+testing/libiotest.$(OBJEXT): $(go_testing_iotest_files) io.gox log.gox os.gox\n+\t$(BUILDPACKAGE)\n+testing/libiotest.lo: testing/libiotest.$(OBJEXT)\n+testing/libiotest.la: testing/libiotest.lo\n testing/iotest/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/iotest\n \t$(CHECK)\n .PHONY: testing/iotest/check\n \n-testing/libquick.a: $(go_testing_quick_files) flag.gox fmt.gox math.gox \\\n-\t\tos.gox rand.gox reflect.gox strings.gox\n-\t$(BUILDARCHIVE)\n-testing/libquick.la: testing/libquick.a\n+testing/libquick.$(OBJEXT): $(go_testing_quick_files) flag.gox fmt.gox \\\n+\t\tmath.gox os.gox rand.gox reflect.gox strings.gox\n+\t$(BUILDPACKAGE)\n+testing/libquick.lo: testing/libquick.$(OBJEXT)\n+testing/libquick.la: testing/libquick.lo\n testing/quick/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/quick\n \t$(CHECK)\n .PHONY: testing/quick/check\n \n-testing/libscript.a: $(go_testing_script_files) fmt.gox os.gox rand.gox \\\n-\t\treflect.gox strings.gox\n-\t$(BUILDARCHIVE)\n-testing/libscript.la: testing/libscript.a\n+testing/libscript.$(OBJEXT): $(go_testing_script_files) fmt.gox os.gox \\\n+\t\trand.gox reflect.gox strings.gox\n+\t$(BUILDPACKAGE)\n+testing/libscript.lo: testing/libscript.$(OBJEXT)\n+testing/libscript.la: testing/libscript.lo\n testing/script/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/script\n \t$(CHECK)\n@@ -2484,294 +2612,289 @@ s-sysinfo: $(srcdir)/mksysinfo.sh config.h\n \t$(SHELL) $(srcdir)/../move-if-change tmp-sysinfo.go sysinfo.go\n \t$(STAMP) $@\n \n-syscalls/libsyscall.a: $(go_syscall_files) $(go_syscall_c_files) sync.gox\n+syscalls/syscall.$(OBJEXT): $(go_syscall_files) $(go_syscall_c_files) sync.gox\n \trm -f syscall.gox syscalls/libsyscall.a\n \ttest -d syscalls || $(MKDIR_P) syscalls\n \tfiles=`echo $^ | sed -e 's/[^ ]*\\.gox//g' -e's/[^ ]*\\.c//g'`; \\\n \t$(LTGOCOMPILE) -I . -c -fgo-prefix=\"libgo_syscalls\" -o syscalls/syscall.$(OBJEXT) $$files\n+syscalls/errno.$(OBJEXT): $(srcdir)/syscalls/errno.c syscalls/syscall.$(OBJEXT)\n \t$(LTCOMPILE) -c -o syscalls/errno.$(OBJEXT) $(srcdir)/syscalls/errno.c\n-\t$(AR) rc syscalls/libsyscall.a syscalls/syscall.$(OBJEXT) syscalls/errno.$(OBJEXT)\n-syscalls/libsyscall.la: syscalls/libsyscall.a\n+syscalls/libsyscall.la: syscalls/syscall.$(OBJEXT) syscalls/errno.$(OBJEXT)\n \t$(LINK) syscalls/syscall.lo syscalls/errno.lo\n \n # How to build a .gox file from a .a file.\n BUILDGOX = \\\n-\tset -e; \\\n-\trm -f $@.$(OBJEXT); \\\n-\t$(CC) -r -nostdlib -o $@.$(OBJEXT) -Wl,--whole-archive $<; \\\n-\t$(OBJCOPY) -j .go_export $@.$(OBJEXT) $@.tmp; \\\n-\tmv -f $@.tmp $@; \\\n-\trm -f $@.$(OBJEXT)\n+\t$(OBJCOPY) -j .go_export $< $@.tmp && mv -f $@.tmp $@\n \n-asn1.gox: asn1/libasn1.a\n+asn1.gox: asn1/libasn1.$(OBJEXT)\n \t$(BUILDGOX)\n-big.gox: big/libbig.a\n+big.gox: big/libbig.$(OBJEXT)\n \t$(BUILDGOX)\n-bufio.gox: bufio/libbufio.a\n+bufio.gox: bufio/libbufio.$(OBJEXT)\n \t$(BUILDGOX)\n-bytes.gox: bytes/libbytes.a\n+bytes.gox: bytes/bytes.$(OBJEXT)\n \t$(BUILDGOX)\n-cmath.gox: cmath/libcmath.a\n+cmath.gox: cmath/libcmath.$(OBJEXT)\n \t$(BUILDGOX)\n-ebnf.gox: ebnf/libebnf.a\n+ebnf.gox: ebnf/libebnf.$(OBJEXT)\n \t$(BUILDGOX)\n-exec.gox: exec/libexec.a\n+exec.gox: exec/libexec.$(OBJEXT)\n \t$(BUILDGOX)\n-expvar.gox: expvar/libexpvar.a\n+expvar.gox: expvar/libexpvar.$(OBJEXT)\n \t$(BUILDGOX)\n-flag.gox: flag/libflag.a\n+flag.gox: flag/libflag.$(OBJEXT)\n \t$(BUILDGOX)\n-fmt.gox: fmt/libfmt.a\n+fmt.gox: fmt/libfmt.$(OBJEXT)\n \t$(BUILDGOX)\n-gob.gox: gob/libgob.a\n+gob.gox: gob/libgob.$(OBJEXT)\n \t$(BUILDGOX)\n-hash.gox: hash/libhash.a\n+hash.gox: hash/libhash.$(OBJEXT)\n \t$(BUILDGOX)\n-html.gox: html/libhtml.a\n+html.gox: html/libhtml.$(OBJEXT)\n \t$(BUILDGOX)\n-http.gox: http/libhttp.a\n+http.gox: http/libhttp.$(OBJEXT)\n \t$(BUILDGOX)\n-image.gox: image/libimage.a\n+image.gox: image/libimage.$(OBJEXT)\n \t$(BUILDGOX)\n-io.gox: io/libio.a\n+io.gox: io/libio.$(OBJEXT)\n \t$(BUILDGOX)\n-json.gox: json/libjson.a\n+json.gox: json/libjson.$(OBJEXT)\n \t$(BUILDGOX)\n-log.gox: log/liblog.a\n+log.gox: log/liblog.$(OBJEXT)\n \t$(BUILDGOX)\n-math.gox: math/libmath.a\n+math.gox: math/libmath.$(OBJEXT)\n \t$(BUILDGOX)\n-mime.gox: mime/libmime.a\n+mime.gox: mime/libmime.$(OBJEXT)\n \t$(BUILDGOX)\n-net.gox: net/libnet.a\n+net.gox: net/libnet.$(OBJEXT)\n \t$(BUILDGOX)\n-netchan.gox: netchan/libnetchan.a\n+netchan.gox: netchan/libnetchan.$(OBJEXT)\n \t$(BUILDGOX)\n-os.gox: os/libos.a\n+os.gox: os/libos.$(OBJEXT)\n \t$(BUILDGOX)\n-patch.gox: patch/libpatch.a\n+patch.gox: patch/libpatch.$(OBJEXT)\n \t$(BUILDGOX)\n-path.gox: path/libpath.a\n+path.gox: path/libpath.$(OBJEXT)\n \t$(BUILDGOX)\n-rand.gox: rand/librand.a\n+rand.gox: rand/librand.$(OBJEXT)\n \t$(BUILDGOX)\n-reflect.gox: reflect/libreflect.a\n+reflect.gox: reflect/libreflect.$(OBJEXT)\n \t$(BUILDGOX)\n-regexp.gox: regexp/libregexp.a\n+regexp.gox: regexp/libregexp.$(OBJEXT)\n \t$(BUILDGOX)\n-rpc.gox: rpc/librpc.a\n+rpc.gox: rpc/librpc.$(OBJEXT)\n \t$(BUILDGOX)\n-runtime.gox: runtime/libruntime.a\n+runtime.gox: runtime/libruntime.$(OBJEXT)\n \t$(BUILDGOX)\n-scanner.gox: scanner/libscanner.a\n+scanner.gox: scanner/libscanner.$(OBJEXT)\n \t$(BUILDGOX)\n-smtp.gox: smtp/libsmtp.a\n+smtp.gox: smtp/libsmtp.$(OBJEXT)\n \t$(BUILDGOX)\n-sort.gox: sort/libsort.a\n+sort.gox: sort/libsort.$(OBJEXT)\n \t$(BUILDGOX)\n-strconv.gox: strconv/libstrconv.a\n+strconv.gox: strconv/libstrconv.$(OBJEXT)\n \t$(BUILDGOX)\n-strings.gox: strings/libstrings.a\n+strings.gox: strings/libstrings.$(OBJEXT)\n \t$(BUILDGOX)\n-sync.gox: sync/libsync.a\n+sync.gox: sync/mutex.$(OBJEXT)\n \t$(BUILDGOX)\n-syslog.gox: syslog/libsyslog.a\n+syslog.gox: syslog/libsyslog.$(OBJEXT)\n \t$(BUILDGOX)\n-syscall.gox: syscalls/libsyscall.a\n+syscall.gox: syscalls/syscall.$(OBJEXT)\n \t$(BUILDGOX)\n-tabwriter.gox: tabwriter/libtabwriter.a\n+tabwriter.gox: tabwriter/libtabwriter.$(OBJEXT)\n \t$(BUILDGOX)\n-template.gox: template/libtemplate.a\n+template.gox: template/libtemplate.$(OBJEXT)\n \t$(BUILDGOX)\n-testing.gox: testing/libtesting.a\n+testing.gox: testing/libtesting.$(OBJEXT)\n \t$(BUILDGOX)\n-time.gox: time/libtime.a\n+time.gox: time/libtime.$(OBJEXT)\n \t$(BUILDGOX)\n-try.gox: try/libtry.a\n+try.gox: try/libtry.$(OBJEXT)\n \t$(BUILDGOX)\n-unicode.gox: unicode/libunicode.a\n+unicode.gox: unicode/libunicode.$(OBJEXT)\n \t$(BUILDGOX)\n-utf16.gox: utf16/libutf16.a\n+utf16.gox: utf16/libutf16.$(OBJEXT)\n \t$(BUILDGOX)\n-utf8.gox: utf8/libutf8.a\n+utf8.gox: utf8/libutf8.$(OBJEXT)\n \t$(BUILDGOX)\n-websocket.gox: websocket/libwebsocket.a\n+websocket.gox: websocket/libwebsocket.$(OBJEXT)\n \t$(BUILDGOX)\n-xml.gox: xml/libxml.a\n+xml.gox: xml/libxml.$(OBJEXT)\n \t$(BUILDGOX)\n \n-archive/tar.gox: archive/libtar.a\n+archive/tar.gox: archive/libtar.$(OBJEXT)\n \t$(BUILDGOX)\n-archive/zip.gox: archive/libzip.a\n+archive/zip.gox: archive/libzip.$(OBJEXT)\n \t$(BUILDGOX)\n \n-compress/flate.gox: compress/libflate.a\n+compress/flate.gox: compress/libflate.$(OBJEXT)\n \t$(BUILDGOX)\n-compress/gzip.gox: compress/libgzip.a\n+compress/gzip.gox: compress/libgzip.$(OBJEXT)\n \t$(BUILDGOX)\n-compress/zlib.gox: compress/libzlib.a\n+compress/zlib.gox: compress/libzlib.$(OBJEXT)\n \t$(BUILDGOX)\n \n-container/heap.gox: container/libheap.a\n+container/heap.gox: container/libheap.$(OBJEXT)\n \t$(BUILDGOX)\n-container/list.gox: container/liblist.a\n+container/list.gox: container/liblist.$(OBJEXT)\n \t$(BUILDGOX)\n-container/ring.gox: container/libring.a\n+container/ring.gox: container/libring.$(OBJEXT)\n \t$(BUILDGOX)\n-container/vector.gox: container/libvector.a\n+container/vector.gox: container/libvector.$(OBJEXT)\n \t$(BUILDGOX)\n \n-crypto/aes.gox: crypto/libaes.a\n+crypto/aes.gox: crypto/libaes.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/block.gox: crypto/libblock.a\n+crypto/block.gox: crypto/libblock.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/blowfish.gox: crypto/libblowfish.a\n+crypto/blowfish.gox: crypto/libblowfish.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/cast5.gox: crypto/libcast5.a\n+crypto/cast5.gox: crypto/libcast5.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/cipher.gox: crypto/libcipher.a\n+crypto/cipher.gox: crypto/libcipher.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/elliptic.gox: crypto/libelliptic.a\n+crypto/elliptic.gox: crypto/libelliptic.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/hmac.gox: crypto/libhmac.a\n+crypto/hmac.gox: crypto/libhmac.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/md4.gox: crypto/libmd4.a\n+crypto/md4.gox: crypto/libmd4.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/md5.gox: crypto/libmd5.a\n+crypto/md5.gox: crypto/libmd5.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/ocsp.gox: crypto/libocsp.a\n+crypto/ocsp.gox: crypto/libocsp.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/rand.gox: crypto/librand.a\n+crypto/rand.gox: crypto/librand.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/rc4.gox: crypto/librc4.a\n+crypto/rc4.gox: crypto/librc4.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/ripemd160.gox: crypto/libripemd160.a\n+crypto/ripemd160.gox: crypto/libripemd160.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/rsa.gox: crypto/librsa.a\n+crypto/rsa.gox: crypto/librsa.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/sha1.gox: crypto/libsha1.a\n+crypto/sha1.gox: crypto/libsha1.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/sha256.gox: crypto/libsha256.a\n+crypto/sha256.gox: crypto/libsha256.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/sha512.gox: crypto/libsha512.a\n+crypto/sha512.gox: crypto/libsha512.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/subtle.gox: crypto/libsubtle.a\n+crypto/subtle.gox: crypto/libsubtle.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/tls.gox: crypto/libtls.a\n+crypto/tls.gox: crypto/libtls.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/twofish.gox: crypto/libtwofish.a\n+crypto/twofish.gox: crypto/libtwofish.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/x509.gox: crypto/libx509.a\n+crypto/x509.gox: crypto/libx509.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/xtea.gox: crypto/libxtea.a\n+crypto/xtea.gox: crypto/libxtea.$(OBJEXT)\n \t$(BUILDGOX)\n \n-crypto/openpgp/armor.gox: crypto/openpgp/libarmor.a\n+crypto/openpgp/armor.gox: crypto/openpgp/libarmor.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/openpgp/error.gox: crypto/openpgp/liberror.a\n+crypto/openpgp/error.gox: crypto/openpgp/liberror.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/openpgp/s2k.gox: crypto/openpgp/libs2k.a\n+crypto/openpgp/s2k.gox: crypto/openpgp/libs2k.$(OBJEXT)\n \t$(BUILDGOX)\n \n-debug/dwarf.gox: debug/libdwarf.a\n+debug/dwarf.gox: debug/libdwarf.$(OBJEXT)\n \t$(BUILDGOX)\n-debug/elf.gox: debug/libelf.a\n+debug/elf.gox: debug/libelf.$(OBJEXT)\n \t$(BUILDGOX)\n-debug/gosym.gox: debug/libgosym.a\n+debug/gosym.gox: debug/libgosym.$(OBJEXT)\n \t$(BUILDGOX)\n-debug/macho.gox: debug/libmacho.a\n+debug/macho.gox: debug/libmacho.$(OBJEXT)\n \t$(BUILDGOX)\n-debug/pe.gox: debug/libpe.a\n+debug/pe.gox: debug/libpe.$(OBJEXT)\n \t$(BUILDGOX)\n-debug/proc.gox: debug/libproc.a\n+debug/proc.gox: debug/libproc.$(OBJEXT)\n \t$(BUILDGOX)\n \n-encoding/ascii85.gox: encoding/libascii85.a\n+encoding/ascii85.gox: encoding/libascii85.$(OBJEXT)\n \t$(BUILDGOX)\n-encoding/base32.gox: encoding/libbase32.a\n+encoding/base32.gox: encoding/libbase32.$(OBJEXT)\n \t$(BUILDGOX)\n-encoding/base64.gox: encoding/libbase64.a\n+encoding/base64.gox: encoding/libbase64.$(OBJEXT)\n \t$(BUILDGOX)\n-encoding/binary.gox: encoding/libbinary.a\n+encoding/binary.gox: encoding/libbinary.$(OBJEXT)\n \t$(BUILDGOX)\n-encoding/git85.gox: encoding/libgit85.a\n+encoding/git85.gox: encoding/libgit85.$(OBJEXT)\n \t$(BUILDGOX)\n-encoding/hex.gox: encoding/libhex.a\n+encoding/hex.gox: encoding/libhex.$(OBJEXT)\n \t$(BUILDGOX)\n-encoding/line.gox: encoding/libline.a\n+encoding/line.gox: encoding/libline.$(OBJEXT)\n \t$(BUILDGOX)\n-encoding/pem.gox: encoding/libpem.a\n+encoding/pem.gox: encoding/libpem.$(OBJEXT)\n \t$(BUILDGOX)\n \n-exp/datafmt.gox: exp/libdatafmt.a\n+exp/datafmt.gox: exp/libdatafmt.$(OBJEXT)\n \t$(BUILDGOX)\n-exp/draw.gox: exp/libdraw.a\n+exp/draw.gox: exp/libdraw.$(OBJEXT)\n \t$(BUILDGOX)\n-exp/eval.gox: exp/libeval.a\n+exp/eval.gox: exp/libeval.$(OBJEXT)\n \t$(BUILDGOX)\n \n-go/ast.gox: go/libast.a\n+go/ast.gox: go/libast.$(OBJEXT)\n \t$(BUILDGOX)\n-go/doc.gox: go/libdoc.a\n+go/doc.gox: go/libdoc.$(OBJEXT)\n \t$(BUILDGOX)\n-go/parser.gox: go/libparser.a\n+go/parser.gox: go/libparser.$(OBJEXT)\n \t$(BUILDGOX)\n-go/printer.gox: go/libprinter.a\n+go/printer.gox: go/libprinter.$(OBJEXT)\n \t$(BUILDGOX)\n-go/scanner.gox: go/libscanner.a\n+go/scanner.gox: go/libscanner.$(OBJEXT)\n \t$(BUILDGOX)\n-go/token.gox: go/libtoken.a\n+go/token.gox: go/libtoken.$(OBJEXT)\n \t$(BUILDGOX)\n-go/typechecker.gox: go/libtypechecker.a\n+go/typechecker.gox: go/libtypechecker.$(OBJEXT)\n \t$(BUILDGOX)\n \n-hash/adler32.gox: hash/libadler32.a\n+hash/adler32.gox: hash/libadler32.$(OBJEXT)\n \t$(BUILDGOX)\n-hash/crc32.gox: hash/libcrc32.a\n+hash/crc32.gox: hash/libcrc32.$(OBJEXT)\n \t$(BUILDGOX)\n-hash/crc64.gox: hash/libcrc64.a\n+hash/crc64.gox: hash/libcrc64.$(OBJEXT)\n \t$(BUILDGOX)\n \n-http/pprof.gox: http/libpprof.a\n+http/pprof.gox: http/libpprof.$(OBJEXT)\n \t$(BUILDGOX)\n \n-image/jpeg.gox: image/libjpeg.a\n+image/jpeg.gox: image/libjpeg.$(OBJEXT)\n \t$(BUILDGOX)\n-image/png.gox: image/libpng.a\n+image/png.gox: image/libpng.$(OBJEXT)\n \t$(BUILDGOX)\n \n-index/suffixarray.gox: index/libsuffixarray.a\n+index/suffixarray.gox: index/libsuffixarray.$(OBJEXT)\n \t$(BUILDGOX)\n \n-io/ioutil.gox: io/libioutil.a\n+io/ioutil.gox: io/libioutil.$(OBJEXT)\n \t$(BUILDGOX)\n \n-mime/multipart.gox: mime/libmultipart.a\n+mime/multipart.gox: mime/libmultipart.$(OBJEXT)\n \t$(BUILDGOX)\n \n-net/dict.gox: net/libdict.a\n+net/dict.gox: net/libdict.$(OBJEXT)\n \t$(BUILDGOX)\n-net/textproto.gox: net/libtextproto.a\n+net/textproto.gox: net/libtextproto.$(OBJEXT)\n \t$(BUILDGOX)\n \n-os/inotify.gox: os/libinotify.a\n+os/inotify.gox: os/libinotify.$(OBJEXT)\n \t$(BUILDGOX)\n-os/signal.gox: os/libsignal.a\n+os/signal.gox: os/libsignal.$(OBJEXT)\n \t$(BUILDGOX)\n \n-rpc/jsonrpc.gox: rpc/libjsonrpc.a\n+rpc/jsonrpc.gox: rpc/libjsonrpc.$(OBJEXT)\n \t$(BUILDGOX)\n \n-runtime/debug.gox: runtime/libdebug.a\n+runtime/debug.gox: runtime/libdebug.$(OBJEXT)\n \t$(BUILDGOX)\n-runtime/pprof.gox: runtime/libpprof.a\n+runtime/pprof.gox: runtime/libpprof.$(OBJEXT)\n \t$(BUILDGOX)\n \n-testing/iotest.gox: testing/libiotest.a\n+testing/iotest.gox: testing/libiotest.$(OBJEXT)\n \t$(BUILDGOX)\n-testing/quick.gox: testing/libquick.a\n+testing/quick.gox: testing/libquick.$(OBJEXT)\n \t$(BUILDGOX)\n-testing/script.gox: testing/libscript.a\n+testing/script.gox: testing/libscript.$(OBJEXT)\n \t$(BUILDGOX)\n \n if LIBGO_IS_LINUX"}, {"sha": "729c6e2c7238fe43348fcc10689a56dd90936211", "filename": "libgo/Makefile.in", "status": "modified", "additions": 692, "deletions": 569, "changes": 1261, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7467fc4bcd098baae2a8c483cc51c7773c938882/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7467fc4bcd098baae2a8c483cc51c7773c938882/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=7467fc4bcd098baae2a8c483cc51c7773c938882", "patch": "@@ -1720,15 +1720,13 @@ GOLINK = $(LIBTOOL) --tag GO --mode-link $(GOC) \\\n \t$(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_GOCFLAGS) $(LTLDFLAGS) -o $@\n \n \n-# Build a package.\n-BUILDARCHIVE = \\\n+# Build a package.  This builds a .o and a .lo.\n+BUILDPACKAGE = \\\n \trm -f `echo $@ | sed -e 's|/lib|/|' -e 's/\\.a/.gox/'`; \\\n \ttest -d $(@D) || $(MKDIR_P) $(@D); \\\n \trm -f $@; \\\n \tfiles=`echo $^ | sed -e 's/[^ ]*\\.gox//g'`; \\\n-\tif $(LTGOCOMPILE) -I . -c -fgo-prefix=\"libgo_$(@D)\" -o $@.$(OBJEXT) $$files; then \\\n-\t  $(AR) rc $@ $@.$(OBJEXT); \\\n-\telse exit 1; fi\n+\t$(LTGOCOMPILE) -I . -c -fgo-prefix=\"libgo_$(@D)\" -o $@ $$files\n \n @LIBGO_IS_RTEMS_FALSE@use_dejagnu = no\n @LIBGO_IS_RTEMS_TRUE@use_dejagnu = yes\n@@ -1780,12 +1778,7 @@ CHECK_DEPS = libgo.la libgobegin.a \\\n \n # How to build a .gox file from a .a file.\n BUILDGOX = \\\n-\tset -e; \\\n-\trm -f $@.$(OBJEXT); \\\n-\t$(CC) -r -nostdlib -o $@.$(OBJEXT) -Wl,--whole-archive $<; \\\n-\t$(OBJCOPY) -j .go_export $@.$(OBJEXT) $@.tmp; \\\n-\tmv -f $@.tmp $@; \\\n-\trm -f $@.$(OBJEXT)\n+\t$(OBJCOPY) -j .go_export $< $@.tmp && mv -f $@.tmp $@\n \n @LIBGO_IS_LINUX_FALSE@os_inotify_check = \n \n@@ -3812,999 +3805,1123 @@ s-syscall_arch: Makefile\n \t$(SHELL) $(srcdir)/../move-if-change syscall_arch.go.tmp syscall_arch.go\n \t$(STAMP) $@\n \n-# Build a .la file from a .a file.\n-.a.la:\n-\t$(LINK) $<.lo\n+# Build a .la file from a .lo file.\n+.lo.la:\n+\t$(LINK) $<\n \n-asn1/libasn1.a: $(go_asn1_files) bytes.gox fmt.gox io.gox os.gox reflect.gox \\\n-\t\tstrconv.gox strings.gox time.gox\n-\t$(BUILDARCHIVE)\n-asn1/libasn1.la: asn1/libasn1.a\n+asn1/libasn1.$(OBJEXT): $(go_asn1_files) bytes.gox fmt.gox io.gox os.gox \\\n+\t\treflect.gox strconv.gox strings.gox time.gox\n+\t$(BUILDPACKAGE)\n+asn1/libasn1.lo: asn1/libasn1.$(OBJEXT)\n+asn1/libasn1.la: asn1/libasn1.lo\n asn1/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: asn1/check\n \n-big/libbig.a: $(go_big_files) fmt.gox rand.gox strings.gox\n-\t$(BUILDARCHIVE)\n-big/libbig.la: big/libbig.a\n+big/libbig.$(OBJEXT): $(go_big_files) fmt.gox rand.gox strings.gox\n+\t$(BUILDPACKAGE)\n+big/libbig.lo: big/libbig.$(OBJEXT)\n+big/libbig.la: big/libbig.lo\n big/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: big/check\n \n-bufio/libbufio.a: $(go_bufio_files) bytes.gox io.gox os.gox strconv.gox \\\n-\t\tutf8.gox\n-\t$(BUILDARCHIVE)\n-bufio/libbufio.la: bufio/libbufio.a\n+bufio/libbufio.$(OBJEXT): $(go_bufio_files) bytes.gox io.gox os.gox \\\n+\t\tstrconv.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+bufio/libbufio.lo: bufio/libbufio.$(OBJEXT)\n+bufio/libbufio.la: bufio/libbufio.lo\n bufio/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: bufio/check\n \n-bytes/libbytes.a: $(go_bytes_files) $(go_bytes_c_files) io.gox os.gox \\\n+bytes/bytes.$(OBJEXT): $(go_bytes_files) $(go_bytes_c_files) io.gox os.gox \\\n \t\tunicode.gox utf8.gox\n \ttest -d bytes || $(MKDIR_P) bytes\n \t$(LTGOCOMPILE) -I . -c -o bytes/bytes.$(OBJEXT) -fgo-prefix=libgo_bytes $(srcdir)/go/bytes/buffer.go $(srcdir)/go/bytes/bytes.go $(srcdir)/go/bytes/bytes_decl.go\n+bytes/index.$(OBJEXT): go/bytes/indexbyte.c bytes/bytes.$(OBJEXT)\n \t$(LTCOMPILE) -c -o bytes/index.$(OBJEXT) $(srcdir)/go/bytes/indexbyte.c\n-\trm -f $@\n-\t$(AR) rc $@ bytes/bytes.$(OBJEXT) bytes/index.$(OBJEXT)\n-bytes/libbytes.la: bytes/libbytes.a\n+bytes/libbytes.la: bytes/bytes.$(OBJEXT) bytes/index.$(OBJEXT)\n \t$(LINK) bytes/bytes.lo bytes/index.lo\n bytes/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: bytes/check\n \n-cmath/libcmath.a: $(go_cmath_files) math.gox\n-\t$(BUILDARCHIVE)\n-cmath/libcmath.la: cmath/libcmath.a\n+cmath/libcmath.$(OBJEXT): $(go_cmath_files) math.gox\n+\t$(BUILDPACKAGE)\n+cmath/libcmath.lo: cmath/libcmath.$(OBJEXT)\n+cmath/libcmath.la: cmath/libcmath.lo\n cmath/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: cmath/check\n \n-ebnf/libebnf.a: $(go_ebnf_files) container/vector.gox go/scanner.gox \\\n+ebnf/libebnf.$(OBJEXT): $(go_ebnf_files) container/vector.gox go/scanner.gox \\\n \t\tgo/token.gox os.gox strconv.gox unicode.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-ebnf/libebnf.la: ebnf/libebnf.a\n+\t$(BUILDPACKAGE)\n+ebnf/libebnf.lo: ebnf/libebnf.$(OBJEXT)\n+ebnf/libebnf.la: ebnf/libebnf.lo\n ebnf/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: ebnf/check\n \n-exec/libexec.a: $(go_exec_files) os.gox strings.gox\n-\t$(BUILDARCHIVE)\n-exec/libexec.la: exec/libexec.a\n+exec/libexec.$(OBJEXT): $(go_exec_files) os.gox strings.gox\n+\t$(BUILDPACKAGE)\n+exec/libexec.lo: exec/libexec.$(OBJEXT)\n+exec/libexec.la: exec/libexec.lo\n exec/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: exec/check\n \n-expvar/libexpvar.a: $(go_expvar_files) bytes.gox fmt.gox http.gox json.gox \\\n-\t\tlog.gox os.gox runtime.gox strconv.gox sync.gox\n-\t$(BUILDARCHIVE)\n-expvar/libexpvar.la: expvar/libexpvar.a\n+expvar/libexpvar.$(OBJEXT): $(go_expvar_files) bytes.gox fmt.gox http.gox \\\n+\t\tjson.gox log.gox os.gox runtime.gox strconv.gox sync.gox\n+\t$(BUILDPACKAGE)\n+expvar/libexpvar.lo: expvar/libexpvar.$(OBJEXT)\n+expvar/libexpvar.la: expvar/libexpvar.lo\n expvar/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: expvar/check\n \n-flag/libflag.a: $(go_flag_files) fmt.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-flag/libflag.la: flag/libflag.a\n+flag/libflag.$(OBJEXT): $(go_flag_files) fmt.gox os.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+flag/libflag.lo: flag/libflag.$(OBJEXT)\n+flag/libflag.la: flag/libflag.lo\n flag/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: flag/check\n \n-fmt/libfmt.a: $(go_fmt_files) bytes.gox io.gox os.gox reflect.gox strconv.gox \\\n-\t\tstrings.gox unicode.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-fmt/libfmt.la: fmt/libfmt.a\n+fmt/libfmt.$(OBJEXT): $(go_fmt_files) bytes.gox io.gox os.gox reflect.gox \\\n+\t\tstrconv.gox strings.gox unicode.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+fmt/libfmt.lo: fmt/libfmt.$(OBJEXT)\n+fmt/libfmt.la: fmt/libfmt.lo\n fmt/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: fmt/check\n \n-gob/libgob.a: $(go_gob_files) bytes.gox fmt.gox io.gox math.gox os.gox \\\n-\t\treflect.gox runtime.gox strings.gox sync.gox unicode.gox \\\n-\t\tutf8.gox\n-\t$(BUILDARCHIVE)\n-gob/libgob.la: gob/libgob.a\n+gob/libgob.$(OBJEXT): $(go_gob_files) bytes.gox fmt.gox io.gox math.gox \\\n+\t\tos.gox reflect.gox runtime.gox strings.gox sync.gox \\\n+\t\tunicode.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+gob/libgob.lo: gob/libgob.$(OBJEXT)\n+gob/libgob.la: gob/libgob.lo\n gob/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: gob/check\n \n-hash/libhash.a: $(go_hash_files) io.gox\n-\t$(BUILDARCHIVE)\n-hash/libhash.la: hash/libhash.a\n+hash/libhash.$(OBJEXT): $(go_hash_files) io.gox\n+\t$(BUILDPACKAGE)\n+hash/libhash.lo: hash/libhash.$(OBJEXT)\n+hash/libhash.la: hash/libhash.lo\n hash/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: hash/check\n \n-html/libhtml.a: $(go_html_files) bytes.gox io.gox os.gox strconv.gox \\\n+html/libhtml.$(OBJEXT): $(go_html_files) bytes.gox io.gox os.gox strconv.gox \\\n \t\tstrings.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-html/libhtml.la: html/libhtml.a\n+\t$(BUILDPACKAGE)\n+html/libhtml.lo: html/libhtml.$(OBJEXT)\n+html/libhtml.la: html/libhtml.lo\n html/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: html/check\n \n-http/libhttp.a: $(go_http_files) bufio.gox bytes.gox container/list.gox \\\n-\t\tcontainer/vector.gox crypto/rand.gox crypto/tls.gox \\\n-\t\tencoding/base64.gox fmt.gox io.gox io/ioutil.gox log.gox \\\n-\t\tmime.gox mime/multipart.gox net.gox os.gox path.gox sort.gox \\\n-\t\tstrconv.gox strings.gox sync.gox time.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-http/libhttp.la: http/libhttp.a\n+http/libhttp.$(OBJEXT): $(go_http_files) bufio.gox bytes.gox \\\n+\t\tcontainer/list.gox container/vector.gox crypto/rand.gox \\\n+\t\tcrypto/tls.gox encoding/base64.gox fmt.gox io.gox \\\n+\t\tio/ioutil.gox log.gox mime.gox mime/multipart.gox net.gox \\\n+\t\tos.gox path.gox sort.gox strconv.gox strings.gox sync.gox \\\n+\t\ttime.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+http/libhttp.lo: http/libhttp.$(OBJEXT)\n+http/libhttp.la: http/libhttp.lo\n http/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: http/check\n \n-image/libimage.a: $(go_image_files) bufio.gox io.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-image/libimage.la: image/libimage.a\n+image/libimage.$(OBJEXT): $(go_image_files) bufio.gox io.gox os.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+image/libimage.lo: image/libimage.$(OBJEXT)\n+image/libimage.la: image/libimage.lo\n image/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: image/check\n \n-io/libio.a: $(go_io_files) os.gox runtime.gox sync.gox\n-\t$(BUILDARCHIVE)\n-io/libio.la: io/libio.a\n+io/libio.$(OBJEXT): $(go_io_files) os.gox runtime.gox sync.gox\n+\t$(BUILDPACKAGE)\n+io/libio.lo: io/libio.$(OBJEXT)\n+io/libio.la: io/libio.lo\n io/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: io/check\n \n-json/libjson.a: $(go_json_files) bytes.gox container/vector.gox fmt.gox \\\n-\t\tio.gox math.gox os.gox reflect.gox runtime.gox strconv.gox \\\n-\t\tstrings.gox unicode.gox utf16.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-json/libjson.la: json/libjson.a\n+json/libjson.$(OBJEXT): $(go_json_files) bytes.gox container/vector.gox \\\n+\t\tfmt.gox io.gox math.gox os.gox reflect.gox runtime.gox \\\n+\t\tstrconv.gox strings.gox unicode.gox utf16.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+json/libjson.lo: json/libjson.$(OBJEXT)\n+json/libjson.la: json/libjson.lo\n json/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: json/check\n \n-log/liblog.a: $(go_log_files) bytes.gox fmt.gox io.gox runtime.gox os.gox \\\n-\t\tsync.gox time.gox\n-\t$(BUILDARCHIVE)\n-log/liblog.la: log/liblog.a\n+log/liblog.$(OBJEXT): $(go_log_files) bytes.gox fmt.gox io.gox runtime.gox \\\n+\t\tos.gox sync.gox time.gox\n+\t$(BUILDPACKAGE)\n+log/liblog.lo: log/liblog.$(OBJEXT)\n+log/liblog.la: log/liblog.lo\n log/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: log/check\n \n-math/libmath.a: $(go_math_files)\n-\t$(BUILDARCHIVE)\n-math/libmath.la: math/libmath.a\n+math/libmath.$(OBJEXT): $(go_math_files)\n+\t$(BUILDPACKAGE)\n+math/libmath.lo: math/libmath.$(OBJEXT)\n+math/libmath.la: math/libmath.lo\n math/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: math/check\n \n-mime/libmime.a: $(go_mime_files) bufio.gox bytes.gox os.gox strings.gox \\\n-\t\tsync.gox unicode.gox\n-\t$(BUILDARCHIVE)\n-mime/libmime.la: mime/libmime.a\n+mime/libmime.$(OBJEXT): $(go_mime_files) bufio.gox bytes.gox os.gox \\\n+\t\tstrings.gox sync.gox unicode.gox\n+\t$(BUILDPACKAGE)\n+mime/libmime.lo: mime/libmime.$(OBJEXT)\n+mime/libmime.la: mime/libmime.lo\n mime/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: mime/check\n \n-net/libnet.a: $(go_net_files) bytes.gox fmt.gox io.gox os.gox reflect.gox \\\n-\t\tstrconv.gox strings.gox sync.gox syscall.gox\n-\t$(BUILDARCHIVE)\n-net/libnet.la: net/libnet.a\n+net/libnet.$(OBJEXT): $(go_net_files) bytes.gox fmt.gox io.gox os.gox \\\n+\t\treflect.gox strconv.gox strings.gox sync.gox syscall.gox\n+\t$(BUILDPACKAGE)\n+net/libnet.lo: net/libnet.$(OBJEXT)\n+net/libnet.la: net/libnet.lo\n net/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: net/check\n \n-netchan/libnetchan.a: $(go_netchan_files) gob.gox log.gox net.gox os.gox \\\n-\t\treflect.gox strconv.gox sync.gox time.gox\n-\t$(BUILDARCHIVE)\n-netchan/libnetchan.la: netchan/libnetchan.a\n+netchan/libnetchan.$(OBJEXT): $(go_netchan_files) gob.gox log.gox net.gox \\\n+\t\tos.gox reflect.gox strconv.gox sync.gox time.gox\n+\t$(BUILDPACKAGE)\n+netchan/libnetchan.lo: netchan/libnetchan.$(OBJEXT)\n+netchan/libnetchan.la: netchan/libnetchan.lo\n netchan/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: netchan/check\n \n-os/libos.a: $(go_os_files) sync.gox syscall.gox\n-\t$(BUILDARCHIVE)\n-os/libos.la: os/libos.a\n+os/libos.$(OBJEXT): $(go_os_files) sync.gox syscall.gox\n+\t$(BUILDPACKAGE)\n+os/libos.lo: os/libos.$(OBJEXT)\n+os/libos.la: os/libos.lo\n os/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: os/check\n \n-patch/libpatch.a: $(go_patch_files) bytes.gox compress/zlib.gox \\\n+patch/libpatch.$(OBJEXT): $(go_patch_files) bytes.gox compress/zlib.gox \\\n \t\tcrypto/sha1.gox encoding/git85.gox fmt.gox io.gox os.gox \\\n \t\tpath.gox strings.gox\n-\t$(BUILDARCHIVE)\n-patch/libpatch.la: patch/libpatch.a\n+\t$(BUILDPACKAGE)\n+patch/libpatch.lo: patch/libpatch.$(OBJEXT)\n+patch/libpatch.la: patch/libpatch.lo\n patch/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: patch/check\n \n-path/libpath.a: $(go_path_files) io/ioutil.gox os.gox sort.gox strings.gox \\\n-\t\tutf8.gox\n-\t$(BUILDARCHIVE)\n-path/libpath.la: path/libpath.a\n+path/libpath.$(OBJEXT): $(go_path_files) io/ioutil.gox os.gox sort.gox \\\n+\t\tstrings.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+path/libpath.lo: path/libpath.$(OBJEXT)\n+path/libpath.la: path/libpath.lo\n path/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: path/check\n \n-rand/librand.a: $(go_rand_files) math.gox sync.gox\n-\t$(BUILDARCHIVE)\n-rand/librand.la: rand/librand.a\n+rand/librand.$(OBJEXT): $(go_rand_files) math.gox sync.gox\n+\t$(BUILDPACKAGE)\n+rand/librand.lo: rand/librand.$(OBJEXT)\n+rand/librand.la: rand/librand.lo\n rand/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: rand/check\n \n-reflect/libreflect.a: $(go_reflect_files) math.gox runtime.gox strconv.gox \\\n-\t\tsync.gox\n-\t$(BUILDARCHIVE)\n-reflect/libreflect.la: reflect/libreflect.a\n+reflect/libreflect.$(OBJEXT): $(go_reflect_files) math.gox runtime.gox \\\n+\t\tstrconv.gox sync.gox\n+\t$(BUILDPACKAGE)\n+reflect/libreflect.lo: reflect/libreflect.$(OBJEXT)\n+reflect/libreflect.la: reflect/libreflect.lo\n reflect/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: reflect/check\n \n-regexp/libregexp.a: $(go_regexp_files) bytes.gox io.gox os.gox strings.gox \\\n-\t\tutf8.gox\n-\t$(BUILDARCHIVE)\n-regexp/libregexp.la: regexp/libregexp.a\n+regexp/libregexp.$(OBJEXT): $(go_regexp_files) bytes.gox io.gox os.gox \\\n+\t\tstrings.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+regexp/libregexp.lo: regexp/libregexp.$(OBJEXT)\n+regexp/libregexp.la: regexp/libregexp.lo\n regexp/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: regexp/check\n \n-rpc/librpc.a: $(go_rpc_files) bufio.gox fmt.gox gob.gox http.gox io.gox \\\n-\t\tlog.gox net.gox os.gox reflect.gox sort.gox strings.gox \\\n-\t\tstrconv.gox sync.gox template.gox unicode.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-rpc/librpc.la: rpc/librpc.a\n+rpc/librpc.$(OBJEXT): $(go_rpc_files) bufio.gox fmt.gox gob.gox http.gox \\\n+\t\tio.gox log.gox net.gox os.gox reflect.gox sort.gox \\\n+\t\tstrings.gox strconv.gox sync.gox template.gox unicode.gox \\\n+\t\tutf8.gox\n+\t$(BUILDPACKAGE)\n+rpc/librpc.lo: rpc/librpc.$(OBJEXT)\n+rpc/librpc.la: rpc/librpc.lo\n rpc/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: rpc/check\n \n-runtime/libruntime.a: $(go_runtime_files)\n-\t$(BUILDARCHIVE)\n-runtime/libruntime.la: runtime/libruntime.a\n+runtime/libruntime.$(OBJEXT): $(go_runtime_files)\n+\t$(BUILDPACKAGE)\n+runtime/libruntime.lo: runtime/libruntime.$(OBJEXT)\n+runtime/libruntime.la: runtime/libruntime.lo\n runtime/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: runtime/check\n \n-scanner/libscanner.a: $(go_scanner_files) bytes.gox fmt.gox io.gox os.gox \\\n-\t\tunicode.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-scanner/libscanner.la: scanner/libscanner.a\n+scanner/libscanner.$(OBJEXT): $(go_scanner_files) bytes.gox fmt.gox io.gox \\\n+\t\tos.gox unicode.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+scanner/libscanner.lo: scanner/libscanner.$(OBJEXT)\n+scanner/libscanner.la: scanner/libscanner.lo\n scanner/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: scanner/check\n \n-smtp/libsmtp.a: $(go_smtp_files) crypto/tls.gox encoding/base64.gox io.gox \\\n-\t\tnet.gox net/textproto.gox os.gox strings.gox\n-\t$(BUILDARCHIVE)\n-smtp/libsmtp.la: smtp/libsmtp.a\n+smtp/libsmtp.$(OBJEXT): $(go_smtp_files) crypto/tls.gox encoding/base64.gox \\\n+\t\tio.gox net.gox net/textproto.gox os.gox strings.gox\n+\t$(BUILDPACKAGE)\n+smtp/libsmtp.lo: smtp/libsmtp.$(OBJEXT)\n+smtp/libsmtp.la: smtp/libsmtp.lo\n smtp/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: smtp/check\n \n-sort/libsort.a: $(go_sort_files)\n-\t$(BUILDARCHIVE)\n-sort/libsort.la: sort/libsort.a\n+sort/libsort.$(OBJEXT): $(go_sort_files)\n+\t$(BUILDPACKAGE)\n+sort/libsort.lo: sort/libsort.$(OBJEXT)\n+sort/libsort.la: sort/libsort.lo\n sort/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: sort/check\n \n-strconv/libstrconv.a: $(go_strconv_files) bytes.gox math.gox os.gox \\\n+strconv/libstrconv.$(OBJEXT): $(go_strconv_files) bytes.gox math.gox os.gox \\\n \t\tstrings.gox unicode.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-strconv/libstrconv.la: strconv/libstrconv.a\n+\t$(BUILDPACKAGE)\n+strconv/libstrconv.lo: strconv/libstrconv.$(OBJEXT)\n+strconv/libstrconv.la: strconv/libstrconv.lo\n strconv/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: strconv/check\n \n-strings/libstrings.a: $(go_strings_files) os.gox unicode.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-strings/libstrings.la: strings/libstrings.a\n+strings/libstrings.$(OBJEXT): $(go_strings_files) os.gox unicode.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+strings/libstrings.lo: strings/libstrings.$(OBJEXT)\n+strings/libstrings.la: strings/libstrings.lo\n strings/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: strings/check\n \n-sync/libsync.a: $(go_sync_files) $(go_sync_c_files) runtime.gox\n+sync/mutex.$(OBJEXT): $(go_sync_files) $(go_sync_c_files) runtime.gox\n \ttest -d sync || $(MKDIR_P) sync\n \t$(LTGOCOMPILE) -I . -c -o sync/mutex.$(OBJEXT) -fgo-prefix=libgo_sync $(srcdir)/go/sync/mutex.go $(srcdir)/go/sync/once.go $(srcdir)/go/sync/rwmutex.go\n+sync/cas.$(OBJEXT): $(srcdir)/go/sync/cas.c sync/mutex.$(OBJEXT)\n \t$(LTCOMPILE) -c -o sync/cas.$(OBJEXT) $(srcdir)/go/sync/cas.c\n-\trm -f $@\n-\t$(AR) rc $@ sync/mutex.$(OBJEXT) sync/cas.$(OBJEXT)\n-sync/libsync.la: sync/libsync.a\n+sync/libsync.la: sync/mutex.$(OBJEXT) sync/cas.$(OBJEXT)\n \t$(LINK) sync/mutex.lo sync/cas.lo\n sync/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: sync/check\n \n-syslog/libsyslog.a: $(go_syslog_files) fmt.gox log.gox net.gox os.gox\n-\t$(BUILDARCHIVE)\n-syslog/libsyslog.la: syslog/libsyslog.a\n+syslog/libsyslog.$(OBJEXT): $(go_syslog_files) fmt.gox log.gox net.gox os.gox\n+\t$(BUILDPACKAGE)\n+syslog/libsyslog.lo: syslog/libsyslog.$(OBJEXT)\n+syslog/libsyslog.la: syslog/libsyslog.lo\n syslog/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: syslog/check\n \n-tabwriter/libtabwriter.a: $(go_tabwriter_files) bytes.gox io.gox os.gox \\\n-\t\tutf8.gox\n-\t$(BUILDARCHIVE)\n-tabwriter/libtabwriter.la: tabwriter/libtabwriter.a\n+tabwriter/libtabwriter.$(OBJEXT): $(go_tabwriter_files) bytes.gox io.gox \\\n+\t\tos.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+tabwriter/libtabwriter.lo: tabwriter/libtabwriter.$(OBJEXT)\n+tabwriter/libtabwriter.la: tabwriter/libtabwriter.lo\n tabwriter/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: tabwriter/check\n \n-template/libtemplate.a: $(go_template_files) bytes.gox fmt.gox io.gox os.gox \\\n-\t\treflect.gox runtime.gox strings.gox container/vector.gox\n-\t$(BUILDARCHIVE)\n-template/libtemplate.la: template/libtemplate.a\n+template/libtemplate.$(OBJEXT): $(go_template_files) bytes.gox fmt.gox io.gox \\\n+\t\tos.gox reflect.gox runtime.gox strings.gox container/vector.gox\n+\t$(BUILDPACKAGE)\n+template/libtemplate.lo: template/libtemplate.$(OBJEXT)\n+template/libtemplate.la: template/libtemplate.lo\n template/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: template/check\n \n-testing/libtesting.a: $(go_testing_files) flag.gox fmt.gox os.gox regexp.gox \\\n-\t\truntime.gox time.gox\n-\t$(BUILDARCHIVE)\n-testing/libtesting.la: testing/libtesting.a\n+testing/libtesting.$(OBJEXT): $(go_testing_files) flag.gox fmt.gox os.gox \\\n+\t\tregexp.gox runtime.gox time.gox\n+\t$(BUILDPACKAGE)\n+testing/libtesting.lo: testing/libtesting.$(OBJEXT)\n+testing/libtesting.la: testing/libtesting.lo\n testing/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: testing/check\n \n-time/libtime.a: $(go_time_files) bytes.gox container/heap.gox io/ioutil.gox \\\n-\t\tos.gox strconv.gox sync.gox syscall.gox\n-\t$(BUILDARCHIVE)\n-time/libtime.la: time/libtime.a\n+time/libtime.$(OBJEXT): $(go_time_files) bytes.gox container/heap.gox \\\n+\t\tio/ioutil.gox os.gox strconv.gox sync.gox syscall.gox\n+\t$(BUILDPACKAGE)\n+time/libtime.lo: time/libtime.$(OBJEXT)\n+time/libtime.la: time/libtime.lo\n time/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: time/check\n \n-try/libtry.a: $(go_try_files) fmt.gox io.gox os.gox reflect.gox unicode.gox\n-\t$(BUILDARCHIVE)\n-try/libtry.la: try/libtry.a\n+try/libtry.$(OBJEXT): $(go_try_files) fmt.gox io.gox os.gox reflect.gox \\\n+\t\tunicode.gox\n+\t$(BUILDPACKAGE)\n+try/libtry.lo: try/libtry.$(OBJEXT)\n+try/libtry.la: try/libtry.lo\n try/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: try/check\n \n-unicode/libunicode.a: $(go_unicode_files)\n-\t$(BUILDARCHIVE)\n-unicode/libunicode.la: unicode/libunicode.a\n+unicode/libunicode.$(OBJEXT): $(go_unicode_files)\n+\t$(BUILDPACKAGE)\n+unicode/libunicode.lo: unicode/libunicode.$(OBJEXT)\n+unicode/libunicode.la: unicode/libunicode.lo\n unicode/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: unicode/check\n \n-utf16/libutf16.a: $(go_utf16_files) unicode.gox\n-\t$(BUILDARCHIVE)\n-utf16/libutf16.la: utf16/libutf16.a\n+utf16/libutf16.$(OBJEXT): $(go_utf16_files) unicode.gox\n+\t$(BUILDPACKAGE)\n+utf16/libutf16.lo: utf16/libutf16.$(OBJEXT)\n+utf16/libutf16.la: utf16/libutf16.lo\n utf16/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: utf16/check\n \n-utf8/libutf8.a: $(go_utf8_files) unicode.gox\n-\t$(BUILDARCHIVE)\n-utf8/libutf8.la: utf8/libutf8.a\n+utf8/libutf8.$(OBJEXT): $(go_utf8_files) unicode.gox\n+\t$(BUILDPACKAGE)\n+utf8/libutf8.lo: utf8/libutf8.$(OBJEXT)\n+utf8/libutf8.la: utf8/libutf8.lo\n utf8/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: utf8/check\n \n-websocket/libwebsocket.a: $(go_websocket_files) bufio.gox bytes.gox \\\n+websocket/libwebsocket.$(OBJEXT): $(go_websocket_files) bufio.gox bytes.gox \\\n \t\tcontainer/vector.gox crypto/md5.gox crypto/tls.gox \\\n \t\tencoding/binary.gox fmt.gox http.gox io.gox net.gox os.gox \\\n \t\trand.gox strings.gox\n-\t$(BUILDARCHIVE)\n-websocket/libwebsocket.la: websocket/libwebsocket.a\n+\t$(BUILDPACKAGE)\n+websocket/libwebsocket.lo: websocket/libwebsocket.$(OBJEXT)\n+websocket/libwebsocket.la: websocket/libwebsocket.lo\n websocket/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: websocket/check\n \n-xml/libxml.a: $(go_xml_files) bufio.gox bytes.gox fmt.gox io.gox os.gox \\\n-\t\treflect.gox strconv.gox strings.gox unicode.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-xml/libxml.la: xml/libxml.a\n+xml/libxml.$(OBJEXT): $(go_xml_files) bufio.gox bytes.gox fmt.gox io.gox \\\n+\t\tos.gox reflect.gox strconv.gox strings.gox unicode.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+xml/libxml.lo: xml/libxml.$(OBJEXT)\n+xml/libxml.la: xml/libxml.lo\n xml/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: xml/check\n \n-archive/libtar.a: $(go_archive_tar_files) bytes.gox io.gox os.gox strconv.gox \\\n-\t\tstrings.gox\n-\t$(BUILDARCHIVE)\n-archive/libtar.la: archive/libtar.a\n+archive/libtar.$(OBJEXT): $(go_archive_tar_files) bytes.gox io.gox os.gox \\\n+\t\tstrconv.gox strings.gox\n+\t$(BUILDPACKAGE)\n+archive/libtar.lo: archive/libtar.$(OBJEXT)\n+archive/libtar.la: archive/libtar.lo\n archive/tar/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) archive/tar\n \t$(CHECK)\n .PHONY: archive/tar/check\n \n-archive/libzip.a: $(go_archive_zip_files) bufio.gox bytes.gox \\\n+archive/libzip.$(OBJEXT): $(go_archive_zip_files) bufio.gox bytes.gox \\\n \t\tcompress/flate.gox hash.gox hash/crc32.gox \\\n \t\tencoding/binary.gox io.gox os.gox\n-\t$(BUILDARCHIVE)\n-archive/libzip.la: archive/libzip.a\n+\t$(BUILDPACKAGE)\n+archive/libzip.lo: archive/libzip.$(OBJEXT)\n+archive/libzip.la: archive/libzip.lo\n archive/zip/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) archive/zip\n \t$(CHECK)\n .PHONY: archive/zip/check\n \n-compress/libflate.a: $(go_compress_flate_files) bufio.gox io.gox math.gox \\\n-\t\tos.gox sort.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-compress/libflate.la: compress/libflate.a\n+compress/libflate.$(OBJEXT): $(go_compress_flate_files) bufio.gox io.gox \\\n+\t\tmath.gox os.gox sort.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+compress/libflate.lo: compress/libflate.$(OBJEXT)\n+compress/libflate.la: compress/libflate.lo\n compress/flate/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/flate\n \t$(CHECK)\n .PHONY: compress/flate/check\n \n-compress/libgzip.a: $(go_compress_gzip_files) bufio.gox compress/flate.gox \\\n-\t\thash.gox hash/crc32.gox io.gox os.gox\n-\t$(BUILDARCHIVE)\n-compress/libgzip.la: compress/libgzip.a\n+compress/libgzip.$(OBJEXT): $(go_compress_gzip_files) bufio.gox \\\n+\t\tcompress/flate.gox hash.gox hash/crc32.gox io.gox os.gox\n+\t$(BUILDPACKAGE)\n+compress/libgzip.lo: compress/libgzip.$(OBJEXT)\n+compress/libgzip.la: compress/libgzip.lo\n compress/gzip/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/gzip\n \t$(CHECK)\n .PHONY: compress/gzip/check\n \n-compress/libzlib.a: $(go_compress_zlib_files) bufio.gox compress/flate.gox \\\n-\t\thash.gox hash/adler32.gox io.gox os.gox\n-\t$(BUILDARCHIVE)\n-compress/libzlib.la: compress/libzlib.a\n+compress/libzlib.$(OBJEXT): $(go_compress_zlib_files) bufio.gox \\\n+\t\tcompress/flate.gox hash.gox hash/adler32.gox io.gox os.gox\n+\t$(BUILDPACKAGE)\n+compress/libzlib.lo: compress/libzlib.$(OBJEXT)\n+compress/libzlib.la: compress/libzlib.lo\n compress/zlib/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/zlib\n \t$(CHECK)\n .PHONY: compress/zlib/check\n \n-container/libheap.a: $(go_container_heap_files) sort.gox\n-\t$(BUILDARCHIVE)\n-container/libheap.la: container/libheap.a\n+container/libheap.$(OBJEXT): $(go_container_heap_files) sort.gox\n+\t$(BUILDPACKAGE)\n+container/libheap.lo: container/libheap.$(OBJEXT)\n+container/libheap.la: container/libheap.lo\n container/heap/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/heap\n \t$(CHECK)\n .PHONY: container/heap/check\n \n-container/liblist.a: $(go_container_list_files)\n-\t$(BUILDARCHIVE)\n-container/liblist.la: container/liblist.a\n+container/liblist.$(OBJEXT): $(go_container_list_files)\n+\t$(BUILDPACKAGE)\n+container/liblist.lo: container/liblist.$(OBJEXT)\n+container/liblist.la: container/liblist.lo\n container/list/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/list\n \t$(CHECK)\n .PHONY: container/list/check\n \n-container/libring.a: $(go_container_ring_files)\n-\t$(BUILDARCHIVE)\n-container/libring.la: container/libring.a\n+container/libring.$(OBJEXT): $(go_container_ring_files)\n+\t$(BUILDPACKAGE)\n+container/libring.lo: container/libring.$(OBJEXT)\n+container/libring.la: container/libring.lo\n container/ring/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/ring\n \t$(CHECK)\n .PHONY: container/ring/check\n \n-container/libvector.a: $(go_container_vector_files)\n-\t$(BUILDARCHIVE)\n-container/libvector.la: container/libvector.a\n+container/libvector.$(OBJEXT): $(go_container_vector_files)\n+\t$(BUILDPACKAGE)\n+container/libvector.lo: container/libvector.$(OBJEXT)\n+container/libvector.la: container/libvector.lo\n container/vector/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/vector\n \t$(CHECK)\n .PHONY: container/vector/check\n \n-crypto/libaes.a: $(go_crypto_aes_files) os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-crypto/libaes.la: crypto/libaes.a\n+crypto/libaes.$(OBJEXT): $(go_crypto_aes_files) os.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+crypto/libaes.lo: crypto/libaes.$(OBJEXT)\n+crypto/libaes.la: crypto/libaes.lo\n crypto/aes/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/aes\n \t$(CHECK)\n .PHONY: crypto/aes/check\n \n-crypto/libblock.a: $(go_crypto_block_files) fmt.gox io.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-crypto/libblock.la: crypto/libblock.a\n+crypto/libblock.$(OBJEXT): $(go_crypto_block_files) fmt.gox io.gox os.gox \\\n+\t\tstrconv.gox\n+\t$(BUILDPACKAGE)\n+crypto/libblock.lo: crypto/libblock.$(OBJEXT)\n+crypto/libblock.la: crypto/libblock.lo\n crypto/block/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/block\n \t$(CHECK)\n .PHONY: crypto/block/check\n \n-crypto/libblowfish.a: $(go_crypto_blowfish_files) os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-crypto/libblowfish.la: crypto/libblowfish.a\n+crypto/libblowfish.$(OBJEXT): $(go_crypto_blowfish_files) os.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+crypto/libblowfish.lo: crypto/libblowfish.$(OBJEXT)\n+crypto/libblowfish.la: crypto/libblowfish.lo\n crypto/blowfish/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/blowfish\n \t$(CHECK)\n .PHONY: crypto/blowfish/check\n \n-crypto/libcast5.a: $(go_crypto_cast5_files) os.gox\n-\t$(BUILDARCHIVE)\n-crypto/libcast5.la: crypto/libcast5.a\n+crypto/libcast5.$(OBJEXT): $(go_crypto_cast5_files) os.gox\n+\t$(BUILDPACKAGE)\n+crypto/libcast5.lo: crypto/libcast5.$(OBJEXT)\n+crypto/libcast5.la: crypto/libcast5.lo\n crypt/cast5/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/cast5\n \t$(CHECK)\n .PHONY: crypto/cast5/check\n \n-crypto/libcipher.a: $(go_crypto_cipher_files) io.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/libcipher.la: crypto/libcipher.a\n+crypto/libcipher.$(OBJEXT): $(go_crypto_cipher_files) io.gox os.gox\n+\t$(BUILDPACKAGE)\n+crypto/libcipher.lo: crypto/libcipher.$(OBJEXT)\n+crypto/libcipher.la: crypto/libcipher.lo\n crypto/cipher/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/cipher\n \t$(CHECK)\n .PHONY: crypto/cipher/check\n \n-crypto/libelliptic.a: $(go_crypto_elliptic_files) big.gox io.gox os.gox \\\n-\t\tsync.gox\n-\t$(BUILDARCHIVE)\n-crypto/libelliptic.la: crypto/libelliptic.a\n+crypto/libelliptic.$(OBJEXT): $(go_crypto_elliptic_files) big.gox io.gox \\\n+\t\tos.gox sync.gox\n+\t$(BUILDPACKAGE)\n+crypto/libelliptic.lo: crypto/libelliptic.$(OBJEXT)\n+crypto/libelliptic.la: crypto/libelliptic.lo\n crypto/elliptic/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/elliptic\n \t$(CHECK)\n .PHONY: crypto/elliptic/check\n \n-crypto/libhmac.a: $(go_crypto_hmac_files) crypto/md5.gox crypto/sha1.gox \\\n-\t\tcrypto/sha256.gox hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/libhmac.la: crypto/libhmac.a\n+crypto/libhmac.$(OBJEXT): $(go_crypto_hmac_files) crypto/md5.gox \\\n+\t\tcrypto/sha1.gox crypto/sha256.gox hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+crypto/libhmac.lo: crypto/libhmac.$(OBJEXT)\n+crypto/libhmac.la: crypto/libhmac.lo\n crypto/hmac/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/hmac\n \t$(CHECK)\n .PHONY: crypto/hmac/check\n \n-crypto/libmd4.a: $(go_crypto_md4_files) hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/libmd4.la: crypto/libmd4.a\n+crypto/libmd4.$(OBJEXT): $(go_crypto_md4_files) hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+crypto/libmd4.lo: crypto/libmd4.$(OBJEXT)\n+crypto/libmd4.la: crypto/libmd4.lo\n crypto/md4/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/md4\n \t$(CHECK)\n .PHONY: crypto/md4/check\n \n-crypto/libmd5.a: $(go_crypto_md5_files) hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/libmd5.la: crypto/libmd5.a\n+crypto/libmd5.$(OBJEXT): $(go_crypto_md5_files) hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+crypto/libmd5.lo: crypto/libmd5.$(OBJEXT)\n+crypto/libmd5.la: crypto/libmd5.lo\n crypto/md5/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/md5\n \t$(CHECK)\n .PHONY: crypto/md5/check\n \n-crypto/libocsp.a: $(go_crypto_ocsp_files) asn1.gox crypto/rsa.gox \\\n+crypto/libocsp.$(OBJEXT): $(go_crypto_ocsp_files) asn1.gox crypto/rsa.gox \\\n \t\tcrypto/sha1.gox crypto/x509.gox os.gox time.gox\n-\t$(BUILDARCHIVE)\n-crypto/libocsp.la: crypto/libocsp.a\n+\t$(BUILDPACKAGE)\n+crypto/libocsp.lo: crypto/libocsp.$(OBJEXT)\n+crypto/libocsp.la: crypto/libocsp.lo\n crypto/ocsp/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ocsp\n \t$(CHECK)\n .PHONY: crypto/ocsp/check\n \n-crypto/librand.a: $(go_crypto_rand_files) crypto/aes.gox io.gox os.gox \\\n+crypto/librand.$(OBJEXT): $(go_crypto_rand_files) crypto/aes.gox io.gox os.gox \\\n \t\tsync.gox time.gox\n-\t$(BUILDARCHIVE)\n-crypto/librand.la: crypto/librand.a\n+\t$(BUILDPACKAGE)\n+crypto/librand.lo: crypto/librand.$(OBJEXT)\n+crypto/librand.la: crypto/librand.lo\n crypto/rand/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rand\n \t$(CHECK)\n .PHONY: crypto/rand/check\n \n-crypto/librc4.a: $(go_crypto_rc4_files) os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-crypto/librc4.la: crypto/librc4.a\n+crypto/librc4.$(OBJEXT): $(go_crypto_rc4_files) os.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+crypto/librc4.lo: crypto/librc4.$(OBJEXT)\n+crypto/librc4.la: crypto/librc4.lo\n crypto/rc4/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rc4\n \t$(CHECK)\n .PHONY: crypto/rc4/check\n \n-crypto/libripemd160.a: $(go_crypto_ripemd160_files) hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/libripemd160.la: crypto/libripemd160.a\n+crypto/libripemd160.$(OBJEXT): $(go_crypto_ripemd160_files) hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+crypto/libripemd160.lo: crypto/libripemd160.$(OBJEXT)\n+crypto/libripemd160.la: crypto/libripemd160.lo\n crypto/ripemd160/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ripemd160\n \t$(CHECK)\n .PHONY: crypto/ripemd160/check\n \n-crypto/librsa.a: $(go_crypto_rsa_files) big.gox crypto/sha1.gox \\\n+crypto/librsa.$(OBJEXT): $(go_crypto_rsa_files) big.gox crypto/sha1.gox \\\n \t\tcrypto/subtle.gox encoding/hex.gox hash.gox io.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/librsa.la: crypto/librsa.a\n+\t$(BUILDPACKAGE)\n+crypto/librsa.lo: crypto/librsa.$(OBJEXT)\n+crypto/librsa.la: crypto/librsa.lo\n crypto/rsa/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rsa\n \t$(CHECK)\n .PHONY: crypto/rsa/check\n \n-crypto/libsha1.a: $(go_crypto_sha1_files) hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/libsha1.la: crypto/libsha1.a\n+crypto/libsha1.$(OBJEXT): $(go_crypto_sha1_files) hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+crypto/libsha1.lo: crypto/libsha1.$(OBJEXT)\n+crypto/libsha1.la: crypto/libsha1.lo\n crypto/sha1/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha1\n \t$(CHECK)\n .PHONY: crypto/sha1/check\n \n-crypto/libsha256.a: $(go_crypto_sha256_files) hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/libsha256.la: crypto/libsha256.a\n+crypto/libsha256.$(OBJEXT): $(go_crypto_sha256_files) hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+crypto/libsha256.lo: crypto/libsha256.$(OBJEXT)\n+crypto/libsha256.la: crypto/libsha256.lo\n crypto/sha256/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha256\n \t$(CHECK)\n .PHONY: crypto/sha256/check\n \n-crypto/libsha512.a: $(go_crypto_sha512_files) hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/libsha512.la: crypto/libsha512.a\n+crypto/libsha512.$(OBJEXT): $(go_crypto_sha512_files) hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+crypto/libsha512.lo: crypto/libsha512.$(OBJEXT)\n+crypto/libsha512.la: crypto/libsha512.lo\n crypto/sha512/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha512\n \t$(CHECK)\n .PHONY: crypto/sha512/check\n \n-crypto/libsubtle.a: $(go_crypto_subtle_files)\n-\t$(BUILDARCHIVE)\n-crypto/libsubtle.la: crypto/libsubtle.a\n+crypto/libsubtle.$(OBJEXT): $(go_crypto_subtle_files)\n+\t$(BUILDPACKAGE)\n+crypto/libsubtle.lo: crypto/libsubtle.$(OBJEXT)\n+crypto/libsubtle.la: crypto/libsubtle.lo\n crypto/subtle/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/subtle\n \t$(CHECK)\n .PHONY: crypto/subtle/check\n \n-crypto/libtls.a: $(go_crypto_tls_files) big.gox bufio.gox bytes.gox \\\n+crypto/libtls.$(OBJEXT): $(go_crypto_tls_files) big.gox bufio.gox bytes.gox \\\n \t\tcontainer/list.gox crypto/aes.gox crypto/cipher.gox \\\n \t\tcrypto/elliptic.gox crypto/hmac.gox crypto/md5.gox \\\n \t\tcrypto/rc4.gox crypto/rand.gox crypto/rsa.gox crypto/sha1.gox \\\n \t\tcrypto/subtle.gox crypto/rsa.gox crypto/sha1.gox \\\n \t\tcrypto/x509.gox encoding/pem.gox fmt.gox hash.gox io.gox \\\n \t\tio/ioutil.gox net.gox os.gox strings.gox sync.gox time.gox\n-\t$(BUILDARCHIVE)\n-crypto/libtls.la: crypto/libtls.a\n+\t$(BUILDPACKAGE)\n+crypto/libtls.lo: crypto/libtls.$(OBJEXT)\n+crypto/libtls.la: crypto/libtls.lo\n crypto/tls/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/tls\n \t$(CHECK)\n .PHONY: crypto/tls/check\n \n-crypto/libtwofish.a: $(go_crypto_twofish_files) os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-crypto/libtwofish.la: crypto/libtwofish.a\n+crypto/libtwofish.$(OBJEXT): $(go_crypto_twofish_files) os.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+crypto/libtwofish.lo: crypto/libtwofish.$(OBJEXT)\n+crypto/libtwofish.la: crypto/libtwofish.lo\n crypto/twofish/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/twofish\n \t$(CHECK)\n .PHONY: crypto/twofish/check\n \n-crypto/libx509.a: $(go_crypto_x509_files) asn1.gox big.gox \\\n+crypto/libx509.$(OBJEXT): $(go_crypto_x509_files) asn1.gox big.gox \\\n \t\tcontainer/vector.gox crypto/rsa.gox crypto/sha1.gox hash.gox \\\n \t\tos.gox strings.gox time.gox\n-\t$(BUILDARCHIVE)\n-crypto/libx509.la: crypto/libx509.a\n+\t$(BUILDPACKAGE)\n+crypto/libx509.lo: crypto/libx509.$(OBJEXT)\n+crypto/libx509.la: crypto/libx509.lo\n crypto/x509/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/x509\n \t$(CHECK)\n .PHONY: crypto/x509/check\n \n-crypto/libxtea.a: $(go_crypto_xtea_files) os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-crypto/libxtea.la: crypto/libxtea.a\n+crypto/libxtea.$(OBJEXT): $(go_crypto_xtea_files) os.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+crypto/libxtea.lo: crypto/libxtea.$(OBJEXT)\n+crypto/libxtea.la: crypto/libxtea.lo\n crypto/xtea/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/xtea\n \t$(CHECK)\n .PHONY: crypto/xtea/check\n \n-crypto/openpgp/libarmor.a: $(go_crypto_openpgp_armor_files) bytes.gox \\\n+crypto/openpgp/libarmor.$(OBJEXT): $(go_crypto_openpgp_armor_files) bytes.gox \\\n \t\tcrypto/openpgp/error.gox encoding/base64.gox \\\n \t\tencoding/line.gox io.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/openpgp/libarmor.la: crypto/openpgp/libarmor.a\n+\t$(BUILDPACKAGE)\n+crypto/openpgp/libarmor.lo: crypto/openpgp/libarmor.$(OBJEXT)\n+crypto/openpgp/libarmor.la: crypto/openpgp/libarmor.lo\n crypto/openpgp/armor/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/armor\n \t$(CHECK)\n .PHONY: crypto/openpgp/armor/check\n \n-crypto/openpgp/liberror.a: $(go_crypto_openpgp_error_files)\n-\t$(BUILDARCHIVE)\n-crypto/openpgp/liberror.la: crypto/openpgp/liberror.a\n+crypto/openpgp/liberror.$(OBJEXT): $(go_crypto_openpgp_error_files)\n+\t$(BUILDPACKAGE)\n+crypto/openpgp/liberror.lo: crypto/openpgp/liberror.$(OBJEXT)\n+crypto/openpgp/liberror.la: crypto/openpgp/liberror.lo\n crypto/openpgp/error/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/error\n \t$(CHECK)\n .PHONY: crypto/openpgp/error/check\n \n-crypto/openpgp/libs2k.a: $(go_crypto_openpgp_s2k_files) crypto/md5.gox \\\n+crypto/openpgp/libs2k.$(OBJEXT): $(go_crypto_openpgp_s2k_files) crypto/md5.gox \\\n \t\tcrypto/openpgp/error.gox crypto/ripemd160.gox crypto/sha1.gox \\\n \t\tcrypto/sha256.gox crypto/sha512.gox hash.gox io.gox os.gox\n-\t$(BUILDARCHIVE)\n-crypto/openpgp/libs2k.la: crypto/openpgp/libs2k.a\n+\t$(BUILDPACKAGE)\n+crypto/openpgp/libs2k.lo: crypto/openpgp/libs2k.$(OBJEXT)\n+crypto/openpgp/libs2k.la: crypto/openpgp/libs2k.lo\n crypto/openpgp/s2k/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/s2k\n \t$(CHECK)\n .PHONY: crypto/openpgp/s2k/check\n \n-debug/libdwarf.a: $(go_debug_dwarf_files) encoding/binary.gox os.gox \\\n+debug/libdwarf.$(OBJEXT): $(go_debug_dwarf_files) encoding/binary.gox os.gox \\\n \t\tstrconv.gox\n-\t$(BUILDARCHIVE)\n-debug/libdwarf.la: debug/libdwarf.a\n+\t$(BUILDPACKAGE)\n+debug/libdwarf.lo: debug/libdwarf.$(OBJEXT)\n+debug/libdwarf.la: debug/libdwarf.lo\n debug/dwarf/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/dwarf\n \t$(CHECK)\n .PHONY: debug/dwarf/check\n \n-debug/libelf.a: $(go_debug_elf_files) bytes.gox debug/dwarf.gox \\\n+debug/libelf.$(OBJEXT): $(go_debug_elf_files) bytes.gox debug/dwarf.gox \\\n \t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-debug/libelf.la: debug/libelf.a\n+\t$(BUILDPACKAGE)\n+debug/libelf.lo: debug/libelf.$(OBJEXT)\n+debug/libelf.la: debug/libelf.lo\n debug/elf/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/elf\n \t$(CHECK)\n .PHONY: debug/elf/check\n \n-debug/libgosym.a: $(go_debug_gosym_files) encoding/binary.gox fmt.gox os.gox \\\n-\t\tstrconv.gox strings.gox\n-\t$(BUILDARCHIVE)\n-debug/libgosym.la: debug/libgosym.a\n+debug/libgosym.$(OBJEXT): $(go_debug_gosym_files) encoding/binary.gox fmt.gox \\\n+\t\tos.gox strconv.gox strings.gox\n+\t$(BUILDPACKAGE)\n+debug/libgosym.lo: debug/libgosym.$(OBJEXT)\n+debug/libgosym.la: debug/libgosym.lo\n debug/gosym/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/gosym\n \t$(CHECK)\n .PHONY: debug/gosym/check\n \n-debug/libmacho.a: $(go_debug_macho_files) bytes.gox debug/dwarf.gox \\\n+debug/libmacho.$(OBJEXT): $(go_debug_macho_files) bytes.gox debug/dwarf.gox \\\n \t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-debug/libmacho.la: debug/libmacho.a\n+\t$(BUILDPACKAGE)\n+debug/libmacho.lo: debug/libmacho.$(OBJEXT)\n+debug/libmacho.la: debug/libmacho.lo\n debug/macho/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/macho\n \t$(CHECK)\n .PHONY: debug/macho/check\n \n-debug/libpe.a: $(go_debug_pe_files) debug/dwarf.gox encoding/binary.gox \\\n-\t\tfmt.gox io.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-debug/libpe.la: debug/libpe.a\n+debug/libpe.$(OBJEXT): $(go_debug_pe_files) debug/dwarf.gox \\\n+\t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+debug/libpe.lo: debug/libpe.$(OBJEXT)\n+debug/libpe.la: debug/libpe.lo\n debug/pe/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/pe\n \t$(CHECK)\n .PHONY: debug/pe/check\n \n-debug/libproc.a: $(go_debug_proc_files) container/vector.gox fmt.gox \\\n+debug/libproc.$(OBJEXT): $(go_debug_proc_files) container/vector.gox fmt.gox \\\n \t\tio/ioutil.gox os.gox runtime.gox strconv.gox strings.gox \\\n \t\tsync.gox syscall.gox\n-\t$(BUILDARCHIVE)\n-debug/libproc.la: debug/libproc.a\n+\t$(BUILDPACKAGE)\n+debug/libproc.lo: debug/libproc.$(OBJEXT)\n+debug/libproc.la: debug/libproc.lo\n debug/proc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/proc\n \t$(CHECK)\n .PHONY: debug/proc/check\n \n-encoding/libascii85.a: $(go_encoding_ascii85_files) io.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-encoding/libascii85.la: encoding/libascii85.a\n+encoding/libascii85.$(OBJEXT): $(go_encoding_ascii85_files) io.gox os.gox \\\n+\t\tstrconv.gox\n+\t$(BUILDPACKAGE)\n+encoding/libascii85.lo: encoding/libascii85.$(OBJEXT)\n+encoding/libascii85.la: encoding/libascii85.lo\n encoding/ascii85/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/ascii85\n \t$(CHECK)\n .PHONY: encoding/ascii85/check\n \n-encoding/libbase32.a: $(go_encoding_base32_files) io.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-encoding/libbase32.la: encoding/libbase32.a\n+encoding/libbase32.$(OBJEXT): $(go_encoding_base32_files) io.gox os.gox \\\n+\t\tstrconv.gox\n+\t$(BUILDPACKAGE)\n+encoding/libbase32.lo: encoding/libbase32.$(OBJEXT)\n+encoding/libbase32.la: encoding/libbase32.lo\n encoding/base32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/base32\n \t$(CHECK)\n .PHONY: encoding/base32/check\n \n-encoding/libbase64.a: $(go_encoding_base64_files) io.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-encoding/libbase64.la: encoding/libbase64.a\n+encoding/libbase64.$(OBJEXT): $(go_encoding_base64_files) io.gox os.gox \\\n+\t\tstrconv.gox\n+\t$(BUILDPACKAGE)\n+encoding/libbase64.lo: encoding/libbase64.$(OBJEXT)\n+encoding/libbase64.la: encoding/libbase64.lo\n encoding/base64/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/base64\n \t$(CHECK)\n .PHONY: encoding/base64/check\n \n-encoding/libbinary.a: $(go_encoding_binary_files) io.gox math.gox os.gox \\\n-\t\treflect.gox\n-\t$(BUILDARCHIVE)\n-encoding/libbinary.la: encoding/libbinary.a\n+encoding/libbinary.$(OBJEXT): $(go_encoding_binary_files) io.gox math.gox \\\n+\t\tos.gox reflect.gox\n+\t$(BUILDPACKAGE)\n+encoding/libbinary.lo: encoding/libbinary.$(OBJEXT)\n+encoding/libbinary.la: encoding/libbinary.lo\n encoding/binary/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/binary\n \t$(CHECK)\n .PHONY: encoding/binary/check\n \n-encoding/libgit85.a: $(go_encoding_git85_files) bytes.gox io.gox os.gox \\\n-\t\tstrconv.gox\n-\t$(BUILDARCHIVE)\n-encoding/libgit85.la: encoding/libgit85.a\n+encoding/libgit85.$(OBJEXT): $(go_encoding_git85_files) bytes.gox io.gox \\\n+\t\tos.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+encoding/libgit85.lo: encoding/libgit85.$(OBJEXT)\n+encoding/libgit85.la: encoding/libgit85.lo\n encoding/git85/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/git85\n \t$(CHECK)\n .PHONY: encoding/git85/check\n \n-encoding/libhex.a: $(go_encoding_hex_files) os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-encoding/libhex.la: encoding/libhex.a\n+encoding/libhex.$(OBJEXT): $(go_encoding_hex_files) os.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+encoding/libhex.lo: encoding/libhex.$(OBJEXT)\n+encoding/libhex.la: encoding/libhex.lo\n encoding/hex/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/hex\n \t$(CHECK)\n .PHONY: encoding/hex/check\n \n-encoding/libline.a: $(go_encoding_line_files) io.gox os.gox\n-\t$(BUILDARCHIVE)\n-encoding/libline.la: encoding/libline.a\n+encoding/libline.$(OBJEXT): $(go_encoding_line_files) io.gox os.gox\n+\t$(BUILDPACKAGE)\n+encoding/libline.lo: encoding/libline.$(OBJEXT)\n+encoding/libline.la: encoding/libline.lo\n encoding/line/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/line\n \t$(CHECK)\n .PHONY: encoding/line/check\n \n-encoding/libpem.a: $(go_encoding_pem_files) bytes.gox encoding/base64.gox\n-\t$(BUILDARCHIVE)\n-encoding/libpem.la: encoding/libpem.a\n+encoding/libpem.$(OBJEXT): $(go_encoding_pem_files) bytes.gox \\\n+\t\tencoding/base64.gox\n+\t$(BUILDPACKAGE)\n+encoding/libpem.lo: encoding/libpem.$(OBJEXT)\n+encoding/libpem.la: encoding/libpem.lo\n encoding/pem/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/pem\n \t$(CHECK)\n .PHONY: encoding/pem/check\n \n-exp/libdatafmt.a: $(go_exp_datafmt_files) bytes.gox container/vector.gox \\\n-\t\tfmt.gox go/scanner.gox go/token.gox io.gox os.gox reflect.gox \\\n-\t\truntime.gox strconv.gox strings.gox\n-\t$(BUILDARCHIVE)\n-exp/libdatafmt.la: exp/libdatafmt.a\n+exp/libdatafmt.$(OBJEXT): $(go_exp_datafmt_files) bytes.gox \\\n+\t\tcontainer/vector.gox fmt.gox go/scanner.gox go/token.gox \\\n+\t\tio.gox os.gox reflect.gox runtime.gox strconv.gox strings.gox\n+\t$(BUILDPACKAGE)\n+exp/libdatafmt.lo: exp/libdatafmt.$(OBJEXT)\n+exp/libdatafmt.la: exp/libdatafmt.lo\n exp/datafmt/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/datafmt\n \t$(CHECK)\n .PHONY: exp/datafmt/check\n \n-exp/libdraw.a: $(go_exp_draw_files) image.gox os.gox\n-\t$(BUILDARCHIVE)\n-exp/libdraw.la: exp/libdraw.a\n+exp/libdraw.$(OBJEXT): $(go_exp_draw_files) image.gox os.gox\n+\t$(BUILDPACKAGE)\n+exp/libdraw.lo: exp/libdraw.$(OBJEXT)\n+exp/libdraw.la: exp/libdraw.lo\n exp/draw/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/draw\n \t$(CHECK)\n .PHONY: exp/draw/check\n \n-exp/libeval.a: $(go_exp_eval_files) big.gox go/ast.gox go/parser.gox \\\n+exp/libeval.$(OBJEXT): $(go_exp_eval_files) big.gox go/ast.gox go/parser.gox \\\n \t\tgo/scanner.gox go/token.gox fmt.gox log.gox strconv.gox \\\n \t\tstrings.gox os.gox reflect.gox runtime.gox sort.gox template.gox\n-\t$(BUILDARCHIVE)\n-exp/libeval.la: exp/libeval.a\n+\t$(BUILDPACKAGE)\n+exp/libeval.lo: exp/libeval.$(OBJEXT)\n+exp/libeval.la: exp/libeval.lo\n exp/eval/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/eval\n \t$(CHECK)\n .PHONY: exp/eval/check\n \n-go/libast.a: $(go_go_ast_files) fmt.gox go/token.gox io.gox os.gox \\\n+go/libast.$(OBJEXT): $(go_go_ast_files) fmt.gox go/token.gox io.gox os.gox \\\n \t\treflect.gox unicode.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-go/libast.la: go/libast.a\n+\t$(BUILDPACKAGE)\n+go/libast.lo: go/libast.$(OBJEXT)\n+go/libast.la: go/libast.lo\n go/ast/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/ast\n \t$(CHECK)\n .PHONY: go/ast/check\n \n-go/libdoc.a: $(go_go_doc_files) go/ast.gox go/token.gox io.gox regexp.gox \\\n-\t\tsort.gox strings.gox template.gox\n-\t$(BUILDARCHIVE)\n-go/libdoc.la: go/libdoc.a\n+go/libdoc.$(OBJEXT): $(go_go_doc_files) go/ast.gox go/token.gox io.gox \\\n+\t\tregexp.gox sort.gox strings.gox template.gox\n+\t$(BUILDPACKAGE)\n+go/libdoc.lo: go/libdoc.$(OBJEXT)\n+go/libdoc.la: go/libdoc.lo\n go/doc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/doc\n \t$(CHECK)\n .PHONY: go/doc/check\n \n-go/libparser.a: $(go_go_parser_files) bytes.gox fmt.gox go/ast.gox \\\n+go/libparser.$(OBJEXT): $(go_go_parser_files) bytes.gox fmt.gox go/ast.gox \\\n \t\tgo/scanner.gox go/token.gox io.gox io/ioutil.gox os.gox \\\n \t\tpath.gox strings.gox\n-\t$(BUILDARCHIVE)\n-go/libparser.la: go/libparser.a\n+\t$(BUILDPACKAGE)\n+go/libparser.lo: go/libparser.$(OBJEXT)\n+go/libparser.la: go/libparser.lo\n go/parser/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/parser\n \t$(CHECK)\n .PHONY: go/parser/check\n \n-go/libprinter.a: $(go_go_printer_files) bytes.gox fmt.gox go/ast.gox \\\n+go/libprinter.$(OBJEXT): $(go_go_printer_files) bytes.gox fmt.gox go/ast.gox \\\n \t\tgo/token.gox io.gox os.gox reflect.gox runtime.gox \\\n \t\tstrings.gox tabwriter.gox\n-\t$(BUILDARCHIVE)\n-go/libprinter.la: go/libprinter.a\n+\t$(BUILDPACKAGE)\n+go/libprinter.lo: go/libprinter.$(OBJEXT)\n+go/libprinter.la: go/libprinter.lo\n go/printer/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/printer\n \t$(CHECK)\n .PHONY: go/printer/check\n \n-go/libscanner.a: $(go_go_scanner_files) bytes.gox container/vector.gox fmt.gox \\\n-\t\tgo/token.gox io.gox os.gox path.gox sort.gox strconv.gox \\\n-\t\tunicode.gox utf8.gox\n-\t$(BUILDARCHIVE)\n-go/libscanner.la: go/libscanner.a\n+go/libscanner.$(OBJEXT): $(go_go_scanner_files) bytes.gox \\\n+\t\tcontainer/vector.gox fmt.gox go/token.gox io.gox os.gox \\\n+\t\tpath.gox sort.gox strconv.gox unicode.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+go/libscanner.lo: go/libscanner.$(OBJEXT)\n+go/libscanner.la: go/libscanner.lo\n go/scanner/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/scanner\n \t$(CHECK)\n .PHONY: go/scanner/check\n \n-go/libtoken.a: $(go_go_token_files) fmt.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-go/libtoken.la: go/libtoken.a\n+go/libtoken.$(OBJEXT): $(go_go_token_files) fmt.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+go/libtoken.lo: go/libtoken.$(OBJEXT)\n+go/libtoken.la: go/libtoken.lo\n go/token/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/token\n \t$(CHECK)\n .PHONY: go/token/check\n \n-go/libtypechecker.a: $(go_go_typechecker_files) fmt.gox go/ast.gox \\\n+go/libtypechecker.$(OBJEXT): $(go_go_typechecker_files) fmt.gox go/ast.gox \\\n \t\tgo/token.gox go/scanner.gox os.gox\n-\t$(BUILDARCHIVE)\n-go/libtypechecker.la: go/libtypechecker.a\n+\t$(BUILDPACKAGE)\n+go/libtypechecker.lo: go/libtypechecker.$(OBJEXT)\n+go/libtypechecker.la: go/libtypechecker.lo\n go/typechecker/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/typechecker\n \t$(CHECK)\n .PHONY: go/typechecker/check\n \n-hash/libadler32.a: $(go_hash_adler32_files) hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-hash/libadler32.la: hash/libadler32.a\n+hash/libadler32.$(OBJEXT): $(go_hash_adler32_files) hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+hash/libadler32.lo: hash/libadler32.$(OBJEXT)\n+hash/libadler32.la: hash/libadler32.lo\n hash/adler32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/adler32\n \t$(CHECK)\n .PHONY: hash/adler32/check\n \n-hash/libcrc32.a: $(go_hash_crc32_files) hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-hash/libcrc32.la: hash/libcrc32.a\n+hash/libcrc32.$(OBJEXT): $(go_hash_crc32_files) hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+hash/libcrc32.lo: hash/libcrc32.$(OBJEXT)\n+hash/libcrc32.la: hash/libcrc32.lo\n hash/crc32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/crc32\n \t$(CHECK)\n .PHONY: hash/crc32/check\n \n-hash/libcrc64.a: $(go_hash_crc64_files) hash.gox os.gox\n-\t$(BUILDARCHIVE)\n-hash/libcrc64.la: hash/libcrc64.a\n+hash/libcrc64.$(OBJEXT): $(go_hash_crc64_files) hash.gox os.gox\n+\t$(BUILDPACKAGE)\n+hash/libcrc64.lo: hash/libcrc64.$(OBJEXT)\n+hash/libcrc64.la: hash/libcrc64.lo\n hash/crc64/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/crc64\n \t$(CHECK)\n .PHONY: hash/crc64/check\n \n-http/libpprof.a: $(go_http_pprof_files) bufio.gox fmt.gox http.gox os.gox \\\n-\t\truntime.gox runtime/pprof.gox strconv.gox strings.gox\n-\t$(BUILDARCHIVE)\n-http/libpprof.la: http/libpprof.a\n+http/libpprof.$(OBJEXT): $(go_http_pprof_files) bufio.gox fmt.gox http.gox \\\n+\t\tos.gox runtime.gox runtime/pprof.gox strconv.gox strings.gox\n+\t$(BUILDPACKAGE)\n+http/libpprof.lo: http/libpprof.$(OBJEXT)\n+http/libpprof.la: http/libpprof.lo\n http/pprof/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) http/pprof\n \t$(CHECK)\n .PHONY: http/pprof/check\n \n-image/libjpeg.a: $(go_image_jpeg_files) bufio.gox image.gox io.gox os.gox\n-\t$(BUILDARCHIVE)\n-image/libjpeg.la: image/libjpeg.a\n+image/libjpeg.$(OBJEXT): $(go_image_jpeg_files) bufio.gox image.gox io.gox \\\n+\t\tos.gox\n+\t$(BUILDPACKAGE)\n+image/libjpeg.lo: image/libjpeg.$(OBJEXT)\n+image/libjpeg.la: image/libjpeg.lo\n image/jpeg/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/jpeg\n \t$(CHECK)\n .PHONY: image/jpeg/check\n \n-image/libpng.a: $(go_image_png_files) bufio.gox compress/zlib.gox fmt.gox \\\n-\t\thash.gox hash/crc32.gox image.gox io.gox os.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-image/libpng.la: image/libpng.a\n+image/libpng.$(OBJEXT): $(go_image_png_files) bufio.gox compress/zlib.gox \\\n+\t\tfmt.gox hash.gox hash/crc32.gox image.gox io.gox os.gox \\\n+\t\tstrconv.gox\n+\t$(BUILDPACKAGE)\n+image/libpng.lo: image/libpng.$(OBJEXT)\n+image/libpng.la: image/libpng.lo\n image/png/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/png\n \t$(CHECK)\n .PHONY: image/png/check\n \n-index/libsuffixarray.a: $(go_index_suffixarray_files) bytes.gox regexp.gox \\\n-\t\tsort.gox\n-\t$(BUILDARCHIVE)\n-index/libsuffixarray.la: index/libsuffixarray.a\n+index/libsuffixarray.$(OBJEXT): $(go_index_suffixarray_files) bytes.gox \\\n+\t\tregexp.gox sort.gox\n+\t$(BUILDPACKAGE)\n+index/libsuffixarray.lo: index/libsuffixarray.$(OBJEXT)\n+index/libsuffixarray.la: index/libsuffixarray.lo\n index/suffixarray/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) index/suffixarray\n \t$(CHECK)\n .PHONY: index/suffixarray/check\n \n-io/libioutil.a: $(go_io_ioutil_files) bytes.gox io.gox os.gox sort.gox \\\n+io/libioutil.$(OBJEXT): $(go_io_ioutil_files) bytes.gox io.gox os.gox sort.gox \\\n \t\tstrconv.gox\n-\t$(BUILDARCHIVE)\n-io/libioutil.la: io/libioutil.a\n+\t$(BUILDPACKAGE)\n+io/libioutil.lo: io/libioutil.$(OBJEXT)\n+io/libioutil.la: io/libioutil.lo\n io/ioutil/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) io/ioutil\n \t$(CHECK)\n .PHONY: io/ioutil/check\n \n-mime/libmultipart.a: $(go_mime_multipart_files) bufio.gox bytes.gox io.gox \\\n-\t\tmime.gox os.gox regexp.gox strings.gox\n-\t$(BUILDARCHIVE)\n-mime/libmultipart.la: mime/libmultipart.a\n+mime/libmultipart.$(OBJEXT): $(go_mime_multipart_files) bufio.gox bytes.gox \\\n+\t\tio.gox mime.gox os.gox regexp.gox strings.gox\n+\t$(BUILDPACKAGE)\n+mime/libmultipart.lo: mime/libmultipart.$(OBJEXT)\n+mime/libmultipart.la: mime/libmultipart.lo\n mime/multipart/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) mime/multipart\n \t$(CHECK)\n .PHONY: mime/multipart/check\n \n-net/libdict.a: $(go_net_dict_files) container/vector.gox net/textproto.gox \\\n-\t\tos.gox strconv.gox strings.gox\n-\t$(BUILDARCHIVE)\n-net/libdict.la: net/libdict.a\n+net/libdict.$(OBJEXT): $(go_net_dict_files) container/vector.gox \\\n+\t\tnet/textproto.gox os.gox strconv.gox strings.gox\n+\t$(BUILDPACKAGE)\n+net/libdict.lo: net/libdict.$(OBJEXT)\n+net/libdict.la: net/libdict.lo\n \n-net/libtextproto.a: $(go_net_textproto_files) bufio.gox bytes.gox \\\n+net/libtextproto.$(OBJEXT): $(go_net_textproto_files) bufio.gox bytes.gox \\\n \t\tcontainer/vector.gox fmt.gox io.gox io/ioutil.gox net.gox \\\n \t\tos.gox strconv.gox sync.gox\n-\t$(BUILDARCHIVE)\n-net/libtextproto.la: net/libtextproto.a\n+\t$(BUILDPACKAGE)\n+net/libtextproto.lo: net/libtextproto.$(OBJEXT)\n+net/libtextproto.la: net/libtextproto.lo\n net/textproto/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) net/textproto\n \t$(CHECK)\n .PHONY: net/textproto/check\n \n-os/libinotify.a: $(go_os_inotify_files) fmt.gox os.gox strings.gox \\\n+os/libinotify.$(OBJEXT): $(go_os_inotify_files) fmt.gox os.gox strings.gox \\\n \t\tsyscall.gox\n-\t$(BUILDARCHIVE)\n-os/libinotify.la: os/libinotify.a\n+\t$(BUILDPACKAGE)\n+os/libinotify.lo: os/libinotify.$(OBJEXT)\n+os/libinotify.la: os/libinotify.lo\n os/inotify/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) os/inotify\n \t$(CHECK)\n .PHONY: os/inotify/check\n \n-os/libsignal.a: $(go_os_signal_files) runtime.gox strconv.gox\n-\t$(BUILDARCHIVE)\n-os/libsignal.la: os/libsignal.a\n+os/libsignal.$(OBJEXT): $(go_os_signal_files) runtime.gox strconv.gox\n+\t$(BUILDPACKAGE)\n+os/libsignal.lo: os/libsignal.$(OBJEXT)\n+os/libsignal.la: os/libsignal.lo\n os/signal/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) os/signal\n \t$(CHECK)\n@@ -4814,54 +4931,60 @@ unix.go: $(srcdir)/go/os/signal/mkunix.sh sysinfo.go\n \t$(SHELL) $(srcdir)/go/os/signal/mkunix.sh sysinfo.go > $@.tmp\n \tmv -f $@.tmp $@\n \n-rpc/libjsonrpc.a: $(go_rpc_jsonrpc_files) fmt.gox io.gox json.gox net.gox \\\n-\t\tos.gox rpc.gox sync.gox\n-\t$(BUILDARCHIVE)\n-rpc/libjsonrpc.la: rpc/libjsonrpc.a\n+rpc/libjsonrpc.$(OBJEXT): $(go_rpc_jsonrpc_files) fmt.gox io.gox json.gox \\\n+\t\tnet.gox os.gox rpc.gox sync.gox\n+\t$(BUILDPACKAGE)\n+rpc/libjsonrpc.lo: rpc/libjsonrpc.$(OBJEXT)\n+rpc/libjsonrpc.la: rpc/libjsonrpc.lo\n rpc/jsonrpc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) rpc/jsonrpc\n \t$(CHECK)\n .PHONY: rpc/jsonrpc/check\n \n-runtime/libdebug.a: $(go_runtime_debug_files) bytes.gox fmt.gox io/ioutil.gox \\\n-\t\tos.gox runtime.gox\n-\t$(BUILDARCHIVE)\n-runtime/libdebug.la: runtime/libdebug.a\n+runtime/libdebug.$(OBJEXT): $(go_runtime_debug_files) bytes.gox fmt.gox \\\n+\t\tio/ioutil.gox os.gox runtime.gox\n+\t$(BUILDPACKAGE)\n+runtime/libdebug.lo: runtime/libdebug.$(OBJEXT)\n+runtime/libdebug.la: runtime/libdebug.lo\n runtime/debug/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) runtime/debug\n \t$(CHECK)\n .PHONY: runtime/debug/check\n \n-runtime/libpprof.a: $(go_runtime_pprof_files) bufio.gox fmt.gox io.gox os.gox \\\n-\t\truntime.gox\n-\t$(BUILDARCHIVE)\n-runtime/libpprof.la: runtime/libpprof.a\n+runtime/libpprof.$(OBJEXT): $(go_runtime_pprof_files) bufio.gox fmt.gox \\\n+\t\tio.gox os.gox runtime.gox\n+\t$(BUILDPACKAGE)\n+runtime/libpprof.lo: runtime/libpprof.$(OBJEXT)\n+runtime/libpprof.la: runtime/libpprof.lo\n runtime/pprof/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) runtime/pprof\n \t$(CHECK)\n .PHONY: runtime/pprof/check\n \n-testing/libiotest.a: $(go_testing_iotest_files) io.gox log.gox os.gox\n-\t$(BUILDARCHIVE)\n-testing/libiotest.la: testing/libiotest.a\n+testing/libiotest.$(OBJEXT): $(go_testing_iotest_files) io.gox log.gox os.gox\n+\t$(BUILDPACKAGE)\n+testing/libiotest.lo: testing/libiotest.$(OBJEXT)\n+testing/libiotest.la: testing/libiotest.lo\n testing/iotest/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/iotest\n \t$(CHECK)\n .PHONY: testing/iotest/check\n \n-testing/libquick.a: $(go_testing_quick_files) flag.gox fmt.gox math.gox \\\n-\t\tos.gox rand.gox reflect.gox strings.gox\n-\t$(BUILDARCHIVE)\n-testing/libquick.la: testing/libquick.a\n+testing/libquick.$(OBJEXT): $(go_testing_quick_files) flag.gox fmt.gox \\\n+\t\tmath.gox os.gox rand.gox reflect.gox strings.gox\n+\t$(BUILDPACKAGE)\n+testing/libquick.lo: testing/libquick.$(OBJEXT)\n+testing/libquick.la: testing/libquick.lo\n testing/quick/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/quick\n \t$(CHECK)\n .PHONY: testing/quick/check\n \n-testing/libscript.a: $(go_testing_script_files) fmt.gox os.gox rand.gox \\\n-\t\treflect.gox strings.gox\n-\t$(BUILDARCHIVE)\n-testing/libscript.la: testing/libscript.a\n+testing/libscript.$(OBJEXT): $(go_testing_script_files) fmt.gox os.gox \\\n+\t\trand.gox reflect.gox strings.gox\n+\t$(BUILDPACKAGE)\n+testing/libscript.lo: testing/libscript.$(OBJEXT)\n+testing/libscript.la: testing/libscript.lo\n testing/script/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/script\n \t$(CHECK)\n@@ -4873,285 +4996,285 @@ s-sysinfo: $(srcdir)/mksysinfo.sh config.h\n \t$(SHELL) $(srcdir)/../move-if-change tmp-sysinfo.go sysinfo.go\n \t$(STAMP) $@\n \n-syscalls/libsyscall.a: $(go_syscall_files) $(go_syscall_c_files) sync.gox\n+syscalls/syscall.$(OBJEXT): $(go_syscall_files) $(go_syscall_c_files) sync.gox\n \trm -f syscall.gox syscalls/libsyscall.a\n \ttest -d syscalls || $(MKDIR_P) syscalls\n \tfiles=`echo $^ | sed -e 's/[^ ]*\\.gox//g' -e's/[^ ]*\\.c//g'`; \\\n \t$(LTGOCOMPILE) -I . -c -fgo-prefix=\"libgo_syscalls\" -o syscalls/syscall.$(OBJEXT) $$files\n+syscalls/errno.$(OBJEXT): $(srcdir)/syscalls/errno.c syscalls/syscall.$(OBJEXT)\n \t$(LTCOMPILE) -c -o syscalls/errno.$(OBJEXT) $(srcdir)/syscalls/errno.c\n-\t$(AR) rc syscalls/libsyscall.a syscalls/syscall.$(OBJEXT) syscalls/errno.$(OBJEXT)\n-syscalls/libsyscall.la: syscalls/libsyscall.a\n+syscalls/libsyscall.la: syscalls/syscall.$(OBJEXT) syscalls/errno.$(OBJEXT)\n \t$(LINK) syscalls/syscall.lo syscalls/errno.lo\n \n-asn1.gox: asn1/libasn1.a\n+asn1.gox: asn1/libasn1.$(OBJEXT)\n \t$(BUILDGOX)\n-big.gox: big/libbig.a\n+big.gox: big/libbig.$(OBJEXT)\n \t$(BUILDGOX)\n-bufio.gox: bufio/libbufio.a\n+bufio.gox: bufio/libbufio.$(OBJEXT)\n \t$(BUILDGOX)\n-bytes.gox: bytes/libbytes.a\n+bytes.gox: bytes/bytes.$(OBJEXT)\n \t$(BUILDGOX)\n-cmath.gox: cmath/libcmath.a\n+cmath.gox: cmath/libcmath.$(OBJEXT)\n \t$(BUILDGOX)\n-ebnf.gox: ebnf/libebnf.a\n+ebnf.gox: ebnf/libebnf.$(OBJEXT)\n \t$(BUILDGOX)\n-exec.gox: exec/libexec.a\n+exec.gox: exec/libexec.$(OBJEXT)\n \t$(BUILDGOX)\n-expvar.gox: expvar/libexpvar.a\n+expvar.gox: expvar/libexpvar.$(OBJEXT)\n \t$(BUILDGOX)\n-flag.gox: flag/libflag.a\n+flag.gox: flag/libflag.$(OBJEXT)\n \t$(BUILDGOX)\n-fmt.gox: fmt/libfmt.a\n+fmt.gox: fmt/libfmt.$(OBJEXT)\n \t$(BUILDGOX)\n-gob.gox: gob/libgob.a\n+gob.gox: gob/libgob.$(OBJEXT)\n \t$(BUILDGOX)\n-hash.gox: hash/libhash.a\n+hash.gox: hash/libhash.$(OBJEXT)\n \t$(BUILDGOX)\n-html.gox: html/libhtml.a\n+html.gox: html/libhtml.$(OBJEXT)\n \t$(BUILDGOX)\n-http.gox: http/libhttp.a\n+http.gox: http/libhttp.$(OBJEXT)\n \t$(BUILDGOX)\n-image.gox: image/libimage.a\n+image.gox: image/libimage.$(OBJEXT)\n \t$(BUILDGOX)\n-io.gox: io/libio.a\n+io.gox: io/libio.$(OBJEXT)\n \t$(BUILDGOX)\n-json.gox: json/libjson.a\n+json.gox: json/libjson.$(OBJEXT)\n \t$(BUILDGOX)\n-log.gox: log/liblog.a\n+log.gox: log/liblog.$(OBJEXT)\n \t$(BUILDGOX)\n-math.gox: math/libmath.a\n+math.gox: math/libmath.$(OBJEXT)\n \t$(BUILDGOX)\n-mime.gox: mime/libmime.a\n+mime.gox: mime/libmime.$(OBJEXT)\n \t$(BUILDGOX)\n-net.gox: net/libnet.a\n+net.gox: net/libnet.$(OBJEXT)\n \t$(BUILDGOX)\n-netchan.gox: netchan/libnetchan.a\n+netchan.gox: netchan/libnetchan.$(OBJEXT)\n \t$(BUILDGOX)\n-os.gox: os/libos.a\n+os.gox: os/libos.$(OBJEXT)\n \t$(BUILDGOX)\n-patch.gox: patch/libpatch.a\n+patch.gox: patch/libpatch.$(OBJEXT)\n \t$(BUILDGOX)\n-path.gox: path/libpath.a\n+path.gox: path/libpath.$(OBJEXT)\n \t$(BUILDGOX)\n-rand.gox: rand/librand.a\n+rand.gox: rand/librand.$(OBJEXT)\n \t$(BUILDGOX)\n-reflect.gox: reflect/libreflect.a\n+reflect.gox: reflect/libreflect.$(OBJEXT)\n \t$(BUILDGOX)\n-regexp.gox: regexp/libregexp.a\n+regexp.gox: regexp/libregexp.$(OBJEXT)\n \t$(BUILDGOX)\n-rpc.gox: rpc/librpc.a\n+rpc.gox: rpc/librpc.$(OBJEXT)\n \t$(BUILDGOX)\n-runtime.gox: runtime/libruntime.a\n+runtime.gox: runtime/libruntime.$(OBJEXT)\n \t$(BUILDGOX)\n-scanner.gox: scanner/libscanner.a\n+scanner.gox: scanner/libscanner.$(OBJEXT)\n \t$(BUILDGOX)\n-smtp.gox: smtp/libsmtp.a\n+smtp.gox: smtp/libsmtp.$(OBJEXT)\n \t$(BUILDGOX)\n-sort.gox: sort/libsort.a\n+sort.gox: sort/libsort.$(OBJEXT)\n \t$(BUILDGOX)\n-strconv.gox: strconv/libstrconv.a\n+strconv.gox: strconv/libstrconv.$(OBJEXT)\n \t$(BUILDGOX)\n-strings.gox: strings/libstrings.a\n+strings.gox: strings/libstrings.$(OBJEXT)\n \t$(BUILDGOX)\n-sync.gox: sync/libsync.a\n+sync.gox: sync/mutex.$(OBJEXT)\n \t$(BUILDGOX)\n-syslog.gox: syslog/libsyslog.a\n+syslog.gox: syslog/libsyslog.$(OBJEXT)\n \t$(BUILDGOX)\n-syscall.gox: syscalls/libsyscall.a\n+syscall.gox: syscalls/syscall.$(OBJEXT)\n \t$(BUILDGOX)\n-tabwriter.gox: tabwriter/libtabwriter.a\n+tabwriter.gox: tabwriter/libtabwriter.$(OBJEXT)\n \t$(BUILDGOX)\n-template.gox: template/libtemplate.a\n+template.gox: template/libtemplate.$(OBJEXT)\n \t$(BUILDGOX)\n-testing.gox: testing/libtesting.a\n+testing.gox: testing/libtesting.$(OBJEXT)\n \t$(BUILDGOX)\n-time.gox: time/libtime.a\n+time.gox: time/libtime.$(OBJEXT)\n \t$(BUILDGOX)\n-try.gox: try/libtry.a\n+try.gox: try/libtry.$(OBJEXT)\n \t$(BUILDGOX)\n-unicode.gox: unicode/libunicode.a\n+unicode.gox: unicode/libunicode.$(OBJEXT)\n \t$(BUILDGOX)\n-utf16.gox: utf16/libutf16.a\n+utf16.gox: utf16/libutf16.$(OBJEXT)\n \t$(BUILDGOX)\n-utf8.gox: utf8/libutf8.a\n+utf8.gox: utf8/libutf8.$(OBJEXT)\n \t$(BUILDGOX)\n-websocket.gox: websocket/libwebsocket.a\n+websocket.gox: websocket/libwebsocket.$(OBJEXT)\n \t$(BUILDGOX)\n-xml.gox: xml/libxml.a\n+xml.gox: xml/libxml.$(OBJEXT)\n \t$(BUILDGOX)\n \n-archive/tar.gox: archive/libtar.a\n+archive/tar.gox: archive/libtar.$(OBJEXT)\n \t$(BUILDGOX)\n-archive/zip.gox: archive/libzip.a\n+archive/zip.gox: archive/libzip.$(OBJEXT)\n \t$(BUILDGOX)\n \n-compress/flate.gox: compress/libflate.a\n+compress/flate.gox: compress/libflate.$(OBJEXT)\n \t$(BUILDGOX)\n-compress/gzip.gox: compress/libgzip.a\n+compress/gzip.gox: compress/libgzip.$(OBJEXT)\n \t$(BUILDGOX)\n-compress/zlib.gox: compress/libzlib.a\n+compress/zlib.gox: compress/libzlib.$(OBJEXT)\n \t$(BUILDGOX)\n \n-container/heap.gox: container/libheap.a\n+container/heap.gox: container/libheap.$(OBJEXT)\n \t$(BUILDGOX)\n-container/list.gox: container/liblist.a\n+container/list.gox: container/liblist.$(OBJEXT)\n \t$(BUILDGOX)\n-container/ring.gox: container/libring.a\n+container/ring.gox: container/libring.$(OBJEXT)\n \t$(BUILDGOX)\n-container/vector.gox: container/libvector.a\n+container/vector.gox: container/libvector.$(OBJEXT)\n \t$(BUILDGOX)\n \n-crypto/aes.gox: crypto/libaes.a\n+crypto/aes.gox: crypto/libaes.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/block.gox: crypto/libblock.a\n+crypto/block.gox: crypto/libblock.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/blowfish.gox: crypto/libblowfish.a\n+crypto/blowfish.gox: crypto/libblowfish.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/cast5.gox: crypto/libcast5.a\n+crypto/cast5.gox: crypto/libcast5.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/cipher.gox: crypto/libcipher.a\n+crypto/cipher.gox: crypto/libcipher.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/elliptic.gox: crypto/libelliptic.a\n+crypto/elliptic.gox: crypto/libelliptic.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/hmac.gox: crypto/libhmac.a\n+crypto/hmac.gox: crypto/libhmac.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/md4.gox: crypto/libmd4.a\n+crypto/md4.gox: crypto/libmd4.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/md5.gox: crypto/libmd5.a\n+crypto/md5.gox: crypto/libmd5.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/ocsp.gox: crypto/libocsp.a\n+crypto/ocsp.gox: crypto/libocsp.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/rand.gox: crypto/librand.a\n+crypto/rand.gox: crypto/librand.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/rc4.gox: crypto/librc4.a\n+crypto/rc4.gox: crypto/librc4.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/ripemd160.gox: crypto/libripemd160.a\n+crypto/ripemd160.gox: crypto/libripemd160.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/rsa.gox: crypto/librsa.a\n+crypto/rsa.gox: crypto/librsa.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/sha1.gox: crypto/libsha1.a\n+crypto/sha1.gox: crypto/libsha1.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/sha256.gox: crypto/libsha256.a\n+crypto/sha256.gox: crypto/libsha256.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/sha512.gox: crypto/libsha512.a\n+crypto/sha512.gox: crypto/libsha512.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/subtle.gox: crypto/libsubtle.a\n+crypto/subtle.gox: crypto/libsubtle.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/tls.gox: crypto/libtls.a\n+crypto/tls.gox: crypto/libtls.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/twofish.gox: crypto/libtwofish.a\n+crypto/twofish.gox: crypto/libtwofish.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/x509.gox: crypto/libx509.a\n+crypto/x509.gox: crypto/libx509.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/xtea.gox: crypto/libxtea.a\n+crypto/xtea.gox: crypto/libxtea.$(OBJEXT)\n \t$(BUILDGOX)\n \n-crypto/openpgp/armor.gox: crypto/openpgp/libarmor.a\n+crypto/openpgp/armor.gox: crypto/openpgp/libarmor.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/openpgp/error.gox: crypto/openpgp/liberror.a\n+crypto/openpgp/error.gox: crypto/openpgp/liberror.$(OBJEXT)\n \t$(BUILDGOX)\n-crypto/openpgp/s2k.gox: crypto/openpgp/libs2k.a\n+crypto/openpgp/s2k.gox: crypto/openpgp/libs2k.$(OBJEXT)\n \t$(BUILDGOX)\n \n-debug/dwarf.gox: debug/libdwarf.a\n+debug/dwarf.gox: debug/libdwarf.$(OBJEXT)\n \t$(BUILDGOX)\n-debug/elf.gox: debug/libelf.a\n+debug/elf.gox: debug/libelf.$(OBJEXT)\n \t$(BUILDGOX)\n-debug/gosym.gox: debug/libgosym.a\n+debug/gosym.gox: debug/libgosym.$(OBJEXT)\n \t$(BUILDGOX)\n-debug/macho.gox: debug/libmacho.a\n+debug/macho.gox: debug/libmacho.$(OBJEXT)\n \t$(BUILDGOX)\n-debug/pe.gox: debug/libpe.a\n+debug/pe.gox: debug/libpe.$(OBJEXT)\n \t$(BUILDGOX)\n-debug/proc.gox: debug/libproc.a\n+debug/proc.gox: debug/libproc.$(OBJEXT)\n \t$(BUILDGOX)\n \n-encoding/ascii85.gox: encoding/libascii85.a\n+encoding/ascii85.gox: encoding/libascii85.$(OBJEXT)\n \t$(BUILDGOX)\n-encoding/base32.gox: encoding/libbase32.a\n+encoding/base32.gox: encoding/libbase32.$(OBJEXT)\n \t$(BUILDGOX)\n-encoding/base64.gox: encoding/libbase64.a\n+encoding/base64.gox: encoding/libbase64.$(OBJEXT)\n \t$(BUILDGOX)\n-encoding/binary.gox: encoding/libbinary.a\n+encoding/binary.gox: encoding/libbinary.$(OBJEXT)\n \t$(BUILDGOX)\n-encoding/git85.gox: encoding/libgit85.a\n+encoding/git85.gox: encoding/libgit85.$(OBJEXT)\n \t$(BUILDGOX)\n-encoding/hex.gox: encoding/libhex.a\n+encoding/hex.gox: encoding/libhex.$(OBJEXT)\n \t$(BUILDGOX)\n-encoding/line.gox: encoding/libline.a\n+encoding/line.gox: encoding/libline.$(OBJEXT)\n \t$(BUILDGOX)\n-encoding/pem.gox: encoding/libpem.a\n+encoding/pem.gox: encoding/libpem.$(OBJEXT)\n \t$(BUILDGOX)\n \n-exp/datafmt.gox: exp/libdatafmt.a\n+exp/datafmt.gox: exp/libdatafmt.$(OBJEXT)\n \t$(BUILDGOX)\n-exp/draw.gox: exp/libdraw.a\n+exp/draw.gox: exp/libdraw.$(OBJEXT)\n \t$(BUILDGOX)\n-exp/eval.gox: exp/libeval.a\n+exp/eval.gox: exp/libeval.$(OBJEXT)\n \t$(BUILDGOX)\n \n-go/ast.gox: go/libast.a\n+go/ast.gox: go/libast.$(OBJEXT)\n \t$(BUILDGOX)\n-go/doc.gox: go/libdoc.a\n+go/doc.gox: go/libdoc.$(OBJEXT)\n \t$(BUILDGOX)\n-go/parser.gox: go/libparser.a\n+go/parser.gox: go/libparser.$(OBJEXT)\n \t$(BUILDGOX)\n-go/printer.gox: go/libprinter.a\n+go/printer.gox: go/libprinter.$(OBJEXT)\n \t$(BUILDGOX)\n-go/scanner.gox: go/libscanner.a\n+go/scanner.gox: go/libscanner.$(OBJEXT)\n \t$(BUILDGOX)\n-go/token.gox: go/libtoken.a\n+go/token.gox: go/libtoken.$(OBJEXT)\n \t$(BUILDGOX)\n-go/typechecker.gox: go/libtypechecker.a\n+go/typechecker.gox: go/libtypechecker.$(OBJEXT)\n \t$(BUILDGOX)\n \n-hash/adler32.gox: hash/libadler32.a\n+hash/adler32.gox: hash/libadler32.$(OBJEXT)\n \t$(BUILDGOX)\n-hash/crc32.gox: hash/libcrc32.a\n+hash/crc32.gox: hash/libcrc32.$(OBJEXT)\n \t$(BUILDGOX)\n-hash/crc64.gox: hash/libcrc64.a\n+hash/crc64.gox: hash/libcrc64.$(OBJEXT)\n \t$(BUILDGOX)\n \n-http/pprof.gox: http/libpprof.a\n+http/pprof.gox: http/libpprof.$(OBJEXT)\n \t$(BUILDGOX)\n \n-image/jpeg.gox: image/libjpeg.a\n+image/jpeg.gox: image/libjpeg.$(OBJEXT)\n \t$(BUILDGOX)\n-image/png.gox: image/libpng.a\n+image/png.gox: image/libpng.$(OBJEXT)\n \t$(BUILDGOX)\n \n-index/suffixarray.gox: index/libsuffixarray.a\n+index/suffixarray.gox: index/libsuffixarray.$(OBJEXT)\n \t$(BUILDGOX)\n \n-io/ioutil.gox: io/libioutil.a\n+io/ioutil.gox: io/libioutil.$(OBJEXT)\n \t$(BUILDGOX)\n \n-mime/multipart.gox: mime/libmultipart.a\n+mime/multipart.gox: mime/libmultipart.$(OBJEXT)\n \t$(BUILDGOX)\n \n-net/dict.gox: net/libdict.a\n+net/dict.gox: net/libdict.$(OBJEXT)\n \t$(BUILDGOX)\n-net/textproto.gox: net/libtextproto.a\n+net/textproto.gox: net/libtextproto.$(OBJEXT)\n \t$(BUILDGOX)\n \n-os/inotify.gox: os/libinotify.a\n+os/inotify.gox: os/libinotify.$(OBJEXT)\n \t$(BUILDGOX)\n-os/signal.gox: os/libsignal.a\n+os/signal.gox: os/libsignal.$(OBJEXT)\n \t$(BUILDGOX)\n \n-rpc/jsonrpc.gox: rpc/libjsonrpc.a\n+rpc/jsonrpc.gox: rpc/libjsonrpc.$(OBJEXT)\n \t$(BUILDGOX)\n \n-runtime/debug.gox: runtime/libdebug.a\n+runtime/debug.gox: runtime/libdebug.$(OBJEXT)\n \t$(BUILDGOX)\n-runtime/pprof.gox: runtime/libpprof.a\n+runtime/pprof.gox: runtime/libpprof.$(OBJEXT)\n \t$(BUILDGOX)\n \n-testing/iotest.gox: testing/libiotest.a\n+testing/iotest.gox: testing/libiotest.$(OBJEXT)\n \t$(BUILDGOX)\n-testing/quick.gox: testing/libquick.a\n+testing/quick.gox: testing/libquick.$(OBJEXT)\n \t$(BUILDGOX)\n-testing/script.gox: testing/libscript.a\n+testing/script.gox: testing/libscript.$(OBJEXT)\n \t$(BUILDGOX)\n \n check-recursive: $(TEST_PACKAGES)"}]}