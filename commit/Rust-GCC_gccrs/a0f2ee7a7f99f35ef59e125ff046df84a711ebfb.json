{"sha": "a0f2ee7a7f99f35ef59e125ff046df84a711ebfb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBmMmVlN2E3Zjk5ZjM1ZWY1OWUxMjVmZjA0NmRmODRhNzExZWJmYg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-11-05T20:09:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-27T09:16:00Z"}, "message": "[Ada] Restore access type instead of mode out parameter\n\ngcc/ada/\n\n\t* sem_eval.ads (Compile_Time_Compare): Restore parameter Diff to\n\tbe of an access type.\n\t* sem_eval.adb (Compile_Time_Compare): Adapt body and callers.\n\t* sem_attr.adb (Eval_Attribute): Adapt callers.", "tree": {"sha": "bb608559b50b7284be5fdd64b89426a2349b4ede", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb608559b50b7284be5fdd64b89426a2349b4ede"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0f2ee7a7f99f35ef59e125ff046df84a711ebfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0f2ee7a7f99f35ef59e125ff046df84a711ebfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0f2ee7a7f99f35ef59e125ff046df84a711ebfb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0f2ee7a7f99f35ef59e125ff046df84a711ebfb/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a873cb9978cec9b70b04daa2acb3a9dfb33110d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a873cb9978cec9b70b04daa2acb3a9dfb33110d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a873cb9978cec9b70b04daa2acb3a9dfb33110d2"}], "stats": {"total": 48, "additions": 24, "deletions": 24}, "files": [{"sha": "18b4eeab27e574f90d9f70a50317d5cdeaf88530", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0f2ee7a7f99f35ef59e125ff046df84a711ebfb/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0f2ee7a7f99f35ef59e125ff046df84a711ebfb/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=a0f2ee7a7f99f35ef59e125ff046df84a711ebfb", "patch": "@@ -9138,12 +9138,12 @@ package body Sem_Attr is\n          --  comparable, and we can figure out the difference between them.\n \n          declare\n-            Diff : Uint;\n+            Diff : aliased Uint;\n \n          begin\n             case\n               Compile_Time_Compare\n-                (Lo_Bound, Hi_Bound, Diff, Assume_Valid => False)\n+                (Lo_Bound, Hi_Bound, Diff'Access, Assume_Valid => False)\n             is\n                when EQ =>\n                   Fold_Uint (N, Uint_1, Static);\n@@ -9631,7 +9631,7 @@ package body Sem_Attr is\n       ------------------\n \n       when Attribute_Range_Length => Range_Length : declare\n-         Diff : Uint;\n+         Diff : aliased Uint;\n \n       begin\n          Set_Bounds;\n@@ -9651,7 +9651,7 @@ package body Sem_Attr is\n          --  comparable, and we can figure out the difference between them.\n \n          case Compile_Time_Compare\n-                (Lo_Bound, Hi_Bound, Diff, Assume_Valid => False)\n+                (Lo_Bound, Hi_Bound, Diff'Access, Assume_Valid => False)\n          is\n             when EQ =>\n                Fold_Uint (N, Uint_1, Static);"}, {"sha": "c54c49ac9a8919a29c74d0be03314ff98da3668c", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0f2ee7a7f99f35ef59e125ff046df84a711ebfb/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0f2ee7a7f99f35ef59e125ff046df84a711ebfb/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=a0f2ee7a7f99f35ef59e125ff046df84a711ebfb", "patch": "@@ -864,21 +864,21 @@ package body Sem_Eval is\n      (L, R         : Node_Id;\n       Assume_Valid : Boolean) return Compare_Result\n    is\n-      Discard : Uint;\n+      Discard : aliased Uint;\n    begin\n-      return Compile_Time_Compare (L, R, Discard, Assume_Valid);\n+      return Compile_Time_Compare (L, R, Discard'Access, Assume_Valid);\n    end Compile_Time_Compare;\n \n    function Compile_Time_Compare\n      (L, R         : Node_Id;\n-      Diff         : out Uint;\n+      Diff         : access Uint;\n       Assume_Valid : Boolean;\n       Rec          : Boolean := False) return Compare_Result\n    is\n       Ltyp : Entity_Id := Etype (L);\n       Rtyp : Entity_Id := Etype (R);\n \n-      Discard : Uint;\n+      Discard : aliased Uint;\n \n       procedure Compare_Decompose\n         (N : Node_Id;\n@@ -1197,7 +1197,7 @@ package body Sem_Eval is\n    --  Start of processing for Compile_Time_Compare\n \n    begin\n-      Diff := No_Uint;\n+      Diff.all := No_Uint;\n \n       --  In preanalysis mode, always return Unknown unless the expression\n       --  is static. It is too early to be thinking we know the result of a\n@@ -1354,12 +1354,12 @@ package body Sem_Eval is\n                Hi : constant Uint := Expr_Value (R);\n             begin\n                if Lo < Hi then\n-                  Diff := Hi - Lo;\n+                  Diff.all := Hi - Lo;\n                   return LT;\n                elsif Lo = Hi then\n                   return EQ;\n                else\n-                  Diff := Lo - Hi;\n+                  Diff.all := Lo - Hi;\n                   return GT;\n                end if;\n             end;\n@@ -1463,10 +1463,10 @@ package body Sem_Eval is\n                  and then not Is_Modular_Integer_Type (Rtyp)\n                then\n                   if Loffs < Roffs then\n-                     Diff := Roffs - Loffs;\n+                     Diff.all := Roffs - Loffs;\n                      return LT;\n                   else\n-                     Diff := Loffs - Roffs;\n+                     Diff.all := Loffs - Roffs;\n                      return GT;\n                   end if;\n                end if;\n@@ -1492,14 +1492,14 @@ package body Sem_Eval is\n \n                if LHi < RLo then\n                   if Single and Assume_Valid then\n-                     Diff := RLo - LLo;\n+                     Diff.all := RLo - LLo;\n                   end if;\n \n                   return LT;\n \n                elsif RHi < LLo then\n                   if Single and Assume_Valid then\n-                     Diff := LLo - RLo;\n+                     Diff.all := LLo - RLo;\n                   end if;\n \n                   return GT;\n@@ -1562,7 +1562,7 @@ package body Sem_Eval is\n \n             if not Is_Generic_Type (Rtyp) then\n                case Compile_Time_Compare (L, Type_Low_Bound (Rtyp),\n-                                          Discard,\n+                                          Discard'Access,\n                                           Assume_Valid, Rec => True)\n                is\n                   when LT => return LT;\n@@ -1572,7 +1572,7 @@ package body Sem_Eval is\n                end case;\n \n                case Compile_Time_Compare (L, Type_High_Bound (Rtyp),\n-                                          Discard,\n+                                          Discard'Access,\n                                           Assume_Valid, Rec => True)\n                is\n                   when GT => return GT;\n@@ -1584,7 +1584,7 @@ package body Sem_Eval is\n \n             if not Is_Generic_Type (Ltyp) then\n                case Compile_Time_Compare (Type_Low_Bound (Ltyp), R,\n-                                          Discard,\n+                                          Discard'Access,\n                                           Assume_Valid, Rec => True)\n                is\n                   when GT => return GT;\n@@ -1594,7 +1594,7 @@ package body Sem_Eval is\n                end case;\n \n                case Compile_Time_Compare (Type_High_Bound (Ltyp), R,\n-                                          Discard,\n+                                          Discard'Access,\n                                           Assume_Valid, Rec => True)\n                is\n                   when LT => return LT;"}, {"sha": "76e4bdf5d6557fc5c9dcc79c20a084d6af3915c8", "filename": "gcc/ada/sem_eval.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0f2ee7a7f99f35ef59e125ff046df84a711ebfb/gcc%2Fada%2Fsem_eval.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0f2ee7a7f99f35ef59e125ff046df84a711ebfb/gcc%2Fada%2Fsem_eval.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.ads?ref=a0f2ee7a7f99f35ef59e125ff046df84a711ebfb", "patch": "@@ -194,16 +194,16 @@ package Sem_Eval is\n \n    function Compile_Time_Compare\n      (L, R         : Node_Id;\n-      Diff         : out Uint;\n+      Diff         : access Uint;\n       Assume_Valid : Boolean;\n       Rec          : Boolean := False) return Compare_Result;\n    --  This version of Compile_Time_Compare returns extra information if the\n    --  result is GT or LT. In these cases, if the magnitude of the difference\n    --  can be determined at compile time, this (positive) magnitude is returned\n-   --  in Diff. If the magnitude of the difference cannot be determined then\n-   --  Diff contains No_Uint on return. Rec is a parameter that is set True for\n-   --  a recursive call from within Compile_Time_Compare to avoid some infinite\n-   --  recursion cases. It should never be set by a client.\n+   --  in Diff.all. If the magnitude of the difference cannot be determined\n+   --  then Diff.all contains No_Uint on return. Rec is a parameter that is set\n+   --  True for a recursive call from within Compile_Time_Compare to avoid some\n+   --  infinite recursion cases. It should never be set by a client.\n \n    function Compile_Time_Known_Bounds (T : Entity_Id) return Boolean;\n    --  If T is an array whose index bounds are all known at compile time, then"}]}